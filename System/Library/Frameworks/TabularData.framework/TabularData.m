unint64_t sub_220808A80(unsigned __int8 **a1)
{
  unsigned __int8 *v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v1 = *a1;
  v2 = *(*a1)++;
  v3 = v2 >> 1;
  if (v2)
  {
    v4 = v1[1];
    *a1 = v1 + 2;
    v3 = (v2 >> 2) | (v4 << 6);
    if ((v2 & 3) != 1)
    {
      v5 = v1[2];
      *a1 = v1 + 3;
      v3 = (v3 >> 1) | (v5 << 13);
      if ((v2 & 7) != 3)
      {
        v6 = v1[3];
        *a1 = v1 + 4;
        v3 = (v3 >> 1) | (v6 << 20);
        if ((v2 & 0xF) != 7)
        {
          v7 = v1[4];
          *a1 = v1 + 5;
          v3 = (v3 >> 1) | (v7 << 27);
          if ((v2 & 0x1F) != 0xF)
          {
            v8 = v1[5];
            *a1 = v1 + 6;
            v3 = (v3 >> 1) | (v8 << 34);
            if ((v2 & 0x3F) != 0x1F)
            {
              v9 = v1[6];
              *a1 = v1 + 7;
              v3 = (v3 >> 1) | (v9 << 41);
              if ((v2 & 0x7F) != 0x3F)
              {
                v10 = (v3 >> 1) | ((unint64_t)v1[7] << 48);
                *a1 = v1 + 9;
                return v10 | ((unint64_t)v1[8] << 56);
              }
            }
          }
        }
      }
    }
  }
  return v3;
}

char *sub_220808B7C(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = a2;
  if (a2 >= 0) {
    uint64_t v7 = a2;
  }
  else {
    uint64_t v7 = a2 + 7;
  }
  unint64_t v8 = a2 - (v7 & 0xFFFFFFFFFFFFFFF8);
  v9 = sub_22081B3E0(0, a2 & ~(a2 >> 63), 0, MEMORY[0x263F8EE78]);
  v11 = v9;
  if ((uint64_t)v8 < 1) {
    goto LABEL_25;
  }
  unint64_t v12 = *(unsigned __int8 *)(*a1)++;
  unint64_t v3 = v12 >> (-(char)v8 & 7);
  unint64_t v4 = *((void *)v9 + 2);
  unint64_t v10 = *((void *)v9 + 3);
  unint64_t v2 = v4 + 1;
  if (v4 >= v10 >> 1) {
    goto LABEL_50;
  }
  while (1)
  {
    unint64_t v10 = v3 & 1;
    *((void *)v11 + 2) = v2;
    *(void *)&v11[8 * v4 + 32] = v10;
    if (v8 != 1)
    {
      unint64_t v13 = *((void *)v11 + 3);
      unint64_t v14 = v4 + 2;
      if (v2 >= v13 >> 1) {
        v11 = sub_22081B3E0((char *)(v13 > 1), v4 + 2, 1, v11);
      }
      unint64_t v10 = (v3 >> 1) & 1;
      *((void *)v11 + 2) = v14;
      *(void *)&v11[8 * v2 + 32] = v10;
      if (v8 != 2)
      {
        unint64_t v15 = *((void *)v11 + 3);
        unint64_t v2 = v4 + 3;
        if (v14 >= v15 >> 1) {
          v11 = sub_22081B3E0((char *)(v15 > 1), v4 + 3, 1, v11);
        }
        unint64_t v10 = (v3 >> 2) & 1;
        *((void *)v11 + 2) = v2;
        *(void *)&v11[8 * v14 + 32] = v10;
        if (v8 != 3)
        {
          unint64_t v16 = *((void *)v11 + 3);
          unint64_t v17 = v4 + 4;
          if (v2 >= v16 >> 1) {
            v11 = sub_22081B3E0((char *)(v16 > 1), v4 + 4, 1, v11);
          }
          unint64_t v10 = (v3 >> 3) & 1;
          *((void *)v11 + 2) = v17;
          *(void *)&v11[8 * v2 + 32] = v10;
          if (v8 != 4)
          {
            unint64_t v18 = *((void *)v11 + 3);
            unint64_t v2 = v4 + 5;
            if (v17 >= v18 >> 1) {
              v11 = sub_22081B3E0((char *)(v18 > 1), v4 + 5, 1, v11);
            }
            unint64_t v10 = (v3 >> 4) & 1;
            *((void *)v11 + 2) = v2;
            *(void *)&v11[8 * v17 + 32] = v10;
            if (v8 != 5)
            {
              unint64_t v19 = *((void *)v11 + 3);
              unint64_t v20 = v4 + 6;
              if (v2 >= v19 >> 1) {
                v11 = sub_22081B3E0((char *)(v19 > 1), v4 + 6, 1, v11);
              }
              unint64_t v10 = (v3 >> 5) & 1;
              *((void *)v11 + 2) = v20;
              *(void *)&v11[8 * v2 + 32] = v10;
              if (v8 != 6)
              {
                unint64_t v21 = *((void *)v11 + 3);
                unint64_t v2 = v4 + 7;
                if (v20 >= v21 >> 1) {
                  v11 = sub_22081B3E0((char *)(v21 > 1), v4 + 7, 1, v11);
                }
                unint64_t v10 = (v3 >> 6) & 1;
                *((void *)v11 + 2) = v2;
                *(void *)&v11[8 * v20 + 32] = v10;
              }
            }
          }
        }
      }
    }
LABEL_25:
    if (v5 >= -7) {
      break;
    }
LABEL_49:
    __break(1u);
LABEL_50:
    v11 = sub_22081B3E0((char *)(v10 > 1), v2, 1, v11);
  }
  unint64_t v10 = v5 + 7;
  if ((unint64_t)(v5 + 7) >= 0xF)
  {
    uint64_t v22 = v7 >> 3;
    uint64_t v7 = *a1;
    while (v22)
    {
      unint64_t v8 = *(unsigned __int8 *)v7;
      unint64_t v24 = *((void *)v11 + 2);
      unint64_t v23 = *((void *)v11 + 3);
      int64_t v25 = v23 >> 1;
      unint64_t v26 = v24 + 1;
      if (v23 >> 1 <= v24)
      {
        v11 = sub_22081B3E0((char *)(v23 > 1), v24 + 1, 1, v11);
        unint64_t v23 = *((void *)v11 + 3);
        int64_t v25 = v23 >> 1;
      }
      *((void *)v11 + 2) = v26;
      *(void *)&v11[8 * v24 + 32] = v8 & 1;
      int64_t v27 = v24 + 2;
      if (v25 < v27) {
        v11 = sub_22081B3E0((char *)(v23 > 1), v27, 1, v11);
      }
      *((void *)v11 + 2) = v27;
      *(void *)&v11[8 * v26 + 32] = (v8 >> 1) & 1;
      unint64_t v29 = *((void *)v11 + 2);
      unint64_t v28 = *((void *)v11 + 3);
      int64_t v30 = v28 >> 1;
      unint64_t v31 = v29 + 1;
      if (v28 >> 1 <= v29)
      {
        v11 = sub_22081B3E0((char *)(v28 > 1), v29 + 1, 1, v11);
        unint64_t v28 = *((void *)v11 + 3);
        int64_t v30 = v28 >> 1;
      }
      *((void *)v11 + 2) = v31;
      *(void *)&v11[8 * v29 + 32] = (v8 >> 2) & 1;
      int64_t v32 = v29 + 2;
      if (v30 < v32) {
        v11 = sub_22081B3E0((char *)(v28 > 1), v32, 1, v11);
      }
      *((void *)v11 + 2) = v32;
      *(void *)&v11[8 * v31 + 32] = (v8 >> 3) & 1;
      unint64_t v34 = *((void *)v11 + 2);
      unint64_t v33 = *((void *)v11 + 3);
      int64_t v35 = v33 >> 1;
      unint64_t v36 = v34 + 1;
      if (v33 >> 1 <= v34)
      {
        v11 = sub_22081B3E0((char *)(v33 > 1), v34 + 1, 1, v11);
        unint64_t v33 = *((void *)v11 + 3);
        int64_t v35 = v33 >> 1;
      }
      *((void *)v11 + 2) = v36;
      *(void *)&v11[8 * v34 + 32] = (v8 >> 4) & 1;
      int64_t v37 = v34 + 2;
      if (v35 < v37) {
        v11 = sub_22081B3E0((char *)(v33 > 1), v37, 1, v11);
      }
      *((void *)v11 + 2) = v37;
      *(void *)&v11[8 * v36 + 32] = (v8 >> 5) & 1;
      unint64_t v39 = *((void *)v11 + 2);
      unint64_t v38 = *((void *)v11 + 3);
      int64_t v40 = v38 >> 1;
      uint64_t v5 = v39 + 1;
      if (v38 >> 1 <= v39)
      {
        v11 = sub_22081B3E0((char *)(v38 > 1), v39 + 1, 1, v11);
        unint64_t v38 = *((void *)v11 + 3);
        int64_t v40 = v38 >> 1;
      }
      *((void *)v11 + 2) = v5;
      *(void *)&v11[8 * v39 + 32] = (v8 >> 6) & 1;
      unint64_t v2 = v39 + 2;
      if (v40 < (uint64_t)v2) {
        v11 = sub_22081B3E0((char *)(v38 > 1), v2, 1, v11);
      }
      ++v7;
      unint64_t v10 = v8 >> 7;
      *((void *)v11 + 2) = v2;
      *(void *)&v11[8 * v5 + 32] = v10;
      if (!--v22)
      {
        *a1 = v7;
        return v11;
      }
    }
    __break(1u);
    goto LABEL_49;
  }
  return v11;
}

char *sub_220809024(unsigned __int8 **a1, uint64_t a2)
{
  if (a2 >= 0) {
    uint64_t v7 = a2;
  }
  else {
    uint64_t v7 = a2 + 3;
  }
  uint64_t v8 = a2 - (v7 & 0xFFFFFFFFFFFFFFFCLL);
  v9 = sub_22081B3E0(0, a2 & ~(a2 >> 63), 0, MEMORY[0x263F8EE78]);
  v11 = v9;
  if (v8 < 1) {
    goto LABEL_13;
  }
  unint64_t v12 = *(*a1)++;
  unint64_t v3 = v12 >> (2 * ((3 * v8) & 3));
  unint64_t v4 = *((void *)v9 + 2);
  unint64_t v10 = *((void *)v9 + 3);
  unint64_t v2 = v4 + 1;
  if (v4 >= v10 >> 1) {
    goto LABEL_28;
  }
  while (1)
  {
    unint64_t v10 = v3 & 3;
    *((void *)v11 + 2) = v2;
    *(void *)&v11[8 * v4 + 32] = v10;
    if (v8 != 1)
    {
      unint64_t v13 = *((void *)v11 + 3);
      unint64_t v14 = v4 + 2;
      if (v2 >= v13 >> 1) {
        v11 = sub_22081B3E0((char *)(v13 > 1), v4 + 2, 1, v11);
      }
      unint64_t v10 = (v3 >> 2) & 3;
      *((void *)v11 + 2) = v14;
      *(void *)&v11[8 * v2 + 32] = v10;
      if (v8 != 2)
      {
        unint64_t v15 = *((void *)v11 + 3);
        unint64_t v2 = v4 + 3;
        if (v14 >= v15 >> 1) {
          v11 = sub_22081B3E0((char *)(v15 > 1), v4 + 3, 1, v11);
        }
        unint64_t v10 = (v3 >> 4) & 3;
        *((void *)v11 + 2) = v2;
        *(void *)&v11[8 * v14 + 32] = v10;
      }
    }
LABEL_13:
    if (a2 >= -3) {
      break;
    }
    __break(1u);
LABEL_28:
    v11 = sub_22081B3E0((char *)(v10 > 1), v2, 1, v11);
  }
  if ((unint64_t)(a2 + 3) >= 7)
  {
    uint64_t v16 = v7 >> 2;
    unint64_t v17 = *a1;
    do
    {
      unint64_t v18 = *v17;
      unint64_t v20 = *((void *)v11 + 2);
      unint64_t v19 = *((void *)v11 + 3);
      int64_t v21 = v19 >> 1;
      unint64_t v22 = v20 + 1;
      if (v19 >> 1 <= v20)
      {
        v11 = sub_22081B3E0((char *)(v19 > 1), v20 + 1, 1, v11);
        unint64_t v19 = *((void *)v11 + 3);
        int64_t v21 = v19 >> 1;
      }
      *((void *)v11 + 2) = v22;
      *(void *)&v11[8 * v20 + 32] = v18 & 3;
      int64_t v23 = v20 + 2;
      if (v21 < v23) {
        v11 = sub_22081B3E0((char *)(v19 > 1), v23, 1, v11);
      }
      *((void *)v11 + 2) = v23;
      *(void *)&v11[8 * v22 + 32] = (v18 >> 2) & 3;
      unint64_t v25 = *((void *)v11 + 2);
      unint64_t v24 = *((void *)v11 + 3);
      int64_t v26 = v24 >> 1;
      unint64_t v27 = v25 + 1;
      if (v24 >> 1 <= v25)
      {
        v11 = sub_22081B3E0((char *)(v24 > 1), v25 + 1, 1, v11);
        unint64_t v24 = *((void *)v11 + 3);
        int64_t v26 = v24 >> 1;
      }
      *((void *)v11 + 2) = v27;
      *(void *)&v11[8 * v25 + 32] = (v18 >> 4) & 3;
      int64_t v28 = v25 + 2;
      if (v26 < v28) {
        v11 = sub_22081B3E0((char *)(v24 > 1), v28, 1, v11);
      }
      ++v17;
      *((void *)v11 + 2) = v28;
      *(void *)&v11[8 * v27 + 32] = v18 >> 6;
      --v16;
    }
    while (v16);
    *a1 = v17;
  }
  return v11;
}

char *sub_2208092B4(unsigned __int8 **a1, uint64_t a2)
{
  if (a2 >= 0) {
    uint64_t v7 = a2;
  }
  else {
    uint64_t v7 = a2 + 1;
  }
  uint64_t v8 = sub_22081B3E0(0, a2 & ~(a2 >> 63), 0, MEMORY[0x263F8EE78]);
  unint64_t v10 = v8;
  if ((a2 & 1) == 0) {
    goto LABEL_7;
  }
  unint64_t v3 = *(*a1)++;
  unint64_t v4 = *((void *)v8 + 2);
  unint64_t v9 = *((void *)v8 + 3);
  int64_t v2 = v4 + 1;
  if (v4 >= v9 >> 1) {
    goto LABEL_18;
  }
  while (1)
  {
    unint64_t v9 = v3 >> 4;
    *((void *)v10 + 2) = v2;
    *(void *)&v10[8 * v4 + 32] = v3 >> 4;
LABEL_7:
    if (a2 >= -1) {
      break;
    }
    __break(1u);
LABEL_18:
    unint64_t v10 = sub_22081B3E0((char *)(v9 > 1), v2, 1, v10);
  }
  if ((unint64_t)(a2 + 1) >= 3)
  {
    uint64_t v11 = v7 >> 1;
    unint64_t v12 = *a1;
    do
    {
      unsigned int v13 = *v12;
      unint64_t v15 = *((void *)v10 + 2);
      unint64_t v14 = *((void *)v10 + 3);
      int64_t v16 = v14 >> 1;
      unint64_t v17 = v15 + 1;
      if (v14 >> 1 <= v15)
      {
        unint64_t v10 = sub_22081B3E0((char *)(v14 > 1), v15 + 1, 1, v10);
        unint64_t v14 = *((void *)v10 + 3);
        int64_t v16 = v14 >> 1;
      }
      *((void *)v10 + 2) = v17;
      *(void *)&v10[8 * v15 + 32] = v13 & 0xF;
      int64_t v18 = v15 + 2;
      if (v16 < v18) {
        unint64_t v10 = sub_22081B3E0((char *)(v14 > 1), v18, 1, v10);
      }
      ++v12;
      *((void *)v10 + 2) = v18;
      *(void *)&v10[8 * v17 + 32] = v13 >> 4;
      --v11;
    }
    while (v11);
    *a1 = v12;
  }
  return v10;
}

char *sub_220809418(unsigned __int8 **a1, uint64_t a2)
{
  uint64_t v2 = a2;
  result = sub_22081B3E0(0, a2 & ~(a2 >> 63), 0, MEMORY[0x263F8EE78]);
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v5 = result;
    if (v2)
    {
      v6 = *a1;
      unint64_t v7 = *((void *)result + 2);
      do
      {
        uint64_t v8 = *v6;
        unint64_t v9 = *((void *)v5 + 3);
        if (v7 >= v9 >> 1) {
          uint64_t v5 = sub_22081B3E0((char *)(v9 > 1), v7 + 1, 1, v5);
        }
        ++v6;
        *((void *)v5 + 2) = v7 + 1;
        *(void *)&v5[8 * v7++ + 32] = v8;
        --v2;
      }
      while (v2);
      *a1 = v6;
    }
    return v5;
  }
  return result;
}

char *sub_2208094D4(unsigned __int16 **a1, uint64_t a2)
{
  uint64_t v2 = a2;
  result = sub_22081B3E0(0, a2 & ~(a2 >> 63), 0, MEMORY[0x263F8EE78]);
  uint64_t v5 = result;
  v6 = *a1;
  if (*a1)
  {
    if ((v2 & 0x8000000000000000) == 0)
    {
      if (v2)
      {
        unint64_t v10 = *((void *)result + 2);
        do
        {
          uint64_t v11 = *v6;
          unint64_t v12 = *((void *)v5 + 3);
          if (v10 >= v12 >> 1) {
            uint64_t v5 = sub_22081B3E0((char *)(v12 > 1), v10 + 1, 1, v5);
          }
          ++v6;
          *((void *)v5 + 2) = v10 + 1;
          *(void *)&v5[8 * v10++ + 32] = v11;
          --v2;
        }
        while (v2);
        goto LABEL_15;
      }
      return v5;
    }
  }
  else
  {
    if ((v2 & 0x8000000000000000) == 0)
    {
      if (v2)
      {
        unint64_t v7 = *((void *)result + 2);
        do
        {
          uint64_t v8 = *v6;
          unint64_t v9 = *((void *)v5 + 3);
          if (v7 >= v9 >> 1) {
            uint64_t v5 = sub_22081B3E0((char *)(v9 > 1), v7 + 1, 1, v5);
          }
          ++v6;
          *((void *)v5 + 2) = v7 + 1;
          *(void *)&v5[8 * v7++ + 32] = v8;
          --v2;
        }
        while (v2);
LABEL_15:
        *a1 = v6;
        return v5;
      }
      return v5;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

char *sub_2208095F4(unint64_t *a1, uint64_t a2)
{
  uint64_t v2 = a2;
  result = sub_22081B3E0(0, a2 & ~(a2 >> 63), 0, MEMORY[0x263F8EE78]);
  uint64_t v5 = result;
  v6 = (unsigned int *)*a1;
  if ((*a1 & 3) != 0)
  {
    if ((v2 & 0x8000000000000000) == 0)
    {
      if (v2)
      {
        unint64_t v7 = *((void *)result + 2);
        do
        {
          uint64_t v8 = *v6;
          unint64_t v9 = *((void *)v5 + 3);
          if (v7 >= v9 >> 1) {
            uint64_t v5 = sub_22081B3E0((char *)(v9 > 1), v7 + 1, 1, v5);
          }
          ++v6;
          *((void *)v5 + 2) = v7 + 1;
          *(void *)&v5[8 * v7++ + 32] = v8;
          --v2;
        }
        while (v2);
LABEL_15:
        *a1 = (unint64_t)v6;
        return v5;
      }
      return v5;
    }
    __break(1u);
  }
  else if ((v2 & 0x8000000000000000) == 0)
  {
    if (v2)
    {
      unint64_t v10 = *((void *)result + 2);
      do
      {
        uint64_t v11 = *v6;
        unint64_t v12 = *((void *)v5 + 3);
        if (v10 >= v12 >> 1) {
          uint64_t v5 = sub_22081B3E0((char *)(v12 > 1), v10 + 1, 1, v5);
        }
        ++v6;
        *((void *)v5 + 2) = v10 + 1;
        *(void *)&v5[8 * v10++ + 32] = v11;
        --v2;
      }
      while (v2);
      goto LABEL_15;
    }
    return v5;
  }
  __break(1u);
  return result;
}

char *sub_220809718(void **a1, uint64_t a2)
{
  uint64_t v2 = a2;
  result = sub_22081B3E0(0, a2 & ~(a2 >> 63), 0, MEMORY[0x263F8EE78]);
  uint64_t v5 = result;
  v6 = *a1;
  if (((unint64_t)*a1 & 7) != 0)
  {
    if ((v2 & 0x8000000000000000) == 0)
    {
      if (v2)
      {
        unint64_t v7 = *((void *)result + 2);
        do
        {
          uint64_t v8 = *v6;
          unint64_t v9 = *((void *)v5 + 3);
          if (v7 >= v9 >> 1) {
            uint64_t v5 = sub_22081B3E0((char *)(v9 > 1), v7 + 1, 1, v5);
          }
          ++v6;
          *((void *)v5 + 2) = v7 + 1;
          *(void *)&v5[8 * v7++ + 32] = v8;
          --v2;
        }
        while (v2);
LABEL_15:
        *a1 = v6;
        return v5;
      }
      return v5;
    }
    __break(1u);
  }
  else if ((v2 & 0x8000000000000000) == 0)
  {
    if (v2)
    {
      unint64_t v10 = *((void *)result + 2);
      do
      {
        uint64_t v11 = *v6;
        unint64_t v12 = *((void *)v5 + 3);
        if (v10 >= v12 >> 1) {
          uint64_t v5 = sub_22081B3E0((char *)(v12 > 1), v10 + 1, 1, v5);
        }
        ++v6;
        *((void *)v5 + 2) = v10 + 1;
        *(void *)&v5[8 * v10++ + 32] = v11;
        --v2;
      }
      while (v2);
      goto LABEL_15;
    }
    return v5;
  }
  __break(1u);
  return result;
}

char *sub_22080983C(unsigned __int8 **a1, uint64_t a2)
{
  uint64_t v5 = (char *)MEMORY[0x263F8EE78];
  if (a2)
  {
    unint64_t v6 = a2;
    if (a2 > 128)
    {
      sub_220809E4C();
      swift_allocError();
      *(void *)uint64_t v7 = 0xD000000000000029;
      *(void *)(v7 + 8) = 0x800000022093FAC0;
      *(unsigned char *)(v7 + 16) = 0;
      swift_willThrow();
      return v5;
    }
    unint64_t v10 = (unint64_t)(*a1 + 1);
    unint64_t v9 = **a1;
    *a1 = (unsigned __int8 *)v10;
    int v11 = v9 & 3;
    if (v11 == 3) {
      goto LABEL_61;
    }
    if (v9 > 3)
    {
      uint64_t v4 = 1 << ((v9 >> 2) - 1);
      uint64_t v46 = (uint64_t)v5;
      unint64_t v3 = sub_220808A80(a1);
      if ((v11 - 1) > 1) {
        goto LABEL_12;
      }
      uint64_t v5 = sub_22081B3E0(0, 1, 1, MEMORY[0x263F8EE78]);
      unint64_t v9 = *((void *)v5 + 2);
      unint64_t v2 = *((void *)v5 + 3);
      unint64_t v10 = v9 + 1;
      if (v9 < v2 >> 1) {
        goto LABEL_11;
      }
      goto LABEL_62;
    }
    unint64_t v12 = sub_220808A80(a1);
    if ((v6 & 0x8000000000000000) != 0)
    {
      while (1)
      {
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        unint64_t v45 = v10;
        unint64_t v38 = v5;
        unint64_t v39 = v9;
        int64_t v40 = sub_22081B3E0((char *)(v2 > 1), v10, 1, v38);
        unint64_t v9 = v39;
        unint64_t v10 = v45;
        uint64_t v5 = v40;
LABEL_11:
        *((void *)v5 + 2) = v10;
        *(void *)&v5[8 * v9 + 32] = v3;
        uint64_t v46 = (uint64_t)v5;
LABEL_12:
        switch(v4)
        {
          case 1:
            uint64_t v17 = *((void *)v5 + 2);
            if (__OFSUB__(v6, v17))
            {
              __break(1u);
LABEL_72:
              __break(1u);
LABEL_73:
              __break(1u);
LABEL_74:
              __break(1u);
LABEL_75:
              __break(1u);
LABEL_76:
              __break(1u);
LABEL_77:
              __break(1u);
              JUMPOUT(0x220809D4CLL);
            }
            int64_t v18 = sub_220808B7C((uint64_t *)a1, v6 - v17);
            break;
          case 2:
            uint64_t v24 = *((void *)v5 + 2);
            if (__OFSUB__(v6, v24)) {
              goto LABEL_72;
            }
            int64_t v18 = sub_220809024(a1, v6 - v24);
            break;
          case 4:
            uint64_t v26 = *((void *)v5 + 2);
            if (__OFSUB__(v6, v26)) {
              goto LABEL_73;
            }
            int64_t v18 = sub_2208092B4(a1, v6 - v26);
            break;
          case 8:
            uint64_t v27 = *((void *)v5 + 2);
            if (__OFSUB__(v6, v27)) {
              goto LABEL_74;
            }
            int64_t v18 = sub_220809418(a1, v6 - v27);
            break;
          case 16:
            uint64_t v28 = *((void *)v5 + 2);
            if (__OFSUB__(v6, v28)) {
              goto LABEL_75;
            }
            int64_t v18 = sub_2208094D4((unsigned __int16 **)a1, v6 - v28);
            break;
          case 32:
            uint64_t v29 = *((void *)v5 + 2);
            if (__OFSUB__(v6, v29)) {
              goto LABEL_76;
            }
            int64_t v18 = sub_2208095F4((unint64_t *)a1, v6 - v29);
            break;
          case 64:
            uint64_t v30 = *((void *)v5 + 2);
            if (__OFSUB__(v6, v30)) {
              goto LABEL_77;
            }
            int64_t v18 = sub_220809718((void **)a1, v6 - v30);
            break;
          default:
            sub_22093EEA0();
            swift_bridgeObjectRelease();
            sub_22093F1A0();
            sub_22093E6C0();
            swift_bridgeObjectRelease();
            uint64_t v5 = (char *)0xD00000000000001CLL;
            sub_220809E4C();
            swift_allocError();
            *(void *)uint64_t v25 = 0xD00000000000001CLL;
            *(void *)(v25 + 8) = 0x800000022093FAA0;
            *(unsigned char *)(v25 + 16) = 4;
            swift_willThrow();
            swift_bridgeObjectRelease();
            return v5;
        }
        sub_220844930((uint64_t)v18);
        if (!v11) {
          break;
        }
        if (v11 == 1)
        {
          uint64_t v5 = (char *)v46;
          uint64_t v31 = *(void *)(v46 + 16);
          unint64_t v3 = v31 - 1;
          if (v31 == 1) {
            return v5;
          }
          if (!v31)
          {
            __break(1u);
LABEL_64:
            __break(1u);
LABEL_65:
            uint64_t v5 = sub_22080AB84((uint64_t)v5);
            if (v6 >= 4) {
              goto LABEL_66;
            }
LABEL_47:
            uint64_t v33 = 0;
            goto LABEL_69;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v5 = sub_22080AB84(v46);
          }
          unint64_t v9 = 0;
          while (1)
          {
            unint64_t v10 = *((void *)v5 + 2);
            if (v9 >= v10) {
              break;
            }
            int64_t v32 = &v5[8 * v9];
            unint64_t v2 = *((void *)v32 + 5) + *((void *)v32 + 4);
            *((void *)v32 + 5) = v2;
            if (v3 == ++v9) {
              return v5;
            }
          }
          __break(1u);
        }
        else
        {
          uint64_t v5 = (char *)v46;
          uint64_t v34 = *(void *)(v46 + 16);
          unint64_t v3 = v34 - 1;
          if (v34 == 1) {
            return v5;
          }
          if (!v34) {
            goto LABEL_64;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v5 = sub_22080AB84(v46);
          }
          unint64_t v9 = 0;
          while (1)
          {
            unint64_t v10 = *((void *)v5 + 2);
            if (v9 >= v10) {
              break;
            }
            unint64_t v10 = (unint64_t)&v5[8 * v9];
            uint64_t v35 = *(void *)(v10 + 32);
            uint64_t v36 = -(*(void *)(v10 + 40) & 1) ^ (*(void *)(v10 + 40) >> 1);
            BOOL v37 = __OFADD__(v36, v35);
            unint64_t v2 = v36 + v35;
            if (v37) {
              goto LABEL_59;
            }
            *(void *)(v10 + 40) = v2;
            if (v3 == ++v9) {
              return v5;
            }
          }
        }
        __break(1u);
LABEL_59:
        __break(1u);
      }
      uint64_t v5 = (char *)v46;
      unint64_t v6 = *(void *)(v46 + 16);
      if (!v6) {
        return v5;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        goto LABEL_65;
      }
      if (v6 < 4) {
        goto LABEL_47;
      }
LABEL_66:
      uint64_t v33 = v6 & 0x7FFFFFFFFFFFFFFCLL;
      int64x2_t v41 = vdupq_n_s64(v3);
      v42 = (int64x2_t *)(v5 + 48);
      uint64_t v43 = v6 & 0x7FFFFFFFFFFFFFFCLL;
      do
      {
        int64x2_t v44 = vaddq_s64(*v42, v41);
        v42[-1] = vaddq_s64(v42[-1], v41);
        int64x2_t *v42 = v44;
        v42 += 2;
        v43 -= 4;
      }
      while (v43);
      for (; v6 != v33; *(void *)&v5[8 * v33++ + 32] += v3)
LABEL_69:
        ;
    }
    else
    {
      unint64_t v13 = v12;
      uint64_t v14 = sub_22093E8A0();
      uint64_t v5 = (char *)v14;
      *(void *)(v14 + 16) = v6;
      unint64_t v15 = (unint64_t *)(v14 + 32);
      if (v6 < 4)
      {
        unint64_t v16 = 0;
LABEL_18:
        unint64_t v22 = v6 - v16;
        do
        {
          *v15++ = v13;
          --v22;
        }
        while (v22);
        return v5;
      }
      unint64_t v16 = v6 & 0xFFFFFFFFFFFFFFFCLL;
      v15 += v6 & 0xFFFFFFFFFFFFFFFCLL;
      int64x2_t v19 = vdupq_n_s64(v13);
      unint64_t v20 = (int64x2_t *)(v14 + 48);
      unint64_t v21 = v6 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        v20[-1] = v19;
        *unint64_t v20 = v19;
        v20 += 2;
        v21 -= 4;
      }
      while (v21);
      if (v16 != v6) {
        goto LABEL_18;
      }
    }
  }
  return v5;
}

unint64_t sub_220809E4C()
{
  unint64_t result = qword_267F18580;
  if (!qword_267F18580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F18580);
  }
  return result;
}

uint64_t dispatch thunk of ColumnProtocol.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ColumnProtocol.name.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of ColumnProtocol.name.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of AnyColumnProtocol.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AnyColumnProtocol.name.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of AnyColumnProtocol.name.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of AnyColumnProtocol.count.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of AnyColumnProtocol.wrappedElementType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of AnyColumnProtocol.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of AnyColumnProtocol.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

Swift::Void __swiftcall DataFrame.renameColumn(_:to:)(Swift::String _, Swift::String to)
{
  uint64_t v3 = v2;
  object = to._object;
  uint64_t countAndFlagsBits = to._countAndFlagsBits;
  unint64_t v6 = _._object;
  uint64_t v7 = _._countAndFlagsBits;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v16 = sub_22080BA90(v7, (uint64_t)v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v17 = countAndFlagsBits;
  v8._uint64_t countAndFlagsBits = countAndFlagsBits;
  v8._object = object;
  Swift::Int_optional v19 = DataFrame.indexOfColumn(_:)(v8);
  Swift::Int value = v19.value;
  LOBYTE(countAndFlagsBits) = v19.is_nil;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((countAndFlagsBits & 1) == 0 && value != v16) {
    goto LABEL_10;
  }
  sub_22080A248(v7, (uint64_t)v6, v17, (uint64_t)object);
  swift_bridgeObjectRetain();
  sub_22080AC9C(v7, (uint64_t)v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v18 = *(void *)(v3 + 16);
  *(void *)(v3 + 16) = 0x8000000000000000;
  sub_22080AF54(v16, v17, (uint64_t)object, isUniquelyReferenced_nonNull_native);
  *(void *)(v3 + 16) = v18;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v11 = *(char **)v3;
  swift_bridgeObjectRetain();
  char v12 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)uint64_t v3 = v11;
  if (v12)
  {
    if ((v16 & 0x8000000000000000) == 0) {
      goto LABEL_5;
    }
  }
  else
  {
    int v11 = sub_22080AB34((uint64_t)v11);
    *(void *)uint64_t v3 = v11;
    if ((v16 & 0x8000000000000000) == 0)
    {
LABEL_5:
      if (v16 < *((void *)v11 + 2))
      {
        unint64_t v13 = &v11[40 * v16];
        uint64_t v14 = *((void *)v13 + 7);
        uint64_t v15 = *((void *)v13 + 8);
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v13 + 32), v14);
        (*(void (**)(uint64_t, void *, uint64_t))(*(void *)(v15 + 8) + 16))(v17, object, v14);
        *(void *)uint64_t v3 = v11;
        return;
      }
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_9:
  __break(1u);
LABEL_10:
  sub_22093EEA0();
  sub_22093E6C0();
  sub_22093E6C0();
  sub_22093E6C0();
  sub_22093F090();
  __break(1u);
}

uint64_t sub_22080A248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = a1;
  uint64_t v9 = *(void *)(v4 + 8);
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    swift_bridgeObjectRetain();
    unint64_t v11 = 0;
    char v12 = (void *)(v9 + 40);
    do
    {
      unint64_t v13 = v11 + 1;
      BOOL v14 = *(v12 - 1) == a3 && *v12 == a4;
      if (v14 || (sub_22093F250() & 1) != 0) {
        sub_22081A204(v11, v11 + 1);
      }
      v12 += 4;
      ++v11;
    }
    while (v10 != v13);
    swift_bridgeObjectRelease();
    uint64_t v8 = a1;
  }
  sub_22080F2A8(0, 0, 2);
  sub_22080B6B4(0, 0, 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v15 = swift_bridgeObjectRetain();
  uint64_t v16 = sub_22080B6C8(v15, v8, a2, a3, a4);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v4 + 8) = v16;
  return result;
}

uint64_t DataFrame.replaceColumn(_:with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_22080BA90(a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return sub_22080A474(v6, a3);
}

uint64_t sub_22080A474(unint64_t a1, uint64_t a2)
{
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v4 = v3;
  unint64_t v2 = a1;
  if (*(void *)(*v3 + 16) <= a1)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    uint64_t result = (uint64_t)sub_22080AB34((uint64_t)v3);
    uint64_t v3 = (uint64_t *)result;
    *uint64_t v4 = result;
    goto LABEL_13;
  }
  sub_22080B5B8(*v3 + 40 * a1 + 32, (uint64_t)v41);
  uint64_t v7 = v42;
  uint64_t v6 = v43;
  __swift_project_boxed_opaque_existential_1(v41, v42);
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)(v6 + 8) + 8))(v7);
  uint64_t v10 = v9;
  sub_22080B0D8((uint64_t)v41);
  sub_22080B5B8(a2, (uint64_t)v41);
  sub_22080BF8C(v41);
  uint64_t v12 = v42;
  uint64_t v11 = v43;
  __swift_project_boxed_opaque_existential_1(v41, v42);
  if ((*(uint64_t (**)(uint64_t))(*(void *)(v11 + 8) + 8))(v12) == v8 && v13 == v10)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v15 = sub_22093F250();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
    {
      uint64_t v16 = swift_bridgeObjectRetain();
      uint64_t v17 = sub_22080A808(v16);
      swift_bridgeObjectRelease();
      uint64_t v18 = sub_220831E98(v17);
      swift_bridgeObjectRelease();
      v40[7] = v18;
      sub_220837DF8(v8, v10);
      swift_bridgeObjectRelease();
      sub_220909EF8(v18, 46, 0xE100000000000000, v40);
      uint64_t v20 = v42;
      uint64_t v19 = v43;
      __swift_project_boxed_opaque_existential_1(v41, v42);
      uint64_t v21 = (*(uint64_t (**)(uint64_t))(*(void *)(v19 + 8) + 8))(v20);
      uint64_t v23 = sub_220909CF0(v21, v22);
      uint64_t v25 = v24;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v26 = v42;
      uint64_t v27 = v43;
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v41, v42);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 + 8) + 16))(v23, v25, v26);
      uint64_t v29 = v42;
      uint64_t v28 = v43;
      __swift_project_boxed_opaque_existential_1(v41, v42);
      uint64_t v30 = (*(uint64_t (**)(uint64_t))(*(void *)(v28 + 8) + 8))(v29);
      sub_22080A248(v8, v10, v30, v31);
      swift_bridgeObjectRelease();
      sub_22080AC9C(v8, v10);
      swift_bridgeObjectRelease();
      uint64_t v33 = v42;
      uint64_t v32 = v43;
      __swift_project_boxed_opaque_existential_1(v41, v42);
      uint64_t v34 = (*(uint64_t (**)(uint64_t))(*(void *)(v32 + 8) + 8))(v33);
      uint64_t v36 = v35;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v39 = v4[2];
      v4[2] = 0x8000000000000000;
      sub_22080AF54(v2, v34, v36, isUniquelyReferenced_nonNull_native);
      v4[2] = v39;
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v3 = (uint64_t *)*v4;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v4 = (uint64_t)v3;
  if ((result & 1) == 0) {
    goto LABEL_17;
  }
LABEL_13:
  if (v3[2] <= v2)
  {
    __break(1u);
  }
  else
  {
    sub_22080B658((uint64_t)v41, (uint64_t)&v3[5 * v2 + 4]);
    return sub_22080B0D8((uint64_t)v41);
  }
  return result;
}

uint64_t sub_22080A808(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
    sub_220826C78(0, v1, 0);
    uint64_t v2 = v14;
    uint64_t v4 = (void *)(a1 + 32);
    do
    {
      uint64_t v6 = v4[3];
      uint64_t v5 = v4[4];
      __swift_project_boxed_opaque_existential_1(v4, v6);
      uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)(v5 + 8) + 8))(v6);
      uint64_t v9 = v8;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_220826C78(0, *(void *)(v14 + 16) + 1, 1);
      }
      unint64_t v11 = *(void *)(v14 + 16);
      unint64_t v10 = *(void *)(v14 + 24);
      if (v11 >= v10 >> 1) {
        sub_220826C78((char *)(v10 > 1), v11 + 1, 1);
      }
      *(void *)(v14 + 16) = v11 + 1;
      uint64_t v12 = v14 + 16 * v11;
      *(void *)(v12 + 32) = v7;
      *(void *)(v12 + 40) = v9;
      v4 += 5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t DataFrame.replaceColumn<A>(_:with:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v5 = sub_22080BA90(v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return sub_22080A474(v5, a2);
}

uint64_t DataFrame.replaceColumn<A>(_:with:)(uint64_t a1, uint64_t a2)
{
  type metadata accessor for Column();
  Column.eraseToAnyColumn()((uint64_t)v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_22080BA90(a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080A474(v4, (uint64_t)v6);
  return sub_22080B0D8((uint64_t)v6);
}

uint64_t DataFrame.replaceColumn<A, B>(_:with:)(uint64_t *a1)
{
  uint64_t v1 = a1[1];
  v4[0] = *a1;
  v4[1] = v1;
  type metadata accessor for Column();
  Column.eraseToAnyColumn()((uint64_t)v3);
  DataFrame.replaceColumn<A>(_:with:)(v4, (uint64_t)v3);
  return sub_22080B0D8((uint64_t)v3);
}

char *sub_22080AB34(uint64_t a1)
{
  return sub_22081B5EC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_22080AB48(uint64_t a1)
{
  return sub_22081B600(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void *sub_22080AB5C(void *a1)
{
  return sub_22081B820(0, a1[2], 0, a1);
}

char *sub_22080AB70(uint64_t a1)
{
  return sub_22081B3EC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_22080AB84(uint64_t a1)
{
  return sub_22081B3E0(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void *sub_22080AB98(void *a1)
{
  return sub_22081C7D8(0, a1[2], 0, a1);
}

char *sub_22080ABAC(uint64_t a1)
{
  return sub_22081C7C4(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void *sub_22080ABC0(void *a1)
{
  return sub_22081C908(0, a1[2], 0, a1);
}

char *sub_22080ABD4(uint64_t a1)
{
  return sub_22081C7EC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_22080ABE8(uint64_t a1)
{
  return sub_22081CB70(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void *sub_22080ABFC(void *a1)
{
  return sub_22081CDC8(0, a1[2], 0, a1);
}

size_t sub_22080AC10(void *a1)
{
  return sub_22081CDDC(0, a1[2], 0, a1);
}

void *sub_22080AC24(void *a1)
{
  return sub_22081CFB8(0, a1[2], 0, a1);
}

void *sub_22080AC38(void *a1)
{
  return sub_22081CFCC(0, a1[2], 0, a1);
}

void *sub_22080AC4C(void *a1)
{
  return sub_22081CFE0(0, a1[2], 0, a1);
}

void *sub_22080AC60(void *a1)
{
  return sub_22081CFF4(0, a1[2], 0, a1);
}

void *sub_22080AC74(void *a1)
{
  return sub_22081D130(0, a1[2], 0, a1);
}

void *sub_22080AC88(void *a1)
{
  return sub_22081D144(0, a1[2], 0, a1);
}

uint64_t sub_22080AC9C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_22081D290(a1, a2);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_2208246CC();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_22080AD7C(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_22080AD7C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_22093EE10();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_22093F430();
        swift_bridgeObjectRetain();
        sub_22093E650();
        uint64_t v9 = sub_22093F490();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          char v15 = (void *)(v14 + 8 * v3);
          uint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *char v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *uint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_22080AF54(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_22081D290(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= result && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v18 = *v5;
    if (v16)
    {
LABEL_8:
      *(void *)(v18[7] + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_2208246CC();
    goto LABEL_7;
  }
  sub_22081DBE8(result, a4 & 1);
  uint64_t result = sub_22081D290(a2, a3);
  if ((v16 & 1) != (v19 & 1))
  {
LABEL_15:
    uint64_t result = sub_22093F2F0();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  uint64_t v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_2208220D8(v12, a2, a3, a1, v18);

  return swift_bridgeObjectRetain();
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_22080B0D8(uint64_t a1)
{
  return a1;
}

uint64_t sub_22080B12C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  unint64_t v6 = (void **)v5;
  unint64_t v12 = (void *)*v5;
  unint64_t v14 = sub_22081D290(a3, a4);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a5 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v6;
    if (v18)
    {
LABEL_8:
      BOOL v21 = (uint64_t *)(v20[7] + 16 * v14);
      uint64_t result = swift_bridgeObjectRelease();
      *BOOL v21 = a1;
      v21[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_220825C24();
    goto LABEL_7;
  }
  sub_22081FFF8(v17, a5 & 1);
  uint64_t v23 = sub_22081D290(a3, a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_15:
    uint64_t result = sub_22093F2F0();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  uint64_t v20 = *v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  sub_220822178(v14, a3, a4, a1, a2, v20);

  return swift_bridgeObjectRetain();
}

uint64_t sub_22080B280(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  unint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_22081D5D4(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    BOOL v16 = *v4;
    if (v14)
    {
LABEL_8:
      *(void *)(v16[7] + 8 * v10) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_220825FE0();
    goto LABEL_7;
  }
  sub_22082065C(result, a3 & 1);
  uint64_t result = sub_22081D5D4(a2);
  if ((v14 & 1) != (v17 & 1))
  {
LABEL_15:
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F18588);
    uint64_t result = sub_22093F2F0();
    __break(1u);
    return result;
  }
  unint64_t v10 = result;
  BOOL v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  sub_2208221C8(v10, a2, a1, v16);

  return swift_bridgeObjectRetain();
}

uint64_t sub_22080B3A8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD411B8);
  MEMORY[0x270FA5388](v8);
  unint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)*v3;
  unint64_t v13 = sub_22081D640(a2);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t result = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v19 = *v4;
    if (v17)
    {
LABEL_8:
      *(void *)(v19[7] + 8 * v13) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v18 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_220826184();
    goto LABEL_7;
  }
  sub_2208209EC(result, a3 & 1);
  uint64_t result = sub_22081D640(a2);
  if ((v17 & 1) != (v20 & 1))
  {
LABEL_14:
    uint64_t result = sub_22093F2F0();
    __break(1u);
    return result;
  }
  unint64_t v13 = result;
  uint64_t v19 = *v4;
  if (v17) {
    goto LABEL_8;
  }
LABEL_11:
  sub_22080B550(a2, (uint64_t)v10);
  return sub_220822210(v13, (uint64_t)v10, a1, v19);
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_22080B550(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD411B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22080B5B8(uint64_t a1, uint64_t a2)
{
  return a2;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_22080B658(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_22080B6B4(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_22080B6C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = MEMORY[0x263F8EE78];
  if (v5)
  {
    uint64_t v22 = MEMORY[0x263F8EE78];
    sub_220826CB8(0, v5, 0);
    uint64_t v6 = v22;
    uint64_t v8 = (uint64_t *)(a1 + 56);
    do
    {
      uint64_t v9 = *(v8 - 3);
      uint64_t v10 = *(v8 - 2);
      uint64_t v11 = *(v8 - 1);
      uint64_t v12 = *v8;
      BOOL v13 = v11 == a2 && v12 == a3;
      if (v13 || (sub_22093F250() & 1) != 0)
      {
        uint64_t v11 = a4;
        uint64_t v12 = a5;
      }
      swift_bridgeObjectRetain();
      unint64_t v15 = *(void *)(v22 + 16);
      unint64_t v14 = *(void *)(v22 + 24);
      swift_bridgeObjectRetain();
      if (v15 >= v14 >> 1) {
        sub_220826CB8((void *)(v14 > 1), v15 + 1, 1);
      }
      v8 += 4;
      *(void *)(v22 + 16) = v15 + 1;
      BOOL v16 = (void *)(v22 + 32 * v15);
      v16[4] = v9;
      v16[5] = v10;
      v16[6] = v11;
      v16[7] = v12;
      --v5;
    }
    while (v5);
  }
  return v6;
}

uint64_t sub_22080B7F4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t destroy for SFrame(uint64_t a1)
{
  sub_22080B88C(*(void *)a1, *(void *)(a1 + 8));

  return swift_bridgeObjectRelease();
}

uint64_t sub_22080B88C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t *_s11TabularData6SFrameVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_22080B7F4(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for SFrame(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_22080B7F4(*a2, v5);
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_22080B88C(v6, v7);
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t *assignWithTake for SFrame(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_22080B88C(v4, v5);
  a1[2] = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SFrame(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SFrame(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SFrame()
{
  return &type metadata for SFrame;
}

uint64_t sub_22080BA90(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 16);
  if (*(void *)(v5 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_22081D32C(a1, a2, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2208222BC);
    if (v7)
    {
      uint64_t v8 = *(void *)(*(void *)(v5 + 56) + 8 * v6);
      swift_bridgeObjectRelease();
      return v8;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = swift_bridgeObjectRetain();
  uint64_t v10 = sub_22083217C(v9, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = (void *)sub_22080C214(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v11[2];
  if (v12)
  {
    uint64_t v13 = v11[5];
    if (v12 == 1)
    {
      uint64_t v14 = v11[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (*(void *)(v5 + 16))
      {
        swift_bridgeObjectRetain();
        uint64_t v15 = sub_22081D32C(v14, v13, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2208222BC);
        if (v16)
        {
          uint64_t v8 = *(void *)(*(void *)(v5 + 56) + 8 * v15);
          swift_bridgeObjectRelease_n();
          return v8;
        }
        swift_bridgeObjectRelease();
      }
      sub_22093EEA0();
      sub_22093E6C0();
      sub_22093E6C0();
      sub_22093E6C0();
      sub_22093E6C0();
      sub_22093E6C0();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_22093EEA0();
      sub_22093E6C0();
      sub_22093E6C0();
      sub_22093E6C0();
      MEMORY[0x223C69F60](v11, MEMORY[0x263F8D310]);
      sub_22093E6C0();
      swift_bridgeObjectRelease();
      sub_22093E6C0();
    }
  }
  else
  {
    sub_22093EEA0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    sub_22093E6C0();
  }
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

Swift::Int_optional __swiftcall DataFrame.indexOfColumn(_:)(Swift::String a1)
{
  object = a1._object;
  uint64_t countAndFlagsBits = a1._countAndFlagsBits;
  uint64_t v4 = *(void *)(v1 + 16);
  if (*(void *)(v4 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_22081D32C(countAndFlagsBits, (uint64_t)object, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2208222BC);
    if (v6) {
      goto LABEL_8;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v8 = sub_22083217C(v7, countAndFlagsBits, (uint64_t)object);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = (void *)sub_22080C214(v8);
  swift_bridgeObjectRelease();
  uint64_t v10 = v9[2];
  if (!v10
    || (uint64_t v12 = v9[4], v11 = v9[5], swift_bridgeObjectRetain(), swift_bridgeObjectRelease(), v10 != 1)
    || !*(void *)(v4 + 16)
    || (uint64_t v5 = sub_22081D32C(v12, v11, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2208222BC), (v13 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    Swift::Int v14 = 0;
    Swift::Bool v15 = 1;
    goto LABEL_10;
  }
LABEL_8:
  Swift::Int v14 = *(void *)(*(void *)(v4 + 56) + 8 * v5);
  swift_bridgeObjectRelease();
  Swift::Bool v15 = 0;
LABEL_10:
  Swift::Int v16 = v14;
  result.Swift::Int value = v16;
  result.is_nil = v15;
  return result;
}

uint64_t sub_22080BF8C(void *a1)
{
  int64_t v3 = v1;
  if (*(void *)(*v1 + 16))
  {
    sub_22080B5B8(*v1 + 32, (uint64_t)v25);
    uint64_t v6 = v26;
    uint64_t v5 = v27;
    __swift_project_boxed_opaque_existential_1(v25, v26);
    uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)(v5 + 8) + 48))(v6);
    sub_22080B0D8((uint64_t)v25);
  }
  else
  {
    uint64_t v7 = 0;
  }
  uint64_t v9 = a1[3];
  uint64_t v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)(v8 + 8) + 48))(v9);
  uint64_t v12 = a1[3];
  uint64_t v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v11 + 8) + 48))(v12);
  if (v10 >= v7)
  {
    if (v7 >= result) {
      return result;
    }
    uint64_t v14 = *v3;
    uint64_t v2 = *(void *)(*v3 + 16);
    if (!v2) {
      return result;
    }
    char v24 = v3;
    if (swift_isUniquelyReferenced_nonNull_native()) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v14 = v7 - result;
    if (__OFSUB__(v7, result))
    {
LABEL_30:
      __break(1u);
    }
    else if ((v14 & 0x8000000000000000) == 0)
    {
      for (; v14; --v14)
      {
        uint64_t v15 = a1[3];
        uint64_t v16 = a1[4];
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)a1, v15);
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 16))(v15, v16);
      }
      return result;
    }
    __break(1u);
  }
  uint64_t v14 = (uint64_t)sub_22080AB34(v14);
LABEL_13:
  unint64_t v17 = 0;
  *char v24 = v14;
  do
  {
    if (v17 == v2)
    {
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    uint64_t v19 = a1[3];
    uint64_t v18 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v19);
    uint64_t v20 = (*(uint64_t (**)(uint64_t))(*(void *)(v18 + 8) + 48))(v19);
    uint64_t v21 = v20 - v7;
    if (__OFSUB__(v20, v7)) {
      goto LABEL_27;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_22080AB34(v14);
      uint64_t v14 = result;
    }
    if (v17 >= *(void *)(v14 + 16)) {
      goto LABEL_28;
    }
    if (v21 < 0) {
      goto LABEL_29;
    }
    for (; v21; --v21)
    {
      uint64_t v22 = *(void *)(v14 + 40 * v17 + 56);
      uint64_t v23 = *(void *)(v14 + 40 * v17 + 64);
      __swift_mutable_project_boxed_opaque_existential_1(v14 + 40 * v17 + 32, v22);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 16))(v22, v23);
    }
    ++v17;
  }
  while (v17 != v2);
  *char v24 = v14;
  return result;
}

uint64_t sub_22080C214(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_220826C78(0, v1, 0);
    uint64_t v2 = v11;
    uint64_t v4 = (uint64_t *)(a1 + 56);
    do
    {
      uint64_t v6 = *(v4 - 1);
      uint64_t v5 = *v4;
      unint64_t v8 = *(void *)(v11 + 16);
      unint64_t v7 = *(void *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v7 >> 1) {
        sub_220826C78((char *)(v7 > 1), v8 + 1, 1);
      }
      *(void *)(v11 + 16) = v8 + 1;
      uint64_t v9 = v11 + 16 * v8;
      *(void *)(v9 + 32) = v6;
      *(void *)(v9 + 40) = v5;
      v4 += 4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_22080C2EC(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_220826C78(0, v1, 0);
    uint64_t v2 = v11;
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v6 = *(v4 - 1);
      uint64_t v5 = *v4;
      unint64_t v8 = *(void *)(v11 + 16);
      unint64_t v7 = *(void *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v7 >> 1) {
        sub_220826C78((char *)(v7 > 1), v8 + 1, 1);
      }
      v4 += 4;
      *(void *)(v11 + 16) = v8 + 1;
      uint64_t v9 = v11 + 16 * v8;
      *(void *)(v9 + 32) = v6;
      *(void *)(v9 + 40) = v5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_22080C3C4(uint64_t a1)
{
  uint64_t result = sub_22093E9A0();
  int64_t v3 = 0;
  uint64_t v18 = result;
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    uint64_t v11 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_220827238(&v17, v12, v13);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v3);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

Swift::Void __swiftcall DataFrame.removeAlias(_:)(Swift::String a1)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    object = a1._object;
    uint64_t countAndFlagsBits = a1._countAndFlagsBits;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v6 = 0;
    unint64_t v7 = (void *)(v2 + 40);
    do
    {
      unint64_t v8 = v6 + 1;
      BOOL v9 = *(v7 - 1) == countAndFlagsBits && *v7 == (void)object;
      if (v9 || (sub_22093F250() & 1) != 0) {
        sub_22081A204(v6, v6 + 1);
      }
      v7 += 4;
      ++v6;
    }
    while (v3 != v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_22080F2A8(0, 0, 2);

  sub_22080B6B4(0, 0, 2);
}

uint64_t DataFrame.columns.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DataFrame.rows.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v5 = v1[2];
  if (!*(void *)(*v1 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    goto LABEL_6;
  }
  sub_22080B5B8(v3 + 32, (uint64_t)v13);
  uint64_t v6 = v14;
  uint64_t v7 = v15;
  __swift_project_boxed_opaque_existential_1(v13, v14);
  uint64_t v8 = *(void *)(v7 + 8);
  BOOL v9 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = v9(v6, v8);
  uint64_t result = sub_22080B0D8((uint64_t)v13);
  if ((v10 & 0x8000000000000000) == 0)
  {
    if (v10)
    {
      char v12 = 0;
LABEL_7:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v4;
      *(void *)(a1 + 16) = v5;
      *(void *)(a1 + 24) = 0;
      *(void *)(a1 + 32) = v10;
      *(unsigned char *)(a1 + 40) = v12;
      return result;
    }
LABEL_6:
    uint64_t v10 = 0;
    char v12 = 2;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_22080C788@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_220882130();
  *(void *)a2 = v3;
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = v5;
  *(void *)(a2 + 24) = result;
  *(void *)(a2 + 32) = v7;
  *(unsigned char *)(a2 + 40) = v8;
  return result;
}

uint64_t sub_22080C800(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  char v8 = *((unsigned char *)a1 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220831F30(v6, v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = sub_22080B6B4(v6, v7, v8);
  *a2 = v3;
  a2[1] = v4;
  a2[2] = v5;
  return result;
}

__n128 DataFrame.rows.setter(__n128 *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v3 = a1[1].n128_u64[0];
  sub_22080B6B4(a1[1].n128_i64[1], a1[2].n128_i64[0], a1[2].n128_i8[8]);
  __n128 result = *a1;
  *uint64_t v1 = *a1;
  v1[1].n128_u64[0] = v3;
  return result;
}

void (*DataFrame.rows.modify(void *a1))(uint64_t **a1, char a2)
{
  unint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  uint64_t v6 = v1[2];
  if (!*(void *)(*v1 + 16)) {
    goto LABEL_4;
  }
  sub_22080B5B8(v4 + 32, (uint64_t)(v3 + 6));
  uint64_t v7 = v3[9];
  uint64_t v8 = v3[10];
  __swift_project_boxed_opaque_existential_1(v3 + 6, v7);
  uint64_t v9 = *(void *)(v8 + 8);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v11 = v10(v7, v9);
  sub_22080B0D8((uint64_t)(v3 + 6));
  if (v11 < 0)
  {
    __break(1u);
LABEL_4:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_5;
  }
  if (v11)
  {
    char v12 = 0;
    goto LABEL_6;
  }
LABEL_5:
  uint64_t v11 = 0;
  char v12 = 2;
LABEL_6:
  *unint64_t v3 = v4;
  v3[1] = v5;
  v3[2] = v6;
  v3[3] = 0;
  v3[4] = v11;
  *((unsigned char *)v3 + 40) = v12;
  return sub_22080CA4C;
}

void sub_22080CA4C(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = (void *)(*a1)[11];
  uint64_t v4 = (*a1)[1];
  uint64_t v5 = (*a1)[2];
  uint64_t v6 = (*a1)[3];
  uint64_t v7 = (*a1)[4];
  char v8 = *((unsigned char *)*a1 + 40);
  uint64_t v12 = **a1;
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_220831F30(v6, v7, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22080B6B4(v6, v7, v8);
    *unint64_t v3 = v12;
    v3[1] = v4;
    v3[2] = v5;
    uint64_t v9 = v2[3];
    uint64_t v10 = v2[4];
    char v11 = *((unsigned char *)v2 + 40);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22080B6B4(v9, v10, v11);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22080B6B4(v6, v7, v8);
    *unint64_t v3 = v12;
    v3[1] = v4;
    v3[2] = v5;
  }

  free(v2);
}

uint64_t DataFrame.shape.getter()
{
  if (!*(void *)(*(void *)v0 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_6;
  }
  sub_22080B5B8(*(void *)v0 + 32, (uint64_t)v9);
  uint64_t v1 = v10;
  uint64_t v2 = v11;
  __swift_project_boxed_opaque_existential_1(v9, v10);
  uint64_t v3 = *(void *)(v2 + 8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v5 = v4(v1, v3);
  uint64_t result = sub_22080B0D8((uint64_t)v9);
  if ((v5 & 0x8000000000000000) == 0)
  {
    if (v5)
    {
      char v7 = 0;
LABEL_7:
      uint64_t v8 = sub_2208EE804(0, v5, v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22080B6B4(0, v5, v7);
      return v8;
    }
LABEL_6:
    uint64_t v5 = 0;
    char v7 = 2;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

TabularData::DataFrame __swiftcall DataFrame.init()()
{
  uint64_t v1 = v0;
  uint64_t v2 = MEMORY[0x263F8EE78];
  uint64_t v3 = (void *)sub_22080CCF4(MEMORY[0x263F8EE78]);
  *uint64_t v1 = v2;
  v1[1] = v2;
  v1[2] = v3;
  result.columnIndicesByName._rawValue = v5;
  result.aliases._rawValue = v4;
  result.columns._rawValue = v3;
  return result;
}

unint64_t sub_22080CCF4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_26AD412C0);
  uint64_t v2 = (void *)sub_22093F100();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_22081D32C(v5, v6, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2208222BC);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22080CE30(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18670);
  uint64_t v2 = (void *)sub_22093F100();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  uint64_t v4 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_220835280(v4, (uint64_t)v13, &qword_267F18678);
    unint64_t result = sub_22081D2BC((uint64_t)v13);
    if (v6) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v7 = v2[6] + 40 * result;
    long long v8 = v13[0];
    long long v9 = v13[1];
    *(void *)(v7 + 32) = v14;
    *(_OWORD *)uint64_t v7 = v8;
    *(_OWORD *)(v7 + 16) = v9;
    *(void *)(v2[7] + 8 * result) = v15;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 48;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22080CF5C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F187E8);
  uint64_t v2 = (void *)sub_22093F100();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_22081D32C(v5, v6, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2208222BC);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v11 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    *uint64_t v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22080D0A8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18748);
  uint64_t v2 = (void *)sub_22093F100();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *(v4 - 1);
    uint64_t v6 = *v4;
    uint64_t v7 = swift_bridgeObjectRetain();
    unint64_t result = sub_22081D5D4(v7);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v2[6] + v10) = v5;
    *(void *)(v2[7] + v10) = v6;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 2;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22080D1A8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18730);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18728);
  uint64_t v6 = sub_22093F100();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_220835280(v12, (uint64_t)v5, &qword_267F18730);
    unint64_t result = sub_22081D640((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD411B8);
    unint64_t result = sub_220834D3C((uint64_t)v5, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, qword_26AD411B8);
    *(void *)(v7[7] + 8 * v16) = *(void *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22080D390(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18700);
  uint64_t v2 = (void *)sub_22093F100();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    unint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    sub_220834CD4(v5, v6);
    unint64_t result = sub_22081D830(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22080D4A8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F186A0);
  uint64_t v2 = (void *)sub_22093F100();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_22081DAAC(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_22080D5BC@<X0>(uint64_t a1@<X0>, char **a2@<X8>)
{
  uint64_t v2 = a1;
  unint64_t v3 = sub_22080E1D4(a1);
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_220833AE4(v4);
  swift_bridgeObjectRelease();
  unint64_t v6 = *(void *)(v5 + 16);
  swift_bridgeObjectRelease();
  if (v6 >= 2) {
    goto LABEL_28;
  }
  swift_bridgeObjectRelease();
  sub_220909EF8(MEMORY[0x263F8EE88], 46, 0xE100000000000000, &v55);
  uint64_t v7 = (char *)MEMORY[0x263F8EE78];
  uint64_t v8 = (char *)sub_22080CCF4(MEMORY[0x263F8EE78]);
  uint64_t v9 = v2 + 32;
  uint64_t v45 = *(void *)(v2 + 16);
  swift_bridgeObjectRetain();
  unint64_t v10 = 0;
  uint64_t v44 = v2;
  while (1)
  {
    if (v45 == v10)
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      *a2 = v7;
      a2[1] = (char *)MEMORY[0x263F8EE78];
      a2[2] = v8;
      return result;
    }
    if (v10 >= *(void *)(v2 + 16)) {
      break;
    }
    unint64_t v51 = v10;
    sub_22080B5B8(v9, (uint64_t)&v52);
    long long v48 = v52;
    long long v49 = v53;
    uint64_t v50 = v54;
    uint64_t v11 = v54;
    uint64_t v12 = *((void *)&v53 + 1);
    __swift_project_boxed_opaque_existential_1(&v48, *((uint64_t *)&v53 + 1));
    uint64_t v13 = (*(uint64_t (**)(uint64_t))(*(void *)(v11 + 8) + 8))(v12);
    uint64_t v15 = sub_220909CF0(v13, v14);
    uint64_t v17 = v16;
    swift_bridgeObjectRelease();
    uint64_t v18 = *((void *)&v49 + 1);
    uint64_t v19 = v50;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v48, *((uint64_t *)&v49 + 1));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 + 8) + 16))(v15, v17, v18);
    sub_22080B5B8((uint64_t)&v48, (uint64_t)v46);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v7 = sub_22081BA78(0, *((void *)v7 + 2) + 1, 1, v7, &qword_26AD413F8);
    }
    unint64_t v21 = *((void *)v7 + 2);
    unint64_t v20 = *((void *)v7 + 3);
    if (v21 >= v20 >> 1) {
      uint64_t v7 = sub_22081BA78((char *)(v20 > 1), v21 + 1, 1, v7, &qword_26AD413F8);
    }
    *((void *)v7 + 2) = v21 + 1;
    uint64_t v22 = &v7[40 * v21];
    long long v23 = v46[0];
    long long v24 = v46[1];
    *((void *)v22 + 8) = v47;
    *((_OWORD *)v22 + 2) = v23;
    *((_OWORD *)v22 + 3) = v24;
    uint64_t v25 = *((void *)&v49 + 1);
    uint64_t v26 = v50;
    __swift_project_boxed_opaque_existential_1(&v48, *((uint64_t *)&v49 + 1));
    uint64_t v27 = (*(uint64_t (**)(uint64_t))(*(void *)(v26 + 8) + 8))(v25);
    uint64_t v29 = v28;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v46[0] = v8;
    unint64_t v3 = sub_22081D32C(v27, v29, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2208222BC);
    uint64_t v32 = *((void *)v8 + 2);
    BOOL v33 = (v31 & 1) == 0;
    uint64_t v34 = v32 + v33;
    if (__OFADD__(v32, v33)) {
      goto LABEL_24;
    }
    char v35 = v31;
    if (*((void *)v8 + 3) >= v34)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v8 = *(char **)&v46[0];
        if ((v31 & 1) == 0) {
          goto LABEL_18;
        }
      }
      else
      {
        sub_2208246CC();
        uint64_t v8 = *(char **)&v46[0];
        if ((v35 & 1) == 0) {
          goto LABEL_18;
        }
      }
    }
    else
    {
      sub_22081DBE8(v34, isUniquelyReferenced_nonNull_native);
      uint64_t v36 = sub_22081D32C(v27, v29, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2208222BC);
      if ((v35 & 1) != (v37 & 1)) {
        goto LABEL_27;
      }
      unint64_t v3 = v36;
      uint64_t v8 = *(char **)&v46[0];
      if ((v35 & 1) == 0)
      {
LABEL_18:
        *(void *)&v8[8 * (v3 >> 6) + 64] |= 1 << v3;
        unint64_t v38 = (uint64_t *)(*((void *)v8 + 6) + 16 * v3);
        *unint64_t v38 = v27;
        v38[1] = v29;
        *(void *)(*((void *)v8 + 7) + 8 * v3) = v10;
        uint64_t v39 = *((void *)v8 + 2);
        BOOL v40 = __OFADD__(v39, 1);
        uint64_t v41 = v39 + 1;
        if (v40) {
          goto LABEL_26;
        }
        *((void *)v8 + 2) = v41;
        swift_bridgeObjectRetain();
        goto LABEL_4;
      }
    }
    *(void *)(*((void *)v8 + 7) + 8 * v3) = v10;
LABEL_4:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22080B0D8((uint64_t)&v48);
    unint64_t v3 = ++v10;
    v9 += 40;
    uint64_t v2 = v44;
    if (__OFADD__(v10, 1)) {
      goto LABEL_25;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  sub_22093F2F0();
  __break(1u);
LABEL_28:
  unint64_t v51 = 0;
  *(void *)&long long v52 = 0xE000000000000000;
  sub_22093EEA0();
  sub_22093E6C0();
  MEMORY[0x223C69F60](v3, MEMORY[0x263F8D6C8]);
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

uint64_t DataFrame.init<A>(columns:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char **a4@<X8>)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267F18590);
  unint64_t v9 = sub_220831F8C();
  uint64_t v60 = sub_22093EEE0();
  MEMORY[0x270FA5388](v60);
  uint64_t v61 = v8;
  uint64_t v68 = v8;
  *(void *)&long long v69 = a2;
  *((void *)&v69 + 1) = v9;
  *(void *)&long long v70 = a3;
  uint64_t v10 = sub_22093EED0();
  uint64_t v57 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v56 - v11;
  uint64_t v62 = a1;
  uint64_t isUniquelyReferenced_nonNull_native = sub_22080E314((void (*)(char *, char *))sub_22080E174, 0, a2, MEMORY[0x263F8D6C8], MEMORY[0x263F8E628], a3, MEMORY[0x263F8E658], v13);
  uint64_t v15 = swift_bridgeObjectRetain();
  uint64_t v16 = sub_220833AE4(v15);
  swift_bridgeObjectRelease();
  unint64_t v17 = *(void *)(v16 + 16);
  swift_bridgeObjectRelease();
  if (v17 >= 2)
  {
LABEL_24:
    uint64_t v68 = 0;
    *(void *)&long long v69 = 0xE000000000000000;
    sub_22093EEA0();
    sub_22093E6C0();
    MEMORY[0x223C69F60](isUniquelyReferenced_nonNull_native, MEMORY[0x263F8D6C8]);
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_22093F090();
    __break(1u);
    return result;
  }
  v58 = a4;
  swift_bridgeObjectRelease();
  sub_220909EF8(MEMORY[0x263F8EE88], 46, 0xE100000000000000, &v72);
  uint64_t v18 = (char *)MEMORY[0x263F8EE78];
  uint64_t v19 = (char *)sub_22080CCF4(MEMORY[0x263F8EE78]);
  uint64_t v68 = 0;
  uint64_t isUniquelyReferenced_nonNull_native = v62;
  sub_22093F2C0();
  sub_22093EEB0();
  unint64_t v20 = v12;
  sub_22093EEC0();
  if (*((void *)&v70 + 1))
  {
    unint64_t v21 = (char *)MEMORY[0x263F8EE78];
    uint64_t v61 = a2;
    uint64_t v60 = v10;
    v59 = v12;
    while (1)
    {
      uint64_t v22 = v68;
      long long v65 = v69;
      long long v66 = v70;
      uint64_t v67 = v71;
      uint64_t v23 = v71;
      uint64_t v24 = *((void *)&v70 + 1);
      __swift_project_boxed_opaque_existential_1(&v65, *((uint64_t *)&v70 + 1));
      uint64_t v25 = (*(uint64_t (**)(uint64_t))(*(void *)(v23 + 8) + 8))(v24);
      uint64_t v27 = sub_220909CF0(v25, v26);
      uint64_t v29 = v28;
      swift_bridgeObjectRelease();
      uint64_t v30 = *((void *)&v66 + 1);
      uint64_t v31 = v67;
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v65, *((uint64_t *)&v66 + 1));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 + 8) + 16))(v27, v29, v30);
      sub_22080B5B8((uint64_t)&v65, (uint64_t)v63);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v21 = sub_22081BA78(0, *((void *)v21 + 2) + 1, 1, v21, &qword_26AD413F8);
      }
      unint64_t v33 = *((void *)v21 + 2);
      unint64_t v32 = *((void *)v21 + 3);
      if (v33 >= v32 >> 1) {
        unint64_t v21 = sub_22081BA78((char *)(v32 > 1), v33 + 1, 1, v21, &qword_26AD413F8);
      }
      *((void *)v21 + 2) = v33 + 1;
      uint64_t v34 = &v21[40 * v33];
      long long v35 = v63[0];
      long long v36 = v63[1];
      *((void *)v34 + 8) = v64;
      *((_OWORD *)v34 + 2) = v35;
      *((_OWORD *)v34 + 3) = v36;
      uint64_t v37 = *((void *)&v66 + 1);
      uint64_t v38 = v67;
      __swift_project_boxed_opaque_existential_1(&v65, *((uint64_t *)&v66 + 1));
      uint64_t v39 = (*(uint64_t (**)(uint64_t))(*(void *)(v38 + 8) + 8))(v37);
      uint64_t v41 = v40;
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&v63[0] = v19;
      unint64_t v43 = sub_22081D32C(v39, v41, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2208222BC);
      uint64_t v44 = *((void *)v19 + 2);
      BOOL v45 = (v42 & 1) == 0;
      uint64_t v46 = v44 + v45;
      if (__OFADD__(v44, v45)) {
        break;
      }
      char v47 = v42;
      if (*((void *)v19 + 3) >= v46)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_2208246CC();
        }
      }
      else
      {
        sub_22081DBE8(v46, isUniquelyReferenced_nonNull_native);
        uint64_t v48 = sub_22081D32C(v39, v41, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2208222BC);
        if ((v47 & 1) != (v49 & 1)) {
          goto LABEL_23;
        }
        unint64_t v43 = v48;
      }
      uint64_t isUniquelyReferenced_nonNull_native = v62;
      uint64_t v19 = *(char **)&v63[0];
      if (v47)
      {
        *(void *)(*(void *)(*(void *)&v63[0] + 56) + 8 * v43) = v22;
      }
      else
      {
        *(void *)(*(void *)&v63[0] + 8 * (v43 >> 6) + 64) |= 1 << v43;
        uint64_t v50 = (uint64_t *)(*((void *)v19 + 6) + 16 * v43);
        *uint64_t v50 = v39;
        v50[1] = v41;
        *(void *)(*((void *)v19 + 7) + 8 * v43) = v22;
        uint64_t v51 = *((void *)v19 + 2);
        BOOL v52 = __OFADD__(v51, 1);
        uint64_t v53 = v51 + 1;
        if (v52) {
          goto LABEL_22;
        }
        *((void *)v19 + 2) = v53;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22080B0D8((uint64_t)&v65);
      uint64_t v10 = v60;
      unint64_t v20 = v59;
      sub_22093EEC0();
      a2 = v61;
      if (!*((void *)&v70 + 1)) {
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    sub_22093F2F0();
    __break(1u);
    goto LABEL_24;
  }
  unint64_t v21 = v18;
LABEL_20:
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(isUniquelyReferenced_nonNull_native, a2);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v20, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v55 = v58;
  *v58 = v21;
  v55[1] = (char *)MEMORY[0x263F8EE78];
  v55[2] = v19;
  return result;
}

uint64_t sub_22080E174@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v3 + 8) + 48))(v4);
  *a2 = result;
  return result;
}

uint64_t sub_22080E1D4(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x263F8EE78];
  sub_220826C98(0, v2, 0);
  if (v2)
  {
    uint64_t v3 = (void *)(a1 + 32);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v5 = v3[3];
      uint64_t v4 = v3[4];
      __swift_project_boxed_opaque_existential_1(v3, v5);
      uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)(v4 + 8) + 48))(v5);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_220826C98(0, *(void *)(v10 + 16) + 1, 1);
      }
      unint64_t v8 = *(void *)(v10 + 16);
      unint64_t v7 = *(void *)(v10 + 24);
      if (v8 >= v7 >> 1) {
        sub_220826C98((char *)(v7 > 1), v8 + 1, 1);
      }
      *(void *)(v10 + 16) = v8 + 1;
      *(void *)(v10 + 8 * v8 + 32) = v6;
      v3 += 5;
      --v2;
    }
    while (v2);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_22080E314(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v43 = a8;
  uint64_t v44 = a5;
  uint64_t v9 = v8;
  uint64_t v58 = a2;
  v59 = a4;
  uint64_t v57 = a1;
  uint64_t v42 = *(void *)(a5 - 8);
  uint64_t v11 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  uint64_t v55 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v53 = (char *)&v40 - v13;
  uint64_t v15 = v14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v41 = (char *)&v40 - v17;
  uint64_t v18 = sub_22093ED30();
  uint64_t v45 = *(void *)(v18 - 8);
  uint64_t v46 = v18;
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v51 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v40 - v22;
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  uint64_t v40 = (char *)&v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v50 = *((void *)v15 - 1);
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (char *)&v40 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = a6;
  BOOL v52 = v15;
  uint64_t v60 = swift_getAssociatedTypeWitness();
  uint64_t v47 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v30 = (char *)&v40 - v29;
  uint64_t v31 = sub_22093E790();
  uint64_t v61 = sub_22093E230();
  uint64_t v56 = sub_22093EFF0();
  sub_22093EFB0();
  (*(void (**)(char *, uint64_t, void))(v50 + 16))(v28, v48, v52);
  v59 = v30;
  uint64_t result = sub_22093E780();
  if (v31 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v31)
  {
    unint64_t v33 = (uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
    uint64_t v34 = (uint64_t (**)(char *, uint64_t))(v54 + 8);
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_22093ED70();
      uint64_t result = (*v33)(v23, 1, AssociatedTypeWitness);
      if (result == 1) {
        goto LABEL_18;
      }
      v57(v23, v55);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v55, v44);
        return (*v34)(v23, AssociatedTypeWitness);
      }
      uint64_t v9 = 0;
      (*v34)(v23, AssociatedTypeWitness);
      sub_22093EFD0();
      if (!--v31)
      {
        uint64_t v35 = v54;
        long long v36 = v51;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  uint64_t v35 = v54;
  long long v36 = v51;
LABEL_9:
  sub_22093ED70();
  uint64_t v55 = *(char **)(v35 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v36, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v37 = v51;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v37, v46);
    return v61;
  }
  else
  {
    BOOL v52 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
    uint64_t v54 = v35 + 32;
    uint64_t v38 = (void (**)(char *, uint64_t))(v35 + 8);
    uint64_t v39 = v41;
    uint64_t v37 = v51;
    while (1)
    {
      v52(v39, v37, AssociatedTypeWitness);
      v57(v39, v53);
      if (v9) {
        break;
      }
      uint64_t v9 = 0;
      (*v38)(v39, AssociatedTypeWitness);
      sub_22093EFD0();
      sub_22093ED70();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v37, 1, AssociatedTypeWitness) == 1) {
        goto LABEL_14;
      }
    }
    (*v38)(v39, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v53, v44);
  }
}

uint64_t DataFrame.init(_:)@<X0>(long long *a1@<X0>, void *a2@<X8>)
{
  long long v3 = a1[1];
  long long v25 = *a1;
  v26[0] = v3;
  *(_OWORD *)((char *)v26 + 9) = *(long long *)((char *)a1 + 25);
  uint64_t v4 = *((void *)&v25 + 1);
  uint64_t v5 = v3;
  sub_220833B58((uint64_t)&v25);
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_22083196C(v6, (uint64_t)&v25);
  sub_220833BC0((uint64_t)&v25);
  swift_bridgeObjectRelease();
  int64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v24 = MEMORY[0x263F8EE78];
    sub_220826CD8(0, v8, 0);
    uint64_t v9 = v7 + 32;
    uint64_t v10 = v24;
    do
    {
      sub_220833C28(v9, (uint64_t)v19);
      uint64_t v11 = v20;
      uint64_t v12 = v21;
      __swift_project_boxed_opaque_existential_1(v19, v20);
      (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v12 + 16))(v22, v11, v12);
      sub_220833C84((uint64_t)v19);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_220826CD8(0, *(void *)(v10 + 16) + 1, 1);
        uint64_t v10 = v24;
      }
      unint64_t v14 = *(void *)(v10 + 16);
      unint64_t v13 = *(void *)(v10 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_220826CD8((char *)(v13 > 1), v14 + 1, 1);
        uint64_t v10 = v24;
      }
      *(void *)(v10 + 16) = v14 + 1;
      uint64_t v15 = v10 + 40 * v14;
      long long v16 = v22[0];
      long long v17 = v22[1];
      *(void *)(v15 + 64) = v23;
      *(_OWORD *)(v15 + 32) = v16;
      *(_OWORD *)(v15 + 48) = v17;
      v9 += 40;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220833BC0((uint64_t)&v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v10;
  a2[1] = v4;
  a2[2] = v5;
  return result;
}

uint64_t sub_22080EC0C(uint64_t a1)
{
  uint64_t result = sub_2208BADBC(a1);
  if (v4) {
    goto LABEL_8;
  }
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32)) {
    return 0;
  }
  uint64_t v5 = sub_220834364(result, v3, 0, a1);
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t DataFrame.columnNames(forAlias:)(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_22083217C(v4, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_22080C214(v5);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t DataFrame.containsColumn<A>(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  type metadata accessor for ColumnID();
  uint64_t v5 = sub_220869F28();
  uint64_t v7 = v6;
  swift_bridgeObjectRetain();
  v8._uint64_t countAndFlagsBits = v5;
  v8._object = v7;
  Swift::Int_optional v18 = DataFrame.indexOfColumn(_:)(v8);
  unint64_t value = v18.value;
  Swift::Bool is_nil = v18.is_nil;
  uint64_t result = swift_bridgeObjectRelease();
  if (is_nil) {
    return 0;
  }
  if ((value & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (value < *(void *)(*(void *)v3 + 16))
  {
    sub_22080B5B8(*(void *)v3 + 40 * value + 32, (uint64_t)v15);
    uint64_t v13 = v16;
    uint64_t v12 = v17;
    __swift_project_boxed_opaque_existential_1(v15, v16);
    uint64_t v14 = (*(uint64_t (**)(uint64_t))(*(void *)(v12 + 8) + 80))(v13);
    sub_22080B0D8((uint64_t)v15);
    return v14 == a2;
  }
  __break(1u);
  return result;
}

Swift::Int DataFrame.containsColumn<A>(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  Swift::Int_optional v13 = DataFrame.indexOfColumn(_:)(*(Swift::String *)&a1);
  if (v13.is_nil)
  {
    v13.unint64_t value = 0;
    return v13.value;
  }
  if (v13.value < 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v13.value >= *(void *)(*(void *)v4 + 16))
  {
LABEL_8:
    __break(1u);
    return v13.value;
  }
  sub_22080B5B8(*(void *)v4 + 40 * v13.value + 32, (uint64_t)v10);
  uint64_t v7 = v11;
  uint64_t v6 = v12;
  __swift_project_boxed_opaque_existential_1(v10, v11);
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)(v6 + 8) + 80))(v7);
  sub_22080B0D8((uint64_t)v10);
  v13.unint64_t value = v8 == a4;
  return v13.value;
}

Swift::Bool __swiftcall DataFrame.containsColumn(_:)(Swift::String a1)
{
  Swift::Int_optional v2 = DataFrame.indexOfColumn(_:)(a1);
  return !v2.is_nil;
}

Swift::Void __swiftcall DataFrame.addAlias(_:forColumn:)(Swift::String _, Swift::String forColumn)
{
  uint64_t v3 = v2;
  object = forColumn._object;
  uint64_t countAndFlagsBits = forColumn._countAndFlagsBits;
  if (*(void *)(*(void *)(v2 + 16) + 16)
    && (uint64_t v6 = _._object,
        uint64_t v7 = _._countAndFlagsBits,
        swift_bridgeObjectRetain(),
        sub_22081D32C(countAndFlagsBits, (uint64_t)object, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2208222BC), char v9 = v8, swift_bridgeObjectRelease(), (v9 & 1) != 0))
  {
    uint64_t v10 = *(void **)(v3 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v10 = sub_22081B820(0, v10[2] + 1, 1, v10);
    }
    unint64_t v12 = v10[2];
    unint64_t v11 = v10[3];
    if (v12 >= v11 >> 1) {
      uint64_t v10 = sub_22081B820((void *)(v11 > 1), v12 + 1, 1, v10);
    }
    v10[2] = v12 + 1;
    Swift::Int_optional v13 = &v10[4 * v12];
    v13[4] = v7;
    v13[5] = v6;
    v13[6] = countAndFlagsBits;
    v13[7] = object;
    *(void *)(v3 + 8) = v10;
  }
  else
  {
    sub_22093EEA0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    sub_22093E6C0();
    sub_22093F090();
    __break(1u);
  }
}

uint64_t sub_22080F0B4(uint64_t (*a1)(void *), uint64_t a2)
{
  uint64_t v32 = a2;
  long long v4 = v2[1];
  long long v30 = *v2;
  v31[0] = v4;
  *(_OWORD *)((char *)v31 + 9) = *(long long *)((char *)v2 + 25);
  uint64_t v5 = *((void *)v2 + 3);
  uint64_t v6 = *((void *)v2 + 4);
  int v7 = *((unsigned __int8 *)v2 + 40);
  uint64_t v8 = v5;
  if (*((unsigned char *)v2 + 40))
  {
    if (v7 == 1 && *(void *)(v5 + 16))
    {
      uint64_t v8 = *(void *)(v5 + 32);
    }
    else
    {
      sub_220883950(*((void *)v2 + 3), *((void *)v2 + 4), *((unsigned char *)v2 + 40));
      if (v10) {
        uint64_t v8 = 0;
      }
      else {
        uint64_t v8 = v9;
      }
    }
  }
  sub_220883950(v5, v6, v7);
  if (v12)
  {
    if (!v8) {
      return 0;
    }
  }
  else if (v8 == v11)
  {
    return 0;
  }
  uint64_t v27 = 0;
  uint64_t v28 = 0;
  char v29 = 2;
  Swift::Int v14 = v5;
  if (v7)
  {
    if (v7 == 1 && *(void *)(v5 + 16))
    {
      Swift::Int v14 = *(void *)(v5 + 32);
    }
    else
    {
      sub_220883950(v5, v6, v7);
      if (v16) {
        Swift::Int v14 = 0;
      }
      else {
        Swift::Int v14 = v15;
      }
    }
  }
  uint64_t v24 = v5;
  uint64_t v17 = *(void *)v2;
  uint64_t v18 = *((void *)v2 + 1);
  uint64_t v19 = *((void *)v2 + 2);
  while (1)
  {
    do
    {
      int64_t v20 = v14;
      sub_220883950(v24, v6, v7);
      if (v22)
      {
        if (!v14) {
          return v27;
        }
      }
      else if (v14 == v21)
      {
        return v27;
      }
      Swift::Int v14 = DataFrame.Rows.index(after:)(v14);
      v26[0] = v17;
      v26[1] = v18;
      v26[2] = v19;
      _OWORD v26[3] = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v23 = a1(v26);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v3) {
        return sub_22080B6B4(v27, v28, v29);
      }
    }
    while ((v23 & 1) == 0);
    if (v14 < v20) {
      break;
    }
    sub_22081A204(v20, v14);
  }
  __break(1u);
  return result;
}

void *sub_22080F2A8(void *result, uint64_t a2, char a3)
{
  uint64_t v6 = (uint64_t)result;
  unint64_t v7 = (unint64_t)result;
  uint64_t v8 = a2;
  if (a3)
  {
    if (a3 != 1 || !result[2]) {
      return result;
    }
    unint64_t v7 = result[4];
    uint64_t v8 = result[5];
  }
  uint64_t v9 = (void *)v8;
  sub_22081A360(1, (uint64_t)result, a2, a3, (uint64_t)&v56);
  unint64_t v10 = v56;
  if (v56 != v57)
  {
    int64_t v46 = v57;
    long long v47 = v58;
    int v45 = v59;
    Swift::Int_optional v13 = (void *)*v44;
    sub_220831F30(v6, a2, a3);
    uint64_t v3 = v13;
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      Swift::Int v14 = v13;
LABEL_9:
      int64_t v12 = (int64_t)v9;
      unint64_t v15 = v10;
      int64_t v16 = v46;
      int v17 = v45;
      while (1)
      {
        if ((uint64_t)v15 >= v16) {
          goto LABEL_57;
        }
        if (v17)
        {
          if (v17 != 1)
          {
            uint64_t result = (void *)sub_22093F090();
            __break(1u);
            return result;
          }
          if ((v15 & 0x8000000000000000) != 0) {
            goto LABEL_64;
          }
          unint64_t v18 = *(void *)(v47 + 16);
          if (v15 >= v18) {
            goto LABEL_65;
          }
          long long v19 = *(_OWORD *)(v47 + 32 + 16 * v15);
        }
        else
        {
          if (v15) {
            goto LABEL_63;
          }
          unint64_t v18 = 1;
          long long v19 = v47;
        }
        long long v49 = v19;
        if (v15 >= v18) {
          goto LABEL_58;
        }
        uint64_t v20 = v19;
        if (v12 != (void)v19)
        {
          if (v12 >= (uint64_t)v19) {
            goto LABEL_66;
          }
          unint64_t v48 = v15;
          uint64_t v50 = 4 * v12;
          uint64_t v52 = 4 * v7;
          uint64_t v21 = v14;
          while (1)
          {
            if (v7 != v12)
            {
              if ((v7 & 0x8000000000000000) != 0) {
                goto LABEL_51;
              }
              unint64_t v22 = v14[2];
              if (v7 >= v22) {
                goto LABEL_52;
              }
              if (v12 >= v22) {
                goto LABEL_53;
              }
              unint64_t v10 = v7;
              char v23 = &v21[v52];
              uint64_t v24 = v21[v52 + 4];
              unint64_t v7 = v21[v52 + 5];
              uint64_t v25 = v21[v52 + 6];
              uint64_t v3 = (void *)v21[v52 + 7];
              uint64_t v26 = &v21[v50];
              uint64_t v27 = v21[v50 + 5];
              uint64_t v28 = v21[v50 + 6];
              uint64_t v29 = v21[v50 + 7];
              v23[4] = v21[v50 + 4];
              v23[5] = v27;
              v23[6] = v28;
              v23[7] = v29;
              uint64_t v9 = v14;
              unint64_t v54 = v14[2];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v12 >= v54) {
                goto LABEL_54;
              }
              void v26[4] = v24;
              v26[5] = v7;
              v26[6] = v25;
              v26[7] = v3;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              Swift::Int v14 = v9;
              unint64_t v7 = v10;
              uint64_t v20 = v49;
            }
            unint64_t v30 = v7 + 1;
            if (__OFADD__(v7, 1)) {
              break;
            }
            ++v12;
            v21 += 4;
            ++v7;
            if (v20 == v12)
            {
              unint64_t v7 = v30;
              unint64_t v15 = v48;
              int64_t v16 = v46;
              int v17 = v45;
              goto LABEL_10;
            }
          }
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
          goto LABEL_55;
        }
LABEL_10:
        ++v15;
        int64_t v12 = *((void *)&v49 + 1);
        if (v15 == v16)
        {
          uint64_t v9 = v14;
          sub_220834FF0((uint64_t)&v56);
          uint64_t v11 = v9;
          *uint64_t v44 = v9;
          goto LABEL_33;
        }
      }
    }
LABEL_68:
    Swift::Int v14 = sub_22080AB5C(v3);
    goto LABEL_9;
  }
  sub_220831F30(v6, a2, a3);
  sub_220834FF0((uint64_t)&v56);
  uint64_t v11 = (void *)*v44;
  int64_t v12 = (int64_t)v9;
LABEL_33:
  if (v12 != v11[2])
  {
    uint64_t v3 = v11;
    if (swift_isUniquelyReferenced_nonNull_native()) {
      uint64_t v31 = v3;
    }
    else {
      uint64_t v31 = sub_22080AB5C(v3);
    }
    uint64_t v32 = 4 * v12;
    unint64_t v33 = v12;
    uint64_t v34 = 4 * v7;
    while (1)
    {
      unint64_t v55 = v33;
      if (v7 != v33)
      {
        if ((v7 & 0x8000000000000000) != 0) {
          goto LABEL_59;
        }
        unint64_t v35 = v31[2];
        if (v7 >= v35) {
          goto LABEL_60;
        }
        unint64_t v10 = v33;
        if (v33 >= v35) {
          goto LABEL_61;
        }
        unint64_t v51 = v7;
        long long v36 = &v31[v34];
        uint64_t v3 = (void *)v31[v34 + 4];
        uint64_t v37 = v31[v34 + 5];
        unint64_t v7 = v31[v34 + 6];
        uint64_t v38 = v31[v34 + 7];
        uint64_t v39 = &v31[v32];
        uint64_t v40 = v31[v32 + 5];
        uint64_t v41 = v31[v32 + 6];
        uint64_t v42 = v31[v32 + 7];
        v36[4] = v31[v32 + 4];
        v36[5] = v40;
        v36[6] = v41;
        v36[7] = v42;
        uint64_t v9 = v31;
        unint64_t v53 = v31[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v55 >= v53) {
          goto LABEL_62;
        }
        v39[4] = v3;
        v39[5] = v37;
        v39[6] = v7;
        v39[7] = v38;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v31 = v9;
        unint64_t v7 = v51;
      }
      unint64_t v43 = v7 + 1;
      if (__OFADD__(v7, 1)) {
        break;
      }
      if (__OFADD__(v55, 1)) {
        goto LABEL_56;
      }
      v32 += 4;
      unint64_t v33 = v55 + 1;
      v34 += 4;
      ++v7;
      if (v55 + 1 == v31[2])
      {
        *uint64_t v44 = v31;
        int64_t v12 = v31[2];
        unint64_t v7 = v43;
        goto LABEL_47;
      }
    }
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
LABEL_47:
  if (v12 < (uint64_t)v7)
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  return (void *)sub_22083205C(v7, v12);
}

uint64_t DataFrame.append<A>(column:)()
{
  type metadata accessor for Column();
  Column.eraseToAnyColumn()((uint64_t)v1);
  DataFrame.append(column:)((uint64_t)v1);
  return sub_22080B0D8((uint64_t)v1);
}

uint64_t DataFrame.append(column:)(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_22080B5B8(a1, (uint64_t)v51);
  sub_22080BF8C(v51);
  uint64_t v3 = v1[1];
  long long v4 = v1[2];
  *(void *)&long long v48 = *v1;
  *((void *)&v48 + 1) = v3;
  *(void *)&long long v49 = v4;
  uint64_t v5 = v52;
  uint64_t v6 = v53;
  __swift_project_boxed_opaque_existential_1(v51, v52);
  uint64_t v7 = *(void *)(v6 + 8);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9._uint64_t countAndFlagsBits = v8(v5, v7);
  Swift::Int_optional v54 = DataFrame.indexOfColumn(_:)(v9);
  Swift::Bool is_nil = v54.is_nil;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!is_nil)
  {
    uint64_t v11 = swift_bridgeObjectRetain();
    uint64_t v12 = sub_22080A808(v11);
    swift_bridgeObjectRelease();
    uint64_t v13 = sub_220831E98(v12);
    swift_bridgeObjectRelease();
    sub_220909EF8(v13, 46, 0xE100000000000000, &v48);
    uint64_t v15 = v52;
    uint64_t v14 = v53;
    __swift_project_boxed_opaque_existential_1(v51, v52);
    uint64_t v16 = (*(uint64_t (**)(uint64_t))(*(void *)(v14 + 8) + 8))(v15);
    uint64_t v18 = sub_220909CF0(v16, v17);
    uint64_t v20 = v19;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v22 = v52;
    uint64_t v21 = v53;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v51, v52);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 + 8) + 16))(v18, v20, v22);
  }
  uint64_t v24 = v52;
  uint64_t v23 = v53;
  __swift_project_boxed_opaque_existential_1(v51, v52);
  uint64_t v25 = (*(uint64_t (**)(uint64_t))(*(void *)(v23 + 8) + 8))(v24);
  uint64_t v27 = v26;
  uint64_t v28 = swift_bridgeObjectRetain();
  uint64_t v29 = (void *)sub_2208BD770(v28, v25, v27);
  uint64_t v31 = v30;
  char v33 = v32;
  swift_bridgeObjectRelease();
  sub_22080F2A8(v29, v31, v33);
  sub_22080B6B4((uint64_t)v29, v31, v33);
  swift_bridgeObjectRelease();
  uint64_t v35 = v52;
  uint64_t v34 = v53;
  __swift_project_boxed_opaque_existential_1(v51, v52);
  uint64_t v36 = (*(uint64_t (**)(uint64_t))(*(void *)(v34 + 8) + 8))(v35);
  uint64_t v38 = v37;
  uint64_t v39 = *((void *)*v2 + 2);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v48 = v2[2];
  v2[2] = (char *)0x8000000000000000;
  sub_22080AF54(v39, v36, v38, isUniquelyReferenced_nonNull_native);
  v2[2] = (char *)v48;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B5B8((uint64_t)v51, (uint64_t)&v48);
  uint64_t v41 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v41 = sub_22081BA78(0, *((void *)v41 + 2) + 1, 1, v41, &qword_26AD413F8);
  }
  unint64_t v43 = *((void *)v41 + 2);
  unint64_t v42 = *((void *)v41 + 3);
  if (v43 >= v42 >> 1) {
    uint64_t v41 = sub_22081BA78((char *)(v42 > 1), v43 + 1, 1, v41, &qword_26AD413F8);
  }
  *((void *)v41 + 2) = v43 + 1;
  uint64_t v44 = &v41[40 * v43];
  long long v45 = v48;
  long long v46 = v49;
  *((void *)v44 + 8) = v50;
  *((_OWORD *)v44 + 2) = v45;
  *((_OWORD *)v44 + 3) = v46;
  *uint64_t v2 = v41;
  return sub_22080B0D8((uint64_t)v51);
}

uint64_t DataFrame.insert<A>(column:at:)(uint64_t a1, int64_t a2)
{
  type metadata accessor for Column();
  Column.eraseToAnyColumn()((uint64_t)v4);
  DataFrame.insert(column:at:)((uint64_t)v4, a2);
  return sub_22080B0D8((uint64_t)v4);
}

uint64_t DataFrame.insert(column:at:)(uint64_t a1, int64_t a2)
{
  uint64_t v3 = v2;
  sub_22080B5B8(a1, (uint64_t)v45);
  sub_22080BF8C(v45);
  uint64_t v4 = v2[1];
  uint64_t v5 = v2[2];
  v44[0] = *v2;
  v44[1] = v4;
  v44[2] = v5;
  uint64_t v6 = v46;
  uint64_t v7 = v47;
  __swift_project_boxed_opaque_existential_1(v45, v46);
  uint64_t v8 = *(void *)(v7 + 8);
  Swift::String v9 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10._uint64_t countAndFlagsBits = v9(v6, v8);
  Swift::Int_optional v48 = DataFrame.indexOfColumn(_:)(v10);
  Swift::Bool is_nil = v48.is_nil;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!is_nil)
  {
    uint64_t v12 = swift_bridgeObjectRetain();
    uint64_t v13 = sub_22080A808(v12);
    swift_bridgeObjectRelease();
    uint64_t v14 = sub_220831E98(v13);
    swift_bridgeObjectRelease();
    sub_220909EF8(v14, 46, 0xE100000000000000, v44);
    uint64_t v16 = v46;
    uint64_t v15 = v47;
    __swift_project_boxed_opaque_existential_1(v45, v46);
    uint64_t v17 = (*(uint64_t (**)(uint64_t))(*(void *)(v15 + 8) + 8))(v16);
    uint64_t v19 = sub_220909CF0(v17, v18);
    uint64_t v21 = v20;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v23 = v46;
    uint64_t v22 = v47;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v45, v46);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 + 8) + 16))(v19, v21, v23);
  }
  uint64_t v25 = v46;
  uint64_t v24 = v47;
  __swift_project_boxed_opaque_existential_1(v45, v46);
  uint64_t v26 = (*(uint64_t (**)(uint64_t))(*(void *)(v24 + 8) + 8))(v25);
  uint64_t v28 = v27;
  uint64_t v29 = swift_bridgeObjectRetain();
  uint64_t v30 = (void *)sub_2208BD770(v29, v26, v28);
  uint64_t v32 = v31;
  char v34 = v33;
  swift_bridgeObjectRelease();
  sub_22080F2A8(v30, v32, v34);
  sub_22080B6B4((uint64_t)v30, v32, v34);
  swift_bridgeObjectRelease();
  if (*(void *)(*v3 + 16) < a2)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (a2 < 0)
  {
LABEL_13:
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
    return result;
  }
  sub_22080B5B8((uint64_t)v45, (uint64_t)v44);
  sub_22081B214(a2, a2, (uint64_t)v44);
  uint64_t v35 = swift_bridgeObjectRetain();
  uint64_t v36 = sub_22080A808(v35);
  swift_bridgeObjectRelease();
  unint64_t v37 = *(void *)(*v3 + 16);
  if (v37 >= *(void *)(v36 + 16)) {
    uint64_t v38 = *(void *)(v36 + 16);
  }
  else {
    uint64_t v38 = *(void *)(*v3 + 16);
  }
  if (v38)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_26AD412C0);
    uint64_t v39 = sub_22093F100();
  }
  else
  {
    uint64_t v39 = MEMORY[0x263F8EE80];
  }
  v44[0] = v39;
  uint64_t v40 = (void *)swift_bridgeObjectRetain();
  sub_22083091C(v40, 0, v37, 1, v44);
  swift_bridgeObjectRelease();
  uint64_t v41 = v44[0];
  sub_22080B0D8((uint64_t)v45);
  uint64_t result = swift_bridgeObjectRelease();
  v3[2] = v41;
  return result;
}

uint64_t DataFrame.removeColumn<A>(_:)(uint64_t *a1)
{
  DataFrame.removeColumn(_:)(*a1, a1[1], (uint64_t)v2);
  sub_2208343B8(v2, (uint64_t)v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41110);
  type metadata accessor for Column();
  return swift_dynamicCast();
}

uint64_t DataFrame.removeColumn(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = v3[1];
  uint64_t v9 = v3[2];
  v24[0] = *v3;
  v24[1] = v8;
  v24[2] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_22080BA90(a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_220810160(v10, a3);
  swift_bridgeObjectRetain();
  uint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = (void *)sub_2208BD83C(v11, a1, a2);
  uint64_t v14 = v13;
  LOBYTE(v9) = v15;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080F2A8(v12, v14, v9);
  sub_22080B6B4((uint64_t)v12, v14, v9);
  uint64_t v16 = swift_bridgeObjectRetain();
  uint64_t v17 = sub_22080A808(v16);
  swift_bridgeObjectRelease();
  unint64_t v18 = *(void *)(*v4 + 16);
  if (v18 >= *(void *)(v17 + 16)) {
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else {
    uint64_t v19 = *(void *)(*v4 + 16);
  }
  if (v19)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_26AD412C0);
    uint64_t v20 = sub_22093F100();
  }
  else
  {
    uint64_t v20 = MEMORY[0x263F8EE80];
  }
  v24[0] = v20;
  uint64_t v21 = (void *)swift_bridgeObjectRetain();
  sub_22083091C(v21, 0, v18, 1, v24);
  swift_bridgeObjectRelease();
  uint64_t v22 = v24[0];
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v4[2] = v22;
  return result;
}

uint64_t sub_220810160@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_22080AB34(v5);
    uint64_t v5 = result;
  }
  unint64_t v7 = *(void *)(v5 + 16);
  if (v7 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v8 = v7 - 1;
    uint64_t v9 = v5 + 40 * a1;
    long long v10 = *(_OWORD *)(v9 + 48);
    *(_OWORD *)a2 = *(_OWORD *)(v9 + 32);
    *(_OWORD *)(a2 + 16) = v10;
    *(void *)(a2 + 32) = *(void *)(v9 + 64);
    uint64_t result = (uint64_t)memmove((void *)(v9 + 32), (const void *)(v9 + 72), 40 * (v8 - a1));
    *(void *)(v5 + 16) = v8;
    *uint64_t v2 = v5;
  }
  return result;
}

uint64_t DataFrame.transformColumn<A, B>(_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return DataFrame.transformColumn<A, B>(_:_:)(*a1, a1[1], a2, a3, a4, a5);
}

{
  return DataFrame.transformColumn<A, B>(_:_:)(*a1, a1[1], a2, a3, a4, a5);
}

uint64_t DataFrame.transformColumn<A, B>(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = v6[1];
  uint64_t v12 = v6[2];
  *(void *)&long long v20 = *v6;
  *((void *)&v20 + 1) = v11;
  uint64_t v21 = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v13 = sub_22080BA90(a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v13 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v13 >= *(void *)(v20 + 16))
  {
LABEL_10:
    __break(1u);
LABEL_11:
    uint64_t result = (uint64_t)sub_22080AB34(v11);
    uint64_t v11 = result;
    uint64_t *v6 = result;
    goto LABEL_6;
  }
  sub_22080B5B8(v20 + 40 * v13 + 32, (uint64_t)v18);
  sub_2208343B8(v18, (uint64_t)v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41110);
  uint64_t v14 = type metadata accessor for Column();
  swift_dynamicCast();
  uint64_t v22 = type metadata accessor for Column();
  uint64_t v23 = &off_26D2223C0;
  uint64_t v15 = v24;
  Column.map<A>(_:)(a3, a4, v14, a6, &v20);
  swift_release();
  swift_bridgeObjectRelease();
  if (v15) {
    return __swift_deallocate_boxed_opaque_existential_1((uint64_t)&v20);
  }
  uint64_t v11 = *v6;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v6 = v11;
  if ((result & 1) == 0) {
    goto LABEL_11;
  }
LABEL_6:
  if (v13 >= *(void *)(v11 + 16))
  {
    __break(1u);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1Tm(v11 + 40 * v13 + 32);
    return sub_2208343B8(&v20, v11 + 40 * v13 + 32);
  }
  return result;
}

{
  uint64_t *v6;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  void v19[7];
  uint64_t v20;
  uint64_t v21;
  long long v22;
  uint64_t v23;
  long long v24;
  long long v25[2];
  char v26[40];
  long long v27;
  uint64_t v28;
  uint64_t v29;
  _UNKNOWN **v30;
  uint64_t v31;

  long long v20 = a4;
  uint64_t v12 = v6[1];
  unint64_t v13 = v6[2];
  *(void *)&uint64_t v27 = *v6;
  *((void *)&v27 + 1) = v12;
  uint64_t v28 = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_22080BA90(a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v14 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v14 >= *(void *)(v27 + 16))
  {
LABEL_10:
    __break(1u);
LABEL_11:
    uint64_t result = (uint64_t)sub_22080AB34(v12);
    uint64_t v12 = result;
    uint64_t *v6 = result;
    goto LABEL_6;
  }
  sub_22080B5B8(v27 + 40 * v14 + 32, (uint64_t)v25);
  sub_2208343B8(v25, (uint64_t)v26);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41110);
  uint64_t v15 = type metadata accessor for Column();
  uint64_t v16 = swift_dynamicCast();
  uint64_t v21 = v23;
  uint64_t v22 = v24;
  MEMORY[0x270FA5388](v16);
  v19[2] = a5;
  void v19[3] = a6;
  v19[4] = a3;
  v19[5] = v20;
  uint64_t v29 = type metadata accessor for Column();
  uint64_t v30 = &off_26D2223C0;
  uint64_t v17 = v31;
  Column.map<A>(_:)((uint64_t)sub_220834424, (uint64_t)v19, v15, a6, &v27);
  swift_release();
  swift_bridgeObjectRelease();
  if (v17) {
    return __swift_deallocate_boxed_opaque_existential_1((uint64_t)&v27);
  }
  uint64_t v12 = *v6;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v6 = v12;
  if ((result & 1) == 0) {
    goto LABEL_11;
  }
LABEL_6:
  if (v14 >= *(void *)(v12 + 16))
  {
    __break(1u);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1Tm(v12 + 40 * v14 + 32);
    return sub_2208343B8(&v27, v12 + 40 * v14 + 32);
  }
  return result;
}

uint64_t sub_22081068C@<X0>(uint64_t a1@<X0>, void (*a2)(char *)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v18 = a3;
  uint64_t v19 = a2;
  uint64_t v20 = a6;
  uint64_t v9 = sub_22093ED30();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  unint64_t v13 = (char *)&v18 - v12;
  uint64_t v14 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a1, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, a4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 - 8) + 56))(v20, 1, 1, a5);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v13, a4);
    v19(v16);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, a4);
  }
}

uint64_t *DataFrame.append(row:)(uint64_t *result)
{
  uint64_t v2 = v1;
  uint64_t v3 = *result;
  uint64_t v4 = *(void *)(*result + 16);
  uint64_t v5 = *v2;
  if (v4 == *((void *)*v2 + 2))
  {
    if (v4)
    {
      uint64_t v17 = result[3];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        goto LABEL_9;
      }
      while (1)
      {
        uint64_t v6 = 0;
        unint64_t v7 = 0;
        uint64_t v8 = v3 + 32;
        while (1)
        {
          sub_22080B5B8(v8 + v6, (uint64_t)&v19);
          *uint64_t v2 = v5;
          if (v7 >= *((void *)v5 + 2)) {
            break;
          }
          ++v7;
          uint64_t v9 = &v5[v6];
          uint64_t v10 = (uint64_t)&v5[v6 + 32];
          uint64_t v11 = v20;
          uint64_t v12 = v21;
          unint64_t v13 = __swift_project_boxed_opaque_existential_1(&v19, v20);
          v18[3] = v11;
          v18[4] = *(void *)(v12 + 8);
          boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v18);
          (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(boxed_opaque_existential_1, v13, v11);
          uint64_t v15 = *((void *)v9 + 7);
          uint64_t v16 = *((void *)v9 + 8);
          uint64_t v3 = __swift_mutable_project_boxed_opaque_existential_1(v10, v15);
          (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v16 + 56))(v17, v18, v15, v16);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
          uint64_t result = (uint64_t *)sub_22080B0D8((uint64_t)&v19);
          uint64_t v5 = *v2;
          v6 += 40;
          if (v4 == v7) {
            return result;
          }
        }
        __break(1u);
LABEL_9:
        uint64_t v5 = sub_22080AB34((uint64_t)v5);
      }
    }
  }
  else
  {
    sub_22093EEA0();
    sub_22093E6C0();
    sub_22093F1A0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    sub_22093F1A0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    uint64_t result = (uint64_t *)sub_22093F090();
    __break(1u);
  }
  return result;
}

uint64_t DataFrame.append(row:)(uint64_t result)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(result + 16);
  uint64_t v4 = *v1;
  if (v3 == *((void *)*v1 + 2))
  {
    if (v3)
    {
      uint64_t v5 = result;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        goto LABEL_9;
      }
      while (1)
      {
        uint64_t v6 = 0;
        unint64_t v7 = 0;
        for (uint64_t i = v5 + 32; ; i += 32)
        {
          sub_220835280(i, (uint64_t)&v13, qword_26AD40FF8);
          *uint64_t v2 = v4;
          if (v7 >= *((void *)v4 + 2)) {
            break;
          }
          ++v7;
          uint64_t v9 = &v4[v6];
          uint64_t v10 = (uint64_t)&v4[v6 + 32];
          uint64_t v11 = *(void *)&v4[v6 + 56];
          uint64_t v12 = *((void *)v9 + 8);
          uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1(v10, v11);
          (*(void (**)(uint64_t *, uint64_t, uint64_t))(v12 + 24))(&v13, v11, v12);
          uint64_t result = sub_2208352E4((uint64_t)&v13, qword_26AD40FF8);
          uint64_t v4 = *v2;
          v6 += 40;
          if (v3 == v7) {
            return result;
          }
        }
        __break(1u);
LABEL_9:
        uint64_t v4 = sub_22080AB34((uint64_t)v4);
      }
    }
  }
  else
  {
    sub_22093EEA0();
    sub_22093E6C0();
    sub_22093F1A0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    sub_22093F1A0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    uint64_t result = sub_22093F090();
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall DataFrame.append(valuesByColumn:)(Swift::OpaquePointer valuesByColumn)
{
  unint64_t v2 = *v1;
  if (*((void *)valuesByColumn._rawValue + 2) != *(void *)(*v1 + 16))
  {
LABEL_59:
    uint64_t v69 = 0;
    unint64_t v70 = 0xE000000000000000;
    sub_22093EEA0();
    sub_22093E6C0();
    uint64_t v73 = *((void *)valuesByColumn._rawValue + 2);
    sub_22093F1A0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    uint64_t v73 = *(void *)(v2 + 16);
    sub_22093F1A0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    while (1)
    {
      sub_22093F090();
      __break(1u);
LABEL_61:
      swift_bridgeObjectRelease();
      uint64_t v69 = 0;
      unint64_t v70 = 0xE000000000000000;
      sub_22093EEA0();
      sub_22093E6C0();
      sub_22093E6C0();
      sub_22093E6C0();
    }
  }
  uint64_t v3 = (uint64_t)v1;
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_22080A808(v4);
  swift_bridgeObjectRelease();
  unint64_t v2 = sub_220831E98(v5);
  swift_bridgeObjectRelease();
  unint64_t v77 = v2;
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_22080C2EC(v6);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v9 = (uint64_t *)(v7 + 40);
    do
    {
      uint64_t v10 = *(v9 - 1);
      uint64_t v11 = *v9;
      swift_bridgeObjectRetain();
      sub_220827238(&v69, v10, v11);
      swift_bridgeObjectRelease();
      v9 += 2;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
    unint64_t v2 = v77;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  rawValue = valuesByColumn._rawValue;
  uint64_t v13 = swift_bridgeObjectRetain();
  char v14 = sub_22081154C(v13, v2);
  swift_bridgeObjectRelease();
  if ((v14 & 1) == 0)
  {
LABEL_54:
    uint64_t v54 = swift_bridgeObjectRetain();
    uint64_t v55 = sub_22080C3C4(v54);
    uint64_t v56 = v55;
    if (*(void *)(v2 + 16) <= *(void *)(v55 + 16) >> 3)
    {
      uint64_t v69 = v55;
      uint64_t v59 = swift_bridgeObjectRetain();
      sub_220830DDC(v59);
      swift_bridgeObjectRelease();
      uint64_t v58 = v69;
    }
    else
    {
      uint64_t v57 = swift_bridgeObjectRetain();
      uint64_t v58 = sub_220830F84(v57, v56);
      swift_bridgeObjectRelease();
    }
    sub_22080EC0C(v58);
    uint64_t v61 = v60;
    swift_bridgeObjectRelease();
    if (v61) {
      goto LABEL_61;
    }
    __break(1u);
    goto LABEL_59;
  }
  uint64_t v64 = *(void *)(*(void *)v3 + 16);
  if (v64)
  {
    unint64_t v2 = 0;
    v63 = (char **)v3;
    while (1)
    {
      if (v2 >= *(void *)(*(void *)v3 + 16))
      {
        __break(1u);
LABEL_51:
        __break(1u);
        goto LABEL_52;
      }
      sub_22080B5B8(*(void *)v3 + 40 * v2 + 32, (uint64_t)&v69);
      uint64_t v20 = v71;
      uint64_t v19 = v72;
      __swift_project_boxed_opaque_existential_1(&v69, v71);
      uint64_t v21 = (*(uint64_t (**)(uint64_t))(*(void *)(v19 + 8) + 8))(v20);
      uint64_t v23 = v22;
      sub_22080B0D8((uint64_t)&v69);
      if (!rawValue[2]) {
        break;
      }
      uint64_t v24 = sub_22081D32C(v21, v23, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2208222BC);
      if ((v25 & 1) == 0)
      {
        uint64_t v65 = 0;
        uint64_t v66 = 0;
        uint64_t v67 = 0;
        goto LABEL_19;
      }
      sub_220835280(rawValue[7] + 32 * v24, (uint64_t)&v65, qword_26AD40FF8);
LABEL_20:
      swift_bridgeObjectRelease();
      if (v68 != 1)
      {
        sub_220834D3C((uint64_t)&v65, (uint64_t)&v73, qword_26AD40FF8);
        uint64_t v36 = *(char **)v3;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)uint64_t v3 = v36;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v36 = sub_22080AB34((uint64_t)v36);
          *(void *)uint64_t v3 = v36;
        }
        if (v2 < *((void *)v36 + 2))
        {
          uint64_t v38 = &v36[40 * v2];
          uint64_t v39 = *((void *)v38 + 7);
          uint64_t v40 = *((void *)v38 + 8);
          __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v38 + 32), v39);
          (*(void (**)(uint64_t *, uint64_t, uint64_t))(v40 + 24))(&v73, v39, v40);
          *(void *)uint64_t v3 = v36;
          uint64_t v18 = &v73;
          goto LABEL_11;
        }
        goto LABEL_51;
      }
      sub_2208352E4((uint64_t)&v65, &qword_267F185A8);
      uint64_t v26 = swift_bridgeObjectRetain();
      uint64_t v27 = sub_220834104(v26, v3, v2);
      swift_bridgeObjectRelease();
      int64_t v28 = *(void *)(v27 + 16);
      if (v28)
      {
        uint64_t v69 = MEMORY[0x263F8EE78];
        sub_220826C78(0, v28, 0);
        uint64_t v29 = v69;
        uint64_t v30 = (uint64_t *)(v27 + 40);
        do
        {
          uint64_t v32 = *(v30 - 1);
          uint64_t v31 = *v30;
          uint64_t v69 = v29;
          unint64_t v33 = *(void *)(v29 + 16);
          unint64_t v34 = *(void *)(v29 + 24);
          swift_bridgeObjectRetain();
          if (v33 >= v34 >> 1)
          {
            sub_220826C78((char *)(v34 > 1), v33 + 1, 1);
            uint64_t v29 = v69;
          }
          v30 += 4;
          *(void *)(v29 + 16) = v33 + 1;
          uint64_t v35 = v29 + 16 * v33;
          *(void *)(v35 + 32) = v32;
          *(void *)(v35 + 40) = v31;
          --v28;
        }
        while (v28);
        swift_bridgeObjectRelease();
        rawValue = valuesByColumn._rawValue;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v29 = MEMORY[0x263F8EE78];
      }
      uint64_t v41 = *(void *)(v29 + 16);
      uint64_t v3 = (uint64_t)v63;
      if (!v41)
      {
LABEL_45:
        swift_bridgeObjectRelease();
        long long v49 = *v63;
        char v50 = swift_isUniquelyReferenced_nonNull_native();
        *v63 = v49;
        if ((v50 & 1) == 0)
        {
          long long v49 = sub_22080AB34((uint64_t)v49);
          *v63 = v49;
        }
        if (v2 < *((void *)v49 + 2))
        {
          unint64_t v51 = &v49[40 * v2];
          uint64_t v52 = *((void *)v51 + 7);
          uint64_t v53 = *((void *)v51 + 8);
          __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v51 + 32), v52);
          (*(void (**)(uint64_t, uint64_t))(v53 + 16))(v52, v53);
          *v63 = v49;
          goto LABEL_12;
        }
LABEL_52:
        __break(1u);
        goto LABEL_53;
      }
      unint64_t v42 = (uint64_t *)(v29 + 40);
      while (!rawValue[2])
      {
        uint64_t v73 = 0;
        uint64_t v74 = 0;
        uint64_t v75 = 0;
        uint64_t v76 = 1;
LABEL_35:
        v42 += 2;
        sub_2208352E4((uint64_t)&v73, &qword_267F185A8);
        if (!--v41) {
          goto LABEL_45;
        }
      }
      uint64_t v43 = *(v42 - 1);
      uint64_t v44 = *v42;
      swift_bridgeObjectRetain();
      uint64_t v45 = sub_22081D32C(v43, v44, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2208222BC);
      if (v46)
      {
        sub_220835280(rawValue[7] + 32 * v45, (uint64_t)&v73, qword_26AD40FF8);
      }
      else
      {
        uint64_t v73 = 0;
        uint64_t v74 = 0;
        uint64_t v75 = 0;
        uint64_t v76 = 1;
      }
      swift_bridgeObjectRelease();
      if (v76 == 1) {
        goto LABEL_35;
      }
      swift_bridgeObjectRelease();
      sub_220834D3C((uint64_t)&v73, (uint64_t)&v69, qword_26AD40FF8);
      uint64_t v47 = *v63;
      char v48 = swift_isUniquelyReferenced_nonNull_native();
      *v63 = v47;
      if ((v48 & 1) == 0)
      {
        uint64_t v47 = sub_22080AB34((uint64_t)v47);
        *v63 = v47;
      }
      if (v2 >= *((void *)v47 + 2))
      {
LABEL_53:
        __break(1u);
        goto LABEL_54;
      }
      uint64_t v15 = &v47[40 * v2];
      uint64_t v16 = *((void *)v15 + 7);
      uint64_t v17 = *((void *)v15 + 8);
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v15 + 32), v16);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v17 + 24))(&v69, v16, v17);
      *v63 = v47;
      uint64_t v18 = &v69;
LABEL_11:
      sub_2208352E4((uint64_t)v18, qword_26AD40FF8);
LABEL_12:
      if (++v2 == v64) {
        goto LABEL_49;
      }
    }
    uint64_t v65 = 0;
    uint64_t v66 = 0;
    uint64_t v67 = 0;
LABEL_19:
    uint64_t v68 = 1;
    goto LABEL_20;
  }
LABEL_49:
  swift_bridgeObjectRelease();
}

uint64_t sub_22081154C(uint64_t a1, uint64_t a2)
{
  int64_t v3 = 0;
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t result = a1 + 64;
  uint64_t v5 = v6;
  uint64_t v7 = 1 << *(unsigned char *)(result - 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & v5;
  uint64_t v30 = result;
  int64_t v31 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v10 = a2 + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v12 = v11 | (v3 << 6);
      if (!*(void *)(a2 + 16)) {
        goto LABEL_40;
      }
      goto LABEL_25;
    }
    int64_t v13 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_44;
    }
    if (v13 >= v31) {
      goto LABEL_41;
    }
    unint64_t v14 = *(void *)(v30 + 8 * v13);
    ++v3;
    if (!v14)
    {
      int64_t v3 = v13 + 1;
      if (v13 + 1 >= v31) {
        goto LABEL_41;
      }
      unint64_t v14 = *(void *)(v30 + 8 * v3);
      if (!v14)
      {
        int64_t v3 = v13 + 2;
        if (v13 + 2 >= v31) {
          goto LABEL_41;
        }
        unint64_t v14 = *(void *)(v30 + 8 * v3);
        if (!v14)
        {
          int64_t v3 = v13 + 3;
          if (v13 + 3 >= v31) {
            goto LABEL_41;
          }
          unint64_t v14 = *(void *)(v30 + 8 * v3);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_24:
    unint64_t v9 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v3 << 6);
    if (!*(void *)(a2 + 16))
    {
LABEL_40:
      swift_release();
      return 0;
    }
LABEL_25:
    uint64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    sub_22093F430();
    swift_bridgeObjectRetain();
    sub_22093E650();
    uint64_t v19 = sub_22093F490();
    uint64_t v20 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v21 = v19 & ~v20;
    if (((*(void *)(v10 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
      goto LABEL_39;
    }
    uint64_t v22 = *(void *)(a2 + 48);
    uint64_t v23 = (void *)(v22 + 16 * v21);
    BOOL v24 = *v23 == v18 && v23[1] == v17;
    if (!v24 && (sub_22093F250() & 1) == 0)
    {
      uint64_t v25 = ~v20;
      for (unint64_t i = v21 + 1; ; unint64_t i = v27 + 1)
      {
        uint64_t v27 = i & v25;
        if (((*(void *)(v10 + (((i & v25) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v25)) & 1) == 0) {
          break;
        }
        int64_t v28 = (void *)(v22 + 16 * v27);
        BOOL v29 = *v28 == v18 && v28[1] == v17;
        if (v29 || (sub_22093F250() & 1) != 0) {
          goto LABEL_5;
        }
      }
LABEL_39:
      swift_release();
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_5:
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v15 = v13 + 4;
  if (v15 >= v31)
  {
LABEL_41:
    swift_release();
    return 1;
  }
  unint64_t v14 = *(void *)(v30 + 8 * v15);
  if (v14)
  {
    int64_t v3 = v15;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v3 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v3 >= v31) {
      goto LABEL_41;
    }
    unint64_t v14 = *(void *)(v30 + 8 * v3);
    ++v15;
    if (v14) {
      goto LABEL_24;
    }
  }
LABEL_44:
  __break(1u);
  return result;
}

Swift::Void __swiftcall DataFrame.appendEmptyRow()()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *((void *)*v0 + 2);
  if (v2)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_9:
    }
      uint64_t v1 = sub_22080AB34((uint64_t)v1);
    unint64_t v3 = 0;
    *uint64_t v0 = v1;
    uint64_t v4 = (uint64_t)(v1 + 32);
    do
    {
      if (v3 >= *((void *)v1 + 2))
      {
        __break(1u);
        goto LABEL_9;
      }
      ++v3;
      uint64_t v5 = *(void *)(v4 + 24);
      uint64_t v6 = *(void *)(v4 + 32);
      __swift_mutable_project_boxed_opaque_existential_1(v4, v5);
      (*(void (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
      v4 += 40;
    }
    while (v2 != v3);
    *uint64_t v0 = v1;
  }
}

uint64_t *DataFrame.insert(row:at:)(uint64_t *result, uint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v4 = *result;
  uint64_t v5 = *(void *)(*result + 16);
  uint64_t v6 = *v3;
  if (v5 == *((void *)*v3 + 2))
  {
    if (v5)
    {
      uint64_t v18 = result[3];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        goto LABEL_9;
      }
      while (1)
      {
        uint64_t v7 = 0;
        unint64_t v8 = 0;
        uint64_t v9 = v4 + 32;
        while (1)
        {
          sub_22080B5B8(v9 + v7, (uint64_t)&v21);
          *unint64_t v3 = v6;
          if (v8 >= *((void *)v6 + 2)) {
            break;
          }
          ++v8;
          uint64_t v10 = &v6[v7];
          uint64_t v11 = (uint64_t)&v6[v7 + 32];
          uint64_t v13 = v22;
          uint64_t v12 = v23;
          unint64_t v14 = __swift_project_boxed_opaque_existential_1(&v21, v22);
          v20[3] = v13;
          v20[4] = *(void *)(v12 + 8);
          boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
          (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(boxed_opaque_existential_1, v14, v13);
          uint64_t v16 = *((void *)v10 + 7);
          uint64_t v17 = *((void *)v10 + 8);
          uint64_t v4 = __swift_mutable_project_boxed_opaque_existential_1(v11, v16);
          (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t))(v17 + 64))(v18, v20, a2, v16, v17);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
          uint64_t result = (uint64_t *)sub_22080B0D8((uint64_t)&v21);
          uint64_t v6 = *v3;
          v7 += 40;
          if (v5 == v8) {
            return result;
          }
        }
        __break(1u);
LABEL_9:
        uint64_t v6 = sub_22080AB34((uint64_t)v6);
      }
    }
  }
  else
  {
    sub_22093EEA0();
    sub_22093E6C0();
    sub_22093F1A0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    sub_22093F1A0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    uint64_t result = (uint64_t *)sub_22093F090();
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall DataFrame.removeRow(at:)(Swift::Int at)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *((void *)*v1 + 2);
  if (v3)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_9:
    }
      uint64_t v2 = sub_22080AB34((uint64_t)v2);
    unint64_t v5 = 0;
    *uint64_t v1 = v2;
    uint64_t v6 = (uint64_t)(v2 + 32);
    do
    {
      if (v5 >= *((void *)v2 + 2))
      {
        __break(1u);
        goto LABEL_9;
      }
      ++v5;
      uint64_t v7 = *(void *)(v6 + 24);
      uint64_t v8 = *(void *)(v6 + 32);
      __swift_mutable_project_boxed_opaque_existential_1(v6, v7);
      (*(void (**)(Swift::Int, uint64_t, uint64_t))(v8 + 80))(at, v7, v8);
      v6 += 40;
    }
    while (v3 != v5);
    *uint64_t v1 = v2;
  }
}

uint64_t DataFrame.prefix(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_220811C34(a1, (uint64_t (*)(uint64_t, void, uint64_t, uint64_t))sub_2208EE658, a2);
}

uint64_t DataFrame.suffix(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_220811C34(a1, (uint64_t (*)(uint64_t, void, uint64_t, uint64_t))sub_220811DD0, a2);
}

uint64_t sub_220811C34@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, void, uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = a2;
  uint64_t v5 = a1;
  uint64_t v7 = *v3;
  uint64_t v8 = v3[1];
  uint64_t v9 = v3[2];
  if (!*(void *)(*v3 + 16))
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    goto LABEL_6;
  }
  sub_22080B5B8(v7 + 32, (uint64_t)v24);
  uint64_t v11 = v25;
  uint64_t v12 = v26;
  __swift_project_boxed_opaque_existential_1(v24, v25);
  uint64_t v13 = *(void *)(v12 + 8);
  unint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 48);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v15 = v14(v11, v13);
  uint64_t result = sub_22080B0D8((uint64_t)v24);
  if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v4 = a2;
    uint64_t v5 = a1;
    if (v15)
    {
      uint64_t v17 = 0;
LABEL_7:
      sub_220831F30(0, v15, v17);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22080B6B4(0, v15, v17);
      uint64_t v18 = v4(v5, 0, v15, v17);
      uint64_t v20 = v19;
      char v22 = v21;
      uint64_t result = sub_22080B6B4(0, v15, v17);
      *(void *)a3 = v7;
      *(void *)(a3 + 8) = v8;
      *(void *)(a3 + 16) = v9;
      *(void *)(a3 + 24) = v18;
      *(void *)(a3 + 32) = v20;
      *(unsigned char *)(a3 + 40) = v22;
      return result;
    }
LABEL_6:
    uint64_t v15 = 0;
    uint64_t v17 = 2;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_220811DD0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 != 2)
  {
    if (a4 != 1)
    {
      uint64_t v7 = 1;
      goto LABEL_7;
    }
    uint64_t v7 = *(void *)(a2 + 16);
    if (v7)
    {
      swift_bridgeObjectRetain();
LABEL_7:
      uint64_t v9 = 0;
      uint64_t v10 = v7 - 1;
      uint64_t v11 = (uint64_t *)(a2 + 16 * v7 + 24);
      uint64_t v8 = (char *)MEMORY[0x263F8EE78];
      while (1)
      {
        if (a4)
        {
          if (v10 >= *(void *)(a2 + 16)) {
            goto LABEL_37;
          }
        }
        else if (v10 >= 1)
        {
          goto LABEL_37;
        }
        if (a4)
        {
          if (v10 >= *(void *)(a2 + 16)) {
            goto LABEL_40;
          }
          uint64_t v12 = *(v11 - 1);
          uint64_t v13 = *v11;
        }
        else
        {
          uint64_t v12 = a2;
          uint64_t v13 = a3;
          if (v10) {
            goto LABEL_41;
          }
        }
        uint64_t v14 = v13 - v12;
        if (__OFSUB__(v13, v12)) {
          goto LABEL_38;
        }
        uint64_t v15 = v9 + v14;
        if (__OFADD__(v9, v14)) {
          goto LABEL_39;
        }
        if (v15 > a1) {
          break;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v8 = sub_22081B3EC(0, *((void *)v8 + 2) + 1, 1, v8);
        }
        unint64_t v4 = *((void *)v8 + 2);
        unint64_t v16 = *((void *)v8 + 3);
        if (v4 >= v16 >> 1) {
          uint64_t v8 = sub_22081B3EC((char *)(v16 > 1), v4 + 1, 1, v8);
        }
        *((void *)v8 + 2) = v4 + 1;
        uint64_t v17 = &v8[16 * v4];
        *((void *)v17 + 4) = v12;
        *((void *)v17 + 5) = v13;
        --v10;
        v11 -= 2;
        uint64_t v9 = v15;
        if (v10 == -1) {
          goto LABEL_30;
        }
      }
      if (__OFSUB__(a1, v9))
      {
        __break(1u);
      }
      else
      {
        unint64_t v4 = sub_22081B37C(a1 - v9, v12, v13);
        uint64_t v12 = v18;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
LABEL_27:
          unint64_t v20 = *((void *)v8 + 2);
          unint64_t v19 = *((void *)v8 + 3);
          if (v20 >= v19 >> 1) {
            uint64_t v8 = sub_22081B3EC((char *)(v19 > 1), v20 + 1, 1, v8);
          }
          *((void *)v8 + 2) = v20 + 1;
          char v21 = &v8[16 * v20];
          *((void *)v21 + 4) = v4;
          *((void *)v21 + 5) = v12;
LABEL_30:
          sub_22080B6B4(a2, a3, a4);
          goto LABEL_31;
        }
      }
      uint64_t v8 = sub_22081B3EC(0, *((void *)v8 + 2) + 1, 1, v8);
      goto LABEL_27;
    }
  }
  uint64_t v8 = (char *)MEMORY[0x263F8EE78];
LABEL_31:
  uint64_t v22 = *((void *)v8 + 2);
  if (v22)
  {
    uint64_t v23 = (uint64_t *)&v8[16 * v22 + 24];
    while (v22 <= *((void *)v8 + 2))
    {
      --v22;
      sub_220869870(*(v23 - 1), *v23);
      v23 -= 2;
      if (!v22) {
        goto LABEL_35;
      }
    }
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
  }
LABEL_35:
  swift_bridgeObjectRelease();
  return 0;
}

Swift::Void __swiftcall DataFrame.append(rowsOf:)(TabularData::DataFrame rowsOf)
{
  uint64_t v3 = v1;
  uint64_t v4 = *(void *)rowsOf.columns._rawValue;
  uint64_t v5 = *v1;
  uint64_t v6 = *((void *)v5 + 2);
  if (v6 != *(void *)(*(void *)rowsOf.columns._rawValue + 16))
  {
    while (1)
    {
LABEL_29:
      sub_22093F090();
      __break(1u);
LABEL_30:
      sub_22080B5B8((uint64_t)&v25[v2 + 32], (uint64_t)&v34);
      uint64_t v27 = v36;
      uint64_t v26 = v37;
      __swift_project_boxed_opaque_existential_1(&v34, v36);
      (*(void (**)(uint64_t))(*(void *)(v26 + 8) + 8))(v27);
      sub_22080B0D8((uint64_t)&v34);
      sub_22093E6C0();
      swift_bridgeObjectRelease();
      sub_22093E6C0();
      sub_22080B5B8(v30 + v2, (uint64_t)&v34);
      uint64_t v28 = v36;
      uint64_t v29 = v37;
      __swift_project_boxed_opaque_existential_1(&v34, v36);
      (*(void (**)(uint64_t))(*(void *)(v29 + 8) + 8))(v28);
      sub_22080B0D8((uint64_t)&v34);
      sub_22093E6C0();
      swift_bridgeObjectRelease();
      sub_22093E6C0();
    }
  }
  if (v6)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      goto LABEL_26;
    }
    while (1)
    {
      uint64_t v2 = 0;
      unint64_t v7 = 0;
      *uint64_t v3 = v5;
      uint64_t v30 = v4 + 32;
      while (v6 != v7)
      {
        if (v7 >= *((void *)v5 + 2)) {
          goto LABEL_22;
        }
        sub_22080B5B8((uint64_t)&v5[v2 + 32], (uint64_t)&v34);
        uint64_t v9 = v36;
        uint64_t v8 = v37;
        uint64_t v10 = (char *)__swift_project_boxed_opaque_existential_1(&v34, v36);
        uint64_t v11 = *(uint64_t (**)(uint64_t))(*(void *)(v8 + 8) + 8);
        uint64_t v5 = v10;
        uint64_t v12 = v11(v9);
        uint64_t v14 = v13;
        sub_22080B0D8((uint64_t)&v34);
        if (v7 >= *(void *)(v4 + 16)) {
          goto LABEL_23;
        }
        sub_22080B5B8(v30 + v2, (uint64_t)v31);
        uint64_t v16 = v32;
        uint64_t v15 = v33;
        __swift_project_boxed_opaque_existential_1(v31, v32);
        uint64_t v17 = (*(uint64_t (**)(uint64_t))(*(void *)(v15 + 8) + 8))(v16);
        uint64_t v19 = v18;
        sub_22080B0D8((uint64_t)v31);
        if (v12 == v17 && v14 == v19)
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v21 = sub_22093F250();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v21 & 1) == 0)
          {
            uint64_t v34 = 0;
            unint64_t v35 = 0xE000000000000000;
            sub_22093EEA0();
            v31[0] = v34;
            v31[1] = v35;
            sub_22093E6C0();
            uint64_t v25 = *v3;
            if (v7 < *((void *)*v3 + 2)) {
              goto LABEL_30;
            }
            __break(1u);
            goto LABEL_29;
          }
        }
        uint64_t v5 = *v3;
        if (v7 >= *((void *)*v3 + 2)) {
          goto LABEL_24;
        }
        sub_22080B5B8(v30 + v2, (uint64_t)&v34);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v3 = v5;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v5 = sub_22080AB34((uint64_t)v5);
          *uint64_t v3 = v5;
        }
        if (v7 >= *((void *)v5 + 2)) {
          goto LABEL_25;
        }
        ++v7;
        uint64_t v23 = *(void *)&v5[v2 + 56];
        uint64_t v24 = *(void *)&v5[v2 + 64];
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v5[v2 + 32], v23);
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(v24 + 40))(&v34, v23, v24);
        sub_22080B0D8((uint64_t)&v34);
        uint64_t v5 = *v3;
        v2 += 40;
        if (v6 == v7) {
          return;
        }
      }
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      uint64_t v5 = sub_22080AB34((uint64_t)v5);
    }
  }
}

Swift::Void __swiftcall DataFrame.append(_:)(TabularData::DataFrame a1)
{
  uint64_t v4 = *(void *)a1.columns._rawValue;
  uint64_t v5 = (char **)MEMORY[0x263F8EE88];
  unint64_t v77 = (char **)MEMORY[0x263F8EE88];
  uint64_t v64 = v4;
  uint64_t v66 = *(char **)(v4 + 16);
  if (!v66)
  {
LABEL_30:
    if (!v5[2]) {
      goto LABEL_55;
    }
    if (*(void *)(v64 + 16))
    {
      sub_22080B5B8(v64 + 32, (uint64_t)v74);
      uint64_t v1 = v75;
      uint64_t v40 = v76;
      __swift_project_boxed_opaque_existential_1(v74, (uint64_t)v75);
      uint64_t v41 = *(char **)(v40 + 8);
      uint64_t v43 = (uint64_t (*)(char *, char *))*((void *)v41 + 6);
      uint64_t v42 = (uint64_t)(v41 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v44 = v43(v1, v41);
      sub_22080B0D8((uint64_t)v74);
      if (v44 < 0)
      {
        __break(1u);
        goto LABEL_66;
      }
      if (v44)
      {
        char v45 = 0;
        goto LABEL_37;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t v44 = 0;
    char v45 = 2;
LABEL_37:
    uint64_t v42 = sub_2208EE804(0, v44, v45);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22080B6B4(0, v44, v45);
    uint64_t v41 = *v65;
    uint64_t v3 = (char *)*((void *)*v65 + 2);
    if (v3)
    {
      if (swift_isUniquelyReferenced_nonNull_native())
      {
LABEL_39:
        char v46 = 0;
        *uint64_t v65 = v41;
        uint64_t v68 = v5 + 7;
        while (1)
        {
          if (v46 == v3) {
            goto LABEL_59;
          }
          if (v5[2])
          {
            uint64_t v47 = sub_22093F420();
            uint64_t v48 = -1 << *((unsigned char *)v5 + 32);
            unint64_t v49 = v47 & ~v48;
            if ((*(unint64_t *)((char *)v68 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49))
            {
              char v50 = v5[6];
              if (*(char **)&v50[8 * v49] == v46) {
                goto LABEL_40;
              }
              uint64_t v51 = ~v48;
              while (1)
              {
                unint64_t v49 = (v49 + 1) & v51;
                if (((*(unint64_t *)((char *)v68 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49) & 1) == 0) {
                  break;
                }
                if (*(char **)&v50[8 * v49] == v46) {
                  goto LABEL_40;
                }
              }
            }
          }
          if (v42 < 0) {
            goto LABEL_63;
          }
          if (v42)
          {
            uint64_t v52 = (uint64_t)&v41[40 * (void)v46 + 32];
            uint64_t v53 = v42;
            while ((unint64_t)v46 < *((void *)v41 + 2))
            {
              uint64_t v1 = *(char **)(v52 + 24);
              uint64_t v54 = *(void *)(v52 + 32);
              __swift_mutable_project_boxed_opaque_existential_1(v52, (uint64_t)v1);
              (*(void (**)(char *, uint64_t))(v54 + 16))(v1, v54);
              if (!--v53) {
                goto LABEL_40;
              }
            }
            __break(1u);
            goto LABEL_58;
          }
LABEL_40:
          if (++v46 == v3)
          {
            swift_bridgeObjectRelease();
            *uint64_t v65 = v41;
            return;
          }
        }
      }
LABEL_66:
      uint64_t v41 = sub_22080AB34((uint64_t)v41);
      goto LABEL_39;
    }
LABEL_55:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v1 = *v2;
  swift_bridgeObjectRetain();
  uint64_t v5 = v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_64;
  }
LABEL_3:
  uint64_t v6 = 0;
  *uint64_t v5 = v1;
  while (1)
  {
    if (__OFADD__(v6, 1))
    {
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      uint64_t v1 = sub_22080AB34((uint64_t)v1);
      goto LABEL_3;
    }
    uint64_t v67 = v6 + 1;
    sub_22080B5B8(v64 + 32 + 40 * (void)v6, (uint64_t)v74);
    uint64_t v3 = v5[2];
    uint64_t v1 = v75;
    uint64_t v7 = v76;
    __swift_project_boxed_opaque_existential_1(v74, (uint64_t)v75);
    uint64_t v8 = *(void *)(v7 + 8);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v10 = v9(v1, v8);
    uint64_t v12 = v10;
    uint64_t v13 = v11;
    if (*((void *)v3 + 2))
    {
      uint64_t v14 = sub_22081D32C(v10, v11, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2208222BC);
      if (v15)
      {
        unint64_t v16 = *(void *)(*((void *)v3 + 7) + 8 * v14);
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v26 = swift_bridgeObjectRetain();
    uint64_t v27 = sub_22083217C(v26, v12, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int64_t v28 = *(void *)(v27 + 16);
    if (v28) {
      break;
    }
    swift_bridgeObjectRelease();
    uint64_t v29 = (void *)MEMORY[0x263F8EE78];
    uint64_t v36 = *(void *)(MEMORY[0x263F8EE78] + 16);
    if (v36) {
      goto LABEL_23;
    }
LABEL_4:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v1 = v67;
    sub_22080B0D8((uint64_t)v74);
LABEL_5:
    uint64_t v6 = v1;
    if (v1 == v66)
    {
      swift_bridgeObjectRelease();
      uint64_t v5 = v77;
      goto LABEL_30;
    }
  }
  v71[0] = MEMORY[0x263F8EE78];
  sub_220826C78(0, v28, 0);
  uint64_t v29 = (void *)v71[0];
  uint64_t v30 = (uint64_t *)(v27 + 56);
  do
  {
    uint64_t v32 = *(v30 - 1);
    uint64_t v31 = *v30;
    v71[0] = v29;
    unint64_t v34 = v29[2];
    unint64_t v33 = v29[3];
    swift_bridgeObjectRetain();
    if (v34 >= v33 >> 1)
    {
      sub_220826C78((char *)(v33 > 1), v34 + 1, 1);
      uint64_t v29 = (void *)v71[0];
    }
    v29[2] = v34 + 1;
    unint64_t v35 = &v29[2 * v34];
    v35[4] = v32;
    v35[5] = v31;
    v30 += 4;
    --v28;
  }
  while (v28);
  swift_bridgeObjectRelease();
  uint64_t v5 = v65;
  uint64_t v36 = v29[2];
  if (!v36) {
    goto LABEL_4;
  }
LABEL_23:
  uint64_t v1 = (char *)v29[4];
  uint64_t v37 = v29[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v36 != 1) {
    goto LABEL_4;
  }
  if (!*((void *)v3 + 2)) {
    goto LABEL_4;
  }
  uint64_t v38 = sub_22081D32C((uint64_t)v1, v37, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2208222BC);
  if ((v39 & 1) == 0) {
    goto LABEL_4;
  }
  unint64_t v16 = *(void *)(*((void *)v3 + 7) + 8 * v38);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_10:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v16 & 0x8000000000000000) != 0) {
    goto LABEL_60;
  }
  uint64_t v17 = *v5;
  if (v16 >= *((void *)*v5 + 2)) {
    goto LABEL_61;
  }
  sub_22080B5B8((uint64_t)&v17[40 * v16 + 32], (uint64_t)v71);
  uint64_t v18 = v72;
  uint64_t v19 = v73;
  __swift_project_boxed_opaque_existential_1(v71, v72);
  uint64_t v1 = (char *)(*(uint64_t (**)(uint64_t))(*(void *)(v19 + 8) + 80))(v18);
  uint64_t v21 = (uint64_t)v75;
  uint64_t v20 = v76;
  __swift_project_boxed_opaque_existential_1(v74, (uint64_t)v75);
  if (v1 == (char *)(*(uint64_t (**)(uint64_t))(*(void *)(v20 + 8) + 80))(v21))
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v5 = v17;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v17 = sub_22080AB34((uint64_t)v17);
      *uint64_t v5 = v17;
    }
    if (v16 >= *((void *)v17 + 2)) {
      goto LABEL_62;
    }
    uint64_t v23 = &v17[40 * v16];
    uint64_t v24 = *((void *)v23 + 7);
    uint64_t v25 = *((void *)v23 + 8);
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v23 + 32), v24);
    (*(void (**)(void *, uint64_t, uint64_t))(v25 + 40))(v74, v24, v25);
    *uint64_t v5 = v17;
    sub_2208273E8(&v69, v16);
    sub_22080B0D8((uint64_t)v71);
    sub_22080B0D8((uint64_t)v74);
    uint64_t v1 = v67;
    goto LABEL_5;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v69 = 0;
  unint64_t v70 = 0xE000000000000000;
  sub_22093EEA0();
  swift_bridgeObjectRelease();
  uint64_t v69 = 0xD00000000000001CLL;
  unint64_t v70 = 0x800000022093FD90;
  uint64_t v55 = v72;
  uint64_t v56 = v73;
  __swift_project_boxed_opaque_existential_1(v71, v72);
  (*(void (**)(uint64_t))(*(void *)(v56 + 8) + 8))(v55);
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  uint64_t v69 = 0xD000000000000018;
  unint64_t v70 = 0x800000022093FD70;
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  uint64_t v58 = v69;
  unint64_t v57 = v70;
  uint64_t v60 = v72;
  uint64_t v59 = v73;
  __swift_project_boxed_opaque_existential_1(v71, v72);
  (*(void (**)(uint64_t))(*(void *)(v59 + 8) + 80))(v60);
  uint64_t v69 = sub_22093F530();
  unint64_t v70 = v61;
  sub_22093E6C0();
  uint64_t v63 = (uint64_t)v75;
  uint64_t v62 = v76;
  __swift_project_boxed_opaque_existential_1(v74, (uint64_t)v75);
  (*(void (**)(uint64_t))(*(void *)(v62 + 8) + 80))(v63);
  sub_22093F530();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  uint64_t v69 = v58;
  unint64_t v70 = v57;
  swift_bridgeObjectRetain();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22093F090();
  __break(1u);
}

uint64_t sub_220812DA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_22093F430();
    sub_22093E650();
    uint64_t v6 = sub_22093F490();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_22093F250() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          unint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_22093F250() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

BOOL sub_220812ED8(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v4 = sub_22093F420();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(void *)(v8 + 8 * v6) == a1) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    uint64_t v12 = *(void *)(v8 + 8 * v11);
    BOOL result = v12 == a1;
    if (v12 == a1) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_220812FA4(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  sub_22093F430();
  sub_220835280(a1, (uint64_t)&v19, &qword_267F18658);
  if (*((void *)&v20 + 1))
  {
    v17[0] = v19;
    v17[1] = v20;
    uint64_t v18 = v21;
    sub_22093F450();
    sub_22093EE60();
    sub_220834CE8((uint64_t)v17);
  }
  else
  {
    sub_22093F450();
  }
  uint64_t v4 = sub_22093F490();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v7 = ~v5;
  while (1)
  {
    sub_220835280(*(void *)(a2 + 48) + 40 * v6, (uint64_t)&v19, &qword_267F18658);
    sub_220835280((uint64_t)&v19, (uint64_t)v12, &qword_267F18658);
    sub_220835280(a1, (uint64_t)&v14, &qword_267F18658);
    if (!v13) {
      break;
    }
    sub_220835280((uint64_t)v12, (uint64_t)v17, &qword_267F18658);
    if (!*((void *)&v15 + 1))
    {
      sub_220834CE8((uint64_t)v17);
      goto LABEL_8;
    }
    v10[0] = v14;
    v10[1] = v15;
    uint64_t v11 = v16;
    char v8 = MEMORY[0x223C6A560](v17, v10);
    sub_220834CE8((uint64_t)v10);
    sub_220834CE8((uint64_t)v17);
    sub_2208352E4((uint64_t)v12, &qword_267F18658);
    sub_2208352E4((uint64_t)&v19, &qword_267F18658);
    if (v8) {
      return 1;
    }
LABEL_9:
    unint64_t v6 = (v6 + 1) & v7;
    if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
      return 0;
    }
  }
  if (*((void *)&v15 + 1))
  {
LABEL_8:
    sub_2208352E4((uint64_t)v12, &qword_267F18660);
    sub_2208352E4((uint64_t)&v19, &qword_267F18658);
    goto LABEL_9;
  }
  sub_2208352E4((uint64_t)v12, &qword_267F18658);
  sub_2208352E4((uint64_t)&v19, &qword_267F18658);
  return 1;
}

uint64_t sub_2208131D0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v90 = *MEMORY[0x263EF8340];
  if (*(void *)(a3 + 16))
  {
    sub_22093F430();
    unint64_t v6 = a2 >> 60;
    sub_22093F450();
    if (a2 >> 60 != 15)
    {
      sub_22080B7F4(a1, a2);
      sub_22093E010();
      sub_220834944(a1, a2);
    }
    uint64_t v7 = sub_22093F490();
    uint64_t v8 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v9 = v7 & ~v8;
    if ((*(void *)(a3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
    {
      uint64_t v10 = ~v8;
      BOOL v11 = __OFSUB__(HIDWORD(a1), a1);
      BOOL v80 = v11;
      unint64_t v82 = a2 >> 62;
      uint64_t v81 = ~v8;
      uint64_t v79 = a1 >> 32;
      uint64_t v78 = (a1 >> 32) - (int)a1;
      do
      {
        uint64_t v12 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v9);
        uint64_t v14 = *v12;
        unint64_t v13 = v12[1];
        if (v13 >> 60 == 15)
        {
          if (v6 > 0xE) {
            return 1;
          }
LABEL_10:
          sub_220834CD4(a1, a2);
          sub_220834CD4(v14, v13);
          sub_220834944(v14, v13);
          sub_220834944(a1, a2);
          goto LABEL_11;
        }
        if (v6 > 0xE) {
          goto LABEL_10;
        }
        uint64_t v15 = 0;
        switch(v13 >> 62)
        {
          case 1uLL:
            LODWORD(v15) = HIDWORD(v14) - v14;
            if (__OFSUB__(HIDWORD(v14), v14))
            {
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
LABEL_147:
              __break(1u);
LABEL_148:
              __break(1u);
LABEL_149:
              __break(1u);
            }
            uint64_t v15 = (int)v15;
LABEL_19:
            uint64_t v19 = BYTE6(a2);
            switch((int)v82)
            {
              case 1:
                uint64_t v19 = HIDWORD(a1) - (int)a1;
                if (v80) {
                  goto LABEL_129;
                }
                goto LABEL_23;
              case 2:
                uint64_t v21 = *(void *)(a1 + 16);
                uint64_t v20 = *(void *)(a1 + 24);
                BOOL v18 = __OFSUB__(v20, v21);
                uint64_t v19 = v20 - v21;
                if (!v18) {
                  goto LABEL_23;
                }
                goto LABEL_130;
              case 3:
                if (!v15) {
                  return 1;
                }
                goto LABEL_11;
              default:
LABEL_23:
                if (v15 != v19) {
                  goto LABEL_11;
                }
                if (v15 < 1) {
                  return 1;
                }
                break;
            }
            break;
          case 2uLL:
            uint64_t v17 = *(void *)(v14 + 16);
            uint64_t v16 = *(void *)(v14 + 24);
            BOOL v18 = __OFSUB__(v16, v17);
            uint64_t v15 = v16 - v17;
            if (!v18) {
              goto LABEL_19;
            }
            goto LABEL_128;
          case 3uLL:
            goto LABEL_19;
          default:
            uint64_t v15 = BYTE6(v13);
            goto LABEL_19;
        }
        switch(v13 >> 62)
        {
          case 1uLL:
            if ((int)v14 > v14 >> 32) {
              goto LABEL_131;
            }
            sub_22080B7F4(v14, v13);
            sub_220834CD4(v14, v13);
            sub_220834CD4(a1, a2);
            sub_220834CD4(v14, v13);
            uint64_t v26 = sub_22093DE40();
            if (v26)
            {
              uint64_t v27 = v26;
              uint64_t v28 = sub_22093DE60();
              if (__OFSUB__((int)v14, v28)) {
                goto LABEL_133;
              }
              uint64_t v74 = (void *)(v27 + (int)v14 - v28);
            }
            else
            {
              uint64_t v74 = 0;
            }
            unint64_t v6 = a2 >> 60;
            uint64_t v10 = v81;
            sub_22093DE50();
            if (v82)
            {
              if (v82 == 1)
              {
                if (v79 < (int)a1) {
                  goto LABEL_142;
                }
                swift_retain();
                uint64_t v42 = (char *)sub_22093DE40();
                if (v42)
                {
                  uint64_t v43 = sub_22093DE60();
                  if (__OFSUB__((int)a1, v43)) {
                    goto LABEL_149;
                  }
                  v42 += (int)a1 - v43;
                }
                uint64_t v44 = sub_22093DE50();
                size_t v45 = (a1 >> 32) - (int)a1;
                if (v44 < v78) {
                  size_t v45 = v44;
                }
                if (!v74) {
                  goto LABEL_154;
                }
                if (!v42) {
                  goto LABEL_155;
                }
                int v41 = memcmp(v74, v42, v45);
                sub_220834944(a1, a2);
              }
              else
              {
                uint64_t v58 = *(void *)(a1 + 16);
                uint64_t v73 = *(char **)(a1 + 24);
                swift_retain();
                swift_retain();
                uint64_t v59 = (char *)sub_22093DE40();
                if (v59)
                {
                  uint64_t v60 = sub_22093DE60();
                  if (__OFSUB__(v58, v60)) {
                    goto LABEL_148;
                  }
                  v59 += v58 - v60;
                }
                BOOL v18 = __OFSUB__(v73, v58);
                unint64_t v61 = &v73[-v58];
                if (v18) {
                  goto LABEL_143;
                }
                uint64_t v62 = sub_22093DE50();
                if (v62 >= (uint64_t)v61) {
                  size_t v63 = (size_t)v61;
                }
                else {
                  size_t v63 = v62;
                }
                if (!v74) {
                  goto LABEL_160;
                }
                unint64_t v6 = a2 >> 60;
                if (!v59) {
                  goto LABEL_161;
                }
                int v41 = memcmp(v74, v59, v63);
LABEL_110:
                swift_release();
LABEL_111:
                swift_release();
              }
              sub_220834944(a1, a2);
              sub_220834944(v14, v13);
              sub_220834944(v14, v13);
              sub_22080B88C(v14, v13);
              uint64_t v10 = v81;
              if (!v41) {
                return 1;
              }
            }
            else
            {
              *(void *)__s1 = a1;
              *(_WORD *)&__s1[8] = a2;
              __s1[10] = BYTE2(a2);
              __s1[11] = BYTE3(a2);
              __s1[12] = BYTE4(a2);
              __s1[13] = BYTE5(a2);
              if (!v74) {
                goto LABEL_159;
              }
              int v51 = memcmp(v74, __s1, BYTE6(a2));
LABEL_98:
              sub_220834944(a1, a2);
              sub_220834944(v14, v13);
              sub_220834944(v14, v13);
              sub_22080B88C(v14, v13);
              if (!v51) {
                return 1;
              }
            }
            goto LABEL_11;
          case 2uLL:
            uint64_t v69 = *(char **)(v14 + 16);
            sub_22080B7F4(v14, v13);
            sub_220834CD4(v14, v13);
            sub_220834CD4(a1, a2);
            sub_220834CD4(v14, v13);
            swift_retain();
            swift_retain();
            uint64_t v29 = sub_22093DE40();
            if (v29)
            {
              uint64_t v30 = v29;
              uint64_t v31 = sub_22093DE60();
              if (__OFSUB__(v69, v31)) {
                goto LABEL_132;
              }
              unint64_t v70 = &v69[v30 - v31];
            }
            else
            {
              unint64_t v70 = 0;
            }
            sub_22093DE50();
            uint64_t v10 = v81;
            if (!v82)
            {
              *(void *)__s1 = a1;
              *(_WORD *)&__s1[8] = a2;
              __s1[10] = BYTE2(a2);
              __s1[11] = BYTE3(a2);
              __s1[12] = BYTE4(a2);
              __s1[13] = BYTE5(a2);
              if (!v70) {
                goto LABEL_156;
              }
              int v51 = memcmp(v70, __s1, BYTE6(a2));
              swift_release();
              swift_release();
              goto LABEL_98;
            }
            if (v82 == 1)
            {
              if (v79 < (int)a1) {
                goto LABEL_136;
              }
              swift_retain();
              uint64_t v37 = (char *)sub_22093DE40();
              if (v37)
              {
                uint64_t v38 = sub_22093DE60();
                if (__OFSUB__((int)a1, v38)) {
                  goto LABEL_147;
                }
                v37 += (int)a1 - v38;
              }
              uint64_t v39 = sub_22093DE50();
              size_t v40 = (a1 >> 32) - (int)a1;
              if (v39 < v78) {
                size_t v40 = v39;
              }
              if (!v70) {
                goto LABEL_152;
              }
              if (!v37) {
                goto LABEL_153;
              }
              int v41 = memcmp(v70, v37, v40);
              sub_220834944(a1, a2);
              swift_release();
              goto LABEL_111;
            }
            uint64_t v52 = *(void *)(a1 + 16);
            uint64_t v68 = *(void *)(a1 + 24);
            swift_retain();
            swift_retain();
            uint64_t v53 = (char *)sub_22093DE40();
            if (v53)
            {
              uint64_t v54 = sub_22093DE60();
              if (__OFSUB__(v52, v54)) {
                goto LABEL_146;
              }
              v53 += v52 - v54;
            }
            BOOL v18 = __OFSUB__(v68, v52);
            int64_t v55 = v68 - v52;
            if (v18) {
              goto LABEL_141;
            }
            uint64_t v56 = sub_22093DE50();
            if (v56 >= v55) {
              size_t v57 = v55;
            }
            else {
              size_t v57 = v56;
            }
            if (!v70) {
              goto LABEL_157;
            }
            unint64_t v6 = a2 >> 60;
            if (!v53) {
              goto LABEL_158;
            }
            int v41 = memcmp(v70, v53, v57);
            swift_release();
            swift_release();
            goto LABEL_110;
          case 3uLL:
            *(void *)&__s1[6] = 0;
            *(void *)__s1 = 0;
            if (!v82) {
              goto LABEL_52;
            }
            if (v82 == 1)
            {
              if (v79 < (int)a1) {
                goto LABEL_135;
              }
              sub_220834CD4(a1, a2);
              sub_220834CD4(v14, v13);
              uint64_t v32 = sub_22093DE40();
              if (!v32) {
                goto LABEL_151;
              }
              uint64_t v23 = v32;
              uint64_t v33 = sub_22093DE60();
              uint64_t v25 = (int)a1 - v33;
              if (__OFSUB__((int)a1, v33)) {
                goto LABEL_140;
              }
LABEL_47:
              uint64_t v34 = sub_22093DE50();
              if (v34 >= v78) {
                size_t v35 = (a1 >> 32) - (int)a1;
              }
              else {
                size_t v35 = v34;
              }
              int v36 = memcmp(__s1, (const void *)(v23 + v25), v35);
              sub_220834944(a1, a2);
              sub_220834944(v14, v13);
              unint64_t v6 = a2 >> 60;
              uint64_t v10 = v81;
              if (!v36) {
                return 1;
              }
              goto LABEL_11;
            }
            uint64_t v72 = *(char **)(a1 + 24);
            uint64_t v76 = *(char **)(a1 + 16);
            sub_220834CD4(a1, a2);
            sub_220834CD4(v14, v13);
            swift_retain();
            swift_retain();
            char v46 = (char *)sub_22093DE40();
            if (v46)
            {
              uint64_t v49 = sub_22093DE60();
              char v50 = v76;
              if (__OFSUB__(v76, v49)) {
                goto LABEL_145;
              }
              char v46 = &v76[(void)v46 - v49];
            }
            else
            {
              char v50 = v76;
            }
            uint64_t v64 = (char *)(v72 - v50);
            if (__OFSUB__(v72, v50)) {
              goto LABEL_138;
            }
            uint64_t v65 = sub_22093DE50();
            if (!v46) {
              goto LABEL_163;
            }
            break;
          default:
            *(void *)__s1 = *v12;
            *(_WORD *)&__s1[8] = v13;
            __s1[10] = BYTE2(v13);
            __s1[11] = BYTE3(v13);
            __s1[12] = BYTE4(v13);
            __s1[13] = BYTE5(v13);
            if (!v82)
            {
LABEL_52:
              uint64_t __s2 = a1;
              __int16 v84 = a2;
              char v85 = BYTE2(a2);
              char v86 = BYTE3(a2);
              char v87 = BYTE4(a2);
              char v88 = BYTE5(a2);
              if (!memcmp(__s1, &__s2, BYTE6(a2))) {
                return 1;
              }
              goto LABEL_11;
            }
            if (v82 == 1)
            {
              if (v79 < (int)a1) {
                goto LABEL_134;
              }
              sub_220834CD4(a1, a2);
              sub_220834CD4(v14, v13);
              uint64_t v22 = sub_22093DE40();
              if (!v22)
              {
                sub_22093DE50();
                __break(1u);
LABEL_151:
                sub_22093DE50();
                __break(1u);
LABEL_152:
                __break(1u);
LABEL_153:
                __break(1u);
LABEL_154:
                __break(1u);
LABEL_155:
                __break(1u);
LABEL_156:
                __break(1u);
LABEL_157:
                __break(1u);
LABEL_158:
                __break(1u);
LABEL_159:
                __break(1u);
LABEL_160:
                __break(1u);
LABEL_161:
                __break(1u);
LABEL_162:
                __break(1u);
LABEL_163:
                __break(1u);
                JUMPOUT(0x220813CF8);
              }
              uint64_t v23 = v22;
              uint64_t v24 = sub_22093DE60();
              uint64_t v25 = (int)a1 - v24;
              if (__OFSUB__((int)a1, v24)) {
                goto LABEL_139;
              }
              goto LABEL_47;
            }
            uint64_t v71 = *(char **)(a1 + 24);
            uint64_t v75 = *(char **)(a1 + 16);
            sub_220834CD4(a1, a2);
            sub_220834CD4(v14, v13);
            swift_retain();
            swift_retain();
            char v46 = (char *)sub_22093DE40();
            if (v46)
            {
              uint64_t v47 = sub_22093DE60();
              uint64_t v48 = v75;
              if (__OFSUB__(v75, v47)) {
                goto LABEL_144;
              }
              char v46 = &v75[(void)v46 - v47];
            }
            else
            {
              uint64_t v48 = v75;
            }
            uint64_t v64 = (char *)(v71 - v48);
            if (__OFSUB__(v71, v48)) {
              goto LABEL_137;
            }
            uint64_t v65 = sub_22093DE50();
            if (!v46) {
              goto LABEL_162;
            }
            break;
        }
        if (v65 >= (uint64_t)v64) {
          size_t v66 = (size_t)v64;
        }
        else {
          size_t v66 = v65;
        }
        int v77 = memcmp(__s1, v46, v66);
        swift_release();
        swift_release();
        sub_220834944(a1, a2);
        sub_220834944(v14, v13);
        unint64_t v6 = a2 >> 60;
        uint64_t v10 = v81;
        if (!v77) {
          return 1;
        }
LABEL_11:
        unint64_t v9 = (v9 + 1) & v10;
      }
      while (((*(void *)(a3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
  }
  return 0;
}

uint64_t sub_220813D28(uint64_t a1, uint64_t a2)
{
  uint64_t v43 = a1;
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18630);
  MEMORY[0x270FA5388](v42);
  uint64_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_22093E100();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  size_t v35 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD411B8);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v32 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v32 - v16;
  if (*(void *)(a2 + 16))
  {
    sub_22093F430();
    sub_220835280(v43, (uint64_t)v17, qword_26AD411B8);
    BOOL v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
    uint64_t v41 = v6 + 48;
    if (v18(v17, 1, v5) == 1)
    {
      sub_22093F450();
    }
    else
    {
      uint64_t v19 = v35;
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v35, v17, v5);
      sub_22093F450();
      sub_220834C90(&qword_267F18638);
      sub_22093E370();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v19, v5);
    }
    uint64_t v20 = sub_22093F490();
    uint64_t v21 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v22 = v20 & ~v21;
    uint64_t v40 = a2 + 56;
    if ((*(void *)(a2 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22))
    {
      uint64_t v37 = ~v21;
      uint64_t v38 = *(void *)(v9 + 72);
      uint64_t v39 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v18;
      uint64_t v33 = (void (**)(char *, uint64_t, uint64_t))(v6 + 32);
      uint64_t v34 = v4;
      int v36 = (void (**)(char *, uint64_t))(v6 + 8);
      while (1)
      {
        sub_220835280(*(void *)(a2 + 48) + v38 * v22, (uint64_t)v15, qword_26AD411B8);
        uint64_t v23 = (uint64_t)&v4[*(int *)(v42 + 48)];
        sub_220835280((uint64_t)v15, (uint64_t)v4, qword_26AD411B8);
        sub_220835280(v43, v23, qword_26AD411B8);
        uint64_t v24 = v39;
        if (v39((uint64_t)v4, 1, v5) == 1) {
          break;
        }
        sub_220835280((uint64_t)v4, (uint64_t)v12, qword_26AD411B8);
        if (v24(v23, 1, v5) == 1)
        {
          (*v36)(v12, v5);
LABEL_8:
          sub_2208352E4((uint64_t)v4, &qword_267F18630);
          sub_2208352E4((uint64_t)v15, qword_26AD411B8);
          goto LABEL_9;
        }
        uint64_t v25 = v12;
        uint64_t v26 = v35;
        (*v33)(v35, v23, v5);
        sub_220834C90(&qword_267F18640);
        char v27 = sub_22093E520();
        uint64_t v28 = a2;
        uint64_t v29 = *v36;
        uint64_t v30 = v26;
        uint64_t v12 = v25;
        uint64_t v4 = v34;
        (*v36)(v30, v5);
        v29(v12, v5);
        a2 = v28;
        sub_2208352E4((uint64_t)v4, qword_26AD411B8);
        sub_2208352E4((uint64_t)v15, qword_26AD411B8);
        if (v27) {
          return 1;
        }
LABEL_9:
        unint64_t v22 = (v22 + 1) & v37;
        if (((*(void *)(v40 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
          return 0;
        }
      }
      if (v24(v23, 1, v5) == 1)
      {
        sub_2208352E4((uint64_t)v4, qword_26AD411B8);
        sub_2208352E4((uint64_t)v15, qword_26AD411B8);
        return 1;
      }
      goto LABEL_8;
    }
  }
  return 0;
}

uint64_t DataFrame.append(_:)(long long *a1)
{
  uint64_t v2 = v1;
  long long v3 = *a1;
  *(_OWORD *)char v88 = a1[1];
  long long v87 = v3;
  *(_OWORD *)&v88[9] = *(long long *)((char *)a1 + 25);
  uint64_t v86 = MEMORY[0x263F8EE88];
  uint64_t v4 = v3;
  sub_220833B58((uint64_t)&v87);
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  uint64_t v7 = sub_22083196C(v5, (uint64_t)&v87);
  sub_220833BC0((uint64_t)&v87);
  uint64_t v70 = v4;
  swift_bridgeObjectRelease();
  uint64_t v72 = v2;
  uint64_t v74 = *(char **)(v7 + 16);
  if (!v74)
  {
    swift_bridgeObjectRelease();
    uint64_t v47 = MEMORY[0x263F8EE88];
    if (!*(void *)(MEMORY[0x263F8EE88] + 16)) {
      return swift_bridgeObjectRelease();
    }
    goto LABEL_33;
  }
  uint64_t v71 = v7;
  uint64_t v8 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_61;
  }
LABEL_3:
  uint64_t v9 = 0;
  *uint64_t v2 = v8;
  while (1)
  {
    if (__OFADD__(v9, 1))
    {
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      uint64_t v8 = sub_22080AB34((uint64_t)v8);
      goto LABEL_3;
    }
    uint64_t v76 = v9 + 1;
    sub_220833C28(v71 + 32 + 40 * (void)v9, (uint64_t)v83);
    uint64_t v10 = *v2;
    uint64_t v11 = v2[2];
    uint64_t v12 = v84;
    uint64_t v13 = v85;
    __swift_project_boxed_opaque_existential_1(v83, v84);
    uint64_t v14 = *(void *)(v13 + 8);
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v16 = v15(v12, v14);
    uint64_t v18 = v16;
    uint64_t v19 = v17;
    if (*((void *)v11 + 2))
    {
      uint64_t v20 = sub_22081D32C(v16, v17, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2208222BC);
      if (v21)
      {
        unint64_t v22 = *(void *)(*((void *)v11 + 7) + 8 * v20);
        swift_bridgeObjectRelease();
        uint64_t v8 = v10;
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v32 = swift_bridgeObjectRetain();
    uint64_t v33 = sub_22083217C(v32, v18, v19);
    swift_bridgeObjectRelease();
    uint64_t v75 = (char *)v19;
    swift_bridgeObjectRelease();
    int64_t v34 = *(void *)(v33 + 16);
    if (v34)
    {
      uint64_t v73 = v6;
      v80[0] = MEMORY[0x263F8EE78];
      sub_220826C78(0, v34, 0);
      size_t v35 = (void *)v80[0];
      int v36 = (uint64_t *)(v33 + 56);
      do
      {
        uint64_t v38 = *(v36 - 1);
        uint64_t v37 = *v36;
        v80[0] = v35;
        unint64_t v40 = v35[2];
        unint64_t v39 = v35[3];
        swift_bridgeObjectRetain();
        if (v40 >= v39 >> 1)
        {
          sub_220826C78((char *)(v39 > 1), v40 + 1, 1);
          size_t v35 = (void *)v80[0];
        }
        v35[2] = v40 + 1;
        uint64_t v41 = &v35[2 * v40];
        v41[4] = v38;
        v41[5] = v37;
        v36 += 4;
        --v34;
      }
      while (v34);
      swift_bridgeObjectRelease();
      uint64_t v2 = v72;
      uint64_t v6 = v73;
    }
    else
    {
      swift_bridgeObjectRelease();
      size_t v35 = (void *)MEMORY[0x263F8EE78];
    }
    uint64_t v42 = v35[2];
    if (v42)
    {
      uint64_t v43 = v35[4];
      uint64_t v44 = v35[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v42 == 1)
      {
        if (*((void *)v11 + 2))
        {
          uint64_t v45 = sub_22081D32C(v43, v44, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2208222BC);
          if (v46) {
            break;
          }
        }
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v8 = v76;
    sub_220833C84((uint64_t)v83);
LABEL_5:
    uint64_t v9 = v8;
    if (v8 == v74)
    {
      swift_bridgeObjectRelease();
      uint64_t v47 = v86;
      if (!*(void *)(v86 + 16)) {
        return swift_bridgeObjectRelease();
      }
LABEL_33:
      uint64_t v8 = *(char **)&v88[8];
      uint64_t v48 = *(void *)&v88[16];
      char v49 = v88[24];
      uint64_t v77 = sub_2208EE804(*(uint64_t *)&v88[8], *(uint64_t *)&v88[16], v88[24]);
      uint64_t v6 = v70;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_220831F30((uint64_t)v8, v48, v49);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22080B6B4((uint64_t)v8, v48, v49);
      char v50 = *v2;
      uint64_t v51 = *((void *)*v2 + 2);
      if (v51)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          char v50 = sub_22080AB34((uint64_t)v50);
        }
        unint64_t v52 = 0;
        *uint64_t v2 = v50;
        uint64_t v2 = (char **)(v47 + 56);
        while (1)
        {
          if (v52 == v51) {
            goto LABEL_56;
          }
          if (*(void *)(v47 + 16))
          {
            uint64_t v53 = sub_22093F420();
            uint64_t v54 = -1 << *(unsigned char *)(v47 + 32);
            unint64_t v55 = v53 & ~v54;
            if ((*(unint64_t *)((char *)v2 + ((v55 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v55))
            {
              uint64_t v56 = *(void *)(v47 + 48);
              if (*(void *)(v56 + 8 * v55) == v52) {
                goto LABEL_37;
              }
              uint64_t v57 = ~v54;
              while (1)
              {
                unint64_t v55 = (v55 + 1) & v57;
                if (((*(unint64_t *)((char *)v2 + ((v55 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v55) & 1) == 0) {
                  break;
                }
                if (*(void *)(v56 + 8 * v55) == v52) {
                  goto LABEL_37;
                }
              }
            }
          }
          uint64_t v6 = v77;
          if (v77 < 0) {
            goto LABEL_60;
          }
          if (v77)
          {
            uint64_t v58 = (uint64_t)&v50[40 * v52 + 32];
            while (v52 < *((void *)v50 + 2))
            {
              uint64_t v8 = *(char **)(v58 + 24);
              uint64_t v59 = *(void *)(v58 + 32);
              __swift_mutable_project_boxed_opaque_existential_1(v58, (uint64_t)v8);
              (*(void (**)(char *, uint64_t))(v59 + 16))(v8, v59);
              if (!--v6) {
                goto LABEL_37;
              }
            }
            __break(1u);
            goto LABEL_55;
          }
LABEL_37:
          if (++v52 == v51)
          {
            uint64_t result = swift_bridgeObjectRelease();
            *uint64_t v72 = v50;
            return result;
          }
        }
      }
      return swift_bridgeObjectRelease();
    }
  }
  unint64_t v22 = *(void *)(*((void *)v11 + 7) + 8 * v45);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = v75;
LABEL_10:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v22 & 0x8000000000000000) != 0) {
    goto LABEL_57;
  }
  uint64_t v23 = *v2;
  if (v22 >= *((void *)*v2 + 2)) {
    goto LABEL_58;
  }
  sub_22080B5B8((uint64_t)&v23[40 * v22 + 32], (uint64_t)v80);
  uint64_t v24 = v81;
  uint64_t v25 = v82;
  __swift_project_boxed_opaque_existential_1(v80, v81);
  uint64_t v8 = (char *)(*(uint64_t (**)(uint64_t))(*(void *)(v25 + 8) + 80))(v24);
  uint64_t v27 = v84;
  uint64_t v26 = v85;
  __swift_project_boxed_opaque_existential_1(v83, v84);
  if (v8 == (char *)(*(uint64_t (**)(uint64_t))(*(void *)(v26 + 8) + 80))(v27))
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v2 = v23;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v23 = sub_22080AB34((uint64_t)v23);
      *uint64_t v2 = v23;
    }
    if (v22 >= *((void *)v23 + 2)) {
      goto LABEL_59;
    }
    uint64_t v29 = &v23[40 * v22];
    uint64_t v30 = *((void *)v29 + 7);
    uint64_t v31 = *((void *)v29 + 8);
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v29 + 32), v30);
    (*(void (**)(void *, uint64_t, uint64_t))(v31 + 48))(v83, v30, v31);
    *uint64_t v2 = v23;
    sub_2208273E8(&v78, v22);
    sub_22080B0D8((uint64_t)v80);
    sub_220833C84((uint64_t)v83);
    uint64_t v8 = v76;
    goto LABEL_5;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v78 = 0;
  unint64_t v79 = 0xE000000000000000;
  sub_22093EEA0();
  swift_bridgeObjectRelease();
  uint64_t v78 = 0xD00000000000001CLL;
  unint64_t v79 = 0x800000022093FD90;
  uint64_t v61 = v81;
  uint64_t v62 = v82;
  __swift_project_boxed_opaque_existential_1(v80, v81);
  (*(void (**)(uint64_t))(*(void *)(v62 + 8) + 8))(v61);
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  uint64_t v78 = 0xD000000000000018;
  unint64_t v79 = 0x800000022093FD70;
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  uint64_t v64 = v78;
  unint64_t v63 = v79;
  uint64_t v66 = v81;
  uint64_t v65 = v82;
  __swift_project_boxed_opaque_existential_1(v80, v81);
  (*(void (**)(uint64_t))(*(void *)(v65 + 8) + 80))(v66);
  uint64_t v78 = sub_22093F530();
  unint64_t v79 = v67;
  sub_22093E6C0();
  uint64_t v69 = v84;
  uint64_t v68 = v85;
  __swift_project_boxed_opaque_existential_1(v83, v84);
  (*(void (**)(uint64_t))(*(void *)(v68 + 8) + 80))(v69);
  sub_22093F530();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  uint64_t v78 = v64;
  unint64_t v79 = v63;
  swift_bridgeObjectRetain();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

uint64_t DataFrame.filter<A>(on:_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(void)@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v11 = *v5;
  uint64_t v10 = (uint64_t)v5[1];
  uint64_t v12 = v5[2];
  int v36 = *v5;
  uint64_t v37 = v10;
  uint64_t v38 = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  DataFrame.subscript.getter(a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = type metadata accessor for Column();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v15 = v39;
  sub_2208BCB14(a3, a4, v13, WitnessTable, (uint64_t)&v36);
  if (v15)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  uint64_t v39 = v33[1];
  uint64_t v17 = v37;
  uint64_t v29 = v36;
  char v30 = (char)v38;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!*((void *)v11 + 2))
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
LABEL_8:
    uint64_t v22 = 0;
    char v23 = 2;
    goto LABEL_9;
  }
  sub_22080B5B8((uint64_t)(v11 + 32), (uint64_t)v33);
  uint64_t v18 = v34;
  uint64_t v19 = v35;
  __swift_project_boxed_opaque_existential_1(v33, v34);
  uint64_t v20 = *(void *)(v19 + 8);
  char v21 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 48);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v22 = v21(v18, v20);
  uint64_t result = sub_22080B0D8((uint64_t)v33);
  if (v22 < 0)
  {
    __break(1u);
    return result;
  }
  if (!v22) {
    goto LABEL_8;
  }
  char v23 = 0;
LABEL_9:
  uint64_t v24 = a5;
  sub_220831F30(0, v22, v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(0, v22, v23);
  uint64_t v25 = sub_22081A46C(v29, v17, v30, 0, v22, v23);
  uint64_t v27 = v26;
  char v32 = v28;
  swift_release();
  swift_bridgeObjectRelease();
  sub_22080B6B4((uint64_t)v29, v17, v30);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)uint64_t v24 = v11;
  *(void *)(v24 + 8) = v10;
  *(void *)(v24 + 16) = v12;
  *(void *)(v24 + 24) = v25;
  *(void *)(v24 + 32) = v27;
  *(unsigned char *)(v24 + 40) = v32;
  return result;
}

unint64_t DataFrame.subscript.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *((void *)v2 + 2);
  long long v5 = *v2;
  long long v7 = *v2;
  uint64_t v8 = v3;
  unint64_t result = sub_22080BA90(a1, a2);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)(v5 + 16))
  {
    sub_22080B5B8(v5 + 40 * result + 32, (uint64_t)v6);
    sub_2208343B8(v6, (uint64_t)&v7);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41110);
    type metadata accessor for Column();
    return swift_dynamicCast();
  }
  __break(1u);
  return result;
}

uint64_t DataFrame.filter<A>(on:_:)@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = *a1;
  uint64_t v9 = a1[1];
  uint64_t v11 = *v4;
  uint64_t v10 = (uint64_t)v4[1];
  uint64_t v12 = v4[2];
  uint64_t v37 = *v4;
  uint64_t v38 = v10;
  unint64_t v40 = v12;
  uint64_t v39 = v12;
  v36[0] = v8;
  v36[1] = v9;
  DataFrame.subscript.getter(v36);
  uint64_t v13 = type metadata accessor for Column();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_2208BCB14(a2, a3, v13, WitnessTable, (uint64_t)&v37);
  if (v5)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  uint64_t v31 = v37;
  uint64_t v30 = v38;
  char v29 = (char)v39;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!*((void *)v11 + 2))
  {
    swift_bridgeObjectRetain_n();
    uint64_t v19 = v10;
    swift_bridgeObjectRetain_n();
    uint64_t v22 = v40;
    swift_bridgeObjectRetain_n();
LABEL_8:
    uint64_t v21 = 0;
    char v23 = 2;
    goto LABEL_9;
  }
  sub_22080B5B8((uint64_t)(v11 + 32), (uint64_t)&v33);
  uint64_t v16 = v34;
  uint64_t v17 = v35;
  __swift_project_boxed_opaque_existential_1(&v33, v34);
  uint64_t v18 = *(void *)(v17 + 8);
  char v28 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 48);
  swift_bridgeObjectRetain_n();
  uint64_t v19 = v10;
  swift_bridgeObjectRetain_n();
  uint64_t v20 = v40;
  swift_bridgeObjectRetain_n();
  uint64_t v21 = v28(v16, v18);
  uint64_t result = sub_22080B0D8((uint64_t)&v33);
  if (v21 < 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v22 = v20;
  if (!v21) {
    goto LABEL_8;
  }
  char v23 = 0;
LABEL_9:
  sub_220831F30(0, v21, v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(0, v21, v23);
  uint64_t v24 = sub_22081A46C(v31, v30, v29, 0, v21, v23);
  uint64_t v26 = v25;
  LODWORD(v40) = v27;
  swift_release();
  swift_bridgeObjectRelease();
  sub_22080B6B4((uint64_t)v31, v30, v29);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a4 = v11;
  *(void *)(a4 + 8) = v19;
  *(void *)(a4 + 16) = v22;
  *(void *)(a4 + 24) = v24;
  *(void *)(a4 + 32) = v26;
  *(unsigned char *)(a4 + 40) = (_BYTE)v40;
  return result;
}

unint64_t DataFrame.subscript.getter(uint64_t *a1)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = *((void *)v1 + 2);
  long long v6 = *v1;
  long long v8 = *v1;
  uint64_t v9 = v4;
  unint64_t result = sub_22080BA90(v3, v2);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)(v6 + 16))
  {
    sub_22080B5B8(v6 + 40 * result + 32, (uint64_t)v7);
    sub_2208343B8(v7, (uint64_t)&v8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41110);
    type metadata accessor for Column();
    return swift_dynamicCast();
  }
  __break(1u);
  return result;
}

uint64_t DataFrame.filter(_:)@<X0>(uint64_t (*a1)(void *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  long long v6 = a1;
  uint64_t v46 = a3;
  uint64_t v7 = *v3;
  uint64_t v8 = v3[1];
  uint64_t v9 = v3[2];
  if (*(void *)(*v3 + 16))
  {
    uint64_t v10 = v4;
    sub_22080B5B8(v7 + 32, (uint64_t)v37);
    uint64_t v11 = v38;
    uint64_t v12 = v39;
    __swift_project_boxed_opaque_existential_1(v37, v38);
    uint64_t v13 = *(void *)(v12 + 8);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v15 = v14(v11, v13);
    uint64_t result = sub_22080B0D8((uint64_t)v37);
    if (v15 < 0)
    {
      __break(1u);
      goto LABEL_17;
    }
    uint64_t v4 = v10;
    long long v6 = a1;
    if (v15)
    {
      char v17 = 0;
      goto LABEL_7;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v15 = 0;
  char v17 = 2;
LABEL_7:
  uint64_t v40 = v7;
  uint64_t v41 = v8;
  uint64_t v42 = v9;
  uint64_t v43 = 0;
  uint64_t v44 = v15;
  char v45 = v17;
  uint64_t v18 = (char *)sub_22080F0B4(v6, a2);
  uint64_t v20 = v19;
  char v22 = v21;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = sub_22080B6B4(0, v15, v17);
  if (v4) {
    return result;
  }
  char v35 = v22;
  uint64_t v23 = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!*(void *)(v7 + 16))
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    goto LABEL_13;
  }
  sub_22080B5B8(v7 + 32, (uint64_t)v37);
  uint64_t v24 = v38;
  uint64_t v25 = v39;
  __swift_project_boxed_opaque_existential_1(v37, v38);
  uint64_t v26 = *(void *)(v25 + 8);
  int v27 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 48);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v28 = v27(v24, v26);
  uint64_t result = sub_22080B0D8((uint64_t)v37);
  if (v28 < 0)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  if (!v28)
  {
LABEL_13:
    uint64_t v28 = 0;
    char v29 = 2;
    goto LABEL_14;
  }
  char v29 = 0;
LABEL_14:
  uint64_t v30 = v46;
  sub_220831F30(0, v28, v29);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(0, v28, v29);
  uint64_t v31 = sub_22081A46C(v18, v23, v35, 0, v28, v29);
  uint64_t v33 = v32;
  LODWORD(v46) = v34;
  sub_22080B6B4((uint64_t)v18, v23, v35);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)uint64_t v30 = v7;
  *(void *)(v30 + 8) = v8;
  *(void *)(v30 + 16) = v9;
  *(void *)(v30 + 24) = v31;
  *(void *)(v30 + 32) = v33;
  *(unsigned char *)(v30 + 40) = v46;
  return result;
}

uint64_t DataFrame.selecting<A>(columnNames:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  return DataFrame.subscript.getter(a1, a2, a3, a4);
}

uint64_t sub_2208155A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5 = a3;
  uint64_t v6 = 0;
  uint64_t v7 = (char *)MEMORY[0x263F8EE78];
  uint64_t v73 = *(void *)(a1 + 16);
  if (v73)
  {
    uint64_t v9 = a2;
    uint64_t v71 = a2 + 32;
    uint64_t v72 = a1 + 32;
    swift_bridgeObjectRetain();
    uint64_t v10 = 0;
    uint64_t v11 = v7;
    uint64_t v67 = v9;
    uint64_t v68 = a4;
    while (1)
    {
      uint64_t v75 = v11;
      uint64_t v12 = (uint64_t *)(v72 + 16 * v10);
      uint64_t v13 = *v12;
      uint64_t v14 = v12[1];
      uint64_t v15 = *(void *)(a4 + 16);
      swift_bridgeObjectRetain();
      uint64_t v77 = v13;
      if (!v15) {
        goto LABEL_6;
      }
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_22081D32C(v13, v14, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2208222BC);
      if ((v17 & 1) == 0) {
        break;
      }
LABEL_17:
      unint64_t v32 = *(void *)(*(void *)(a4 + 56) + 8 * v16);
      swift_bridgeObjectRelease();
      if ((v32 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        swift_bridgeObjectRelease();
        unint64_t v79 = 0;
        unint64_t v80 = 0xE000000000000000;
        sub_22093EEA0();
        swift_bridgeObjectRelease();
        unint64_t v79 = 0xD00000000000001ALL;
        unint64_t v80 = 0x800000022093FBF0;
        sub_22093E6C0();
        sub_22093E6C0();
        goto LABEL_58;
      }
      if (v32 >= *(void *)(v9 + 16)) {
        goto LABEL_55;
      }
      sub_22080B5B8(v71 + 40 * v32, (uint64_t)&v79);
      uint64_t v33 = v81;
      uint64_t v34 = v82;
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v79, v81);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 + 8) + 16))(v77, v14, v33);
      sub_22080B5B8((uint64_t)&v79, (uint64_t)&v83);
      uint64_t v11 = v75;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v11 = sub_22081BA78(0, *((void *)v75 + 2) + 1, 1, v75, &qword_26AD413F8);
      }
      unint64_t v36 = *((void *)v11 + 2);
      unint64_t v35 = *((void *)v11 + 3);
      if (v36 >= v35 >> 1) {
        uint64_t v11 = sub_22081BA78((char *)(v35 > 1), v36 + 1, 1, v11, &qword_26AD413F8);
      }
      ++v10;
      *((void *)v11 + 2) = v36 + 1;
      uint64_t v37 = &v11[40 * v36];
      long long v38 = v83;
      long long v39 = v84;
      *((void *)v37 + 8) = v85;
      *((_OWORD *)v37 + 2) = v38;
      *((_OWORD *)v37 + 3) = v39;
      sub_22080B0D8((uint64_t)&v79);
      if (v10 == v73)
      {
        swift_bridgeObjectRelease();
        goto LABEL_26;
      }
    }
    swift_bridgeObjectRelease();
LABEL_6:
    uint64_t v74 = v10;
    swift_bridgeObjectRetain();
    uint64_t v18 = swift_bridgeObjectRetain();
    uint64_t v19 = sub_22083217C(v18, v13, v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int64_t v20 = *(void *)(v19 + 16);
    if (v20)
    {
      uint64_t v70 = v6;
      unint64_t v79 = (unint64_t)v7;
      sub_220826C78(0, v20, 0);
      char v21 = (void *)v79;
      char v22 = (uint64_t *)(v19 + 56);
      do
      {
        uint64_t v24 = *(v22 - 1);
        uint64_t v23 = *v22;
        unint64_t v79 = (unint64_t)v21;
        unint64_t v25 = v21[2];
        unint64_t v26 = v21[3];
        swift_bridgeObjectRetain();
        if (v25 >= v26 >> 1)
        {
          sub_220826C78((char *)(v26 > 1), v25 + 1, 1);
          char v21 = (void *)v79;
        }
        v21[2] = v25 + 1;
        int v27 = &v21[2 * v25];
        v27[4] = v24;
        v27[5] = v23;
        v22 += 4;
        --v20;
      }
      while (v20);
      swift_bridgeObjectRelease();
      uint64_t v5 = a3;
      uint64_t v6 = v70;
      uint64_t v9 = v67;
      a4 = v68;
    }
    else
    {
      swift_bridgeObjectRelease();
      char v21 = v7;
    }
    uint64_t v28 = v21[2];
    uint64_t v10 = v74;
    if (!v28) {
      goto LABEL_56;
    }
    uint64_t v30 = v21[4];
    uint64_t v29 = v21[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (v28 != 1) {
      goto LABEL_56;
    }
    uint64_t v7 = (char *)MEMORY[0x263F8EE78];
    if (!*(void *)(a4 + 16)) {
      goto LABEL_56;
    }
    uint64_t v16 = sub_22081D32C(v30, v29, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2208222BC);
    if ((v31 & 1) == 0) {
      goto LABEL_56;
    }
    goto LABEL_17;
  }
  uint64_t v11 = (char *)MEMORY[0x263F8EE78];
LABEL_26:
  sub_22080D5BC((uint64_t)v11, (char **)&v83);
  uint64_t v40 = swift_bridgeObjectRetain();
  uint64_t v41 = sub_220831E98(v40);
  swift_bridgeObjectRelease();
  uint64_t v42 = *(void *)(v5 + 16);
  if (!v42)
  {
LABEL_53:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v65 = v84;
    *(_OWORD *)a5 = v83;
    *(void *)(a5 + 16) = v65;
    return result;
  }
  uint64_t v76 = v5 + 32;
  uint64_t v78 = v41 + 56;
  swift_bridgeObjectRetain();
  uint64_t v43 = 0;
  while (1)
  {
    if (!*(void *)(v41 + 16)) {
      goto LABEL_29;
    }
    uint64_t v44 = (uint64_t *)(v76 + 32 * v43);
    uint64_t v46 = *v44;
    uint64_t v45 = v44[1];
    uint64_t v48 = v44[2];
    uint64_t v47 = v44[3];
    sub_22093F430();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_22093E650();
    uint64_t v49 = sub_22093F490();
    uint64_t v50 = -1 << *(unsigned char *)(v41 + 32);
    unint64_t v51 = v49 & ~v50;
    if ((*(void *)(v78 + ((v51 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v51)) {
      break;
    }
LABEL_28:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_29:
    if (++v43 == v42)
    {
      swift_bridgeObjectRelease();
      goto LABEL_53;
    }
  }
  uint64_t v52 = *(void *)(v41 + 48);
  uint64_t v53 = (void *)(v52 + 16 * v51);
  BOOL v54 = *v53 == v48 && v53[1] == v47;
  if (!v54 && (sub_22093F250() & 1) == 0)
  {
    uint64_t v61 = ~v50;
    do
    {
      unint64_t v51 = (v51 + 1) & v61;
      if (((*(void *)(v78 + ((v51 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v51) & 1) == 0) {
        goto LABEL_28;
      }
      uint64_t v62 = (void *)(v52 + 16 * v51);
      BOOL v63 = *v62 == v48 && v62[1] == v47;
    }
    while (!v63 && (sub_22093F250() & 1) == 0);
  }
  if (*(void *)(v84 + 16))
  {
    swift_bridgeObjectRetain();
    sub_22081D32C(v48, v47, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2208222BC);
    char v56 = v55;
    swift_bridgeObjectRelease();
    if (v56)
    {
      uint64_t v57 = (void *)*((void *)&v83 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v57 = sub_22081B820(0, v57[2] + 1, 1, v57);
      }
      unint64_t v59 = v57[2];
      unint64_t v58 = v57[3];
      if (v59 >= v58 >> 1) {
        uint64_t v57 = sub_22081B820((void *)(v58 > 1), v59 + 1, 1, v57);
      }
      v57[2] = v59 + 1;
      uint64_t v60 = &v57[4 * v59];
      v60[4] = v46;
      v60[5] = v45;
      v60[6] = v48;
      v60[7] = v47;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *((void *)&v83 + 1) = v57;
      goto LABEL_29;
    }
  }
  unint64_t v79 = 0;
  unint64_t v80 = 0xE000000000000000;
  sub_22093EEA0();
  swift_bridgeObjectRelease();
  unint64_t v79 = 0xD00000000000001ALL;
  unint64_t v80 = 0x800000022093FBF0;
  sub_22093E6C0();
  sub_22093E6C0();
LABEL_58:
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

uint64_t DataFrame.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v75 = a4;
  uint64_t v8 = 0;
  uint64_t v9 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v11 = (char *)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v77 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v14 = (char *)&v75 - v13;
  uint64_t v15 = v4[1];
  uint64_t v86 = *v4;
  uint64_t v85 = v4[2];
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v80 = a1;
  uint64_t v79 = v9 + 16;
  uint64_t v76 = v16;
  v16(v11, a1, a2);
  uint64_t v78 = v11;
  sub_22093E780();
  uint64_t v82 = a3;
  uint64_t v81 = a2;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_22093ED70();
  uint64_t v17 = v97;
  uint64_t v89 = v15;
  if (!v97)
  {
    v92 = (char *)MEMORY[0x263F8EE78];
LABEL_28:
    (*(void (**)(char *, uint64_t))(v77 + 8))(v14, AssociatedTypeWitness);
    sub_22080D5BC((uint64_t)v92, (char **)&v93);
    v76(v78, v80, v81);
    uint64_t v48 = sub_22093E9E0();
    uint64_t v49 = v48;
    uint64_t v50 = *(void *)(v15 + 16);
    if (!v50)
    {
LABEL_57:
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v73 = v94;
      uint64_t v74 = v75;
      *uint64_t v75 = v93;
      *((void *)v74 + 2) = v73;
      return result;
    }
    uint64_t v90 = v8;
    uint64_t v91 = v15 + 32;
    v92 = (char *)(v48 + 56);
    swift_bridgeObjectRetain();
    unint64_t v51 = 0;
    while (1)
    {
      if (v51 >= *(void *)(v15 + 16)) {
        goto LABEL_60;
      }
      if (*(void *)(v49 + 16)) {
        break;
      }
LABEL_32:
      if (++v51 == v50)
      {
        swift_bridgeObjectRelease();
        goto LABEL_57;
      }
    }
    uint64_t v52 = (uint64_t *)(v91 + 32 * v51);
    uint64_t v53 = *v52;
    uint64_t v54 = v52[1];
    uint64_t v56 = v52[2];
    uint64_t v55 = v52[3];
    sub_22093F430();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_22093E650();
    uint64_t v57 = sub_22093F490();
    uint64_t v58 = -1 << *(unsigned char *)(v49 + 32);
    unint64_t v59 = v57 & ~v58;
    if ((*(void *)&v92[(v59 >> 3) & 0xFFFFFFFFFFFFFF8] >> v59))
    {
      uint64_t v60 = *(void *)(v49 + 48);
      uint64_t v61 = (void *)(v60 + 16 * v59);
      BOOL v62 = *v61 == v56 && v61[1] == v55;
      if (v62 || (sub_22093F250() & 1) != 0)
      {
LABEL_41:
        if (!*(void *)(v94 + 16)
          || (swift_bridgeObjectRetain(),
              sub_22081D32C(v56, v55, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2208222BC), char v64 = v63, swift_bridgeObjectRelease(), (v64 & 1) == 0))
        {
          unint64_t v96 = 0;
          unint64_t v97 = 0xE000000000000000;
          sub_22093EEA0();
          swift_bridgeObjectRelease();
          unint64_t v96 = 0xD00000000000001ALL;
          unint64_t v97 = 0x800000022093FBF0;
          sub_22093E6C0();
          sub_22093E6C0();
          goto LABEL_63;
        }
        uint64_t v65 = (void *)*((void *)&v93 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v65 = sub_22081B820(0, v65[2] + 1, 1, v65);
        }
        unint64_t v67 = v65[2];
        unint64_t v66 = v65[3];
        if (v67 >= v66 >> 1) {
          uint64_t v65 = sub_22081B820((void *)(v66 > 1), v67 + 1, 1, v65);
        }
        v65[2] = v67 + 1;
        uint64_t v68 = &v65[4 * v67];
        v68[4] = v53;
        v68[5] = v54;
        v68[6] = v56;
        v68[7] = v55;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *((void *)&v93 + 1) = v65;
        goto LABEL_31;
      }
      uint64_t v69 = ~v58;
      while (1)
      {
        unint64_t v59 = (v59 + 1) & v69;
        if (((*(void *)&v92[(v59 >> 3) & 0xFFFFFFFFFFFFFF8] >> v59) & 1) == 0) {
          break;
        }
        uint64_t v70 = (void *)(v60 + 16 * v59);
        BOOL v71 = *v70 == v56 && v70[1] == v55;
        if (v71 || (sub_22093F250() & 1) != 0) {
          goto LABEL_41;
        }
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_31:
    uint64_t v15 = v89;
    goto LABEL_32;
  }
  uint64_t v18 = v96;
  uint64_t v19 = v86;
  uint64_t v87 = v86 + 32;
  v92 = (char *)MEMORY[0x263F8EE78];
  uint64_t v20 = v85;
  uint64_t v84 = AssociatedTypeWitness;
  long long v83 = v14;
  while (1)
  {
    uint64_t v21 = *(void *)(v20 + 16);
    uint64_t v91 = v18;
    if (v21)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_22081D32C(v18, v17, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2208222BC);
      if (v23)
      {
        unint64_t v24 = *(void *)(*(void *)(v20 + 56) + 8 * v22);
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain();
    uint64_t v25 = swift_bridgeObjectRetain();
    uint64_t v26 = sub_22083217C(v25, v18, v17);
    uint64_t v90 = v8;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int64_t v27 = *(void *)(v26 + 16);
    if (v27)
    {
      unint64_t v96 = MEMORY[0x263F8EE78];
      sub_220826C78(0, v27, 0);
      uint64_t v28 = (void *)v96;
      uint64_t v29 = (uint64_t *)(v26 + 56);
      do
      {
        uint64_t v30 = *(v29 - 1);
        uint64_t v31 = *v29;
        unint64_t v96 = (unint64_t)v28;
        unint64_t v32 = v28[2];
        unint64_t v33 = v28[3];
        swift_bridgeObjectRetain();
        if (v32 >= v33 >> 1)
        {
          sub_220826C78((char *)(v33 > 1), v32 + 1, 1);
          uint64_t v28 = (void *)v96;
        }
        v28[2] = v32 + 1;
        uint64_t v34 = &v28[2 * v32];
        v34[4] = v30;
        v34[5] = v31;
        v29 += 4;
        --v27;
      }
      while (v27);
      swift_bridgeObjectRelease();
      uint64_t v15 = v89;
      uint64_t AssociatedTypeWitness = v84;
      uint64_t v14 = v83;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v28 = (void *)MEMORY[0x263F8EE78];
    }
    uint64_t v35 = v28[2];
    uint64_t v8 = v90;
    uint64_t v20 = v85;
    if (!v35) {
      goto LABEL_61;
    }
    uint64_t v36 = v28[4];
    uint64_t v37 = v28[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (v35 != 1) {
      goto LABEL_61;
    }
    if (!*(void *)(v20 + 16)) {
      goto LABEL_61;
    }
    uint64_t v38 = sub_22081D32C(v36, v37, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2208222BC);
    if ((v39 & 1) == 0) {
      goto LABEL_61;
    }
    unint64_t v24 = *(void *)(*(void *)(v20 + 56) + 8 * v38);
    swift_bridgeObjectRelease();
    uint64_t v19 = v86;
LABEL_19:
    if ((v24 & 0x8000000000000000) != 0) {
      break;
    }
    if (v24 >= *(void *)(v19 + 16)) {
      goto LABEL_59;
    }
    sub_22080B5B8(v87 + 40 * v24, (uint64_t)&v96);
    uint64_t v41 = v98;
    uint64_t v40 = v99;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v96, v98);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 + 8) + 16))(v91, v17, v41);
    sub_22080B5B8((uint64_t)&v96, (uint64_t)&v93);
    uint64_t v42 = v92;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v42 = sub_22081BA78(0, *((void *)v42 + 2) + 1, 1, v42, &qword_26AD413F8);
    }
    unint64_t v44 = *((void *)v42 + 2);
    unint64_t v43 = *((void *)v42 + 3);
    if (v44 >= v43 >> 1) {
      uint64_t v42 = sub_22081BA78((char *)(v43 > 1), v44 + 1, 1, v42, &qword_26AD413F8);
    }
    *((void *)v42 + 2) = v44 + 1;
    v92 = v42;
    uint64_t v45 = &v42[40 * v44];
    long long v46 = v93;
    long long v47 = v94;
    *((void *)v45 + 8) = v95;
    *((_OWORD *)v45 + 2) = v46;
    *((_OWORD *)v45 + 3) = v47;
    sub_22080B0D8((uint64_t)&v96);
    sub_22093ED70();
    uint64_t v18 = v96;
    uint64_t v17 = v97;
    if (!v97) {
      goto LABEL_28;
    }
  }
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  swift_bridgeObjectRelease();
  unint64_t v96 = 0;
  unint64_t v97 = 0xE000000000000000;
  sub_22093EEA0();
  swift_bridgeObjectRelease();
  unint64_t v96 = 0xD00000000000001ALL;
  unint64_t v97 = 0x800000022093FBF0;
  sub_22093E6C0();
  sub_22093E6C0();
LABEL_63:
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

uint64_t DataFrame.selecting(columnNames:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *v2;
  uint64_t v6 = v2[1];
  uint64_t v7 = v2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2208155A0(a1, v5, v6, v7, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_220816724@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v5 = v1[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_220882130();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = result;
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v8;
  return result;
}

__n128 sub_22081679C(__n128 *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v3 = a1[1].n128_u64[0];
  sub_22080B6B4(a1[1].n128_i64[1], a1[2].n128_i64[0], a1[2].n128_i8[8]);
  __n128 result = *a1;
  *uint64_t v1 = *a1;
  v1[1].n128_u64[0] = v3;
  return result;
}

void (*sub_2208167FC(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = DataFrame.rows.modify(v2);
  return sub_220816854;
}

void sub_220816854(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t sub_22081689C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2208168A4()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_220882130();
  uint64_t v2 = v1;
  char v4 = v3;
  uint64_t v5 = sub_2208EE804(v0, v1, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v0, v2, v4);
  return v5;
}

unint64_t DataFrame.subscript.modify(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = malloc(0x68uLL);
  *a1 = v7;
  v7[11] = a3;
  v7[12] = v3;
  v7[10] = a2;
  long long v9 = *v3;
  unint64_t result = sub_22080BA90(a2, a3);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)(v9 + 16))
  {
    sub_22080B5B8(v9 + 40 * result + 32, (uint64_t)v7);
    return (unint64_t)sub_220816A24;
  }
  __break(1u);
  return result;
}

{
  long long *v3;
  void *v7;
  unint64_t result;
  long long v9;

  uint64_t v7 = malloc(0x68uLL);
  *a1 = v7;
  v7[11] = a3;
  v7[12] = v3;
  v7[10] = a2;
  long long v9 = *v3;
  unint64_t result = sub_22080BA90(a2, a3);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)(v9 + 16))
  {
    sub_22080B5B8(v9 + 40 * result + 32, (uint64_t)v7);
    return (unint64_t)sub_220816A24;
  }
  __break(1u);
  return result;
}

unint64_t _s11TabularData0B5FrameV13dynamicMemberAA9AnyColumnVSS_tcig_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  long long v7 = *v3;
  unint64_t result = sub_22080BA90(a1, a2);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (result >= *(void *)(v7 + 16))
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v6 = v7 + 40 * result + 32;

  return sub_22080B5B8(v6, a3);
}

unint64_t sub_220816AAC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t result = sub_22080BA90(v5, v6);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (result >= *(void *)(v4 + 16))
  {
LABEL_7:
    __break(1u);
    return result;
  }
  sub_22080B5B8(v4 + 40 * result + 32, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_220816B78(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = *a3;
  uint64_t v4 = a3[1];
  sub_22080B5B8(a1, (uint64_t)v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v5 = sub_22080BA90(v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080A474(v5, (uint64_t)v7);
  swift_bridgeObjectRelease();
  return sub_22080B0D8((uint64_t)v7);
}

uint64_t _s11TabularData0B5FrameV13dynamicMemberAA9AnyColumnVSS_tcis_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_22080BA90(a2, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080A474(v6, a1);
  swift_bridgeObjectRelease();

  return sub_22080B0D8(a1);
}

void sub_220816DD8(uint64_t *a1, char a2)
{
  uint64_t v2 = (void *)*a1;
  if (a2)
  {
    uint64_t v3 = v2[11];
    uint64_t v4 = v2[10];
    sub_22080B5B8(*a1, (uint64_t)(v2 + 5));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v5 = sub_22080BA90(v4, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22080A474(v5, (uint64_t)(v2 + 5));
    swift_bridgeObjectRelease();
    sub_22080B0D8((uint64_t)(v2 + 5));
  }
  else
  {
    uint64_t v6 = v2[11];
    uint64_t v7 = v2[10];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_22080BA90(v7, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22080A474(v8, (uint64_t)v2);
    swift_bridgeObjectRelease();
  }
  sub_22080B0D8((uint64_t)v2);

  free(v2);
}

uint64_t DataFrame.subscript.getter(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = sub_22080BA90(a1, a2);
  DataFrame.subscript.getter(v2);
  sub_22093ED30();
  type metadata accessor for Column();
  swift_getWitnessTable();
  return sub_22093E930();
}

unint64_t DataFrame.subscript.getter(unint64_t result)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(*(void *)v1 + 16) > result)
  {
    sub_22080B5B8(*(void *)v1 + 40 * result + 32, (uint64_t)v2);
    sub_2208343B8(v2, (uint64_t)v3);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41110);
    type metadata accessor for Column();
    return swift_dynamicCast();
  }
  __break(1u);
  return result;
}

uint64_t DataFrame.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_2208344A8(a1, a2, a3, a4, a5);

  return swift_bridgeObjectRelease();
}

void (*DataFrame.subscript.modify(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))(uint64_t **a1, char a2)
{
  uint64_t v11 = malloc(0x30uLL);
  *a1 = v11;
  v11[4] = a5;
  v11[5] = v5;
  v11[2] = a3;
  v11[3] = a4;
  v11[1] = a2;
  void *v11 = DataFrame.subscript.getter(a2, a3);
  return sub_2208171A8;
}

void sub_2208171A8(uint64_t **a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = (*a1)[2];
  uint64_t v5 = **a1;
  swift_bridgeObjectRetain();
  uint64_t v6 = v3[4];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[1];
  if (a2)
  {
    uint64_t v9 = swift_bridgeObjectRetain();
    sub_2208344A8(v9, v8, v4, v7, v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2208344A8(v5, v3[1], v4, v3[3], v3[4]);
  }
  swift_bridgeObjectRelease();

  free(v3);
}

uint64_t DataFrame.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2208345FC(a1, a2, a3);

  return swift_bridgeObjectRelease();
}

void (*DataFrame.subscript.modify(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))(void **a1, char a2)
{
  uint64_t v11 = malloc(0x40uLL);
  *a1 = v11;
  v11[6] = a5;
  v11[7] = v5;
  v11[4] = a3;
  v11[5] = a4;
  v11[3] = a2;
  DataFrame.subscript.getter(a2, a3);
  return sub_22081734C;
}

void sub_22081734C(void **a1, char a2)
{
  unint64_t v2 = *a1;
  uint64_t v3 = (*a1)[1];
  uint64_t v4 = (*a1)[4];
  uint64_t v6 = (*a1)[2];
  uint64_t v5 = (*a1)[3];
  v7[0] = **a1;
  v7[1] = v3;
  long long v7[2] = v6;
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_2208345FC((uint64_t)v7, v5, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_2208345FC((uint64_t)v7, v5, v4);
    swift_bridgeObjectRelease();
  }

  free(v2);
}

double sub_220817438@<D0>(long long *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *((void *)a1 + 2);
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  long long v9 = *a1;
  uint64_t v10 = v4;
  v8[0] = v5;
  v8[1] = v6;
  DataFrame.subscript.getter(v8);
  *(void *)a3 = v11;
  double result = *(double *)&v12;
  *(_OWORD *)(a3 + 8) = v12;
  return result;
}

uint64_t sub_2208174A4(void *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = *a3;
  uint64_t v3 = a3[1];
  uint64_t v5 = a1[1];
  uint64_t v6 = a1[2];
  v9[0] = *a1;
  v9[1] = v5;
  v9[2] = v6;
  v8[0] = v4;
  v8[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return DataFrame.subscript.setter((uint64_t)v9, v8);
}

uint64_t DataFrame.subscript.setter(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v2 = a2[1];
  type metadata accessor for Column();
  Column.eraseToAnyColumn()((uint64_t)v6);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_22080BA90(v3, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080A474(v4, (uint64_t)v6);
  swift_bridgeObjectRelease();
  return sub_22080B0D8((uint64_t)v6);
}

void (*DataFrame.subscript.modify(void *a1, uint64_t *a2, uint64_t a3))(uint64_t **a1, char a2)
{
  uint64_t v7 = malloc(0x38uLL);
  *a1 = v7;
  void v7[3] = a3;
  v7[4] = v3;
  uint64_t v9 = *a2;
  uint64_t v8 = a2[1];
  v7[5] = *a2;
  v7[6] = v8;
  uint64_t v10 = *((void *)v3 + 2);
  long long v13 = *v3;
  uint64_t v14 = v10;
  v12[0] = v9;
  v12[1] = v8;
  swift_bridgeObjectRetain();
  DataFrame.subscript.getter(v12);
  return sub_2208176B0;
}

void sub_2208176B0(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v4 = **a1;
  uint64_t v3 = (*a1)[1];
  uint64_t v6 = v2[5];
  uint64_t v5 = v2[6];
  uint64_t v7 = v2[2];
  v8[0] = v4;
  v8[1] = v3;
  uint64_t v8[2] = v7;
  v9[0] = v6;
  v9[1] = v5;
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    DataFrame.subscript.setter((uint64_t)v8, v9);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    DataFrame.subscript.setter((uint64_t)v8, v9);
  }

  free(v2);
}

unint64_t DataFrame.subscript.getter@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(*(void *)v2 + 16) > result)
  {
    return sub_22080B5B8(*(void *)v2 + 40 * result + 32, a2);
  }
  __break(1u);
  return result;
}

uint64_t sub_220817790@<X0>(uint64_t result@<X0>, unint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v3 = *a2;
  if ((*a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v3 < *(void *)(*(void *)result + 16))
  {
    return sub_22080B5B8(*(void *)result + 40 * v3 + 32, a3);
  }
  __break(1u);
  return result;
}

uint64_t sub_2208177C4(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  unint64_t v3 = *a3;
  sub_22080B5B8(a1, (uint64_t)v5);
  sub_22080A474(v3, (uint64_t)v5);
  return sub_22080B0D8((uint64_t)v5);
}

uint64_t DataFrame.subscript.setter(uint64_t a1, unint64_t a2)
{
  sub_22080A474(a2, a1);

  return sub_22080B0D8(a1);
}

{
  unsigned char v4[40];

  type metadata accessor for Column();
  Column.eraseToAnyColumn()((uint64_t)v4);
  swift_release();
  swift_bridgeObjectRelease();
  sub_22080A474(a2, (uint64_t)v4);
  return sub_22080B0D8((uint64_t)v4);
}

void (*DataFrame.subscript.modify(void (**a1)(uint64_t *a1, char a2), unint64_t a2))(uint64_t *a1, char a2)
{
  double result = (void (*)(uint64_t *, char))malloc(0x60uLL);
  *a1 = result;
  *((void *)result + 10) = a2;
  *((void *)result + 11) = v2;
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(*(void *)v2 + 16) > a2)
  {
    sub_22080B5B8(*(void *)v2 + 40 * a2 + 32, (uint64_t)result);
    return sub_2208178D8;
  }
  __break(1u);
  return result;
}

void sub_2208178D8(uint64_t *a1, char a2)
{
  uint64_t v2 = (unint64_t *)*a1;
  if (a2)
  {
    unint64_t v3 = v2[10];
    sub_22080B5B8(*a1, (uint64_t)(v2 + 5));
    sub_22080A474(v3, (uint64_t)(v2 + 5));
    sub_22080B0D8((uint64_t)(v2 + 5));
  }
  else
  {
    sub_22080A474(v2[10], (uint64_t)v2);
  }
  sub_22080B0D8((uint64_t)v2);

  free(v2);
}

void (*DataFrame.subscript.modify(void *a1, unint64_t a2, uint64_t a3, uint64_t a4))(uint64_t **a1, char a2)
{
  uint64_t v9 = malloc(0x38uLL);
  *a1 = v9;
  v9[5] = a4;
  v9[6] = v4;
  void v9[3] = a2;
  v9[4] = a3;
  DataFrame.subscript.getter(a2);
  return sub_220817A80;
}

void sub_220817A80(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v4 = **a1;
  uint64_t v3 = (*a1)[1];
  uint64_t v6 = v2[2];
  unint64_t v5 = v2[3];
  v7[0] = v4;
  v7[1] = v3;
  long long v7[2] = v6;
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    DataFrame.subscript.setter((uint64_t)v7, v5);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    DataFrame.subscript.setter((uint64_t)v7, v5);
  }

  free(v2);
}

uint64_t DataFrame.subscript.getter@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *v2;
  uint64_t v6 = v2[1];
  uint64_t v7 = v2[2];
  if (!*(void *)(*v2 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_6;
  }
  sub_22080B5B8(v5 + 32, (uint64_t)v15);
  uint64_t v8 = v16;
  uint64_t v9 = v17;
  __swift_project_boxed_opaque_existential_1(v15, v16);
  uint64_t v10 = *(void *)(v9 + 8);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v12 = v11(v8, v10);
  uint64_t result = sub_22080B0D8((uint64_t)v15);
  if ((v12 & 0x8000000000000000) == 0)
  {
    if (v12)
    {
      char v14 = 0;
LABEL_7:
      *a2 = v5;
      a2[1] = v6;
      a2[2] = v7;
      a2[3] = a1;
      return sub_22080B6B4(0, v12, v14);
    }
LABEL_6:
    uint64_t v12 = 0;
    char v14 = 2;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_220817C34@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v7 = *a2;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v8 = sub_220882130();
  uint64_t v10 = v9;
  char v12 = v11;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = sub_22080B6B4(v8, v10, v12);
  *a3 = v4;
  a3[1] = v5;
  a3[2] = v6;
  a3[3] = v7;
  return result;
}

uint64_t sub_220817CF0(void *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = *a3;
  uint64_t v4 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v5 = a1[3];
  v8[0] = *a1;
  v8[1] = v4;
  uint64_t v8[2] = v6;
  void v8[3] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return DataFrame.subscript.setter(v8, v3);
}

uint64_t DataFrame.subscript.setter(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = (void *)*a1;
  uint64_t v5 = *v3;
  uint64_t v6 = v3[2];
  uint64_t v25 = v6;
  uint64_t v26 = v3[1];
  if (*((void *)*v3 + 2))
  {
    uint64_t v7 = (void *)*a1;
    uint64_t v27 = a1[3];
    sub_22080B5B8((uint64_t)(v5 + 32), (uint64_t)v30);
    uint64_t v9 = v31;
    uint64_t v8 = v32;
    uint64_t v10 = __swift_project_boxed_opaque_existential_1(v30, v31);
    uint64_t v11 = *(void *)(v8 + 8);
    char v12 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v13 = v12(v9, v11);
    sub_22080B0D8((uint64_t)v30);
    if (v13 < 0)
    {
LABEL_15:
      __break(1u);
LABEL_16:
      uint64_t v5 = sub_22080AB34((uint64_t)v5);
LABEL_6:
      unint64_t v14 = 0;
      uint64_t v15 = 0;
      do
      {
        sub_22080B5B8((uint64_t)&v10[v14 / 8 + 4], (uint64_t)v30);
        if ((unint64_t)v15 >= *((void *)v5 + 2))
        {
          __break(1u);
          goto LABEL_15;
        }
        ++v15;
        uint64_t v16 = v31;
        uint64_t v17 = v32;
        uint64_t v18 = __swift_project_boxed_opaque_existential_1(v30, v31);
        v29[3] = v16;
        v29[4] = *(void *)(v17 + 8);
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v29);
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(boxed_opaque_existential_1, v18, v16);
        uint64_t v20 = *(void *)&v5[v14 + 56];
        uint64_t v21 = *(void *)&v5[v14 + 64];
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v5[v14 + 32], v20);
        (*(void (**)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t))(v21 + 72))(a2, v27, v29, v20, v21);
        uint64_t v10 = v7;
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v29);
        sub_22080B0D8((uint64_t)v30);
        v14 += 40;
      }
      while (v6 != v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v13 = v23;
      uint64_t v3 = v24;
      goto LABEL_13;
    }
    uint64_t v6 = (char *)*((void *)v5 + 2);
    if ((char *)v7[2] == v6)
    {
      uint64_t v10 = v7;
      if (v6)
      {
        unint64_t v24 = v3;
        uint64_t v23 = v13;
        if (swift_isUniquelyReferenced_nonNull_native()) {
          goto LABEL_6;
        }
        goto LABEL_16;
      }
LABEL_12:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_13:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = sub_22080B6B4(0, v13, 2 * (v13 == 0));
      *uint64_t v3 = v5;
      v3[1] = v26;
      v3[2] = v25;
      return result;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (!v4[2])
    {
      uint64_t v13 = 0;
      goto LABEL_12;
    }
  }
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

void (*DataFrame.subscript.modify(void *a1, uint64_t a2))(uint64_t a1, char a2)
{
  uint64_t v5 = malloc(0x58uLL);
  *a1 = v5;
  v5[9] = a2;
  v5[10] = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = v2[1];
  uint64_t v8 = v2[2];
  if (!*(void *)(*v2 + 16)) {
    goto LABEL_4;
  }
  sub_22080B5B8(v6 + 32, (uint64_t)v5);
  uint64_t v9 = v5[3];
  uint64_t v10 = v5[4];
  __swift_project_boxed_opaque_existential_1(v5, v9);
  uint64_t v11 = *(void *)(v10 + 8);
  char v12 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = v12(v9, v11);
  sub_22080B0D8((uint64_t)v5);
  if (v13 < 0)
  {
    __break(1u);
LABEL_4:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_5;
  }
  if (v13)
  {
    char v14 = 0;
    goto LABEL_6;
  }
LABEL_5:
  uint64_t v13 = 0;
  char v14 = 2;
LABEL_6:
  v5[5] = v6;
  v5[6] = v7;
  v5[7] = v8;
  v5[8] = a2;
  sub_22080B6B4(0, v13, v14);
  return sub_22081818C;
}

void sub_22081818C(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v4 = *(void *)(*(void *)a1 + 48);
  uint64_t v3 = *(void *)(*(void *)a1 + 56);
  uint64_t v5 = *(void *)(*(void *)a1 + 72);
  uint64_t v6 = *(void *)(*(void *)a1 + 64);
  v7[0] = *(void *)(*(void *)a1 + 40);
  v7[1] = v4;
  long long v7[2] = v3;
  void v7[3] = v6;
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    DataFrame.subscript.setter(v7, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    DataFrame.subscript.setter(v7, v5);
  }

  free(v2);
}

uint64_t DataFrame.subscript.getter@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = *v4;
  uint64_t v8 = v4[1];
  uint64_t v9 = v4[2];
  if (*(void *)(*v4 + 16))
  {
    sub_22080B5B8(v7 + 32, (uint64_t)v49);
    uint64_t v11 = v50;
    uint64_t v10 = v51;
    __swift_project_boxed_opaque_existential_1(v49, v50);
    uint64_t v12 = *(void *)(v10 + 8);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v14 = v13(v11, v12);
    uint64_t result = sub_22080B0D8((uint64_t)v49);
    if (v14 < 0)
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v16 = v14;
      char v17 = 0;
      goto LABEL_7;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v16 = 0;
  char v17 = 2;
LABEL_7:
  sub_22080B6B4(0, v16, v17);
  if (!*(void *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_12;
  }
  sub_22080B5B8(v7 + 32, (uint64_t)v49);
  uint64_t v19 = v50;
  uint64_t v18 = v51;
  __swift_project_boxed_opaque_existential_1(v49, v50);
  uint64_t v20 = *(void *)(v18 + 8);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v22 = v21(v19, v20);
  uint64_t result = sub_22080B0D8((uint64_t)v49);
  if (v22 < 0)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v22)
  {
    char v23 = 0;
    goto LABEL_13;
  }
LABEL_12:
  uint64_t v22 = 0;
  char v23 = 2;
LABEL_13:
  sub_220883950(0, v22, v23);
  uint64_t v25 = v24;
  char v27 = v26;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = sub_22080B6B4(0, v22, v23);
  if (v27) {
    uint64_t v28 = 0;
  }
  else {
    uint64_t v28 = v25;
  }
  if (v28 < 0) {
    goto LABEL_26;
  }
  uint64_t v29 = (char *)sub_22086436C(a1, 0, v28, a2, a3);
  uint64_t v31 = v30;
  char v33 = v32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!*(void *)(v7 + 16))
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    goto LABEL_22;
  }
  uint64_t v48 = v31;
  uint64_t v34 = a4;
  sub_22080B5B8(v7 + 32, (uint64_t)v49);
  uint64_t v35 = v50;
  uint64_t v36 = v51;
  __swift_project_boxed_opaque_existential_1(v49, v50);
  uint64_t v37 = *(void *)(v36 + 8);
  uint64_t v38 = *(uint64_t (**)(uint64_t, uint64_t))(v37 + 48);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v39 = v38(v35, v37);
  uint64_t result = sub_22080B0D8((uint64_t)v49);
  if ((v39 & 0x8000000000000000) == 0)
  {
    a4 = v34;
    uint64_t v31 = v48;
    if (v39)
    {
      char v40 = 0;
LABEL_23:
      sub_220831F30(0, v39, v40);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22080B6B4(0, v39, v40);
      uint64_t v41 = sub_22081A46C(v29, v31, v33, 0, v39, v40);
      uint64_t v43 = v42;
      char v45 = v44;
      sub_22080B6B4((uint64_t)v29, v31, v33);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)a4 = v7;
      *(void *)(a4 + 8) = v8;
      *(void *)(a4 + 16) = v9;
      *(void *)(a4 + 24) = v41;
      *(void *)(a4 + 32) = v43;
      *(unsigned char *)(a4 + 40) = v45;
      return result;
    }
LABEL_22:
    uint64_t v39 = 0;
    char v40 = 2;
    goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t static DataFrame.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_220818834(*a1, *a2, (void (*)(uint64_t, unsigned char *))sub_22080B5B8, (uint64_t (*)(unsigned char *, unsigned char *))_s11TabularData9AnyColumnV2eeoiySbAC_ACtFZ_0, (void (*)(unsigned char *))sub_22080B0D8) & 1;
}

uint64_t sub_220818678(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = a1 + 32;
  for (uint64_t i = a2 + 32; ; i += 40)
  {
    sub_220835280(i, (uint64_t)v15, &qword_267F18658);
    sub_220835280(v3, (uint64_t)v10, &qword_267F18658);
    sub_220835280((uint64_t)v15, (uint64_t)&v12, &qword_267F18658);
    if (v11) {
      break;
    }
    if (*((void *)&v13 + 1)) {
      goto LABEL_14;
    }
    sub_2208352E4((uint64_t)v10, &qword_267F18658);
    sub_2208352E4((uint64_t)v15, &qword_267F18658);
LABEL_5:
    v3 += 40;
    if (!--v2) {
      return 1;
    }
  }
  sub_220835280((uint64_t)v10, (uint64_t)v9, &qword_267F18658);
  if (*((void *)&v13 + 1))
  {
    v7[0] = v12;
    v7[1] = v13;
    uint64_t v8 = v14;
    char v5 = MEMORY[0x223C6A560](v9, v7);
    sub_220834CE8((uint64_t)v7);
    sub_220834CE8((uint64_t)v9);
    sub_2208352E4((uint64_t)v10, &qword_267F18658);
    sub_2208352E4((uint64_t)v15, &qword_267F18658);
    if ((v5 & 1) == 0) {
      return 0;
    }
    goto LABEL_5;
  }
  sub_220834CE8((uint64_t)v9);
LABEL_14:
  sub_2208352E4((uint64_t)v10, &qword_267F18660);
  sub_2208352E4((uint64_t)v15, &qword_267F18658);
  return 0;
}

uint64_t sub_2208187F4(uint64_t a1, uint64_t a2)
{
  return sub_220818834(a1, a2, (void (*)(uint64_t, unsigned char *))sub_220833C28, (uint64_t (*)(unsigned char *, unsigned char *))_s11TabularData14AnyColumnSliceV2eeoiySbAC_ACtFZ_0, (void (*)(unsigned char *))sub_220833C84);
}

uint64_t sub_220818834(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, unsigned char *), uint64_t (*a4)(unsigned char *, unsigned char *), void (*a5)(unsigned char *))
{
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5 == *(void *)(a2 + 16))
  {
    if (!v5 || a1 == a2)
    {
      char v12 = 1;
    }
    else
    {
      uint64_t v9 = a1 + 32;
      uint64_t v10 = a2 + 32;
      uint64_t v11 = v5 - 1;
      do
      {
        a3(v9, v17);
        a3(v10, v16);
        char v12 = a4(v17, v16);
        a5(v16);
        a5(v17);
        BOOL v14 = v11-- != 0;
        if ((v12 & 1) == 0) {
          break;
        }
        v9 += 40;
        v10 += 40;
      }
      while (v14);
    }
  }
  else
  {
    char v12 = 0;
  }
  return v12 & 1;
}

BOOL sub_22081891C(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (a1[4] != a2[4]) {
    return 0;
  }
  if (v2 == 1) {
    return 1;
  }
  uint64_t v4 = v2 - 2;
  uint64_t v5 = a1 + 5;
  uint64_t v6 = a2 + 5;
  do
  {
    uint64_t v8 = *v5++;
    uint64_t v7 = v8;
    uint64_t v10 = *v6++;
    uint64_t v9 = v10;
    BOOL v12 = v4-- != 0;
    BOOL result = v7 == v9;
  }
  while (v7 == v9 && v12);
  return result;
}

uint64_t DataFrame.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t result = sub_22093F440();
  uint64_t v5 = *(void *)(v3 + 16);
  if (v5)
  {
    uint64_t v6 = v3 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_22080B5B8(v6, (uint64_t)v7);
      AnyColumn.hash(into:)(a1);
      sub_22080B0D8((uint64_t)v7);
      v6 += 40;
      --v5;
    }
    while (v5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t DataFrame.hashValue.getter()
{
  uint64_t v1 = *v0;
  sub_22093F430();
  sub_22093F440();
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v1 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_22080B5B8(v3, (uint64_t)v5);
      AnyColumn.hash(into:)((uint64_t)v6);
      sub_22080B0D8((uint64_t)v5);
      v3 += 40;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  return sub_22093F490();
}

uint64_t sub_220818AC0()
{
  uint64_t v1 = *v0;
  sub_22093F430();
  uint64_t v2 = *(void *)(v1 + 16);
  sub_22093F440();
  if (v2)
  {
    uint64_t v3 = v1 + 32;
    swift_bridgeObjectRetain();
    do
    {
      AnyColumn.hash(into:)((uint64_t)v5);
      v3 += 40;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  return sub_22093F490();
}

uint64_t sub_220818B3C(uint64_t *a1, uint64_t *a2)
{
  return sub_220818834(*a1, *a2, (void (*)(uint64_t, unsigned char *))sub_22080B5B8, (uint64_t (*)(unsigned char *, unsigned char *))_s11TabularData9AnyColumnV2eeoiySbAC_ACtFZ_0, (void (*)(unsigned char *))sub_22080B0D8) & 1;
}

unint64_t DataFrame.init(dictionaryLiteral:)@<X0>(uint64_t a1@<X0>, int64x2_t *a2@<X8>)
{
  uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD411B8);
  uint64_t v108 = *(void *)(v104 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v104);
  uint64_t v111 = (uint64_t)&v103 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  v109 = (char *)&v103 - v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v110 = (uint64_t)&v103 - v8;
  unint64_t v9 = MEMORY[0x263F8EE78];
  unint64_t result = sub_22080CCF4(MEMORY[0x263F8EE78]);
  v126.i64[0] = v9;
  v126.i64[1] = v9;
  unint64_t v127 = result;
  uint64_t v115 = *(void *)(a1 + 16);
  if (!v115)
  {
    unint64_t v102 = result;
    unint64_t result = swift_bridgeObjectRelease();
    int64x2_t v101 = vdupq_n_s64(v9);
    goto LABEL_175;
  }
  v106 = a2;
  unint64_t v11 = 0;
  uint64_t v114 = a1 + 32;
  uint64_t v105 = MEMORY[0x263F8EE58] + 8;
  long long v107 = xmmword_220944E00;
  uint64_t v113 = a1;
  while (v11 < *(void *)(a1 + 16))
  {
    uint64_t v16 = (uint64_t *)(v114 + 24 * v11);
    uint64_t v17 = v16[1];
    uint64_t v116 = *v16;
    uint64_t v18 = v16[2];
    uint64_t v19 = *(void *)(v18 + 16);
    uint64_t v118 = v17;
    if (!v19)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_47;
    }
    uint64_t v20 = v18 + 32;
    swift_bridgeObjectRetain();
    uint64_t v117 = v18;
    swift_bridgeObjectRetain();
    uint64_t v21 = v18 + 32;
    uint64_t v22 = v19;
    while (1)
    {
      sub_220835280(v21, (uint64_t)v119, qword_26AD40FF8);
      sub_220835280((uint64_t)v119, (uint64_t)v124, qword_26AD40FF8);
      if (!v125) {
        break;
      }
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_15;
      }
      sub_220835280((uint64_t)v119, (uint64_t)v124, qword_26AD40FF8);
LABEL_10:
      sub_2208352E4((uint64_t)v124, qword_26AD40FF8);
      sub_2208352E4((uint64_t)v119, qword_26AD40FF8);
      v21 += 32;
      if (!--v22)
      {
        int64_t v29 = *(void *)(v117 + 16);
        if (v29)
        {
          uint64_t v121 = MEMORY[0x263F8EE78];
          swift_bridgeObjectRetain();
          sub_220826DB8(0, v29, 0);
          do
          {
            sub_220835280(v20, (uint64_t)v119, qword_26AD40FF8);
            sub_220835280((uint64_t)v119, (uint64_t)v124, qword_26AD40FF8);
            if (v125)
            {
              char v30 = swift_dynamicCast();
              if ((v30 & 1) == 0) {
                v123[0] = 0;
              }
              char v31 = v30 ^ 1;
            }
            else
            {
              sub_2208352E4((uint64_t)v124, qword_26AD40FF8);
              v123[0] = 0;
              char v31 = 1;
            }
            LOBYTE(v123[1]) = v31;
            sub_2208352E4((uint64_t)v119, qword_26AD40FF8);
            uint64_t v32 = v123[0];
            char v33 = v123[1];
            uint64_t v34 = v121;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_220826DB8(0, *(void *)(v34 + 16) + 1, 1);
              uint64_t v34 = v121;
            }
            unint64_t v36 = *(void *)(v34 + 16);
            unint64_t v35 = *(void *)(v34 + 24);
            if (v36 >= v35 >> 1)
            {
              sub_220826DB8((char *)(v35 > 1), v36 + 1, 1);
              uint64_t v34 = v121;
            }
            *(void *)(v34 + 16) = v36 + 1;
            uint64_t v37 = v34 + 16 * v36;
            *(void *)(v37 + 32) = v32;
            *(unsigned char *)(v37 + 40) = v33;
            v20 += 32;
            --v29;
          }
          while (v29);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_57:
          sub_220831BD0(v34);
          uint64_t v13 = v39;
          swift_bridgeObjectRelease();
          char v40 = (uint64_t *)&unk_26AD413F0;
LABEL_58:
          uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(v40);
          v120 = &off_26D2223C0;
          v119[0] = v116;
          uint64_t v41 = v118;
          goto LABEL_5;
        }
LABEL_47:
        swift_bridgeObjectRelease();
        uint64_t v34 = MEMORY[0x263F8EE78];
        goto LABEL_57;
      }
    }
    sub_2208352E4((uint64_t)v124, qword_26AD40FF8);
LABEL_15:
    sub_220835280((uint64_t)v119, (uint64_t)v124, qword_26AD40FF8);
    sub_220835280((uint64_t)v124, (uint64_t)v123, qword_26AD40FF8);
    __swift_instantiateConcreteTypeFromMangledName(qword_26AD40FF8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD40FE0);
    if (swift_dynamicCast()) {
      goto LABEL_10;
    }
    sub_2208352E4((uint64_t)v124, qword_26AD40FF8);
    sub_2208352E4((uint64_t)v119, qword_26AD40FF8);
    swift_bridgeObjectRetain();
    uint64_t v23 = v20;
    uint64_t v24 = v19;
    while (1)
    {
      sub_220835280(v23, (uint64_t)v119, qword_26AD40FF8);
      sub_220835280((uint64_t)v119, (uint64_t)v124, qword_26AD40FF8);
      if (!v125) {
        break;
      }
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_23;
      }
      sub_220835280((uint64_t)v119, (uint64_t)v124, qword_26AD40FF8);
LABEL_18:
      sub_2208352E4((uint64_t)v124, qword_26AD40FF8);
      sub_2208352E4((uint64_t)v119, qword_26AD40FF8);
      v23 += 32;
      if (!--v24)
      {
        uint64_t v42 = v117;
        swift_bridgeObjectRelease();
        int64_t v43 = *(void *)(v42 + 16);
        if (v43)
        {
          uint64_t v121 = MEMORY[0x263F8EE78];
          swift_bridgeObjectRetain();
          sub_220826D98(0, v43, 0);
          do
          {
            sub_220835280(v20, (uint64_t)v119, qword_26AD40FF8);
            sub_220835280((uint64_t)v119, (uint64_t)v124, qword_26AD40FF8);
            if (v125)
            {
              char v44 = swift_dynamicCast();
              if ((v44 & 1) == 0) {
                v123[0] = 0;
              }
              char v45 = v44 ^ 1;
            }
            else
            {
              sub_2208352E4((uint64_t)v124, qword_26AD40FF8);
              v123[0] = 0;
              char v45 = 1;
            }
            LOBYTE(v123[1]) = v45;
            sub_2208352E4((uint64_t)v119, qword_26AD40FF8);
            uint64_t v46 = v123[0];
            char v47 = v123[1];
            uint64_t v48 = v121;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_220826D98(0, *(void *)(v48 + 16) + 1, 1);
              uint64_t v48 = v121;
            }
            unint64_t v50 = *(void *)(v48 + 16);
            unint64_t v49 = *(void *)(v48 + 24);
            if (v50 >= v49 >> 1)
            {
              sub_220826D98((char *)(v49 > 1), v50 + 1, 1);
              uint64_t v48 = v121;
            }
            *(void *)(v48 + 16) = v50 + 1;
            uint64_t v51 = v48 + 16 * v50;
            *(void *)(v51 + 32) = v46;
            *(unsigned char *)(v51 + 40) = v47;
            v20 += 32;
            --v43;
          }
          while (v43);
          swift_bridgeObjectRelease();
          uint64_t v41 = v118;
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v48 = MEMORY[0x263F8EE78];
          uint64_t v41 = v118;
        }
        sub_220832520(v48);
        uint64_t v13 = v12;
        swift_bridgeObjectRelease();
        BOOL v14 = (uint64_t *)&unk_26AD413E8;
        goto LABEL_4;
      }
    }
    sub_2208352E4((uint64_t)v124, qword_26AD40FF8);
LABEL_23:
    sub_220835280((uint64_t)v119, (uint64_t)v124, qword_26AD40FF8);
    sub_220835280((uint64_t)v124, (uint64_t)v123, qword_26AD40FF8);
    __swift_instantiateConcreteTypeFromMangledName(qword_26AD40FF8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD40FD0);
    if (swift_dynamicCast()) {
      goto LABEL_18;
    }
    sub_2208352E4((uint64_t)v124, qword_26AD40FF8);
    sub_2208352E4((uint64_t)v119, qword_26AD40FF8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v25 = v20;
    uint64_t v26 = v19;
    while (1)
    {
      sub_220835280(v25, (uint64_t)v119, qword_26AD40FF8);
      sub_220835280((uint64_t)v119, (uint64_t)v124, qword_26AD40FF8);
      if (!v125) {
        break;
      }
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_31;
      }
      sub_220835280((uint64_t)v119, (uint64_t)v124, qword_26AD40FF8);
LABEL_26:
      sub_2208352E4((uint64_t)v124, qword_26AD40FF8);
      sub_2208352E4((uint64_t)v119, qword_26AD40FF8);
      v25 += 32;
      if (!--v26)
      {
        uint64_t v52 = v117;
        swift_bridgeObjectRelease();
        int64_t v53 = *(void *)(v52 + 16);
        if (v53)
        {
          v123[0] = MEMORY[0x263F8EE78];
          swift_bridgeObjectRetain();
          sub_220826D78(0, v53, 0);
          do
          {
            sub_220835280(v20, (uint64_t)v119, qword_26AD40FF8);
            sub_220835280((uint64_t)v119, (uint64_t)v124, qword_26AD40FF8);
            if (v125)
            {
              char v54 = swift_dynamicCast();
              if ((v54 & 1) == 0) {
                LODWORD(v121) = 0;
              }
              char v55 = v54 ^ 1;
            }
            else
            {
              sub_2208352E4((uint64_t)v124, qword_26AD40FF8);
              LODWORD(v121) = 0;
              char v55 = 1;
            }
            BYTE4(v121) = v55;
            sub_2208352E4((uint64_t)v119, qword_26AD40FF8);
            int v56 = v121;
            char v57 = BYTE4(v121);
            uint64_t v58 = v123[0];
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_220826D78(0, *(void *)(v58 + 16) + 1, 1);
              uint64_t v58 = v123[0];
            }
            unint64_t v60 = *(void *)(v58 + 16);
            unint64_t v59 = *(void *)(v58 + 24);
            if (v60 >= v59 >> 1)
            {
              sub_220826D78((char *)(v59 > 1), v60 + 1, 1);
              uint64_t v58 = v123[0];
            }
            *(void *)(v58 + 16) = v60 + 1;
            uint64_t v61 = v58 + 8 * v60;
            *(_DWORD *)(v61 + 32) = v56;
            *(unsigned char *)(v61 + 36) = v57;
            v20 += 32;
            --v53;
          }
          while (v53);
          swift_bridgeObjectRelease();
          uint64_t v41 = v118;
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v58 = MEMORY[0x263F8EE78];
          uint64_t v41 = v118;
        }
        sub_220832AC8(v58);
        uint64_t v13 = v67;
        swift_bridgeObjectRelease();
        BOOL v14 = (uint64_t *)&unk_267F185D0;
        goto LABEL_4;
      }
    }
    sub_2208352E4((uint64_t)v124, qword_26AD40FF8);
LABEL_31:
    sub_220835280((uint64_t)v119, (uint64_t)v124, qword_26AD40FF8);
    sub_220835280((uint64_t)v124, (uint64_t)v123, qword_26AD40FF8);
    __swift_instantiateConcreteTypeFromMangledName(qword_26AD40FF8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD40FD8);
    if (swift_dynamicCast()) {
      goto LABEL_26;
    }
    sub_2208352E4((uint64_t)v124, qword_26AD40FF8);
    sub_2208352E4((uint64_t)v119, qword_26AD40FF8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v27 = v20;
    uint64_t v28 = v19;
    while (1)
    {
      sub_220835280(v27, (uint64_t)v119, qword_26AD40FF8);
      sub_220835280((uint64_t)v119, (uint64_t)v124, qword_26AD40FF8);
      if (!v125) {
        break;
      }
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_54;
      }
      uint64_t v38 = v123[1];
      swift_bridgeObjectRelease();
      sub_220835280((uint64_t)v119, (uint64_t)v124, qword_26AD40FF8);
      if (!v38) {
        goto LABEL_55;
      }
LABEL_49:
      sub_2208352E4((uint64_t)v124, qword_26AD40FF8);
      sub_2208352E4((uint64_t)v119, qword_26AD40FF8);
      v27 += 32;
      if (!--v28)
      {
        uint64_t v62 = v117;
        swift_bridgeObjectRelease();
        int64_t v63 = *(void *)(v62 + 16);
        if (v63)
        {
          uint64_t v121 = MEMORY[0x263F8EE78];
          swift_bridgeObjectRetain();
          sub_220826D58(0, v63, 0);
          while (1)
          {
            sub_220835280(v20, (uint64_t)v119, qword_26AD40FF8);
            sub_220835280((uint64_t)v119, (uint64_t)v124, qword_26AD40FF8);
            if (v125)
            {
              if (swift_dynamicCast()) {
                goto LABEL_93;
              }
            }
            else
            {
              sub_2208352E4((uint64_t)v124, qword_26AD40FF8);
            }
            *(_OWORD *)v123 = 0uLL;
LABEL_93:
            sub_2208352E4((uint64_t)v119, qword_26AD40FF8);
            long long v112 = *(_OWORD *)v123;
            uint64_t v64 = v121;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_220826D58(0, *(void *)(v64 + 16) + 1, 1);
              uint64_t v64 = v121;
            }
            unint64_t v66 = *(void *)(v64 + 16);
            unint64_t v65 = *(void *)(v64 + 24);
            if (v66 >= v65 >> 1)
            {
              sub_220826D58((void *)(v65 > 1), v66 + 1, 1);
              uint64_t v64 = v121;
            }
            *(void *)(v64 + 16) = v66 + 1;
            *(_OWORD *)(v64 + 16 * v66 + 32) = v112;
            v20 += 32;
            if (!--v63)
            {
              swift_bridgeObjectRelease();
              uint64_t v41 = v118;
              swift_bridgeObjectRelease();
              goto LABEL_133;
            }
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v64 = MEMORY[0x263F8EE78];
        uint64_t v41 = v118;
LABEL_133:
        uint64_t v13 = sub_2208322FC(v64);
        swift_bridgeObjectRelease();
        BOOL v14 = (uint64_t *)&unk_26AD413E0;
        goto LABEL_4;
      }
    }
    sub_2208352E4((uint64_t)v124, qword_26AD40FF8);
LABEL_54:
    sub_220835280((uint64_t)v119, (uint64_t)v124, qword_26AD40FF8);
LABEL_55:
    sub_220835280((uint64_t)v124, (uint64_t)v123, qword_26AD40FF8);
    __swift_instantiateConcreteTypeFromMangledName(qword_26AD40FF8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD40FC0);
    if (swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      goto LABEL_49;
    }
    sub_2208352E4((uint64_t)v124, qword_26AD40FF8);
    sub_2208352E4((uint64_t)v119, qword_26AD40FF8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v68 = v20;
    uint64_t v69 = v19;
    while (2)
    {
      sub_220835280(v68, (uint64_t)v119, qword_26AD40FF8);
      sub_220835280((uint64_t)v119, (uint64_t)v124, qword_26AD40FF8);
      if (!v125)
      {
        sub_2208352E4((uint64_t)v124, qword_26AD40FF8);
        break;
      }
      if (swift_dynamicCast())
      {
        sub_220835280((uint64_t)v119, (uint64_t)v124, qword_26AD40FF8);
LABEL_103:
        sub_2208352E4((uint64_t)v124, qword_26AD40FF8);
        sub_2208352E4((uint64_t)v119, qword_26AD40FF8);
        v68 += 32;
        if (--v69) {
          continue;
        }
        uint64_t v73 = v117;
        swift_bridgeObjectRelease();
        int64_t v74 = *(void *)(v73 + 16);
        if (!v74)
        {
          swift_bridgeObjectRelease();
          uint64_t v76 = MEMORY[0x263F8EE78];
          uint64_t v41 = v118;
LABEL_148:
          sub_220832810(v76);
          uint64_t v13 = v84;
          swift_bridgeObjectRelease();
          BOOL v14 = (uint64_t *)&unk_26AD41140;
          goto LABEL_4;
        }
        v123[0] = MEMORY[0x263F8EE78];
        swift_bridgeObjectRetain();
        sub_220826D38(0, v74, 0);
        while (2)
        {
          sub_220835280(v20, (uint64_t)v119, qword_26AD40FF8);
          sub_220835280((uint64_t)v119, (uint64_t)v124, qword_26AD40FF8);
          if (v125)
          {
            if (swift_dynamicCast())
            {
LABEL_126:
              sub_2208352E4((uint64_t)v119, qword_26AD40FF8);
              char v75 = v121;
              uint64_t v76 = v123[0];
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_220826D38(0, *(void *)(v76 + 16) + 1, 1);
                uint64_t v76 = v123[0];
              }
              unint64_t v78 = *(void *)(v76 + 16);
              unint64_t v77 = *(void *)(v76 + 24);
              if (v78 >= v77 >> 1)
              {
                sub_220826D38((char *)(v77 > 1), v78 + 1, 1);
                uint64_t v76 = v123[0];
              }
              *(void *)(v76 + 16) = v78 + 1;
              *(unsigned char *)(v76 + v78 + 32) = v75;
              v20 += 32;
              if (!--v74)
              {
                swift_bridgeObjectRelease();
                uint64_t v41 = v118;
                swift_bridgeObjectRelease();
                goto LABEL_148;
              }
              continue;
            }
          }
          else
          {
            sub_2208352E4((uint64_t)v124, qword_26AD40FF8);
          }
          break;
        }
        LOBYTE(v121) = 2;
        goto LABEL_126;
      }
      break;
    }
    sub_220835280((uint64_t)v119, (uint64_t)v124, qword_26AD40FF8);
    sub_220835280((uint64_t)v124, (uint64_t)v123, qword_26AD40FF8);
    __swift_instantiateConcreteTypeFromMangledName(qword_26AD40FF8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F185B0);
    if (swift_dynamicCast()) {
      goto LABEL_103;
    }
    sub_2208352E4((uint64_t)v124, qword_26AD40FF8);
    sub_2208352E4((uint64_t)v119, qword_26AD40FF8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v70 = v20;
    uint64_t v71 = v19;
    while (2)
    {
      sub_220835280(v70, (uint64_t)v119, qword_26AD40FF8);
      sub_220835280((uint64_t)v119, (uint64_t)v124, qword_26AD40FF8);
      if (v125)
      {
        if (swift_dynamicCast())
        {
          unint64_t v72 = v123[1];
          sub_22080B88C(v123[0], v123[1]);
          sub_220835280((uint64_t)v119, (uint64_t)v124, qword_26AD40FF8);
          if (v72 >> 60 != 15) {
            goto LABEL_114;
          }
          goto LABEL_112;
        }
      }
      else
      {
        sub_2208352E4((uint64_t)v124, qword_26AD40FF8);
      }
      sub_220835280((uint64_t)v119, (uint64_t)v124, qword_26AD40FF8);
LABEL_112:
      sub_220835280((uint64_t)v124, (uint64_t)v123, qword_26AD40FF8);
      __swift_instantiateConcreteTypeFromMangledName(qword_26AD40FF8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_267F185B8);
      if ((swift_dynamicCast() & 1) == 0)
      {
        sub_2208352E4((uint64_t)v124, qword_26AD40FF8);
        sub_2208352E4((uint64_t)v119, qword_26AD40FF8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        uint64_t v85 = v20;
        uint64_t v86 = v110;
        do
        {
          sub_220835280(v85, (uint64_t)v119, qword_26AD40FF8);
          sub_220835280((uint64_t)v119, (uint64_t)v124, qword_26AD40FF8);
          if (v125)
          {
            uint64_t v87 = sub_22093E100();
            int v88 = swift_dynamicCast();
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v87 - 8) + 56))(v86, v88 ^ 1u, 1, v87);
          }
          else
          {
            sub_2208352E4((uint64_t)v124, qword_26AD40FF8);
            uint64_t v87 = sub_22093E100();
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 56))(v86, 1, 1, v87);
          }
          sub_22093E100();
          uint64_t v89 = *(void *)(v87 - 8);
          int v90 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v89 + 48))(v86, 1, v87);
          sub_220835280((uint64_t)v119, (uint64_t)v124, qword_26AD40FF8);
          if (v90)
          {
            sub_220835280((uint64_t)v124, (uint64_t)v123, qword_26AD40FF8);
            __swift_instantiateConcreteTypeFromMangledName(qword_26AD40FF8);
            uint64_t v91 = (uint64_t)v109;
            if ((swift_dynamicCast() & 1) == 0)
            {
              sub_2208352E4((uint64_t)v124, qword_26AD40FF8);
              sub_2208352E4(v110, qword_26AD411B8);
              sub_2208352E4((uint64_t)v119, qword_26AD40FF8);
              uint64_t v92 = v117;
              swift_bridgeObjectRelease();
              uint64_t v13 = sub_2208346E8(v92);
              swift_bridgeObjectRelease();
              char v40 = (uint64_t *)&unk_267F185C0;
              goto LABEL_58;
            }
            sub_2208352E4(v91, qword_26AD411B8);
          }
          sub_2208352E4((uint64_t)v124, qword_26AD40FF8);
          uint64_t v86 = v110;
          sub_2208352E4(v110, qword_26AD411B8);
          sub_2208352E4((uint64_t)v119, qword_26AD40FF8);
          v85 += 32;
          --v19;
        }
        while (v19);
        uint64_t v93 = v117;
        swift_bridgeObjectRelease();
        int64_t v94 = *(void *)(v93 + 16);
        if (v94)
        {
          v123[0] = MEMORY[0x263F8EE78];
          swift_bridgeObjectRetain();
          sub_220826CF8(0, v94, 0);
          uint64_t v95 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v89 + 56);
          do
          {
            sub_220835280(v20, (uint64_t)v119, qword_26AD40FF8);
            sub_220835280((uint64_t)v119, (uint64_t)v124, qword_26AD40FF8);
            if (v125)
            {
              uint64_t v96 = v111;
              int v97 = swift_dynamicCast();
              (*v95)(v96, v97 ^ 1u, 1, v87);
            }
            else
            {
              sub_2208352E4((uint64_t)v124, qword_26AD40FF8);
              (*v95)(v111, 1, 1, v87);
            }
            sub_2208352E4((uint64_t)v119, qword_26AD40FF8);
            uint64_t v98 = v123[0];
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_220826CF8(0, *(void *)(v98 + 16) + 1, 1);
              uint64_t v98 = v123[0];
            }
            unint64_t v100 = *(void *)(v98 + 16);
            unint64_t v99 = *(void *)(v98 + 24);
            if (v100 >= v99 >> 1)
            {
              sub_220826CF8(v99 > 1, v100 + 1, 1);
              uint64_t v98 = v123[0];
            }
            *(void *)(v98 + 16) = v100 + 1;
            sub_220834D3C(v111, v98+ ((*(unsigned __int8 *)(v108 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80))+ *(void *)(v108 + 72) * v100, qword_26AD411B8);
            v20 += 32;
            --v94;
          }
          while (v94);
          swift_bridgeObjectRelease();
          uint64_t v41 = v118;
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v98 = MEMORY[0x263F8EE78];
          uint64_t v41 = v118;
        }
        uint64_t v13 = sub_220832D70(v98);
        swift_bridgeObjectRelease();
        BOOL v14 = (uint64_t *)&unk_26AD41138;
        goto LABEL_4;
      }
      sub_220834944(v121, v122);
LABEL_114:
      sub_2208352E4((uint64_t)v124, qword_26AD40FF8);
      sub_2208352E4((uint64_t)v119, qword_26AD40FF8);
      v70 += 32;
      if (--v71) {
        continue;
      }
      break;
    }
    uint64_t v79 = v117;
    swift_bridgeObjectRelease();
    int64_t v80 = *(void *)(v79 + 16);
    if (v80)
    {
      uint64_t v121 = MEMORY[0x263F8EE78];
      swift_bridgeObjectRetain();
      sub_220826D18(0, v80, 0);
      while (1)
      {
        sub_220835280(v20, (uint64_t)v119, qword_26AD40FF8);
        sub_220835280((uint64_t)v119, (uint64_t)v124, qword_26AD40FF8);
        if (v125)
        {
          if (swift_dynamicCast()) {
            goto LABEL_141;
          }
        }
        else
        {
          sub_2208352E4((uint64_t)v124, qword_26AD40FF8);
        }
        *(_OWORD *)v123 = v107;
LABEL_141:
        sub_2208352E4((uint64_t)v119, qword_26AD40FF8);
        long long v112 = *(_OWORD *)v123;
        uint64_t v81 = v121;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_220826D18(0, *(void *)(v81 + 16) + 1, 1);
          uint64_t v81 = v121;
        }
        unint64_t v83 = *(void *)(v81 + 16);
        unint64_t v82 = *(void *)(v81 + 24);
        if (v83 >= v82 >> 1)
        {
          sub_220826D18((void *)(v82 > 1), v83 + 1, 1);
          uint64_t v81 = v121;
        }
        *(void *)(v81 + 16) = v83 + 1;
        *(_OWORD *)(v81 + 16 * v83 + 32) = v112;
        v20 += 32;
        if (!--v80)
        {
          swift_bridgeObjectRelease();
          uint64_t v41 = v118;
          swift_bridgeObjectRelease();
          goto LABEL_170;
        }
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v81 = MEMORY[0x263F8EE78];
    uint64_t v41 = v118;
LABEL_170:
    uint64_t v13 = sub_2208331B0(v81);
    swift_bridgeObjectRelease();
    BOOL v14 = (uint64_t *)&unk_267F185C8;
LABEL_4:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(v14);
    v120 = &off_26D2223C0;
    v119[0] = v116;
LABEL_5:
    v119[1] = v41;
    v119[2] = v13;
    v119[3] = v15;
    swift_bridgeObjectRetain();
    swift_retain();
    DataFrame.append(column:)((uint64_t)v119);
    sub_22080B0D8((uint64_t)v119);
    swift_release();
    unint64_t result = swift_bridgeObjectRelease();
    a1 = v113;
    if (++v11 == v115)
    {
      unint64_t result = swift_bridgeObjectRelease();
      int64x2_t v101 = v126;
      unint64_t v102 = v127;
      a2 = v106;
LABEL_175:
      *a2 = v101;
      a2[1].i64[0] = v102;
      return result;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_22081A204(unint64_t result, uint64_t a2)
{
  uint64_t v4 = result;
  uint64_t v5 = *(void *)v2;
  uint64_t v6 = *(void *)(v2 + 8);
  int v7 = *(unsigned __int8 *)(v2 + 16);
  if (!*(unsigned char *)(v2 + 16))
  {
LABEL_4:
    unint64_t result = sub_220883950(*(void *)v2, *(void *)(v2 + 8), *(unsigned char *)(v2 + 16));
    if (v9)
    {
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    if (v4 == a2 || v8 > v4)
    {
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    if (!v7)
    {
LABEL_13:
      unint64_t result = sub_220883950(v5, v6, v7);
      if (v11)
      {
LABEL_35:
        __break(1u);
        return result;
      }
      if (v10 != v4)
      {
        if (v7)
        {
          unint64_t v14 = *(void *)(v5 + 16);
LABEL_27:
          int64_t v15 = v14;
          goto LABEL_28;
        }
LABEL_26:
        unint64_t v14 = 1;
        goto LABEL_27;
      }
      if (!v7)
      {
        unint64_t v13 = 0;
        if (v5 <= a2) {
          goto LABEL_18;
        }
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
      uint64_t v12 = *(void *)(v5 + 16);
      if (v12)
      {
        unint64_t v13 = v12 - 1;
        uint64_t v5 = *(void *)(v5 + 16 * (v12 - 1) + 32);
        if (v5 <= a2)
        {
LABEL_18:
          return sub_22081AED0(v5, a2, v13);
        }
        goto LABEL_25;
      }
      goto LABEL_32;
    }
    goto LABEL_12;
  }
  if (v7 == 1)
  {
    if (*(void *)(v5 + 16)) {
      goto LABEL_4;
    }
  }
  else
  {
    if (result != a2) {
      goto LABEL_21;
    }
    __break(1u);
  }
  if (result == a2)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
LABEL_12:
  if (*(void *)(v5 + 16)) {
    goto LABEL_13;
  }
LABEL_21:
  unint64_t v14 = 0;
  int64_t v15 = 0;
LABEL_28:

  return sub_220869DC4(v14, v15, v4, a2);
}

int64_t sub_22081A360@<X0>(int64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_26;
  }
  if (a4)
  {
    if (a4 == 1) {
      unint64_t v9 = *(void *)(a2 + 16);
    }
    else {
      unint64_t v9 = 0;
    }
  }
  else
  {
    unint64_t v9 = 1;
  }
  unint64_t result = sub_2209296B8(0, result, v9, a2, a3, a4);
  if (v10)
  {
    if (a4 == 2)
    {
      unint64_t result = 0;
      uint64_t v11 = 0;
      goto LABEL_24;
    }
    if (a4 != 1)
    {
      unint64_t result = 1;
      uint64_t v11 = 1;
      goto LABEL_24;
    }
    unint64_t result = *(void *)(a2 + 16);
    goto LABEL_16;
  }
  if (!a4) {
    goto LABEL_19;
  }
  if (a4 != 2)
  {
LABEL_16:
    uint64_t v11 = *(void *)(a2 + 16);
    if (v11 >= result)
    {
      if (result < 0)
      {
LABEL_18:
        do
        {
          __break(1u);
LABEL_19:
          if (result > 1) {
            goto LABEL_27;
          }
          uint64_t v11 = 1;
        }
        while (result < 0);
      }
LABEL_24:
      *(void *)a5 = result;
      *(void *)(a5 + 8) = v11;
      *(void *)(a5 + 16) = a2;
      *(void *)(a5 + 24) = a3;
      *(unsigned char *)(a5 + 32) = a4;
      return result;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (result <= 0)
  {
    uint64_t v11 = 0;
    if (result < 0) {
      goto LABEL_18;
    }
    goto LABEL_24;
  }
LABEL_28:
  __break(1u);
  return result;
}

char *sub_22081A46C(char *result, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, char a6)
{
  unint64_t v7 = 0;
  unint64_t v8 = 0;
  uint64_t v31 = a4 + 32;
  unint64_t v9 = result + 40;
  char v10 = (char *)MEMORY[0x263F8EE78];
  uint64_t v39 = result;
  uint64_t v34 = result + 40;
  while (1)
  {
    if (a6)
    {
      if (a6 == 1)
      {
        unint64_t v11 = *(void *)(a4 + 16);
        if (v8 != v11)
        {
          if (v8 >= v11) {
            goto LABEL_66;
          }
          uint64_t v12 = (uint64_t *)(v31 + 16 * v8);
          uint64_t v14 = *v12;
          uint64_t v13 = v12[1];
          goto LABEL_11;
        }
        sub_22080B6B4(a4, a5, 1);
      }
      else
      {
        char v10 = (char *)MEMORY[0x263F8EE78];
      }
LABEL_57:
      sub_22081ACCC((uint64_t)v10, 0, 1);
      return v10;
    }
    if (v8 == 1) {
      goto LABEL_57;
    }
    if (v8) {
      goto LABEL_67;
    }
    uint64_t v14 = a4;
    uint64_t v13 = a5;
LABEL_11:
    int64_t v15 = (uint64_t *)&v9[16 * v7];
    uint64_t v16 = v7;
    unint64_t v37 = v8 + 1;
    int v17 = a3;
    if (!a3)
    {
      while (v16 < 1)
      {
        uint64_t v18 = a2;
        if (v16) {
          goto LABEL_60;
        }
LABEL_18:
        if (v14 < v18) {
          break;
        }
        ++v16;
        v15 += 2;
        int v17 = a3;
        if (a3) {
          goto LABEL_12;
        }
      }
      goto LABEL_21;
    }
LABEL_12:
    if (v17 != 1) {
      goto LABEL_22;
    }
    if (v16 < *((void *)result + 2)) {
      break;
    }
LABEL_21:
    unint64_t v7 = v16;
LABEL_22:
    if (v14 <= (uint64_t)result) {
      uint64_t v19 = (uint64_t)result;
    }
    else {
      uint64_t v19 = v14;
    }
    uint64_t v38 = v19;
    uint64_t v20 = (uint64_t *)&v9[16 * v7];
    unint64_t v32 = v7;
    char v33 = v10;
    for (int i = a3; !a3; int i = a3)
    {
      uint64_t v22 = result;
      if (v7) {
        goto LABEL_2;
      }
LABEL_31:
      if ((uint64_t)v22 >= v13) {
        goto LABEL_2;
      }
      if (a3)
      {
        if (v7 >= *((void *)result + 2)) {
          goto LABEL_61;
        }
        if (v14 <= *(v20 - 1)) {
          uint64_t v23 = *(v20 - 1);
        }
        else {
          uint64_t v23 = v14;
        }
        uint64_t v24 = *v20;
      }
      else
      {
        uint64_t v23 = v38;
        uint64_t v24 = a2;
        if (v7) {
          goto LABEL_64;
        }
      }
      if (v13 >= v24) {
        uint64_t v25 = v24;
      }
      else {
        uint64_t v25 = v13;
      }
      if (v25 < v23)
      {
        __break(1u);
        goto LABEL_59;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v10 = sub_22081B3EC(0, *((void *)v10 + 2) + 1, 1, v10);
      }
      unint64_t v27 = *((void *)v10 + 2);
      unint64_t v26 = *((void *)v10 + 3);
      if (v27 >= v26 >> 1) {
        char v10 = sub_22081B3EC((char *)(v26 > 1), v27 + 1, 1, v10);
      }
      *((void *)v10 + 2) = v27 + 1;
      uint64_t v28 = &v10[16 * v27];
      *((void *)v28 + 4) = v23;
      *((void *)v28 + 5) = v25;
      if (a3)
      {
        unint64_t result = v39;
        if (v7 >= *((void *)v39 + 2)) {
          goto LABEL_62;
        }
        uint64_t v29 = *v20;
      }
      else
      {
        unint64_t result = v39;
        uint64_t v29 = a2;
        if (v7) {
          goto LABEL_65;
        }
      }
      if (v29 >= v13) {
        goto LABEL_2;
      }
      ++v7;
      v20 += 2;
    }
    if (i == 1)
    {
      if ((int64_t)v7 < *((void *)result + 2))
      {
        if ((v7 & 0x8000000000000000) == 0)
        {
          uint64_t v22 = (char *)*(v20 - 1);
          goto LABEL_31;
        }
        goto LABEL_63;
      }
LABEL_2:
      unint64_t v8 = v37;
      unint64_t v9 = v34;
    }
    else
    {
      char v10 = v33;
      unint64_t v9 = v34;
      unint64_t v8 = v37;
      unint64_t v7 = v32;
    }
  }
  if ((v16 & 0x8000000000000000) == 0)
  {
    uint64_t v18 = *v15;
    goto LABEL_18;
  }
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
  return result;
}

void sub_22081A768(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = a1 + 7;
  if (__OFADD__(a1, 7))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v5 = a1 + 14;
  if (v2 >= 0) {
    uint64_t v5 = a1 + 7;
  }
  uint64_t v6 = v5 >> 3;
  uint64_t v8 = v6 - 1;
  BOOL v7 = v6 < 1;
  uint64_t v9 = v6 + 62;
  if (v7) {
    uint64_t v10 = v9;
  }
  else {
    uint64_t v10 = v8;
  }
  uint64_t v11 = *(void *)(*(void *)(sub_22093E100() - 8) + 72);
  uint64_t v12 = v11 * a1;
  if ((unsigned __int128)(v11 * (__int128)a1) >> 64 != (v11 * a1) >> 63) {
    goto LABEL_14;
  }
  unint64_t v13 = v10 & 0xFFFFFFFFFFFFFFC0;
  unint64_t v14 = (v10 & 0xFFFFFFFFFFFFFFC0) + 128;
  unint64_t v15 = v14 + v12;
  if (__OFADD__(v14, v12))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v16 = (void *)swift_slowAlloc();
  v16[1] = 0;
  v16[2] = 0;
  *uint64_t v16 = a1;
  if (v2 < -1015)
  {
LABEL_16:
    __break(1u);
    return;
  }
  int v17 = v16;
  if (v13 != -64) {
    bzero(v16 + 8, v13 + 64);
  }
  *a2 = v17;
  a2[1] = (char *)v17 + v15;
}

void sub_22081A844(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = a1 + 7;
  if (__OFADD__(a1, 7))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v5 = a1 + 14;
  if (v2 >= 0) {
    uint64_t v5 = a1 + 7;
  }
  uint64_t v6 = v5 >> 3;
  uint64_t v8 = v6 - 1;
  BOOL v7 = v6 < 1;
  uint64_t v9 = v6 + 62;
  if (!v7) {
    uint64_t v9 = v8;
  }
  if ((unint64_t)(a1 - 0x800000000000000) >> 60 != 15) {
    goto LABEL_13;
  }
  unint64_t v10 = v9 & 0xFFFFFFFFFFFFFFC0;
  unint64_t v11 = (v9 & 0xFFFFFFFFFFFFFFC0) + 128;
  unint64_t v12 = v11 + 16 * a1;
  if (__OFADD__(v11, 16 * a1))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v13 = (void *)swift_slowAlloc();
  v13[1] = 0;
  _OWORD v13[2] = 0;
  *unint64_t v13 = a1;
  if (v2 < -1015)
  {
LABEL_15:
    __break(1u);
    return;
  }
  unint64_t v14 = v13;
  if (v10 != -64) {
    bzero(v13 + 8, v10 + 64);
  }
  *a2 = v14;
  a2[1] = (char *)v14 + v12;
}

void sub_22081A908(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = a1 + 7;
  if (__OFADD__(a1, 7))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v5 = a1 + 14;
  if (v2 >= 0) {
    uint64_t v5 = a1 + 7;
  }
  uint64_t v6 = v5 >> 3;
  uint64_t v8 = v6 - 1;
  BOOL v7 = v6 < 1;
  uint64_t v9 = v6 + 62;
  if (!v7) {
    uint64_t v9 = v8;
  }
  if ((unint64_t)(a1 - 0x2000000000000000) >> 62 != 3) {
    goto LABEL_13;
  }
  unint64_t v10 = v9 & 0xFFFFFFFFFFFFFFC0;
  unint64_t v11 = (v9 & 0xFFFFFFFFFFFFFFC0) + 128;
  unint64_t v12 = v11 + 4 * a1;
  if (__OFADD__(v11, 4 * a1))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v13 = (void *)swift_slowAlloc();
  v13[1] = 0;
  _OWORD v13[2] = 0;
  *unint64_t v13 = a1;
  if (v2 < -1015)
  {
LABEL_15:
    __break(1u);
    return;
  }
  unint64_t v14 = v13;
  if (v10 != -64) {
    bzero(v13 + 8, v10 + 64);
  }
  *a2 = v14;
  a2[1] = (char *)v14 + v12;
}

void sub_22081A9D0(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = a1 + 7;
  if (__OFADD__(a1, 7))
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v5 = a1 + 14;
  if (v2 >= 0) {
    uint64_t v5 = a1 + 7;
  }
  uint64_t v6 = v5 >> 3;
  uint64_t v8 = v6 - 1;
  BOOL v7 = v6 < 1;
  uint64_t v9 = v6 + 62;
  if (!v7) {
    uint64_t v9 = v8;
  }
  unint64_t v10 = v9 & 0xFFFFFFFFFFFFFFC0;
  unint64_t v11 = (v9 & 0xFFFFFFFFFFFFFFC0) + 128;
  uint64_t v12 = v11 + a1;
  if (__OFADD__(v11, a1)) {
    goto LABEL_12;
  }
  unint64_t v13 = (void *)swift_slowAlloc();
  v13[1] = 0;
  _OWORD v13[2] = 0;
  *unint64_t v13 = a1;
  if (v2 < -1015)
  {
LABEL_13:
    __break(1u);
    return;
  }
  unint64_t v14 = v13;
  if (v10 != -64) {
    bzero(v13 + 8, v10 + 64);
  }
  *a2 = v14;
  a2[1] = (char *)v14 + v12;
}

void sub_22081AA7C(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = a1 + 7;
  if (__OFADD__(a1, 7))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v5 = a1 + 14;
  if (v2 >= 0) {
    uint64_t v5 = a1 + 7;
  }
  uint64_t v6 = v5 >> 3;
  uint64_t v8 = v6 - 1;
  BOOL v7 = v6 < 1;
  uint64_t v9 = v6 + 62;
  if (!v7) {
    uint64_t v9 = v8;
  }
  uint64_t v10 = 24 * a1;
  if ((unsigned __int128)(a1 * (__int128)24) >> 64 != (24 * a1) >> 63) {
    goto LABEL_13;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFC0;
  unint64_t v12 = (v9 & 0xFFFFFFFFFFFFFFC0) + 128;
  unint64_t v13 = v12 + v10;
  if (__OFADD__(v12, v10))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v14 = (void *)swift_slowAlloc();
  v14[1] = 0;
  v14[2] = 0;
  *unint64_t v14 = a1;
  if (v2 < -1015)
  {
LABEL_15:
    __break(1u);
    return;
  }
  unint64_t v15 = v14;
  if (v11 != -64) {
    bzero(v14 + 8, v11 + 64);
  }
  *a2 = v15;
  a2[1] = (char *)v15 + v13;
}

void sub_22081AB44(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = a1 + 7;
  if (__OFADD__(a1, 7))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v5 = a1 + 14;
  if (v2 >= 0) {
    uint64_t v5 = a1 + 7;
  }
  uint64_t v6 = v5 >> 3;
  uint64_t v8 = v6 - 1;
  BOOL v7 = v6 < 1;
  uint64_t v9 = v6 + 62;
  if (!v7) {
    uint64_t v9 = v8;
  }
  if ((unint64_t)(a1 - 0x1000000000000000) >> 61 != 7) {
    goto LABEL_13;
  }
  unint64_t v10 = v9 & 0xFFFFFFFFFFFFFFC0;
  unint64_t v11 = (v9 & 0xFFFFFFFFFFFFFFC0) + 128;
  unint64_t v12 = v11 + 8 * a1;
  if (__OFADD__(v11, 8 * a1))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v13 = (void *)swift_slowAlloc();
  v13[1] = 0;
  _OWORD v13[2] = 0;
  *unint64_t v13 = a1;
  if (v2 < -1015)
  {
LABEL_15:
    __break(1u);
    return;
  }
  unint64_t v14 = v13;
  if (v10 != -64) {
    bzero(v13 + 8, v10 + 64);
  }
  *a2 = v14;
  a2[1] = (char *)v14 + v12;
}

void sub_22081AC08(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = a1 + 7;
  if (__OFADD__(a1, 7))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v5 = a1 + 14;
  if (v2 >= 0) {
    uint64_t v5 = a1 + 7;
  }
  uint64_t v6 = v5 >> 3;
  uint64_t v8 = v6 - 1;
  BOOL v7 = v6 < 1;
  uint64_t v9 = v6 + 62;
  if (!v7) {
    uint64_t v9 = v8;
  }
  if ((unint64_t)(a1 - 0x400000000000000) >> 59 != 31) {
    goto LABEL_13;
  }
  unint64_t v10 = v9 & 0xFFFFFFFFFFFFFFC0;
  unint64_t v11 = (v9 & 0xFFFFFFFFFFFFFFC0) + 128;
  unint64_t v12 = v11 + 32 * a1;
  if (__OFADD__(v11, 32 * a1))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v13 = (void *)swift_slowAlloc();
  v13[1] = 0;
  _OWORD v13[2] = 0;
  *unint64_t v13 = a1;
  if (v2 < -1015)
  {
LABEL_15:
    __break(1u);
    return;
  }
  unint64_t v14 = v13;
  if (v10 != -64) {
    bzero(v13 + 8, v10 + 64);
  }
  *a2 = v14;
  a2[1] = (char *)v14 + v12;
}

uint64_t sub_22081ACCC(uint64_t a1, uint64_t a2, char a3)
{
  sub_22081A360(1, a1, a2, a3, (uint64_t)&v22);
  unint64_t v6 = 0;
  uint64_t v7 = v24;
  uint64_t v8 = v25;
  char v9 = v26;
  if (v23 <= v22) {
    uint64_t v10 = v22;
  }
  else {
    uint64_t v10 = v23;
  }
  unint64_t v11 = (uint64_t *)(a1 + 40);
  unint64_t v12 = (uint64_t *)(v24 + 16 * v22 + 40);
  uint64_t v13 = v22 - v10;
  do
  {
    if (a3)
    {
      if (a3 != 1) {
        goto LABEL_27;
      }
      unint64_t v14 = *(void *)(a1 + 16);
      if (v6 == v14) {
        goto LABEL_27;
      }
      if (v6 >= v14) {
        goto LABEL_32;
      }
      uint64_t v15 = *(v11 - 1);
      uint64_t v16 = *v11;
    }
    else
    {
      if (v6 == 1) {
        goto LABEL_27;
      }
      if (v6) {
        goto LABEL_36;
      }
      uint64_t v15 = a1;
      uint64_t v16 = a2;
    }
    if (!(v22 - v23 + v6)) {
      goto LABEL_27;
    }
    if (!(v13 + v6))
    {
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      uint64_t result = sub_22093F090();
      __break(1u);
      return result;
    }
    unint64_t v17 = v22 + v6;
    if (v26)
    {
      if (v26 != 1) {
        goto LABEL_37;
      }
      if ((v17 & 0x8000000000000000) != 0) {
        goto LABEL_34;
      }
      unint64_t v18 = *(void *)(v24 + 16);
      if (v17 >= v18) {
        goto LABEL_35;
      }
      uint64_t v19 = *(v12 - 1);
      uint64_t v20 = *v12;
    }
    else
    {
      if (v17) {
        goto LABEL_33;
      }
      unint64_t v18 = 1;
      uint64_t v19 = v24;
      uint64_t v20 = v25;
    }
    if (v17 >= v18) {
      goto LABEL_31;
    }
    if (v16 >= v19) {
      break;
    }
    if (v15 == v16) {
      break;
    }
    v11 += 2;
    v12 += 2;
    ++v6;
  }
  while (v19 != v20);
  __break(1u);
LABEL_27:
  sub_220831F30(a1, a2, a3);
  sub_220831F30(a1, a2, a3);
  sub_22080B6B4(a1, a2, a3);

  return sub_22080B6B4(v7, v8, v9);
}

uint64_t sub_22081AED0(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v6 = result;
  int v7 = *(unsigned __int8 *)(v3 + 16);
  if (!*(unsigned char *)(v3 + 16))
  {
    if (!a3)
    {
LABEL_9:
      *(void *)uint64_t v3 = v6;
      *(void *)(v3 + 8) = a2;
      *(unsigned char *)(v3 + 16) = v7;
      return result;
    }
    __break(1u);
  }
  if (v7 == 1)
  {
    uint64_t v8 = *(void *)v3;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if (result)
    {
      if ((a3 & 0x8000000000000000) == 0) {
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t result = (uint64_t)sub_22080AB70(v8);
      uint64_t v8 = result;
      if ((a3 & 0x8000000000000000) == 0)
      {
LABEL_7:
        if (*(void *)(v8 + 16) > a3)
        {
          uint64_t v9 = v8 + 16 * a3;
          *(void *)(v9 + 32) = v6;
          *(void *)(v9 + 40) = a2;
          uint64_t v6 = v8;
          a2 = 0;
          goto LABEL_9;
        }
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_12:
    __break(1u);
  }
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

unint64_t sub_22081AFC4(unint64_t result, int64_t a2, uint64_t a3, uint64_t a4)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  unint64_t v6 = *v4;
  int64_t v7 = *(void *)(*v4 + 16);
  if (v7 < a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v8 = result;
  unint64_t v9 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  int64_t v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (!result || v11 > *(void *)(v6 + 24) >> 1)
  {
    if (v7 <= v11) {
      int64_t v14 = v7 + v10;
    }
    else {
      int64_t v14 = v7;
    }
    uint64_t result = (unint64_t)sub_22081B3EC((char *)result, v14, 1, (char *)v6);
    unint64_t v6 = result;
  }
  uint64_t v15 = (void *)(v6 + 32 + 16 * v8);
  if (!v10) {
    goto LABEL_19;
  }
  uint64_t v16 = *(void *)(v6 + 16);
  BOOL v17 = __OFSUB__(v16, a2);
  uint64_t v18 = v16 - a2;
  if (v17) {
    goto LABEL_25;
  }
  uint64_t result = (unint64_t)(v15 + 2);
  uint64_t v19 = (void *)(v6 + 32 + 16 * a2);
  if (v15 + 2 != v19 || result >= (unint64_t)&v19[2 * v18]) {
    uint64_t result = (unint64_t)memmove((void *)result, v19, 16 * v18);
  }
  uint64_t v20 = *(void *)(v6 + 16);
  BOOL v17 = __OFADD__(v20, v10);
  uint64_t v21 = v20 + v10;
  if (!v17)
  {
    *(void *)(v6 + 16) = v21;
LABEL_19:
    *uint64_t v15 = a3;
    v15[1] = a4;
    *uint64_t v4 = v6;
    return result;
  }
LABEL_26:
  __break(1u);
  return result;
}

unint64_t sub_22081B0E0(unint64_t result, int64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  unint64_t v8 = *v6;
  int64_t v9 = *(void *)(*v6 + 16);
  if (v9 < a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v10 = result;
  unint64_t v11 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v12 = 2 - v11;
  if (__OFSUB__(2, v11))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  int64_t v13 = v9 + v12;
  if (__OFADD__(v9, v12))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (!result || v13 > *(void *)(v8 + 24) >> 1)
  {
    if (v9 <= v13) {
      int64_t v17 = v9 + v12;
    }
    else {
      int64_t v17 = v9;
    }
    uint64_t result = (unint64_t)sub_22081B3EC((char *)result, v17, 1, (char *)v8);
    unint64_t v8 = result;
  }
  uint64_t v18 = (void *)(v8 + 32 + 16 * v10);
  if (!v12) {
    goto LABEL_19;
  }
  uint64_t v19 = *(void *)(v8 + 16);
  BOOL v20 = __OFSUB__(v19, a2);
  uint64_t v21 = v19 - a2;
  if (v20) {
    goto LABEL_25;
  }
  uint64_t result = (unint64_t)(v18 + 4);
  uint64_t v22 = (void *)(v8 + 32 + 16 * a2);
  if (v18 + 4 != v22 || result >= (unint64_t)&v22[2 * v21]) {
    uint64_t result = (unint64_t)memmove((void *)result, v22, 16 * v21);
  }
  uint64_t v23 = *(void *)(v8 + 16);
  BOOL v20 = __OFADD__(v23, v12);
  uint64_t v24 = v23 + v12;
  if (!v20)
  {
    *(void *)(v8 + 16) = v24;
LABEL_19:
    *uint64_t v18 = a3;
    v18[1] = a4;
    long long v18[2] = a5;
    v18[3] = a6;
    unint64_t *v6 = v8;
    return result;
  }
LABEL_26:
  __break(1u);
  return result;
}

unint64_t sub_22081B214(unint64_t result, int64_t a2, uint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v5 = *v3;
  int64_t v6 = *((void *)*v3 + 2);
  if (v6 < a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v7 = result;
  unint64_t v8 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  int64_t v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v3 = v5;
  if (!isUniquelyReferenced_nonNull_native || v10 > *((void *)v5 + 3) >> 1)
  {
    if (v6 <= v10) {
      int64_t v13 = v6 + v9;
    }
    else {
      int64_t v13 = v6;
    }
    uint64_t v5 = sub_22081BA78(isUniquelyReferenced_nonNull_native, v13, 1, v5, &qword_26AD413F8);
    *uint64_t v3 = v5;
  }
  uint64_t v14 = (uint64_t)&v5[40 * v7 + 32];
  uint64_t result = swift_arrayDestroy();
  if (!v9) {
    goto LABEL_19;
  }
  uint64_t v15 = *((void *)v5 + 2);
  BOOL v16 = __OFSUB__(v15, a2);
  uint64_t v17 = v15 - a2;
  if (v16) {
    goto LABEL_25;
  }
  uint64_t result = v14 + 40;
  uint64_t v18 = &v5[40 * a2 + 32];
  if ((char *)(v14 + 40) != v18 || result >= (unint64_t)&v18[40 * v17]) {
    uint64_t result = (unint64_t)memmove((void *)result, v18, 40 * v17);
  }
  uint64_t v19 = *((void *)v5 + 2);
  BOOL v16 = __OFADD__(v19, v9);
  uint64_t v20 = v19 + v9;
  if (!v16)
  {
    *((void *)v5 + 2) = v20;
LABEL_19:
    sub_22080B5B8(a3, (uint64_t)&v5[40 * v7 + 32]);
    return sub_2208352E4(a3, &qword_267F188B8);
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_22081B37C(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v3 = a2 - a3;
  if (__OFSUB__(a2, a3))
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v4 = -result;
  if (v3 <= 0 && v3 > v4)
  {
LABEL_8:
    if (a2 <= a3) {
      return a2;
    }
    goto LABEL_12;
  }
  uint64_t v5 = a3 - result;
  if (!__OFADD__(a3, v4))
  {
    if (v5 < a2) {
      goto LABEL_14;
    }
    a2 = a3 - result;
    if (v5 > a3) {
      goto LABEL_14;
    }
    goto LABEL_8;
  }
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

char *sub_22081B3E0(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_22081B4F4(a1, a2, a3, a4, &qword_267F185E8);
}

char *sub_22081B3EC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD411A8);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  int64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_22081B4E8(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_22081B4F4(a1, a2, a3, a4, &qword_26AD411A0);
}

char *sub_22081B4F4(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    int64_t v11 = (char *)swift_allocObject();
    int64_t v12 = _swift_stdlib_malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 25;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    int64_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v14 = v11 + 32;
  uint64_t v15 = a4 + 32;
  if (v6)
  {
    if (v11 != a4 || v14 >= &v15[8 * v9]) {
      memmove(v14, v15, 8 * v9);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 8 * v9);
  }
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_22081B5EC(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_22081BA78(a1, a2, a3, a4, &qword_26AD413F8);
}

char *sub_22081B600(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F18818);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  int64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8]) {
      memmove(v12, v13, 48 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_22081B71C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41190);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_22081B820(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F188C0);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    _OWORD v10[2] = v8;
    void v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[4 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F188C8);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_22081B944(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F187C0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  size_t v14 = 48 * v8;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, v14);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_22081BA50(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_22081CCA0(a1, a2, a3, a4, &qword_267F187C8, &qword_267F187D0);
}

char *sub_22081BA64(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_22081BA78(a1, a2, a3, a4, &qword_267F18890);
}

char *sub_22081BA78(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    size_t v11 = (char *)swift_allocObject();
    size_t v12 = _swift_stdlib_malloc_size(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 40);
  }
  else
  {
    size_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v11 + 32;
  size_t v14 = a4 + 32;
  if (v6)
  {
    if (v11 != a4 || v13 >= &v14[40 * v9]) {
      memmove(v13, v14, 40 * v9);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_22081BB94(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F18878);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

size_t sub_22081BC98(size_t result, int64_t a2, char a3, void *a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18868);
  uint64_t v10 = *(void *)(sub_22093E100() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t result = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_29;
  }
  _OWORD v13[2] = v8;
  void v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(sub_22093E100() - 8);
  if (v5)
  {
    if (v13 < a4
      || (unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (char *)v13 + v16 >= (char *)a4 + v16 + *(void *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return (size_t)v13;
}

char *sub_22081BE6C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F18858);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_22081BF58(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F185F0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 8 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_22081C054(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F18820);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 4 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_22081C150(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F18838);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    int64_t v12 = v11 - 32;
    if (v11 < 32) {
      int64_t v12 = v11 - 31;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = v12 & 0xFFFFFFFFFFFFFFFELL;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[2 * v8]) {
      memmove(v13, v14, 2 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 2 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_22081C248(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F18780);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    _OWORD v10[2] = v8;
    void v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[3 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F18788);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_22081C384(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_22081CCA0(a1, a2, a3, a4, &qword_267F18768, &qword_267F18770);
}

char *sub_22081C398(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD40FE8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  size_t v15 = 16 * v8;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, v15);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_22081C490(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F187A0);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    _OWORD v10[2] = v8;
    void v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[4 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_26AD40FF8);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_22081C5B4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD411B0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_22081C6A0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41080);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    _OWORD v10[2] = v8;
    void v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[2 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F18880);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_22081C7C4(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_22081C800(a1, a2, a3, a4, &qword_26AD41188);
}

void *sub_22081C7D8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_22081C91C(a1, a2, a3, a4, &qword_26AD41180, qword_26AD41088);
}

char *sub_22081C7EC(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_22081C800(a1, a2, a3, a4, &qword_267F187F0);
}

char *sub_22081C800(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    int64_t v11 = (char *)swift_allocObject();
    int64_t v12 = _swift_stdlib_malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 1;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    int64_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  size_t v14 = v11 + 32;
  size_t v15 = a4 + 32;
  if (v6)
  {
    if (v11 != a4 || v14 >= &v15[32 * v9]) {
      memmove(v14, v15, 32 * v9);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_22081C908(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_22081C91C(a1, a2, a3, a4, &qword_267F187F8, &qword_267F18800);
}

void *sub_22081C91C(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v13 = (void *)swift_allocObject();
    size_t v14 = _swift_stdlib_malloc_size(v13);
    _OWORD v13[2] = v11;
    void v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  }
  if (v8)
  {
    if (v13 != a4 || v13 + 4 >= &a4[5 * v11 + 4]) {
      memmove(v13 + 4, a4 + 4, 40 * v11);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v13;
}

char *sub_22081CA58(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F187D8);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_22081CB70(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F187E0);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_22081CC8C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_22081CCA0(a1, a2, a3, a4, &qword_267F18758, &qword_267F18760);
}

void *sub_22081CCA0(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v13 = (void *)swift_allocObject();
    int64_t v14 = _swift_stdlib_malloc_size(v13);
    uint64_t v15 = v14 - 32;
    if (v14 < 32) {
      uint64_t v15 = v14 - 25;
    }
    _OWORD v13[2] = v11;
    void v13[3] = 2 * (v15 >> 3);
  }
  else
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  }
  if (v8)
  {
    if (v13 != a4 || v13 + 4 >= &a4[v11 + 4]) {
      memmove(v13 + 4, a4 + 4, 8 * v11);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v13;
}

void *sub_22081CDC8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_22081D008(a1, a2, a3, a4, &qword_267F18738, &qword_267F18740);
}

size_t sub_22081CDDC(size_t result, int64_t a2, char a3, void *a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18718);
  uint64_t v10 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267F18720) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t result = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_29;
  }
  _OWORD v13[2] = v8;
  void v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267F18720) - 8);
  if (v5)
  {
    if (v13 < a4
      || (unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (char *)v13 + v16 >= (char *)a4 + v16 + *(void *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return (size_t)v13;
}

void *sub_22081CFB8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_22081D158(a1, a2, a3, a4, &qword_267F18708, &qword_267F18710);
}

void *sub_22081CFCC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_22081D008(a1, a2, a3, a4, &qword_267F186F0, &qword_267F186F8);
}

void *sub_22081CFE0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_22081D158(a1, a2, a3, a4, &qword_267F186D8, &qword_267F186E0);
}

void *sub_22081CFF4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_22081D008(a1, a2, a3, a4, &qword_267F186C0, &qword_267F186C8);
}

void *sub_22081D008(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v13 = (void *)swift_allocObject();
    int64_t v14 = _swift_stdlib_malloc_size(v13);
    uint64_t v15 = v14 - 32;
    if (v14 < 32) {
      uint64_t v15 = v14 - 1;
    }
    _OWORD v13[2] = v11;
    void v13[3] = 2 * (v15 >> 5);
  }
  else
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  }
  if (v8)
  {
    if (v13 != a4 || v13 + 4 >= &a4[4 * v11 + 4]) {
      memmove(v13 + 4, a4 + 4, 32 * v11);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v13;
}

void *sub_22081D130(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_22081D158(a1, a2, a3, a4, &qword_267F186A8, &qword_267F186B0);
}

void *sub_22081D144(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_22081D158(a1, a2, a3, a4, &qword_267F18690, &qword_267F18698);
}

void *sub_22081D158(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v13 = (void *)swift_allocObject();
    size_t v14 = _swift_stdlib_malloc_size(v13);
    _OWORD v13[2] = v11;
    void v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  }
  if (v8)
  {
    if (v13 != a4 || v13 + 4 >= &a4[5 * v11 + 4]) {
      memmove(v13 + 4, a4 + 4, 40 * v11);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_22081D290(uint64_t a1, uint64_t a2)
{
  return sub_22081D32C(a1, a2, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2208222BC);
}

unint64_t sub_22081D2BC(uint64_t a1)
{
  uint64_t v2 = sub_22093EE30();

  return sub_2208223A0(a1, v2);
}

uint64_t sub_22081D300(uint64_t a1, uint64_t a2)
{
  return sub_22081D32C(a1, a2, MEMORY[0x263F06F38], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_220822468);
}

uint64_t sub_22081D32C(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, uint64_t, uint64_t), uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  sub_22093F430();
  a3(v10, a1, a2);
  uint64_t v7 = sub_22093F490();

  return a4(a1, a2, v7);
}

unint64_t sub_22081D3C0(uint64_t a1)
{
  sub_22093E100();
  sub_220834C90(&qword_267F18638);
  uint64_t v2 = sub_22093E360();

  return sub_220822E08(a1, v2);
}

unint64_t sub_22081D444(int a1)
{
  sub_22093F430();
  sub_22093F450();
  uint64_t v2 = sub_22093F490();

  return sub_220822FB4(a1, v2);
}

unint64_t sub_22081D4B0(double a1)
{
  uint64_t v2 = sub_22093F420();

  return sub_220823060(v2, a1);
}

unint64_t sub_22081D4F8(float a1)
{
  if ((LODWORD(a1) & 0x7FFFFFFF) != 0) {
    uint64_t v3 = LODWORD(a1);
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = MEMORY[0x223C6AB30](*(void *)(v1 + 40), v3, 4);

  return sub_2208230F8(v4, a1);
}

unint64_t sub_22081D544(float a1)
{
  if ((LOWORD(a1) & 0x7FFF) != 0) {
    uint64_t v3 = LODWORD(a1);
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = MEMORY[0x223C6AB30](*(void *)(v1 + 40), v3, 2);
  v5.n128_f32[0] = a1;

  return sub_220823190(v4, v5);
}

unint64_t sub_22081D590(uint64_t a1)
{
  uint64_t v2 = sub_22093F420();

  return sub_220823228(a1, v2);
}

unint64_t sub_22081D5D4(uint64_t a1)
{
  sub_22093F430();
  sub_2208E2274((uint64_t)v4, a1);
  uint64_t v2 = sub_22093F490();

  return sub_2208232C4(a1, v2);
}

unint64_t sub_22081D640(uint64_t a1)
{
  uint64_t v2 = sub_22093E100();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  __n128 v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD411B8);
  MEMORY[0x270FA5388](v6 - 8);
  char v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22093F430();
  sub_220835280(a1, (uint64_t)v8, qword_26AD411B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_22093F450();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_22093F450();
    sub_220834C90(&qword_267F18638);
    sub_22093E370();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  uint64_t v9 = sub_22093F490();
  return sub_2208234C4(a1, v9);
}

unint64_t sub_22081D830(uint64_t a1, unint64_t a2)
{
  sub_22093F430();
  sub_22093F450();
  if (a2 >> 60 != 15)
  {
    sub_22080B7F4(a1, a2);
    sub_22093E010();
    sub_220834944(a1, a2);
  }
  uint64_t v4 = sub_22093F490();

  return sub_2208238D8(a1, a2, v4);
}

unint64_t sub_22081D8E4(unsigned __int8 a1)
{
  int v2 = a1;
  sub_22093F430();
  if (v2 != 2) {
    sub_22093F450();
  }
  sub_22093F450();
  uint64_t v3 = sub_22093F490();

  return sub_2208243D4(a1, v3);
}

unint64_t sub_22081D974(uint64_t a1, char a2)
{
  char v4 = a2 & 1;
  sub_22093F430();
  sub_22093F450();
  if ((a2 & 1) == 0) {
    sub_22093F480();
  }
  uint64_t v5 = sub_22093F490();

  return sub_22082446C(a1, v4, v5);
}

unint64_t sub_22081DA10(unint64_t a1)
{
  sub_22093F430();
  sub_22093F450();
  if ((a1 & 0x100000000) == 0) {
    sub_22093F470();
  }
  uint64_t v2 = sub_22093F490();

  return sub_2208244F4(a1 | ((HIDWORD(a1) & 1) << 32), v2);
}

unint64_t sub_22081DAAC(uint64_t a1, uint64_t a2)
{
  sub_22093F430();
  sub_22093F450();
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_22093E650();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = sub_22093F490();

  return sub_22082457C(a1, a2, v4);
}

unint64_t sub_22081DB50(uint64_t a1, char a2)
{
  char v4 = a2 & 1;
  sub_22093F430();
  sub_22093F450();
  if ((a2 & 1) == 0) {
    sub_22093F440();
  }
  uint64_t v5 = sub_22093F490();

  return sub_220824648(a1, v4, v5);
}

uint64_t sub_22081DBE8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(qword_26AD412C0);
  char v37 = a2;
  uint64_t v6 = sub_22093F0F0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_22093F430();
    sub_22093E650();
    uint64_t result = sub_22093F490();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  uint64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_22081DEF4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18888);
  char v38 = a2;
  uint64_t v6 = sub_22093F0F0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v14;
    if (!v23)
    {
      int64_t v14 = v21 + 1;
      if (v21 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v14);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((v38 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v14 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v14);
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v24;
      }
    }
LABEL_21:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v5 + 48) + 40 * v20;
    if (v38)
    {
      long long v26 = *(_OWORD *)v25;
      long long v27 = *(_OWORD *)(v25 + 16);
      uint64_t v41 = *(void *)(v25 + 32);
      long long v39 = v26;
      long long v40 = v27;
    }
    else
    {
      sub_220834DA0(v25, (uint64_t)&v39);
    }
    uint64_t v28 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    uint64_t result = sub_22093EE30();
    uint64_t v29 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v30 = result & ~v29;
    unint64_t v31 = v30 >> 6;
    if (((-1 << v30) & ~*(void *)(v12 + 8 * (v30 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v30) & ~*(void *)(v12 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v32 = 0;
      unint64_t v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v34 = v31 == v33;
        if (v31 == v33) {
          unint64_t v31 = 0;
        }
        v32 |= v34;
        uint64_t v35 = *(void *)(v12 + 8 * v31);
      }
      while (v35 == -1);
      unint64_t v15 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t v16 = *(void *)(v7 + 48) + 40 * v15;
    long long v17 = v39;
    long long v18 = v40;
    *(void *)(v16 + 32) = v41;
    *(_OWORD *)uint64_t v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    *(void *)(*(void *)(v7 + 56) + 8 * v15) = v28;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
  if (v36 >= 64) {
    bzero(v22, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v36;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_22081E1FC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18870);
  uint64_t v6 = sub_22093F0F0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  char v32 = v2;
  uint64_t v33 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v33 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v33 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v32;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v33 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v33 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = *(void *)(*(void *)(v5 + 56) + 8 * v21);
    long long v34 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v21);
    if ((a2 & 1) == 0) {
      sub_22080B7F4(v34, *(void *)(*(void *)(v5 + 48) + 16 * v21 + 8));
    }
    sub_22093F430();
    sub_22093E010();
    uint64_t result = sub_22093F490();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      long long v19 = v34;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      long long v19 = v34;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(_OWORD *)(*(void *)(v7 + 48) + 16 * v18) = v19;
    *(void *)(*(void *)(v7 + 56) + 8 * v18) = v30;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v32;
  unint64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
  if (v31 >= 64) {
    bzero(v23, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v31;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_22081E500(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_22093E100();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18860);
  int v42 = a2;
  uint64_t v10 = sub_22093F0F0();
  uint64_t v11 = v10;
  if (*(void *)(v9 + 16))
  {
    uint64_t v37 = v2;
    uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v13 = *(void *)(v9 + 64);
    long long v39 = (void *)(v9 + 64);
    if (v12 < 64) {
      uint64_t v14 = ~(-1 << v12);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v13;
    int64_t v38 = (unint64_t)(v12 + 63) >> 6;
    long long v40 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    int64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
    uint64_t v16 = v10 + 64;
    uint64_t result = swift_retain();
    int64_t v18 = 0;
    uint64_t v44 = v5;
    for (i = v6; ; uint64_t v6 = i)
    {
      if (v15)
      {
        unint64_t v20 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v21 = v20 | (v18 << 6);
      }
      else
      {
        int64_t v22 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v38) {
          goto LABEL_34;
        }
        unint64_t v23 = v39[v22];
        ++v18;
        if (!v23)
        {
          int64_t v18 = v22 + 1;
          if (v22 + 1 >= v38) {
            goto LABEL_34;
          }
          unint64_t v23 = v39[v18];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v38)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v37;
              if (v42)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v9 + 32);
                if (v36 >= 64) {
                  bzero(v39, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *long long v39 = -1 << v36;
                }
                *(void *)(v9 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v39[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v18 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_41;
                }
                if (v18 >= v38) {
                  goto LABEL_34;
                }
                unint64_t v23 = v39[v18];
                ++v24;
                if (v23) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v18 = v24;
          }
        }
LABEL_21:
        unint64_t v15 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v18 << 6);
      }
      uint64_t v25 = *(void *)(v6 + 72);
      unint64_t v26 = *(void *)(v9 + 48) + v25 * v21;
      if (v42) {
        (*v43)(v8, v26, v44);
      }
      else {
        (*v40)(v8, v26, v44);
      }
      uint64_t v27 = v9;
      uint64_t v28 = *(void *)(*(void *)(v9 + 56) + 8 * v21);
      sub_220834C90(&qword_267F18638);
      uint64_t result = sub_22093E360();
      uint64_t v29 = -1 << *(unsigned char *)(v11 + 32);
      unint64_t v30 = result & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v34 = v31 == v33;
          if (v31 == v33) {
            unint64_t v31 = 0;
          }
          v32 |= v34;
          uint64_t v35 = *(void *)(v16 + 8 * v31);
        }
        while (v35 == -1);
        unint64_t v19 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v43)(*(void *)(v11 + 48) + v25 * v19, v8, v44);
      *(void *)(*(void *)(v11 + 56) + 8 * v19) = v28;
      ++*(void *)(v11 + 16);
      uint64_t v9 = v27;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v11;
  return result;
}

uint64_t sub_22081E910(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18850);
  uint64_t result = sub_22093F0F0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v30 = a2;
    int64_t v8 = 0;
    unint64_t v31 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v8 << 6);
      }
      else
      {
        int64_t v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v17 >= v12) {
          goto LABEL_31;
        }
        unint64_t v18 = v31[v17];
        ++v8;
        if (!v18)
        {
          int64_t v8 = v17 + 1;
          if (v17 + 1 >= v12) {
            goto LABEL_31;
          }
          unint64_t v18 = v31[v8];
          if (!v18)
          {
            int64_t v19 = v17 + 2;
            if (v19 >= v12)
            {
LABEL_31:
              if ((v30 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_38;
              }
              uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
              if (v29 >= 64) {
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *unint64_t v31 = -1 << v29;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v18 = v31[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v8 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v12) {
                  goto LABEL_31;
                }
                unint64_t v18 = v31[v8];
                ++v19;
                if (v18) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v19;
          }
        }
LABEL_21:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      char v20 = *(unsigned char *)(*(void *)(v5 + 48) + v16);
      uint64_t v21 = *(void *)(*(void *)(v5 + 56) + 8 * v16);
      sub_22093F430();
      sub_22093F450();
      uint64_t result = sub_22093F490();
      uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v23) & ~*(void *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(unsigned char *)(*(void *)(v7 + 48) + v14) = v20;
      *(void *)(*(void *)(v7 + 56) + 8 * v14) = v21;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_22081EBD8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18848);
  uint64_t result = sub_22093F0F0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v35 = a2;
    BOOL v34 = v3;
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v32 = -1 << v10;
    uint64_t v33 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13) {
          goto LABEL_31;
        }
        unint64_t v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v13) {
            goto LABEL_31;
          }
          unint64_t v20 = v9[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v35 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v34;
                goto LABEL_38;
              }
              if (v33 >= 64) {
                bzero((void *)(v5 + 64), 8 * v13);
              }
              else {
                uint64_t *v9 = v32;
              }
              uint64_t v3 = v34;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v13) {
                  goto LABEL_31;
                }
                unint64_t v20 = v9[v8];
                ++v21;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_21:
        unint64_t v12 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      uint64_t v22 = 8 * v18;
      uint64_t v23 = *(void *)(*(void *)(v5 + 48) + v22);
      uint64_t v24 = *(void *)(*(void *)(v5 + 56) + v22);
      uint64_t result = sub_22093F420();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v14 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      uint64_t v16 = 8 * v15;
      *(void *)(*(void *)(v7 + 48) + v16) = v23;
      *(void *)(*(void *)(v7 + 56) + v16) = v24;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_22081EE84(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18840);
  uint64_t result = sub_22093F0F0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v34 = a2;
    uint64_t v33 = v3;
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = -1 << v10;
    uint64_t v32 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v17 = v16 | (v8 << 6);
      }
      else
      {
        int64_t v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        if (v18 >= v13) {
          goto LABEL_34;
        }
        unint64_t v19 = v9[v18];
        ++v8;
        if (!v19)
        {
          int64_t v8 = v18 + 1;
          if (v18 + 1 >= v13) {
            goto LABEL_34;
          }
          unint64_t v19 = v9[v8];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v13)
            {
LABEL_34:
              if ((v34 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v33;
                goto LABEL_41;
              }
              if (v32 >= 64) {
                bzero((void *)(v5 + 64), 8 * v13);
              }
              else {
                uint64_t *v9 = v31;
              }
              uint64_t v3 = v33;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v19 = v9[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v8 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_43;
                }
                if (v8 >= v13) {
                  goto LABEL_34;
                }
                unint64_t v19 = v9[v8];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v20;
          }
        }
LABEL_21:
        unint64_t v12 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      unsigned int v21 = *(_DWORD *)(*(void *)(v5 + 48) + 4 * v17);
      uint64_t v22 = *(void *)(*(void *)(v5 + 56) + 8 * v17);
      if ((v21 & 0x7FFFFFFF) != 0) {
        uint64_t v23 = v21;
      }
      else {
        uint64_t v23 = 0;
      }
      uint64_t result = MEMORY[0x223C6AB30](*(void *)(v7 + 40), v23, 4);
      uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v25 = result & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1 << v25) & ~*(void *)(v14 + 8 * (v25 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v25) & ~*(void *)(v14 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v27 = 0;
        unint64_t v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v29 = v26 == v28;
          if (v26 == v28) {
            unint64_t v26 = 0;
          }
          v27 |= v29;
          uint64_t v30 = *(void *)(v14 + 8 * v26);
        }
        while (v30 == -1);
        unint64_t v15 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_DWORD *)(*(void *)(v7 + 48) + 4 * v15) = v21;
      *(void *)(*(void *)(v7 + 56) + 8 * v15) = v22;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_22081F12C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18830);
  uint64_t result = sub_22093F0F0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v34 = a2;
    uint64_t v33 = v3;
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = -1 << v10;
    uint64_t v32 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v17 = v16 | (v8 << 6);
      }
      else
      {
        int64_t v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        if (v18 >= v13) {
          goto LABEL_34;
        }
        unint64_t v19 = v9[v18];
        ++v8;
        if (!v19)
        {
          int64_t v8 = v18 + 1;
          if (v18 + 1 >= v13) {
            goto LABEL_34;
          }
          unint64_t v19 = v9[v8];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v13)
            {
LABEL_34:
              if ((v34 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v33;
                goto LABEL_41;
              }
              if (v32 >= 64) {
                bzero((void *)(v5 + 64), 8 * v13);
              }
              else {
                uint64_t *v9 = v31;
              }
              uint64_t v3 = v33;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v19 = v9[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v8 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_43;
                }
                if (v8 >= v13) {
                  goto LABEL_34;
                }
                unint64_t v19 = v9[v8];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v20;
          }
        }
LABEL_21:
        unint64_t v12 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      __int16 v21 = *(_WORD *)(*(void *)(v5 + 48) + 2 * v17);
      uint64_t v22 = *(void *)(*(void *)(v5 + 56) + 8 * v17);
      if ((v21 & 0x7FFF) != 0) {
        uint64_t v23 = *(unsigned __int16 *)(*(void *)(v5 + 48) + 2 * v17);
      }
      else {
        uint64_t v23 = 0;
      }
      uint64_t result = MEMORY[0x223C6AB30](*(void *)(v7 + 40), v23, 2);
      uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v25 = result & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1 << v25) & ~*(void *)(v14 + 8 * (v25 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v25) & ~*(void *)(v14 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v27 = 0;
        unint64_t v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v29 = v26 == v28;
          if (v26 == v28) {
            unint64_t v26 = 0;
          }
          v27 |= v29;
          uint64_t v30 = *(void *)(v14 + 8 * v26);
        }
        while (v30 == -1);
        unint64_t v15 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_WORD *)(*(void *)(v7 + 48) + 2 * v15) = v21;
      *(void *)(*(void *)(v7 + 56) + 8 * v15) = v22;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_22081F3D4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18828);
  uint64_t result = sub_22093F0F0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v35 = a2;
    char v34 = v3;
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v32 = -1 << v10;
    uint64_t v33 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13) {
          goto LABEL_31;
        }
        unint64_t v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v13) {
            goto LABEL_31;
          }
          unint64_t v20 = v9[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v35 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v34;
                goto LABEL_38;
              }
              if (v33 >= 64) {
                bzero((void *)(v5 + 64), 8 * v13);
              }
              else {
                uint64_t *v9 = v32;
              }
              uint64_t v3 = v34;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v13) {
                  goto LABEL_31;
                }
                unint64_t v20 = v9[v8];
                ++v21;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_21:
        unint64_t v12 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      uint64_t v22 = 8 * v18;
      uint64_t v23 = *(void *)(*(void *)(v5 + 48) + v22);
      uint64_t v24 = *(void *)(*(void *)(v5 + 56) + v22);
      uint64_t result = sub_22093F420();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v14 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      uint64_t v16 = 8 * v15;
      *(void *)(*(void *)(v7 + 48) + v16) = v23;
      *(void *)(*(void *)(v7 + 56) + v16) = v24;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_22081F67C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18798);
  uint64_t v6 = sub_22093F0F0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  char v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v18 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v19 = v18 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v20 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v20 >= v36) {
      break;
    }
    int64_t v21 = (void *)(v5 + 64);
    unint64_t v22 = *(void *)(v37 + 8 * v20);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_34;
      }
      unint64_t v22 = *(void *)(v37 + 8 * v13);
      if (!v22)
      {
        int64_t v23 = v20 + 2;
        if (v23 >= v36)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v35;
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v22 = *(void *)(v37 + 8 * v23);
        if (!v22)
        {
          while (1)
          {
            int64_t v13 = v23 + 1;
            if (__OFADD__(v23, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v36) {
              goto LABEL_34;
            }
            unint64_t v22 = *(void *)(v37 + 8 * v13);
            ++v23;
            if (v22) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v23;
      }
    }
LABEL_21:
    unint64_t v10 = (v22 - 1) & v22;
    unint64_t v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_22:
    uint64_t v24 = *(void *)(v5 + 48) + 40 * v19;
    if (a2)
    {
      long long v25 = *(_OWORD *)v24;
      long long v26 = *(_OWORD *)(v24 + 16);
      uint64_t v41 = *(void *)(v24 + 32);
      long long v39 = v25;
      long long v40 = v26;
      sub_220834D3C(*(void *)(v5 + 56) + 32 * v19, (uint64_t)v38, qword_26AD40FF8);
    }
    else
    {
      sub_220834DA0(v24, (uint64_t)&v39);
      sub_220835280(*(void *)(v5 + 56) + 32 * v19, (uint64_t)v38, qword_26AD40FF8);
    }
    uint64_t result = sub_22093EE30();
    uint64_t v27 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v28 = result & ~v27;
    unint64_t v29 = v28 >> 6;
    if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v30 = 0;
      unint64_t v31 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v32 = v29 == v31;
        if (v29 == v31) {
          unint64_t v29 = 0;
        }
        v30 |= v32;
        uint64_t v33 = *(void *)(v11 + 8 * v29);
      }
      while (v33 == -1);
      unint64_t v14 = __clz(__rbit64(~v33)) + (v29 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    uint64_t v15 = *(void *)(v7 + 48) + 40 * v14;
    long long v16 = v39;
    long long v17 = v40;
    *(void *)(v15 + 32) = v41;
    *(_OWORD *)uint64_t v15 = v16;
    *(_OWORD *)(v15 + 16) = v17;
    uint64_t result = sub_220834D3C((uint64_t)v38, *(void *)(v7 + 56) + 32 * v14, qword_26AD40FF8);
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  int64_t v21 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v21, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v21 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_22081F9B4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18670);
  uint64_t v6 = sub_22093F0F0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v38 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v36 = v2;
  int64_t v37 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v18 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v19 = v18 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v20 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v20 >= v37) {
      break;
    }
    int64_t v21 = (void *)(v5 + 64);
    unint64_t v22 = *(void *)(v38 + 8 * v20);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v20 + 1;
      if (v20 + 1 >= v37) {
        goto LABEL_34;
      }
      unint64_t v22 = *(void *)(v38 + 8 * v13);
      if (!v22)
      {
        int64_t v23 = v20 + 2;
        if (v23 >= v37)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v36;
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v22 = *(void *)(v38 + 8 * v23);
        if (!v22)
        {
          while (1)
          {
            int64_t v13 = v23 + 1;
            if (__OFADD__(v23, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v37) {
              goto LABEL_34;
            }
            unint64_t v22 = *(void *)(v38 + 8 * v13);
            ++v23;
            if (v22) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v23;
      }
    }
LABEL_21:
    unint64_t v10 = (v22 - 1) & v22;
    unint64_t v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_22:
    uint64_t v24 = *(void *)(v5 + 48) + 40 * v19;
    if (a2)
    {
      long long v25 = *(_OWORD *)v24;
      long long v26 = *(_OWORD *)(v24 + 16);
      uint64_t v41 = *(void *)(v24 + 32);
      long long v39 = v25;
      long long v40 = v26;
      uint64_t v27 = *(void *)(*(void *)(v5 + 56) + 8 * v19);
    }
    else
    {
      sub_220834DA0(v24, (uint64_t)&v39);
      uint64_t v27 = *(void *)(*(void *)(v5 + 56) + 8 * v19);
      swift_bridgeObjectRetain();
    }
    uint64_t result = sub_22093EE30();
    uint64_t v28 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v11 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v29) & ~*(void *)(v11 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v11 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v14 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    uint64_t v15 = *(void *)(v7 + 48) + 40 * v14;
    long long v16 = v39;
    long long v17 = v40;
    *(void *)(v15 + 32) = v41;
    *(_OWORD *)uint64_t v15 = v16;
    *(_OWORD *)(v15 + 16) = v17;
    *(void *)(*(void *)(v7 + 56) + 8 * v14) = v27;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  int64_t v21 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v21, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v21 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_22081FCC8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F187B8);
  char v40 = a2;
  uint64_t v6 = sub_22093F0F0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v38 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37) {
          goto LABEL_33;
        }
        unint64_t v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v23 = v38[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v40)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
                if (v36 >= 64) {
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v38 = -1 << v36;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v23 = v38[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      unint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
      uint64_t v30 = *v29;
      uint64_t v31 = v29[1];
      unint64_t v32 = (uint64_t *)(*(void *)(v5 + 56) + 24 * v21);
      uint64_t v34 = *v32;
      unint64_t v33 = v32[1];
      uint64_t v35 = v32[2];
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        sub_22080B7F4(v34, v33);
        swift_bridgeObjectRetain();
      }
      sub_22093F430();
      sub_22093E650();
      uint64_t result = sub_22093F490();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
      *unint64_t v18 = v30;
      v18[1] = v31;
      unint64_t v19 = (uint64_t *)(*(void *)(v7 + 56) + 24 * v17);
      *unint64_t v19 = v34;
      v19[1] = v33;
      v19[2] = v35;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_22081FFF8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F187E8);
  char v42 = a2;
  uint64_t v6 = sub_22093F0F0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  long long v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    int64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    unint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    uint64_t v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_22093F430();
    sub_22093E650();
    uint64_t result = sub_22093F490();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    unint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    *unint64_t v19 = v34;
    v19[1] = v33;
    unint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *unint64_t v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  int64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_220820320(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18750);
  char v36 = a2;
  uint64_t v6 = sub_22093F0F0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v34) {
      break;
    }
    unint64_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v35 + 8 * v18);
    ++v13;
    if (!v20)
    {
      int64_t v13 = v18 + 1;
      if (v18 + 1 >= v34) {
        goto LABEL_34;
      }
      unint64_t v20 = *(void *)(v35 + 8 * v13);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v34)
        {
LABEL_34:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = *(void *)(v35 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v13 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v34) {
              goto LABEL_34;
            }
            unint64_t v20 = *(void *)(v35 + 8 * v13);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    unint64_t v22 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
    uint64_t v24 = *v22;
    uint64_t v23 = v22[1];
    uint64_t v25 = *(void *)(v5 + 56) + 32 * v17;
    if (v36)
    {
      sub_220834D3C(v25, (uint64_t)v37, qword_26AD40FF8);
    }
    else
    {
      sub_220835280(v25, (uint64_t)v37, qword_26AD40FF8);
      swift_bridgeObjectRetain();
    }
    sub_22093F430();
    sub_22093E650();
    uint64_t result = sub_22093F490();
    uint64_t v26 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v11 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v14 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    unint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
    *unint64_t v15 = v24;
    v15[1] = v23;
    uint64_t result = sub_220834D3C((uint64_t)v37, *(void *)(v7 + 56) + 32 * v14, qword_26AD40FF8);
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v19 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v19, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v19 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_22082065C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18748);
  char v39 = a2;
  uint64_t v6 = sub_22093F0F0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_46;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    unint64_t v22 = v37;
    unint64_t v23 = v37[v21];
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_39;
      }
      unint64_t v23 = v37[v13];
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_39:
          swift_release();
          uint64_t v3 = v35;
          if ((v39 & 1) == 0) {
            goto LABEL_46;
          }
          goto LABEL_42;
        }
        unint64_t v23 = v37[v24];
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_48;
            }
            if (v13 >= v36) {
              goto LABEL_39;
            }
            unint64_t v23 = v37[v13];
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = 8 * v20;
    uint64_t v30 = *(void *)(*(void *)(v5 + 48) + v29);
    uint64_t v31 = *(void *)(*(void *)(v5 + 56) + v29);
    if ((v39 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_22093F430();
    sub_22093F440();
    uint64_t v32 = *(void *)(v30 + 16);
    if (v32)
    {
      uint64_t v33 = v30 + 32;
      do
      {
        sub_220835280(v33, (uint64_t)&v42, &qword_267F18658);
        if (*((void *)&v43 + 1))
        {
          v40[0] = v42;
          v40[1] = v43;
          uint64_t v41 = v44;
          sub_22093F450();
          sub_22093EE60();
          sub_220834CE8((uint64_t)v40);
        }
        else
        {
          sub_22093F450();
        }
        v33 += 40;
        --v32;
      }
      while (v32);
    }
    uint64_t result = sub_22093F490();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_47;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 8 * v17;
    *(void *)(*(void *)(v7 + 48) + v18) = v30;
    *(void *)(*(void *)(v7 + 56) + v18) = v31;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  unint64_t v22 = v37;
  if ((v39 & 1) == 0) {
    goto LABEL_46;
  }
LABEL_42:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_46:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_2208209EC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD411B8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18728);
  unint64_t v10 = (void *)sub_22093F0F0();
  if (*(void *)(v9 + 16))
  {
    unint64_t v26 = v3;
    uint64_t v11 = 1 << *(unsigned char *)(v9 + 32);
    unint64_t v12 = (void *)(v9 + 64);
    uint64_t v13 = -1;
    if (v11 < 64) {
      uint64_t v13 = ~(-1 << v11);
    }
    unint64_t v14 = v13 & *(void *)(v9 + 64);
    int64_t v15 = (unint64_t)(v11 + 63) >> 6;
    uint64_t result = swift_retain();
    int64_t v17 = 0;
    while (1)
    {
      if (v14)
      {
        unint64_t v18 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        unint64_t v19 = v18 | (v17 << 6);
      }
      else
      {
        int64_t v20 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
          return result;
        }
        if (v20 >= v15) {
          goto LABEL_23;
        }
        unint64_t v21 = v12[v20];
        ++v17;
        if (!v21)
        {
          int64_t v17 = v20 + 1;
          if (v20 + 1 >= v15) {
            goto LABEL_23;
          }
          unint64_t v21 = v12[v17];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v15)
            {
LABEL_23:
              swift_release();
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v26;
                goto LABEL_30;
              }
              uint64_t v24 = 1 << *(unsigned char *)(v9 + 32);
              if (v24 >= 64) {
                bzero((void *)(v9 + 64), ((unint64_t)(v24 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *unint64_t v12 = -1 << v24;
              }
              uint64_t v3 = v26;
              *(void *)(v9 + 16) = 0;
              break;
            }
            unint64_t v21 = v12[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v17 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_32;
                }
                if (v17 >= v15) {
                  goto LABEL_23;
                }
                unint64_t v21 = v12[v17];
                ++v22;
                if (v21) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v17 = v22;
          }
        }
LABEL_20:
        unint64_t v14 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v17 << 6);
      }
      uint64_t v23 = *(void *)(v9 + 48) + *(void *)(v6 + 72) * v19;
      if (a2) {
        sub_220834D3C(v23, (uint64_t)v8, qword_26AD411B8);
      }
      else {
        sub_220835280(v23, (uint64_t)v8, qword_26AD411B8);
      }
      uint64_t result = sub_220821C84((uint64_t)v8, *(void *)(*(void *)(v9 + 56) + 8 * v19), v10);
    }
  }
  uint64_t result = swift_release();
LABEL_30:
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_220820C78(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18700);
  uint64_t v6 = sub_22093F0F0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_42;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v33 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v31 = v2;
  int64_t v32 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      return result;
    }
    if (v17 >= v32) {
      break;
    }
    unint64_t v18 = (void *)(v5 + 64);
    unint64_t v19 = *(void *)(v33 + 8 * v17);
    ++v13;
    if (!v19)
    {
      int64_t v13 = v17 + 1;
      if (v17 + 1 >= v32) {
        goto LABEL_35;
      }
      unint64_t v19 = *(void *)(v33 + 8 * v13);
      if (!v19)
      {
        int64_t v20 = v17 + 2;
        if (v20 >= v32)
        {
LABEL_35:
          swift_release();
          uint64_t v3 = v31;
          if ((a2 & 1) == 0) {
            goto LABEL_42;
          }
          goto LABEL_38;
        }
        unint64_t v19 = *(void *)(v33 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            int64_t v13 = v20 + 1;
            if (__OFADD__(v20, 1)) {
              goto LABEL_44;
            }
            if (v13 >= v32) {
              goto LABEL_35;
            }
            unint64_t v19 = *(void *)(v33 + 8 * v13);
            ++v20;
            if (v19) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v20;
      }
    }
LABEL_21:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    uint64_t v21 = *(void *)(*(void *)(v5 + 56) + 8 * v16);
    long long v34 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v16);
    unint64_t v22 = *(void *)(*(void *)(v5 + 48) + 16 * v16 + 8);
    if ((a2 & 1) == 0) {
      sub_220834CD4(v34, v22);
    }
    sub_22093F430();
    sub_22093F450();
    if (v22 >> 60 != 15)
    {
      sub_22080B7F4(v34, v22);
      sub_22093E010();
      sub_220834944(v34, v22);
    }
    uint64_t result = sub_22093F490();
    uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v11 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v24) & ~*(void *)(v11 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v14 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_OWORD *)(*(void *)(v7 + 48) + 16 * v14) = v34;
    *(void *)(*(void *)(v7 + 56) + 8 * v14) = v21;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v31;
  unint64_t v18 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_42;
  }
LABEL_38:
  uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
  if (v30 >= 64) {
    bzero(v18, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v18 = -1 << v30;
  }
  *(void *)(v5 + 16) = 0;
LABEL_42:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_220820FC0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F186E8);
  uint64_t result = sub_22093F0F0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v29 = a2;
    int64_t v8 = 0;
    uint64_t v31 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v30 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v14 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v15 = v14 | (v8 << 6);
      }
      else
      {
        int64_t v16 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v16 >= v30) {
          goto LABEL_33;
        }
        unint64_t v17 = v31[v16];
        ++v8;
        if (!v17)
        {
          int64_t v8 = v16 + 1;
          if (v16 + 1 >= v30) {
            goto LABEL_33;
          }
          unint64_t v17 = v31[v8];
          if (!v17)
          {
            int64_t v18 = v16 + 2;
            if (v18 >= v30)
            {
LABEL_33:
              if ((v29 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
              if (v28 >= 64) {
                bzero(v31, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v31 = -1 << v28;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v17 = v31[v18];
            if (!v17)
            {
              while (1)
              {
                int64_t v8 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v30) {
                  goto LABEL_33;
                }
                unint64_t v17 = v31[v8];
                ++v18;
                if (v17) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v18;
          }
        }
LABEL_21:
        unint64_t v11 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v8 << 6);
      }
      int v19 = *(unsigned __int8 *)(*(void *)(v5 + 48) + v15);
      uint64_t v20 = *(void *)(*(void *)(v5 + 56) + 8 * v15);
      sub_22093F430();
      if (v19 != 2) {
        sub_22093F450();
      }
      sub_22093F450();
      uint64_t result = sub_22093F490();
      uint64_t v21 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v12 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v13 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(unsigned char *)(*(void *)(v7 + 48) + v13) = v19;
      *(void *)(*(void *)(v7 + 56) + 8 * v13) = v20;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

unint64_t sub_2208212AC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F186D0);
  uint64_t v6 = (void *)sub_22093F0F0();
  if (*(void *)(v5 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
    int64_t v8 = (void *)(v5 + 64);
    uint64_t v9 = -1;
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    unint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v15 = v14 | (v13 << 6);
      }
      else
      {
        int64_t v16 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_27:
          __break(1u);
          return result;
        }
        if (v16 >= v11) {
          goto LABEL_20;
        }
        unint64_t v17 = v8[v16];
        ++v13;
        if (!v17)
        {
          int64_t v13 = v16 + 1;
          if (v16 + 1 >= v11) {
            goto LABEL_20;
          }
          unint64_t v17 = v8[v13];
          if (!v17)
          {
            int64_t v18 = v16 + 2;
            if (v18 >= v11)
            {
LABEL_20:
              swift_release();
              if (a2)
              {
                uint64_t v19 = 1 << *(unsigned char *)(v5 + 32);
                if (v19 > 63) {
                  bzero((void *)(v5 + 64), ((unint64_t)(v19 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v8 = -1 << v19;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v17 = v8[v18];
            if (!v17)
            {
              while (1)
              {
                int64_t v13 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_27;
                }
                if (v13 >= v11) {
                  goto LABEL_20;
                }
                unint64_t v17 = v8[v13];
                ++v18;
                if (v17) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v13 = v18;
          }
        }
LABEL_19:
        unint64_t v10 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
      }
      unint64_t result = sub_220821F08(*(void *)(*(void *)(v5 + 48) + 16 * v15), *(unsigned char *)(*(void *)(v5 + 48) + 16 * v15 + 8), *(void *)(*(void *)(v5 + 56) + 8 * v15), v6);
    }
  }
  unint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

unint64_t sub_220821478(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F186B8);
  uint64_t v6 = (void *)sub_22093F0F0();
  if (*(void *)(v5 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
    int64_t v8 = (void *)(v5 + 64);
    uint64_t v9 = -1;
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    unint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v15 = v14 | (v13 << 6);
      }
      else
      {
        int64_t v16 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_27:
          __break(1u);
          return result;
        }
        if (v16 >= v11) {
          goto LABEL_20;
        }
        unint64_t v17 = v8[v16];
        ++v13;
        if (!v17)
        {
          int64_t v13 = v16 + 1;
          if (v16 + 1 >= v11) {
            goto LABEL_20;
          }
          unint64_t v17 = v8[v13];
          if (!v17)
          {
            int64_t v18 = v16 + 2;
            if (v18 >= v11)
            {
LABEL_20:
              swift_release();
              if (a2)
              {
                uint64_t v19 = 1 << *(unsigned char *)(v5 + 32);
                if (v19 > 63) {
                  bzero((void *)(v5 + 64), ((unint64_t)(v19 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v8 = -1 << v19;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v17 = v8[v18];
            if (!v17)
            {
              while (1)
              {
                int64_t v13 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_27;
                }
                if (v13 >= v11) {
                  goto LABEL_20;
                }
                unint64_t v17 = v8[v13];
                ++v18;
                if (v17) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v13 = v18;
          }
        }
LABEL_19:
        unint64_t v10 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
      }
      unint64_t result = sub_220821FF0(*(unsigned int *)(*(void *)(v5 + 48) + 8 * v15) | ((unint64_t)*(unsigned __int8 *)(*(void *)(v5 + 48) + 8 * v15 + 4) << 32), *(void *)(*(void *)(v5 + 56) + 8 * v15), v6);
    }
  }
  unint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

uint64_t sub_22082165C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F186A0);
  uint64_t v6 = sub_22093F0F0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_42;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v33 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v31 = v2;
  int64_t v32 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      return result;
    }
    if (v17 >= v32) {
      break;
    }
    int64_t v18 = (void *)(v5 + 64);
    unint64_t v19 = *(void *)(v33 + 8 * v17);
    ++v13;
    if (!v19)
    {
      int64_t v13 = v17 + 1;
      if (v17 + 1 >= v32) {
        goto LABEL_35;
      }
      unint64_t v19 = *(void *)(v33 + 8 * v13);
      if (!v19)
      {
        int64_t v20 = v17 + 2;
        if (v20 >= v32)
        {
LABEL_35:
          swift_release();
          uint64_t v3 = v31;
          if ((a2 & 1) == 0) {
            goto LABEL_42;
          }
          goto LABEL_38;
        }
        unint64_t v19 = *(void *)(v33 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            int64_t v13 = v20 + 1;
            if (__OFADD__(v20, 1)) {
              goto LABEL_44;
            }
            if (v13 >= v32) {
              goto LABEL_35;
            }
            unint64_t v19 = *(void *)(v33 + 8 * v13);
            ++v20;
            if (v19) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v20;
      }
    }
LABEL_21:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    uint64_t v21 = *(void *)(*(void *)(v5 + 56) + 8 * v16);
    long long v34 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v16);
    uint64_t v22 = *(void *)(*(void *)(v5 + 48) + 16 * v16 + 8);
    if ((a2 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_22093F430();
    sub_22093F450();
    if (v22)
    {
      swift_bridgeObjectRetain();
      sub_22093E650();
      swift_bridgeObjectRelease();
    }
    uint64_t result = sub_22093F490();
    uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v11 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v24) & ~*(void *)(v11 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v14 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_OWORD *)(*(void *)(v7 + 48) + 16 * v14) = v34;
    *(void *)(*(void *)(v7 + 56) + 8 * v14) = v21;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v31;
  int64_t v18 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_42;
  }
LABEL_38:
  uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
  if (v30 >= 64) {
    bzero(v18, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v18 = -1 << v30;
  }
  *(void *)(v5 + 16) = 0;
LABEL_42:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_220821988(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18688);
  uint64_t result = sub_22093F0F0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v32 = a2;
    int64_t v8 = 0;
    long long v34 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v8 << 6);
      }
      else
      {
        int64_t v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v17 >= v33) {
          goto LABEL_33;
        }
        unint64_t v18 = v34[v17];
        ++v8;
        if (!v18)
        {
          int64_t v8 = v17 + 1;
          if (v17 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v18 = v34[v8];
          if (!v18)
          {
            int64_t v19 = v17 + 2;
            if (v19 >= v33)
            {
LABEL_33:
              if ((v32 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
              if (v31 >= 64) {
                bzero(v34, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *long long v34 = -1 << v31;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v18 = v34[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v8 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v33) {
                  goto LABEL_33;
                }
                unint64_t v18 = v34[v8];
                ++v19;
                if (v18) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v19;
          }
        }
LABEL_21:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      uint64_t v20 = *(void *)(v5 + 48) + 16 * v16;
      int v21 = *(unsigned __int8 *)(v20 + 8);
      uint64_t v22 = *(void *)v20;
      uint64_t v23 = *(void *)(*(void *)(v5 + 56) + 8 * v16);
      sub_22093F430();
      sub_22093F450();
      if (v21 != 1) {
        sub_22093F440();
      }
      uint64_t result = sub_22093F490();
      uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v25 = result & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v27 = 0;
        unint64_t v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v29 = v26 == v28;
          if (v26 == v28) {
            unint64_t v26 = 0;
          }
          v27 |= v29;
          uint64_t v30 = *(void *)(v12 + 8 * v26);
        }
        while (v30 == -1);
        unint64_t v13 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      uint64_t v14 = *(void *)(v7 + 48) + 16 * v13;
      *(void *)uint64_t v14 = v22;
      *(unsigned char *)(v14 + 8) = v21;
      *(void *)(*(void *)(v7 + 56) + 8 * v13) = v23;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_220821C84(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_22093E100();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD411B8);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10 - 8);
  unint64_t v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22093F430();
  sub_220835280(a1, (uint64_t)v13, qword_26AD411B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v13, 1, v6) == 1)
  {
    sub_22093F450();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v13, v6);
    sub_22093F450();
    sub_220834C90(&qword_267F18638);
    sub_22093E370();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  sub_22093F490();
  unint64_t v14 = sub_22093EE20();
  *(void *)((char *)a3 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v14;
  uint64_t result = sub_220834D3C(a1, a3[6] + *(void *)(v11 + 72) * v14, qword_26AD411B8);
  *(void *)(a3[7] + 8 * v14) = a2;
  ++a3[2];
  return result;
}

unint64_t sub_220821F08(uint64_t a1, char a2, uint64_t a3, void *a4)
{
  sub_22093F430();
  sub_22093F450();
  if ((a2 & 1) == 0) {
    sub_22093F480();
  }
  sub_22093F490();
  unint64_t result = sub_22093EE20();
  *(void *)((char *)a4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  uint64_t v9 = a4[6] + 16 * result;
  *(void *)uint64_t v9 = a1;
  *(unsigned char *)(v9 + 8) = a2 & 1;
  *(void *)(a4[7] + 8 * result) = a3;
  ++a4[2];
  return result;
}

unint64_t sub_220821FF0(uint64_t a1, uint64_t a2, void *a3)
{
  sub_22093F430();
  sub_22093F450();
  if ((a1 & 0x100000000) == 0) {
    sub_22093F470();
  }
  sub_22093F490();
  unint64_t result = sub_22093EE20();
  *(void *)((char *)a3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  uint64_t v7 = a3[6] + 8 * result;
  *(_DWORD *)uint64_t v7 = a1;
  *(unsigned char *)(v7 + 4) = BYTE4(a1) & 1;
  *(void *)(a3[7] + 8 * result) = a2;
  ++a3[2];
  return result;
}

unint64_t sub_2208220D8(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

unint64_t sub_220822120(unint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  uint64_t v4 = a4[6] + 40 * result;
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v4 = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 16) = v5;
  *(void *)(v4 + 32) = *(void *)(a2 + 32);
  *(void *)(a4[7] + 8 * result) = a3;
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

unint64_t sub_220822178(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  uint64_t v6 = (void *)(a6[6] + 16 * result);
  void *v6 = a2;
  v6[1] = a3;
  BOOL v7 = (void *)(a6[7] + 16 * result);
  *BOOL v7 = a4;
  v7[1] = a5;
  uint64_t v8 = a6[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a6[2] = v10;
  }
  return result;
}

unint64_t sub_2208221C8(unint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  uint64_t v4 = 8 * result;
  *(void *)(a4[6] + v4) = a2;
  *(void *)(a4[7] + v4) = a3;
  uint64_t v5 = a4[2];
  BOOL v6 = __OFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (v6) {
    __break(1u);
  }
  else {
    a4[2] = v7;
  }
  return result;
}

uint64_t sub_220822210(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD411B8);
  uint64_t result = sub_220834D3C(a2, v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, qword_26AD411B8);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

unint64_t sub_2208222BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_22093F250() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_22093F250() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_2208223A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_220834DA0(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x223C6A560](v9, a1);
      sub_220834CE8((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_220822468(uint64_t a1, unint64_t a2, uint64_t a3)
{
  __s1[2] = *MEMORY[0x263EF8340];
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v7 = v3;
    unint64_t v8 = a2;
    uint64_t v10 = ~v5;
    unint64_t v80 = HIDWORD(a1);
    size_t v85 = HIDWORD(a1) - (int)a1;
    uint64_t v86 = ~v5;
    BOOL v11 = __OFSUB__(HIDWORD(a1), a1);
    BOOL v84 = v11;
    unint64_t v87 = a2 >> 62;
    uint64_t v82 = v3 + 64;
    uint64_t v83 = (int)a1;
    uint64_t v81 = a1 >> 32;
    uint64_t v78 = (a1 >> 32) - (int)a1;
    unint64_t v88 = a2 >> 62;
    size_t __n = BYTE6(a2);
    while (1)
    {
      uint64_t v12 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v6);
      uint64_t v14 = *v12;
      unint64_t v13 = v12[1];
      uint64_t v15 = 0;
      switch(v13 >> 62)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v14), v14))
          {
            __break(1u);
LABEL_121:
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
          }
          uint64_t v15 = HIDWORD(v14) - (int)v14;
LABEL_14:
          sub_22080B7F4(v14, v13);
          break;
        case 2uLL:
          uint64_t v17 = *(void *)(v14 + 16);
          uint64_t v16 = *(void *)(v14 + 24);
          uint64_t v15 = v16 - v17;
          if (!__OFSUB__(v16, v17)) {
            goto LABEL_14;
          }
          goto LABEL_121;
        case 3uLL:
          break;
        default:
          uint64_t v15 = BYTE6(v13);
          break;
      }
      size_t v18 = __n;
      switch(v88)
      {
        case 1uLL:
          size_t v18 = v85;
          if (v84) {
            goto LABEL_122;
          }
          goto LABEL_19;
        case 2uLL:
          uint64_t v20 = *(void *)(a1 + 16);
          uint64_t v19 = *(void *)(a1 + 24);
          BOOL v21 = __OFSUB__(v19, v20);
          size_t v18 = v19 - v20;
          if (!v21) {
            goto LABEL_19;
          }
          goto LABEL_123;
        case 3uLL:
          if (v15) {
            goto LABEL_7;
          }
          goto LABEL_118;
        default:
LABEL_19:
          if (v15 == v18)
          {
            if (v15 < 1)
            {
LABEL_118:
              sub_22080B88C(v14, v13);
              return v6;
            }
            switch(v13 >> 62)
            {
              case 1uLL:
                if ((int)v14 > v14 >> 32) {
                  goto LABEL_124;
                }
                uint64_t v26 = sub_22093DE40();
                if (v26)
                {
                  uint64_t v27 = v26;
                  uint64_t v28 = sub_22093DE60();
                  if (__OFSUB__((int)v14, v28)) {
                    goto LABEL_126;
                  }
                  BOOL v29 = (const void *)(v27 + (int)v14 - v28);
                }
                else
                {
                  BOOL v29 = 0;
                }
                sub_22093DE50();
                uint64_t v10 = v86;
                if (!v87)
                {
                  LOWORD(__s1[0]) = a1;
                  BYTE2(__s1[0]) = BYTE2(a1);
                  BYTE3(__s1[0]) = BYTE3(a1);
                  BYTE4(__s1[0]) = v80;
                  BYTE5(__s1[0]) = BYTE5(a1);
                  BYTE6(__s1[0]) = BYTE6(a1);
                  HIBYTE(__s1[0]) = HIBYTE(a1);
                  LOWORD(__s1[1]) = v8;
                  BYTE2(__s1[1]) = BYTE2(v8);
                  BYTE3(__s1[1]) = BYTE3(v8);
                  BYTE4(__s1[1]) = BYTE4(v8);
                  BYTE5(__s1[1]) = BYTE5(v8);
                  if (!v29) {
                    goto LABEL_154;
                  }
                  int v50 = memcmp(v29, __s1, __n);
LABEL_102:
                  sub_22080B88C(v14, v13);
                  uint64_t v4 = v82;
                  if (!v50) {
                    return v6;
                  }
                  break;
                }
                if (v87 == 1)
                {
                  if (v81 < v83) {
                    goto LABEL_135;
                  }
                  swift_retain();
                  uint64_t v46 = (char *)sub_22093DE40();
                  if (v46)
                  {
                    uint64_t v47 = sub_22093DE60();
                    if (__OFSUB__(v83, v47)) {
                      goto LABEL_142;
                    }
                    v46 += v83 - v47;
                  }
                  uint64_t v48 = sub_22093DE50();
                  size_t v49 = v78;
                  if (v48 < v78) {
                    size_t v49 = v48;
                  }
                  if (!v29) {
                    goto LABEL_147;
                  }
                  if (!v46) {
                    goto LABEL_148;
                  }
                  int v50 = memcmp(v29, v46, v49);
                  sub_22080B88C(a1, v8);
                  goto LABEL_102;
                }
                uint64_t v68 = *(void *)(a1 + 16);
                uint64_t v77 = *(void *)(a1 + 24);
                swift_retain();
                swift_retain();
                uint64_t v69 = sub_22093DE40();
                if (v69)
                {
                  uint64_t v70 = v69;
                  uint64_t v71 = sub_22093DE60();
                  if (__OFSUB__(v68, v71)) {
                    goto LABEL_141;
                  }
                  unint64_t v72 = (const void *)(v70 + v68 - v71);
                }
                else
                {
                  unint64_t v72 = 0;
                }
                if (__OFSUB__(v77, v68)) {
                  goto LABEL_136;
                }
                uint64_t v73 = sub_22093DE50();
                if (v73 >= v77 - v68) {
                  size_t v74 = v77 - v68;
                }
                else {
                  size_t v74 = v73;
                }
                if (!v29) {
                  goto LABEL_155;
                }
                unint64_t v8 = a2;
                if (!v72) {
                  goto LABEL_156;
                }
                int v45 = memcmp(v29, v72, v74);
LABEL_115:
                swift_release();
                swift_release();
                sub_22080B88C(v14, v13);
                uint64_t v4 = v82;
                uint64_t v10 = v86;
                if (!v45) {
                  return v6;
                }
                break;
              case 2uLL:
                uint64_t v30 = *(void *)(v14 + 16);
                swift_retain();
                swift_retain();
                uint64_t v31 = sub_22093DE40();
                if (v31)
                {
                  uint64_t v32 = v31;
                  uint64_t v33 = sub_22093DE60();
                  if (__OFSUB__(v30, v33)) {
                    goto LABEL_125;
                  }
                  long long v34 = (const void *)(v32 + v30 - v33);
                }
                else
                {
                  long long v34 = 0;
                }
                sub_22093DE50();
                if (v87)
                {
                  if (v87 == 1)
                  {
                    if (v81 < v83) {
                      goto LABEL_129;
                    }
                    swift_retain();
                    uint64_t v41 = (char *)sub_22093DE40();
                    if (v41)
                    {
                      uint64_t v42 = sub_22093DE60();
                      if (__OFSUB__(v83, v42)) {
                        goto LABEL_140;
                      }
                      v41 += v83 - v42;
                    }
                    uint64_t v43 = sub_22093DE50();
                    size_t v44 = v78;
                    if (v43 < v78) {
                      size_t v44 = v43;
                    }
                    if (!v34) {
                      goto LABEL_145;
                    }
                    if (!v41) {
                      goto LABEL_146;
                    }
                    int v45 = memcmp(v34, v41, v44);
                    sub_22080B88C(a1, v8);
                  }
                  else
                  {
                    uint64_t v62 = *(void *)(a1 + 16);
                    uint64_t v76 = *(void *)(a1 + 24);
                    swift_retain();
                    swift_retain();
                    int64_t v63 = (char *)sub_22093DE40();
                    if (v63)
                    {
                      uint64_t v64 = sub_22093DE60();
                      if (__OFSUB__(v62, v64)) {
                        goto LABEL_139;
                      }
                      v63 += v62 - v64;
                    }
                    BOOL v21 = __OFSUB__(v76, v62);
                    int64_t v65 = v76 - v62;
                    if (v21) {
                      goto LABEL_134;
                    }
                    uint64_t v66 = sub_22093DE50();
                    if (v66 >= v65) {
                      size_t v67 = v65;
                    }
                    else {
                      size_t v67 = v66;
                    }
                    if (!v34) {
                      goto LABEL_152;
                    }
                    unint64_t v8 = a2;
                    if (!v63) {
                      goto LABEL_153;
                    }
                    int v45 = memcmp(v34, v63, v67);
                    swift_release();
                    swift_release();
                  }
                }
                else
                {
                  LOWORD(__s1[0]) = a1;
                  BYTE2(__s1[0]) = BYTE2(a1);
                  BYTE3(__s1[0]) = BYTE3(a1);
                  BYTE4(__s1[0]) = v80;
                  BYTE5(__s1[0]) = BYTE5(a1);
                  BYTE6(__s1[0]) = BYTE6(a1);
                  HIBYTE(__s1[0]) = HIBYTE(a1);
                  LOWORD(__s1[1]) = v8;
                  BYTE2(__s1[1]) = BYTE2(v8);
                  BYTE3(__s1[1]) = BYTE3(v8);
                  BYTE4(__s1[1]) = BYTE4(v8);
                  BYTE5(__s1[1]) = BYTE5(v8);
                  if (!v34) {
                    goto LABEL_151;
                  }
                  int v45 = memcmp(v34, __s1, __n);
                }
                goto LABEL_115;
              case 3uLL:
                memset(__s1, 0, 14);
                if (!v87) {
                  goto LABEL_46;
                }
                if (v87 == 1)
                {
                  if (v81 < v83) {
                    goto LABEL_128;
                  }
                  swift_retain();
                  uint64_t v35 = sub_22093DE40();
                  if (!v35) {
                    goto LABEL_144;
                  }
                  uint64_t v23 = v35;
                  uint64_t v36 = sub_22093DE60();
                  uint64_t v25 = v83 - v36;
                  if (__OFSUB__(v83, v36)) {
                    goto LABEL_133;
                  }
LABEL_41:
                  uint64_t v37 = sub_22093DE50();
                  if (v37 >= v78) {
                    size_t v38 = v78;
                  }
                  else {
                    size_t v38 = v37;
                  }
                  int v39 = memcmp(__s1, (const void *)(v23 + v25), v38);
                  sub_22080B88C(a1, v8);
                  sub_22080B88C(v14, v13);
                  uint64_t v10 = v86;
                  if (!v39) {
                    return v6;
                  }
                }
                else
                {
                  uint64_t v57 = *(void *)(a1 + 16);
                  uint64_t v58 = *(void *)(a1 + 24);
                  swift_retain();
                  swift_retain();
                  int64_t v53 = (char *)sub_22093DE40();
                  if (v53)
                  {
                    uint64_t v59 = sub_22093DE60();
                    if (__OFSUB__(v57, v59)) {
                      goto LABEL_138;
                    }
                    v53 += v57 - v59;
                  }
                  BOOL v21 = __OFSUB__(v58, v57);
                  int64_t v55 = v58 - v57;
                  if (v21) {
                    goto LABEL_131;
                  }
                  uint64_t v56 = sub_22093DE50();
                  if (!v53) {
                    goto LABEL_150;
                  }
LABEL_83:
                  if (v56 >= v55) {
                    size_t v60 = v55;
                  }
                  else {
                    size_t v60 = v56;
                  }
                  int v61 = memcmp(__s1, v53, v60);
                  swift_release();
                  swift_release();
                  sub_22080B88C(v14, v13);
                  unint64_t v8 = a2;
                  uint64_t v10 = v86;
                  if (!v61) {
                    return v6;
                  }
                }
                break;
              default:
                __s1[0] = v14;
                LOWORD(__s1[1]) = v13;
                BYTE2(__s1[1]) = BYTE2(v13);
                BYTE3(__s1[1]) = BYTE3(v13);
                BYTE4(__s1[1]) = BYTE4(v13);
                BYTE5(__s1[1]) = BYTE5(v13);
                if (!v87)
                {
LABEL_46:
                  __int16 __s2 = a1;
                  char v91 = BYTE2(a1);
                  char v92 = BYTE3(a1);
                  char v93 = v80;
                  char v94 = BYTE5(a1);
                  char v95 = BYTE6(a1);
                  char v96 = HIBYTE(a1);
                  __int16 v97 = v8;
                  char v98 = BYTE2(v8);
                  char v99 = BYTE3(v8);
                  char v100 = BYTE4(v8);
                  char v101 = BYTE5(v8);
                  int v40 = memcmp(__s1, &__s2, __n);
                  sub_22080B88C(v14, v13);
                  if (!v40) {
                    return v6;
                  }
                  break;
                }
                if (v87 == 1)
                {
                  if (v81 < v83) {
                    goto LABEL_127;
                  }
                  swift_retain();
                  uint64_t v22 = sub_22093DE40();
                  if (!v22)
                  {
                    sub_22093DE50();
                    __break(1u);
LABEL_144:
                    sub_22093DE50();
                    __break(1u);
LABEL_145:
                    __break(1u);
LABEL_146:
                    __break(1u);
LABEL_147:
                    __break(1u);
LABEL_148:
                    __break(1u);
LABEL_149:
                    __break(1u);
LABEL_150:
                    __break(1u);
LABEL_151:
                    __break(1u);
LABEL_152:
                    __break(1u);
LABEL_153:
                    __break(1u);
LABEL_154:
                    __break(1u);
LABEL_155:
                    __break(1u);
LABEL_156:
                    __break(1u);
                    JUMPOUT(0x220822DD8);
                  }
                  uint64_t v23 = v22;
                  uint64_t v24 = sub_22093DE60();
                  uint64_t v25 = v83 - v24;
                  if (__OFSUB__(v83, v24)) {
                    goto LABEL_132;
                  }
                  goto LABEL_41;
                }
                uint64_t v51 = *(void *)(a1 + 16);
                uint64_t v52 = *(void *)(a1 + 24);
                swift_retain();
                swift_retain();
                int64_t v53 = (char *)sub_22093DE40();
                if (v53)
                {
                  uint64_t v54 = sub_22093DE60();
                  if (__OFSUB__(v51, v54)) {
                    goto LABEL_137;
                  }
                  v53 += v51 - v54;
                }
                BOOL v21 = __OFSUB__(v52, v51);
                int64_t v55 = v52 - v51;
                if (v21) {
                  goto LABEL_130;
                }
                uint64_t v56 = sub_22093DE50();
                if (!v53) {
                  goto LABEL_149;
                }
                goto LABEL_83;
            }
          }
          else
          {
LABEL_7:
            sub_22080B88C(v14, v13);
          }
          unint64_t v6 = (v6 + 1) & v10;
          if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
            return v6;
          }
          break;
      }
    }
  }
  return v6;
}

unint64_t sub_220822E08(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = sub_22093E100();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v18 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    unint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    BOOL v11 = v13;
    uint64_t v14 = *(void *)(v12 + 56);
    do
    {
      v11(v7, *(void *)(v20 + 48) + v14 * v9, v4);
      sub_220834C90(&qword_267F18640);
      char v15 = sub_22093E520();
      (*(void (**)(char *, uint64_t))(v12 - 8))(v7, v4);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(v18 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

unint64_t sub_220822FB4(int a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned char *)(v7 + result) != (a1 & 1))
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (((*(unsigned __int8 *)(v7 + result) ^ a1) & 1) == 0) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_220823060(uint64_t a1, double a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a1 & ~v4;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v6 = *(void *)(v2 + 48);
    if (*(double *)(v6 + 8 * result) != a2)
    {
      uint64_t v7 = ~v4;
      for (unint64_t result = (result + 1) & v7;
            ((*(void *)(v3 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v7)
      {
        if (*(double *)(v6 + 8 * result) == a2) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_2208230F8(uint64_t a1, float a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a1 & ~v4;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v6 = *(void *)(v2 + 48);
    if (*(float *)(v6 + 4 * result) != a2)
    {
      uint64_t v7 = ~v4;
      for (unint64_t result = (result + 1) & v7;
            ((*(void *)(v3 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v7)
      {
        if (*(float *)(v6 + 4 * result) == a2) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_220823190(uint64_t a1, __n128 a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a1 & ~v4;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v6 = *(void *)(v2 + 48);
    if (*(short float *)(v6 + 2 * result) != *(short float *)a2.n128_u16)
    {
      uint64_t v7 = ~v4;
      for (unint64_t result = (result + 1) & v7;
            ((*(void *)(v3 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v7)
      {
        if (*(short float *)(v6 + 2 * result) == *(short float *)a2.n128_u16) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_220823228(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_2208232C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v7 = ~v4;
    uint64_t v8 = *(void *)(a1 + 16);
    uint64_t v14 = ~v4;
    while (1)
    {
      uint64_t v9 = *(void *)(*(void *)(v2 + 48) + 8 * v5);
      if (*(void *)(v9 + 16) == v8) {
        break;
      }
LABEL_6:
      unint64_t v5 = (v5 + 1) & v7;
      if (((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
        return v5;
      }
    }
    if (v8 && v9 != a1)
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = 32;
      uint64_t v11 = v8;
      do
      {
        sub_220835280(a1 + v10, (uint64_t)v23, &qword_267F18658);
        sub_220835280(v9 + v10, (uint64_t)v18, &qword_267F18658);
        sub_220835280((uint64_t)v23, (uint64_t)&v20, &qword_267F18658);
        if (v19)
        {
          sub_220835280((uint64_t)v18, (uint64_t)v17, &qword_267F18658);
          if (!*((void *)&v21 + 1))
          {
            sub_220834CE8((uint64_t)v17);
LABEL_4:
            sub_2208352E4((uint64_t)v18, &qword_267F18660);
            sub_2208352E4((uint64_t)v23, &qword_267F18658);
LABEL_5:
            swift_bridgeObjectRelease();
            uint64_t v7 = v14;
            uint64_t v3 = v2 + 64;
            goto LABEL_6;
          }
          v15[0] = v20;
          v15[1] = v21;
          uint64_t v16 = v22;
          char v12 = MEMORY[0x223C6A560](v17, v15);
          sub_220834CE8((uint64_t)v15);
          sub_220834CE8((uint64_t)v17);
          sub_2208352E4((uint64_t)v18, &qword_267F18658);
          sub_2208352E4((uint64_t)v23, &qword_267F18658);
          if ((v12 & 1) == 0) {
            goto LABEL_5;
          }
        }
        else
        {
          if (*((void *)&v21 + 1)) {
            goto LABEL_4;
          }
          sub_2208352E4((uint64_t)v18, &qword_267F18658);
          sub_2208352E4((uint64_t)v23, &qword_267F18658);
        }
        v10 += 40;
        --v11;
      }
      while (v11);
      swift_bridgeObjectRelease();
    }
  }
  return v5;
}

unint64_t sub_2208234C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v38 = a1;
  uint64_t v5 = sub_22093E100();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v31 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18630);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD411B8) - 8;
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v28 - v15;
  uint64_t v17 = v3 + 64;
  uint64_t v39 = v3;
  uint64_t v18 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v19 = a2 & ~v18;
  if ((*(void *)(v3 + 64 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19))
  {
    uint64_t v35 = v14;
    uint64_t v36 = ~v18;
    long long v20 = (unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
    uint64_t v37 = *(void *)(v13 + 72);
    BOOL v29 = (void (**)(char *, uint64_t, uint64_t))(v6 + 32);
    uint64_t v30 = v8;
    uint64_t v33 = (void (**)(uint64_t, uint64_t))(v6 + 8);
    uint64_t v34 = v3 + 64;
    while (1)
    {
      sub_220835280(*(void *)(v39 + 48) + v37 * v19, (uint64_t)v16, qword_26AD411B8);
      uint64_t v21 = (uint64_t)&v10[*(int *)(v8 + 48)];
      sub_220835280((uint64_t)v16, (uint64_t)v10, qword_26AD411B8);
      sub_220835280(v38, v21, qword_26AD411B8);
      uint64_t v22 = *v20;
      if ((*v20)(v10, 1, v5) == 1) {
        break;
      }
      uint64_t v23 = v35;
      sub_220835280((uint64_t)v10, v35, qword_26AD411B8);
      if (v22((char *)v21, 1, v5) == 1)
      {
        (*v33)(v23, v5);
        uint64_t v17 = v34;
LABEL_4:
        sub_2208352E4((uint64_t)v10, &qword_267F18630);
        sub_2208352E4((uint64_t)v16, qword_26AD411B8);
        goto LABEL_5;
      }
      uint64_t v24 = v31;
      (*v29)(v31, v21, v5);
      sub_220834C90(&qword_267F18640);
      int v32 = sub_22093E520();
      uint64_t v25 = *v33;
      uint64_t v26 = v24;
      uint64_t v8 = v30;
      (*v33)((uint64_t)v26, v5);
      v25(v23, v5);
      sub_2208352E4((uint64_t)v10, qword_26AD411B8);
      sub_2208352E4((uint64_t)v16, qword_26AD411B8);
      uint64_t v17 = v34;
      if (v32) {
        return v19;
      }
LABEL_5:
      unint64_t v19 = (v19 + 1) & v36;
      if (((*(void *)(v17 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
        return v19;
      }
    }
    if (v22((char *)v21, 1, v5) == 1)
    {
      sub_2208352E4((uint64_t)v10, qword_26AD411B8);
      sub_2208352E4((uint64_t)v16, qword_26AD411B8);
      return v19;
    }
    goto LABEL_4;
  }
  return v19;
}

unint64_t sub_2208238D8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  __s1[2] = *MEMORY[0x263EF8340];
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v7 = v3;
    unint64_t v10 = a2 >> 62;
    uint64_t v11 = ~v5;
    unint64_t v80 = HIDWORD(a1);
    size_t v83 = HIDWORD(a1) - (int)a1;
    unint64_t v84 = a2 >> 62;
    BOOL v12 = __OFSUB__(HIDWORD(a1), a1);
    BOOL v82 = v12;
    size_t __n = BYTE6(a2);
    uint64_t v81 = (int)a1;
    uint64_t v78 = (a1 >> 32) - (int)a1;
    uint64_t v79 = a1 >> 32;
    unint64_t v87 = a2 >> 60;
    uint64_t v85 = v11;
    do
    {
      uint64_t v13 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v6);
      uint64_t v15 = *v13;
      unint64_t v14 = v13[1];
      if (v14 >> 60 == 15)
      {
        if (v87 > 0xE) {
          return v6;
        }
LABEL_7:
        sub_220834CD4(v15, v14);
        sub_220834CD4(a1, a2);
        sub_220834944(v15, v14);
        sub_220834944(a1, a2);
        goto LABEL_8;
      }
      if (v87 > 0xE) {
        goto LABEL_7;
      }
      uint64_t v16 = 0;
      switch(v14 >> 62)
      {
        case 1uLL:
          LODWORD(v16) = HIDWORD(v15) - v15;
          if (__OFSUB__(HIDWORD(v15), v15))
          {
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
          }
          uint64_t v16 = (int)v16;
LABEL_16:
          size_t v20 = __n;
          switch((int)v10)
          {
            case 1:
              size_t v20 = v83;
              if (v82) {
                goto LABEL_125;
              }
              goto LABEL_20;
            case 2:
              uint64_t v22 = *(void *)(a1 + 16);
              uint64_t v21 = *(void *)(a1 + 24);
              BOOL v19 = __OFSUB__(v21, v22);
              size_t v20 = v21 - v22;
              if (!v19) {
                goto LABEL_20;
              }
              goto LABEL_126;
            case 3:
              if (!v16) {
                return v6;
              }
              goto LABEL_8;
            default:
LABEL_20:
              if (v16 != v20) {
                goto LABEL_8;
              }
              if (v16 < 1) {
                return v6;
              }
              break;
          }
          break;
        case 2uLL:
          uint64_t v18 = *(void *)(v15 + 16);
          uint64_t v17 = *(void *)(v15 + 24);
          BOOL v19 = __OFSUB__(v17, v18);
          uint64_t v16 = v17 - v18;
          if (!v19) {
            goto LABEL_16;
          }
          goto LABEL_124;
        case 3uLL:
          goto LABEL_16;
        default:
          uint64_t v16 = BYTE6(v14);
          goto LABEL_16;
      }
      switch(v14 >> 62)
      {
        case 1uLL:
          if ((int)v15 > v15 >> 32) {
            goto LABEL_127;
          }
          sub_22080B7F4(v15, v14);
          sub_22080B7F4(v15, v14);
          sub_220834CD4(v15, v14);
          sub_220834CD4(a1, a2);
          uint64_t v26 = sub_22093DE40();
          if (v26)
          {
            uint64_t v27 = v26;
            uint64_t v28 = sub_22093DE60();
            if (__OFSUB__((int)v15, v28)) {
              goto LABEL_129;
            }
            size_t v74 = (void *)(v27 + (int)v15 - v28);
          }
          else
          {
            size_t v74 = 0;
          }
          LODWORD(v10) = v84;
          uint64_t v11 = v85;
          sub_22093DE50();
          if (!v84)
          {
            LOWORD(__s1[0]) = a1;
            BYTE2(__s1[0]) = BYTE2(a1);
            BYTE3(__s1[0]) = BYTE3(a1);
            BYTE4(__s1[0]) = v80;
            BYTE5(__s1[0]) = BYTE5(a1);
            BYTE6(__s1[0]) = BYTE6(a1);
            HIBYTE(__s1[0]) = HIBYTE(a1);
            LOWORD(__s1[1]) = a2;
            BYTE2(__s1[1]) = BYTE2(a2);
            BYTE3(__s1[1]) = BYTE3(a2);
            BYTE4(__s1[1]) = BYTE4(a2);
            BYTE5(__s1[1]) = BYTE5(a2);
            if (!v74) {
              goto LABEL_155;
            }
            int v51 = memcmp(v74, __s1, __n);
LABEL_95:
            sub_220834944(a1, a2);
            sub_220834944(v15, v14);
            sub_220834944(v15, v14);
            sub_22080B88C(v15, v14);
            if (!v51) {
              return v6;
            }
            goto LABEL_8;
          }
          if (v84 == 1)
          {
            if (v79 < v81) {
              goto LABEL_138;
            }
            swift_retain();
            uint64_t v42 = (char *)sub_22093DE40();
            if (v42)
            {
              uint64_t v43 = sub_22093DE60();
              if (__OFSUB__(v81, v43)) {
                goto LABEL_145;
              }
              v42 += v81 - v43;
            }
            uint64_t v44 = sub_22093DE50();
            size_t v45 = v78;
            if (v44 < v78) {
              size_t v45 = v44;
            }
            if (!v74) {
              goto LABEL_150;
            }
            if (!v42) {
              goto LABEL_151;
            }
            int v41 = memcmp(v74, v42, v45);
            sub_220834944(a1, a2);
            goto LABEL_109;
          }
          uint64_t v58 = *(void *)(a1 + 16);
          uint64_t v73 = *(char **)(a1 + 24);
          swift_retain();
          swift_retain();
          uint64_t v59 = (char *)sub_22093DE40();
          if (v59)
          {
            uint64_t v60 = sub_22093DE60();
            if (__OFSUB__(v58, v60)) {
              goto LABEL_144;
            }
            v59 += v58 - v60;
          }
          BOOL v19 = __OFSUB__(v73, v58);
          int v61 = &v73[-v58];
          if (v19) {
            goto LABEL_139;
          }
          uint64_t v62 = sub_22093DE50();
          if (v62 >= (uint64_t)v61) {
            size_t v63 = (size_t)v61;
          }
          else {
            size_t v63 = v62;
          }
          if (!v74) {
            goto LABEL_156;
          }
          LODWORD(v10) = v84;
          if (!v59) {
            goto LABEL_157;
          }
          int v41 = memcmp(v74, v59, v63);
          goto LABEL_107;
        case 2uLL:
          uint64_t v69 = *(char **)(v15 + 16);
          sub_22080B7F4(v15, v14);
          sub_22080B7F4(v15, v14);
          sub_220834CD4(v15, v14);
          sub_220834CD4(a1, a2);
          swift_retain();
          swift_retain();
          uint64_t v29 = sub_22093DE40();
          if (v29)
          {
            uint64_t v30 = v29;
            uint64_t v31 = sub_22093DE60();
            if (__OFSUB__(v69, v31)) {
              goto LABEL_128;
            }
            uint64_t v70 = &v69[v30 - v31];
          }
          else
          {
            uint64_t v70 = 0;
          }
          sub_22093DE50();
          uint64_t v11 = v85;
          if (!v10)
          {
            LOWORD(__s1[0]) = a1;
            BYTE2(__s1[0]) = BYTE2(a1);
            BYTE3(__s1[0]) = BYTE3(a1);
            BYTE4(__s1[0]) = v80;
            BYTE5(__s1[0]) = BYTE5(a1);
            BYTE6(__s1[0]) = BYTE6(a1);
            HIBYTE(__s1[0]) = HIBYTE(a1);
            LOWORD(__s1[1]) = a2;
            BYTE2(__s1[1]) = BYTE2(a2);
            BYTE3(__s1[1]) = BYTE3(a2);
            BYTE4(__s1[1]) = BYTE4(a2);
            BYTE5(__s1[1]) = BYTE5(a2);
            if (!v70) {
              goto LABEL_152;
            }
            int v51 = memcmp(v70, __s1, __n);
            swift_release();
            swift_release();
            goto LABEL_95;
          }
          if (v10 == 1)
          {
            if (v79 < v81) {
              goto LABEL_132;
            }
            swift_retain();
            uint64_t v37 = (char *)sub_22093DE40();
            if (v37)
            {
              uint64_t v38 = sub_22093DE60();
              if (__OFSUB__(v81, v38)) {
                goto LABEL_143;
              }
              v37 += v81 - v38;
            }
            uint64_t v39 = sub_22093DE50();
            size_t v40 = v78;
            if (v39 < v78) {
              size_t v40 = v39;
            }
            if (!v70) {
              goto LABEL_148;
            }
            if (!v37) {
              goto LABEL_149;
            }
            int v41 = memcmp(v70, v37, v40);
            sub_220834944(a1, a2);
            swift_release();
          }
          else
          {
            uint64_t v52 = *(void *)(a1 + 16);
            uint64_t v68 = *(void *)(a1 + 24);
            swift_retain();
            swift_retain();
            int64_t v53 = (char *)sub_22093DE40();
            if (v53)
            {
              uint64_t v54 = sub_22093DE60();
              if (__OFSUB__(v52, v54)) {
                goto LABEL_142;
              }
              v53 += v52 - v54;
            }
            BOOL v19 = __OFSUB__(v68, v52);
            int64_t v55 = v68 - v52;
            if (v19) {
              goto LABEL_137;
            }
            uint64_t v56 = sub_22093DE50();
            if (v56 >= v55) {
              size_t v57 = v55;
            }
            else {
              size_t v57 = v56;
            }
            if (!v70) {
              goto LABEL_153;
            }
            LODWORD(v10) = v84;
            if (!v53) {
              goto LABEL_154;
            }
            int v41 = memcmp(v70, v53, v57);
            swift_release();
            swift_release();
LABEL_107:
            swift_release();
          }
          swift_release();
LABEL_109:
          sub_220834944(a1, a2);
          sub_220834944(v15, v14);
          sub_220834944(v15, v14);
          sub_22080B88C(v15, v14);
          uint64_t v11 = v85;
          if (!v41) {
            return v6;
          }
          goto LABEL_8;
        case 3uLL:
          memset(__s1, 0, 14);
          if (!v10) {
            goto LABEL_49;
          }
          if (v10 == 1)
          {
            if (v79 < v81) {
              goto LABEL_131;
            }
            sub_220834CD4(v15, v14);
            sub_220834CD4(a1, a2);
            uint64_t v32 = sub_22093DE40();
            if (!v32) {
              goto LABEL_147;
            }
            uint64_t v24 = v32;
            uint64_t v33 = sub_22093DE60();
            unint64_t v10 = v81 - v33;
            if (__OFSUB__(v81, v33)) {
              goto LABEL_136;
            }
LABEL_44:
            uint64_t v34 = sub_22093DE50();
            if (v34 >= v78) {
              size_t v35 = v78;
            }
            else {
              size_t v35 = v34;
            }
            int v36 = memcmp(__s1, (const void *)(v24 + v10), v35);
            sub_220834944(a1, a2);
            sub_220834944(v15, v14);
            LODWORD(v10) = v84;
            uint64_t v11 = v85;
            if (!v36) {
              return v6;
            }
            goto LABEL_8;
          }
          unint64_t v72 = *(char **)(a1 + 24);
          uint64_t v76 = *(char **)(a1 + 16);
          sub_220834CD4(v15, v14);
          sub_220834CD4(a1, a2);
          swift_retain();
          swift_retain();
          uint64_t v46 = (char *)sub_22093DE40();
          if (v46)
          {
            uint64_t v49 = sub_22093DE60();
            int v50 = v76;
            if (__OFSUB__(v76, v49)) {
              goto LABEL_141;
            }
            uint64_t v46 = &v76[(void)v46 - v49];
          }
          else
          {
            int v50 = v76;
          }
          uint64_t v64 = (char *)(v72 - v50);
          if (__OFSUB__(v72, v50)) {
            goto LABEL_134;
          }
          uint64_t v65 = sub_22093DE50();
          if (!v46) {
            goto LABEL_159;
          }
          break;
        default:
          __s1[0] = *v13;
          LOWORD(__s1[1]) = v14;
          BYTE2(__s1[1]) = BYTE2(v14);
          BYTE3(__s1[1]) = BYTE3(v14);
          BYTE4(__s1[1]) = BYTE4(v14);
          BYTE5(__s1[1]) = BYTE5(v14);
          if (!v10)
          {
LABEL_49:
            __int16 __s2 = a1;
            char v89 = BYTE2(a1);
            char v90 = BYTE3(a1);
            char v91 = v80;
            char v92 = BYTE5(a1);
            char v93 = BYTE6(a1);
            char v94 = HIBYTE(a1);
            __int16 v95 = a2;
            char v96 = BYTE2(a2);
            char v97 = BYTE3(a2);
            char v98 = BYTE4(a2);
            char v99 = BYTE5(a2);
            if (!memcmp(__s1, &__s2, __n)) {
              return v6;
            }
            goto LABEL_8;
          }
          if (v10 == 1)
          {
            if (v79 < v81) {
              goto LABEL_130;
            }
            sub_220834CD4(v15, v14);
            sub_220834CD4(a1, a2);
            uint64_t v23 = sub_22093DE40();
            if (!v23)
            {
              sub_22093DE50();
              __break(1u);
LABEL_147:
              sub_22093DE50();
              __break(1u);
LABEL_148:
              __break(1u);
LABEL_149:
              __break(1u);
LABEL_150:
              __break(1u);
LABEL_151:
              __break(1u);
LABEL_152:
              __break(1u);
LABEL_153:
              __break(1u);
LABEL_154:
              __break(1u);
LABEL_155:
              __break(1u);
LABEL_156:
              __break(1u);
LABEL_157:
              __break(1u);
LABEL_158:
              __break(1u);
LABEL_159:
              __break(1u);
              JUMPOUT(0x2208243A4);
            }
            uint64_t v24 = v23;
            uint64_t v25 = sub_22093DE60();
            unint64_t v10 = v81 - v25;
            if (__OFSUB__(v81, v25)) {
              goto LABEL_135;
            }
            goto LABEL_44;
          }
          uint64_t v71 = *(char **)(a1 + 24);
          char v75 = *(char **)(a1 + 16);
          sub_220834CD4(v15, v14);
          sub_220834CD4(a1, a2);
          swift_retain();
          swift_retain();
          uint64_t v46 = (char *)sub_22093DE40();
          if (v46)
          {
            uint64_t v47 = sub_22093DE60();
            uint64_t v48 = v75;
            if (__OFSUB__(v75, v47)) {
              goto LABEL_140;
            }
            uint64_t v46 = &v75[(void)v46 - v47];
          }
          else
          {
            uint64_t v48 = v75;
          }
          uint64_t v64 = (char *)(v71 - v48);
          if (__OFSUB__(v71, v48)) {
            goto LABEL_133;
          }
          uint64_t v65 = sub_22093DE50();
          if (!v46) {
            goto LABEL_158;
          }
          break;
      }
      if (v65 >= (uint64_t)v64) {
        size_t v66 = (size_t)v64;
      }
      else {
        size_t v66 = v65;
      }
      int v77 = memcmp(__s1, v46, v66);
      swift_release();
      swift_release();
      sub_220834944(a1, a2);
      sub_220834944(v15, v14);
      LODWORD(v10) = v84;
      uint64_t v11 = v85;
      if (!v77) {
        return v6;
      }
LABEL_8:
      unint64_t v6 = (v6 + 1) & v11;
    }
    while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
  }
  return v6;
}

unint64_t sub_2208243D4(char a1, uint64_t a2)
{
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v6 = ~v4;
    do
    {
      int v7 = *(unsigned __int8 *)(*(void *)(v2 + 48) + result);
      if (v7 == 2)
      {
        if (a1 == 2) {
          return result;
        }
      }
      else if (a1 != 2 && ((((a1 & 1) == 0) ^ v7) & 1) != 0)
      {
        return result;
      }
      unint64_t result = (result + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_22082446C(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t result = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = ~v5;
    double v8 = *(double *)&a1;
    do
    {
      uint64_t v9 = *(void *)(v3 + 48) + 16 * result;
      if (*(unsigned char *)(v9 + 8))
      {
        if (a2) {
          return result;
        }
      }
      else if ((a2 & 1) == 0 && *(double *)v9 == v8)
      {
        return result;
      }
      unint64_t result = (result + 1) & v7;
    }
    while (((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_2208244F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v6 = ~v4;
    do
    {
      uint64_t v7 = *(void *)(v2 + 48) + 8 * result;
      if (*(unsigned char *)(v7 + 4))
      {
        if ((a1 & 0x100000000) != 0) {
          return result;
        }
      }
      else if ((a1 & 0x100000000) == 0 && *(float *)v7 == *(float *)&a1)
      {
        return result;
      }
      unint64_t result = (result + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_22082457C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = ~v5;
    uint64_t v10 = *(void *)(v3 + 48);
    do
    {
      uint64_t v11 = (void *)(v10 + 16 * v6);
      uint64_t v12 = v11[1];
      if (v12)
      {
        if (a2)
        {
          BOOL v13 = *v11 == a1 && v12 == a2;
          if (v13 || (sub_22093F250() & 1) != 0) {
            return v6;
          }
        }
      }
      else if (!a2)
      {
        return v6;
      }
      unint64_t v6 = (v6 + 1) & v9;
    }
    while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
  }
  return v6;
}

unint64_t sub_220824648(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t result = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = ~v5;
    do
    {
      uint64_t v8 = *(void *)(v3 + 48) + 16 * result;
      if (*(unsigned char *)(v8 + 8))
      {
        if (a2) {
          return result;
        }
      }
      else if ((a2 & 1) == 0 && *(void *)v8 == a1)
      {
        return result;
      }
      unint64_t result = (result + 1) & v7;
    }
    while (((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

void *sub_2208246CC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(qword_26AD412C0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_22093F0E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    uint64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v22 = v19;
    v22[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_22082487C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18888);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_22093F0E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    unint64_t result = (void *)sub_220834DA0(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v23);
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    uint64_t v17 = *(void *)(v4 + 48) + 40 * v15;
    long long v18 = v23[0];
    long long v19 = v23[1];
    *(void *)(v17 + 32) = v24;
    *(_OWORD *)uint64_t v17 = v18;
    *(_OWORD *)(v17 + 16) = v19;
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_220824A54()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18870);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_22093F0E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    uint64_t v18 = 16 * v15;
    long long v19 = *(_OWORD *)(*(void *)(v2 + 48) + v18);
    *(_OWORD *)(*(void *)(v4 + 48) + v18) = v19;
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    unint64_t result = (void *)sub_22080B7F4(v19, *((unint64_t *)&v19 + 1));
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_220824C04()
{
  uint64_t v1 = sub_22093E100();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18860);
  int64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_22093F0E0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    unint64_t result = (void *)swift_release();
    *int64_t v23 = v7;
    return result;
  }
  unint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    unint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v24 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v27 = v2 + 16;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void *)(*(void *)(v5 + 56) + v17);
    unint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v17) = v18;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_220824E98()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18850);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_22093F0E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v20 = __clz(__rbit64(v18));
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = v20 + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_220825028()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18848);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_22093F0E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v21 = __clz(__rbit64(v19));
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = v21 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2208251B8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18840);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_22093F0E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v23 = __clz(__rbit64(v21));
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = v23 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 4 * v15;
    int v17 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v15);
    uint64_t v18 = 8 * v15;
    uint64_t v19 = *(void *)(*(void *)(v2 + 56) + v18);
    *(_DWORD *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v18) = v19;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_22082534C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18830);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_22093F0E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v23 = __clz(__rbit64(v21));
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = v23 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 2 * v15;
    __int16 v17 = *(_WORD *)(*(void *)(v2 + 48) + 2 * v15);
    uint64_t v18 = 8 * v15;
    uint64_t v19 = *(void *)(*(void *)(v2 + 56) + v18);
    *(_WORD *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v18) = v19;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2208254E0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18828);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_22093F0E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v21 = __clz(__rbit64(v19));
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = v21 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_220825670()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18798);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_22093F0E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    sub_220834DA0(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    uint64_t v17 = 32 * v15;
    sub_220835280(*(void *)(v2 + 56) + v17, (uint64_t)v24, qword_26AD40FF8);
    uint64_t v18 = *(void *)(v4 + 48) + v16;
    long long v19 = v25[0];
    long long v20 = v25[1];
    *(void *)(v18 + 32) = v26;
    *(_OWORD *)uint64_t v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    unint64_t result = (void *)sub_220834D3C((uint64_t)v24, *(void *)(v4 + 56) + v17, qword_26AD40FF8);
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_220825868()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18670);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_22093F0E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    sub_220834DA0(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v23);
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    uint64_t v17 = *(void *)(v4 + 48) + 40 * v15;
    long long v18 = v23[0];
    long long v19 = v23[1];
    *(void *)(v17 + 32) = v24;
    *(_OWORD *)uint64_t v17 = v18;
    *(_OWORD *)(v17 + 16) = v19;
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_220825A44()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F187B8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_22093F0E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v6 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 56);
    long long v18 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = v18[1];
    uint64_t v20 = 24 * v15;
    uint64_t v21 = *(void *)(v17 + v20);
    unint64_t v22 = *(void *)(v17 + v20 + 8);
    uint64_t v23 = *(void *)(v17 + v20 + 16);
    uint64_t v24 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v24 = *v18;
    v24[1] = v19;
    int64_t v25 = (uint64_t *)(*(void *)(v4 + 56) + v20);
    *int64_t v25 = v21;
    v25[1] = v22;
    _OWORD v25[2] = v23;
    swift_bridgeObjectRetain();
    sub_22080B7F4(v21, v22);
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v13) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v6 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_220825C24()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F187E8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_22093F0E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    uint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v23 = v19;
    v23[1] = v18;
    uint64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    *uint64_t v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_220825DE0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18750);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_22093F0E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    unint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v24 = v1;
  unint64_t result = (void *)(v3 + 64);
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v6) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v6);
  }
  uint64_t v25 = v2 + 64;
  int64_t v8 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v2 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v12) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v21);
    ++v8;
    if (!v22)
    {
      int64_t v8 = v21 + 1;
      if (v21 + 1 >= v12) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v25 + 8 * v8);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v11 = (v22 - 1) & v22;
    unint64_t v14 = __clz(__rbit64(v22)) + (v8 << 6);
LABEL_12:
    uint64_t v15 = 16 * v14;
    uint64_t v16 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v14);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    uint64_t v19 = 32 * v14;
    sub_220835280(*(void *)(v2 + 56) + 32 * v14, (uint64_t)v26, qword_26AD40FF8);
    uint64_t v20 = (void *)(*(void *)(v4 + 48) + v15);
    *uint64_t v20 = v17;
    v20[1] = v18;
    sub_220834D3C((uint64_t)v26, *(void *)(v4 + 56) + v19, qword_26AD40FF8);
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v12)
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    uint64_t v1 = v24;
    goto LABEL_28;
  }
  unint64_t v22 = *(void *)(v25 + 8 * v23);
  if (v22)
  {
    int64_t v8 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v8 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v8 >= v12) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v8);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_220825FE0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18748);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_22093F0E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_220826184()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD411B8);
  uint64_t v26 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18728);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_22093F0E0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    unint64_t result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  uint64_t v24 = v1;
  unint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    unint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v25 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v20 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v14) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v20);
    ++v10;
    if (!v21)
    {
      int64_t v10 = v20 + 1;
      if (v20 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v21 = *(void *)(v25 + 8 * v10);
      if (!v21) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v26 + 72) * v16;
    sub_220835280(*(void *)(v5 + 48) + v17, (uint64_t)v4, qword_26AD411B8);
    uint64_t v18 = 8 * v16;
    uint64_t v19 = *(void *)(*(void *)(v5 + 56) + v18);
    unint64_t result = (void *)sub_220834D3C((uint64_t)v4, *(void *)(v7 + 48) + v17, qword_26AD411B8);
    *(void *)(*(void *)(v7 + 56) + v18) = v19;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v14)
  {
LABEL_23:
    unint64_t result = (void *)swift_release();
    uint64_t v1 = v24;
    goto LABEL_25;
  }
  unint64_t v21 = *(void *)(v25 + 8 * v22);
  if (v21)
  {
    int64_t v10 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v10);
    ++v22;
    if (v21) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_2208263F8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18700);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_22093F0E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    uint64_t v18 = 16 * v15;
    long long v19 = *(_OWORD *)(*(void *)(v2 + 48) + v18);
    *(_OWORD *)(*(void *)(v4 + 48) + v18) = v19;
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    unint64_t result = (void *)sub_220834CD4(v19, *((unint64_t *)&v19 + 1));
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2208265A8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F186E8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_22093F0E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v20 = __clz(__rbit64(v18));
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = v20 + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_220826738()
{
  return sub_220826A9C(&qword_267F186D0);
}

void *sub_220826744()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F186B8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_22093F0E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v24 = __clz(__rbit64(v22));
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = v24 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    int v18 = *(_DWORD *)v17;
    LOBYTE(v17) = *(unsigned char *)(v17 + 4);
    uint64_t v19 = *(void *)(*(void *)(v2 + 56) + v16);
    uint64_t v20 = *(void *)(v4 + 48) + v16;
    *(_DWORD *)uint64_t v20 = v18;
    *(unsigned char *)(v20 + 4) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v19;
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2208268E4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F186A0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_22093F0E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(_OWORD *)(*(void *)(v4 + 48) + 16 * v15) = *(_OWORD *)(*(void *)(v2 + 48) + 16 * v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_220826A90()
{
  return sub_220826A9C(&qword_267F18688);
}

void *sub_220826A9C(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_22093F0E0();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  unint64_t result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    unint64_t result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v26 = __clz(__rbit64(v24));
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = v26 + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = *(void *)(v3 + 48) + 16 * v16;
    uint64_t v19 = *(void *)v18;
    LOBYTE(v18) = *(unsigned char *)(v18 + 8);
    uint64_t v20 = 8 * v16;
    uint64_t v21 = *(void *)(*(void *)(v3 + 56) + v20);
    uint64_t v22 = *(void *)(v5 + 48) + v17;
    *(void *)uint64_t v22 = v19;
    *(unsigned char *)(v22 + 8) = v18;
    *(void *)(*(void *)(v5 + 56) + v20) = v21;
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_220826C38(void *a1, int64_t a2, char a3)
{
  unint64_t result = sub_22089B2A4(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_220826C58(char *a1, int64_t a2, char a3)
{
  unint64_t result = sub_22089B3DC(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_220826C78(char *a1, int64_t a2, char a3)
{
  unint64_t result = sub_22089B3F0(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_220826C98(char *a1, int64_t a2, char a3)
{
  unint64_t result = sub_22089B4F4(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_220826CB8(void *a1, int64_t a2, char a3)
{
  unint64_t result = sub_22089B5F0(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_220826CD8(char *a1, int64_t a2, char a3)
{
  unint64_t result = sub_22089B714(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

size_t sub_220826CF8(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_22089B844(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_220826D18(void *a1, int64_t a2, char a3)
{
  size_t result = sub_22089B858(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_220826D38(char *a1, int64_t a2, char a3)
{
  size_t result = sub_22089B86C(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_220826D58(void *a1, int64_t a2, char a3)
{
  size_t result = sub_22089B958(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_220826D78(char *a1, int64_t a2, char a3)
{
  size_t result = sub_22089BA94(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_220826D98(char *a1, int64_t a2, char a3)
{
  size_t result = sub_22089BB8C(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_220826DB8(char *a1, int64_t a2, char a3)
{
  size_t result = sub_22089BB98(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_220826DD8(void *a1, int64_t a2, char a3)
{
  size_t result = sub_22089BC98(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_220826DF8(char *a1, int64_t a2, char a3)
{
  size_t result = sub_22089BCAC(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_220826E18(void *a1, int64_t a2, char a3)
{
  size_t result = sub_22089BDC8(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_220826E38(void *a1, int64_t a2, char a3)
{
  size_t result = sub_22089BDDC(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_220826E58(void *a1, int64_t a2, char a3)
{
  size_t result = sub_22089BDF0(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_220826E78(char *a1, int64_t a2, char a3)
{
  size_t result = sub_22089BF2C(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_220826E98(char *a1, int64_t a2, char a3)
{
  size_t result = sub_22089C034(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

size_t sub_220826EB8(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_22089C138(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_220826ED8(char *a1, int64_t a2, char a3)
{
  size_t result = sub_22089C30C(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_220826EF8(char *a1, int64_t a2, char a3)
{
  size_t result = sub_22089C3F8(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_220826F18(char *a1, int64_t a2, char a3)
{
  size_t result = sub_22089C4F4(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_220826F38(char *a1, int64_t a2, char a3)
{
  size_t result = sub_22089C5F0(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_220826F58(void *a1, int64_t a2, char a3)
{
  size_t result = sub_22089C6E8(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_220826F78(void *a1, int64_t a2, char a3)
{
  size_t result = sub_22089C6FC(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_220826F98(char *a1, int64_t a2, char a3)
{
  size_t result = sub_22089C820(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_220826FB8(char *a1, int64_t a2, char a3)
{
  size_t result = sub_22089C93C(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_220826FD8(void *a1, int64_t a2, char a3)
{
  size_t result = sub_22089C950(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_220826FF8(char *a1, int64_t a2, char a3)
{
  size_t result = sub_22089C964(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_220827018(void *a1, int64_t a2, char a3)
{
  size_t result = sub_22089CA80(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_220827038(char *a1, int64_t a2, char a3)
{
  size_t result = sub_22089CBD0(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

size_t sub_220827058(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_22089CCE8(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

size_t sub_220827078(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_22089CCFC(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_220827098(void *a1, int64_t a2, char a3)
{
  size_t result = sub_22089CEE4(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_2208270B8(void *a1, int64_t a2, char a3)
{
  size_t result = sub_22089CEF8(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_2208270D8(void *a1, int64_t a2, char a3)
{
  size_t result = sub_22089CF0C(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_2208270F8(void *a1, int64_t a2, char a3)
{
  size_t result = sub_22089CF20(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_220827118(void *a1, int64_t a2, char a3)
{
  size_t result = sub_22089CF34(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_220827138(void *a1, int64_t a2, char a3)
{
  size_t result = sub_22089CF48(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_220827158(void *a1, int64_t a2, char a3)
{
  size_t result = sub_22089CF5C(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_220827178(void *a1, int64_t a2, char a3)
{
  size_t result = sub_22089D0B0(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_220827198(void *a1, int64_t a2, char a3)
{
  size_t result = sub_22089D1EC(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_2208271B8(void *a1, int64_t a2, char a3)
{
  size_t result = sub_22089D200(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_2208271D8(void *a1, int64_t a2, char a3)
{
  size_t result = sub_22089D214(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_2208271F8(void *a1, int64_t a2, char a3)
{
  size_t result = sub_22089D350(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_220827218(void *a1, int64_t a2, char a3)
{
  size_t result = sub_22089D49C(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_220827238(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_22093F430();
  swift_bridgeObjectRetain();
  sub_22093E650();
  uint64_t v8 = sub_22093F490();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_22093F250() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_22093F250() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_22082E84C(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_2208273E8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_22093F420();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_22082E9E8(a2, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(void *)(v10 + 8 * v9) != a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v10 + 8 * v9) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_2208274E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  sub_22093F430();
  sub_220835280(a2, (uint64_t)&v23, &qword_267F18658);
  if (*((void *)&v24 + 1))
  {
    v21[0] = v23;
    v21[1] = v24;
    uint64_t v22 = v25;
    sub_22093F450();
    swift_bridgeObjectRetain();
    sub_22093EE60();
    sub_220834CE8((uint64_t)v21);
  }
  else
  {
    sub_22093F450();
    swift_bridgeObjectRetain();
  }
  uint64_t v5 = sub_22093F490();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_220835280(a2, (uint64_t)v16, &qword_267F18658);
    *(void *)&long long v23 = *(void *)v12;
    *(void *)uint64_t v12 = 0x8000000000000000;
    sub_22082EB0C((uint64_t)v16, v7, isUniquelyReferenced_nonNull_native);
    *(void *)uint64_t v12 = v23;
    swift_bridgeObjectRelease();
    sub_220834D3C(a2, a1, &qword_267F18658);
    return 1;
  }
  uint64_t v8 = ~v6;
  while (1)
  {
    sub_220835280(*(void *)(v4 + 48) + 40 * v7, (uint64_t)&v23, &qword_267F18658);
    sub_220835280((uint64_t)&v23, (uint64_t)v16, &qword_267F18658);
    sub_220835280(a2, (uint64_t)&v18, &qword_267F18658);
    if (!v17) {
      break;
    }
    sub_220835280((uint64_t)v16, (uint64_t)v21, &qword_267F18658);
    if (!*((void *)&v19 + 1))
    {
      sub_220834CE8((uint64_t)v21);
      goto LABEL_7;
    }
    v14[0] = v18;
    v14[1] = v19;
    uint64_t v15 = v20;
    char v9 = MEMORY[0x223C6A560](v21, v14);
    sub_220834CE8((uint64_t)v14);
    sub_220834CE8((uint64_t)v21);
    sub_2208352E4((uint64_t)v16, &qword_267F18658);
    sub_2208352E4((uint64_t)&v23, &qword_267F18658);
    if (v9) {
      goto LABEL_16;
    }
LABEL_8:
    unint64_t v7 = (v7 + 1) & v8;
    if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
      goto LABEL_14;
    }
  }
  if (*((void *)&v19 + 1))
  {
LABEL_7:
    sub_2208352E4((uint64_t)v16, &qword_267F18660);
    sub_2208352E4((uint64_t)&v23, &qword_267F18658);
    goto LABEL_8;
  }
  sub_2208352E4((uint64_t)v16, &qword_267F18658);
  sub_2208352E4((uint64_t)&v23, &qword_267F18658);
LABEL_16:
  swift_bridgeObjectRelease();
  sub_2208352E4(a2, &qword_267F18658);
  sub_220835280(*(void *)(*(void *)v12 + 48) + 40 * v7, a1, &qword_267F18658);
  return 0;
}

uint64_t sub_2208277C8(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v96 = *MEMORY[0x263EF8340];
  uint64_t v7 = *v3;
  sub_22093F430();
  unint64_t v8 = a3 >> 60;
  sub_22093F450();
  swift_bridgeObjectRetain();
  if (a3 >> 60 != 15)
  {
    sub_220834CD4(a2, a3);
    sub_22093E010();
    sub_220834944(a2, a3);
  }
  uint64_t v9 = sub_22093F490();
  uint64_t v10 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v11 = v9 & ~v10;
  if (((*(void *)(v7 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
  {
LABEL_125:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)__s1 = *(void *)v87;
    *(void *)uint64_t v87 = 0x8000000000000000;
    sub_220834CD4(a2, a3);
    sub_22082EDCC(a2, a3, v11, isUniquelyReferenced_nonNull_native);
    *(void *)uint64_t v87 = *(void *)__s1;
    swift_bridgeObjectRelease();
    *a1 = a2;
    a1[1] = a3;
    return 1;
  }
  uint64_t v88 = ~v10;
  uint64_t v85 = a1;
  BOOL v12 = __OFSUB__(HIDWORD(a2), a2);
  BOOL v84 = v12;
  uint64_t v82 = (a2 >> 32) - (int)a2;
  uint64_t v83 = a2 >> 32;
  unint64_t v86 = a3 >> 62;
  while (1)
  {
    BOOL v13 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v11);
    uint64_t v15 = *v13;
    unint64_t v14 = v13[1];
    if (v14 >> 60 == 15) {
      break;
    }
    if (v8 > 0xE) {
      goto LABEL_9;
    }
    uint64_t v16 = 0;
    switch(v14 >> 62)
    {
      case 1uLL:
        LODWORD(v16) = HIDWORD(v15) - v15;
        if (__OFSUB__(HIDWORD(v15), v15))
        {
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
        }
        uint64_t v16 = (int)v16;
LABEL_18:
        uint64_t v20 = BYTE6(a3);
        switch(a3 >> 62)
        {
          case 1uLL:
            uint64_t v20 = HIDWORD(a2) - (int)a2;
            if (v84) {
              goto LABEL_130;
            }
            goto LABEL_22;
          case 2uLL:
            uint64_t v22 = *(void *)(a2 + 16);
            uint64_t v21 = *(void *)(a2 + 24);
            BOOL v19 = __OFSUB__(v21, v22);
            uint64_t v20 = v21 - v22;
            if (!v19) {
              goto LABEL_22;
            }
            goto LABEL_131;
          case 3uLL:
            if (!v16) {
              goto LABEL_124;
            }
            goto LABEL_10;
          default:
LABEL_22:
            if (v16 != v20) {
              goto LABEL_10;
            }
            if (v16 < 1) {
              goto LABEL_124;
            }
            break;
        }
        break;
      case 2uLL:
        uint64_t v18 = *(void *)(v15 + 16);
        uint64_t v17 = *(void *)(v15 + 24);
        BOOL v19 = __OFSUB__(v17, v18);
        uint64_t v16 = v17 - v18;
        if (!v19) {
          goto LABEL_18;
        }
        goto LABEL_129;
      case 3uLL:
        goto LABEL_18;
      default:
        uint64_t v16 = BYTE6(v14);
        goto LABEL_18;
    }
    switch(v14 >> 62)
    {
      case 1uLL:
        if ((int)v15 > v15 >> 32) {
          goto LABEL_132;
        }
        sub_22080B7F4(v15, v14);
        sub_220834CD4(v15, v14);
        sub_220834CD4(a2, a3);
        sub_220834CD4(v15, v14);
        uint64_t v27 = sub_22093DE40();
        if (v27)
        {
          uint64_t v28 = v27;
          uint64_t v29 = sub_22093DE60();
          if (__OFSUB__((int)v15, v29)) {
            goto LABEL_134;
          }
          uint64_t v78 = (void *)(v28 + (int)v15 - v29);
        }
        else
        {
          uint64_t v78 = 0;
        }
        a1 = v85;
        unint64_t v8 = a3 >> 60;
        sub_22093DE50();
        if (!v86)
        {
          *(void *)__s1 = a2;
          *(_WORD *)&__s1[8] = a3;
          __s1[10] = BYTE2(a3);
          __s1[11] = BYTE3(a3);
          __s1[12] = BYTE4(a3);
          __s1[13] = BYTE5(a3);
          if (!v78) {
            goto LABEL_160;
          }
          int v51 = memcmp(v78, __s1, BYTE6(a3));
LABEL_96:
          sub_220834944(a2, a3);
          sub_220834944(v15, v14);
          sub_220834944(v15, v14);
          sub_22080B88C(v15, v14);
          if (!v51) {
            goto LABEL_124;
          }
          break;
        }
        if (v86 == 1)
        {
          if (v83 < (int)a2) {
            goto LABEL_142;
          }
          swift_retain();
          uint64_t v42 = (char *)sub_22093DE40();
          if (v42)
          {
            uint64_t v43 = sub_22093DE60();
            if (__OFSUB__((int)a2, v43)) {
              goto LABEL_150;
            }
            v42 += (int)a2 - v43;
          }
          uint64_t v44 = sub_22093DE50();
          size_t v45 = (a2 >> 32) - (int)a2;
          if (v44 < v82) {
            size_t v45 = v44;
          }
          if (!v78) {
            goto LABEL_155;
          }
          if (!v42) {
            goto LABEL_156;
          }
          int v37 = memcmp(v78, v42, v45);
          sub_220834944(a2, a3);
        }
        else
        {
          uint64_t v58 = *(void *)(a2 + 16);
          int v77 = *(char **)(a2 + 24);
          swift_retain();
          swift_retain();
          uint64_t v59 = (char *)sub_22093DE40();
          if (v59)
          {
            uint64_t v60 = sub_22093DE60();
            if (__OFSUB__(v58, v60)) {
              goto LABEL_149;
            }
            v59 += v58 - v60;
          }
          BOOL v19 = __OFSUB__(v77, v58);
          int v61 = &v77[-v58];
          if (v19) {
            goto LABEL_144;
          }
          uint64_t v62 = sub_22093DE50();
          if (v62 >= (uint64_t)v61) {
            size_t v63 = (size_t)v61;
          }
          else {
            size_t v63 = v62;
          }
          if (!v78) {
            goto LABEL_161;
          }
          a1 = v85;
          if (!v59) {
            goto LABEL_162;
          }
          int v37 = memcmp(v78, v59, v63);
LABEL_108:
          swift_release();
LABEL_109:
          swift_release();
        }
        sub_220834944(a2, a3);
        sub_220834944(v15, v14);
        sub_220834944(v15, v14);
        sub_22080B88C(v15, v14);
        goto LABEL_111;
      case 2uLL:
        uint64_t v73 = *(char **)(v15 + 16);
        sub_22080B7F4(v15, v14);
        sub_220834CD4(v15, v14);
        sub_220834CD4(a2, a3);
        sub_220834CD4(v15, v14);
        swift_retain();
        swift_retain();
        uint64_t v30 = sub_22093DE40();
        if (v30)
        {
          uint64_t v31 = v30;
          uint64_t v32 = sub_22093DE60();
          if (__OFSUB__(v73, v32)) {
            goto LABEL_133;
          }
          size_t v74 = &v73[v31 - v32];
        }
        else
        {
          size_t v74 = 0;
        }
        sub_22093DE50();
        unint64_t v8 = a3 >> 60;
        if (!v86)
        {
          *(void *)__s1 = a2;
          *(_WORD *)&__s1[8] = a3;
          __s1[10] = BYTE2(a3);
          __s1[11] = BYTE3(a3);
          __s1[12] = BYTE4(a3);
          __s1[13] = BYTE5(a3);
          if (!v74) {
            goto LABEL_157;
          }
          int v51 = memcmp(v74, __s1, BYTE6(a3));
          swift_release();
          swift_release();
          goto LABEL_96;
        }
        if (v86 == 1)
        {
          if (v83 < (int)a2) {
            goto LABEL_137;
          }
          swift_retain();
          uint64_t v38 = (char *)sub_22093DE40();
          if (v38)
          {
            uint64_t v39 = sub_22093DE60();
            if (__OFSUB__((int)a2, v39)) {
              goto LABEL_148;
            }
            v38 += (int)a2 - v39;
          }
          uint64_t v40 = sub_22093DE50();
          size_t v41 = (a2 >> 32) - (int)a2;
          if (v40 < v82) {
            size_t v41 = v40;
          }
          if (!v74) {
            goto LABEL_153;
          }
          if (!v38) {
            goto LABEL_154;
          }
          int v37 = memcmp(v74, v38, v41);
          sub_220834944(a2, a3);
          swift_release();
          goto LABEL_109;
        }
        uint64_t v52 = *(void *)(a2 + 16);
        uint64_t v72 = *(void *)(a2 + 24);
        swift_retain();
        swift_retain();
        int64_t v53 = (char *)sub_22093DE40();
        if (v53)
        {
          uint64_t v54 = sub_22093DE60();
          if (__OFSUB__(v52, v54)) {
            goto LABEL_147;
          }
          v53 += v52 - v54;
        }
        BOOL v19 = __OFSUB__(v72, v52);
        int64_t v55 = v72 - v52;
        if (v19) {
          goto LABEL_143;
        }
        uint64_t v56 = sub_22093DE50();
        if (v56 >= v55) {
          size_t v57 = v55;
        }
        else {
          size_t v57 = v56;
        }
        if (!v74) {
          goto LABEL_158;
        }
        a1 = v85;
        if (!v53) {
          goto LABEL_159;
        }
        int v37 = memcmp(v74, v53, v57);
        swift_release();
        swift_release();
        goto LABEL_108;
      case 3uLL:
        *(void *)&__s1[6] = 0;
        *(void *)__s1 = 0;
        if (!v86) {
          goto LABEL_50;
        }
        if (v86 == 1)
        {
          if (v83 < (int)a2) {
            goto LABEL_136;
          }
          sub_220834CD4(a2, a3);
          sub_220834CD4(v15, v14);
          uint64_t v33 = sub_22093DE40();
          if (!v33) {
            goto LABEL_152;
          }
          uint64_t v24 = v33;
          uint64_t v34 = sub_22093DE60();
          uint64_t v26 = (int)a2 - v34;
          if (__OFSUB__((int)a2, v34)) {
            goto LABEL_141;
          }
          goto LABEL_46;
        }
        uint64_t v76 = *(char **)(a2 + 24);
        unint64_t v80 = *(char **)(a2 + 16);
        sub_220834CD4(a2, a3);
        sub_220834CD4(v15, v14);
        swift_retain();
        swift_retain();
        uint64_t v46 = (char *)sub_22093DE40();
        if (v46)
        {
          uint64_t v49 = sub_22093DE60();
          int v50 = v80;
          if (__OFSUB__(v80, v49)) {
            goto LABEL_146;
          }
          uint64_t v46 = &v80[(void)v46 - v49];
        }
        else
        {
          int v50 = v80;
        }
        uint64_t v64 = (char *)(v76 - v50);
        if (__OFSUB__(v76, v50)) {
          goto LABEL_139;
        }
        uint64_t v65 = sub_22093DE50();
        if (!v46) {
          goto LABEL_164;
        }
        goto LABEL_120;
      default:
        *(void *)__s1 = *v13;
        *(_WORD *)&__s1[8] = v14;
        __s1[10] = BYTE2(v14);
        __s1[11] = BYTE3(v14);
        __s1[12] = BYTE4(v14);
        __s1[13] = BYTE5(v14);
        if (v86)
        {
          if (v86 == 1)
          {
            if (v83 < (int)a2) {
              goto LABEL_135;
            }
            sub_220834CD4(a2, a3);
            sub_220834CD4(v15, v14);
            uint64_t v23 = sub_22093DE40();
            if (!v23)
            {
              sub_22093DE50();
              __break(1u);
LABEL_152:
              sub_22093DE50();
              __break(1u);
LABEL_153:
              __break(1u);
LABEL_154:
              __break(1u);
LABEL_155:
              __break(1u);
LABEL_156:
              __break(1u);
LABEL_157:
              __break(1u);
LABEL_158:
              __break(1u);
LABEL_159:
              __break(1u);
LABEL_160:
              __break(1u);
LABEL_161:
              __break(1u);
LABEL_162:
              __break(1u);
LABEL_163:
              __break(1u);
LABEL_164:
              __break(1u);
              JUMPOUT(0x2208283B0);
            }
            uint64_t v24 = v23;
            uint64_t v25 = sub_22093DE60();
            uint64_t v26 = (int)a2 - v25;
            if (__OFSUB__((int)a2, v25)) {
              goto LABEL_140;
            }
LABEL_46:
            uint64_t v35 = sub_22093DE50();
            if (v35 >= v82) {
              size_t v36 = (a2 >> 32) - (int)a2;
            }
            else {
              size_t v36 = v35;
            }
            int v37 = memcmp(__s1, (const void *)(v24 + v26), v36);
            sub_220834944(a2, a3);
            sub_220834944(v15, v14);
            a1 = v85;
LABEL_111:
            unint64_t v8 = a3 >> 60;
            if (!v37) {
              goto LABEL_124;
            }
          }
          else
          {
            char v75 = *(char **)(a2 + 24);
            uint64_t v79 = *(char **)(a2 + 16);
            sub_220834CD4(a2, a3);
            sub_220834CD4(v15, v14);
            swift_retain();
            swift_retain();
            uint64_t v46 = (char *)sub_22093DE40();
            if (v46)
            {
              uint64_t v47 = sub_22093DE60();
              uint64_t v48 = v79;
              if (__OFSUB__(v79, v47)) {
                goto LABEL_145;
              }
              uint64_t v46 = &v79[(void)v46 - v47];
            }
            else
            {
              uint64_t v48 = v79;
            }
            uint64_t v64 = (char *)(v75 - v48);
            if (__OFSUB__(v75, v48)) {
              goto LABEL_138;
            }
            uint64_t v65 = sub_22093DE50();
            if (!v46) {
              goto LABEL_163;
            }
LABEL_120:
            if (v65 >= (uint64_t)v64) {
              size_t v66 = (size_t)v64;
            }
            else {
              size_t v66 = v65;
            }
            int v81 = memcmp(__s1, v46, v66);
            swift_release();
            swift_release();
            sub_220834944(a2, a3);
            sub_220834944(v15, v14);
            a1 = v85;
            unint64_t v8 = a3 >> 60;
            if (!v81)
            {
LABEL_124:
              swift_bridgeObjectRelease();
              sub_220834944(a2, a3);
              goto LABEL_127;
            }
          }
        }
        else
        {
LABEL_50:
          uint64_t __s2 = a2;
          __int16 v90 = a3;
          char v91 = BYTE2(a3);
          char v92 = BYTE3(a3);
          char v93 = BYTE4(a3);
          char v94 = BYTE5(a3);
          if (!memcmp(__s1, &__s2, BYTE6(a3))) {
            goto LABEL_124;
          }
        }
        break;
    }
LABEL_10:
    unint64_t v11 = (v11 + 1) & v88;
    if (((*(void *)(v7 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
      goto LABEL_125;
    }
  }
  if (v8 <= 0xE)
  {
LABEL_9:
    sub_220834CD4(a2, a3);
    sub_220834CD4(v15, v14);
    sub_220834944(v15, v14);
    sub_220834944(a2, a3);
    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
LABEL_127:
  uint64_t v69 = (uint64_t *)(*(void *)(*(void *)v87 + 48) + 16 * v11);
  uint64_t v70 = *v69;
  unint64_t v71 = v69[1];
  *a1 = *v69;
  a1[1] = v71;
  sub_220834CD4(v70, v71);
  return 0;
}

uint64_t sub_2208283E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v44 = a1;
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18630);
  MEMORY[0x270FA5388](v58);
  uint64_t v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_22093E100();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD411B8);
  uint64_t v52 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v57 = (uint64_t)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v41 - v15;
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v42 = (uint64_t)&v41 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v41 - v19;
  uint64_t v21 = *v3;
  sub_22093F430();
  uint64_t v47 = a2;
  sub_220835280(a2, (uint64_t)v20, qword_26AD411B8);
  int64_t v55 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  uint64_t v56 = v8 + 48;
  unsigned int v22 = v55(v20, 1, v7);
  uint64_t v46 = v10;
  if (v22 == 1)
  {
    sub_22093F450();
    swift_bridgeObjectRetain();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v20, v7);
    sub_22093F450();
    sub_220834C90(&qword_267F18638);
    swift_bridgeObjectRetain();
    sub_22093E370();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  uint64_t v23 = sub_22093F490();
  uint64_t v24 = -1 << *(unsigned char *)(v21 + 32);
  unint64_t v25 = v23 & ~v24;
  uint64_t v54 = v21 + 56;
  uint64_t v26 = *(void *)(v21 + 56 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25;
  uint64_t v43 = v3;
  if ((v26 & 1) == 0)
  {
    uint64_t v27 = v47;
LABEL_15:
    swift_bridgeObjectRelease();
    size_t v36 = v43;
    uint64_t v37 = v27;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v39 = v42;
    sub_220835280(v37, v42, qword_26AD411B8);
    uint64_t v59 = *v36;
    *size_t v36 = 0x8000000000000000;
    sub_22082F994(v39, v25, isUniquelyReferenced_nonNull_native);
    *size_t v36 = v59;
    swift_bridgeObjectRelease();
    sub_220834D3C(v37, v44, qword_26AD411B8);
    return 1;
  }
  uint64_t v50 = ~v24;
  uint64_t v52 = *(void *)(v52 + 72);
  uint64_t v53 = v7;
  size_t v45 = (void (**)(char *, uint64_t, uint64_t))(v8 + 32);
  uint64_t v49 = (void (**)(uint64_t, uint64_t))(v8 + 8);
  uint64_t v27 = v47;
  uint64_t v51 = v21;
  while (1)
  {
    unint64_t v28 = v52 * v25;
    sub_220835280(*(void *)(v21 + 48) + v52 * v25, (uint64_t)v16, qword_26AD411B8);
    uint64_t v29 = (uint64_t)&v6[*(int *)(v58 + 48)];
    sub_220835280((uint64_t)v16, (uint64_t)v6, qword_26AD411B8);
    sub_220835280(v27, v29, qword_26AD411B8);
    uint64_t v30 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v55;
    if (v55(v6, 1, v7) == 1) {
      break;
    }
    unint64_t v48 = v28;
    uint64_t v31 = v27;
    uint64_t v32 = v57;
    sub_220835280((uint64_t)v6, v57, qword_26AD411B8);
    if (v30(v29, 1, v7) == 1)
    {
      (*v49)(v32, v7);
      uint64_t v27 = v31;
      goto LABEL_7;
    }
    uint64_t v33 = v46;
    (*v45)(v46, v29, v7);
    sub_220834C90(&qword_267F18640);
    char v34 = sub_22093E520();
    uint64_t v35 = *v49;
    (*v49)((uint64_t)v33, v7);
    v35(v57, v7);
    uint64_t v27 = v47;
    sub_2208352E4((uint64_t)v6, qword_26AD411B8);
    sub_2208352E4((uint64_t)v16, qword_26AD411B8);
    if (v34) {
      goto LABEL_17;
    }
LABEL_8:
    uint64_t v21 = v51;
    unint64_t v25 = (v25 + 1) & v50;
    if (((*(void *)(v54 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0) {
      goto LABEL_15;
    }
  }
  if (v30(v29, 1, v7) != 1)
  {
LABEL_7:
    sub_2208352E4((uint64_t)v6, &qword_267F18630);
    sub_2208352E4((uint64_t)v16, qword_26AD411B8);
    goto LABEL_8;
  }
  unint64_t v48 = v28;
  sub_2208352E4((uint64_t)v6, qword_26AD411B8);
  uint64_t v27 = v47;
  sub_2208352E4((uint64_t)v16, qword_26AD411B8);
LABEL_17:
  swift_bridgeObjectRelease();
  sub_2208352E4(v27, qword_26AD411B8);
  sub_220835280(*(void *)(*v43 + 48) + v48, v44, qword_26AD411B8);
  return 0;
}

uint64_t sub_220828A4C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_22093F430();
  sub_22093F450();
  swift_bridgeObjectRetain();
  if (a3)
  {
    swift_bridgeObjectRetain();
    sub_22093E650();
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = sub_22093F490();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v20 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    sub_22082FF64(a2, a3, v10, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v20;
    swift_bridgeObjectRelease();
    *a1 = a2;
    a1[1] = a3;
    return 1;
  }
  uint64_t v11 = ~v9;
  uint64_t v12 = *(void *)(v7 + 48);
  while (1)
  {
    uint64_t v13 = (void *)(v12 + 16 * v10);
    uint64_t v14 = v13[1];
    if (v14) {
      break;
    }
    if (!a3) {
      goto LABEL_15;
    }
LABEL_6:
    unint64_t v10 = (v10 + 1) & v11;
    if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
      goto LABEL_16;
    }
  }
  if (!a3) {
    goto LABEL_6;
  }
  BOOL v15 = *v13 == a2 && v14 == a3;
  if (!v15 && (sub_22093F250() & 1) == 0) {
    goto LABEL_6;
  }
  swift_bridgeObjectRelease();
LABEL_15:
  swift_bridgeObjectRelease();
  uint64_t v16 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
  uint64_t v17 = v16[1];
  *a1 = *v16;
  a1[1] = v17;
  swift_bridgeObjectRetain();
  return 0;
}

uint64_t sub_220828C18(unsigned char *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = a2;
  int v6 = a2;
  uint64_t v7 = *v3;
  sub_22093F430();
  if (v6 != 2) {
    sub_22093F450();
  }
  sub_22093F450();
  uint64_t v8 = sub_22093F490();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_11:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_22083011C(v4, v10, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v15;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_12;
  }
  uint64_t v11 = ~v9;
  while (1)
  {
    int v12 = *(unsigned __int8 *)(*(void *)(v7 + 48) + v10);
    if (v12 != 2) {
      break;
    }
    if (v4 == 2) {
      goto LABEL_10;
    }
LABEL_6:
    unint64_t v10 = (v10 + 1) & v11;
    if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
      goto LABEL_11;
    }
  }
  if (v4 == 2 || ((((v4 & 1) == 0) ^ v12) & 1) == 0) {
    goto LABEL_6;
  }
LABEL_10:
  uint64_t result = 0;
  LOBYTE(v4) = *(unsigned char *)(*(void *)(*v3 + 48) + v10);
LABEL_12:
  *a1 = v4;
  return result;
}

uint64_t sub_220828D7C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  int v8 = a3 & 1;
  uint64_t v9 = *v4;
  sub_22093F430();
  sub_22093F450();
  if ((a3 & 1) == 0) {
    sub_22093F480();
  }
  uint64_t v10 = sub_22093F490();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  if (((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
  {
LABEL_11:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    sub_2208302B4(a2, v8, v12, isUniquelyReferenced_nonNull_native);
    *uint64_t v4 = v18;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_12;
  }
  uint64_t v13 = ~v11;
  while (1)
  {
    uint64_t v14 = *(void *)(v9 + 48) + 16 * v12;
    if ((*(unsigned char *)(v14 + 8) & 1) == 0) {
      break;
    }
    if (v8) {
      goto LABEL_10;
    }
LABEL_6:
    unint64_t v12 = (v12 + 1) & v13;
    if (((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
      goto LABEL_11;
    }
  }
  if (v8 || *(double *)v14 != *(double *)&a2) {
    goto LABEL_6;
  }
LABEL_10:
  uint64_t result = 0;
  uint64_t v16 = *(void *)(*v4 + 48) + 16 * v12;
  a2 = *(uint64_t *)v16;
  LOBYTE(v8) = *(unsigned char *)(v16 + 8);
LABEL_12:
  *(double *)a1 = *(double *)&a2;
  *(unsigned char *)(a1 + 8) = v8;
  return result;
}

uint64_t sub_220828EF4(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = *v2;
  sub_22093F430();
  sub_22093F450();
  if ((a2 & 0x100000000) == 0) {
    sub_22093F470();
  }
  uint64_t v6 = sub_22093F490();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_11:
    uint64_t v13 = HIDWORD(a2) & 1;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_220830458(a2 | (unint64_t)(v13 << 32), v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v15;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_12;
  }
  uint64_t v9 = ~v7;
  while (1)
  {
    uint64_t v10 = *(void *)(v5 + 48) + 8 * v8;
    if ((*(unsigned char *)(v10 + 4) & 1) == 0) {
      break;
    }
    if ((a2 & 0x100000000) != 0) {
      goto LABEL_10;
    }
LABEL_6:
    unint64_t v8 = (v8 + 1) & v9;
    if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
      goto LABEL_11;
    }
  }
  if ((a2 & 0x100000000) != 0 || *(float *)v10 != *(float *)&a2) {
    goto LABEL_6;
  }
LABEL_10:
  uint64_t result = 0;
  uint64_t v12 = *(void *)(*v2 + 48) + 8 * v8;
  LODWORD(a2) = *(_DWORD *)v12;
  LOBYTE(v13) = *(unsigned char *)(v12 + 4);
LABEL_12:
  *(_DWORD *)a1 = a2;
  *(unsigned char *)(a1 + 4) = v13;
  return result;
}

uint64_t sub_220829068(uint64_t a1, unsigned int a2)
{
  uint64_t v5 = *v2;
  sub_22093F430();
  sub_22093F450();
  if ((a2 & 0x10000) == 0) {
    sub_22093F460();
  }
  uint64_t v6 = sub_22093F490();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_11:
    int v13 = HIWORD(a2) & 1;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_2208305F0(a2 & 0x1FFFF, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v15;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_12;
  }
  uint64_t v9 = ~v7;
  while (1)
  {
    uint64_t v10 = *(void *)(v5 + 48) + 4 * v8;
    if ((*(unsigned char *)(v10 + 2) & 1) == 0) {
      break;
    }
    if ((a2 & 0x10000) != 0) {
      goto LABEL_10;
    }
LABEL_6:
    unint64_t v8 = (v8 + 1) & v9;
    if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
      goto LABEL_11;
    }
  }
  if ((a2 & 0x10000) != 0 || *(short float *)v10 != *(short float *)&a2) {
    goto LABEL_6;
  }
LABEL_10:
  uint64_t result = 0;
  uint64_t v12 = *(void *)(*v2 + 48) + 4 * v8;
  LOWORD(a2) = *(_WORD *)v12;
  LOBYTE(v13) = *(unsigned char *)(v12 + 2);
LABEL_12:
  *(_WORD *)a1 = a2;
  *(unsigned char *)(a1 + 2) = v13;
  return result;
}

uint64_t sub_2208291CC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  int v8 = a3 & 1;
  uint64_t v9 = *v4;
  sub_22093F430();
  sub_22093F450();
  if ((a3 & 1) == 0) {
    sub_22093F440();
  }
  uint64_t v10 = sub_22093F490();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  if (((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
  {
LABEL_11:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    sub_220830780(a2, v8, v12, isUniquelyReferenced_nonNull_native);
    *uint64_t v4 = v18;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_12;
  }
  uint64_t v13 = ~v11;
  while (1)
  {
    uint64_t v14 = *(void *)(v9 + 48) + 16 * v12;
    if ((*(unsigned char *)(v14 + 8) & 1) == 0) {
      break;
    }
    if (v8) {
      goto LABEL_10;
    }
LABEL_6:
    unint64_t v12 = (v12 + 1) & v13;
    if (((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
      goto LABEL_11;
    }
  }
  if (v8 || *(void *)v14 != a2) {
    goto LABEL_6;
  }
LABEL_10:
  uint64_t result = 0;
  uint64_t v16 = *(void *)(*v4 + 48) + 16 * v12;
  a2 = *(void *)v16;
  LOBYTE(v8) = *(unsigned char *)(v16 + 8);
LABEL_12:
  *(void *)a1 = a2;
  *(unsigned char *)(a1 + 8) = v8;
  return result;
}

void *sub_22082933C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41178);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_22093EE70();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2208294F0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18680);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_22093EE70();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_220829688()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18668);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_22093EE70();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v13) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    sub_220835280(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v20, &qword_267F18658);
    uint64_t result = (void *)sub_220834D3C((uint64_t)v20, *(void *)(v4 + 48) + v16, &qword_267F18658);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v13) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_220829864()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18650);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_22093EE70();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    long long v17 = *(_OWORD *)(*(void *)(v2 + 48) + v16);
    *(_OWORD *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t result = (void *)sub_220834CD4(v17, *((unint64_t *)&v17 + 1));
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_220829A18()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD411B8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18648);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_22093EE70();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_27:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v24 = v1;
  uint64_t result = (void *)(v7 + 56);
  uint64_t v10 = v6 + 56;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v10 + 8 * v11) {
    uint64_t result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  }
  int64_t v12 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v6 + 56);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_9;
    }
    int64_t v20 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v20 >= v16) {
      goto LABEL_25;
    }
    unint64_t v21 = *(void *)(v10 + 8 * v20);
    ++v12;
    if (!v21)
    {
      int64_t v12 = v20 + 1;
      if (v20 + 1 >= v16) {
        goto LABEL_25;
      }
      unint64_t v21 = *(void *)(v10 + 8 * v12);
      if (!v21)
      {
        int64_t v12 = v20 + 2;
        if (v20 + 2 >= v16) {
          goto LABEL_25;
        }
        unint64_t v21 = *(void *)(v10 + 8 * v12);
        if (!v21) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v15 = (v21 - 1) & v21;
    unint64_t v18 = __clz(__rbit64(v21)) + (v12 << 6);
LABEL_9:
    unint64_t v19 = *(void *)(v3 + 72) * v18;
    sub_220835280(*(void *)(v6 + 48) + v19, (uint64_t)v5, qword_26AD411B8);
    uint64_t result = (void *)sub_220834D3C((uint64_t)v5, *(void *)(v8 + 48) + v19, qword_26AD411B8);
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v16)
  {
LABEL_25:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v24;
    goto LABEL_27;
  }
  unint64_t v21 = *(void *)(v10 + 8 * v22);
  if (v21)
  {
    int64_t v12 = v22;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v12 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v12 >= v16) {
      goto LABEL_25;
    }
    unint64_t v21 = *(void *)(v10 + 8 * v12);
    ++v22;
    if (v21) {
      goto LABEL_24;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

void *sub_220829C80()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18628);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_22093EE70();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_OWORD *)(*(void *)(v4 + 48) + 16 * v15) = *(_OWORD *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_220829E30()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18620);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_22093EE70();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_220829FC4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18610);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_22093EE70();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    int v18 = *(_DWORD *)v17;
    LOBYTE(v17) = *(unsigned char *)(v17 + 4);
    uint64_t v19 = *(void *)(v4 + 48) + v16;
    *(_DWORD *)uint64_t v19 = v18;
    *(unsigned char *)(v19 + 4) = v17;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_22082A16C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18608);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_22093EE70();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 4 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    __int16 v18 = *(_WORD *)v17;
    LOBYTE(v17) = *(unsigned char *)(v17 + 2);
    uint64_t v19 = *(void *)(v4 + 48) + v16;
    *(_WORD *)uint64_t v19 = v18;
    *(unsigned char *)(v19 + 2) = v17;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_22082A314(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_22093EE70();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  uint64_t result = (void *)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    uint64_t result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v14) {
      goto LABEL_28;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      int64_t v10 = v21 + 1;
      if (v21 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v22 = *(void *)(v7 + 8 * v10);
      if (!v22)
      {
        int64_t v10 = v21 + 2;
        if (v21 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v22 = *(void *)(v7 + 8 * v10);
        if (!v22) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v22 - 1) & v22;
    unint64_t v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = *(void *)(v3 + 48) + v17;
    uint64_t v19 = *(void *)v18;
    LOBYTE(v18) = *(unsigned char *)(v18 + 8);
    uint64_t v20 = *(void *)(v5 + 48) + v17;
    *(void *)uint64_t v20 = v19;
    *(unsigned char *)(v20 + 8) = v18;
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v14) {
    goto LABEL_28;
  }
  unint64_t v22 = *(void *)(v7 + 8 * v23);
  if (v22)
  {
    int64_t v10 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v10);
    ++v23;
    if (v22) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_22082A4B4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41178);
  uint64_t v3 = sub_22093EE80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_22093F430();
    swift_bridgeObjectRetain();
    sub_22093E650();
    uint64_t result = sub_22093F490();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *unint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_22082A764()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18680);
  uint64_t result = sub_22093EE80();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    uint64_t result = sub_22093F420();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v26;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_22082A9C8()
{
  uint64_t v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18668);
  uint64_t v2 = sub_22093EE80();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
    uint64_t result = swift_release();
LABEL_38:
    *uint64_t v0 = v3;
    return result;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v5 = v1 + 56;
  if (v4 < 64) {
    uint64_t v6 = ~(-1 << v4);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v1 + 56);
  int64_t v24 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v8 = v2 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v14 >= v24) {
      goto LABEL_36;
    }
    unint64_t v15 = *(void *)(v5 + 8 * v14);
    ++v10;
    if (!v15)
    {
      int64_t v10 = v14 + 1;
      if (v14 + 1 >= v24) {
        goto LABEL_36;
      }
      unint64_t v15 = *(void *)(v5 + 8 * v10);
      if (!v15)
      {
        int64_t v10 = v14 + 2;
        if (v14 + 2 >= v24) {
          goto LABEL_36;
        }
        unint64_t v15 = *(void *)(v5 + 8 * v10);
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    sub_220835280(*(void *)(v1 + 48) + 40 * v13, (uint64_t)v30, &qword_267F18658);
    sub_22093F430();
    sub_220835280((uint64_t)v30, (uint64_t)&v27, &qword_267F18658);
    if (*((void *)&v28 + 1))
    {
      v25[0] = v27;
      v25[1] = v28;
      uint64_t v26 = v29;
      sub_22093F450();
      sub_22093EE60();
      sub_220834CE8((uint64_t)v25);
    }
    else
    {
      sub_22093F450();
    }
    uint64_t result = sub_22093F490();
    uint64_t v17 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v18 = result & ~v17;
    unint64_t v19 = v18 >> 6;
    if (((-1 << v18) & ~*(void *)(v8 + 8 * (v18 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v18) & ~*(void *)(v8 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v20 = 0;
      unint64_t v21 = (unint64_t)(63 - v17) >> 6;
      do
      {
        if (++v19 == v21 && (v20 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v22 = v19 == v21;
        if (v19 == v21) {
          unint64_t v19 = 0;
        }
        v20 |= v22;
        uint64_t v23 = *(void *)(v8 + 8 * v19);
      }
      while (v23 == -1);
      unint64_t v11 = __clz(__rbit64(~v23)) + (v19 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    uint64_t result = sub_220834D3C((uint64_t)v30, *(void *)(v3 + 48) + 40 * v11, &qword_267F18658);
    ++*(void *)(v3 + 16);
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v24)
  {
LABEL_36:
    uint64_t result = swift_release_n();
    goto LABEL_38;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v16);
  if (v15)
  {
    int64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v24) {
      goto LABEL_36;
    }
    unint64_t v15 = *(void *)(v5 + 8 * v10);
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_22082ACD4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18650);
  uint64_t v3 = sub_22093EE80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_37:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v16 >= v29) {
      goto LABEL_35;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_35;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_35;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v21 = *v19;
    unint64_t v20 = v19[1];
    sub_22093F430();
    sub_22093F450();
    if (v20 >> 60 != 15)
    {
      sub_22080B7F4(v21, v20);
      sub_22080B7F4(v21, v20);
      sub_22093E010();
      sub_220834944(v21, v20);
    }
    uint64_t result = sub_22093F490();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v12);
    *unint64_t v13 = v21;
    v13[1] = v20;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_35:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_37;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_35;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_22082AFC4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_22093E100();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v48 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD411B8);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  int64_t v11 = (char *)&v45 - v10;
  uint64_t v12 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18648);
  uint64_t v13 = sub_22093EE80();
  uint64_t v14 = v13;
  if (!*(void *)(v12 + 16))
  {
    uint64_t result = swift_release();
LABEL_38:
    *uint64_t v1 = v14;
    return result;
  }
  char v15 = *(unsigned char *)(v12 + 32);
  uint64_t v16 = *(void *)(v12 + 56);
  uint64_t v49 = v12 + 56;
  uint64_t v17 = 1 << v15;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & v16;
  int64_t v50 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v51 = (unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
  uint64_t v47 = (void (**)(char *, char *, uint64_t))(v3 + 32);
  size_t v45 = v1;
  uint64_t v46 = (void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v20 = v13 + 56;
  uint64_t result = swift_retain();
  unint64_t v22 = v19;
  for (int64_t i = 0; ; int64_t i = v53)
  {
    if (v22)
    {
      uint64_t v52 = (v22 - 1) & v22;
      int64_t v53 = i;
      unint64_t v25 = __clz(__rbit64(v22)) | (i << 6);
      goto LABEL_24;
    }
    int64_t v26 = i + 1;
    if (__OFADD__(i, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v26 >= v50) {
      goto LABEL_36;
    }
    unint64_t v27 = *(void *)(v49 + 8 * v26);
    int64_t v28 = i + 1;
    if (!v27)
    {
      int64_t v28 = i + 2;
      if (i + 2 >= v50) {
        goto LABEL_36;
      }
      unint64_t v27 = *(void *)(v49 + 8 * v28);
      if (!v27)
      {
        int64_t v28 = i + 3;
        if (i + 3 >= v50) {
          goto LABEL_36;
        }
        unint64_t v27 = *(void *)(v49 + 8 * v28);
        if (!v27) {
          break;
        }
      }
    }
LABEL_23:
    uint64_t v52 = (v27 - 1) & v27;
    int64_t v53 = v28;
    unint64_t v25 = __clz(__rbit64(v27)) + (v28 << 6);
LABEL_24:
    uint64_t v30 = *(void *)(v6 + 72);
    sub_220835280(*(void *)(v12 + 48) + v30 * v25, (uint64_t)v11, qword_26AD411B8);
    sub_22093F430();
    sub_220835280((uint64_t)v11, (uint64_t)v9, qword_26AD411B8);
    if ((*v51)(v9, 1, v2) == 1)
    {
      sub_22093F450();
    }
    else
    {
      uint64_t v31 = v14;
      uint64_t v32 = v11;
      uint64_t v33 = v12;
      uint64_t v34 = v6;
      uint64_t v35 = v2;
      size_t v36 = v48;
      (*v47)(v48, v9, v35);
      sub_22093F450();
      sub_220834C90(&qword_267F18638);
      sub_22093E370();
      uint64_t v37 = v36;
      uint64_t v2 = v35;
      uint64_t v6 = v34;
      uint64_t v12 = v33;
      int64_t v11 = v32;
      uint64_t v14 = v31;
      (*v46)(v37, v2);
    }
    uint64_t result = sub_22093F490();
    uint64_t v38 = -1 << *(unsigned char *)(v14 + 32);
    unint64_t v39 = result & ~v38;
    unint64_t v40 = v39 >> 6;
    if (((-1 << v39) & ~*(void *)(v20 + 8 * (v39 >> 6))) != 0)
    {
      unint64_t v24 = __clz(__rbit64((-1 << v39) & ~*(void *)(v20 + 8 * (v39 >> 6)))) | v39 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v41 = 0;
      unint64_t v42 = (unint64_t)(63 - v38) >> 6;
      do
      {
        if (++v40 == v42 && (v41 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v43 = v40 == v42;
        if (v40 == v42) {
          unint64_t v40 = 0;
        }
        v41 |= v43;
        uint64_t v44 = *(void *)(v20 + 8 * v40);
      }
      while (v44 == -1);
      unint64_t v24 = __clz(__rbit64(~v44)) + (v40 << 6);
    }
    *(void *)(v20 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    uint64_t result = sub_220834D3C((uint64_t)v11, *(void *)(v14 + 48) + v24 * v30, qword_26AD411B8);
    ++*(void *)(v14 + 16);
    unint64_t v22 = v52;
  }
  uint64_t v29 = i + 4;
  if (i + 4 >= v50)
  {
LABEL_36:
    uint64_t result = swift_release_n();
    uint64_t v1 = v45;
    goto LABEL_38;
  }
  unint64_t v27 = *(void *)(v49 + 8 * v29);
  if (v27)
  {
    int64_t v28 = i + 4;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v28 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v28 >= v50) {
      goto LABEL_36;
    }
    unint64_t v27 = *(void *)(v49 + 8 * v28);
    ++v29;
    if (v27) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_22082B4CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18628);
  uint64_t v3 = sub_22093EE80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_37:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v16 >= v29) {
      goto LABEL_35;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_35;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_35;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    sub_22093F430();
    sub_22093F450();
    if (v20)
    {
      swift_bridgeObjectRetain_n();
      sub_22093E650();
      swift_bridgeObjectRelease();
    }
    uint64_t result = sub_22093F490();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *uint64_t v13 = v21;
    v13[1] = v20;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_35:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_37;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_35;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_22082B7A4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18620);
  uint64_t result = sub_22093EE80();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_37:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v25 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v10 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v14 >= v25) {
      goto LABEL_35;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v14);
    ++v5;
    if (!v15)
    {
      int64_t v5 = v14 + 1;
      if (v14 + 1 >= v25) {
        goto LABEL_35;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v5);
      if (!v15)
      {
        int64_t v5 = v14 + 2;
        if (v14 + 2 >= v25) {
          goto LABEL_35;
        }
        unint64_t v15 = *(void *)(v6 + 8 * v5);
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v5 << 6);
LABEL_24:
    int v17 = *(unsigned __int8 *)(*(void *)(v2 + 48) + v13);
    sub_22093F430();
    if (v17 != 2) {
      sub_22093F450();
    }
    sub_22093F450();
    uint64_t result = sub_22093F490();
    uint64_t v18 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v19 = result & ~v18;
    unint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~*(void *)(v10 + 8 * (v19 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v19) & ~*(void *)(v10 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v21 = 0;
      unint64_t v22 = (unint64_t)(63 - v18) >> 6;
      do
      {
        if (++v20 == v22 && (v21 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v23 = v20 == v22;
        if (v20 == v22) {
          unint64_t v20 = 0;
        }
        v21 |= v23;
        uint64_t v24 = *(void *)(v10 + 8 * v20);
      }
      while (v24 == -1);
      unint64_t v11 = __clz(__rbit64(~v24)) + (v20 << 6);
    }
    *(void *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(unsigned char *)(*(void *)(v4 + 48) + v11) = v17;
    ++*(void *)(v4 + 16);
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v25)
  {
LABEL_35:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_37;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
    int64_t v5 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v5 >= v25) {
      goto LABEL_35;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v5);
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_22082BA58()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18618);
  uint64_t result = sub_22093EE80();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_37:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v28 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v10 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v15 >= v28) {
      goto LABEL_35;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v28) {
        goto LABEL_35;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v28) {
          goto LABEL_35;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(v2 + 48) + 16 * v14;
    uint64_t v19 = *(void *)v18;
    int v20 = *(unsigned __int8 *)(v18 + 8);
    sub_22093F430();
    sub_22093F450();
    if (v20 != 1) {
      sub_22093F480();
    }
    uint64_t result = sub_22093F490();
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v11 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    uint64_t v12 = *(void *)(v4 + 48) + 16 * v11;
    *(void *)uint64_t v12 = v19;
    *(unsigned char *)(v12 + 8) = v20;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v28)
  {
LABEL_35:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_37;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v28) {
      goto LABEL_35;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_22082BD20()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18610);
  uint64_t result = sub_22093EE80();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_37:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v28 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v10 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v15 >= v28) {
      goto LABEL_35;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v28) {
        goto LABEL_35;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v28) {
          goto LABEL_35;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(v2 + 48) + 8 * v14;
    int v19 = *(_DWORD *)v18;
    int v20 = *(unsigned __int8 *)(v18 + 4);
    sub_22093F430();
    sub_22093F450();
    if (v20 != 1) {
      sub_22093F470();
    }
    uint64_t result = sub_22093F490();
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v11 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    uint64_t v12 = *(void *)(v4 + 48) + 8 * v11;
    *(_DWORD *)uint64_t v12 = v19;
    *(unsigned char *)(v12 + 4) = v20;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v28)
  {
LABEL_35:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_37;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v28) {
      goto LABEL_35;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_22082BFE8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18608);
  uint64_t result = sub_22093EE80();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_37:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v28 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v10 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v15 >= v28) {
      goto LABEL_35;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v28) {
        goto LABEL_35;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v28) {
          goto LABEL_35;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(v2 + 48) + 4 * v14;
    __int16 v19 = *(_WORD *)v18;
    int v20 = *(unsigned __int8 *)(v18 + 2);
    sub_22093F430();
    sub_22093F450();
    if (v20 != 1) {
      sub_22093F460();
    }
    uint64_t result = sub_22093F490();
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v11 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    uint64_t v12 = *(void *)(v4 + 48) + 4 * v11;
    *(_WORD *)uint64_t v12 = v19;
    *(unsigned char *)(v12 + 2) = v20;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v28)
  {
LABEL_35:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_37;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v28) {
      goto LABEL_35;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_22082C2B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F185F8);
  uint64_t result = sub_22093EE80();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_37:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v28 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v10 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v15 >= v28) {
      goto LABEL_35;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v28) {
        goto LABEL_35;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v28) {
          goto LABEL_35;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(v2 + 48) + 16 * v14;
    uint64_t v19 = *(void *)v18;
    int v20 = *(unsigned __int8 *)(v18 + 8);
    sub_22093F430();
    sub_22093F450();
    if (v20 != 1) {
      sub_22093F440();
    }
    uint64_t result = sub_22093F490();
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v11 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    uint64_t v12 = *(void *)(v4 + 48) + 16 * v11;
    *(void *)uint64_t v12 = v19;
    *(unsigned char *)(v12 + 8) = v20;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v28)
  {
LABEL_35:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_37;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v28) {
      goto LABEL_35;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_22082C574()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41178);
  uint64_t v3 = sub_22093EE80();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_22093F430();
      sub_22093E650();
      uint64_t result = sub_22093F490();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *unint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_22082C854()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18680);
  uint64_t result = sub_22093EE80();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    BOOL v27 = v1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  uint64_t *v6 = v26;
                }
                uint64_t v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      uint64_t result = sub_22093F420();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_22082CAD8()
{
  uint64_t v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18668);
  uint64_t v2 = sub_22093EE80();
  uint64_t v3 = v2;
  if (*(void *)(v1 + 16))
  {
    uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
    uint64_t v25 = (void *)(v1 + 56);
    if (v4 < 64) {
      uint64_t v5 = ~(-1 << v4);
    }
    else {
      uint64_t v5 = -1;
    }
    unint64_t v6 = v5 & *(void *)(v1 + 56);
    int64_t v7 = (unint64_t)(v4 + 63) >> 6;
    uint64_t v8 = v2 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v6)
      {
        unint64_t v12 = __clz(__rbit64(v6));
        v6 &= v6 - 1;
        unint64_t v13 = v12 | (v10 << 6);
      }
      else
      {
        int64_t v14 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v14 >= v7) {
          goto LABEL_36;
        }
        unint64_t v15 = v25[v14];
        ++v10;
        if (!v15)
        {
          int64_t v10 = v14 + 1;
          if (v14 + 1 >= v7) {
            goto LABEL_36;
          }
          unint64_t v15 = v25[v10];
          if (!v15)
          {
            int64_t v10 = v14 + 2;
            if (v14 + 2 >= v7) {
              goto LABEL_36;
            }
            unint64_t v15 = v25[v10];
            if (!v15)
            {
              int64_t v16 = v14 + 3;
              if (v16 >= v7)
              {
LABEL_36:
                swift_release();
                uint64_t v24 = 1 << *(unsigned char *)(v1 + 32);
                if (v24 > 63) {
                  bzero(v25, ((unint64_t)(v24 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v25 = -1 << v24;
                }
                *(void *)(v1 + 16) = 0;
                break;
              }
              unint64_t v15 = v25[v16];
              if (!v15)
              {
                while (1)
                {
                  int64_t v10 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_42;
                  }
                  if (v10 >= v7) {
                    goto LABEL_36;
                  }
                  unint64_t v15 = v25[v10];
                  ++v16;
                  if (v15) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v16;
            }
          }
        }
LABEL_23:
        unint64_t v6 = (v15 - 1) & v15;
        unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
      }
      sub_220834D3C(*(void *)(v1 + 48) + 40 * v13, (uint64_t)v31, &qword_267F18658);
      sub_22093F430();
      sub_220835280((uint64_t)v31, (uint64_t)&v28, &qword_267F18658);
      if (*((void *)&v29 + 1))
      {
        v26[0] = v28;
        v26[1] = v29;
        uint64_t v27 = v30;
        sub_22093F450();
        sub_22093EE60();
        sub_220834CE8((uint64_t)v26);
      }
      else
      {
        sub_22093F450();
      }
      uint64_t result = sub_22093F490();
      uint64_t v17 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v18 = result & ~v17;
      unint64_t v19 = v18 >> 6;
      if (((-1 << v18) & ~*(void *)(v8 + 8 * (v18 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v18) & ~*(void *)(v8 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v20 = 0;
        unint64_t v21 = (unint64_t)(63 - v17) >> 6;
        do
        {
          if (++v19 == v21 && (v20 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v22 = v19 == v21;
          if (v19 == v21) {
            unint64_t v19 = 0;
          }
          v20 |= v22;
          uint64_t v23 = *(void *)(v8 + 8 * v19);
        }
        while (v23 == -1);
        unint64_t v11 = __clz(__rbit64(~v23)) + (v19 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      uint64_t result = sub_220834D3C((uint64_t)v31, *(void *)(v3 + 48) + 40 * v11, &qword_267F18658);
      ++*(void *)(v3 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v0 = v3;
  return result;
}

uint64_t sub_22082CE1C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18650);
  uint64_t v3 = sub_22093EE80();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_35;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_35;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_35;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_35:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_41;
                  }
                  if (v11 >= v8) {
                    goto LABEL_35;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v21 = *v19;
      unint64_t v20 = v19[1];
      sub_22093F430();
      sub_22093F450();
      if (v20 >> 60 != 15)
      {
        sub_22080B7F4(v21, v20);
        sub_22093E010();
        sub_220834944(v21, v20);
      }
      uint64_t result = sub_22093F490();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      unint64_t v13 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v12);
      *unint64_t v13 = v21;
      v13[1] = v20;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_22082D138()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_22093E100();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v48 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD411B8);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  int64_t v11 = (char *)&v45 - v10;
  uint64_t v12 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18648);
  uint64_t v13 = sub_22093EE80();
  uint64_t v14 = v12;
  uint64_t v15 = v13;
  if (*(void *)(v14 + 16))
  {
    size_t v45 = v1;
    char v16 = *(unsigned char *)(v14 + 32);
    uint64_t v17 = *(void *)(v14 + 56);
    int64_t v50 = (void *)(v14 + 56);
    uint64_t v18 = 1 << v16;
    if (v18 < 64) {
      uint64_t v19 = ~(-1 << v18);
    }
    else {
      uint64_t v19 = -1;
    }
    unint64_t v20 = v19 & v17;
    int64_t v49 = (unint64_t)(v18 + 63) >> 6;
    uint64_t v51 = (unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
    uint64_t v46 = (void (**)(char *, uint64_t))(v3 + 8);
    uint64_t v47 = (void (**)(char *, char *, uint64_t))(v3 + 32);
    uint64_t v21 = v13 + 56;
    uint64_t result = swift_retain();
    int64_t v23 = 0;
    uint64_t v52 = v14;
    while (1)
    {
      if (v20)
      {
        unint64_t v25 = __clz(__rbit64(v20));
        v20 &= v20 - 1;
        int64_t v53 = v23;
        unint64_t v26 = v25 | (v23 << 6);
      }
      else
      {
        int64_t v27 = v23 + 1;
        if (__OFADD__(v23, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v27 >= v49) {
          goto LABEL_36;
        }
        unint64_t v28 = v50[v27];
        int64_t v29 = v23 + 1;
        if (!v28)
        {
          int64_t v29 = v23 + 2;
          if (v23 + 2 >= v49) {
            goto LABEL_36;
          }
          unint64_t v28 = v50[v29];
          if (!v28)
          {
            int64_t v29 = v23 + 3;
            if (v23 + 3 >= v49) {
              goto LABEL_36;
            }
            unint64_t v28 = v50[v29];
            if (!v28)
            {
              uint64_t v30 = v23 + 4;
              if (v23 + 4 >= v49)
              {
LABEL_36:
                swift_release();
                uint64_t v1 = v45;
                uint64_t v44 = 1 << *(unsigned char *)(v14 + 32);
                if (v44 > 63) {
                  bzero(v50, ((unint64_t)(v44 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v50 = -1 << v44;
                }
                *(void *)(v14 + 16) = 0;
                break;
              }
              unint64_t v28 = v50[v30];
              if (!v28)
              {
                while (1)
                {
                  int64_t v29 = v30 + 1;
                  if (__OFADD__(v30, 1)) {
                    goto LABEL_42;
                  }
                  if (v29 >= v49) {
                    goto LABEL_36;
                  }
                  unint64_t v28 = v50[v29];
                  ++v30;
                  if (v28) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v29 = v23 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v20 = (v28 - 1) & v28;
        int64_t v53 = v29;
        unint64_t v26 = __clz(__rbit64(v28)) + (v29 << 6);
      }
      uint64_t v31 = *(void *)(v6 + 72);
      sub_220834D3C(*(void *)(v14 + 48) + v31 * v26, (uint64_t)v11, qword_26AD411B8);
      sub_22093F430();
      sub_220835280((uint64_t)v11, (uint64_t)v9, qword_26AD411B8);
      if ((*v51)(v9, 1, v2) == 1)
      {
        sub_22093F450();
      }
      else
      {
        uint64_t v32 = v11;
        uint64_t v33 = v6;
        uint64_t v34 = v2;
        uint64_t v35 = v48;
        (*v47)(v48, v9, v34);
        sub_22093F450();
        sub_220834C90(&qword_267F18638);
        sub_22093E370();
        size_t v36 = v35;
        uint64_t v2 = v34;
        uint64_t v6 = v33;
        int64_t v11 = v32;
        (*v46)(v36, v2);
      }
      uint64_t result = sub_22093F490();
      uint64_t v37 = -1 << *(unsigned char *)(v15 + 32);
      unint64_t v38 = result & ~v37;
      unint64_t v39 = v38 >> 6;
      if (((-1 << v38) & ~*(void *)(v21 + 8 * (v38 >> 6))) != 0)
      {
        unint64_t v24 = __clz(__rbit64((-1 << v38) & ~*(void *)(v21 + 8 * (v38 >> 6)))) | v38 & 0x7FFFFFFFFFFFFFC0;
        uint64_t v14 = v52;
      }
      else
      {
        char v40 = 0;
        unint64_t v41 = (unint64_t)(63 - v37) >> 6;
        uint64_t v14 = v52;
        do
        {
          if (++v39 == v41 && (v40 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v42 = v39 == v41;
          if (v39 == v41) {
            unint64_t v39 = 0;
          }
          v40 |= v42;
          uint64_t v43 = *(void *)(v21 + 8 * v39);
        }
        while (v43 == -1);
        unint64_t v24 = __clz(__rbit64(~v43)) + (v39 << 6);
      }
      *(void *)(v21 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
      uint64_t result = sub_220834D3C((uint64_t)v11, *(void *)(v15 + 48) + v24 * v31, qword_26AD411B8);
      ++*(void *)(v15 + 16);
      int64_t v23 = v53;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v15;
  return result;
}

uint64_t sub_22082D66C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18628);
  uint64_t v3 = sub_22093EE80();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_35;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_35;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_35;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_35:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_41;
                  }
                  if (v11 >= v8) {
                    goto LABEL_35;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v21 = *v19;
      uint64_t v20 = v19[1];
      sub_22093F430();
      sub_22093F450();
      if (v20)
      {
        swift_bridgeObjectRetain();
        sub_22093E650();
        swift_bridgeObjectRelease();
      }
      uint64_t result = sub_22093F490();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *uint64_t v13 = v21;
      v13[1] = v20;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_22082D978()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18620);
  uint64_t result = sub_22093EE80();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    unint64_t v26 = (void *)(v2 + 56);
    uint64_t v6 = 1 << *(unsigned char *)(v2 + 32);
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v6 + 63) >> 6;
    uint64_t v10 = result + 56;
    while (1)
    {
      if (v8)
      {
        unint64_t v12 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v13 = v12 | (v5 << 6);
      }
      else
      {
        int64_t v14 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v14 >= v9) {
          goto LABEL_35;
        }
        unint64_t v15 = v26[v14];
        ++v5;
        if (!v15)
        {
          int64_t v5 = v14 + 1;
          if (v14 + 1 >= v9) {
            goto LABEL_35;
          }
          unint64_t v15 = v26[v5];
          if (!v15)
          {
            int64_t v5 = v14 + 2;
            if (v14 + 2 >= v9) {
              goto LABEL_35;
            }
            unint64_t v15 = v26[v5];
            if (!v15)
            {
              int64_t v16 = v14 + 3;
              if (v16 >= v9)
              {
LABEL_35:
                uint64_t v25 = 1 << *(unsigned char *)(v2 + 32);
                if (v25 > 63) {
                  bzero(v26, ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v26 = -1 << v25;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v15 = v26[v16];
              if (!v15)
              {
                while (1)
                {
                  int64_t v5 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_41;
                  }
                  if (v5 >= v9) {
                    goto LABEL_35;
                  }
                  unint64_t v15 = v26[v5];
                  ++v16;
                  if (v15) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v16;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v15 - 1) & v15;
        unint64_t v13 = __clz(__rbit64(v15)) + (v5 << 6);
      }
      int v17 = *(unsigned __int8 *)(*(void *)(v2 + 48) + v13);
      sub_22093F430();
      if (v17 != 2) {
        sub_22093F450();
      }
      sub_22093F450();
      uint64_t result = sub_22093F490();
      uint64_t v18 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v19 = result & ~v18;
      unint64_t v20 = v19 >> 6;
      if (((-1 << v19) & ~*(void *)(v10 + 8 * (v19 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v19) & ~*(void *)(v10 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v21 = 0;
        unint64_t v22 = (unint64_t)(63 - v18) >> 6;
        do
        {
          if (++v20 == v22 && (v21 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v23 = v20 == v22;
          if (v20 == v22) {
            unint64_t v20 = 0;
          }
          v21 |= v23;
          uint64_t v24 = *(void *)(v10 + 8 * v20);
        }
        while (v24 == -1);
        unint64_t v11 = __clz(__rbit64(~v24)) + (v20 << 6);
      }
      *(void *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      *(unsigned char *)(*(void *)(v4 + 48) + v11) = v17;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_22082DC60()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18618);
  uint64_t result = sub_22093EE80();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v29 = (void *)(v2 + 56);
    uint64_t v6 = 1 << *(unsigned char *)(v2 + 32);
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v6 + 63) >> 6;
    uint64_t v10 = result + 56;
    while (1)
    {
      if (v8)
      {
        unint64_t v13 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v15 >= v9) {
          goto LABEL_35;
        }
        unint64_t v16 = v29[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v9) {
            goto LABEL_35;
          }
          unint64_t v16 = v29[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v9) {
              goto LABEL_35;
            }
            unint64_t v16 = v29[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v9)
              {
LABEL_35:
                uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
                if (v28 > 63) {
                  bzero(v29, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v29 = -1 << v28;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v29[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_41;
                  }
                  if (v5 >= v9) {
                    goto LABEL_35;
                  }
                  unint64_t v16 = v29[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(v2 + 48) + 16 * v14;
      uint64_t v19 = *(void *)v18;
      int v20 = *(unsigned __int8 *)(v18 + 8);
      sub_22093F430();
      sub_22093F450();
      if (v20 != 1) {
        sub_22093F480();
      }
      uint64_t result = sub_22093F490();
      uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v10 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v11 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      uint64_t v12 = *(void *)(v4 + 48) + 16 * v11;
      *(void *)uint64_t v12 = v19;
      *(unsigned char *)(v12 + 8) = v20;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_22082DF5C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18610);
  uint64_t result = sub_22093EE80();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v29 = (void *)(v2 + 56);
    uint64_t v6 = 1 << *(unsigned char *)(v2 + 32);
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v6 + 63) >> 6;
    uint64_t v10 = result + 56;
    while (1)
    {
      if (v8)
      {
        unint64_t v13 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v15 >= v9) {
          goto LABEL_35;
        }
        unint64_t v16 = v29[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v9) {
            goto LABEL_35;
          }
          unint64_t v16 = v29[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v9) {
              goto LABEL_35;
            }
            unint64_t v16 = v29[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v9)
              {
LABEL_35:
                uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
                if (v28 > 63) {
                  bzero(v29, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v29 = -1 << v28;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v29[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_41;
                  }
                  if (v5 >= v9) {
                    goto LABEL_35;
                  }
                  unint64_t v16 = v29[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(v2 + 48) + 8 * v14;
      int v19 = *(_DWORD *)v18;
      int v20 = *(unsigned __int8 *)(v18 + 4);
      sub_22093F430();
      sub_22093F450();
      if (v20 != 1) {
        sub_22093F470();
      }
      uint64_t result = sub_22093F490();
      uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v10 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v11 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      uint64_t v12 = *(void *)(v4 + 48) + 8 * v11;
      *(_DWORD *)uint64_t v12 = v19;
      *(unsigned char *)(v12 + 4) = v20;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_22082E258()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18608);
  uint64_t result = sub_22093EE80();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v29 = (void *)(v2 + 56);
    uint64_t v6 = 1 << *(unsigned char *)(v2 + 32);
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v6 + 63) >> 6;
    uint64_t v10 = result + 56;
    while (1)
    {
      if (v8)
      {
        unint64_t v13 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v15 >= v9) {
          goto LABEL_35;
        }
        unint64_t v16 = v29[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v9) {
            goto LABEL_35;
          }
          unint64_t v16 = v29[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v9) {
              goto LABEL_35;
            }
            unint64_t v16 = v29[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v9)
              {
LABEL_35:
                uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
                if (v28 > 63) {
                  bzero(v29, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v29 = -1 << v28;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v29[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_41;
                  }
                  if (v5 >= v9) {
                    goto LABEL_35;
                  }
                  unint64_t v16 = v29[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(v2 + 48) + 4 * v14;
      __int16 v19 = *(_WORD *)v18;
      int v20 = *(unsigned __int8 *)(v18 + 2);
      sub_22093F430();
      sub_22093F450();
      if (v20 != 1) {
        sub_22093F460();
      }
      uint64_t result = sub_22093F490();
      uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v10 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v11 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      uint64_t v12 = *(void *)(v4 + 48) + 4 * v11;
      *(_WORD *)uint64_t v12 = v19;
      *(unsigned char *)(v12 + 2) = v20;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_22082E554()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F185F8);
  uint64_t result = sub_22093EE80();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v29 = (void *)(v2 + 56);
    uint64_t v6 = 1 << *(unsigned char *)(v2 + 32);
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v6 + 63) >> 6;
    uint64_t v10 = result + 56;
    while (1)
    {
      if (v8)
      {
        unint64_t v13 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v15 >= v9) {
          goto LABEL_35;
        }
        unint64_t v16 = v29[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v9) {
            goto LABEL_35;
          }
          unint64_t v16 = v29[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v9) {
              goto LABEL_35;
            }
            unint64_t v16 = v29[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v9)
              {
LABEL_35:
                uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
                if (v28 > 63) {
                  bzero(v29, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v29 = -1 << v28;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v29[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_41;
                  }
                  if (v5 >= v9) {
                    goto LABEL_35;
                  }
                  unint64_t v16 = v29[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(v2 + 48) + 16 * v14;
      uint64_t v19 = *(void *)v18;
      int v20 = *(unsigned __int8 *)(v18 + 8);
      sub_22093F430();
      sub_22093F450();
      if (v20 != 1) {
        sub_22093F440();
      }
      uint64_t result = sub_22093F490();
      uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v10 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v11 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      uint64_t v12 = *(void *)(v4 + 48) + 16 * v11;
      *(void *)uint64_t v12 = v19;
      *(unsigned char *)(v12 + 8) = v20;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_22082E84C(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  int64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_22082C574();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_22082933C();
      goto LABEL_22;
    }
    sub_22082A4B4();
  }
  uint64_t v11 = *v4;
  sub_22093F430();
  sub_22093E650();
  uint64_t result = sub_22093F490();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    int64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_22093F250(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_22093F2E0();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_22093F250();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_22082E9E8(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_22082C854();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_2208294F0();
      goto LABEL_14;
    }
    sub_22082A764();
  }
  uint64_t v8 = *v3;
  uint64_t result = sub_22093F420();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_22093F2E0();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_22082EB0C(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_22082CAD8();
    }
    else
    {
      if (v7 > v6)
      {
        sub_220829688();
        goto LABEL_20;
      }
      sub_22082A9C8();
    }
    uint64_t v8 = *v3;
    sub_22093F430();
    sub_220835280(a1, (uint64_t)&v28, &qword_267F18658);
    if (*((void *)&v29 + 1))
    {
      v26[0] = v28;
      v26[1] = v29;
      uint64_t v27 = v30;
      sub_22093F450();
      sub_22093EE60();
      sub_220834CE8((uint64_t)v26);
    }
    else
    {
      sub_22093F450();
    }
    uint64_t v9 = sub_22093F490();
    uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
    a2 = v9 & ~v10;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v11 = ~v10;
      do
      {
        sub_220835280(*(void *)(v8 + 48) + 40 * a2, (uint64_t)&v28, &qword_267F18658);
        sub_220835280((uint64_t)&v28, (uint64_t)v21, &qword_267F18658);
        sub_220835280(a1, (uint64_t)&v23, &qword_267F18658);
        if (v22)
        {
          sub_220835280((uint64_t)v21, (uint64_t)v26, &qword_267F18658);
          if (*((void *)&v24 + 1))
          {
            v19[0] = v23;
            v19[1] = v24;
            uint64_t v20 = v25;
            char v12 = MEMORY[0x223C6A560](v26, v19);
            sub_220834CE8((uint64_t)v19);
            sub_220834CE8((uint64_t)v26);
            sub_2208352E4((uint64_t)v21, &qword_267F18658);
            sub_2208352E4((uint64_t)&v28, &qword_267F18658);
            if (v12) {
              goto LABEL_24;
            }
            goto LABEL_14;
          }
          sub_220834CE8((uint64_t)v26);
        }
        else if (!*((void *)&v24 + 1))
        {
          goto LABEL_23;
        }
        sub_2208352E4((uint64_t)v21, &qword_267F18660);
        sub_2208352E4((uint64_t)&v28, &qword_267F18658);
LABEL_14:
        a2 = (a2 + 1) & v11;
      }
      while (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_20:
  uint64_t v13 = *v18;
  *(void *)(*v18 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_220834D3C(a1, *(void *)(v13 + 48) + 40 * a2, &qword_267F18658);
  uint64_t v15 = *(void *)(v13 + 16);
  BOOL v16 = __OFADD__(v15, 1);
  uint64_t v17 = v15 + 1;
  if (v16)
  {
    __break(1u);
LABEL_23:
    sub_2208352E4((uint64_t)v21, &qword_267F18658);
    sub_2208352E4((uint64_t)&v28, &qword_267F18658);
LABEL_24:
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F18658);
    uint64_t result = sub_22093F2E0();
    __break(1u);
  }
  else
  {
    *(void *)(v13 + 16) = v17;
  }
  return result;
}

uint64_t sub_22082EDCC(uint64_t result, unint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  uint64_t v94 = *MEMORY[0x263EF8340];
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 <= v9 || (a4 & 1) == 0)
  {
    if (a4)
    {
      sub_22082CE1C();
    }
    else
    {
      if (v10 > v9)
      {
        uint64_t result = (uint64_t)sub_220829864();
        goto LABEL_130;
      }
      sub_22082ACD4();
    }
    uint64_t v11 = *v4;
    sub_22093F430();
    unint64_t v12 = a2 >> 60;
    sub_22093F450();
    if (a2 >> 60 != 15)
    {
      sub_22080B7F4(v8, a2);
      sub_22093E010();
      sub_220834944(v8, a2);
    }
    uint64_t result = sub_22093F490();
    uint64_t v13 = -1 << *(unsigned char *)(v11 + 32);
    a3 = result & ~v13;
    if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
    {
      uint64_t v86 = ~v13;
      BOOL v84 = v4;
      BOOL v14 = __OFSUB__(HIDWORD(v8), v8);
      BOOL v83 = v14;
      uint64_t v77 = (v8 >> 32) - (int)v8;
      uint64_t v78 = v8 >> 32;
      unint64_t v85 = a2 >> 62;
      do
      {
        uint64_t v15 = (uint64_t *)(*(void *)(v11 + 48) + 16 * a3);
        uint64_t v17 = *v15;
        unint64_t v16 = v15[1];
        if (v16 >> 60 == 15)
        {
          if (v12 > 0xE) {
            goto LABEL_129;
          }
LABEL_16:
          sub_220834CD4(v8, a2);
          sub_220834CD4(v17, v16);
          sub_220834944(v17, v16);
          uint64_t result = sub_220834944(v8, a2);
          goto LABEL_17;
        }
        if (v12 > 0xE) {
          goto LABEL_16;
        }
        uint64_t v18 = 0;
        switch(v16 >> 62)
        {
          case 1uLL:
            LODWORD(v18) = HIDWORD(v17) - v17;
            if (__OFSUB__(HIDWORD(v17), v17)) {
              goto LABEL_133;
            }
            uint64_t v18 = (int)v18;
LABEL_25:
            uint64_t v22 = BYTE6(a2);
            switch(a2 >> 62)
            {
              case 1uLL:
                uint64_t v22 = HIDWORD(v8) - (int)v8;
                if (v83) {
                  goto LABEL_135;
                }
                goto LABEL_29;
              case 2uLL:
                uint64_t v24 = *(void *)(v8 + 16);
                uint64_t v23 = *(void *)(v8 + 24);
                BOOL v21 = __OFSUB__(v23, v24);
                uint64_t v22 = v23 - v24;
                if (!v21) {
                  goto LABEL_29;
                }
                goto LABEL_136;
              case 3uLL:
                if (!v18) {
                  goto LABEL_129;
                }
                goto LABEL_17;
              default:
LABEL_29:
                if (v18 != v22) {
                  goto LABEL_17;
                }
                if (v18 < 1) {
                  goto LABEL_129;
                }
                break;
            }
            break;
          case 2uLL:
            uint64_t v20 = *(void *)(v17 + 16);
            uint64_t v19 = *(void *)(v17 + 24);
            BOOL v21 = __OFSUB__(v19, v20);
            uint64_t v18 = v19 - v20;
            if (!v21) {
              goto LABEL_25;
            }
            goto LABEL_134;
          case 3uLL:
            goto LABEL_25;
          default:
            uint64_t v18 = BYTE6(v16);
            goto LABEL_25;
        }
        switch(v16 >> 62)
        {
          case 1uLL:
            if ((int)v17 > v17 >> 32) {
              goto LABEL_137;
            }
            sub_22080B7F4(v17, v16);
            sub_220834CD4(v17, v16);
            sub_220834CD4(v8, a2);
            sub_220834CD4(v17, v16);
            uint64_t v29 = sub_22093DE40();
            if (v29)
            {
              uint64_t v30 = v29;
              uint64_t v31 = sub_22093DE60();
              if (__OFSUB__((int)v17, v31)) {
                goto LABEL_139;
              }
              uint64_t v79 = (void *)(v30 + (int)v17 - v31);
            }
            else
            {
              uint64_t v79 = 0;
            }
            uint64_t v5 = v84;
            unint64_t v12 = a2 >> 60;
            sub_22093DE50();
            if (!v85)
            {
              *(void *)__s1 = v8;
              *(_WORD *)&__s1[8] = a2;
              __s1[10] = BYTE2(a2);
              __s1[11] = BYTE3(a2);
              __s1[12] = BYTE4(a2);
              __s1[13] = BYTE5(a2);
              if (!v79) {
                goto LABEL_167;
              }
              int v57 = memcmp(v79, __s1, BYTE6(a2));
LABEL_113:
              sub_220834944(v8, a2);
              sub_220834944(v17, v16);
              sub_220834944(v17, v16);
              uint64_t result = sub_22080B88C(v17, v16);
              if (!v57) {
                goto LABEL_129;
              }
              goto LABEL_17;
            }
            if (v85 == 1)
            {
              if (v78 < (int)v8) {
                goto LABEL_148;
              }
              swift_retain();
              size_t v45 = (char *)sub_22093DE40();
              if (v45)
              {
                uint64_t v46 = sub_22093DE60();
                if (__OFSUB__((int)v8, v46)) {
                  goto LABEL_155;
                }
                v45 += (int)v8 - v46;
              }
              uint64_t v47 = sub_22093DE50();
              size_t v48 = (v8 >> 32) - (int)v8;
              if (v47 < v77) {
                size_t v48 = v47;
              }
              if (!v79) {
                goto LABEL_160;
              }
              if (!v45) {
                goto LABEL_161;
              }
              int v40 = memcmp(v79, v45, v48);
              sub_220834944(v8, a2);
            }
            else
            {
              uint64_t v64 = *(void *)(v8 + 16);
              uint64_t v76 = *(char **)(v8 + 24);
              swift_retain();
              swift_retain();
              uint64_t v65 = (char *)sub_22093DE40();
              if (v65)
              {
                uint64_t v66 = sub_22093DE60();
                if (__OFSUB__(v64, v66)) {
                  goto LABEL_154;
                }
                v65 += v64 - v66;
              }
              BOOL v21 = __OFSUB__(v76, v64);
              size_t v67 = &v76[-v64];
              if (v21) {
                goto LABEL_149;
              }
              uint64_t v68 = sub_22093DE50();
              if (v68 >= (uint64_t)v67) {
                size_t v69 = (size_t)v67;
              }
              else {
                size_t v69 = v68;
              }
              if (!v79) {
                goto LABEL_168;
              }
              uint64_t v5 = v84;
              if (!v65) {
                goto LABEL_169;
              }
              int v40 = memcmp(v79, v65, v69);
LABEL_125:
              swift_release();
LABEL_126:
              swift_release();
            }
            sub_220834944(v8, a2);
            sub_220834944(v17, v16);
            sub_220834944(v17, v16);
            uint64_t result = sub_22080B88C(v17, v16);
            goto LABEL_128;
          case 2uLL:
            uint64_t v32 = *(void *)(v17 + 16);
            sub_22080B7F4(v17, v16);
            sub_220834CD4(v17, v16);
            sub_220834CD4(v8, a2);
            sub_220834CD4(v17, v16);
            swift_retain();
            swift_retain();
            uint64_t v33 = sub_22093DE40();
            if (v33)
            {
              uint64_t v34 = v33;
              uint64_t v35 = sub_22093DE60();
              if (__OFSUB__(v32, v35)) {
                goto LABEL_138;
              }
              char v75 = (void *)(v34 + v32 - v35);
            }
            else
            {
              char v75 = 0;
            }
            uint64_t v5 = v84;
            sub_22093DE50();
            unint64_t v12 = a2 >> 60;
            if (!v85)
            {
              *(void *)__s1 = v8;
              *(_WORD *)&__s1[8] = a2;
              __s1[10] = BYTE2(a2);
              __s1[11] = BYTE3(a2);
              __s1[12] = BYTE4(a2);
              __s1[13] = BYTE5(a2);
              if (!v75) {
                goto LABEL_164;
              }
              int v57 = memcmp(v75, __s1, BYTE6(a2));
              swift_release();
              swift_release();
              goto LABEL_113;
            }
            if (v85 == 1)
            {
              if (v78 < (int)v8) {
                goto LABEL_142;
              }
              swift_retain();
              unint64_t v41 = (char *)sub_22093DE40();
              if (v41)
              {
                uint64_t v42 = sub_22093DE60();
                if (__OFSUB__((int)v8, v42)) {
                  goto LABEL_153;
                }
                v41 += (int)v8 - v42;
              }
              uint64_t v43 = sub_22093DE50();
              size_t v44 = (v8 >> 32) - (int)v8;
              if (v43 < v77) {
                size_t v44 = v43;
              }
              if (!v75) {
                goto LABEL_158;
              }
              if (!v41) {
                goto LABEL_159;
              }
              int v40 = memcmp(v75, v41, v44);
              sub_220834944(v8, a2);
              swift_release();
              goto LABEL_126;
            }
            uint64_t v58 = *(void *)(v8 + 16);
            uint64_t v74 = *(void *)(v8 + 24);
            swift_retain();
            swift_retain();
            uint64_t v59 = (char *)sub_22093DE40();
            if (v59)
            {
              uint64_t v60 = sub_22093DE60();
              if (__OFSUB__(v58, v60)) {
                goto LABEL_152;
              }
              v59 += v58 - v60;
            }
            BOOL v21 = __OFSUB__(v74, v58);
            int64_t v61 = v74 - v58;
            if (v21) {
              goto LABEL_147;
            }
            uint64_t v62 = sub_22093DE50();
            if (v62 >= v61) {
              size_t v63 = v61;
            }
            else {
              size_t v63 = v62;
            }
            if (!v75) {
              goto LABEL_165;
            }
            uint64_t v5 = v84;
            if (!v59) {
              goto LABEL_166;
            }
            int v40 = memcmp(v75, v59, v63);
            swift_release();
            swift_release();
            goto LABEL_125;
          case 3uLL:
            *(void *)&__s1[6] = 0;
            *(void *)__s1 = 0;
            if (!v85) {
              goto LABEL_57;
            }
            if (v85 == 1)
            {
              if (v78 < (int)v8) {
                goto LABEL_141;
              }
              sub_220834CD4(v8, a2);
              sub_220834CD4(v17, v16);
              uint64_t v36 = sub_22093DE40();
              if (!v36) {
                goto LABEL_157;
              }
              uint64_t v26 = v36;
              uint64_t v37 = sub_22093DE60();
              uint64_t v28 = (int)v8 - v37;
              if (__OFSUB__((int)v8, v37)) {
                goto LABEL_145;
              }
              goto LABEL_53;
            }
            uint64_t v54 = *(void *)(v8 + 16);
            int v81 = *(char **)(v8 + 24);
            sub_220834CD4(v8, a2);
            sub_220834CD4(v17, v16);
            swift_retain();
            swift_retain();
            int64_t v50 = (char *)sub_22093DE40();
            if (v50)
            {
              uint64_t v55 = sub_22093DE60();
              if (__OFSUB__(v54, v55)) {
                goto LABEL_151;
              }
              v50 += v54 - v55;
            }
            BOOL v21 = __OFSUB__(v81, v54);
            uint64_t v52 = &v81[-v54];
            if (v21) {
              goto LABEL_144;
            }
            uint64_t v53 = sub_22093DE50();
            if (!v50) {
              goto LABEL_163;
            }
            break;
          default:
            *(void *)__s1 = *v15;
            *(_WORD *)&__s1[8] = v16;
            __s1[10] = BYTE2(v16);
            __s1[11] = BYTE3(v16);
            __s1[12] = BYTE4(v16);
            __s1[13] = BYTE5(v16);
            if (!v85)
            {
LABEL_57:
              uint64_t __s2 = v8;
              __int16 v88 = a2;
              char v89 = BYTE2(a2);
              char v90 = BYTE3(a2);
              char v91 = BYTE4(a2);
              char v92 = BYTE5(a2);
              uint64_t result = memcmp(__s1, &__s2, BYTE6(a2));
              if (!result) {
                goto LABEL_129;
              }
              goto LABEL_17;
            }
            if (v85 == 1)
            {
              if (v78 < (int)v8) {
                goto LABEL_140;
              }
              sub_220834CD4(v8, a2);
              sub_220834CD4(v17, v16);
              uint64_t v25 = sub_22093DE40();
              if (!v25)
              {
                sub_22093DE50();
                __break(1u);
LABEL_157:
                sub_22093DE50();
                __break(1u);
LABEL_158:
                __break(1u);
LABEL_159:
                __break(1u);
LABEL_160:
                __break(1u);
LABEL_161:
                __break(1u);
LABEL_162:
                __break(1u);
LABEL_163:
                __break(1u);
LABEL_164:
                __break(1u);
LABEL_165:
                __break(1u);
LABEL_166:
                __break(1u);
LABEL_167:
                __break(1u);
LABEL_168:
                __break(1u);
LABEL_169:
                __break(1u);
                JUMPOUT(0x22082F964);
              }
              uint64_t v26 = v25;
              uint64_t v27 = sub_22093DE60();
              uint64_t v28 = (int)v8 - v27;
              if (__OFSUB__((int)v8, v27)) {
                goto LABEL_146;
              }
LABEL_53:
              uint64_t v38 = sub_22093DE50();
              if (v38 >= v77) {
                size_t v39 = (v8 >> 32) - (int)v8;
              }
              else {
                size_t v39 = v38;
              }
              int v40 = memcmp(__s1, (const void *)(v26 + v28), v39);
              sub_220834944(v8, a2);
              uint64_t result = sub_220834944(v17, v16);
              uint64_t v5 = v84;
LABEL_128:
              unint64_t v12 = a2 >> 60;
              if (!v40) {
                goto LABEL_129;
              }
              goto LABEL_17;
            }
            uint64_t v49 = *(void *)(v8 + 16);
            unint64_t v80 = *(char **)(v8 + 24);
            sub_220834CD4(v8, a2);
            sub_220834CD4(v17, v16);
            swift_retain();
            swift_retain();
            int64_t v50 = (char *)sub_22093DE40();
            if (v50)
            {
              uint64_t v51 = sub_22093DE60();
              if (__OFSUB__(v49, v51)) {
                goto LABEL_150;
              }
              v50 += v49 - v51;
            }
            BOOL v21 = __OFSUB__(v80, v49);
            uint64_t v52 = &v80[-v49];
            if (v21) {
              goto LABEL_143;
            }
            uint64_t v53 = sub_22093DE50();
            if (!v50) {
              goto LABEL_162;
            }
            break;
        }
        if (v53 >= (uint64_t)v52) {
          size_t v56 = (size_t)v52;
        }
        else {
          size_t v56 = v53;
        }
        int v82 = memcmp(__s1, v50, v56);
        swift_release();
        swift_release();
        sub_220834944(v8, a2);
        uint64_t result = sub_220834944(v17, v16);
        uint64_t v5 = v84;
        unint64_t v12 = a2 >> 60;
        if (!v82)
        {
LABEL_129:
          __swift_instantiateConcreteTypeFromMangledName(&qword_267F185B8);
          uint64_t result = sub_22093F2E0();
          __break(1u);
          break;
        }
LABEL_17:
        a3 = (a3 + 1) & v86;
      }
      while (((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) != 0);
    }
  }
LABEL_130:
  uint64_t v70 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  unint64_t v71 = (uint64_t *)(*(void *)(v70 + 48) + 16 * a3);
  *unint64_t v71 = v8;
  v71[1] = a2;
  uint64_t v72 = *(void *)(v70 + 16);
  BOOL v21 = __OFADD__(v72, 1);
  uint64_t v73 = v72 + 1;
  if (v21)
  {
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
LABEL_154:
    __break(1u);
LABEL_155:
    __break(1u);
  }
  *(void *)(v70 + 16) = v73;
  return result;
}

uint64_t sub_22082F994(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v55 = a1;
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18630);
  MEMORY[0x270FA5388](v54);
  unint64_t v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_22093E100();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v47 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD411B8);
  uint64_t v45 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  BOOL v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v42 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)&v42 - v19;
  unint64_t v21 = *(void *)(*v3 + 16);
  unint64_t v22 = *(void *)(*v3 + 24);
  uint64_t v43 = v3;
  if (v22 <= v21 || (a3 & 1) == 0)
  {
    if (a3)
    {
      uint64_t v42 = v18;
      sub_22082D138();
    }
    else
    {
      if (v22 > v21)
      {
        sub_220829A18();
        goto LABEL_21;
      }
      uint64_t v42 = v18;
      sub_22082AFC4();
    }
    uint64_t v23 = *v3;
    sub_22093F430();
    sub_220835280(v55, (uint64_t)v20, qword_26AD411B8);
    uint64_t v52 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    uint64_t v53 = v9 + 48;
    unsigned int v24 = v52(v20, 1, v8);
    uint64_t v46 = v23;
    if (v24 == 1)
    {
      sub_22093F450();
    }
    else
    {
      uint64_t v25 = v14;
      uint64_t v26 = v47;
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v47, v20, v8);
      sub_22093F450();
      sub_220834C90(&qword_267F18638);
      sub_22093E370();
      uint64_t v27 = v26;
      BOOL v14 = v25;
      uint64_t v23 = v46;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v27, v8);
    }
    uint64_t v28 = sub_22093F490();
    uint64_t v29 = -1 << *(unsigned char *)(v23 + 32);
    a2 = v28 & ~v29;
    uint64_t v51 = v23 + 56;
    if ((*(void *)(v23 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v50 = ~v29;
      uint64_t v30 = *(void *)(v45 + 72);
      size_t v44 = (void (**)(char *, uint64_t, uint64_t))(v9 + 32);
      size_t v48 = (void (**)(char *, uint64_t))(v9 + 8);
      uint64_t v49 = v30;
      do
      {
        sub_220835280(*(void *)(v23 + 48) + v49 * a2, (uint64_t)v17, qword_26AD411B8);
        uint64_t v35 = (uint64_t)&v7[*(int *)(v54 + 48)];
        sub_220835280((uint64_t)v17, (uint64_t)v7, qword_26AD411B8);
        sub_220835280(v55, v35, qword_26AD411B8);
        uint64_t v36 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v52;
        if (v52(v7, 1, v8) == 1)
        {
          if (v36(v35, 1, v8) == 1) {
            goto LABEL_24;
          }
        }
        else
        {
          sub_220835280((uint64_t)v7, (uint64_t)v14, qword_26AD411B8);
          if (v36(v35, 1, v8) != 1)
          {
            uint64_t v31 = v47;
            (*v44)(v47, v35, v8);
            sub_220834C90(&qword_267F18640);
            char v32 = sub_22093E520();
            uint64_t v33 = *v48;
            uint64_t v34 = v31;
            uint64_t v23 = v46;
            (*v48)(v34, v8);
            v33(v14, v8);
            sub_2208352E4((uint64_t)v7, qword_26AD411B8);
            sub_2208352E4((uint64_t)v17, qword_26AD411B8);
            if (v32) {
              goto LABEL_25;
            }
            goto LABEL_14;
          }
          (*v48)(v14, v8);
        }
        sub_2208352E4((uint64_t)v7, &qword_267F18630);
        sub_2208352E4((uint64_t)v17, qword_26AD411B8);
LABEL_14:
        a2 = (a2 + 1) & v50;
      }
      while (((*(void *)(v51 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_21:
  uint64_t v37 = *v43;
  *(void *)(*v43 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_220834D3C(v55, *(void *)(v37 + 48) + *(void *)(v45 + 72) * a2, qword_26AD411B8);
  uint64_t v39 = *(void *)(v37 + 16);
  BOOL v40 = __OFADD__(v39, 1);
  uint64_t v41 = v39 + 1;
  if (v40)
  {
    __break(1u);
LABEL_24:
    sub_2208352E4((uint64_t)v7, qword_26AD411B8);
    sub_2208352E4((uint64_t)v17, qword_26AD411B8);
LABEL_25:
    uint64_t result = sub_22093F2E0();
    __break(1u);
  }
  else
  {
    *(void *)(v37 + 16) = v41;
  }
  return result;
}

uint64_t sub_22082FF64(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_22082D66C();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_220829C80();
      goto LABEL_22;
    }
    sub_22082B4CC();
  }
  uint64_t v11 = *v4;
  sub_22093F430();
  sub_22093F450();
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_22093E650();
    swift_bridgeObjectRelease();
  }
  uint64_t result = sub_22093F490();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = ~v12;
    uint64_t v15 = *(void *)(v11 + 48);
    do
    {
      uint64_t v16 = (void *)(v15 + 16 * a3);
      uint64_t v17 = v16[1];
      if (v17)
      {
        if (a2)
        {
          BOOL v18 = *v16 == v8 && v17 == a2;
          if (v18 || (uint64_t result = sub_22093F250(), (result & 1) != 0))
          {
LABEL_21:
            __swift_instantiateConcreteTypeFromMangledName(&qword_26AD40FC0);
            uint64_t result = sub_22093F2E0();
            __break(1u);
            break;
          }
        }
      }
      else if (!a2)
      {
        goto LABEL_21;
      }
      a3 = (a3 + 1) & v14;
    }
    while (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) != 0);
  }
LABEL_22:
  uint64_t v19 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v20 = (uint64_t *)(*(void *)(v19 + 48) + 16 * a3);
  *uint64_t v20 = v8;
  v20[1] = a2;
  uint64_t v21 = *(void *)(v19 + 16);
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22) {
    __break(1u);
  }
  else {
    *(void *)(v19 + 16) = v23;
  }
  return result;
}

uint64_t sub_22083011C(uint64_t result, unint64_t a2, char a3)
{
  char v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_18;
  }
  if (a3)
  {
    sub_22082D978();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_220829E30();
      goto LABEL_18;
    }
    sub_22082B7A4();
  }
  uint64_t v8 = *v3;
  sub_22093F430();
  if (v5 != 2) {
    sub_22093F450();
  }
  sub_22093F450();
  uint64_t result = sub_22093F490();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = ~v9;
    do
    {
      int v11 = *(unsigned __int8 *)(*(void *)(v8 + 48) + a2);
      if (v11 == 2)
      {
        if (v5 == 2) {
          goto LABEL_17;
        }
      }
      else if (v5 != 2 && ((((v5 & 1) == 0) ^ v11) & 1) != 0)
      {
LABEL_17:
        __swift_instantiateConcreteTypeFromMangledName(&qword_267F185B0);
        uint64_t result = sub_22093F2E0();
        __break(1u);
        break;
      }
      a2 = (a2 + 1) & v10;
    }
    while (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_18:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v12 + 48) + a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_2208302B4(uint64_t result, char a2, unint64_t a3, char a4)
{
  double v7 = *(double *)&result;
  unint64_t v8 = *(void *)(*v4 + 16);
  unint64_t v9 = *(void *)(*v4 + 24);
  if (v9 > v8 && (a4 & 1) != 0) {
    goto LABEL_18;
  }
  if (a4)
  {
    sub_22082DC60();
  }
  else
  {
    if (v9 > v8)
    {
      uint64_t result = (uint64_t)sub_22082A314(&qword_267F18618);
      goto LABEL_18;
    }
    sub_22082BA58();
  }
  uint64_t v10 = *v4;
  sub_22093F430();
  sub_22093F450();
  if ((a2 & 1) == 0) {
    sub_22093F480();
  }
  uint64_t result = sub_22093F490();
  uint64_t v11 = -1 << *(unsigned char *)(v10 + 32);
  a3 = result & ~v11;
  if ((*(void *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v12 = ~v11;
    do
    {
      uint64_t v13 = *(void *)(v10 + 48) + 16 * a3;
      if (*(unsigned char *)(v13 + 8))
      {
        if (a2) {
          goto LABEL_17;
        }
      }
      else if ((a2 & 1) == 0 && *(double *)v13 == v7)
      {
LABEL_17:
        __swift_instantiateConcreteTypeFromMangledName(&qword_26AD40FD0);
        uint64_t result = sub_22093F2E0();
        __break(1u);
        break;
      }
      a3 = (a3 + 1) & v12;
    }
    while (((*(void *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) != 0);
  }
LABEL_18:
  uint64_t v14 = *v4;
  *(void *)(*v4 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v15 = *(void *)(v14 + 48) + 16 * a3;
  *(double *)uint64_t v15 = v7;
  *(unsigned char *)(v15 + 8) = a2 & 1;
  uint64_t v16 = *(void *)(v14 + 16);
  BOOL v17 = __OFADD__(v16, 1);
  uint64_t v18 = v16 + 1;
  if (v17) {
    __break(1u);
  }
  else {
    *(void *)(v14 + 16) = v18;
  }
  return result;
}

uint64_t sub_220830458(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_18;
  }
  if (a3)
  {
    sub_22082DF5C();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_220829FC4();
      goto LABEL_18;
    }
    sub_22082BD20();
  }
  uint64_t v8 = *v3;
  sub_22093F430();
  sub_22093F450();
  if ((v5 & 0x100000000) == 0) {
    sub_22093F470();
  }
  uint64_t result = sub_22093F490();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = ~v9;
    do
    {
      uint64_t v11 = *(void *)(v8 + 48) + 8 * a2;
      if (*(unsigned char *)(v11 + 4))
      {
        if ((v5 & 0x100000000) != 0) {
          goto LABEL_17;
        }
      }
      else if ((v5 & 0x100000000) == 0 && *(float *)v11 == *(float *)&v5)
      {
LABEL_17:
        __swift_instantiateConcreteTypeFromMangledName(&qword_26AD40FD8);
        uint64_t result = sub_22093F2E0();
        __break(1u);
        break;
      }
      a2 = (a2 + 1) & v10;
    }
    while (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_18:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t v13 = *(void *)(v12 + 48) + 8 * a2;
  *(_DWORD *)uint64_t v13 = v5;
  *(unsigned char *)(v13 + 4) = BYTE4(v5) & 1;
  uint64_t v14 = *(void *)(v12 + 16);
  BOOL v15 = __OFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (v15) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v16;
  }
  return result;
}

uint64_t sub_2208305F0(uint64_t result, unint64_t a2, char a3)
{
  int v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_18;
  }
  if (a3)
  {
    sub_22082E258();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_22082A16C();
      goto LABEL_18;
    }
    sub_22082BFE8();
  }
  uint64_t v8 = *v3;
  sub_22093F430();
  sub_22093F450();
  if ((v5 & 0x10000) == 0) {
    sub_22093F460();
  }
  uint64_t result = sub_22093F490();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = ~v9;
    do
    {
      uint64_t v11 = *(void *)(v8 + 48) + 4 * a2;
      if (*(unsigned char *)(v11 + 2))
      {
        if ((v5 & 0x10000) != 0) {
          goto LABEL_17;
        }
      }
      else if ((v5 & 0x10000) == 0 && *(short float *)v11 == *(short float *)&v5)
      {
LABEL_17:
        __swift_instantiateConcreteTypeFromMangledName(&qword_267F18600);
        uint64_t result = sub_22093F2E0();
        __break(1u);
        break;
      }
      a2 = (a2 + 1) & v10;
    }
    while (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_18:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t v13 = *(void *)(v12 + 48) + 4 * a2;
  *(_WORD *)uint64_t v13 = v5;
  *(unsigned char *)(v13 + 2) = BYTE2(v5) & 1;
  uint64_t v14 = *(void *)(v12 + 16);
  BOOL v15 = __OFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (v15) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v16;
  }
  return result;
}

uint64_t sub_220830780(uint64_t result, char a2, unint64_t a3, char a4)
{
  uint64_t v7 = result;
  unint64_t v8 = *(void *)(*v4 + 16);
  unint64_t v9 = *(void *)(*v4 + 24);
  if (v9 > v8 && (a4 & 1) != 0) {
    goto LABEL_18;
  }
  if (a4)
  {
    sub_22082E554();
  }
  else
  {
    if (v9 > v8)
    {
      uint64_t result = (uint64_t)sub_22082A314(&qword_267F185F8);
      goto LABEL_18;
    }
    sub_22082C2B0();
  }
  uint64_t v10 = *v4;
  sub_22093F430();
  sub_22093F450();
  if ((a2 & 1) == 0) {
    sub_22093F440();
  }
  uint64_t result = sub_22093F490();
  uint64_t v11 = -1 << *(unsigned char *)(v10 + 32);
  a3 = result & ~v11;
  if ((*(void *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v12 = ~v11;
    do
    {
      uint64_t v13 = *(void *)(v10 + 48) + 16 * a3;
      if (*(unsigned char *)(v13 + 8))
      {
        if (a2) {
          goto LABEL_17;
        }
      }
      else if ((a2 & 1) == 0 && *(void *)v13 == v7)
      {
LABEL_17:
        __swift_instantiateConcreteTypeFromMangledName(&qword_26AD40FE0);
        uint64_t result = sub_22093F2E0();
        __break(1u);
        break;
      }
      a3 = (a3 + 1) & v12;
    }
    while (((*(void *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) != 0);
  }
LABEL_18:
  uint64_t v14 = *v4;
  *(void *)(*v4 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v15 = *(void *)(v14 + 48) + 16 * a3;
  *(void *)uint64_t v15 = v7;
  *(unsigned char *)(v15 + 8) = a2 & 1;
  uint64_t v16 = *(void *)(v14 + 16);
  BOOL v17 = __OFADD__(v16, 1);
  uint64_t v18 = v16 + 1;
  if (v17) {
    __break(1u);
  }
  else {
    *(void *)(v14 + 16) = v18;
  }
  return result;
}

uint64_t sub_22083091C(void *a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  char v10 = v5;
  if (!a1[2] || a2 == a3) {
    return swift_bridgeObjectRelease();
  }
  if (a3 < a2)
  {
    __break(1u);
LABEL_16:
    sub_2208246CC();
    if ((v10 & 1) == 0) {
      goto LABEL_17;
    }
    goto LABEL_13;
  }
  unint64_t v6 = a5;
  uint64_t v48 = a1[2];
  uint64_t v9 = a1[4];
  uint64_t v8 = a1[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v46 = a2 - a3;
  uint64_t v47 = a3;
  if (a2 >= a3)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v16 = (void *)*v6;
  unint64_t v7 = sub_22081D32C(v9, v8, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2208222BC);
  uint64_t v18 = v16[2];
  BOOL v19 = (v17 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  char v10 = v17;
  if (v16[3] >= v20)
  {
    if (a4)
    {
      if ((v17 & 1) == 0) {
        goto LABEL_17;
      }
      goto LABEL_13;
    }
    goto LABEL_16;
  }
  sub_22081DBE8(v20, a4 & 1);
  uint64_t v21 = sub_22081D32C(v9, v8, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2208222BC);
  if ((v10 & 1) == (v22 & 1))
  {
    unint64_t v7 = v21;
    if ((v10 & 1) == 0)
    {
LABEL_17:
      unsigned int v24 = (void *)*v6;
      *(void *)(*v6 + 8 * (v7 >> 6) + 64) |= 1 << v7;
      uint64_t v25 = (uint64_t *)(v24[6] + 16 * v7);
      *uint64_t v25 = v9;
      v25[1] = v8;
      *(void *)(v24[7] + 8 * v7) = a2;
      uint64_t v26 = v24[2];
      BOOL v27 = __OFADD__(v26, 1);
      uint64_t v28 = v26 + 1;
      if (v27)
      {
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
        goto LABEL_38;
      }
      v24[2] = v28;
      if (v48 == 1) {
        return swift_bridgeObjectRelease_n();
      }
      if (a1[2] < 2uLL) {
        goto LABEL_37;
      }
      if (a2 + 1 == v47) {
        return swift_bridgeObjectRelease_n();
      }
      uint64_t v30 = a1[6];
      uint64_t v29 = a1[7];
      swift_bridgeObjectRetain();
      if (a2 + 1 < v47)
      {
        uint64_t v31 = a1 + 9;
        unint64_t v32 = 2;
        while (1)
        {
          uint64_t v33 = (void *)*v6;
          unint64_t v34 = sub_22081D32C(v30, v29, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2208222BC);
          uint64_t v36 = v33[2];
          BOOL v37 = (v35 & 1) == 0;
          BOOL v27 = __OFADD__(v36, v37);
          uint64_t v38 = v36 + v37;
          if (v27) {
            goto LABEL_35;
          }
          char v39 = v35;
          if (v33[3] < v38)
          {
            sub_22081DBE8(v38, 1);
            unint64_t v34 = sub_22081D32C(v30, v29, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2208222BC);
            if ((v39 & 1) != (v40 & 1)) {
              goto LABEL_38;
            }
          }
          if (v39) {
            goto LABEL_13;
          }
          uint64_t v41 = a2 + v32;
          uint64_t v42 = (void *)*v6;
          *(void *)(*v6 + 8 * (v34 >> 6) + 64) |= 1 << v34;
          uint64_t v43 = (uint64_t *)(v42[6] + 16 * v34);
          *uint64_t v43 = v30;
          v43[1] = v29;
          *(void *)(v42[7] + 8 * v34) = a2 + v32 - 1;
          uint64_t v44 = v42[2];
          BOOL v27 = __OFADD__(v44, 1);
          uint64_t v45 = v44 + 1;
          if (v27) {
            goto LABEL_36;
          }
          v42[2] = v45;
          if (v48 == v32) {
            return swift_bridgeObjectRelease_n();
          }
          if (v32 >= a1[2]) {
            goto LABEL_37;
          }
          if (!(v46 + v32)) {
            return swift_bridgeObjectRelease_n();
          }
          uint64_t v30 = *(v31 - 1);
          uint64_t v29 = *v31;
          swift_bridgeObjectRetain();
          if (v41 >= a2)
          {
            ++v32;
            v31 += 2;
            if (v41 < v47) {
              continue;
            }
          }
          goto LABEL_34;
        }
      }
      goto LABEL_34;
    }
LABEL_13:
    uint64_t v23 = swift_allocError();
    swift_willThrow();
    MEMORY[0x223C6AF70](v23);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F188B0);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      return MEMORY[0x223C6AF60](v23);
    }
    goto LABEL_39;
  }
LABEL_38:
  sub_22093F2F0();
  __break(1u);
LABEL_39:
  sub_22093EEA0();
  sub_22093E6C0();
  sub_22093F030();
  sub_22093E6C0();
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

uint64_t sub_220830DDC(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v14 >= v7) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v3 + 8 * v14);
    ++v8;
    if (!v15)
    {
      int64_t v8 = v14 + 1;
      if (v14 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v3 + 8 * v8);
      if (!v15)
      {
        int64_t v8 = v14 + 2;
        if (v14 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        if (!v15)
        {
          int64_t v8 = v14 + 3;
          if (v14 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v15 = *(void *)(v3 + 8 * v8);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_6:
    uint64_t v11 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_220837DF8(v12, v13);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 < v7)
  {
    unint64_t v15 = *(void *)(v3 + 8 * v16);
    if (!v15)
    {
      while (1)
      {
        int64_t v8 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        ++v16;
        if (v15) {
          goto LABEL_23;
        }
      }
    }
    int64_t v8 = v16;
    goto LABEL_23;
  }
LABEL_24:

  return swift_release();
}

uint64_t sub_220830F84(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v43 = *MEMORY[0x263EF8340];
  if (*(void *)(a2 + 16))
  {
    uint64_t v4 = *(void *)(a1 + 56);
    uint64_t v37 = a1 + 56;
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v35 = ~v5;
    if (-v5 < 64) {
      uint64_t v6 = ~(-1 << -(char)v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & v4;
    int64_t v36 = (unint64_t)(63 - v5) >> 6;
    uint64_t v8 = a2 + 56;
    swift_bridgeObjectRetain();
    int64_t v9 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v11 = v10 | (v9 << 6);
      }
      else
      {
        int64_t v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v36) {
          goto LABEL_47;
        }
        unint64_t v13 = *(void *)(v37 + 8 * v12);
        int64_t v14 = v9 + 1;
        if (!v13)
        {
          int64_t v14 = v9 + 2;
          if (v9 + 2 >= v36) {
            goto LABEL_47;
          }
          unint64_t v13 = *(void *)(v37 + 8 * v14);
          if (!v13)
          {
            int64_t v14 = v9 + 3;
            if (v9 + 3 >= v36) {
              goto LABEL_47;
            }
            unint64_t v13 = *(void *)(v37 + 8 * v14);
            if (!v13)
            {
              int64_t v14 = v9 + 4;
              if (v9 + 4 >= v36) {
                goto LABEL_47;
              }
              unint64_t v13 = *(void *)(v37 + 8 * v14);
              if (!v13)
              {
                int64_t v15 = v9 + 5;
                if (v9 + 5 >= v36)
                {
LABEL_47:
                  sub_220834FE8();
                  return v2;
                }
                unint64_t v13 = *(void *)(v37 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    int64_t v14 = v15 + 1;
                    if (__OFADD__(v15, 1)) {
                      break;
                    }
                    if (v14 >= v36) {
                      goto LABEL_47;
                    }
                    unint64_t v13 = *(void *)(v37 + 8 * v14);
                    ++v15;
                    if (v13) {
                      goto LABEL_24;
                    }
                  }
LABEL_49:
                  __break(1u);
                }
                int64_t v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        unint64_t v7 = (v13 - 1) & v13;
        unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
        int64_t v9 = v14;
      }
      int64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
      uint64_t v18 = *v16;
      uint64_t v17 = v16[1];
      sub_22093F430();
      swift_bridgeObjectRetain();
      sub_22093E650();
      uint64_t v19 = sub_22093F490();
      uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v21 = v19 & ~v20;
      if ((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21)) {
        break;
      }
LABEL_6:
      swift_bridgeObjectRelease();
    }
    uint64_t v22 = *(void *)(v2 + 48);
    uint64_t v23 = (void *)(v22 + 16 * v21);
    BOOL v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (sub_22093F250() & 1) != 0)
    {
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
      uint64_t v38 = a1;
      uint64_t v39 = v37;
      uint64_t v40 = v35;
      int64_t v41 = v9;
      unint64_t v42 = v7;
    }
    else
    {
      uint64_t v25 = ~v20;
      do
      {
        unint64_t v21 = (v21 + 1) & v25;
        if (((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          goto LABEL_6;
        }
        uint64_t v26 = (void *)(v22 + 16 * v21);
        BOOL v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (sub_22093F250() & 1) == 0);
      uint64_t v38 = a1;
      uint64_t v39 = v37;
      uint64_t v40 = v35;
      int64_t v41 = v9;
      unint64_t v42 = v7;
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    char v29 = *(unsigned char *)(v2 + 32);
    unint64_t v30 = (unint64_t)((1 << v29) + 63) >> 6;
    size_t v31 = 8 * v30;
    if ((v29 & 0x3Fu) < 0xE
      || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
    {
      MEMORY[0x270FA5388](isStackAllocationSafe);
      memcpy((char *)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v31);
      uint64_t v32 = sub_2208313F4((uint64_t)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), v30, v2, v21, &v38);
      swift_release();
      sub_220834FE8();
    }
    else
    {
      uint64_t v33 = (void *)swift_slowAlloc();
      memcpy(v33, (const void *)(v2 + 56), v31);
      uint64_t v32 = sub_2208313F4((uint64_t)v33, v30, v2, v21, &v38);
      swift_release();
      sub_220834FE8();
      MEMORY[0x223C6B140](v33, -1, -1);
    }
    return v32;
  }
  else
  {
    swift_release();
    return MEMORY[0x263F8EE88];
  }
}

uint64_t sub_2208313F4(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v38 = (unint64_t *)result;
  *(void *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v8 = v7 - 1;
  uint64_t v39 = a3 + 56;
  while (2)
  {
    uint64_t v37 = v8;
    do
    {
      while (1)
      {
        int64_t v9 = a5[3];
        unint64_t v10 = a5[4];
        if (v10)
        {
          uint64_t v11 = (v10 - 1) & v10;
          unint64_t v12 = __clz(__rbit64(v10)) | (v9 << 6);
        }
        else
        {
          int64_t v13 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
            goto LABEL_45;
          }
          int64_t v14 = (unint64_t)(a5[2] + 64) >> 6;
          int64_t v15 = a5[3];
          if (v13 >= v14) {
            goto LABEL_43;
          }
          uint64_t v16 = a5[1];
          unint64_t v17 = *(void *)(v16 + 8 * v13);
          if (!v17)
          {
            int64_t v15 = v9 + 1;
            if (v9 + 2 >= v14) {
              goto LABEL_43;
            }
            unint64_t v17 = *(void *)(v16 + 8 * (v9 + 2));
            if (v17)
            {
              int64_t v13 = v9 + 2;
            }
            else
            {
              int64_t v15 = v9 + 2;
              if (v9 + 3 >= v14) {
                goto LABEL_43;
              }
              unint64_t v17 = *(void *)(v16 + 8 * (v9 + 3));
              if (v17)
              {
                int64_t v13 = v9 + 3;
              }
              else
              {
                int64_t v13 = v9 + 4;
                int64_t v15 = v9 + 3;
                if (v9 + 4 >= v14) {
                  goto LABEL_43;
                }
                unint64_t v17 = *(void *)(v16 + 8 * v13);
                if (!v17)
                {
                  int64_t v15 = v14 - 1;
                  int64_t v18 = v9 + 5;
                  while (v14 != v18)
                  {
                    unint64_t v17 = *(void *)(v16 + 8 * v18++);
                    if (v17)
                    {
                      int64_t v13 = v18 - 1;
                      goto LABEL_21;
                    }
                  }
LABEL_43:
                  a5[3] = v15;
                  a5[4] = 0;
                  swift_retain();
                  return sub_2208316D4(v38, a2, v37, a3);
                }
              }
            }
          }
LABEL_21:
          uint64_t v11 = (v17 - 1) & v17;
          unint64_t v12 = __clz(__rbit64(v17)) + (v13 << 6);
          int64_t v9 = v13;
        }
        uint64_t v19 = (uint64_t *)(*(void *)(*a5 + 48) + 16 * v12);
        uint64_t v21 = *v19;
        uint64_t v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        sub_22093F430();
        swift_bridgeObjectRetain();
        sub_22093E650();
        uint64_t v22 = sub_22093F490();
        uint64_t v23 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v24 = v22 & ~v23;
        unint64_t v25 = v24 >> 6;
        uint64_t v26 = 1 << v24;
        if (((1 << v24) & *(void *)(v39 + 8 * (v24 >> 6))) != 0) {
          break;
        }
LABEL_3:
        uint64_t result = swift_bridgeObjectRelease();
      }
      uint64_t v27 = *(void *)(a3 + 48);
      uint64_t v28 = (void *)(v27 + 16 * v24);
      BOOL v29 = *v28 == v21 && v28[1] == v20;
      if (!v29 && (sub_22093F250() & 1) == 0)
      {
        uint64_t v31 = ~v23;
        for (unint64_t i = v24 + 1; ; unint64_t i = v33 + 1)
        {
          unint64_t v33 = i & v31;
          if (((*(void *)(v39 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0) {
            break;
          }
          unint64_t v34 = (void *)(v27 + 16 * v33);
          BOOL v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (sub_22093F250() & 1) != 0)
          {
            uint64_t result = swift_bridgeObjectRelease();
            unint64_t v25 = v33 >> 6;
            uint64_t v26 = 1 << v33;
            goto LABEL_29;
          }
        }
        goto LABEL_3;
      }
      uint64_t result = swift_bridgeObjectRelease();
LABEL_29:
      unint64_t v30 = v38[v25];
      v38[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    uint64_t v8 = v37 - 1;
    if (__OFSUB__(v37, 1))
    {
LABEL_45:
      __break(1u);
      return result;
    }
    if (v37 != 1) {
      continue;
    }
    return MEMORY[0x263F8EE88];
  }
}

uint64_t sub_2208316D4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = MEMORY[0x263F8EE88];
LABEL_36:
    swift_release();
    return v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41178);
  uint64_t result = sub_22093EE90();
  uint64_t v8 = result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v14 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v30) {
        goto LABEL_36;
      }
      unint64_t v15 = a1[v10];
      if (!v15)
      {
        uint64_t v10 = v14 + 2;
        if (v14 + 2 >= v30) {
          goto LABEL_36;
        }
        unint64_t v15 = a1[v10];
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    unint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_22093F430();
    swift_bridgeObjectRetain();
    sub_22093E650();
    uint64_t result = sub_22093F490();
    uint64_t v20 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t v28 = (void *)(*(void *)(v8 + 48) + 16 * v23);
    *uint64_t v28 = v18;
    v28[1] = v19;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v16 = v14 + 3;
  if (v16 >= v30) {
    goto LABEL_36;
  }
  unint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_22083196C(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v21 = MEMORY[0x263F8EE78];
    sub_220826C58(0, v2, 0);
    uint64_t v3 = v21;
    uint64_t v6 = (void *)(a1 + 32);
    uint64_t v7 = *(void *)(a2 + 24);
    uint64_t v8 = *(void *)(a2 + 32);
    uint64_t v9 = *(unsigned __int8 *)(a2 + 40);
    do
    {
      uint64_t v11 = v6[3];
      uint64_t v10 = v6[4];
      __swift_project_boxed_opaque_existential_1(v6, v11);
      (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 + 8) + 160))(v19, v7, v8, v9, v11);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v21 = v3;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_220826C58(0, *(void *)(v3 + 16) + 1, 1);
        uint64_t v3 = v21;
      }
      unint64_t v14 = *(void *)(v3 + 16);
      unint64_t v13 = *(void *)(v3 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_220826C58((char *)(v13 > 1), v14 + 1, 1);
        uint64_t v3 = v21;
      }
      *(void *)(v3 + 16) = v14 + 1;
      uint64_t v15 = v3 + 40 * v14;
      long long v16 = v19[0];
      long long v17 = v19[1];
      *(void *)(v15 + 64) = v20;
      *(_OWORD *)(v15 + 32) = v16;
      *(_OWORD *)(v15 + 48) = v17;
      v6 += 5;
      --v2;
    }
    while (v2);
  }
  return v3;
}

unint64_t sub_220831AC8(unint64_t result, int64_t a2)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v6 = result;
  unint64_t v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  unint64_t v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v9 <= *(void *)(v4 + 24) >> 1)
  {
    if (!v8) {
      goto LABEL_20;
    }
  }
  else
  {
    if (v5 <= v9) {
      int64_t v10 = v5 + v8;
    }
    else {
      int64_t v10 = v5;
    }
    uint64_t result = (unint64_t)sub_22081B3EC((char *)result, v10, 1, (char *)v4);
    unint64_t v4 = result;
    if (!v8) {
      goto LABEL_20;
    }
  }
  uint64_t v11 = *(void *)(v4 + 16);
  BOOL v12 = __OFSUB__(v11, a2);
  uint64_t v13 = v11 - a2;
  if (v12) {
    goto LABEL_26;
  }
  uint64_t result = v4 + 32 + 16 * v6;
  unint64_t v14 = (const void *)(v4 + 32 + 16 * a2);
  if (v6 != a2 || result >= (unint64_t)v14 + 16 * v13) {
    uint64_t result = (unint64_t)memmove((void *)result, v14, 16 * v13);
  }
  uint64_t v15 = *(void *)(v4 + 16);
  BOOL v12 = __OFADD__(v15, v8);
  uint64_t v16 = v15 + v8;
  if (!v12)
  {
    *(void *)(v4 + 16) = v16;
LABEL_20:
    *int64_t v2 = v4;
    return result;
  }
LABEL_27:
  __break(1u);
  return result;
}

void sub_220831BD0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413D8);
  uint64_t v3 = swift_allocObject();
  sub_22081AB44(v2, v41);
  unint64_t v4 = (uint64_t *)v41[0];
  uint64_t v5 = v41[1];
  *(void *)(v3 + 16) = v41[0];
  *(void *)(v3 + 24) = v5;
  if (v2)
  {
    swift_bridgeObjectRetain();
    swift_beginAccess();
    unint64_t v6 = (unsigned char *)(a1 + 40);
    while (v4)
    {
      uint64_t v20 = *((void *)v6 - 1);
      char v21 = *v6;
      uint64_t v22 = *v4;
      uint64_t v23 = v4[1];
      if (v23 >= *v4)
      {
        BOOL v18 = __OFADD__(v23, 1);
        uint64_t v26 = v23 + 1;
        if (v18)
        {
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
LABEL_56:
          __break(1u);
LABEL_57:
          __break(1u);
LABEL_58:
          __break(1u);
          break;
        }
        if (v22 < v26)
        {
          if (v22 + 0x4000000000000000 < 0) {
            goto LABEL_56;
          }
          if (2 * v22 <= v26) {
            uint64_t v22 = v26;
          }
          else {
            v22 *= 2;
          }
        }
        sub_22088F714((uint64_t)v4, v22, v40);
        if (v4[1] < 0) {
          goto LABEL_52;
        }
        MEMORY[0x223C6B140](v4, -1, -1);
        unint64_t v4 = (uint64_t *)v40[0];
        uint64_t v27 = v40[1];
        *(void *)(v3 + 16) = v40[0];
        *(void *)(v3 + 24) = v27;
        if (v21)
        {
          if (!v4) {
            goto LABEL_60;
          }
          uint64_t v28 = v4[2];
          BOOL v18 = __OFADD__(v28, 1);
          uint64_t v29 = v28 + 1;
          if (v18) {
            goto LABEL_57;
          }
          uint64_t v4[2] = v29;
        }
        else
        {
          if (!v4) {
            goto LABEL_61;
          }
          uint64_t v30 = *v4 + 7;
          if (__OFADD__(*v4, 7)) {
            goto LABEL_58;
          }
          uint64_t v31 = v4 + 8;
          if (v30 < 0) {
            uint64_t v30 = *v4 + 14;
          }
          uint64_t v32 = v30 >> 3;
          uint64_t v33 = v32 - 1;
          BOOL v10 = v32 < 1;
          uint64_t v34 = v32 + 62;
          if (!v10) {
            uint64_t v34 = v33;
          }
          *(void *)((char *)&v31[v4[1] + 8] + (v34 & 0xFFFFFFFFFFFFFFC0)) = v20;
          uint64_t v35 = v4[1];
          uint64_t v36 = v35 + 7;
          if (v35 >= 0) {
            uint64_t v36 = v4[1];
          }
          uint64_t v37 = v35 - (v36 & 0xFFFFFFFFFFFFFFF8);
          if (v37 >= 0) {
            char v38 = 1 << v37;
          }
          else {
            char v38 = 0;
          }
          *((unsigned char *)v31 + (v36 >> 3)) |= v38;
        }
        uint64_t v39 = v4[1];
        BOOL v18 = __OFADD__(v39, 1);
        uint64_t v19 = v39 + 1;
        if (v18) {
          goto LABEL_53;
        }
      }
      else if (*v6)
      {
        uint64_t v24 = v4[2];
        BOOL v18 = __OFADD__(v24, 1);
        uint64_t v25 = v24 + 1;
        if (v18) {
          goto LABEL_55;
        }
        uint64_t v4[2] = v25;
        BOOL v18 = __OFADD__(v23, 1);
        uint64_t v19 = v23 + 1;
        if (v18) {
          goto LABEL_51;
        }
      }
      else
      {
        uint64_t v7 = v22 + 7;
        if (__OFADD__(v22, 7)) {
          goto LABEL_54;
        }
        unint64_t v8 = v4 + 8;
        if (v7 < 0) {
          uint64_t v7 = v22 + 14;
        }
        uint64_t v9 = v7 >> 3;
        uint64_t v11 = v9 - 1;
        BOOL v10 = v9 < 1;
        uint64_t v12 = v9 + 62;
        if (!v10) {
          uint64_t v12 = v11;
        }
        *(void *)((char *)&v8[v23 + 8] + (v12 & 0xFFFFFFFFFFFFFFC0)) = v20;
        uint64_t v13 = v4[1];
        uint64_t v14 = v13 + 7;
        if (v13 >= 0) {
          uint64_t v14 = v4[1];
        }
        uint64_t v15 = v13 - (v14 & 0xFFFFFFFFFFFFFFF8);
        if (v15 >= 0) {
          char v16 = 1 << v15;
        }
        else {
          char v16 = 0;
        }
        *((unsigned char *)v8 + (v14 >> 3)) |= v16;
        uint64_t v17 = v4[1];
        BOOL v18 = __OFADD__(v17, 1);
        uint64_t v19 = v17 + 1;
        if (v18) {
          goto LABEL_51;
        }
      }
      v4[1] = v19;
      v6 += 16;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    __break(1u);
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
  }
}

uint64_t sub_220831E80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22083217C(a1, a2, a3);
}

uint64_t sub_220831E98(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_22093E9A0();
  uint64_t v8 = result;
  if (v2)
  {
    unint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_220827238(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_220831F30(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_220831F8C()
{
  unint64_t result = qword_267F18598;
  if (!qword_267F18598)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267F18590);
    sub_220832008();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F18598);
  }
  return result;
}

unint64_t sub_220832008()
{
  unint64_t result = qword_267F185A0;
  if (!qword_267F185A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F185A0);
  }
  return result;
}

uint64_t sub_22083205C(uint64_t result, int64_t a2)
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  unint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v6 = result;
  int64_t v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    unint64_t v4 = sub_22081B820(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F188C8);
  unint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_19;
  }
  uint64_t v12 = v4[2];
  BOOL v13 = __OFSUB__(v12, a2);
  uint64_t v14 = v12 - a2;
  if (v13) {
    goto LABEL_25;
  }
  uint64_t v15 = (char *)&v4[4 * a2 + 4];
  if (v6 != a2 || &v4[4 * v6 + 4] >= (void *)&v15[32 * v14]) {
    unint64_t result = (uint64_t)memmove(&v4[4 * v6 + 4], v15, 32 * v14);
  }
  uint64_t v16 = v4[2];
  BOOL v13 = __OFADD__(v16, v8);
  uint64_t v17 = v16 - v7;
  if (!v13)
  {
    uint64_t v4[2] = v17;
LABEL_19:
    *(void *)uint64_t v2 = v4;
    return result;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_22083217C(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = 0;
  unint64_t v5 = *(void *)(result + 16);
  uint64_t v6 = result + 56;
  unint64_t v20 = v5;
  uint64_t v21 = MEMORY[0x263F8EE78];
  uint64_t v19 = result + 56;
LABEL_2:
  if (v4 > v5) {
    unint64_t v5 = v4;
  }
  uint64_t v7 = -(uint64_t)v5;
  unint64_t v8 = v4 + 1;
  int64_t v9 = (uint64_t *)(v6 + 32 * v4);
  while (1)
  {
    if (v23 + v8 == 1) {
      return v21;
    }
    unint64_t v4 = v8++;
    if (v7 + v8 == 2) {
      break;
    }
    uint64_t v10 = *(v9 - 3);
    uint64_t v11 = *(v9 - 2);
    uint64_t v13 = *(v9 - 1);
    uint64_t v12 = *v9;
    if (v10 == a2 && v11 == a3)
    {
      uint64_t v10 = a2;
      uint64_t v11 = a3;
LABEL_14:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v15 = v21;
      unint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        unint64_t result = (uint64_t)sub_220826CB8(0, *(void *)(v21 + 16) + 1, 1);
        uint64_t v15 = v21;
      }
      unint64_t v17 = *(void *)(v15 + 16);
      unint64_t v16 = *(void *)(v15 + 24);
      if (v17 >= v16 >> 1)
      {
        unint64_t result = (uint64_t)sub_220826CB8((void *)(v16 > 1), v17 + 1, 1);
        uint64_t v15 = v21;
      }
      *(void *)(v15 + 16) = v17 + 1;
      uint64_t v21 = v15;
      BOOL v18 = (void *)(v15 + 32 * v17);
      v18[4] = v10;
      uint64_t v18[5] = v11;
      v18[6] = v13;
      v18[7] = v12;
      uint64_t v6 = v19;
      unint64_t v5 = v20;
      goto LABEL_2;
    }
    v9 += 4;
    unint64_t result = sub_22093F250();
    if (result) {
      goto LABEL_14;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2208322FC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413C8);
  uint64_t v3 = swift_allocObject();
  sub_22081A844(v2, v31);
  unint64_t v4 = (uint64_t *)v31[0];
  uint64_t v5 = v31[1];
  *(void *)(v3 + 16) = v31[0];
  *(void *)(v3 + 24) = v5;
  if (!v2) {
    return v3;
  }
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t result = swift_beginAccess();
  uint64_t v7 = (uint64_t *)(a1 + 40);
  while (v4)
  {
    uint64_t v11 = *(v7 - 1);
    uint64_t v10 = *v7;
    uint64_t v8 = *v4;
    uint64_t v12 = v4[1];
    if (v12 >= *v4)
    {
      BOOL v25 = __OFADD__(v12, 1);
      uint64_t v27 = v12 + 1;
      if (v25)
      {
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
        break;
      }
      if (v8 < v27)
      {
        if (v8 + 0x4000000000000000 < 0) {
          goto LABEL_36;
        }
        if (2 * v8 <= v27) {
          uint64_t v8 = v27;
        }
        else {
          v8 *= 2;
        }
      }
      swift_bridgeObjectRetain();
      sub_22088F904((uint64_t)v4, v8, v30);
      sub_220890508(v4);
      unint64_t v4 = (uint64_t *)v30[0];
      uint64_t v9 = v30[1];
      *(void *)(v3 + 16) = v30[0];
      *(void *)(v3 + 24) = v9;
      sub_220890D48(v11, v10, v4);
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      if (v10)
      {
        uint64_t v13 = v8 + 7;
        if (__OFADD__(v8, 7)) {
          goto LABEL_35;
        }
        uint64_t v14 = v4 + 8;
        if (v13 < 0) {
          uint64_t v13 = v8 + 14;
        }
        uint64_t v15 = v13 >> 3;
        uint64_t v17 = v15 - 1;
        BOOL v16 = v15 < 1;
        uint64_t v18 = v15 + 62;
        if (!v16) {
          uint64_t v18 = v17;
        }
        unint64_t v19 = (unint64_t)&v14[2 * v12] + (v18 & 0xFFFFFFFFFFFFFFC0);
        *(void *)(v19 + 64) = v11;
        *(void *)(v19 + 72) = v10;
        uint64_t v20 = v4[1];
        uint64_t v21 = v20 + 7;
        if (v20 >= 0) {
          uint64_t v21 = v4[1];
        }
        uint64_t v22 = v20 - (v21 & 0xFFFFFFFFFFFFFFF8);
        if (v22 >= 0) {
          char v23 = 1 << v22;
        }
        else {
          char v23 = 0;
        }
        *((unsigned char *)v14 + (v21 >> 3)) |= v23;
        uint64_t v24 = v4[1];
        BOOL v25 = __OFADD__(v24, 1);
        uint64_t v26 = v24 + 1;
        if (v25) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v28 = v4[2];
        BOOL v25 = __OFADD__(v28, 1);
        uint64_t v29 = v28 + 1;
        if (v25) {
          goto LABEL_37;
        }
        uint64_t v4[2] = v29;
        BOOL v25 = __OFADD__(v12, 1);
        uint64_t v26 = v12 + 1;
        if (v25) {
          goto LABEL_34;
        }
      }
      v4[1] = v26;
      uint64_t result = swift_bridgeObjectRetain();
    }
    v7 += 2;
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      swift_release();
      return v3;
    }
  }
  __break(1u);
  return result;
}

void sub_220832520(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413D0);
  uint64_t v3 = swift_allocObject();
  sub_22081AB44(v2, v39);
  unint64_t v4 = (uint64_t *)v39[0];
  uint64_t v5 = v39[1];
  *(void *)(v3 + 16) = v39[0];
  *(void *)(v3 + 24) = v5;
  if (v2)
  {
    swift_bridgeObjectRetain();
    swift_beginAccess();
    uint64_t v6 = (unsigned char *)(a1 + 40);
    while (v4)
    {
      uint64_t v19 = *((void *)v6 - 1);
      char v20 = *v6;
      uint64_t v21 = *v4;
      uint64_t v22 = v4[1];
      if (v22 >= *v4)
      {
        BOOL v17 = __OFADD__(v22, 1);
        uint64_t v25 = v22 + 1;
        if (v17)
        {
          __break(1u);
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
          break;
        }
        if (v21 < v25)
        {
          if (v21 + 0x4000000000000000 < 0) {
            goto LABEL_52;
          }
          if (2 * v21 <= v25) {
            uint64_t v21 = v25;
          }
          else {
            v21 *= 2;
          }
        }
        sub_22088F714((uint64_t)v4, v21, v38);
        if (v4[1] < 0) {
          goto LABEL_48;
        }
        MEMORY[0x223C6B140](v4, -1, -1);
        unint64_t v4 = (uint64_t *)v38[0];
        uint64_t v26 = v38[1];
        *(void *)(v3 + 16) = v38[0];
        *(void *)(v3 + 24) = v26;
        if (v20)
        {
          if (!v4) {
            goto LABEL_56;
          }
          uint64_t v27 = v4[2];
          BOOL v17 = __OFADD__(v27, 1);
          uint64_t v28 = v27 + 1;
          if (v17) {
            goto LABEL_53;
          }
          uint64_t v4[2] = v28;
        }
        else
        {
          if (!v4) {
            goto LABEL_57;
          }
          uint64_t v29 = *v4 + 7;
          if (__OFADD__(*v4, 7)) {
            goto LABEL_54;
          }
          uint64_t v30 = v4 + 8;
          if (v29 < 0) {
            uint64_t v29 = *v4 + 14;
          }
          uint64_t v31 = v29 >> 3;
          uint64_t v32 = v31 - 1;
          BOOL v10 = v31 < 1;
          uint64_t v33 = v31 + 62;
          if (!v10) {
            uint64_t v33 = v32;
          }
          uint64_t v34 = v4[1];
          *(void *)((char *)&v30[v34 + 8] + (v33 & 0xFFFFFFFFFFFFFFC0)) = v19;
          uint64_t v35 = v34 - (v33 & 0xFFFFFFFFFFFFFFF8);
          if (v35 >= 0) {
            char v36 = 1 << v35;
          }
          else {
            char v36 = 0;
          }
          *((unsigned char *)v30 + v34 / 8) |= v36;
        }
        uint64_t v37 = v4[1];
        BOOL v17 = __OFADD__(v37, 1);
        uint64_t v18 = v37 + 1;
        if (v17) {
          goto LABEL_49;
        }
      }
      else if (*v6)
      {
        uint64_t v23 = v4[2];
        BOOL v17 = __OFADD__(v23, 1);
        uint64_t v24 = v23 + 1;
        if (v17) {
          goto LABEL_51;
        }
        uint64_t v4[2] = v24;
        BOOL v17 = __OFADD__(v22, 1);
        uint64_t v18 = v22 + 1;
        if (v17) {
          goto LABEL_47;
        }
      }
      else
      {
        uint64_t v7 = v21 + 7;
        if (__OFADD__(v21, 7)) {
          goto LABEL_50;
        }
        uint64_t v8 = v4 + 8;
        if (v7 < 0) {
          uint64_t v7 = v21 + 14;
        }
        uint64_t v9 = v7 >> 3;
        uint64_t v11 = v9 - 1;
        BOOL v10 = v9 < 1;
        uint64_t v12 = v9 + 62;
        if (!v10) {
          uint64_t v12 = v11;
        }
        *(void *)((char *)&v8[v22 + 8] + (v12 & 0xFFFFFFFFFFFFFFC0)) = v19;
        uint64_t v13 = v22 / 8;
        uint64_t v14 = v22 - (v12 & 0xFFFFFFFFFFFFFFF8);
        if (v14 >= 0) {
          char v15 = 1 << v14;
        }
        else {
          char v15 = 0;
        }
        *((unsigned char *)v8 + v13) |= v15;
        uint64_t v16 = v4[1];
        BOOL v17 = __OFADD__(v16, 1);
        uint64_t v18 = v16 + 1;
        if (v17) {
          goto LABEL_47;
        }
      }
      v4[1] = v18;
      v6 += 16;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    __break(1u);
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
  }
}

uint64_t sub_2208327C8(uint64_t a1)
{
  return sub_220833430(a1, &qword_267F185E0, (void (*)(void *__return_ptr, uint64_t *, uint64_t, uint64_t))sub_22088F900, sub_2208904FC, (void (*)(uint64_t, uint64_t *, uint64_t))sub_220890C88);
}

void sub_220832810(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41120);
  uint64_t v3 = swift_allocObject();
  sub_22081A9D0(v2, v38);
  unint64_t v4 = (uint64_t *)v38[0];
  uint64_t v5 = v38[1];
  *(void *)(v3 + 16) = v38[0];
  *(void *)(v3 + 24) = v5;
  if (v2)
  {
    swift_bridgeObjectRetain();
    swift_beginAccess();
    uint64_t v6 = 0;
    while (v4)
    {
      int v19 = *(unsigned __int8 *)(a1 + v6 + 32);
      uint64_t v20 = *v4;
      uint64_t v21 = v4[1];
      if (v21 >= *v4)
      {
        BOOL v17 = __OFADD__(v21, 1);
        uint64_t v24 = v21 + 1;
        if (v17)
        {
          __break(1u);
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
          break;
        }
        if (v20 < v24)
        {
          if (v20 + 0x4000000000000000 < 0) {
            goto LABEL_52;
          }
          if (2 * v20 <= v24) {
            uint64_t v20 = v24;
          }
          else {
            v20 *= 2;
          }
        }
        sub_22088FD6C((uint64_t)v4, v20, v37);
        if (v4[1] < 0) {
          goto LABEL_48;
        }
        MEMORY[0x223C6B140](v4, -1, -1);
        unint64_t v4 = (uint64_t *)v37[0];
        uint64_t v25 = v37[1];
        *(void *)(v3 + 16) = v37[0];
        *(void *)(v3 + 24) = v25;
        if (v19 == 2)
        {
          if (!v4) {
            goto LABEL_56;
          }
          uint64_t v26 = v4[2];
          BOOL v17 = __OFADD__(v26, 1);
          uint64_t v27 = v26 + 1;
          if (v17) {
            goto LABEL_53;
          }
          uint64_t v4[2] = v27;
        }
        else
        {
          if (!v4) {
            goto LABEL_57;
          }
          uint64_t v28 = *v4 + 7;
          if (__OFADD__(*v4, 7)) {
            goto LABEL_54;
          }
          uint64_t v29 = v4 + 8;
          if (v28 < 0) {
            uint64_t v28 = *v4 + 14;
          }
          uint64_t v30 = v28 >> 3;
          uint64_t v31 = v30 - 1;
          BOOL v10 = v30 < 1;
          uint64_t v32 = v30 + 62;
          if (!v10) {
            uint64_t v32 = v31;
          }
          uint64_t v33 = v4[1];
          *((unsigned char *)v29 + v33 + (v32 & 0xFFFFFFFFFFFFFFC0) + 64) = v19 & 1;
          uint64_t v34 = v33 - (v32 & 0xFFFFFFFFFFFFFFF8);
          if (v34 >= 0) {
            char v35 = 1 << v34;
          }
          else {
            char v35 = 0;
          }
          *((unsigned char *)v29 + v33 / 8) |= v35;
        }
        uint64_t v36 = v4[1];
        BOOL v17 = __OFADD__(v36, 1);
        uint64_t v18 = v36 + 1;
        if (v17) {
          goto LABEL_49;
        }
      }
      else if (v19 == 2)
      {
        uint64_t v22 = v4[2];
        BOOL v17 = __OFADD__(v22, 1);
        uint64_t v23 = v22 + 1;
        if (v17) {
          goto LABEL_51;
        }
        uint64_t v4[2] = v23;
        BOOL v17 = __OFADD__(v21, 1);
        uint64_t v18 = v21 + 1;
        if (v17) {
          goto LABEL_47;
        }
      }
      else
      {
        uint64_t v7 = v20 + 7;
        if (__OFADD__(v20, 7)) {
          goto LABEL_50;
        }
        uint64_t v8 = v4 + 8;
        if (v7 < 0) {
          uint64_t v7 = v20 + 14;
        }
        uint64_t v9 = v7 >> 3;
        uint64_t v11 = v9 - 1;
        BOOL v10 = v9 < 1;
        uint64_t v12 = v9 + 62;
        if (!v10) {
          uint64_t v12 = v11;
        }
        *((unsigned char *)v8 + v21 + (v12 & 0xFFFFFFFFFFFFFFC0) + 64) = v19 & 1;
        uint64_t v13 = v21 / 8;
        uint64_t v14 = v21 - (v12 & 0xFFFFFFFFFFFFFFF8);
        if (v14 >= 0) {
          char v15 = 1 << v14;
        }
        else {
          char v15 = 0;
        }
        *((unsigned char *)v8 + v13) |= v15;
        uint64_t v16 = v4[1];
        BOOL v17 = __OFADD__(v16, 1);
        uint64_t v18 = v16 + 1;
        if (v17) {
          goto LABEL_47;
        }
      }
      v4[1] = v18;
      if (v2 == ++v6)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    __break(1u);
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
  }
}

void sub_220832AC8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18898);
  uint64_t v3 = swift_allocObject();
  sub_22081A908(v2, v39);
  unint64_t v4 = (uint64_t *)v39[0];
  uint64_t v5 = v39[1];
  *(void *)(v3 + 16) = v39[0];
  *(void *)(v3 + 24) = v5;
  if (v2)
  {
    swift_bridgeObjectRetain();
    swift_beginAccess();
    uint64_t v6 = (unsigned char *)(a1 + 36);
    while (v4)
    {
      int v19 = *((_DWORD *)v6 - 1);
      char v20 = *v6;
      uint64_t v21 = *v4;
      uint64_t v22 = v4[1];
      if (v22 >= *v4)
      {
        BOOL v17 = __OFADD__(v22, 1);
        uint64_t v25 = v22 + 1;
        if (v17)
        {
          __break(1u);
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
          break;
        }
        if (v21 < v25)
        {
          if (v21 + 0x4000000000000000 < 0) {
            goto LABEL_52;
          }
          if (2 * v21 <= v25) {
            uint64_t v21 = v25;
          }
          else {
            v21 *= 2;
          }
        }
        sub_22088FF34((uint64_t)v4, v21, v38);
        if (v4[1] < 0) {
          goto LABEL_48;
        }
        MEMORY[0x223C6B140](v4, -1, -1);
        unint64_t v4 = (uint64_t *)v38[0];
        uint64_t v26 = v38[1];
        *(void *)(v3 + 16) = v38[0];
        *(void *)(v3 + 24) = v26;
        if (v20)
        {
          if (!v4) {
            goto LABEL_56;
          }
          uint64_t v27 = v4[2];
          BOOL v17 = __OFADD__(v27, 1);
          uint64_t v28 = v27 + 1;
          if (v17) {
            goto LABEL_53;
          }
          uint64_t v4[2] = v28;
        }
        else
        {
          if (!v4) {
            goto LABEL_57;
          }
          uint64_t v29 = *v4 + 7;
          if (__OFADD__(*v4, 7)) {
            goto LABEL_54;
          }
          uint64_t v30 = v4 + 8;
          if (v29 < 0) {
            uint64_t v29 = *v4 + 14;
          }
          uint64_t v31 = v29 >> 3;
          uint64_t v32 = v31 - 1;
          BOOL v10 = v31 < 1;
          uint64_t v33 = v31 + 62;
          if (!v10) {
            uint64_t v33 = v32;
          }
          uint64_t v34 = v4[1];
          *(_DWORD *)((char *)v30 + 4 * v34 + (v33 & 0xFFFFFFFFFFFFFFC0) + 64) = v19;
          uint64_t v35 = v34 - (v33 & 0xFFFFFFFFFFFFFFF8);
          if (v35 >= 0) {
            char v36 = 1 << v35;
          }
          else {
            char v36 = 0;
          }
          *((unsigned char *)v30 + v34 / 8) |= v36;
        }
        uint64_t v37 = v4[1];
        BOOL v17 = __OFADD__(v37, 1);
        uint64_t v18 = v37 + 1;
        if (v17) {
          goto LABEL_49;
        }
      }
      else if (*v6)
      {
        uint64_t v23 = v4[2];
        BOOL v17 = __OFADD__(v23, 1);
        uint64_t v24 = v23 + 1;
        if (v17) {
          goto LABEL_51;
        }
        uint64_t v4[2] = v24;
        BOOL v17 = __OFADD__(v22, 1);
        uint64_t v18 = v22 + 1;
        if (v17) {
          goto LABEL_47;
        }
      }
      else
      {
        uint64_t v7 = v21 + 7;
        if (__OFADD__(v21, 7)) {
          goto LABEL_50;
        }
        uint64_t v8 = v4 + 8;
        if (v7 < 0) {
          uint64_t v7 = v21 + 14;
        }
        uint64_t v9 = v7 >> 3;
        uint64_t v11 = v9 - 1;
        BOOL v10 = v9 < 1;
        uint64_t v12 = v9 + 62;
        if (!v10) {
          uint64_t v12 = v11;
        }
        *(_DWORD *)((char *)v8 + 4 * v22 + (v12 & 0xFFFFFFFFFFFFFFC0) + 64) = v19;
        uint64_t v13 = v22 / 8;
        uint64_t v14 = v22 - (v12 & 0xFFFFFFFFFFFFFFF8);
        if (v14 >= 0) {
          char v15 = 1 << v14;
        }
        else {
          char v15 = 0;
        }
        *((unsigned char *)v8 + v13) |= v15;
        uint64_t v16 = v4[1];
        BOOL v17 = __OFADD__(v16, 1);
        uint64_t v18 = v16 + 1;
        if (v17) {
          goto LABEL_47;
        }
      }
      v4[1] = v18;
      v6 += 8;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    __break(1u);
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
  }
}

uint64_t sub_220832D70(uint64_t a1)
{
  uint64_t v2 = sub_22093E100();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v53 = (char *)v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD411B8);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v56 = (uint64_t)v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  BOOL v10 = (char *)v46 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41118);
  uint64_t v12 = swift_allocObject();
  sub_22081A768(v11, &v58);
  *(_OWORD *)(v12 + 16) = v58;
  if (!v11) {
    return v12;
  }
  uint64_t v13 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v46[1] = a1;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_beginAccess();
  uint64_t v51 = (uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 32);
  uint64_t v52 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  uint64_t v49 = v3 + 16;
  uint64_t v50 = v3;
  uint64_t v47 = v12;
  uint64_t v48 = v3 + 8;
  uint64_t v54 = *(void *)(v6 + 72);
  uint64_t v55 = v2;
  uint64_t v14 = (uint64_t **)(v12 + 16);
  char v15 = qword_26AD411B8;
  while (1)
  {
    int v19 = v15;
    uint64_t result = sub_220835280(v13, (uint64_t)v10, v15);
    uint64_t v21 = *v14;
    if (!*v14) {
      break;
    }
    uint64_t v16 = *v21;
    uint64_t v22 = v21[1];
    if (v22 >= *v21)
    {
      BOOL v27 = __OFADD__(v22, 1);
      uint64_t v29 = v22 + 1;
      if (v27)
      {
        __break(1u);
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
        break;
      }
      if (v16 < v29)
      {
        if (v16 + 0x4000000000000000 < 0) {
          goto LABEL_36;
        }
        if (2 * v16 <= v29) {
          uint64_t v16 = v29;
        }
        else {
          v16 *= 2;
        }
      }
      sub_22088FAF0(*v14, v16, v57);
      uint64_t v2 = v55;
      sub_2208906DC(v21);
      BOOL v17 = (void *)v57[0];
      uint64_t v18 = v57[1];
      *(void *)(v12 + 16) = v57[0];
      *(void *)(v12 + 24) = v18;
      sub_220890E2C((uint64_t)v10, v17);
    }
    else
    {
      uint64_t v23 = v2;
      uint64_t v24 = v56;
      sub_220835280((uint64_t)v10, v56, v19);
      uint64_t v25 = v24;
      uint64_t v2 = v23;
      if ((*v52)(v25, 1, v23) == 1)
      {
        uint64_t result = sub_2208352E4(v56, v19);
        uint64_t v26 = v21[2];
        BOOL v27 = __OFADD__(v26, 1);
        uint64_t v28 = v26 + 1;
        if (v27) {
          goto LABEL_34;
        }
        _OWORD v21[2] = v28;
      }
      else
      {
        uint64_t result = (*v51)(v53, v56, v23);
        uint64_t v30 = *v21 + 7;
        if (__OFADD__(*v21, 7)) {
          goto LABEL_35;
        }
        uint64_t v31 = v21 + 8;
        if (v30 < 0) {
          uint64_t v30 = *v21 + 14;
        }
        uint64_t v32 = v30 >> 3;
        uint64_t v34 = v32 - 1;
        BOOL v33 = v32 < 1;
        uint64_t v35 = v32 + 62;
        if (!v33) {
          uint64_t v35 = v34;
        }
        char v36 = v14;
        uint64_t v37 = v53;
        uint64_t v38 = v50;
        (*(void (**)(unint64_t, char *, uint64_t))(v50 + 16))((unint64_t)v31 + (v35 & 0xFFFFFFFFFFFFFFC0) + *(void *)(v50 + 72) * v21[1] + 64, v53, v55);
        uint64_t v39 = v21[1];
        uint64_t v40 = v39 + 7;
        if (v39 >= 0) {
          uint64_t v40 = v21[1];
        }
        uint64_t v41 = v39 - (v40 & 0xFFFFFFFFFFFFFFF8);
        if (v41 >= 0) {
          char v42 = 1 << v41;
        }
        else {
          char v42 = 0;
        }
        *((unsigned char *)v31 + (v40 >> 3)) |= v42;
        uint64_t v2 = v55;
        uint64_t v43 = v37;
        uint64_t v14 = v36;
        uint64_t v12 = v47;
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v43, v55);
      }
      uint64_t v44 = v21[1];
      BOOL v27 = __OFADD__(v44, 1);
      uint64_t v45 = v44 + 1;
      if (v27) {
        goto LABEL_33;
      }
      v21[1] = v45;
    }
    char v15 = v19;
    sub_2208352E4((uint64_t)v10, v19);
    v13 += v54;
    if (!--v11)
    {
      swift_bridgeObjectRelease();
      swift_release();
      return v12;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2208331B0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F188A0);
  uint64_t v3 = swift_allocObject();
  sub_22081A844(v2, v28);
  uint64_t v4 = (uint64_t *)v28[0];
  uint64_t v5 = v28[1];
  *(void *)(v3 + 16) = v28[0];
  *(void *)(v3 + 24) = v5;
  if (!v2) {
    return v3;
  }
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t result = swift_beginAccess();
  uint64_t v7 = 0;
  while (v4)
  {
    long long v11 = *(_OWORD *)(a1 + 16 * v7 + 32);
    uint64_t v8 = *v4;
    uint64_t v12 = v4[1];
    if (v12 >= *v4)
    {
      BOOL v14 = __OFADD__(v12, 1);
      uint64_t v16 = v12 + 1;
      if (v14)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
        break;
      }
      if (v8 < v16)
      {
        if (v8 + 0x4000000000000000 < 0) {
          goto LABEL_34;
        }
        if (2 * v8 <= v16) {
          uint64_t v8 = v16;
        }
        else {
          v8 *= 2;
        }
      }
      long long v9 = *(_OWORD *)(a1 + 16 * v7 + 32);
      sub_220834CD4(v11, *((unint64_t *)&v11 + 1));
      sub_22088F904((uint64_t)v4, v8, v27);
      sub_2208907D8(v4);
      uint64_t v4 = (uint64_t *)v27[0];
      uint64_t v10 = v27[1];
      *(void *)(v3 + 16) = v27[0];
      *(void *)(v3 + 24) = v10;
      sub_220891088(v9, *((unint64_t *)&v9 + 1), v4);
      uint64_t result = sub_220834944(v9, *((unint64_t *)&v9 + 1));
    }
    else
    {
      if (*((void *)&v11 + 1) >> 60 == 15)
      {
        uint64_t v13 = v4[2];
        BOOL v14 = __OFADD__(v13, 1);
        uint64_t v15 = v13 + 1;
        if (v14) {
          goto LABEL_32;
        }
        uint64_t v4[2] = v15;
      }
      else
      {
        uint64_t v17 = v8 + 7;
        if (__OFADD__(v8, 7)) {
          goto LABEL_33;
        }
        uint64_t v18 = v4 + 8;
        if (v17 < 0) {
          uint64_t v17 = v8 + 14;
        }
        uint64_t v19 = v17 >> 3;
        uint64_t v21 = v19 - 1;
        BOOL v20 = v19 < 1;
        uint64_t v22 = v19 + 62;
        if (!v20) {
          uint64_t v22 = v21;
        }
        *(_OWORD *)((char *)&v18[2 * v12 + 8] + (v22 & 0xFFFFFFFFFFFFFFC0)) = v11;
        uint64_t v23 = v12 / 8;
        uint64_t v24 = v12 - (v22 & 0xFFFFFFFFFFFFFFF8);
        if (v24 >= 0) {
          char v25 = 1 << v24;
        }
        else {
          char v25 = 0;
        }
        *((unsigned char *)v18 + v23) |= v25;
        uint64_t v12 = v4[1];
      }
      BOOL v14 = __OFADD__(v12, 1);
      uint64_t v26 = v12 + 1;
      if (v14) {
        goto LABEL_31;
      }
      v4[1] = v26;
      uint64_t result = sub_220834CD4(v11, *((unint64_t *)&v11 + 1));
    }
    if (v2 == ++v7)
    {
      swift_bridgeObjectRelease();
      swift_release();
      return v3;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2208333E8(uint64_t a1)
{
  return sub_220833430(a1, &qword_267F18808, (void (*)(void *__return_ptr, uint64_t *, uint64_t, uint64_t))sub_22088F900, sub_2208908C0, (void (*)(uint64_t, uint64_t *, uint64_t))sub_220890C88);
}

uint64_t sub_220833430(uint64_t a1, uint64_t *a2, void (*a3)(void *__return_ptr, uint64_t *, uint64_t, uint64_t), void (*a4)(uint64_t *, uint64_t), void (*a5)(uint64_t, uint64_t *, uint64_t))
{
  uint64_t v8 = *(void *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v9 = swift_allocObject();
  sub_22081AB44(v8, v34);
  uint64_t v10 = (uint64_t *)v34[0];
  uint64_t v11 = v34[1];
  *(void *)(v9 + 16) = v34[0];
  *(void *)(v9 + 24) = v11;
  if (!v8) {
    return v9;
  }
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t result = swift_beginAccess();
  uint64_t v13 = 0;
  while (v10)
  {
    uint64_t v15 = *(void *)(a1 + 8 * v13 + 32);
    uint64_t v14 = *v10;
    uint64_t v16 = v10[1];
    if (v16 >= *v10)
    {
      BOOL v27 = __OFADD__(v16, 1);
      uint64_t v29 = v16 + 1;
      if (v27)
      {
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
        break;
      }
      if (v14 < v29)
      {
        if (v14 + 0x4000000000000000 < 0) {
          goto LABEL_34;
        }
        if (2 * v14 <= v29) {
          uint64_t v14 = v29;
        }
        else {
          v14 *= 2;
        }
      }
      swift_bridgeObjectRetain();
      a3(v33, v10, v11, v14);
      a4(v10, v11);
      uint64_t v10 = (uint64_t *)v33[0];
      uint64_t v11 = v33[1];
      *(void *)(v9 + 16) = v33[0];
      *(void *)(v9 + 24) = v11;
      a5(v15, v10, v11);
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      if (v15)
      {
        uint64_t v17 = v14 + 7;
        if (__OFADD__(v14, 7)) {
          goto LABEL_33;
        }
        uint64_t v18 = v10 + 8;
        if (v17 < 0) {
          uint64_t v17 = v14 + 14;
        }
        uint64_t v19 = v17 >> 3;
        uint64_t v21 = v19 - 1;
        BOOL v20 = v19 < 1;
        uint64_t v22 = v19 + 62;
        if (!v20) {
          uint64_t v22 = v21;
        }
        *(void *)((char *)&v18[v16 + 8] + (v22 & 0xFFFFFFFFFFFFFFC0)) = v15;
        uint64_t v23 = v16 / 8;
        uint64_t v24 = v16 - (v22 & 0xFFFFFFFFFFFFFFF8);
        if (v24 >= 0) {
          char v25 = 1 << v24;
        }
        else {
          char v25 = 0;
        }
        *((unsigned char *)v18 + v23) |= v25;
        uint64_t v26 = v10[1];
        BOOL v27 = __OFADD__(v26, 1);
        uint64_t v28 = v26 + 1;
        if (v27) {
          goto LABEL_32;
        }
      }
      else
      {
        uint64_t v30 = v10[2];
        BOOL v27 = __OFADD__(v30, 1);
        uint64_t v31 = v30 + 1;
        if (v27) {
          goto LABEL_35;
        }
        _OWORD v10[2] = v31;
        BOOL v27 = __OFADD__(v16, 1);
        uint64_t v28 = v16 + 1;
        if (v27) {
          goto LABEL_32;
        }
      }
      v10[1] = v28;
      uint64_t result = swift_bridgeObjectRetain();
    }
    if (v8 == ++v13)
    {
      swift_bridgeObjectRelease();
      swift_release();
      return v9;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_220833668(uint64_t a1)
{
  return sub_220833430(a1, &qword_267F18810, (void (*)(void *__return_ptr, uint64_t *, uint64_t, uint64_t))sub_22088F900, sub_2208908CC, (void (*)(uint64_t, uint64_t *, uint64_t))sub_220890C88);
}

uint64_t sub_2208336B0(uint64_t a1)
{
  return sub_220833430(a1, &qword_267F18778, (void (*)(void *__return_ptr, uint64_t *, uint64_t, uint64_t))sub_22088F900, sub_2208909E0, (void (*)(uint64_t, uint64_t *, uint64_t))sub_220890C88);
}

uint64_t sub_2208336F8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18790);
  uint64_t v3 = swift_allocObject();
  sub_22081AA7C(v2, v31);
  uint64_t v4 = (uint64_t *)v31[0];
  uint64_t v5 = v31[1];
  *(void *)(v3 + 16) = v31[0];
  *(void *)(v3 + 24) = v5;
  if (!v2) {
    return v3;
  }
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t result = swift_beginAccess();
  uint64_t v7 = (uint64_t *)(a1 + 48);
  while (v4)
  {
    uint64_t v11 = *(v7 - 2);
    uint64_t v10 = *(v7 - 1);
    uint64_t v12 = *v7;
    uint64_t v8 = *v4;
    uint64_t v13 = v4[1];
    if (v13 >= *v4)
    {
      BOOL v25 = __OFADD__(v13, 1);
      uint64_t v27 = v13 + 1;
      if (v25)
      {
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
        break;
      }
      if (v8 < v27)
      {
        if (v8 + 0x4000000000000000 < 0) {
          goto LABEL_34;
        }
        if (2 * v8 <= v27) {
          uint64_t v8 = v27;
        }
        else {
          v8 *= 2;
        }
      }
      sub_220834DFC(*(v7 - 2));
      sub_220890120((uint64_t)v4, v8, v30);
      sub_2208908F0(v4);
      uint64_t v4 = (uint64_t *)v30[0];
      uint64_t v9 = v30[1];
      *(void *)(v3 + 16) = v30[0];
      *(void *)(v3 + 24) = v9;
      sub_2208912D0(v11, v10, v12, v4);
      uint64_t result = sub_220834E48(v11);
    }
    else
    {
      if (v11)
      {
        uint64_t v14 = v8 + 7;
        if (__OFADD__(v8, 7)) {
          goto LABEL_33;
        }
        uint64_t v15 = v4 + 8;
        if (v14 < 0) {
          uint64_t v14 = v8 + 14;
        }
        uint64_t v16 = v14 >> 3;
        uint64_t v18 = v16 - 1;
        BOOL v17 = v16 < 1;
        uint64_t v19 = v16 + 62;
        if (!v17) {
          uint64_t v19 = v18;
        }
        unint64_t v20 = (unint64_t)&v15[3 * v13] + (v19 & 0xFFFFFFFFFFFFFFC0);
        *(void *)(v20 + 64) = v11;
        *(void *)(v20 + 72) = v10;
        *(void *)(v20 + 80) = v12;
        uint64_t v21 = v13 / 8;
        uint64_t v22 = v13 - (v20 & 0xFFFFFFFFFFFFFFF8);
        if (v22 >= 0) {
          char v23 = 1 << v22;
        }
        else {
          char v23 = 0;
        }
        *((unsigned char *)v15 + v21) |= v23;
        uint64_t v24 = v4[1];
        BOOL v25 = __OFADD__(v24, 1);
        uint64_t v26 = v24 + 1;
        if (v25) {
          goto LABEL_32;
        }
      }
      else
      {
        uint64_t v28 = v4[2];
        BOOL v25 = __OFADD__(v28, 1);
        uint64_t v29 = v28 + 1;
        if (v25) {
          goto LABEL_35;
        }
        uint64_t v4[2] = v29;
        BOOL v25 = __OFADD__(v13, 1);
        uint64_t v26 = v13 + 1;
        if (v25) {
          goto LABEL_32;
        }
      }
      v4[1] = v26;
      uint64_t result = sub_220834DFC(v11);
    }
    v7 += 3;
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      swift_release();
      return v3;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_220833944(unint64_t result, int64_t a2)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v6 = result;
  unint64_t v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  unint64_t v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v9 <= *(void *)(v4 + 24) >> 1)
  {
    if (!v8) {
      goto LABEL_20;
    }
  }
  else
  {
    if (v5 <= v9) {
      int64_t v10 = v5 + v8;
    }
    else {
      int64_t v10 = v5;
    }
    uint64_t result = (unint64_t)sub_22081B4F4((char *)result, v10, 1, (char *)v4, &qword_26AD411A0);
    unint64_t v4 = result;
    if (!v8) {
      goto LABEL_20;
    }
  }
  uint64_t v11 = *(void *)(v4 + 16);
  BOOL v12 = __OFSUB__(v11, a2);
  uint64_t v13 = v11 - a2;
  if (v12) {
    goto LABEL_26;
  }
  uint64_t result = v4 + 32 + 8 * v6;
  uint64_t v14 = (const void *)(v4 + 32 + 8 * a2);
  if (v6 != a2 || result >= (unint64_t)v14 + 8 * v13) {
    uint64_t result = (unint64_t)memmove((void *)result, v14, 8 * v13);
  }
  uint64_t v15 = *(void *)(v4 + 16);
  BOOL v12 = __OFADD__(v15, v8);
  uint64_t v16 = v15 + v8;
  if (!v12)
  {
    *(void *)(v4 + 16) = v16;
LABEL_20:
    *uint64_t v2 = v4;
    return result;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_220833A54(uint64_t a1)
{
  return sub_220833430(a1, &qword_267F187A8, (void (*)(void *__return_ptr, uint64_t *, uint64_t, uint64_t))sub_22088F900, sub_2208908E4, (void (*)(uint64_t, uint64_t *, uint64_t))sub_220890C88);
}

uint64_t sub_220833A9C(uint64_t a1)
{
  return sub_220833430(a1, &qword_267F187B0, (void (*)(void *__return_ptr, uint64_t *, uint64_t, uint64_t))sub_22088F900, sub_2208908D8, (void (*)(uint64_t, uint64_t *, uint64_t))sub_220890C88);
}

uint64_t sub_220833AE4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_22093E9A0();
  uint64_t v7 = result;
  if (v2)
  {
    unint64_t v4 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v5 = *v4++;
      sub_2208273E8(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_220833B58(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  char v4 = *(unsigned char *)(a1 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220831F30(v2, v3, v4);
  return a1;
}

uint64_t sub_220833BC0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  char v4 = *(unsigned char *)(a1 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v2, v3, v4);
  return a1;
}

uint64_t sub_220833C28(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_220833C84(uint64_t a1)
{
  return a1;
}

Swift::Int sub_220833CD8(long long *a1)
{
  Swift::Int v2 = *((void *)a1 + 6);
  Swift::Int v3 = *((void *)a1 + 7);
  if (v2 < v3)
  {
    uint64_t v4 = 0;
    Swift::Int result = *((void *)a1 + 6);
    while (!__OFADD__(v4, 1))
    {
      long long v6 = a1[1];
      long long v12 = *a1;
      v13[0] = v6;
      *(_OWORD *)((char *)v13 + 9) = *(long long *)((char *)a1 + 25);
      Swift::Int result = DataFrame.Rows.index(after:)(result);
      ++v4;
      if (result == v3) {
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
    return result;
  }
  if (v3 < v2)
  {
    uint64_t v7 = 0;
    Swift::Int result = *((void *)a1 + 6);
    while (!__OFSUB__(v7--, 1))
    {
      long long v9 = a1[1];
      long long v12 = *a1;
      v13[0] = v9;
      *(_OWORD *)((char *)v13 + 9) = *(long long *)((char *)a1 + 25);
      Swift::Int result = DataFrame.Rows.index(before:)(result);
      if (result == v3) {
        goto LABEL_10;
      }
    }
    goto LABEL_15;
  }
LABEL_10:
  Swift::Int result = sub_22093E9A0();
  Swift::Int v14 = result;
  if (v2 != v3)
  {
    do
    {
      long long v10 = a1[1];
      long long v12 = *a1;
      v13[0] = v10;
      *(_OWORD *)((char *)v13 + 9) = *(long long *)((char *)a1 + 25);
      Swift::Int v11 = DataFrame.Rows.index(after:)(v2);
      sub_2208273E8((uint64_t *)&v12, v2);
      Swift::Int v2 = v11;
    }
    while (v11 != v3);
    return v14;
  }
  return result;
}

unint64_t sub_220833E00(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F186E8);
    Swift::Int v3 = (void *)sub_22093F100();
    for (unint64_t i = (void *)(a1 + 40); ; i += 2)
    {
      unsigned __int8 v5 = *((unsigned char *)i - 8);
      uint64_t v6 = *i;
      unint64_t result = sub_22081D8E4(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(unsigned char *)(v3[6] + result) = v5;
      *(void *)(v3[7] + 8 * result) = v6;
      uint64_t v9 = v3[2];
      BOOL v10 = __OFADD__(v9, 1);
      uint64_t v11 = v9 + 1;
      if (v10) {
        goto LABEL_10;
      }
      v3[2] = v11;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

unint64_t sub_220833ED8(uint64_t a1)
{
  return sub_220834010(a1, &qword_267F186D0, (uint64_t (*)(uint64_t, void))sub_22081D974);
}

unint64_t sub_220833EF8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F186B8);
    Swift::Int v3 = (void *)sub_22093F100();
    for (unint64_t i = (uint64_t *)(a1 + 40); ; i += 2)
    {
      uint64_t v5 = *((unsigned int *)i - 2);
      uint64_t v7 = *i;
      uint64_t v6 = *((unsigned __int8 *)i - 4);
      unint64_t result = sub_22081DA10(v5 | (v6 << 32));
      if (v9) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v10 = v3[6] + 8 * result;
      *(_DWORD *)uint64_t v10 = v5;
      *(unsigned char *)(v10 + 4) = v6;
      *(void *)(v3[7] + 8 * result) = v7;
      uint64_t v11 = v3[2];
      BOOL v12 = __OFADD__(v11, 1);
      uint64_t v13 = v11 + 1;
      if (v12) {
        goto LABEL_10;
      }
      v3[2] = v13;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

unint64_t sub_220833FF0(uint64_t a1)
{
  return sub_220834010(a1, &qword_267F18688, (uint64_t (*)(uint64_t, void))sub_22081DB50);
}

unint64_t sub_220834010(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t, void))
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(a2);
    uint64_t v6 = (void *)sub_22093F100();
    for (unint64_t i = (void *)(a1 + 48); ; i += 3)
    {
      uint64_t v8 = *(i - 2);
      unsigned __int8 v9 = *((unsigned char *)i - 8);
      uint64_t v10 = *i;
      unint64_t result = a3(v8, v9);
      if (v12) {
        break;
      }
      *(void *)((char *)v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v13 = v6[6] + 16 * result;
      *(void *)uint64_t v13 = v8;
      *(unsigned char *)(v13 + 8) = v9;
      *(void *)(v6[7] + 8 * result) = v10;
      uint64_t v14 = v6[2];
      BOOL v15 = __OFADD__(v14, 1);
      uint64_t v16 = v14 + 1;
      if (v15) {
        goto LABEL_10;
      }
      long long v6[2] = v16;
      if (!--v3) {
        return (unint64_t)v6;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

uint64_t sub_220834104(uint64_t result, uint64_t a2, unint64_t a3)
{
  unint64_t v3 = *(void *)(result + 16);
  if (!v3) {
    return MEMORY[0x263F8EE78];
  }
  unint64_t v5 = 0;
  uint64_t v6 = result + 56;
  uint64_t v28 = -(uint64_t)v3;
  uint64_t v7 = MEMORY[0x263F8EE78];
  uint64_t v25 = result + 56;
  unint64_t v26 = *(void *)(result + 16);
  do
  {
    uint64_t v27 = v7;
    if (v5 <= v3) {
      unint64_t v8 = v3;
    }
    else {
      unint64_t v8 = v5;
    }
    uint64_t v31 = -(uint64_t)v8;
    for (unint64_t i = (uint64_t *)(v6 + 32 * v5++); ; i += 4)
    {
      if (v31 + v5 == 1)
      {
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
        return result;
      }
      if ((a3 & 0x8000000000000000) != 0) {
        goto LABEL_27;
      }
      if (*(void *)(*(void *)a2 + 16) <= a3) {
        goto LABEL_28;
      }
      uint64_t v10 = *(i - 2);
      uint64_t v30 = *(i - 3);
      uint64_t v11 = *i;
      uint64_t v32 = *(i - 1);
      unint64_t v12 = a3;
      sub_22080B5B8(*(void *)a2 + 40 * a3 + 32, (uint64_t)v33);
      uint64_t v14 = v34;
      uint64_t v13 = v35;
      __swift_project_boxed_opaque_existential_1(v33, v34);
      uint64_t v15 = *(void *)(v13 + 8);
      uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v17 = v16(v14, v15);
      uint64_t v19 = v18;
      sub_22080B0D8((uint64_t)v33);
      if (v32 == v17 && v11 == v19) {
        break;
      }
      char v21 = sub_22093F250();
      swift_bridgeObjectRelease();
      if (v21) {
        goto LABEL_18;
      }
      swift_bridgeObjectRelease();
      unint64_t result = swift_bridgeObjectRelease();
      ++v5;
      a3 = v12;
      if (v28 + v5 == 1) {
        return v27;
      }
    }
    swift_bridgeObjectRelease();
LABEL_18:
    unint64_t result = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v7 = v27;
    uint64_t v36 = v27;
    a3 = v12;
    if ((result & 1) == 0)
    {
      unint64_t result = (uint64_t)sub_220826CB8(0, *(void *)(v27 + 16) + 1, 1);
      uint64_t v7 = v36;
    }
    unint64_t v23 = *(void *)(v7 + 16);
    unint64_t v22 = *(void *)(v7 + 24);
    if (v23 >= v22 >> 1)
    {
      unint64_t result = (uint64_t)sub_220826CB8((void *)(v22 > 1), v23 + 1, 1);
      uint64_t v7 = v36;
    }
    *(void *)(v7 + 16) = v23 + 1;
    uint64_t v24 = (void *)(v7 + 32 * v23);
    v24[4] = v30;
    v24[5] = v10;
    v24[6] = v32;
    v24[7] = v11;
    uint64_t v6 = v25;
    unint64_t v3 = v26;
  }
  while (v28 + v5);
  return v7;
}

uint64_t sub_220834364(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    return *(void *)(*(void *)(a4 + 48) + 16 * result);
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_2208343B8(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t __swift_deallocate_boxed_opaque_existential_1(uint64_t result)
{
  if ((*(_DWORD *)(*(void *)(*(void *)(result + 24) - 8) + 80) & 0x20000) != 0) {
    JUMPOUT(0x223C6B140);
  }
  return result;
}

uint64_t sub_220834424@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22081068C(a1, *(void (**)(char *))(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_2208344A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  v17[0] = a1;
  sub_22093ED30();
  uint64_t v10 = sub_22093E900();
  swift_bridgeObjectRetain();
  uint64_t WitnessTable = swift_getWitnessTable();
  Column.init<A>(name:contents:)(a2, a3, (uint64_t)v17, a5, v10, WitnessTable, v16);
  type metadata accessor for Column();
  Column.eraseToAnyColumn()((uint64_t)v17);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v12 = v6[1];
  uint64_t v13 = v6[2];
  v16[0] = *v6;
  v16[1] = v12;
  v16[2] = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v14 = sub_22080BA90(a2, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080A474(v14, (uint64_t)v17);
  return sub_22080B0D8((uint64_t)v17);
}

uint64_t sub_2208345FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Column();
  Column.eraseToAnyColumn()((uint64_t)v7);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v5 = sub_22080BA90(a2, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080A474(v5, (uint64_t)v7);
  return sub_22080B0D8((uint64_t)v7);
}

uint64_t sub_2208346E8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F188A8);
  uint64_t v3 = swift_allocObject();
  sub_22081AC08(v2, v30);
  *(_OWORD *)(v3 + 16) = v30[0];
  uint64_t v4 = (uint64_t **)(v3 + 16);
  if (!v2) {
    return v3;
  }
  uint64_t v5 = a1 + 32;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_beginAccess();
  while (1)
  {
    uint64_t result = sub_220835280(v5, (uint64_t)v30, qword_26AD40FF8);
    unsigned __int8 v9 = *v4;
    if (!*v4) {
      break;
    }
    uint64_t v6 = *v9;
    uint64_t v10 = v9[1];
    if (v10 >= *v9)
    {
      BOOL v21 = __OFADD__(v10, 1);
      uint64_t v22 = v10 + 1;
      if (v21)
      {
        __break(1u);
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
        break;
      }
      if (v6 < v22)
      {
        if (v6 + 0x4000000000000000 < 0) {
          goto LABEL_35;
        }
        if (2 * v6 <= v22) {
          uint64_t v6 = v22;
        }
        else {
          v6 *= 2;
        }
      }
      sub_22088FAEC(v29, *v4, *(void *)(v3 + 24), v6);
      sub_2208905F0(v9);
      long long v7 = v29[0];
      *(_OWORD *)(v3 + 16) = v29[0];
      sub_220890E0C((uint64_t)v30, (void *)v7, *((uint64_t *)&v7 + 1));
    }
    else
    {
      sub_220835280((uint64_t)v30, (uint64_t)&v27, qword_26AD40FF8);
      if (v28)
      {
        uint64_t result = (uint64_t)sub_220835340(&v27, v29);
        uint64_t v11 = *v9 + 7;
        if (__OFADD__(*v9, 7)) {
          goto LABEL_34;
        }
        uint64_t v12 = v9 + 8;
        if (v11 < 0) {
          uint64_t v11 = *v9 + 14;
        }
        uint64_t v13 = v11 >> 3;
        uint64_t v15 = v13 - 1;
        BOOL v14 = v13 < 1;
        uint64_t v16 = v13 + 62;
        if (!v14) {
          uint64_t v16 = v15;
        }
        sub_220835350((uint64_t)v29, (uint64_t)&v12[4 * v9[1] + 8] + (v16 & 0xFFFFFFFFFFFFFFC0));
        uint64_t v17 = v9[1];
        uint64_t v18 = v17 + 7;
        if (v17 >= 0) {
          uint64_t v18 = v9[1];
        }
        uint64_t v19 = v17 - (v18 & 0xFFFFFFFFFFFFFFF8);
        if (v19 >= 0) {
          char v20 = 1 << v19;
        }
        else {
          char v20 = 0;
        }
        *((unsigned char *)v12 + (v18 >> 3)) |= v20;
        uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v29);
      }
      else
      {
        uint64_t result = sub_2208352E4((uint64_t)&v27, qword_26AD40FF8);
        uint64_t v23 = v9[2];
        BOOL v21 = __OFADD__(v23, 1);
        uint64_t v24 = v23 + 1;
        if (v21) {
          goto LABEL_36;
        }
        uint64_t v9[2] = v24;
      }
      uint64_t v25 = v9[1];
      BOOL v21 = __OFADD__(v25, 1);
      uint64_t v26 = v25 + 1;
      if (v21) {
        goto LABEL_33;
      }
      v9[1] = v26;
    }
    sub_2208352E4((uint64_t)v30, qword_26AD40FF8);
    v5 += 32;
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      swift_release();
      return v3;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_220834944(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_22080B88C(a1, a2);
  }
  return a1;
}

_UNKNOWN **sub_220834958()
{
  return &protocol witness table for AnyColumn;
}

unint64_t sub_220834968()
{
  unint64_t result = qword_267F185D8;
  if (!qword_267F185D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F185D8);
  }
  return result;
}

unint64_t sub_2208349C4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_220816AAC(a1, a2, a3);
}

uint64_t sub_2208349DC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_220816B78(a1, a2, a3);
}

uint64_t sub_2208349F4()
{
  return 0;
}

unint64_t sub_220834A04@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_220816AAC(a1, a2, a3);
}

uint64_t sub_220834A1C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_220816B78(a1, a2, a3);
}

uint64_t sub_220834A34()
{
  return 0;
}

uint64_t sub_220834A4C()
{
  return 8;
}

void *sub_220834A58(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_220834A6C()
{
  return 0;
}

uint64_t sub_220834A84()
{
  return 0;
}

uint64_t destroy for DataFrame()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s11TabularData9DataFrameVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DataFrame(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DataFrame(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DataFrame(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DataFrame(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DataFrame()
{
  return &type metadata for DataFrame;
}

uint64_t sub_220834C90(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22093E100();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_220834CD4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_22080B7F4(a1, a2);
  }
  return a1;
}

uint64_t sub_220834CE8(uint64_t a1)
{
  return a1;
}

uint64_t sub_220834D3C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_220834DA0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_220834DFC(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_220834E48(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_220834E94(unint64_t result, int64_t a2)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v6 = result;
  unint64_t v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  unint64_t v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v9 <= *(void *)(v4 + 24) >> 1)
  {
    if (!v8) {
      goto LABEL_20;
    }
  }
  else
  {
    if (v5 <= v9) {
      int64_t v10 = v5 + v8;
    }
    else {
      int64_t v10 = v5;
    }
    uint64_t result = (unint64_t)sub_22081C5B4((char *)result, v10, 1, (char *)v4);
    unint64_t v4 = result;
    if (!v8) {
      goto LABEL_20;
    }
  }
  uint64_t v11 = *(void *)(v4 + 16);
  size_t v12 = v11 - a2;
  if (__OFSUB__(v11, a2)) {
    goto LABEL_26;
  }
  uint64_t result = v4 + 32 + v6;
  uint64_t v13 = (const void *)(v4 + 32 + a2);
  if (v6 != a2 || result >= (unint64_t)v13 + v12) {
    uint64_t result = (unint64_t)memmove((void *)result, v13, v12);
  }
  uint64_t v14 = *(void *)(v4 + 16);
  BOOL v15 = __OFADD__(v14, v8);
  uint64_t v16 = v14 + v8;
  if (!v15)
  {
    *(void *)(v4 + 16) = v16;
LABEL_20:
    *uint64_t v2 = v4;
    return result;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1Tm(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_220834FE8()
{
  return swift_release();
}

uint64_t sub_220834FF0(uint64_t a1)
{
  return a1;
}

uint64_t sub_220835024(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F188D0);
  uint64_t v3 = swift_allocObject();
  sub_22081AC08(v2, v30);
  *(_OWORD *)(v3 + 16) = v30[0];
  unint64_t v4 = (uint64_t **)(v3 + 16);
  if (!v2) {
    return v3;
  }
  uint64_t v5 = a1 + 32;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_beginAccess();
  while (1)
  {
    uint64_t result = sub_220835280(v5, (uint64_t)v30, &qword_267F188D8);
    int64_t v9 = *v4;
    if (!*v4) {
      break;
    }
    uint64_t v6 = *v9;
    uint64_t v10 = v9[1];
    if (v10 >= *v9)
    {
      BOOL v21 = __OFADD__(v10, 1);
      uint64_t v22 = v10 + 1;
      if (v21)
      {
        __break(1u);
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
        break;
      }
      if (v6 < v22)
      {
        if (v6 + 0x4000000000000000 < 0) {
          goto LABEL_35;
        }
        if (2 * v6 <= v22) {
          uint64_t v6 = v22;
        }
        else {
          v6 *= 2;
        }
      }
      sub_22088FAEC(v29, *v4, *(void *)(v3 + 24), v6);
      sub_220890AD8(v9);
      long long v7 = v29[0];
      *(_OWORD *)(v3 + 16) = v29[0];
      sub_220891450((uint64_t)v30, (void *)v7, *((uint64_t *)&v7 + 1));
    }
    else
    {
      sub_220835280((uint64_t)v30, (uint64_t)&v27, &qword_267F188D8);
      if (v28)
      {
        uint64_t result = (uint64_t)sub_220835340(&v27, v29);
        uint64_t v11 = *v9 + 7;
        if (__OFADD__(*v9, 7)) {
          goto LABEL_34;
        }
        size_t v12 = v9 + 8;
        if (v11 < 0) {
          uint64_t v11 = *v9 + 14;
        }
        uint64_t v13 = v11 >> 3;
        uint64_t v15 = v13 - 1;
        BOOL v14 = v13 < 1;
        uint64_t v16 = v13 + 62;
        if (!v14) {
          uint64_t v16 = v15;
        }
        sub_220835350((uint64_t)v29, (uint64_t)&v12[4 * v9[1] + 8] + (v16 & 0xFFFFFFFFFFFFFFC0));
        uint64_t v17 = v9[1];
        uint64_t v18 = v17 + 7;
        if (v17 >= 0) {
          uint64_t v18 = v9[1];
        }
        uint64_t v19 = v17 - (v18 & 0xFFFFFFFFFFFFFFF8);
        if (v19 >= 0) {
          char v20 = 1 << v19;
        }
        else {
          char v20 = 0;
        }
        *((unsigned char *)v12 + (v18 >> 3)) |= v20;
        uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v29);
      }
      else
      {
        uint64_t result = sub_2208352E4((uint64_t)&v27, &qword_267F188D8);
        uint64_t v23 = v9[2];
        BOOL v21 = __OFADD__(v23, 1);
        uint64_t v24 = v23 + 1;
        if (v21) {
          goto LABEL_36;
        }
        uint64_t v9[2] = v24;
      }
      uint64_t v25 = v9[1];
      BOOL v21 = __OFADD__(v25, 1);
      uint64_t v26 = v25 + 1;
      if (v21) {
        goto LABEL_33;
      }
      v9[1] = v26;
    }
    sub_2208352E4((uint64_t)v30, &qword_267F188D8);
    v5 += 32;
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      swift_release();
      return v3;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_220835280(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2208352E4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *sub_220835340(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_220835350(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t dispatch thunk of AnyColumnPrototype.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AnyColumnPrototype.name.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of AnyColumnPrototype.name.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of AnyColumnPrototype.makeColumn(capacity:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_2208353FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 16);
}

void *initializeBufferWithCopyOfBuffer for SFrameIndex(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for CSVColumnDescriptor()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for SFrameIndex(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void *assignWithTake for SFrameIndex(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SFrameIndex(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SFrameIndex(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for ColumnPrototype()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_22083555C@<X0>(Swift::Int a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  swift_bridgeObjectRetain();
  Column.init(name:capacity:)(a2, a3, a1, a4, &v11);
  type metadata accessor for Column();
  Column.eraseToAnyColumn()(a5);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_220835608()
{
  swift_bridgeObjectRetain();
  sub_22093E650();

  return swift_bridgeObjectRelease();
}

uint64_t sub_220835664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4) {
    return 1;
  }
  else {
    return sub_22093F250();
  }
}

uint64_t sub_220835684()
{
  return sub_22093F490();
}

uint64_t sub_2208356E8()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_220835718(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*sub_220835750())()
{
  return nullsub_5;
}

uint64_t sub_220835770@<X0>(Swift::Int a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_22083555C(a1, *v3, v3[1], *(void *)(a2 + 16), a3);
}

uint64_t sub_220835780()
{
  return sub_220835684();
}

uint64_t sub_220835788()
{
  return sub_220835608();
}

uint64_t sub_220835790()
{
  return sub_22093F490();
}

uint64_t sub_2208357D0(uint64_t *a1, uint64_t *a2)
{
  return sub_220835664(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_2208357E4()
{
  return swift_getWitnessTable();
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t sub_220835834(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v19 = MEMORY[0x263F8EE78];
    sub_220826E18(0, v1, 0);
    uint64_t v2 = v19;
    unint64_t v4 = (char *)(a1 + 80);
    do
    {
      int64_t v18 = v1;
      uint64_t v5 = *((void *)v4 - 6);
      uint64_t v6 = *((void *)v4 - 5);
      uint64_t v7 = *((void *)v4 - 4);
      uint64_t v8 = *((void *)v4 - 3);
      uint64_t v9 = *((void *)v4 - 2);
      uint64_t v10 = *((void *)v4 - 1);
      char v11 = *v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_220831F30(v9, v10, v11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_220831F30(v9, v10, v11);
      uint64_t v17 = v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22080B6B4(v9, v10, v11);
      unint64_t v13 = *(void *)(v19 + 16);
      unint64_t v12 = *(void *)(v19 + 24);
      unint64_t v14 = v13 + 1;
      if (v13 >= v12 >> 1)
      {
        sub_220826E18((void *)(v12 > 1), v13 + 1, 1);
        unint64_t v14 = v13 + 1;
      }
      v4 += 56;
      *(void *)(v19 + 16) = v14;
      uint64_t v15 = v19 + 56 * v13;
      *(void *)(v15 + 32) = v17;
      *(void *)(v15 + 40) = v6;
      *(void *)(v15 + 48) = v7;
      *(void *)(v15 + 56) = v8;
      *(void *)(v15 + 64) = v9;
      *(void *)(v15 + 72) = v10;
      *(unsigned char *)(v15 + 80) = v11;
      int64_t v1 = v18 - 1;
    }
    while (v18 != 1);
  }
  return v2;
}

void *DataFrameProtocol.randomSplit(by:seed:)(void *result, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, double a7)
{
  uint64_t v11 = (uint64_t)result;
  if (a4)
  {
    uint64_t v13 = MEMORY[0x263F8E298];
    return DataFrameProtocol.randomSplit<A>(by:using:)((uint64_t)result, a2, a7, a3, a5, v13, a6);
  }
  else if (a3 < 0)
  {
    __break(1u);
  }
  else
  {
    type metadata accessor for MersenneTwisterGenerator();
    swift_allocObject();
    uint64_t v14 = sub_22083691C(a3);
    sub_220836A7C();
    DataFrameProtocol.randomSplit<A>(by:using:)(v11, a2, a7, (uint64_t)&v14, a5, (uint64_t)&type metadata for SeededRandomNumberGenerator, a6);
    return (void *)swift_release();
  }
  return result;
}

void *DataFrameProtocol.randomSplit<A>(by:using:)(uint64_t a1, uint64_t a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void (*v41)(long long *__return_ptr, uint64_t, uint64_t);
  uint64_t v42;
  void *result;
  uint64_t v44;
  uint64_t v49;
  uint64_t v50;
  long long v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  long long v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;

  if (a3 <= 0.0 || a3 >= 1.0) {
    goto LABEL_47;
  }
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(a7 + 32))(&v51, a5, a7);
  long long v9 = v51;
  uint64_t v11 = v52;
  uint64_t v10 = v53;
  uint64_t v12 = v54;
  char v13 = v55;
  uint64_t v14 = v53;
  if (v55)
  {
    if (v55 == 1 && *(void *)(v53 + 16))
    {
      uint64_t v14 = *(void *)(v53 + 32);
    }
    else
    {
      sub_220883950(v53, v54, v55);
      if (v16) {
        uint64_t v14 = 0;
      }
      else {
        uint64_t v14 = v15;
      }
    }
  }
  sub_220883950(v10, v12, v13);
  uint64_t v56 = v9;
  if (v18) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = v17;
  }
  int v57 = v11;
  long long v58 = v10;
  uint64_t v59 = v12;
  uint64_t v60 = v13;
  int64_t v61 = v14;
  uint64_t v62 = v19;
  Swift::Int v20 = sub_220837AB0((uint64_t)&v56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v10, v12, v13);
  double v21 = (double)*(uint64_t *)(v20 + 16) * a3;
  if ((~*(void *)&v21 & 0x7FF0000000000000) == 0) {
    goto LABEL_44;
  }
  if (v21 <= -9.22337204e18)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  if (v21 >= 9.22337204e18)
  {
LABEL_46:
    __break(1u);
    swift_release();
    __break(1u);
LABEL_47:
    uint64_t result = (void *)sub_22093F090();
    __break(1u);
    return result;
  }
  uint64_t v22 = (uint64_t)v21;
  uint64_t v50 = MEMORY[0x263F8EE88];
  uint64_t v23 = swift_retain();
  sub_220833AE4(v23);
  swift_release();
  uint64_t v49 = v22;
  if (v22 > 0)
  {
    Swift::Int v24 = v20 + 32;
    sub_220838AEC();
    uint64_t v25 = MEMORY[0x263F8EE88];
    sub_220838B40();
    while (1)
    {
      sub_22093E350();
      uint64_t v26 = v51;
      if ((v51 & 0x8000000000000000) != 0) {
        break;
      }
      if ((unint64_t)v51 >= *(void *)(v20 + 16)) {
        goto LABEL_39;
      }
      if (!sub_220812ED8(*(void *)(v24 + 8 * v51), v25))
      {
        sub_2208273E8((uint64_t *)&v51, *(void *)(v24 + 8 * v26));
        sub_220837F88(*(void *)(v24 + 8 * v26));
        uint64_t v25 = v50;
        if (*(void *)(v50 + 16) >= v49) {
          goto LABEL_25;
        }
      }
    }
    __break(1u);
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
LABEL_25:
  swift_release();
  uint64_t v27 = swift_bridgeObjectRetain();
  uint64_t v28 = sub_2208379C8(v27);
  swift_bridgeObjectRelease();
  *(void *)&uint64_t v51 = v28;
  sub_220838094((char **)&v51);
  swift_bridgeObjectRelease();
  uint64_t v29 = *(void *)(v51 + 16);
  if (v29)
  {
    uint64_t v30 = (int64_t *)(v51 + 32);
    while (1)
    {
      int64_t v32 = *v30++;
      int64_t v31 = v32;
      uint64_t v33 = v32 + 1;
      if (__OFADD__(v32, 1)) {
        break;
      }
      if (v33 < v31) {
        goto LABEL_41;
      }
      sub_22081A204(v31, v33);
      if (!--v29) {
        goto LABEL_30;
      }
    }
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
LABEL_30:
  swift_release();
  uint64_t v34 = swift_bridgeObjectRetain();
  uint64_t v35 = sub_2208379C8(v34);
  swift_bridgeObjectRelease();
  *(void *)&uint64_t v51 = v35;
  sub_220838094((char **)&v51);
  swift_bridgeObjectRelease();
  uint64_t v36 = v51;
  uint64_t v37 = *(void *)(v51 + 16);
  if (v37)
  {
    uint64_t v38 = 0;
    while (1)
    {
      int64_t v39 = *(void *)(v36 + 8 * v38 + 32);
      uint64_t v40 = v39 + 1;
      if (__OFADD__(v39, 1)) {
        break;
      }
      if (v40 < v39) {
        goto LABEL_43;
      }
      ++v38;
      sub_22081A204(v39, v40);
      if (v37 == v38)
      {
        swift_release();
        uint64_t v37 = 0;
        goto LABEL_37;
      }
    }
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  swift_release();
LABEL_37:
  uint64_t v41 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(a7 + 24);
  v41(&v51, a5, a7);
  char v42 = v52;
  *(_OWORD *)a1 = v51;
  *(void *)(a1 + 16) = v42;
  *(_OWORD *)(a1 + 24) = 0uLL;
  *(unsigned char *)(a1 + 40) = 2;
  uint64_t result = ((void *(*)(long long *__return_ptr, uint64_t, uint64_t))v41)(&v51, a5, a7);
  uint64_t v44 = v52;
  *(_OWORD *)a2 = v51;
  *(void *)(a2 + 16) = v44;
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = v37;
  *(unsigned char *)(a2 + 40) = 2;
  return result;
}

uint64_t type metadata accessor for MersenneTwisterGenerator()
{
  return self;
}

void __swiftcall DataFrameProtocol.stratifiedSplit(on:by:randomSeed:)(Swift::tuple_TabularData_DataFrame_TabularData_DataFrame *__return_ptr retstr, Swift::String on, Swift::Double by, Swift::Int_optional randomSeed)
{
  uint64_t v8 = v7;
  uint64_t v9 = v6;
  uint64_t v10 = v4;
  uint64_t v12 = *(void *)&randomSeed.is_nil;
  Swift::Int value = randomSeed.value;
  object = on._object;
  uint64_t countAndFlagsBits = (void *)on._countAndFlagsBits;
  char v15 = v5 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41190);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_220944FB0;
  *(void *)(inited + 32) = value;
  *(void *)(inited + 40) = v12;
  swift_bridgeObjectRetain();
  DataFrameProtocol.grouped(by:)(v18, inited, v9, v8);
  swift_setDeallocating();
  swift_arrayDestroy();
  long long v26 = v18[0];
  long long v27 = v18[1];
  uint64_t v28 = v19;
  sub_22083713C(v10, v15, (uint64_t *)v18, by);
  long long v23 = v20;
  long long v24 = v21;
  uint64_t v25 = v22;
  sub_220836CD0(countAndFlagsBits);
  sub_220836CD0(object);
  uint64_t v29 = v26;
  sub_220838B94((uint64_t)&v29);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
}

uint64_t DataFrameProtocol.stratifiedSplit(on:by:randomSeed:)(void *a1, void *a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, double a8)
{
  char v12 = a5 & 1;
  sub_22090A958(a3, a6, a7, (uint64_t)v26);
  long long v31 = v26[0];
  long long v32 = v26[1];
  uint64_t v33 = v27;
  sub_22083713C(a4, v12, (uint64_t *)&v20, a8);
  uint64_t v13 = v22;
  uint64_t v14 = v25;
  long long v18 = v21;
  long long v19 = v20;
  long long v16 = v24;
  long long v17 = v23;
  uint64_t v34 = v31;
  sub_220838B94((uint64_t)&v34);
  swift_release();
  swift_release();
  long long v20 = v19;
  long long v21 = v18;
  uint64_t v22 = v13;
  long long v28 = v17;
  long long v29 = v16;
  uint64_t v30 = v14;
  sub_220836CD0(a1);
  sub_220836CD0(a2);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t DataFrameProtocol.stratifiedSplit<A>(on:by:randomSeed:)(double a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v12 = a4[1];
  char v13 = a6 & 1;
  uint64_t v21 = *a4;
  uint64_t v22 = v12;
  DataFrameProtocol.grouped<A>(by:)((uint64_t)&v21, a7, a8, a9, a10, &v19);
  uint64_t v14 = type metadata accessor for RowGrouping();
  RowGrouping.randomSplit(by:seed:)(&v21, v20, a5, v13, v14, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = v20[0];
  uint64_t v16 = v20[1];
  uint64_t v17 = v20[2];
  RowGrouping.ungrouped()();
  uint64_t v21 = v15;
  uint64_t v22 = v16;
  uint64_t v23 = v17;
  RowGrouping.ungrouped()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t DataFrameProtocol.stratifiedSplit<A, B>(on:_:by:randomSeed:)(void *a1, void *a2, void *a3, uint64_t *a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, double a9, uint64_t a10, uint64_t a11, long long a12)
{
  char v15 = a6 & 1;
  uint64_t v16 = a3[1];
  uint64_t v17 = *a4;
  uint64_t v18 = a4[1];
  *(void *)&long long v37 = *a3;
  *((void *)&v37 + 1) = v16;
  *(void *)&long long v48 = v17;
  *((void *)&v48 + 1) = v18;
  DataFrameProtocol.grouped<A, B>(by:_:)((uint64_t)&v37, a7, a8, a10, a12, *((uint64_t *)&a12 + 1), v43);
  long long v48 = v43[0];
  long long v49 = v43[1];
  uint64_t v50 = v44;
  uint64_t v19 = sub_22093ED30();
  uint64_t v20 = sub_22093ED30();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v22 = swift_getWitnessTable();
  *(void *)&long long v37 = v19;
  *((void *)&v37 + 1) = v20;
  *(void *)&long long v38 = WitnessTable;
  *((void *)&v38 + 1) = v22;
  uint64_t v23 = type metadata accessor for Tuple2();
  *(void *)&long long v37 = a8;
  *((void *)&v37 + 1) = a10;
  long long v38 = a12;
  uint64_t v24 = type metadata accessor for ColumnBuilder2();
  uint64_t v25 = swift_getWitnessTable();
  uint64_t v26 = swift_getWitnessTable();
  *(void *)&long long v37 = v23;
  *((void *)&v37 + 1) = v24;
  *(void *)&long long v38 = v25;
  *((void *)&v38 + 1) = v26;
  uint64_t v27 = (void *)type metadata accessor for CustomGrouping();
  sub_22093AD44(a5, v15, v27, (uint64_t)&v37, a9);
  uint64_t v28 = v39;
  uint64_t v29 = v42;
  long long v35 = v38;
  long long v36 = v37;
  long long v33 = v41;
  long long v34 = v40;
  uint64_t v51 = v48;
  sub_220838B94((uint64_t)&v51);
  swift_release();
  swift_release();
  long long v37 = v36;
  long long v38 = v35;
  uint64_t v39 = v28;
  long long v45 = v34;
  long long v46 = v33;
  uint64_t v47 = v29;
  sub_220939EB4(v27, a1);
  sub_220939EB4(v27, a2);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t DataFrameProtocol.stratifiedSplit<A, B, C>(on:_:_:by:randomSeed:)(void *a1, void *a2, void *a3, uint64_t *a4, uint64_t *a5, uint64_t a6, char a7, uint64_t a8, double a9, long long a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  char v39 = a7 & 1;
  uint64_t v16 = a3[1];
  uint64_t v17 = *a4;
  uint64_t v18 = a4[1];
  uint64_t v19 = *a5;
  uint64_t v20 = a5[1];
  *(void *)&long long v43 = *a3;
  *((void *)&v43 + 1) = v16;
  *(void *)&long long v54 = v17;
  *((void *)&v54 + 1) = v18;
  *(void *)&long long v51 = v19;
  *((void *)&v51 + 1) = v20;
  DataFrameProtocol.grouped<A, B, C>(by:_:_:)((uint64_t)&v43, a8, a10, *((uint64_t *)&a10 + 1), a11, a12, v49, a13, a14, a15);
  long long v54 = v49[0];
  long long v55 = v49[1];
  uint64_t v56 = v50;
  uint64_t v21 = sub_22093ED30();
  uint64_t v22 = sub_22093ED30();
  uint64_t v23 = sub_22093ED30();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v25 = swift_getWitnessTable();
  uint64_t v26 = swift_getWitnessTable();
  *(void *)&long long v43 = v21;
  *((void *)&v43 + 1) = v22;
  *(void *)&long long v44 = v23;
  *((void *)&v44 + 1) = WitnessTable;
  uint64_t v45 = v25;
  *(void *)&long long v46 = v26;
  uint64_t v27 = type metadata accessor for Tuple3();
  long long v43 = a10;
  *(void *)&long long v44 = a11;
  *((void *)&v44 + 1) = a13;
  uint64_t v45 = a14;
  *(void *)&long long v46 = a15;
  uint64_t v28 = type metadata accessor for ColumnBuilder3();
  uint64_t v29 = swift_getWitnessTable();
  uint64_t v30 = swift_getWitnessTable();
  *(void *)&long long v43 = v27;
  *((void *)&v43 + 1) = v28;
  *(void *)&long long v44 = v29;
  *((void *)&v44 + 1) = v30;
  long long v31 = (void *)type metadata accessor for CustomGrouping();
  sub_22093AD44(a6, v39, v31, (uint64_t)&v43, a9);
  uint64_t v32 = v45;
  uint64_t v33 = v48;
  long long v40 = v44;
  long long v42 = v43;
  long long v37 = v47;
  long long v38 = v46;
  uint64_t v57 = v54;
  sub_220838B94((uint64_t)&v57);
  swift_release();
  swift_release();
  long long v43 = v42;
  long long v44 = v40;
  uint64_t v45 = v32;
  long long v51 = v38;
  long long v52 = v37;
  uint64_t v53 = v33;
  sub_220939EB4(v31, a1);
  sub_220939EB4(v31, a2);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_2208368F8()
{
}

uint64_t sub_22083691C(uint64_t a1)
{
  *(_OWORD *)(v1 + 16) = xmmword_220944FC0;
  *(_OWORD *)(v1 + 32) = xmmword_220944FD0;
  *(_OWORD *)(v1 + 48) = xmmword_220944FE0;
  *(_OWORD *)(v1 + 64) = xmmword_220944FF0;
  *(_OWORD *)(v1 + 80) = xmmword_220945000;
  *(_OWORD *)(v1 + 96) = xmmword_220945010;
  *(void *)(v1 + 112) = 0x5851F42D4C957F2DLL;
  *(void *)(v1 + 128) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F185E8);
  uint64_t result = swift_allocObject();
  uint64_t v4 = result;
  unint64_t v5 = 0;
  *(_OWORD *)(result + 16) = xmmword_220944FB0;
  *(void *)(result + 32) = a1;
  while (1)
  {
    unint64_t v6 = v5 + 1;
    if (v5 >= v5 + 1) {
      break;
    }
    unint64_t v7 = *(void *)(v4 + 8 * v5 + 32) ^ (*(void *)(v4 + 8 * v5 + 32) >> 30);
    uint64_t v8 = 0x5851F42D00000000 * v7
       + 0x4C957F2D00000000 * HIDWORD(v7)
       + 1284865837 * (*(_DWORD *)(v4 + 8 * v5 + 32) ^ (*(void *)(v4 + 8 * v5 + 32) >> 30));
    unint64_t v9 = v8 + v6;
    if (__CFADD__(v8, v6)) {
      goto LABEL_9;
    }
    unint64_t v10 = *(void *)(v4 + 24);
    if (v6 >= v10 >> 1)
    {
      uint64_t result = (uint64_t)sub_22081B3E0((char *)(v10 > 1), v5 + 2, 1, (char *)v4);
      uint64_t v4 = result;
    }
    *(void *)(v4 + 16) = v5 + 2;
    *(void *)(v4 + 8 * v5++ + 40) = v9;
    if (v5 == 623)
    {
      *(void *)(v1 + 120) = v4;
      return v1;
    }
  }
  __break(1u);
LABEL_9:
  __break(1u);
  return result;
}

unint64_t sub_220836A7C()
{
  unint64_t result = qword_267F188E0;
  if (!qword_267F188E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F188E0);
  }
  return result;
}

void sub_220836AD0()
{
  unint64_t v1 = *(void *)(v0 + 128);
  if (v1 == 624)
  {
    unint64_t v2 = 0;
    unint64_t v3 = 156;
    while (1)
    {
      uint64_t v4 = *(char **)(v0 + 120);
      unint64_t v5 = *((void *)v4 + 2);
      if (v2 >= v5) {
        break;
      }
      unint64_t v6 = v2 + 1;
      if (v2 == 623) {
        unint64_t v7 = 0;
      }
      else {
        unint64_t v7 = v2 + 1;
      }
      if (v7 >= v5) {
        goto LABEL_23;
      }
      unint64_t v8 = *(void *)&v4[8 * v7 + 32] % 0x270uLL;
      if (v8) {
        unint64_t v9 = ((v8 | ((unint64_t)*(unsigned int *)&v4[8 * v2 + 36] << 32)) >> 1) ^ 0xB5026F5AA96619E9;
      }
      else {
        unint64_t v9 = (v8 | ((unint64_t)*(unsigned int *)&v4[8 * v2 + 36] << 32)) >> 1;
      }
      if (v2 + 156 - 624 * (v3 / 0x270) >= v5) {
        goto LABEL_24;
      }
      uint64_t v10 = *(void *)&v4[8 * v2 + 1280 - 4992 * (v3 / 0x270)];
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v0 + 120) = v4;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v4 = sub_22080AB84((uint64_t)v4);
        *(void *)(v0 + 120) = v4;
      }
      if (v2 >= *((void *)v4 + 2)) {
        goto LABEL_25;
      }
      *(void *)&v4[8 * v2 + 32] = v10 ^ v9;
      *(void *)(v0 + 128) = 0;
      ++v3;
      ++v2;
      if (v6 == 624) {
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
  }
  else
  {
    if ((v1 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_19:
      unint64_t v1 = 0;
    }
    if (v1 < *(void *)(*(void *)(v0 + 120) + 16))
    {
      *(void *)(v0 + 128) = v1 + 1;
      return;
    }
  }
  __break(1u);
}

uint64_t sub_220836C98()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

unint64_t sub_220836CD0@<X0>(void *a1@<X8>)
{
  uint64_t v2 = swift_bridgeObjectRetain();
  unint64_t v3 = (void *)sub_22083894C(v2, (void (*)(long long *__return_ptr, uint64_t *, void *))sub_220838BD0);
  swift_bridgeObjectRelease();
  uint64_t v4 = v3[2];
  if (v4)
  {
    uint64_t v6 = v3[4];
    uint64_t v5 = v3[5];
    uint64_t v7 = v3[6];
    uint64_t v16 = v6;
    uint64_t v17 = v5;
    uint64_t v18 = v7;
    uint64_t v8 = v4 - 1;
    if (v4 == 1)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v12 = v3 + 9;
      do
      {
        uint64_t v13 = *v12;
        long long v14 = *((_OWORD *)v12 - 1);
        uint64_t v15 = v13;
        v11.columns._rawValue = &v14;
        DataFrame.append(rowsOf:)(v11);
        v12 += 3;
        --v8;
      }
      while (v8);
      unint64_t result = swift_bridgeObjectRelease_n();
      uint64_t v6 = v16;
      uint64_t v5 = v17;
      uint64_t v7 = v18;
    }
    *a1 = v6;
    a1[1] = v5;
    a1[2] = v7;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = MEMORY[0x263F8EE78];
    unint64_t result = sub_22080CCF4(MEMORY[0x263F8EE78]);
    *a1 = v10;
    a1[1] = v10;
    a1[2] = result;
  }
  return result;
}

uint64_t sub_220836E18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  char v9 = *(unsigned char *)(a2 + 40);
  uint64_t v10 = sub_2208EE804(v7, v8, v9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220831F30(v7, v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_22080B6B4(v7, v8, v9);
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(a3 + 8))(&v36, v11);
  uint64_t result = sub_220839E9C(v10);
  if ((v10 & 0x8000000000000000) == 0)
  {
    uint64_t v28 = (long long *)a2;
    if (!v10)
    {
LABEL_28:
      long long v27 = v28[1];
      long long v33 = *v28;
      *(_OWORD *)long long v34 = v27;
      *(_OWORD *)&v34[9] = *(long long *)((char *)v28 + 25);
      sub_220833B58((uint64_t)v28);
      DataFrame.init(_:)(&v33, a4);
      sub_22083A204((uint64_t)a4, 1);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    uint64_t v13 = 0;
    uint64_t v14 = a1 + 32;
    unint64_t v15 = *(void *)(a1 + 16);
    uint64_t v31 = 40 * v15 + 32;
    uint64_t v32 = v10;
    unint64_t v30 = v15;
    while (v13 != v10)
    {
      uint64_t v16 = (char *)v37;
      unint64_t v17 = *(void *)(v37 + 16);
      if (v15 >= v17) {
        unint64_t v18 = *(void *)(v37 + 16);
      }
      else {
        unint64_t v18 = v15;
      }
      if (v18)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v16 = sub_22080AB34((uint64_t)v16);
        }
        uint64_t v19 = 0;
        unint64_t v20 = 0;
        uint64_t v37 = (uint64_t)v16;
        while (1)
        {
          sub_220838C0C(v14 + v19, (uint64_t)&v33);
          if (*(void *)&v34[8])
          {
            sub_22093EE50();
            sub_220834CE8((uint64_t)&v33);
          }
          else
          {
            sub_2208352E4((uint64_t)&v33, &qword_267F18658);
            memset(v35, 0, sizeof(v35));
          }
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_22080AB34((uint64_t)v16);
            uint64_t v16 = (char *)result;
            uint64_t v37 = result;
          }
          if (v20 >= *((void *)v16 + 2)) {
            break;
          }
          ++v20;
          uint64_t v21 = (uint64_t)&v16[v19 + 32];
          uint64_t v22 = *(void *)&v16[v19 + 56];
          uint64_t v23 = *(void *)&v16[v19 + 64];
          __swift_mutable_project_boxed_opaque_existential_1(v21, v22);
          (*(void (**)(_OWORD *, uint64_t, uint64_t))(v23 + 24))(v35, v22, v23);
          uint64_t result = sub_2208352E4((uint64_t)v35, qword_26AD40FF8);
          uint64_t v16 = (char *)v37;
          v19 += 40;
          if (v18 == v20)
          {
            unint64_t v17 = *(void *)(v37 + 16);
            goto LABEL_21;
          }
        }
        __break(1u);
        goto LABEL_30;
      }
LABEL_21:
      if (v15 < v17)
      {
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_22080AB34((uint64_t)v16);
          uint64_t v16 = (char *)result;
        }
        uint64_t v37 = (uint64_t)v16;
        uint64_t v24 = (uint64_t)&v16[v31];
        while (v15 < *((void *)v16 + 2))
        {
          ++v15;
          uint64_t v25 = *(void *)(v24 + 24);
          uint64_t v26 = *(void *)(v24 + 32);
          __swift_mutable_project_boxed_opaque_existential_1(v24, v25);
          uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 16))(v25, v26);
          v24 += 40;
          if (v17 == v15)
          {
            uint64_t v37 = (uint64_t)v16;
            unint64_t v15 = v30;
            goto LABEL_4;
          }
        }
LABEL_30:
        __break(1u);
        break;
      }
LABEL_4:
      ++v13;
      uint64_t v10 = v32;
      if (v13 == v32) {
        goto LABEL_28;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_22083713C@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>, double a4@<D0>)
{
  uint64_t v85 = *v4;
  uint64_t v5 = v85;
  int64_t v6 = *(void *)(v85 + 16);
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (v6)
  {
    sub_220838C74((uint64_t)&v85);
    uint64_t v84 = v7;
    uint64_t result = (uint64_t)sub_220826E58(0, v6, 0);
    uint64_t v10 = v7;
    uint64_t v11 = (_OWORD *)(v5 + 40);
    do
    {
      uint64_t v12 = *((void *)v11 - 1);
      long long v13 = v11[1];
      long long v86 = *v11;
      v87[0] = v13;
      *(_OWORD *)((char *)v87 + 9) = *(_OWORD *)((char *)v11 + 25);
      if (a2)
      {
        uint64_t v14 = v10;
        swift_bridgeObjectRetain();
        uint64_t result = sub_2209372A8((uint64_t)&v76, (uint64_t)&v80, a4);
      }
      else
      {
        if (a1 < 0)
        {
          __break(1u);
          return result;
        }
        uint64_t v14 = v10;
        type metadata accessor for MersenneTwisterGenerator();
        swift_initStackObject();
        swift_bridgeObjectRetain();
        uint64_t v74 = sub_22083691C(a1);
        sub_220936A64((uint64_t)&v76, (uint64_t)&v80, &v74, a4);
        uint64_t result = swift_release();
      }
      long long v15 = v76;
      uint64_t v16 = v77;
      long long v17 = v78;
      char v18 = v79;
      long long v19 = v80;
      uint64_t v20 = v81;
      long long v21 = v82;
      char v22 = v83;
      uint64_t v10 = v14;
      unint64_t v23 = *(void *)(v14 + 16);
      unint64_t v24 = *(void *)(v10 + 24);
      uint64_t v84 = v10;
      if (v23 >= v24 >> 1)
      {
        long long v62 = v78;
        long long v63 = v76;
        long long v60 = v82;
        long long v61 = v80;
        uint64_t result = (uint64_t)sub_220826E58((void *)(v24 > 1), v23 + 1, 1);
        long long v21 = v60;
        long long v19 = v61;
        long long v17 = v62;
        long long v15 = v63;
        uint64_t v10 = v84;
      }
      *(void *)(v10 + 16) = v23 + 1;
      unint64_t v25 = v10 + 104 * v23;
      *(void *)(v25 + 32) = v12;
      *(_OWORD *)(v25 + 40) = v15;
      *(void *)(v25 + 56) = v16;
      *(_OWORD *)(v25 + 64) = v17;
      *(unsigned char *)(v25 + 80) = v18;
      *(_OWORD *)(v25 + 88) = v19;
      *(void *)(v25 + 104) = v20;
      *(_OWORD *)(v25 + 112) = v21;
      *(unsigned char *)(v25 + 128) = v22;
      uint64_t v11 = (_OWORD *)((char *)v11 + 56);
      --v6;
    }
    while (v6);
    sub_220838B94((uint64_t)&v85);
    uint64_t v7 = MEMORY[0x263F8EE78];
    int64_t v26 = *(void *)(v10 + 16);
    if (!v26) {
      goto LABEL_21;
    }
    goto LABEL_11;
  }
  uint64_t v10 = MEMORY[0x263F8EE78];
  int64_t v26 = *(void *)(MEMORY[0x263F8EE78] + 16);
  if (v26)
  {
LABEL_11:
    uint64_t v75 = v7;
    uint64_t v27 = v10;
    sub_220826E38(0, v26, 0);
    uint64_t v28 = v75;
    uint64_t v67 = v27;
    uint64_t v29 = (char *)(v27 + 80);
    int64_t v72 = v26;
    int64_t v30 = v26;
    do
    {
      uint64_t v31 = *((void *)v29 - 6);
      uint64_t v32 = *((void *)v29 - 5);
      uint64_t v33 = *((void *)v29 - 4);
      uint64_t v34 = *((void *)v29 - 3);
      uint64_t v35 = *((void *)v29 - 2);
      uint64_t v36 = *((void *)v29 - 1);
      char v37 = *v29;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v69 = v35;
      sub_220831F30(v35, v36, v37);
      uint64_t v75 = v28;
      unint64_t v39 = *(void *)(v28 + 16);
      unint64_t v38 = *(void *)(v28 + 24);
      if (v39 >= v38 >> 1)
      {
        sub_220826E38((void *)(v38 > 1), v39 + 1, 1);
        uint64_t v28 = v75;
      }
      v29 += 104;
      *(void *)(v28 + 16) = v39 + 1;
      unint64_t v40 = v28 + 56 * v39;
      *(void *)(v40 + 32) = v31;
      *(void *)(v40 + 40) = v32;
      *(void *)(v40 + 48) = v33;
      *(void *)(v40 + 56) = v34;
      *(void *)(v40 + 64) = v69;
      *(void *)(v40 + 72) = v36;
      *(unsigned char *)(v40 + 80) = v37;
      --v30;
    }
    while (v30);
    uint64_t v68 = v28;
    uint64_t v75 = MEMORY[0x263F8EE78];
    int64_t v41 = v72;
    sub_220826E38(0, v72, 0);
    uint64_t v42 = v75;
    long long v43 = (char *)(v67 + 128);
    do
    {
      uint64_t v44 = *((void *)v43 - 5);
      uint64_t v45 = *((void *)v43 - 4);
      uint64_t v46 = *((void *)v43 - 3);
      uint64_t v47 = *((void *)v43 - 2);
      uint64_t v48 = *((void *)v43 - 1);
      char v49 = *v43;
      uint64_t v70 = *((void *)v43 - 12);
      int64_t v73 = v41;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_220831F30(v47, v48, v49);
      uint64_t v75 = v42;
      unint64_t v51 = *(void *)(v42 + 16);
      unint64_t v50 = *(void *)(v42 + 24);
      if (v51 >= v50 >> 1)
      {
        sub_220826E38((void *)(v50 > 1), v51 + 1, 1);
        uint64_t v42 = v75;
      }
      v43 += 104;
      *(void *)(v42 + 16) = v51 + 1;
      uint64_t v52 = v42 + 56 * v51;
      *(void *)(v52 + 32) = v70;
      *(void *)(v52 + 40) = v44;
      *(void *)(v52 + 48) = v45;
      *(void *)(v52 + 56) = v46;
      *(void *)(v52 + 64) = v47;
      *(void *)(v52 + 72) = v48;
      *(unsigned char *)(v52 + 80) = v49;
      int64_t v41 = v73 - 1;
    }
    while (v73 != 1);
    swift_bridgeObjectRelease();
    uint64_t v53 = v68;
    goto LABEL_22;
  }
LABEL_21:
  swift_bridgeObjectRelease();
  uint64_t v42 = MEMORY[0x263F8EE78];
  uint64_t v53 = MEMORY[0x263F8EE78];
LABEL_22:
  uint64_t v55 = v64[1];
  uint64_t v54 = v64[2];
  uint64_t v57 = v64[3];
  uint64_t v56 = v64[4];
  swift_retain();
  swift_retain();
  uint64_t v58 = sub_220835834(v53);
  swift_bridgeObjectRelease();
  swift_retain();
  swift_retain();
  uint64_t v59 = sub_220835834(v42);
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v58;
  a3[1] = v55;
  a3[2] = v54;
  a3[3] = v57;
  a3[4] = v56;
  a3[5] = v59;
  a3[6] = v55;
  a3[7] = v54;
  a3[8] = v57;
  a3[9] = v56;
  return result;
}

void *sub_2208375A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F187A0);
  char v9 = (void *)swift_allocObject();
  int64_t v10 = _swift_stdlib_malloc_size(v9);
  uint64_t v11 = v10 - 32;
  if (v10 < 32) {
    uint64_t v11 = v10 - 1;
  }
  uint64_t v9[2] = v4;
  void v9[3] = 2 * (v11 >> 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_22092C4AC((uint64_t)&v14, (uint64_t)(v9 + 4), v4, a1, a2, a3, a4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v12 != v4)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v9;
}

uint64_t sub_2208376A8(uint64_t a1)
{
  uint64_t v2 = sub_2208EE804(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  if (!v2) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v3 = v2;
  if (v2 <= 0)
  {
    unint64_t v4 = (void *)MEMORY[0x263F8EE78];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F18900);
    unint64_t v4 = (void *)swift_allocObject();
    int64_t v5 = _swift_stdlib_malloc_size(v4);
    uint64_t v6 = v5 - 32;
    if (v5 < 32) {
      uint64_t v6 = v5 - 1;
    }
    uint64_t v4[2] = v3;
    v4[3] = 2 * (v6 >> 5);
  }
  uint64_t v7 = sub_22092C618((uint64_t)v12, v4 + 4, v3);
  uint64_t v8 = v12[3];
  uint64_t v9 = v12[4];
  char v10 = v13;
  sub_220833B58(a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = sub_22080B6B4(v8, v9, v10);
  if (v7 == v3) {
    return (uint64_t)v4;
  }
  __break(1u);
  return result;
}

uint64_t sub_2208377C8(void *a1)
{
  return sub_220837830(a1, (void (*)(void *, unsigned char *))sub_220833C28, (uint64_t (*)(unsigned char *, void *, uint64_t))sub_22092C798, qword_267F18908);
}

uint64_t sub_2208377FC(void *a1)
{
  return sub_220837830(a1, (void (*)(void *, unsigned char *))sub_22080B5B8, (uint64_t (*)(unsigned char *, void *, uint64_t))sub_22092C7C4, &qword_267F188F8);
}

uint64_t sub_220837830(void *a1, void (*a2)(void *, unsigned char *), uint64_t (*a3)(unsigned char *, void *, uint64_t), uint64_t *a4)
{
  uint64_t v9 = a1[3];
  uint64_t v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)(v8 + 8) + 48))(v9);
  if (!v10) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v11 = v10;
  if (v10 <= 0)
  {
    uint64_t v12 = (void *)MEMORY[0x263F8EE78];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F187A0);
    uint64_t v12 = (void *)swift_allocObject();
    int64_t v13 = _swift_stdlib_malloc_size(v12);
    uint64_t v14 = v13 - 32;
    if (v13 < 32) {
      uint64_t v14 = v13 - 1;
    }
    uint64_t v12[2] = v11;
    v12[3] = 2 * (v14 >> 5);
  }
  a2(a1, v17);
  uint64_t v15 = a3(v18, v12 + 4, v11);
  uint64_t result = sub_2208352E4((uint64_t)v18, a4);
  if (v15 == v11) {
    return (uint64_t)v12;
  }
  __break(1u);
  return result;
}

void *sub_220837958(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD411A8);
  unint64_t v4 = (void *)swift_allocObject();
  int64_t v5 = _swift_stdlib_malloc_size(v4);
  uint64_t v6 = v5 - 32;
  if (v5 < 32) {
    uint64_t v6 = v5 - 17;
  }
  uint64_t v4[2] = 1;
  v4[3] = 2 * (v6 >> 4);
  v4[4] = a1;
  v4[5] = a2;
  return v4;
}

void *sub_2208379C8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD411A0);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 25;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 3);
  uint64_t v6 = sub_22092CB70(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_220834FE8();
  if (v6 != (void *)v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

Swift::Int sub_220837AB0(uint64_t a1)
{
  Swift::Int result = *(void *)(a1 + 48);
  Swift::Int v3 = *(void *)(a1 + 56);
  long long v4 = *(_OWORD *)(a1 + 16);
  long long v17 = *(_OWORD *)a1;
  v18[0] = v4;
  *(_OWORD *)((char *)v18 + 9) = *(_OWORD *)(a1 + 25);
  if (result < v3)
  {
    uint64_t v5 = 0;
    while (1)
    {
      uint64_t v6 = v5 + 1;
      if (__OFADD__(v5, 1)) {
        break;
      }
      long long v15 = v17;
      *(_OWORD *)uint64_t v16 = v18[0];
      *(_OWORD *)&v16[9] = *(_OWORD *)((char *)v18 + 9);
      Swift::Int result = DataFrame.Rows.index(after:)(result);
      ++v5;
      if (result == v3) {
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    return result;
  }
  if (v3 < result)
  {
    uint64_t v6 = 0;
    while (!__OFSUB__(v6--, 1))
    {
      long long v15 = v17;
      *(_OWORD *)uint64_t v16 = v18[0];
      *(_OWORD *)&v16[9] = *(_OWORD *)((char *)v18 + 9);
      Swift::Int result = DataFrame.Rows.index(before:)(result);
      if (result == v3)
      {
LABEL_10:
        if (!v6) {
          return MEMORY[0x263F8EE78];
        }
        if (v6 <= 0)
        {
          uint64_t v8 = (Swift::Int *)MEMORY[0x263F8EE78];
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26AD411A0);
          uint64_t v8 = (Swift::Int *)swift_allocObject();
          int64_t v9 = _swift_stdlib_malloc_size(v8);
          uint64_t v10 = v9 - 32;
          if (v9 < 32) {
            uint64_t v10 = v9 - 25;
          }
          uint64_t v8[2] = v6;
          void v8[3] = 2 * (v10 >> 3);
        }
        sub_220833B58(a1);
        uint64_t v11 = sub_22092CD04((uint64_t)&v15, v8 + 4, v6);
        uint64_t v12 = *(void *)&v16[8];
        uint64_t v13 = *(void *)&v16[16];
        char v14 = v16[24];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        Swift::Int result = sub_22080B6B4(v12, v13, v14);
        if (v11 != v6) {
          goto LABEL_21;
        }
        return (Swift::Int)v8;
      }
    }
    goto LABEL_20;
  }
  return MEMORY[0x263F8EE78];
}

void *sub_220837C48(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41190);
  Swift::Int v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_22092CE44((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_220834FE8();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

int64_t *sub_220837D30(int64_t *result, int64_t a2)
{
  int64_t v2 = a2 - (void)result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
  }
  else
  {
    if (!v2) {
      return (int64_t *)MEMORY[0x263F8EE78];
    }
    int64_t v4 = (int64_t)result;
    if (v2 <= 0)
    {
      uint64_t v5 = (int64_t *)MEMORY[0x263F8EE78];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AD411A0);
      uint64_t v5 = (int64_t *)swift_allocObject();
      int64_t v6 = _swift_stdlib_malloc_size(v5);
      uint64_t v7 = v6 - 32;
      if (v6 < 32) {
        uint64_t v7 = v6 - 25;
      }
      v5[2] = v2;
      v5[3] = 2 * (v7 >> 3);
    }
    Swift::Int result = sub_22092CA40(v8, v5 + 4, v2, v4, a2);
    if (result == (int64_t *)v2) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_220837DF8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_22093F430();
  swift_bridgeObjectRetain();
  sub_22093E650();
  uint64_t v6 = sub_22093F490();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  uint64_t v10 = (void *)(v9 + 16 * v8);
  BOOL v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_22093F250() & 1) == 0)
  {
    uint64_t v15 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v15;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_18;
      }
      uint64_t v16 = (void *)(v9 + 16 * v8);
      BOOL v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_22093F250() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v2;
  uint64_t v19 = *v2;
  *int64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_22082933C();
    uint64_t v13 = v19;
  }
  uint64_t v14 = *(void *)(*(void *)(v13 + 48) + 16 * v8);
  sub_2208D8DD0(v8);
  *int64_t v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_220837F88(uint64_t a1)
{
  int64_t v2 = v1;
  uint64_t v4 = *v2;
  uint64_t v5 = sub_22093F420();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(v4 + 48);
  if (*(void *)(v8 + 8 * v7) != a1)
  {
    uint64_t v9 = ~v6;
    do
    {
      unint64_t v7 = (v7 + 1) & v9;
      if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        return 0;
      }
    }
    while (*(void *)(v8 + 8 * v7) != a1);
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = *v2;
  uint64_t v14 = *v2;
  *int64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_2208294F0();
    uint64_t v11 = v14;
  }
  uint64_t v12 = *(void *)(*(void *)(v11 + 48) + 8 * v7);
  sub_2208D8F98(v7);
  *int64_t v2 = v14;
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_220838094(char **a1)
{
  int64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int64_t v2 = sub_22089E454((uint64_t)v2);
  }
  uint64_t v3 = *((void *)v2 + 2);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_220838100(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_220838100(void *a1)
{
  int64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_22093F170();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_138;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v76 = 0;
      uint64_t v77 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v79 = *(void *)(v77 + 8 * i);
        uint64_t v80 = v76;
        do
        {
          uint64_t v81 = *(void *)(v77 + v80);
          if (v79 >= v81) {
            break;
          }
          if (!v77) {
            goto LABEL_142;
          }
          *(void *)(v77 + v80 + 8) = v81;
          *(void *)(v77 + v80) = v79;
          v80 -= 8;
        }
        while (v80 != -8);
        v76 += 8;
      }
    }
  }
  else
  {
    if (v3 >= 0) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = v3 + 1;
    }
    if (v3 < -1) {
      goto LABEL_137;
    }
    uint64_t v93 = result;
    uint64_t v94 = v3;
    if (v3 > 1)
    {
      uint64_t v6 = v5 >> 1;
      uint64_t result = sub_22093E8A0();
      *(void *)(result + 16) = v6;
      uint64_t v3 = v94;
      uint64_t v92 = result;
      uint64_t v96 = (char *)(result + 32);
LABEL_13:
      uint64_t v8 = 0;
      uint64_t v9 = *v2;
      char v90 = v2;
      uint64_t v91 = *v2 - 8;
      uint64_t v10 = MEMORY[0x263F8EE78];
      uint64_t v95 = *v2;
      while (1)
      {
        uint64_t v12 = v8++;
        if (v8 < v3)
        {
          uint64_t v13 = *(void *)(v9 + 8 * v8);
          uint64_t v14 = *(void *)(v9 + 8 * v12);
          uint64_t v8 = v12 + 2;
          if (v12 + 2 < v3)
          {
            uint64_t v15 = v13;
            while (1)
            {
              uint64_t v16 = *(void *)(v9 + 8 * v8);
              if (v13 < v14 == v16 >= v15) {
                break;
              }
              ++v8;
              uint64_t v15 = v16;
              if (v3 == v8)
              {
                uint64_t v8 = v3;
                break;
              }
            }
          }
          if (v13 < v14)
          {
            if (v8 < v12) {
              goto LABEL_139;
            }
            if (v12 < v8)
            {
              uint64_t v17 = v8 - 1;
              uint64_t v18 = v12;
              do
              {
                if (v18 != v17)
                {
                  if (!v9) {
                    goto LABEL_145;
                  }
                  uint64_t v19 = *(void *)(v9 + 8 * v18);
                  *(void *)(v9 + 8 * v18) = *(void *)(v9 + 8 * v17);
                  *(void *)(v9 + 8 * v17) = v19;
                }
                BOOL v58 = ++v18 < v17--;
              }
              while (v58);
            }
          }
        }
        if (v8 < v3)
        {
          if (__OFSUB__(v8, v12)) {
            goto LABEL_136;
          }
          if (v8 - v12 < v93)
          {
            uint64_t v20 = v12 + v93;
            if (__OFADD__(v12, v93)) {
              goto LABEL_140;
            }
            if (v20 >= v3) {
              uint64_t v20 = v3;
            }
            if (v20 < v12)
            {
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
              return result;
            }
            if (v8 != v20)
            {
              long long v21 = (uint64_t *)(v91 + 8 * v8);
              do
              {
                uint64_t v22 = *(void *)(v9 + 8 * v8);
                uint64_t v23 = v12;
                unint64_t v24 = v21;
                do
                {
                  uint64_t v25 = *v24;
                  if (v22 >= *v24) {
                    break;
                  }
                  if (!v9) {
                    goto LABEL_143;
                  }
                  *unint64_t v24 = v22;
                  v24[1] = v25;
                  --v24;
                  ++v23;
                }
                while (v8 != v23);
                ++v8;
                ++v21;
              }
              while (v8 != v20);
              uint64_t v8 = v20;
            }
          }
        }
        if (v8 < v12) {
          goto LABEL_131;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_22081B3EC(0, *(void *)(v10 + 16) + 1, 1, (char *)v10);
          uint64_t v10 = result;
        }
        unint64_t v27 = *(void *)(v10 + 16);
        unint64_t v26 = *(void *)(v10 + 24);
        unint64_t v11 = v27 + 1;
        uint64_t v9 = v95;
        if (v27 >= v26 >> 1)
        {
          uint64_t result = (uint64_t)sub_22081B3EC((char *)(v26 > 1), v27 + 1, 1, (char *)v10);
          uint64_t v9 = v95;
          uint64_t v10 = result;
        }
        *(void *)(v10 + 16) = v11;
        uint64_t v28 = v10 + 32;
        uint64_t v29 = (uint64_t *)(v10 + 32 + 16 * v27);
        *uint64_t v29 = v12;
        v29[1] = v8;
        if (v27)
        {
          while (1)
          {
            unint64_t v30 = v11 - 1;
            if (v11 >= 4)
            {
              unint64_t v35 = v28 + 16 * v11;
              uint64_t v36 = *(void *)(v35 - 64);
              uint64_t v37 = *(void *)(v35 - 56);
              BOOL v41 = __OFSUB__(v37, v36);
              uint64_t v38 = v37 - v36;
              if (v41) {
                goto LABEL_120;
              }
              uint64_t v40 = *(void *)(v35 - 48);
              uint64_t v39 = *(void *)(v35 - 40);
              BOOL v41 = __OFSUB__(v39, v40);
              uint64_t v33 = v39 - v40;
              char v34 = v41;
              if (v41) {
                goto LABEL_121;
              }
              unint64_t v42 = v11 - 2;
              long long v43 = (uint64_t *)(v28 + 16 * (v11 - 2));
              uint64_t v45 = *v43;
              uint64_t v44 = v43[1];
              BOOL v41 = __OFSUB__(v44, v45);
              uint64_t v46 = v44 - v45;
              if (v41) {
                goto LABEL_122;
              }
              BOOL v41 = __OFADD__(v33, v46);
              uint64_t v47 = v33 + v46;
              if (v41) {
                goto LABEL_124;
              }
              if (v47 >= v38)
              {
                uint64_t v65 = (uint64_t *)(v28 + 16 * v30);
                uint64_t v67 = *v65;
                uint64_t v66 = v65[1];
                BOOL v41 = __OFSUB__(v66, v67);
                uint64_t v68 = v66 - v67;
                if (v41) {
                  goto LABEL_130;
                }
                BOOL v58 = v33 < v68;
                goto LABEL_84;
              }
            }
            else
            {
              if (v11 != 3)
              {
                uint64_t v59 = *(void *)(v10 + 32);
                uint64_t v60 = *(void *)(v10 + 40);
                BOOL v41 = __OFSUB__(v60, v59);
                uint64_t v52 = v60 - v59;
                char v53 = v41;
                goto LABEL_78;
              }
              uint64_t v32 = *(void *)(v10 + 32);
              uint64_t v31 = *(void *)(v10 + 40);
              BOOL v41 = __OFSUB__(v31, v32);
              uint64_t v33 = v31 - v32;
              char v34 = v41;
            }
            if (v34) {
              goto LABEL_123;
            }
            unint64_t v42 = v11 - 2;
            uint64_t v48 = (uint64_t *)(v28 + 16 * (v11 - 2));
            uint64_t v50 = *v48;
            uint64_t v49 = v48[1];
            BOOL v51 = __OFSUB__(v49, v50);
            uint64_t v52 = v49 - v50;
            char v53 = v51;
            if (v51) {
              goto LABEL_125;
            }
            uint64_t v54 = (uint64_t *)(v28 + 16 * v30);
            uint64_t v56 = *v54;
            uint64_t v55 = v54[1];
            BOOL v41 = __OFSUB__(v55, v56);
            uint64_t v57 = v55 - v56;
            if (v41) {
              goto LABEL_127;
            }
            if (__OFADD__(v52, v57)) {
              goto LABEL_129;
            }
            if (v52 + v57 >= v33)
            {
              BOOL v58 = v33 < v57;
LABEL_84:
              if (v58) {
                unint64_t v30 = v42;
              }
              goto LABEL_86;
            }
LABEL_78:
            if (v53) {
              goto LABEL_126;
            }
            long long v61 = (uint64_t *)(v28 + 16 * v30);
            uint64_t v63 = *v61;
            uint64_t v62 = v61[1];
            BOOL v41 = __OFSUB__(v62, v63);
            uint64_t v64 = v62 - v63;
            if (v41) {
              goto LABEL_128;
            }
            if (v64 < v52) {
              goto LABEL_15;
            }
LABEL_86:
            unint64_t v69 = v30 - 1;
            if (v30 - 1 >= v11)
            {
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
              goto LABEL_141;
            }
            if (!v9) {
              goto LABEL_144;
            }
            uint64_t v70 = (uint64_t *)(v28 + 16 * v69);
            uint64_t v71 = *v70;
            uint64_t v72 = v28;
            int64_t v73 = (void *)(v28 + 16 * v30);
            uint64_t v74 = v73[1];
            uint64_t result = sub_220838748((char *)(v9 + 8 * *v70), (char *)(v9 + 8 * *v73), v9 + 8 * v74, v96);
            if (v1) {
              goto LABEL_114;
            }
            if (v74 < v71) {
              goto LABEL_117;
            }
            if (v30 > *(void *)(v10 + 16)) {
              goto LABEL_118;
            }
            *uint64_t v70 = v71;
            *(void *)(v72 + 16 * v69 + 8) = v74;
            unint64_t v75 = *(void *)(v10 + 16);
            if (v30 >= v75) {
              goto LABEL_119;
            }
            unint64_t v11 = v75 - 1;
            uint64_t result = (uint64_t)memmove(v73, v73 + 2, 16 * (v75 - 1 - v30));
            uint64_t v28 = v72;
            *(void *)(v10 + 16) = v75 - 1;
            uint64_t v9 = v95;
            if (v75 <= 2) {
              goto LABEL_15;
            }
          }
        }
        unint64_t v11 = 1;
LABEL_15:
        uint64_t v3 = v94;
        if (v8 >= v94)
        {
          uint64_t v7 = v92;
          int64_t v2 = v90;
          goto LABEL_103;
        }
      }
    }
    uint64_t v7 = MEMORY[0x263F8EE78];
    uint64_t v96 = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 == 1)
    {
      uint64_t v92 = MEMORY[0x263F8EE78];
      goto LABEL_13;
    }
    unint64_t v11 = *(void *)(MEMORY[0x263F8EE78] + 16);
    uint64_t v10 = MEMORY[0x263F8EE78];
LABEL_103:
    uint64_t v92 = v7;
    if (v11 >= 2)
    {
      uint64_t v82 = *v2;
      do
      {
        unint64_t v83 = v11 - 2;
        if (v11 < 2) {
          goto LABEL_132;
        }
        if (!v82) {
          goto LABEL_146;
        }
        uint64_t v84 = v10;
        uint64_t v85 = v10 + 32;
        uint64_t v86 = *(void *)(v10 + 32 + 16 * v83);
        uint64_t v87 = *(void *)(v10 + 32 + 16 * (v11 - 1) + 8);
        uint64_t result = sub_220838748((char *)(v82 + 8 * v86), (char *)(v82 + 8 * *(void *)(v85 + 16 * (v11 - 1))), v82 + 8 * v87, v96);
        if (v1) {
          break;
        }
        if (v87 < v86) {
          goto LABEL_133;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_22080AB70(v84);
          uint64_t v84 = result;
        }
        if (v83 >= *(void *)(v84 + 16)) {
          goto LABEL_134;
        }
        __int16 v88 = (void *)(v84 + 32 + 16 * v83);
        *__int16 v88 = v86;
        v88[1] = v87;
        unint64_t v89 = *(void *)(v84 + 16);
        if (v11 > v89) {
          goto LABEL_135;
        }
        uint64_t result = (uint64_t)memmove((void *)(v84 + 32 + 16 * (v11 - 1)), (const void *)(v84 + 32 + 16 * v11), 16 * (v89 - v11));
        uint64_t v10 = v84;
        *(void *)(v84 + 16) = v89 - 1;
        unint64_t v11 = v89 - 1;
      }
      while (v89 > 2);
    }
LABEL_114:
    swift_bridgeObjectRelease();
    *(void *)(v92 + 16) = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_220838748(char *__dst, char *__src, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = __src - __dst;
  int64_t v9 = __src - __dst + 7;
  if (__src - __dst >= 0) {
    int64_t v9 = __src - __dst;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)__src;
  uint64_t v12 = a3 - (void)__src + 7;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v12 = a3 - (void)__src;
  }
  uint64_t v13 = v12 >> 3;
  if (v10 >= v12 >> 3)
  {
    if (a4 != __src || &__src[8 * v13] <= a4) {
      memmove(a4, __src, 8 * v13);
    }
    uint64_t v14 = &v4[8 * v13];
    if (v7 >= v6 || v11 < 8) {
      goto LABEL_39;
    }
    uint64_t v17 = (char *)(a3 - 8);
    uint64_t v18 = v6;
    while (1)
    {
      uint64_t v19 = v17 + 8;
      uint64_t v21 = *((void *)v18 - 1);
      v18 -= 8;
      uint64_t v20 = v21;
      if (*((void *)v14 - 1) < v21) {
        break;
      }
      uint64_t v20 = *((void *)v14 - 1);
      uint64_t v18 = v6;
      if (v19 != v14)
      {
        v14 -= 8;
LABEL_35:
        *(void *)uint64_t v17 = v20;
        goto LABEL_36;
      }
      BOOL v22 = v17 >= v14;
      v14 -= 8;
      if (v22) {
        goto LABEL_35;
      }
LABEL_36:
      if (v18 > v7)
      {
        v17 -= 8;
        uint64_t v6 = v18;
        if (v14 > v4) {
          continue;
        }
      }
      uint64_t v6 = v18;
      goto LABEL_39;
    }
    if (v19 == v6 && v17 < v6) {
      goto LABEL_36;
    }
    goto LABEL_35;
  }
  if (a4 != __dst || &__dst[8 * v10] <= a4) {
    memmove(a4, __dst, 8 * v10);
  }
  uint64_t v14 = &v4[8 * v10];
  if ((unint64_t)v6 < a3 && v8 >= 8)
  {
    while (1)
    {
      uint64_t v15 = *(void *)v6;
      if (*(void *)v6 >= *(void *)v4) {
        break;
      }
      BOOL v16 = v7 == v6;
      v6 += 8;
      if (!v16) {
        goto LABEL_16;
      }
LABEL_17:
      v7 += 8;
      if (v4 >= v14 || (unint64_t)v6 >= a3) {
        goto LABEL_19;
      }
    }
    uint64_t v15 = *(void *)v4;
    BOOL v16 = v7 == v4;
    v4 += 8;
    if (v16) {
      goto LABEL_17;
    }
LABEL_16:
    *(void *)uint64_t v7 = v15;
    goto LABEL_17;
  }
LABEL_19:
  uint64_t v6 = v7;
LABEL_39:
  int64_t v23 = v14 - v4 + (v14 - v4 < 0 ? 7uLL : 0);
  if (v6 != v4 || v6 >= &v4[v23 & 0xFFFFFFFFFFFFFFF8]) {
    memmove(v6, v4, 8 * (v23 >> 3));
  }
  return 1;
}

uint64_t sub_22083894C(uint64_t a1, void (*a2)(long long *__return_ptr, uint64_t *, void *))
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v3)
  {
    uint64_t v26 = MEMORY[0x263F8EE78];
    sub_220826DF8(0, v3, 0);
    uint64_t result = v26;
    uint64_t v5 = (char *)(a1 + 80);
    do
    {
      uint64_t v18 = result;
      int64_t v20 = v3;
      uint64_t v6 = *((void *)v5 - 5);
      uint64_t v7 = *((void *)v5 - 4);
      uint64_t v8 = *((void *)v5 - 3);
      uint64_t v9 = *((void *)v5 - 2);
      uint64_t v10 = *((void *)v5 - 1);
      char v11 = *v5;
      uint64_t v21 = *((void *)v5 - 6);
      v22[0] = v6;
      v22[1] = v7;
      _OWORD v22[2] = v8;
      v22[3] = v9;
      v22[4] = v10;
      char v23 = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_220831F30(v9, v10, v11);
      a2(&v24, &v21, v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22080B6B4(v9, v10, v11);
      uint64_t result = v18;
      long long v12 = v24;
      uint64_t v13 = v25;
      uint64_t v26 = v18;
      unint64_t v15 = *(void *)(v18 + 16);
      unint64_t v14 = *(void *)(v18 + 24);
      if (v15 >= v14 >> 1)
      {
        long long v19 = v24;
        sub_220826DF8((char *)(v14 > 1), v15 + 1, 1);
        long long v12 = v19;
        uint64_t result = v26;
      }
      v5 += 56;
      *(void *)(result + 16) = v15 + 1;
      uint64_t v16 = result + 24 * v15;
      *(_OWORD *)(v16 + 32) = v12;
      *(void *)(v16 + 48) = v13;
      int64_t v3 = v20 - 1;
    }
    while (v20 != 1);
  }
  return result;
}

unint64_t sub_220838AEC()
{
  unint64_t result = qword_267F188E8;
  if (!qword_267F188E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F188E8);
  }
  return result;
}

unint64_t sub_220838B40()
{
  unint64_t result = qword_267F188F0;
  if (!qword_267F188F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F188F0);
  }
  return result;
}

uint64_t sub_220838B94(uint64_t a1)
{
  return a1;
}

ValueMetadata *type metadata accessor for SeededRandomNumberGenerator()
{
  return &type metadata for SeededRandomNumberGenerator;
}

uint64_t sub_220838BD0@<X0>(uint64_t *a1@<X0>, long long *a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t v5 = *a1;
  long long v6 = a2[1];
  long long v8 = *a2;
  v9[0] = v6;
  *(_OWORD *)((char *)v9 + 9) = *(long long *)((char *)a2 + 25);
  return sub_220836E18(v5, (uint64_t)&v8, v4, a3);
}

uint64_t sub_220838C0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18658);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_220838C74(uint64_t a1)
{
  return a1;
}

uint64_t destroy for AnyHashableBuilder()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s11TabularData18AnyHashableBuilderVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for AnyHashableBuilder(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for AnyHashableBuilder(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AnyHashableBuilder(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnyHashableBuilder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnyHashableBuilder()
{
  return &type metadata for AnyHashableBuilder;
}

uint64_t _s11TabularData26IntegerJSONColumnProcessorVwxx_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

void *_s11TabularData26IntegerJSONColumnProcessorVwcp_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *_s11TabularData26IntegerJSONColumnProcessorVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s11TabularData26IntegerJSONColumnProcessorVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SFrameIndex.Column(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SFrameIndex.Column(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for SingleColumnBuilder()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_220839084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 72);
}

uint64_t sub_22083908C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_release();
}

void *sub_220839100(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  uint64_t v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  a1[14] = a2[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *sub_2208391C8(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_retain();
  swift_release();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  swift_retain();
  swift_release();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy120_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t sub_22083932C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_release();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_release();
  return a1;
}

uint64_t sub_2208393E4(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 120)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_22083942C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for ColumnBuilder3()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2208394A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 48);
}

uint64_t initializeBufferWithCopyOfBuffer for BlockInfo(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t sub_2208394DC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_release();
}

void *sub_220839538(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *sub_2208395C0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t sub_2208396BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  return a1;
}

uint64_t sub_220839744(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_22083978C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for ColumnBuilder2()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2208397F8(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
    sub_220826C78(0, v1, 0);
    uint64_t v2 = v14;
    uint64_t v4 = (void *)(a1 + 32);
    do
    {
      uint64_t v5 = v4[3];
      uint64_t v6 = v4[4];
      __swift_project_boxed_opaque_existential_1(v4, v5);
      uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
      uint64_t v9 = v8;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_220826C78(0, *(void *)(v14 + 16) + 1, 1);
      }
      unint64_t v11 = *(void *)(v14 + 16);
      unint64_t v10 = *(void *)(v14 + 24);
      if (v11 >= v10 >> 1) {
        sub_220826C78((char *)(v10 > 1), v11 + 1, 1);
      }
      *(void *)(v14 + 16) = v11 + 1;
      uint64_t v12 = v14 + 16 * v11;
      *(void *)(v12 + 32) = v7;
      *(void *)(v12 + 40) = v9;
      v4 += 5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_220839924()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41190);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_220944FB0;
  *(void *)(v3 + 32) = v2;
  *(void *)(v3 + 40) = v1;
  swift_bridgeObjectRetain();
  return v3;
}

__n128 sub_220839984@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  swift_bridgeObjectRetain();
  Column.init(name:capacity:)(a1, a2, 0, a3, &v10);
  uint64_t v8 = v10;
  __n128 result = v11;
  *(void *)a4 = a1;
  *(void *)(a4 + 8) = a2;
  *(void *)(a4 + 16) = v8;
  *(__n128 *)(a4 + 24) = result;
  return result;
}

double sub_2208399F4(Swift::Int a1, uint64_t a2)
{
  uint64_t v4 = *(void *)v2;
  uint64_t v5 = *(void *)(v2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  Column.init(name:capacity:)(v4, v5, a1, v6, &v9);
  uint64_t v7 = v9;
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = v7;
  double result = *(double *)&v10;
  *(_OWORD *)(v2 + 24) = v10;
  return result;
}

uint64_t sub_220839A74(uint64_t a1)
{
  return Column.append(_:)(a1);
}

uint64_t sub_220839AB0(uint64_t *a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v5 = (void *)v2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v2[2] = v6;
  v2[3] = (uint64_t)v5;
  uint64_t v7 = *a1;
  uint64_t v8 = a1[1];
  uint64_t v9 = a1[2];
  uint64_t v14 = *a1;
  *(void *)&long long v15 = v8;
  *((void *)&v15 + 1) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10._uint64_t countAndFlagsBits = v6;
  v10._object = v5;
  Swift::Int_optional v16 = DataFrame.indexOfColumn(_:)(v10);
  Swift::Bool is_nil = v16.is_nil;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!is_nil)
  {
    if (a2)
    {
      DataFrame.removeColumn(_:)(v6, (uint64_t)v5, (uint64_t)&v14);
      sub_22080B0D8((uint64_t)&v14);
    }
    else
    {
      uint64_t v14 = v7;
      *(void *)&long long v15 = v8;
      *((void *)&v15 + 1) = v9;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_220839C2C(v3 + 2, v6, (uint64_t)v5, (uint64_t)&v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v14 = v3[2];
  long long v15 = *(_OWORD *)(v3 + 3);
  return DataFrame.append<A>(column:)();
}

uint64_t sub_220839C2C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a3;
  uint64_t v5 = a2;
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v32 = v6;
  uint64_t v7 = 1;
  do
  {
    swift_bridgeObjectRetain();
    sub_22093E6C0();
    sub_22093F1A0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v9 = v4;
    if (*(void *)(v6 + 16))
    {
      swift_bridgeObjectRetain();
      sub_22081D290(v5, v4);
      char v11 = v10;
      uint64_t result = swift_bridgeObjectRelease();
      if (v11) {
        continue;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v13 = swift_bridgeObjectRetain();
    uint64_t v14 = sub_220831E80(v13, v5, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int64_t v15 = *(void *)(v14 + 16);
    uint64_t v31 = v5;
    if (v15)
    {
      uint64_t v33 = v4;
      char v34 = (void *)MEMORY[0x263F8EE78];
      sub_220826C78(0, v15, 0);
      Swift::Int_optional v16 = v34;
      uint64_t v17 = (uint64_t *)(v14 + 56);
      do
      {
        uint64_t v19 = *(v17 - 1);
        uint64_t v18 = *v17;
        unint64_t v20 = v34[2];
        unint64_t v21 = v34[3];
        swift_bridgeObjectRetain();
        if (v20 >= v21 >> 1) {
          sub_220826C78((char *)(v21 > 1), v20 + 1, 1);
        }
        v34[2] = v20 + 1;
        BOOL v22 = &v34[2 * v20];
        v22[4] = v19;
        void v22[5] = v18;
        v17 += 4;
        --v15;
      }
      while (v15);
      swift_bridgeObjectRelease();
      uint64_t v9 = v33;
      uint64_t v5 = a2;
      uint64_t v4 = a3;
    }
    else
    {
      swift_bridgeObjectRelease();
      Swift::Int_optional v16 = (void *)MEMORY[0x263F8EE78];
    }
    uint64_t v6 = v32;
    uint64_t v23 = v16[2];
    if (!v23
      || (uint64_t v24 = v16[4], v25 = v16[5], swift_bridgeObjectRetain(), swift_bridgeObjectRelease(), v23 != 1)
      || !*(void *)(v32 + 16))
    {
      uint64_t result = swift_bridgeObjectRelease();
LABEL_18:
      *a1 = v31;
      a1[1] = v9;
      return result;
    }
    sub_22081D290(v24, v25);
    char v27 = v26;
    uint64_t result = swift_bridgeObjectRelease();
    if ((v27 & 1) == 0) {
      goto LABEL_18;
    }
  }
  while (!__OFADD__(v7++, 1));
  __break(1u);
  return result;
}

uint64_t sub_220839E9C(uint64_t a1)
{
  uint64_t v2 = *v1;
  int64_t v3 = *(void *)(*v1 + 16);
  uint64_t v4 = MEMORY[0x263F8EE78];
  if (v3)
  {
    uint64_t v20 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_220826CD8(0, v3, 0);
    uint64_t v6 = v2 + 32;
    uint64_t v4 = v20;
    do
    {
      sub_22083B5D0(v6, (uint64_t)v15);
      uint64_t v7 = v16;
      uint64_t v8 = v17;
      __swift_project_boxed_opaque_existential_1(v15, v16);
      (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t, uint64_t))(v8 + 32))(v18, a1, v7, v8);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_220826CD8(0, *(void *)(v4 + 16) + 1, 1);
        uint64_t v4 = v20;
      }
      unint64_t v10 = *(void *)(v4 + 16);
      unint64_t v9 = *(void *)(v4 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_220826CD8((char *)(v9 > 1), v10 + 1, 1);
        uint64_t v4 = v20;
      }
      *(void *)(v4 + 16) = v10 + 1;
      uint64_t v11 = v4 + 40 * v10;
      long long v12 = v18[0];
      long long v13 = v18[1];
      *(void *)(v11 + 64) = v19;
      *(_OWORD *)(v11 + 32) = v12;
      *(_OWORD *)(v11 + 48) = v13;
      v6 += 40;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  uint64_t result = swift_bridgeObjectRelease();
  v1[1] = v4;
  return result;
}

uint64_t sub_22083A008(uint64_t result)
{
  uint64_t v2 = v1;
  int64_t v3 = *(char **)(v1 + 8);
  unint64_t v4 = *((void *)v3 + 2);
  unint64_t v5 = *(void *)(result + 16);
  if (v5 >= v4) {
    uint64_t v6 = *((void *)v3 + 2);
  }
  else {
    uint64_t v6 = *(void *)(result + 16);
  }
  if (!v6) {
    goto LABEL_15;
  }
  uint64_t v1 = result;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_25;
  }
  while (1)
  {
    uint64_t v7 = 0;
    unint64_t v8 = 0;
    *(void *)(v2 + 8) = v3;
    int64_t v3 = (char *)(v1 + 32);
    do
    {
      sub_220838C0C((uint64_t)&v3[v7], (uint64_t)v15);
      if (v16)
      {
        sub_22093EE50();
        sub_220834CE8((uint64_t)v15);
      }
      else
      {
        sub_2208352E4((uint64_t)v15, &qword_267F18658);
        memset(v17, 0, sizeof(v17));
      }
      uint64_t v1 = *(void *)(v2 + 8);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v2 + 8) = v1;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v1 = (uint64_t)sub_22080AB34(v1);
        *(void *)(v2 + 8) = v1;
      }
      if (v8 >= *(void *)(v1 + 16))
      {
        __break(1u);
        goto LABEL_24;
      }
      ++v8;
      uint64_t v10 = *(void *)(v1 + v7 + 56);
      uint64_t v11 = *(void *)(v1 + v7 + 64);
      uint64_t v1 = __swift_mutable_project_boxed_opaque_existential_1(v1 + v7 + 32, v10);
      (*(void (**)(_OWORD *, uint64_t, uint64_t))(v11 + 24))(v17, v10, v11);
      uint64_t result = sub_2208352E4((uint64_t)v17, qword_26AD40FF8);
      v7 += 40;
    }
    while (v6 != v8);
    int64_t v3 = *(char **)(v2 + 8);
    unint64_t v4 = *((void *)v3 + 2);
LABEL_15:
    if (v5 >= v4) {
      return result;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int64_t v3 = sub_22080AB34((uint64_t)v3);
    }
    *(void *)(v2 + 8) = v3;
    uint64_t v12 = (uint64_t)&v3[40 * v5 + 32];
    while (v5 < *((void *)v3 + 2))
    {
      ++v5;
      uint64_t v13 = *(void *)(v12 + 24);
      uint64_t v14 = *(void *)(v12 + 32);
      uint64_t v1 = __swift_mutable_project_boxed_opaque_existential_1(v12, v13);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
      v12 += 40;
      if (v4 == v5)
      {
        *(void *)(v2 + 8) = v3;
        return result;
      }
    }
LABEL_24:
    __break(1u);
LABEL_25:
    int64_t v3 = sub_22080AB34((uint64_t)v3);
  }
}

uint64_t sub_22083A204(uint64_t result, char a2)
{
  int64_t v3 = v2;
  unint64_t v4 = v2[1];
  uint64_t v23 = *(void *)(v4 + 16);
  uint64_t v24 = (uint64_t *)result;
  if (v23)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      goto LABEL_22;
    }
    while (1)
    {
      uint64_t v5 = 0;
      unint64_t v6 = 0;
      v3[1] = v4;
      BOOL v22 = v3;
      while (v6 < *(void *)(*v3 + 16))
      {
        sub_22083B5D0(*v3 + v5 + 32, (uint64_t)&v25);
        uint64_t v7 = v28;
        uint64_t v8 = v29;
        unint64_t v4 = (unint64_t)__swift_project_boxed_opaque_existential_1(&v25, v28);
        uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
        uint64_t v11 = v10;
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v25);
        uint64_t v12 = (char *)v3[1];
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v3[1] = v12;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v12 = sub_22080AB34((uint64_t)v12);
          v3[1] = v12;
        }
        if (v6 >= *((void *)v12 + 2)) {
          goto LABEL_19;
        }
        uint64_t v14 = *(void *)&v12[v5 + 56];
        uint64_t v15 = *(void *)&v12[v5 + 64];
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v12[v5 + 32], v14);
        (*(void (**)(uint64_t, void *, uint64_t))(*(void *)(v15 + 8) + 16))(v9, v11, v14);
        v3[1] = v12;
        uint64_t v16 = *v24;
        int64_t v3 = (void *)v24[1];
        uint64_t v17 = v24[2];
        uint64_t v25 = *v24;
        char v26 = v3;
        uint64_t v27 = v17;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v18._uint64_t countAndFlagsBits = v9;
        v18._object = v11;
        *(Swift::Int_optional *)&long long v19 = DataFrame.indexOfColumn(_:)(v18);
        unint64_t v4 = *((void *)&v19 + 1);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v4)
        {
          swift_bridgeObjectRelease();
          goto LABEL_12;
        }
        if (a2)
        {
          unint64_t v4 = (unint64_t)v24;
          DataFrame.removeColumn(_:)(v9, (uint64_t)v11, (uint64_t)&v25);
          swift_bridgeObjectRelease();
          sub_22080B0D8((uint64_t)&v25);
LABEL_12:
          int64_t v3 = v22;
          goto LABEL_15;
        }
        uint64_t v25 = v16;
        char v26 = v3;
        uint64_t v27 = v17;
        unint64_t v4 = *((void *)v12 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v6 >= v4) {
          goto LABEL_21;
        }
        sub_22083A4CC(&v12[v5 + 32], v9, (uint64_t)v11, (uint64_t)&v25);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        int64_t v3 = v22;
        v22[1] = v12;
LABEL_15:
        uint64_t v20 = v3[1];
        if (v6 >= *(void *)(v20 + 16)) {
          goto LABEL_20;
        }
        ++v6;
        sub_22080B5B8(v20 + v5 + 32, (uint64_t)&v25);
        unint64_t v4 = (unint64_t)v24;
        DataFrame.append(column:)((uint64_t)&v25);
        uint64_t result = sub_22080B0D8((uint64_t)&v25);
        v5 += 40;
        if (v23 == v6) {
          return result;
        }
      }
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      unint64_t v4 = (unint64_t)sub_22080AB34(v4);
    }
  }
  return result;
}

uint64_t sub_22083A4CC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a3;
  uint64_t v5 = a2;
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v35 = v6;
  uint64_t v7 = 1;
  do
  {
    swift_bridgeObjectRetain();
    sub_22093E6C0();
    uint64_t v37 = v7;
    sub_22093F1A0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    uint64_t v9 = a1[3];
    uint64_t v10 = a1[4];
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)a1, v9);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 + 8) + 16))(v5, v4, v9);
    uint64_t v11 = a1[3];
    uint64_t v12 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v11);
    uint64_t v13 = (*(uint64_t (**)(uint64_t))(*(void *)(v12 + 8) + 8))(v11);
    uint64_t v15 = v13;
    uint64_t v16 = v14;
    if (!*(void *)(v6 + 16) || (sub_22081D290(v13, v14), (v17 & 1) == 0))
    {
      swift_bridgeObjectRetain();
      uint64_t v18 = swift_bridgeObjectRetain();
      uint64_t v19 = sub_220831E80(v18, v15, v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int64_t v20 = *(void *)(v19 + 16);
      if (v20)
      {
        uint64_t v38 = (void *)MEMORY[0x263F8EE78];
        sub_220826C78(0, v20, 0);
        unint64_t v21 = v38;
        BOOL v22 = (uint64_t *)(v19 + 56);
        do
        {
          uint64_t v24 = *(v22 - 1);
          uint64_t v23 = *v22;
          unint64_t v25 = v38[2];
          unint64_t v26 = v38[3];
          swift_bridgeObjectRetain();
          if (v25 >= v26 >> 1) {
            sub_220826C78((char *)(v26 > 1), v25 + 1, 1);
          }
          uint64_t v38[2] = v25 + 1;
          uint64_t v27 = &v38[2 * v25];
          v27[4] = v24;
          v27[5] = v23;
          v22 += 4;
          --v20;
        }
        while (v20);
        swift_bridgeObjectRelease();
        uint64_t v4 = a3;
        uint64_t v5 = a2;
      }
      else
      {
        swift_bridgeObjectRelease();
        unint64_t v21 = (void *)MEMORY[0x263F8EE78];
      }
      uint64_t v6 = v35;
      uint64_t v28 = v21[2];
      if (!v28)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      uint64_t v29 = v21[4];
      uint64_t v30 = v21[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v28 != 1 || !*(void *)(v35 + 16))
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      sub_22081D290(v29, v30);
      char v32 = v31;
      swift_bridgeObjectRelease();
      if ((v32 & 1) == 0) {
        return swift_bridgeObjectRelease();
      }
    }
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v7 = v37 + 1;
  }
  while (!__OFADD__(v37, 1));
  __break(1u);
  return result;
}

uint64_t sub_22083A790()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_2208397F8(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_22083A7E8(uint64_t *a1)
{
  return sub_22083A008(*a1);
}

uint64_t sub_22083A7F4()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41190);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_220945110;
  *(void *)(v5 + 32) = v2;
  *(void *)(v5 + 40) = v1;
  *(void *)(v5 + 48) = v4;
  *(void *)(v5 + 56) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v5;
}

__n128 sub_22083A86C@<Q0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8 = *a1;
  uint64_t v9 = a1[1];
  uint64_t v10 = *a2;
  uint64_t v11 = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Column.init(name:capacity:)(v8, v9, 0, a3, &v16);
  uint64_t v12 = v16;
  __n128 v15 = v17;
  Column.init(name:capacity:)(v10, v11, 0, a4, &v16);
  uint64_t v13 = v16;
  __n128 result = v17;
  *(void *)a5 = v8;
  *(void *)(a5 + 8) = v9;
  *(void *)(a5 + 16) = v10;
  *(void *)(a5 + 24) = v11;
  *(void *)(a5 + 32) = v12;
  *(__n128 *)(a5 + 40) = v15;
  *(void *)(a5 + 56) = v13;
  *(__n128 *)(a5 + 64) = result;
  return result;
}

double sub_22083A92C(Swift::Int a1, uint64_t a2)
{
  uint64_t v5 = *(void *)v2;
  uint64_t v6 = *(void *)(v2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  Column.init(name:capacity:)(v5, v6, a1, v7, &v14);
  uint64_t v8 = v14;
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = v8;
  *(_OWORD *)(v2 + 40) = v15;
  uint64_t v9 = *(void *)(v2 + 16);
  uint64_t v10 = *(void *)(v2 + 24);
  uint64_t v11 = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  Column.init(name:capacity:)(v9, v10, a1, v11, &v14);
  uint64_t v12 = v14;
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 56) = v12;
  double result = *(double *)&v15;
  *(_OWORD *)(v2 + 64) = v15;
  return result;
}

uint64_t sub_22083A9F8(uint64_t a1)
{
  type metadata accessor for Column();
  Column.append(_:)(a1);
  sub_22093ED30();
  sub_22093ED30();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v2 = a1 + *(int *)(type metadata accessor for Tuple2() + 52);
  type metadata accessor for Column();
  return Column.append(_:)(v2);
}

uint64_t sub_22083AB04(uint64_t *a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v5 = (void *)v2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v2[4] = v6;
  v2[5] = (uint64_t)v5;
  uint64_t v8 = v2[2];
  uint64_t v7 = v2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v3[7] = v8;
  v3[8] = v7;
  uint64_t v10 = *a1;
  uint64_t v9 = a1[1];
  uint64_t v11 = a1[2];
  uint64_t v22 = *a1;
  *(void *)&long long v23 = v9;
  *((void *)&v23 + 1) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12._uint64_t countAndFlagsBits = v6;
  v12._object = v5;
  Swift::Int_optional v24 = DataFrame.indexOfColumn(_:)(v12);
  LOBYTE(v7) = v24.is_nil;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v7 & 1) == 0)
  {
    if (a2)
    {
      DataFrame.removeColumn(_:)(v6, (uint64_t)v5, (uint64_t)&v22);
      sub_22080B0D8((uint64_t)&v22);
    }
    else
    {
      uint64_t v22 = v10;
      *(void *)&long long v23 = v9;
      *((void *)&v23 + 1) = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_220839C2C(v3 + 4, v6, (uint64_t)v5, (uint64_t)&v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v13 = *a1;
  uint64_t v14 = a1[1];
  uint64_t v15 = a1[2];
  uint64_t v22 = *a1;
  *(void *)&long long v23 = v14;
  *((void *)&v23 + 1) = v15;
  uint64_t v16 = v3[2];
  __n128 v17 = (void *)v3[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18._uint64_t countAndFlagsBits = v16;
  v18._object = v17;
  Swift::Int_optional v25 = DataFrame.indexOfColumn(_:)(v18);
  Swift::Bool is_nil = v25.is_nil;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!is_nil)
  {
    if (a2)
    {
      DataFrame.removeColumn(_:)(v16, (uint64_t)v17, (uint64_t)&v22);
      sub_22080B0D8((uint64_t)&v22);
    }
    else
    {
      uint64_t v22 = v13;
      *(void *)&long long v23 = v14;
      *((void *)&v23 + 1) = v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_220839C2C(v3 + 7, v16, (uint64_t)v17, (uint64_t)&v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v22 = v3[4];
  long long v23 = *(_OWORD *)(v3 + 5);
  DataFrame.append<A>(column:)();
  uint64_t v22 = v3[7];
  long long v23 = *((_OWORD *)v3 + 4);
  return DataFrame.append<A>(column:)();
}

uint64_t sub_22083ADC4()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v6 = v0[4];
  uint64_t v5 = v0[5];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41190);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_220945120;
  *(void *)(v7 + 32) = v2;
  *(void *)(v7 + 40) = v1;
  *(void *)(v7 + 48) = v4;
  *(void *)(v7 + 56) = v3;
  *(void *)(v7 + 64) = v6;
  *(void *)(v7 + 72) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v7;
}

__n128 sub_22083AE54@<Q0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v11 = *a1;
  uint64_t v12 = a1[1];
  uint64_t v13 = *a2;
  uint64_t v14 = a2[1];
  uint64_t v15 = *a3;
  uint64_t v16 = a3[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Column.init(name:capacity:)(v11, v12, 0, a4, &v23);
  uint64_t v17 = v23;
  __n128 v22 = v24;
  Column.init(name:capacity:)(v13, v14, 0, a5, &v23);
  uint64_t v18 = v23;
  __n128 v21 = v24;
  Column.init(name:capacity:)(v15, v16, 0, a6, &v23);
  uint64_t v19 = v23;
  __n128 result = v24;
  *(void *)a7 = v11;
  *(void *)(a7 + 8) = v12;
  *(void *)(a7 + 16) = v13;
  *(void *)(a7 + 24) = v14;
  *(void *)(a7 + 32) = v15;
  *(void *)(a7 + 40) = v16;
  *(void *)(a7 + 48) = v17;
  *(__n128 *)(a7 + 56) = v22;
  *(void *)(a7 + 72) = v18;
  *(__n128 *)(a7 + 80) = v21;
  *(void *)(a7 + 96) = v19;
  *(__n128 *)(a7 + 104) = result;
  return result;
}

double sub_22083AF60(Swift::Int a1, void *a2)
{
  uint64_t v5 = *(void *)v2;
  uint64_t v6 = *(void *)(v2 + 8);
  uint64_t v7 = a2[2];
  swift_bridgeObjectRetain();
  Column.init(name:capacity:)(v5, v6, a1, v7, &v18);
  uint64_t v8 = v18;
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = v8;
  *(_OWORD *)(v2 + 56) = v19;
  uint64_t v9 = *(void *)(v2 + 16);
  uint64_t v10 = *(void *)(v2 + 24);
  uint64_t v11 = a2[3];
  swift_bridgeObjectRetain();
  Column.init(name:capacity:)(v9, v10, a1, v11, &v18);
  uint64_t v12 = v18;
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 80) = v19;
  uint64_t v13 = *(void *)(v2 + 32);
  uint64_t v14 = *(void *)(v2 + 40);
  uint64_t v15 = a2[4];
  swift_bridgeObjectRetain();
  Column.init(name:capacity:)(v13, v14, a1, v15, &v18);
  uint64_t v16 = v18;
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 96) = v16;
  double result = *(double *)&v19;
  *(_OWORD *)(v2 + 104) = v19;
  return result;
}

uint64_t sub_22083B074(uint64_t a1)
{
  type metadata accessor for Column();
  Column.append(_:)(a1);
  sub_22093ED30();
  sub_22093ED30();
  sub_22093ED30();
  swift_getWitnessTable();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v2 = type metadata accessor for Tuple3();
  uint64_t v3 = a1 + *(int *)(v2 + 68);
  type metadata accessor for Column();
  Column.append(_:)(v3);
  uint64_t v4 = a1 + *(int *)(v2 + 72);
  type metadata accessor for Column();
  return Column.append(_:)(v4);
}

uint64_t sub_22083B1E8(uint64_t *a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v5 = (void *)v2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v2[6] = v6;
  v2[7] = (uint64_t)v5;
  uint64_t v8 = v2[2];
  uint64_t v7 = v2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v3[9] = v8;
  v3[10] = v7;
  uint64_t v10 = v3[4];
  uint64_t v9 = v3[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v3[12] = v10;
  v3[13] = v9;
  uint64_t v11 = *a1;
  uint64_t v12 = a1[1];
  uint64_t v13 = a1[2];
  uint64_t v31 = *a1;
  *(void *)&long long v32 = v12;
  *((void *)&v32 + 1) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14._uint64_t countAndFlagsBits = v6;
  v14._object = v5;
  Swift::Int_optional v33 = DataFrame.indexOfColumn(_:)(v14);
  LOBYTE(v9) = v33.is_nil;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v9 & 1) == 0)
  {
    if (a2)
    {
      DataFrame.removeColumn(_:)(v6, (uint64_t)v5, (uint64_t)&v31);
      sub_22080B0D8((uint64_t)&v31);
    }
    else
    {
      uint64_t v31 = v11;
      *(void *)&long long v32 = v12;
      *((void *)&v32 + 1) = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_220839C2C(v3 + 6, v6, (uint64_t)v5, (uint64_t)&v31);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v16 = *a1;
  uint64_t v15 = a1[1];
  uint64_t v17 = a1[2];
  uint64_t v31 = *a1;
  *(void *)&long long v32 = v15;
  *((void *)&v32 + 1) = v17;
  uint64_t v18 = v3[2];
  long long v19 = (void *)v3[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v20._uint64_t countAndFlagsBits = v18;
  v20._object = v19;
  Swift::Int_optional v34 = DataFrame.indexOfColumn(_:)(v20);
  Swift::Bool is_nil = v34.is_nil;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!is_nil)
  {
    if (a2)
    {
      DataFrame.removeColumn(_:)(v18, (uint64_t)v19, (uint64_t)&v31);
      sub_22080B0D8((uint64_t)&v31);
    }
    else
    {
      uint64_t v31 = v16;
      *(void *)&long long v32 = v15;
      *((void *)&v32 + 1) = v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_220839C2C(v3 + 9, v18, (uint64_t)v19, (uint64_t)&v31);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v23 = *a1;
  uint64_t v22 = a1[1];
  uint64_t v24 = a1[2];
  uint64_t v31 = *a1;
  *(void *)&long long v32 = v22;
  *((void *)&v32 + 1) = v24;
  uint64_t v25 = v3[4];
  unint64_t v26 = (void *)v3[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v27._uint64_t countAndFlagsBits = v25;
  v27._object = v26;
  Swift::Int_optional v35 = DataFrame.indexOfColumn(_:)(v27);
  Swift::Bool v28 = v35.is_nil;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v28)
  {
    if (a2)
    {
      DataFrame.removeColumn(_:)(v25, (uint64_t)v26, (uint64_t)&v31);
      sub_22080B0D8((uint64_t)&v31);
    }
    else
    {
      uint64_t v31 = v23;
      *(void *)&long long v32 = v22;
      *((void *)&v32 + 1) = v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_220839C2C(v3 + 12, v25, (uint64_t)v26, (uint64_t)&v31);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v31 = v3[6];
  long long v32 = *(_OWORD *)(v3 + 7);
  DataFrame.append<A>(column:)();
  uint64_t v31 = v3[9];
  long long v32 = *((_OWORD *)v3 + 5);
  DataFrame.append<A>(column:)();
  uint64_t v31 = v3[12];
  long long v32 = *(_OWORD *)(v3 + 13);
  return DataFrame.append<A>(column:)();
}

uint64_t sub_22083B5D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_22083B634(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v18 = MEMORY[0x263F8EE78];
    sub_220826CD8(0, v2, 0);
    uint64_t v3 = a1 + 32;
    uint64_t v4 = v18;
    do
    {
      sub_22083B5D0(v3, (uint64_t)v13);
      uint64_t v5 = v14;
      uint64_t v6 = v15;
      __swift_project_boxed_opaque_existential_1(v13, v14);
      (*(void (**)(_OWORD *__return_ptr, void, uint64_t, uint64_t))(v6 + 32))(v16, 0, v5, v6);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_220826CD8(0, *(void *)(v4 + 16) + 1, 1);
        uint64_t v4 = v18;
      }
      unint64_t v8 = *(void *)(v4 + 16);
      unint64_t v7 = *(void *)(v4 + 24);
      if (v8 >= v7 >> 1)
      {
        sub_220826CD8((char *)(v7 > 1), v8 + 1, 1);
        uint64_t v4 = v18;
      }
      *(void *)(v4 + 16) = v8 + 1;
      uint64_t v9 = v4 + 40 * v8;
      long long v10 = v16[0];
      long long v11 = v16[1];
      *(void *)(v9 + 64) = v17;
      *(_OWORD *)(v9 + 32) = v10;
      *(_OWORD *)(v9 + 48) = v11;
      v3 += 40;
      --v2;
    }
    while (v2);
  }
  return a1;
}

uint64_t Column<A>.summary()()
{
  return sub_22091D9E8((uint64_t (*)(uint64_t))sub_22083CC94);
}

uint64_t sub_22083B808@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, void *a4@<X8>)
{
  uint64_t v23 = result;
  if (a2 < 0)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  else
  {
    uint64_t v5 = (void *)(a3 + 16);
    swift_bridgeObjectRetain();
    double result = swift_retain();
    uint64_t v6 = 0;
    uint64_t v7 = MEMORY[0x263F8EE78];
LABEL_3:
    if (v6 <= a2) {
      uint64_t v8 = a2;
    }
    else {
      uint64_t v8 = v6;
    }
    unint64_t v9 = v6;
    while (a2 != v9)
    {
      if (v8 == v9)
      {
        __break(1u);
        goto LABEL_25;
      }
      double result = swift_beginAccess();
      if (!*v5) {
        goto LABEL_26;
      }
      uint64_t v6 = v9 + 1;
      int v10 = *(unsigned __int8 *)(*v5 + (v9 >> 3) + 64) >> (v9 & 7);
      ++v9;
      if (v10)
      {
        double result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0) {
          double result = (uint64_t)sub_220826C98(0, *(void *)(v7 + 16) + 1, 1);
        }
        unint64_t v12 = *(void *)(v7 + 16);
        unint64_t v11 = *(void *)(v7 + 24);
        if (v12 >= v11 >> 1) {
          double result = (uint64_t)sub_220826C98((char *)(v11 > 1), v12 + 1, 1);
        }
        *(void *)(v7 + 16) = v12 + 1;
        *(void *)(v7 + 8 * v12 + 32) = v6 - 1;
        goto LABEL_3;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    int64_t v13 = *(void *)(v7 + 16);
    if (v13)
    {
      uint64_t v24 = MEMORY[0x263F8EE78];
      sub_220826E98(0, v13, 0);
      uint64_t v14 = 0;
      uint64_t v15 = v24;
      do
      {
        uint64_t v16 = (uint64_t *)(v23 + 16 * *(void *)(v7 + 8 * v14 + 32));
        uint64_t v17 = *v16;
        unint64_t v18 = v16[1];
        sub_22080B7F4(*v16, v18);
        unint64_t v20 = *(void *)(v24 + 16);
        unint64_t v19 = *(void *)(v24 + 24);
        if (v20 >= v19 >> 1) {
          sub_220826E98((char *)(v19 > 1), v20 + 1, 1);
        }
        ++v14;
        *(void *)(v24 + 16) = v20 + 1;
        unint64_t v21 = v24 + 16 * v20;
        *(void *)(v21 + 32) = v17;
        *(void *)(v21 + 40) = v18;
      }
      while (v13 != v14);
      swift_release();
    }
    else
    {
      swift_release();
      uint64_t v15 = MEMORY[0x263F8EE78];
    }
    sub_22083CFF4(v15, a2 - v13, a4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_22083BA3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(char *, uint64_t, uint64_t)@<X3>, uint64_t a4@<X4>, void *a5@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v10 = sub_22093E100();
  uint64_t v39 = *(void *)(v10 - 8);
  uint64_t result = MEMORY[0x270FA5388](v10);
  unint64_t v13 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0;
  if (a2 < 0)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  else
  {
    Swift::Int_optional v35 = (char *)&v32 - v13;
    uint64_t v14 = (void *)(a4 + 16);
    uint64_t v37 = a3;
    swift_bridgeObjectRetain();
    uint64_t result = swift_retain();
    uint64_t v15 = 0;
    unint64_t v40 = MEMORY[0x263F8EE78];
LABEL_3:
    if (v15 <= a2) {
      uint64_t v16 = a2;
    }
    else {
      uint64_t v16 = v15;
    }
    unint64_t v17 = v15;
    while (a2 != v17)
    {
      if (v16 == v17)
      {
        __break(1u);
        goto LABEL_25;
      }
      uint64_t result = swift_beginAccess();
      if (!*v14) {
        goto LABEL_26;
      }
      uint64_t v15 = v17 + 1;
      int v18 = *(unsigned __int8 *)(*v14 + (v17 >> 3) + 64) >> (v17 & 7);
      ++v17;
      if (v18)
      {
        uint64_t v19 = v40;
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v41 = v19;
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_220826C98(0, *(void *)(v19 + 16) + 1, 1);
          uint64_t v19 = v41;
        }
        unint64_t v21 = *(void *)(v19 + 16);
        unint64_t v20 = *(void *)(v19 + 24);
        unint64_t v22 = v21 + 1;
        if (v21 >= v20 >> 1)
        {
          unint64_t v40 = v21 + 1;
          uint64_t result = (uint64_t)sub_220826C98((char *)(v20 > 1), v21 + 1, 1);
          unint64_t v22 = v40;
          uint64_t v19 = v41;
        }
        *(void *)(v19 + 16) = v22;
        unint64_t v40 = v19;
        *(void *)(v19 + 8 * v21 + 32) = v15 - 1;
        goto LABEL_3;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    int64_t v23 = *(void *)(v40 + 16);
    uint64_t v24 = v35;
    if (v23)
    {
      uint64_t v32 = a2;
      Swift::Int_optional v33 = a5;
      uint64_t v34 = v5;
      uint64_t v41 = MEMORY[0x263F8EE78];
      sub_220826EB8(0, v23, 0);
      uint64_t v25 = 0;
      uint64_t v26 = v41;
      Swift::String v27 = *(void (**)(char *, uint64_t, uint64_t))(v39 + 16);
      uint64_t v28 = *(void *)(v39 + 72);
      uint64_t v36 = v39 + 32;
      uint64_t v37 = v27;
      do
      {
        v37(v24, v38 + v28 * *(void *)(v40 + 8 * v25 + 32), v10);
        uint64_t v41 = v26;
        uint64_t v29 = v10;
        unint64_t v31 = *(void *)(v26 + 16);
        unint64_t v30 = *(void *)(v26 + 24);
        if (v31 >= v30 >> 1)
        {
          sub_220826EB8(v30 > 1, v31 + 1, 1);
          uint64_t v26 = v41;
        }
        ++v25;
        *(void *)(v26 + 16) = v31 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v39 + 32))(v26+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ v31 * v28, v24, v29);
        uint64_t v10 = v29;
      }
      while (v23 != v25);
      swift_release();
      a5 = v33;
      a2 = v32;
    }
    else
    {
      swift_release();
      uint64_t v26 = MEMORY[0x263F8EE78];
    }
    sub_22083D344(v26, a2 - v23, a5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_22083BD74@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, void *a4@<X8>)
{
  uint64_t v23 = result;
  if (a2 < 0)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  else
  {
    uint64_t v5 = (void *)(a3 + 16);
    swift_bridgeObjectRetain();
    uint64_t result = swift_retain();
    uint64_t v6 = 0;
    uint64_t v7 = MEMORY[0x263F8EE78];
LABEL_3:
    if (v6 <= a2) {
      uint64_t v8 = a2;
    }
    else {
      uint64_t v8 = v6;
    }
    unint64_t v9 = v6;
    while (a2 != v9)
    {
      if (v8 == v9)
      {
        __break(1u);
        goto LABEL_25;
      }
      uint64_t result = swift_beginAccess();
      if (!*v5) {
        goto LABEL_26;
      }
      uint64_t v6 = v9 + 1;
      int v10 = *(unsigned __int8 *)(*v5 + (v9 >> 3) + 64) >> (v9 & 7);
      ++v9;
      if (v10)
      {
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0) {
          uint64_t result = (uint64_t)sub_220826C98(0, *(void *)(v7 + 16) + 1, 1);
        }
        unint64_t v12 = *(void *)(v7 + 16);
        unint64_t v11 = *(void *)(v7 + 24);
        if (v12 >= v11 >> 1) {
          uint64_t result = (uint64_t)sub_220826C98((char *)(v11 > 1), v12 + 1, 1);
        }
        *(void *)(v7 + 16) = v12 + 1;
        *(void *)(v7 + 8 * v12 + 32) = v6 - 1;
        goto LABEL_3;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    int64_t v13 = *(void *)(v7 + 16);
    if (v13)
    {
      uint64_t v24 = MEMORY[0x263F8EE78];
      sub_220826C78(0, v13, 0);
      uint64_t v14 = 0;
      uint64_t v15 = v24;
      do
      {
        uint64_t v16 = (uint64_t *)(v23 + 16 * *(void *)(v7 + 8 * v14 + 32));
        uint64_t v17 = *v16;
        uint64_t v18 = v16[1];
        unint64_t v20 = *(void *)(v24 + 16);
        unint64_t v19 = *(void *)(v24 + 24);
        swift_bridgeObjectRetain();
        if (v20 >= v19 >> 1) {
          sub_220826C78((char *)(v19 > 1), v20 + 1, 1);
        }
        ++v14;
        *(void *)(v24 + 16) = v20 + 1;
        unint64_t v21 = v24 + 16 * v20;
        *(void *)(v21 + 32) = v17;
        *(void *)(v21 + 40) = v18;
      }
      while (v13 != v14);
      swift_release();
    }
    else
    {
      swift_release();
      uint64_t v15 = MEMORY[0x263F8EE78];
    }
    sub_22083D9B0(v15, a2 - v13, a4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_22083BFA4@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, void *a5@<X8>)
{
  if (a2 < 0)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  else
  {
    uint64_t v5 = a4;
    uint64_t v8 = result;
    unint64_t v9 = (void *)(a4 + 16);
    swift_bridgeObjectRetain();
    uint64_t result = swift_retain();
    uint64_t v10 = 0;
    uint64_t v11 = MEMORY[0x263F8EE78];
LABEL_3:
    if (v10 <= a2) {
      uint64_t v12 = a2;
    }
    else {
      uint64_t v12 = v10;
    }
    unint64_t v13 = v10;
    while (a2 != v13)
    {
      if (v12 == v13)
      {
        __break(1u);
        goto LABEL_25;
      }
      uint64_t result = swift_beginAccess();
      if (!*v9) {
        goto LABEL_26;
      }
      uint64_t v10 = v13 + 1;
      int v14 = *(unsigned __int8 *)(*v9 + (v13 >> 3) + 64) >> (v13 & 7);
      ++v13;
      if (v14)
      {
        uint64_t v24 = v5;
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v15 = a3;
        if ((result & 1) == 0) {
          uint64_t result = (uint64_t)sub_220826C98(0, *(void *)(v11 + 16) + 1, 1);
        }
        unint64_t v17 = *(void *)(v11 + 16);
        unint64_t v16 = *(void *)(v11 + 24);
        if (v17 >= v16 >> 1) {
          uint64_t result = (uint64_t)sub_220826C98((char *)(v16 > 1), v17 + 1, 1);
        }
        *(void *)(v11 + 16) = v17 + 1;
        *(void *)(v11 + 8 * v17 + 32) = v10 - 1;
        a3 = v15;
        uint64_t v5 = v24;
        goto LABEL_3;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    int64_t v18 = *(void *)(v11 + 16);
    if (v18)
    {
      uint64_t v26 = MEMORY[0x263F8EE78];
      sub_220826ED8(0, v18, 0);
      uint64_t v19 = 0;
      uint64_t v20 = v26;
      uint64_t v21 = *(void *)(v26 + 16);
      do
      {
        char v22 = *(unsigned char *)(v8 + *(void *)(v11 + 8 * v19 + 32));
        unint64_t v23 = *(void *)(v26 + 24);
        if (v21 + v19 >= v23 >> 1) {
          sub_220826ED8((char *)(v23 > 1), v21 + v19 + 1, 1);
        }
        *(void *)(v26 + 16) = v21 + v19 + 1;
        *(unsigned char *)(v26 + v21 + v19++ + 32) = v22;
      }
      while (v18 != v19);
      swift_release();
    }
    else
    {
      swift_release();
      uint64_t v20 = MEMORY[0x263F8EE78];
    }
    sub_22083DCE4(v20, a2 - v18, a5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_22083C1E4@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, void *a5@<X8>)
{
  if (a2 < 0)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  else
  {
    uint64_t v5 = a4;
    uint64_t v8 = result;
    unint64_t v9 = (void *)(a4 + 16);
    swift_bridgeObjectRetain();
    uint64_t result = swift_retain();
    uint64_t v10 = 0;
    uint64_t v11 = MEMORY[0x263F8EE78];
LABEL_3:
    if (v10 <= a2) {
      uint64_t v12 = a2;
    }
    else {
      uint64_t v12 = v10;
    }
    unint64_t v13 = v10;
    while (a2 != v13)
    {
      if (v12 == v13)
      {
        __break(1u);
        goto LABEL_25;
      }
      uint64_t result = swift_beginAccess();
      if (!*v9) {
        goto LABEL_26;
      }
      uint64_t v10 = v13 + 1;
      int v14 = *(unsigned __int8 *)(*v9 + (v13 >> 3) + 64) >> (v13 & 7);
      ++v13;
      if (v14)
      {
        uint64_t v24 = v5;
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v15 = a3;
        if ((result & 1) == 0) {
          uint64_t result = (uint64_t)sub_220826C98(0, *(void *)(v11 + 16) + 1, 1);
        }
        unint64_t v17 = *(void *)(v11 + 16);
        unint64_t v16 = *(void *)(v11 + 24);
        if (v17 >= v16 >> 1) {
          uint64_t result = (uint64_t)sub_220826C98((char *)(v16 > 1), v17 + 1, 1);
        }
        *(void *)(v11 + 16) = v17 + 1;
        *(void *)(v11 + 8 * v17 + 32) = v10 - 1;
        a3 = v15;
        uint64_t v5 = v24;
        goto LABEL_3;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    int64_t v18 = *(void *)(v11 + 16);
    if (v18)
    {
      uint64_t v26 = MEMORY[0x263F8EE78];
      sub_220826EF8(0, v18, 0);
      uint64_t v19 = 0;
      uint64_t v20 = v26;
      unint64_t v21 = *(void *)(v26 + 16);
      do
      {
        uint64_t v22 = *(void *)(v8 + 8 * *(void *)(v11 + 8 * v19 + 32));
        unint64_t v23 = *(void *)(v26 + 24);
        if (v21 >= v23 >> 1) {
          sub_220826EF8((char *)(v23 > 1), v21 + 1, 1);
        }
        ++v19;
        *(void *)(v26 + 16) = v21 + 1;
        *(void *)(v26 + 8 * v21++ + 32) = v22;
      }
      while (v18 != v19);
      swift_release();
    }
    else
    {
      swift_release();
      uint64_t v20 = MEMORY[0x263F8EE78];
    }
    sub_22083DFC0(v20, a2 - v18, a5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_22083C424@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, void *a5@<X8>)
{
  if (a2 < 0)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  else
  {
    uint64_t v5 = a4;
    uint64_t v8 = result;
    unint64_t v9 = (void *)(a4 + 16);
    swift_bridgeObjectRetain();
    uint64_t result = swift_retain();
    uint64_t v10 = 0;
    uint64_t v11 = MEMORY[0x263F8EE78];
LABEL_3:
    if (v10 <= a2) {
      uint64_t v12 = a2;
    }
    else {
      uint64_t v12 = v10;
    }
    unint64_t v13 = v10;
    while (a2 != v13)
    {
      if (v12 == v13)
      {
        __break(1u);
        goto LABEL_25;
      }
      uint64_t result = swift_beginAccess();
      if (!*v9) {
        goto LABEL_26;
      }
      uint64_t v10 = v13 + 1;
      int v14 = *(unsigned __int8 *)(*v9 + (v13 >> 3) + 64) >> (v13 & 7);
      ++v13;
      if (v14)
      {
        uint64_t v24 = v5;
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v15 = a3;
        if ((result & 1) == 0) {
          uint64_t result = (uint64_t)sub_220826C98(0, *(void *)(v11 + 16) + 1, 1);
        }
        unint64_t v17 = *(void *)(v11 + 16);
        unint64_t v16 = *(void *)(v11 + 24);
        if (v17 >= v16 >> 1) {
          uint64_t result = (uint64_t)sub_220826C98((char *)(v16 > 1), v17 + 1, 1);
        }
        *(void *)(v11 + 16) = v17 + 1;
        *(void *)(v11 + 8 * v17 + 32) = v10 - 1;
        a3 = v15;
        uint64_t v5 = v24;
        goto LABEL_3;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    int64_t v18 = *(void *)(v11 + 16);
    if (v18)
    {
      uint64_t v26 = MEMORY[0x263F8EE78];
      sub_220826F18(0, v18, 0);
      uint64_t v19 = 0;
      uint64_t v20 = v26;
      unint64_t v21 = *(void *)(v26 + 16);
      do
      {
        int v22 = *(_DWORD *)(v8 + 4 * *(void *)(v11 + 8 * v19 + 32));
        unint64_t v23 = *(void *)(v26 + 24);
        if (v21 >= v23 >> 1) {
          sub_220826F18((char *)(v23 > 1), v21 + 1, 1);
        }
        ++v19;
        *(void *)(v26 + 16) = v21 + 1;
        *(_DWORD *)(v26 + 4 * v21++ + 32) = v22;
      }
      while (v18 != v19);
      swift_release();
    }
    else
    {
      swift_release();
      uint64_t v20 = MEMORY[0x263F8EE78];
    }
    sub_22083E29C(v20, a2 - v18, a5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_22083C664@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, void *a5@<X8>)
{
  if (a2 < 0)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  else
  {
    uint64_t v5 = a4;
    uint64_t v8 = result;
    unint64_t v9 = (void *)(a4 + 16);
    swift_bridgeObjectRetain();
    uint64_t result = swift_retain();
    uint64_t v10 = 0;
    uint64_t v11 = MEMORY[0x263F8EE78];
LABEL_3:
    if (v10 <= a2) {
      uint64_t v12 = a2;
    }
    else {
      uint64_t v12 = v10;
    }
    unint64_t v13 = v10;
    while (a2 != v13)
    {
      if (v12 == v13)
      {
        __break(1u);
        goto LABEL_25;
      }
      uint64_t result = swift_beginAccess();
      if (!*v9) {
        goto LABEL_26;
      }
      uint64_t v10 = v13 + 1;
      int v14 = *(unsigned __int8 *)(*v9 + (v13 >> 3) + 64) >> (v13 & 7);
      ++v13;
      if (v14)
      {
        uint64_t v24 = v5;
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v15 = a3;
        if ((result & 1) == 0) {
          uint64_t result = (uint64_t)sub_220826C98(0, *(void *)(v11 + 16) + 1, 1);
        }
        unint64_t v17 = *(void *)(v11 + 16);
        unint64_t v16 = *(void *)(v11 + 24);
        if (v17 >= v16 >> 1) {
          uint64_t result = (uint64_t)sub_220826C98((char *)(v16 > 1), v17 + 1, 1);
        }
        *(void *)(v11 + 16) = v17 + 1;
        *(void *)(v11 + 8 * v17 + 32) = v10 - 1;
        a3 = v15;
        uint64_t v5 = v24;
        goto LABEL_3;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    int64_t v18 = *(void *)(v11 + 16);
    if (v18)
    {
      uint64_t v26 = MEMORY[0x263F8EE78];
      sub_220826F38(0, v18, 0);
      uint64_t v19 = 0;
      uint64_t v20 = v26;
      unint64_t v21 = *(void *)(v26 + 16);
      do
      {
        __int16 v22 = *(_WORD *)(v8 + 2 * *(void *)(v11 + 8 * v19 + 32));
        unint64_t v23 = *(void *)(v26 + 24);
        if (v21 >= v23 >> 1) {
          sub_220826F38((char *)(v23 > 1), v21 + 1, 1);
        }
        ++v19;
        *(void *)(v26 + 16) = v21 + 1;
        *(_WORD *)(v26 + 2 * v21++ + 32) = v22;
      }
      while (v18 != v19);
      swift_release();
    }
    else
    {
      swift_release();
      uint64_t v20 = MEMORY[0x263F8EE78];
    }
    sub_22083E574(v20, a2 - v18, a5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_22083C8A4@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, void *a5@<X8>)
{
  if (a2 < 0)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  else
  {
    uint64_t v5 = a4;
    uint64_t v8 = result;
    unint64_t v9 = (void *)(a4 + 16);
    swift_bridgeObjectRetain();
    uint64_t result = swift_retain();
    uint64_t v10 = 0;
    uint64_t v11 = MEMORY[0x263F8EE78];
LABEL_3:
    if (v10 <= a2) {
      uint64_t v12 = a2;
    }
    else {
      uint64_t v12 = v10;
    }
    unint64_t v13 = v10;
    while (a2 != v13)
    {
      if (v12 == v13)
      {
        __break(1u);
        goto LABEL_25;
      }
      uint64_t result = swift_beginAccess();
      if (!*v9) {
        goto LABEL_26;
      }
      uint64_t v10 = v13 + 1;
      int v14 = *(unsigned __int8 *)(*v9 + (v13 >> 3) + 64) >> (v13 & 7);
      ++v13;
      if (v14)
      {
        uint64_t v24 = v5;
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v15 = a3;
        if ((result & 1) == 0) {
          uint64_t result = (uint64_t)sub_220826C98(0, *(void *)(v11 + 16) + 1, 1);
        }
        unint64_t v17 = *(void *)(v11 + 16);
        unint64_t v16 = *(void *)(v11 + 24);
        if (v17 >= v16 >> 1) {
          uint64_t result = (uint64_t)sub_220826C98((char *)(v16 > 1), v17 + 1, 1);
        }
        *(void *)(v11 + 16) = v17 + 1;
        *(void *)(v11 + 8 * v17 + 32) = v10 - 1;
        a3 = v15;
        uint64_t v5 = v24;
        goto LABEL_3;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    int64_t v18 = *(void *)(v11 + 16);
    if (v18)
    {
      uint64_t v26 = MEMORY[0x263F8EE78];
      sub_220826C98(0, v18, 0);
      uint64_t v19 = 0;
      uint64_t v20 = v26;
      unint64_t v21 = *(void *)(v26 + 16);
      do
      {
        uint64_t v22 = *(void *)(v8 + 8 * *(void *)(v11 + 8 * v19 + 32));
        unint64_t v23 = *(void *)(v26 + 24);
        if (v21 >= v23 >> 1) {
          sub_220826C98((char *)(v23 > 1), v21 + 1, 1);
        }
        ++v19;
        *(void *)(v26 + 16) = v21 + 1;
        *(void *)(v26 + 8 * v21++ + 32) = v22;
      }
      while (v18 != v19);
      swift_release();
    }
    else
    {
      swift_release();
      uint64_t v20 = MEMORY[0x263F8EE78];
    }
    sub_22083E84C(v20, a2 - v18, a5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_22083CADC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v10 = result;
    MEMORY[0x270FA5388](result);
    unint64_t v30 = v11;
    v25[0] = v12;
    v25[1] = v13;
    uint64_t v26 = v14;
    uint64_t v27 = v15;
    uint64_t v28 = v16;
    uint64_t v17 = sub_2208BB82C((uint64_t)sub_2208432E0, (uint64_t)&v24, 0, a2);
    uint64_t v18 = a2 - *(void *)(v17 + 16);
    uint64_t v31 = v17;
    MEMORY[0x270FA5388](v17);
    uint64_t v26 = a6;
    uint64_t v27 = a7;
    uint64_t v28 = v10;
    uint64_t v29 = a2;
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B18);
    unint64_t v20 = sub_220843214();
    uint64_t v22 = sub_2208F0D18((void (*)(char *, char *))sub_2208431FC, (uint64_t)v25, v19, a6, MEMORY[0x263F8E628], v20, MEMORY[0x263F8E658], v21);
    swift_bridgeObjectRelease();
    uint64_t v31 = v22;
    uint64_t v23 = sub_22093E900();
    swift_getWitnessTable();
    sub_2208AF410((uint64_t)&v31, v18, a6, v23, a7, v30);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_22083CC94(uint64_t a1, uint64_t a2)
{
  return sub_22083CADC(a1, a2, v2[4], v2[5], v2[6], v2[2], v2[3]);
}

uint64_t sub_22083CCB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v3 = a2;
  uint64_t v4 = a3;
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v36 = v5;
  if (v5)
  {
    uint64_t v6 = a1 + 32;
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    uint64_t v8 = MEMORY[0x263F8EE78];
    unint64_t v9 = (void *)MEMORY[0x263F8EE80];
    while (1)
    {
      sub_220834DA0(v6, (uint64_t)v39);
      sub_220834DA0((uint64_t)v39, (uint64_t)v37);
      if (v9[2] && (unint64_t v10 = sub_22081D2BC((uint64_t)v37), (v11 & 1) != 0)) {
        uint64_t v12 = *(void *)(v9[7] + 8 * v10);
      }
      else {
        uint64_t v12 = 0;
      }
      sub_220834CE8((uint64_t)v37);
      BOOL v13 = __OFADD__(v12, 1);
      uint64_t v14 = v12 + 1;
      if (v13)
      {
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        uint64_t result = sub_22093F2F0();
        __break(1u);
        return result;
      }
      sub_220834DA0((uint64_t)v39, (uint64_t)v37);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v17 = sub_22081D2BC((uint64_t)v37);
      uint64_t v18 = v9[2];
      BOOL v19 = (v16 & 1) == 0;
      uint64_t v20 = v18 + v19;
      if (__OFADD__(v18, v19)) {
        goto LABEL_35;
      }
      char v21 = v16;
      if (v9[3] >= v20)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          if ((v16 & 1) == 0) {
            goto LABEL_19;
          }
        }
        else
        {
          sub_22082487C();
          if ((v21 & 1) == 0) {
            goto LABEL_19;
          }
        }
      }
      else
      {
        sub_22081DEF4(v20, isUniquelyReferenced_nonNull_native);
        unint64_t v22 = sub_22081D2BC((uint64_t)v37);
        if ((v21 & 1) != (v23 & 1)) {
          goto LABEL_37;
        }
        unint64_t v17 = v22;
        if ((v21 & 1) == 0)
        {
LABEL_19:
          v9[(v17 >> 6) + 8] |= 1 << v17;
          sub_220834DA0((uint64_t)v37, v9[6] + 40 * v17);
          *(void *)(v9[7] + 8 * v17) = v14;
          uint64_t v24 = v9[2];
          BOOL v13 = __OFADD__(v24, 1);
          uint64_t v25 = v24 + 1;
          if (v13) {
            goto LABEL_36;
          }
          _OWORD v9[2] = v25;
          goto LABEL_21;
        }
      }
      *(void *)(v9[7] + 8 * v17) = v14;
LABEL_21:
      swift_bridgeObjectRelease();
      sub_220834CE8((uint64_t)v37);
      if (v7 < v14)
      {
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName(&qword_267F18890);
        uint64_t v8 = swift_allocObject();
        *(_OWORD *)(v8 + 16) = xmmword_220944FB0;
        sub_220834DA0((uint64_t)v39, v8 + 32);
        sub_220834CE8((uint64_t)v39);
        uint64_t v7 = v14;
      }
      else
      {
        if (v14 == v7)
        {
          sub_220834DA0((uint64_t)v39, (uint64_t)v37);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v8 = (uint64_t)sub_22081BA64(0, *(void *)(v8 + 16) + 1, 1, (char *)v8);
          }
          unint64_t v27 = *(void *)(v8 + 16);
          unint64_t v26 = *(void *)(v8 + 24);
          if (v27 >= v26 >> 1) {
            uint64_t v8 = (uint64_t)sub_22081BA64((char *)(v26 > 1), v27 + 1, 1, (char *)v8);
          }
          *(void *)(v8 + 16) = v27 + 1;
          uint64_t v28 = v8 + 40 * v27;
          long long v29 = v37[0];
          long long v30 = v37[1];
          *(void *)(v28 + 64) = v38;
          *(_OWORD *)(v28 + 32) = v29;
          *(_OWORD *)(v28 + 48) = v30;
        }
        sub_220834CE8((uint64_t)v39);
      }
      v6 += 40;
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = a2;
        uint64_t v4 = a3;
        if (a2 <= 0) {
          goto LABEL_32;
        }
LABEL_30:
        uint64_t v31 = v9[2];
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v33 = v31 + 1;
        goto LABEL_33;
      }
    }
  }
  uint64_t v8 = MEMORY[0x263F8EE78];
  unint64_t v9 = (void *)MEMORY[0x263F8EE80];
  if (a2 > 0) {
    goto LABEL_30;
  }
LABEL_32:
  uint64_t v33 = v9[2];
  uint64_t result = swift_bridgeObjectRelease();
LABEL_33:
  *uint64_t v4 = v36;
  v4[1] = v3;
  uint64_t v4[2] = v33;
  v4[3] = v8;
  return result;
}

uint64_t sub_22083CFF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v3 = a2;
  uint64_t v4 = a3;
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    uint64_t v6 = 0;
    uint64_t v7 = (unint64_t *)(swift_bridgeObjectRetain() + 40);
    uint64_t v39 = (char *)MEMORY[0x263F8EE78];
    uint64_t v8 = (void *)MEMORY[0x263F8EE80];
    uint64_t v36 = v5;
    uint64_t v9 = v5;
    while (1)
    {
      uint64_t v12 = *(v7 - 1);
      unint64_t v11 = *v7;
      uint64_t v13 = v8[2];
      sub_22080B7F4(v12, *v7);
      if (v13)
      {
        sub_22080B7F4(v12, v11);
        uint64_t v14 = sub_22081D300(v12, v11);
        if (v15) {
          uint64_t v13 = *(void *)(v8[7] + 8 * v14);
        }
        else {
          uint64_t v13 = 0;
        }
        sub_22080B88C(v12, v11);
      }
      uint64_t v16 = v13 + 1;
      if (__OFADD__(v13, 1))
      {
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        uint64_t result = sub_22093F2F0();
        __break(1u);
        return result;
      }
      sub_22080B7F4(v12, v11);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v19 = sub_22081D300(v12, v11);
      uint64_t v20 = v8[2];
      BOOL v21 = (v18 & 1) == 0;
      uint64_t v22 = v20 + v21;
      if (__OFADD__(v20, v21)) {
        goto LABEL_36;
      }
      char v23 = v18;
      if (v8[3] >= v22)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          if ((v18 & 1) == 0) {
            goto LABEL_20;
          }
        }
        else
        {
          sub_220824A54();
          if ((v23 & 1) == 0) {
            goto LABEL_20;
          }
        }
      }
      else
      {
        sub_22081E1FC(v22, isUniquelyReferenced_nonNull_native);
        uint64_t v24 = sub_22081D300(v12, v11);
        if ((v23 & 1) != (v25 & 1)) {
          goto LABEL_38;
        }
        unint64_t v19 = v24;
        if ((v23 & 1) == 0)
        {
LABEL_20:
          v8[(v19 >> 6) + 8] |= 1 << v19;
          unint64_t v26 = (uint64_t *)(v8[6] + 16 * v19);
          *unint64_t v26 = v12;
          v26[1] = v11;
          *(void *)(v8[7] + 8 * v19) = v16;
          uint64_t v27 = v8[2];
          BOOL v28 = __OFADD__(v27, 1);
          uint64_t v29 = v27 + 1;
          if (v28) {
            goto LABEL_37;
          }
          uint64_t v8[2] = v29;
          sub_22080B7F4(v12, v11);
          goto LABEL_22;
        }
      }
      *(void *)(v8[7] + 8 * v19) = v16;
LABEL_22:
      swift_bridgeObjectRelease();
      sub_22080B88C(v12, v11);
      if (v6 < v16)
      {
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName(&qword_267F18878);
        uint64_t v10 = swift_allocObject();
        *(_OWORD *)(v10 + 16) = xmmword_220944FB0;
        *(void *)(v10 + 32) = v12;
        *(void *)(v10 + 40) = v11;
        uint64_t v39 = (char *)v10;
        uint64_t v6 = v16;
      }
      else if (v16 == v6)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v39 = sub_22081BB94(0, *((void *)v39 + 2) + 1, 1, v39);
        }
        unint64_t v31 = *((void *)v39 + 2);
        unint64_t v30 = *((void *)v39 + 3);
        if (v31 >= v30 >> 1) {
          uint64_t v39 = sub_22081BB94((char *)(v30 > 1), v31 + 1, 1, v39);
        }
        *((void *)v39 + 2) = v31 + 1;
        uint64_t v32 = &v39[16 * v31];
        *((void *)v32 + 4) = v12;
        *((void *)v32 + 5) = v11;
      }
      else
      {
        sub_22080B88C(v12, v11);
      }
      v7 += 2;
      if (!--v9)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = a2;
        uint64_t v4 = a3;
        uint64_t v5 = v36;
        if (a2 <= 0) {
          goto LABEL_33;
        }
LABEL_31:
        uint64_t v33 = v8[2];
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v35 = v33 + 1;
        goto LABEL_34;
      }
    }
  }
  uint64_t v39 = (char *)MEMORY[0x263F8EE78];
  uint64_t v8 = (void *)MEMORY[0x263F8EE80];
  if (a2 > 0) {
    goto LABEL_31;
  }
LABEL_33:
  uint64_t v35 = v8[2];
  uint64_t result = swift_bridgeObjectRelease();
LABEL_34:
  *uint64_t v4 = v5;
  v4[1] = v3;
  uint64_t v4[2] = v35;
  v4[3] = v39;
  return result;
}

uint64_t sub_22083D344@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = sub_22093E100();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v70 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v86 = (char *)&v63 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v63 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v63 - v15;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD411B8);
  MEMORY[0x270FA5388](v17 - 8);
  unint64_t v19 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = *(void *)(a1 + 16);
  uint64_t v66 = a1;
  if (!v76)
  {
    uint64_t v57 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    swift_bridgeObjectRetain();
    uint64_t v81 = (void *)MEMORY[0x263F8EE78];
    uint64_t v27 = (void *)MEMORY[0x263F8EE80];
LABEL_32:
    v57(v19, 1, 1, v6);
    uint64_t v58 = v76;
LABEL_33:
    swift_bridgeObjectRelease();
    uint64_t v59 = v27[2];
    uint64_t result = swift_bridgeObjectRelease();
    if (a2 <= 0) {
      uint64_t v61 = v59;
    }
    else {
      uint64_t v61 = v59 + 1;
    }
    *a3 = v58;
    a3[1] = a2;
    uint64_t v62 = v81;
    a3[2] = v61;
    a3[3] = v62;
    return result;
  }
  uint64_t v64 = a2;
  uint64_t v65 = a3;
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v20 = v7 + 16;
  BOOL v21 = v22;
  uint64_t v23 = *(unsigned __int8 *)(v20 + 64);
  uint64_t v24 = (v23 + 32) & ~v23;
  uint64_t v25 = a1 + v24;
  uint64_t v74 = (unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 32);
  unint64_t v75 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 40);
  uint64_t v26 = *(void *)(v20 + 56);
  long long v78 = (void (**)(char *, char *, uint64_t))(v20 + 16);
  uint64_t v85 = (void (**)(char *, uint64_t))(v20 - 8);
  uint64_t v71 = v24;
  uint64_t v80 = v26;
  uint64_t v68 = v23 | 7;
  uint64_t v69 = v26 + v24;
  swift_bridgeObjectRetain();
  uint64_t v79 = 0;
  uint64_t v83 = 0;
  uint64_t v81 = (void *)MEMORY[0x263F8EE78];
  uint64_t v27 = (void *)MEMORY[0x263F8EE80];
  long long v67 = xmmword_220944FB0;
  int64_t v73 = v16;
  while (1)
  {
    v21(v19, v25, v6);
    uint64_t v72 = *v75;
    v72(v19, 0, 1, v6);
    if ((*v74)(v19, 1, v6) == 1)
    {
      a3 = v65;
      a2 = v64;
      uint64_t v58 = v83;
      goto LABEL_33;
    }
    unint64_t v31 = *v78;
    (*v78)(v16, v19, v6);
    v21(v14, (uint64_t)v16, v6);
    uint64_t v32 = v27[2];
    uint64_t v77 = v31;
    if (v32 && (unint64_t v33 = sub_22081D3C0((uint64_t)v14), (v34 & 1) != 0)) {
      uint64_t v35 = *(void *)(v27[7] + 8 * v33);
    }
    else {
      uint64_t v35 = 0;
    }
    uint64_t v84 = *v85;
    v84(v14, v6);
    uint64_t v36 = v35 + 1;
    if (__OFADD__(v35, 1)) {
      break;
    }
    uint64_t v82 = v25;
    uint64_t v37 = v16;
    uint64_t v38 = v14;
    uint64_t v39 = v19;
    uint64_t v40 = (uint64_t)v86;
    uint64_t v41 = v20;
    v21(v86, (uint64_t)v37, v6);
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v87 = v27;
    unint64_t v44 = sub_22081D3C0(v40);
    uint64_t v45 = v27[2];
    BOOL v46 = (v43 & 1) == 0;
    uint64_t v47 = v45 + v46;
    if (__OFADD__(v45, v46)) {
      goto LABEL_38;
    }
    char v48 = v43;
    if (v27[3] >= v47)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v27 = v87;
        if (v43) {
          goto LABEL_18;
        }
      }
      else
      {
        sub_220824C04();
        uint64_t v27 = v87;
        if (v48) {
          goto LABEL_18;
        }
      }
    }
    else
    {
      sub_22081E500(v47, isUniquelyReferenced_nonNull_native);
      unint64_t v49 = sub_22081D3C0((uint64_t)v86);
      if ((v48 & 1) != (v50 & 1)) {
        goto LABEL_40;
      }
      unint64_t v44 = v49;
      uint64_t v27 = v87;
      if (v48)
      {
LABEL_18:
        *(void *)(v27[7] + 8 * v44) = v36;
        uint64_t v20 = v41;
        goto LABEL_22;
      }
    }
    v27[(v44 >> 6) + 8] |= 1 << v44;
    uint64_t v20 = v41;
    v21((char *)(v27[6] + v44 * v80), (uint64_t)v86, v6);
    *(void *)(v27[7] + 8 * v44) = v36;
    uint64_t v51 = v27[2];
    BOOL v52 = __OFADD__(v51, 1);
    uint64_t v53 = v51 + 1;
    if (v52) {
      goto LABEL_39;
    }
    uint64_t v27[2] = v53;
LABEL_22:
    swift_bridgeObjectRelease();
    v84(v86, v6);
    unint64_t v19 = v39;
    uint64_t v14 = v38;
    if (v79 < v36)
    {
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_267F18868);
      uint64_t v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = v67;
      uint64_t v81 = (void *)v28;
      uint64_t v16 = v73;
      v21((char *)(v28 + v71), (uint64_t)v73, v6);
      uint64_t v79 = v36;
      uint64_t v29 = v82;
    }
    else
    {
      uint64_t v16 = v73;
      uint64_t v29 = v82;
      if (v36 == v79)
      {
        v21(v70, (uint64_t)v73, v6);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v81 = (void *)sub_22081BC98(0, v81[2] + 1, 1, v81);
        }
        unint64_t v55 = v81[2];
        unint64_t v54 = v81[3];
        if (v55 >= v54 >> 1) {
          uint64_t v81 = (void *)sub_22081BC98(v54 > 1, v55 + 1, 1, v81);
        }
        uint64_t v56 = (char *)v81;
        v81[2] = v55 + 1;
        v77(&v56[v71 + v55 * v80], v70, v6);
      }
    }
    uint64_t v30 = v83 + 1;
    v84(v16, v6);
    uint64_t v25 = v29 + v80;
    uint64_t v83 = v30;
    if (v76 == v30)
    {
      a3 = v65;
      a2 = v64;
      uint64_t v57 = v72;
      goto LABEL_32;
    }
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  uint64_t result = sub_22093F2F0();
  __break(1u);
  return result;
}

uint64_t sub_22083D9B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v3 = a2;
  uint64_t v4 = a3;
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    uint64_t v6 = 0;
    uint64_t v7 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    uint64_t v39 = (char *)MEMORY[0x263F8EE78];
    uint64_t v8 = (void *)MEMORY[0x263F8EE80];
    uint64_t v36 = v5;
    uint64_t v9 = v5;
    while (1)
    {
      uint64_t v12 = *(v7 - 1);
      uint64_t v11 = *v7;
      uint64_t v13 = v8[2];
      swift_bridgeObjectRetain();
      if (v13)
      {
        swift_bridgeObjectRetain();
        uint64_t v14 = sub_22081D290(v12, v11);
        if (v15) {
          uint64_t v13 = *(void *)(v8[7] + 8 * v14);
        }
        else {
          uint64_t v13 = 0;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v16 = v13 + 1;
      if (__OFADD__(v13, 1))
      {
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        uint64_t result = sub_22093F2F0();
        __break(1u);
        return result;
      }
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v19 = sub_22081D290(v12, v11);
      uint64_t v20 = v8[2];
      BOOL v21 = (v18 & 1) == 0;
      uint64_t v22 = v20 + v21;
      if (__OFADD__(v20, v21)) {
        goto LABEL_36;
      }
      char v23 = v18;
      if (v8[3] >= v22)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          if ((v18 & 1) == 0) {
            goto LABEL_20;
          }
        }
        else
        {
          sub_2208246CC();
          if ((v23 & 1) == 0) {
            goto LABEL_20;
          }
        }
      }
      else
      {
        sub_22081DBE8(v22, isUniquelyReferenced_nonNull_native);
        uint64_t v24 = sub_22081D290(v12, v11);
        if ((v23 & 1) != (v25 & 1)) {
          goto LABEL_38;
        }
        unint64_t v19 = v24;
        if ((v23 & 1) == 0)
        {
LABEL_20:
          v8[(v19 >> 6) + 8] |= 1 << v19;
          uint64_t v26 = (uint64_t *)(v8[6] + 16 * v19);
          *uint64_t v26 = v12;
          v26[1] = v11;
          *(void *)(v8[7] + 8 * v19) = v16;
          uint64_t v27 = v8[2];
          BOOL v28 = __OFADD__(v27, 1);
          uint64_t v29 = v27 + 1;
          if (v28) {
            goto LABEL_37;
          }
          uint64_t v8[2] = v29;
          swift_bridgeObjectRetain();
          goto LABEL_22;
        }
      }
      *(void *)(v8[7] + 8 * v19) = v16;
LABEL_22:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v6 < v16)
      {
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41190);
        uint64_t v10 = swift_allocObject();
        *(_OWORD *)(v10 + 16) = xmmword_220944FB0;
        *(void *)(v10 + 32) = v12;
        *(void *)(v10 + 40) = v11;
        uint64_t v39 = (char *)v10;
        uint64_t v6 = v16;
      }
      else if (v16 == v6)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v39 = sub_22081B71C(0, *((void *)v39 + 2) + 1, 1, v39);
        }
        unint64_t v31 = *((void *)v39 + 2);
        unint64_t v30 = *((void *)v39 + 3);
        if (v31 >= v30 >> 1) {
          uint64_t v39 = sub_22081B71C((char *)(v30 > 1), v31 + 1, 1, v39);
        }
        *((void *)v39 + 2) = v31 + 1;
        uint64_t v32 = &v39[16 * v31];
        *((void *)v32 + 4) = v12;
        *((void *)v32 + 5) = v11;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v7 += 2;
      if (!--v9)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = a2;
        uint64_t v4 = a3;
        uint64_t v5 = v36;
        if (a2 <= 0) {
          goto LABEL_33;
        }
LABEL_31:
        uint64_t v33 = v8[2];
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v35 = v33 + 1;
        goto LABEL_34;
      }
    }
  }
  uint64_t v39 = (char *)MEMORY[0x263F8EE78];
  uint64_t v8 = (void *)MEMORY[0x263F8EE80];
  if (a2 > 0) {
    goto LABEL_31;
  }
LABEL_33:
  uint64_t v35 = v8[2];
  uint64_t result = swift_bridgeObjectRelease();
LABEL_34:
  *uint64_t v4 = v5;
  v4[1] = v3;
  uint64_t v4[2] = v35;
  v4[3] = v39;
  return result;
}

uint64_t sub_22083DCE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v3 = a2;
  uint64_t v4 = a3;
  uint64_t v35 = *(void *)(a1 + 16);
  if (v35)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = MEMORY[0x263F8EE78];
    uint64_t v9 = (void *)MEMORY[0x263F8EE80];
    while (1)
    {
      int v11 = *(unsigned __int8 *)(a1 + v7 + 32);
      uint64_t v12 = v9[2];
      if (v12)
      {
        unint64_t v13 = sub_22081D444(*(unsigned __int8 *)(a1 + v7 + 32));
        if (v14) {
          uint64_t v12 = *(void *)(v9[7] + 8 * v13);
        }
        else {
          uint64_t v12 = 0;
        }
      }
      uint64_t v15 = v12 + 1;
      if (__OFADD__(v12, 1))
      {
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        uint64_t result = sub_22093F2F0();
        __break(1u);
        return result;
      }
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v18 = sub_22081D444(v11);
      uint64_t v19 = v9[2];
      BOOL v20 = (v17 & 1) == 0;
      uint64_t v21 = v19 + v20;
      if (__OFADD__(v19, v20)) {
        goto LABEL_35;
      }
      char v22 = v17;
      if (v9[3] >= v21)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          if (v17) {
            goto LABEL_18;
          }
        }
        else
        {
          sub_220824E98();
          if (v22) {
            goto LABEL_18;
          }
        }
      }
      else
      {
        sub_22081E910(v21, isUniquelyReferenced_nonNull_native);
        unint64_t v23 = sub_22081D444(v11);
        if ((v22 & 1) != (v24 & 1)) {
          goto LABEL_37;
        }
        unint64_t v18 = v23;
        if (v22)
        {
LABEL_18:
          *(void *)(v9[7] + 8 * v18) = v15;
          goto LABEL_22;
        }
      }
      v9[(v18 >> 6) + 8] |= 1 << v18;
      *(unsigned char *)(v9[6] + v18) = v11;
      *(void *)(v9[7] + 8 * v18) = v15;
      uint64_t v25 = v9[2];
      BOOL v26 = __OFADD__(v25, 1);
      uint64_t v27 = v25 + 1;
      if (v26) {
        goto LABEL_36;
      }
      _OWORD v9[2] = v27;
LABEL_22:
      swift_bridgeObjectRelease();
      if (v6 < v15)
      {
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName(&qword_267F18858);
        uint64_t v8 = swift_allocObject();
        *(_OWORD *)(v8 + 16) = xmmword_220944FB0;
        uint64_t v10 = (unsigned char *)(v8 + 32);
        uint64_t v6 = v15;
      }
      else
      {
        if (v15 != v6) {
          goto LABEL_5;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v8 = (uint64_t)sub_22081BE6C(0, *(void *)(v8 + 16) + 1, 1, (char *)v8);
        }
        unint64_t v29 = *(void *)(v8 + 16);
        unint64_t v28 = *(void *)(v8 + 24);
        if (v29 >= v28 >> 1) {
          uint64_t v8 = (uint64_t)sub_22081BE6C((char *)(v28 > 1), v29 + 1, 1, (char *)v8);
        }
        *(void *)(v8 + 16) = v29 + 1;
        uint64_t v10 = (unsigned char *)(v8 + v29 + 32);
      }
      *uint64_t v10 = v11;
LABEL_5:
      if (v35 == ++v7)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = a2;
        uint64_t v4 = a3;
        if (a2 <= 0) {
          goto LABEL_32;
        }
LABEL_30:
        uint64_t v30 = v9[2];
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v32 = v30 + 1;
        goto LABEL_33;
      }
    }
  }
  uint64_t v8 = MEMORY[0x263F8EE78];
  uint64_t v9 = (void *)MEMORY[0x263F8EE80];
  if (a2 > 0) {
    goto LABEL_30;
  }
LABEL_32:
  uint64_t v32 = v9[2];
  uint64_t result = swift_bridgeObjectRelease();
LABEL_33:
  *uint64_t v4 = v35;
  v4[1] = v3;
  uint64_t v4[2] = v32;
  v4[3] = v8;
  return result;
}

uint64_t sub_22083DFC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v3 = a3;
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = MEMORY[0x263F8EE78];
    uint64_t v9 = (void *)MEMORY[0x263F8EE80];
    while (1)
    {
      double v11 = *(double *)(a1 + 8 * v7 + 32);
      uint64_t v12 = v9[2];
      if (v12)
      {
        unint64_t v13 = sub_22081D4B0(*(double *)(a1 + 8 * v7 + 32));
        if (v14) {
          uint64_t v12 = *(void *)(v9[7] + 8 * v13);
        }
        else {
          uint64_t v12 = 0;
        }
      }
      uint64_t v15 = v12 + 1;
      if (__OFADD__(v12, 1))
      {
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        uint64_t result = sub_22093F2F0();
        __break(1u);
        return result;
      }
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v18 = sub_22081D4B0(v11);
      uint64_t v19 = v9[2];
      BOOL v20 = (v17 & 1) == 0;
      uint64_t v21 = v19 + v20;
      if (__OFADD__(v19, v20)) {
        goto LABEL_35;
      }
      char v22 = v17;
      if (v9[3] >= v21)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          if (v17) {
            goto LABEL_18;
          }
        }
        else
        {
          sub_220825028();
          if (v22) {
            goto LABEL_18;
          }
        }
      }
      else
      {
        sub_22081EBD8(v21, isUniquelyReferenced_nonNull_native);
        unint64_t v23 = sub_22081D4B0(v11);
        if ((v22 & 1) != (v24 & 1)) {
          goto LABEL_37;
        }
        unint64_t v18 = v23;
        if (v22)
        {
LABEL_18:
          *(void *)(v9[7] + 8 * v18) = v15;
          goto LABEL_22;
        }
      }
      v9[(v18 >> 6) + 8] |= 1 << v18;
      uint64_t v25 = 8 * v18;
      *(double *)(v9[6] + v25) = v11;
      *(void *)(v9[7] + v25) = v15;
      uint64_t v26 = v9[2];
      BOOL v27 = __OFADD__(v26, 1);
      uint64_t v28 = v26 + 1;
      if (v27) {
        goto LABEL_36;
      }
      _OWORD v9[2] = v28;
LABEL_22:
      swift_bridgeObjectRelease();
      if (v6 < v15)
      {
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName(&qword_267F185F0);
        uint64_t v8 = swift_allocObject();
        *(_OWORD *)(v8 + 16) = xmmword_220944FB0;
        uint64_t v10 = (double *)(v8 + 32);
        uint64_t v6 = v15;
      }
      else
      {
        if (v15 != v6) {
          goto LABEL_5;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v8 = (uint64_t)sub_22081BF58(0, *(void *)(v8 + 16) + 1, 1, (char *)v8);
        }
        unint64_t v30 = *(void *)(v8 + 16);
        unint64_t v29 = *(void *)(v8 + 24);
        if (v30 >= v29 >> 1) {
          uint64_t v8 = (uint64_t)sub_22081BF58((char *)(v29 > 1), v30 + 1, 1, (char *)v8);
        }
        *(void *)(v8 + 16) = v30 + 1;
        uint64_t v10 = (double *)(v8 + 8 * v30 + 32);
      }
      *uint64_t v10 = v11;
LABEL_5:
      if (v4 == ++v7)
      {
        swift_bridgeObjectRelease();
        uint64_t v31 = a2;
        uint64_t v3 = a3;
        if (a2 <= 0) {
          goto LABEL_32;
        }
LABEL_30:
        uint64_t v32 = v9[2];
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v34 = v32 + 1;
        goto LABEL_33;
      }
    }
  }
  uint64_t v8 = MEMORY[0x263F8EE78];
  uint64_t v9 = (void *)MEMORY[0x263F8EE80];
  uint64_t v31 = a2;
  if (a2 > 0) {
    goto LABEL_30;
  }
LABEL_32:
  uint64_t v34 = v9[2];
  uint64_t result = swift_bridgeObjectRelease();
LABEL_33:
  *uint64_t v3 = v4;
  v3[1] = v31;
  v3[2] = v34;
  v3[3] = v8;
  return result;
}

uint64_t sub_22083E29C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v3 = a3;
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = MEMORY[0x263F8EE78];
    uint64_t v9 = (void *)MEMORY[0x263F8EE80];
    while (1)
    {
      float v11 = *(float *)(a1 + 4 * v7 + 32);
      uint64_t v12 = v9[2];
      if (v12)
      {
        unint64_t v13 = sub_22081D4F8(*(float *)(a1 + 4 * v7 + 32));
        if (v14) {
          uint64_t v12 = *(void *)(v9[7] + 8 * v13);
        }
        else {
          uint64_t v12 = 0;
        }
      }
      uint64_t v15 = v12 + 1;
      if (__OFADD__(v12, 1))
      {
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        uint64_t result = sub_22093F2F0();
        __break(1u);
        return result;
      }
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v18 = sub_22081D4F8(v11);
      uint64_t v19 = v9[2];
      BOOL v20 = (v17 & 1) == 0;
      uint64_t v21 = v19 + v20;
      if (__OFADD__(v19, v20)) {
        goto LABEL_35;
      }
      char v22 = v17;
      if (v9[3] >= v21)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          if (v17) {
            goto LABEL_18;
          }
        }
        else
        {
          sub_2208251B8();
          if (v22) {
            goto LABEL_18;
          }
        }
      }
      else
      {
        sub_22081EE84(v21, isUniquelyReferenced_nonNull_native);
        unint64_t v23 = sub_22081D4F8(v11);
        if ((v22 & 1) != (v24 & 1)) {
          goto LABEL_37;
        }
        unint64_t v18 = v23;
        if (v22)
        {
LABEL_18:
          *(void *)(v9[7] + 8 * v18) = v15;
          goto LABEL_22;
        }
      }
      v9[(v18 >> 6) + 8] |= 1 << v18;
      *(float *)(v9[6] + 4 * v18) = v11;
      *(void *)(v9[7] + 8 * v18) = v15;
      uint64_t v25 = v9[2];
      BOOL v26 = __OFADD__(v25, 1);
      uint64_t v27 = v25 + 1;
      if (v26) {
        goto LABEL_36;
      }
      _OWORD v9[2] = v27;
LABEL_22:
      swift_bridgeObjectRelease();
      if (v6 < v15)
      {
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName(&qword_267F18820);
        uint64_t v8 = swift_allocObject();
        *(_OWORD *)(v8 + 16) = xmmword_220944FB0;
        uint64_t v10 = (float *)(v8 + 32);
        uint64_t v6 = v15;
      }
      else
      {
        if (v15 != v6) {
          goto LABEL_5;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v8 = (uint64_t)sub_22081C054(0, *(void *)(v8 + 16) + 1, 1, (char *)v8);
        }
        unint64_t v29 = *(void *)(v8 + 16);
        unint64_t v28 = *(void *)(v8 + 24);
        if (v29 >= v28 >> 1) {
          uint64_t v8 = (uint64_t)sub_22081C054((char *)(v28 > 1), v29 + 1, 1, (char *)v8);
        }
        *(void *)(v8 + 16) = v29 + 1;
        uint64_t v10 = (float *)(v8 + 4 * v29 + 32);
      }
      *uint64_t v10 = v11;
LABEL_5:
      if (v4 == ++v7)
      {
        swift_bridgeObjectRelease();
        uint64_t v30 = a2;
        uint64_t v3 = a3;
        if (a2 <= 0) {
          goto LABEL_32;
        }
LABEL_30:
        uint64_t v31 = v9[2];
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v33 = v31 + 1;
        goto LABEL_33;
      }
    }
  }
  uint64_t v8 = MEMORY[0x263F8EE78];
  uint64_t v9 = (void *)MEMORY[0x263F8EE80];
  uint64_t v30 = a2;
  if (a2 > 0) {
    goto LABEL_30;
  }
LABEL_32:
  uint64_t v33 = v9[2];
  uint64_t result = swift_bridgeObjectRelease();
LABEL_33:
  *uint64_t v3 = v4;
  v3[1] = v30;
  v3[2] = v33;
  v3[3] = v8;
  return result;
}

uint64_t sub_22083E574@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = a3;
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = MEMORY[0x263F8EE78];
    uint64_t v10 = (void *)MEMORY[0x263F8EE80];
    while (1)
    {
      LOWORD(v3) = *(_WORD *)(a1 + 2 * v8 + 32);
      uint64_t v12 = v10[2];
      if (v12)
      {
        unint64_t v13 = sub_22081D544(v3);
        if (v14) {
          uint64_t v12 = *(void *)(v10[7] + 8 * v13);
        }
        else {
          uint64_t v12 = 0;
        }
      }
      uint64_t v15 = v12 + 1;
      if (__OFADD__(v12, 1))
      {
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        uint64_t result = sub_22093F2F0();
        __break(1u);
        return result;
      }
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v18 = sub_22081D544(v3);
      uint64_t v19 = v10[2];
      BOOL v20 = (v17 & 1) == 0;
      uint64_t v21 = v19 + v20;
      if (__OFADD__(v19, v20)) {
        goto LABEL_35;
      }
      char v22 = v17;
      if (v10[3] >= v21)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          if (v17) {
            goto LABEL_18;
          }
        }
        else
        {
          sub_22082534C();
          if (v22) {
            goto LABEL_18;
          }
        }
      }
      else
      {
        sub_22081F12C(v21, isUniquelyReferenced_nonNull_native);
        unint64_t v23 = sub_22081D544(v3);
        if ((v22 & 1) != (v24 & 1)) {
          goto LABEL_37;
        }
        unint64_t v18 = v23;
        if (v22)
        {
LABEL_18:
          *(void *)(v10[7] + 8 * v18) = v15;
          goto LABEL_22;
        }
      }
      v10[(v18 >> 6) + 8] |= 1 << v18;
      *(_WORD *)(v10[6] + 2 * v18) = LOWORD(v3);
      *(void *)(v10[7] + 8 * v18) = v15;
      uint64_t v25 = v10[2];
      BOOL v26 = __OFADD__(v25, 1);
      uint64_t v27 = v25 + 1;
      if (v26) {
        goto LABEL_36;
      }
      _OWORD v10[2] = v27;
LABEL_22:
      swift_bridgeObjectRelease();
      if (v7 < v15)
      {
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName(&qword_267F18838);
        uint64_t v9 = swift_allocObject();
        *(_OWORD *)(v9 + 16) = xmmword_220944FB0;
        float v11 = (_WORD *)(v9 + 32);
        uint64_t v7 = v15;
      }
      else
      {
        if (v15 != v7) {
          goto LABEL_5;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v9 = (uint64_t)sub_22081C150(0, *(void *)(v9 + 16) + 1, 1, (char *)v9);
        }
        unint64_t v29 = *(void *)(v9 + 16);
        unint64_t v28 = *(void *)(v9 + 24);
        if (v29 >= v28 >> 1) {
          uint64_t v9 = (uint64_t)sub_22081C150((char *)(v28 > 1), v29 + 1, 1, (char *)v9);
        }
        *(void *)(v9 + 16) = v29 + 1;
        float v11 = (_WORD *)(v9 + 2 * v29 + 32);
      }
      _WORD *v11 = LOWORD(v3);
LABEL_5:
      if (v5 == ++v8)
      {
        swift_bridgeObjectRelease();
        uint64_t v30 = a2;
        uint64_t v4 = a3;
        if (a2 <= 0) {
          goto LABEL_32;
        }
LABEL_30:
        uint64_t v31 = v10[2];
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v33 = v31 + 1;
        goto LABEL_33;
      }
    }
  }
  uint64_t v9 = MEMORY[0x263F8EE78];
  uint64_t v10 = (void *)MEMORY[0x263F8EE80];
  uint64_t v30 = a2;
  if (a2 > 0) {
    goto LABEL_30;
  }
LABEL_32:
  uint64_t v33 = v10[2];
  uint64_t result = swift_bridgeObjectRelease();
LABEL_33:
  *uint64_t v4 = v5;
  v4[1] = v30;
  uint64_t v4[2] = v33;
  v4[3] = v9;
  return result;
}

uint64_t sub_22083E84C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v3 = a2;
  uint64_t v4 = a3;
  uint64_t v36 = *(void *)(a1 + 16);
  if (v36)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = MEMORY[0x263F8EE78];
    uint64_t v9 = (void *)MEMORY[0x263F8EE80];
    while (1)
    {
      uint64_t v11 = *(void *)(a1 + 8 * v7 + 32);
      uint64_t v12 = v9[2];
      if (v12)
      {
        unint64_t v13 = sub_22081D590(*(void *)(a1 + 8 * v7 + 32));
        if (v14) {
          uint64_t v12 = *(void *)(v9[7] + 8 * v13);
        }
        else {
          uint64_t v12 = 0;
        }
      }
      uint64_t v15 = v12 + 1;
      if (__OFADD__(v12, 1))
      {
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        uint64_t result = sub_22093F2F0();
        __break(1u);
        return result;
      }
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v18 = sub_22081D590(v11);
      uint64_t v19 = v9[2];
      BOOL v20 = (v17 & 1) == 0;
      uint64_t v21 = v19 + v20;
      if (__OFADD__(v19, v20)) {
        goto LABEL_35;
      }
      char v22 = v17;
      if (v9[3] >= v21)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          if (v17) {
            goto LABEL_18;
          }
        }
        else
        {
          sub_2208254E0();
          if (v22) {
            goto LABEL_18;
          }
        }
      }
      else
      {
        sub_22081F3D4(v21, isUniquelyReferenced_nonNull_native);
        unint64_t v23 = sub_22081D590(v11);
        if ((v22 & 1) != (v24 & 1)) {
          goto LABEL_37;
        }
        unint64_t v18 = v23;
        if (v22)
        {
LABEL_18:
          *(void *)(v9[7] + 8 * v18) = v15;
          goto LABEL_22;
        }
      }
      v9[(v18 >> 6) + 8] |= 1 << v18;
      uint64_t v25 = 8 * v18;
      *(void *)(v9[6] + v25) = v11;
      *(void *)(v9[7] + v25) = v15;
      uint64_t v26 = v9[2];
      BOOL v27 = __OFADD__(v26, 1);
      uint64_t v28 = v26 + 1;
      if (v27) {
        goto LABEL_36;
      }
      _OWORD v9[2] = v28;
LABEL_22:
      swift_bridgeObjectRelease();
      if (v6 < v15)
      {
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26AD411A0);
        uint64_t v8 = swift_allocObject();
        *(_OWORD *)(v8 + 16) = xmmword_220944FB0;
        uint64_t v10 = (uint64_t *)(v8 + 32);
        uint64_t v6 = v15;
      }
      else
      {
        if (v15 != v6) {
          goto LABEL_5;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v8 = (uint64_t)sub_22081B4E8(0, *(void *)(v8 + 16) + 1, 1, (char *)v8);
        }
        unint64_t v30 = *(void *)(v8 + 16);
        unint64_t v29 = *(void *)(v8 + 24);
        if (v30 >= v29 >> 1) {
          uint64_t v8 = (uint64_t)sub_22081B4E8((char *)(v29 > 1), v30 + 1, 1, (char *)v8);
        }
        *(void *)(v8 + 16) = v30 + 1;
        uint64_t v10 = (uint64_t *)(v8 + 8 * v30 + 32);
      }
      *uint64_t v10 = v11;
LABEL_5:
      if (v36 == ++v7)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = a2;
        uint64_t v4 = a3;
        if (a2 <= 0) {
          goto LABEL_32;
        }
LABEL_30:
        uint64_t v31 = v9[2];
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v33 = v31 + 1;
        goto LABEL_33;
      }
    }
  }
  uint64_t v8 = MEMORY[0x263F8EE78];
  uint64_t v9 = (void *)MEMORY[0x263F8EE80];
  if (a2 > 0) {
    goto LABEL_30;
  }
LABEL_32:
  uint64_t v33 = v9[2];
  uint64_t result = swift_bridgeObjectRelease();
LABEL_33:
  *uint64_t v4 = v36;
  v4[1] = v3;
  uint64_t v4[2] = v33;
  v4[3] = v8;
  return result;
}

uint64_t DiscontiguousColumnSlice<A>.summary()()
{
  return sub_22091D9E8((uint64_t (*)(uint64_t))sub_220840234);
}

uint64_t sub_22083EBC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v34 = *(void *)(a2 + 32);
  uint64_t v35 = *(void *)(a2 + 24);
  unsigned __int8 v33 = *(unsigned char *)(a2 + 40);
  uint64_t v6 = sub_2208EE720(v35, v34, v33);
  unint64_t v7 = *(void *)(v6 + 16);
  uint64_t v32 = a2;
  uint64_t result = sub_22084312C(a2);
  unint64_t v9 = 0;
  uint64_t v10 = (void *)(v5 + 16);
  uint64_t v11 = MEMORY[0x263F8EE78];
LABEL_2:
  if (v9 <= v7) {
    unint64_t v12 = v7;
  }
  else {
    unint64_t v12 = v9;
  }
  while (v7 != v9)
  {
    if (v12 == v9)
    {
      __break(1u);
LABEL_25:
      __break(1u);
      return result;
    }
    uint64_t v13 = *(void *)(v6 + 8 * v9 + 32);
    uint64_t result = swift_beginAccess();
    if (!*v10) {
      goto LABEL_25;
    }
    uint64_t v15 = v13 - (v14 & 0xFFFFFFFFFFFFFFF8);
    ++v9;
    int v16 = 1 << v15;
    if (v15 < 0) {
      LOBYTE(v16) = 0;
    }
    if ((v16 & *(unsigned char *)(*v10 + v13 / 8 + 64)) != 0)
    {
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v38 = v11;
      if ((result & 1) == 0) {
        uint64_t result = (uint64_t)sub_220826C98(0, *(void *)(v11 + 16) + 1, 1);
      }
      unint64_t v18 = *(void *)(v11 + 16);
      unint64_t v17 = *(void *)(v11 + 24);
      unint64_t v19 = v18 + 1;
      if (v18 >= v17 >> 1)
      {
        unint64_t v20 = v18 + 1;
        unint64_t v31 = v18;
        uint64_t result = (uint64_t)sub_220826C98((char *)(v17 > 1), v18 + 1, 1);
        unint64_t v19 = v20;
        unint64_t v18 = v31;
        uint64_t v11 = v38;
      }
      *(void *)(v11 + 16) = v19;
      *(void *)(v11 + 8 * v18 + 32) = v13;
      goto LABEL_2;
    }
  }
  sub_220843060(v32);
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(sub_2208EE720(v35, v34, v33) + 16);
  swift_bridgeObjectRelease();
  int64_t v22 = *(void *)(v11 + 16);
  if (v22)
  {
    uint64_t v36 = v21;
    uint64_t v39 = MEMORY[0x263F8EE78];
    sub_220826E98(0, v22, 0);
    uint64_t v23 = 0;
    uint64_t v24 = v39;
    do
    {
      uint64_t v25 = (uint64_t *)(a1 + 16 * *(void *)(v11 + 8 * v23 + 32));
      uint64_t v26 = *v25;
      unint64_t v27 = v25[1];
      sub_22080B7F4(*v25, v27);
      unint64_t v29 = *(void *)(v39 + 16);
      unint64_t v28 = *(void *)(v39 + 24);
      if (v29 >= v28 >> 1) {
        sub_220826E98((char *)(v28 > 1), v29 + 1, 1);
      }
      ++v23;
      *(void *)(v39 + 16) = v29 + 1;
      unint64_t v30 = v39 + 16 * v29;
      *(void *)(v30 + 32) = v26;
      *(void *)(v30 + 40) = v27;
    }
    while (v22 != v23);
    swift_release();
    uint64_t v21 = v36;
  }
  else
  {
    swift_release();
    uint64_t v24 = MEMORY[0x263F8EE78];
  }
  sub_22083CFF4(v24, v21 - v22, a3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22083EE44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v43 = a1;
  uint64_t v39 = sub_22093E100();
  uint64_t v45 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v38 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a2 + 16);
  unint64_t v7 = *(void (**)(char *, uint64_t, uint64_t))(a2 + 24);
  int v9 = *(unsigned __int8 *)(a2 + 40);
  uint64_t v41 = *(void *)(a2 + 32);
  unint64_t v42 = v7;
  LODWORD(v40) = v9;
  uint64_t v10 = sub_2208EE720((uint64_t)v7, v41, v9);
  unint64_t v11 = *(void *)(v10 + 16);
  uint64_t v44 = a2;
  uint64_t result = sub_22084312C(a2);
  unint64_t v13 = 0;
  uint64_t v14 = (void *)(v8 + 16);
  uint64_t v15 = MEMORY[0x263F8EE78];
LABEL_2:
  if (v13 <= v11) {
    unint64_t v16 = v11;
  }
  else {
    unint64_t v16 = v13;
  }
  while (v11 != v13)
  {
    if (v16 == v13)
    {
      __break(1u);
LABEL_25:
      __break(1u);
      return result;
    }
    uint64_t v17 = *(void *)(v10 + 8 * v13 + 32);
    uint64_t result = swift_beginAccess();
    if (!*v14) {
      goto LABEL_25;
    }
    uint64_t v19 = v17 - (v18 & 0xFFFFFFFFFFFFFFF8);
    ++v13;
    int v20 = 1 << v19;
    if (v19 < 0) {
      LOBYTE(v20) = 0;
    }
    if ((v20 & *(unsigned char *)(*v14 + v17 / 8 + 64)) != 0)
    {
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v46 = v15;
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_220826C98(0, *(void *)(v15 + 16) + 1, 1);
        uint64_t v15 = v46;
      }
      uint64_t v21 = v15;
      unint64_t v22 = *(void *)(v15 + 16);
      unint64_t v23 = *(void *)(v21 + 24);
      uint64_t v24 = (void *)(v22 + 1);
      if (v22 >= v23 >> 1)
      {
        uint64_t v37 = (void *)(v22 + 1);
        uint64_t result = (uint64_t)sub_220826C98((char *)(v23 > 1), v22 + 1, 1);
        uint64_t v24 = v37;
        uint64_t v21 = v46;
      }
      *(void *)(v21 + 16) = v24;
      *(void *)(v21 + 8 * v22 + 32) = v17;
      uint64_t v15 = v21;
      goto LABEL_2;
    }
  }
  sub_220843060(v44);
  swift_bridgeObjectRelease();
  uint64_t v25 = *(void *)(sub_2208EE720((uint64_t)v42, v41, v40) + 16);
  swift_bridgeObjectRelease();
  int64_t v26 = *(void *)(v15 + 16);
  if (v26)
  {
    uint64_t v36 = v25;
    uint64_t v37 = a3;
    uint64_t v44 = v15;
    uint64_t v40 = v3;
    uint64_t v46 = MEMORY[0x263F8EE78];
    sub_220826EB8(0, v26, 0);
    uint64_t v27 = 0;
    uint64_t v28 = v46;
    unint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v45 + 16);
    uint64_t v30 = *(void *)(v45 + 72);
    uint64_t v41 = v45 + 32;
    unint64_t v42 = v29;
    uint64_t v32 = v38;
    uint64_t v31 = v39;
    do
    {
      v42(v32, v43 + v30 * *(void *)(v44 + 8 * v27 + 32), v31);
      uint64_t v46 = v28;
      unint64_t v34 = *(void *)(v28 + 16);
      unint64_t v33 = *(void *)(v28 + 24);
      if (v34 >= v33 >> 1)
      {
        sub_220826EB8(v33 > 1, v34 + 1, 1);
        uint64_t v28 = v46;
      }
      ++v27;
      *(void *)(v28 + 16) = v34 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v45 + 32))(v28 + ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80)) + v34 * v30, v32, v31);
    }
    while (v26 != v27);
    swift_release();
    uint64_t v25 = v36;
    a3 = v37;
  }
  else
  {
    swift_release();
    uint64_t v28 = MEMORY[0x263F8EE78];
  }
  sub_22083D344(v28, v25 - v26, a3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22083F1B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v34 = *(void *)(a2 + 32);
  uint64_t v35 = *(void *)(a2 + 24);
  unsigned __int8 v33 = *(unsigned char *)(a2 + 40);
  uint64_t v6 = sub_2208EE720(v35, v34, v33);
  unint64_t v7 = *(void *)(v6 + 16);
  uint64_t v32 = a2;
  uint64_t result = sub_22084312C(a2);
  unint64_t v9 = 0;
  uint64_t v10 = (void *)(v5 + 16);
  uint64_t v11 = MEMORY[0x263F8EE78];
LABEL_2:
  if (v9 <= v7) {
    unint64_t v12 = v7;
  }
  else {
    unint64_t v12 = v9;
  }
  while (v7 != v9)
  {
    if (v12 == v9)
    {
      __break(1u);
LABEL_25:
      __break(1u);
      return result;
    }
    uint64_t v13 = *(void *)(v6 + 8 * v9 + 32);
    uint64_t result = swift_beginAccess();
    if (!*v10) {
      goto LABEL_25;
    }
    uint64_t v15 = v13 - (v14 & 0xFFFFFFFFFFFFFFF8);
    ++v9;
    int v16 = 1 << v15;
    if (v15 < 0) {
      LOBYTE(v16) = 0;
    }
    if ((v16 & *(unsigned char *)(*v10 + v13 / 8 + 64)) != 0)
    {
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v38 = v11;
      if ((result & 1) == 0) {
        uint64_t result = (uint64_t)sub_220826C98(0, *(void *)(v11 + 16) + 1, 1);
      }
      unint64_t v18 = *(void *)(v11 + 16);
      unint64_t v17 = *(void *)(v11 + 24);
      unint64_t v19 = v18 + 1;
      if (v18 >= v17 >> 1)
      {
        unint64_t v20 = v18 + 1;
        unint64_t v31 = v18;
        uint64_t result = (uint64_t)sub_220826C98((char *)(v17 > 1), v18 + 1, 1);
        unint64_t v19 = v20;
        unint64_t v18 = v31;
        uint64_t v11 = v38;
      }
      *(void *)(v11 + 16) = v19;
      *(void *)(v11 + 8 * v18 + 32) = v13;
      goto LABEL_2;
    }
  }
  sub_220843060(v32);
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(sub_2208EE720(v35, v34, v33) + 16);
  swift_bridgeObjectRelease();
  int64_t v22 = *(void *)(v11 + 16);
  if (v22)
  {
    uint64_t v36 = v21;
    uint64_t v39 = MEMORY[0x263F8EE78];
    sub_220826C78(0, v22, 0);
    uint64_t v23 = 0;
    uint64_t v24 = v39;
    do
    {
      uint64_t v25 = (uint64_t *)(a1 + 16 * *(void *)(v11 + 8 * v23 + 32));
      uint64_t v27 = *v25;
      uint64_t v26 = v25[1];
      unint64_t v29 = *(void *)(v39 + 16);
      unint64_t v28 = *(void *)(v39 + 24);
      swift_bridgeObjectRetain();
      if (v29 >= v28 >> 1) {
        sub_220826C78((char *)(v28 > 1), v29 + 1, 1);
      }
      ++v23;
      *(void *)(v39 + 16) = v29 + 1;
      unint64_t v30 = v39 + 16 * v29;
      *(void *)(v30 + 32) = v27;
      *(void *)(v30 + 40) = v26;
    }
    while (v22 != v23);
    swift_release();
    uint64_t v21 = v36;
  }
  else
  {
    swift_release();
    uint64_t v24 = MEMORY[0x263F8EE78];
  }
  sub_22083D9B0(v24, v21 - v22, a3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22083F430@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v31 = *(void *)(a2 + 32);
  uint64_t v32 = *(void *)(a2 + 24);
  unsigned __int8 v30 = *(unsigned char *)(a2 + 40);
  uint64_t v6 = sub_2208EE720(v32, v31, v30);
  unint64_t v7 = *(void *)(v6 + 16);
  uint64_t v29 = a2;
  uint64_t result = sub_22084312C(a2);
  unint64_t v9 = 0;
  uint64_t v10 = (void *)(v5 + 16);
  uint64_t v11 = MEMORY[0x263F8EE78];
LABEL_2:
  if (v9 <= v7) {
    unint64_t v12 = v7;
  }
  else {
    unint64_t v12 = v9;
  }
  while (v7 != v9)
  {
    if (v12 == v9)
    {
      __break(1u);
LABEL_25:
      __break(1u);
      return result;
    }
    uint64_t v13 = *(void *)(v6 + 8 * v9 + 32);
    uint64_t result = swift_beginAccess();
    if (!*v10) {
      goto LABEL_25;
    }
    uint64_t v15 = v13 - (v14 & 0xFFFFFFFFFFFFFFF8);
    ++v9;
    int v16 = 1 << v15;
    if (v15 < 0) {
      LOBYTE(v16) = 0;
    }
    if ((v16 & *(unsigned char *)(*v10 + v13 / 8 + 64)) != 0)
    {
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v34 = v11;
      if ((result & 1) == 0) {
        uint64_t result = (uint64_t)sub_220826C98(0, *(void *)(v11 + 16) + 1, 1);
      }
      unint64_t v18 = *(void *)(v11 + 16);
      unint64_t v17 = *(void *)(v11 + 24);
      unint64_t v19 = v18 + 1;
      if (v18 >= v17 >> 1)
      {
        unint64_t v20 = v18 + 1;
        unint64_t v28 = v18;
        uint64_t result = (uint64_t)sub_220826C98((char *)(v17 > 1), v18 + 1, 1);
        unint64_t v19 = v20;
        unint64_t v18 = v28;
        uint64_t v11 = v34;
      }
      *(void *)(v11 + 16) = v19;
      *(void *)(v11 + 8 * v18 + 32) = v13;
      goto LABEL_2;
    }
  }
  sub_220843060(v29);
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(sub_2208EE720(v32, v31, v30) + 16);
  swift_bridgeObjectRelease();
  int64_t v22 = *(void *)(v11 + 16);
  if (v22)
  {
    uint64_t v35 = MEMORY[0x263F8EE78];
    sub_220826ED8(0, v22, 0);
    uint64_t v23 = 0;
    uint64_t v24 = v35;
    uint64_t v25 = *(void *)(v35 + 16);
    do
    {
      char v26 = *(unsigned char *)(a1 + *(void *)(v11 + 8 * v23 + 32));
      unint64_t v27 = *(void *)(v35 + 24);
      if (v25 + v23 >= v27 >> 1) {
        sub_220826ED8((char *)(v27 > 1), v25 + v23 + 1, 1);
      }
      *(void *)(v35 + 16) = v25 + v23 + 1;
      *(unsigned char *)(v35 + v25 + v23++ + 32) = v26;
    }
    while (v22 != v23);
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v24 = MEMORY[0x263F8EE78];
  }
  sub_22083DCE4(v24, v21 - v22, a3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22083F6AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v31 = *(void *)(a2 + 32);
  uint64_t v32 = *(void *)(a2 + 24);
  unsigned __int8 v30 = *(unsigned char *)(a2 + 40);
  uint64_t v6 = sub_2208EE720(v32, v31, v30);
  unint64_t v7 = *(void *)(v6 + 16);
  uint64_t v29 = a2;
  uint64_t result = sub_22084312C(a2);
  unint64_t v9 = 0;
  uint64_t v10 = (void *)(v5 + 16);
  uint64_t v11 = MEMORY[0x263F8EE78];
LABEL_2:
  if (v9 <= v7) {
    unint64_t v12 = v7;
  }
  else {
    unint64_t v12 = v9;
  }
  while (v7 != v9)
  {
    if (v12 == v9)
    {
      __break(1u);
LABEL_25:
      __break(1u);
      return result;
    }
    uint64_t v13 = *(void *)(v6 + 8 * v9 + 32);
    uint64_t result = swift_beginAccess();
    if (!*v10) {
      goto LABEL_25;
    }
    uint64_t v15 = v13 - (v14 & 0xFFFFFFFFFFFFFFF8);
    ++v9;
    int v16 = 1 << v15;
    if (v15 < 0) {
      LOBYTE(v16) = 0;
    }
    if ((v16 & *(unsigned char *)(*v10 + v13 / 8 + 64)) != 0)
    {
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v34 = v11;
      if ((result & 1) == 0) {
        uint64_t result = (uint64_t)sub_220826C98(0, *(void *)(v11 + 16) + 1, 1);
      }
      unint64_t v18 = *(void *)(v11 + 16);
      unint64_t v17 = *(void *)(v11 + 24);
      unint64_t v19 = v18 + 1;
      if (v18 >= v17 >> 1)
      {
        unint64_t v20 = v18 + 1;
        unint64_t v28 = v18;
        uint64_t result = (uint64_t)sub_220826C98((char *)(v17 > 1), v18 + 1, 1);
        unint64_t v19 = v20;
        unint64_t v18 = v28;
        uint64_t v11 = v34;
      }
      *(void *)(v11 + 16) = v19;
      *(void *)(v11 + 8 * v18 + 32) = v13;
      goto LABEL_2;
    }
  }
  sub_220843060(v29);
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(sub_2208EE720(v32, v31, v30) + 16);
  swift_bridgeObjectRelease();
  int64_t v22 = *(void *)(v11 + 16);
  if (v22)
  {
    uint64_t v35 = MEMORY[0x263F8EE78];
    sub_220826EF8(0, v22, 0);
    uint64_t v23 = 0;
    uint64_t v24 = v35;
    unint64_t v25 = *(void *)(v35 + 16);
    do
    {
      uint64_t v26 = *(void *)(a1 + 8 * *(void *)(v11 + 8 * v23 + 32));
      unint64_t v27 = *(void *)(v35 + 24);
      if (v25 >= v27 >> 1) {
        sub_220826EF8((char *)(v27 > 1), v25 + 1, 1);
      }
      ++v23;
      *(void *)(v35 + 16) = v25 + 1;
      *(void *)(v35 + 8 * v25++ + 32) = v26;
    }
    while (v22 != v23);
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v24 = MEMORY[0x263F8EE78];
  }
  sub_22083DFC0(v24, v21 - v22, a3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22083F928@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v31 = *(void *)(a2 + 32);
  uint64_t v32 = *(void *)(a2 + 24);
  unsigned __int8 v30 = *(unsigned char *)(a2 + 40);
  uint64_t v6 = sub_2208EE720(v32, v31, v30);
  unint64_t v7 = *(void *)(v6 + 16);
  uint64_t v29 = a2;
  uint64_t result = sub_22084312C(a2);
  unint64_t v9 = 0;
  uint64_t v10 = (void *)(v5 + 16);
  uint64_t v11 = MEMORY[0x263F8EE78];
LABEL_2:
  if (v9 <= v7) {
    unint64_t v12 = v7;
  }
  else {
    unint64_t v12 = v9;
  }
  while (v7 != v9)
  {
    if (v12 == v9)
    {
      __break(1u);
LABEL_25:
      __break(1u);
      return result;
    }
    uint64_t v13 = *(void *)(v6 + 8 * v9 + 32);
    uint64_t result = swift_beginAccess();
    if (!*v10) {
      goto LABEL_25;
    }
    uint64_t v15 = v13 - (v14 & 0xFFFFFFFFFFFFFFF8);
    ++v9;
    int v16 = 1 << v15;
    if (v15 < 0) {
      LOBYTE(v16) = 0;
    }
    if ((v16 & *(unsigned char *)(*v10 + v13 / 8 + 64)) != 0)
    {
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v34 = v11;
      if ((result & 1) == 0) {
        uint64_t result = (uint64_t)sub_220826C98(0, *(void *)(v11 + 16) + 1, 1);
      }
      unint64_t v18 = *(void *)(v11 + 16);
      unint64_t v17 = *(void *)(v11 + 24);
      unint64_t v19 = v18 + 1;
      if (v18 >= v17 >> 1)
      {
        unint64_t v20 = v18 + 1;
        unint64_t v28 = v18;
        uint64_t result = (uint64_t)sub_220826C98((char *)(v17 > 1), v18 + 1, 1);
        unint64_t v19 = v20;
        unint64_t v18 = v28;
        uint64_t v11 = v34;
      }
      *(void *)(v11 + 16) = v19;
      *(void *)(v11 + 8 * v18 + 32) = v13;
      goto LABEL_2;
    }
  }
  sub_220843060(v29);
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(sub_2208EE720(v32, v31, v30) + 16);
  swift_bridgeObjectRelease();
  int64_t v22 = *(void *)(v11 + 16);
  if (v22)
  {
    uint64_t v35 = MEMORY[0x263F8EE78];
    sub_220826F18(0, v22, 0);
    uint64_t v23 = 0;
    uint64_t v24 = v35;
    unint64_t v25 = *(void *)(v35 + 16);
    do
    {
      int v26 = *(_DWORD *)(a1 + 4 * *(void *)(v11 + 8 * v23 + 32));
      unint64_t v27 = *(void *)(v35 + 24);
      if (v25 >= v27 >> 1) {
        sub_220826F18((char *)(v27 > 1), v25 + 1, 1);
      }
      ++v23;
      *(void *)(v35 + 16) = v25 + 1;
      *(_DWORD *)(v35 + 4 * v25++ + 32) = v26;
    }
    while (v22 != v23);
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v24 = MEMORY[0x263F8EE78];
  }
  sub_22083E29C(v24, v21 - v22, a3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22083FBA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v31 = *(void *)(a2 + 32);
  uint64_t v32 = *(void *)(a2 + 24);
  unsigned __int8 v30 = *(unsigned char *)(a2 + 40);
  uint64_t v6 = sub_2208EE720(v32, v31, v30);
  unint64_t v7 = *(void *)(v6 + 16);
  uint64_t v29 = a2;
  uint64_t result = sub_22084312C(a2);
  unint64_t v9 = 0;
  uint64_t v10 = (void *)(v5 + 16);
  uint64_t v11 = MEMORY[0x263F8EE78];
LABEL_2:
  if (v9 <= v7) {
    unint64_t v12 = v7;
  }
  else {
    unint64_t v12 = v9;
  }
  while (v7 != v9)
  {
    if (v12 == v9)
    {
      __break(1u);
LABEL_25:
      __break(1u);
      return result;
    }
    uint64_t v13 = *(void *)(v6 + 8 * v9 + 32);
    uint64_t result = swift_beginAccess();
    if (!*v10) {
      goto LABEL_25;
    }
    uint64_t v15 = v13 - (v14 & 0xFFFFFFFFFFFFFFF8);
    ++v9;
    int v16 = 1 << v15;
    if (v15 < 0) {
      LOBYTE(v16) = 0;
    }
    if ((v16 & *(unsigned char *)(*v10 + v13 / 8 + 64)) != 0)
    {
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v34 = v11;
      if ((result & 1) == 0) {
        uint64_t result = (uint64_t)sub_220826C98(0, *(void *)(v11 + 16) + 1, 1);
      }
      unint64_t v18 = *(void *)(v11 + 16);
      unint64_t v17 = *(void *)(v11 + 24);
      unint64_t v19 = v18 + 1;
      if (v18 >= v17 >> 1)
      {
        unint64_t v20 = v18 + 1;
        unint64_t v28 = v18;
        uint64_t result = (uint64_t)sub_220826C98((char *)(v17 > 1), v18 + 1, 1);
        unint64_t v19 = v20;
        unint64_t v18 = v28;
        uint64_t v11 = v34;
      }
      *(void *)(v11 + 16) = v19;
      *(void *)(v11 + 8 * v18 + 32) = v13;
      goto LABEL_2;
    }
  }
  sub_220843060(v29);
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(sub_2208EE720(v32, v31, v30) + 16);
  swift_bridgeObjectRelease();
  int64_t v22 = *(void *)(v11 + 16);
  if (v22)
  {
    uint64_t v35 = MEMORY[0x263F8EE78];
    sub_220826F38(0, v22, 0);
    uint64_t v23 = 0;
    uint64_t v24 = v35;
    unint64_t v25 = *(void *)(v35 + 16);
    do
    {
      __int16 v26 = *(_WORD *)(a1 + 2 * *(void *)(v11 + 8 * v23 + 32));
      unint64_t v27 = *(void *)(v35 + 24);
      if (v25 >= v27 >> 1) {
        sub_220826F38((char *)(v27 > 1), v25 + 1, 1);
      }
      ++v23;
      *(void *)(v35 + 16) = v25 + 1;
      *(_WORD *)(v35 + 2 * v25++ + 32) = v26;
    }
    while (v22 != v23);
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v24 = MEMORY[0x263F8EE78];
  }
  sub_22083E574(v24, v21 - v22, a3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22083FE20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v31 = *(void *)(a2 + 32);
  uint64_t v32 = *(void *)(a2 + 24);
  unsigned __int8 v30 = *(unsigned char *)(a2 + 40);
  uint64_t v6 = sub_2208EE720(v32, v31, v30);
  unint64_t v7 = *(void *)(v6 + 16);
  uint64_t v29 = a2;
  uint64_t result = sub_22084312C(a2);
  unint64_t v9 = 0;
  uint64_t v10 = (void *)(v5 + 16);
  uint64_t v11 = MEMORY[0x263F8EE78];
LABEL_2:
  if (v9 <= v7) {
    unint64_t v12 = v7;
  }
  else {
    unint64_t v12 = v9;
  }
  while (v7 != v9)
  {
    if (v12 == v9)
    {
      __break(1u);
LABEL_25:
      __break(1u);
      return result;
    }
    uint64_t v13 = *(void *)(v6 + 8 * v9 + 32);
    uint64_t result = swift_beginAccess();
    if (!*v10) {
      goto LABEL_25;
    }
    uint64_t v15 = v13 - (v14 & 0xFFFFFFFFFFFFFFF8);
    ++v9;
    int v16 = 1 << v15;
    if (v15 < 0) {
      LOBYTE(v16) = 0;
    }
    if ((v16 & *(unsigned char *)(*v10 + v13 / 8 + 64)) != 0)
    {
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v34 = v11;
      if ((result & 1) == 0) {
        uint64_t result = (uint64_t)sub_220826C98(0, *(void *)(v11 + 16) + 1, 1);
      }
      unint64_t v18 = *(void *)(v11 + 16);
      unint64_t v17 = *(void *)(v11 + 24);
      unint64_t v19 = v18 + 1;
      if (v18 >= v17 >> 1)
      {
        unint64_t v20 = v18 + 1;
        unint64_t v28 = v18;
        uint64_t result = (uint64_t)sub_220826C98((char *)(v17 > 1), v18 + 1, 1);
        unint64_t v19 = v20;
        unint64_t v18 = v28;
        uint64_t v11 = v34;
      }
      *(void *)(v11 + 16) = v19;
      *(void *)(v11 + 8 * v18 + 32) = v13;
      goto LABEL_2;
    }
  }
  sub_220843060(v29);
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(sub_2208EE720(v32, v31, v30) + 16);
  swift_bridgeObjectRelease();
  int64_t v22 = *(void *)(v11 + 16);
  if (v22)
  {
    uint64_t v35 = MEMORY[0x263F8EE78];
    sub_220826C98(0, v22, 0);
    uint64_t v23 = 0;
    uint64_t v24 = v35;
    unint64_t v25 = *(void *)(v35 + 16);
    do
    {
      uint64_t v26 = *(void *)(a1 + 8 * *(void *)(v11 + 8 * v23 + 32));
      unint64_t v27 = *(void *)(v35 + 24);
      if (v25 >= v27 >> 1) {
        sub_220826C98((char *)(v27 > 1), v25 + 1, 1);
      }
      ++v23;
      *(void *)(v35 + 16) = v25 + 1;
      *(void *)(v35 + 8 * v25++ + 32) = v26;
    }
    while (v22 != v23);
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v24 = MEMORY[0x263F8EE78];
  }
  sub_22083E84C(v24, v21 - v22, a3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_220840094@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v11 = *(void *)(a3 + 24);
  uint64_t v12 = *(void *)(a3 + 32);
  unsigned __int8 v13 = *(unsigned char *)(a3 + 40);
  uint64_t v14 = sub_2208EE720(v11, v12, v13);
  uint64_t v31 = a4;
  uint64_t v32 = a5;
  uint64_t v33 = a3;
  uint64_t v15 = sub_22091B844((uint64_t)sub_220843270, (uint64_t)v30, v14);
  uint64_t v16 = *(void *)(sub_2208EE720(v11, v12, v13) + 16);
  swift_bridgeObjectRelease();
  uint64_t v17 = v16 - *(void *)(v15 + 16);
  uint64_t v34 = v15;
  uint64_t v26 = a4;
  uint64_t v27 = a5;
  uint64_t v28 = a1;
  uint64_t v29 = a2;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B18);
  unint64_t v19 = sub_220843214();
  uint64_t v21 = sub_2208F0D18((void (*)(char *, char *))sub_2208431FC, (uint64_t)v25, v18, a4, MEMORY[0x263F8E628], v19, MEMORY[0x263F8E658], v20);
  swift_bridgeObjectRelease();
  uint64_t v34 = v21;
  uint64_t v22 = sub_22093E900();
  swift_getWitnessTable();
  sub_2208AF410((uint64_t)&v34, v17, a4, v22, a5, a6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_220840234@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_220840094(a1, a2, v3[4], v3[2], v3[3], a3);
}

uint64_t ColumnSlice<A>.summary()()
{
  return swift_release();
}

void *sub_220840350@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v30 = a2;
  long long v11 = a3[1];
  long long v35 = *a3;
  long long v36 = v11;
  uint64_t v37 = *((void *)a3 + 4);
  type metadata accessor for Column();
  swift_getWitnessTable();
  uint64_t v12 = sub_22093F3B0();
  sub_22093F340();
  uint64_t v13 = v38;
  long long v32 = v35;
  long long v33 = v36;
  uint64_t v34 = v37;
  uint64_t result = MEMORY[0x223C6AAB0](&v31, v12);
  if (v31 < v13)
  {
    __break(1u);
  }
  else
  {
    MEMORY[0x270FA5388](result);
    uint64_t v25 = a4;
    uint64_t v26 = a5;
    uint64_t v27 = a3;
    uint64_t v16 = sub_2208BB82C((uint64_t)sub_22084318C, (uint64_t)v24, v13, v15);
    long long v32 = v35;
    long long v33 = v36;
    uint64_t v34 = v37;
    swift_getWitnessTable();
    uint64_t result = (void *)sub_22093EB20();
    uint64_t v17 = *(void *)(v16 + 16);
    uint64_t v18 = (uint64_t)result - v17;
    if (!__OFSUB__(result, v17))
    {
      uint64_t v29 = a6;
      *(void *)&long long v32 = v16;
      MEMORY[0x270FA5388](result);
      uint64_t v25 = a4;
      uint64_t v26 = a5;
      uint64_t v27 = a1;
      uint64_t v28 = v30;
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B18);
      unint64_t v20 = sub_220843214();
      uint64_t v22 = sub_2208F0D18((void (*)(char *, char *))sub_2208431FC, (uint64_t)v24, v19, a4, MEMORY[0x263F8E628], v20, MEMORY[0x263F8E658], v21);
      swift_bridgeObjectRelease();
      *(void *)&long long v32 = v22;
      uint64_t v23 = sub_22093E900();
      swift_getWitnessTable();
      sub_2208AF410((uint64_t)&v32, v18, a4, v23, a5, v29);
      return (void *)swift_bridgeObjectRelease();
    }
  }
  __break(1u);
  return result;
}

void *sub_2208405E8@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_220840350(a1, a2, *(long long **)(v3 + 32), *(void *)(v3 + 16), *(void *)(v3 + 24), a3);
}

uint64_t FilledColumn<>.summary()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v18 = a3;
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v10 = (char *)&v17 - v9;
  sub_22093EAB0();
  uint64_t v20 = v6;
  uint64_t v21 = v5;
  uint64_t v22 = a2;
  uint64_t v23 = v3;
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v14 = sub_2208F0D18((void (*)(char *, char *))sub_220840800, (uint64_t)v19, AssociatedTypeWitness, v11, MEMORY[0x263F8E628], AssociatedConformanceWitness, MEMORY[0x263F8E658], v13);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
  uint64_t v24 = v14;
  uint64_t v15 = sub_22093E900();
  swift_getWitnessTable();
  sub_2208AF410((uint64_t)&v24, 0, v11, v15, a2, v18);
  return swift_bridgeObjectRelease();
}

uint64_t sub_220840800@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for FilledColumn();
  return FilledColumn.subscript.getter(a1, v4, a2);
}

uint64_t sub_220840854@<X0>(void *a1@<X8>)
{
  uint64_t v4 = v1;
  uint64_t v7 = v1[3];
  uint64_t v6 = v1[4];
  __swift_project_boxed_opaque_existential_1(v4, v7);
  (*(void (**)(uint64_t))(*(void *)(v6 + 8) + 80))(v7);
  if (swift_dynamicCastMetatype())
  {
    sub_22092810C();
    uint64_t v4 = (void *)v86;
    uint64_t v8 = (char *)v87;
    uint64_t result = swift_beginAccess();
    uint64_t v10 = *(uint64_t **)(v87 + 16);
    if (v10)
    {
      uint64_t v11 = *v10 + 7;
      if (!__OFADD__(*v10, 7))
      {
        if (v11 < 0) {
          uint64_t v11 = *v10 + 14;
        }
        uint64_t v12 = v11 >> 3;
        uint64_t v14 = v12 - 1;
        BOOL v13 = v12 < 1;
        uint64_t v15 = v12 + 62;
        if (!v13) {
          uint64_t v15 = v14;
        }
        sub_22083C8A4((uint64_t)v10 + (v15 & 0xFFFFFFFFFFFFFFC0) + 128, *v10, *((uint64_t *)&v86 + 1), v87, &v92);
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v17 = *((void *)&v92 + 1);
        uint64_t v16 = v92;
        uint64_t v18 = v93;
        uint64_t v19 = sub_2208865FC(*((uint64_t *)&v93 + 1));
        uint64_t v20 = MEMORY[0x263F8D6C8];
        goto LABEL_69;
      }
      __break(1u);
      do
      {
LABEL_74:
        uint64_t v75 = *((void *)&v93 + 1);
        uint64_t v74 = v94;
        __swift_project_boxed_opaque_existential_1(&v92, *((uint64_t *)&v93 + 1));
        (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(*(void *)(v74 + 8) + 128))(v85, v3, v75);
        sub_22080B5B8((uint64_t)&v92, (uint64_t)&v86);
        uint64_t v77 = *((void *)&v87 + 1);
        uint64_t v76 = v88;
        __swift_project_boxed_opaque_existential_1(&v86, *((uint64_t *)&v87 + 1));
        *((void *)&v94 + 1) = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v76 + 8) + 64))(v3, v77);
        sub_22080B0D8((uint64_t)&v86);
        sub_220842F90((uint64_t)v85, (uint64_t)v84);
        sub_220842FF8((uint64_t)v84, (uint64_t)&v89);
        if (v90)
        {
          if ((swift_dynamicCast() & 1) == 0)
          {
            *(void *)&long long v88 = 0;
            long long v86 = 0u;
            long long v87 = 0u;
          }
        }
        else
        {
          sub_2208352E4((uint64_t)&v89, qword_26AD40FF8);
          long long v86 = 0u;
          long long v87 = 0u;
          *(void *)&long long v88 = 0;
        }
        sub_2208352E4((uint64_t)v84, qword_26AD40FF8);
        if (*((void *)&v87 + 1))
        {
          long long v89 = v86;
          v2[1] = v87;
          uint64_t v91 = v88;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v8 = sub_22081BA64(0, *((void *)v8 + 2) + 1, 1, v8);
          }
          unint64_t v79 = *((void *)v8 + 2);
          unint64_t v78 = *((void *)v8 + 3);
          if (v79 >= v78 >> 1) {
            uint64_t v8 = sub_22081BA64((char *)(v78 > 1), v79 + 1, 1, v8);
          }
          *((void *)v8 + 2) = v79 + 1;
          uint64_t v80 = &v8[40 * v79];
          long long v81 = v89;
          long long v82 = v2[1];
          *((void *)v80 + 8) = v91;
          *((_OWORD *)v80 + 2) = v81;
          *((_OWORD *)v80 + 3) = v82;
        }
        else
        {
          sub_2208352E4((uint64_t)&v86, &qword_267F18658);
        }
        uint64_t v3 = *((void *)&v94 + 1);
        uint64_t v72 = v94;
        uint64_t v73 = *((void *)&v93 + 1);
        __swift_project_boxed_opaque_existential_1(&v92, *((uint64_t *)&v93 + 1));
      }
      while (v3 != (*(uint64_t (**)(uint64_t))(*(void *)(v72 + 8) + 40))(v73));
LABEL_66:
      sub_2208352E4((uint64_t)&v92, &qword_267F188F8);
      uint64_t v63 = v4[3];
      uint64_t v62 = v4[4];
      __swift_project_boxed_opaque_existential_1(v4, v63);
      uint64_t v64 = (*(uint64_t (**)(uint64_t))(*(void *)(v62 + 8) + 48))(v63);
      uint64_t v66 = v4[3];
      uint64_t v65 = v4[4];
      __swift_project_boxed_opaque_existential_1(v4, v66);
      uint64_t v67 = (*(uint64_t (**)(uint64_t))(*(void *)(v65 + 8) + 32))(v66);
      uint64_t v69 = v4[3];
      uint64_t v68 = v4[4];
      __swift_project_boxed_opaque_existential_1(v4, v69);
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v68 + 8) + 40))(v69);
      if (result >= v67)
      {
        MEMORY[0x270FA5388](result);
        v83[2] = v4;
        uint64_t v71 = *(void *)(sub_2208BB82C((uint64_t)sub_2208430BC, (uint64_t)v83, v67, v70) + 16);
        uint64_t result = swift_bridgeObjectRelease();
        if (!__OFSUB__(v64, v71))
        {
          sub_22083CCB8((uint64_t)v8, v64 - v71, &v92);
          swift_bridgeObjectRelease();
          uint64_t v17 = *((void *)&v92 + 1);
          uint64_t v16 = v92;
          uint64_t v18 = v93;
          uint64_t v19 = sub_220885C24(*((uint64_t *)&v93 + 1));
          uint64_t v20 = MEMORY[0x263F8DB68];
LABEL_69:
          uint64_t result = swift_bridgeObjectRelease();
          *a1 = v16;
          a1[1] = v17;
          a1[2] = v18;
          a1[3] = v19;
          a1[4] = v20;
          return result;
        }
        goto LABEL_94;
      }
LABEL_93:
      __break(1u);
LABEL_94:
      __break(1u);
      goto LABEL_95;
    }
    goto LABEL_90;
  }
  if (swift_dynamicCastMetatype())
  {
    sub_2209282BC();
    uint64_t result = swift_beginAccess();
    uint64_t v21 = *(uint64_t **)(v87 + 16);
    if (!v21)
    {
LABEL_92:
      __break(1u);
      goto LABEL_93;
    }
    uint64_t v22 = *v21 + 7;
    if (!__OFADD__(*v21, 7))
    {
      if (v22 < 0) {
        uint64_t v22 = *v21 + 14;
      }
      uint64_t v23 = v22 >> 3;
      uint64_t v24 = v23 - 1;
      BOOL v13 = v23 < 1;
      uint64_t v25 = v23 + 62;
      if (!v13) {
        uint64_t v25 = v24;
      }
      sub_22083C664((uint64_t)v21 + (v25 & 0xFFFFFFFFFFFFFFC0) + 128, *v21, *((uint64_t *)&v86 + 1), v87, &v92);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v17 = *((void *)&v92 + 1);
      uint64_t v16 = v92;
      uint64_t v18 = v93;
      uint64_t v19 = sub_2208864D8(*((uint64_t *)&v93 + 1));
      uint64_t v20 = MEMORY[0x263F8E9F8];
      goto LABEL_69;
    }
    __break(1u);
    goto LABEL_85;
  }
  if (swift_dynamicCastMetatype())
  {
    sub_220928474();
    uint64_t result = swift_beginAccess();
    uint64_t v26 = *(uint64_t **)(v87 + 16);
    if (!v26)
    {
LABEL_95:
      __break(1u);
      goto LABEL_96;
    }
    uint64_t v27 = *v26 + 7;
    if (!__OFADD__(*v26, 7))
    {
      if (v27 < 0) {
        uint64_t v27 = *v26 + 14;
      }
      uint64_t v28 = v27 >> 3;
      uint64_t v29 = v28 - 1;
      BOOL v13 = v28 < 1;
      uint64_t v30 = v28 + 62;
      if (!v13) {
        uint64_t v30 = v29;
      }
      sub_22083C424((uint64_t)v26 + (v30 & 0xFFFFFFFFFFFFFFC0) + 128, *v26, *((uint64_t *)&v86 + 1), v87, &v92);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v17 = *((void *)&v92 + 1);
      uint64_t v16 = v92;
      uint64_t v18 = v93;
      uint64_t v19 = sub_2208863B4(*((uint64_t *)&v93 + 1));
      uint64_t v20 = MEMORY[0x263F8D5C8];
      goto LABEL_69;
    }
LABEL_85:
    __break(1u);
LABEL_86:
    __break(1u);
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  if (swift_dynamicCastMetatype())
  {
    sub_220928628();
    uint64_t result = swift_beginAccess();
    uint64_t v31 = *(uint64_t **)(v87 + 16);
    if (!v31)
    {
LABEL_96:
      __break(1u);
      goto LABEL_97;
    }
    uint64_t v32 = *v31 + 7;
    if (!__OFADD__(*v31, 7))
    {
      if (v32 < 0) {
        uint64_t v32 = *v31 + 14;
      }
      uint64_t v33 = v32 >> 3;
      uint64_t v34 = v33 - 1;
      BOOL v13 = v33 < 1;
      uint64_t v35 = v33 + 62;
      if (!v13) {
        uint64_t v35 = v34;
      }
      sub_22083C1E4((uint64_t)v31 + (v35 & 0xFFFFFFFFFFFFFFC0) + 128, *v31, *((uint64_t *)&v86 + 1), v87, &v92);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v17 = *((void *)&v92 + 1);
      uint64_t v16 = v92;
      uint64_t v18 = v93;
      uint64_t v19 = sub_220886290(*((uint64_t *)&v93 + 1));
      uint64_t v20 = MEMORY[0x263F8D538];
      goto LABEL_69;
    }
    goto LABEL_86;
  }
  if (swift_dynamicCastMetatype())
  {
    sub_2209287DC();
    uint64_t result = swift_beginAccess();
    long long v36 = *(uint64_t **)(v87 + 16);
    if (!v36)
    {
LABEL_97:
      __break(1u);
      goto LABEL_98;
    }
    uint64_t v37 = *v36 + 7;
    if (!__OFADD__(*v36, 7))
    {
      if (v37 < 0) {
        uint64_t v37 = *v36 + 14;
      }
      uint64_t v38 = v37 >> 3;
      uint64_t v39 = v38 - 1;
      BOOL v13 = v38 < 1;
      uint64_t v40 = v38 + 62;
      if (!v13) {
        uint64_t v40 = v39;
      }
      sub_22083BFA4((uint64_t)v36 + (v40 & 0xFFFFFFFFFFFFFFC0) + 128, *v36, *((uint64_t *)&v86 + 1), v87, &v92);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v17 = *((void *)&v92 + 1);
      uint64_t v16 = v92;
      uint64_t v18 = v93;
      uint64_t v19 = sub_22088616C(*((uint64_t *)&v93 + 1));
      uint64_t v20 = MEMORY[0x263F8D4F8];
      goto LABEL_69;
    }
    goto LABEL_87;
  }
  if (swift_dynamicCastMetatype())
  {
    sub_22092898C();
    uint64_t result = swift_beginAccess();
    uint64_t v41 = *(uint64_t **)(v87 + 16);
    if (!v41)
    {
LABEL_98:
      __break(1u);
      goto LABEL_99;
    }
    uint64_t v42 = *v41 + 7;
    if (!__OFADD__(*v41, 7))
    {
      if (v42 < 0) {
        uint64_t v42 = *v41 + 14;
      }
      uint64_t v43 = v42 >> 3;
      uint64_t v44 = v43 - 1;
      BOOL v13 = v43 < 1;
      uint64_t v45 = v43 + 62;
      if (!v13) {
        uint64_t v45 = v44;
      }
      sub_22083BD74((uint64_t)v41 + (v45 & 0xFFFFFFFFFFFFFFC0) + 128, *v41, v87, &v92);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v17 = *((void *)&v92 + 1);
      uint64_t v16 = v92;
      uint64_t v18 = v93;
      uint64_t v19 = sub_220886044(*((uint64_t *)&v93 + 1));
      uint64_t v20 = MEMORY[0x263F8D310];
      goto LABEL_69;
    }
    goto LABEL_88;
  }
  uint64_t v20 = sub_22093E100();
  if (swift_dynamicCastMetatype())
  {
    sub_220928B40();
    uint64_t result = swift_beginAccess();
    uint64_t v46 = *(uint64_t **)(v87 + 16);
    if (!v46)
    {
LABEL_99:
      __break(1u);
      goto LABEL_100;
    }
    uint64_t v47 = *v46 + 7;
    if (!__OFADD__(*v46, 7))
    {
      if (v47 < 0) {
        uint64_t v47 = *v46 + 14;
      }
      uint64_t v48 = v47 >> 3;
      uint64_t v49 = v48 - 1;
      BOOL v13 = v48 < 1;
      uint64_t v50 = v48 + 62;
      if (!v13) {
        uint64_t v50 = v49;
      }
      sub_22083BA3C((uint64_t)v46 + (v50 & 0xFFFFFFFFFFFFFFC0) + 128, *v46, *((void (**)(char *, uint64_t, uint64_t))&v86 + 1), v87, &v92);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v17 = *((void *)&v92 + 1);
      uint64_t v16 = v92;
      uint64_t v18 = v93;
      uint64_t v19 = sub_220885E74(*((uint64_t *)&v93 + 1));
      goto LABEL_69;
    }
    goto LABEL_89;
  }
  if (!swift_dynamicCastMetatype())
  {
    int64_t v2 = &v89;
    sub_22080B5B8((uint64_t)v4, (uint64_t)&v89);
    sub_22080B5B8((uint64_t)&v89, (uint64_t)&v86);
    uint64_t v57 = v90;
    uint64_t v56 = v91;
    __swift_project_boxed_opaque_existential_1(&v89, v90);
    uint64_t v58 = (*(uint64_t (**)(uint64_t))(*(void *)(v56 + 8) + 32))(v57);
    sub_22080B0D8((uint64_t)&v89);
    *((void *)&v88 + 1) = v58;
    long long v92 = v86;
    long long v93 = v87;
    long long v94 = v88;
    uint64_t v3 = v58;
    uint64_t v59 = v88;
    uint64_t v60 = *((void *)&v87 + 1);
    __swift_project_boxed_opaque_existential_1(&v92, *((uint64_t *)&v87 + 1));
    uint64_t v61 = (*(uint64_t (**)(uint64_t))(*(void *)(v59 + 8) + 40))(v60);
    uint64_t v8 = (char *)MEMORY[0x263F8EE78];
    if (v3 == v61) {
      goto LABEL_66;
    }
    goto LABEL_74;
  }
  sub_220928CFC();
  uint64_t result = swift_beginAccess();
  uint64_t v51 = *(uint64_t **)(v87 + 16);
  if (v51)
  {
    uint64_t v52 = *v51 + 7;
    if (!__OFADD__(*v51, 7))
    {
      if (v52 < 0) {
        uint64_t v52 = *v51 + 14;
      }
      uint64_t v53 = v52 >> 3;
      uint64_t v54 = v53 - 1;
      BOOL v13 = v53 < 1;
      uint64_t v55 = v53 + 62;
      if (!v13) {
        uint64_t v55 = v54;
      }
      sub_22083B808((uint64_t)v51 + (v55 & 0xFFFFFFFFFFFFFFC0) + 128, *v51, v87, &v92);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v17 = *((void *)&v92 + 1);
      uint64_t v16 = v92;
      uint64_t v18 = v93;
      uint64_t v19 = sub_220885D4C(*((uint64_t *)&v93 + 1));
      uint64_t v20 = MEMORY[0x263F06F78];
      goto LABEL_69;
    }
    goto LABEL_91;
  }
LABEL_100:
  __break(1u);
  return result;
}

uint64_t AnyColumnSlice.summary()@<X0>(void *a1@<X8>)
{
  uint64_t v4 = (void *)v1;
  uint64_t v7 = *(char **)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  __swift_project_boxed_opaque_existential_1(v4, (uint64_t)v7);
  (*(void (**)(char *))(*(void *)(v6 + 8) + 80))(v7);
  if (swift_dynamicCastMetatype())
  {
    sub_220841C58((uint64_t)&v91);
    uint64_t v8 = v92;
    uint64_t result = swift_beginAccess();
    uint64_t v10 = *(void **)(v8 + 16);
    if (v10)
    {
      uint64_t v11 = *v10 + 7;
      if (!__OFADD__(*v10, 7))
      {
        if (v11 < 0) {
          uint64_t v11 = *v10 + 14;
        }
        uint64_t v12 = v11 >> 3;
        uint64_t v14 = v12 - 1;
        BOOL v13 = v12 < 1;
        uint64_t v15 = v12 + 62;
        if (!v13) {
          uint64_t v15 = v14;
        }
        sub_22083FE20((uint64_t)v10 + (v15 & 0xFFFFFFFFFFFFFFC0) + 128, (uint64_t)&v91, &v85);
        sub_220843060((uint64_t)&v91);
        uint64_t v17 = *((void *)&v85 + 1);
        uint64_t v16 = v85;
        uint64_t v18 = v86;
        uint64_t v19 = sub_2208865FC(*((uint64_t *)&v86 + 1));
        uint64_t v20 = MEMORY[0x263F8D6C8];
        goto LABEL_67;
      }
      __break(1u);
      goto LABEL_72;
    }
    goto LABEL_88;
  }
  if (swift_dynamicCastMetatype())
  {
    sub_220841EBC((uint64_t)&v91);
    uint64_t v21 = v92;
    uint64_t result = swift_beginAccess();
    uint64_t v22 = *(void **)(v21 + 16);
    if (!v22)
    {
LABEL_90:
      __break(1u);
      goto LABEL_91;
    }
    uint64_t v23 = *v22 + 7;
    if (!__OFADD__(*v22, 7))
    {
      if (v23 < 0) {
        uint64_t v23 = *v22 + 14;
      }
      uint64_t v24 = v23 >> 3;
      uint64_t v25 = v24 - 1;
      BOOL v13 = v24 < 1;
      uint64_t v26 = v24 + 62;
      if (!v13) {
        uint64_t v26 = v25;
      }
      sub_22083FBA4((uint64_t)v22 + (v26 & 0xFFFFFFFFFFFFFFC0) + 128, (uint64_t)&v91, &v85);
      sub_220843060((uint64_t)&v91);
      uint64_t v17 = *((void *)&v85 + 1);
      uint64_t v16 = v85;
      uint64_t v18 = v86;
      uint64_t v19 = sub_2208864D8(*((uint64_t *)&v86 + 1));
      uint64_t v20 = MEMORY[0x263F8E9F8];
      goto LABEL_67;
    }
    __break(1u);
    goto LABEL_83;
  }
  if (swift_dynamicCastMetatype())
  {
    sub_220842128((uint64_t)&v91);
    uint64_t v27 = v92;
    uint64_t result = swift_beginAccess();
    uint64_t v28 = *(void **)(v27 + 16);
    if (!v28)
    {
LABEL_91:
      __break(1u);
      goto LABEL_92;
    }
    uint64_t v29 = *v28 + 7;
    if (!__OFADD__(*v28, 7))
    {
      if (v29 < 0) {
        uint64_t v29 = *v28 + 14;
      }
      uint64_t v30 = v29 >> 3;
      uint64_t v31 = v30 - 1;
      BOOL v13 = v30 < 1;
      uint64_t v32 = v30 + 62;
      if (!v13) {
        uint64_t v32 = v31;
      }
      sub_22083F928((uint64_t)v28 + (v32 & 0xFFFFFFFFFFFFFFC0) + 128, (uint64_t)&v91, &v85);
      sub_220843060((uint64_t)&v91);
      uint64_t v17 = *((void *)&v85 + 1);
      uint64_t v16 = v85;
      uint64_t v18 = v86;
      uint64_t v19 = sub_2208863B4(*((uint64_t *)&v86 + 1));
      uint64_t v20 = MEMORY[0x263F8D5C8];
      goto LABEL_67;
    }
LABEL_83:
    __break(1u);
LABEL_84:
    __break(1u);
LABEL_85:
    __break(1u);
LABEL_86:
    __break(1u);
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
    goto LABEL_90;
  }
  if (swift_dynamicCastMetatype())
  {
    sub_220842390((uint64_t)&v91);
    uint64_t v33 = v92;
    uint64_t result = swift_beginAccess();
    uint64_t v34 = *(void **)(v33 + 16);
    if (!v34)
    {
LABEL_92:
      __break(1u);
      goto LABEL_93;
    }
    uint64_t v35 = *v34 + 7;
    if (!__OFADD__(*v34, 7))
    {
      if (v35 < 0) {
        uint64_t v35 = *v34 + 14;
      }
      uint64_t v36 = v35 >> 3;
      uint64_t v37 = v36 - 1;
      BOOL v13 = v36 < 1;
      uint64_t v38 = v36 + 62;
      if (!v13) {
        uint64_t v38 = v37;
      }
      sub_22083F6AC((uint64_t)v34 + (v38 & 0xFFFFFFFFFFFFFFC0) + 128, (uint64_t)&v91, &v85);
      sub_220843060((uint64_t)&v91);
      uint64_t v17 = *((void *)&v85 + 1);
      uint64_t v16 = v85;
      uint64_t v18 = v86;
      uint64_t v19 = sub_220886290(*((uint64_t *)&v86 + 1));
      uint64_t v20 = MEMORY[0x263F8D538];
      goto LABEL_67;
    }
    goto LABEL_84;
  }
  if (swift_dynamicCastMetatype())
  {
    sub_2208425F8((uint64_t)&v91);
    uint64_t v39 = v92;
    uint64_t result = swift_beginAccess();
    uint64_t v40 = *(void **)(v39 + 16);
    if (!v40)
    {
LABEL_93:
      __break(1u);
      goto LABEL_94;
    }
    uint64_t v41 = *v40 + 7;
    if (!__OFADD__(*v40, 7))
    {
      if (v41 < 0) {
        uint64_t v41 = *v40 + 14;
      }
      uint64_t v42 = v41 >> 3;
      uint64_t v43 = v42 - 1;
      BOOL v13 = v42 < 1;
      uint64_t v44 = v42 + 62;
      if (!v13) {
        uint64_t v44 = v43;
      }
      sub_22083F430((uint64_t)v40 + (v44 & 0xFFFFFFFFFFFFFFC0) + 128, (uint64_t)&v91, &v85);
      sub_220843060((uint64_t)&v91);
      uint64_t v17 = *((void *)&v85 + 1);
      uint64_t v16 = v85;
      uint64_t v18 = v86;
      uint64_t v19 = sub_22088616C(*((uint64_t *)&v86 + 1));
      uint64_t v20 = MEMORY[0x263F8D4F8];
      goto LABEL_67;
    }
    goto LABEL_85;
  }
  if (swift_dynamicCastMetatype())
  {
    sub_22084285C((uint64_t)&v91);
    uint64_t v45 = v92;
    uint64_t result = swift_beginAccess();
    uint64_t v46 = *(void **)(v45 + 16);
    if (!v46)
    {
LABEL_94:
      __break(1u);
      goto LABEL_95;
    }
    uint64_t v47 = *v46 + 7;
    if (!__OFADD__(*v46, 7))
    {
      if (v47 < 0) {
        uint64_t v47 = *v46 + 14;
      }
      uint64_t v48 = v47 >> 3;
      uint64_t v49 = v48 - 1;
      BOOL v13 = v48 < 1;
      uint64_t v50 = v48 + 62;
      if (!v13) {
        uint64_t v50 = v49;
      }
      sub_22083F1B0((uint64_t)v46 + (v50 & 0xFFFFFFFFFFFFFFC0) + 128, (uint64_t)&v91, &v85);
      sub_220843060((uint64_t)&v91);
      uint64_t v17 = *((void *)&v85 + 1);
      uint64_t v16 = v85;
      uint64_t v18 = v86;
      uint64_t v19 = sub_220886044(*((uint64_t *)&v86 + 1));
      uint64_t v20 = MEMORY[0x263F8D310];
      goto LABEL_67;
    }
    goto LABEL_86;
  }
  uint64_t v20 = sub_22093E100();
  if (swift_dynamicCastMetatype())
  {
    sub_220842AC4((uint64_t)&v91);
    uint64_t v51 = v92;
    uint64_t result = swift_beginAccess();
    uint64_t v52 = *(void **)(v51 + 16);
    if (!v52)
    {
LABEL_95:
      __break(1u);
      goto LABEL_96;
    }
    uint64_t v53 = *v52 + 7;
    if (!__OFADD__(*v52, 7))
    {
      if (v53 < 0) {
        uint64_t v53 = *v52 + 14;
      }
      uint64_t v54 = v53 >> 3;
      uint64_t v55 = v54 - 1;
      BOOL v13 = v54 < 1;
      uint64_t v56 = v54 + 62;
      if (!v13) {
        uint64_t v56 = v55;
      }
      sub_22083EE44((uint64_t)v52 + (v56 & 0xFFFFFFFFFFFFFFC0) + 128, (uint64_t)&v91, &v85);
      sub_220843060((uint64_t)&v91);
      uint64_t v17 = *((void *)&v85 + 1);
      uint64_t v16 = v85;
      uint64_t v18 = v86;
      uint64_t v19 = sub_220885E74(*((uint64_t *)&v86 + 1));
      goto LABEL_67;
    }
    goto LABEL_87;
  }
  if (!swift_dynamicCastMetatype())
  {
    int64_t v2 = &v88;
    sub_220833C28((uint64_t)v4, (uint64_t)&v88);
    sub_220833C28((uint64_t)&v88, (uint64_t)&v85);
    uint64_t v64 = v89;
    uint64_t v63 = v90;
    __swift_project_boxed_opaque_existential_1(&v88, v89);
    uint64_t v65 = (*(uint64_t (**)(uint64_t))(*(void *)(v63 + 8) + 32))(v64);
    sub_220833C84((uint64_t)&v88);
    *((void *)&v87 + 1) = v65;
    long long v91 = v85;
    long long v92 = v86;
    long long v93 = v87;
    uint64_t v3 = v65;
    uint64_t v66 = v87;
    uint64_t v67 = *((void *)&v86 + 1);
    __swift_project_boxed_opaque_existential_1(&v91, *((uint64_t *)&v86 + 1));
    uint64_t v68 = (*(uint64_t (**)(uint64_t))(*(void *)(v66 + 8) + 40))(v67);
    uint64_t v7 = (char *)MEMORY[0x263F8EE78];
    if (v3 == v68)
    {
LABEL_66:
      sub_2208352E4((uint64_t)&v91, qword_267F18908);
      uint64_t v70 = v4[3];
      uint64_t v69 = v4[4];
      __swift_project_boxed_opaque_existential_1(v4, v70);
      uint64_t v71 = (*(uint64_t (**)(uint64_t))(*(void *)(v69 + 8) + 56))(v70);
      sub_22083CCB8((uint64_t)v7, v71, &v91);
      swift_bridgeObjectRelease();
      uint64_t v17 = *((void *)&v91 + 1);
      uint64_t v16 = v91;
      uint64_t v18 = v92;
      uint64_t v19 = sub_220885C24(*((uint64_t *)&v92 + 1));
      uint64_t v20 = MEMORY[0x263F8DB68];
LABEL_67:
      uint64_t result = swift_bridgeObjectRelease();
      *a1 = v16;
      a1[1] = v17;
      a1[2] = v18;
      a1[3] = v19;
      a1[4] = v20;
      return result;
    }
    do
    {
LABEL_72:
      uint64_t v75 = *((void *)&v92 + 1);
      uint64_t v74 = v93;
      __swift_project_boxed_opaque_existential_1(&v91, *((uint64_t *)&v92 + 1));
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(*(void *)(v74 + 8) + 128))(v84, v3, v75);
      sub_220833C28((uint64_t)&v91, (uint64_t)&v85);
      uint64_t v77 = *((void *)&v86 + 1);
      uint64_t v76 = v87;
      __swift_project_boxed_opaque_existential_1(&v85, *((uint64_t *)&v86 + 1));
      *((void *)&v93 + 1) = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v76 + 8) + 64))(v3, v77);
      sub_220833C84((uint64_t)&v85);
      sub_220842F90((uint64_t)v84, (uint64_t)v83);
      sub_220842FF8((uint64_t)v83, (uint64_t)&v88);
      if (v89)
      {
        if ((swift_dynamicCast() & 1) == 0)
        {
          *(void *)&long long v87 = 0;
          long long v85 = 0u;
          long long v86 = 0u;
        }
      }
      else
      {
        sub_2208352E4((uint64_t)&v88, qword_26AD40FF8);
        long long v85 = 0u;
        long long v86 = 0u;
        *(void *)&long long v87 = 0;
      }
      sub_2208352E4((uint64_t)v83, qword_26AD40FF8);
      if (*((void *)&v86 + 1))
      {
        long long v88 = v85;
        v2[1] = v86;
        uint64_t v90 = v87;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v7 = sub_22081BA64(0, *((void *)v7 + 2) + 1, 1, v7);
        }
        unint64_t v79 = *((void *)v7 + 2);
        unint64_t v78 = *((void *)v7 + 3);
        if (v79 >= v78 >> 1) {
          uint64_t v7 = sub_22081BA64((char *)(v78 > 1), v79 + 1, 1, v7);
        }
        *((void *)v7 + 2) = v79 + 1;
        uint64_t v80 = &v7[40 * v79];
        long long v81 = v88;
        long long v82 = v2[1];
        *((void *)v80 + 8) = v90;
        *((_OWORD *)v80 + 2) = v81;
        *((_OWORD *)v80 + 3) = v82;
      }
      else
      {
        sub_2208352E4((uint64_t)&v85, &qword_267F18658);
      }
      uint64_t v3 = *((void *)&v93 + 1);
      uint64_t v72 = v93;
      uint64_t v73 = *((void *)&v92 + 1);
      __swift_project_boxed_opaque_existential_1(&v91, *((uint64_t *)&v92 + 1));
    }
    while (v3 != (*(uint64_t (**)(uint64_t))(*(void *)(v72 + 8) + 40))(v73));
    goto LABEL_66;
  }
  sub_220842D2C((uint64_t)&v91);
  uint64_t v57 = v92;
  uint64_t result = swift_beginAccess();
  uint64_t v58 = *(void **)(v57 + 16);
  if (v58)
  {
    uint64_t v59 = *v58 + 7;
    if (!__OFADD__(*v58, 7))
    {
      if (v59 < 0) {
        uint64_t v59 = *v58 + 14;
      }
      uint64_t v60 = v59 >> 3;
      uint64_t v61 = v60 - 1;
      BOOL v13 = v60 < 1;
      uint64_t v62 = v60 + 62;
      if (!v13) {
        uint64_t v62 = v61;
      }
      sub_22083EBC0((uint64_t)v58 + (v62 & 0xFFFFFFFFFFFFFFC0) + 128, (uint64_t)&v91, &v85);
      sub_220843060((uint64_t)&v91);
      uint64_t v17 = *((void *)&v85 + 1);
      uint64_t v16 = v85;
      uint64_t v18 = v86;
      uint64_t v19 = sub_220885D4C(*((uint64_t *)&v86 + 1));
      uint64_t v20 = MEMORY[0x263F06F78];
      goto LABEL_67;
    }
    goto LABEL_89;
  }
LABEL_96:
  __break(1u);
  return result;
}

uint64_t sub_220841C58@<X0>(uint64_t a1@<X8>)
{
  int64_t v2 = v1;
  uint64_t v5 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v2, v5);
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)(v4 + 8) + 80))(v5);
  uint64_t v7 = v17;
  if (v6 != MEMORY[0x263F8D6C8]) {
    goto LABEL_10;
  }
  sub_22083B5D0((uint64_t)v2, (uint64_t)v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18A90);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18A98);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_22083B5D0((uint64_t)v2, (uint64_t)v17);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F18AA0);
    return swift_dynamicCast();
  }
  swift_release();
  swift_bridgeObjectRelease();
  sub_22083B5D0((uint64_t)v2, (uint64_t)v17);
  uint64_t result = swift_dynamicCast();
  uint64_t v9 = v13;
  uint64_t v10 = v14;
  if (v14 < v13)
  {
    __break(1u);
LABEL_10:
    sub_220833C28((uint64_t)v2, (uint64_t)v7);
    sub_22093EEA0();
    swift_bridgeObjectRelease();
    uint64_t v11 = v18;
    uint64_t v12 = v19;
    __swift_project_boxed_opaque_existential_1(v17, v18);
    (*(void (**)(uint64_t))(*(void *)(v12 + 8) + 80))(v11);
    sub_22093F530();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    sub_22093E6C0();
    sub_22093E6C0();
    uint64_t result = sub_22093F090();
    __break(1u);
    return result;
  }
  if (v13 == v14)
  {
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  *(void *)a1 = v15;
  *(_OWORD *)(a1 + 8) = v16;
  *(void *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v10;
  *(unsigned char *)(a1 + 40) = 2 * (v13 == v14);
  return result;
}

uint64_t sub_220841EBC@<X0>(uint64_t a1@<X8>)
{
  int64_t v2 = v1;
  uint64_t v5 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v2, v5);
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)(v4 + 8) + 80))(v5);
  uint64_t v7 = v17;
  if (v6 != MEMORY[0x263F8E9F8]) {
    goto LABEL_10;
  }
  sub_22083B5D0((uint64_t)v2, (uint64_t)v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18A90);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18AA8);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_22083B5D0((uint64_t)v2, (uint64_t)v17);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F18AB0);
    return swift_dynamicCast();
  }
  swift_release();
  swift_bridgeObjectRelease();
  sub_22083B5D0((uint64_t)v2, (uint64_t)v17);
  uint64_t result = swift_dynamicCast();
  uint64_t v9 = v13;
  uint64_t v10 = v14;
  if (v14 < v13)
  {
    __break(1u);
LABEL_10:
    sub_220833C28((uint64_t)v2, (uint64_t)v7);
    sub_22093EEA0();
    swift_bridgeObjectRelease();
    uint64_t v11 = v18;
    uint64_t v12 = v19;
    __swift_project_boxed_opaque_existential_1(v17, v18);
    (*(void (**)(uint64_t))(*(void *)(v12 + 8) + 80))(v11);
    sub_22093F530();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    sub_22093E6C0();
    sub_22093E6C0();
    uint64_t result = sub_22093F090();
    __break(1u);
    return result;
  }
  if (v13 == v14)
  {
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  *(void *)a1 = v15;
  *(_OWORD *)(a1 + 8) = v16;
  *(void *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v10;
  *(unsigned char *)(a1 + 40) = 2 * (v13 == v14);
  return result;
}

uint64_t sub_220842128@<X0>(uint64_t a1@<X8>)
{
  int64_t v2 = v1;
  uint64_t v5 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v2, v5);
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)(v4 + 8) + 80))(v5);
  uint64_t v7 = v17;
  if (v6 != MEMORY[0x263F8D5C8]) {
    goto LABEL_10;
  }
  sub_22083B5D0((uint64_t)v2, (uint64_t)v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18A90);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18AB8);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_22083B5D0((uint64_t)v2, (uint64_t)v17);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F18AC0);
    return swift_dynamicCast();
  }
  swift_release();
  swift_bridgeObjectRelease();
  sub_22083B5D0((uint64_t)v2, (uint64_t)v17);
  uint64_t result = swift_dynamicCast();
  uint64_t v9 = v13;
  uint64_t v10 = v14;
  if (v14 < v13)
  {
    __break(1u);
LABEL_10:
    sub_220833C28((uint64_t)v2, (uint64_t)v7);
    sub_22093EEA0();
    swift_bridgeObjectRelease();
    uint64_t v11 = v18;
    uint64_t v12 = v19;
    __swift_project_boxed_opaque_existential_1(v17, v18);
    (*(void (**)(uint64_t))(*(void *)(v12 + 8) + 80))(v11);
    sub_22093F530();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    sub_22093E6C0();
    sub_22093E6C0();
    uint64_t result = sub_22093F090();
    __break(1u);
    return result;
  }
  if (v13 == v14)
  {
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  *(void *)a1 = v15;
  *(_OWORD *)(a1 + 8) = v16;
  *(void *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v10;
  *(unsigned char *)(a1 + 40) = 2 * (v13 == v14);
  return result;
}

uint64_t sub_220842390@<X0>(uint64_t a1@<X8>)
{
  int64_t v2 = v1;
  uint64_t v5 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v2, v5);
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)(v4 + 8) + 80))(v5);
  uint64_t v7 = v17;
  if (v6 != MEMORY[0x263F8D538]) {
    goto LABEL_10;
  }
  sub_22083B5D0((uint64_t)v2, (uint64_t)v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18A90);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18AC8);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_22083B5D0((uint64_t)v2, (uint64_t)v17);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F18AD0);
    return swift_dynamicCast();
  }
  swift_release();
  swift_bridgeObjectRelease();
  sub_22083B5D0((uint64_t)v2, (uint64_t)v17);
  uint64_t result = swift_dynamicCast();
  uint64_t v9 = v13;
  uint64_t v10 = v14;
  if (v14 < v13)
  {
    __break(1u);
LABEL_10:
    sub_220833C28((uint64_t)v2, (uint64_t)v7);
    sub_22093EEA0();
    swift_bridgeObjectRelease();
    uint64_t v11 = v18;
    uint64_t v12 = v19;
    __swift_project_boxed_opaque_existential_1(v17, v18);
    (*(void (**)(uint64_t))(*(void *)(v12 + 8) + 80))(v11);
    sub_22093F530();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    sub_22093E6C0();
    sub_22093E6C0();
    uint64_t result = sub_22093F090();
    __break(1u);
    return result;
  }
  if (v13 == v14)
  {
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  *(void *)a1 = v15;
  *(_OWORD *)(a1 + 8) = v16;
  *(void *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v10;
  *(unsigned char *)(a1 + 40) = 2 * (v13 == v14);
  return result;
}

uint64_t sub_2208425F8@<X0>(uint64_t a1@<X8>)
{
  int64_t v2 = v1;
  uint64_t v5 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v2, v5);
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)(v4 + 8) + 80))(v5);
  uint64_t v7 = v17;
  if (v6 != MEMORY[0x263F8D4F8]) {
    goto LABEL_10;
  }
  sub_22083B5D0((uint64_t)v2, (uint64_t)v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18A90);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18AD8);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_22083B5D0((uint64_t)v2, (uint64_t)v17);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F18AE0);
    return swift_dynamicCast();
  }
  swift_release();
  swift_bridgeObjectRelease();
  sub_22083B5D0((uint64_t)v2, (uint64_t)v17);
  uint64_t result = swift_dynamicCast();
  uint64_t v9 = v13;
  uint64_t v10 = v14;
  if (v14 < v13)
  {
    __break(1u);
LABEL_10:
    sub_220833C28((uint64_t)v2, (uint64_t)v7);
    sub_22093EEA0();
    swift_bridgeObjectRelease();
    uint64_t v11 = v18;
    uint64_t v12 = v19;
    __swift_project_boxed_opaque_existential_1(v17, v18);
    (*(void (**)(uint64_t))(*(void *)(v12 + 8) + 80))(v11);
    sub_22093F530();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    sub_22093E6C0();
    sub_22093E6C0();
    uint64_t result = sub_22093F090();
    __break(1u);
    return result;
  }
  if (v13 == v14)
  {
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  *(void *)a1 = v15;
  *(_OWORD *)(a1 + 8) = v16;
  *(void *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v10;
  *(unsigned char *)(a1 + 40) = 2 * (v13 == v14);
  return result;
}

uint64_t sub_22084285C@<X0>(uint64_t a1@<X8>)
{
  int64_t v2 = v1;
  uint64_t v5 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v2, v5);
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)(v4 + 8) + 80))(v5);
  uint64_t v7 = v17;
  if (v6 != MEMORY[0x263F8D310]) {
    goto LABEL_10;
  }
  sub_22083B5D0((uint64_t)v2, (uint64_t)v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18A90);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18AE8);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_22083B5D0((uint64_t)v2, (uint64_t)v17);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F18AF0);
    return swift_dynamicCast();
  }
  swift_release();
  swift_bridgeObjectRelease();
  sub_22083B5D0((uint64_t)v2, (uint64_t)v17);
  uint64_t result = swift_dynamicCast();
  uint64_t v9 = v13;
  uint64_t v10 = v14;
  if (v14 < v13)
  {
    __break(1u);
LABEL_10:
    sub_220833C28((uint64_t)v2, (uint64_t)v7);
    sub_22093EEA0();
    swift_bridgeObjectRelease();
    uint64_t v11 = v18;
    uint64_t v12 = v19;
    __swift_project_boxed_opaque_existential_1(v17, v18);
    (*(void (**)(uint64_t))(*(void *)(v12 + 8) + 80))(v11);
    sub_22093F530();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    sub_22093E6C0();
    sub_22093E6C0();
    uint64_t result = sub_22093F090();
    __break(1u);
    return result;
  }
  if (v13 == v14)
  {
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  *(void *)a1 = v15;
  *(_OWORD *)(a1 + 8) = v16;
  *(void *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v10;
  *(unsigned char *)(a1 + 40) = 2 * (v13 == v14);
  return result;
}

uint64_t sub_220842AC4@<X0>(uint64_t a1@<X8>)
{
  int64_t v2 = v1;
  uint64_t v4 = sub_22093E100();
  uint64_t v6 = v1[3];
  uint64_t v5 = v1[4];
  __swift_project_boxed_opaque_existential_1(v2, v6);
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)(v5 + 8) + 80))(v6);
  uint64_t v8 = v18;
  if (v4 != v7) {
    goto LABEL_10;
  }
  sub_22083B5D0((uint64_t)v2, (uint64_t)v18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18A90);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18AF8);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_22083B5D0((uint64_t)v2, (uint64_t)v18);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B00);
    return swift_dynamicCast();
  }
  swift_release();
  swift_bridgeObjectRelease();
  sub_22083B5D0((uint64_t)v2, (uint64_t)v18);
  uint64_t result = swift_dynamicCast();
  uint64_t v10 = v14;
  uint64_t v11 = v15;
  if (v15 < v14)
  {
    __break(1u);
LABEL_10:
    sub_220833C28((uint64_t)v2, (uint64_t)v8);
    sub_22093EEA0();
    swift_bridgeObjectRelease();
    uint64_t v12 = v19;
    uint64_t v13 = v20;
    __swift_project_boxed_opaque_existential_1(v18, v19);
    (*(void (**)(uint64_t))(*(void *)(v13 + 8) + 80))(v12);
    sub_22093F530();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    sub_22093E6C0();
    sub_22093E6C0();
    uint64_t result = sub_22093F090();
    __break(1u);
    return result;
  }
  if (v14 == v15)
  {
    uint64_t v10 = 0;
    uint64_t v11 = 0;
  }
  *(void *)a1 = v16;
  *(_OWORD *)(a1 + 8) = v17;
  *(void *)(a1 + 24) = v10;
  *(void *)(a1 + 32) = v11;
  *(unsigned char *)(a1 + 40) = 2 * (v14 == v15);
  return result;
}

uint64_t sub_220842D2C@<X0>(uint64_t a1@<X8>)
{
  int64_t v2 = v1;
  uint64_t v5 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v2, v5);
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)(v4 + 8) + 80))(v5);
  uint64_t v7 = v17;
  if (v6 != MEMORY[0x263F06F78]) {
    goto LABEL_10;
  }
  sub_22083B5D0((uint64_t)v2, (uint64_t)v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18A90);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B08);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_22083B5D0((uint64_t)v2, (uint64_t)v17);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B10);
    return swift_dynamicCast();
  }
  swift_release();
  swift_bridgeObjectRelease();
  sub_22083B5D0((uint64_t)v2, (uint64_t)v17);
  uint64_t result = swift_dynamicCast();
  uint64_t v9 = v13;
  uint64_t v10 = v14;
  if (v14 < v13)
  {
    __break(1u);
LABEL_10:
    sub_220833C28((uint64_t)v2, (uint64_t)v7);
    sub_22093EEA0();
    swift_bridgeObjectRelease();
    uint64_t v11 = v18;
    uint64_t v12 = v19;
    __swift_project_boxed_opaque_existential_1(v17, v18);
    (*(void (**)(uint64_t))(*(void *)(v12 + 8) + 80))(v11);
    sub_22093F530();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    sub_22093E6C0();
    sub_22093E6C0();
    uint64_t result = sub_22093F090();
    __break(1u);
    return result;
  }
  if (v13 == v14)
  {
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  *(void *)a1 = v15;
  *(_OWORD *)(a1 + 8) = v16;
  *(void *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v10;
  *(unsigned char *)(a1 + 40) = 2 * (v13 == v14);
  return result;
}

uint64_t sub_220842F90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD40FF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_220842FF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD40FF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_220843060(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  char v4 = *(unsigned char *)(a1 + 40);
  swift_release();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v2, v3, v4);
  return a1;
}

uint64_t sub_2208430BC(uint64_t *a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  uint64_t v3 = *a1;
  uint64_t v4 = v2[3];
  uint64_t v5 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 + 8) + 96))(v3, v4) & 1;
}

uint64_t sub_22084312C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  char v4 = *(unsigned char *)(a1 + 40);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_220831F30(v2, v3, v4);
  return a1;
}

BOOL sub_22084318C(Swift::Int *a1)
{
  Swift::Int v1 = *a1;
  type metadata accessor for ColumnSlice();
  return !ColumnSlice.isNil(at:)(v1);
}

uint64_t sub_2208431FC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22084334C(a1, a2);
}

unint64_t sub_220843214()
{
  unint64_t result = qword_267F18B20;
  if (!qword_267F18B20)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267F18B18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F18B20);
  }
  return result;
}

BOOL sub_220843270(Swift::Int *a1)
{
  Swift::Int v1 = *a1;
  type metadata accessor for DiscontiguousColumnSlice();
  return !DiscontiguousColumnSlice.isNil(at:)(v1);
}

BOOL sub_2208432E0(Swift::Int *a1)
{
  Swift::Int v1 = *a1;
  type metadata accessor for Column();
  return !Column.isNil(at:)(v1);
}

uint64_t sub_22084334C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(*(void *)(v2 + 16) - 8) + 16))(a2, *(void *)(v2 + 32) + *(void *)(*(void *)(*(void *)(v2 + 16) - 8) + 72) * *a1);
}

uint64_t + infix<A, B>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  return sub_220843884(a1, a2, a3, a4, a5, a6, a7, (uint64_t)sub_2208433FC, a8, (void (*)(char *, char *))sub_220843428, 43);
}

{
  return sub_220843EEC(a1, a2, a3, a4, a5, a6, a7, (uint64_t)sub_2208434A0, a8, (void (*)(char *, char *))sub_2208434FC, 43);
}

uint64_t sub_2208433FC(uint64_t a1, uint64_t a2)
{
  return sub_2208434CC(a1, a2, MEMORY[0x263F8DF20], (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, uint64_t))sub_220843B8C);
}

uint64_t sub_220843428(uint64_t a1, uint64_t a2)
{
  return sub_220843528(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, uint64_t))sub_220843DF8);
}

uint64_t sub_2208434A0(uint64_t a1, uint64_t a2)
{
  return sub_2208434CC(a1, a2, MEMORY[0x263F8DF20], (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, uint64_t))sub_2208441F4);
}

uint64_t sub_2208434CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, void, void, void, void, void, uint64_t))
{
  return a4(a1, a2, v4[2], v4[3], v4[4], v4[5], v4[6], a3);
}

uint64_t sub_2208434FC(uint64_t a1, uint64_t a2)
{
  return sub_220843528(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, uint64_t))sub_220844464);
}

uint64_t sub_220843528(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, void, void, void, void, void, void, void, uint64_t))
{
  return a3(a1, v3[7], v3[8], v3[2], v3[3], v3[4], v3[5], v3[6], a2);
}

uint64_t - infix<A, B>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  return sub_220843884(a1, a2, a3, a4, a5, a6, a7, (uint64_t)sub_2208435B4, a8, (void (*)(char *, char *))sub_220843428, 45);
}

{
  return sub_220843EEC(a1, a2, a3, a4, a5, a6, a7, (uint64_t)sub_22084362C, a8, (void (*)(char *, char *))sub_2208434FC, 45);
}

uint64_t sub_2208435B4(uint64_t a1, uint64_t a2)
{
  return sub_2208434CC(a1, a2, MEMORY[0x263F8DF28], (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, uint64_t))sub_220843B8C);
}

uint64_t sub_22084362C(uint64_t a1, uint64_t a2)
{
  return sub_2208434CC(a1, a2, MEMORY[0x263F8DF28], (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, uint64_t))sub_2208441F4);
}

uint64_t * infix<A, B>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  return sub_220843884(a1, a2, a3, a4, a5, a6, a7, (uint64_t)sub_2208436A4, a8, (void (*)(char *, char *))sub_220843428, 42);
}

{
  return sub_220843EEC(a1, a2, a3, a4, a5, a6, a7, (uint64_t)sub_22084371C, a8, (void (*)(char *, char *))sub_2208434FC, 42);
}

uint64_t sub_2208436A4(uint64_t a1, uint64_t a2)
{
  return sub_2208434CC(a1, a2, MEMORY[0x263F8D758], (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, uint64_t))sub_220843B8C);
}

uint64_t sub_22084371C(uint64_t a1, uint64_t a2)
{
  return sub_2208434CC(a1, a2, MEMORY[0x263F8D758], (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, uint64_t))sub_2208441F4);
}

uint64_t / infix<A, B>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  return sub_220843884(a1, a2, a3, a4, a5, a6, a7, (uint64_t)sub_220843794, a8, (void (*)(char *, char *))sub_220843428, 47);
}

{
  return sub_220843EEC(a1, a2, a3, a4, a5, a6, a7, (uint64_t)sub_22084380C, a8, (void (*)(char *, char *))sub_2208434FC, 47);
}

{
  return sub_220843884(a1, a2, a3, a4, a5, a6, a7, (uint64_t)sub_220843DCC, a8, (void (*)(char *, char *))sub_220843428, 47);
}

{
  return sub_220843EEC(a1, a2, a3, a4, a5, a6, a7, (uint64_t)sub_220844438, a8, (void (*)(char *, char *))sub_2208434FC, 47);
}

uint64_t sub_220843794(uint64_t a1, uint64_t a2)
{
  return sub_2208434CC(a1, a2, MEMORY[0x263F8DA80], (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, uint64_t))sub_220843B8C);
}

uint64_t sub_22084380C(uint64_t a1, uint64_t a2)
{
  return sub_2208434CC(a1, a2, MEMORY[0x263F8DA80], (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, uint64_t))sub_2208441F4);
}

uint64_t sub_220843884@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, void (*a10)(char *, char *), uint64_t a11)
{
  uint64_t v35 = a8;
  uint64_t v34 = a7;
  uint64_t v33 = a6;
  uint64_t v37 = a2;
  uint64_t v36 = a1;
  uint64_t v41 = a9;
  uint64_t v40 = a11;
  uint64_t v38 = a10;
  uint64_t v39 = *(void *)(a5 + 8);
  uint64_t v14 = *(void *)(*(void *)(*(void *)(v39 + 8) + 8) + 8);
  uint64_t v15 = *(void *)(*(void *)(*(void *)(a6 + 8) + 8) + 8);
  uint64_t v56 = a3;
  uint64_t v57 = a4;
  uint64_t v58 = v14;
  uint64_t v59 = v15;
  uint64_t v16 = sub_22093EEE0();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v32 - v18;
  sub_22093F2C0();
  uint64_t v51 = a3;
  uint64_t v52 = a4;
  uint64_t v20 = v33;
  uint64_t v53 = a5;
  uint64_t v54 = v33;
  uint64_t v55 = v34;
  uint64_t v43 = a3;
  uint64_t v44 = a4;
  uint64_t v45 = a5;
  uint64_t v46 = v33;
  uint64_t v47 = v34;
  uint64_t v48 = v35;
  uint64_t v49 = &v50;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v22 = (char *)sub_22093ED30();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v25 = sub_22080E314(v38, (uint64_t)v42, v16, v22, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v24);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  uint64_t v56 = (*(uint64_t (**)(uint64_t))(v39 + 16))(a3);
  uint64_t v57 = v26;
  sub_22093E6C0();
  (*(void (**)(uint64_t, uint64_t))(v20 + 16))(a4, v20);
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  uint64_t v27 = v56;
  uint64_t v28 = v57;
  uint64_t v56 = v25;
  uint64_t v29 = sub_22093E900();
  uint64_t v30 = swift_getWitnessTable();
  return Column.init<A>(name:contents:)(v27, v28, (uint64_t)&v56, AssociatedTypeWitness, v29, v30, v41);
}

uint64_t sub_220843B8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X6>, void (*a4)(char *, uint64_t, uint64_t, uint64_t)@<X7>, uint64_t a5@<X8>)
{
  uint64_t v21 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = sub_22093ED30();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v20 - v13;
  uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v20 - v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, a1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    uint64_t v18 = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v14, AssociatedTypeWitness);
    v21(v17, a2, AssociatedTypeWitness, a3);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, AssociatedTypeWitness);
    uint64_t v18 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(a5, v18, 1, AssociatedTypeWitness);
}

uint64_t sub_220843DCC(uint64_t a1, uint64_t a2)
{
  return sub_2208434CC(a1, a2, MEMORY[0x263F8D0B8], (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, uint64_t))sub_220843B8C);
}

uint64_t sub_220843DF8(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  swift_getAssociatedTypeWitness();
  sub_22093ED30();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a1, a1 + *(int *)(TupleTypeMetadata2 + 48));
}

uint64_t sub_220843EEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, void (*a10)(char *, char *), uint64_t a11)
{
  uint64_t v33 = a8;
  uint64_t v32 = a7;
  uint64_t v36 = a2;
  uint64_t v34 = a1;
  uint64_t v40 = a9;
  uint64_t v39 = a11;
  uint64_t v37 = a10;
  uint64_t v15 = *(void *)(*(void *)(*(void *)(a5 + 8) + 8) + 8);
  uint64_t v38 = *(void *)(a6 + 8);
  uint64_t v16 = *(void *)(*(void *)(*(void *)(v38 + 8) + 8) + 8);
  uint64_t v55 = a3;
  uint64_t v56 = a4;
  uint64_t v57 = v15;
  uint64_t v58 = v16;
  uint64_t v17 = sub_22093EEE0();
  uint64_t v35 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v31 - v18;
  sub_22093F2C0();
  uint64_t v50 = a3;
  uint64_t v51 = a4;
  uint64_t v52 = a5;
  uint64_t v53 = a6;
  uint64_t v54 = v32;
  uint64_t v42 = a3;
  uint64_t v43 = a4;
  uint64_t v44 = a5;
  uint64_t v45 = a6;
  uint64_t v46 = v32;
  uint64_t v47 = v33;
  uint64_t v48 = &v49;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v21 = (char *)sub_22093ED30();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v24 = sub_22080E314(v37, (uint64_t)v41, v17, v21, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v23);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v19, v17);
  uint64_t v55 = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 16))(a3, a5);
  uint64_t v56 = v25;
  sub_22093E6C0();
  (*(void (**)(uint64_t))(v38 + 16))(a4);
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  uint64_t v26 = v55;
  uint64_t v27 = v56;
  uint64_t v55 = v24;
  uint64_t v28 = sub_22093E900();
  uint64_t v29 = swift_getWitnessTable();
  return Column.init<A>(name:contents:)(v26, v27, (uint64_t)&v55, AssociatedTypeWitness, v28, v29, v40);
}

uint64_t sub_2208441F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X6>, void (*a4)(uint64_t, char *, uint64_t, uint64_t)@<X7>, uint64_t a5@<X8>)
{
  uint64_t v21 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = sub_22093ED30();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v20 - v13;
  uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v20 - v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, a2, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    uint64_t v18 = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v14, AssociatedTypeWitness);
    v21(a1, v17, AssociatedTypeWitness, a3);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, AssociatedTypeWitness);
    uint64_t v18 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(a5, v18, 1, AssociatedTypeWitness);
}

uint64_t sub_220844438(uint64_t a1, uint64_t a2)
{
  return sub_2208434CC(a1, a2, MEMORY[0x263F8D0B8], (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, uint64_t))sub_2208441F4);
}

uint64_t sub_220844464(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  swift_getAssociatedTypeWitness();
  sub_22093ED30();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a1, a1 + *(int *)(TupleTypeMetadata2 + 48));
}

uint64_t sub_220844514(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  unint64_t v6 = *(void *)(*v2 + 16);
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (!result || (unint64_t v8 = *(void *)(v5 + 24) >> 1, v8 <= v6))
  {
    uint64_t result = (uint64_t)sub_22081B3EC((char *)result, v6 + 1, 1, (char *)v5);
    uint64_t v5 = result;
    unint64_t v8 = *(void *)(result + 24) >> 1;
  }
  unint64_t v9 = *(void *)(v5 + 16);
  if (v8 != v9)
  {
    if (v8 > v9)
    {
      uint64_t v10 = v5 + 16 * v9;
      *(void *)(v10 + 32) = a1;
      *(void *)(v10 + 40) = a2;
      *(void *)(v5 + 16) = v9 + 1;
      *uint64_t v2 = v5;
      return result;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2208445B4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *v4;
  int64_t v6 = *(void *)(*v4 + 16);
  int64_t v7 = v6 + 2;
  if (__OFADD__(v6, 2)) {
    goto LABEL_14;
  }
  uint64_t v11 = result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (!result || (int64_t v12 = *(void *)(v5 + 24) >> 1, v12 < v7))
  {
    if (v6 <= v7) {
      int64_t v13 = v6 + 2;
    }
    else {
      int64_t v13 = v6;
    }
    uint64_t result = (uint64_t)sub_22081B3EC((char *)result, v13, 1, (char *)v5);
    uint64_t v5 = result;
    int64_t v12 = *(void *)(result + 24) >> 1;
  }
  uint64_t v14 = *(void *)(v5 + 16);
  uint64_t v15 = v12 - v14;
  if (!v15) {
    goto LABEL_13;
  }
  BOOL v16 = v15 == 1;
  if (v15 < 1)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v17 = (uint64_t *)(v5 + 32 + 16 * v14);
  *uint64_t v17 = v11;
  v17[1] = a2;
  if (v16)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  _OWORD v17[2] = a3;
  void v17[3] = a4;
  BOOL v18 = __OFADD__(v14, 2);
  uint64_t v19 = v14 + 2;
  if (!v18)
  {
    *(void *)(v5 + 16) = v19;
    *char v4 = v5;
    return result;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_22084468C(uint64_t result, int64_t a2)
{
  uint64_t v5 = a2 - result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v2 = *v3;
  int64_t v6 = *((void *)*v3 + 2);
  int64_t v7 = v6 + v5;
  if (__OFADD__(v6, v5))
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  int64_t v9 = result;
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || (int64_t v11 = *((void *)v2 + 3) >> 1, v11 < v7))
  {
    if (v6 <= v7) {
      int64_t v12 = v6 + v5;
    }
    else {
      int64_t v12 = v6;
    }
    uint64_t v2 = sub_22081B4E8(isUniquelyReferenced_nonNull_native, v12, 1, v2);
    int64_t v11 = *((void *)v2 + 3) >> 1;
  }
  uint64_t v13 = *((void *)v2 + 2);
  uint64_t v14 = v11 - v13;
  uint64_t result = (uint64_t)sub_22092CA40(&v41, (int64_t *)&v2[8 * v13 + 32], v11 - v13, v9, a2);
  if (result < v5) {
    goto LABEL_17;
  }
  if (result >= 1)
  {
    uint64_t v15 = *((void *)v2 + 2);
    BOOL v16 = __OFADD__(v15, result);
    uint64_t v17 = v15 + result;
    if (v16)
    {
      __break(1u);
LABEL_37:
      uint64_t v29 = v36 + v4 + 1;
      goto LABEL_38;
    }
    *((void *)v2 + 2) = v17;
  }
  if (result != v14)
  {
LABEL_14:
    *uint64_t v3 = v2;
    return result;
  }
LABEL_18:
  uint64_t v18 = v43;
  if (v43 == v42) {
    goto LABEL_14;
  }
  int64_t v19 = *((void *)v2 + 2);
  int64_t v20 = v41;
  int64_t v39 = v42;
  uint64_t v21 = sub_220844A14(v40, v43);
  uint64_t v23 = *v22;
  uint64_t result = ((uint64_t (*)(void *, void))v21)(v40, 0);
  int64_t v24 = v39;
  if (v39 < v20) {
    goto LABEL_40;
  }
  if (v18 < v20)
  {
LABEL_41:
    __break(1u);
  }
  else
  {
    int64_t v38 = v20;
    if (v18 < v39)
    {
      uint64_t v25 = v18 + 1;
      int64_t v26 = -v39;
      while (1)
      {
LABEL_24:
        unint64_t v27 = *((void *)v2 + 3);
        int64_t v28 = v27 >> 1;
        uint64_t v29 = v19 + 1;
        if ((uint64_t)(v27 >> 1) < v19 + 1)
        {
          uint64_t result = (uint64_t)sub_22081B4E8((char *)(v27 > 1), v19 + 1, 1, v2);
          int64_t v24 = v39;
          uint64_t v2 = (char *)result;
          int64_t v28 = *(void *)(result + 24) >> 1;
          if (v19 < v28)
          {
LABEL_26:
            uint64_t v30 = &v2[8 * v19];
            *((void *)v30 + 4) = v23;
            if (v25 != v24)
            {
              uint64_t v4 = 0;
              int64_t v31 = v26 + v25;
              int64_t v36 = v19;
              int64_t v37 = v28;
              int64_t v32 = ~v19 + v28;
              uint64_t v33 = v30 + 40;
              while (1)
              {
                uint64_t v34 = sub_220844A14(v40, v25 + v4);
                uint64_t v23 = *v35;
                uint64_t result = ((uint64_t (*)(void *, void))v34)(v40, 0);
                int64_t v24 = v39;
                if (v25 < v38 || v25 + v4 >= v39) {
                  break;
                }
                if (v32 == v4)
                {
                  v25 += v4 + 1;
                  int64_t v19 = v37;
                  int64_t v26 = -v39;
                  *((void *)v2 + 2) = v37;
                  goto LABEL_24;
                }
                *(void *)&v33[8 * v4++] = v23;
                if (!(v31 + v4)) {
                  goto LABEL_37;
                }
              }
              __break(1u);
LABEL_40:
              __break(1u);
              goto LABEL_41;
            }
LABEL_38:
            *((void *)v2 + 2) = v29;
            goto LABEL_14;
          }
        }
        else if (v19 < v28)
        {
          goto LABEL_26;
        }
        *((void *)v2 + 2) = v19;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_220844930(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(v6 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v11 = v4 + v2;
  }
  else {
    int64_t v11 = v4;
  }
  uint64_t result = (uint64_t)sub_22081B3E0((char *)result, v11, 1, (char *)v3);
  uint64_t v3 = result;
  if (!*(void *)(v6 + 16))
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  uint64_t v7 = *(void *)(v3 + 16);
  if ((*(void *)(v3 + 24) >> 1) - v7 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t result = (uint64_t)memcpy((void *)(v3 + 8 * v7 + 32), (const void *)(v6 + 32), 8 * v2);
  if (!v2)
  {
LABEL_14:
    uint64_t result = swift_bridgeObjectRelease();
    *Swift::Int v1 = v3;
    return result;
  }
  uint64_t v8 = *(void *)(v3 + 16);
  BOOL v9 = __OFADD__(v8, v2);
  uint64_t v10 = v8 + v2;
  if (!v9)
  {
    *(void *)(v3 + 16) = v10;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t (*sub_220844A14(void *a1, uint64_t a2))()
{
  *a1 = a2;
  return nullsub_5;
}

uint64_t sub_220844A3C(unsigned __int8 **a1, uint64_t a2)
{
  uint64_t result = (uint64_t)sub_22081B3E0(0, a2 & ~(a2 >> 63), 0, MEMORY[0x263F8EE78]);
  uint64_t v6 = result;
  if (a2 < 1) {
    return v6;
  }
  uint64_t v7 = 0;
  while (1)
  {
    uint64_t v8 = v7;
    if (__OFADD__(v7, 128)) {
      uint64_t v7 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      v7 += 128;
    }
    BOOL v9 = __OFSUB__(a2, v8);
    uint64_t v10 = a2 - v8;
    if (v9) {
      break;
    }
    if (v10 >= 128) {
      uint64_t v11 = 128;
    }
    else {
      uint64_t v11 = v10;
    }
    uint64_t result = (uint64_t)sub_22080983C(a1, v11);
    if (v2)
    {
      swift_bridgeObjectRelease();
      return v6;
    }
    uint64_t v12 = result;
    uint64_t v13 = *(void *)(result + 16);
    uint64_t v14 = *(void *)(v6 + 16);
    uint64_t v15 = v14 + v13;
    if (__OFADD__(v14, v13)) {
      goto LABEL_28;
    }
    if (v15 > *(void *)(v6 + 24) >> 1)
    {
      if (v14 <= v15) {
        int64_t v18 = v14 + v13;
      }
      else {
        int64_t v18 = *(void *)(v6 + 16);
      }
      uint64_t result = (uint64_t)sub_22081B3E0((char *)1, v18, 1, (char *)v6);
      uint64_t v6 = result;
      uint64_t v14 = *(void *)(result + 16);
      if (*(void *)(v12 + 16))
      {
LABEL_16:
        if ((*(void *)(v6 + 24) >> 1) - v14 < v13) {
          goto LABEL_30;
        }
        uint64_t result = (uint64_t)memcpy((void *)(v6 + 8 * v14 + 32), (const void *)(v12 + 32), 8 * v13);
        if (v13)
        {
          uint64_t v16 = *(void *)(v6 + 16);
          BOOL v9 = __OFADD__(v16, v13);
          uint64_t v17 = v16 + v13;
          if (v9) {
            goto LABEL_31;
          }
          *(void *)(v6 + 16) = v17;
        }
        goto LABEL_4;
      }
    }
    else if (v13)
    {
      goto LABEL_16;
    }
    if (v13) {
      goto LABEL_29;
    }
LABEL_4:
    uint64_t result = swift_bridgeObjectRelease();
    if (v7 >= a2) {
      return v6;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_220844BB4(unsigned __int8 **a1, uint64_t a2)
{
  uint64_t v4 = sub_220844A3C(a1, a2);
  if (!v3)
  {
    uint64_t v5 = v4;
    int64_t v6 = *(void *)(v4 + 16);
    if (v6)
    {
      uint64_t v12 = MEMORY[0x263F8EE78];
      sub_220826C98(0, v6, 0);
      uint64_t v7 = 0;
      uint64_t v2 = v12;
      unint64_t v8 = *(void *)(v12 + 16);
      do
      {
        uint64_t v9 = *(void *)(v5 + 8 * v7 + 32);
        unint64_t v10 = *(void *)(v12 + 24);
        if (v8 >= v10 >> 1) {
          sub_220826C98((char *)(v10 > 1), v8 + 1, 1);
        }
        ++v7;
        *(void *)(v12 + 16) = v8 + 1;
        *(void *)(v12 + 8 * v8++ + 32) = v9;
      }
      while (v6 != v7);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x263F8EE78];
    }
  }
  return v2;
}

ValueMetadata *type metadata accessor for IntegerJSONColumnProcessor()
{
  return &type metadata for IntegerJSONColumnProcessor;
}

ValueMetadata *type metadata accessor for BooleanJSONColumnProcessor()
{
  return &type metadata for BooleanJSONColumnProcessor;
}

ValueMetadata *type metadata accessor for DoubleJSONColumnProcessor()
{
  return &type metadata for DoubleJSONColumnProcessor;
}

ValueMetadata *type metadata accessor for StringJSONColumnProcessor()
{
  return &type metadata for StringJSONColumnProcessor;
}

uint64_t destroy for DateJSONColumnProcessor()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for DateJSONColumnProcessor(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for DateJSONColumnProcessor(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for DateJSONColumnProcessor(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DateJSONColumnProcessor(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DateJSONColumnProcessor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DateJSONColumnProcessor()
{
  return &type metadata for DateJSONColumnProcessor;
}

ValueMetadata *type metadata accessor for ArrayJSONColumnProcessor()
{
  return &type metadata for ArrayJSONColumnProcessor;
}

ValueMetadata *type metadata accessor for ObjectJSONColumnProcessor()
{
  return &type metadata for ObjectJSONColumnProcessor;
}

uint64_t *sub_220844FCC(uint64_t *result)
{
  uint64_t v2 = result[2];
  if (!v2) {
    return result;
  }
  long long v3 = v1;
  long long v4 = result;
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  int64_t v6 = &qword_267F188D8;
  uint64_t v63 = v2;
  while (1)
  {
    uint64_t v7 = v4[v5 + 4];
    if (*(void *)(v7 + 16))
    {
      uint64_t v8 = *v3;
      uint64_t v9 = v3[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_22081D290(v8, v9);
      if (v11)
      {
        sub_220835350(*(void *)(v7 + 56) + 32 * v10, (uint64_t)&v67);
      }
      else
      {
        long long v67 = 0u;
        long long v68 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      long long v67 = 0u;
      long long v68 = 0u;
    }
    sub_220847854((uint64_t)&v67, (uint64_t)&v65);
    if (v66)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B28);
      sub_2208478BC();
      if ((swift_dynamicCast() & 1) == 0)
      {
        if (!swift_dynamicCast())
        {
          sub_220835340(&v65, v64);
          sub_2208478FC();
          swift_allocError();
          uint64_t v61 = v60;
          *(void *)uint64_t v60 = v5;
          uint64_t v62 = v3[1];
          *(void *)(v60 + 8) = *v3;
          *(void *)(v60 + 16) = v62;
          *(unsigned char *)(v60 + 24) = 1;
          sub_220835350((uint64_t)v64, v60 + 32);
          *(unsigned char *)(v61 + 64) = 0;
          swift_bridgeObjectRetain();
          swift_willThrow();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v64);
          sub_2208352E4((uint64_t)&v67, &qword_267F188D8);
          return (uint64_t *)swift_bridgeObjectRelease();
        }
        int64_t v31 = v4;
        int64_t v32 = v6;
        uint64_t v33 = v69;
        uint64_t v34 = v3[4];
        __n128 result = (uint64_t *)swift_beginAccess();
        uint64_t v35 = *(void *)(v34 + 16);
        if (!v35) {
          goto LABEL_88;
        }
        uint64_t v36 = *(void *)(v35 + 8);
        uint64_t v37 = v36 + 1;
        if (__OFADD__(v36, 1)) {
          goto LABEL_76;
        }
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v39 = v3[4];
        uint64_t v40 = (uint64_t **)(v39 + 16);
        if (isUniquelyReferenced_nonNull_native)
        {
          swift_beginAccess();
          __n128 result = *v40;
          if (!*v40) {
            goto LABEL_91;
          }
          uint64_t v41 = *result;
          if (*result < v37)
          {
            if (v41 + 0x4000000000000000 < 0) {
              goto LABEL_81;
            }
            uint64_t v42 = 2 * v41;
            if (v42 <= v37) {
              uint64_t v43 = v37;
            }
            else {
              uint64_t v43 = v42;
            }
            sub_22088F714((uint64_t)result, v43, (uint64_t *)v64);
            __n128 result = *(uint64_t **)(v39 + 16);
            if (!result) {
              goto LABEL_93;
            }
            if (result[1] < 0) {
              goto LABEL_83;
            }
            MEMORY[0x223C6B140]();
            *(_OWORD *)uint64_t v40 = *(_OWORD *)v64;
          }
        }
        else
        {
          __n128 result = (uint64_t *)swift_beginAccess();
          uint64_t v44 = *v40;
          if (!v44) {
            goto LABEL_92;
          }
          uint64_t v45 = *v44;
          if (*v44 < v37)
          {
            if (v45 + 0x4000000000000000 < 0) {
              goto LABEL_82;
            }
            if (2 * v45 <= v37) {
              uint64_t v45 = v37;
            }
            else {
              v45 *= 2;
            }
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413D8);
          uint64_t v46 = swift_allocObject();
          sub_22088E6B0((uint64_t)v44, v45, (uint64_t *)v64);
          *(_OWORD *)(v46 + 16) = *(_OWORD *)v64;
          swift_release();
          v3[4] = v46;
          uint64_t v39 = v46;
        }
        __n128 result = (uint64_t *)swift_beginAccess();
        uint64_t v47 = *(void **)(v39 + 16);
        if (!v47) {
          goto LABEL_89;
        }
        uint64_t v48 = *v47 + 7;
        if (__OFADD__(*v47, 7)) {
          goto LABEL_77;
        }
        char v49 = v47 + 8;
        if (v48 < 0) {
          uint64_t v48 = *v47 + 14;
        }
        uint64_t v50 = v48 >> 3;
        uint64_t v52 = v50 - 1;
        BOOL v51 = v50 < 1;
        uint64_t v53 = v50 + 62;
        if (!v51) {
          uint64_t v53 = v52;
        }
        *(void *)((char *)&v49[v47[1] + 8] + (v53 & 0xFFFFFFFFFFFFFFC0)) = v33;
        uint64_t v54 = v47[1];
        uint64_t v55 = v54 + 7;
        if (v54 >= 0) {
          uint64_t v55 = v47[1];
        }
        uint64_t v56 = v55 >> 3;
        uint64_t v57 = v54 - (v55 & 0xFFFFFFFFFFFFFFF8);
        if (v57 >= 0) {
          char v58 = 1 << v57;
        }
        else {
          char v58 = 0;
        }
        *((unsigned char *)v49 + v56) |= v58;
        BOOL v27 = __OFADD__(v54, 1);
        uint64_t v59 = v54 + 1;
        if (v27)
        {
          __break(1u);
          return (uint64_t *)swift_bridgeObjectRelease();
        }
        v47[1] = v59;
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v65);
        int64_t v6 = v32;
        long long v4 = v31;
        uint64_t v2 = v63;
        goto LABEL_3;
      }

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v65);
    }
    uint64_t v12 = v3[4];
    __n128 result = (uint64_t *)swift_beginAccess();
    uint64_t v13 = *(void *)(v12 + 16);
    if (!v13) {
      goto LABEL_84;
    }
    uint64_t v14 = *(void *)(v13 + 8);
    uint64_t v15 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    int v16 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = v3[4];
    int64_t v18 = (uint64_t **)(v17 + 16);
    if (v16)
    {
      swift_beginAccess();
      __n128 result = *v18;
      if (!*v18) {
        goto LABEL_86;
      }
      uint64_t v19 = *result;
      if (*result < v15)
      {
        if (v19 + 0x4000000000000000 < 0) {
          goto LABEL_78;
        }
        uint64_t v20 = 2 * v19;
        if (v20 <= v15) {
          uint64_t v21 = v15;
        }
        else {
          uint64_t v21 = v20;
        }
        sub_22088F714((uint64_t)result, v21, (uint64_t *)&v65);
        __n128 result = *(uint64_t **)(v17 + 16);
        if (!result) {
          goto LABEL_90;
        }
        if (result[1] < 0) {
          goto LABEL_80;
        }
        MEMORY[0x223C6B140]();
        *(_OWORD *)int64_t v18 = v65;
      }
    }
    else
    {
      __n128 result = (uint64_t *)swift_beginAccess();
      uint64_t v22 = *v18;
      if (!v22) {
        goto LABEL_87;
      }
      uint64_t v23 = *v22;
      if (*v22 < v15)
      {
        if (v23 + 0x4000000000000000 < 0) {
          goto LABEL_79;
        }
        if (2 * v23 <= v15) {
          uint64_t v23 = v15;
        }
        else {
          v23 *= 2;
        }
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413D8);
      uint64_t v24 = swift_allocObject();
      sub_22088E6B0((uint64_t)v22, v23, (uint64_t *)&v65);
      *(_OWORD *)(v24 + 16) = v65;
      swift_release();
      v3[4] = v24;
      uint64_t v17 = v24;
    }
    __n128 result = (uint64_t *)swift_beginAccess();
    uint64_t v25 = *(void *)(v17 + 16);
    if (!v25) {
      goto LABEL_85;
    }
    uint64_t v26 = *(void *)(v25 + 16);
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27) {
      goto LABEL_74;
    }
    *(void *)(v25 + 16) = v28;
    uint64_t v29 = *(void *)(v25 + 8);
    BOOL v27 = __OFADD__(v29, 1);
    uint64_t v30 = v29 + 1;
    if (v27) {
      goto LABEL_75;
    }
    *(void *)(v25 + 8) = v30;
LABEL_3:
    ++v5;
    sub_2208352E4((uint64_t)&v67, v6);
    if (v2 == v5) {
      return (uint64_t *)swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  __break(1u);
LABEL_88:
  __break(1u);
LABEL_89:
  __break(1u);
LABEL_90:
  __break(1u);
LABEL_91:
  __break(1u);
LABEL_92:
  __break(1u);
LABEL_93:
  __break(1u);
  return result;
}

uint64_t *sub_2208455A4(uint64_t *result)
{
  uint64_t v2 = result[2];
  if (!v2) {
    return result;
  }
  long long v3 = v1;
  long long v4 = result;
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  int64_t v6 = &qword_267F188D8;
  uint64_t v60 = v2;
  while (1)
  {
    uint64_t v7 = v4[v5 + 4];
    if (*(void *)(v7 + 16))
    {
      uint64_t v8 = *v3;
      uint64_t v9 = v3[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_22081D290(v8, v9);
      if (v11)
      {
        sub_220835350(*(void *)(v7 + 56) + 32 * v10, (uint64_t)&v64);
      }
      else
      {
        long long v64 = 0u;
        long long v65 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      long long v64 = 0u;
      long long v65 = 0u;
    }
    sub_220847854((uint64_t)&v64, (uint64_t)&v62);
    if (v63)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B28);
      sub_2208478BC();
      if ((swift_dynamicCast() & 1) == 0)
      {
        if (!swift_dynamicCast())
        {
          sub_220835340(&v62, v61);
          sub_2208478FC();
          swift_allocError();
          uint64_t v58 = v57;
          *(void *)uint64_t v57 = v5;
          uint64_t v59 = v3[1];
          *(void *)(v57 + 8) = *v3;
          *(void *)(v57 + 16) = v59;
          *(unsigned char *)(v57 + 24) = 1;
          sub_220835350((uint64_t)v61, v57 + 32);
          *(unsigned char *)(v58 + 64) = 0;
          swift_bridgeObjectRetain();
          swift_willThrow();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v61);
          sub_2208352E4((uint64_t)&v64, &qword_267F188D8);
          return (uint64_t *)swift_bridgeObjectRelease();
        }
        int64_t v31 = v4;
        int64_t v32 = v6;
        char v33 = v66;
        uint64_t v34 = v3[4];
        __n128 result = (uint64_t *)swift_beginAccess();
        uint64_t v35 = *(void *)(v34 + 16);
        if (!v35) {
          goto LABEL_86;
        }
        uint64_t v36 = *(void *)(v35 + 8);
        uint64_t v37 = v36 + 1;
        if (__OFADD__(v36, 1)) {
          goto LABEL_74;
        }
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v39 = v3[4];
        uint64_t v40 = (uint64_t **)(v39 + 16);
        if (isUniquelyReferenced_nonNull_native)
        {
          swift_beginAccess();
          __n128 result = *v40;
          if (!*v40) {
            goto LABEL_89;
          }
          uint64_t v41 = *result;
          if (*result < v37)
          {
            if (v41 + 0x4000000000000000 < 0) {
              goto LABEL_79;
            }
            uint64_t v42 = 2 * v41;
            if (v42 <= v37) {
              uint64_t v43 = v37;
            }
            else {
              uint64_t v43 = v42;
            }
            sub_22088FD6C((uint64_t)result, v43, (uint64_t *)v61);
            __n128 result = *(uint64_t **)(v39 + 16);
            if (!result) {
              goto LABEL_91;
            }
            if (result[1] < 0) {
              goto LABEL_81;
            }
            MEMORY[0x223C6B140]();
            *(_OWORD *)uint64_t v40 = *(_OWORD *)v61;
          }
        }
        else
        {
          __n128 result = (uint64_t *)swift_beginAccess();
          uint64_t v44 = *v40;
          if (!v44) {
            goto LABEL_90;
          }
          uint64_t v45 = *v44;
          if (*v44 < v37)
          {
            if (v45 + 0x4000000000000000 < 0) {
              goto LABEL_80;
            }
            if (2 * v45 <= v37) {
              uint64_t v45 = v37;
            }
            else {
              v45 *= 2;
            }
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41120);
          uint64_t v46 = swift_allocObject();
          sub_22088ED7C((uint64_t)v44, v45, (uint64_t *)v61);
          *(_OWORD *)(v46 + 16) = *(_OWORD *)v61;
          swift_release();
          v3[4] = v46;
          uint64_t v39 = v46;
        }
        __n128 result = (uint64_t *)swift_beginAccess();
        uint64_t v47 = *(void **)(v39 + 16);
        if (!v47) {
          goto LABEL_87;
        }
        uint64_t v48 = *v47 + 7;
        if (__OFADD__(*v47, 7)) {
          goto LABEL_75;
        }
        char v49 = v47 + 8;
        if (v48 < 0) {
          uint64_t v48 = *v47 + 14;
        }
        uint64_t v50 = v48 >> 3;
        uint64_t v52 = v50 - 1;
        BOOL v51 = v50 < 1;
        uint64_t v53 = v50 + 62;
        if (!v51) {
          uint64_t v53 = v52;
        }
        uint64_t v54 = v47[1];
        *((unsigned char *)v49 + v54 + (v53 & 0xFFFFFFFFFFFFFFC0) + 64) = v33;
        uint64_t v55 = v54 - (v53 & 0xFFFFFFFFFFFFFFF8);
        if (v55 >= 0) {
          char v56 = 1 << v55;
        }
        else {
          char v56 = 0;
        }
        *((unsigned char *)v49 + v54 / 8) |= v56;
        if (__OFADD__(v54, 1))
        {
          __break(1u);
          return (uint64_t *)swift_bridgeObjectRelease();
        }
        v47[1] = v54 + 1;
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v62);
        int64_t v6 = v32;
        long long v4 = v31;
        uint64_t v2 = v60;
        goto LABEL_3;
      }

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v62);
    }
    uint64_t v12 = v3[4];
    __n128 result = (uint64_t *)swift_beginAccess();
    uint64_t v13 = *(void *)(v12 + 16);
    if (!v13) {
      goto LABEL_82;
    }
    uint64_t v14 = *(void *)(v13 + 8);
    uint64_t v15 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    int v16 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = v3[4];
    int64_t v18 = (uint64_t **)(v17 + 16);
    if (v16)
    {
      swift_beginAccess();
      __n128 result = *v18;
      if (!*v18) {
        goto LABEL_84;
      }
      uint64_t v19 = *result;
      if (*result < v15)
      {
        if (v19 + 0x4000000000000000 < 0) {
          goto LABEL_76;
        }
        uint64_t v20 = 2 * v19;
        if (v20 <= v15) {
          uint64_t v21 = v15;
        }
        else {
          uint64_t v21 = v20;
        }
        sub_22088FD6C((uint64_t)result, v21, (uint64_t *)&v62);
        __n128 result = *(uint64_t **)(v17 + 16);
        if (!result) {
          goto LABEL_88;
        }
        if (result[1] < 0) {
          goto LABEL_78;
        }
        MEMORY[0x223C6B140]();
        *(_OWORD *)int64_t v18 = v62;
      }
    }
    else
    {
      __n128 result = (uint64_t *)swift_beginAccess();
      uint64_t v22 = *v18;
      if (!v22) {
        goto LABEL_85;
      }
      uint64_t v23 = *v22;
      if (*v22 < v15)
      {
        if (v23 + 0x4000000000000000 < 0) {
          goto LABEL_77;
        }
        if (2 * v23 <= v15) {
          uint64_t v23 = v15;
        }
        else {
          v23 *= 2;
        }
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41120);
      uint64_t v24 = swift_allocObject();
      sub_22088ED7C((uint64_t)v22, v23, (uint64_t *)&v62);
      *(_OWORD *)(v24 + 16) = v62;
      swift_release();
      v3[4] = v24;
      uint64_t v17 = v24;
    }
    __n128 result = (uint64_t *)swift_beginAccess();
    uint64_t v25 = *(void *)(v17 + 16);
    if (!v25) {
      goto LABEL_83;
    }
    uint64_t v26 = *(void *)(v25 + 16);
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27) {
      goto LABEL_72;
    }
    *(void *)(v25 + 16) = v28;
    uint64_t v29 = *(void *)(v25 + 8);
    BOOL v27 = __OFADD__(v29, 1);
    uint64_t v30 = v29 + 1;
    if (v27) {
      goto LABEL_73;
    }
    *(void *)(v25 + 8) = v30;
LABEL_3:
    ++v5;
    sub_2208352E4((uint64_t)&v64, v6);
    if (v2 == v5) {
      return (uint64_t *)swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  __break(1u);
LABEL_88:
  __break(1u);
LABEL_89:
  __break(1u);
LABEL_90:
  __break(1u);
LABEL_91:
  __break(1u);
  return result;
}

uint64_t *sub_220845B78(uint64_t *result)
{
  uint64_t v2 = result[2];
  if (!v2) {
    return result;
  }
  long long v3 = v1;
  long long v4 = result;
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  while (1)
  {
    uint64_t v6 = v4[v5 + 4];
    if (*(void *)(v6 + 16))
    {
      uint64_t v7 = *v3;
      uint64_t v8 = v3[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_22081D290(v7, v8);
      if (v10)
      {
        sub_220835350(*(void *)(v6 + 56) + 32 * v9, (uint64_t)&v61);
      }
      else
      {
        long long v61 = 0u;
        long long v62 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      long long v61 = 0u;
      long long v62 = 0u;
    }
    sub_220847854((uint64_t)&v61, (uint64_t)&v59);
    if (v60)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B28);
      sub_2208478BC();
      if ((swift_dynamicCast() & 1) == 0)
      {
        if (!swift_dynamicCast())
        {
          sub_220835340(&v59, v57);
          sub_2208478FC();
          swift_allocError();
          uint64_t v55 = v54;
          *(void *)uint64_t v54 = v5;
          uint64_t v56 = v3[1];
          *(void *)(v54 + 8) = *v3;
          *(void *)(v54 + 16) = v56;
          *(unsigned char *)(v54 + 24) = 2;
          sub_220835350((uint64_t)v57, v54 + 32);
          *(unsigned char *)(v55 + 64) = 0;
          swift_bridgeObjectRetain();
          swift_willThrow();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v57);
          sub_2208352E4((uint64_t)&v61, &qword_267F188D8);
          return (uint64_t *)swift_bridgeObjectRelease();
        }
        uint64_t v30 = v58;
        uint64_t v31 = v3[4];
        __n128 result = (uint64_t *)swift_beginAccess();
        uint64_t v32 = *(void *)(v31 + 16);
        if (!v32) {
          goto LABEL_86;
        }
        uint64_t v33 = *(void *)(v32 + 8);
        uint64_t v34 = v33 + 1;
        if (__OFADD__(v33, 1)) {
          goto LABEL_74;
        }
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v36 = v3[4];
        uint64_t v37 = (uint64_t **)(v36 + 16);
        if (isUniquelyReferenced_nonNull_native)
        {
          swift_beginAccess();
          __n128 result = *v37;
          if (!*v37) {
            goto LABEL_89;
          }
          uint64_t v38 = *result;
          if (*result < v34)
          {
            if (v38 + 0x4000000000000000 < 0) {
              goto LABEL_79;
            }
            uint64_t v39 = 2 * v38;
            if (v39 <= v34) {
              uint64_t v40 = v34;
            }
            else {
              uint64_t v40 = v39;
            }
            sub_22088F714((uint64_t)result, v40, (uint64_t *)v57);
            __n128 result = *(uint64_t **)(v36 + 16);
            if (!result) {
              goto LABEL_91;
            }
            if (result[1] < 0) {
              goto LABEL_81;
            }
            MEMORY[0x223C6B140]();
            *(_OWORD *)uint64_t v37 = *(_OWORD *)v57;
          }
        }
        else
        {
          __n128 result = (uint64_t *)swift_beginAccess();
          uint64_t v41 = *v37;
          if (!v41) {
            goto LABEL_90;
          }
          uint64_t v42 = *v41;
          if (*v41 < v34)
          {
            if (v42 + 0x4000000000000000 < 0) {
              goto LABEL_80;
            }
            if (2 * v42 <= v34) {
              uint64_t v42 = v34;
            }
            else {
              v42 *= 2;
            }
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413D0);
          uint64_t v43 = swift_allocObject();
          sub_22088E844((uint64_t)v41, v42, (uint64_t *)v57);
          *(_OWORD *)(v43 + 16) = *(_OWORD *)v57;
          swift_release();
          v3[4] = v43;
          uint64_t v36 = v43;
        }
        __n128 result = (uint64_t *)swift_beginAccess();
        uint64_t v44 = *(void **)(v36 + 16);
        if (!v44) {
          goto LABEL_87;
        }
        uint64_t v45 = *v44 + 7;
        if (__OFADD__(*v44, 7)) {
          goto LABEL_75;
        }
        uint64_t v46 = v44 + 8;
        if (v45 < 0) {
          uint64_t v45 = *v44 + 14;
        }
        uint64_t v47 = v45 >> 3;
        uint64_t v49 = v47 - 1;
        BOOL v48 = v47 < 1;
        uint64_t v50 = v47 + 62;
        if (!v48) {
          uint64_t v50 = v49;
        }
        uint64_t v51 = v44[1];
        *(void *)((char *)&v46[v51 + 8] + (v50 & 0xFFFFFFFFFFFFFFC0)) = v30;
        uint64_t v52 = v51 - (v50 & 0xFFFFFFFFFFFFFFF8);
        if (v52 >= 0) {
          char v53 = 1 << v52;
        }
        else {
          char v53 = 0;
        }
        *((unsigned char *)v46 + v51 / 8) |= v53;
        if (__OFADD__(v51, 1))
        {
          __break(1u);
          return (uint64_t *)swift_bridgeObjectRelease();
        }
        v44[1] = v51 + 1;
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v59);
        goto LABEL_3;
      }

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v59);
    }
    uint64_t v11 = v3[4];
    __n128 result = (uint64_t *)swift_beginAccess();
    uint64_t v12 = *(void *)(v11 + 16);
    if (!v12) {
      goto LABEL_82;
    }
    uint64_t v13 = *(void *)(v12 + 8);
    uint64_t v14 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    int v15 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = v3[4];
    uint64_t v17 = (uint64_t **)(v16 + 16);
    if (v15)
    {
      swift_beginAccess();
      __n128 result = *v17;
      if (!*v17) {
        goto LABEL_84;
      }
      uint64_t v18 = *result;
      if (*result < v14)
      {
        if (v18 + 0x4000000000000000 < 0) {
          goto LABEL_76;
        }
        uint64_t v19 = 2 * v18;
        if (v19 <= v14) {
          uint64_t v20 = v14;
        }
        else {
          uint64_t v20 = v19;
        }
        sub_22088F714((uint64_t)result, v20, (uint64_t *)&v59);
        __n128 result = *(uint64_t **)(v16 + 16);
        if (!result) {
          goto LABEL_88;
        }
        if (result[1] < 0) {
          goto LABEL_78;
        }
        MEMORY[0x223C6B140]();
        *(_OWORD *)uint64_t v17 = v59;
      }
    }
    else
    {
      __n128 result = (uint64_t *)swift_beginAccess();
      uint64_t v21 = *v17;
      if (!v21) {
        goto LABEL_85;
      }
      uint64_t v22 = *v21;
      if (*v21 < v14)
      {
        if (v22 + 0x4000000000000000 < 0) {
          goto LABEL_77;
        }
        if (2 * v22 <= v14) {
          uint64_t v22 = v14;
        }
        else {
          v22 *= 2;
        }
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413D0);
      uint64_t v23 = swift_allocObject();
      sub_22088E844((uint64_t)v21, v22, (uint64_t *)&v59);
      *(_OWORD *)(v23 + 16) = v59;
      swift_release();
      v3[4] = v23;
      uint64_t v16 = v23;
    }
    __n128 result = (uint64_t *)swift_beginAccess();
    uint64_t v24 = *(void *)(v16 + 16);
    if (!v24) {
      goto LABEL_83;
    }
    uint64_t v25 = *(void *)(v24 + 16);
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26) {
      goto LABEL_72;
    }
    *(void *)(v24 + 16) = v27;
    uint64_t v28 = *(void *)(v24 + 8);
    BOOL v26 = __OFADD__(v28, 1);
    uint64_t v29 = v28 + 1;
    if (v26) {
      goto LABEL_73;
    }
    *(void *)(v24 + 8) = v29;
LABEL_3:
    ++v5;
    sub_2208352E4((uint64_t)&v61, &qword_267F188D8);
    if (v2 == v5) {
      return (uint64_t *)swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  __break(1u);
LABEL_88:
  __break(1u);
LABEL_89:
  __break(1u);
LABEL_90:
  __break(1u);
LABEL_91:
  __break(1u);
  return result;
}

uint64_t sub_22084613C(uint64_t result)
{
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(result + 16);
  if (v4)
  {
    uint64_t v5 = v1;
    uint64_t v6 = result;
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v4; ++i)
    {
      uint64_t v8 = *(void *)(v6 + 8 * i + 32);
      if (*(void *)(v8 + 16))
      {
        uint64_t v9 = *v5;
        uint64_t v10 = v5[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v11 = sub_22081D290(v9, v10);
        if (v12)
        {
          sub_220835350(*(void *)(v8 + 56) + 32 * v11, (uint64_t)&v13);
        }
        else
        {
          long long v13 = 0u;
          long long v14 = 0u;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        long long v13 = 0u;
        long long v14 = 0u;
      }
      sub_220846F98((uint64_t)&v13, i);
      sub_2208352E4((uint64_t)&v13, &qword_267F188D8);
      if (v3) {
        break;
      }
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t *sub_220846248(uint64_t *result)
{
  uint64_t v2 = result[2];
  if (!v2) {
    return result;
  }
  uint64_t v3 = v1;
  uint64_t v4 = result;
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  uint64_t v67 = v2;
  while (1)
  {
    uint64_t v6 = v4[v5 + 4];
    if (*(void *)(v6 + 16))
    {
      uint64_t v7 = *v3;
      uint64_t v8 = v3[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_22081D290(v7, v8);
      if (v10)
      {
        sub_220835350(*(void *)(v6 + 56) + 32 * v9, (uint64_t)&v65);
      }
      else
      {
        long long v65 = 0u;
        long long v66 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      long long v65 = 0u;
      long long v66 = 0u;
    }
    sub_220847854((uint64_t)&v65, (uint64_t)&v63);
    if (v64)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B28);
      sub_2208478BC();
      if ((swift_dynamicCast() & 1) == 0)
      {
        if (!swift_dynamicCast())
        {
          sub_220835340(&v63, v62);
          sub_2208478FC();
          swift_allocError();
          uint64_t v59 = v58;
          *(void *)uint64_t v58 = v5;
          uint64_t v60 = v3[1];
          *(void *)(v58 + 8) = *v3;
          *(void *)(v58 + 16) = v60;
          *(unsigned char *)(v58 + 24) = 4;
          sub_220835350((uint64_t)v62, v58 + 32);
          *(unsigned char *)(v59 + 64) = 0;
          swift_bridgeObjectRetain();
          swift_willThrow();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v62);
          sub_2208352E4((uint64_t)&v65, &qword_267F188D8);
          return (uint64_t *)swift_bridgeObjectRelease();
        }
        long long v30 = v62[0];
        uint64_t v31 = v3[4];
        __n128 result = (uint64_t *)swift_beginAccess();
        uint64_t v32 = *(void *)(v31 + 16);
        if (!v32) {
          goto LABEL_82;
        }
        uint64_t v33 = *(void *)(v32 + 8);
        uint64_t v34 = v33 + 1;
        if (__OFADD__(v33, 1)) {
          goto LABEL_72;
        }
        uint64_t v35 = v4;
        swift_bridgeObjectRetain();
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v37 = v3[4];
        uint64_t v38 = (uint64_t **)(v37 + 16);
        if (isUniquelyReferenced_nonNull_native)
        {
          swift_beginAccess();
          __n128 result = *v38;
          if (!*v38) {
            goto LABEL_84;
          }
          uint64_t v39 = *result;
          if (*result < v34)
          {
            if (v39 + 0x4000000000000000 < 0) {
              goto LABEL_76;
            }
            uint64_t v40 = 2 * v39;
            if (v40 <= v34) {
              uint64_t v41 = v34;
            }
            else {
              uint64_t v41 = v40;
            }
            sub_22088F904((uint64_t)result, v41, (uint64_t *)&v61);
            sub_220890508(*(void **)(v37 + 16));
            *(_OWORD *)(v37 + 16) = v61;
          }
        }
        else
        {
          __n128 result = (uint64_t *)swift_beginAccess();
          uint64_t v42 = *v38;
          if (!v42) {
            goto LABEL_85;
          }
          uint64_t v43 = *v42;
          if (*v42 < v34)
          {
            if (v43 + 0x4000000000000000 < 0) {
              goto LABEL_77;
            }
            if (2 * v43 <= v34) {
              uint64_t v43 = v34;
            }
            else {
              v43 *= 2;
            }
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413C8);
          uint64_t v44 = swift_allocObject();
          sub_22088E9D4((uint64_t)v42, v43, (uint64_t *)&v61);
          *(_OWORD *)(v44 + 16) = v61;
          swift_release();
          v3[4] = v44;
          uint64_t v37 = v44;
        }
        __n128 result = (uint64_t *)swift_beginAccess();
        uint64_t v45 = *(void **)(v37 + 16);
        if (!v45) {
          goto LABEL_83;
        }
        uint64_t v46 = *v45 + 7;
        if (__OFADD__(*v45, 7)) {
          goto LABEL_73;
        }
        uint64_t v47 = v45 + 8;
        if (v46 < 0) {
          uint64_t v46 = *v45 + 14;
        }
        uint64_t v48 = v46 >> 3;
        uint64_t v50 = v48 - 1;
        BOOL v49 = v48 < 1;
        uint64_t v51 = v48 + 62;
        if (!v49) {
          uint64_t v51 = v50;
        }
        *(_OWORD *)((char *)&v47[2 * v45[1] + 8] + (v51 & 0xFFFFFFFFFFFFFFC0)) = v30;
        uint64_t v52 = v45[1];
        uint64_t v53 = v52 + 7;
        if (v52 >= 0) {
          uint64_t v53 = v45[1];
        }
        uint64_t v54 = v53 >> 3;
        uint64_t v55 = v52 - (v53 & 0xFFFFFFFFFFFFFFF8);
        if (v55 >= 0) {
          char v56 = 1 << v55;
        }
        else {
          char v56 = 0;
        }
        *((unsigned char *)v47 + v54) |= v56;
        BOOL v26 = __OFADD__(v52, 1);
        uint64_t v57 = v52 + 1;
        if (v26)
        {
          __break(1u);
          return (uint64_t *)swift_bridgeObjectRelease();
        }
        uint64_t v4 = v35;
        v45[1] = v57;
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v63);
        uint64_t v2 = v67;
        goto LABEL_3;
      }

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v63);
    }
    uint64_t v11 = v3[4];
    __n128 result = (uint64_t *)swift_beginAccess();
    uint64_t v12 = *(void *)(v11 + 16);
    if (!v12) {
      goto LABEL_78;
    }
    uint64_t v13 = *(void *)(v12 + 8);
    uint64_t v14 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    int v15 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = v3[4];
    uint64_t v17 = (uint64_t **)(v16 + 16);
    if (v15)
    {
      swift_beginAccess();
      __n128 result = *v17;
      if (!*v17) {
        goto LABEL_80;
      }
      uint64_t v18 = *result;
      if (*result < v14)
      {
        if (v18 + 0x4000000000000000 < 0) {
          goto LABEL_74;
        }
        uint64_t v19 = 2 * v18;
        if (v19 <= v14) {
          uint64_t v20 = v14;
        }
        else {
          uint64_t v20 = v19;
        }
        sub_22088F904((uint64_t)result, v20, (uint64_t *)&v63);
        sub_220890508(*(void **)(v16 + 16));
        *(_OWORD *)(v16 + 16) = v63;
      }
    }
    else
    {
      __n128 result = (uint64_t *)swift_beginAccess();
      uint64_t v21 = *v17;
      if (!v21) {
        goto LABEL_81;
      }
      uint64_t v22 = *v21;
      if (*v21 < v14)
      {
        if (v22 + 0x4000000000000000 < 0) {
          goto LABEL_75;
        }
        if (2 * v22 <= v14) {
          uint64_t v22 = v14;
        }
        else {
          v22 *= 2;
        }
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413C8);
      uint64_t v23 = swift_allocObject();
      sub_22088E9D4((uint64_t)v21, v22, (uint64_t *)&v63);
      *(_OWORD *)(v23 + 16) = v63;
      swift_release();
      v3[4] = v23;
      uint64_t v16 = v23;
    }
    __n128 result = (uint64_t *)swift_beginAccess();
    uint64_t v24 = *(void *)(v16 + 16);
    if (!v24) {
      goto LABEL_79;
    }
    uint64_t v25 = *(void *)(v24 + 16);
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26) {
      goto LABEL_70;
    }
    *(void *)(v24 + 16) = v27;
    uint64_t v28 = *(void *)(v24 + 8);
    BOOL v26 = __OFADD__(v28, 1);
    uint64_t v29 = v28 + 1;
    if (v26) {
      goto LABEL_71;
    }
    *(void *)(v24 + 8) = v29;
LABEL_3:
    ++v5;
    sub_2208352E4((uint64_t)&v65, &qword_267F188D8);
    if (v2 == v5) {
      return (uint64_t *)swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
  return result;
}

uint64_t sub_220846800(uint64_t result)
{
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(result + 16);
  if (v4)
  {
    uint64_t v5 = v1;
    uint64_t v6 = result;
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v4; ++i)
    {
      uint64_t v8 = *(void *)(v6 + 8 * i + 32);
      if (*(void *)(v8 + 16))
      {
        uint64_t v9 = *v5;
        uint64_t v10 = v5[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v11 = sub_22081D290(v9, v10);
        if (v12)
        {
          sub_220835350(*(void *)(v8 + 56) + 32 * v11, (uint64_t)&v13);
        }
        else
        {
          long long v13 = 0u;
          long long v14 = 0u;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        long long v13 = 0u;
        long long v14 = 0u;
      }
      sub_2208474E0((uint64_t)&v13, i);
      sub_2208352E4((uint64_t)&v13, &qword_267F188D8);
      if (v3) {
        break;
      }
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t *sub_22084690C(uint64_t *result)
{
  uint64_t v2 = result[2];
  if (!v2) {
    return result;
  }
  uint64_t v3 = v1;
  char v56 = result + 4;
  uint64_t v57 = v1 + 4;
  swift_bridgeObjectRetain();
  uint64_t v4 = 0;
  uint64_t v53 = v2;
  uint64_t v54 = v1;
  while (1)
  {
    uint64_t v6 = v56[v4];
    if (*(void *)(v6 + 16))
    {
      uint64_t v8 = *v3;
      uint64_t v7 = v3[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_22081D290(v8, v7);
      if (v10)
      {
        sub_220835350(*(void *)(v6 + 56) + 32 * v9, (uint64_t)&v66);
      }
      else
      {
        long long v66 = 0u;
        long long v67 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      long long v66 = 0u;
      long long v67 = 0u;
    }
    sub_220847854((uint64_t)&v66, (uint64_t)&v64);
    if (v65) {
      break;
    }
LABEL_14:
    uint64_t v11 = *v57;
    __n128 result = (uint64_t *)swift_beginAccess();
    uint64_t v12 = *(void *)(v11 + 16);
    if (!v12) {
      goto LABEL_76;
    }
    uint64_t v13 = *(void *)(v12 + 8);
    uint64_t v14 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
      goto LABEL_73;
    }
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = *v57;
    uint64_t v17 = (uint64_t **)(*v57 + 16);
    if (isUniquelyReferenced_nonNull_native)
    {
      swift_beginAccess();
      __n128 result = *v17;
      if (!*v17) {
        goto LABEL_78;
      }
      uint64_t v18 = *result;
      if (*result < v14)
      {
        if (v18 + 0x4000000000000000 < 0) {
          goto LABEL_74;
        }
        uint64_t v19 = 2 * v18;
        if (v19 <= v14) {
          uint64_t v20 = v14;
        }
        else {
          uint64_t v20 = v19;
        }
        sub_22088F900((uint64_t)result, v20, (uint64_t *)&v64);
        sub_2208908CC(*(void **)(v16 + 16), *(void *)(v16 + 24));
        *(_OWORD *)(v16 + 16) = v64;
      }
    }
    else
    {
      __n128 result = (uint64_t *)swift_beginAccess();
      uint64_t v21 = *v17;
      if (!v21) {
        goto LABEL_79;
      }
      uint64_t v22 = *v21;
      if (*v21 < v14)
      {
        if (v22 + 0x4000000000000000 < 0) {
          goto LABEL_75;
        }
        if (2 * v22 <= v14) {
          uint64_t v22 = v14;
        }
        else {
          v22 *= 2;
        }
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_267F18810);
      uint64_t v23 = swift_allocObject();
      sub_22088E840(&v64, v21, *(void *)(v16 + 24), v22);
      *(_OWORD *)(v23 + 16) = v64;
      swift_release();
      *uint64_t v57 = v23;
      uint64_t v16 = v23;
    }
    __n128 result = (uint64_t *)swift_beginAccess();
    uint64_t v24 = *(void *)(v16 + 16);
    if (!v24) {
      goto LABEL_77;
    }
    uint64_t v25 = *(void *)(v24 + 16);
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26) {
      goto LABEL_71;
    }
    *(void *)(v24 + 16) = v27;
    uint64_t v28 = *(void *)(v24 + 8);
    BOOL v26 = __OFADD__(v28, 1);
    uint64_t v29 = v28 + 1;
    if (v26) {
      goto LABEL_72;
    }
    *(void *)(v24 + 8) = v29;
LABEL_4:
    ++v4;
    sub_2208352E4((uint64_t)&v66, &qword_267F188D8);
    if (v4 == v2) {
      return (uint64_t *)swift_bridgeObjectRelease();
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B28);
  unint64_t v68 = sub_2208478BC();
  if (swift_dynamicCast())
  {

    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v64);
    goto LABEL_14;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B38);
  if (!swift_dynamicCast())
  {
    sub_220835340(&v64, v62);
    sub_2208478FC();
    swift_allocError();
    uint64_t v51 = v50;
    *(void *)uint64_t v50 = v4;
    uint64_t v52 = v3[1];
    *(void *)(v50 + 8) = *v3;
    *(void *)(v50 + 16) = v52;
    *(unsigned char *)(v50 + 24) = 6;
    sub_220835350((uint64_t)v62, v50 + 32);
    *(unsigned char *)(v51 + 64) = 0;
    swift_bridgeObjectRetain();
    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v62);
    sub_2208352E4((uint64_t)&v66, &qword_267F188D8);
    return (uint64_t *)swift_bridgeObjectRelease();
  }
  uint64_t v55 = v4;
  uint64_t v30 = v63;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B48);
  __n128 result = (uint64_t *)sub_22093F0E0();
  uint64_t v31 = result;
  int64_t v32 = 0;
  uint64_t v33 = 1 << *(unsigned char *)(v30 + 32);
  uint64_t v35 = v30 + 64;
  uint64_t v34 = *(void *)(v30 + 64);
  if (v33 < 64) {
    uint64_t v36 = ~(-1 << v33);
  }
  else {
    uint64_t v36 = -1;
  }
  unint64_t v37 = v36 & v34;
  int64_t v58 = (unint64_t)(v33 + 63) >> 6;
  uint64_t v38 = result + 8;
  if ((v36 & v34) != 0)
  {
LABEL_40:
    unint64_t v39 = __clz(__rbit64(v37));
    v37 &= v37 - 1;
    unint64_t v40 = v39 | (v32 << 6);
    goto LABEL_57;
  }
  while (2)
  {
    int64_t v41 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      goto LABEL_69;
    }
    if (v41 >= v58) {
      goto LABEL_3;
    }
    unint64_t v42 = *(void *)(v35 + 8 * v41);
    ++v32;
    if (v42) {
      goto LABEL_56;
    }
    int64_t v32 = v41 + 1;
    if (v41 + 1 >= v58) {
      goto LABEL_3;
    }
    unint64_t v42 = *(void *)(v35 + 8 * v32);
    if (v42) {
      goto LABEL_56;
    }
    int64_t v32 = v41 + 2;
    if (v41 + 2 >= v58) {
      goto LABEL_3;
    }
    unint64_t v42 = *(void *)(v35 + 8 * v32);
    if (v42) {
      goto LABEL_56;
    }
    int64_t v32 = v41 + 3;
    if (v41 + 3 >= v58) {
      goto LABEL_3;
    }
    unint64_t v42 = *(void *)(v35 + 8 * v32);
    if (v42)
    {
LABEL_56:
      unint64_t v37 = (v42 - 1) & v42;
      unint64_t v40 = __clz(__rbit64(v42)) + (v32 << 6);
LABEL_57:
      uint64_t v44 = (uint64_t *)(*(void *)(v30 + 48) + 16 * v40);
      uint64_t v46 = *v44;
      uint64_t v45 = v44[1];
      sub_220847854(*(void *)(v30 + 56) + 32 * v40, (uint64_t)v62);
      sub_220847854((uint64_t)v62, (uint64_t)&v60);
      if (*((void *)&v61 + 1))
      {
        swift_bridgeObjectRetain();
        if (swift_dynamicCast())
        {

          long long v60 = 0u;
          long long v61 = 0u;
LABEL_62:
          sub_2208352E4((uint64_t)v62, &qword_267F188D8);
          *(void *)((char *)v38 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v40;
          uint64_t v47 = (void *)(v31[6] + 16 * v40);
          *uint64_t v47 = v46;
          v47[1] = v45;
          __n128 result = (uint64_t *)sub_220847950((uint64_t)&v60, v31[7] + 32 * v40);
          uint64_t v48 = v31[2];
          BOOL v26 = __OFADD__(v48, 1);
          uint64_t v49 = v48 + 1;
          if (v26)
          {
            __break(1u);
LABEL_69:
            __break(1u);
            goto LABEL_70;
          }
          _OWORD v31[2] = v49;
          if (v37) {
            goto LABEL_40;
          }
          continue;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_2208352E4((uint64_t)&v60, &qword_267F188D8);
      }
      sub_220847854((uint64_t)v62, (uint64_t)&v60);
      goto LABEL_62;
    }
    break;
  }
  int64_t v43 = v41 + 4;
  if (v43 >= v58)
  {
LABEL_3:
    swift_bridgeObjectRelease();
    uint64_t v5 = swift_bridgeObjectRetain();
    sub_2208F21FC(v5);
    swift_release_n();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v64);
    uint64_t v3 = v54;
    uint64_t v4 = v55;
    uint64_t v2 = v53;
    goto LABEL_4;
  }
  unint64_t v42 = *(void *)(v35 + 8 * v43);
  if (v42)
  {
    int64_t v32 = v43;
    goto LABEL_56;
  }
  while (1)
  {
    int64_t v32 = v43 + 1;
    if (__OFADD__(v43, 1)) {
      break;
    }
    if (v32 >= v58) {
      goto LABEL_3;
    }
    unint64_t v42 = *(void *)(v35 + 8 * v32);
    ++v43;
    if (v42) {
      goto LABEL_56;
    }
  }
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
  return result;
}

uint64_t sub_220846F2C@<X0>(void *a1@<X8>)
{
  return sub_2208477D4(&qword_26AD413F0, a1);
}

uint64_t *sub_220846F38(uint64_t *a1)
{
  return sub_220844FCC(a1);
}

uint64_t sub_220846F50@<X0>(void *a1@<X8>)
{
  return sub_2208477D4(&qword_26AD41140, a1);
}

uint64_t *sub_220846F5C(uint64_t *a1)
{
  return sub_2208455A4(a1);
}

uint64_t sub_220846F74@<X0>(void *a1@<X8>)
{
  return sub_2208477D4(&qword_26AD413E8, a1);
}

uint64_t *sub_220846F80(uint64_t *a1)
{
  return sub_220845B78(a1);
}

uint64_t sub_220846F98(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v32 = a2;
  uint64_t v5 = sub_22093E100();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v31 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v31 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD411B8);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v31 - v19;
  sub_220847854(a1, (uint64_t)&v34);
  if (!v35) {
    goto LABEL_4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B28);
  sub_2208478BC();
  if (swift_dynamicCast())
  {

    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v34);
LABEL_4:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v20, 1, 1, v5);
    sub_2208F1E60((uint64_t)v20);
    return sub_2208352E4((uint64_t)v20, qword_26AD411B8);
  }
  if (!swift_dynamicCast())
  {
    if (swift_dynamicCast())
    {
      long long v22 = v33[0];
      sub_2208BB36C(*(uint64_t *)&v33[0], *((uint64_t *)&v33[0] + 1), v18);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v18, 1, v5) != 1)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v18, v5);
        (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v20, v9, v5);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v20, 0, 1, v5);
        sub_2208F1E60((uint64_t)v20);
        sub_2208352E4((uint64_t)v20, qword_26AD411B8);
        (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
        return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v34);
      }
      sub_2208352E4((uint64_t)v18, qword_26AD411B8);
      sub_2208478FC();
      swift_allocError();
      uint64_t v24 = *v3;
      uint64_t v23 = v3[1];
      *(void *)uint64_t v25 = v32;
      *(void *)(v25 + 8) = v24;
      *(void *)(v25 + 16) = v23;
      *(unsigned char *)(v25 + 24) = 3;
      *(_OWORD *)(v25 + 32) = v22;
      *(unsigned char *)(v25 + 64) = 2;
      swift_bridgeObjectRetain();
      swift_willThrow();
      BOOL v26 = &v34;
    }
    else
    {
      sub_220835340(&v34, v33);
      sub_2208478FC();
      swift_allocError();
      uint64_t v28 = v27;
      *(void *)uint64_t v27 = v32;
      uint64_t v29 = *v3;
      uint64_t v30 = v3[1];
      *(void *)(v27 + 8) = v29;
      *(void *)(v27 + 16) = v30;
      *(unsigned char *)(v27 + 24) = 3;
      sub_220835350((uint64_t)v33, v27 + 32);
      *(unsigned char *)(v28 + 64) = 0;
      swift_bridgeObjectRetain();
      swift_willThrow();
      BOOL v26 = v33;
    }
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v26);
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v12, v14, v5);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v20, v12, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v20, 0, 1, v5);
  sub_2208F1E60((uint64_t)v20);
  sub_2208352E4((uint64_t)v20, qword_26AD411B8);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v34);
}

uint64_t sub_220847438@<X0>(void *a1@<X8>)
{
  uint64_t v4 = v1[5];
  uint64_t v3 = v1[6];
  uint64_t v5 = v1[7];
  a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41138);
  a1[4] = &off_26D2223C0;
  *a1 = v4;
  a1[1] = v3;
  a1[2] = v5;
  swift_bridgeObjectRetain();

  return swift_retain();
}

uint64_t sub_2208474A4(uint64_t a1)
{
  return sub_22084613C(a1);
}

uint64_t sub_2208474BC@<X0>(void *a1@<X8>)
{
  return sub_2208477D4(&qword_26AD413E0, a1);
}

uint64_t *sub_2208474C8(uint64_t *a1)
{
  return sub_220846248(a1);
}

uint64_t sub_2208474E0(uint64_t a1, uint64_t a2)
{
  sub_220847854(a1, (uint64_t)&v22);
  if (!v23) {
    return sub_2208F1FCC(0);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B28);
  sub_2208478BC();
  if (swift_dynamicCast())
  {

    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v22);
    return sub_2208F1FCC(0);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B58);
  if (swift_dynamicCast())
  {
    uint64_t v5 = v24;
    int64_t v6 = *(void *)(v24 + 16);
    if (v6)
    {
      uint64_t v19 = MEMORY[0x263F8EE78];
      sub_220826F58(0, v6, 0);
      uint64_t v7 = v5 + 32;
      while (1)
      {
        sub_220847854(v7, (uint64_t)v18);
        sub_220847854((uint64_t)v18, (uint64_t)&v20);
        if (!*((void *)&v21 + 1)) {
          break;
        }
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_12;
        }

        long long v20 = 0u;
        long long v21 = 0u;
LABEL_13:
        sub_2208352E4((uint64_t)v18, &qword_267F188D8);
        uint64_t v8 = v19;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_220826F58(0, *(void *)(v8 + 16) + 1, 1);
          uint64_t v8 = v19;
        }
        unint64_t v10 = *(void *)(v8 + 16);
        unint64_t v9 = *(void *)(v8 + 24);
        if (v10 >= v9 >> 1)
        {
          sub_220826F58((void *)(v9 > 1), v10 + 1, 1);
          uint64_t v8 = v19;
        }
        *(void *)(v8 + 16) = v10 + 1;
        sub_220847950((uint64_t)&v20, v8 + 32 * v10 + 32);
        v7 += 32;
        if (!--v6)
        {
          swift_bridgeObjectRelease();
          goto LABEL_21;
        }
      }
      sub_2208352E4((uint64_t)&v20, &qword_267F188D8);
LABEL_12:
      sub_220847854((uint64_t)v18, (uint64_t)&v20);
      goto LABEL_13;
    }
    swift_bridgeObjectRelease();
LABEL_21:
    uint64_t v16 = swift_bridgeObjectRetain();
    sub_2208F1FCC(v16);
    swift_bridgeObjectRelease_n();
    uint64_t v15 = &v22;
  }
  else
  {
    sub_220835340(&v22, &v20);
    sub_2208478FC();
    swift_allocError();
    uint64_t v12 = v11;
    *(void *)uint64_t v11 = a2;
    uint64_t v13 = *v2;
    uint64_t v14 = v2[1];
    *(void *)(v11 + 8) = v13;
    *(void *)(v11 + 16) = v14;
    *(unsigned char *)(v11 + 24) = 5;
    sub_220835350((uint64_t)&v20, v11 + 32);
    *(unsigned char *)(v12 + 64) = 0;
    swift_bridgeObjectRetain();
    swift_willThrow();
    uint64_t v15 = &v20;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
}

uint64_t sub_2208477A4@<X0>(void *a1@<X8>)
{
  return sub_2208477D4(&qword_267F18B60, a1);
}

uint64_t sub_2208477B0(uint64_t a1)
{
  return sub_220846800(a1);
}

uint64_t sub_2208477C8@<X0>(void *a1@<X8>)
{
  return sub_2208477D4(&qword_267F18B50, a1);
}

uint64_t sub_2208477D4@<X0>(uint64_t *a1@<X2>, void *a2@<X8>)
{
  uint64_t v5 = v2[2];
  uint64_t v4 = v2[3];
  uint64_t v6 = v2[4];
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(a1);
  a2[4] = &off_26D2223C0;
  *a2 = v5;
  a2[1] = v4;
  a2[2] = v6;
  swift_bridgeObjectRetain();

  return swift_retain();
}

uint64_t *sub_22084783C(uint64_t *a1)
{
  return sub_22084690C(a1);
}

uint64_t sub_220847854(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F188D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_2208478BC()
{
  unint64_t result = qword_267F18B30;
  if (!qword_267F18B30)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_267F18B30);
  }
  return result;
}

unint64_t sub_2208478FC()
{
  unint64_t result = qword_267F18B40;
  if (!qword_267F18B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F18B40);
  }
  return result;
}

uint64_t sub_220847950(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F188D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_2208479B8(void *result, uint64_t a2, uint64_t a3)
{
  if (a3 < 0)
  {
    __break(1u);
  }
  else
  {
    if (a3)
    {
      uint64_t v5 = result;
      uint64_t v6 = (void *)sub_22093E8A0();
      uint64_t v7 = v6;
      long long v6[2] = a3;
      v6[4] = v5;
      v6[5] = a2;
      if (a3 != 1)
      {
        v6[6] = v5;
        v6[7] = a2;
        uint64_t v8 = a3 - 2;
        if (v8)
        {
          unint64_t v9 = v6 + 9;
          do
          {
            *(v9 - 1) = v5;
            void *v9 = a2;
            swift_bridgeObjectRetain();
            v9 += 2;
            --v8;
          }
          while (v8);
        }
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return (void *)MEMORY[0x263F8EE78];
    }
    return v7;
  }
  return result;
}

void *sub_220847A68(void *result, uint64_t a2, uint64_t a3)
{
  if (a3 < 0)
  {
    __break(1u);
  }
  else
  {
    if (a3)
    {
      uint64_t v5 = result;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AD40FC0);
      uint64_t v6 = (void *)sub_22093E8A0();
      uint64_t v7 = v6;
      long long v6[2] = a3;
      v6[4] = v5;
      v6[5] = a2;
      if (a3 != 1)
      {
        v6[6] = v5;
        v6[7] = a2;
        uint64_t v8 = a3 - 2;
        if (v8)
        {
          unint64_t v9 = v6 + 9;
          do
          {
            *(v9 - 1) = v5;
            void *v9 = a2;
            swift_bridgeObjectRetain();
            v9 += 2;
            --v8;
          }
          while (v8);
        }
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return (void *)MEMORY[0x263F8EE78];
    }
    return v7;
  }
  return result;
}

uint64_t sub_220847B20(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = result;
    if (a4)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B98);
      uint64_t v8 = (void *)sub_22093E8A0();
      unint64_t v9 = v8;
      uint64_t v8[2] = a4;
      void v8[4] = v7;
      v8[5] = a2;
      v8[6] = a3;
      if (a4 != 1)
      {
        v8[7] = v7;
        v8[8] = a2;
        v8[9] = a3;
        uint64_t v10 = a4 - 2;
        if (v10)
        {
          uint64_t v11 = v8 + 12;
          do
          {
            sub_220834DFC(v7);
            *(v11 - 2) = v7;
            *(v11 - 1) = a2;
            void *v11 = a3;
            v11 += 3;
            --v10;
          }
          while (v10);
        }
        sub_220834DFC(v7);
      }
    }
    else
    {
      sub_220834E48(result);
      return MEMORY[0x263F8EE78];
    }
    return (uint64_t)v9;
  }
  return result;
}

void *sub_220847BFC(void *result, uint64_t a2, uint64_t *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = result;
    if (a2)
    {
      __swift_instantiateConcreteTypeFromMangledName(a3);
      uint64_t v5 = (void *)sub_22093E8A0();
      uint64_t v6 = v5;
      void v5[2] = a2;
      v5[4] = v4;
      if (a2 != 1)
      {
        v5[5] = v4;
        uint64_t v7 = a2 - 2;
        if (v7)
        {
          uint64_t v8 = v5 + 6;
          do
          {
            *v8++ = v4;
            swift_bridgeObjectRetain();
            --v7;
          }
          while (v7);
        }
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return (void *)MEMORY[0x263F8EE78];
    }
    return v6;
  }
  return result;
}

uint64_t sub_220847CA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10)
{
  if ((a3 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_25;
  }
  if (*(void *)(a10 + 16) <= a3)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    JUMPOUT(0x220848388);
  }
  uint64_t v15 = *(void *)(a10 + 8 * a3 + 32);
  if (*(void *)(v15 + 16))
  {
    uint64_t v44 = a8;
    long long v16 = *(_OWORD *)(v15 + 48);
    long long v42 = *(_OWORD *)(v15 + 32);
    v43[0] = v16;
    *(_OWORD *)((char *)v43 + 9) = *(_OWORD *)(v15 + 57);
    if (a6)
    {
      uint64_t v17 = v41;
      sub_2208EE99C(v15, v41);
    }
    else
    {
      uint64_t v17 = v40;
      sub_2208EE898(a4, a5, v15, v40);
    }
    uint64_t v22 = v17[2];
    uint64_t v21 = v17[3];
    uint64_t v23 = v17[4];
    BOOL v26 = v17;
    int64_t v25 = *v17;
    uint64_t v24 = v26[1];
    uint64_t result = (uint64_t)sub_2208483B0((uint64_t *)&v42);
    if (!v10)
    {
      switch((char)result)
      {
        case 1:
          uint64_t v38 = a1;
          *(void *)&long long v39 = a2;
          swift_bridgeObjectRetain();
          sub_220832520(MEMORY[0x263F8EE78]);
          *((void *)&v39 + 1) = v30;
          sub_2208F1888(v23);
          sub_22084C688(a3, v25, v24, v22, v21, a7, v44, a10, (uint64_t)&v38, (uint64_t)sub_22084A33C, (uint64_t)sub_22084A33C, (uint64_t (*)(long long *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_220848794);
          uint64_t v28 = v38;
          uint64_t v29 = &qword_26AD413E8;
          goto LABEL_22;
        case 2:
          uint64_t v38 = a1;
          *(void *)&long long v39 = a2;
          swift_bridgeObjectRetain();
          *((void *)&v39 + 1) = sub_2208322FC(MEMORY[0x263F8EE78]);
          sub_2208F18BC(v23);
          sub_22084C688(a3, v25, v24, v22, v21, a7, v44, a10, (uint64_t)&v38, (uint64_t)sub_22084A960, (uint64_t)sub_22084A960, (uint64_t (*)(long long *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_220848498);
          uint64_t v28 = v38;
          uint64_t v29 = &qword_26AD413E0;
          goto LABEL_22;
        case 3:
          uint64_t v38 = a1;
          *(void *)&long long v39 = a2;
          swift_bridgeObjectRetain();
          *((void *)&v39 + 1) = sub_2208336B0(MEMORY[0x263F8EE78]);
          sub_2208F1AE8(v23);
          sub_22084C688(a3, v25, v24, v22, v21, a7, v44, a10, (uint64_t)&v38, (uint64_t)sub_22084AF24, (uint64_t)sub_22084AF24, (uint64_t (*)(long long *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_220848794);
          uint64_t v28 = v38;
          uint64_t v29 = (uint64_t *)&unk_267F18B80;
          goto LABEL_22;
        case 4:
          uint64_t v38 = a1;
          *(void *)&long long v39 = a2;
          swift_bridgeObjectRetain();
          *((void *)&v39 + 1) = sub_220833A54(MEMORY[0x263F8EE78]);
          sub_2208F1A58(v23);
          sub_22084C688(a3, v25, v24, v22, v21, a7, v44, a10, (uint64_t)&v38, (uint64_t)sub_22084BAE8, (uint64_t)sub_22084BAE8, (uint64_t (*)(long long *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_220848498);
          uint64_t v28 = v38;
          uint64_t v29 = (uint64_t *)&unk_267F18B70;
          goto LABEL_22;
        case 5:
          uint64_t v38 = a1;
          *(void *)&long long v39 = a2;
          swift_bridgeObjectRetain();
          *((void *)&v39 + 1) = sub_220833A9C(MEMORY[0x263F8EE78]);
          sub_2208F1A10(v23);
          sub_22084C688(a3, v25, v24, v22, v21, a7, v44, a10, (uint64_t)&v38, (uint64_t)sub_22084C134, (uint64_t)sub_22084C134, (uint64_t (*)(long long *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_220848498);
          uint64_t v28 = v38;
          uint64_t v29 = (uint64_t *)&unk_267F18B68;
          goto LABEL_22;
        case 6:
          sub_220809E4C();
          swift_allocError();
          long long v32 = xmmword_220945400;
          goto LABEL_20;
        case 7:
          if (v23 < 0) {
            goto LABEL_26;
          }
          swift_bridgeObjectRetain();
          sub_220848A70(v23);
          uint64_t v34 = v33;
          uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41148);
          a9[3] = result;
          a9[4] = &off_26D2223C0;
          *a9 = a1;
          a9[1] = a2;
          a9[2] = v34;
          return result;
        case 8:
          sub_220809E4C();
          swift_allocError();
          long long v32 = xmmword_2209453F0;
LABEL_20:
          *(_OWORD *)uint64_t v31 = v32;
          *(unsigned char *)(v31 + 16) = 2;
          return swift_willThrow();
        case 9:
          uint64_t v38 = a1;
          *(void *)&long long v39 = a2;
          swift_bridgeObjectRetain();
          *((void *)&v39 + 1) = sub_2208336F8(MEMORY[0x263F8EE78]);
          sub_2208F1AA0(v23);
          sub_22084C688(a3, v25, v24, v22, v21, a7, v44, a10, (uint64_t)&v38, (uint64_t)sub_22084B4DC, (uint64_t)sub_22084B4DC, (uint64_t (*)(long long *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_220848794);
          uint64_t v28 = v38;
          uint64_t v29 = (uint64_t *)&unk_267F18B78;
          goto LABEL_22;
        default:
          uint64_t v38 = a1;
          *(void *)&long long v39 = a2;
          swift_bridgeObjectRetain();
          sub_220831BD0(MEMORY[0x263F8EE78]);
          *((void *)&v39 + 1) = v27;
          sub_2208F180C(v23);
          sub_22084C688(a3, v25, v24, v22, v21, a7, v44, a10, (uint64_t)&v38, (uint64_t)sub_220849D30, (uint64_t)sub_220849D30, (uint64_t (*)(long long *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_220848498);
          uint64_t v28 = v38;
          uint64_t v29 = &qword_26AD413F0;
LABEL_22:
          uint64_t result = __swift_instantiateConcreteTypeFromMangledName(v29);
          a9[3] = result;
          a9[4] = &off_26D2223C0;
          *a9 = v28;
          *(_OWORD *)(a9 + 1) = v39;
          break;
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_220848E4C(MEMORY[0x263F8EE78]);
    uint64_t v19 = v18;
    uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41148);
    a9[3] = result;
    a9[4] = &off_26D2223C0;
    *a9 = a1;
    a9[1] = a2;
    a9[2] = v19;
  }
  return result;
}

uint64_t *sub_2208483B0(uint64_t *result)
{
  uint64_t v1 = result[4];
  if ((v1 & 4) != 0)
  {
    sub_220809E4C();
    swift_allocError();
    *(void *)uint64_t v2 = 0xD00000000000001ELL;
    uint64_t v3 = "Can't decode multi-type block.";
    goto LABEL_5;
  }
  if ((v1 & 2) == 0)
  {
    sub_220809E4C();
    swift_allocError();
    *(void *)uint64_t v2 = 0xD00000000000001BLL;
    uint64_t v3 = "Can't decode untyped block.";
LABEL_5:
    *(void *)(v2 + 8) = (unint64_t)(v3 - 32) | 0x8000000000000000;
    *(unsigned char *)(v2 + 16) = 3;
    return (uint64_t *)swift_willThrow();
  }
  if ((result[3] & 0x8000000000000000) == 0) {
    return (uint64_t *)sub_2208497DC(*result, result[1], result[2], v1);
  }
  __break(1u);
  return result;
}

uint64_t sub_220848498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(void *, void, uint64_t, uint64_t, uint64_t), uint64_t (*a9)(uint64_t, void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v27[2] = *MEMORY[0x263EF8340];
  uint64_t v11 = *(void *)a1;
  uint64_t v12 = *(void *)(a1 + 8);
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v11 + v12 < v11)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
  }
  uint64_t v16 = sub_22093DFE0();
  uint64_t v18 = v16;
  unint64_t v19 = v17;
  unint64_t v26 = v17;
  if (*(unsigned char *)(a1 + 32))
  {
    uint64_t v20 = sub_2208492BC(v16, v17, *(void *)(a1 + 16));
    unint64_t v19 = v21;
  }
  else
  {
    sub_22080B7F4(v16, v17);
    uint64_t v20 = v18;
  }
  switch(v19 >> 62)
  {
    case 1uLL:
      if (v20 >> 32 < (int)v20) {
        goto LABEL_17;
      }
      sub_22080B7F4(v20, v19);
      sub_220848D20((int)v20, v20 >> 32, v19 & 0x3FFFFFFFFFFFFFFFLL, a1, a2, a3, a7, a9);
      sub_22080B88C(v20, v19);
LABEL_11:
      sub_22080B88C(v20, v19);
      uint64_t result = sub_22080B88C(v18, v26);
      break;
    case 2uLL:
      uint64_t v22 = a2;
      uint64_t v23 = *(void *)(v20 + 16);
      uint64_t v24 = *(void *)(v20 + 24);
      swift_retain();
      swift_retain();
      sub_220848D20(v23, v24, v19 & 0x3FFFFFFFFFFFFFFFLL, a1, v22, a3, a7, a9);
      swift_release();
      swift_release();
      goto LABEL_11;
    case 3uLL:
      memset(v27, 0, 14);
      a8(v27, *(void *)(a1 + 24), a2, a3, a7);
      goto LABEL_13;
    default:
      v27[0] = v20;
      LOWORD(v27[1]) = v19;
      BYTE2(v27[1]) = BYTE2(v19);
      BYTE3(v27[1]) = BYTE3(v19);
      BYTE4(v27[1]) = BYTE4(v19);
      BYTE5(v27[1]) = BYTE5(v19);
      a8(v27, *(void *)(a1 + 24), a2, a3, a7);
LABEL_13:
      sub_22080B88C(v20, v19);
      uint64_t result = sub_22080B88C(v18, v26);
      break;
  }
  return result;
}

uint64_t sub_220848794(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t (*a9)(uint64_t, void, void, uint64_t, uint64_t, uint64_t))
{
  _OWORD v29[2] = *MEMORY[0x263EF8340];
  uint64_t v11 = *a1;
  uint64_t v12 = a1[1];
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v11 + v12 < v11)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
  }
  uint64_t v15 = sub_22093DFE0();
  uint64_t v17 = v15;
  unint64_t v18 = v16;
  uint64_t v19 = a1[4];
  unint64_t v28 = v16;
  if (v19)
  {
    uint64_t v20 = sub_2208492BC(v15, v16, a1[2]);
    unint64_t v18 = v21;
  }
  else
  {
    sub_22080B7F4(v15, v16);
    uint64_t v20 = v17;
  }
  switch(v18 >> 62)
  {
    case 1uLL:
      if (v20 >> 32 < (int)v20) {
        goto LABEL_17;
      }
      sub_22080B7F4(v20, v18);
      sub_220848C6C((int)v20, v20 >> 32, v18 & 0x3FFFFFFFFFFFFFFFLL, (uint64_t)a1, a2, a3, a7, a9);
      sub_22080B88C(v20, v18);
LABEL_11:
      sub_22080B88C(v20, v18);
      uint64_t result = sub_22080B88C(v17, v28);
      break;
    case 2uLL:
      uint64_t v27 = a7;
      uint64_t v23 = *(void *)(v20 + 16);
      uint64_t v24 = *(void *)(v20 + 24);
      swift_retain();
      swift_retain();
      sub_220848C6C(v23, v24, v18 & 0x3FFFFFFFFFFFFFFFLL, (uint64_t)a1, a2, a3, v27, a9);
      swift_release();
      swift_release();
      goto LABEL_11;
    case 3uLL:
      uint64_t v22 = a2;
      memset(v29, 0, 14);
      goto LABEL_13;
    default:
      uint64_t v22 = a2;
      v29[0] = v20;
      LOWORD(v29[1]) = v18;
      BYTE2(v29[1]) = BYTE2(v18);
      BYTE3(v29[1]) = BYTE3(v18);
      BYTE4(v29[1]) = BYTE4(v18);
      BYTE5(v29[1]) = BYTE5(v18);
LABEL_13:
      a8(v29, a1[3], v19, v22, a3, a7);
      sub_22080B88C(v20, v18);
      uint64_t result = sub_22080B88C(v17, v28);
      break;
  }
  return result;
}

void sub_220848A70(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41128);
  uint64_t v2 = swift_allocObject();
  sub_22081A9CC(v24, a1);
  uint64_t v3 = (uint64_t *)v24[0];
  uint64_t v4 = v24[1];
  *(void *)(v2 + 16) = v24[0];
  *(void *)(v2 + 24) = v4;
  swift_beginAccess();
  if (a1)
  {
    uint64_t v5 = 0;
    while (1)
    {
      uint64_t v6 = v5 <= a1 ? a1 : v5;
      while (1)
      {
        if (v6 == v5)
        {
          __break(1u);
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          goto LABEL_40;
        }
        if (!v3) {
          goto LABEL_42;
        }
        uint64_t v7 = *v3;
        uint64_t v8 = v3[1];
        if (v8 >= *v3) {
          break;
        }
        if (v7 > 0x7FFFFFFFFFFFFFF8) {
          goto LABEL_36;
        }
        ++v5;
        uint64_t v9 = v8 + 7;
        if (v8 >= 0) {
          uint64_t v9 = v3[1];
        }
        uint64_t v10 = v9 >> 3;
        uint64_t v11 = v8 - (v9 & 0xFFFFFFFFFFFFFFF8);
        if (v11 >= 0) {
          char v12 = 1 << v11;
        }
        else {
          char v12 = 0;
        }
        *((unsigned char *)v3 + v10 + 64) |= v12;
        v3[1] = v8 + 1;
        if (a1 == v5) {
          return;
        }
      }
      uint64_t v13 = v8 + 1;
      if (__OFADD__(v8, 1)) {
        goto LABEL_37;
      }
      if (v7 < v13)
      {
        if (v7 + 0x4000000000000000 < 0) {
          goto LABEL_41;
        }
        if (2 * v7 <= v13) {
          uint64_t v7 = v8 + 1;
        }
        else {
          v7 *= 2;
        }
      }
      sub_22088FD6C((uint64_t)v3, v7, v23);
      if (v3[1] < 0) {
        goto LABEL_38;
      }
      MEMORY[0x223C6B140](v3, -1, -1);
      uint64_t v3 = (uint64_t *)v23[0];
      uint64_t v14 = v23[1];
      *(void *)(v2 + 16) = v23[0];
      *(void *)(v2 + 24) = v14;
      if (!v3) {
        goto LABEL_43;
      }
      if (*v3 > 0x7FFFFFFFFFFFFFF8) {
        goto LABEL_39;
      }
      uint64_t v15 = v3[1];
      uint64_t v16 = v15 + 7;
      if (v15 >= 0) {
        uint64_t v16 = v3[1];
      }
      uint64_t v17 = v15 - (v16 & 0xFFFFFFFFFFFFFFF8);
      char v18 = v17 >= 0 ? 1 << v17 : 0;
      *((unsigned char *)v3 + (v16 >> 3) + 64) |= v18;
      uint64_t v19 = v3[1];
      BOOL v20 = __OFADD__(v19, 1);
      uint64_t v21 = v19 + 1;
      if (v20) {
        break;
      }
      v3[1] = v21;
      if (a1 - 1 == v5++) {
        return;
      }
    }
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
  }
}

uint64_t sub_220848C6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t, void, void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v14 = sub_22093DE40();
  if (!v14)
  {
    uint64_t result = sub_22093DE50();
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v15 = v14;
  uint64_t result = sub_22093DE60();
  if (!__OFSUB__(a1, result))
  {
    uint64_t v17 = v15 + a1 - result;
    uint64_t result = sub_22093DE50();
    if (v17) {
      return a8(v17, *(void *)(a4 + 24), *(void *)(a4 + 32), a5, a6, a7);
    }
    goto LABEL_6;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_220848D20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t, void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v14 = sub_22093DE40();
  if (!v14)
  {
    uint64_t result = sub_22093DE50();
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v15 = v14;
  uint64_t result = sub_22093DE60();
  if (!__OFSUB__(a1, result))
  {
    uint64_t v17 = v15 + a1 - result;
    uint64_t result = sub_22093DE50();
    if (v17) {
      return a8(v17, *(void *)(a4 + 24), a5, a6, a7);
    }
    goto LABEL_6;
  }
LABEL_7:
  __break(1u);
  return result;
}

unsigned char *sub_220848DD4@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    uint64_t result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    uint64_t result = (unsigned char *)sub_22084905C(result, a2);
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    uint64_t result = (unsigned char *)sub_220849120((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    uint64_t result = (unsigned char *)sub_22084919C((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

void sub_220848E4C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41128);
  uint64_t v2 = swift_allocObject();
  sub_22081A9CC(v24, v1);
  uint64_t v3 = (uint64_t *)v24[0];
  uint64_t v4 = v24[1];
  *(void *)(v2 + 16) = v24[0];
  *(void *)(v2 + 24) = v4;
  swift_bridgeObjectRetain();
  swift_beginAccess();
  if (v1)
  {
    unint64_t v5 = 0;
    while (1)
    {
      uint64_t v6 = v5 <= v1 ? v1 : v5;
      while (1)
      {
        if (v6 == v5)
        {
          __break(1u);
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          goto LABEL_40;
        }
        if (!v3) {
          goto LABEL_42;
        }
        uint64_t v7 = *v3;
        uint64_t v8 = v3[1];
        if (v8 >= *v3) {
          break;
        }
        if (v7 > 0x7FFFFFFFFFFFFFF8) {
          goto LABEL_36;
        }
        ++v5;
        uint64_t v9 = v8 + 7;
        if (v8 >= 0) {
          uint64_t v9 = v3[1];
        }
        uint64_t v10 = v9 >> 3;
        uint64_t v11 = v8 - (v9 & 0xFFFFFFFFFFFFFFF8);
        if (v11 >= 0) {
          char v12 = 1 << v11;
        }
        else {
          char v12 = 0;
        }
        *((unsigned char *)v3 + v10 + 64) |= v12;
        v3[1] = v8 + 1;
        if (v1 == v5) {
          goto LABEL_34;
        }
      }
      uint64_t v13 = v8 + 1;
      if (__OFADD__(v8, 1)) {
        goto LABEL_37;
      }
      if (v7 < v13)
      {
        if (v7 + 0x4000000000000000 < 0) {
          goto LABEL_41;
        }
        if (2 * v7 <= v13) {
          uint64_t v7 = v8 + 1;
        }
        else {
          v7 *= 2;
        }
      }
      sub_22088FD6C((uint64_t)v3, v7, v23);
      if (v3[1] < 0) {
        goto LABEL_38;
      }
      MEMORY[0x223C6B140](v3, -1, -1);
      uint64_t v3 = (uint64_t *)v23[0];
      uint64_t v14 = v23[1];
      *(void *)(v2 + 16) = v23[0];
      *(void *)(v2 + 24) = v14;
      if (!v3) {
        goto LABEL_43;
      }
      if (*v3 > 0x7FFFFFFFFFFFFFF8) {
        goto LABEL_39;
      }
      uint64_t v15 = v3[1];
      uint64_t v16 = v15 + 7;
      if (v15 >= 0) {
        uint64_t v16 = v3[1];
      }
      uint64_t v17 = (char *)v3 + (v16 >> 3);
      uint64_t v18 = v15 - (v16 & 0xFFFFFFFFFFFFFFF8);
      char v19 = v18 >= 0 ? 1 << v18 : 0;
      v17[64] |= v19;
      BOOL v20 = __OFADD__(v15, 1);
      uint64_t v21 = v15 + 1;
      if (v20) {
        break;
      }
      v3[1] = v21;
      if (v1 - 1 == v5++) {
        goto LABEL_34;
      }
    }
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
  }
  else
  {
LABEL_34:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_22084905C(unsigned char *__src, unsigned char *a2)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_220849120(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_22093DE70();
  swift_allocObject();
  uint64_t result = sub_22093DE30();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_22093DFD0();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_22084919C(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_22093DE70();
  swift_allocObject();
  uint64_t result = sub_22093DE30();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0) {
    return v2 << 32;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_220849220(uint64_t a1)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41170);
  unint64_t v10 = sub_22084C880();
  v8[0] = a1;
  uint64_t v2 = __swift_project_boxed_opaque_existential_1(v8, v9);
  uint64_t v3 = (unsigned char *)(*v2 + 32);
  uint64_t v4 = &v3[*(void *)(*v2 + 16)];
  swift_bridgeObjectRetain();
  sub_220848DD4(v3, v4, &v7);
  uint64_t v5 = v7;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
  return v5;
}

uint64_t sub_2208492BC(uint64_t a1, unint64_t a2, int64_t a3)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  uint64_t v4 = a2;
  switch(a2 >> 62)
  {
    case 1uLL:
      if ((int)a1 > a1 >> 32) {
        goto LABEL_41;
      }
      sub_22080B7F4(a1, a2);
      uint64_t v7 = (const uint8_t *)sub_22093DE40();
      if (!v7) {
        goto LABEL_9;
      }
      uint64_t v8 = sub_22093DE60();
      if (__OFSUB__((int)a1, v8)) {
        goto LABEL_50;
      }
      v7 += (int)a1 - v8;
LABEL_9:
      sub_22093DE50();
      if (a3 < 0) {
        goto LABEL_44;
      }
      if (!a3) {
        goto LABEL_38;
      }
      uint64_t v9 = sub_22093E8A0();
      *(void *)(v9 + 16) = a3;
      if (v7) {
        goto LABEL_12;
      }
      goto LABEL_39;
    case 2uLL:
      uint64_t v12 = *(void *)(a1 + 16);
      swift_retain();
      swift_retain();
      uint64_t v13 = sub_22093DE40();
      if (v13)
      {
        uint64_t v4 = v13;
        uint64_t v14 = sub_22093DE60();
        if (__OFSUB__(v12, v14))
        {
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
        }
        uint64_t v7 = (const uint8_t *)(v4 + v12 - v14);
        sub_22093DE50();
        if ((a3 & 0x8000000000000000) == 0) {
          goto LABEL_18;
        }
      }
      else
      {
        uint64_t v7 = 0;
        sub_22093DE50();
        if ((a3 & 0x8000000000000000) == 0)
        {
LABEL_18:
          if (a3)
          {
            uint64_t v4 = sub_22093E8A0();
            *(void *)(v4 + 16) = a3;
            if (v7) {
              goto LABEL_20;
            }
          }
          else
          {
            uint64_t v4 = MEMORY[0x263F8EE78];
            if (v7)
            {
LABEL_20:
              uint64_t v16 = *(void *)(a1 + 16);
              uint64_t v15 = *(void *)(a1 + 24);
              if (!__OFSUB__(v15, v16))
              {
                int64_t v17 = compression_decode_buffer((uint8_t *)(v4 + 32), a3, v7, v15 - v16, 0, COMPRESSION_LZ4_RAW);
                if (v17 <= a3)
                {
                  *(void *)(v4 + 16) = v17;
                  uint64_t v11 = sub_220849220(v4);
                  swift_release();
                  swift_release();
                  swift_bridgeObjectRelease();
                  return v11;
                }
                goto LABEL_47;
              }
              goto LABEL_45;
            }
          }
          __break(1u);
LABEL_38:
          uint64_t v9 = MEMORY[0x263F8EE78];
          if (v7)
          {
LABEL_12:
            if (!__OFSUB__(HIDWORD(a1), a1))
            {
              int64_t v10 = compression_decode_buffer((uint8_t *)(v9 + 32), a3, v7, HIDWORD(a1) - (int)a1, 0, COMPRESSION_LZ4_RAW);
              if (v10 <= a3)
              {
                *(void *)(v9 + 16) = v10;
                uint64_t v11 = sub_220849220(v9);
                swift_bridgeObjectRelease();
                sub_22080B88C(a1, v4);
                return v11;
              }
              goto LABEL_48;
            }
            goto LABEL_46;
          }
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
          goto LABEL_49;
        }
      }
      __break(1u);
LABEL_29:
      uint64_t v6 = MEMORY[0x263F8EE78];
LABEL_30:
      int64_t v19 = compression_decode_buffer((uint8_t *)(v6 + 32), a3, src_buffer, BYTE6(v4), 0, COMPRESSION_LZ4_RAW);
      if (v19 > a3)
      {
        __break(1u);
LABEL_32:
        uint64_t v6 = MEMORY[0x263F8EE78];
LABEL_33:
        int64_t v19 = compression_decode_buffer((uint8_t *)(v6 + 32), a3, src_buffer, 0, 0, COMPRESSION_LZ4_RAW);
        if (v19 > a3) {
          goto LABEL_43;
        }
      }
      *(void *)(v6 + 16) = v19;
      uint64_t v20 = sub_220849220(v6);
      swift_bridgeObjectRelease();
      return v20;
    case 3uLL:
      memset(src_buffer, 0, 14);
      if (a3 < 0) {
        goto LABEL_42;
      }
      if (!a3) {
        goto LABEL_32;
      }
      uint64_t v6 = sub_22093E8A0();
      *(void *)(v6 + 16) = a3;
      goto LABEL_33;
    default:
      *(void *)src_buffer = a1;
      *(_WORD *)&src_buffer[8] = a2;
      src_buffer[10] = BYTE2(a2);
      src_buffer[11] = BYTE3(a2);
      src_buffer[12] = BYTE4(a2);
      src_buffer[13] = BYTE5(a2);
      if (a3 < 0) {
        goto LABEL_40;
      }
      if (!a3) {
        goto LABEL_29;
      }
      uint64_t v6 = sub_22093E8A0();
      *(void *)(v6 + 16) = a3;
      goto LABEL_30;
  }
}

uint64_t sub_220849684(unsigned __int8 *a1)
{
  if (*a1 - 3 > 0xFFFFFFFD)
  {
    uint64_t v4 = a1[1];
    uint64_t result = sub_220881CE0(v4);
    if (result != 10) {
      return result;
    }
    sub_220809E4C();
    swift_allocError();
    unint64_t v1 = 0;
    *(void *)uint64_t v2 = v4;
    char v3 = 2;
  }
  else
  {
    sub_22093EEA0();
    sub_22093E6C0();
    sub_22093F1A0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    unint64_t v1 = 0xE000000000000000;
    sub_220809E4C();
    swift_allocError();
    *(void *)uint64_t v2 = 0;
    char v3 = 3;
  }
  *(void *)(v2 + 8) = v1;
  *(unsigned char *)(v2 + 16) = v3;
  return swift_willThrow();
}

uint64_t sub_2208497DC(uint64_t a1, uint64_t a2, int64_t a3, char a4)
{
  _OWORD v26[2] = *MEMORY[0x263EF8340];
  BOOL v4 = __OFADD__(a1, a2);
  uint64_t v5 = a1 + a2;
  if (v4)
  {
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
  }
  if (v5 < a1) {
    goto LABEL_19;
  }
  uint64_t v8 = sub_22093DFE0();
  uint64_t v10 = v8;
  unint64_t v11 = v9;
  if (a4)
  {
    uint64_t v12 = sub_2208492BC(v8, v9, a3);
    unint64_t v13 = v14;
  }
  else
  {
    sub_22080B7F4(v8, v9);
    uint64_t v12 = v10;
    unint64_t v13 = v11;
  }
  switch(v13 >> 62)
  {
    case 1uLL:
      if ((int)v12 > v12 >> 32) {
        goto LABEL_20;
      }
      sub_22080B7F4(v12, v13);
      uint64_t v15 = sub_22093DE40();
      if (!v15)
      {
        sub_22093DE50();
        __break(1u);
LABEL_24:
        sub_22093DE50();
        __break(1u);
        JUMPOUT(0x220849A44);
      }
      uint64_t v16 = v15;
      uint64_t v17 = sub_22093DE60();
      uint64_t v18 = (int)v12 - v17;
      if (__OFSUB__((int)v12, v17)) {
        goto LABEL_22;
      }
      sub_22093DE50();
      uint64_t v19 = sub_220849684((unsigned __int8 *)(v16 + v18));
      sub_22080B88C(v12, v13);
      break;
    case 2uLL:
      uint64_t v20 = *(void *)(v12 + 16);
      swift_retain();
      swift_retain();
      uint64_t v21 = sub_22093DE40();
      if (!v21) {
        goto LABEL_24;
      }
      uint64_t v22 = v21;
      uint64_t v23 = sub_22093DE60();
      BOOL v4 = __OFSUB__(v20, v23);
      uint64_t v24 = v20 - v23;
      if (v4) {
        goto LABEL_21;
      }
      sub_22093DE50();
      uint64_t v19 = sub_220849684((unsigned __int8 *)(v22 + v24));
      swift_release();
      swift_release();
      break;
    case 3uLL:
      memset(v26, 0, 14);
      goto LABEL_16;
    default:
      v26[0] = v12;
      LOWORD(v26[1]) = v13;
      BYTE2(v26[1]) = BYTE2(v13);
      BYTE3(v26[1]) = BYTE3(v13);
      BYTE4(v26[1]) = BYTE4(v13);
      BYTE5(v26[1]) = BYTE5(v13);
LABEL_16:
      uint64_t v19 = sub_220849684((unsigned __int8 *)v26);
      break;
  }
  sub_22080B88C(v12, v13);
  sub_22080B88C(v10, v11);
  return v19;
}

uint64_t sub_220849A54(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  int v3 = *(unsigned __int8 *)(*a1)++;
  uint64_t v4 = MEMORY[0x263F8EE78];
  if (!v3) {
    return 7;
  }
  if (v3 != 2)
  {
    if (v3 != 1)
    {
      sub_22093EEA0();
      sub_22093E6C0();
      sub_22093F1A0();
      sub_22093E6C0();
      swift_bridgeObjectRelease();
      sub_22093E6C0();
      unint64_t v10 = 0xE000000000000000;
      sub_220809E4C();
      swift_allocError();
      *(void *)uint64_t v9 = 0;
      char v14 = 3;
      goto LABEL_11;
    }
    uint64_t v7 = *(unsigned __int8 *)(v2 + 1);
    *a1 = v2 + 2;
    uint64_t v8 = sub_220881CE0(v7);
    if (v8 != 10) {
      return v8;
    }
    sub_220809E4C();
    swift_allocError();
    unint64_t v10 = 0;
    *(void *)uint64_t v9 = v7;
LABEL_9:
    char v14 = 2;
LABEL_11:
    *(void *)(v9 + 8) = v10;
    *(unsigned char *)(v9 + 16) = v14;
    swift_willThrow();
    return v10;
  }
  uint64_t v11 = *(unsigned __int8 *)(v2 + 1);
  uint64_t v12 = (char *)(v2 + 2);
  *a1 = v2 + 2;
  uint64_t result = sub_220881CE0(v11);
  if (result == 10)
  {
    sub_220809E4C();
    swift_allocError();
    unint64_t v10 = 0;
    *(void *)uint64_t v9 = v11;
    goto LABEL_9;
  }
  uint64_t v15 = a2 + 63;
  if (!__OFADD__(a2, 63))
  {
    uint64_t v16 = a2 + 126;
    if (v15 >= 0) {
      uint64_t v16 = a2 + 63;
    }
    if (v15 < -63) {
      goto LABEL_26;
    }
    unint64_t v10 = result;
    size_t v17 = 8 * (v16 >> 6);
    if (v15 <= 63)
    {
      memcpy((void *)(v4 + 32), v12, 8 * (v16 >> 6));
      *(void *)(v4 + 16) = v17;
      *a1 = (uint64_t)&v12[v17];
      return v10;
    }
    uint64_t v18 = sub_22093E8A0();
    *(void *)(v18 + 16) = v17;
    uint64_t result = (uint64_t)memcpy((void *)(v18 + 32), v12, v17);
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    *(void *)(v18 + 16) = v17;
    *a1 = (uint64_t)&v12[v17];
    while (1)
    {
      uint8x8_t v21 = (uint8x8_t)vcnt_s8((int8x8_t)*(unsigned __int8 *)(v18 + v19 + 32));
      v21.i16[0] = vaddlv_u8(v21);
      BOOL v22 = __OFADD__(v20, v21.u32[0]);
      v20 += v21.u32[0];
      if (v22) {
        break;
      }
      if (v17 == ++v19) {
        return v10;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

uint64_t *sub_220849D30(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = a2;
  unint64_t v78 = a1;
  uint64_t result = (uint64_t *)sub_220849A54((uint64_t *)&v78, a2);
  if (!v5)
  {
    uint64_t v13 = v12;
    if (v11 == v9)
    {
      uint64_t result = (uint64_t *)swift_bridgeObjectRelease();
      if (v9 < 0) {
        goto LABEL_88;
      }
      if (v9)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_26AD40FE0);
        uint64_t v14 = sub_22093E8A0();
        uint64_t v15 = v14;
        *(void *)(v14 + 16) = v9;
        uint64_t v16 = 32;
        do
        {
          uint64_t v17 = v14 + v16;
          *(void *)uint64_t v17 = 0;
          *(unsigned char *)(v17 + 8) = 1;
          v16 += 16;
          --v9;
        }
        while (v9);
      }
      else
      {
        uint64_t v15 = MEMORY[0x263F8EE78];
      }
      sub_22088D748(v15);
      return (uint64_t *)swift_bridgeObjectRelease();
    }
    if ((_BYTE)result)
    {
      swift_bridgeObjectRelease();
      sub_220809E4C();
      swift_allocError();
      *(void *)uint64_t v18 = 0xD00000000000002DLL;
      *(void *)(v18 + 8) = 0x8000000220940000;
      *(unsigned char *)(v18 + 16) = 0;
      return (uint64_t *)swift_willThrow();
    }
    BOOL v19 = __OFSUB__(v9, v11);
    uint64_t v20 = v9 - v11;
    if (v19) {
      goto LABEL_97;
    }
    uint64_t result = (uint64_t *)sub_220844BB4(&v78, v20);
    if ((v9 & 0x8000000000000000) == 0)
    {
      if (v9)
      {
        unint64_t v21 = 0;
        int64_t v22 = 0;
        uint64_t v23 = *(void *)(v13 + 16);
        uint64_t v76 = v13 + 32;
        uint64_t v70 = result + 4;
        uint64_t v71 = result;
        uint64_t v69 = v13;
        uint64_t v73 = a3;
        uint64_t v74 = a4;
        uint64_t v72 = v23;
        do
        {
          if (!v23) {
            goto LABEL_34;
          }
          if ((unint64_t)v22 >> 3 >= *(void *)(v13 + 16))
          {
            __break(1u);
LABEL_87:
            __break(1u);
LABEL_88:
            __break(1u);
LABEL_89:
            __break(1u);
LABEL_90:
            __break(1u);
LABEL_91:
            __break(1u);
LABEL_92:
            __break(1u);
LABEL_93:
            __break(1u);
LABEL_94:
            __break(1u);
LABEL_95:
            __break(1u);
LABEL_96:
            __break(1u);
LABEL_97:
            __break(1u);
LABEL_98:
            __break(1u);
LABEL_99:
            __break(1u);
LABEL_100:
            __break(1u);
            goto LABEL_101;
          }
          if ((*(unsigned __int8 *)(v76 + ((unint64_t)v22 >> 3)) >> (v22 & 7)))
          {
            if (v22 >= a3 && v22 < a4)
            {
              uint64_t v24 = *(void *)(a5 + 16);
              uint64_t result = (uint64_t *)swift_beginAccess();
              uint64_t v25 = *(void *)(v24 + 16);
              if (!v25) {
                goto LABEL_107;
              }
              uint64_t v26 = *(void *)(v25 + 8);
              uint64_t v27 = v26 + 1;
              if (__OFADD__(v26, 1)) {
                goto LABEL_94;
              }
              int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v29 = *(void *)(a5 + 16);
              uint64_t v30 = (uint64_t **)(v29 + 16);
              if (isUniquelyReferenced_nonNull_native)
              {
                swift_beginAccess();
                uint64_t result = *v30;
                if (!*v30) {
                  goto LABEL_111;
                }
                uint64_t v31 = *result;
                if (*result < v27)
                {
                  if (v31 + 0x4000000000000000 < 0) {
                    goto LABEL_102;
                  }
                  uint64_t v32 = 2 * v31;
                  if (v32 <= v27) {
                    uint64_t v33 = v27;
                  }
                  else {
                    uint64_t v33 = v32;
                  }
                  sub_22088F714((uint64_t)result, v33, (uint64_t *)&v77);
                  uint64_t result = *(uint64_t **)(v29 + 16);
                  if (!result) {
                    goto LABEL_114;
                  }
                  if (result[1] < 0) {
                    goto LABEL_104;
                  }
                  MEMORY[0x223C6B140]();
                  *(_OWORD *)uint64_t v30 = v77;
                }
              }
              else
              {
                uint64_t result = (uint64_t *)swift_beginAccess();
                long long v61 = *v30;
                if (!v61) {
                  goto LABEL_112;
                }
                uint64_t v62 = *v61;
                if (*v61 < v27)
                {
                  if (v62 + 0x4000000000000000 < 0) {
                    goto LABEL_103;
                  }
                  if (2 * v62 <= v27) {
                    uint64_t v62 = v27;
                  }
                  else {
                    v62 *= 2;
                  }
                }
                __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413D8);
                uint64_t v63 = swift_allocObject();
                sub_22088E6B0((uint64_t)v61, v62, (uint64_t *)&v77);
                *(_OWORD *)(v63 + 16) = v77;
                swift_release();
                *(void *)(a5 + 16) = v63;
                uint64_t v29 = v63;
                uint64_t v13 = v69;
              }
              uint64_t result = (uint64_t *)swift_beginAccess();
              uint64_t v64 = *(void *)(v29 + 16);
              a3 = v73;
              a4 = v74;
              if (!v64) {
                goto LABEL_108;
              }
              uint64_t v65 = *(void *)(v64 + 16);
              BOOL v19 = __OFADD__(v65, 1);
              uint64_t v66 = v65 + 1;
              uint64_t v23 = v72;
              if (v19) {
                goto LABEL_95;
              }
              *(void *)(v64 + 16) = v66;
              uint64_t v67 = *(void *)(v64 + 8);
              BOOL v19 = __OFADD__(v67, 1);
              uint64_t v68 = v67 + 1;
              if (v19) {
                goto LABEL_96;
              }
              *(void *)(v64 + 8) = v68;
            }
          }
          else
          {
LABEL_34:
            if (v22 >= a3 && v22 < a4)
            {
              if ((v21 & 0x8000000000000000) != 0) {
                goto LABEL_89;
              }
              if (v21 >= v71[2]) {
                goto LABEL_90;
              }
              uint64_t v34 = v70[v21];
              uint64_t v35 = *(void *)(a5 + 16);
              uint64_t result = (uint64_t *)swift_beginAccess();
              uint64_t v36 = *(void *)(v35 + 16);
              if (!v36) {
                goto LABEL_105;
              }
              uint64_t v75 = v34;
              uint64_t v37 = *(void *)(v36 + 8);
              uint64_t v38 = v37 + 1;
              if (__OFADD__(v37, 1)) {
                goto LABEL_91;
              }
              int v39 = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v40 = *(void *)(a5 + 16);
              int64_t v41 = (uint64_t **)(v40 + 16);
              if (v39)
              {
                swift_beginAccess();
                uint64_t result = *v41;
                if (!*v41) {
                  goto LABEL_109;
                }
                uint64_t v42 = *result;
                if (*result < v38)
                {
                  if (v42 + 0x4000000000000000 < 0) {
                    goto LABEL_98;
                  }
                  uint64_t v43 = 2 * v42;
                  if (v43 <= v38) {
                    uint64_t v44 = v38;
                  }
                  else {
                    uint64_t v44 = v43;
                  }
                  sub_22088F714((uint64_t)result, v44, (uint64_t *)&v77);
                  uint64_t result = *(uint64_t **)(v40 + 16);
                  if (!result) {
                    goto LABEL_113;
                  }
                  if (result[1] < 0) {
                    goto LABEL_100;
                  }
                  MEMORY[0x223C6B140]();
                  *(_OWORD *)int64_t v41 = v77;
                }
              }
              else
              {
                uint64_t result = (uint64_t *)swift_beginAccess();
                uint64_t v45 = *v41;
                if (!v45) {
                  goto LABEL_110;
                }
                uint64_t v46 = *v45;
                if (*v45 < v38)
                {
                  if (v46 + 0x4000000000000000 < 0) {
                    goto LABEL_99;
                  }
                  if (2 * v46 <= v38) {
                    uint64_t v46 = v38;
                  }
                  else {
                    v46 *= 2;
                  }
                }
                __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413D8);
                uint64_t v47 = swift_allocObject();
                sub_22088E6B0((uint64_t)v45, v46, (uint64_t *)&v77);
                *(_OWORD *)(v47 + 16) = v77;
                swift_release();
                *(void *)(a5 + 16) = v47;
                uint64_t v40 = v47;
                uint64_t v13 = v69;
              }
              uint64_t result = (uint64_t *)swift_beginAccess();
              uint64_t v48 = *(void **)(v40 + 16);
              a3 = v73;
              a4 = v74;
              if (!v48) {
                goto LABEL_106;
              }
              uint64_t v49 = *v48 + 7;
              if (__OFADD__(*v48, 7)) {
                goto LABEL_92;
              }
              uint64_t v50 = v48 + 8;
              if (v49 < 0) {
                uint64_t v49 = *v48 + 14;
              }
              uint64_t v51 = v49 >> 3;
              uint64_t v53 = v51 - 1;
              BOOL v52 = v51 < 1;
              uint64_t v54 = v51 + 62;
              if (!v52) {
                uint64_t v54 = v53;
              }
              *(void *)((char *)&v50[v48[1] + 8] + (v54 & 0xFFFFFFFFFFFFFFC0)) = v75;
              uint64_t v55 = v48[1];
              uint64_t v56 = v55 + 7;
              if (v55 >= 0) {
                uint64_t v56 = v48[1];
              }
              uint64_t v57 = v56 >> 3;
              uint64_t v58 = v55 - (v56 & 0xFFFFFFFFFFFFFFF8);
              if (v58 >= 0) {
                char v59 = 1 << v58;
              }
              else {
                char v59 = 0;
              }
              *((unsigned char *)v50 + v57) |= v59;
              BOOL v19 = __OFADD__(v55, 1);
              uint64_t v60 = v55 + 1;
              if (v19) {
                goto LABEL_93;
              }
              v48[1] = v60;
              uint64_t v23 = v72;
            }
            BOOL v19 = __OFADD__(v21++, 1);
            if (v19) {
              goto LABEL_87;
            }
          }
          ++v22;
        }
        while (v9 != v22);
      }
      swift_bridgeObjectRelease();
      return (uint64_t *)swift_bridgeObjectRelease();
    }
LABEL_101:
    __break(1u);
LABEL_102:
    __break(1u);
LABEL_103:
    __break(1u);
LABEL_104:
    __break(1u);
LABEL_105:
    __break(1u);
LABEL_106:
    __break(1u);
LABEL_107:
    __break(1u);
LABEL_108:
    __break(1u);
LABEL_109:
    __break(1u);
LABEL_110:
    __break(1u);
LABEL_111:
    __break(1u);
LABEL_112:
    __break(1u);
LABEL_113:
    __break(1u);
LABEL_114:
    __break(1u);
  }
  return result;
}

uint64_t *sub_22084A33C(unsigned __int8 *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = a2;
  v77[0] = a1;
  uint64_t result = (uint64_t *)sub_220849A54((uint64_t *)v77, a2);
  if (!v6)
  {
    uint64_t v15 = v14;
    if (v13 == v11)
    {
      uint64_t result = (uint64_t *)swift_bridgeObjectRelease();
      if (v11 < 0) {
        goto LABEL_91;
      }
      if (v11)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_26AD40FD0);
        uint64_t v16 = sub_22093E8A0();
        uint64_t v17 = v16;
        *(void *)(v16 + 16) = v11;
        uint64_t v18 = 32;
        do
        {
          uint64_t v19 = v16 + v18;
          *(void *)uint64_t v19 = 0;
          *(unsigned char *)(v19 + 8) = 1;
          v18 += 16;
          --v11;
        }
        while (v11);
      }
      else
      {
        uint64_t v17 = MEMORY[0x263F8EE78];
      }
      sub_22088DA3C(v17);
      return (uint64_t *)swift_bridgeObjectRelease();
    }
    if (result != 1)
    {
LABEL_79:
      swift_bridgeObjectRelease();
      sub_220809E4C();
      swift_allocError();
      *(void *)uint64_t v68 = 0xD00000000000002DLL;
      *(void *)(v68 + 8) = 0x8000000220940000;
      *(unsigned char *)(v68 + 16) = 0;
      return (uint64_t *)swift_willThrow();
    }
    BOOL v20 = __OFSUB__(v11, v13);
    uint64_t v21 = v11 - v13;
    if (v20) {
      goto LABEL_95;
    }
    uint64_t result = (uint64_t *)sub_22093DCA0(v77, v21, v11, a3);
    if ((v11 & 0x8000000000000000) == 0)
    {
      int64_t v22 = result;
      if (v11)
      {
        unint64_t v23 = 0;
        int64_t v24 = 0;
        uint64_t v25 = *(void *)(v15 + 16);
        uint64_t v74 = a4;
        uint64_t v75 = v15 + 32;
        uint64_t v69 = result;
        uint64_t v70 = result + 4;
        uint64_t v72 = a5;
        uint64_t v73 = v15;
        uint64_t v71 = v25;
        do
        {
          if (!v25) {
            goto LABEL_33;
          }
          if ((unint64_t)v24 >> 3 >= *(void *)(v15 + 16))
          {
            __break(1u);
LABEL_86:
            __break(1u);
LABEL_87:
            __break(1u);
LABEL_88:
            __break(1u);
LABEL_89:
            __break(1u);
LABEL_90:
            __break(1u);
LABEL_91:
            __break(1u);
LABEL_92:
            __break(1u);
LABEL_93:
            __break(1u);
LABEL_94:
            __break(1u);
LABEL_95:
            __break(1u);
LABEL_96:
            __break(1u);
LABEL_97:
            __break(1u);
LABEL_98:
            __break(1u);
            goto LABEL_99;
          }
          if ((*(unsigned __int8 *)(v75 + ((unint64_t)v24 >> 3)) >> (v24 & 7)))
          {
            if (v24 >= a4 && v24 < a5)
            {
              uint64_t v26 = *(void *)(a6 + 16);
              uint64_t result = (uint64_t *)swift_beginAccess();
              uint64_t v27 = *(void *)(v26 + 16);
              if (!v27) {
                goto LABEL_105;
              }
              uint64_t v28 = *(void *)(v27 + 8);
              uint64_t v29 = v28 + 1;
              if (__OFADD__(v28, 1)) {
                goto LABEL_92;
              }
              int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v31 = *(void *)(a6 + 16);
              uint64_t v32 = (uint64_t **)(v31 + 16);
              if (isUniquelyReferenced_nonNull_native)
              {
                swift_beginAccess();
                uint64_t result = *v32;
                if (!*v32) {
                  goto LABEL_109;
                }
                uint64_t v33 = *result;
                if (*result < v29)
                {
                  if (v33 + 0x4000000000000000 < 0) {
                    goto LABEL_100;
                  }
                  uint64_t v34 = 2 * v33;
                  if (v34 <= v29) {
                    uint64_t v35 = v29;
                  }
                  else {
                    uint64_t v35 = v34;
                  }
                  sub_22088F714((uint64_t)result, v35, (uint64_t *)&v76);
                  uint64_t result = *(uint64_t **)(v31 + 16);
                  if (!result) {
                    goto LABEL_112;
                  }
                  if (result[1] < 0) {
                    goto LABEL_102;
                  }
                  MEMORY[0x223C6B140]();
                  *(_OWORD *)uint64_t v32 = v76;
                }
              }
              else
              {
                uint64_t result = (uint64_t *)swift_beginAccess();
                uint64_t v50 = *v32;
                if (!v50) {
                  goto LABEL_110;
                }
                uint64_t v51 = *v50;
                if (*v50 < v29)
                {
                  if (v51 + 0x4000000000000000 < 0) {
                    goto LABEL_101;
                  }
                  if (2 * v51 <= v29) {
                    uint64_t v51 = v29;
                  }
                  else {
                    v51 *= 2;
                  }
                }
                __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413D0);
                uint64_t v52 = swift_allocObject();
                sub_22088E844((uint64_t)v50, v51, (uint64_t *)&v76);
                *(_OWORD *)(v52 + 16) = v76;
                swift_release();
                *(void *)(a6 + 16) = v52;
                uint64_t v31 = v52;
                int64_t v22 = v69;
              }
              uint64_t result = (uint64_t *)swift_beginAccess();
              uint64_t v53 = *(void *)(v31 + 16);
              a5 = v72;
              uint64_t v15 = v73;
              if (!v53) {
                goto LABEL_106;
              }
              uint64_t v54 = *(void *)(v53 + 16);
              BOOL v20 = __OFADD__(v54, 1);
              uint64_t v55 = v54 + 1;
              a4 = v74;
              uint64_t v25 = v71;
              if (v20) {
                goto LABEL_93;
              }
              *(void *)(v53 + 16) = v55;
              uint64_t v56 = *(void *)(v53 + 8);
              BOOL v20 = __OFADD__(v56, 1);
              uint64_t v57 = v56 + 1;
              if (v20) {
                goto LABEL_94;
              }
              *(void *)(v53 + 8) = v57;
            }
          }
          else
          {
LABEL_33:
            if (v24 >= a4 && v24 < a5)
            {
              if ((v23 & 0x8000000000000000) != 0) {
                goto LABEL_87;
              }
              if (v23 >= v22[2]) {
                goto LABEL_88;
              }
              uint64_t v36 = v70[v23];
              uint64_t v37 = *(void *)(a6 + 16);
              uint64_t result = (uint64_t *)swift_beginAccess();
              uint64_t v38 = *(void *)(v37 + 16);
              if (!v38) {
                goto LABEL_103;
              }
              uint64_t v39 = *(void *)(v38 + 8);
              uint64_t v40 = v39 + 1;
              if (__OFADD__(v39, 1)) {
                goto LABEL_89;
              }
              int v41 = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v42 = *(void *)(a6 + 16);
              uint64_t v43 = (uint64_t **)(v42 + 16);
              if (v41)
              {
                swift_beginAccess();
                uint64_t result = *v43;
                if (!*v43) {
                  goto LABEL_107;
                }
                uint64_t v44 = *result;
                if (*result >= v40)
                {
                  a4 = v74;
                }
                else
                {
                  if (v44 + 0x4000000000000000 < 0) {
                    goto LABEL_96;
                  }
                  uint64_t v45 = 2 * v44;
                  if (v45 <= v40) {
                    uint64_t v46 = v40;
                  }
                  else {
                    uint64_t v46 = v45;
                  }
                  sub_22088F714((uint64_t)result, v46, (uint64_t *)&v76);
                  uint64_t result = *(uint64_t **)(v42 + 16);
                  if (!result) {
                    goto LABEL_111;
                  }
                  a4 = v74;
                  if (result[1] < 0) {
                    goto LABEL_98;
                  }
                  MEMORY[0x223C6B140]();
                  *(_OWORD *)uint64_t v43 = v76;
                }
              }
              else
              {
                uint64_t result = (uint64_t *)swift_beginAccess();
                uint64_t v47 = *v43;
                if (!v47) {
                  goto LABEL_108;
                }
                uint64_t v48 = *v47;
                if (*v47 < v40)
                {
                  if (v48 + 0x4000000000000000 < 0) {
                    goto LABEL_97;
                  }
                  if (2 * v48 <= v40) {
                    uint64_t v48 = v40;
                  }
                  else {
                    v48 *= 2;
                  }
                }
                __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413D0);
                uint64_t v49 = swift_allocObject();
                sub_22088E844((uint64_t)v47, v48, (uint64_t *)&v76);
                *(_OWORD *)(v49 + 16) = v76;
                swift_release();
                *(void *)(a6 + 16) = v49;
                uint64_t v42 = v49;
                a4 = v74;
                int64_t v22 = v69;
              }
              uint64_t result = (uint64_t *)swift_beginAccess();
              uint64_t v58 = *(void **)(v42 + 16);
              a5 = v72;
              uint64_t v15 = v73;
              if (!v58) {
                goto LABEL_104;
              }
              uint64_t v59 = *v58 + 7;
              if (__OFADD__(*v58, 7)) {
                goto LABEL_90;
              }
              uint64_t v60 = v58 + 8;
              if (v59 < 0) {
                uint64_t v59 = *v58 + 14;
              }
              uint64_t v61 = v59 >> 3;
              uint64_t v63 = v61 - 1;
              BOOL v62 = v61 < 1;
              uint64_t v64 = v61 + 62;
              if (!v62) {
                uint64_t v64 = v63;
              }
              uint64_t v65 = v58[1];
              *(void *)((char *)&v60[v65 + 8] + (v64 & 0xFFFFFFFFFFFFFFC0)) = v36;
              uint64_t v66 = v65 - (v64 & 0xFFFFFFFFFFFFFFF8);
              if (v66 >= 0) {
                char v67 = 1 << v66;
              }
              else {
                char v67 = 0;
              }
              *((unsigned char *)v60 + v65 / 8) |= v67;
              if (__OFADD__(v65, 1))
              {
                __break(1u);
                goto LABEL_79;
              }
              v58[1] = v65 + 1;
              uint64_t v25 = v71;
            }
            BOOL v20 = __OFADD__(v23++, 1);
            if (v20) {
              goto LABEL_86;
            }
          }
          ++v24;
        }
        while (v11 != v24);
      }
      swift_bridgeObjectRelease();
      return (uint64_t *)swift_bridgeObjectRelease();
    }
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
LABEL_101:
    __break(1u);
LABEL_102:
    __break(1u);
LABEL_103:
    __break(1u);
LABEL_104:
    __break(1u);
LABEL_105:
    __break(1u);
LABEL_106:
    __break(1u);
LABEL_107:
    __break(1u);
LABEL_108:
    __break(1u);
LABEL_109:
    __break(1u);
LABEL_110:
    __break(1u);
LABEL_111:
    __break(1u);
LABEL_112:
    __break(1u);
  }
  return result;
}

uint64_t *sub_22084A960(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v79 = a1;
  uint64_t result = (uint64_t *)sub_220849A54((uint64_t *)&v79, a2);
  if (!v5)
  {
    uint64_t v13 = v12;
    if (v11 == a2)
    {
      swift_bridgeObjectRelease();
      uint64_t v14 = sub_220847A68(0, 0, a2);
      sub_22088DD2C((uint64_t)v14);
      return (uint64_t *)swift_bridgeObjectRelease();
    }
    if (result != 2)
    {
      swift_bridgeObjectRelease();
      sub_220809E4C();
      swift_allocError();
      *(void *)uint64_t v18 = 0xD00000000000002DLL;
      *(void *)(v18 + 8) = 0x8000000220940000;
      *(unsigned char *)(v18 + 16) = 0;
      return (uint64_t *)swift_willThrow();
    }
    BOOL v15 = __OFSUB__(a2, v11);
    uint64_t v16 = a2 - v11;
    if (v15) {
      goto LABEL_88;
    }
    if (*v79++) {
      uint64_t result = (uint64_t *)sub_2208AF128(&v79, v16);
    }
    else {
      uint64_t result = (uint64_t *)sub_2208AEEF4(&v79, v16);
    }
    if ((a2 & 0x8000000000000000) == 0)
    {
      if (a2)
      {
        unint64_t v19 = 0;
        int64_t v20 = 0;
        uint64_t v21 = *(void *)(v13 + 16);
        uint64_t v77 = v13 + 32;
        uint64_t v70 = result + 4;
        uint64_t v71 = result;
        uint64_t v69 = a5;
        uint64_t v72 = v13;
        uint64_t v73 = v21;
        uint64_t v74 = a3;
        uint64_t v75 = a4;
        do
        {
          if (!v21) {
            goto LABEL_31;
          }
          if ((unint64_t)v20 >> 3 >= *(void *)(v13 + 16))
          {
            __break(1u);
LABEL_79:
            __break(1u);
LABEL_80:
            __break(1u);
LABEL_81:
            __break(1u);
LABEL_82:
            __break(1u);
LABEL_83:
            __break(1u);
LABEL_84:
            __break(1u);
LABEL_85:
            __break(1u);
LABEL_86:
            __break(1u);
LABEL_87:
            __break(1u);
LABEL_88:
            __break(1u);
LABEL_89:
            __break(1u);
LABEL_90:
            __break(1u);
            goto LABEL_91;
          }
          if ((*(unsigned __int8 *)(v77 + ((unint64_t)v20 >> 3)) >> (v20 & 7)))
          {
            if (v20 >= a3 && v20 < a4)
            {
              uint64_t v22 = *(void *)(a5 + 16);
              uint64_t result = (uint64_t *)swift_beginAccess();
              uint64_t v23 = *(void *)(v22 + 16);
              if (!v23) {
                goto LABEL_96;
              }
              uint64_t v24 = *(void *)(v23 + 8);
              uint64_t v25 = v24 + 1;
              if (__OFADD__(v24, 1)) {
                goto LABEL_85;
              }
              int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v27 = *(void *)(a5 + 16);
              uint64_t v28 = (uint64_t **)(v27 + 16);
              if (isUniquelyReferenced_nonNull_native)
              {
                swift_beginAccess();
                uint64_t result = *v28;
                if (!*v28) {
                  goto LABEL_100;
                }
                uint64_t v29 = *result;
                if (*result < v25)
                {
                  if (v29 + 0x4000000000000000 < 0) {
                    goto LABEL_92;
                  }
                  uint64_t v30 = 2 * v29;
                  if (v30 <= v25) {
                    uint64_t v31 = v25;
                  }
                  else {
                    uint64_t v31 = v30;
                  }
                  sub_22088F904((uint64_t)result, v31, (uint64_t *)&v78);
                  sub_220890508(*(void **)(v27 + 16));
                  *(_OWORD *)(v27 + 16) = v78;
                }
              }
              else
              {
                uint64_t result = (uint64_t *)swift_beginAccess();
                uint64_t v61 = *v28;
                if (!*v28) {
                  goto LABEL_101;
                }
                uint64_t v62 = *v61;
                if (*v61 < v25)
                {
                  if (v62 + 0x4000000000000000 < 0) {
                    goto LABEL_93;
                  }
                  if (2 * v62 <= v25) {
                    uint64_t v62 = v25;
                  }
                  else {
                    v62 *= 2;
                  }
                }
                __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413C8);
                uint64_t v63 = swift_allocObject();
                sub_22088E9D4((uint64_t)v61, v62, (uint64_t *)&v78);
                *(_OWORD *)(v63 + 16) = v78;
                swift_release();
                a5 = v69;
                *(void *)(v69 + 16) = v63;
                uint64_t v27 = v63;
                uint64_t v13 = v72;
              }
              uint64_t result = (uint64_t *)swift_beginAccess();
              uint64_t v64 = *(void *)(v27 + 16);
              if (!v64) {
                goto LABEL_97;
              }
              uint64_t v65 = *(void *)(v64 + 16);
              BOOL v15 = __OFADD__(v65, 1);
              uint64_t v66 = v65 + 1;
              a3 = v74;
              a4 = v75;
              uint64_t v21 = v73;
              if (v15) {
                goto LABEL_86;
              }
              *(void *)(v64 + 16) = v66;
              uint64_t v67 = *(void *)(v64 + 8);
              BOOL v15 = __OFADD__(v67, 1);
              uint64_t v68 = v67 + 1;
              if (v15) {
                goto LABEL_87;
              }
              *(void *)(v64 + 8) = v68;
            }
          }
          else
          {
LABEL_31:
            if (v20 >= a3 && v20 < a4)
            {
              if ((v19 & 0x8000000000000000) != 0) {
                goto LABEL_80;
              }
              if (v19 >= v71[2]) {
                goto LABEL_81;
              }
              uint64_t v32 = &v70[2 * v19];
              uint64_t v33 = v32[1];
              uint64_t v76 = *v32;
              uint64_t v34 = *(void *)(a5 + 16);
              uint64_t result = (uint64_t *)swift_beginAccess();
              uint64_t v35 = *(void *)(v34 + 16);
              if (!v35) {
                goto LABEL_94;
              }
              uint64_t v36 = *(void *)(v35 + 8);
              uint64_t v37 = v36 + 1;
              if (__OFADD__(v36, 1)) {
                goto LABEL_82;
              }
              swift_bridgeObjectRetain();
              int v38 = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v39 = *(void *)(a5 + 16);
              uint64_t v40 = (uint64_t **)(v39 + 16);
              if (v38)
              {
                swift_beginAccess();
                uint64_t result = *v40;
                if (!*v40) {
                  goto LABEL_98;
                }
                uint64_t v41 = *result;
                if (*result < v37)
                {
                  if (v41 + 0x4000000000000000 < 0) {
                    goto LABEL_89;
                  }
                  uint64_t v42 = 2 * v41;
                  if (v42 <= v37) {
                    uint64_t v43 = v37;
                  }
                  else {
                    uint64_t v43 = v42;
                  }
                  sub_22088F904((uint64_t)result, v43, (uint64_t *)&v78);
                  sub_220890508(*(void **)(v39 + 16));
                  *(_OWORD *)(v39 + 16) = v78;
                }
              }
              else
              {
                uint64_t result = (uint64_t *)swift_beginAccess();
                uint64_t v44 = *v40;
                if (!*v40) {
                  goto LABEL_99;
                }
                uint64_t v45 = *v44;
                if (*v44 < v37)
                {
                  if (v45 + 0x4000000000000000 < 0) {
                    goto LABEL_90;
                  }
                  if (2 * v45 <= v37) {
                    uint64_t v45 = v37;
                  }
                  else {
                    v45 *= 2;
                  }
                }
                __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413C8);
                uint64_t v46 = swift_allocObject();
                sub_22088E9D4((uint64_t)v44, v45, (uint64_t *)&v78);
                *(_OWORD *)(v46 + 16) = v78;
                swift_release();
                a5 = v69;
                *(void *)(v69 + 16) = v46;
                uint64_t v39 = v46;
              }
              uint64_t result = (uint64_t *)swift_beginAccess();
              uint64_t v47 = *(void **)(v39 + 16);
              uint64_t v13 = v72;
              if (!v47) {
                goto LABEL_95;
              }
              uint64_t v48 = *v47 + 7;
              if (__OFADD__(*v47, 7)) {
                goto LABEL_83;
              }
              uint64_t v49 = v47 + 8;
              if (v48 < 0) {
                uint64_t v48 = *v47 + 14;
              }
              uint64_t v50 = v48 >> 3;
              uint64_t v52 = v50 - 1;
              BOOL v51 = v50 < 1;
              uint64_t v53 = v50 + 62;
              if (!v51) {
                uint64_t v53 = v52;
              }
              unint64_t v54 = (unint64_t)&v49[2 * v47[1]] + (v53 & 0xFFFFFFFFFFFFFFC0);
              *(void *)(v54 + 64) = v76;
              *(void *)(v54 + 72) = v33;
              uint64_t v55 = v47[1];
              uint64_t v56 = v55 + 7;
              if (v55 >= 0) {
                uint64_t v56 = v47[1];
              }
              uint64_t v57 = v56 >> 3;
              uint64_t v58 = v55 - (v56 & 0xFFFFFFFFFFFFFFF8);
              if (v58 >= 0) {
                char v59 = 1 << v58;
              }
              else {
                char v59 = 0;
              }
              *((unsigned char *)v49 + v57) |= v59;
              BOOL v15 = __OFADD__(v55, 1);
              uint64_t v60 = v55 + 1;
              if (v15) {
                goto LABEL_84;
              }
              v47[1] = v60;
              a3 = v74;
              a4 = v75;
              uint64_t v21 = v73;
            }
            BOOL v15 = __OFADD__(v19++, 1);
            if (v15) {
              goto LABEL_79;
            }
          }
          ++v20;
        }
        while (a2 != v20);
      }
      swift_bridgeObjectRelease();
      return (uint64_t *)swift_bridgeObjectRelease();
    }
LABEL_91:
    __break(1u);
LABEL_92:
    __break(1u);
LABEL_93:
    __break(1u);
LABEL_94:
    __break(1u);
LABEL_95:
    __break(1u);
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
LABEL_98:
    __break(1u);
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
LABEL_101:
    __break(1u);
  }
  return result;
}

uint64_t *sub_22084AF24(unsigned __int8 *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v75 = a1;
  uint64_t result = (uint64_t *)sub_220849A54((uint64_t *)&v75, a2);
  if (!v6)
  {
    uint64_t v15 = v14;
    if (v13 == a2)
    {
      swift_bridgeObjectRelease();
      uint64_t v16 = sub_220847BFC(0, a2, &qword_267F18B90);
      sub_22088E044((uint64_t)v16);
      return (uint64_t *)swift_bridgeObjectRelease();
    }
    if (result != 3)
    {
      swift_bridgeObjectRelease();
      sub_220809E4C();
      swift_allocError();
      *(void *)uint64_t v65 = 0xD00000000000002DLL;
      *(void *)(v65 + 8) = 0x8000000220940000;
      *(unsigned char *)(v65 + 16) = 0;
      return (uint64_t *)swift_willThrow();
    }
    BOOL v17 = __OFSUB__(a2, v13);
    uint64_t v18 = a2 - v13;
    if (v17) {
      goto LABEL_84;
    }
    uint64_t result = (uint64_t *)sub_2208BC55C(&v75, v18, a2, a3);
    if ((a2 & 0x8000000000000000) == 0)
    {
      unint64_t v19 = result;
      if (a2)
      {
        unint64_t v20 = 0;
        int64_t v21 = 0;
        uint64_t v22 = *(void *)(v15 + 16);
        uint64_t v72 = v15 + 32;
        uint64_t v73 = a6;
        uint64_t v67 = result + 4;
        uint64_t v68 = v15;
        uint64_t v70 = a4;
        uint64_t v71 = a5;
        uint64_t v66 = result;
        uint64_t v69 = v22;
        do
        {
          if (!v22) {
            goto LABEL_28;
          }
          if ((unint64_t)v21 >> 3 >= *(void *)(v15 + 16))
          {
            __break(1u);
LABEL_75:
            __break(1u);
LABEL_76:
            __break(1u);
LABEL_77:
            __break(1u);
LABEL_78:
            __break(1u);
LABEL_79:
            __break(1u);
LABEL_80:
            __break(1u);
LABEL_81:
            __break(1u);
LABEL_82:
            __break(1u);
LABEL_83:
            __break(1u);
LABEL_84:
            __break(1u);
LABEL_85:
            __break(1u);
LABEL_86:
            __break(1u);
            goto LABEL_87;
          }
          if ((*(unsigned __int8 *)(v72 + ((unint64_t)v21 >> 3)) >> (v21 & 7)))
          {
            if (v21 >= a4 && v21 < a5)
            {
              uint64_t v23 = *(void *)(a6 + 16);
              uint64_t result = (uint64_t *)swift_beginAccess();
              uint64_t v24 = *(void *)(v23 + 16);
              if (!v24) {
                goto LABEL_92;
              }
              uint64_t v25 = *(void *)(v24 + 8);
              uint64_t v26 = v25 + 1;
              if (__OFADD__(v25, 1)) {
                goto LABEL_81;
              }
              int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v28 = *(void *)(v73 + 16);
              uint64_t v29 = (uint64_t **)(v28 + 16);
              if (isUniquelyReferenced_nonNull_native)
              {
                swift_beginAccess();
                uint64_t result = *v29;
                if (!*v29) {
                  goto LABEL_96;
                }
                uint64_t v30 = *result;
                if (*result < v26)
                {
                  if (v30 + 0x4000000000000000 < 0) {
                    goto LABEL_88;
                  }
                  uint64_t v31 = 2 * v30;
                  if (v31 <= v26) {
                    uint64_t v32 = v26;
                  }
                  else {
                    uint64_t v32 = v31;
                  }
                  sub_22088F900((uint64_t)result, v32, (uint64_t *)&v74);
                  sub_2208909E0(*(void **)(v28 + 16), *(void *)(v28 + 24));
                  *(_OWORD *)(v28 + 16) = v74;
                }
                a6 = v73;
              }
              else
              {
                uint64_t result = (uint64_t *)swift_beginAccess();
                uint64_t v57 = *v29;
                if (!*v29) {
                  goto LABEL_97;
                }
                uint64_t v58 = *v57;
                if (*v57 < v26)
                {
                  if (v58 + 0x4000000000000000 < 0) {
                    goto LABEL_89;
                  }
                  if (2 * v58 <= v26) {
                    uint64_t v58 = v26;
                  }
                  else {
                    v58 *= 2;
                  }
                }
                __swift_instantiateConcreteTypeFromMangledName(&qword_267F18778);
                uint64_t v59 = swift_allocObject();
                sub_22088E840(&v74, v57, *(void *)(v28 + 24), v58);
                *(_OWORD *)(v59 + 16) = v74;
                swift_release();
                a6 = v73;
                *(void *)(v73 + 16) = v59;
                uint64_t v28 = v59;
                uint64_t v15 = v68;
                unint64_t v19 = v66;
              }
              uint64_t result = (uint64_t *)swift_beginAccess();
              uint64_t v60 = *(void *)(v28 + 16);
              if (!v60) {
                goto LABEL_93;
              }
              uint64_t v61 = *(void *)(v60 + 16);
              BOOL v17 = __OFADD__(v61, 1);
              uint64_t v62 = v61 + 1;
              a4 = v70;
              a5 = v71;
              uint64_t v22 = v69;
              if (v17) {
                goto LABEL_82;
              }
              *(void *)(v60 + 16) = v62;
              uint64_t v63 = *(void *)(v60 + 8);
              BOOL v17 = __OFADD__(v63, 1);
              uint64_t v64 = v63 + 1;
              if (v17) {
                goto LABEL_83;
              }
              *(void *)(v60 + 8) = v64;
            }
          }
          else
          {
LABEL_28:
            if (v21 >= a4 && v21 < a5)
            {
              if ((v20 & 0x8000000000000000) != 0) {
                goto LABEL_76;
              }
              if (v20 >= v19[2]) {
                goto LABEL_77;
              }
              uint64_t v33 = v67[v20];
              uint64_t v34 = *(void *)(a6 + 16);
              uint64_t result = (uint64_t *)swift_beginAccess();
              uint64_t v35 = *(void *)(v34 + 16);
              if (!v35) {
                goto LABEL_90;
              }
              uint64_t v36 = *(void *)(v35 + 8);
              uint64_t v37 = v36 + 1;
              if (__OFADD__(v36, 1)) {
                goto LABEL_78;
              }
              swift_bridgeObjectRetain();
              int v38 = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v39 = *(void *)(a6 + 16);
              uint64_t v40 = (uint64_t **)(v39 + 16);
              if (v38)
              {
                swift_beginAccess();
                uint64_t result = *v40;
                if (!*v40) {
                  goto LABEL_94;
                }
                uint64_t v41 = *result;
                if (*result < v37)
                {
                  if (v41 + 0x4000000000000000 < 0) {
                    goto LABEL_85;
                  }
                  uint64_t v42 = 2 * v41;
                  if (v42 <= v37) {
                    uint64_t v43 = v37;
                  }
                  else {
                    uint64_t v43 = v42;
                  }
                  sub_22088F900((uint64_t)result, v43, (uint64_t *)&v74);
                  sub_2208909E0(*(void **)(v39 + 16), *(void *)(v39 + 24));
                  *(_OWORD *)(v39 + 16) = v74;
                }
              }
              else
              {
                uint64_t result = (uint64_t *)swift_beginAccess();
                uint64_t v44 = *v40;
                if (!*v40) {
                  goto LABEL_95;
                }
                uint64_t v45 = *v44;
                if (*v44 < v37)
                {
                  if (v45 + 0x4000000000000000 < 0) {
                    goto LABEL_86;
                  }
                  if (2 * v45 <= v37) {
                    uint64_t v45 = v37;
                  }
                  else {
                    v45 *= 2;
                  }
                }
                __swift_instantiateConcreteTypeFromMangledName(&qword_267F18778);
                uint64_t v46 = swift_allocObject();
                sub_22088E840(&v74, v44, *(void *)(v39 + 24), v45);
                *(_OWORD *)(v46 + 16) = v74;
                swift_release();
                *(void *)(v73 + 16) = v46;
                uint64_t v39 = v46;
                unint64_t v19 = v66;
              }
              uint64_t result = (uint64_t *)swift_beginAccess();
              uint64_t v47 = *(void **)(v39 + 16);
              uint64_t v15 = v68;
              if (!v47) {
                goto LABEL_91;
              }
              uint64_t v48 = *v47 + 7;
              a6 = v73;
              if (__OFADD__(*v47, 7)) {
                goto LABEL_79;
              }
              uint64_t v49 = v47 + 8;
              if (v48 < 0) {
                uint64_t v48 = *v47 + 14;
              }
              uint64_t v50 = v48 >> 3;
              uint64_t v52 = v50 - 1;
              BOOL v51 = v50 < 1;
              uint64_t v53 = v50 + 62;
              if (!v51) {
                uint64_t v53 = v52;
              }
              uint64_t v54 = v47[1];
              *(void *)((char *)&v49[v54 + 8] + (v53 & 0xFFFFFFFFFFFFFFC0)) = v33;
              uint64_t v55 = v54 - (v53 & 0xFFFFFFFFFFFFFFF8);
              if (v55 >= 0) {
                char v56 = 1 << v55;
              }
              else {
                char v56 = 0;
              }
              *((unsigned char *)v49 + v54 / 8) |= v56;
              if (__OFADD__(v54, 1)) {
                goto LABEL_80;
              }
              v47[1] = v54 + 1;
              a4 = v70;
              a5 = v71;
              uint64_t v22 = v69;
            }
            BOOL v17 = __OFADD__(v20++, 1);
            if (v17) {
              goto LABEL_75;
            }
          }
          ++v21;
        }
        while (a2 != v21);
      }
      swift_bridgeObjectRelease();
      return (uint64_t *)swift_bridgeObjectRelease();
    }
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
LABEL_92:
    __break(1u);
LABEL_93:
    __break(1u);
LABEL_94:
    __break(1u);
LABEL_95:
    __break(1u);
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
  }
  return result;
}

uint64_t *sub_22084B4DC(unsigned __int8 *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v77 = a1;
  uint64_t result = (uint64_t *)sub_220849A54((uint64_t *)&v77, a2);
  if (!v6)
  {
    uint64_t v15 = v14;
    if (v13 == a2)
    {
      swift_bridgeObjectRelease();
      uint64_t v16 = sub_220847B20(0, 0, 0, a2);
      sub_22088E058(v16);
      return (uint64_t *)swift_bridgeObjectRelease();
    }
    if (result != 9)
    {
      swift_bridgeObjectRelease();
      sub_220809E4C();
      swift_allocError();
      *(void *)uint64_t v66 = 0xD00000000000002DLL;
      *(void *)(v66 + 8) = 0x8000000220940000;
      *(unsigned char *)(v66 + 16) = 0;
      return (uint64_t *)swift_willThrow();
    }
    BOOL v17 = __OFSUB__(a2, v13);
    uint64_t v18 = a2 - v13;
    if (v17) {
      goto LABEL_83;
    }
    uint64_t result = (uint64_t *)sub_22091D178(&v77, v18, a2, a3);
    if ((a2 & 0x8000000000000000) == 0)
    {
      if (a2)
      {
        unint64_t v19 = 0;
        int64_t v20 = 0;
        uint64_t v21 = *(void *)(v15 + 16);
        uint64_t v74 = v15 + 32;
        uint64_t v69 = result + 4;
        uint64_t v70 = result;
        uint64_t v67 = a6;
        uint64_t v68 = v15;
        uint64_t v72 = a5;
        uint64_t v73 = a4;
        uint64_t v71 = v21;
        do
        {
          if (!v21) {
            goto LABEL_27;
          }
          if ((unint64_t)v20 >> 3 >= *(void *)(v15 + 16))
          {
            __break(1u);
LABEL_74:
            __break(1u);
LABEL_75:
            __break(1u);
LABEL_76:
            __break(1u);
LABEL_77:
            __break(1u);
LABEL_78:
            __break(1u);
LABEL_79:
            __break(1u);
LABEL_80:
            __break(1u);
LABEL_81:
            __break(1u);
LABEL_82:
            __break(1u);
LABEL_83:
            __break(1u);
LABEL_84:
            __break(1u);
LABEL_85:
            __break(1u);
            goto LABEL_86;
          }
          if ((*(unsigned __int8 *)(v74 + ((unint64_t)v20 >> 3)) >> (v20 & 7)))
          {
            if (v20 >= a4 && v20 < a5)
            {
              uint64_t v22 = *(void *)(a6 + 16);
              uint64_t result = (uint64_t *)swift_beginAccess();
              uint64_t v23 = *(void *)(v22 + 16);
              if (!v23) {
                goto LABEL_91;
              }
              uint64_t v24 = *(void *)(v23 + 8);
              uint64_t v25 = v24 + 1;
              if (__OFADD__(v24, 1)) {
                goto LABEL_80;
              }
              int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v27 = *(void *)(a6 + 16);
              uint64_t v28 = (uint64_t **)(v27 + 16);
              if (isUniquelyReferenced_nonNull_native)
              {
                swift_beginAccess();
                uint64_t result = *v28;
                if (!*v28) {
                  goto LABEL_95;
                }
                uint64_t v29 = *result;
                if (*result < v25)
                {
                  if (v29 + 0x4000000000000000 < 0) {
                    goto LABEL_87;
                  }
                  uint64_t v30 = 2 * v29;
                  if (v30 <= v25) {
                    uint64_t v31 = v25;
                  }
                  else {
                    uint64_t v31 = v30;
                  }
                  sub_220890120((uint64_t)result, v31, (uint64_t *)&v76);
                  sub_2208908F0(*(void **)(v27 + 16));
                  *(_OWORD *)(v27 + 16) = v76;
                }
              }
              else
              {
                uint64_t result = (uint64_t *)swift_beginAccess();
                uint64_t v58 = *v28;
                if (!v58) {
                  goto LABEL_96;
                }
                uint64_t v59 = *v58;
                if (*v58 < v25)
                {
                  if (v59 + 0x4000000000000000 < 0) {
                    goto LABEL_88;
                  }
                  if (2 * v59 <= v25) {
                    uint64_t v59 = v25;
                  }
                  else {
                    v59 *= 2;
                  }
                }
                __swift_instantiateConcreteTypeFromMangledName(&qword_267F18790);
                uint64_t v60 = swift_allocObject();
                sub_22088EEF0((uint64_t)v58, v59, (uint64_t *)&v76);
                *(_OWORD *)(v60 + 16) = v76;
                swift_release();
                a6 = v67;
                *(void *)(v67 + 16) = v60;
                uint64_t v27 = v60;
              }
              uint64_t result = (uint64_t *)swift_beginAccess();
              uint64_t v61 = *(void *)(v27 + 16);
              a5 = v72;
              if (!v61) {
                goto LABEL_92;
              }
              uint64_t v62 = *(void *)(v61 + 16);
              BOOL v17 = __OFADD__(v62, 1);
              uint64_t v63 = v62 + 1;
              a4 = v73;
              uint64_t v21 = v71;
              if (v17) {
                goto LABEL_81;
              }
              *(void *)(v61 + 16) = v63;
              uint64_t v64 = *(void *)(v61 + 8);
              BOOL v17 = __OFADD__(v64, 1);
              uint64_t v65 = v64 + 1;
              if (v17) {
                goto LABEL_82;
              }
              *(void *)(v61 + 8) = v65;
            }
          }
          else
          {
LABEL_27:
            if (v20 >= a4 && v20 < a5)
            {
              if ((v19 & 0x8000000000000000) != 0) {
                goto LABEL_75;
              }
              if (v19 >= v70[2]) {
                goto LABEL_76;
              }
              uint64_t v32 = &v69[3 * v19];
              long long v75 = *(_OWORD *)v32;
              uint64_t v33 = v32[2];
              uint64_t v34 = *(void *)(a6 + 16);
              uint64_t result = (uint64_t *)swift_beginAccess();
              uint64_t v35 = *(void *)(v34 + 16);
              if (!v35) {
                goto LABEL_89;
              }
              uint64_t v36 = *(void *)(v35 + 8);
              uint64_t v37 = v36 + 1;
              if (__OFADD__(v36, 1)) {
                goto LABEL_77;
              }
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain_n();
              int v38 = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v39 = *(void *)(a6 + 16);
              uint64_t v40 = (uint64_t **)(v39 + 16);
              if (v38)
              {
                swift_beginAccess();
                uint64_t result = *v40;
                if (!*v40) {
                  goto LABEL_93;
                }
                uint64_t v41 = *result;
                a4 = v73;
                if (*result < v37)
                {
                  if (v41 + 0x4000000000000000 < 0) {
                    goto LABEL_84;
                  }
                  uint64_t v42 = 2 * v41;
                  if (v42 <= v37) {
                    uint64_t v43 = v37;
                  }
                  else {
                    uint64_t v43 = v42;
                  }
                  sub_220890120((uint64_t)result, v43, (uint64_t *)&v76);
                  sub_2208908F0(*(void **)(v39 + 16));
                  *(_OWORD *)(v39 + 16) = v76;
                }
              }
              else
              {
                uint64_t result = (uint64_t *)swift_beginAccess();
                uint64_t v44 = *v40;
                if (!*v40) {
                  goto LABEL_94;
                }
                uint64_t v45 = *v44;
                if (*v44 < v37)
                {
                  if (v45 + 0x4000000000000000 < 0) {
                    goto LABEL_85;
                  }
                  if (2 * v45 <= v37) {
                    uint64_t v45 = v37;
                  }
                  else {
                    v45 *= 2;
                  }
                }
                __swift_instantiateConcreteTypeFromMangledName(&qword_267F18790);
                uint64_t v46 = swift_allocObject();
                sub_22088EEF0((uint64_t)v44, v45, (uint64_t *)&v76);
                *(_OWORD *)(v46 + 16) = v76;
                swift_release();
                a6 = v67;
                *(void *)(v67 + 16) = v46;
                uint64_t v39 = v46;
                a4 = v73;
              }
              uint64_t result = (uint64_t *)swift_beginAccess();
              uint64_t v47 = *(void **)(v39 + 16);
              if (!v47) {
                goto LABEL_90;
              }
              uint64_t v48 = *v47 + 7;
              a5 = v72;
              if (__OFADD__(*v47, 7)) {
                goto LABEL_78;
              }
              uint64_t v49 = v47 + 8;
              if (v48 < 0) {
                uint64_t v48 = *v47 + 14;
              }
              uint64_t v50 = v48 >> 3;
              uint64_t v52 = v50 - 1;
              BOOL v51 = v50 < 1;
              uint64_t v53 = v50 + 62;
              if (!v51) {
                uint64_t v53 = v52;
              }
              uint64_t v54 = v47[1];
              unint64_t v55 = (unint64_t)&v49[3 * v54] + (v53 & 0xFFFFFFFFFFFFFFC0);
              *(_OWORD *)(v55 + 64) = v75;
              *(void *)(v55 + 80) = v33;
              uint64_t v56 = v54 - (v55 & 0xFFFFFFFFFFFFFFF8);
              if (v56 >= 0) {
                char v57 = 1 << v56;
              }
              else {
                char v57 = 0;
              }
              *((unsigned char *)v49 + v54 / 8) |= v57;
              if (__OFADD__(v54, 1)) {
                goto LABEL_79;
              }
              v47[1] = v54 + 1;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t result = (uint64_t *)swift_bridgeObjectRelease();
              uint64_t v15 = v68;
              uint64_t v21 = v71;
            }
            BOOL v17 = __OFADD__(v19++, 1);
            if (v17) {
              goto LABEL_74;
            }
          }
          ++v20;
        }
        while (a2 != v20);
      }
      swift_bridgeObjectRelease();
      return (uint64_t *)swift_bridgeObjectRelease();
    }
LABEL_86:
    __break(1u);
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
LABEL_92:
    __break(1u);
LABEL_93:
    __break(1u);
LABEL_94:
    __break(1u);
LABEL_95:
    __break(1u);
LABEL_96:
    __break(1u);
  }
  return result;
}

uint64_t sub_22084BAE8(int64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v74 = a1;
  uint64_t result = sub_220849A54((uint64_t *)&v74, a2);
  if (!v5)
  {
    uint64_t v13 = v12;
    if (v11 == a2)
    {
      swift_bridgeObjectRelease();
      uint64_t v14 = sub_220847BFC(0, a2, &qword_267F18BA0);
      sub_22088E394((uint64_t)v14);
      return swift_bridgeObjectRelease();
    }
    if (result != 4)
    {
      swift_bridgeObjectRelease();
      sub_220809E4C();
      swift_allocError();
      *(void *)uint64_t v15 = 0xD00000000000002DLL;
      *(void *)(v15 + 8) = 0x8000000220940000;
      *(unsigned char *)(v15 + 16) = 0;
      return swift_willThrow();
    }
    if (a3 == a4) {
      return swift_bridgeObjectRelease();
    }
    if (a4 >= a3)
    {
      uint64_t v71 = v12 + 32;
      uint64_t v72 = *(void *)(v12 + 16);
      uint64_t v70 = a4;
      while (a3 < a4)
      {
        uint64_t v16 = a3 + 7;
        if (a3 >= 0) {
          uint64_t v16 = a3;
        }
        if (!v72) {
          goto LABEL_31;
        }
        if (a3 < -7) {
          goto LABEL_82;
        }
        uint64_t v17 = v16 >> 3;
        if (v16 >> 3 >= *(void *)(v13 + 16)) {
          goto LABEL_83;
        }
        uint64_t v18 = a3 - (v16 & 0xFFFFFFFFFFFFFFF8);
        int v19 = *(unsigned __int8 *)(v71 + v17);
        int v20 = v18 >= 0 ? 1 << v18 : 0;
        if ((v20 & v19) != 0)
        {
          uint64_t v21 = *(void *)(a5 + 16);
          uint64_t result = swift_beginAccess();
          uint64_t v22 = *(void *)(v21 + 16);
          if (!v22) {
            goto LABEL_96;
          }
          uint64_t v23 = *(void *)(v22 + 8);
          uint64_t v24 = v23 + 1;
          if (__OFADD__(v23, 1)) {
            goto LABEL_85;
          }
          int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v26 = *(void *)(a5 + 16);
          uint64_t v27 = (uint64_t *)(v26 + 16);
          if (isUniquelyReferenced_nonNull_native)
          {
            swift_beginAccess();
            uint64_t result = *v27;
            if (!*v27) {
              goto LABEL_100;
            }
            uint64_t v28 = *(void *)result;
            if (*(void *)result < v24)
            {
              if (v28 + 0x4000000000000000 < 0) {
                goto LABEL_92;
              }
              uint64_t v29 = 2 * v28;
              if (v29 <= v24) {
                uint64_t v30 = v24;
              }
              else {
                uint64_t v30 = v29;
              }
              sub_22088F900(result, v30, v73);
              sub_2208908E4(*(void **)(v26 + 16), *(void *)(v26 + 24));
              *(_OWORD *)(v26 + 16) = *(_OWORD *)v73;
            }
          }
          else
          {
            uint64_t result = swift_beginAccess();
            uint64_t v47 = (uint64_t *)*v27;
            if (!*v27) {
              goto LABEL_101;
            }
            uint64_t v48 = *v47;
            if (*v47 < v24)
            {
              if (v48 + 0x4000000000000000 < 0) {
                goto LABEL_93;
              }
              if (2 * v48 <= v24) {
                uint64_t v48 = v24;
              }
              else {
                v48 *= 2;
              }
            }
            __swift_instantiateConcreteTypeFromMangledName(&qword_267F187A8);
            uint64_t v49 = swift_allocObject();
            sub_22088E840(v73, v47, *(void *)(v26 + 24), v48);
            *(_OWORD *)(v49 + 16) = *(_OWORD *)v73;
            swift_release();
            *(void *)(a5 + 16) = v49;
            uint64_t v26 = v49;
            a4 = v70;
          }
          uint64_t result = swift_beginAccess();
          uint64_t v50 = *(void *)(v26 + 16);
          if (!v50) {
            goto LABEL_97;
          }
          uint64_t v51 = *(void *)(v50 + 16);
          BOOL v52 = __OFADD__(v51, 1);
          uint64_t v53 = v51 + 1;
          if (v52) {
            goto LABEL_86;
          }
          *(void *)(v50 + 16) = v53;
          uint64_t v54 = *(void *)(v50 + 8);
          BOOL v52 = __OFADD__(v54, 1);
          uint64_t v55 = v54 + 1;
          if (v52) {
            goto LABEL_87;
          }
          *(void *)(v50 + 8) = v55;
        }
        else
        {
LABEL_31:
          int64_t v31 = *v74++;
          if (v31 < 0) {
            goto LABEL_84;
          }
          uint64_t v32 = sub_22081C490(0, v31, 0, MEMORY[0x263F8EE78]);
          if (v31)
          {
            while (1)
            {
              int v34 = *(unsigned __int8 *)v74;
              uint64_t v33 = *(unsigned __int8 *)v74;
              uint64_t v74 = (int64_t *)((char *)v74 + 1);
              uint64_t result = (v34 - 128);
              if ((result & 0xFFFFFF00) != 0) {
                break;
              }
              if (result > 9u)
              {
                sub_220809E4C();
                swift_allocError();
                *(void *)uint64_t v69 = v33;
                *(void *)(v69 + 8) = 0;
                *(unsigned char *)(v69 + 16) = 2;
                swift_willThrow();
                swift_bridgeObjectRelease();
                return swift_bridgeObjectRelease();
              }
              sub_22085C234(result, &v74, (uint64_t)v73);
              unint64_t v36 = v32[2];
              unint64_t v35 = v32[3];
              if (v36 >= v35 >> 1) {
                uint64_t v32 = sub_22081C490((void *)(v35 > 1), v36 + 1, 1, v32);
              }
              v32[2] = v36 + 1;
              sub_220842F90((uint64_t)v73, (uint64_t)&v32[4 * v36 + 4]);
              if (!--v31) {
                goto LABEL_38;
              }
            }
            __break(1u);
            break;
          }
LABEL_38:
          uint64_t v37 = *(void *)(a5 + 16);
          uint64_t result = swift_beginAccess();
          uint64_t v38 = *(void *)(v37 + 16);
          if (!v38) {
            goto LABEL_98;
          }
          uint64_t v39 = *(void *)(v38 + 8);
          uint64_t v40 = v39 + 1;
          if (__OFADD__(v39, 1)) {
            goto LABEL_88;
          }
          swift_bridgeObjectRetain();
          int v41 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v42 = *(void *)(a5 + 16);
          uint64_t v43 = (uint64_t *)(v42 + 16);
          if (v41)
          {
            swift_beginAccess();
            uint64_t result = *v43;
            if (!*v43) {
              goto LABEL_103;
            }
            uint64_t v44 = *(void *)result;
            if (*(void *)result < v40)
            {
              if (v44 + 0x4000000000000000 < 0) {
                goto LABEL_94;
              }
              uint64_t v45 = 2 * v44;
              if (v45 <= v40) {
                uint64_t v46 = v40;
              }
              else {
                uint64_t v46 = v45;
              }
              sub_22088F900(result, v46, v73);
              sub_2208908E4(*(void **)(v42 + 16), *(void *)(v42 + 24));
              *(_OWORD *)(v42 + 16) = *(_OWORD *)v73;
            }
          }
          else
          {
            uint64_t result = swift_beginAccess();
            uint64_t v56 = (uint64_t *)*v43;
            if (!*v43) {
              goto LABEL_102;
            }
            uint64_t v57 = *v56;
            if (*v56 < v40)
            {
              if (v57 + 0x4000000000000000 < 0) {
                goto LABEL_95;
              }
              if (2 * v57 <= v40) {
                uint64_t v57 = v40;
              }
              else {
                v57 *= 2;
              }
            }
            __swift_instantiateConcreteTypeFromMangledName(&qword_267F187A8);
            uint64_t v58 = swift_allocObject();
            sub_22088E840(v73, v56, *(void *)(v42 + 24), v57);
            *(_OWORD *)(v58 + 16) = *(_OWORD *)v73;
            swift_release();
            *(void *)(a5 + 16) = v58;
            uint64_t v42 = v58;
            a4 = v70;
          }
          uint64_t result = swift_beginAccess();
          uint64_t v59 = *(void **)(v42 + 16);
          if (!v59) {
            goto LABEL_99;
          }
          uint64_t v60 = *v59 + 7;
          if (__OFADD__(*v59, 7)) {
            goto LABEL_89;
          }
          uint64_t v61 = v59 + 8;
          if (v60 < 0) {
            uint64_t v60 = *v59 + 14;
          }
          uint64_t v62 = v60 >> 3;
          uint64_t v64 = v62 - 1;
          BOOL v63 = v62 < 1;
          uint64_t v65 = v62 + 62;
          if (!v63) {
            uint64_t v65 = v64;
          }
          uint64_t v66 = v59[1];
          *(void *)((char *)&v61[v66 + 8] + (v65 & 0xFFFFFFFFFFFFFFC0)) = v32;
          uint64_t v67 = v66 - (v65 & 0xFFFFFFFFFFFFFFF8);
          if (v67 >= 0) {
            char v68 = 1 << v67;
          }
          else {
            char v68 = 0;
          }
          *((unsigned char *)v61 + v66 / 8) |= v68;
          if (__OFADD__(v66, 1)) {
            goto LABEL_90;
          }
          v59[1] = v66 + 1;
          uint64_t result = swift_bridgeObjectRelease();
        }
        if (++a3 == a4) {
          return swift_bridgeObjectRelease();
        }
      }
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
LABEL_84:
      __break(1u);
LABEL_85:
      __break(1u);
LABEL_86:
      __break(1u);
LABEL_87:
      __break(1u);
LABEL_88:
      __break(1u);
LABEL_89:
      __break(1u);
LABEL_90:
      __break(1u);
    }
    __break(1u);
LABEL_92:
    __break(1u);
LABEL_93:
    __break(1u);
LABEL_94:
    __break(1u);
LABEL_95:
    __break(1u);
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
LABEL_98:
    __break(1u);
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
LABEL_101:
    __break(1u);
LABEL_102:
    __break(1u);
LABEL_103:
    __break(1u);
  }
  return result;
}

uint64_t *sub_22084C134(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v68 = a1;
  uint64_t result = (uint64_t *)sub_220849A54((uint64_t *)&v68, a2);
  if (!v5)
  {
    uint64_t v13 = v12;
    if (v11 == a2)
    {
      swift_bridgeObjectRelease();
      uint64_t v14 = sub_220847BFC(0, a2, &qword_267F18BA8);
      sub_22088E3A8((uint64_t)v14);
      return (uint64_t *)swift_bridgeObjectRelease();
    }
    if (result == 5)
    {
      if (a3 == a4) {
        return (uint64_t *)swift_bridgeObjectRelease();
      }
      if (a4 >= a3)
      {
        uint64_t v65 = v12 + 32;
        uint64_t v66 = *(void *)(v12 + 16);
        uint64_t v64 = v12;
        while (a3 < a4)
        {
          uint64_t v16 = a3 + 7;
          if (a3 >= 0) {
            uint64_t v16 = a3;
          }
          if (!v66) {
            goto LABEL_32;
          }
          if (a3 < -7) {
            goto LABEL_73;
          }
          uint64_t v17 = v16 >> 3;
          if (v16 >> 3 >= *(void *)(v13 + 16)) {
            goto LABEL_74;
          }
          uint64_t v18 = a3 - (v16 & 0xFFFFFFFFFFFFFFF8);
          int v19 = *(unsigned __int8 *)(v65 + v17);
          int v20 = v18 >= 0 ? 1 << v18 : 0;
          if ((v20 & v19) != 0)
          {
            uint64_t v21 = *(void *)(a5 + 16);
            uint64_t result = (uint64_t *)swift_beginAccess();
            uint64_t v22 = *(void *)(v21 + 16);
            if (!v22) {
              goto LABEL_88;
            }
            uint64_t v23 = *(void *)(v22 + 8);
            uint64_t v24 = v23 + 1;
            if (__OFADD__(v23, 1)) {
              goto LABEL_78;
            }
            int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v26 = *(void *)(a5 + 16);
            uint64_t v27 = (uint64_t **)(v26 + 16);
            if (isUniquelyReferenced_nonNull_native)
            {
              swift_beginAccess();
              uint64_t result = *v27;
              if (!*v27) {
                goto LABEL_92;
              }
              uint64_t v28 = *result;
              if (*result < v24)
              {
                if (v28 + 0x4000000000000000 < 0) {
                  goto LABEL_83;
                }
                uint64_t v29 = 2 * v28;
                if (v29 <= v24) {
                  uint64_t v30 = v24;
                }
                else {
                  uint64_t v30 = v29;
                }
                sub_22088F900((uint64_t)result, v30, (uint64_t *)&v67);
                sub_2208908D8(*(void **)(v26 + 16), *(void *)(v26 + 24));
                *(_OWORD *)(v26 + 16) = v67;
              }
            }
            else
            {
              uint64_t result = (uint64_t *)swift_beginAccess();
              uint64_t v55 = *v27;
              if (!*v27) {
                goto LABEL_93;
              }
              uint64_t v56 = *v55;
              if (*v55 < v24)
              {
                if (v56 + 0x4000000000000000 < 0) {
                  goto LABEL_84;
                }
                if (2 * v56 <= v24) {
                  uint64_t v56 = v24;
                }
                else {
                  v56 *= 2;
                }
              }
              __swift_instantiateConcreteTypeFromMangledName(&qword_267F187B0);
              uint64_t v57 = swift_allocObject();
              sub_22088E840(&v67, v55, *(void *)(v26 + 24), v56);
              *(_OWORD *)(v57 + 16) = v67;
              swift_release();
              *(void *)(a5 + 16) = v57;
              uint64_t v26 = v57;
              uint64_t v13 = v64;
            }
            uint64_t result = (uint64_t *)swift_beginAccess();
            uint64_t v58 = *(void *)(v26 + 16);
            if (!v58) {
              goto LABEL_89;
            }
            uint64_t v59 = *(void *)(v58 + 16);
            BOOL v60 = __OFADD__(v59, 1);
            uint64_t v61 = v59 + 1;
            if (v60) {
              goto LABEL_79;
            }
            *(void *)(v58 + 16) = v61;
            uint64_t v62 = *(void *)(v58 + 8);
            BOOL v60 = __OFADD__(v62, 1);
            uint64_t v63 = v62 + 1;
            if (v60) {
              goto LABEL_80;
            }
            *(void *)(v58 + 8) = v63;
          }
          else
          {
LABEL_32:
            uint64_t v31 = sub_22085C5AC(&v68);
            uint64_t v32 = *(void *)(a5 + 16);
            uint64_t result = (uint64_t *)swift_beginAccess();
            uint64_t v33 = *(void *)(v32 + 16);
            if (!v33) {
              goto LABEL_86;
            }
            uint64_t v34 = *(void *)(v33 + 8);
            uint64_t v35 = v34 + 1;
            if (__OFADD__(v34, 1)) {
              goto LABEL_75;
            }
            swift_bridgeObjectRetain();
            int v36 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v37 = *(void *)(a5 + 16);
            uint64_t v38 = (uint64_t **)(v37 + 16);
            if (v36)
            {
              swift_beginAccess();
              uint64_t result = *v38;
              if (!*v38) {
                goto LABEL_90;
              }
              uint64_t v39 = *result;
              if (*result < v35)
              {
                if (v39 + 0x4000000000000000 < 0) {
                  goto LABEL_81;
                }
                uint64_t v40 = 2 * v39;
                if (v40 <= v35) {
                  uint64_t v41 = v35;
                }
                else {
                  uint64_t v41 = v40;
                }
                sub_22088F900((uint64_t)result, v41, (uint64_t *)&v67);
                sub_2208908D8(*(void **)(v37 + 16), *(void *)(v37 + 24));
                *(_OWORD *)(v37 + 16) = v67;
              }
            }
            else
            {
              uint64_t result = (uint64_t *)swift_beginAccess();
              uint64_t v42 = *v38;
              if (!*v38) {
                goto LABEL_91;
              }
              uint64_t v43 = *v42;
              if (*v42 < v35)
              {
                if (v43 + 0x4000000000000000 < 0) {
                  goto LABEL_82;
                }
                if (2 * v43 <= v35) {
                  uint64_t v43 = v35;
                }
                else {
                  v43 *= 2;
                }
              }
              __swift_instantiateConcreteTypeFromMangledName(&qword_267F187B0);
              uint64_t v44 = swift_allocObject();
              sub_22088E840(&v67, v42, *(void *)(v37 + 24), v43);
              *(_OWORD *)(v44 + 16) = v67;
              swift_release();
              *(void *)(a5 + 16) = v44;
              uint64_t v37 = v44;
              uint64_t v13 = v64;
            }
            uint64_t result = (uint64_t *)swift_beginAccess();
            uint64_t v45 = *(void **)(v37 + 16);
            if (!v45) {
              goto LABEL_87;
            }
            uint64_t v46 = *v45 + 7;
            if (__OFADD__(*v45, 7)) {
              goto LABEL_76;
            }
            uint64_t v47 = v45 + 8;
            if (v46 < 0) {
              uint64_t v46 = *v45 + 14;
            }
            uint64_t v48 = v46 >> 3;
            uint64_t v50 = v48 - 1;
            BOOL v49 = v48 < 1;
            uint64_t v51 = v48 + 62;
            if (!v49) {
              uint64_t v51 = v50;
            }
            uint64_t v52 = v45[1];
            *(void *)((char *)&v47[v52 + 8] + (v51 & 0xFFFFFFFFFFFFFFC0)) = v31;
            uint64_t v53 = v52 - (v51 & 0xFFFFFFFFFFFFFFF8);
            if (v53 >= 0) {
              char v54 = 1 << v53;
            }
            else {
              char v54 = 0;
            }
            *((unsigned char *)v47 + v52 / 8) |= v54;
            if (__OFADD__(v52, 1)) {
              goto LABEL_77;
            }
            v45[1] = v52 + 1;
            uint64_t result = (uint64_t *)swift_bridgeObjectRelease();
          }
          if (a4 == ++a3) {
            return (uint64_t *)swift_bridgeObjectRelease();
          }
        }
        __break(1u);
LABEL_73:
        __break(1u);
LABEL_74:
        __break(1u);
LABEL_75:
        __break(1u);
LABEL_76:
        __break(1u);
LABEL_77:
        __break(1u);
LABEL_78:
        __break(1u);
LABEL_79:
        __break(1u);
LABEL_80:
        __break(1u);
LABEL_81:
        __break(1u);
LABEL_82:
        __break(1u);
LABEL_83:
        __break(1u);
LABEL_84:
        __break(1u);
      }
      __break(1u);
LABEL_86:
      __break(1u);
LABEL_87:
      __break(1u);
LABEL_88:
      __break(1u);
LABEL_89:
      __break(1u);
LABEL_90:
      __break(1u);
LABEL_91:
      __break(1u);
LABEL_92:
      __break(1u);
LABEL_93:
      __break(1u);
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_220809E4C();
      swift_allocError();
      *(void *)uint64_t v15 = 0xD00000000000002DLL;
      *(void *)(v15 + 8) = 0x8000000220940000;
      *(unsigned char *)(v15 + 16) = 0;
      return (uint64_t *)swift_willThrow();
    }
  }
  return result;
}

unint64_t sub_22084C688(unint64_t result, int64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t (*a12)(long long *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (a2 == a3) {
    return result;
  }
  uint64_t v14 = a2;
  if (a3 < a2)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (*(void *)(a8 + 16) <= result)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (a2 >= a3) {
    goto LABEL_24;
  }
  if (a2 < 0)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v29 = *(void *)(a8 + 8 * result + 32);
  if (*(void *)(v29 + 16) <= (unint64_t)a2) {
    goto LABEL_25;
  }
  uint64_t v16 = (long long *)(v29 + 32 + 48 * a2);
  long long v17 = v16[1];
  long long v27 = *v16;
  v28[0] = v17;
  *(_OWORD *)((char *)v28 + 9) = *(long long *)((char *)v16 + 25);
  uint64_t v26 = a3 - 1;
  if (a3 - 1 == a2)
  {
    uint64_t v18 = a5;
    if (a5 >= a4) {
      goto LABEL_12;
    }
    __break(1u);
  }
  uint64_t v18 = *((void *)&v28[0] + 1);
  if (*((uint64_t *)&v28[0] + 1) < a4)
  {
LABEL_32:
    __break(1u);
    return result;
  }
LABEL_12:
  uint64_t result = a12(&v27, a4, v18, a6, a7, a8, a9, a10, a11);
  if (!v12)
  {
    uint64_t v25 = a7;
    if (v14 + 1 != a3)
    {
      uint64_t v21 = (long long *)(v29 + 48 * v14 + 80);
      while (v14 + 1 < a3)
      {
        if ((unint64_t)(v14 + 1) >= *(void *)(v29 + 16)) {
          goto LABEL_25;
        }
        long long v22 = v21[1];
        long long v27 = *v21;
        v28[0] = v22;
        *(_OWORD *)((char *)v28 + 9) = *(long long *)((char *)v21 + 25);
        if (a3 - 2 == v14)
        {
          uint64_t v23 = a5;
          if (a5 < 0) {
            goto LABEL_26;
          }
        }
        else
        {
          uint64_t v23 = *((void *)&v28[0] + 1);
          if ((*((void *)&v28[0] + 1) & 0x8000000000000000) != 0) {
            goto LABEL_27;
          }
        }
        uint64_t result = a12(&v27, 0, v23, a6, v25, a8, a9, a10, a11);
        ++v14;
        v21 += 3;
        if (v26 == v14) {
          return result;
        }
      }
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
  }
  return result;
}

unint64_t sub_22084C880()
{
  unint64_t result = qword_267F18B88;
  if (!qword_267F18B88)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26AD41170);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F18B88);
  }
  return result;
}

__n128 sub_22084C8DC@<Q0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char *a3@<X2>, __n128 *a4@<X8>)
{
  unsigned __int8 v4 = *a3;
  unint64_t v5 = *((void *)a3 + 1);
  unint64_t v6 = *((void *)a3 + 2);
  unint64_t v7 = *((void *)a3 + 3);
  unsigned __int8 v8 = a3[32];
  unint64_t v9 = *((void *)a3 + 5);
  int v10 = a3[48];
  int v38 = a3[49];
  int v39 = v10;
  unsigned __int8 v11 = a3[50];
  unsigned __int8 v12 = a3[51];
  unsigned __int8 v13 = a3[52];
  unsigned __int8 v20 = v4;
  LOBYTE(v25) = v4;
  *((void *)&v25 + 1) = v5;
  *(void *)&long long v26 = v6;
  *((void *)&v26 + 1) = v7;
  LOBYTE(v27) = v8;
  uint64_t v14 = sub_2208BA6D8(a1, a2);
  *((void *)&v27 + 1) = v9;
  LOBYTE(v28) = v39;
  BYTE1(v28) = v38;
  BYTE2(v28) = v11;
  BYTE3(v28) = v12;
  BYTE4(v28) = v13;
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_2208B8FC4((uint64_t)v14, (char *)&v25, (uint64_t)v34);
  if (v22)
  {
    sub_22080B88C(a1, a2);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  else
  {
    int v19 = v14;
    sub_2208B9504((uint64_t)v36);
    __n128 v17 = v36[1];
    __n128 v18 = v36[0];
    unint64_t v16 = v37;
    long long v31 = v34[6];
    long long v32 = v34[7];
    uint64_t v33 = v35;
    long long v27 = v34[2];
    long long v28 = v34[3];
    long long v29 = v34[4];
    long long v30 = v34[5];
    long long v25 = v34[0];
    long long v26 = v34[1];
    sub_220850298((uint64_t)v36);
    sub_220850224((uint64_t)&v25);
    sub_22080B88C(a1, a2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    a4->n128_u64[0] = (unint64_t)v19;
    a4->n128_u8[8] = v20;
    a4[1].n128_u64[0] = v5;
    a4[1].n128_u64[1] = v6;
    a4[2].n128_u64[0] = v7;
    a4[2].n128_u8[8] = v8;
    a4[3].n128_u64[0] = v9;
    a4[3].n128_u8[8] = v39;
    a4[3].n128_u8[9] = v38;
    a4[3].n128_u8[10] = v11;
    a4[3].n128_u8[11] = v12;
    a4[3].n128_u8[12] = v13;
    __n128 result = v17;
    a4[4] = v18;
    a4[5] = v17;
    a4[6].n128_u64[0] = v16;
  }
  return result;
}

uint64_t sub_22084CBCC(int64_t a1, void *a2, char **a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v51 = a5;
  uint64_t v10 = sub_22093E610();
  uint64_t result = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v52 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v13 = a2[10];
  uint64_t v58 = a2[12];
  if (v13 <= a1)
  {
LABEL_45:
    uint64_t v54 = 0;
    unint64_t v55 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_22093EEA0();
    sub_22093E6C0();
    v53[0] = a1;
    sub_22093F1A0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v53[0] = v13;
    sub_22093F1A0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    uint64_t result = sub_22093F090();
    __break(1u);
    return result;
  }
  uint64_t v14 = a2[11];
  if (v14 < 0)
  {
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  uint64_t v45 = a4;
  uint64_t v46 = v5;
  if (!v14) {
    return result;
  }
  int64_t v15 = a1 * v14;
  if ((unsigned __int128)(a1 * (__int128)v14) >> 64 != (a1 * v14) >> 63) {
    goto LABEL_43;
  }
  uint64_t v16 = 0;
  int64_t v17 = a2[8];
  uint64_t v50 = v14 - 1;
  int64_t v48 = a1 * v14;
  uint64_t v49 = v58 + 32;
  uint64_t v18 = v17 - 1;
  uint64_t v47 = v14;
  while (1)
  {
    if (v16 == v14)
    {
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v15 < 0) {
      goto LABEL_38;
    }
    uint64_t v19 = v15 + v16;
    unint64_t v20 = *(void *)(v58 + 16);
    if (v15 + v16 >= v20) {
      goto LABEL_39;
    }
    uint64_t v21 = v19 + 1;
    if (v19 + 1 >= v20) {
      goto LABEL_40;
    }
    uint64_t v22 = *(void *)(v49 + 8 * v19);
    uint64_t v23 = *(void *)(v49 + 8 * v21);
    if (v16 == v50)
    {
      if (v22 < v23)
      {
        while (1)
        {
          int v24 = *(unsigned __int8 *)(v18 + v23);
          if (v24 != 13 && v24 != 10) {
            break;
          }
          if (v22 >= --v23)
          {
            uint64_t v23 = v22;
            break;
          }
        }
      }
    }
    else
    {
      v23 -= v22 < v23;
    }
    if (!v17) {
      goto LABEL_44;
    }
    a1 = v23 - v22;
    if (__OFSUB__(v23, v22)) {
      goto LABEL_41;
    }
    int64_t v13 = v17;
    uint64_t v26 = v17 + v22;
    sub_2208E542C(v17 + v22, v23 - v22);
    long long v27 = *a3;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      long long v27 = sub_22081C5B4(0, *((void *)v27 + 2) + 1, 1, v27);
    }
    unint64_t v29 = *((void *)v27 + 2);
    unint64_t v28 = *((void *)v27 + 3);
    if (v29 >= v28 >> 1) {
      long long v27 = sub_22081C5B4((char *)(v28 > 1), v29 + 1, 1, v27);
    }
    *((void *)v27 + 2) = v29 + 1;
    v27[v29 + 32] = 0;
    *a3 = v27;
    sub_22093E600();
    uint64_t v30 = sub_22093E5A0();
    if (!v31) {
      break;
    }
    uint64_t v32 = v30;
    uint64_t v33 = v31;
    uint64_t v34 = v51;
    a1 = *v51;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v34 = a1;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_22081B71C(0, *(void *)(a1 + 16) + 1, 1, (char *)a1);
      a1 = result;
      *uint64_t v51 = result;
    }
    unint64_t v36 = *(void *)(a1 + 16);
    unint64_t v35 = *(void *)(a1 + 24);
    if (v36 >= v35 >> 1)
    {
      uint64_t result = (uint64_t)sub_22081B71C((char *)(v35 > 1), v36 + 1, 1, (char *)a1);
      a1 = result;
      *uint64_t v51 = result;
    }
    ++v16;
    *(void *)(a1 + 16) = v36 + 1;
    unint64_t v37 = a1 + 16 * v36;
    *(void *)(v37 + 32) = v32;
    *(void *)(v37 + 40) = v33;
    uint64_t v14 = v47;
    int64_t v15 = v48;
    int64_t v17 = v13;
    if (v16 == v47) {
      return result;
    }
  }
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18BB0);
  uint64_t v56 = v38;
  uint64_t v57 = sub_2208502C4((unint64_t *)&qword_267F18BB8, &qword_267F18BB0);
  uint64_t v54 = v26;
  unint64_t v55 = a1;
  int v39 = __swift_project_boxed_opaque_existential_1(&v54, v38);
  if (*v39) {
    uint64_t v40 = (unsigned char *)(*v39 + v39[1]);
  }
  else {
    uint64_t v40 = 0;
  }
  sub_220848DD4((unsigned char *)*v39, v40, v53);
  uint64_t v41 = v53[0];
  uint64_t v42 = v53[1];
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v54);
  sub_2208501D0();
  swift_allocError();
  *(void *)uint64_t v43 = v45;
  *(void *)(v43 + 8) = v16;
  *(void *)(v43 + 16) = v41;
  *(void *)(v43 + 24) = v42;
  *(void *)(v43 + 32) = 0;
  *(unsigned char *)(v43 + 40) = 0;
  return swift_willThrow();
}

uint64_t sub_22084D0F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t **a4, uint64_t a5)
{
  uint64_t v101 = a5;
  uint64_t v9 = sub_22093E610();
  uint64_t result = MEMORY[0x270FA5388](v9 - 8);
  long long v93 = (char *)&v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (uint64_t)a4[11];
  char v100 = a4[12];
  if (v12 <= a1)
  {
LABEL_125:
    long long v107 = *a4;
    *(void *)&long long v104 = 0;
    *((void *)&v104 + 1) = 0xE000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_22093EEA0();
    sub_22093E6C0();
    uint64_t v102 = a1;
    sub_22093F1A0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v102 = v12;
    sub_22093F1A0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    uint64_t result = sub_22093F090();
    __break(1u);
    return result;
  }
  if (a2 == a3) {
    return result;
  }
  if (a3 < a2)
  {
LABEL_113:
    __break(1u);
LABEL_114:
    __break(1u);
LABEL_115:
    __break(1u);
LABEL_116:
    __break(1u);
LABEL_117:
    __break(1u);
LABEL_118:
    __break(1u);
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
    goto LABEL_125;
  }
  int64_t v13 = a4[8];
  char v98 = v100 + 4;
  uint64_t v99 = v12 - 1;
  long long v94 = (char **)(v101 + 112);
  long long v107 = (uint64_t *)(v101 + 224);
  uint64_t v14 = (uint64_t)v13 - 1;
  uint64_t v92 = v12;
  uint64_t v95 = a1;
  uint64_t v96 = v13;
  uint64_t v97 = a3;
  while (1)
  {
    if (a2 >= a3)
    {
      __break(1u);
LABEL_95:
      __break(1u);
LABEL_96:
      __break(1u);
LABEL_97:
      __break(1u);
LABEL_98:
      __break(1u);
LABEL_99:
      __break(1u);
LABEL_100:
      __break(1u);
LABEL_101:
      __break(1u);
LABEL_102:
      __break(1u);
LABEL_103:
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
      goto LABEL_113;
    }
    uint64_t v15 = a2 * v12;
    if ((unsigned __int128)(a2 * (__int128)v12) >> 64 != (a2 * v12) >> 63) {
      goto LABEL_95;
    }
    BOOL v16 = __OFADD__(v15, a1);
    unint64_t v17 = v15 + a1;
    if (v16) {
      goto LABEL_96;
    }
    if ((v17 & 0x8000000000000000) != 0) {
      goto LABEL_97;
    }
    unint64_t v18 = v100[2];
    if (v17 >= v18) {
      goto LABEL_98;
    }
    unint64_t v19 = v17 + 1;
    if (v17 + 1 >= v18) {
      goto LABEL_99;
    }
    uint64_t v20 = v98[v17];
    uint64_t v21 = v98[v19];
    if (v99 == a1)
    {
      if (v20 < v21)
      {
        while (1)
        {
          int v22 = *(unsigned __int8 *)(v14 + v21);
          if (v22 != 13 && v22 != 10) {
            break;
          }
          if (v20 >= --v21)
          {
            uint64_t v21 = v20;
            break;
          }
        }
      }
    }
    else
    {
      v21 -= v20 < v21;
    }
    if (!v13) {
      goto LABEL_114;
    }
    uint64_t v24 = v21 - v20;
    if (__OFSUB__(v21, v20)) {
      goto LABEL_100;
    }
    long long v25 = (unsigned __int8 *)v13 + v20;
    if (sub_2208BAC0C((uint64_t)v13 + v20, v24, *(void *)(v101 + 104)))
    {
      a4 = (uint64_t **)*v107;
      swift_beginAccess();
      uint64_t v26 = a4[2];
      if (!v26) {
        goto LABEL_115;
      }
      uint64_t v27 = v26[1];
      uint64_t v28 = v27 + 1;
      if (__OFADD__(v27, 1)) {
        goto LABEL_101;
      }
      unint64_t v29 = v107;
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      a4 = (uint64_t **)*v29;
      uint64_t v31 = a4 + 2;
      if (isUniquelyReferenced_nonNull_native)
      {
        swift_beginAccess();
        uint64_t v32 = *v31;
        if (!*v31) {
          goto LABEL_119;
        }
        uint64_t v33 = *v32;
        if (*v32 < v28)
        {
          if (v33 + 0x4000000000000000 < 0) {
            goto LABEL_107;
          }
          uint64_t v34 = 2 * v33;
          if (v34 <= v28) {
            uint64_t v35 = v28;
          }
          else {
            uint64_t v35 = v34;
          }
          sub_22088F714((uint64_t)v32, v35, (uint64_t *)&v104);
          unint64_t v36 = a4[2];
          if (!v36) {
            goto LABEL_123;
          }
          a3 = v97;
          if (v36[1] < 0) {
            goto LABEL_109;
          }
          MEMORY[0x223C6B140]();
          *(_OWORD *)uint64_t v31 = v104;
          goto LABEL_66;
        }
      }
      else
      {
        swift_beginAccess();
        uint64_t v61 = *v31;
        if (!v61) {
          goto LABEL_118;
        }
        uint64_t v62 = *v61;
        if (*v61 < v28)
        {
          if (v62 + 0x4000000000000000 < 0) {
            goto LABEL_108;
          }
          if (2 * v62 <= v28) {
            uint64_t v62 = v28;
          }
          else {
            v62 *= 2;
          }
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413D8);
        uint64_t v63 = swift_allocObject();
        sub_22088E6B0((uint64_t)v61, v62, (uint64_t *)&v104);
        *(_OWORD *)(v63 + 16) = v104;
        swift_release();
        *long long v107 = v63;
        a4 = (uint64_t **)v63;
        a1 = v95;
      }
      a3 = v97;
LABEL_66:
      uint64_t result = swift_beginAccess();
      uint64_t v64 = a4[2];
      if (!v64) {
        goto LABEL_116;
      }
      uint64_t v65 = v64[2];
      BOOL v16 = __OFADD__(v65, 1);
      uint64_t v66 = v65 + 1;
      int64_t v13 = v96;
      if (v16) {
        goto LABEL_102;
      }
      v64[2] = v66;
      uint64_t v67 = v64[1];
      BOOL v16 = __OFADD__(v67, 1);
      uint64_t v68 = v67 + 1;
      if (v16) {
        goto LABEL_103;
      }
      v64[1] = v68;
      goto LABEL_6;
    }
    uint64_t v37 = sub_2208BC93C(v25, v24);
    if (v38) {
      break;
    }
    a4 = (uint64_t **)v37;
    int v39 = (void *)*v107;
    swift_beginAccess();
    uint64_t v40 = v39[2];
    if (!v40) {
      goto LABEL_117;
    }
    uint64_t v41 = *(void *)(v40 + 8);
    uint64_t v42 = v41 + 1;
    if (__OFADD__(v41, 1)) {
      goto LABEL_104;
    }
    uint64_t v43 = v107;
    int v44 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v45 = *v43;
    uint64_t v46 = (uint64_t **)(*v43 + 16);
    if (v44)
    {
      swift_beginAccess();
      uint64_t v47 = *v46;
      if (!*v46) {
        goto LABEL_121;
      }
      uint64_t v48 = *v47;
      if (*v47 < v42)
      {
        if (v48 + 0x4000000000000000 < 0) {
          goto LABEL_111;
        }
        uint64_t v49 = 2 * v48;
        if (v49 <= v42) {
          uint64_t v50 = v42;
        }
        else {
          uint64_t v50 = v49;
        }
        sub_22088F714((uint64_t)v47, v50, (uint64_t *)&v104);
        uint64_t v51 = *(void *)(v45 + 16);
        if (!v51) {
          goto LABEL_124;
        }
        if ((*(void *)(v51 + 8) & 0x8000000000000000) != 0) {
          goto LABEL_112;
        }
        MEMORY[0x223C6B140]();
        *(_OWORD *)uint64_t v46 = v104;
      }
    }
    else
    {
      swift_beginAccess();
      uint64_t v69 = *v46;
      if (!v69) {
        goto LABEL_122;
      }
      a1 = *v69;
      if (*v69 < v42)
      {
        if (a1 + 0x4000000000000000 < 0) {
          goto LABEL_110;
        }
        if (2 * a1 <= v42) {
          a1 = v42;
        }
        else {
          a1 *= 2;
        }
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413D8);
      uint64_t v70 = swift_allocObject();
      sub_22088E6B0((uint64_t)v69, a1, (uint64_t *)&v104);
      *(_OWORD *)(v70 + 16) = v104;
      swift_release();
      *long long v107 = v70;
      uint64_t v45 = v70;
      a1 = v95;
    }
    uint64_t result = swift_beginAccess();
    uint64_t v71 = *(void **)(v45 + 16);
    if (!v71) {
      goto LABEL_120;
    }
    uint64_t v72 = *v71 + 7;
    a3 = v97;
    if (__OFADD__(*v71, 7)) {
      goto LABEL_105;
    }
    uint64_t v73 = v71 + 8;
    if (v72 < 0) {
      uint64_t v72 = *v71 + 14;
    }
    uint64_t v74 = v72 >> 3;
    uint64_t v76 = v74 - 1;
    BOOL v75 = v74 < 1;
    uint64_t v77 = v74 + 62;
    if (!v75) {
      uint64_t v77 = v76;
    }
    *(void *)((char *)&v73[v71[1] + 8] + (v77 & 0xFFFFFFFFFFFFFFC0)) = a4;
    uint64_t v78 = v71[1];
    uint64_t v79 = v78 + 7;
    if (v78 >= 0) {
      uint64_t v79 = v71[1];
    }
    uint64_t v80 = v79 >> 3;
    uint64_t v81 = v78 - (v79 & 0xFFFFFFFFFFFFFFF8);
    if (v81 >= 0) {
      char v82 = 1 << v81;
    }
    else {
      char v82 = 0;
    }
    *((unsigned char *)v73 + v80) |= v82;
    BOOL v16 = __OFADD__(v78, 1);
    uint64_t v83 = v78 + 1;
    if (v16) {
      goto LABEL_106;
    }
    v71[1] = v83;
    int64_t v13 = v96;
LABEL_6:
    if (++a2 == a3) {
      return result;
    }
  }
  uint64_t v52 = v94;
  sub_2208E542C((uint64_t)v25, v24);
  uint64_t v53 = *v52;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v53 = sub_22081C5B4(0, *((void *)v53 + 2) + 1, 1, v53);
  }
  unint64_t v55 = *((void *)v53 + 2);
  unint64_t v54 = *((void *)v53 + 3);
  if (v55 >= v54 >> 1) {
    uint64_t v53 = sub_22081C5B4((char *)(v54 > 1), v55 + 1, 1, v53);
  }
  *((void *)v53 + 2) = v55 + 1;
  v53[v55 + 32] = 0;
  *long long v94 = v53;
  sub_22093E600();
  uint64_t v56 = sub_22093E5A0();
  if (v57)
  {
    uint64_t v58 = sub_2208BCA5C(v56, v57);
    char v60 = v59;
    swift_bridgeObjectRelease();
    if ((v60 & 1) == 0)
    {
      a4 = (uint64_t **)v107;
      uint64_t result = sub_2208F1E18(v58, 0);
      uint64_t v12 = v92;
      a1 = v95;
      int64_t v13 = v96;
      a3 = v97;
      goto LABEL_6;
    }
  }
  uint64_t v84 = *(void *)(v101 + 176);
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18BB0);
  uint64_t v105 = v85;
  uint64_t v106 = sub_2208502C4((unint64_t *)&qword_267F18BB8, &qword_267F18BB0);
  *(void *)&long long v104 = v25;
  *((void *)&v104 + 1) = v24;
  long long v86 = __swift_project_boxed_opaque_existential_1(&v104, v85);
  if (*v86) {
    long long v87 = (unsigned char *)(*v86 + v86[1]);
  }
  else {
    long long v87 = 0;
  }
  sub_220848DD4((unsigned char *)*v86, v87, v103);
  uint64_t v88 = v103[0];
  uint64_t v89 = v103[1];
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v104);
  sub_2208501D0();
  swift_allocError();
  *(void *)uint64_t v90 = a2;
  *(void *)(v90 + 8) = v84;
  *(void *)(v90 + 16) = 0;
  *(void *)(v90 + 24) = v88;
  *(void *)(v90 + 32) = v89;
  *(unsigned char *)(v90 + 40) = 1;
  return swift_willThrow();
}

uint64_t sub_22084DA14(uint64_t result, uint64_t a2, uint64_t a3, void *a4, uint64_t *a5)
{
  uint64_t v5 = result;
  uint64_t v82 = a4[12];
  uint64_t v87 = a4[11];
  if (v87 <= result)
  {
LABEL_116:
    *(void *)&long long v84 = 0;
    *((void *)&v84 + 1) = 0xE000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_22093EEA0();
    sub_22093E6C0();
    sub_22093F1A0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22093F1A0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    uint64_t result = sub_22093F090();
    __break(1u);
    return result;
  }
  uint64_t v7 = a2;
  if (a2 == a3) {
    return result;
  }
  if (a3 < a2)
  {
LABEL_104:
    __break(1u);
LABEL_105:
    __break(1u);
LABEL_106:
    __break(1u);
LABEL_107:
    __break(1u);
LABEL_108:
    __break(1u);
LABEL_109:
    __break(1u);
LABEL_110:
    __break(1u);
LABEL_111:
    __break(1u);
LABEL_112:
    __break(1u);
LABEL_113:
    __break(1u);
LABEL_114:
    __break(1u);
LABEL_115:
    __break(1u);
    goto LABEL_116;
  }
  uint64_t v9 = a4[8];
  uint64_t v80 = v82 + 32;
  uint64_t v81 = v87 - 1;
  uint64_t v10 = v9 - 1;
  uint64_t v78 = result;
  uint64_t v79 = v9;
  while (1)
  {
    if (v7 >= a3)
    {
      __break(1u);
LABEL_87:
      __break(1u);
LABEL_88:
      __break(1u);
LABEL_89:
      __break(1u);
LABEL_90:
      __break(1u);
LABEL_91:
      __break(1u);
LABEL_92:
      __break(1u);
LABEL_93:
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
LABEL_96:
      __break(1u);
LABEL_97:
      __break(1u);
LABEL_98:
      __break(1u);
LABEL_99:
      __break(1u);
LABEL_100:
      __break(1u);
LABEL_101:
      __break(1u);
LABEL_102:
      __break(1u);
LABEL_103:
      __break(1u);
      goto LABEL_104;
    }
    uint64_t v11 = v7 * v87;
    if ((unsigned __int128)(v7 * (__int128)v87) >> 64 != (v7 * v87) >> 63) {
      goto LABEL_87;
    }
    BOOL v12 = __OFADD__(v11, v5);
    unint64_t v13 = v11 + v5;
    if (v12) {
      goto LABEL_88;
    }
    if ((v13 & 0x8000000000000000) != 0) {
      goto LABEL_89;
    }
    unint64_t v14 = *(void *)(v82 + 16);
    if (v13 >= v14) {
      goto LABEL_90;
    }
    unint64_t v15 = v13 + 1;
    if (v13 + 1 >= v14) {
      goto LABEL_91;
    }
    uint64_t v16 = *(void *)(v80 + 8 * v13);
    uint64_t v17 = *(void *)(v80 + 8 * v15);
    if (v81 == v5)
    {
      if (v16 < v17)
      {
        while (1)
        {
          int v18 = *(unsigned __int8 *)(v10 + v17);
          if (v18 != 13 && v18 != 10) {
            break;
          }
          if (v16 >= --v17)
          {
            uint64_t v17 = v16;
            break;
          }
        }
      }
    }
    else
    {
      v17 -= v16 < v17;
    }
    if (!v9) {
      goto LABEL_105;
    }
    uint64_t v20 = v17 - v16;
    if (__OFSUB__(v17, v16)) {
      goto LABEL_92;
    }
    uint64_t v21 = v9 + v16;
    if (sub_2208BAC0C(v9 + v16, v17 - v16, a5[13]))
    {
      uint64_t v22 = a5[30];
      swift_beginAccess();
      uint64_t v23 = *(void *)(v22 + 16);
      if (!v23) {
        goto LABEL_106;
      }
      uint64_t v24 = *(void *)(v23 + 8);
      uint64_t v25 = v24 + 1;
      if (__OFADD__(v24, 1)) {
        goto LABEL_93;
      }
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v27 = a5[30];
      uint64_t v28 = (uint64_t **)(v27 + 16);
      if (isUniquelyReferenced_nonNull_native)
      {
        swift_beginAccess();
        unint64_t v29 = *v28;
        if (!*v28) {
          goto LABEL_111;
        }
        uint64_t v30 = *v29;
        if (*v29 < v25)
        {
          if (v30 + 0x4000000000000000 < 0) {
            goto LABEL_98;
          }
          uint64_t v31 = 2 * v30;
          if (v31 <= v25) {
            uint64_t v32 = v25;
          }
          else {
            uint64_t v32 = v31;
          }
          sub_22088FD6C((uint64_t)v29, v32, (uint64_t *)&v84);
          uint64_t v33 = *(void *)(v27 + 16);
          if (!v33) {
            goto LABEL_114;
          }
          if ((*(void *)(v33 + 8) & 0x8000000000000000) != 0) {
            goto LABEL_100;
          }
          MEMORY[0x223C6B140]();
          *(_OWORD *)uint64_t v28 = v84;
        }
      }
      else
      {
        swift_beginAccess();
        uint64_t v49 = *v28;
        if (!v49) {
          goto LABEL_110;
        }
        uint64_t v50 = *v49;
        if (*v49 < v25)
        {
          if (v50 + 0x4000000000000000 < 0) {
            goto LABEL_99;
          }
          if (2 * v50 <= v25) {
            uint64_t v50 = v25;
          }
          else {
            v50 *= 2;
          }
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41120);
        uint64_t v51 = swift_allocObject();
        sub_22088ED7C((uint64_t)v49, v50, (uint64_t *)&v84);
        *(_OWORD *)(v51 + 16) = v84;
        swift_release();
        a5[30] = v51;
        uint64_t v27 = v51;
        uint64_t v5 = v78;
      }
      uint64_t result = swift_beginAccess();
      uint64_t v52 = *(void *)(v27 + 16);
      if (!v52) {
        goto LABEL_107;
      }
      uint64_t v53 = *(void *)(v52 + 16);
      BOOL v12 = __OFADD__(v53, 1);
      uint64_t v54 = v53 + 1;
      uint64_t v9 = v79;
      if (v12) {
        goto LABEL_94;
      }
      uint64_t v56 = *(void *)(v52 + 8);
      unint64_t v55 = (void *)(v52 + 8);
      v55[1] = v54;
      uint64_t v57 = v56 + 1;
      if (__OFADD__(v56, 1)) {
        goto LABEL_95;
      }
      goto LABEL_5;
    }
    uint64_t v34 = a5[15];
    uint64_t v35 = a5[24];
    char v36 = sub_2208BAC0C(v21, v20, a5[14]);
    if ((v36 & 1) == 0 && (sub_2208BAC0C(v21, v20, v34) & 1) == 0) {
      break;
    }
    uint64_t v37 = a5[30];
    swift_beginAccess();
    uint64_t v38 = *(void *)(v37 + 16);
    if (!v38) {
      goto LABEL_108;
    }
    uint64_t v39 = *(void *)(v38 + 8);
    uint64_t v40 = v39 + 1;
    uint64_t v5 = v78;
    if (__OFADD__(v39, 1)) {
      goto LABEL_96;
    }
    int v41 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v42 = a5[30];
    uint64_t v43 = (uint64_t **)(v42 + 16);
    if (v41)
    {
      swift_beginAccess();
      int v44 = *v43;
      if (!*v43) {
        goto LABEL_112;
      }
      uint64_t v45 = *v44;
      if (*v44 < v40)
      {
        if (v45 + 0x4000000000000000 < 0) {
          goto LABEL_101;
        }
        uint64_t v46 = 2 * v45;
        if (v46 <= v40) {
          uint64_t v47 = v40;
        }
        else {
          uint64_t v47 = v46;
        }
        sub_22088FD6C((uint64_t)v44, v47, (uint64_t *)&v84);
        uint64_t v48 = *(void *)(v42 + 16);
        if (!v48) {
          goto LABEL_115;
        }
        if ((*(void *)(v48 + 8) & 0x8000000000000000) != 0) {
          goto LABEL_103;
        }
        MEMORY[0x223C6B140]();
        *(_OWORD *)uint64_t v43 = v84;
      }
    }
    else
    {
      swift_beginAccess();
      uint64_t v58 = *v43;
      if (!v58) {
        goto LABEL_113;
      }
      uint64_t v59 = *v58;
      if (*v58 < v40)
      {
        if (v59 + 0x4000000000000000 < 0) {
          goto LABEL_102;
        }
        if (2 * v59 <= v40) {
          uint64_t v59 = v40;
        }
        else {
          v59 *= 2;
        }
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41120);
      uint64_t v60 = swift_allocObject();
      sub_22088ED7C((uint64_t)v58, v59, (uint64_t *)&v84);
      *(_OWORD *)(v60 + 16) = v84;
      swift_release();
      a5[30] = v60;
      uint64_t v42 = v60;
      uint64_t v5 = v78;
    }
    uint64_t result = swift_beginAccess();
    uint64_t v61 = *(void **)(v42 + 16);
    if (!v61) {
      goto LABEL_109;
    }
    uint64_t v62 = *v61 + 7;
    if (__OFADD__(*v61, 7)) {
      goto LABEL_97;
    }
    uint64_t v64 = v61[1];
    unint64_t v55 = v61 + 1;
    uint64_t v63 = v64;
    uint64_t v65 = v55 + 7;
    uint64_t v66 = v62 / 8;
    uint64_t v68 = v66 - 1;
    BOOL v67 = v66 < 1;
    uint64_t v69 = v66 + 62;
    if (!v67) {
      uint64_t v69 = v68;
    }
    *((unsigned char *)v65 + v63 + (v69 & 0xFFFFFFFFFFFFFFC0) + 64) = v36 & 1;
    uint64_t v70 = v63 - (v69 & 0xFFFFFFFFFFFFFFF8);
    if (v70 >= 0) {
      char v71 = 1 << v70;
    }
    else {
      char v71 = 0;
    }
    *((unsigned char *)v65 + v63 / 8) |= v71;
    uint64_t v57 = v63 + 1;
    if (__OFADD__(v63, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v9 = v79;
LABEL_5:
    ++v7;
    *unint64_t v55 = v57;
    if (v7 == a3) {
      return result;
    }
  }
  uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18BB0);
  uint64_t v85 = v72;
  uint64_t v86 = sub_2208502C4((unint64_t *)&qword_267F18BB8, &qword_267F18BB0);
  *(void *)&long long v84 = v21;
  *((void *)&v84 + 1) = v20;
  uint64_t v73 = __swift_project_boxed_opaque_existential_1(&v84, v72);
  if (*v73) {
    uint64_t v74 = (unsigned char *)(*v73 + v73[1]);
  }
  else {
    uint64_t v74 = 0;
  }
  sub_220848DD4((unsigned char *)*v73, v74, v83);
  uint64_t v75 = v83[0];
  uint64_t v76 = v83[1];
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v84);
  sub_2208501D0();
  swift_allocError();
  *(void *)uint64_t v77 = v7;
  *(void *)(v77 + 8) = v35;
  *(void *)(v77 + 16) = 0;
  *(void *)(v77 + 24) = v75;
  *(void *)(v77 + 32) = v76;
  *(unsigned char *)(v77 + 40) = 1;
  return swift_willThrow();
}

uint64_t sub_22084E1DC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t *a5)
{
  char v71 = a5;
  uint64_t v9 = sub_22093E610();
  uint64_t result = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v59 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a4[11];
  uint64_t v65 = a4[12];
  if (v12 <= a1)
  {
LABEL_76:
    uint64_t v58 = v12;
    *(void *)&long long v68 = 0;
    *((void *)&v68 + 1) = 0xE000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_22093EEA0();
    sub_22093E6C0();
    uint64_t v66 = a1;
    sub_22093F1A0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v66 = v58;
    sub_22093F1A0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    uint64_t result = sub_22093F090();
    __break(1u);
    return result;
  }
  if (a2 == a3) {
    return result;
  }
  if (a3 < a2)
  {
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
LABEL_74:
    __break(1u);
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  uint64_t v13 = a4[8];
  uint64_t v64 = v12 - 1;
  uint64_t v63 = v65 + 32;
  uint64_t v62 = (char **)(v71 + 14);
  unint64_t v14 = v71 + 28;
  uint64_t v58 = v12;
  uint64_t v60 = a1;
  uint64_t v61 = a3;
  while (1)
  {
    if (a2 >= a3)
    {
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
      goto LABEL_70;
    }
    uint64_t v15 = a2 * v12;
    if ((unsigned __int128)(a2 * (__int128)v12) >> 64 != (a2 * v12) >> 63) {
      goto LABEL_59;
    }
    BOOL v16 = __OFADD__(v15, a1);
    unint64_t v17 = v15 + a1;
    if (v16) {
      goto LABEL_60;
    }
    if ((v17 & 0x8000000000000000) != 0) {
      goto LABEL_61;
    }
    unint64_t v18 = *(void *)(v65 + 16);
    if (v17 >= v18) {
      goto LABEL_62;
    }
    unint64_t v19 = v17 + 1;
    if (v17 + 1 >= v18) {
      goto LABEL_63;
    }
    uint64_t v20 = *(void *)(v63 + 8 * v17);
    uint64_t v21 = *(void *)(v63 + 8 * v19);
    if (v64 == a1)
    {
      if (v20 < v21)
      {
        while (1)
        {
          int v22 = *(unsigned __int8 *)(v13 - 1 + v21);
          if (v22 != 13 && v22 != 10) {
            break;
          }
          if (v20 >= --v21)
          {
            uint64_t v21 = v20;
            break;
          }
        }
      }
    }
    else
    {
      v21 -= v20 < v21;
    }
    if (!v13) {
      goto LABEL_71;
    }
    uint64_t v24 = v21 - v20;
    if (__OFSUB__(v21, v20)) {
      goto LABEL_64;
    }
    uint64_t v25 = v13 + v20;
    if ((sub_2208BAC0C(v13 + v20, v24, v71[13]) & 1) == 0) {
      break;
    }
    uint64_t v26 = *v14;
    swift_beginAccess();
    uint64_t v27 = *(void *)(v26 + 16);
    if (!v27) {
      goto LABEL_72;
    }
    uint64_t v28 = *(void *)(v27 + 8);
    uint64_t v29 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      goto LABEL_65;
    }
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    a1 = *v14;
    uint64_t v31 = (uint64_t **)(*v14 + 16);
    if (isUniquelyReferenced_nonNull_native)
    {
      swift_beginAccess();
      uint64_t v32 = *v31;
      if (!*v31) {
        goto LABEL_74;
      }
      uint64_t v33 = *v32;
      if (*v32 < v29)
      {
        if (v33 + 0x4000000000000000 < 0) {
          goto LABEL_68;
        }
        uint64_t v34 = 2 * v33;
        if (v34 <= v29) {
          uint64_t v35 = v29;
        }
        else {
          uint64_t v35 = v34;
        }
        sub_22088F904((uint64_t)v32, v35, (uint64_t *)&v68);
        sub_220890508(*(void **)(a1 + 16));
        *(_OWORD *)(a1 + 16) = v68;
      }
    }
    else
    {
      swift_beginAccess();
      uint64_t v42 = *v31;
      if (!v42) {
        goto LABEL_75;
      }
      uint64_t v43 = *v42;
      if (*v42 < v29)
      {
        if (v43 + 0x4000000000000000 < 0) {
          goto LABEL_69;
        }
        if (2 * v43 <= v29) {
          uint64_t v43 = v29;
        }
        else {
          v43 *= 2;
        }
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413C8);
      uint64_t v44 = swift_allocObject();
      sub_22088E9D4((uint64_t)v42, v43, (uint64_t *)&v68);
      *(_OWORD *)(v44 + 16) = v68;
      swift_release();
      *unint64_t v14 = v44;
      a1 = v44;
    }
    uint64_t result = swift_beginAccess();
    uint64_t v45 = *(void *)(a1 + 16);
    a3 = v61;
    if (!v45) {
      goto LABEL_73;
    }
    uint64_t v46 = *(void *)(v45 + 16);
    BOOL v16 = __OFADD__(v46, 1);
    uint64_t v47 = v46 + 1;
    a1 = v60;
    if (v16) {
      goto LABEL_66;
    }
    *(void *)(v45 + 16) = v47;
    uint64_t v48 = *(void *)(v45 + 8);
    BOOL v16 = __OFADD__(v48, 1);
    uint64_t v49 = v48 + 1;
    if (v16) {
      goto LABEL_67;
    }
    *(void *)(v45 + 8) = v49;
LABEL_7:
    if (++a2 == a3) {
      return result;
    }
  }
  char v36 = v62;
  sub_2208E542C(v25, v24);
  uint64_t v37 = *v36;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v37 = sub_22081C5B4(0, *((void *)v37 + 2) + 1, 1, v37);
  }
  unint64_t v39 = *((void *)v37 + 2);
  unint64_t v38 = *((void *)v37 + 3);
  if (v39 >= v38 >> 1) {
    uint64_t v37 = sub_22081C5B4((char *)(v38 > 1), v39 + 1, 1, v37);
  }
  *((void *)v37 + 2) = v39 + 1;
  v37[v39 + 32] = 0;
  *uint64_t v62 = v37;
  sub_22093E600();
  uint64_t v40 = sub_22093E5A0();
  if (v41)
  {
    sub_2208F2244(v40, v41);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v12 = v58;
    a1 = v60;
    a3 = v61;
    goto LABEL_7;
  }
  uint64_t v50 = v71[22];
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18BB0);
  uint64_t v69 = v51;
  uint64_t v70 = sub_2208502C4((unint64_t *)&qword_267F18BB8, &qword_267F18BB0);
  *(void *)&long long v68 = v25;
  *((void *)&v68 + 1) = v24;
  uint64_t v52 = __swift_project_boxed_opaque_existential_1(&v68, v51);
  if (*v52) {
    uint64_t v53 = (unsigned char *)(*v52 + v52[1]);
  }
  else {
    uint64_t v53 = 0;
  }
  sub_220848DD4((unsigned char *)*v52, v53, v67);
  uint64_t v54 = v67[0];
  uint64_t v55 = v67[1];
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v68);
  sub_2208501D0();
  swift_allocError();
  *(void *)uint64_t v56 = a2;
  *(void *)(v56 + 8) = v50;
  *(void *)(v56 + 16) = v54;
  *(void *)(v56 + 24) = v55;
  *(void *)(v56 + 32) = 0;
  *(unsigned char *)(v56 + 40) = 0;
  return swift_willThrow();
}

uint64_t sub_22084E8C8(uint64_t result, uint64_t a2, uint64_t a3, void *a4, uint64_t *a5)
{
  uint64_t v5 = result;
  uint64_t v60 = *MEMORY[0x263EF8340];
  uint64_t v53 = a4[12];
  uint64_t v54 = a4[11];
  if (v54 <= result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_22093EEA0();
    sub_22093E6C0();
    sub_22093F1A0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22093F1A0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    uint64_t result = sub_22093F090();
    __break(1u);
  }
  else
  {
    uint64_t v7 = a2;
    if (a2 != a3)
    {
      if (a3 >= a2)
      {
        uint64_t v51 = v53 + 32;
        uint64_t v8 = a4[8];
        uint64_t v49 = a5 + 14;
        uint64_t v50 = result;
        uint64_t v9 = a5 + 28;
        while (v7 < a3)
        {
          uint64_t v12 = v7 * v54;
          if ((unsigned __int128)(v7 * (__int128)v54) >> 64 != (v7 * v54) >> 63) {
            goto LABEL_56;
          }
          BOOL v13 = __OFADD__(v12, v5);
          unint64_t v14 = v12 + v5;
          if (v13) {
            goto LABEL_57;
          }
          if ((v14 & 0x8000000000000000) != 0) {
            goto LABEL_58;
          }
          unint64_t v15 = *(void *)(v53 + 16);
          if (v14 >= v15) {
            goto LABEL_59;
          }
          unint64_t v16 = v14 + 1;
          if (v14 + 1 >= v15) {
            goto LABEL_60;
          }
          uint64_t v17 = *(void *)(v51 + 8 * v14);
          uint64_t v18 = *(void *)(v51 + 8 * v16);
          if (v54 - 1 == v5)
          {
            if (v17 < v18)
            {
              while (1)
              {
                int v19 = *(unsigned __int8 *)(v8 - 1 + v18);
                if (v19 != 13 && v19 != 10) {
                  break;
                }
                if (v17 >= --v18)
                {
                  uint64_t v18 = v17;
                  break;
                }
              }
            }
          }
          else
          {
            v18 -= v17 < v18;
          }
          if (!v8) {
            goto LABEL_68;
          }
          uint64_t v21 = v18 - v17;
          if (__OFSUB__(v18, v17)) {
            goto LABEL_61;
          }
          uint64_t v22 = v8 + v17;
          if (sub_2208BAC0C(v8 + v17, v21, a5[13]))
          {
            uint64_t v23 = *v9;
            swift_beginAccess();
            uint64_t v24 = *(void *)(v23 + 16);
            if (!v24) {
              goto LABEL_69;
            }
            uint64_t v25 = *(void *)(v24 + 8);
            uint64_t v26 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_62;
            }
            int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v28 = *v9;
            uint64_t v29 = (uint64_t **)(*v9 + 16);
            if (isUniquelyReferenced_nonNull_native)
            {
              swift_beginAccess();
              uint64_t v30 = *v29;
              if (!*v29) {
                goto LABEL_71;
              }
              uint64_t v31 = *v30;
              if (*v30 < v26)
              {
                if (v31 + 0x4000000000000000 < 0) {
                  goto LABEL_65;
                }
                uint64_t v32 = 2 * v31;
                if (v32 <= v26) {
                  uint64_t v33 = v26;
                }
                else {
                  uint64_t v33 = v32;
                }
                sub_22088F904((uint64_t)v30, v33, (uint64_t *)&v57);
                sub_2208907D8(*(void **)(v28 + 16));
                *(_OWORD *)(v28 + 16) = v57;
              }
            }
            else
            {
              swift_beginAccess();
              uint64_t v41 = *v29;
              if (!v41) {
                goto LABEL_72;
              }
              uint64_t v42 = *v41;
              if (*v41 < v26)
              {
                if (v42 + 0x4000000000000000 < 0) {
                  goto LABEL_66;
                }
                if (2 * v42 <= v26) {
                  uint64_t v42 = v26;
                }
                else {
                  v42 *= 2;
                }
              }
              __swift_instantiateConcreteTypeFromMangledName(&qword_267F188A0);
              uint64_t v43 = swift_allocObject();
              sub_22088F3E0((uint64_t)v41, v42, (uint64_t *)&v57);
              *(_OWORD *)(v43 + 16) = v57;
              swift_release();
              uint64_t *v9 = v43;
              uint64_t v28 = v43;
              uint64_t v5 = v50;
            }
            uint64_t result = swift_beginAccess();
            uint64_t v44 = *(void *)(v28 + 16);
            if (!v44) {
              goto LABEL_70;
            }
            uint64_t v45 = *(void *)(v44 + 16);
            BOOL v13 = __OFADD__(v45, 1);
            uint64_t v46 = v45 + 1;
            if (v13) {
              goto LABEL_63;
            }
            *(void *)(v44 + 16) = v46;
            uint64_t v47 = *(void *)(v44 + 8);
            BOOL v13 = __OFADD__(v47, 1);
            uint64_t v48 = v47 + 1;
            if (v13) {
              goto LABEL_64;
            }
            *(void *)(v44 + 8) = v48;
          }
          else
          {
            sub_2208E542C(v22, v21);
            uint64_t v34 = *v49;
            uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41170);
            uint64_t v58 = v35;
            uint64_t v59 = sub_2208502C4((unint64_t *)&qword_267F18B88, &qword_26AD41170);
            *(void *)&long long v57 = v34;
            char v36 = __swift_project_boxed_opaque_existential_1(&v57, v35);
            uint64_t v37 = *v36;
            size_t v38 = *(void *)(*v36 + 16);
            if (v38)
            {
              if (v38 <= 0xE)
              {
                memset(__dst, 0, sizeof(__dst));
                unsigned __int8 v56 = v38;
                memcpy(__dst, (const void *)(v37 + 32), v38);
                uint64_t v10 = *(void *)__dst;
                unint64_t v11 = *(unsigned int *)&__dst[8] | ((unint64_t)__dst[12] << 32) | ((unint64_t)__dst[13] << 40) | ((unint64_t)v56 << 48);
                swift_bridgeObjectRetain_n();
              }
              else
              {
                sub_22093DE70();
                swift_allocObject();
                swift_bridgeObjectRetain_n();
                uint64_t v39 = sub_22093DE30();
                uint64_t v40 = v39;
                if (v38 >= 0x7FFFFFFF)
                {
                  sub_22093DFD0();
                  uint64_t v10 = swift_allocObject();
                  *(void *)(v10 + 16) = 0;
                  *(void *)(v10 + 24) = v38;
                  unint64_t v11 = v40 | 0x8000000000000000;
                }
                else
                {
                  uint64_t v10 = v38 << 32;
                  unint64_t v11 = v39 | 0x4000000000000000;
                }
              }
            }
            else
            {
              swift_bridgeObjectRetain_n();
              uint64_t v10 = 0;
              unint64_t v11 = 0xC000000000000000;
            }
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v57);
            swift_bridgeObjectRelease();
            sub_2208F256C(v10, v11);
            uint64_t result = sub_22080B88C(v10, v11);
            uint64_t v5 = v50;
          }
          if (++v7 == a3) {
            return result;
          }
        }
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        __break(1u);
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
      }
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_22084EF24(uint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = result;
  uint64_t v6 = a4[11];
  uint64_t v20 = a4[12];
  if (v6 <= result)
  {
LABEL_35:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_22093EEA0();
    sub_22093E6C0();
    sub_22093F1A0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22093F1A0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    uint64_t result = sub_22093F090();
    __break(1u);
    return result;
  }
  uint64_t v8 = a2;
  if (a2 != a3)
  {
    if (a3 >= a2)
    {
      uint64_t v9 = a4[8];
      uint64_t v10 = v20 + 32;
      while (v8 < a3)
      {
        uint64_t v11 = v8 * v6;
        if ((unsigned __int128)(v8 * (__int128)v6) >> 64 != (v8 * v6) >> 63) {
          goto LABEL_27;
        }
        BOOL v12 = __OFADD__(v11, v5);
        unint64_t v13 = v11 + v5;
        if (v12) {
          goto LABEL_28;
        }
        if ((v13 & 0x8000000000000000) != 0) {
          goto LABEL_29;
        }
        unint64_t v14 = *(void *)(v20 + 16);
        if (v13 >= v14) {
          goto LABEL_30;
        }
        unint64_t v15 = v13 + 1;
        if (v13 + 1 >= v14) {
          goto LABEL_31;
        }
        uint64_t v16 = *(void *)(v10 + 8 * v13);
        uint64_t v17 = *(void *)(v10 + 8 * v15);
        if (v6 - 1 == v5)
        {
          if (v16 < v17)
          {
            while (1)
            {
              int v18 = *(unsigned __int8 *)(v9 - 1 + v17);
              if (v18 != 13 && v18 != 10) {
                break;
              }
              if (v16 >= --v17)
              {
                uint64_t v17 = v16;
                break;
              }
            }
          }
        }
        else
        {
          v17 -= v16 < v17;
        }
        if (!v9) {
          goto LABEL_34;
        }
        if (__OFSUB__(v17, v16)) {
          goto LABEL_32;
        }
        uint64_t result = sub_2208DBADC(v9 + v16, v17 - v16, v8);
        if (!v4 && ++v8 != a3) {
          continue;
        }
        return result;
      }
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
    }
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  return result;
}

uint64_t sub_22084F20C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t *a5)
{
  uint64_t v73 = a5;
  uint64_t v80 = *MEMORY[0x263EF8340];
  uint64_t v9 = sub_22093E610();
  uint64_t result = MEMORY[0x270FA5388](v9 - 8);
  BOOL v67 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a4[11];
  uint64_t v72 = a4[12];
  if (v12 <= a1)
  {
    uint64_t v66 = v12;
    v77[0] = 0;
    v77[1] = (char *)0xE000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_22093EEA0();
    sub_22093E6C0();
    uint64_t v75 = a1;
    sub_22093F1A0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v75 = v66;
    sub_22093F1A0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    uint64_t result = sub_22093F090();
    __break(1u);
    return result;
  }
  if (a2 != a3)
  {
    if (a3 >= a2)
    {
      uint64_t v13 = a4[8];
      uint64_t v71 = v12 - 1;
      uint64_t v70 = v72 + 32;
      long long v68 = (char **)(v73 + 14);
      uint64_t v74 = v73 + 28;
      uint64_t v14 = v13 - 1;
      uint64_t v66 = v12;
      uint64_t v69 = a3;
      while (a2 < a3)
      {
        uint64_t v15 = a2 * v12;
        if ((unsigned __int128)(a2 * (__int128)v12) >> 64 != (a2 * v12) >> 63) {
          goto LABEL_65;
        }
        BOOL v16 = __OFADD__(v15, a1);
        unint64_t v17 = v15 + a1;
        if (v16) {
          goto LABEL_66;
        }
        if ((v17 & 0x8000000000000000) != 0) {
          goto LABEL_67;
        }
        unint64_t v18 = *(void *)(v72 + 16);
        if (v17 >= v18) {
          goto LABEL_68;
        }
        unint64_t v19 = v17 + 1;
        if (v17 + 1 >= v18) {
          goto LABEL_69;
        }
        uint64_t v20 = *(void *)(v70 + 8 * v17);
        uint64_t v21 = *(void *)(v70 + 8 * v19);
        if (v71 == a1)
        {
          if (v20 < v21)
          {
            while (1)
            {
              int v22 = *(unsigned __int8 *)(v14 + v21);
              if (v22 != 13 && v22 != 10) {
                break;
              }
              if (v20 >= --v21)
              {
                uint64_t v21 = v20;
                break;
              }
            }
          }
        }
        else
        {
          v21 -= v20 < v21;
        }
        if (!v13) {
          goto LABEL_78;
        }
        uint64_t v24 = (char *)(v21 - v20);
        if (__OFSUB__(v21, v20)) {
          goto LABEL_70;
        }
        uint64_t v25 = a1;
        uint64_t v26 = v13;
        uint64_t v27 = v13 + v20;
        if (sub_2208BAC0C(v13 + v20, (uint64_t)v24, v73[13]))
        {
          uint64_t v28 = *v74;
          swift_beginAccess();
          uint64_t v29 = *(void *)(v28 + 16);
          if (!v29) {
            goto LABEL_79;
          }
          uint64_t v30 = *(void *)(v29 + 8);
          uint64_t v31 = v30 + 1;
          if (__OFADD__(v30, 1)) {
            goto LABEL_71;
          }
          uint64_t v32 = v74;
          int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v34 = *v32;
          uint64_t v35 = (uint64_t **)(v34 + 16);
          if (isUniquelyReferenced_nonNull_native)
          {
            swift_beginAccess();
            char v36 = *v35;
            if (!*v35) {
              goto LABEL_82;
            }
            uint64_t v37 = *v36;
            if (*v36 < v31)
            {
              if (v37 + 0x4000000000000000 < 0) {
                goto LABEL_74;
              }
              uint64_t v38 = 2 * v37;
              if (v38 <= v31) {
                uint64_t v39 = v31;
              }
              else {
                uint64_t v39 = v38;
              }
              sub_22088FF34((uint64_t)v36, v39, (uint64_t *)v77);
              uint64_t v40 = *(void *)(v34 + 16);
              if (!v40) {
                goto LABEL_83;
              }
              if ((*(void *)(v40 + 8) & 0x8000000000000000) != 0) {
                goto LABEL_76;
              }
              MEMORY[0x223C6B140]();
              *(_OWORD *)uint64_t v35 = *(_OWORD *)v77;
            }
          }
          else
          {
            swift_beginAccess();
            uint64_t v50 = *v35;
            if (!v50) {
              goto LABEL_81;
            }
            uint64_t v51 = *v50;
            if (*v50 < v31)
            {
              if (v51 + 0x4000000000000000 < 0) {
                goto LABEL_75;
              }
              if (2 * v51 <= v31) {
                uint64_t v51 = v31;
              }
              else {
                v51 *= 2;
              }
            }
            __swift_instantiateConcreteTypeFromMangledName(&qword_267F18898);
            uint64_t v52 = swift_allocObject();
            sub_22088F250((uint64_t)v50, v51, (uint64_t *)v77);
            *(_OWORD *)(v52 + 16) = *(_OWORD *)v77;
            swift_release();
            *uint64_t v74 = v52;
            uint64_t v34 = v52;
          }
          uint64_t result = swift_beginAccess();
          uint64_t v53 = *(void *)(v34 + 16);
          if (!v53) {
            goto LABEL_80;
          }
          uint64_t v54 = *(void *)(v53 + 16);
          BOOL v16 = __OFADD__(v54, 1);
          uint64_t v55 = v54 + 1;
          if (v16) {
            goto LABEL_72;
          }
          *(void *)(v53 + 16) = v55;
          uint64_t v56 = *(void *)(v53 + 8);
          BOOL v16 = __OFADD__(v56, 1);
          uint64_t v57 = v56 + 1;
          if (v16) {
            goto LABEL_73;
          }
          a1 = v25;
          uint64_t v13 = v26;
          *(void *)(v53 + 8) = v57;
        }
        else
        {
          v77[0] = &v24[v27];
          char v41 = v24[v27];
          v24[v27] = 0;
          float v42 = strtof((const char *)v27, v77);
          if (v77[0] && &v77[0][-v27] == v24)
          {
            v24[v27] = v41;
            LOBYTE(v77[0]) = 0;
            uint64_t result = sub_2208F23F8(LODWORD(v42));
          }
          else
          {
            v24[v27] = v41;
            uint64_t v43 = v68;
            sub_2208E542C(v27, (uint64_t)v24);
            uint64_t v44 = *v43;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v44 = sub_22081C5B4(0, *((void *)v44 + 2) + 1, 1, v44);
            }
            unint64_t v46 = *((void *)v44 + 2);
            unint64_t v45 = *((void *)v44 + 3);
            if (v46 >= v45 >> 1) {
              uint64_t v44 = sub_22081C5B4((char *)(v45 > 1), v46 + 1, 1, v44);
            }
            *((void *)v44 + 2) = v46 + 1;
            v44[v46 + 32] = 0;
            *long long v68 = v44;
            sub_22093E600();
            uint64_t v47 = sub_22093E5A0();
            if (!v48 || (unint64_t v49 = sub_22085C044(v47, v48), swift_bridgeObjectRelease(), (v49 & 0x100000000) != 0))
            {
              uint64_t v58 = v73[22];
              uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18BB0);
              uint64_t v78 = v59;
              uint64_t v79 = sub_2208502C4((unint64_t *)&qword_267F18BB8, &qword_267F18BB0);
              v77[0] = (char *)v27;
              v77[1] = v24;
              uint64_t v60 = __swift_project_boxed_opaque_existential_1(v77, v59);
              if (*v60) {
                uint64_t v61 = (unsigned char *)(*v60 + v60[1]);
              }
              else {
                uint64_t v61 = 0;
              }
              sub_220848DD4((unsigned char *)*v60, v61, v76);
              uint64_t v62 = v76[0];
              uint64_t v63 = v76[1];
              __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v77);
              sub_2208501D0();
              swift_allocError();
              *(void *)uint64_t v64 = a2;
              *(void *)(v64 + 8) = v58;
              *(void *)(v64 + 16) = 2;
              *(void *)(v64 + 24) = v62;
              *(void *)(v64 + 32) = v63;
              *(unsigned char *)(v64 + 40) = 1;
              return swift_willThrow();
            }
            LOBYTE(v77[0]) = 0;
            uint64_t result = sub_2208F23F8(v49);
            uint64_t v12 = v66;
          }
          a1 = v25;
          uint64_t v13 = v26;
        }
        ++a2;
        a3 = v69;
        if (a2 == v69) {
          return result;
        }
      }
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
    }
    __break(1u);
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
LABEL_82:
    __break(1u);
LABEL_83:
    __break(1u);
  }
  return result;
}

uint64_t sub_22084F9FC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t *a5)
{
  uint64_t v74 = a5;
  uint64_t v81 = *MEMORY[0x263EF8340];
  uint64_t v9 = sub_22093E610();
  uint64_t result = MEMORY[0x270FA5388](v9 - 8);
  long long v68 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a4[11];
  uint64_t v73 = a4[12];
  if (v12 <= a1)
  {
    uint64_t v67 = v12;
    v78[0] = 0;
    v78[1] = (char *)0xE000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_22093EEA0();
    sub_22093E6C0();
    uint64_t v76 = a1;
    sub_22093F1A0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v76 = v67;
    sub_22093F1A0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    uint64_t result = sub_22093F090();
    __break(1u);
    return result;
  }
  if (a2 != a3)
  {
    if (a3 >= a2)
    {
      uint64_t v13 = a4[8];
      uint64_t v72 = v12 - 1;
      uint64_t v71 = v73 + 32;
      uint64_t v69 = (char **)(v74 + 14);
      uint64_t v75 = v74 + 28;
      uint64_t v14 = v13 - 1;
      uint64_t v67 = v12;
      uint64_t v70 = a3;
      while (a2 < a3)
      {
        uint64_t v15 = a2 * v12;
        if ((unsigned __int128)(a2 * (__int128)v12) >> 64 != (a2 * v12) >> 63) {
          goto LABEL_65;
        }
        BOOL v16 = __OFADD__(v15, a1);
        unint64_t v17 = v15 + a1;
        if (v16) {
          goto LABEL_66;
        }
        if ((v17 & 0x8000000000000000) != 0) {
          goto LABEL_67;
        }
        unint64_t v18 = *(void *)(v73 + 16);
        if (v17 >= v18) {
          goto LABEL_68;
        }
        unint64_t v19 = v17 + 1;
        if (v17 + 1 >= v18) {
          goto LABEL_69;
        }
        uint64_t v20 = *(void *)(v71 + 8 * v17);
        uint64_t v21 = *(void *)(v71 + 8 * v19);
        if (v72 == a1)
        {
          if (v20 < v21)
          {
            while (1)
            {
              int v22 = *(unsigned __int8 *)(v14 + v21);
              if (v22 != 13 && v22 != 10) {
                break;
              }
              if (v20 >= --v21)
              {
                uint64_t v21 = v20;
                break;
              }
            }
          }
        }
        else
        {
          v21 -= v20 < v21;
        }
        if (!v13) {
          goto LABEL_78;
        }
        uint64_t v24 = (char *)(v21 - v20);
        if (__OFSUB__(v21, v20)) {
          goto LABEL_70;
        }
        uint64_t v25 = v13;
        uint64_t v26 = v13 + v20;
        if (sub_2208BAC0C(v13 + v20, (uint64_t)v24, v74[13]))
        {
          uint64_t v27 = *v75;
          swift_beginAccess();
          uint64_t v28 = *(void *)(v27 + 16);
          if (!v28) {
            goto LABEL_79;
          }
          uint64_t v29 = *(void *)(v28 + 8);
          uint64_t v30 = v29 + 1;
          if (__OFADD__(v29, 1)) {
            goto LABEL_71;
          }
          uint64_t v31 = v75;
          int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v33 = *v31;
          uint64_t v34 = (uint64_t **)(v33 + 16);
          if (isUniquelyReferenced_nonNull_native)
          {
            swift_beginAccess();
            uint64_t v35 = *v34;
            if (!*v34) {
              goto LABEL_82;
            }
            uint64_t v36 = *v35;
            if (*v35 < v30)
            {
              if (v36 + 0x4000000000000000 < 0) {
                goto LABEL_74;
              }
              uint64_t v37 = 2 * v36;
              if (v37 <= v30) {
                uint64_t v38 = v30;
              }
              else {
                uint64_t v38 = v37;
              }
              sub_22088F714((uint64_t)v35, v38, (uint64_t *)v78);
              uint64_t v39 = *(void *)(v33 + 16);
              if (!v39) {
                goto LABEL_83;
              }
              if ((*(void *)(v39 + 8) & 0x8000000000000000) != 0) {
                goto LABEL_76;
              }
              MEMORY[0x223C6B140]();
              *(_OWORD *)uint64_t v34 = *(_OWORD *)v78;
            }
          }
          else
          {
            swift_beginAccess();
            uint64_t v51 = *v34;
            if (!v51) {
              goto LABEL_81;
            }
            uint64_t v52 = *v51;
            if (*v51 < v30)
            {
              if (v52 + 0x4000000000000000 < 0) {
                goto LABEL_75;
              }
              if (2 * v52 <= v30) {
                uint64_t v52 = v30;
              }
              else {
                v52 *= 2;
              }
            }
            __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413D0);
            uint64_t v53 = swift_allocObject();
            sub_22088E844((uint64_t)v51, v52, (uint64_t *)v78);
            *(_OWORD *)(v53 + 16) = *(_OWORD *)v78;
            swift_release();
            *uint64_t v75 = v53;
            uint64_t v33 = v53;
          }
          uint64_t result = swift_beginAccess();
          uint64_t v54 = *(void *)(v33 + 16);
          if (!v54) {
            goto LABEL_80;
          }
          uint64_t v55 = *(void *)(v54 + 16);
          BOOL v16 = __OFADD__(v55, 1);
          uint64_t v56 = v55 + 1;
          if (v16) {
            goto LABEL_72;
          }
          *(void *)(v54 + 16) = v56;
          uint64_t v57 = *(void *)(v54 + 8);
          BOOL v16 = __OFADD__(v57, 1);
          uint64_t v58 = v57 + 1;
          if (v16) {
            goto LABEL_73;
          }
          uint64_t v13 = v25;
          *(void *)(v54 + 8) = v58;
        }
        else
        {
          v78[0] = &v24[v26];
          char v40 = v24[v26];
          v24[v26] = 0;
          *(double *)&uint64_t v41 = strtod((const char *)v26, v78);
          if (v78[0] && &v78[0][-v26] == v24)
          {
            v24[v26] = v40;
            uint64_t result = sub_2208F2014(v41, 0);
          }
          else
          {
            v24[v26] = v40;
            float v42 = v69;
            sub_2208E542C(v26, (uint64_t)v24);
            uint64_t v43 = *v42;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v43 = sub_22081C5B4(0, *((void *)v43 + 2) + 1, 1, v43);
            }
            unint64_t v45 = *((void *)v43 + 2);
            unint64_t v44 = *((void *)v43 + 3);
            if (v45 >= v44 >> 1) {
              uint64_t v43 = sub_22081C5B4((char *)(v44 > 1), v45 + 1, 1, v43);
            }
            *((void *)v43 + 2) = v45 + 1;
            v43[v45 + 32] = 0;
            *uint64_t v69 = v43;
            sub_22093E600();
            uint64_t v46 = sub_22093E5A0();
            if (!v47 || (uint64_t v48 = sub_22085C140(v46, v47), v50 = v49, swift_bridgeObjectRelease(), (v50 & 1) != 0))
            {
              uint64_t v59 = v74[22];
              uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18BB0);
              uint64_t v79 = v60;
              uint64_t v80 = sub_2208502C4((unint64_t *)&qword_267F18BB8, &qword_267F18BB0);
              v78[0] = (char *)v26;
              v78[1] = v24;
              uint64_t v61 = __swift_project_boxed_opaque_existential_1(v78, v60);
              if (*v61) {
                uint64_t v62 = (unsigned char *)(*v61 + v61[1]);
              }
              else {
                uint64_t v62 = 0;
              }
              sub_220848DD4((unsigned char *)*v61, v62, v77);
              uint64_t v63 = v77[0];
              uint64_t v64 = v77[1];
              __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v78);
              sub_2208501D0();
              swift_allocError();
              *(void *)uint64_t v65 = a2;
              *(void *)(v65 + 8) = v59;
              *(void *)(v65 + 16) = 3;
              *(void *)(v65 + 24) = v63;
              *(void *)(v65 + 32) = v64;
              *(unsigned char *)(v65 + 40) = 1;
              return swift_willThrow();
            }
            uint64_t result = sub_2208F2014(v48, 0);
            uint64_t v12 = v67;
          }
          uint64_t v13 = v25;
        }
        ++a2;
        a3 = v70;
        if (a2 == v70) {
          return result;
        }
      }
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
    }
    __break(1u);
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
LABEL_82:
    __break(1u);
LABEL_83:
    __break(1u);
  }
  return result;
}

unint64_t sub_2208501D0()
{
  unint64_t result = qword_267F18BC0;
  if (!qword_267F18BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F18BC0);
  }
  return result;
}

uint64_t sub_220850224(uint64_t a1)
{
  return a1;
}

uint64_t sub_220850298(uint64_t a1)
{
  return a1;
}

uint64_t sub_2208502C4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for CSVParser()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CSVParser(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 60) = *(unsigned char *)(a2 + 60);
  long long v4 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v4;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CSVParser(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  *(unsigned char *)(a1 + 59) = *(unsigned char *)(a2 + 59);
  *(unsigned char *)(a1 + 60) = *(unsigned char *)(a2 + 60);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy104_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for CSVParser(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  *(_WORD *)(a1 + 59) = *(_WORD *)(a2 + 59);
  long long v4 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v4;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CSVParser(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 104)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CSVParser(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CSVParser()
{
  return &type metadata for CSVParser;
}

uint64_t sub_2208506C0@<X0>(uint64_t a1@<X8>)
{
  if (sub_22093E660() < *(void *)(v1 + 16)) {
    goto LABEL_2;
  }
  sub_22093E6A0();
  if (sub_22093E750() == 84 && v9 == 0xE100000000000000)
  {
    swift_bridgeObjectRelease();
LABEL_18:
    return sub_220850888(a1);
  }
  char v11 = sub_22093F250();
  swift_bridgeObjectRelease();
  if (v11) {
    goto LABEL_18;
  }
LABEL_2:
  if (sub_22093E660() < *(void *)(v1 + 24))
  {
LABEL_8:
    uint64_t v6 = sub_22093E100();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
    return v7(a1, 1, 1, v6);
  }
  sub_22093E6A0();
  if (sub_22093E750() == 84 && v3 == 0xE100000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v5 = sub_22093F250();
    swift_bridgeObjectRelease();
    if ((v5 & 1) == 0) {
      goto LABEL_8;
    }
  }

  return sub_220850B18(a1);
}

uint64_t sub_220850888@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD411B8);
  uint64_t result = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (__OFSUB__(*(void *)(v1 + 16), 1))
  {
    __break(1u);
    return result;
  }
  sub_22093E6A0();
  uint64_t v7 = sub_22093E750();
  BOOL v9 = v7 == 90 && v8 == 0xE100000000000000;
  if (v9
    || (uint64_t v10 = v7, v11 = v8, (sub_22093F250() & 1) != 0)
    || (v10 == 43 ? (BOOL v12 = v11 == 0xE100000000000000) : (BOOL v12 = 0),
        v12 || (sub_22093F250() & 1) != 0 || v10 == 45 && v11 == 0xE100000000000000))
  {
    swift_bridgeObjectRelease();
LABEL_16:
    uint64_t v13 = *(void **)v1;
    uint64_t v14 = (void *)sub_22093E540();
    id v15 = objc_msgSend(v13, sel_dateFromString_, v14);

    if (v15)
    {
      sub_22093E0E0();

      uint64_t v16 = sub_22093E100();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v6, 0, 1, v16);
    }
    else
    {
      uint64_t v17 = sub_22093E100();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v6, 1, 1, v17);
    }
    return sub_220850DA8((uint64_t)v6, a1);
  }
  char v18 = sub_22093F250();
  swift_bridgeObjectRelease();
  if (v18) {
    goto LABEL_16;
  }
  uint64_t v19 = sub_22093E100();
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);

  return v20(a1, 1, 1, v19);
}

uint64_t sub_220850B18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD411B8);
  uint64_t result = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (__OFSUB__(*(void *)(v1 + 24), 1))
  {
    __break(1u);
    return result;
  }
  sub_22093E6A0();
  uint64_t v7 = sub_22093E750();
  BOOL v9 = v7 == 90 && v8 == 0xE100000000000000;
  if (v9
    || (uint64_t v10 = v7, v11 = v8, (sub_22093F250() & 1) != 0)
    || (v10 == 43 ? (BOOL v12 = v11 == 0xE100000000000000) : (BOOL v12 = 0),
        v12 || (sub_22093F250() & 1) != 0 || v10 == 45 && v11 == 0xE100000000000000))
  {
    swift_bridgeObjectRelease();
LABEL_16:
    uint64_t v13 = *(void **)(v1 + 8);
    uint64_t v14 = (void *)sub_22093E540();
    id v15 = objc_msgSend(v13, sel_dateFromString_, v14);

    if (v15)
    {
      sub_22093E0E0();

      uint64_t v16 = sub_22093E100();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v6, 0, 1, v16);
    }
    else
    {
      uint64_t v17 = sub_22093E100();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v6, 1, 1, v17);
    }
    return sub_220850DA8((uint64_t)v6, a1);
  }
  char v18 = sub_22093F250();
  swift_bridgeObjectRelease();
  if (v18) {
    goto LABEL_16;
  }
  uint64_t v19 = sub_22093E100();
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);

  return v20(a1, 1, 1, v19);
}

uint64_t sub_220850DA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD411B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL static JSONType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t JSONType.hash(into:)()
{
  return sub_22093F440();
}

uint64_t JSONType.hashValue.getter()
{
  return sub_22093F490();
}

BOOL sub_220850E98(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_220850EAC()
{
  return sub_22093F490();
}

uint64_t sub_220850EF4()
{
  return sub_22093F440();
}

uint64_t sub_220850F20()
{
  return sub_22093F490();
}

unint64_t sub_220850F68()
{
  unint64_t result = qword_267F18BC8;
  if (!qword_267F18BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F18BC8);
  }
  return result;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  uint64_t *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for CSVType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for JSONType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    uint64_t *result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x220851128);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          uint64_t *result = a2 + 6;
        break;
    }
  }
  return result;
}

uint64_t sub_220851150(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_220851158(unsigned char *result, char a2)
{
  uint64_t *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for JSONType()
{
  return &type metadata for JSONType;
}

uint64_t static ColumnProtocol<>.+ infix(_:_:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, void *a5@<X8>)
{
  return sub_220851300(a1, a2, a3, a4, (uint64_t)sub_2208511A0, (void (*)(char *, char *))sub_2208511B8, 43, a5);
}

uint64_t sub_2208511A0(uint64_t a1, uint64_t a2)
{
  return sub_220852074(a1, a2, MEMORY[0x263F8DF20]);
}

uint64_t sub_2208511B8(uint64_t a1)
{
  return sub_220851218(a1);
}

uint64_t static ColumnProtocol<>.- infix(_:_:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, void *a5@<X8>)
{
  return sub_220851300(a1, a2, a3, a4, (uint64_t)sub_220851200, (void (*)(char *, char *))sub_2208511B8, 45, a5);
}

uint64_t sub_220851200(uint64_t a1, uint64_t a2)
{
  return sub_220852074(a1, a2, MEMORY[0x263F8DF28]);
}

uint64_t sub_220851218(uint64_t a1)
{
  return sub_220851594(a1, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 40));
}

uint64_t static ColumnProtocol<>.* infix(_:_:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, void *a5@<X8>)
{
  return sub_220851300(a1, a2, a3, a4, (uint64_t)sub_220851270, (void (*)(char *, char *))sub_2208511B8, 42, a5);
}

{
  unsigned char v11[16];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  id v15 = 0;
  uint64_t v16 = 0xE000000000000000;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  swift_getAssociatedTypeWitness();
  sub_22093F220();
  BOOL v12 = a2;
  uint64_t v13 = a3;
  uint64_t v14 = a4;
  sub_220851634(a1, 0, 0xE000000000000000, (uint64_t)sub_220851270, (uint64_t)v11, a2, a3, a5, *(void *)(a4 + 8));
  return swift_bridgeObjectRelease();
}

uint64_t sub_220851270(uint64_t a1, uint64_t a2)
{
  return sub_220852074(a1, a2, MEMORY[0x263F8D758]);
}

uint64_t static ColumnProtocol<>./ infix(_:_:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, void *a5@<X8>)
{
  return sub_220851300(a1, a2, a3, a4, (uint64_t)sub_2208512B8, (void (*)(char *, char *))sub_2208511B8, 47, a5);
}

{
  return sub_220851300(a1, a2, a3, a4, (uint64_t)sub_22085157C, (void (*)(char *, char *))sub_2208511B8, 47, a5);
}

{
  unsigned char v11[16];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  id v15 = 0;
  uint64_t v16 = 0xE000000000000000;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  swift_getAssociatedTypeWitness();
  sub_22093F230();
  BOOL v12 = a2;
  uint64_t v13 = a3;
  uint64_t v14 = a4;
  sub_220851634(a1, 0, 0xE000000000000000, (uint64_t)sub_2208512B8, (uint64_t)v11, a2, a3, a5, *(void *)(*(void *)(a4 + 24) + 8));
  return swift_bridgeObjectRelease();
}

{
  unsigned char v11[16];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  id v15 = 0;
  uint64_t v16 = 0xE000000000000000;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  swift_getAssociatedTypeWitness();
  sub_22093F220();
  BOOL v12 = a2;
  uint64_t v13 = a3;
  uint64_t v14 = a4;
  sub_220851634(a1, 0, 0xE000000000000000, (uint64_t)sub_22085157C, (uint64_t)v11, a2, a3, a5, *(void *)(*(void *)(*(void *)(a4 + 16) + 8) + 8));
  return swift_bridgeObjectRelease();
}

uint64_t sub_2208512B8(uint64_t a1, uint64_t a2)
{
  return sub_220852074(a1, a2, MEMORY[0x263F8DA80]);
}

uint64_t sub_220851300@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, void (*a6)(char *, char *)@<X6>, uint64_t a7@<X7>, void *a8@<X8>)
{
  uint64_t v30 = a7;
  uint64_t v29 = a6;
  uint64_t v28 = a1;
  uint64_t v31 = a8;
  uint64_t v12 = *(void *)(*(void *)(*(void *)(a3 + 8) + 8) + 8);
  uint64_t v42 = a2;
  uint64_t v43 = a2;
  uint64_t v44 = v12;
  uint64_t v45 = v12;
  uint64_t v13 = sub_22093EEE0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v28 - v15;
  sub_22093F2C0();
  uint64_t v39 = a2;
  uint64_t v40 = a3;
  uint64_t v41 = a4;
  uint64_t v33 = a2;
  uint64_t v34 = a3;
  uint64_t v35 = a4;
  uint64_t v36 = a5;
  uint64_t v37 = &v38;
  uint64_t AssociatedTypeWitness = (char *)swift_getAssociatedTypeWitness();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v20 = sub_22080E314(v29, (uint64_t)v32, v13, AssociatedTypeWitness, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v19);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  uint64_t v42 = v21(a2, a3);
  uint64_t v43 = v22;
  sub_22093E6C0();
  v21(a2, a3);
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  uint64_t v23 = v42;
  uint64_t v24 = v43;
  uint64_t v42 = v20;
  uint64_t v25 = sub_22093E900();
  uint64_t v26 = swift_getWitnessTable();
  return Column.init<A>(name:contents:)(v23, v24, (uint64_t)&v42, (uint64_t)AssociatedTypeWitness, v25, v26, v31);
}

uint64_t sub_22085157C(uint64_t a1, uint64_t a2)
{
  return sub_220852074(a1, a2, MEMORY[0x263F8D0B8]);
}

uint64_t sub_220851594(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a1, a1 + *(int *)(TupleTypeMetadata2 + 48));
}

uint64_t sub_220851634@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, void *a8@<X8>, uint64_t a9)
{
  _OWORD v19[2] = a6;
  void v19[3] = a7;
  v19[4] = a9;
  v19[5] = a4;
  v19[6] = a5;
  v19[7] = a1;
  uint64_t v13 = *(void *)(*(void *)(a7 + 8) + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v20 = sub_2208F0D18((void (*)(char *, char *))sub_220852F34, (uint64_t)v19, a6, AssociatedTypeWitness, MEMORY[0x263F8E628], v13, MEMORY[0x263F8E658], v15);
  uint64_t v16 = sub_22093E900();
  swift_bridgeObjectRetain();
  uint64_t WitnessTable = swift_getWitnessTable();
  return Column.init<A>(name:contents:)(a2, a3, (uint64_t)&v20, AssociatedTypeWitness, v16, WitnessTable, a8);
}

uint64_t static ColumnProtocol.+ infix<>(_:_:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, void *a5@<X8>)
{
  return sub_2208517AC(a1, a2, a3, a4, (uint64_t)sub_2208511A0, a5);
}

uint64_t static ColumnProtocol.+ infix<>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, void *a5@<X8>)
{
  return sub_2208518F4(a1, a2, a3, a4, (uint64_t)sub_2208511A0, a5);
}

uint64_t static ColumnProtocol.- infix<>(_:_:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, void *a5@<X8>)
{
  return sub_2208517AC(a1, a2, a3, a4, (uint64_t)sub_220851200, a5);
}

uint64_t sub_2208517AC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, void *a6@<X8>)
{
  uint64_t v17 = 0;
  unint64_t v18 = 0xE000000000000000;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  swift_getAssociatedTypeWitness();
  sub_22093F220();
  uint64_t v14 = a2;
  uint64_t v15 = a3;
  uint64_t v16 = a4;
  sub_220851634(a1, 0, 0xE000000000000000, a5, (uint64_t)v13, a2, a3, a6, a4);
  return swift_bridgeObjectRelease();
}

uint64_t static ColumnProtocol.- infix<>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, void *a5@<X8>)
{
  return sub_2208518F4(a1, a2, a3, a4, (uint64_t)sub_220851A1C, a5);
}

uint64_t sub_2208518F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, void *a6@<X8>)
{
  uint64_t v17 = 0;
  unint64_t v18 = 0xE000000000000000;
  swift_getAssociatedTypeWitness();
  sub_22093F220();
  sub_22093E6C0();
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  uint64_t v14 = a2;
  uint64_t v15 = a3;
  uint64_t v16 = a4;
  sub_220851634(a1, 0, 0xE000000000000000, a5, (uint64_t)v13, a2, a3, a6, a4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_220851A1C(uint64_t a1, uint64_t a2)
{
  return sub_220852250(a1, a2, MEMORY[0x263F8DF28]);
}

uint64_t static ColumnProtocol<>.* infix(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, void *a5@<X8>)
{
  uint64_t v15 = 0;
  unint64_t v16 = 0xE000000000000000;
  swift_getAssociatedTypeWitness();
  sub_22093F220();
  sub_22093E6C0();
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  uint64_t v12 = a2;
  uint64_t v13 = a3;
  uint64_t v14 = a4;
  sub_220851634(a1, 0, 0xE000000000000000, (uint64_t)sub_220851270, (uint64_t)v11, a2, a3, a5, *(void *)(a4 + 8));
  return swift_bridgeObjectRelease();
}

uint64_t static ColumnProtocol<>./ infix(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, void *a5@<X8>)
{
  uint64_t v15 = 0;
  unint64_t v16 = 0xE000000000000000;
  swift_getAssociatedTypeWitness();
  sub_22093F230();
  sub_22093E6C0();
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  uint64_t v12 = a2;
  uint64_t v13 = a3;
  uint64_t v14 = a4;
  sub_220851634(a1, 0, 0xE000000000000000, (uint64_t)sub_220851F1C, (uint64_t)v11, a2, a3, a5, *(void *)(*(void *)(a4 + 24) + 8));
  return swift_bridgeObjectRelease();
}

{
  unsigned char v11[16];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  uint64_t v15 = 0;
  unint64_t v16 = 0xE000000000000000;
  swift_getAssociatedTypeWitness();
  sub_22093F220();
  sub_22093E6C0();
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  uint64_t v12 = a2;
  uint64_t v13 = a3;
  uint64_t v14 = a4;
  sub_220851634(a1, 0, 0xE000000000000000, (uint64_t)sub_220852238, (uint64_t)v11, a2, a3, a5, *(void *)(*(void *)(*(void *)(a4 + 16) + 8) + 8));
  return swift_bridgeObjectRelease();
}

uint64_t sub_220851F1C(uint64_t a1, uint64_t a2)
{
  return sub_220852250(a1, a2, MEMORY[0x263F8DA80]);
}

uint64_t sub_220852074(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  return a3(a1, a2);
}

uint64_t sub_220852238(uint64_t a1, uint64_t a2)
{
  return sub_220852250(a1, a2, MEMORY[0x263F8D0B8]);
}

uint64_t sub_220852250(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  return a3(a2, a1);
}

uint64_t static ColumnProtocol<>.< infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 8) + 8);
  uint64_t v10 = a3;
  uint64_t v11 = a4;
  uint64_t v12 = a5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = v10;
  uint64_t v16 = v11;
  uint64_t v17 = sub_2208523B0;
  unint64_t v18 = &v9;
  uint64_t v19 = a2;
  return sub_2208F0D18((void (*)(char *, char *))sub_220852EE8, (uint64_t)v14, v10, MEMORY[0x263F8D4F8], MEMORY[0x263F8E628], v6, MEMORY[0x263F8E658], v7);
}

{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  unsigned char v14[16];
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t *v18;
  uint64_t v19;

  uint64_t v6 = *(void *)(*(void *)(a4 + 8) + 8);
  uint64_t v10 = a3;
  uint64_t v11 = a4;
  uint64_t v12 = a5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = v10;
  uint64_t v16 = v11;
  uint64_t v17 = sub_2208524A0;
  unint64_t v18 = &v9;
  uint64_t v19 = a1;
  return sub_2208F0D18((void (*)(char *, char *))sub_220852EE8, (uint64_t)v14, v10, MEMORY[0x263F8D4F8], MEMORY[0x263F8E628], v6, MEMORY[0x263F8E658], v7);
}

uint64_t sub_2208523B0(uint64_t a1, uint64_t a2)
{
  return sub_2208529F8(a1, a2, MEMORY[0x263F8D170]);
}

uint64_t sub_2208524A0(uint64_t a1, uint64_t a2)
{
  return sub_2208529F8(a1, a2, MEMORY[0x263F8D168]);
}

uint64_t static ColumnProtocol<>.<= infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 8) + 8);
  uint64_t v10 = a3;
  uint64_t v11 = a4;
  uint64_t v12 = a5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = v10;
  uint64_t v16 = v11;
  uint64_t v17 = sub_220852590;
  unint64_t v18 = &v9;
  uint64_t v19 = a2;
  return sub_2208F0D18((void (*)(char *, char *))sub_220852EE8, (uint64_t)v14, v10, MEMORY[0x263F8D4F8], MEMORY[0x263F8E628], v6, MEMORY[0x263F8E658], v7);
}

{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  unsigned char v14[16];
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t *v18;
  uint64_t v19;

  uint64_t v6 = *(void *)(*(void *)(a4 + 8) + 8);
  uint64_t v10 = a3;
  uint64_t v11 = a4;
  uint64_t v12 = a5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = v10;
  uint64_t v16 = v11;
  uint64_t v17 = sub_220852680;
  unint64_t v18 = &v9;
  uint64_t v19 = a1;
  return sub_2208F0D18((void (*)(char *, char *))sub_220852EE8, (uint64_t)v14, v10, MEMORY[0x263F8D4F8], MEMORY[0x263F8E628], v6, MEMORY[0x263F8E658], v7);
}

uint64_t sub_220852590(uint64_t a1, uint64_t a2)
{
  return sub_2208529F8(a1, a2, MEMORY[0x263F8D180]);
}

uint64_t sub_220852680(uint64_t a1, uint64_t a2)
{
  return sub_2208529F8(a1, a2, MEMORY[0x263F8D178]);
}

uint64_t static ColumnProtocol<>.> infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 8) + 8);
  uint64_t v10 = a3;
  uint64_t v11 = a4;
  uint64_t v12 = a5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = v10;
  uint64_t v16 = v11;
  uint64_t v17 = sub_2208524A0;
  unint64_t v18 = &v9;
  uint64_t v19 = a2;
  return sub_2208F0D18((void (*)(char *, char *))sub_220852EE8, (uint64_t)v14, v10, MEMORY[0x263F8D4F8], MEMORY[0x263F8E628], v6, MEMORY[0x263F8E658], v7);
}

{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  unsigned char v14[16];
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t *v18;
  uint64_t v19;

  uint64_t v6 = *(void *)(*(void *)(a4 + 8) + 8);
  uint64_t v10 = a3;
  uint64_t v11 = a4;
  uint64_t v12 = a5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = v10;
  uint64_t v16 = v11;
  uint64_t v17 = sub_2208523B0;
  unint64_t v18 = &v9;
  uint64_t v19 = a1;
  return sub_2208F0D18((void (*)(char *, char *))sub_220852EE8, (uint64_t)v14, v10, MEMORY[0x263F8D4F8], MEMORY[0x263F8E628], v6, MEMORY[0x263F8E658], v7);
}

uint64_t static ColumnProtocol<>.>= infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 8) + 8);
  uint64_t v10 = a3;
  uint64_t v11 = a4;
  uint64_t v12 = a5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = v10;
  uint64_t v16 = v11;
  uint64_t v17 = sub_220852680;
  unint64_t v18 = &v9;
  uint64_t v19 = a2;
  return sub_2208F0D18((void (*)(char *, char *))sub_220852EE8, (uint64_t)v14, v10, MEMORY[0x263F8D4F8], MEMORY[0x263F8E628], v6, MEMORY[0x263F8E658], v7);
}

{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  unsigned char v14[16];
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t *v18;
  uint64_t v19;

  uint64_t v6 = *(void *)(*(void *)(a4 + 8) + 8);
  uint64_t v10 = a3;
  uint64_t v11 = a4;
  uint64_t v12 = a5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = v10;
  uint64_t v16 = v11;
  uint64_t v17 = sub_220852590;
  unint64_t v18 = &v9;
  uint64_t v19 = a1;
  return sub_2208F0D18((void (*)(char *, char *))sub_220852EE8, (uint64_t)v14, v10, MEMORY[0x263F8D4F8], MEMORY[0x263F8E628], v6, MEMORY[0x263F8E658], v7);
}

uint64_t sub_2208529F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(v3 + 32);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return a3(a1, a2, AssociatedTypeWitness, v7) & 1;
}

uint64_t static ColumnProtocol<>.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 8) + 8);
  uint64_t v10 = a3;
  uint64_t v11 = a4;
  uint64_t v12 = a5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = v10;
  uint64_t v16 = v11;
  uint64_t v17 = sub_220852B50;
  unint64_t v18 = &v9;
  uint64_t v19 = a2;
  return sub_2208F0D18((void (*)(char *, char *))sub_220852EE8, (uint64_t)v14, v10, MEMORY[0x263F8D4F8], MEMORY[0x263F8E628], v6, MEMORY[0x263F8E658], v7);
}

{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  unsigned char v14[16];
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)();
  uint64_t *v18;
  uint64_t v19;

  uint64_t v6 = *(void *)(*(void *)(a4 + 8) + 8);
  uint64_t v10 = a3;
  uint64_t v11 = a4;
  uint64_t v12 = a5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = v10;
  uint64_t v16 = v11;
  uint64_t v17 = sub_220852B50;
  unint64_t v18 = &v9;
  uint64_t v19 = a1;
  return sub_2208F0D18((void (*)(char *, char *))sub_220852EE8, (uint64_t)v14, v10, MEMORY[0x263F8D4F8], MEMORY[0x263F8E628], v6, MEMORY[0x263F8E658], v7);
}

uint64_t sub_220852C2C()
{
  return sub_22093E520() & 1;
}

uint64_t static ColumnProtocol<>.!= infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 8) + 8);
  uint64_t v10 = a3;
  uint64_t v11 = a4;
  uint64_t v12 = a5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = v10;
  uint64_t v16 = v11;
  uint64_t v17 = sub_220852F6C;
  unint64_t v18 = &v9;
  uint64_t v19 = a2;
  return sub_2208F0D18((void (*)(char *, char *))sub_220852EE8, (uint64_t)v14, v10, MEMORY[0x263F8D4F8], MEMORY[0x263F8E628], v6, MEMORY[0x263F8E658], v7);
}

{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  unsigned char v14[16];
  uint64_t v15;
  uint64_t v16;
  BOOL (*v17)();
  uint64_t *v18;
  uint64_t v19;

  uint64_t v6 = *(void *)(*(void *)(a4 + 8) + 8);
  uint64_t v10 = a3;
  uint64_t v11 = a4;
  uint64_t v12 = a5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = v10;
  uint64_t v16 = v11;
  uint64_t v17 = sub_220852EC4;
  unint64_t v18 = &v9;
  uint64_t v19 = a1;
  return sub_2208F0D18((void (*)(char *, char *))sub_220852EE8, (uint64_t)v14, v10, MEMORY[0x263F8D4F8], MEMORY[0x263F8E628], v6, MEMORY[0x263F8E658], v7);
}

BOOL sub_220852E4C()
{
  return (sub_22093E520() & 1) == 0;
}

BOOL sub_220852EC4()
{
  return sub_220852E4C();
}

uint64_t sub_220852EE8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, void))(v2 + 32))(a1, *(void *)(v2 + 48));
  *a2 = result & 1;
  return result;
}

uint64_t sub_220852F34(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, void))(v1 + 40))(a1, *(void *)(v1 + 56));
}

uint64_t JSONReadingOptions.dateParsers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t JSONReadingOptions.dateParsers.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*JSONReadingOptions.dateParsers.modify())()
{
  return nullsub_5;
}

uint64_t JSONReadingOptions.init()@<X0>(uint64_t *a1@<X8>)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F088C0]), sel_init);
  objc_msgSend(v2, sel_setFormatOptions_, 51);
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F088C0]), sel_init);
  objc_msgSend(v3, sel_setFormatOptions_, 1907);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41080);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_220945110;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v2;
  *(void *)(v4 + 32) = sub_2208539C8;
  *(void *)(v4 + 40) = v5;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v3;
  *(void *)(v4 + 48) = sub_2208536B0;
  *(void *)(v4 + 56) = result;
  *a1 = v4;
  return result;
}

uint64_t sub_2208530C8@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = (void *)sub_22093E540();
  id v5 = objc_msgSend(a1, sel_dateFromString_, v4);

  if (v5)
  {
    sub_22093E0E0();

    uint64_t v6 = sub_22093E100();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
    uint64_t v8 = v6;
    uint64_t v9 = a2;
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v11 = sub_22093E100();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v8 = v11;
    uint64_t v9 = a2;
    uint64_t v10 = 1;
  }

  return v7(v9, v10, 1, v8);
}

uint64_t JSONReadingOptions.addDateParseStrategy<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v8);
  unint64_t v9 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v10 + v9, v8, a2);
  uint64_t v11 = *v3;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_22081C6A0(0, v11[2] + 1, 1, v11);
    uint64_t v11 = (void *)result;
  }
  unint64_t v14 = v11[2];
  unint64_t v13 = v11[3];
  if (v14 >= v13 >> 1)
  {
    uint64_t result = (uint64_t)sub_22081C6A0((void *)(v13 > 1), v14 + 1, 1, v11);
    uint64_t v11 = (void *)result;
  }
  v11[2] = v14 + 1;
  uint64_t v15 = &v11[2 * v14];
  v15[4] = sub_220853754;
  v15[5] = v10;
  *id v3 = v11;
  return result;
}

uint64_t sub_22085334C@<X0>(uint64_t a1@<X8>)
{
  sub_22093DE20();
  uint64_t v2 = sub_22093E100();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 0, 1, v2);
}

uint64_t JSONWritingOptions.sortKeys.getter()
{
  return *v0;
}

uint64_t JSONWritingOptions.sortKeys.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*JSONWritingOptions.sortKeys.modify())()
{
  return nullsub_5;
}

uint64_t JSONWritingOptions.prettyPrint.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t JSONWritingOptions.prettyPrint.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 1) = result;
  return result;
}

uint64_t (*JSONWritingOptions.prettyPrint.modify())()
{
  return nullsub_5;
}

uint64_t sub_220853480(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  swift_retain();
  uint64_t result = swift_release();
  *(void *)(a2 + 8) = sub_220853980;
  *(void *)(a2 + 16) = v5;
  return result;
}

uint64_t JSONWritingOptions.dateFormatter.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_retain();
  return v1;
}

uint64_t JSONWritingOptions.dateFormatter.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_release();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*JSONWritingOptions.dateFormatter.modify())()
{
  return nullsub_5;
}

void JSONWritingOptions.init()(uint64_t a1@<X8>)
{
  *(_WORD *)a1 = 0;
  *(void *)(a1 + 8) = sub_220853594;
  *(void *)(a1 + 16) = 0;
}

uint64_t sub_220853594()
{
  uint64_t v0 = sub_22093E0C0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2208EC694((uint64_t)v3);
  uint64_t v4 = sub_22093E060();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_220853678()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2208536B0@<X0>(uint64_t a1@<X8>)
{
  return sub_2208530C8(*(void **)(v1 + 16), a1);
}

uint64_t sub_2208536CC()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);

  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_220853754@<X0>(uint64_t a1@<X8>)
{
  return sub_22085334C(a1);
}

uint64_t sub_220853794@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t *a1@<X8>)@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  *a2 = sub_2208539C0;
  a2[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v5;

  return swift_retain();
}

ValueMetadata *type metadata accessor for JSONReadingOptions()
{
  return &type metadata for JSONReadingOptions;
}

uint64_t destroy for JSONWritingOptions()
{
  return swift_release();
}

uint64_t _s11TabularData18JSONWritingOptionsVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for JSONWritingOptions(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for JSONWritingOptions(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for JSONWritingOptions(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JSONWritingOptions(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JSONWritingOptions()
{
  return &type metadata for JSONWritingOptions;
}

uint64_t sub_220853980(uint64_t a1)
{
  return sub_2208EC65C(a1, *(void (**)(uint64_t *__return_ptr))(v1 + 16));
}

uint64_t sub_220853988()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2208539C0@<X0>(uint64_t *a1@<X8>)
{
  return sub_2208EC62C(*(uint64_t (**)(void))(v1 + 16), a1);
}

double sub_2208539D4@<D0>(uint64_t *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, double a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v10 = *a1;
  char v11 = *((unsigned char *)a1 + 8);
  uint64_t v12 = a1[4];
  char v36 = *((unsigned char *)a1 + 40);
  uint64_t v35 = a1[6];
  char v33 = *((unsigned char *)a1 + 57);
  char v34 = *((unsigned char *)a1 + 56);
  __int16 v31 = *(_WORD *)((char *)a1 + 59);
  char v32 = *((unsigned char *)a1 + 58);
  long long v29 = *((_OWORD *)a1 + 5);
  long long v30 = *((_OWORD *)a1 + 4);
  uint64_t v28 = a1[12];
  uint64_t v13 = *((void *)a2 + 1);
  uint64_t v14 = *((void *)a2 + 2);
  uint64_t v15 = *((void *)a2 + 3);
  uint64_t v16 = *((void *)a2 + 5);
  char v41 = a2[48];
  char v42 = *a2;
  char v39 = a2[50];
  char v40 = a2[49];
  char v37 = a2[32];
  __int16 v38 = *(_WORD *)(a2 + 51);
  sub_220848E4C(MEMORY[0x263F8EE78]);
  uint64_t v18 = v17;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41148);
  *(void *)(a8 + 216) = 0;
  *(void *)(a8 + 224) = 0xE000000000000000;
  *(void *)(a8 + 240) = v19;
  *(void *)(a8 + 248) = &off_26D2223C0;
  *(void *)(a8 + 232) = v18;
  *(void *)a8 = v10;
  *(unsigned char *)(a8 + 8) = v11;
  *(_OWORD *)(a8 + 16) = *((_OWORD *)a1 + 1);
  *(void *)(a8 + 32) = v12;
  *(unsigned char *)(a8 + 40) = v36;
  *(void *)(a8 + 48) = v35;
  *(unsigned char *)(a8 + 56) = v34;
  *(unsigned char *)(a8 + 57) = v33;
  *(unsigned char *)(a8 + 58) = v32;
  *(_WORD *)(a8 + 59) = v31;
  *(_OWORD *)(a8 + 64) = v30;
  *(_OWORD *)(a8 + 80) = v29;
  *(void *)(a8 + 96) = v28;
  uint64_t v20 = swift_bridgeObjectRetain();
  uint64_t v21 = sub_2208BAF40(v20);
  swift_bridgeObjectRelease();
  *(void *)(a8 + 104) = v21;
  uint64_t v22 = swift_bridgeObjectRetain();
  uint64_t v23 = sub_2208BAF40(v22);
  swift_bridgeObjectRelease();
  *(void *)(a8 + 112) = v23;
  uint64_t v24 = swift_bridgeObjectRetain();
  uint64_t v25 = sub_2208BAF40(v24);
  swift_bridgeObjectRelease();
  *(void *)(a8 + 120) = v25;
  uint64_t v26 = MEMORY[0x263F8EE78];
  *(void *)(a8 + 128) = MEMORY[0x263F8EE78];
  *(unsigned char *)(a8 + 136) = v42;
  *(void *)(a8 + 144) = v13;
  *(void *)(a8 + 152) = v14;
  *(void *)(a8 + 160) = v15;
  *(unsigned char *)(a8 + 168) = v37;
  *(void *)(a8 + 176) = v16;
  *(unsigned char *)(a8 + 184) = v41;
  *(unsigned char *)(a8 + 185) = v40;
  *(unsigned char *)(a8 + 186) = v39;
  *(_WORD *)(a8 + 187) = v38;
  *(unsigned char *)(a8 + 189) = v37;
  *(void *)(a8 + 192) = v16;
  *(void *)(a8 + 200) = 0;
  *(unsigned char *)(a8 + 208) = 1;
  *(void *)(a8 + 328) = a3;
  *(double *)(a8 + 336) = a4;
  *(void *)(a8 + 256) = a5;
  *(void *)(a8 + 264) = a6;
  *(void *)(a8 + 272) = a7;
  *(void *)(a8 + 280) = 0;
  v48[0] = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(void *)&v48[1] = sub_2208322FC(v26);
  sub_2208F18BC(0);
  *(void *)(a8 + 312) = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413E0);
  *(void *)(a8 + 320) = &off_26D2223C0;
  *(void *)(a8 + 288) = a3;
  double result = a4;
  *(_OWORD *)(a8 + 296) = *(_OWORD *)v48;
  return result;
}

uint64_t sub_220853C54(uint64_t result)
{
  uint64_t v2 = *(void *)(v1 + 264);
  uint64_t v3 = *(void *)(v1 + 280);
  uint64_t v4 = v2 + v3;
  if (__OFADD__(v2, v3))
  {
    __break(1u);
    goto LABEL_21;
  }
  if (__OFADD__(v4, result))
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (*(void *)(v1 + 272) >= v4 + result) {
    uint64_t v5 = v4 + result;
  }
  else {
    uint64_t v5 = *(void *)(v1 + 272);
  }
  uint64_t v6 = v5 - v4;
  if (v5 < v4) {
    goto LABEL_22;
  }
  if (__OFSUB__(v5, v4))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  BOOL v7 = __OFADD__(v3, v6);
  uint64_t v8 = v3 + v6;
  if (v7)
  {
LABEL_24:
    __break(1u);
    return result;
  }
  *(void *)(v1 + 280) = v8;
  double result = sub_220853D58(v4, v5);
  if ((result & 1) == 0)
  {
    double result = sub_220854054(v4, v5);
    if ((result & 1) == 0)
    {
      double result = sub_220854818(v4, v5);
      if ((result & 1) == 0)
      {
        if (*(unsigned char *)(v1 + 189) == 2)
        {
          double result = sub_220854CB4(v4, v5);
          if (result) {
            return result;
          }
        }
        else
        {
          double result = sub_220855200(v4, v5);
          if (result) {
            return result;
          }
        }
        double result = sub_220855744(v4, v5);
        if ((result & 1) == 0)
        {
          double result = sub_220855D48(v4, v5);
          if ((result & 1) == 0) {
            return sub_2208561FC(v4, v5);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_220853D58(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = sub_2208566D8(&v50, a1, a2, &qword_26AD413E0, sub_2208322FC, sub_2208F18BC);
  uint64_t v6 = v5;
  uint64_t result = sub_22080B658((uint64_t)(v2 + 27), (uint64_t)(v2 + 36));
  if (v4 == v6)
  {
LABEL_2:
    uint64_t v8 = v50;
    uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413E0);
    char v49 = &off_26D2223C0;
    uint64_t v46 = v8;
    long long v47 = v51;
    sub_220857364((uint64_t)&v46, (uint64_t)(v2 + 36));
    return 1;
  }
  if (v6 < v4)
  {
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
    return result;
  }
  uint64_t v45 = v2[11];
  if (__OFSUB__(v45, 1)) {
    goto LABEL_55;
  }
  uint64_t v9 = v2[32];
  uint64_t v10 = v2[8];
  uint64_t v44 = v2[12];
  uint64_t v43 = v44 + 32;
  uint64_t v11 = v10 - 1;
  uint64_t v42 = v10 - 1;
  while (1)
  {
    if (v4 >= v6) {
      goto LABEL_47;
    }
    uint64_t v12 = v4 * v45;
    if ((unsigned __int128)(v4 * (__int128)v45) >> 64 != (v4 * v45) >> 63)
    {
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
      goto LABEL_54;
    }
    BOOL v13 = __OFADD__(v12, v9);
    unint64_t v14 = v12 + v9;
    if (v13) {
      goto LABEL_49;
    }
    if ((v14 & 0x8000000000000000) != 0) {
      goto LABEL_50;
    }
    unint64_t v15 = *(void *)(v44 + 16);
    if (v14 >= v15) {
      goto LABEL_51;
    }
    unint64_t v16 = v14 + 1;
    if (v14 + 1 >= v15) {
      goto LABEL_52;
    }
    uint64_t v17 = *(void *)(v43 + 8 * v14);
    uint64_t v18 = *(void *)(v43 + 8 * v16);
    if (v9 == v45 - 1)
    {
      if (v17 < v18)
      {
        while (1)
        {
          int v19 = *(unsigned __int8 *)(v11 + v18);
          if (v19 != 13 && v19 != 10) {
            break;
          }
          if (v17 >= --v18)
          {
            uint64_t v18 = v17;
            break;
          }
        }
      }
    }
    else
    {
      v18 -= v17 < v18;
    }
    if (!v10) {
      goto LABEL_56;
    }
    if (__OFSUB__(v18, v17)) {
      goto LABEL_53;
    }
    uint64_t v21 = v10;
    uint64_t v22 = v3;
    uint64_t v23 = v3[13];
    uint64_t v24 = (unsigned __int8 *)sub_2208BAD00(v10 + v17, v18 - v17);
    uint64_t v26 = *(void *)(v23 + 16);
    if (!v26) {
      goto LABEL_44;
    }
    uint64_t v27 = v24;
    uint64_t v28 = v25;
    uint64_t v30 = *(void *)(v23 + 32);
    uint64_t v29 = v23 + 32;
    uint64_t result = (uint64_t)sub_22091F900(v24, v25, v30);
    if ((result & 1) == 0) {
      break;
    }
LABEL_6:
    ++v4;
    uint64_t result = sub_2208F2244(0, 0);
    uint64_t v10 = v21;
    uint64_t v3 = v22;
    uint64_t v11 = v42;
    if (v4 == v6) {
      goto LABEL_2;
    }
  }
  if (v26 != 1)
  {
    __int16 v31 = &v27[v28];
    if (!v27) {
      __int16 v31 = 0;
    }
    uint64_t v32 = 1;
    do
    {
      uint64_t v33 = v32;
      BOOL v13 = __OFADD__(v32++, 1);
      if (v13)
      {
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
        goto LABEL_48;
      }
      unint64_t v34 = 0;
      uint64_t v35 = *(void *)(v29 + 8 * v33);
      unint64_t v36 = *(void *)(v35 + 16);
      uint64_t v37 = v35 + 32;
      __int16 v38 = v27;
      while (v34 == v36)
      {
        int v39 = 0;
        unint64_t v40 = v36;
        if (!v38) {
          goto LABEL_31;
        }
LABEL_40:
        if (v38 == v31) {
          goto LABEL_31;
        }
        if (v34 != v36)
        {
          int v41 = *v38++;
          unint64_t v34 = v40;
          if (v39 == v41) {
            continue;
          }
        }
        goto LABEL_32;
      }
      if (v34 >= v36)
      {
        __break(1u);
        goto LABEL_46;
      }
      int v39 = *(unsigned __int8 *)(v37 + v34);
      unint64_t v40 = v34 + 1;
      if (v38) {
        goto LABEL_40;
      }
LABEL_31:
      if (v34 == v36) {
        goto LABEL_6;
      }
LABEL_32:
      ;
    }
    while (v32 != v26);
  }
LABEL_44:
  swift_release();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_220854054(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_22093E610();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v95 = (char *)&v93 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_2208566D8(&v108, a1, a2, &qword_26AD413F0, (uint64_t (*)(void))sub_220831BD0, sub_2208F180C);
  uint64_t v9 = v8;
  long long v94 = v2 + 36;
  uint64_t result = sub_22080B658((uint64_t)(v2 + 27), (uint64_t)(v2 + 36));
  if (v7 == v9)
  {
LABEL_2:
    uint64_t v11 = v108;
    uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413F0);
    long long v107 = &off_26D2223C0;
    *(void *)uint64_t v105 = v11;
    *(_OWORD *)&v105[8] = v109;
    sub_220857364((uint64_t)v105, (uint64_t)v94);
    return 1;
  }
  if (v9 < v7) {
    goto LABEL_130;
  }
  uint64_t v104 = v2[11];
  uint64_t v102 = v104 - 1;
  if (!__OFSUB__(v104, 1))
  {
    uint64_t v12 = v2[32];
    uint64_t v103 = v2[12];
    uint64_t v101 = v103 + 32;
    uint64_t v96 = (char *)&v109 + 8;
    uint64_t v13 = v2[8];
    uint64_t v99 = (char **)(v2 + 16);
    uint64_t v14 = v13 - 1;
    uint64_t v93 = v13 + 2;
    uint64_t v100 = v13;
    uint64_t v98 = v9;
    uint64_t v97 = v12;
    while (1)
    {
      if (v7 >= v9) {
        goto LABEL_114;
      }
      uint64_t v17 = v7 * v104;
      if ((unsigned __int128)(v7 * (__int128)v104) >> 64 != (v7 * v104) >> 63)
      {
LABEL_115:
        __break(1u);
LABEL_116:
        __break(1u);
LABEL_117:
        __break(1u);
LABEL_118:
        __break(1u);
LABEL_119:
        __break(1u);
LABEL_120:
        __break(1u);
        goto LABEL_121;
      }
      BOOL v18 = __OFADD__(v17, v12);
      unint64_t v19 = v17 + v12;
      if (v18) {
        goto LABEL_116;
      }
      if ((v19 & 0x8000000000000000) != 0) {
        goto LABEL_117;
      }
      unint64_t v20 = *(void *)(v103 + 16);
      if (v19 >= v20) {
        goto LABEL_118;
      }
      unint64_t v21 = v19 + 1;
      if (v19 + 1 >= v20) {
        goto LABEL_119;
      }
      uint64_t v22 = *(void *)(v101 + 8 * v19);
      uint64_t v23 = *(void *)(v101 + 8 * v21);
      if (v12 == v102)
      {
        if (v22 < v23)
        {
          while (1)
          {
            int v24 = *(unsigned __int8 *)(v14 + v23);
            if (v24 != 13 && v24 != 10) {
              break;
            }
            if (v22 >= --v23)
            {
              uint64_t v23 = v22;
              break;
            }
          }
        }
      }
      else
      {
        v23 -= v22 < v23;
      }
      if (!v13) {
        goto LABEL_132;
      }
      uint64_t v26 = v23 - v22;
      if (__OFSUB__(v23, v22)) {
        goto LABEL_120;
      }
      uint64_t v27 = (unsigned __int8 *)(v13 + v22);
      if (!v26) {
        goto LABEL_85;
      }
      if (v26 >= 1)
      {
        int v28 = *v27;
        if (v28 == 43)
        {
          if (v26 == 1)
          {
            uint64_t v29 = 0;
            goto LABEL_47;
          }
          int v30 = 0;
          goto LABEL_38;
        }
        if (v28 == 45)
        {
          if (v26 == 1)
          {
            uint64_t v29 = 0;
LABEL_46:
            BOOL v18 = __OFSUB__(0, v29);
            uint64_t v29 = -v29;
            if (v18) {
              goto LABEL_126;
            }
            goto LABEL_47;
          }
          int v30 = 1;
LABEL_38:
          uint64_t v31 = 1;
          goto LABEL_39;
        }
      }
      int v30 = 0;
      uint64_t v31 = 0;
LABEL_39:
      unsigned int v32 = v27[v31];
      if (v32 > 0x2F && v32 < 0x3A)
      {
        uint64_t v29 = (v32 - 48);
        if (v31 + 1 != v26)
        {
          unsigned __int8 v57 = v27[v31 + 1];
          if ((v57 - 58) >= 0xF6u)
          {
            uint64_t v58 = v31 + v22;
            uint64_t v59 = v58 - v23 + 2;
            uint64_t v60 = (unsigned __int8 *)(v93 + v58);
            while (1)
            {
              uint64_t v61 = 10 * v29;
              if ((unsigned __int128)(v29 * (__int128)10) >> 64 != (10 * v29) >> 63) {
                break;
              }
              unsigned __int8 v62 = v57 - 48;
              uint64_t v29 = v61 + v62;
              if (__OFADD__(v61, v62)) {
                goto LABEL_122;
              }
              if (!v59) {
                goto LABEL_45;
              }
              unsigned __int8 v63 = *v60++;
              unsigned __int8 v57 = v63;
              ++v59;
              if ((v63 - 58) < 0xF6u) {
                goto LABEL_85;
              }
            }
LABEL_121:
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
            break;
          }
LABEL_85:
          uint64_t v64 = v2;
          uint64_t v65 = v2[13];
          uint64_t v66 = (unsigned __int8 *)sub_2208BAD00((uint64_t)v27, v26);
          uint64_t v68 = *(void *)(v65 + 16);
          if (v68)
          {
            uint64_t v69 = v66;
            uint64_t v70 = v67;
            uint64_t v72 = *(void *)(v65 + 32);
            uint64_t v71 = v65 + 32;
            uint64_t result = (uint64_t)sub_22091F900(v66, v67, v72);
            if ((result & 1) == 0)
            {
              if (v68 == 1) {
                goto LABEL_88;
              }
              uint64_t v82 = &v69[v70];
              if (!v69) {
                uint64_t v82 = 0;
              }
              uint64_t v83 = 1;
LABEL_100:
              uint64_t v84 = v83;
              BOOL v18 = __OFADD__(v83++, 1);
              if (v18)
              {
LABEL_113:
                __break(1u);
LABEL_114:
                __break(1u);
                goto LABEL_115;
              }
              unint64_t v85 = 0;
              uint64_t v86 = *(void *)(v71 + 8 * v84);
              unint64_t v87 = *(void *)(v86 + 16);
              uint64_t v88 = v86 + 32;
              uint64_t v89 = v69;
              while (1)
              {
                if (v85 == v87)
                {
                  int v90 = 0;
                  unint64_t v91 = v87;
                  if (!v89) {
                    goto LABEL_98;
                  }
                }
                else
                {
                  if (v85 >= v87)
                  {
                    __break(1u);
                    goto LABEL_113;
                  }
                  int v90 = *(unsigned __int8 *)(v88 + v85);
                  unint64_t v91 = v85 + 1;
                  if (!v89)
                  {
LABEL_98:
                    if (v85 == v87) {
                      break;
                    }
LABEL_99:
                    if (v83 == v68) {
                      goto LABEL_88;
                    }
                    goto LABEL_100;
                  }
                }
                if (v89 == v82) {
                  goto LABEL_98;
                }
                if (v85 != v87)
                {
                  int v92 = *v89++;
                  unint64_t v85 = v91;
                  if (v90 == v92) {
                    continue;
                  }
                }
                goto LABEL_99;
              }
            }
            uint64_t v15 = 0;
            char v16 = 1;
          }
          else
          {
LABEL_88:
            uint64_t v73 = v99;
            sub_2208E542C((uint64_t)v27, v26);
            uint64_t v74 = *v73;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v74 = sub_22081C5B4(0, *((void *)v74 + 2) + 1, 1, v74);
            }
            unint64_t v76 = *((void *)v74 + 2);
            unint64_t v75 = *((void *)v74 + 3);
            if (v76 >= v75 >> 1) {
              uint64_t v74 = sub_22081C5B4((char *)(v75 > 1), v76 + 1, 1, v74);
            }
            *((void *)v74 + 2) = v76 + 1;
            v74[v76 + 32] = 0;
            *uint64_t v99 = v74;
            sub_22093E600();
            uint64_t v77 = sub_22093E5A0();
            if (!v78 || (uint64_t v79 = sub_2208BCA5C(v77, v78), v81 = v80, swift_bridgeObjectRelease(), (v81 & 1) != 0))
            {
              swift_release();
              swift_bridgeObjectRelease();
              return 0;
            }
            uint64_t v15 = v79;
            char v16 = 0;
          }
          uint64_t result = sub_2208F1E18(v15, v16);
          uint64_t v2 = v64;
          uint64_t v9 = v98;
          uint64_t v12 = v97;
          uint64_t v13 = v100;
          goto LABEL_8;
        }
LABEL_45:
        if (v30) {
          goto LABEL_46;
        }
      }
      else
      {
        if (v31 != v26) {
          goto LABEL_85;
        }
        uint64_t v29 = 0;
        if (v30) {
          goto LABEL_46;
        }
      }
LABEL_47:
      uint64_t v33 = *((void *)&v109 + 1);
      unint64_t v34 = (uint64_t *)(*((void *)&v109 + 1) + 16);
      uint64_t result = swift_beginAccess();
      uint64_t v35 = *(void *)(v33 + 16);
      if (!v35) {
        goto LABEL_133;
      }
      uint64_t v36 = *(void *)(v35 + 8);
      uint64_t v37 = v36 + 1;
      if (__OFADD__(v36, 1)) {
        goto LABEL_123;
      }
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        swift_beginAccess();
        uint64_t result = *v34;
        if (!*v34) {
          goto LABEL_135;
        }
        uint64_t v38 = *(void *)result;
        if (*(void *)result < v37)
        {
          if (v38 + 0x4000000000000000 < 0) {
            goto LABEL_127;
          }
          uint64_t v39 = 2 * v38;
          if (v39 <= v37) {
            uint64_t v40 = v37;
          }
          else {
            uint64_t v40 = v39;
          }
          sub_22088F714(result, v40, (uint64_t *)v105);
          uint64_t result = *(void *)(v33 + 16);
          if (!result) {
            goto LABEL_137;
          }
          if ((*(void *)(result + 8) & 0x8000000000000000) != 0) {
            goto LABEL_129;
          }
          MEMORY[0x223C6B140]();
          *(_OWORD *)unint64_t v34 = *(_OWORD *)v105;
        }
      }
      else
      {
        uint64_t result = swift_beginAccess();
        int v41 = (uint64_t *)*v34;
        if (!v41) {
          goto LABEL_136;
        }
        uint64_t v42 = *v41;
        if (*v41 < v37)
        {
          if (v42 + 0x4000000000000000 < 0) {
            goto LABEL_128;
          }
          if (2 * v42 <= v37) {
            uint64_t v42 = v37;
          }
          else {
            v42 *= 2;
          }
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413D8);
        uint64_t v43 = swift_allocObject();
        sub_22088E6B0((uint64_t)v41, v42, (uint64_t *)v105);
        *(_OWORD *)(v43 + 16) = *(_OWORD *)v105;
        swift_release();
        *((void *)&v109 + 1) = v43;
        uint64_t v33 = v43;
      }
      uint64_t result = swift_beginAccess();
      uint64_t v44 = *(void **)(v33 + 16);
      if (!v44) {
        goto LABEL_134;
      }
      uint64_t v45 = *v44 + 7;
      uint64_t v13 = v100;
      if (__OFADD__(*v44, 7)) {
        goto LABEL_124;
      }
      uint64_t v46 = v44 + 8;
      if (v45 < 0) {
        uint64_t v45 = *v44 + 14;
      }
      uint64_t v47 = v45 >> 3;
      uint64_t v49 = v47 - 1;
      BOOL v48 = v47 < 1;
      uint64_t v50 = v47 + 62;
      if (!v48) {
        uint64_t v50 = v49;
      }
      *(void *)((char *)&v46[v44[1] + 8] + (v50 & 0xFFFFFFFFFFFFFFC0)) = v29;
      uint64_t v51 = v44[1];
      uint64_t v52 = v51 + 7;
      if (v51 >= 0) {
        uint64_t v52 = v44[1];
      }
      uint64_t v53 = v52 >> 3;
      uint64_t v54 = v51 - (v52 & 0xFFFFFFFFFFFFFFF8);
      if (v54 >= 0) {
        char v55 = 1 << v54;
      }
      else {
        char v55 = 0;
      }
      *((unsigned char *)v46 + v53) |= v55;
      BOOL v18 = __OFADD__(v51, 1);
      uint64_t v56 = v51 + 1;
      if (v18) {
        goto LABEL_125;
      }
      v44[1] = v56;
LABEL_8:
      if (++v7 == v9) {
        goto LABEL_2;
      }
    }
  }
  __break(1u);
LABEL_132:
  __break(1u);
LABEL_133:
  __break(1u);
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
  return result;
}

uint64_t sub_220854818(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2208566D8(&v90, a1, a2, &qword_26AD41140, (uint64_t (*)(void))sub_220832810, sub_2208F1904);
  uint64_t v5 = v4;
  uint64_t result = sub_22080B658((uint64_t)(v2 + 27), (uint64_t)(v2 + 36));
  if (v3 == v5)
  {
LABEL_2:
    uint64_t v7 = v90;
    uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41140);
    uint64_t v89 = &off_26D2223C0;
    uint64_t v86 = v7;
    long long v87 = v91;
    sub_220857364((uint64_t)&v86, (uint64_t)(v2 + 36));
    return 1;
  }
  if (v5 < v3)
  {
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
LABEL_101:
    __break(1u);
    return result;
  }
  uint64_t v85 = v2[11];
  if (__OFSUB__(v85, 1)) {
    goto LABEL_100;
  }
  uint64_t v8 = v2[32];
  uint64_t v9 = v2[8];
  uint64_t v84 = v2[12];
  uint64_t v82 = v5;
  uint64_t v83 = v84 + 32;
  uint64_t v10 = v9 - 1;
  uint64_t v80 = v9;
  uint64_t v81 = v8;
  while (2)
  {
    if (v3 >= v5) {
      goto LABEL_92;
    }
    uint64_t v12 = v3 * v85;
    if ((unsigned __int128)(v3 * (__int128)v85) >> 64 != (v3 * v85) >> 63) {
      goto LABEL_93;
    }
    BOOL v13 = __OFADD__(v12, v8);
    unint64_t v14 = v12 + v8;
    if (v13) {
      goto LABEL_94;
    }
    if ((v14 & 0x8000000000000000) != 0) {
      goto LABEL_95;
    }
    unint64_t v15 = *(void *)(v84 + 16);
    if (v14 >= v15) {
      goto LABEL_96;
    }
    unint64_t v16 = v14 + 1;
    if (v14 + 1 >= v15) {
      goto LABEL_97;
    }
    uint64_t v17 = *(void *)(v83 + 8 * v14);
    uint64_t v18 = *(void *)(v83 + 8 * v16);
    if (v8 == v85 - 1)
    {
      if (v17 < v18)
      {
        while (1)
        {
          int v19 = *(unsigned __int8 *)(v10 + v18);
          if (v19 != 13 && v19 != 10) {
            break;
          }
          if (v17 >= --v18)
          {
            uint64_t v18 = v17;
            break;
          }
        }
      }
    }
    else
    {
      v18 -= v17 < v18;
    }
    if (!v9) {
      goto LABEL_101;
    }
    uint64_t v21 = v18 - v17;
    if (__OFSUB__(v18, v17)) {
      goto LABEL_98;
    }
    uint64_t v22 = v9 + v17;
    uint64_t v23 = v2[13];
    int v24 = (unsigned __int8 *)sub_2208BAD00(v9 + v17, v18 - v17);
    uint64_t v26 = *(void *)(v23 + 16);
    if (!v26) {
      goto LABEL_29;
    }
    uint64_t v27 = v24;
    uint64_t v28 = v25;
    uint64_t v30 = *(void *)(v23 + 32);
    uint64_t v29 = v23 + 32;
    uint64_t result = (uint64_t)sub_22091F900(v24, v25, v30);
    if (result)
    {
LABEL_6:
      uint64_t v11 = 2;
      goto LABEL_7;
    }
    if (v26 == 1) {
      goto LABEL_29;
    }
    uint64_t v58 = &v27[v28];
    if (!v27) {
      uint64_t v58 = 0;
    }
    uint64_t v59 = 1;
    while (2)
    {
      uint64_t v60 = v59;
      BOOL v13 = __OFADD__(v59++, 1);
      if (v13) {
        goto LABEL_90;
      }
      unint64_t v61 = 0;
      uint64_t v62 = *(void *)(v29 + 8 * v60);
      unint64_t v63 = *(void *)(v62 + 16);
      uint64_t v64 = v62 + 32;
      uint64_t v65 = v27;
      while (1)
      {
        if (v61 == v63)
        {
          int v66 = 0;
          unint64_t v67 = v63;
          if (!v65) {
            break;
          }
        }
        else
        {
          if (v61 >= v63)
          {
LABEL_87:
            __break(1u);
LABEL_88:
            __break(1u);
LABEL_89:
            __break(1u);
LABEL_90:
            __break(1u);
LABEL_91:
            __break(1u);
LABEL_92:
            __break(1u);
LABEL_93:
            __break(1u);
LABEL_94:
            __break(1u);
LABEL_95:
            __break(1u);
LABEL_96:
            __break(1u);
LABEL_97:
            __break(1u);
LABEL_98:
            __break(1u);
            goto LABEL_99;
          }
          int v66 = *(unsigned __int8 *)(v64 + v61);
          unint64_t v67 = v61 + 1;
          if (!v65) {
            break;
          }
        }
        if (v65 == v58) {
          break;
        }
        if (v61 != v63)
        {
          int v68 = *v65++;
          unint64_t v61 = v67;
          if (v66 == v68) {
            continue;
          }
        }
        goto LABEL_57;
      }
      if (v61 == v63) {
        goto LABEL_6;
      }
LABEL_57:
      if (v59 != v26) {
        continue;
      }
      break;
    }
LABEL_29:
    uint64_t v31 = v2[14];
    unsigned int v32 = (unsigned __int8 *)sub_2208BAD00(v22, v21);
    uint64_t v34 = *(void *)(v31 + 16);
    if (!v34) {
      goto LABEL_33;
    }
    uint64_t v35 = v32;
    uint64_t v36 = v33;
    uint64_t v38 = *(void *)(v31 + 32);
    uint64_t v37 = v31 + 32;
    uint64_t result = (uint64_t)sub_22091F900(v32, v33, v38);
    if (result)
    {
LABEL_31:
      uint64_t v11 = 1;
      goto LABEL_7;
    }
    if (v34 == 1) {
      goto LABEL_33;
    }
    uint64_t v69 = &v35[v36];
    if (!v35) {
      uint64_t v69 = 0;
    }
    uint64_t v70 = 1;
    while (2)
    {
      uint64_t v71 = v70;
      BOOL v13 = __OFADD__(v70++, 1);
      if (v13) {
        goto LABEL_91;
      }
      unint64_t v72 = 0;
      uint64_t v73 = *(void *)(v37 + 8 * v71);
      unint64_t v74 = *(void *)(v73 + 16);
      uint64_t v75 = v73 + 32;
      unint64_t v76 = v35;
      while (2)
      {
        if (v72 == v74)
        {
          int v77 = 0;
          unint64_t v78 = v74;
          if (!v76) {
            break;
          }
          goto LABEL_81;
        }
        if (v72 >= v74) {
          goto LABEL_88;
        }
        int v77 = *(unsigned __int8 *)(v75 + v72);
        unint64_t v78 = v72 + 1;
        if (v76)
        {
LABEL_81:
          if (v76 == v69) {
            break;
          }
          if (v72 == v74) {
            goto LABEL_73;
          }
          int v79 = *v76++;
          unint64_t v72 = v78;
          if (v77 != v79) {
            goto LABEL_73;
          }
          continue;
        }
        break;
      }
      if (v72 == v74) {
        goto LABEL_31;
      }
LABEL_73:
      if (v70 != v34) {
        continue;
      }
      break;
    }
LABEL_33:
    uint64_t v39 = v2[15];
    uint64_t v40 = (unsigned __int8 *)sub_2208BAD00(v22, v21);
    uint64_t v42 = *(void *)(v39 + 16);
    if (!v42) {
      goto LABEL_85;
    }
    uint64_t v43 = v40;
    uint64_t v44 = v41;
    uint64_t v46 = *(void *)(v39 + 32);
    uint64_t v45 = v39 + 32;
    uint64_t result = (uint64_t)sub_22091F900(v40, v41, v46);
    if (result)
    {
LABEL_35:
      uint64_t v11 = 0;
LABEL_7:
      ++v3;
      uint64_t result = sub_2208F228C(v11);
      uint64_t v8 = v81;
      uint64_t v5 = v82;
      uint64_t v9 = v80;
      if (v3 == v82) {
        goto LABEL_2;
      }
      continue;
    }
    break;
  }
  if (v42 != 1)
  {
    uint64_t v47 = &v43[v44];
    if (!v43) {
      uint64_t v47 = 0;
    }
    uint64_t v48 = 1;
    do
    {
      uint64_t v49 = v48;
      BOOL v13 = __OFADD__(v48++, 1);
      if (v13) {
        goto LABEL_89;
      }
      unint64_t v50 = 0;
      uint64_t v51 = *(void *)(v45 + 8 * v49);
      unint64_t v52 = *(void *)(v51 + 16);
      uint64_t v53 = v51 + 32;
      uint64_t v54 = v43;
      while (v50 == v52)
      {
        int v55 = 0;
        unint64_t v56 = v52;
        if (!v54) {
          goto LABEL_40;
        }
LABEL_49:
        if (v54 == v47) {
          goto LABEL_40;
        }
        if (v50 != v52)
        {
          int v57 = *v54++;
          unint64_t v50 = v56;
          if (v55 == v57) {
            continue;
          }
        }
        goto LABEL_41;
      }
      if (v50 >= v52)
      {
        __break(1u);
        goto LABEL_87;
      }
      int v55 = *(unsigned __int8 *)(v53 + v50);
      unint64_t v56 = v50 + 1;
      if (v54) {
        goto LABEL_49;
      }
LABEL_40:
      if (v50 == v52) {
        goto LABEL_35;
      }
LABEL_41:
      ;
    }
    while (v48 != v42);
  }
LABEL_85:
  swift_release();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_220854CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v82 = *MEMORY[0x263EF8340];
  uint64_t v6 = sub_22093E610();
  MEMORY[0x270FA5388](v6 - 8);
  v63[1] = (uint64_t)v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2208566D8(&v76, a1, a2, &qword_267F185D0, (uint64_t (*)(void))sub_220832AC8, sub_2208F1B30);
  uint64_t v10 = v9;
  v63[0] = (uint64_t)(v3 + 36);
  sub_22080B658((uint64_t)(v3 + 27), (uint64_t)(v3 + 36));
  if (v8 == v10)
  {
LABEL_2:
    uint64_t v11 = v76;
    uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F185D0);
    uint64_t v81 = &off_26D2223C0;
    unint64_t v78 = v11;
    long long v79 = v77;
    sub_220857364((uint64_t)&v78, v63[0]);
    return 1;
  }
  if (v10 < v8) {
    goto LABEL_83;
  }
  uint64_t v73 = v3[11];
  uint64_t v71 = v73 - 1;
  if (__OFSUB__(v73, 1))
  {
LABEL_84:
    __break(1u);
LABEL_85:
    __break(1u);
  }
  uint64_t v13 = v3[32];
  uint64_t v72 = v3[12];
  uint64_t v69 = v3;
  uint64_t v70 = v72 + 32;
  int v66 = (char *)&v77 + 8;
  uint64_t v67 = v13;
  uint64_t v75 = v3[8];
  uint64_t v14 = v75 - 1;
  uint64_t v68 = v10;
  uint64_t v64 = (char **)(v3 + 16);
  uint64_t v65 = v75 - 1;
  while (1)
  {
    if (v8 >= v10) {
      goto LABEL_73;
    }
    uint64_t v16 = v8 * v73;
    if ((unsigned __int128)(v8 * (__int128)v73) >> 64 != (v8 * v73) >> 63) {
      goto LABEL_74;
    }
    BOOL v17 = __OFADD__(v16, v13);
    unint64_t v18 = v16 + v13;
    if (v17) {
      goto LABEL_75;
    }
    if ((v18 & 0x8000000000000000) != 0) {
      goto LABEL_76;
    }
    unint64_t v19 = *(void *)(v72 + 16);
    if (v18 >= v19) {
      goto LABEL_77;
    }
    if (v18 + 1 >= v19) {
      goto LABEL_78;
    }
    uint64_t v20 = *(void *)(v70 + 8 * v18);
    uint64_t v21 = *(void *)(v70 + 8 * (v18 + 1));
    if (v13 == v71)
    {
      if (v20 < v21)
      {
        while (1)
        {
          int v22 = *(unsigned __int8 *)(v14 + v21);
          if (v22 != 13 && v22 != 10) {
            break;
          }
          if (v20 >= --v21)
          {
            uint64_t v21 = v20;
            break;
          }
        }
      }
    }
    else
    {
      v21 -= v20 < v21;
    }
    if (!v75) {
      goto LABEL_85;
    }
    uint64_t v24 = v21 - v20;
    if (__OFSUB__(v21, v20)) {
      goto LABEL_79;
    }
    uint64_t v25 = v75 + v20;
    if (v24 < 1)
    {
      uint64_t v26 = 0;
      uint64_t v31 = v24 - 1;
      if (__OFSUB__(v24, 1)) {
        goto LABEL_80;
      }
    }
    else
    {
      uint64_t v26 = 0;
      while (1)
      {
        unsigned int v27 = *(unsigned __int8 *)(v25 + v26);
        BOOL v28 = v27 > 0x20;
        uint64_t v29 = (1 << v27) & 0x100002600;
        if (v28 || v29 == 0) {
          break;
        }
        if (v24 == ++v26)
        {
          uint64_t v26 = v21 - v20;
          break;
        }
      }
      uint64_t v31 = v24 - 1;
      if (__OFSUB__(v24, 1)) {
        goto LABEL_80;
      }
    }
    if (v26 < v31)
    {
      unsigned int v32 = (unsigned __int8 *)(v14 + v21);
      while (1)
      {
        unsigned int v33 = *v32--;
        uint64_t v34 = (1 << v33) & 0x100002600;
        if (v33 > 0x20 || v34 == 0) {
          break;
        }
        if (v26 >= --v31)
        {
          uint64_t v31 = v26;
          break;
        }
      }
    }
    uint64_t v36 = v31 - v26;
    if (__OFSUB__(v31, v26)) {
      goto LABEL_81;
    }
    uint64_t v37 = v36 + 1;
    if (__OFADD__(v36, 1)) {
      goto LABEL_82;
    }
    uint64_t v74 = v8;
    uint64_t v38 = v3[13];
    uint64_t v39 = *(void *)(v38 + 16);
    if (!v39) {
      goto LABEL_52;
    }
    uint64_t v41 = *(void *)(v38 + 32);
    uint64_t v40 = v38 + 32;
    if ((sub_22091F900((unsigned __int8 *)(v25 + v26), v36 + 1, v41) & 1) == 0) {
      break;
    }
LABEL_6:
    LOBYTE(v78) = 1;
    unint64_t v15 = 0x100000000;
LABEL_7:
    uint64_t v3 = v69;
LABEL_8:
    uint64_t v8 = v74 + 1;
    sub_2208F23F8(v15);
    uint64_t v13 = v67;
    uint64_t v10 = v68;
    uint64_t v14 = v65;
    if (v8 == v68) {
      goto LABEL_2;
    }
  }
  if (v39 != 1)
  {
    uint64_t v52 = 1;
    while (1)
    {
      uint64_t v53 = v52;
      BOOL v17 = __OFADD__(v52++, 1);
      if (v17) {
        break;
      }
      uint64_t v54 = *(void *)(v40 + 8 * v53);
      uint64_t v55 = *(void *)(v54 + 16);
      unint64_t v56 = (unsigned __int8 *)(v54 + 32);
      uint64_t v57 = v75 + v26 + v20 + v55;
      uint64_t v58 = v37;
      uint64_t v59 = (unsigned __int8 *)(v25 + v26);
      while (v55)
      {
        if (v58)
        {
          int v61 = *v56++;
          int v60 = v61;
          int v62 = *v59++;
          --v58;
          --v55;
          if (v60 == v62) {
            continue;
          }
        }
        goto LABEL_64;
      }
      if (v25 + v26 + v37 == v57) {
        goto LABEL_6;
      }
LABEL_64:
      if (v52 == v39) {
        goto LABEL_52;
      }
    }
    __break(1u);
LABEL_73:
    __break(1u);
LABEL_74:
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
LABEL_82:
    __break(1u);
LABEL_83:
    __break(1u);
    goto LABEL_84;
  }
LABEL_52:
  unint64_t v78 = (char *)(v25 + v24);
  char v42 = *(unsigned char *)(v25 + v24);
  *(unsigned char *)(v25 + v24) = 0;
  float v43 = strtof((const char *)v25, &v78);
  if (v78 && &v78[-v25] == (char *)v24)
  {
    *(unsigned char *)(v25 + v24) = v42;
    LOBYTE(v78) = 0;
    unint64_t v15 = LODWORD(v43);
    goto LABEL_7;
  }
  *(unsigned char *)(v25 + v24) = v42;
  uint64_t v44 = v64;
  sub_2208E542C(v25, v24);
  uint64_t v45 = *v44;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v3 = v69;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    uint64_t v45 = sub_22081C5B4(0, *((void *)v45 + 2) + 1, 1, v45);
  }
  unint64_t v48 = *((void *)v45 + 2);
  unint64_t v47 = *((void *)v45 + 3);
  if (v48 >= v47 >> 1) {
    uint64_t v45 = sub_22081C5B4((char *)(v47 > 1), v48 + 1, 1, v45);
  }
  *((void *)v45 + 2) = v48 + 1;
  v45[v48 + 32] = 0;
  *uint64_t v64 = v45;
  sub_22093E600();
  uint64_t v49 = sub_22093E5A0();
  if (v50)
  {
    unint64_t v51 = sub_22085C044(v49, v50);
    swift_bridgeObjectRelease();
    if ((v51 & 0x100000000) == 0)
    {
      LOBYTE(v78) = 0;
      unint64_t v15 = v51;
      goto LABEL_8;
    }
  }
  swift_release();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_220855200(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v85 = *MEMORY[0x263EF8340];
  uint64_t v6 = sub_22093E610();
  MEMORY[0x270FA5388](v6 - 8);
  v66[1] = (uint64_t)v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2208566D8(&v79, a1, a2, &qword_26AD413E8, (uint64_t (*)(void))sub_220832520, sub_2208F1888);
  uint64_t v10 = v9;
  v66[0] = (uint64_t)(v3 + 36);
  sub_22080B658((uint64_t)(v3 + 27), (uint64_t)(v3 + 36));
  if (v8 == v10)
  {
LABEL_2:
    uint64_t v11 = v79;
    uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413E8);
    uint64_t v84 = &off_26D2223C0;
    uint64_t v81 = v11;
    long long v82 = v80;
    sub_220857364((uint64_t)&v81, v66[0]);
    return 1;
  }
  if (v10 < v8) {
    goto LABEL_83;
  }
  uint64_t v76 = v3[11];
  uint64_t v74 = v76 - 1;
  if (__OFSUB__(v76, 1))
  {
LABEL_84:
    __break(1u);
LABEL_85:
    __break(1u);
  }
  uint64_t v13 = v3[32];
  uint64_t v75 = v3[12];
  uint64_t v72 = v3;
  uint64_t v73 = v75 + 32;
  uint64_t v69 = (char *)&v80 + 8;
  uint64_t v70 = v13;
  uint64_t v78 = v3[8];
  uint64_t v14 = v78 - 1;
  uint64_t v71 = v10;
  uint64_t v67 = (char **)(v3 + 16);
  uint64_t v68 = v78 - 1;
  while (1)
  {
    if (v8 >= v10) {
      goto LABEL_73;
    }
    uint64_t v17 = v8 * v76;
    if ((unsigned __int128)(v8 * (__int128)v76) >> 64 != (v8 * v76) >> 63) {
      goto LABEL_74;
    }
    BOOL v18 = __OFADD__(v17, v13);
    unint64_t v19 = v17 + v13;
    if (v18) {
      goto LABEL_75;
    }
    if ((v19 & 0x8000000000000000) != 0) {
      goto LABEL_76;
    }
    unint64_t v20 = *(void *)(v75 + 16);
    if (v19 >= v20) {
      goto LABEL_77;
    }
    if (v19 + 1 >= v20) {
      goto LABEL_78;
    }
    uint64_t v21 = *(void *)(v73 + 8 * v19);
    uint64_t v22 = *(void *)(v73 + 8 * (v19 + 1));
    if (v13 == v74)
    {
      if (v21 < v22)
      {
        while (1)
        {
          int v23 = *(unsigned __int8 *)(v14 + v22);
          if (v23 != 13 && v23 != 10) {
            break;
          }
          if (v21 >= --v22)
          {
            uint64_t v22 = v21;
            break;
          }
        }
      }
    }
    else
    {
      v22 -= v21 < v22;
    }
    if (!v78) {
      goto LABEL_85;
    }
    uint64_t v25 = v22 - v21;
    if (__OFSUB__(v22, v21)) {
      goto LABEL_79;
    }
    uint64_t v26 = v78 + v21;
    if (v25 < 1)
    {
      uint64_t v27 = 0;
      uint64_t v32 = v25 - 1;
      if (__OFSUB__(v25, 1)) {
        goto LABEL_80;
      }
    }
    else
    {
      uint64_t v27 = 0;
      while (1)
      {
        unsigned int v28 = *(unsigned __int8 *)(v26 + v27);
        BOOL v29 = v28 > 0x20;
        uint64_t v30 = (1 << v28) & 0x100002600;
        if (v29 || v30 == 0) {
          break;
        }
        if (v25 == ++v27)
        {
          uint64_t v27 = v22 - v21;
          break;
        }
      }
      uint64_t v32 = v25 - 1;
      if (__OFSUB__(v25, 1)) {
        goto LABEL_80;
      }
    }
    if (v27 < v32)
    {
      unsigned int v33 = (unsigned __int8 *)(v14 + v22);
      while (1)
      {
        unsigned int v34 = *v33--;
        uint64_t v35 = (1 << v34) & 0x100002600;
        if (v34 > 0x20 || v35 == 0) {
          break;
        }
        if (v27 >= --v32)
        {
          uint64_t v32 = v27;
          break;
        }
      }
    }
    uint64_t v37 = v32 - v27;
    if (__OFSUB__(v32, v27)) {
      goto LABEL_81;
    }
    uint64_t v38 = v37 + 1;
    if (__OFADD__(v37, 1)) {
      goto LABEL_82;
    }
    uint64_t v77 = v8;
    uint64_t v39 = v3[13];
    uint64_t v40 = *(void *)(v39 + 16);
    if (!v40) {
      goto LABEL_52;
    }
    uint64_t v42 = *(void *)(v39 + 32);
    uint64_t v41 = v39 + 32;
    if ((sub_22091F900((unsigned __int8 *)(v26 + v27), v37 + 1, v42) & 1) == 0) {
      break;
    }
LABEL_6:
    uint64_t v15 = 0;
    char v16 = 1;
LABEL_7:
    sub_2208F2014(v15, v16);
    uint64_t v3 = v72;
LABEL_8:
    uint64_t v8 = v77 + 1;
    uint64_t v13 = v70;
    uint64_t v10 = v71;
    uint64_t v14 = v68;
    if (v77 + 1 == v71) {
      goto LABEL_2;
    }
  }
  if (v40 != 1)
  {
    uint64_t v55 = 1;
    while (1)
    {
      uint64_t v56 = v55;
      BOOL v18 = __OFADD__(v55++, 1);
      if (v18) {
        break;
      }
      uint64_t v57 = *(void *)(v41 + 8 * v56);
      uint64_t v58 = *(void *)(v57 + 16);
      uint64_t v59 = (unsigned __int8 *)(v57 + 32);
      uint64_t v60 = v78 + v27 + v21 + v58;
      uint64_t v61 = v38;
      int v62 = (unsigned __int8 *)(v26 + v27);
      while (v58)
      {
        if (v61)
        {
          int v64 = *v59++;
          int v63 = v64;
          int v65 = *v62++;
          --v61;
          --v58;
          if (v63 == v65) {
            continue;
          }
        }
        goto LABEL_64;
      }
      if (v26 + v27 + v38 == v60) {
        goto LABEL_6;
      }
LABEL_64:
      if (v55 == v40) {
        goto LABEL_52;
      }
    }
    __break(1u);
LABEL_73:
    __break(1u);
LABEL_74:
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
LABEL_82:
    __break(1u);
LABEL_83:
    __break(1u);
    goto LABEL_84;
  }
LABEL_52:
  uint64_t v81 = (char *)(v26 + v25);
  char v43 = *(unsigned char *)(v26 + v25);
  *(unsigned char *)(v26 + v25) = 0;
  double v44 = strtod((const char *)v26, &v81);
  if (v81 && &v81[-v26] == (char *)v25)
  {
    uint64_t v15 = *(void *)&v44;
    *(unsigned char *)(v26 + v25) = v43;
    char v16 = 0;
    goto LABEL_7;
  }
  *(unsigned char *)(v26 + v25) = v43;
  uint64_t v45 = v67;
  sub_2208E542C(v26, v25);
  uint64_t v46 = *v45;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v3 = v72;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    uint64_t v46 = sub_22081C5B4(0, *((void *)v46 + 2) + 1, 1, v46);
  }
  unint64_t v49 = *((void *)v46 + 2);
  unint64_t v48 = *((void *)v46 + 3);
  if (v49 >= v48 >> 1) {
    uint64_t v46 = sub_22081C5B4((char *)(v48 > 1), v49 + 1, 1, v46);
  }
  *((void *)v46 + 2) = v49 + 1;
  v46[v49 + 32] = 0;
  *uint64_t v67 = v46;
  sub_22093E600();
  uint64_t v50 = sub_22093E5A0();
  if (v51)
  {
    uint64_t v52 = sub_22085C140(v50, v51);
    char v54 = v53;
    swift_bridgeObjectRelease();
    if ((v54 & 1) == 0)
    {
      sub_2208F2014(v52, 0);
      goto LABEL_8;
    }
  }
  swift_release();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_220855744(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_22093E100();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v72 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD411B8);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v74 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v66 - v12;
  uint64_t v14 = sub_22093E610();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v73 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_2208566D8(&v83, a1, a2, &qword_26AD41138, sub_220832D70, sub_2208F1938);
  uint64_t v18 = v17;
  int v66 = v3 + 36;
  uint64_t result = sub_22080B658((uint64_t)(v3 + 27), (uint64_t)(v3 + 36));
  if (v16 == v18)
  {
LABEL_2:
    uint64_t v20 = v83;
    uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41138);
    long long v82 = &off_26D2223C0;
    uint64_t v79 = v20;
    long long v80 = v84;
    sub_220857364((uint64_t)&v79, (uint64_t)v66);
    return 1;
  }
  if (v18 < v16) {
    goto LABEL_65;
  }
  uint64_t v75 = (char *)&v84 + 8;
  uint64_t v76 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  uint64_t v77 = v18;
  uint64_t v78 = (char **)(v3 + 16);
  uint64_t v70 = (unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  uint64_t v71 = v3 + 24;
  uint64_t v68 = (void (**)(char *, char *, uint64_t))(v7 + 16);
  uint64_t v69 = (void (**)(char *, char *, uint64_t))(v7 + 32);
  uint64_t v67 = (uint64_t (**)(char *, uint64_t))(v7 + 8);
  while (1)
  {
    if (v16 >= v18) {
      goto LABEL_57;
    }
    uint64_t v21 = v3[11];
    uint64_t v22 = v16 * v21;
    if ((unsigned __int128)(v16 * (__int128)v21) >> 64 != (v16 * v21) >> 63)
    {
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
      return result;
    }
    uint64_t v23 = v3[32];
    BOOL v24 = __OFADD__(v22, v23);
    unint64_t v25 = v22 + v23;
    if (v24) {
      goto LABEL_59;
    }
    if ((v25 & 0x8000000000000000) != 0) {
      goto LABEL_60;
    }
    uint64_t v26 = v3[12];
    unint64_t v27 = *(void *)(v26 + 16);
    if (v25 >= v27) {
      goto LABEL_61;
    }
    unint64_t v28 = v25 + 1;
    if (v25 + 1 >= v27) {
      goto LABEL_62;
    }
    uint64_t v29 = v21 - 1;
    if (__OFSUB__(v21, 1)) {
      goto LABEL_63;
    }
    uint64_t v30 = v3[8];
    uint64_t v31 = v26 + 32;
    uint64_t v32 = *(void *)(v31 + 8 * v25);
    uint64_t v33 = *(void *)(v31 + 8 * v28);
    if (v23 == v29)
    {
      if (v32 < v33)
      {
        while (1)
        {
          int v34 = *(unsigned __int8 *)(v30 - 1 + v33);
          if (v34 != 13 && v34 != 10) {
            break;
          }
          if (v32 >= --v33)
          {
            uint64_t v33 = v32;
            break;
          }
        }
      }
    }
    else
    {
      v33 -= v32 < v33;
    }
    if (!v30) {
      goto LABEL_66;
    }
    uint64_t v36 = v33 - v32;
    if (__OFSUB__(v33, v32)) {
      goto LABEL_64;
    }
    uint64_t v37 = v30 + v32;
    uint64_t v38 = v3[13];
    uint64_t v39 = (unsigned __int8 *)sub_2208BAD00(v30 + v32, v33 - v32);
    uint64_t v41 = *(void *)(v38 + 16);
    if (!v41) {
      goto LABEL_29;
    }
    uint64_t v42 = v39;
    uint64_t v43 = v40;
    uint64_t v45 = *(void *)(v38 + 32);
    uint64_t v44 = v38 + 32;
    uint64_t result = (uint64_t)sub_22091F900(v39, v40, v45);
    if ((result & 1) == 0) {
      break;
    }
LABEL_5:
    (*v76)(v13, 1, 1, v6);
    sub_2208F1E60((uint64_t)v13);
    uint64_t result = sub_2208573C0((uint64_t)v13);
LABEL_6:
    ++v16;
    uint64_t v18 = v77;
    if (v16 == v77) {
      goto LABEL_2;
    }
  }
  if (v41 != 1)
  {
    uint64_t v55 = &v42[v43];
    if (!v42) {
      uint64_t v55 = 0;
    }
    uint64_t v56 = 1;
    do
    {
      uint64_t v57 = v56;
      BOOL v24 = __OFADD__(v56++, 1);
      if (v24)
      {
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
        goto LABEL_58;
      }
      unint64_t v58 = 0;
      uint64_t v59 = *(void *)(v44 + 8 * v57);
      unint64_t v60 = *(void *)(v59 + 16);
      uint64_t v61 = v59 + 32;
      int v62 = v42;
      while (v58 == v60)
      {
        int v63 = 0;
        unint64_t v64 = v60;
        if (!v62) {
          goto LABEL_39;
        }
LABEL_48:
        if (v62 == v55) {
          goto LABEL_39;
        }
        if (v58 != v60)
        {
          int v65 = *v62++;
          unint64_t v58 = v64;
          if (v63 == v65) {
            continue;
          }
        }
        goto LABEL_40;
      }
      if (v58 >= v60)
      {
        __break(1u);
        goto LABEL_56;
      }
      int v63 = *(unsigned __int8 *)(v61 + v58);
      unint64_t v64 = v58 + 1;
      if (v62) {
        goto LABEL_48;
      }
LABEL_39:
      if (v58 == v60) {
        goto LABEL_5;
      }
LABEL_40:
      ;
    }
    while (v56 != v41);
  }
LABEL_29:
  uint64_t v46 = v36;
  unint64_t v47 = v78;
  sub_2208E542C(v37, v46);
  unint64_t v48 = *v47;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v48 = sub_22081C5B4(0, *((void *)v48 + 2) + 1, 1, v48);
  }
  unint64_t v49 = v74;
  unint64_t v51 = *((void *)v48 + 2);
  unint64_t v50 = *((void *)v48 + 3);
  if (v51 >= v50 >> 1) {
    unint64_t v48 = sub_22081C5B4((char *)(v50 > 1), v51 + 1, 1, v48);
  }
  *((void *)v48 + 2) = v51 + 1;
  v48[v51 + 32] = 0;
  *uint64_t v78 = v48;
  sub_22093E600();
  uint64_t v52 = sub_22093E5A0();
  if (!v53)
  {
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_2208BB36C(v52, v53, v49);
  swift_bridgeObjectRelease();
  if ((*v70)(v49, 1, v6) != 1)
  {
    char v54 = v72;
    (*v69)(v72, v49, v6);
    (*v68)(v13, v54, v6);
    (*v76)(v13, 0, 1, v6);
    sub_2208F1E60((uint64_t)v13);
    sub_2208573C0((uint64_t)v13);
    uint64_t result = (*v67)(v54, v6);
    goto LABEL_6;
  }
  swift_release();
  swift_bridgeObjectRelease();
  sub_2208573C0((uint64_t)v49);
  return 0;
}

uint64_t sub_220855D48(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_22093E610();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v61 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2208566D8(&v78, a1, a2, &qword_26AD413E0, sub_2208322FC, sub_2208F18BC);
  uint64_t v10 = v9;
  unint64_t v60 = v3 + 36;
  uint64_t result = sub_22080B658((uint64_t)(v3 + 27), (uint64_t)(v3 + 36));
  if (v8 == v10)
  {
LABEL_2:
    uint64_t v12 = v78;
    uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413E0);
    uint64_t v77 = &off_26D2223C0;
    uint64_t v74 = v12;
    long long v75 = v79;
    sub_220857364((uint64_t)&v74, (uint64_t)v60);
    return 1;
  }
  if (v10 < v8) {
    goto LABEL_78;
  }
  uint64_t v70 = v3[11];
  uint64_t v68 = v70 - 1;
  if (!__OFSUB__(v70, 1))
  {
    uint64_t v13 = v3[32];
    uint64_t v69 = v3[12];
    int v66 = v3;
    uint64_t v67 = v69 + 32;
    uint64_t v14 = v3[8];
    uint64_t v71 = (char **)(v3 + 16);
    uint64_t v73 = v14;
    uint64_t v15 = v14 - 1;
    uint64_t v64 = v13;
    uint64_t v65 = v10;
    int v62 = (char *)&v79 + 8;
    uint64_t v63 = v14 - 1;
    while (1)
    {
      if (v8 >= v10)
      {
LABEL_68:
        __break(1u);
LABEL_69:
        __break(1u);
LABEL_70:
        __break(1u);
LABEL_71:
        __break(1u);
LABEL_72:
        __break(1u);
LABEL_73:
        __break(1u);
LABEL_74:
        __break(1u);
LABEL_75:
        __break(1u);
LABEL_76:
        __break(1u);
LABEL_77:
        __break(1u);
LABEL_78:
        __break(1u);
        break;
      }
      uint64_t v16 = v8 * v70;
      if ((unsigned __int128)(v8 * (__int128)v70) >> 64 != (v8 * v70) >> 63) {
        goto LABEL_69;
      }
      BOOL v17 = __OFADD__(v16, v13);
      unint64_t v18 = v16 + v13;
      if (v17) {
        goto LABEL_70;
      }
      if ((v18 & 0x8000000000000000) != 0) {
        goto LABEL_71;
      }
      unint64_t v19 = *(void *)(v69 + 16);
      if (v18 >= v19) {
        goto LABEL_72;
      }
      if (v18 + 1 >= v19) {
        goto LABEL_73;
      }
      uint64_t v20 = *(void *)(v67 + 8 * v18);
      uint64_t v21 = *(void *)(v67 + 8 * (v18 + 1));
      if (v13 == v68)
      {
        if (v20 < v21)
        {
          while (1)
          {
            int v22 = *(unsigned __int8 *)(v15 + v21);
            if (v22 != 13 && v22 != 10) {
              break;
            }
            if (v20 >= --v21)
            {
              uint64_t v21 = v20;
              break;
            }
          }
        }
      }
      else
      {
        v21 -= v20 < v21;
      }
      if (!v73) {
        goto LABEL_80;
      }
      uint64_t v24 = v21 - v20;
      if (__OFSUB__(v21, v20)) {
        goto LABEL_74;
      }
      uint64_t v25 = v73 + v20;
      if (v24 < 1)
      {
        uint64_t v26 = 0;
        uint64_t v31 = v24 - 1;
        if (__OFSUB__(v24, 1)) {
          goto LABEL_75;
        }
      }
      else
      {
        uint64_t v26 = 0;
        while (1)
        {
          unsigned int v27 = *(unsigned __int8 *)(v25 + v26);
          BOOL v28 = v27 > 0x20;
          uint64_t v29 = (1 << v27) & 0x100002600;
          if (v28 || v29 == 0) {
            break;
          }
          if (v24 == ++v26)
          {
            uint64_t v26 = v21 - v20;
            break;
          }
        }
        uint64_t v31 = v24 - 1;
        if (__OFSUB__(v24, 1)) {
          goto LABEL_75;
        }
      }
      if (v26 < v31)
      {
        uint64_t v32 = (unsigned __int8 *)(v15 + v21);
        while (1)
        {
          unsigned int v33 = *v32--;
          uint64_t v34 = (1 << v33) & 0x100002600;
          if (v33 > 0x20 || v34 == 0) {
            break;
          }
          if (v26 >= --v31)
          {
            uint64_t v31 = v26;
            break;
          }
        }
      }
      uint64_t v36 = v31 - v26;
      if (__OFSUB__(v31, v26)) {
        goto LABEL_76;
      }
      uint64_t v37 = v36 + 1;
      if (__OFADD__(v36, 1)) {
        goto LABEL_77;
      }
      uint64_t v72 = v8;
      uint64_t v38 = v3[13];
      uint64_t v39 = *(void *)(v38 + 16);
      if (v39)
      {
        uint64_t v41 = *(void *)(v38 + 32);
        uint64_t v40 = v38 + 32;
        uint64_t result = (uint64_t)sub_22091F900((unsigned __int8 *)(v25 + v26), v36 + 1, v41);
        if (result)
        {
LABEL_6:
          uint64_t result = sub_2208F2244(0, 0);
          uint64_t v3 = v66;
          goto LABEL_7;
        }
        if (v39 != 1)
        {
          uint64_t v48 = 1;
          while (1)
          {
            uint64_t v49 = v48;
            BOOL v17 = __OFADD__(v48++, 1);
            if (v17) {
              break;
            }
            uint64_t v50 = *(void *)(v40 + 8 * v49);
            uint64_t v51 = *(void *)(v50 + 16);
            uint64_t v52 = (unsigned __int8 *)(v50 + 32);
            uint64_t v53 = v73 + v26 + v20 + v51;
            uint64_t v54 = v37;
            uint64_t v55 = (unsigned __int8 *)(v25 + v26);
            while (v51)
            {
              if (v54)
              {
                int v57 = *v52++;
                int v56 = v57;
                int v58 = *v55++;
                --v54;
                --v51;
                if (v56 == v58) {
                  continue;
                }
              }
              goto LABEL_59;
            }
            if (v25 + v26 + v37 == v53) {
              goto LABEL_6;
            }
LABEL_59:
            if (v48 == v39) {
              goto LABEL_51;
            }
          }
          __break(1u);
          goto LABEL_68;
        }
      }
LABEL_51:
      uint64_t v42 = v71;
      sub_2208E542C(v25, v24);
      uint64_t v43 = *v42;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v43 = sub_22081C5B4(0, *((void *)v43 + 2) + 1, 1, v43);
      }
      uint64_t v3 = v66;
      unint64_t v45 = *((void *)v43 + 2);
      unint64_t v44 = *((void *)v43 + 3);
      if (v45 >= v44 >> 1) {
        uint64_t v43 = sub_22081C5B4((char *)(v44 > 1), v45 + 1, 1, v43);
      }
      *((void *)v43 + 2) = v45 + 1;
      v43[v45 + 32] = 0;
      *uint64_t v71 = v43;
      sub_22093E600();
      uint64_t v46 = sub_22093E5A0();
      if (!v47)
      {
        swift_release();
        swift_bridgeObjectRelease();
        return 0;
      }
      sub_2208F2244(v46, v47);
      uint64_t result = swift_bridgeObjectRelease();
LABEL_7:
      uint64_t v8 = v72 + 1;
      uint64_t v13 = v64;
      uint64_t v10 = v65;
      uint64_t v15 = v63;
      if (v72 + 1 == v65) {
        goto LABEL_2;
      }
    }
  }
  __break(1u);
LABEL_80:
  __break(1u);
  return result;
}

uint64_t sub_2208561FC(uint64_t a1, uint64_t a2)
{
  uint64_t v73 = *MEMORY[0x263EF8340];
  uint64_t v3 = sub_2208566D8(&v67, a1, a2, &qword_267F185C8, sub_2208331B0, sub_2208F1C7C);
  uint64_t v5 = v4;
  uint64_t v60 = (uint64_t)(v2 + 36);
  sub_22080B658((uint64_t)(v2 + 27), (uint64_t)(v2 + 36));
  if (v3 != v5)
  {
    if (v5 < v3) {
      goto LABEL_80;
    }
    uint64_t v61 = v2 + 16;
    uint64_t v62 = v5;
    uint64_t v63 = v2;
    while (1)
    {
      if (v3 >= v5) {
        goto LABEL_69;
      }
      uint64_t v10 = v2[11];
      uint64_t v11 = v3 * v10;
      if ((unsigned __int128)(v3 * (__int128)v10) >> 64 != (v3 * v10) >> 63) {
        goto LABEL_70;
      }
      uint64_t v12 = v2[32];
      BOOL v13 = __OFADD__(v11, v12);
      unint64_t v14 = v11 + v12;
      if (v13) {
        goto LABEL_71;
      }
      if ((v14 & 0x8000000000000000) != 0) {
        goto LABEL_72;
      }
      uint64_t v15 = v2[12];
      unint64_t v16 = *(void *)(v15 + 16);
      if (v14 >= v16) {
        goto LABEL_73;
      }
      if (v14 + 1 >= v16) {
        goto LABEL_74;
      }
      uint64_t v17 = v10 - 1;
      if (__OFSUB__(v10, 1)) {
        goto LABEL_75;
      }
      uint64_t v18 = v2[8];
      uint64_t v19 = *(void *)(v15 + 32 + 8 * v14);
      uint64_t v20 = *(void *)(v15 + 32 + 8 * (v14 + 1));
      if (v12 == v17)
      {
        if (v19 < v20)
        {
          while (1)
          {
            int v21 = *(unsigned __int8 *)(v18 - 1 + v20);
            if (v21 != 13 && v21 != 10) {
              break;
            }
            if (v19 >= --v20)
            {
              uint64_t v20 = v19;
              break;
            }
          }
        }
      }
      else
      {
        v20 -= v19 < v20;
      }
      if (!v18) {
        goto LABEL_81;
      }
      uint64_t v23 = v20 - v19;
      if (__OFSUB__(v20, v19)) {
        goto LABEL_76;
      }
      uint64_t v24 = v18 + v19;
      if (v23 < 1)
      {
        uint64_t v25 = 0;
        uint64_t v30 = v23 - 1;
        if (__OFSUB__(v23, 1)) {
          goto LABEL_77;
        }
      }
      else
      {
        uint64_t v25 = 0;
        while (1)
        {
          unsigned int v26 = *(unsigned __int8 *)(v24 + v25);
          BOOL v27 = v26 > 0x20;
          uint64_t v28 = (1 << v26) & 0x100002600;
          if (v27 || v28 == 0) {
            break;
          }
          if (v23 == ++v25)
          {
            uint64_t v25 = v20 - v19;
            break;
          }
        }
        uint64_t v30 = v23 - 1;
        if (__OFSUB__(v23, 1)) {
          goto LABEL_77;
        }
      }
      if (v25 < v30)
      {
        uint64_t v31 = (unsigned __int8 *)(v18 + v20 - 1);
        while (1)
        {
          unsigned int v32 = *v31--;
          uint64_t v33 = (1 << v32) & 0x100002600;
          if (v32 > 0x20 || v33 == 0) {
            break;
          }
          if (v25 >= --v30)
          {
            uint64_t v30 = v25;
            break;
          }
        }
      }
      uint64_t v35 = v30 - v25;
      if (__OFSUB__(v30, v25)) {
        goto LABEL_78;
      }
      uint64_t v36 = v35 + 1;
      if (__OFADD__(v35, 1)) {
        goto LABEL_79;
      }
      uint64_t v64 = v3;
      uint64_t v37 = v2[13];
      uint64_t v38 = *(void *)(v37 + 16);
      if (!v38) {
        goto LABEL_53;
      }
      uint64_t v39 = v2[8];
      uint64_t v41 = *(void *)(v37 + 32);
      uint64_t v40 = v37 + 32;
      if ((sub_22091F900((unsigned __int8 *)(v24 + v25), v35 + 1, v41) & 1) == 0) {
        break;
      }
LABEL_51:
      sub_2208F256C(0, 0xF000000000000000);
      uint64_t v5 = v62;
LABEL_7:
      uint64_t v2 = v63;
      uint64_t v3 = v64 + 1;
      if (v64 + 1 == v5) {
        goto LABEL_2;
      }
    }
    if (v38 != 1)
    {
      uint64_t v49 = 1;
      while (1)
      {
        uint64_t v50 = v49;
        BOOL v13 = __OFADD__(v49++, 1);
        if (v13) {
          break;
        }
        uint64_t v51 = *(void *)(v40 + 8 * v50);
        uint64_t v52 = *(void *)(v51 + 16);
        uint64_t v53 = (unsigned __int8 *)(v51 + 32);
        uint64_t v54 = v39 + v25 + v19 + v52;
        uint64_t v55 = v36;
        int v56 = (unsigned __int8 *)(v24 + v25);
        while (v52)
        {
          if (v55)
          {
            int v58 = *v53++;
            int v57 = v58;
            int v59 = *v56++;
            --v55;
            --v52;
            if (v57 == v59) {
              continue;
            }
          }
          goto LABEL_60;
        }
        if (v24 + v25 + v36 == v54) {
          goto LABEL_51;
        }
LABEL_60:
        if (v49 == v38) {
          goto LABEL_53;
        }
      }
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
LABEL_77:
      __break(1u);
LABEL_78:
      __break(1u);
LABEL_79:
      __break(1u);
LABEL_80:
      __break(1u);
LABEL_81:
      __break(1u);
    }
LABEL_53:
    sub_2208E542C(v24, v23);
    uint64_t v42 = *v61;
    uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41170);
    uint64_t v71 = v43;
    uint64_t v72 = (_UNKNOWN **)sub_22084C880();
    uint64_t v69 = v42;
    unint64_t v44 = __swift_project_boxed_opaque_existential_1(&v69, v43);
    uint64_t v45 = *v44;
    size_t v46 = *(void *)(*v44 + 16);
    if (v46)
    {
      uint64_t v5 = v62;
      if (v46 <= 0xE)
      {
        memset(__dst, 0, sizeof(__dst));
        unsigned __int8 v66 = v46;
        memcpy(__dst, (const void *)(v45 + 32), v46);
        uint64_t v8 = *(void *)__dst;
        unint64_t v9 = *(unsigned int *)&__dst[8] | ((unint64_t)__dst[12] << 32) | ((unint64_t)__dst[13] << 40) | ((unint64_t)v66 << 48);
        swift_bridgeObjectRetain_n();
      }
      else
      {
        sub_22093DE70();
        swift_allocObject();
        swift_bridgeObjectRetain_n();
        uint64_t v47 = sub_22093DE30();
        uint64_t v48 = v47;
        if (v46 >= 0x7FFFFFFF)
        {
          sub_22093DFD0();
          uint64_t v8 = swift_allocObject();
          *(void *)(v8 + 16) = 0;
          *(void *)(v8 + 24) = v46;
          unint64_t v9 = v48 | 0x8000000000000000;
        }
        else
        {
          uint64_t v8 = v46 << 32;
          unint64_t v9 = v47 | 0x4000000000000000;
        }
      }
    }
    else
    {
      swift_bridgeObjectRetain_n();
      uint64_t v8 = 0;
      unint64_t v9 = 0xC000000000000000;
      uint64_t v5 = v62;
    }
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v69);
    sub_2208F256C(v8, v9);
    sub_22080B88C(v8, v9);
    goto LABEL_7;
  }
LABEL_2:
  uint64_t v6 = v67;
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F185C8);
  uint64_t v72 = &off_26D2223C0;
  uint64_t v69 = v6;
  long long v70 = v68;
  return sub_220857364((uint64_t)&v69, v60);
}

uint64_t sub_2208566D8(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(void), uint64_t (*a6)(uint64_t))
{
  sub_22080B5B8((uint64_t)(v6 + 36), (uint64_t)&v23);
  sub_2208343B8(&v23, (uint64_t)v22);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41110);
  __swift_instantiateConcreteTypeFromMangledName(a4);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    uint64_t v15 = v19;
    uint64_t v14 = v20;
    uint64_t v16 = v21;
LABEL_6:
    *a1 = v15;
    a1[1] = v14;
    a1[2] = v16;
    return a2;
  }
  a2 = v6[33];
  uint64_t v17 = v6[34];
  uint64_t v18 = v17 - a2;
  if (__OFSUB__(v17, a2))
  {
    __break(1u);
  }
  else
  {
    uint64_t v15 = v6[41];
    uint64_t v14 = v6[42];
    swift_bridgeObjectRetain();
    uint64_t v24 = a5(MEMORY[0x263F8EE78]);
    uint64_t result = a6(v18);
    if (a2 <= a3)
    {
      uint64_t v16 = v24;
      goto LABEL_6;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2208567F0@<X0>(uint64_t a1@<X8>)
{
  return sub_22080B5B8(v1 + 288, a1);
}

uint64_t sub_2208567FC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  v2[41] = a1;
  v2[42] = a2;
  uint64_t v5 = v2[39];
  uint64_t v6 = v2[40];
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v2 + 36), v5);
  uint64_t v7 = *(void *)(v6 + 8);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 16);
  swift_bridgeObjectRetain();
  return v8(a1, a2, v5, v7);
}

uint64_t sub_220856888(uint64_t a1)
{
  return sub_220853C54(a1);
}

uint64_t destroy for InferringColumnProcessor(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 216);
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 288);

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for InferringColumnProcessor(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 60) = *(unsigned char *)(a2 + 60);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  uint64_t v6 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v6;
  uint64_t v7 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v7;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  uint64_t v18 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v18;
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(_DWORD *)(a1 + 184) = *(_DWORD *)(a2 + 184);
  *(_WORD *)(a1 + 188) = *(_WORD *)(a2 + 188);
  uint64_t v8 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v8;
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  uint64_t v17 = a1 + 216;
  uint64_t v16 = a2 + 216;
  long long v9 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 240) = v9;
  uint64_t v15 = v9;
  uint64_t v14 = **(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14(v17, v16, v15);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  uint64_t v10 = *(void *)(a2 + 312);
  uint64_t v11 = *(void *)(a2 + 320);
  *(void *)(a1 + 312) = v10;
  *(void *)(a1 + 320) = v11;
  (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 288, a2 + 288);
  uint64_t v12 = *(void *)(a2 + 336);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = v12;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for InferringColumnProcessor(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  *(unsigned char *)(a1 + 59) = *(unsigned char *)(a2 + 59);
  *(unsigned char *)(a1 + 60) = *(unsigned char *)(a2 + 60);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(unsigned char *)(a1 + 185) = *(unsigned char *)(a2 + 185);
  *(unsigned char *)(a1 + 186) = *(unsigned char *)(a2 + 186);
  *(unsigned char *)(a1 + 187) = *(unsigned char *)(a2 + 187);
  *(unsigned char *)(a1 + 188) = *(unsigned char *)(a2 + 188);
  *(unsigned char *)(a1 + 189) = *(unsigned char *)(a2 + 189);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 200);
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  *(void *)(a1 + 200) = v4;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 216), (uint64_t *)(a2 + 216));
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 288), (uint64_t *)(a2 + 288));
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          uint64_t *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

void *__swift_memcpy344_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x158uLL);
}

uint64_t assignWithTake for InferringColumnProcessor(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  *(_WORD *)(a1 + 59) = *(_WORD *)(a2 + 59);
  long long v4 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v4;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(unsigned char *)(a1 + 185) = *(unsigned char *)(a2 + 185);
  *(unsigned char *)(a1 + 186) = *(unsigned char *)(a2 + 186);
  *(unsigned char *)(a1 + 187) = *(unsigned char *)(a2 + 187);
  *(_WORD *)(a1 + 188) = *(_WORD *)(a2 + 188);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 216);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  long long v5 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v5;
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 288);
  long long v6 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v6;
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InferringColumnProcessor(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 344)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InferringColumnProcessor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 344) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 344) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InferringColumnProcessor()
{
  return &type metadata for InferringColumnProcessor;
}

uint64_t sub_220857364(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_2208573C0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD411B8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void static SummaryColumnIDs.columnName.getter(void *a1@<X8>)
{
  *a1 = 0x6E6D756C6F63;
  a1[1] = 0xE600000000000000;
}

void static SummaryColumnIDs.mean.getter(void *a1@<X8>)
{
  *a1 = 1851876717;
  a1[1] = 0xE400000000000000;
}

void static SummaryColumnIDs.standardDeviation.getter(void *a1@<X8>)
{
  *a1 = 6583411;
  a1[1] = 0xE300000000000000;
}

void static SummaryColumnIDs.minimum.getter(void *a1@<X8>)
{
  *a1 = 7235949;
  a1[1] = 0xE300000000000000;
}

void static SummaryColumnIDs.maximum.getter(void *a1@<X8>)
{
  *a1 = 7889261;
  a1[1] = 0xE300000000000000;
}

void static SummaryColumnIDs.median.getter(void *a1@<X8>)
{
  *a1 = 0x6E616964656DLL;
  a1[1] = 0xE600000000000000;
}

void static SummaryColumnIDs.firstQuartile.getter(void *a1@<X8>)
{
  *a1 = 12625;
  a1[1] = 0xE200000000000000;
}

void static SummaryColumnIDs.thirdQuartile.getter(void *a1@<X8>)
{
  *a1 = 13137;
  a1[1] = 0xE200000000000000;
}

void static SummaryColumnIDs.mode.getter(void *a1@<X8>)
{
  *a1 = 1701080941;
  a1[1] = 0xE400000000000000;
}

void static SummaryColumnIDs.uniqueCount.getter(void *a1@<X8>)
{
  *a1 = 0x6F43657571696E75;
  a1[1] = 0xEB00000000746E75;
}

void static SummaryColumnIDs.noneCount.getter(void *a1@<X8>)
{
  *a1 = 0x6E756F43656E6F6ELL;
  a1[1] = 0xE900000000000074;
}

void static SummaryColumnIDs.someCount.getter(void *a1@<X8>)
{
  *a1 = 0x6E756F43656D6F73;
  a1[1] = 0xE900000000000074;
}

ValueMetadata *type metadata accessor for SummaryColumnIDs()
{
  return &type metadata for SummaryColumnIDs;
}

uint64_t sub_220857548(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    sub_220826C98(0, v1, 0);
    uint64_t v2 = v9;
    uint64_t v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_22093E660();
      swift_bridgeObjectRelease();
      unint64_t v7 = *(void *)(v9 + 16);
      unint64_t v6 = *(void *)(v9 + 24);
      if (v7 >= v6 >> 1) {
        sub_220826C98((char *)(v6 > 1), v7 + 1, 1);
      }
      v4 += 16;
      *(void *)(v9 + 16) = v7 + 1;
      *(void *)(v9 + 8 * v7 + 32) = v5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

Swift::Int sub_220857630()
{
  Swift::Int result = *(void *)(v0 + 48);
  Swift::Int v2 = *(void *)(v0 + 56);
  if (result < v2)
  {
    for (uint64_t i = 0; ; ++i)
    {
      uint64_t v4 = i + 1;
      if (__OFADD__(i, 1)) {
        break;
      }
      Swift::Int result = DataFrame.Rows.index(after:)(result);
      if (result == v2) {
        return v4;
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if (v2 < result)
  {
    uint64_t v4 = 0;
    while (!__OFSUB__(v4--, 1))
    {
      Swift::Int result = DataFrame.Rows.index(before:)(result);
      if (result == v2) {
        return v4;
      }
    }
    goto LABEL_14;
  }
  return 0;
}

uint64_t DataFrameProtocol.writeCSV(to:options:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  long long v5 = *(_OWORD *)(a2 + 40);
  long long v6 = *(_OWORD *)(a2 + 56);
  long long v7 = *(_OWORD *)(a2 + 72);
  long long v8 = *(_OWORD *)(a2 + 88);
  uint64_t v9 = *(void *)(a2 + 104);
  uint64_t v10 = *(void *)(a2 + 112);
  v16[0] = *(unsigned char *)a2;
  long long v11 = *(_OWORD *)(a2 + 24);
  long long v17 = *(_OWORD *)(a2 + 8);
  long long v18 = v11;
  long long v19 = v5;
  long long v20 = v6;
  long long v21 = v7;
  long long v22 = v8;
  uint64_t v23 = v9;
  uint64_t v24 = v10;
  uint64_t result = DataFrameProtocol.csvRepresentation(options:)(v16, a3, a4);
  if (!v4)
  {
    uint64_t v14 = result;
    unint64_t v15 = v13;
    sub_22093E020();
    return sub_22080B88C(v14, v15);
  }
  return result;
}

uint64_t DataFrameProtocol.csvRepresentation(options:)(unsigned __int8 *a1, uint64_t a2, void *a3)
{
  void (*v18)(uint64_t *__return_ptr, uint64_t, void *);
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, void *);
  uint64_t v22;
  uint64_t KeyPath;
  uint64_t v24;
  uint64_t v25;
  uint64_t WitnessTable;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t *__return_ptr, uint64_t, void *);
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  long long v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  Swift::Int v48;
  uint64_t result;
  uint64_t v50;
  uint64_t v51;
  int64_t v52;
  uint64_t v53;
  int64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  char *v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int64_t v82;
  long long v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int64_t v90;
  uint64_t v91;
  long long v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _OWORD v103[4];
  uint64_t v104;
  unint64_t v105;
  long long v106;
  unsigned char v107[32];
  long long v108;
  uint64_t v109;

  uint64_t v4 = v3;
  uint64_t v8 = sub_22093E610();
  uint64_t v69 = *(void *)(v8 - 8);
  long long v70 = v8;
  MEMORY[0x270FA5388](v8);
  long long v68 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v10 = *a1;
  int64_t v11 = *((void *)a1 + 1);
  uint64_t v81 = *((void *)a1 + 2);
  long long v82 = v11;
  uint64_t v83 = *(_OWORD *)(a1 + 24);
  uint64_t v12 = *((void *)a1 + 5);
  long long v79 = *((void *)a1 + 6);
  long long v80 = v12;
  uint64_t v13 = *((void *)a1 + 7);
  uint64_t v77 = *((void *)a1 + 8);
  uint64_t v78 = v13;
  uint64_t v14 = *((void *)a1 + 9);
  uint64_t v15 = *((void *)a1 + 11);
  long long v75 = *((void *)a1 + 10);
  uint64_t v76 = v14;
  uint64_t v16 = *((void *)a1 + 12);
  uint64_t v88 = *((void *)a1 + 13);
  uint64_t v17 = *((void *)a1 + 14);
  long long v18 = (void (*)(uint64_t *__return_ptr, uint64_t, void *))a3[3];
  long long v109 = a2;
  v18(&v89, a2, a3);
  long long v19 = v89;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v20 = *(void *)(v19 + 16);
  swift_bridgeObjectRelease();
  if (!v20) {
    return 0;
  }
  uint64_t v86 = v16;
  long long v87 = v15;
  uint64_t v104 = 0;
  uint64_t v105 = 0xE000000000000000;
  long long v84 = v17;
  uint64_t v74 = v4;
  uint64_t v72 = v10;
  if (v10)
  {
    long long v21 = (uint64_t (*)(uint64_t, void *))a3[7];
    swift_bridgeObjectRetain();
    long long v22 = v109;
    uint64_t v89 = v21(v109, a3);
    MEMORY[0x270FA5388](v89);
    *(&v67 - 2) = v22;
    *(&v67 - 1) = (uint64_t)a3;
    KeyPath = swift_getKeyPath();
    uint64_t v24 = MEMORY[0x270FA5388](KeyPath);
    *(&v67 - 4) = v22;
    *(&v67 - 3) = (uint64_t)a3;
    *(&v67 - 2) = v24;
    swift_getAssociatedTypeWitness();
    uint64_t v25 = sub_22093E900();
    uint64_t WitnessTable = swift_getWitnessTable();
    BOOL v27 = v85;
    uint64_t v29 = sub_2208F0D18((void (*)(char *, char *))sub_220859B7C, (uint64_t)(&v67 - 6), v25, MEMORY[0x263F8D310], MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v28);
    uint64_t v85 = v27;
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v89 = v29;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F18BE0);
    sub_2208502C4((unint64_t *)&qword_267F18BE8, &qword_267F18BE0);
    sub_22093E440();
    uint64_t v30 = v22;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v30 = v109;
  }
  unsigned int v32 = (void (*)(uint64_t *__return_ptr, uint64_t, void *))a3[4];
  uint64_t v73 = a3;
  v32(&v89, v30, a3);
  uint64_t v33 = v89;
  uint64_t v34 = v90;
  uint64_t v35 = v91;
  uint64_t v36 = v92;
  uint64_t v37 = v93;
  uint64_t v38 = v92;
  if ((_BYTE)v93)
  {
    if (v93 == 1 && *(void *)(v92 + 16))
    {
      uint64_t v38 = *(void *)(v92 + 32);
    }
    else
    {
      sub_220883950(v92, *((uint64_t *)&v92 + 1), v93);
      if (v40) {
        uint64_t v38 = 0;
      }
      else {
        uint64_t v38 = v39;
      }
    }
  }
  sub_220883950(v36, *((uint64_t *)&v36 + 1), v37);
  uint64_t v71 = v33;
  *(void *)&uint64_t v106 = v33;
  *((void *)&v106 + 1) = v34;
  if (v42) {
    uint64_t v43 = 0;
  }
  else {
    uint64_t v43 = v41;
  }
  *(void *)long long v107 = v35;
  *(_OWORD *)&v107[8] = v36;
  v107[24] = v37;
  *(void *)&uint64_t v108 = v38;
  *((void *)&v108 + 1) = v43;
  v103[0] = v106;
  v103[1] = *(_OWORD *)v107;
  void v103[2] = *(_OWORD *)&v107[16];
  v103[3] = v108;
  LOBYTE(v89) = v72;
  uint64_t v90 = v82;
  long long v91 = v81;
  int v92 = v83;
  uint64_t v93 = v80;
  long long v94 = v79;
  uint64_t v95 = v78;
  uint64_t v96 = v77;
  uint64_t v97 = v76;
  uint64_t v98 = v75;
  uint64_t v99 = v87;
  uint64_t v100 = v86;
  uint64_t v101 = v88;
  uint64_t v102 = v84;
  unint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18BD0);
  uint64_t v45 = sub_2208502C4(&qword_267F18BD8, &qword_267F18BD0);
  size_t v46 = v85;
  uint64_t v47 = sub_2208580B4((uint64_t)v103, (uint64_t)&v89, v109, v44, (uint64_t)v73, v45);
  uint64_t v85 = v46;
  if (v46)
  {
    uint64_t v31 = v105;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22080B6B4(v36, *((uint64_t *)&v36 + 1), v37);
    return v31;
  }
  long long v80 = v47;
  uint64_t v48 = sub_220857630();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = sub_22080B6B4(v36, *((uint64_t *)&v36 + 1), v37);
  if (v48 < 0) {
    goto LABEL_36;
  }
  uint64_t v50 = v84;
  if (v48)
  {
    uint64_t v51 = 0;
    uint64_t v52 = *(void *)(v80 + 16);
    uint64_t v81 = v80 + 64;
    long long v82 = v52;
    *(void *)&uint64_t v83 = v48;
    while (1)
    {
      long long v109 = v51;
      if (v51 == v48) {
        break;
      }
      if (v52)
      {
        uint64_t v89 = MEMORY[0x263F8EE78];
        uint64_t result = (uint64_t)sub_220826C78(0, v52, 0);
        uint64_t v54 = v52;
        uint64_t v55 = v89;
        int v56 = v81;
        int v57 = v109;
        while (v57 < *(void *)(*(void *)v56 + 16))
        {
          int v58 = *(void *)v56 + 16 * v57;
          int v59 = *(void *)(v58 + 32);
          uint64_t v60 = *(void *)(v58 + 40);
          uint64_t v89 = v55;
          uint64_t v62 = *(void *)(v55 + 16);
          uint64_t v61 = *(void *)(v55 + 24);
          uint64_t result = swift_bridgeObjectRetain();
          if (v62 >= v61 >> 1)
          {
            uint64_t result = (uint64_t)sub_220826C78((char *)(v61 > 1), v62 + 1, 1);
            int v57 = v109;
            uint64_t v55 = v89;
          }
          *(void *)(v55 + 16) = v62 + 1;
          uint64_t v63 = v55 + 16 * v62;
          *(void *)(v63 + 32) = v59;
          *(void *)(v63 + 40) = v60;
          v56 += 48;
          if (!--v54)
          {
            uint64_t v53 = v84;
            goto LABEL_21;
          }
        }
        __break(1u);
        break;
      }
      uint64_t v55 = MEMORY[0x263F8EE78];
      int v57 = v109;
      uint64_t v53 = v50;
LABEL_21:
      uint64_t v89 = v55;
      __swift_instantiateConcreteTypeFromMangledName(&qword_267F18BE0);
      sub_2208502C4((unint64_t *)&qword_267F18BE8, &qword_267F18BE0);
      uint64_t v51 = v57 + 1;
      uint64_t v50 = v53;
      sub_22093E440();
      swift_bridgeObjectRelease();
      sub_22093E6C0();
      swift_bridgeObjectRelease();
      uint64_t result = sub_22093E6C0();
      uint64_t v52 = v82;
      uint64_t v48 = v83;
      if (v51 == (void)v83) {
        goto LABEL_31;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
LABEL_31:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v64 = v68;
  sub_22093E600();
  uint64_t v31 = sub_22093E560();
  unsigned __int8 v66 = v65;
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v64, v70);
  if (v66 >> 60 != 15)
  {
    swift_bridgeObjectRelease();
    return v31;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_220857F44@<X0>(uint64_t *a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 8);
  uint64_t v4 = swift_checkMetadataState();
  uint64_t result = v3(v4, AssociatedConformanceWitness);
  *a1 = result;
  a1[1] = v6;
  return result;
}

uint64_t sub_220857FF0(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 16);
  swift_bridgeObjectRetain();
  uint64_t v5 = swift_checkMetadataState();
  return v4(v1, v2, v5, AssociatedConformanceWitness);
}

uint64_t sub_2208580B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  long long v11 = *(_OWORD *)(a2 + 80);
  v19[4] = *(_OWORD *)(a2 + 64);
  v19[5] = v11;
  v19[6] = *(_OWORD *)(a2 + 96);
  uint64_t v20 = *(void *)(a2 + 112);
  long long v12 = *(_OWORD *)(a2 + 16);
  v19[0] = *(_OWORD *)a2;
  v19[1] = v12;
  long long v13 = *(_OWORD *)(a2 + 48);
  _OWORD v19[2] = *(_OWORD *)(a2 + 32);
  void v19[3] = v13;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a5 + 24))(&v18, a3, a5);
  uint64_t v14 = v18;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _OWORD v17[2] = a3;
  void v17[3] = a4;
  v17[4] = a5;
  void v17[5] = a6;
  v17[6] = a1;
  v17[7] = v19;
  uint64_t v15 = sub_22091B704((void (*)(uint64_t *__return_ptr, uint64_t, uint64_t *))sub_220859E88, (uint64_t)v17, v14);
  swift_bridgeObjectRelease();
  return v15;
}

double sub_2208581B8@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X6>, void *a6@<X7>, _OWORD *a7@<X8>)
{
  uint64_t v14 = a1[3];
  uint64_t v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  long long v16 = *(_OWORD *)(a3 + 80);
  v21[4] = *(_OWORD *)(a3 + 64);
  v21[5] = v16;
  v21[6] = *(_OWORD *)(a3 + 96);
  uint64_t v22 = *(void *)(a3 + 112);
  long long v17 = *(_OWORD *)(a3 + 16);
  v21[0] = *(_OWORD *)a3;
  v21[1] = v17;
  long long v18 = *(_OWORD *)(a3 + 48);
  _OWORD v21[2] = *(_OWORD *)(a3 + 32);
  v21[3] = v18;
  (*(void (**)(_OWORD *__return_ptr, uint64_t, _OWORD *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 8)
                                                                                             + 120))(v23, a2, v21, a4, a5, v14);
  if (v7)
  {
    *a6 = v7;
  }
  else
  {
    long long v20 = v23[1];
    *a7 = v23[0];
    a7[1] = v20;
    double result = v24[0];
    a7[2] = *(_OWORD *)v24;
  }
  return result;
}

uint64_t sub_2208582AC@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  char v10 = *a2;
  uint64_t v11 = *((void *)a2 + 1);
  uint64_t v12 = *((void *)a2 + 2);
  long long v46 = *(_OWORD *)(a2 + 56);
  long long v47 = *(_OWORD *)(a2 + 40);
  long long v44 = *(_OWORD *)(a2 + 88);
  long long v45 = *(_OWORD *)(a2 + 72);
  uint64_t v14 = *((void *)a2 + 13);
  uint64_t v13 = *((void *)a2 + 14);
  uint64_t v42 = (*(uint64_t (**)(uint64_t))(*(void *)(a5 + 8) + 16))(a3);
  uint64_t v52 = v15;
  swift_getAssociatedTypeWitness();
  long long v43 = *(_OWORD *)(a2 + 24);
  uint64_t v40 = sub_22093F530();
  uint64_t v17 = v16;
  v53[0] = v10;
  uint64_t v54 = v11;
  uint64_t v55 = v12;
  long long v56 = v43;
  long long v57 = v47;
  long long v58 = v46;
  long long v59 = v45;
  long long v60 = v44;
  uint64_t v61 = v14;
  uint64_t v62 = v13;
  uint64_t v18 = sub_220858518(a1, (uint64_t)v53, a3, a4, a5, a6);
  if (v51)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  uint64_t v20 = v18;
  uint64_t v21 = sub_22093E660();
  uint64_t v22 = sub_220857548(v20);
  unint64_t v23 = *(void *)(v22 + 16);
  if (!v23)
  {
    int64_t v24 = 0;
    unsigned int v26 = a7;
    goto LABEL_16;
  }
  int64_t v24 = *(void *)(v22 + 32);
  unint64_t v25 = v23 - 1;
  if (v23 == 1)
  {
    unsigned int v26 = a7;
    goto LABEL_16;
  }
  if (v23 < 5)
  {
    unint64_t v27 = 1;
    unsigned int v26 = a7;
    goto LABEL_12;
  }
  unint64_t v27 = v25 & 0xFFFFFFFFFFFFFFFCLL | 1;
  int64x2_t v28 = vdupq_n_s64(v24);
  uint64_t v29 = (int64x2_t *)(v22 + 56);
  unint64_t v30 = v25 & 0xFFFFFFFFFFFFFFFCLL;
  int64x2_t v31 = v28;
  do
  {
    int64x2_t v28 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v28, v29[-1]), (int8x16_t)v28, (int8x16_t)v29[-1]);
    int64x2_t v31 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v31, *v29), (int8x16_t)v31, *(int8x16_t *)v29);
    v29 += 2;
    v30 -= 4;
  }
  while (v30);
  int8x16_t v32 = vbslq_s8((int8x16_t)vcgtq_s64(v28, v31), (int8x16_t)v28, (int8x16_t)v31);
  uint64_t v33 = vextq_s8(v32, v32, 8uLL).u64[0];
  int64_t v24 = (int64_t)vbsl_s8((int8x8_t)vcgtd_s64(v32.i64[0], v33), *(int8x8_t *)v32.i8, (int8x8_t)v33);
  unsigned int v26 = a7;
  if (v25 != (v25 & 0xFFFFFFFFFFFFFFFCLL))
  {
LABEL_12:
    unint64_t v34 = v23 - v27;
    uint64_t v35 = (int64_t *)(v22 + 8 * v27 + 32);
    do
    {
      int64_t v37 = *v35++;
      int64_t v36 = v37;
      if (v24 <= v37) {
        int64_t v24 = v36;
      }
      --v34;
    }
    while (v34);
  }
LABEL_16:
  swift_bridgeObjectRelease();
  if (v24 <= v21) {
    uint64_t v38 = v21;
  }
  else {
    uint64_t v38 = v24;
  }
  uint64_t result = sub_22093E660();
  if (result <= v38) {
    uint64_t v39 = v38;
  }
  else {
    uint64_t v39 = result;
  }
  *unsigned int v26 = v42;
  v26[1] = v52;
  _OWORD v26[2] = v40;
  void v26[3] = v17;
  void v26[4] = v20;
  v26[5] = v39;
  return result;
}

uint64_t sub_220858518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v16 = v15[5];
  long long v50 = v15[4];
  long long v51 = v16;
  long long v52 = v15[6];
  uint64_t v53 = *((void *)v15 + 14);
  long long v17 = v15[1];
  long long v46 = *v15;
  long long v47 = v17;
  long long v18 = v15[3];
  long long v48 = v15[2];
  long long v49 = v18;
  (*(void (**)(char *, uint64_t))(v12 + 16))(v14, v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41140);
  if (swift_dynamicCast())
  {
    uint64_t v40 = v43;
    uint64_t v41 = v44;
    uint64_t v42 = v45;
    long long v36 = v50;
    long long v37 = v51;
    long long v38 = v52;
    uint64_t v39 = v53;
    long long v32 = v46;
    long long v33 = v47;
    long long v34 = v48;
    long long v35 = v49;
    uint64_t v22 = sub_220858944(a1, (uint64_t)&v32, a4, a6, (void (*)(char *, char *))sub_220859BD0, v19, v20, v21);
    swift_release();
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413E8);
  if (swift_dynamicCast())
  {
    uint64_t v40 = v43;
    uint64_t v41 = v44;
    uint64_t v42 = v45;
    long long v36 = v50;
    long long v37 = v51;
    long long v38 = v52;
    uint64_t v39 = v53;
    long long v32 = v46;
    long long v33 = v47;
    long long v34 = v48;
    long long v35 = v49;
    uint64_t v26 = sub_220858944(a1, (uint64_t)&v32, a4, a6, (void (*)(char *, char *))sub_220859BFC, v23, v24, v25);
LABEL_7:
    uint64_t v22 = v26;
    swift_release();
    goto LABEL_8;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41138);
  if (swift_dynamicCast())
  {
    uint64_t v40 = v43;
    uint64_t v41 = v44;
    uint64_t v42 = v45;
    long long v36 = v50;
    long long v37 = v51;
    long long v38 = v52;
    uint64_t v39 = v53;
    long long v32 = v46;
    long long v33 = v47;
    long long v34 = v48;
    long long v35 = v49;
    uint64_t v26 = sub_2208589EC(a1, (uint64_t)&v32, a4, a6);
    goto LABEL_7;
  }
  uint64_t v31 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F185C8);
  uint64_t v28 = swift_dynamicCast();
  if (v28)
  {
    uint64_t v40 = v43;
    uint64_t v41 = v44;
    uint64_t v42 = v45;
    long long v36 = v50;
    long long v37 = v51;
    long long v38 = v52;
    uint64_t v39 = v53;
    long long v32 = v46;
    long long v33 = v47;
    long long v34 = v48;
    long long v35 = v49;
    uint64_t v22 = sub_220858AD4(v31, (uint64_t)&v32, a4, a6);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    MEMORY[0x270FA5388](v28);
    *(&v30 - 6) = a3;
    *(&v30 - 5) = a4;
    *(&v30 - 4) = a5;
    *(&v30 - 3) = a6;
    *(&v30 - 2) = v6;
    *(&v30 - 1) = (uint64_t)&v46;
    uint64_t v22 = sub_22080E314((void (*)(char *, char *))sub_220859BA8, (uint64_t)(&v30 - 8), a4, MEMORY[0x263F8D310], MEMORY[0x263F8E628], a6, MEMORY[0x263F8E658], v29);
  }
LABEL_9:
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, a3);
  return v22;
}

uint64_t sub_220858944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(char *, char *), uint64_t a6, uint64_t a7, uint64_t a8)
{
  long long v9 = *(_OWORD *)(a2 + 80);
  v17[4] = *(_OWORD *)(a2 + 64);
  void v17[5] = v9;
  v17[6] = *(_OWORD *)(a2 + 96);
  uint64_t v18 = *(void *)(a2 + 112);
  long long v10 = *(_OWORD *)(a2 + 16);
  v17[0] = *(_OWORD *)a2;
  v17[1] = v10;
  long long v11 = *(_OWORD *)(a2 + 48);
  _OWORD v17[2] = *(_OWORD *)(a2 + 32);
  void v17[3] = v11;
  uint64_t v12 = *v8;
  _OWORD v14[2] = a3;
  v14[3] = a4;
  v14[4] = v12;
  long long v15 = *(_OWORD *)(v8 + 1);
  long long v16 = v17;
  return sub_22080E314(a5, (uint64_t)v14, a3, MEMORY[0x263F8D310], MEMORY[0x263F8E628], a4, MEMORY[0x263F8E658], a8);
}

uint64_t sub_2208589EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  long long v7 = *(_OWORD *)(a2 + 80);
  long long v22 = *(_OWORD *)(a2 + 64);
  long long v23 = v7;
  long long v24 = *(_OWORD *)(a2 + 96);
  uint64_t v25 = *(void *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 16);
  v19[0] = *(_OWORD *)a2;
  v19[1] = v8;
  long long v9 = *(_OWORD *)(a2 + 48);
  long long v20 = *(_OWORD *)(a2 + 32);
  long long v21 = v9;
  uint64_t v10 = *v4;
  _OWORD v14[2] = a3;
  v14[3] = a4;
  v14[4] = v10;
  long long v15 = *(_OWORD *)(v4 + 1);
  long long v16 = v19;
  uint64_t v17 = *((void *)&v8 + 1);
  uint64_t v18 = v20;
  swift_retain();
  uint64_t v12 = sub_22080E314((void (*)(char *, char *))sub_220859CD4, (uint64_t)v14, a3, MEMORY[0x263F8D310], MEMORY[0x263F8E628], a4, MEMORY[0x263F8E658], v11);
  swift_release();
  return v12;
}

uint64_t sub_220858AD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  long long v7 = *(_OWORD *)(a2 + 80);
  v17[4] = *(_OWORD *)(a2 + 64);
  void v17[5] = v7;
  v17[6] = *(_OWORD *)(a2 + 96);
  uint64_t v18 = *(void *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 16);
  v17[0] = *(_OWORD *)a2;
  v17[1] = v8;
  long long v9 = *(_OWORD *)(a2 + 48);
  _OWORD v17[2] = *(_OWORD *)(a2 + 32);
  void v17[3] = v9;
  uint64_t v10 = *v4;
  _OWORD v13[2] = a3;
  void v13[3] = a4;
  v13[4] = v10;
  long long v14 = *(_OWORD *)(v4 + 1);
  long long v15 = v17;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F188B0);
  return sub_22080E314((void (*)(char *, char *))sub_220859D0C, (uint64_t)v13, a3, MEMORY[0x263F8D310], v11, a4, MEMORY[0x263F8E4E0], (uint64_t)&v16);
}

uint64_t sub_220858BB4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  long long v34 = a4;
  uint64_t v33 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_22093ED30();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v30 - v10;
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v9);
  uint64_t v31 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  long long v32 = (char *)&v30 - v15;
  uint64_t v37 = *a1;
  uint64_t v16 = (void (*)(_OWORD *, void))sub_22093EBD0();
  (*(void (**)(char *))(v8 + 16))(v11);
  v16(v35, 0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    uint64_t v17 = *(void *)(a3 + 48);
    uint64_t v18 = v34;
    *long long v34 = *(void *)(a3 + 40);
    v18[1] = v17;
    return swift_bridgeObjectRetain();
  }
  else
  {
    long long v20 = v32;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v32, v11, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v31, v20, AssociatedTypeWitness);
    uint64_t v21 = sub_22093E620();
    long long v22 = *(_OWORD *)(a3 + 80);
    v35[4] = *(_OWORD *)(a3 + 64);
    v35[5] = v22;
    v35[6] = *(_OWORD *)(a3 + 96);
    uint64_t v36 = *(void *)(a3 + 112);
    long long v23 = *(_OWORD *)(a3 + 16);
    v35[0] = *(_OWORD *)a3;
    v35[1] = v23;
    long long v24 = *(_OWORD *)(a3 + 48);
    _OWORD v35[2] = *(_OWORD *)(a3 + 32);
    v35[3] = v24;
    uint64_t v26 = sub_220858EBC((uint64_t)v35, v21, v25);
    uint64_t v28 = v27;
    swift_bridgeObjectRelease();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v20, AssociatedTypeWitness);
    uint64_t v29 = v34;
    *long long v34 = v26;
    v29[1] = v28;
  }
  return result;
}

uint64_t sub_220858EBC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v5 = *(void *)(a1 + 112);
  uint64_t v15 = *(void *)(a1 + 104);
  unint64_t v16 = v5;
  _OWORD v14[2] = &v15;
  swift_bridgeObjectRetain();
  char v6 = sub_2208599E0(sub_220859C28, (uint64_t)v14, a2, a3);
  swift_bridgeObjectRelease();
  if (v6) {
    goto LABEL_5;
  }
  uint64_t v15 = a2;
  unint64_t v16 = a3;
  uint64_t v19 = 34;
  unint64_t v20 = 0xE100000000000000;
  sub_220859C80();
  if (sub_22093ED90()) {
    goto LABEL_5;
  }
  uint64_t v15 = a2;
  unint64_t v16 = a3;
  uint64_t v19 = 13;
  unint64_t v20 = 0xE100000000000000;
  if ((sub_22093ED90() & 1) != 0
    || (uint64_t v15 = a2, v16 = a3, v19 = 10, v20 = 0xE100000000000000, (sub_22093ED90() & 1) != 0))
  {
LABEL_5:
    uint64_t v19 = 0;
    unint64_t v20 = 0xE000000000000000;
    uint64_t v7 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0) {
      uint64_t v7 = a2 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v15 = a2;
    unint64_t v16 = a3;
    uint64_t v17 = 0;
    uint64_t v18 = v7;
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_22093E6D0();
    uint64_t v10 = v9;
    if (v9)
    {
      uint64_t v11 = v8;
      do
      {
        if (v11 == 34 && v10 == 0xE100000000000000 || (sub_22093F250() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          sub_22093E6C0();
        }
        else
        {
          MEMORY[0x223C69DD0](v11, v10);
          swift_bridgeObjectRelease();
        }
        uint64_t v11 = sub_22093E6D0();
        uint64_t v10 = v12;
      }
      while (v12);
    }
    swift_bridgeObjectRelease();
    uint64_t v15 = 34;
    unint64_t v16 = 0xE100000000000000;
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    return v15;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return a2;
}

uint64_t sub_2208590F8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, void *a3@<X4>, void *a4@<X8>)
{
  uint64_t v4 = *a1;
  if (*a1 < 0) {
    goto LABEL_11;
  }
  swift_beginAccess();
  uint64_t v8 = *(void **)(a2 + 16);
  if (!v8)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v9 = v8[1];
  if (v4 >= v9)
  {
LABEL_11:
    uint64_t result = sub_22093F090();
    __break(1u);
    return result;
  }
  char v10 = sub_220891788(v4, v8, v9);
  if (v10 == 2)
  {
    uint64_t v12 = a3[5];
    uint64_t v11 = a3[6];
  }
  else if (v10)
  {
    uint64_t v12 = a3[7];
    uint64_t v11 = a3[8];
  }
  else
  {
    uint64_t v12 = a3[9];
    uint64_t v11 = a3[10];
  }
  *a4 = v12;
  a4[1] = v11;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2208591F8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v4 = *a1;
  if (*a1 < 0) {
    goto LABEL_9;
  }
  swift_beginAccess();
  uint64_t v8 = *(void **)(a2 + 16);
  if (!v8)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v9 = v8[1];
  if (v4 >= v9)
  {
LABEL_9:
    uint64_t result = sub_22093F090();
    __break(1u);
    return result;
  }
  sub_2208915A0(v4, v8, v9);
  if (v10)
  {
    uint64_t v20 = *(void *)(a3 + 48);
    *a4 = *(void *)(a3 + 40);
    a4[1] = v20;
    return swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v11 = sub_22093E950();
    long long v12 = *(_OWORD *)(a3 + 80);
    v21[4] = *(_OWORD *)(a3 + 64);
    v21[5] = v12;
    v21[6] = *(_OWORD *)(a3 + 96);
    uint64_t v22 = *(void *)(a3 + 112);
    long long v13 = *(_OWORD *)(a3 + 16);
    v21[0] = *(_OWORD *)a3;
    v21[1] = v13;
    long long v14 = *(_OWORD *)(a3 + 48);
    _OWORD v21[2] = *(_OWORD *)(a3 + 32);
    v21[3] = v14;
    uint64_t v16 = sub_220858EBC((uint64_t)v21, v11, v15);
    uint64_t v18 = v17;
    uint64_t result = swift_bridgeObjectRelease();
    *a4 = v16;
    a4[1] = v18;
  }
  return result;
}

uint64_t sub_22085933C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t (*a4)(char *)@<X5>, uint64_t *a5@<X8>)
{
  uint64_t v29 = a4;
  uint64_t v9 = sub_22093E100();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  long long v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD411B8);
  MEMORY[0x270FA5388](v13 - 8);
  unint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *a1;
  if (v16 < 0) {
    goto LABEL_9;
  }
  swift_beginAccess();
  uint64_t v17 = *(void **)(a2 + 16);
  if (!v17)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v16 >= v17[1])
  {
LABEL_9:
    uint64_t result = sub_22093F090();
    __break(1u);
    return result;
  }
  sub_220891810(v16, v17, (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9) == 1)
  {
    uint64_t v18 = *(void *)(a3 + 48);
    *a5 = *(void *)(a3 + 40);
    a5[1] = v18;
    return swift_bridgeObjectRetain();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v15, v9);
    uint64_t v20 = v29(v12);
    long long v21 = *(_OWORD *)(a3 + 80);
    v30[4] = *(_OWORD *)(a3 + 64);
    v30[5] = v21;
    v30[6] = *(_OWORD *)(a3 + 96);
    uint64_t v31 = *(void *)(a3 + 112);
    long long v22 = *(_OWORD *)(a3 + 16);
    v30[0] = *(_OWORD *)a3;
    v30[1] = v22;
    long long v23 = *(_OWORD *)(a3 + 48);
    _OWORD v30[2] = *(_OWORD *)(a3 + 32);
    void v30[3] = v23;
    uint64_t v25 = sub_220858EBC((uint64_t)v30, v20, v24);
    uint64_t v27 = v26;
    swift_bridgeObjectRelease();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    *a5 = v25;
    a5[1] = v27;
  }
  return result;
}

uint64_t sub_2208595CC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X7>, uint64_t *a7@<X8>)
{
  uint64_t v29 = a6;
  uint64_t v13 = sub_22093E610();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v14 = *a1;
  if (*a1 < 0) {
    goto LABEL_10;
  }
  swift_beginAccess();
  unint64_t v15 = *(void **)(a4 + 16);
  if (!v15)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v14 >= v15[1])
  {
LABEL_10:
    uint64_t result = sub_22093F090();
    __break(1u);
    return result;
  }
  sub_2208919A4(v14, v15, (uint64_t)&v27);
  unint64_t v16 = v28;
  if (v28 >> 60 == 15)
  {
    uint64_t v17 = *(void *)(a5 + 48);
    *a7 = *(void *)(a5 + 40);
    a7[1] = v17;
    return swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v19 = v27;
    sub_22093E600();
    uint64_t v20 = sub_22093E570();
    if (v21)
    {
      uint64_t v22 = sub_220858EBC(a5, v20, v21);
      uint64_t v24 = v23;
      sub_220834944(v19, v16);
      uint64_t result = swift_bridgeObjectRelease();
      *a7 = v22;
      a7[1] = v24;
    }
    else
    {
      sub_220859D68();
      uint64_t v25 = swift_allocError();
      *uint64_t v26 = v14;
      v26[1] = a2;
      _OWORD v26[2] = a3;
      void v26[3] = v19;
      void v26[4] = v16;
      swift_bridgeObjectRetain();
      uint64_t result = swift_willThrow();
      *uint64_t v29 = v25;
    }
  }
  return result;
}

double sub_2208597D4@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _OWORD *a6@<X8>)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_2208582AC(a1, a2, a5, a3, WitnessTable, a4, (uint64_t *)v16);
  if (!v6)
  {
    long long v15 = v16[1];
    *a6 = v16[0];
    a6[1] = v15;
    double result = *(double *)&v17;
    a6[2] = v17;
  }
  return result;
}

double sub_220859880@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _OWORD *a6@<X8>)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_2208582AC(a1, a2, a5, a3, WitnessTable, a4, (uint64_t *)v16);
  if (!v6)
  {
    long long v15 = v16[1];
    *a6 = v16[0];
    a6[1] = v15;
    double result = *(double *)&v17;
    a6[2] = v17;
  }
  return result;
}

int64_t sub_22085992C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  int64_t v2 = *(void *)(a1 + 32);
  unint64_t v3 = v1 - 1;
  if (v1 != 1)
  {
    if (v1 >= 5)
    {
      unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL | 1;
      int64x2_t v5 = vdupq_n_s64(v2);
      uint64_t v6 = (int64x2_t *)(a1 + 56);
      unint64_t v7 = v3 & 0xFFFFFFFFFFFFFFFCLL;
      int64x2_t v8 = v5;
      do
      {
        int64x2_t v5 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v5, v6[-1]), (int8x16_t)v5, (int8x16_t)v6[-1]);
        int64x2_t v8 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v8, *v6), (int8x16_t)v8, *(int8x16_t *)v6);
        v6 += 2;
        v7 -= 4;
      }
      while (v7);
      int8x16_t v9 = vbslq_s8((int8x16_t)vcgtq_s64(v5, v8), (int8x16_t)v5, (int8x16_t)v8);
      uint64_t v10 = vextq_s8(v9, v9, 8uLL).u64[0];
      int64_t v2 = (int64_t)vbsl_s8((int8x8_t)vcgtd_s64(v9.i64[0], v10), *(int8x8_t *)v9.i8, (int8x8_t)v10);
      if (v3 == (v3 & 0xFFFFFFFFFFFFFFFCLL)) {
        return v2;
      }
    }
    else
    {
      unint64_t v4 = 1;
    }
    unint64_t v11 = v1 - v4;
    long long v12 = (int64_t *)(a1 + 8 * v4 + 32);
    do
    {
      int64_t v14 = *v12++;
      int64_t v13 = v14;
      if (v2 <= v14) {
        int64_t v2 = v13;
      }
      --v11;
    }
    while (v11);
  }
  return v2;
}

uint64_t sub_2208599E0(uint64_t (*a1)(void *), uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6 = HIBYTE(a4) & 0xF;
  _OWORD v13[2] = a3;
  void v13[3] = a4;
  if ((a4 & 0x2000000000000000) == 0) {
    uint64_t v6 = a3 & 0xFFFFFFFFFFFFLL;
  }
  v13[4] = 0;
  void v13[5] = v6;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_22093E6D0();
  if (v8)
  {
    uint64_t v9 = v8;
    while (1)
    {
      v13[0] = v7;
      v13[1] = v9;
      char v10 = a1(v13);
      swift_bridgeObjectRelease();
      if (v4 || (v10 & 1) != 0) {
        break;
      }
      uint64_t v7 = sub_22093E6D0();
      uint64_t v9 = v11;
      if (!v11) {
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
    return 0;
  }
}

double sub_220859AB0@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _OWORD *a6@<X8>)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_2208582AC(a1, a2, a5, a3, WitnessTable, a4, (uint64_t *)v16);
  if (!v6)
  {
    long long v15 = v16[1];
    *a6 = v16[0];
    a6[1] = v15;
    double result = *(double *)&v17;
    a6[2] = v17;
  }
  return result;
}

uint64_t sub_220859B64()
{
  return 16;
}

__n128 sub_220859B70(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_220859B7C()
{
  return swift_getAtKeyPath();
}

uint64_t sub_220859BA8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_220858BB4(a1, *(void *)(v2 + 48), *(void *)(v2 + 56), a2);
}

uint64_t sub_220859BD0(uint64_t a1, uint64_t a2)
{
  return sub_220859D38(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void, void, uint64_t))sub_2208590F8);
}

uint64_t sub_220859BFC(uint64_t a1, uint64_t a2)
{
  return sub_220859D38(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void, void, uint64_t))sub_2208591F8);
}

uint64_t sub_220859C28(void *a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1]) {
    return 1;
  }
  else {
    return sub_22093F250() & 1;
  }
}

unint64_t sub_220859C80()
{
  unint64_t result = qword_26AD41168;
  if (!qword_26AD41168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD41168);
  }
  return result;
}

uint64_t sub_220859CD4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_22085933C(a1, *(void *)(v2 + 48), *(void *)(v2 + 56), *(uint64_t (**)(char *))(v2 + 64), a2);
}

uint64_t sub_220859D0C(uint64_t a1, uint64_t a2)
{
  return sub_220859D38(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void, void, uint64_t))sub_2208595CC);
}

uint64_t sub_220859D38(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, void, void, void, void, void, void, uint64_t))
{
  return a3(a1, v3[4], v3[5], v3[6], v3[7], v3[2], v3[3], a2);
}

unint64_t sub_220859D68()
{
  unint64_t result = qword_267F18BF0;
  if (!qword_267F18BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F18BF0);
  }
  return result;
}

int64_t sub_220859DBC(int64_t result, uint64_t a2, unint64_t a3)
{
  int64_t v3 = a3 >> 1;
  if (a3 >> 1 == a2) {
    return 0;
  }
  if ((uint64_t)(a3 >> 1) <= a2)
  {
    __break(1u);
  }
  else
  {
    int64_t v4 = *(void *)(result + 8 * a2);
    uint64_t v5 = a2 + 1;
    if (a2 + 1 == v3) {
      return v4;
    }
    if (a2 + 1 < v3)
    {
      unint64_t v6 = v3 + ~a2;
      if (v6 < 4) {
        goto LABEL_10;
      }
      v5 += v6 & 0xFFFFFFFFFFFFFFFCLL;
      int64x2_t v7 = vdupq_n_s64(v4);
      uint64_t v8 = (int64x2_t *)(result + 8 * a2 + 24);
      unint64_t v9 = v6 & 0xFFFFFFFFFFFFFFFCLL;
      int64x2_t v10 = v7;
      do
      {
        int64x2_t v7 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v7, v8[-1]), (int8x16_t)v7, (int8x16_t)v8[-1]);
        int64x2_t v10 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v10, *v8), (int8x16_t)v10, *(int8x16_t *)v8);
        v8 += 2;
        v9 -= 4;
      }
      while (v9);
      int8x16_t v11 = vbslq_s8((int8x16_t)vcgtq_s64(v7, v10), (int8x16_t)v7, (int8x16_t)v10);
      uint64_t v12 = vextq_s8(v11, v11, 8uLL).u64[0];
      int64_t v4 = (int64_t)vbsl_s8((int8x8_t)vcgtd_s64(v11.i64[0], v12), *(int8x8_t *)v11.i8, (int8x8_t)v12);
      if (v6 != (v6 & 0xFFFFFFFFFFFFFFFCLL))
      {
LABEL_10:
        uint64_t v13 = v3 - v5;
        int64_t v14 = (int64_t *)(result + 8 * v5);
        do
        {
          int64_t v16 = *v14++;
          int64_t v15 = v16;
          if (v4 <= v16) {
            int64_t v4 = v15;
          }
          --v13;
        }
        while (v13);
      }
      return v4;
    }
  }
  __break(1u);
  return result;
}

double sub_220859E88@<D0>(void *a1@<X0>, void *a2@<X1>, _OWORD *a3@<X8>)
{
  return sub_2208581B8(a1, v3[6], v3[7], v3[3], v3[5], a2, a3);
}

uint64_t DataFrame.Slice.columns.getter()
{
  long long v1 = v0[1];
  long long v5 = *v0;
  v6[0] = v1;
  *(_OWORD *)((char *)v6 + 9) = *(long long *)((char *)v0 + 25);
  sub_220833B58((uint64_t)&v5);
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_22083196C(v2, (uint64_t)&v5);
  sub_220833BC0((uint64_t)&v5);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t DataFrame.Slice.rows.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  char v6 = *(unsigned char *)(v1 + 40);
  *(unsigned char *)(a1 + 40) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return sub_220831F30(v4, v5, v6);
}

uint64_t DataFrame.Slice.base.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v4 = v1[2];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_220859FF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  *(void *)a2 = *(void *)a1;
  *(void *)(a2 + 8) = v2;
  *(void *)(a2 + 16) = v3;
  *(void *)(a2 + 24) = v4;
  *(void *)(a2 + 32) = v5;
  char v6 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a2 + 40) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return sub_220831F30(v4, v5, v6);
}

uint64_t sub_22085A070(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  char v5 = *(unsigned char *)(a1 + 40);
  v7[0] = *(void *)a1;
  v7[1] = v1;
  _OWORD v7[2] = v2;
  void v7[3] = v3;
  void v7[4] = v4;
  char v8 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220831F30(v3, v4, v5);
  return DataFrame.Slice.rows.setter(v7);
}

uint64_t DataFrame.Slice.rows.setter(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a1[4];
  char v5 = *((unsigned char *)a1 + 40);
  uint64_t v11 = a1[3];
  uint64_t v6 = sub_2208EE720(v11, v4, v5);
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    char v8 = (uint64_t *)(v6 + 32);
    do
    {
      uint64_t v9 = *v8++;
      v12[0] = v1;
      v12[1] = v2;
      uint64_t v12[2] = v3;
      v12[3] = v9;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      DataFrame.subscript.setter(v12, v9);
      --v7;
    }
    while (v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return sub_22080B6B4(v11, v4, v5);
}

void (*DataFrame.Slice.rows.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[6] = v1;
  uint64_t v4 = *(void *)(v1 + 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = *(void *)(v1 + 32);
  *uint64_t v3 = *(void *)v1;
  v3[1] = v4;
  v3[2] = v5;
  v3[3] = v6;
  v3[4] = v7;
  char v8 = *(unsigned char *)(v1 + 40);
  *((unsigned char *)v3 + 40) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220831F30(v6, v7, v8);
  return sub_22085A290;
}

void sub_22085A290(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v4 = **a1;
  uint64_t v3 = (*a1)[1];
  uint64_t v6 = (*a1)[2];
  uint64_t v5 = (*a1)[3];
  uint64_t v7 = (*a1)[4];
  char v8 = *((unsigned char *)*a1 + 40);
  uint64_t v23 = v7;
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_220831F30(v5, v7, v8);
    uint64_t v9 = sub_2208EE720(v5, v7, v8);
    uint64_t v10 = *(void *)(v9 + 16);
    if (v10)
    {
      uint64_t v11 = (uint64_t *)(v9 + 32);
      do
      {
        uint64_t v12 = *v11++;
        uint64_t v24 = v4;
        uint64_t v25 = v3;
        uint64_t v26 = v6;
        uint64_t v27 = v12;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        DataFrame.subscript.setter(&v24, v12);
        --v10;
      }
      while (v10);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22080B6B4(v5, v23, v8);
    uint64_t v13 = v2[3];
    uint64_t v14 = v2[4];
    char v15 = *((unsigned char *)v2 + 40);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v16 = v13;
    uint64_t v17 = v14;
    char v18 = v15;
  }
  else
  {
    uint64_t v19 = sub_2208EE720(v5, v7, v8);
    uint64_t v20 = *(void *)(v19 + 16);
    if (v20)
    {
      unint64_t v21 = (uint64_t *)(v19 + 32);
      do
      {
        uint64_t v22 = *v21++;
        uint64_t v24 = v4;
        uint64_t v25 = v3;
        uint64_t v26 = v6;
        uint64_t v27 = v22;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        DataFrame.subscript.setter(&v24, v22);
        --v20;
      }
      while (v20);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v17 = v23;
    uint64_t v16 = v5;
    char v18 = v8;
  }
  sub_22080B6B4(v16, v17, v18);

  free(v2);
}

uint64_t DataFrame.Slice.shape.getter()
{
  unsigned long long v1 = *(_OWORD *)((char *)v0 + 25);
  long long v2 = v0[1];
  long long v6 = *v0;
  *(_OWORD *)uint64_t v7 = v2;
  *(_OWORD *)&v7[9] = v1;
  uint64_t v3 = sub_2208EE804(*(uint64_t *)&v7[8], v1 >> 56, SHIBYTE(v1));
  sub_220833B58((uint64_t)&v6);
  uint64_t v4 = swift_bridgeObjectRetain();
  sub_22083196C(v4, (uint64_t)&v6);
  sub_220833BC0((uint64_t)&v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_22085A508@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v4 = v1[2];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_22085A554@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  char v6 = *(unsigned char *)(v1 + 40);
  *(unsigned char *)(a1 + 40) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return sub_220831F30(v4, v5, v6);
}

void (*sub_22085A5D4(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = DataFrame.Slice.rows.modify(v2);
  return sub_220816854;
}

uint64_t sub_22085A62C()
{
  long long v1 = v0[1];
  long long v5 = *v0;
  v6[0] = v1;
  *(_OWORD *)((char *)v6 + 9) = *(long long *)((char *)v0 + 25);
  sub_220833B58((uint64_t)&v5);
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_22083196C(v2, (uint64_t)&v5);
  sub_220833BC0((uint64_t)&v5);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_22085A6A4()
{
  unsigned long long v1 = *(_OWORD *)((char *)v0 + 25);
  long long v2 = v0[1];
  long long v6 = *v0;
  *(_OWORD *)uint64_t v7 = v2;
  *(_OWORD *)&v7[9] = v1;
  uint64_t v3 = sub_2208EE804(*(uint64_t *)&v7[8], v1 >> 56, SHIBYTE(v1));
  sub_220833B58((uint64_t)&v6);
  uint64_t v4 = swift_bridgeObjectRetain();
  sub_22083196C(v4, (uint64_t)&v6);
  sub_220833BC0((uint64_t)&v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t _s11TabularData0B5FrameV5SliceV13dynamicMemberAA09AnyColumnD0VSS_tcig_0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = v2[1];
  uint64_t v8 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v9 = v2[4];
  uint64_t v10 = *((unsigned __int8 *)v2 + 40);
  v15[0] = *v2;
  v15[1] = v6;
  _OWORD v15[2] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v11 = sub_22080BA90(a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v11 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v11 < *(void *)(v5 + 16))
  {
    sub_22080B5B8(v5 + 40 * v11 + 32, (uint64_t)v15);
    uint64_t v13 = v16;
    uint64_t v14 = v17;
    __swift_project_boxed_opaque_existential_1(v15, v16);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 + 8) + 160))(v7, v9, v10, v13);
    return sub_22080B0D8((uint64_t)v15);
  }
  __break(1u);
  return result;
}

void DataFrame.Slice.subscript.getter(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *v3;
  uint64_t v7 = v3[1];
  uint64_t v8 = v3[2];
  uint64_t v9 = v3[3];
  uint64_t v10 = v3[4];
  char v11 = *((unsigned char *)v3 + 40);
  uint64_t v21 = *v3;
  *(void *)&long long v22 = v7;
  *((void *)&v22 + 1) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v12 = sub_22080BA90(a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v12 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v12 < *(void *)(v6 + 16))
  {
    sub_22080B5B8(v6 + 40 * v12 + 32, (uint64_t)v26);
    sub_2208343B8(v26, (uint64_t)v25);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41110);
    uint64_t v13 = type metadata accessor for Column();
    swift_dynamicCast();
    v19[0] = v9;
    v19[1] = v10;
    char v20 = v11;
    swift_getWitnessTable();
    sub_22085E388((uint64_t)v19, v13, (uint64_t)&v21);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v15 = v21;
    long long v16 = v22;
    long long v17 = v23;
    char v18 = v24;
    sub_2208BE06C((uint64_t)&v15, a3);
    return;
  }
  __break(1u);
}

void DataFrame.Slice.subscript.getter(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = *v2;
  uint64_t v6 = v2[1];
  uint64_t v7 = v2[2];
  uint64_t v8 = v2[3];
  uint64_t v9 = v2[4];
  char v10 = *((unsigned char *)v2 + 40);
  uint64_t v20 = *v2;
  *(void *)&long long v21 = v6;
  *((void *)&v21 + 1) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v11 = sub_22080BA90(v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v11 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v11 < *(void *)(v5 + 16))
  {
    sub_22080B5B8(v5 + 40 * v11 + 32, (uint64_t)v25);
    sub_2208343B8(v25, (uint64_t)v24);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41110);
    uint64_t v12 = type metadata accessor for Column();
    swift_dynamicCast();
    v18[0] = v8;
    v18[1] = v9;
    char v19 = v10;
    swift_getWitnessTable();
    sub_22085E388((uint64_t)v18, v12, (uint64_t)&v20);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v14 = v20;
    long long v15 = v21;
    long long v16 = v22;
    char v17 = v23;
    sub_2208BE06C((uint64_t)&v14, a2);
    return;
  }
  __break(1u);
}

void DataFrame.Slice.subscript.getter(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(*(void *)v2 + 16) > a1)
  {
    uint64_t v4 = *(void *)(v2 + 24);
    uint64_t v5 = *(void *)(v2 + 32);
    char v6 = *(unsigned char *)(v2 + 40);
    sub_22080B5B8(*(void *)v2 + 40 * a1 + 32, (uint64_t)v18);
    sub_2208343B8(v18, (uint64_t)v19);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41110);
    uint64_t v7 = type metadata accessor for Column();
    swift_dynamicCast();
    v12[0] = v4;
    v12[1] = v5;
    char v13 = v6;
    swift_getWitnessTable();
    sub_22085E388((uint64_t)v12, v7, (uint64_t)&v14);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v8 = v14;
    long long v9 = v15;
    long long v10 = v16;
    char v11 = v17;
    sub_2208BE06C((uint64_t)&v8, a2);
    return;
  }
  __break(1u);
}

double DataFrame.Slice.subscript.getter@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = *(void *)(v4 + 24);
  uint64_t v9 = *(void *)(v4 + 32);
  char v10 = *(unsigned char *)(v4 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220831F30(v8, v9, v10);
  DataFrame.selecting<A>(columnNames:)(a1, a2, a3, &v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = v15;
  double result = *(double *)&v14;
  *(_OWORD *)a4 = v14;
  *(void *)(a4 + 16) = v11;
  *(void *)(a4 + 24) = v8;
  *(void *)(a4 + 32) = v9;
  *(unsigned char *)(a4 + 40) = v10;
  return result;
}

uint64_t DataFrame.Slice.filter<A>(on:_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(void)@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v9 = *(char **)v5;
  uint64_t v10 = *(void *)(v5 + 8);
  uint64_t v11 = *(void *)(v5 + 16);
  uint64_t v25 = *(void *)(v5 + 24);
  uint64_t v24 = *(void *)(v5 + 32);
  char v12 = *(unsigned char *)(v5 + 40);
  unint64_t v28 = *(char **)v5;
  uint64_t v29 = v10;
  uint64_t v30 = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  DataFrame.subscript.getter(a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = type metadata accessor for Column();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v15 = v31;
  sub_2208BCB14(a3, a4, v13, WitnessTable, (uint64_t)&v28);
  if (v15)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v31 = v28;
    uint64_t v27 = v29;
    char v22 = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_220831F30(v25, v24, v12);
    char v17 = sub_22081A46C(v31, v27, v22, v25, v24, v12);
    uint64_t v19 = v18;
    char v21 = v20;
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t result = sub_22080B6B4((uint64_t)v31, v27, v22);
    *(void *)a5 = v9;
    *(void *)(a5 + 8) = v10;
    *(void *)(a5 + 16) = v11;
    *(void *)(a5 + 24) = v17;
    *(void *)(a5 + 32) = v19;
    *(unsigned char *)(a5 + 40) = v21;
  }
  return result;
}

uint64_t DataFrame.Slice.filter<A>(on:_:)@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = *a1;
  uint64_t v10 = a1[1];
  uint64_t v11 = *(void *)(v4 + 8);
  uint64_t v12 = *(void *)(v4 + 16);
  uint64_t v27 = *(void *)(v4 + 32);
  uint64_t v28 = *(void *)(v4 + 24);
  char v26 = *(unsigned char *)(v4 + 40);
  long long v34 = *(char **)v4;
  uint64_t v31 = v34;
  uint64_t v32 = v11;
  uint64_t v29 = v11;
  v30[0] = v9;
  uint64_t v33 = v12;
  v30[1] = v10;
  DataFrame.subscript.getter(v30);
  uint64_t v13 = type metadata accessor for Column();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_2208BCB14(a2, a3, v13, WitnessTable, (uint64_t)&v31);
  if (v5)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    long long v16 = v31;
    uint64_t v23 = (uint64_t)v31;
    uint64_t v24 = v32;
    uint64_t v25 = v12;
    char v17 = v33;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_220831F30(v28, v27, v26);
    uint64_t v18 = sub_22081A46C(v16, v24, v17, v28, v27, v26);
    uint64_t v20 = v19;
    char v22 = v21;
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t result = sub_22080B6B4(v23, v24, v17);
    *(void *)a4 = v34;
    *(void *)(a4 + 8) = v29;
    *(void *)(a4 + 16) = v25;
    *(void *)(a4 + 24) = v18;
    *(void *)(a4 + 32) = v20;
    *(unsigned char *)(a4 + 40) = v22;
  }
  return result;
}

uint64_t DataFrame.Slice.prefix(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22085B3D8(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_2208EE658, a2);
}

uint64_t DataFrame.Slice.prefix(through:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  int64_t v3 = result + 1;
  if (__OFADD__(result, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = v2[3];
    uint64_t v5 = v2[4];
    uint64_t v7 = v2[1];
    uint64_t v8 = v2[2];
    uint64_t v9 = *v2;
    char v10 = *((unsigned char *)v2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_220831F30(v6, v5, v10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_220831F30(v6, v5, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22080B6B4(v6, v5, v10);
    int64_t v11 = sub_2208EE658(v3, v6, v5, v10);
    uint64_t v13 = v12;
    char v15 = v14;
    uint64_t result = sub_22080B6B4(v6, v5, v10);
    *(void *)a2 = v9;
    *(void *)(a2 + 8) = v7;
    *(void *)(a2 + 16) = v8;
    *(void *)(a2 + 24) = v11;
    *(void *)(a2 + 32) = v13;
    *(unsigned char *)(a2 + 40) = v15;
  }
  return result;
}

uint64_t DataFrame.Slice.prefix(upTo:)@<X0>(int64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v6 = *v2;
  uint64_t v5 = v2[1];
  uint64_t v7 = v2[2];
  uint64_t v8 = v2[3];
  uint64_t v9 = v2[4];
  char v10 = *((unsigned char *)v2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220831F30(v8, v9, v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220831F30(v8, v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v8, v9, v10);
  int64_t v11 = sub_2208EE658(a1, v8, v9, v10);
  uint64_t v13 = v12;
  char v15 = v14;
  uint64_t result = sub_22080B6B4(v8, v9, v10);
  *(void *)a2 = v6;
  *(void *)(a2 + 8) = v5;
  *(void *)(a2 + 16) = v7;
  *(void *)(a2 + 24) = v11;
  *(void *)(a2 + 32) = v13;
  *(unsigned char *)(a2 + 40) = v15;
  return result;
}

uint64_t DataFrame.Slice.suffix(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22085B3D8(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_220811DD0, a2);
}

uint64_t sub_22085B3D8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v8 = *v3;
  uint64_t v7 = v3[1];
  uint64_t v9 = v3[2];
  uint64_t v10 = v3[3];
  uint64_t v11 = v3[4];
  uint64_t v12 = *((unsigned __int8 *)v3 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220831F30(v10, v11, v12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220831F30(v10, v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v10, v11, v12);
  uint64_t v13 = a2(a1, v10, v11, v12);
  uint64_t v15 = v14;
  LOBYTE(a1) = v16;
  uint64_t result = sub_22080B6B4(v10, v11, v12);
  *(void *)a3 = v8;
  *(void *)(a3 + 8) = v7;
  *(void *)(a3 + 16) = v9;
  *(void *)(a3 + 24) = v13;
  *(void *)(a3 + 32) = v15;
  *(unsigned char *)(a3 + 40) = a1;
  return result;
}

uint64_t DataFrame.Slice.suffix(from:)@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v6 = *v2;
  uint64_t v5 = v2[1];
  uint64_t v7 = v2[2];
  uint64_t v8 = v2[3];
  uint64_t v9 = v2[4];
  char v10 = *((unsigned char *)v2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220831F30(v8, v9, v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220831F30(v8, v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v8, v9, v10);
  sub_220883950(v8, v9, v10);
  uint64_t v12 = v11;
  char v14 = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220831F30(v8, v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = sub_22080B6B4(v8, v9, v10);
  if (v14) {
    uint64_t v16 = 0;
  }
  else {
    uint64_t v16 = v12;
  }
  if (v16 < (uint64_t)a1)
  {
    __break(1u);
    goto LABEL_14;
  }
  BOOL v17 = __OFADD__(v16, 1);
  uint64_t v18 = v16 + 1;
  if (v17)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  BOOL v19 = v18 == (void)a1;
  if ((char *)v18 == a1) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = a1;
  }
  if ((char *)v18 == a1) {
    uint64_t v21 = 0;
  }
  else {
    uint64_t v21 = v18;
  }
  char v22 = 2 * v19;
  uint64_t v23 = sub_22081A46C(v20, v21, 2 * v19, v8, v9, v10);
  uint64_t v25 = v24;
  char v27 = v26;
  uint64_t result = sub_22080B6B4((uint64_t)v20, v21, v22);
  *(void *)a2 = v6;
  *(void *)(a2 + 8) = v5;
  *(void *)(a2 + 16) = v7;
  *(void *)(a2 + 24) = v23;
  *(void *)(a2 + 32) = v25;
  *(unsigned char *)(a2 + 40) = v27;
  return result;
}

double DataFrame.Slice.selecting<A>(columnNames:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return DataFrame.Slice.subscript.getter(a1, a2, a3, a4);
}

double DataFrame.Slice.selecting(columnNames:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)v2;
  uint64_t v6 = *(void *)(v2 + 8);
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v8 = *(void *)(v2 + 24);
  uint64_t v9 = *(void *)(v2 + 32);
  char v10 = *(unsigned char *)(v2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220831F30(v8, v9, v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220831F30(v8, v9, v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2208155A0(a1, v5, v6, v7, (uint64_t)&v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  sub_22080B6B4(v8, v9, v10);
  uint64_t v11 = v14;
  double result = *(double *)&v13;
  *(_OWORD *)a2 = v13;
  *(void *)(a2 + 16) = v11;
  *(void *)(a2 + 24) = v8;
  *(void *)(a2 + 32) = v9;
  *(unsigned char *)(a2 + 40) = v10;
  return result;
}

uint64_t static DataFrame.Slice.== infix(_:_:)(long long *a1, long long *a2)
{
  long long v2 = a1[1];
  long long v12 = *a1;
  v13[0] = v2;
  *(_OWORD *)((char *)v13 + 9) = *(long long *)((char *)a1 + 25);
  long long v3 = a2[1];
  long long v10 = *a2;
  v11[0] = v3;
  *(_OWORD *)((char *)v11 + 9) = *(long long *)((char *)a2 + 25);
  sub_220833B58((uint64_t)&v12);
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_22083196C(v4, (uint64_t)&v12);
  sub_220833BC0((uint64_t)&v12);
  swift_bridgeObjectRelease();
  sub_220833B58((uint64_t)&v10);
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_22083196C(v6, (uint64_t)&v10);
  sub_220833BC0((uint64_t)&v10);
  swift_bridgeObjectRelease();
  char v8 = sub_2208187F4(v5, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t DataFrame.Slice.hash(into:)(uint64_t a1)
{
  long long v3 = v1[1];
  long long v10 = *v1;
  v11[0] = v3;
  *(_OWORD *)((char *)v11 + 9) = *(long long *)((char *)v1 + 25);
  sub_220833B58((uint64_t)&v10);
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_22083196C(v4, (uint64_t)&v10);
  sub_220833BC0((uint64_t)&v10);
  swift_bridgeObjectRelease();
  sub_22093F440();
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = v5 + 32;
    do
    {
      sub_220833C28(v7, (uint64_t)v9);
      AnyColumnSlice.hash(into:)(a1);
      sub_220833C84((uint64_t)v9);
      v7 += 40;
      --v6;
    }
    while (v6);
  }
  return swift_bridgeObjectRelease();
}

uint64_t DataFrame.Slice.hashValue.getter()
{
  uint64_t v1 = *((void *)v0 + 2);
  char v2 = *((unsigned char *)v0 + 40);
  long long v5 = *v0;
  uint64_t v6 = v1;
  long long v7 = *(long long *)((char *)v0 + 24);
  char v8 = v2;
  sub_22093F430();
  DataFrame.Slice.hash(into:)((uint64_t)v4);
  return sub_22093F490();
}

uint64_t sub_22085BA2C()
{
  uint64_t v1 = *((void *)v0 + 2);
  char v2 = *((unsigned char *)v0 + 40);
  long long v5 = *v0;
  uint64_t v6 = v1;
  long long v7 = *(long long *)((char *)v0 + 24);
  char v8 = v2;
  sub_22093F430();
  DataFrame.Slice.hash(into:)((uint64_t)v4);
  return sub_22093F490();
}

uint64_t sub_22085BA94()
{
  uint64_t v1 = *((void *)v0 + 2);
  char v2 = *((unsigned char *)v0 + 40);
  long long v5 = *v0;
  uint64_t v6 = v1;
  long long v7 = *(long long *)((char *)v0 + 24);
  char v8 = v2;
  sub_22093F430();
  DataFrame.Slice.hash(into:)((uint64_t)v4);
  return sub_22093F490();
}

uint64_t sub_22085BAF4(long long *a1, long long *a2)
{
  long long v2 = a1[1];
  long long v12 = *a1;
  v13[0] = v2;
  *(_OWORD *)((char *)v13 + 9) = *(long long *)((char *)a1 + 25);
  long long v3 = a2[1];
  long long v10 = *a2;
  v11[0] = v3;
  *(_OWORD *)((char *)v11 + 9) = *(long long *)((char *)a2 + 25);
  sub_220833B58((uint64_t)&v12);
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_22083196C(v4, (uint64_t)&v12);
  sub_220833BC0((uint64_t)&v12);
  swift_bridgeObjectRelease();
  sub_220833B58((uint64_t)&v10);
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_22083196C(v6, (uint64_t)&v10);
  sub_220833BC0((uint64_t)&v10);
  swift_bridgeObjectRelease();
  char v8 = sub_2208187F4(v5, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

_UNKNOWN **sub_22085BBD0()
{
  return &protocol witness table for AnyColumnSlice;
}

unint64_t sub_22085BBE0()
{
  unint64_t result = qword_267F18BF8;
  if (!qword_267F18BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F18BF8);
  }
  return result;
}

uint64_t _s5SliceVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  char v4 = *(unsigned char *)(a1 + 40);

  return sub_22080B6B4(v2, v3, v4);
}

uint64_t _s5SliceVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  char v6 = *(unsigned char *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220831F30(v4, v5, v6);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 40) = v6;
  return a1;
}

uint64_t _s5SliceVwca(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = v2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = v2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = v2[3];
  uint64_t v5 = v2[4];
  LOBYTE(v2) = *((unsigned char *)v2 + 40);
  sub_220831F30(v4, v5, (char)v2);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  char v8 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = (_BYTE)v2;
  sub_22080B6B4(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s5SliceVwta(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  char v4 = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  char v7 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v4;
  sub_22080B6B4(v5, v6, v7);
  return a1;
}

uint64_t _s5SliceVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s5SliceVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DataFrame.Slice()
{
  return &type metadata for DataFrame.Slice;
}

void sub_22085BECC(const char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  v13[1] = *(char **)MEMORY[0x263EF8340];
  if (!a1) {
    __break(1u);
  }
  v13[0] = (char *)&a1[a3];
  char v8 = a1[a3];
  a1[a3] = 0;
  float v9 = strtof(a1, v13);
  if (v13[0]) {
    BOOL v10 = v13[0] == a2;
  }
  else {
    BOOL v10 = 0;
  }
  char v11 = !v10;
  float v12 = v9;
  if (!v10) {
    float v12 = 0.0;
  }
  *(float *)a4 = v12;
  *(unsigned char *)(a4 + 4) = v11;
  a1[a3] = v8;
}

void sub_22085BF88(const char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  v13[1] = *(char **)MEMORY[0x263EF8340];
  if (!a1) {
    __break(1u);
  }
  v13[0] = (char *)&a1[a3];
  char v8 = a1[a3];
  a1[a3] = 0;
  double v9 = strtod(a1, v13);
  if (v13[0]) {
    BOOL v10 = v13[0] == a2;
  }
  else {
    BOOL v10 = 0;
  }
  char v11 = !v10;
  double v12 = v9;
  if (!v10) {
    double v12 = 0.0;
  }
  *(double *)a4 = v12;
  *(unsigned char *)(a4 + 8) = v11;
  a1[a3] = v8;
}

unint64_t sub_22085C044(uint64_t a1, unint64_t a2)
{
  swift_bridgeObjectRetain();
  if ((a2 & 0x1000000000000000) != 0)
  {
    a1 = sub_2208CDDFC();
    unint64_t v10 = v9;
    swift_bridgeObjectRelease();
    a2 = v10;
    if ((v10 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_10:
    v15[0] = a1;
    v15[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    sub_22085BECC((const char *)v15, (char *)v15 + (HIBYTE(a2) & 0xF), HIBYTE(a2) & 0xF, (uint64_t)&v13);
    unsigned int v7 = v13;
    unsigned __int8 v8 = v14;
    goto LABEL_11;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    goto LABEL_10;
  }
LABEL_3:
  if ((a1 & 0x1000000000000000) != 0)
  {
    char v4 = (const char *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    char v4 = (const char *)sub_22093EF60();
    uint64_t v5 = v12;
  }
  if (v4) {
    uint64_t v6 = (char *)&v4[v5];
  }
  else {
    uint64_t v6 = 0;
  }
  sub_22085BECC(v4, v6, v5, (uint64_t)v15);
  unsigned int v7 = v15[0];
  unsigned __int8 v8 = BYTE4(v15[0]);
LABEL_11:
  swift_bridgeObjectRelease();
  LOBYTE(v15[0]) = v8;
  return v7 | ((unint64_t)v8 << 32);
}

uint64_t sub_22085C140(uint64_t a1, unint64_t a2)
{
  swift_bridgeObjectRetain();
  if ((a2 & 0x1000000000000000) != 0)
  {
    a1 = sub_2208CDDFC();
    unint64_t v9 = v8;
    swift_bridgeObjectRelease();
    a2 = v9;
    if ((v9 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_10:
    v13[0] = a1;
    v13[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    sub_22085BF88((const char *)v13, (char *)v13 + (HIBYTE(a2) & 0xF), HIBYTE(a2) & 0xF, (uint64_t)&v12);
    uint64_t v7 = v12;
    goto LABEL_11;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    goto LABEL_10;
  }
LABEL_3:
  if ((a1 & 0x1000000000000000) != 0)
  {
    char v4 = (const char *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    char v4 = (const char *)sub_22093EF60();
    uint64_t v5 = v11;
  }
  if (v4) {
    uint64_t v6 = (char *)&v4[v5];
  }
  else {
    uint64_t v6 = 0;
  }
  sub_22085BF88(v4, v6, v5, (uint64_t)v13);
  uint64_t v7 = v13[0];
LABEL_11:
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_22085C234@<X0>(char a1@<W0>, int64_t **a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_22093E610();
  uint64_t result = MEMORY[0x270FA5388](v7 - 8);
  switch(a1)
  {
    case 1:
      unint64_t v10 = *a2;
      if (((unint64_t)*a2 & 7) == 0) {
        goto LABEL_33;
      }
      uint64_t result = sub_22093DA88();
      goto LABEL_34;
    case 2:
      uint64_t v11 = *a2;
      if (((unint64_t)*a2 & 7) != 0)
      {
        uint64_t v12 = sub_22093DA88();
        if ((v12 & 0x8000000000000000) == 0) {
          goto LABEL_8;
        }
      }
      else
      {
        uint64_t v27 = *v11;
        unsigned int v13 = v11 + 1;
        uint64_t v12 = v27;
        *a2 = v13;
        if ((v27 & 0x8000000000000000) == 0)
        {
LABEL_8:
          *a2 = (int64_t *)((char *)*a2 + v12);
          sub_22093E600();
          __swift_instantiateConcreteTypeFromMangledName(&qword_267F18BB0);
          sub_22085CB30();
          uint64_t result = sub_22093E580();
          if (v14)
          {
            *(void *)(a3 + 24) = MEMORY[0x263F8D310];
            *(void *)a3 = result;
            *(void *)(a3 + 8) = v14;
          }
          else
          {
LABEL_10:
            *(_OWORD *)a3 = 0u;
            *(_OWORD *)(a3 + 16) = 0u;
          }
          return result;
        }
      }
      __break(1u);
LABEL_39:
      int64_t v15 = *v13;
      *a2 = v13 + 1;
      if (v15 < 0)
      {
LABEL_40:
        __break(1u);
        JUMPOUT(0x22085C584);
      }
LABEL_13:
      uint64_t v16 = sub_22081C398(0, v15, 0, MEMORY[0x263F8EE78]);
      if (v15)
      {
        BOOL v17 = *a2;
        do
        {
          uint64_t v19 = *v17++;
          uint64_t v18 = v19;
          unint64_t v21 = *((void *)v16 + 2);
          unint64_t v20 = *((void *)v16 + 3);
          if (v21 >= v20 >> 1) {
            uint64_t v16 = sub_22081C398((char *)(v20 > 1), v21 + 1, 1, v16);
          }
          *((void *)v16 + 2) = v21 + 1;
          char v22 = &v16[16 * v21];
          *((void *)v22 + 4) = v18;
          char v22[40] = 0;
          --v15;
        }
        while (v15);
        *a2 = v17;
      }
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18C10);
      *(void *)(a3 + 24) = result;
      *(void *)a3 = v16;
      return result;
    case 3:
      unsigned int v13 = *a2;
      if (((unint64_t)*a2 & 7) == 0) {
        goto LABEL_39;
      }
      int64_t v15 = sub_22093DA88();
      if ((v15 & 0x8000000000000000) == 0) {
        goto LABEL_13;
      }
      goto LABEL_40;
    case 4:
      uint64_t result = sub_22085C9CC(a2);
      if (v3) {
        return result;
      }
      uint64_t v23 = result;
      uint64_t v24 = &qword_267F18C08;
      goto LABEL_23;
    case 5:
      uint64_t result = sub_22085C5AC(a2);
      if (v3) {
        return result;
      }
      uint64_t v23 = result;
      uint64_t v24 = &qword_267F18C00;
LABEL_23:
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(v24);
      *(void *)(a3 + 24) = result;
      *(void *)a3 = v23;
      return result;
    case 6:
      sub_220809E4C();
      swift_allocError();
      long long v26 = xmmword_220945400;
      goto LABEL_26;
    case 7:
      goto LABEL_10;
    case 8:
      sub_220809E4C();
      swift_allocError();
      long long v26 = xmmword_2209453F0;
LABEL_26:
      *(_OWORD *)uint64_t v25 = v26;
      *(unsigned char *)(v25 + 16) = 2;
      return swift_willThrow();
    case 9:
      *(void *)(a3 + 24) = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18788);
      uint64_t result = (uint64_t)sub_22091CCB4((size_t *)a2, (uint64_t *)a3);
      if (v3) {
        return __swift_deallocate_boxed_opaque_existential_1(a3);
      }
      return result;
    default:
      unint64_t v9 = *a2;
      if (((unint64_t)*a2 & 7) != 0)
      {
        uint64_t result = sub_22093DA88();
      }
      else
      {
        uint64_t result = *v9;
        *a2 = v9 + 1;
      }
      unint64_t v10 = (int64_t *)MEMORY[0x263F8D6C8];
      *(void *)(a3 + 24) = MEMORY[0x263F8D6C8];
      if (result < 0)
      {
        __break(1u);
LABEL_33:
        uint64_t result = *v10;
        *a2 = v10 + 1;
LABEL_34:
        *(void *)(a3 + 24) = MEMORY[0x263F8D538];
      }
      *(void *)a3 = result;
      return result;
  }
}

uint64_t sub_22085C5AC(void **a1)
{
  uint64_t v5 = *a1;
  if (((unint64_t)*a1 & 7) != 0)
  {
    uint64_t v1 = a1;
    uint64_t v6 = sub_22093DA88();
    if ((v6 & 0x8000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_27:
    __break(1u);
LABEL_28:
    uint64_t v31 = v1;
    sub_220809E4C();
    swift_allocError();
    *(void *)uint64_t v20 = v3;
    *(void *)(v20 + 8) = 0;
    *(unsigned char *)(v20 + 16) = 2;
    swift_willThrow();
    uint64_t v1 = v31;
LABEL_35:
    swift_bridgeObjectRelease();
    return (uint64_t)v1;
  }
  uint64_t v6 = *v5;
  *a1 = v5 + 1;
  if (v6 < 0) {
    goto LABEL_27;
  }
LABEL_3:
  uint64_t v31 = (void *)MEMORY[0x263F8EE80];
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18C00);
  sub_22093E290();
  uint64_t v1 = v31;
  if (!v6) {
    return (uint64_t)v1;
  }
  while (1)
  {
    uint64_t v3 = *(unsigned __int8 *)*a1;
    *a1 = (void *)((char *)*a1 + 1);
    if (((v3 - 128) & 0xFFFFFF00) != 0) {
      break;
    }
    if ((v3 + 0x80) > 9u) {
      goto LABEL_28;
    }
    sub_22085C234(v25);
    if (v2)
    {
      uint64_t v31 = v1;
      goto LABEL_35;
    }
    if (!v25[3])
    {
      uint64_t v31 = v1;
      sub_2208352E4((uint64_t)v25, qword_26AD40FF8);
      long long v26 = 0u;
      long long v27 = 0u;
      uint64_t v28 = 0;
      goto LABEL_33;
    }
    if ((swift_dynamicCast() & 1) == 0)
    {
      uint64_t v28 = 0;
      long long v26 = 0u;
      long long v27 = 0u;
LABEL_32:
      uint64_t v31 = v1;
LABEL_33:
      swift_bridgeObjectRelease();
      sub_2208352E4((uint64_t)&v26, &qword_267F18658);
      sub_220809E4C();
      swift_allocError();
      *(void *)uint64_t v21 = 0xD000000000000021;
      *(void *)(v21 + 8) = 0x80000002209401D0;
      *(unsigned char *)(v21 + 16) = 3;
      swift_willThrow();
      return (uint64_t)v1;
    }
    if (!*((void *)&v27 + 1)) {
      goto LABEL_32;
    }
    v29[0] = v26;
    v29[1] = v27;
    uint64_t v30 = v28;
    uint64_t v7 = *(unsigned __int8 *)*a1;
    *a1 = (void *)((char *)*a1 + 1);
    if (((v7 - 128) & 0xFFFFFF00) != 0) {
      goto LABEL_38;
    }
    if ((v7 + 0x80) > 9u)
    {
      uint64_t v31 = v1;
      sub_220809E4C();
      swift_allocError();
      *(void *)uint64_t v22 = v7;
      *(void *)(v22 + 8) = 0;
      *(unsigned char *)(v22 + 16) = 2;
      swift_willThrow();
      uint64_t v1 = v31;
      sub_220834CE8((uint64_t)v29);
      goto LABEL_35;
    }
    sub_22085C234(v25);
    sub_220834DA0((uint64_t)v29, (uint64_t)&v26);
    sub_220842FF8((uint64_t)v25, (uint64_t)v24);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v10 = sub_22081D2BC((uint64_t)&v26);
    uint64_t v11 = v1[2];
    BOOL v12 = (v9 & 1) == 0;
    uint64_t v13 = v11 + v12;
    if (__OFADD__(v11, v12)) {
      goto LABEL_39;
    }
    char v14 = v9;
    if (v1[3] >= v13)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v9) {
          goto LABEL_5;
        }
      }
      else
      {
        sub_220825670();
        if (v14) {
          goto LABEL_5;
        }
      }
    }
    else
    {
      sub_22081F67C(v13, isUniquelyReferenced_nonNull_native);
      unint64_t v15 = sub_22081D2BC((uint64_t)&v26);
      if ((v14 & 1) != (v16 & 1)) {
        goto LABEL_41;
      }
      unint64_t v10 = v15;
      if (v14)
      {
LABEL_5:
        sub_22085CB8C((uint64_t)v24, v1[7] + 32 * v10);
        goto LABEL_6;
      }
    }
    v1[(v10 >> 6) + 8] |= 1 << v10;
    sub_220834DA0((uint64_t)&v26, v1[6] + 40 * v10);
    sub_220842F90((uint64_t)v24, v1[7] + 32 * v10);
    uint64_t v17 = v1[2];
    BOOL v18 = __OFADD__(v17, 1);
    uint64_t v19 = v17 + 1;
    if (v18) {
      goto LABEL_40;
    }
    v1[2] = v19;
LABEL_6:
    swift_bridgeObjectRelease();
    sub_220834CE8((uint64_t)&v26);
    sub_2208352E4((uint64_t)v25, qword_26AD40FF8);
    sub_220834CE8((uint64_t)v29);
    if (!--v6) {
      return (uint64_t)v1;
    }
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  uint64_t result = sub_22093F2F0();
  __break(1u);
  return result;
}

unint64_t sub_22085C9CC(int64_t **a1)
{
  uint64_t v5 = *a1;
  if (((unint64_t)*a1 & 7) != 0)
  {
    uint64_t v1 = a1;
    int64_t v6 = sub_22093DA88();
    if ((v6 & 0x8000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_12:
    __break(1u);
LABEL_13:
    sub_220809E4C();
    swift_allocError();
    *(void *)uint64_t v10 = v3;
    *(void *)(v10 + 8) = 0;
    *(unsigned char *)(v10 + 16) = 2;
    swift_willThrow();
LABEL_14:
    swift_bridgeObjectRelease();
    return (unint64_t)v1;
  }
  int64_t v6 = *v5;
  *a1 = v5 + 1;
  if (v6 < 0) {
    goto LABEL_12;
  }
LABEL_3:
  uint64_t v1 = sub_22081C490(0, v6, 0, MEMORY[0x263F8EE78]);
  if (!v6) {
    return (unint64_t)v1;
  }
  while (1)
  {
    uint64_t v3 = *(unsigned __int8 *)*a1;
    *a1 = (int64_t *)((char *)*a1 + 1);
    unint64_t result = (v3 - 128);
    if ((result & 0xFFFFFF00) != 0) {
      break;
    }
    if ((v3 + 0x80) > 9u) {
      goto LABEL_13;
    }
    sub_22085C234(v11);
    if (v2) {
      goto LABEL_14;
    }
    unint64_t v9 = v1[2];
    unint64_t v8 = v1[3];
    if (v9 >= v8 >> 1) {
      uint64_t v1 = sub_22081C490((void *)(v8 > 1), v9 + 1, 1, v1);
    }
    v1[2] = v9 + 1;
    sub_220842F90((uint64_t)v11, (uint64_t)&v1[4 * v9 + 4]);
    if (!--v6) {
      return (unint64_t)v1;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_22085CB30()
{
  unint64_t result = qword_267F18C18[0];
  if (!qword_267F18C18[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267F18BB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_267F18C18);
  }
  return result;
}

uint64_t sub_22085CB8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD40FF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_22085CBF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

uint64_t sub_22085CBFC()
{
  uint64_t v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    uint64_t v0 = type metadata accessor for _RangeSetStorage._Storage();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return v0;
}

uint64_t *sub_22085CD38(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v10 | 7;
  uint64_t v12 = (v10 | 7) + v7;
  uint64_t v13 = *(void *)(v9 + 64);
  uint64_t v14 = v13 + v10;
  unint64_t v15 = ((v13 + v10) & ~v10) + v13;
  if (v15 <= 8) {
    uint64_t v16 = 8;
  }
  else {
    uint64_t v16 = v15;
  }
  uint64_t v17 = v11 | *(_DWORD *)(v6 + 80);
  if (v17 != 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0
    || v16 + 1 + (v12 & ~(v10 | 7uLL)) > 0x18)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v17 + 16) & ~v17));
    swift_retain();
  }
  else
  {
    uint64_t v31 = v14;
    uint64_t v32 = AssociatedTypeWitness;
    uint64_t v21 = ~v11;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    uint64_t v22 = (void *)(((unint64_t)a1 + v12) & v21);
    uint64_t v23 = (unsigned __int8 *)(((unint64_t)a2 + v12) & v21);
    unsigned int v24 = v23[v16];
    unsigned int v25 = v24 - 2;
    if (v24 >= 2)
    {
      if (v16 <= 3) {
        uint64_t v26 = v16;
      }
      else {
        uint64_t v26 = 4;
      }
      switch(v26)
      {
        case 1:
          int v27 = *v23;
          goto LABEL_22;
        case 2:
          int v27 = *(unsigned __int16 *)v23;
          goto LABEL_22;
        case 3:
          int v27 = *(unsigned __int16 *)v23 | (v23[2] << 16);
          goto LABEL_22;
        case 4:
          int v27 = *(_DWORD *)v23;
LABEL_22:
          int v28 = (v27 | (v25 << (8 * v16))) + 2;
          unsigned int v24 = v27 + 2;
          if (v16 < 4) {
            unsigned int v24 = v28;
          }
          break;
        default:
          break;
      }
    }
    if (v24 == 1)
    {
      *uint64_t v22 = *(void *)v23;
      *((unsigned char *)v22 + v16) = 1;
      swift_bridgeObjectRetain();
    }
    else if (v24)
    {
      memcpy((void *)(((unint64_t)a1 + v12) & v21), v23, v16 + 1);
    }
    else
    {
      uint64_t v29 = *(void (**)(void *, unsigned __int8 *, uint64_t))(v9 + 16);
      v29(v22, v23, v32);
      v29((void *)(((unint64_t)v22 + v31) & ~v10), (unsigned __int8 *)((unint64_t)&v23[v31] & ~v10), v32);
      *((unsigned char *)v22 + v16) = 0;
    }
  }
  return a1;
}

uint64_t sub_22085CFE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(uint64_t, void))v3)(a1, *(void *)(a2 + 16));
  uint64_t v4 = *(void *)(v3 + 56) + a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t result = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v7 = *(unsigned __int8 *)(result + 80);
  unint64_t v8 = (unsigned __int8 *)((v4 + (v7 | 7)) & ~(v7 | 7));
  uint64_t v9 = *(void *)(result + 64);
  uint64_t v10 = v9 + v7;
  unint64_t v11 = ((v9 + v7) & ~v7) + v9;
  if (v11 <= 8) {
    unint64_t v11 = 8;
  }
  unsigned int v12 = v8[v11];
  unsigned int v13 = v12 - 2;
  if (v12 >= 2)
  {
    if (v11 <= 3) {
      uint64_t v14 = v11;
    }
    else {
      uint64_t v14 = 4;
    }
    switch(v14)
    {
      case 1:
        int v15 = *v8;
        goto LABEL_12;
      case 2:
        int v15 = *(unsigned __int16 *)v8;
        goto LABEL_12;
      case 3:
        int v15 = *(unsigned __int16 *)v8 | (v8[2] << 16);
        goto LABEL_12;
      case 4:
        int v15 = *(_DWORD *)v8;
LABEL_12:
        int v16 = (v15 | (v13 << (8 * v11))) + 2;
        unsigned int v12 = v15 + 2;
        if (v11 < 4) {
          unsigned int v12 = v16;
        }
        break;
      default:
        break;
    }
  }
  if (v12 == 1)
  {
    return swift_bridgeObjectRelease();
  }
  else if (!v12)
  {
    uint64_t v17 = ~v7;
    BOOL v18 = *(void (**)(unsigned __int8 *, uint64_t))(result + 8);
    v18(v8, AssociatedTypeWitness);
    return ((uint64_t (*)(unint64_t, uint64_t))v18)((unint64_t)&v8[v10] & v17, AssociatedTypeWitness);
  }
  return result;
}

uint64_t sub_22085D204(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (v9 | 7) + v6;
  unint64_t v11 = (void *)((v10 + a1) & ~(v9 | 7));
  unsigned int v12 = (unsigned __int8 *)((v10 + a2) & ~(v9 | 7));
  uint64_t v13 = *(void *)(v8 + 64);
  uint64_t v14 = v13 + v9;
  unint64_t v15 = ((v13 + v9) & ~v9) + v13;
  if (v15 <= 8) {
    uint64_t v16 = 8;
  }
  else {
    uint64_t v16 = v15;
  }
  unsigned int v17 = v12[v16];
  unsigned int v18 = v17 - 2;
  if (v17 >= 2)
  {
    if (v16 <= 3) {
      uint64_t v19 = v16;
    }
    else {
      uint64_t v19 = 4;
    }
    switch(v19)
    {
      case 1:
        int v20 = *v12;
        goto LABEL_13;
      case 2:
        int v20 = *(unsigned __int16 *)v12;
        goto LABEL_13;
      case 3:
        int v20 = *(unsigned __int16 *)v12 | (v12[2] << 16);
        goto LABEL_13;
      case 4:
        int v20 = *(_DWORD *)v12;
LABEL_13:
        int v21 = (v20 | (v18 << (8 * v16))) + 2;
        unsigned int v17 = v20 + 2;
        if (v16 < 4) {
          unsigned int v17 = v21;
        }
        break;
      default:
        break;
    }
  }
  if (v17 == 1)
  {
    void *v11 = *(void *)v12;
    *((unsigned char *)v11 + v16) = 1;
    swift_bridgeObjectRetain();
  }
  else if (v17)
  {
    memcpy(v11, v12, v16 + 1);
  }
  else
  {
    uint64_t v22 = ~v9;
    uint64_t v23 = *(void (**)(void *, unsigned __int8 *, uint64_t))(v8 + 16);
    v23(v11, v12, AssociatedTypeWitness);
    v23((void *)(((unint64_t)v11 + v14) & v22), (unsigned __int8 *)((unint64_t)&v12[v14] & v22), AssociatedTypeWitness);
    *((unsigned char *)v11 + v16) = 0;
  }
  return a1;
}

uint64_t sub_22085D428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (v9 | 7) + v6;
  unint64_t v11 = (unsigned __int8 *)((v10 + a1) & ~(v9 | 7));
  unsigned int v12 = (unsigned __int8 *)((v10 + a2) & ~(v9 | 7));
  if (v11 != v12)
  {
    uint64_t v13 = AssociatedTypeWitness;
    uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
    uint64_t v15 = *(void *)(v8 + 64);
    if (((v15 + v9) & (unint64_t)~v9) + v15 <= 8) {
      uint64_t v16 = 8;
    }
    else {
      uint64_t v16 = ((v15 + v9) & ~v9) + v15;
    }
    unsigned int v17 = v11[v16];
    unsigned int v18 = v17 - 2;
    if (v17 >= 2)
    {
      if (v16 <= 3) {
        uint64_t v19 = v16;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *v11;
          goto LABEL_14;
        case 2:
          int v20 = *(unsigned __int16 *)v11;
          goto LABEL_14;
        case 3:
          int v20 = *(unsigned __int16 *)v11 | (v11[2] << 16);
          goto LABEL_14;
        case 4:
          int v20 = *(_DWORD *)v11;
LABEL_14:
          int v21 = (v20 | (v18 << (8 * v16))) + 2;
          unsigned int v17 = v20 + 2;
          if (v16 < 4) {
            unsigned int v17 = v21;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v22 = ~v9;
    if (v17 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else if (!v17)
    {
      uint64_t v23 = *(void (**)(unsigned __int8 *, uint64_t))(v14 + 8);
      v23(v11, AssociatedTypeWitness);
      v23((unsigned __int8 *)((unint64_t)&v11[v9 + v15] & ~v9), v13);
      uint64_t v22 = ~v9;
    }
    unsigned int v24 = v12[v16];
    unsigned int v25 = v24 - 2;
    if (v24 >= 2)
    {
      if (v16 <= 3) {
        uint64_t v26 = v16;
      }
      else {
        uint64_t v26 = 4;
      }
      switch(v26)
      {
        case 1:
          int v27 = *v12;
          goto LABEL_29;
        case 2:
          int v27 = *(unsigned __int16 *)v12;
          goto LABEL_29;
        case 3:
          int v27 = *(unsigned __int16 *)v12 | (v12[2] << 16);
          goto LABEL_29;
        case 4:
          int v27 = *(_DWORD *)v12;
LABEL_29:
          int v28 = (v27 | (v25 << (8 * v16))) + 2;
          unsigned int v24 = v27 + 2;
          if (v16 < 4) {
            unsigned int v24 = v28;
          }
          break;
        default:
          break;
      }
    }
    if (v24 == 1)
    {
      *(void *)unint64_t v11 = *(void *)v12;
      v11[v16] = 1;
      swift_bridgeObjectRetain();
    }
    else if (v24)
    {
      memcpy(v11, v12, v16 + 1);
    }
    else
    {
      uint64_t v29 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v14 + 16);
      v29(v11, v12, v13);
      v29((unsigned __int8 *)((unint64_t)&v11[v9 + v15] & v22), (unsigned __int8 *)((unint64_t)&v12[v9 + v15] & v22), v13);
      v11[v16] = 0;
    }
  }
  return a1;
}

uint64_t sub_22085D744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (v9 | 7) + v6;
  unint64_t v11 = (void *)((v10 + a1) & ~(v9 | 7));
  unsigned int v12 = (unsigned __int8 *)((v10 + a2) & ~(v9 | 7));
  uint64_t v13 = *(void *)(v8 + 64);
  uint64_t v14 = v13 + v9;
  unint64_t v15 = ((v13 + v9) & ~v9) + v13;
  if (v15 <= 8) {
    uint64_t v16 = 8;
  }
  else {
    uint64_t v16 = v15;
  }
  unsigned int v17 = v12[v16];
  unsigned int v18 = v17 - 2;
  if (v17 >= 2)
  {
    if (v16 <= 3) {
      uint64_t v19 = v16;
    }
    else {
      uint64_t v19 = 4;
    }
    switch(v19)
    {
      case 1:
        int v20 = *v12;
        goto LABEL_13;
      case 2:
        int v20 = *(unsigned __int16 *)v12;
        goto LABEL_13;
      case 3:
        int v20 = *(unsigned __int16 *)v12 | (v12[2] << 16);
        goto LABEL_13;
      case 4:
        int v20 = *(_DWORD *)v12;
LABEL_13:
        int v21 = (v20 | (v18 << (8 * v16))) + 2;
        unsigned int v17 = v20 + 2;
        if (v16 < 4) {
          unsigned int v17 = v21;
        }
        break;
      default:
        break;
    }
  }
  if (v17 == 1)
  {
    void *v11 = *(void *)v12;
    *((unsigned char *)v11 + v16) = 1;
  }
  else if (v17)
  {
    memcpy(v11, v12, v16 + 1);
  }
  else
  {
    uint64_t v22 = ~v9;
    uint64_t v23 = *(void (**)(void *, unsigned __int8 *, uint64_t))(v8 + 32);
    v23(v11, v12, AssociatedTypeWitness);
    v23((void *)(((unint64_t)v11 + v14) & v22), (unsigned __int8 *)((unint64_t)&v12[v14] & v22), AssociatedTypeWitness);
    *((unsigned char *)v11 + v16) = 0;
  }
  return a1;
}

uint64_t sub_22085D964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (v9 | 7) + v6;
  unint64_t v11 = (unsigned __int8 *)((v10 + a1) & ~(v9 | 7));
  unsigned int v12 = (unsigned __int8 *)((v10 + a2) & ~(v9 | 7));
  if (v11 != v12)
  {
    uint64_t v13 = AssociatedTypeWitness;
    uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
    uint64_t v15 = *(void *)(v8 + 64);
    if (((v15 + v9) & (unint64_t)~v9) + v15 <= 8) {
      uint64_t v16 = 8;
    }
    else {
      uint64_t v16 = ((v15 + v9) & ~v9) + v15;
    }
    unsigned int v17 = v11[v16];
    unsigned int v18 = v17 - 2;
    if (v17 >= 2)
    {
      if (v16 <= 3) {
        uint64_t v19 = v16;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *v11;
          goto LABEL_14;
        case 2:
          int v20 = *(unsigned __int16 *)v11;
          goto LABEL_14;
        case 3:
          int v20 = *(unsigned __int16 *)v11 | (v11[2] << 16);
          goto LABEL_14;
        case 4:
          int v20 = *(_DWORD *)v11;
LABEL_14:
          int v21 = (v20 | (v18 << (8 * v16))) + 2;
          unsigned int v17 = v20 + 2;
          if (v16 < 4) {
            unsigned int v17 = v21;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v22 = ~v9;
    if (v17 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else if (!v17)
    {
      uint64_t v23 = *(void (**)(unsigned __int8 *, uint64_t))(v14 + 8);
      v23(v11, AssociatedTypeWitness);
      v23((unsigned __int8 *)((unint64_t)&v11[v9 + v15] & ~v9), v13);
      uint64_t v22 = ~v9;
    }
    unsigned int v24 = v12[v16];
    unsigned int v25 = v24 - 2;
    if (v24 >= 2)
    {
      if (v16 <= 3) {
        uint64_t v26 = v16;
      }
      else {
        uint64_t v26 = 4;
      }
      switch(v26)
      {
        case 1:
          int v27 = *v12;
          goto LABEL_29;
        case 2:
          int v27 = *(unsigned __int16 *)v12;
          goto LABEL_29;
        case 3:
          int v27 = *(unsigned __int16 *)v12 | (v12[2] << 16);
          goto LABEL_29;
        case 4:
          int v27 = *(_DWORD *)v12;
LABEL_29:
          int v28 = (v27 | (v25 << (8 * v16))) + 2;
          unsigned int v24 = v27 + 2;
          if (v16 < 4) {
            unsigned int v24 = v28;
          }
          break;
        default:
          break;
      }
    }
    if (v24 == 1)
    {
      *(void *)unint64_t v11 = *(void *)v12;
      v11[v16] = 1;
    }
    else if (v24)
    {
      memcpy(v11, v12, v16 + 1);
    }
    else
    {
      uint64_t v29 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v14 + 32);
      v29(v11, v12, v13);
      v29((unsigned __int8 *)((unint64_t)&v11[v9 + v15] & v22), (unsigned __int8 *)((unint64_t)&v12[v9 + v15] & v22), v13);
      v11[v16] = 0;
    }
  }
  return a1;
}

uint64_t sub_22085DC7C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  unint64_t v10 = ((*(void *)(v8 + 64) + v9) & ~v9) + *(void *)(v8 + 64);
  uint64_t v11 = 8;
  if (v10 > 8) {
    uint64_t v11 = v10;
  }
  if (v7 <= 0xFD) {
    unsigned int v12 = 253;
  }
  else {
    unsigned int v12 = v7;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v13 = v9 | 7;
  uint64_t v14 = v13 + *(void *)(v6 + 64);
  if (a2 <= v12) {
    goto LABEL_27;
  }
  uint64_t v15 = v11 + (v14 & ~v13) + 1;
  char v16 = 8 * v15;
  if (v15 <= 3)
  {
    unsigned int v19 = ((a2 - v12 + ~(-1 << v16)) >> v16) + 1;
    if (HIWORD(v19))
    {
      int v17 = *(_DWORD *)((char *)a1 + v15);
      if (!v17) {
        goto LABEL_27;
      }
      goto LABEL_17;
    }
    if (v19 > 0xFF)
    {
      int v17 = *(unsigned __int16 *)((char *)a1 + v15);
      if (!*(unsigned __int16 *)((char *)a1 + v15)) {
        goto LABEL_27;
      }
      goto LABEL_17;
    }
    if (v19 < 2)
    {
LABEL_27:
      if (v7 < 0xFD)
      {
        unsigned int v24 = *(unsigned __int8 *)((((unint64_t)a1 + v14) & ~v13) + v11);
        if (v24 >= 3) {
          return (v24 ^ 0xFF) + 1;
        }
        else {
          return 0;
        }
      }
      else
      {
        uint64_t v23 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
        return v23(a1, v7, v5);
      }
    }
  }
  int v17 = *((unsigned __int8 *)a1 + v15);
  if (!*((unsigned char *)a1 + v15)) {
    goto LABEL_27;
  }
LABEL_17:
  int v20 = (v17 - 1) << v16;
  if (v15 > 3) {
    int v20 = 0;
  }
  if (v15)
  {
    if (v15 <= 3) {
      int v21 = v15;
    }
    else {
      int v21 = 4;
    }
    switch(v21)
    {
      case 2:
        int v22 = *a1;
        break;
      case 3:
        int v22 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v22 = *(_DWORD *)a1;
        break;
      default:
        int v22 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v22 = 0;
  }
  return v12 + (v22 | v20) + 1;
}

void sub_22085DF04(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v28 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t v10 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  unint64_t v12 = ((*(void *)(v10 + 64) + v11) & ~v11) + *(void *)(v10 + 64);
  if (v12 <= 8) {
    unint64_t v12 = 8;
  }
  if (v9 <= 0xFD) {
    unsigned int v13 = 253;
  }
  else {
    unsigned int v13 = v9;
  }
  uint64_t v14 = v11 | 7;
  uint64_t v15 = (v11 | 7) + *(void *)(v8 + 64);
  size_t v16 = v12 + 1;
  size_t v17 = v12 + 1 + (v15 & ~v14);
  if (a3 <= v13)
  {
    int v18 = 0;
  }
  else if (v17 <= 3)
  {
    unsigned int v22 = ((a3 - v13 + ~(-1 << (8 * v17))) >> (8 * v17)) + 1;
    if (HIWORD(v22))
    {
      int v18 = 4;
    }
    else if (v22 >= 0x100)
    {
      int v18 = 2;
    }
    else
    {
      int v18 = v22 > 1;
    }
  }
  else
  {
    int v18 = 1;
  }
  if (v13 < a2)
  {
    unsigned int v19 = ~v13 + a2;
    if (v17 < 4)
    {
      int v20 = (v19 >> (8 * v17)) + 1;
      if (v17)
      {
        int v23 = v19 & ~(-1 << (8 * v17));
        bzero(a1, v17);
        if (v17 == 3)
        {
          *(_WORD *)a1 = v23;
          a1[2] = BYTE2(v23);
        }
        else if (v17 == 2)
        {
          *(_WORD *)a1 = v23;
        }
        else
        {
          *a1 = v23;
        }
      }
    }
    else
    {
      bzero(a1, v17);
      *(_DWORD *)a1 = v19;
      int v20 = 1;
    }
    switch(v18)
    {
      case 1:
        a1[v17] = v20;
        return;
      case 2:
        *(_WORD *)&a1[v17] = v20;
        return;
      case 3:
        goto LABEL_50;
      case 4:
        *(_DWORD *)&a1[v17] = v20;
        return;
      default:
        return;
    }
  }
  uint64_t v21 = ~v14;
  switch(v18)
  {
    case 1:
      a1[v17] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 2:
      *(_WORD *)&a1[v17] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 3:
LABEL_50:
      __break(1u);
      JUMPOUT(0x22085E278);
    case 4:
      *(_DWORD *)&a1[v17] = 0;
      goto LABEL_25;
    default:
LABEL_25:
      if (a2)
      {
LABEL_26:
        if (v9 < 0xFD)
        {
          unsigned int v25 = (unsigned char *)((unint64_t)&a1[v15] & v21);
          if (a2 > 0xFD)
          {
            int v26 = a2 - 254;
            if (v16 < 4)
            {
              if (v12 != -1)
              {
                int v27 = v26 & ~(-1 << (8 * v16));
                bzero(v25, v16);
                if (v16 == 3)
                {
                  *(_WORD *)unsigned int v25 = v27;
                  void v25[2] = BYTE2(v27);
                }
                else if (v16 == 2)
                {
                  *(_WORD *)unsigned int v25 = v27;
                }
                else
                {
                  *unsigned int v25 = v27;
                }
              }
            }
            else
            {
              bzero(v25, v12 + 1);
              *(_DWORD *)unsigned int v25 = v26;
            }
          }
          else
          {
            v25[v12] = -(char)a2;
          }
        }
        else
        {
          unsigned int v24 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
          v24(a1, a2, v9, v7);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for _DiscontiguousSlice()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_22085E2B8()
{
  return swift_getWitnessTable();
}

uint64_t sub_22085E2D4()
{
  return swift_getWitnessTable();
}

uint64_t sub_22085E344()
{
  return swift_getWitnessTable();
}

uint64_t sub_22085E388@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v7 = type metadata accessor for _RangeSet();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v16 - v10;
  MEMORY[0x270FA5388](v9);
  unsigned int v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v13, v3, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a1, v7);
  return sub_22085E558((uint64_t)v13, (uint64_t)v11, a2, a3);
}

uint64_t sub_22085E558@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a4, a1);
  uint64_t v6 = a4 + *(int *)(type metadata accessor for _DiscontiguousSlice() + 36);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v7 = type metadata accessor for _RangeSet();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32);

  return v8(v6, a2, v7);
}

uint64_t sub_22085E670()
{
  return sub_22093E460() & 1;
}

uint64_t sub_22085E724(void *a1, void *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  swift_getAssociatedTypeWitness();
  type metadata accessor for _DiscontiguousSlice.Index();
  swift_getAssociatedConformanceWitness();
  return sub_22093E520() & 1;
}

uint64_t sub_22085E7F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  uint64_t v4 = (char *)a3 + *(int *)(type metadata accessor for _DiscontiguousSlice.Index() + 36);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32);

  return v6(v4, a2, AssociatedTypeWitness);
}

uint64_t sub_22085E8A0()
{
  return sub_22085E670();
}

uint64_t sub_22085E8B8()
{
  return sub_22093E370();
}

uint64_t sub_22085E934()
{
  return sub_22093F490();
}

uint64_t sub_22085E98C(void *a1, void *a2)
{
  return sub_22085E724(a1, a2);
}

uint64_t sub_22085E998()
{
  return sub_22085E934();
}

uint64_t sub_22085E9A0()
{
  return sub_22085E8B8();
}

uint64_t sub_22085E9A8()
{
  return sub_22093F490();
}

uint64_t sub_22085E9FC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  int v26 = a2;
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v22 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  int v23 = (char *)&v21 - v8;
  uint64_t v24 = v6;
  uint64_t v25 = v5;
  swift_getAssociatedConformanceWitness();
  uint64_t v21 = sub_22093ECE0();
  uint64_t v9 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v11 = (char *)&v21 - v10;
  uint64_t v12 = type metadata accessor for _RangeSet();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v21 - v14;
  uint64_t v16 = v3 + *(int *)(a1 + 36);
  if (sub_220873408())
  {
    size_t v17 = v26;
    return sub_22085ED08(a1, v17);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v12);
    uint64_t v19 = type metadata accessor for _RangeSetStorage();
    sub_2208C479C(0, (uint64_t)v11);
    (*(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(v15, v19);
    uint64_t v20 = (uint64_t)v23;
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v23, v11, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v21);
    return sub_22085E7F0(0, v20, v26);
  }
}

uint64_t sub_22085ED08@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v8 = (char *)&v16 - v7;
  swift_getAssociatedConformanceWitness();
  uint64_t v9 = type metadata accessor for _RangeSet();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v16 - v10;
  (*(void (**)(char *, uint64_t))(v12 + 16))((char *)&v16 - v10, v3 + *(int *)(a1 + 36));
  uint64_t v13 = type metadata accessor for _RangeSetStorage();
  uint64_t v14 = sub_2208C4964(v13);
  (*(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8))(v11, v13);
  sub_22093EAE0();
  return sub_22085E7F0(v14, (uint64_t)v8, a2);
}

uint64_t sub_22085EEF0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  long long v59 = a3;
  uint64_t v63 = a2;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = (void (*)(char *, uint64_t))swift_getAssociatedConformanceWitness();
  uint64_t v8 = sub_22093ECE0();
  uint64_t v61 = *(char **)(v8 - 8);
  uint64_t v62 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v46 - v9;
  uint64_t v11 = type metadata accessor for _RangeSet();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v46 - v14;
  uint64_t v58 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v55 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v46 - v18;
  type metadata accessor for _DiscontiguousSlice.Index();
  uint64_t v56 = v5;
  uint64_t v57 = v6;
  sub_22093EA90();
  uint64_t v20 = *(int *)(v63 + 36);
  uint64_t v50 = v3;
  uint64_t v21 = v3 + v20;
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v53 = v21;
  uint64_t v54 = v12 + 16;
  uint64_t v23 = v11;
  long long v52 = v22;
  ((void (*)(char *))v22)(v15);
  uint64_t v24 = *a1;
  uint64_t v25 = AssociatedTypeWitness;
  uint64_t v26 = type metadata accessor for _RangeSetStorage();
  sub_2208C479C(v24, (uint64_t)v10);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t AssociatedConformanceWitness = *(void (**)(char *, uint64_t))(v27 + 8);
  uint64_t v51 = v27 + 8;
  AssociatedConformanceWitness(v15, v26);
  uint64_t v28 = v62;
  LOBYTE(AssociatedTypeWitness) = sub_22093ECD0();
  uint64_t v29 = (void (*)(uint64_t, uint64_t))*((void *)v61 + 1);
  uint64_t v61 = v10;
  long long v49 = v29;
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v29)(v10, v28);
  uint64_t v31 = *a1;
  if (AssociatedTypeWitness)
  {
    uint64_t v32 = v55;
    (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v55, v19, v25);
    uint64_t v33 = v59;
    uint64_t v34 = v31;
    uint64_t v35 = (uint64_t)v32;
    return sub_22085E7F0(v34, v35, v33);
  }
  long long v47 = v19;
  uint64_t v48 = v25;
  uint64_t v36 = v31 + 1;
  if (__OFADD__(v31, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v37 = v53;
    uint64_t v38 = v23;
    uint64_t v39 = v23;
    uint64_t v40 = v52;
    v52(v15, v53, v39);
    uint64_t v41 = sub_2208C4964(v26);
    AssociatedConformanceWitness(v15, v26);
    if (v36 < v41)
    {
      v40(v15, v37, v38);
      uint64_t v42 = (uint64_t)v61;
      sub_2208C479C(v36, (uint64_t)v61);
      uint64_t v43 = v58;
      uint64_t v44 = v48;
      (*(void (**)(char *, uint64_t))(v58 + 8))(v47, v48);
      AssociatedConformanceWitness(v15, v26);
      uint64_t v45 = v55;
      (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v55, v42, v44);
      v49(v42, v62);
      uint64_t v33 = v59;
      uint64_t v34 = v36;
      uint64_t v35 = (uint64_t)v45;
      return sub_22085E7F0(v34, v35, v33);
    }
    sub_22085ED08(v63, v59);
    return (*(uint64_t (**)(char *, uint64_t))(v58 + 8))(v47, v48);
  }
  return result;
}

uint64_t sub_22085F3A0@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for _DiscontiguousSlice.Index();
  uint64_t v2 = (uint64_t (*)(uint64_t *, void))sub_22093EBD0();
  uint64_t v4 = v3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, v4, AssociatedTypeWitness);
  return v2(&v7, 0);
}

uint64_t sub_22085F47C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v76 = a1;
  uint64_t v68 = a3;
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v74 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v73 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = v5;
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v9 = type metadata accessor for _RangeSet();
  uint64_t v69 = *(void *)(v9 - 8);
  uint64_t v70 = v9;
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v66 = (uint64_t)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v65 = (char *)&v58 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v67 = (uint64_t *)((char *)&v58 - v14);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v15 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v61 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v58 - v17;
  uint64_t v62 = v3;
  uint64_t v72 = v6;
  uint64_t v19 = type metadata accessor for _DiscontiguousSlice.Index();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v58 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v58 - v24;
  uint64_t v26 = sub_22093ECE0();
  uint64_t v63 = *(void *)(v26 - 8);
  uint64_t v64 = v26;
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  long long v60 = (char *)&v58 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  uint64_t v30 = (char *)&v58 - v29;
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  uint64_t v32 = v76;
  v31(v25, v76, v19);
  uint64_t v33 = &v25[*(int *)(v19 + 36)];
  swift_getWitnessTable();
  uint64_t v34 = sub_22093ECE0();
  v31(v23, v32 + *(int *)(v34 + 36), v19);
  uint64_t v35 = &v23[*(int *)(v19 + 36)];
  uint64_t v76 = AssociatedConformanceWitness;
  uint64_t result = sub_22093E480();
  if (result)
  {
    uint64_t v77 = v30;
    uint64_t v37 = TupleTypeMetadata2;
    uint64_t v38 = &v18[*(int *)(TupleTypeMetadata2 + 48)];
    uint64_t v39 = *(void **)(AssociatedTypeWitness - 8);
    uint64_t v40 = (void (*)(char *, char *, uint64_t))v39[4];
    v40(v18, v33, AssociatedTypeWitness);
    long long v59 = v38;
    v40(v38, v35, AssociatedTypeWitness);
    uint64_t v41 = v61;
    uint64_t v42 = &v61[*(int *)(v37 + 48)];
    uint64_t v43 = (void (*)(char *, char *, uint64_t))v39[2];
    v43(v61, v18, AssociatedTypeWitness);
    v43(v42, v38, AssociatedTypeWitness);
    uint64_t v44 = (uint64_t)v60;
    v40(v60, v41, AssociatedTypeWitness);
    uint64_t v45 = (void (*)(char *, uint64_t))v39[1];
    v45(v42, AssociatedTypeWitness);
    uint64_t v46 = &v41[*(int *)(TupleTypeMetadata2 + 48)];
    v40(v41, v18, AssociatedTypeWitness);
    v40(v46, v59, AssociatedTypeWitness);
    uint64_t v47 = v64;
    v40((char *)(v44 + *(int *)(v64 + 36)), v46, AssociatedTypeWitness);
    v45(v41, AssociatedTypeWitness);
    uint64_t v48 = v63;
    long long v49 = v77;
    (*(void (**)(char *, uint64_t, uint64_t))(v63 + 32))(v77, v44, v47);
    uint64_t v50 = v70;
    uint64_t v51 = v75;
    uint64_t v52 = v69;
    (*(void (**)(char *, uint64_t, uint64_t))(v69 + 16))(v65, v75 + *(int *)(v71 + 36), v70);
    (*(void (**)(uint64_t, char *, uint64_t))(v48 + 16))(v44, v49, v47);
    uint64_t v53 = v66;
    sub_2208743F4(v44, v66);
    uint64_t v54 = v67;
    sub_220873550(v53, v50, v67);
    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v53, v50);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v77, v47);
    uint64_t v55 = (uint64_t)v73;
    uint64_t v56 = v51;
    uint64_t v57 = v62;
    (*(void (**)(char *, uint64_t, uint64_t))(v74 + 16))(v73, v56, v62);
    return sub_22085E558(v55, (uint64_t)v54, v57, v68);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void (*sub_22085FB54(uint64_t **a1))(void *a1)
{
  uint64_t v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)sub_22085FC0C(v2);
  return sub_22085FBC4;
}

void sub_22085FBC4(void *a1)
{
  unint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

void (*sub_22085FC0C(uint64_t *a1))(void *a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *a1 = AssociatedTypeWitness;
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  a1[1] = v3;
  uint64_t v4 = malloc(*(void *)(v3 + 64));
  a1[2] = (uint64_t)v4;
  sub_22085F3A0((uint64_t)v4);
  return sub_22085FCE0;
}

void sub_22085FCE0(void *a1)
{
  unint64_t v1 = (void *)a1[2];
  (*(void (**)(void *, void))(a1[1] + 8))(v1, *a1);

  free(v1);
}

uint64_t sub_22085FD3C(uint64_t a1)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v7 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v58 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v57 = (char *)&v44 - v10;
  uint64_t v63 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v56 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = v4;
  uint64_t v61 = v3;
  swift_getAssociatedConformanceWitness();
  uint64_t v12 = sub_22093ECE0();
  uint64_t v50 = *(void (***)(uint64_t, uint64_t))(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v44 - v13;
  uint64_t v15 = type metadata accessor for _RangeSet();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v44 - v17;
  uint64_t v59 = AssociatedTypeWitness;
  uint64_t v19 = type metadata accessor for _RangeSetStorage();
  swift_getWitnessTable();
  uint64_t v20 = sub_22093F040();
  uint64_t v45 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v44 - v21;
  uint64_t v23 = *(int *)(a1 + 36);
  uint64_t v62 = v1;
  uint64_t v24 = v1 + v23;
  uint64_t v25 = v22;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v24, v15);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v25, v18, v19);
  uint64_t v46 = v20;
  uint64_t v26 = (uint64_t *)&v25[*(int *)(v20 + 36)];
  *uint64_t v26 = 0;
  uint64_t v27 = 0;
  if (sub_2208C4964(v19))
  {
    uint64_t v28 = 0;
    uint64_t v54 = v14;
    uint64_t v55 = v12;
    uint64_t v53 = &v14[*(int *)(v12 + 36)];
    uint64_t v51 = (void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v52 = (void (**)(char *, uint64_t, uint64_t))(v63 + 16);
    long long v49 = (void (**)(char *, uint64_t))(v6 + 8);
    ++v50;
    uint64_t v47 = v19;
    uint64_t v48 = (uint64_t (**)(char *, uint64_t))(v63 + 8);
    uint64_t v29 = v59;
    uint64_t v30 = v60;
    while (1)
    {
      uint64_t v63 = v27;
      uint64_t v31 = (uint64_t)v54;
      sub_2208C479C(v28, (uint64_t)v54);
      swift_getWitnessTable();
      sub_22093EA10();
      *uint64_t v26 = v64;
      uint64_t v32 = v56;
      (*v52)(v56, v62, v30);
      uint64_t v33 = *v51;
      uint64_t v34 = v25;
      uint64_t v35 = v57;
      uint64_t v36 = v31;
      (*v51)(v57, v31, v29);
      uint64_t v37 = v58;
      v33(v58, (uint64_t)v53, v29);
      (*v50)(v36, v55);
      uint64_t v38 = sub_22093EAD0();
      uint64_t v39 = *v49;
      (*v49)(v37, v29);
      uint64_t v40 = v35;
      uint64_t v41 = v63;
      v39(v40, v29);
      uint64_t result = (*v48)(v32, v30);
      BOOL v43 = __OFADD__(v41, v38);
      uint64_t v27 = v41 + v38;
      if (v43) {
        break;
      }
      uint64_t v28 = *v26;
      uint64_t v25 = v34;
      if (v28 == sub_2208C4964(v47)) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_5:
    (*(void (**)(char *, uint64_t))(v45 + 8))(v25, v46);
    return v27;
  }
  return result;
}

uint64_t sub_2208602D0@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for _DiscontiguousSlice.Index();
  uint64_t v2 = sub_22093ED30();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 1, 1, v2);
}

uint64_t sub_22086035C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22086225C(a1, a2, a3, a4, MEMORY[0x263F8D870], MEMORY[0x263F8D170]);
}

uint64_t sub_22086039C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22086225C(a1, a2, a3, a4, MEMORY[0x263F8D1A0], MEMORY[0x263F8D180]);
}

uint64_t sub_2208603E4(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for _DiscontiguousSlice.Index();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v9 - v6;
  sub_22085EEF0(a1, a2, (uint64_t *)((char *)&v9 - v6));
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(a1, v4);
  return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v5 + 32))(a1, v7, v4);
}

uint64_t sub_2208604E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for _DiscontiguousSlice.Index();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (uint64_t *)((char *)&v12 - v7);
  uint64_t v9 = *(void *)(a1 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(a2, v2, a1);
  sub_22085E9FC(a1, v8);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v2, a1);
  swift_getWitnessTable();
  uint64_t v10 = sub_22093F040();
  return (*(uint64_t (**)(uint64_t, void *, uint64_t))(v6 + 32))(a2 + *(int *)(v10 + 36), v8, v5);
}

uint64_t sub_220860654(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F9E108](a1, WitnessTable);
}

uint64_t sub_2208606A8()
{
  return 2;
}

uint64_t sub_2208606B0(uint64_t a1)
{
  uint64_t v3 = sub_2208626D8(v1);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8))(v1, a1);
  return v3;
}

uint64_t sub_220860720()
{
  return sub_22093E7C0();
}

uint64_t sub_220860744@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for _DiscontiguousSlice.Index();
  uint64_t v2 = (uint64_t (*)(uint64_t *, void))sub_22093EBD0();
  uint64_t v4 = v3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, v4, AssociatedTypeWitness);
  return v2(&v7, 0);
}

uint64_t sub_220860824@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v76 = a1;
  uint64_t v68 = a3;
  uint64_t v71 = a2;
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v74 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v73 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v5 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v9 = type metadata accessor for _RangeSet();
  uint64_t v69 = *(void *)(v9 - 8);
  uint64_t v70 = v9;
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v66 = (uint64_t)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v65 = (char *)&v58 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v67 = (uint64_t *)((char *)&v58 - v14);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v15 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v61 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v58 - v17;
  uint64_t v62 = v3;
  uint64_t v72 = v6;
  uint64_t v19 = type metadata accessor for _DiscontiguousSlice.Index();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v58 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v58 - v24;
  uint64_t v26 = sub_22093ECE0();
  uint64_t v63 = *(void *)(v26 - 8);
  uint64_t v64 = v26;
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  uint64_t v60 = (char *)&v58 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  uint64_t v30 = (char *)&v58 - v29;
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  uint64_t v32 = v76;
  v31(v25, v76, v19);
  uint64_t v33 = &v25[*(int *)(v19 + 36)];
  swift_getWitnessTable();
  uint64_t v34 = sub_22093ECE0();
  v31(v23, v32 + *(int *)(v34 + 36), v19);
  uint64_t v35 = &v23[*(int *)(v19 + 36)];
  uint64_t v76 = AssociatedConformanceWitness;
  uint64_t result = sub_22093E480();
  if (result)
  {
    uint64_t v77 = v30;
    uint64_t v37 = TupleTypeMetadata2;
    uint64_t v38 = &v18[*(int *)(TupleTypeMetadata2 + 48)];
    uint64_t v39 = *(void **)(AssociatedTypeWitness - 8);
    uint64_t v40 = (void (*)(char *, char *, uint64_t))v39[4];
    v40(v18, v33, AssociatedTypeWitness);
    uint64_t v59 = v38;
    v40(v38, v35, AssociatedTypeWitness);
    uint64_t v41 = v61;
    uint64_t v42 = &v61[*(int *)(v37 + 48)];
    BOOL v43 = (void (*)(char *, char *, uint64_t))v39[2];
    v43(v61, v18, AssociatedTypeWitness);
    v43(v42, v38, AssociatedTypeWitness);
    uint64_t v44 = (uint64_t)v60;
    v40(v60, v41, AssociatedTypeWitness);
    uint64_t v45 = (void (*)(char *, uint64_t))v39[1];
    v45(v42, AssociatedTypeWitness);
    uint64_t v46 = &v41[*(int *)(TupleTypeMetadata2 + 48)];
    v40(v41, v18, AssociatedTypeWitness);
    v40(v46, v59, AssociatedTypeWitness);
    uint64_t v47 = v64;
    v40((char *)(v44 + *(int *)(v64 + 36)), v46, AssociatedTypeWitness);
    v45(v41, AssociatedTypeWitness);
    uint64_t v48 = v63;
    long long v49 = v77;
    (*(void (**)(char *, uint64_t, uint64_t))(v63 + 32))(v77, v44, v47);
    uint64_t v50 = v70;
    uint64_t v51 = v75;
    uint64_t v52 = v69;
    (*(void (**)(char *, uint64_t, uint64_t))(v69 + 16))(v65, v75 + *(int *)(v71 + 36), v70);
    (*(void (**)(uint64_t, char *, uint64_t))(v48 + 16))(v44, v49, v47);
    uint64_t v53 = v66;
    sub_2208743F4(v44, v66);
    uint64_t v54 = v67;
    sub_220873550(v53, v50, v67);
    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v53, v50);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v77, v47);
    uint64_t v55 = (uint64_t)v73;
    uint64_t v56 = v51;
    uint64_t v57 = v62;
    (*(void (**)(char *, uint64_t, uint64_t))(v74 + 16))(v73, v56, v62);
    return sub_22085E558(v55, (uint64_t)v54, v57, v68);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_220860EF4(uint64_t a1, uint64_t a2)
{
  sub_220862B8C(a1, a2);
  uint64_t v4 = type metadata accessor for _DiscontiguousSlice.Index();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a2, v4);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8);

  return v6(a1, AssociatedTypeWitness);
}

void (*sub_220860FDC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t a1, char a2)
{
  uint64_t v8 = malloc(0x50uLL);
  *a1 = v8;
  *uint64_t v8 = v4;
  v8[1] = a3;
  uint64_t v8[2] = *(void *)(a4 - 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  void v8[3] = AssociatedTypeWitness;
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  void v8[4] = v10;
  size_t v11 = *(void *)(v10 + 64);
  v8[5] = malloc(v11);
  uint64_t v12 = malloc(v11);
  v8[6] = v12;
  uint64_t v13 = type metadata accessor for _DiscontiguousSlice.Index();
  v8[7] = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = v14;
  v8[8] = v14;
  v8[9] = malloc(*(void *)(v14 + 64));
  (*(void (**)(void))(v15 + 16))();
  sub_220860744((uint64_t)v12);
  return sub_22086117C;
}

void sub_22086117C(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v4 = *(void *)(*(void *)a1 + 64);
  uint64_t v3 = *(void **)(*(void *)a1 + 72);
  uint64_t v5 = *(void **)(*(void *)a1 + 48);
  uint64_t v10 = *(void *)(*(void *)a1 + 56);
  uint64_t v7 = *(void *)(*(void *)a1 + 32);
  uint64_t v6 = *(void **)(*(void *)a1 + 40);
  uint64_t v8 = *(void *)(*(void *)a1 + 24);
  if (a2)
  {
    (*(void (**)(void, void *, void))(v7 + 16))(v2[5], v5, v2[3]);
    sub_220862B8C((uint64_t)v6, (uint64_t)v3);
    (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v10);
    uint64_t v9 = *(void (**)(void *, uint64_t))(v7 + 8);
    v9(v6, v8);
    v9(v5, v8);
  }
  else
  {
    sub_220862B8C((uint64_t)v5, (uint64_t)v3);
    (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v10);
    (*(void (**)(void *, uint64_t))(v7 + 8))(v5, v8);
  }
  free(v3);
  free(v5);
  free(v6);

  free(v2);
}

uint64_t sub_2208612CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_220862D60(a1, a2, a3, *(void *)(a4 - 8));
  type metadata accessor for _DiscontiguousSlice.Index();
  swift_getWitnessTable();
  uint64_t v7 = sub_22093ECE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a2, v7);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8);

  return v8(a1, a3);
}

void (*sub_2208613BC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t a1, char a2)
{
  uint64_t v9 = malloc(0x48uLL);
  *a1 = v9;
  void *v9 = v4;
  v9[1] = a3;
  uint64_t v10 = *(void *)(a3 - 8);
  _OWORD v9[2] = *(void *)(a4 - 8);
  void v9[3] = v10;
  size_t v11 = *(void *)(v10 + 64);
  v9[4] = malloc(v11);
  uint64_t v12 = malloc(v11);
  v9[5] = v12;
  type metadata accessor for _DiscontiguousSlice.Index();
  swift_getWitnessTable();
  uint64_t v13 = sub_22093ECE0();
  v9[6] = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = v14;
  v9[7] = v14;
  v9[8] = malloc(*(void *)(v14 + 64));
  (*(void (**)(void))(v15 + 16))();
  sub_220860824(a2, a3, (uint64_t)v12);
  return sub_220861560;
}

void sub_220861560(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v4 = *(void *)(*(void *)a1 + 56);
  uint64_t v3 = *(void **)(*(void *)a1 + 64);
  uint64_t v5 = *(void **)(*(void *)a1 + 40);
  uint64_t v6 = *(void *)(*(void *)a1 + 48);
  uint64_t v8 = *(void *)(*(void *)a1 + 24);
  uint64_t v7 = *(void **)(*(void *)a1 + 32);
  uint64_t v9 = *(void *)(*(void *)a1 + 8);
  uint64_t v10 = *(void *)(*(void *)a1 + 16);
  if (a2)
  {
    (*(void (**)(void, void *, uint64_t))(v8 + 16))(*(void *)(*(void *)a1 + 32), v5, v9);
    sub_220862D60((uint64_t)v7, (uint64_t)v3, v9, v10);
    (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v6);
    size_t v11 = *(void (**)(void *, uint64_t))(v8 + 8);
    v11(v7, v9);
    v11(v5, v9);
  }
  else
  {
    sub_220862D60(*(void *)(*(void *)a1 + 40), (uint64_t)v3, v9, v10);
    (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v6);
    (*(void (**)(void *, uint64_t))(v8 + 8))(v5, v9);
  }
  free(v3);
  free(v5);
  free(v7);

  free(v2);
}

uint64_t sub_2208616A4()
{
  return sub_22093E4F0();
}

uint64_t sub_2208616C0()
{
  return sub_22093E4D0();
}

uint64_t sub_2208616E4()
{
  return sub_22093E4C0();
}

uint64_t sub_220861708@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v3 = a2;
  uint64_t v68 = a3;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v66 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v65 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = v7;
  uint64_t v8 = *(void *)(v7 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v74 = sub_22093ECE0();
  uint64_t v82 = *(void *)(v74 - 8);
  MEMORY[0x270FA5388](v74);
  uint64_t v80 = AssociatedConformanceWitness;
  uint64_t v81 = (uint64_t)&v64 - v11;
  uint64_t v12 = type metadata accessor for _RangeSet();
  uint64_t v76 = *(void *)(v12 - 8);
  uint64_t v77 = v12;
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v78 = (char *)&v64 - v14;
  uint64_t v75 = AssociatedTypeWitness;
  uint64_t v86 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  long long v79 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v83 = (char *)&v64 - v18;
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v85 = (char *)&v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v64 - v22;
  uint64_t v24 = type metadata accessor for _DiscontiguousSlice.Index();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  long long v84 = (uint64_t *)((char *)&v64 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v30 = (uint64_t *)((char *)&v64 - v29);
  MEMORY[0x270FA5388](v28);
  uint64_t v32 = (uint64_t *)((char *)&v64 - v31);
  uint64_t v33 = *(void (**)(uint64_t *, void *, uint64_t))(v25 + 16);
  long long v91 = a1;
  uint64_t v71 = v25 + 16;
  uint64_t v70 = v33;
  v33((uint64_t *)((char *)&v64 - v31), a1, v24);
  uint64_t v69 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  v69(v23, v92, v3);
  sub_22085E9FC(v3, v30);
  uint64_t v90 = v5;
  uint64_t v87 = v8;
  LOBYTE(v8) = sub_22085E724(v32, v30);
  uint64_t v34 = *(uint64_t (**)(uint64_t *, uint64_t))(v25 + 8);
  v34(v30, v24);
  uint64_t v72 = *(void (**)(char *, uint64_t))(v19 + 8);
  uint64_t v73 = v19 + 8;
  v72(v23, v3);
  uint64_t v88 = v34;
  uint64_t v89 = v25 + 8;
  uint64_t result = v34(v32, v24);
  if (v8)
  {
    __break(1u);
  }
  else
  {
    uint64_t v36 = v92;
    sub_22085ED08(v3, v30);
    uint64_t v37 = v91;
    char v38 = sub_22085E724(v91, v30);
    v88(v30, v24);
    uint64_t v39 = v84;
    v70(v84, v37, v24);
    uint64_t v40 = v85;
    v69(v85, v36, v3);
    if (v38)
    {
      v72(v40, v3);
      uint64_t result = v88(v39, v24);
      uint64_t v41 = v74;
      uint64_t v42 = v75;
    }
    else
    {
      BOOL v43 = (char *)v39 + *(int *)(v24 + 36);
      uint64_t v71 = v3;
      uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v86 + 16);
      uint64_t v45 = v83;
      uint64_t v42 = v75;
      v44(v83, v43, v75);
      uint64_t v46 = &v40[*(int *)(v71 + 36)];
      uint64_t v47 = v78;
      (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v78, v46, v77);
      uint64_t v48 = *v39;
      uint64_t v49 = type metadata accessor for _RangeSetStorage();
      uint64_t v50 = v81;
      sub_2208C479C(v48, v81);
      (*(void (**)(char *, uint64_t))(*(void *)(v49 - 8) + 8))(v47, v49);
      uint64_t v51 = v79;
      v44(v79, (char *)v50, v42);
      uint64_t v3 = v71;
      uint64_t v52 = v50;
      uint64_t v41 = v74;
      (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v52, v74);
      LOBYTE(v48) = sub_22093E520();
      uint64_t v53 = *(void (**)(char *, uint64_t))(v86 + 8);
      v53(v51, v42);
      v53(v45, v42);
      uint64_t v36 = v92;
      v72(v85, v3);
      uint64_t result = v88(v84, v24);
      if ((v48 & 1) == 0)
      {
        uint64_t v55 = *v91;
        uint64_t v63 = (uint64_t)v83;
        sub_22093E3F0();
        return sub_22085E7F0(v55, v63, v68);
      }
    }
    uint64_t v54 = v90;
    uint64_t v55 = *v91 - 1;
    if (!__OFSUB__(*v91, 1))
    {
      uint64_t v56 = v66;
      uint64_t v57 = v65;
      (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v65, v36, v90);
      uint64_t v58 = v78;
      (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v78, v36 + *(int *)(v3 + 36), v77);
      uint64_t v59 = type metadata accessor for _RangeSetStorage();
      uint64_t v60 = v81;
      sub_2208C479C(v55, v81);
      (*(void (**)(char *, uint64_t))(*(void *)(v59 - 8) + 8))(v58, v59);
      uint64_t v61 = v86;
      uint64_t v62 = v79;
      (*(void (**)(char *, uint64_t, uint64_t))(v86 + 16))(v79, v60 + *(int *)(v41 + 36), v42);
      (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v60, v41);
      uint64_t v63 = (uint64_t)v83;
      sub_22093E3F0();
      (*(void (**)(char *, uint64_t))(v61 + 8))(v62, v42);
      (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v54);
      return sub_22085E7F0(v55, v63, v68);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_220861FFC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_220861708(a1, a2, a3);
}

uint64_t sub_220862004(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for _DiscontiguousSlice.Index();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v9 - v6;
  sub_220861708(a1, a2, (uint64_t *)((char *)&v9 - v6));
  (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
  return (*(uint64_t (**)(void *, char *, uint64_t))(v5 + 32))(a1, v7, v4);
}

uint64_t sub_22086211C()
{
  return swift_getWitnessTable();
}

uint64_t sub_220862160()
{
  return swift_getWitnessTable();
}

uint64_t sub_22086217C()
{
  return swift_getWitnessTable();
}

uint64_t sub_220862198()
{
  return swift_getWitnessTable();
}

uint64_t sub_2208621B4()
{
  return swift_getWitnessTable();
}

uint64_t sub_2208621D0()
{
  return swift_getWitnessTable();
}

uint64_t type metadata accessor for _DiscontiguousSlice.Index()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_220862204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22086225C(a1, a2, a3, a4, MEMORY[0x263F8D870], MEMORY[0x263F8D170]);
}

uint64_t sub_220862230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22086225C(a1, a2, a3, a4, MEMORY[0x263F8D1A0], MEMORY[0x263F8D180]);
}

uint64_t sub_22086225C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t), uint64_t (*a6)(char *, char *, uint64_t, uint64_t))
{
  uint64_t v23 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v11 = a5(0, AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v22 - v14;
  uint64_t v16 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v22 - v17;
  char v19 = sub_22093E480();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a2, v11);
  if ((v19 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, AssociatedTypeWitness);
    goto LABEL_5;
  }
  char v20 = v23(v18, &v15[*(int *)(v11 + 36)], AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, AssociatedTypeWitness);
  if ((v20 & 1) == 0) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_2208624CC(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v5 = sub_22093ECE0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v17 - v10;
  v17[1] = AssociatedConformanceWitness;
  LOBYTE(AssociatedConformanceWitness) = sub_22093E480();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v12(v11, a1, v5);
  v12(v9, a2, v5);
  if ((AssociatedConformanceWitness & 1) == 0)
  {
    uint64_t v16 = *(void (**)(char *, uint64_t))(v6 + 8);
    v16(v9, v5);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v16)(v11, v5);
    goto LABEL_5;
  }
  char v13 = sub_22093E480();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v9, v5);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v14)(v11, v5);
  if ((v13 & 1) == 0) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_2208626D8(uint64_t a1)
{
  uint64_t v23 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v1 = sub_22093ECE0();
  uint64_t v16 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v16 - v2;
  uint64_t v4 = type metadata accessor for _RangeSet();
  uint64_t v19 = *(void *)(v4 - 8);
  char v20 = (uint64_t *)v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v16 - v5;
  uint64_t v7 = type metadata accessor for _RangeSetStorage();
  swift_getWitnessTable();
  uint64_t v8 = sub_22093F040();
  uint64_t v17 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v16 - v9;
  uint64_t v11 = swift_getAssociatedTypeWitness();
  sub_22093E890();
  uint64_t v21 = v11;
  uint64_t v25 = sub_22093EFA0();
  uint64_t v12 = type metadata accessor for _DiscontiguousSlice();
  (*(void (**)(char *, uint64_t, uint64_t *))(v19 + 16))(v6, v23 + *(int *)(v12 + 36), v20);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v10, v6, v7);
  uint64_t v18 = v8;
  char v13 = (uint64_t *)&v10[*(int *)(v8 + 36)];
  *char v13 = 0;
  if (sub_2208C4964(v7))
  {
    uint64_t v14 = 0;
    uint64_t v19 = v16 + 8;
    char v20 = v13;
    do
    {
      sub_2208C479C(v14, (uint64_t)v3);
      swift_getWitnessTable();
      sub_22093EA10();
      *char v13 = v24;
      sub_22093EBC0();
      (*(void (**)(char *, uint64_t))v19)(v3, v1);
      sub_22093EFF0();
      swift_getAssociatedConformanceWitness();
      char v13 = v20;
      sub_22093EFC0();
      uint64_t v14 = *v13;
    }
    while (v14 != sub_2208C4964(v7));
  }
  (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v18);
  return v25;
}

uint64_t sub_220862B8C(uint64_t a1, uint64_t a2)
{
  uint64_t v13 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v6 = (char *)&v13 - v5;
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v13 - v9;
  uint64_t v11 = type metadata accessor for _DiscontiguousSlice.Index();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2 + *(int *)(v11 + 36), v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v13, AssociatedTypeWitness);
  return sub_22093E510();
}

uint64_t sub_220862D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v115 = a1;
  uint64_t v113 = a4;
  uint64_t v6 = *(void *)(a4 + 8);
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness - 8);
  uint64_t v112 = (uint64_t)&v91 - v9;
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t v110 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v111 = (char *)&v91 - v11;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v116 = a3;
  v120 = (void (*)(char *, char *, uint64_t))WitnessTable;
  uint64_t v13 = sub_22093E3B0();
  uint64_t v95 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  v119 = (char *)&v91 - v14;
  swift_getWitnessTable();
  uint64_t v100 = v13;
  uint64_t v105 = sub_22093F040();
  uint64_t v106 = *(void *)(v105 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v105);
  uint64_t v118 = (char *)&v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v114 = (char *)&v91 - v17;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v129 = type metadata accessor for _RangeSet();
  uint64_t v107 = *(void *)(v129 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v129);
  uint64_t v96 = (uint64_t)&v91 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  long long v94 = (char *)&v91 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v101 = (char **)((char *)&v91 - v23);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v24 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v93 = (char *)&v91 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v92 = (char *)&v91 - v26;
  uint64_t v99 = v7;
  uint64_t v127 = v6;
  uint64_t v27 = type metadata accessor for _DiscontiguousSlice.Index();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  int64x2_t v126 = (char *)&v91 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  v124 = (char *)&v91 - v32;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v35 = (char *)&v91 - v34;
  MEMORY[0x270FA5388](v33);
  uint64_t v37 = (char *)&v91 - v36;
  uint64_t v104 = sub_22093ECE0();
  uint64_t v103 = *(void *)(v104 - 8);
  uint64_t v38 = MEMORY[0x270FA5388](v104);
  long long v91 = (char *)&v91 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v38);
  uint64_t v102 = (char *)&v91 - v40;
  uint64_t v128 = v28;
  uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 16);
  v41(v37, a2, v27);
  uint64_t v42 = &v37[*(int *)(v27 + 36)];
  swift_getWitnessTable();
  uint64_t v43 = a2 + *(int *)(sub_22093ECE0() + 36);
  unint64_t v122 = (void (*)(char *, char *, uint64_t))v41;
  uint64_t v123 = v28 + 16;
  v41(v35, v43, v27);
  uint64_t v98 = v27;
  uint64_t v44 = &v35[*(int *)(v27 + 36)];
  long long v109 = v42;
  uint64_t v45 = v10;
  uint64_t v97 = (void (*)(void *, uint64_t))AssociatedConformanceWitness;
  uint64_t result = sub_22093E480();
  if (result)
  {
    uint64_t v125 = v37;
    uint64_t v47 = TupleTypeMetadata2;
    uint64_t v48 = v92;
    uint64_t v49 = &v92[*(int *)(TupleTypeMetadata2 + 48)];
    uint64_t v50 = v110;
    uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v110 + 32);
    uint64_t v52 = v45;
    v51(v92, v109, v45);
    v51(v49, v44, v45);
    uint64_t v53 = v93;
    uint64_t v54 = &v93[*(int *)(v47 + 48)];
    uint64_t v55 = *(void (**)(char *, char *, uint64_t))(v50 + 16);
    v55(v93, v48, v45);
    long long v109 = (char *)(v50 + 16);
    uint64_t v108 = (void (*)(char *, uint64_t, uint64_t))v55;
    v55(v54, v49, v45);
    uint64_t v56 = (uint64_t)v91;
    v51(v91, v53, v45);
    uint64_t v57 = *(void (**)(char *, uint64_t))(v50 + 8);
    v57(v54, v52);
    uint64_t v58 = &v53[*(int *)(TupleTypeMetadata2 + 48)];
    v51(v53, v48, v52);
    v51(v58, v49, v52);
    uint64_t v59 = v104;
    v51((char *)(v56 + *(int *)(v104 + 36)), v58, v52);
    v57(v53, v52);
    uint64_t v60 = v103;
    uint64_t v61 = v102;
    (*(void (**)(char *, uint64_t, uint64_t))(v103 + 32))(v102, v56, v59);
    uint64_t v62 = v128;
    uint64_t v63 = v129;
    uint64_t v64 = v107;
    (*(void (**)(char *, uint64_t, uint64_t))(v107 + 16))(v94, v117 + *(int *)(v116 + 36), v129);
    (*(void (**)(uint64_t, char *, uint64_t))(v60 + 16))(v56, v61, v59);
    uint64_t v65 = v96;
    uint64_t v110 = v52;
    sub_2208743F4(v56, v96);
    sub_220873550(v65, v63, v101);
    uint64_t v66 = *(void (**)(void *, uint64_t))(v64 + 8);
    uint64_t v107 = v64 + 8;
    uint64_t v97 = v66;
    v66((void *)v65, v63);
    uint64_t v67 = v119;
    sub_22093EBA0();
    uint64_t v68 = v95;
    uint64_t v69 = v118;
    uint64_t v70 = v100;
    (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v118, v67, v100);
    uint64_t v71 = v125;
    MEMORY[0x223C69AA0](v70);
    (*(void (**)(char *, uint64_t))(v68 + 8))(v67, v70);
    uint64_t v72 = v105;
    uint64_t v73 = (char *)v69 + *(int *)(v105 + 36);
    uint64_t v74 = v98;
    v120 = *(void (**)(char *, char *, uint64_t))(v62 + 32);
    TupleTypeMetadata2 = v62 + 32;
    v120(v73, v71, v98);
    uint64_t v75 = v114;
    (*(void (**)(char *, void *, uint64_t))(v106 + 32))(v114, v69, v72);
    uint64_t v76 = &v75[*(int *)(v72 + 36)];
    uint64_t v77 = v75;
    sub_22093E390();
    LOBYTE(v75) = sub_22085E724(v76, v71);
    uint64_t v78 = *(char **)(v62 + 8);
    uint64_t v128 = v62 + 8;
    v119 = v78;
    ((void (*)(char *, uint64_t))v78)(v71, v74);
    uint64_t v79 = v129;
    uint64_t v80 = v101;
    uint64_t v81 = v126;
    if ((v75 & 1) == 0)
    {
      uint64_t v118 = v76;
      do
      {
        uint64_t v87 = v124;
        v122(v124, v76, v74);
        sub_22093E3A0();
        v120(v81, v87, v74);
        uint64_t v88 = v74;
        uint64_t v89 = (uint64_t)&v81[*(int *)(v74 + 36)];
        uint64_t v90 = v77;
        if (sub_220874508(v89, v79))
        {
          v108(v111, v89, v110);
          sub_220860744(v112);
          uint64_t v90 = v114;
          sub_22093E510();
        }
        uint64_t v74 = v88;
        uint64_t v82 = v80;
        uint64_t v83 = (void (*)(void *, uint64_t))v119;
        ((void (*)(char *, uint64_t))v119)(v81, v88);
        long long v84 = v125;
        sub_22093E390();
        uint64_t v85 = v90;
        uint64_t v76 = v118;
        char v86 = sub_22085E724(v118, (char *)v84);
        v83((char *)v84, v74);
        uint64_t v77 = v85;
        uint64_t v80 = v82;
        uint64_t v79 = v129;
        uint64_t v81 = v126;
      }
      while ((v86 & 1) == 0);
    }
    (*(void (**)(char *, uint64_t))(v106 + 8))(v77, v105);
    v97(v80, v79);
    return (*(uint64_t (**)(char *, uint64_t))(v103 + 8))(v102, v104);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_220863974()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_220863A24(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 8) & (unint64_t)~v6) + *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(((unint64_t)a1 + v6 + 8) & ~v6, ((unint64_t)a2 + v6 + 8) & ~v6, AssociatedTypeWitness);
  }
  return a1;
}

uint64_t sub_220863B30(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v4 = *(uint64_t (**)(unint64_t, uint64_t))(v3 + 8);
  uint64_t v5 = AssociatedTypeWitness;
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v3 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);

  return v4(v6, v5);
}

void *sub_220863BBC(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(((unint64_t)a1 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), AssociatedTypeWitness);
  return a1;
}

void *sub_220863C4C(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), AssociatedTypeWitness);
  return a1;
}

void *sub_220863CDC(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), AssociatedTypeWitness);
  return a1;
}

void *sub_220863D6C(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_220863DFC(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  if (!a2) {
    return 0;
  }
  if (a2 <= v6) {
    goto LABEL_19;
  }
  uint64_t v8 = ((v7 + 8) & ~v7) + *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  char v9 = 8 * v8;
  if (v8 <= 3)
  {
    unsigned int v11 = ((a2 - v6 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v8);
      if (!v10) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      int v10 = *(unsigned __int16 *)((char *)a1 + v8);
      if (!*(unsigned __int16 *)((char *)a1 + v8)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_19:
      if (v6)
      {
        uint64_t v13 = *(uint64_t (**)(unint64_t))(v5 + 48);
        return v13(((unint64_t)a1 + v7 + 8) & ~v7);
      }
      return 0;
    }
  }
  int v10 = *((unsigned __int8 *)a1 + v8);
  if (!*((unsigned char *)a1 + v8)) {
    goto LABEL_19;
  }
LABEL_11:
  int v12 = (v10 - 1) << v9;
  if (v8 > 3) {
    int v12 = 0;
  }
  if (v8)
  {
    if (v8 > 3) {
      LODWORD(v8) = 4;
    }
    switch((int)v8)
    {
      case 2:
        LODWORD(v8) = *a1;
        break;
      case 3:
        LODWORD(v8) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v8) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v8) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v6 + (v8 | v12) + 1;
}

void sub_220863FC8(unsigned char *a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  size_t v9 = ((v8 + 8) & ~v8) + *(void *)(v6 + 64);
  if (a3 <= v7)
  {
    int v10 = 0;
  }
  else if (v9 <= 3)
  {
    unsigned int v13 = ((a3 - v7 + ~(-1 << (8 * v9))) >> (8 * v9)) + 1;
    if (HIWORD(v13))
    {
      int v10 = 4;
    }
    else if (v13 >= 0x100)
    {
      int v10 = 2;
    }
    else
    {
      int v10 = v13 > 1;
    }
  }
  else
  {
    int v10 = 1;
  }
  if (v7 < a2)
  {
    unsigned int v11 = ~v7 + a2;
    if (v9 < 4)
    {
      int v12 = (v11 >> (8 * v9)) + 1;
      if (v9)
      {
        int v14 = v11 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if (v9 == 3)
        {
          *(_WORD *)a1 = v14;
          a1[2] = BYTE2(v14);
        }
        else if (v9 == 2)
        {
          *(_WORD *)a1 = v14;
        }
        else
        {
          *a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, v9);
      *(_DWORD *)a1 = v11;
      int v12 = 1;
    }
    switch(v10)
    {
      case 1:
        a1[v9] = v12;
        return;
      case 2:
        *(_WORD *)&a1[v9] = v12;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v9] = v12;
        return;
      default:
        return;
    }
  }
  switch(v10)
  {
    case 1:
      a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x220864220);
    case 4:
      *(_DWORD *)&a1[v9] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v15 = *(void (**)(unint64_t, uint64_t))(v6 + 56);
        v15((unint64_t)&a1[v8 + 8] & ~v8, a2);
      }
      return;
  }
}

uint64_t Column.eraseToAnyColumn()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v4 = v1[2];
  v6[0] = v2;
  v6[1] = v3;
  _OWORD v6[2] = v4;
  sub_2209294FC(v6, a1);
  swift_bridgeObjectRetain();

  return swift_retain();
}

uint64_t Column.map<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  return sub_220865504(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_22091E61C, a5);
}

void *sub_2208642D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD411A8);
  uint64_t v8 = (void *)swift_allocObject();
  int64_t v9 = _swift_stdlib_malloc_size(v8);
  uint64_t v10 = v9 - 32;
  if (v9 < 32) {
    uint64_t v10 = v9 - 17;
  }
  uint64_t v8[2] = 2;
  void v8[3] = 2 * (v10 >> 4);
  void v8[4] = a1;
  v8[5] = a2;
  v8[6] = a3;
  v8[7] = a4;
  return v8;
}

uint64_t Column.init<A>(name:contents:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  return sub_220864A3C(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_2209216BC, a7);
}

{
  return sub_220864A3C(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_220921C54, a7);
}

uint64_t sub_22086436C(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5)
{
  uint64_t v6 = a4;
  uint64_t v30 = a3;
  uint64_t v9 = *((void *)a4 - 1);
  MEMORY[0x270FA5388](a1);
  unsigned int v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v29 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  int v14 = (char *)&v29 - v13;
  uint64_t v15 = sub_22093EA80();
  if (__OFSUB__(v30, a2))
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    uint64_t v6 = sub_22081B3EC(0, *((void *)v6 + 2) + 1, 1, v6);
    goto LABEL_19;
  }
  if (v15 != v30 - a2)
  {
    uint64_t v28 = v30 - a2;
    unint64_t v31 = 0;
    unint64_t v32 = 0xE000000000000000;
    sub_22093EEA0();
    swift_bridgeObjectRelease();
    unint64_t v31 = 0xD000000000000017;
    unint64_t v32 = 0x80000002209402C0;
    uint64_t v34 = sub_22093EA80();
    sub_22093F1A0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    uint64_t v34 = v28;
    sub_22093F1A0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_22093F090();
    __break(1u);
    return result;
  }
  (*(void (**)(char *, uint64_t, char *))(v9 + 16))(v11, a1, v6);
  sub_22093E780();
  swift_getAssociatedConformanceWitness();
  a5 = 0;
  uint64_t v6 = (char *)MEMORY[0x263F8EE78];
  char v16 = 1;
  while (1)
  {
    sub_22093ED70();
    if (v31 == 2) {
      break;
    }
    BOOL v18 = (v31 & 1) == 0;
    if (v31)
    {
      if (v16) {
        a5 = a2;
      }
    }
    else if ((v16 & 1) == 0)
    {
      if (a2 < a5) {
        goto LABEL_27;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v6 = sub_22081B3EC(0, *((void *)v6 + 2) + 1, 1, v6);
      }
      unint64_t v20 = *((void *)v6 + 2);
      unint64_t v19 = *((void *)v6 + 3);
      if (v20 >= v19 >> 1) {
        uint64_t v6 = sub_22081B3EC((char *)(v19 > 1), v20 + 1, 1, v6);
      }
      *((void *)v6 + 2) = v20 + 1;
      uint64_t v21 = &v6[16 * v20];
      *((void *)v21 + 4) = a5;
      *((void *)v21 + 5) = a2;
      a5 = 0;
    }
    char v16 = v18;
    if (__OFADD__(a2++, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
  }
  (*(void (**)(char *, uint64_t))(v29 + 8))(v14, AssociatedTypeWitness);
  if (v16) {
    goto LABEL_22;
  }
  if (a2 < a5) {
    goto LABEL_29;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_30;
  }
LABEL_19:
  unint64_t v23 = *((void *)v6 + 2);
  unint64_t v22 = *((void *)v6 + 3);
  if (v23 >= v22 >> 1) {
    uint64_t v6 = sub_22081B3EC((char *)(v22 > 1), v23 + 1, 1, v6);
  }
  *((void *)v6 + 2) = v23 + 1;
  uint64_t v24 = &v6[16 * v23];
  *((void *)v24 + 4) = a5;
  *((void *)v24 + 5) = a2;
LABEL_22:
  unint64_t v31 = 0;
  unint64_t v32 = 0;
  char v33 = 2;
  uint64_t v25 = *((void *)v6 + 2);
  if (v25)
  {
    uint64_t v26 = (uint64_t *)(v6 + 40);
    do
    {
      sub_220869870(*(v26 - 1), *v26);
      v26 += 2;
      --v25;
    }
    while (v25);
  }
  swift_bridgeObjectRelease();
  return v31;
}

void Column.init(name:capacity:)(uint64_t a1@<X0>, uint64_t a2@<X1>, Swift::Int a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = a1;
  a5[1] = a2;
  sub_22093ED30();
  uint64_t v8 = sub_22093E890();
  Swift::Int v9 = sub_220921AAC(v8, a4);
  swift_bridgeObjectRelease();
  a5[2] = v9;
  type metadata accessor for PackedOptionalsArray();
  sub_22091DADC(a3);
}

uint64_t Column.append(_:)(uint64_t a1)
{
  return sub_22091DAE8(a1);
}

Swift::Bool __swiftcall Column.isNil(at:)(Swift::Int at)
{
  return sub_22091F068(at);
}

uint64_t Column.append(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = sub_22093ED30();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unsigned int v7 = (char *)&v10 - v6;
  uint64_t v8 = *(void *)(v3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v10 - v6, a1, v3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v7, 0, 1, v3);
  type metadata accessor for PackedOptionalsArray();
  sub_22091DAE8((uint64_t)v7);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_220864A3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t)@<X6>, void *a8@<X8>)
{
  uint64_t v13 = a7(a3, a4, a5, a6);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a5 - 8) + 8))(a3, a5);
  *a8 = a1;
  a8[1] = a2;
  a8[2] = v13;
  return result;
}

uint64_t Column.append<A>(contentsOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22086538C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22091DB98);
}

{
  return sub_22086538C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22091DF9C);
}

void *Column.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22091EFEC(a1, a2);
}

uint64_t Column.name.getter()
{
  uint64_t v0 = sub_220869F28();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t Column.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*Column.name.modify())()
{
  return nullsub_5;
}

uint64_t Column.count.getter(uint64_t a1)
{
  return sub_2209221E0(*(void *)(v1 + 16), *(void *)(a1 + 16));
}

uint64_t Column.missingCount.getter()
{
  return sub_22091DA80();
}

uint64_t Column.wrappedElementType.getter(uint64_t a1)
{
  return nullsub_5(*(void *)(a1 + 16));
}

uint64_t Column.prototype.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = nullsub_5(*v1);
  uint64_t v5 = v4;
  a1[3] = type metadata accessor for ColumnPrototype();
  a1[4] = (uint64_t)&off_26D221838;
  *a1 = v3;
  a1[1] = v5;

  return swift_bridgeObjectRetain();
}

void Column.init(_:capacity:)(void *a1@<X0>, Swift::Int a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v7 = a1[1];
  *a4 = *a1;
  a4[1] = v7;
  sub_22093ED30();
  uint64_t v8 = sub_22093E890();
  Swift::Int v9 = sub_220921AAC(v8, a3);
  swift_bridgeObjectRelease();
  a4[2] = v9;
  type metadata accessor for PackedOptionalsArray();
  sub_22091DADC(a2);
}

uint64_t Column.init<A>(_:contents:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  return sub_220864CF0(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_2209216BC, a6);
}

{
  return sub_220864CF0(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_220921C54, a6);
}

uint64_t sub_220864CF0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t)@<X5>, void *a7@<X8>)
{
  uint64_t v10 = *a1;
  uint64_t v11 = a1[1];
  uint64_t v12 = a6(a2, a3, a4, a5);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a4 - 8) + 8))(a2, a4);
  *a7 = v10;
  a7[1] = v11;
  a7[2] = v12;
  return result;
}

uint64_t Column.init(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v8 = a1[2];
  uint64_t v7 = a1[3];
  uint64_t v9 = a1[4];
  uint64_t v10 = type metadata accessor for ColumnSlice();
  uint64_t v11 = ColumnSlice.name.getter();
  uint64_t v13 = v12;
  v16[0] = v5;
  v16[1] = v6;
  _OWORD v16[2] = v8;
  void v16[3] = v7;
  v16[4] = v9;
  swift_getWitnessTable();
  Swift::Int v14 = sub_2209216BC((uint64_t)v16, a2, v10);
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v11;
  a3[1] = v13;
  a3[2] = v14;
  return result;
}

uint64_t sub_220864E58(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = sub_22093ED30();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - v4;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v1 - 8) + 56))((char *)&v7 - v4, 1, 1, v1);
  type metadata accessor for PackedOptionalsArray();
  sub_22091DAE8((uint64_t)v5);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_220864F70(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = sub_22093ED30();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)v18 - v10;
  uint64_t v12 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v9);
  Swift::Int v14 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_220842FF8(a1, (uint64_t)&v19);
  if (v20)
  {
    sub_220835340(&v19, v21);
    sub_220835350((uint64_t)v21, (uint64_t)&v19);
    int v15 = swift_dynamicCast();
    char v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    if (v15)
    {
      v16(v11, 0, 1, v3);
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v11, v3);
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v8, v14, v3);
      v16(v8, 0, 1, v3);
      type metadata accessor for PackedOptionalsArray();
      sub_22091DAE8((uint64_t)v8);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v3);
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v21);
    }
    else
    {
      v16(v11, 1, 1, v3);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
      sub_220835350((uint64_t)v21, (uint64_t)&v19);
      v18[0] = 0;
      v18[1] = 0xE000000000000000;
      sub_22093EEA0();
      sub_22093E6C0();
      __swift_project_boxed_opaque_existential_1(&v19, v20);
      swift_getDynamicType();
      sub_22093F530();
      sub_22093E6C0();
      swift_bridgeObjectRelease();
      sub_22093E6C0();
      sub_22093F530();
      sub_22093E6C0();
      swift_bridgeObjectRelease();
      uint64_t result = sub_22093F090();
      __break(1u);
    }
  }
  else
  {
    sub_22086A7A4((uint64_t)&v19);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v8, 1, 1, v3);
    type metadata accessor for PackedOptionalsArray();
    sub_22091DAE8((uint64_t)v8);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  return result;
}

uint64_t sub_22086538C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9 = type metadata accessor for PackedOptionalsArray();
  return a5(a1, v9, a3, a4);
}

Swift::Void __swiftcall Column.remove(at:)(Swift::Int at)
{
  uint64_t v2 = sub_22093ED30();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - v4;
  uint64_t v6 = type metadata accessor for PackedOptionalsArray();
  sub_22091E47C(at, v6, (uint64_t)v5);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t Column.mapNonNil<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  return sub_220865504(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_22091E8C4, a5);
}

uint64_t sub_220865504@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X4>, void *a6@<X8>)
{
  uint64_t v14 = *v6;
  uint64_t v13 = v6[1];
  uint64_t v15 = v6[2];
  uint64_t v16 = *(void *)(a3 + 16);
  swift_bridgeObjectRetain();
  uint64_t result = a5(a1, a2, v15, v16, a4);
  if (v7) {
    return swift_bridgeObjectRelease();
  }
  *a6 = v14;
  a6[1] = v13;
  a6[2] = result;
  return result;
}

uint64_t Column.transform(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2208655FC(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_22091EBBC);
}

{
  return sub_2208655FC(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_22091EDA0);
}

uint64_t sub_2208655FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = type metadata accessor for PackedOptionalsArray();
  return a4(a1, a2, v7);
}

void Column.filter(_:)(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v35 = a1;
  uint64_t v32 = a4;
  uint64_t v33 = *(void *)(a3 + 16);
  uint64_t v7 = sub_22093ED30();
  uint64_t v34 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v29 - v8;
  uint64_t v54 = v10;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v12 = sub_22093ED30();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (uint64_t *)((char *)&v29 - v13);
  uint64_t v16 = *v4;
  uint64_t v15 = v4[1];
  uint64_t v17 = v4[2];
  uint64_t v51 = 0;
  uint64_t v52 = 0;
  char v53 = 2;
  *(void *)&long long v47 = v16;
  *((void *)&v47 + 1) = v15;
  uint64_t v48 = v17;
  swift_getWitnessTable();
  sub_22093EA40();
  long long v46 = v40;
  uint64_t v29 = v16;
  *(void *)&long long v43 = v16;
  uint64_t v30 = v15;
  *((void *)&v43 + 1) = v15;
  uint64_t v31 = v17;
  uint64_t v44 = v17;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18D20);
  uint64_t v19 = sub_22086A1F0((unint64_t *)&qword_267F18D28);
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_22093F2C0();
  long long v43 = v47;
  uint64_t v44 = v48;
  long long v45 = v49;
  *(void *)&long long v39 = v18;
  *(void *)&long long v40 = v18;
  *((void *)&v39 + 1) = a3;
  *((void *)&v40 + 1) = a3;
  uint64_t v38 = v19;
  uint64_t v41 = v19;
  uint64_t v37 = WitnessTable;
  uint64_t v42 = WitnessTable;
  sub_22093EEE0();
  sub_22093EEB0();
  uint64_t v21 = (void (**)(char *, char *, uint64_t))(v34 + 32);
  for (uint64_t i = (void (**)(char *, uint64_t))(v34 + 8); ; (*i)(v9, v54))
  {
    long long v47 = v39;
    uint64_t v48 = v38;
    *(void *)&long long v49 = v37;
    sub_22093EED0();
    sub_22093EEC0();
    if ((*(unsigned int (**)(int64_t *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v14, 1, TupleTypeMetadata2) == 1)
    {
      swift_release();
      swift_bridgeObjectRelease();
      v50[0] = v29;
      v50[1] = v30;
      v50[2] = v31;
      uint64_t v27 = v51;
      uint64_t v26 = v52;
      char v28 = v53;
      swift_bridgeObjectRetain();
      swift_retain();
      sub_2208BE1D0(v50, v27, v26, v28, v32);
      return;
    }
    int64_t v23 = *v14;
    (*v21)(v9, (char *)v14 + *(int *)(TupleTypeMetadata2 + 48), v54);
    char v24 = v35(v9);
    if (v5)
    {
      (*i)(v9, v54);
      swift_release();
      swift_bridgeObjectRelease();
      sub_22080B6B4(v51, v52, v53);
      return;
    }
    if ((v24 & 1) == 0) {
      continue;
    }
    uint64_t v25 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v25 < v23) {
      goto LABEL_12;
    }
    sub_220869870(v23, v25);
  }
  __break(1u);
LABEL_12:
  __break(1u);
}

BOOL sub_220865AF0(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_220865B00()
{
  return sub_22093F440();
}

uint64_t sub_220865B28(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_22093F250() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73746E656D656C65 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_22093F250();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_220865C0C()
{
  return sub_22093F490();
}

uint64_t sub_220865C54(char a1)
{
  if (a1) {
    return 0x73746E656D656C65;
  }
  else {
    return 1701667182;
  }
}

BOOL sub_220865C84(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_220865AF0(*a1, *a2);
}

uint64_t sub_220865C94()
{
  return sub_220865C0C();
}

uint64_t sub_220865CA4()
{
  return sub_220865B00();
}

uint64_t sub_220865CB4()
{
  return sub_22093F490();
}

uint64_t sub_220865CFC()
{
  return sub_220865C54(*v0);
}

uint64_t sub_220865D0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_220865B28(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_220865D38()
{
  return 0;
}

uint64_t sub_220865D44@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2208606A8();
  *a1 = result;
  return result;
}

uint64_t sub_220865D70(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_220865DC4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

void (*sub_220865E1C(void *a1))(void *)
{
  BOOL v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = Column.name.modify();
  return sub_220865E74;
}

void *sub_220865E78@<X0>(void *result@<X0>, void *a2@<X8>)
{
  if (__OFSUB__(*result, 1)) {
    __break(1u);
  }
  else {
    *a2 = *result - 1;
  }
  return result;
}

Swift::Int __swiftcall Column.index(before:)(Swift::Int before)
{
  BOOL v1 = __OFSUB__(before, 1);
  Swift::Int result = before - 1;
  if (v1) {
    __break(1u);
  }
  return result;
}

void *sub_220865EA0(void *result)
{
  if (__OFSUB__(*result, 1)) {
    __break(1u);
  }
  else {
    --*result;
  }
  return result;
}

uint64_t sub_220865EB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D708];

  return MEMORY[0x270F9E068](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_220865F3C()
{
  swift_getWitnessTable();

  return sub_22093EA00();
}

uint64_t sub_220865FC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D708];

  return MEMORY[0x270F9E078](a1, a2, a3, WitnessTable, v7);
}

void sub_220866034(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t Column.startIndex.getter()
{
  return 0;
}

uint64_t sub_220866044@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = Column.endIndex.getter(a1);
  *a2 = result;
  return result;
}

uint64_t Column.endIndex.getter(uint64_t a1)
{
  return sub_2209221E0(*(void *)(v1 + 16), *(void *)(a1 + 16));
}

void (*sub_22086607C(uint64_t **a1, uint64_t *a2))(void *a1)
{
  uint64_t v4 = (uint64_t *)malloc(0x28uLL);
  *a1 = v4;
  v4[4] = (uint64_t)sub_2208660EC(v4, *a2);
  return sub_22085FBC4;
}

void (*sub_2208660EC(uint64_t *a1, uint64_t a2))(void *a1)
{
  uint64_t v4 = sub_22093ED30();
  *a1 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  a1[1] = v5;
  char v6 = malloc(*(void *)(v5 + 64));
  a1[2] = (uint64_t)v6;
  sub_22091EFEC(a2, (uint64_t)v6);
  return sub_22085FCE0;
}

double sub_2208661B0@<D0>(uint64_t a1@<X8>)
{
  return Column.subscript.getter(a1);
}

double Column.subscript.getter@<D0>(uint64_t a1@<X8>)
{
  swift_bridgeObjectRetain();
  swift_retain();
  *(void *)&double result = ColumnSlice.init(base:bounds:)(a1).n128_u64[0];
  return result;
}

{
  swift_getWitnessTable();
  sub_22093E820();
  return Column.subscript.getter(a1);
}

uint64_t sub_220866238()
{
  swift_getWitnessTable();

  return sub_22093EA40();
}

void sub_2208662A8(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

void *sub_2208662C0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  if (__OFADD__(*result, 1)) {
    __break(1u);
  }
  else {
    *a2 = *result + 1;
  }
  return result;
}

Swift::Int __swiftcall Column.index(after:)(Swift::Int after)
{
  BOOL v1 = __OFADD__(after, 1);
  Swift::Int result = after + 1;
  if (v1) {
    __break(1u);
  }
  return result;
}

void *sub_2208662E8(void *result)
{
  if (__OFADD__(*result, 1)) {
    __break(1u);
  }
  else {
    ++*result;
  }
  return result;
}

__n128 sub_220866300@<Q0>(uint64_t a1@<X8>)
{
  *(void *)a1 = *(void *)v1;
  __n128 result = *(__n128 *)(v1 + 8);
  *(__n128 *)(a1 + 8) = result;
  *(void *)(a1 + 24) = 0;
  return result;
}

uint64_t sub_220866318(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F9E108](a1, WitnessTable);
}

uint64_t sub_22086636C()
{
  swift_getWitnessTable();

  return sub_22093EB10();
}

uint64_t sub_2208663C0@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  return Column.withContiguousStorageIfAvailable<A>(_:)(a1, a2);
}

uint64_t Column.withContiguousStorageIfAvailable<A>(_:)@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  return sub_22091F2D0(a1, a2);
}

{
  return sub_22091F384(a1, a2);
}

void *sub_22086640C@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  type metadata accessor for Column();
  return Column.subscript.getter(v3, a2);
}

uint64_t Column.subscript.setter(uint64_t a1, uint64_t a2)
{
  sub_220869F30(a1, a2);
  uint64_t v3 = sub_22093ED30();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(a1, v3);
}

void (*Column.subscript.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t **a1, char a2)
{
  uint64_t v7 = malloc(0x38uLL);
  *a1 = v7;
  *uint64_t v7 = a2;
  v7[1] = v3;
  _OWORD v7[2] = *(void *)(a3 + 16);
  uint64_t v8 = sub_22093ED30();
  void v7[3] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  void v7[4] = v9;
  size_t v10 = *(void *)(v9 + 64);
  uint64_t v7[5] = malloc(v10);
  uint64_t v11 = malloc(v10);
  v7[6] = v11;
  sub_22091EFEC(a2, (uint64_t)v11);
  return sub_2208665E0;
}

void sub_2208665E0(uint64_t **a1, char a2)
{
  BOOL v2 = *a1;
  uint64_t v3 = (void *)(*a1)[5];
  uint64_t v4 = (void *)(*a1)[6];
  uint64_t v5 = (*a1)[3];
  uint64_t v6 = (*a1)[4];
  uint64_t v7 = **a1;
  if (a2)
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[5], v4, v5);
    type metadata accessor for PackedOptionalsArray();
    sub_220921B20((uint64_t)v3, v7);
    uint64_t v8 = *(void (**)(void *, uint64_t))(v6 + 8);
    v8(v3, v5);
    v8(v4, v5);
  }
  else
  {
    type metadata accessor for PackedOptionalsArray();
    sub_220921B20((uint64_t)v4, v7);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  free(v4);
  free(v3);

  free(v2);
}

double sub_2208666F4@<D0>(uint64_t a1@<X8>)
{
  type metadata accessor for Column();
  Column.subscript.getter((uint64_t)&v4);
  uint64_t v2 = v5;
  *(_OWORD *)a1 = v4;
  *(void *)(a1 + 16) = v2;
  double result = v6[0];
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v6;
  return result;
}

uint64_t sub_22086677C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void (***)(uint64_t))a3;
  Swift::Int v4 = *(void *)(a3 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  long long v9 = *(_OWORD *)a1;
  uint64_t v10 = v5;
  uint64_t v11 = v6;
  uint64_t v12 = v7;
  type metadata accessor for Column();
  swift_bridgeObjectRetain();
  swift_retain();
  return Column.subscript.setter(&v9, v3, v4);
}

uint64_t Column.subscript.setter(long long *a1, void (**a2)(uint64_t), Swift::Int a3)
{
  uint64_t v5 = *((void *)a1 + 2);
  uint64_t v6 = *((void *)a1 + 3);
  uint64_t v7 = *((void *)a1 + 4);
  long long v12 = *a1;
  uint64_t v13 = v5;
  uint64_t v14 = v6;
  uint64_t v15 = v7;
  uint64_t v8 = type metadata accessor for PackedOptionalsArray();
  long long v9 = (void (**)(char *))type metadata accessor for ColumnSlice();
  Swift::Int WitnessTable = swift_getWitnessTable();
  sub_22091F0DC(a2, a3, (uint64_t)&v12, v8, v9, WitnessTable);
  swift_release();
  return swift_bridgeObjectRelease();
}

void (*Column.subscript.modify(void *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t **a1, char a2)
{
  long long v9 = malloc(0x48uLL);
  *a1 = v9;
  v9[7] = a4;
  v9[8] = v4;
  v9[5] = a2;
  v9[6] = a3;
  Column.subscript.getter((uint64_t)v9);
  return sub_220866974;
}

void sub_220866974(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v4 = **a1;
  uint64_t v3 = (*a1)[1];
  uint64_t v6 = (*a1)[2];
  uint64_t v5 = (*a1)[3];
  uint64_t v8 = (void (**)(uint64_t))v2[5];
  Swift::Int v7 = v2[6];
  uint64_t v9 = v2[4];
  *(void *)&long long v10 = v4;
  *((void *)&v10 + 1) = v3;
  uint64_t v11 = v6;
  uint64_t v12 = v5;
  uint64_t v13 = v9;
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    Column.subscript.setter(&v10, v8, v7);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    Column.subscript.setter(&v10, v8, v7);
  }

  free(v2);
}

double sub_220866A38@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  v12[0] = a1;
  v12[1] = a2;
  char v13 = a3;
  swift_getWitnessTable();
  sub_22085E388((uint64_t)v12, a4, (uint64_t)&v14);
  uint64_t v8 = v14;
  long long v9 = v15;
  long long v10 = v16;
  char v11 = v17;
  *(void *)&double result = sub_2208BE06C((uint64_t)&v8, a5).n128_u64[0];
  return result;
}

uint64_t sub_220866AE4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v9 = *(void *)(a5 + 16);
  uint64_t v44 = sub_22093ED30();
  uint64_t v41 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  char v11 = (char *)&v40 - v10;
  uint64_t v13 = *(void *)a1;
  uint64_t v12 = *(void *)(a1 + 8);
  uint64_t v15 = *(void *)(a1 + 16);
  uint64_t v14 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  LODWORD(a1) = *(unsigned __int8 *)(a1 + 40);
  uint64_t v45 = a3;
  uint64_t v17 = a3;
  uint64_t v18 = v14;
  LODWORD(v49) = a4;
  uint64_t v19 = sub_2208EE804(a2, v17, a4);
  uint64_t v50 = v13;
  uint64_t v65 = v13;
  uint64_t v66 = v12;
  uint64_t v51 = v12;
  uint64_t v52 = v15;
  *(void *)&long long v67 = v15;
  *((void *)&v67 + 1) = v18;
  uint64_t v68 = v16;
  int v20 = a1;
  LOBYTE(v69) = a1;
  uint64_t v43 = v9;
  uint64_t v21 = type metadata accessor for DiscontiguousColumnSlice();
  if (v19 == DiscontiguousColumnSlice.count.getter())
  {
    uint64_t v22 = v45;
    char v23 = v49;
    uint64_t v24 = sub_2208EE720(a2, v45, v49);
    uint64_t v46 = v24;
    sub_22080B6B4(a2, v22, v23);
    uint64_t v58 = v24;
    uint64_t v59 = v50;
    uint64_t v60 = v51;
    *(void *)&long long v61 = v52;
    *((void *)&v61 + 1) = v18;
    uint64_t v48 = v16;
    *(void *)&long long v62 = v16;
    int v47 = v20;
    BYTE8(v62) = v20;
    swift_getWitnessTable();
    sub_22093EBA0();
    uint64_t v49 = v18;
    uint64_t v25 = *((void *)&v67 + 1);
    uint64_t v26 = v68;
    LODWORD(v45) = v69;
    uint64_t v53 = v65;
    uint64_t v54 = v66;
    long long v55 = v67;
    *(void *)&long long v56 = v68;
    BYTE8(v56) = v69;
    *(_OWORD *)uint64_t v57 = v70;
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B18);
    uint64_t v28 = sub_22093E3B0();
    unint64_t v29 = sub_22086A6BC();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v42 = v21;
    uint64_t v31 = WitnessTable;
    sub_22093F2C0();
    swift_release();
    swift_bridgeObjectRelease();
    sub_22080B6B4(v25, v26, v45);
    swift_bridgeObjectRelease();
    uint64_t v53 = v59;
    uint64_t v54 = v60;
    long long v55 = v61;
    long long v56 = v62;
    v57[0] = v63;
    *(_OWORD *)&v57[8] = v64;
    uint64_t v65 = v27;
    uint64_t v66 = v28;
    *(void *)&long long v67 = v29;
    *((void *)&v67 + 1) = v31;
    sub_22093EEE0();
    sub_22093EEB0();
    uint64_t v46 = v27;
    uint64_t v59 = v27;
    uint64_t v60 = v28;
    uint64_t v45 = v28;
    *(void *)&long long v61 = v29;
    *((void *)&v61 + 1) = v31;
    sub_22093EED0();
    sub_22093EEC0();
    uint64_t v32 = v44;
    if ((v55 & 1) == 0)
    {
      uint64_t v33 = v53;
      uint64_t v34 = v54;
      uint64_t v35 = (void (**)(char *, uint64_t))(v41 + 8);
      do
      {
        uint64_t v59 = v50;
        uint64_t v60 = v51;
        *(void *)&long long v61 = v52;
        *((void *)&v61 + 1) = v49;
        *(void *)&long long v62 = v48;
        BYTE8(v62) = v47;
        DiscontiguousColumnSlice.subscript.getter(v34, (uint64_t)v11);
        type metadata accessor for PackedOptionalsArray();
        sub_220921B20((uint64_t)v11, v33);
        (*v35)(v11, v32);
        uint64_t v59 = v46;
        uint64_t v60 = v45;
        *(void *)&long long v61 = v29;
        *((void *)&v61 + 1) = v31;
        sub_22093EED0();
        sub_22093EEC0();
        uint64_t v33 = v53;
        uint64_t v34 = v54;
      }
      while (v55 != 1);
    }
    uint64_t v36 = v69;
    uint64_t v37 = v70;
    char v38 = BYTE8(v70);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22080B6B4(v36, v37, v38);
    swift_release();
    swift_bridgeObjectRelease();
    return sub_22080B6B4(v49, v48, v47);
  }
  else
  {
    uint64_t result = sub_22093F090();
    __break(1u);
  }
  return result;
}

double sub_220867118@<D0>(uint64_t a1@<X8>)
{
  type metadata accessor for Column();
  Column.subscript.getter((uint64_t)&v4);
  uint64_t v2 = v5;
  *(_OWORD *)a1 = v4;
  *(void *)(a1 + 16) = v2;
  double result = v6[0];
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v6;
  return result;
}

uint64_t sub_2208671AC(long long *a1)
{
  uint64_t v1 = *((void *)a1 + 2);
  uint64_t v2 = *((void *)a1 + 3);
  uint64_t v3 = *((void *)a1 + 4);
  long long v5 = *a1;
  uint64_t v6 = v1;
  uint64_t v7 = v2;
  uint64_t v8 = v3;
  type metadata accessor for Column();
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_220869F7C((uint64_t)&v5);
}

uint64_t Column.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_220869F7C(a1);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a4 - 8) + 8);

  return v6(a2, a4);
}

void (*Column.subscript.modify(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))(uint64_t *a1, char a2)
{
  uint64_t v10 = malloc(0x58uLL);
  *a1 = v10;
  v10[7] = a5;
  v10[8] = v5;
  v10[5] = a3;
  v10[6] = a4;
  uint64_t v11 = *(void *)(a4 - 8);
  uint64_t v12 = v11;
  v10[9] = v11;
  v10[10] = malloc(*(void *)(v11 + 64));
  (*(void (**)(void))(v12 + 16))();
  Column.subscript.getter((uint64_t)v10);
  return sub_2208673B0;
}

void sub_2208673B0(uint64_t *a1, char a2)
{
  uint64_t v2 = (void *)*a1;
  uint64_t v4 = *(void *)(*a1 + 72);
  uint64_t v3 = *(void **)(*a1 + 80);
  uint64_t v5 = *(void *)(*a1 + 48);
  if (a2)
  {
    uint64_t v7 = v2[2];
    uint64_t v6 = v2[3];
    uint64_t v8 = v2[4];
    long long v9 = *(_OWORD *)v2;
    uint64_t v10 = v7;
    uint64_t v11 = v6;
    uint64_t v12 = v8;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_220869F7C((uint64_t)&v9);
    (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v5);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    sub_220869F7C(*a1);
    (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v5);
  }
  free(v3);

  free(v2);
}

uint64_t Column.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t result = sub_2209221E0(*(void *)(v5 + 16), *(void *)(a2 + 16));
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v12 = sub_22086436C(a1, 0, result, a3, a4);
    uint64_t v14 = v13;
    char v16 = v15;
    sub_220866A38(v12, v13, v15, a2, a5);
    return sub_22080B6B4(v12, v14, v16);
  }
  return result;
}

uint64_t Column.withContiguousMutableStorageIfAvailable<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2208675F8(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22091F32C);
}

{
  return sub_2208675F8(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22091F420);
}

uint64_t sub_2208675F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9 = type metadata accessor for PackedOptionalsArray();
  return a5(a1, a2, v9, a4);
}

uint64_t sub_220867674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270F9E068](a1, a2, a3, a4, MEMORY[0x263F8D708]);
}

uint64_t sub_220867684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270F9E078](a1, a2, a3, a4, MEMORY[0x263F8D708]);
}

uint64_t sub_220867690(uint64_t a1, uint64_t *a2)
{
  sub_220869F30(a1, *a2);
  uint64_t v3 = sub_22093ED30();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(a1, v3);
}

void (*sub_22086770C(void *a1, uint64_t *a2, uint64_t a3))(void *)
{
  uint64_t v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = Column.subscript.modify(v6, *a2, a3);
  return sub_220865E74;
}

uint64_t sub_22086777C(long long *a1, uint64_t a2)
{
  return Column.subscript.setter(a1, *(void (***)(uint64_t))a2, *(void *)(a2 + 8));
}

void (*sub_22086778C(void *a1, uint64_t *a2, uint64_t a3))(void *)
{
  uint64_t v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = Column.subscript.modify(v6, *a2, a2[1], a3);
  return sub_220865E74;
}

uint64_t sub_2208677FC()
{
  return sub_22093E500();
}

uint64_t sub_22086787C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Column.withContiguousMutableStorageIfAvailable<A>(_:)(a1, a2, a4, a3);
}

uint64_t static Column<A>.== infix(_:_:)(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = a1[2];
  uint64_t v7 = a2[2];
  BOOL v8 = *a1 == *a2 && a1[1] == a2[1];
  if (!v8 && (sub_22093F250() & 1) == 0) {
    return 0;
  }

  return sub_22091F4C4(v6, v7, a3, a4);
}

uint64_t sub_220867930(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return static Column<A>.== infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a4 - 8));
}

void Column<A>.distinct()(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v36 = a3;
  uint64_t v37 = *(void *)(a1 + 16);
  uint64_t v6 = sub_22093ED30();
  uint64_t v38 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v41 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v40 = (char *)&v33 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v33 - v11;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v14 = sub_22093ED30();
  MEMORY[0x270FA5388](v14 - 8);
  char v16 = (uint64_t *)((char *)&v33 - v15);
  uint64_t v18 = *v3;
  uint64_t v17 = v3[1];
  uint64_t v19 = v3[2];
  uint64_t v60 = a2;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v61 = sub_22093E240();
  uint64_t v57 = 0;
  uint64_t v58 = 0;
  char v59 = 2;
  uint64_t v53 = v18;
  uint64_t v54 = v17;
  uint64_t v55 = v19;
  swift_getWitnessTable();
  sub_22093EA40();
  long long v49 = v46;
  uint64_t v33 = v18;
  uint64_t v53 = v18;
  uint64_t v54 = v17;
  uint64_t v34 = v17;
  uint64_t v35 = v19;
  uint64_t v55 = v19;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18D20);
  uint64_t v21 = sub_22086A1F0((unint64_t *)&qword_267F18D28);
  uint64_t v22 = swift_getWitnessTable();
  sub_22093F2C0();
  long long v46 = v50;
  uint64_t v47 = v51;
  long long v48 = v52;
  *(void *)&long long v44 = v20;
  uint64_t v53 = v20;
  uint64_t v54 = a1;
  *((void *)&v44 + 1) = a1;
  uint64_t v43 = v21;
  uint64_t v55 = v21;
  uint64_t v56 = v22;
  uint64_t v42 = v22;
  sub_22093EEE0();
  sub_22093EEB0();
  char v23 = (void (**)(char *, char *, uint64_t))(v38 + 32);
  long long v39 = (void (**)(char *, char *, uint64_t))(v38 + 16);
  uint64_t v24 = (void (**)(char *, uint64_t))(v38 + 8);
  while (1)
  {
    while (1)
    {
      long long v50 = v44;
      uint64_t v51 = v43;
      *(void *)&long long v52 = v42;
      sub_22093EED0();
      sub_22093EEC0();
      if ((*(unsigned int (**)(int64_t *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8)
                                                                              + 48))(v16, 1, TupleTypeMetadata2) == 1)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v53 = v33;
        uint64_t v54 = v34;
        uint64_t v55 = v35;
        uint64_t v30 = v57;
        uint64_t v31 = v58;
        char v32 = v59;
        swift_bridgeObjectRetain();
        swift_retain();
        sub_2208BE1D0(&v53, v30, v31, v32, v36);
        return;
      }
      int64_t v25 = *v16;
      (*v23)(v12, (char *)v16 + *(int *)(TupleTypeMetadata2 + 48), v6);
      swift_bridgeObjectRetain();
      char v26 = sub_22093E9C0();
      swift_bridgeObjectRelease();
      if ((v26 & 1) == 0) {
        break;
      }
      (*v24)(v12, v6);
    }
    uint64_t v27 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v27 < v25) {
      goto LABEL_10;
    }
    sub_220869870(v25, v27);
    (*v39)(v41, v12, v6);
    sub_22093E9D0();
    uint64_t v28 = v40;
    sub_22093E9B0();
    unint64_t v29 = *v24;
    (*v24)(v28, v6);
    v29(v12, v6);
  }
  __break(1u);
LABEL_10:
  __break(1u);
}

uint64_t Column<A>.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_22093E650();
  swift_bridgeObjectRelease();
  swift_retain();
  sub_2209206DC();

  return swift_release();
}

uint64_t Column<A>.hashValue.getter()
{
  return sub_22093F490();
}

uint64_t sub_220867F8C()
{
  return Column<A>.hashValue.getter();
}

uint64_t sub_220867F94()
{
  return Column<A>.hash(into:)();
}

uint64_t sub_220867F9C()
{
  return sub_22093F490();
}

uint64_t sub_220867FF0(uint64_t a1, uint64_t a2)
{
  sub_22083B5D0(a1, (uint64_t)v25);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41130);
  if (swift_dynamicCast())
  {
    long long v15 = v20;
    uint64_t v16 = v21;
    uint64_t v4 = type metadata accessor for PackedOptionalsArray();
    swift_getWitnessTable();
    uint64_t v5 = v4;
    uint64_t v6 = a2;
LABEL_5:
    sub_22091DB98((uint64_t)&v15, v5, v6);
    swift_release();
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
  }
  uint64_t v7 = type metadata accessor for ColumnSlice();
  if (swift_dynamicCast())
  {
    long long v15 = v20;
    uint64_t v16 = v21;
    uint64_t v17 = v22;
    uint64_t v18 = v23;
    uint64_t v8 = type metadata accessor for PackedOptionalsArray();
    swift_getWitnessTable();
    uint64_t v5 = v8;
    uint64_t v6 = v7;
    goto LABEL_5;
  }
  uint64_t v9 = type metadata accessor for DiscontiguousColumnSlice();
  if (swift_dynamicCast())
  {
    uint64_t v10 = v22;
    uint64_t v11 = v23;
    char v12 = v24;
    long long v15 = v20;
    uint64_t v16 = v21;
    uint64_t v17 = v22;
    uint64_t v18 = v23;
    char v19 = v24;
    uint64_t v13 = type metadata accessor for PackedOptionalsArray();
    swift_getWitnessTable();
    sub_22091DB98((uint64_t)&v15, v13, v9);
    swift_release();
    swift_bridgeObjectRelease();
    sub_22080B6B4(v10, v11, v12);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
  }
  sub_22083B5D0(a1, (uint64_t)&v20);
  sub_22093EEA0();
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(&v20, v22);
  swift_getDynamicType();
  sub_22093F530();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

uint64_t sub_2208682C8(void *a1, uint64_t a2)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  uint64_t v5 = __swift_project_boxed_opaque_existential_1(a1, v3);
  void v8[3] = v3;
  void v8[4] = *(void *)(v4 + 8);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v8);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v3 - 8) + 16))(boxed_opaque_existential_1, v5, v3);
  sub_220867FF0((uint64_t)v8, a2);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
}

uint64_t sub_220868368(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_22093ED30();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v12 - v8;
  sub_22083B5D0(a2, (uint64_t)v26);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41130);
  if (swift_dynamicCast())
  {
    sub_22091EFEC(a1, (uint64_t)v9);
    type metadata accessor for PackedOptionalsArray();
    sub_22091DAE8((uint64_t)v9);
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
LABEL_8:
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v26);
  }
  type metadata accessor for ColumnSlice();
  if (swift_dynamicCast())
  {
    long long v16 = v21;
    uint64_t v17 = v22;
    uint64_t v18 = v23;
    uint64_t v19 = v24;
    ColumnSlice.subscript.getter();
    type metadata accessor for PackedOptionalsArray();
    sub_22091DAE8((uint64_t)v9);
    goto LABEL_5;
  }
  uint64_t v15 = v3;
  type metadata accessor for DiscontiguousColumnSlice();
  if (swift_dynamicCast())
  {
    uint64_t v10 = v23;
    uint64_t v14 = v24;
    int v13 = v25;
    long long v16 = v21;
    uint64_t v17 = v22;
    uint64_t v18 = v23;
    uint64_t v19 = v24;
    unsigned __int8 v20 = v25;
    DiscontiguousColumnSlice.subscript.getter(a1, (uint64_t)v9);
    type metadata accessor for PackedOptionalsArray();
    sub_22091DAE8((uint64_t)v9);
    swift_release();
    swift_bridgeObjectRelease();
    sub_22080B6B4(v10, v14, v13);
    goto LABEL_8;
  }
  sub_22083B5D0(a2, (uint64_t)&v21);
  *(void *)&long long v16 = 0;
  *((void *)&v16 + 1) = 0xE000000000000000;
  sub_22093EEA0();
  swift_bridgeObjectRelease();
  *(void *)&long long v16 = 0xD000000000000014;
  *((void *)&v16 + 1) = 0x8000000220940260;
  __swift_project_boxed_opaque_existential_1(&v21, v23);
  swift_getDynamicType();
  sub_22093F530();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

uint64_t sub_2208686B8(uint64_t a1, uint64_t a2, Swift::Int a3)
{
  uint64_t v6 = sub_22093ED30();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v15 - v8;
  sub_22083B5D0(a2, (uint64_t)v29);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41130);
  if (swift_dynamicCast())
  {
    sub_22091EFEC(a1, (uint64_t)v9);
    uint64_t v10 = type metadata accessor for PackedOptionalsArray();
    sub_22091F6D4((uint64_t)v9, a3, v10);
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
LABEL_8:
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v29);
  }
  type metadata accessor for ColumnSlice();
  int v11 = swift_dynamicCast();
  Swift::Int v18 = a3;
  if (v11)
  {
    long long v19 = v24;
    uint64_t v20 = v25;
    uint64_t v21 = v26;
    uint64_t v22 = v27;
    ColumnSlice.subscript.getter();
    uint64_t v12 = type metadata accessor for PackedOptionalsArray();
    sub_22091F6D4((uint64_t)v9, v18, v12);
    goto LABEL_5;
  }
  type metadata accessor for DiscontiguousColumnSlice();
  if (swift_dynamicCast())
  {
    uint64_t v16 = v27;
    uint64_t v17 = v26;
    HIDWORD(v15) = v28;
    long long v19 = v24;
    uint64_t v20 = v25;
    uint64_t v21 = v26;
    uint64_t v22 = v27;
    unsigned __int8 v23 = v28;
    DiscontiguousColumnSlice.subscript.getter(a1, (uint64_t)v9);
    uint64_t v13 = type metadata accessor for PackedOptionalsArray();
    sub_22091F6D4((uint64_t)v9, v18, v13);
    swift_release();
    swift_bridgeObjectRelease();
    sub_22080B6B4(v17, v16, SBYTE4(v15));
    goto LABEL_8;
  }
  sub_22083B5D0(a2, (uint64_t)&v24);
  *(void *)&long long v19 = 0;
  *((void *)&v19 + 1) = 0xE000000000000000;
  sub_22093EEA0();
  swift_bridgeObjectRelease();
  *(void *)&long long v19 = 0xD000000000000014;
  *((void *)&v19 + 1) = 0x8000000220940260;
  __swift_project_boxed_opaque_existential_1(&v24, v26);
  swift_getDynamicType();
  sub_22093F530();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

uint64_t sub_220868A10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22093ED30();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v12 - v8;
  sub_22083B5D0(a3, (uint64_t)v26);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41130);
  if (swift_dynamicCast())
  {
    sub_22091EFEC(a2, (uint64_t)v9);
    type metadata accessor for PackedOptionalsArray();
    sub_220921B20((uint64_t)v9, a1);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v26);
  }
  type metadata accessor for ColumnSlice();
  int v10 = swift_dynamicCast();
  uint64_t v15 = a1;
  if (v10)
  {
    long long v16 = v21;
    uint64_t v17 = v22;
    uint64_t v18 = v23;
    uint64_t v19 = v24;
    ColumnSlice.subscript.getter();
    type metadata accessor for PackedOptionalsArray();
    sub_220921B20((uint64_t)v9, v15);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    goto LABEL_5;
  }
  type metadata accessor for DiscontiguousColumnSlice();
  if (swift_dynamicCast())
  {
    uint64_t v13 = v24;
    uint64_t v14 = v23;
    HIDWORD(v12) = v25;
    long long v16 = v21;
    uint64_t v17 = v22;
    uint64_t v18 = v23;
    uint64_t v19 = v24;
    unsigned __int8 v20 = v25;
    DiscontiguousColumnSlice.subscript.getter(a2, (uint64_t)v9);
    type metadata accessor for PackedOptionalsArray();
    sub_220921B20((uint64_t)v9, v15);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_release();
    swift_bridgeObjectRelease();
    sub_22080B6B4(v14, v13, SBYTE4(v12));
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v26);
  }
  sub_22083B5D0(a3, (uint64_t)&v21);
  *(void *)&long long v16 = 0;
  *((void *)&v16 + 1) = 0xE000000000000000;
  sub_22093EEA0();
  swift_bridgeObjectRelease();
  *(void *)&long long v16 = 0xD000000000000014;
  *((void *)&v16 + 1) = 0x8000000220940260;
  __swift_project_boxed_opaque_existential_1(&v21, v23);
  swift_getDynamicType();
  sub_22093F530();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

uint64_t sub_220868D98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = sub_22093ED30();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v13 - v8;
  sub_22091EFEC(a1, (uint64_t)&v13 - v8);
  uint64_t v10 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v5) == 1)
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  else
  {
    *(void *)(a3 + 24) = v5;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a3);
    return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v10 + 32))(boxed_opaque_existential_1, v9, v5);
  }
  return result;
}

uint64_t sub_220868F04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = sub_22093ED30();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v11 - v8;
  sub_220842FF8(a2, (uint64_t)&v11);
  if (v12)
  {
    sub_220835340(&v11, v13);
    sub_220835350((uint64_t)v13, (uint64_t)&v11);
    swift_dynamicCast();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v9, 0, 1, v5);
    type metadata accessor for PackedOptionalsArray();
    sub_220921B20((uint64_t)v9, a1);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
  }
  else
  {
    sub_22086A7A4((uint64_t)&v11);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v9, 1, 1, v5);
    type metadata accessor for PackedOptionalsArray();
    sub_220921B20((uint64_t)v9, a1);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

double sub_220869104@<D0>(uint64_t *a1@<X8>)
{
  a1[3] = type metadata accessor for ColumnSlice();
  a1[4] = (uint64_t)&off_26D222690;
  uint64_t v2 = swift_allocObject();
  *a1 = v2;
  return Column.subscript.getter(v2 + 16);
}

uint64_t sub_2208691A0(void (**a1)(uint64_t), Swift::Int a2, uint64_t a3)
{
  sub_22083B5D0(a3, (uint64_t)v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18A90);
  type metadata accessor for ColumnSlice();
  swift_dynamicCast();
  long long v6 = v9;
  uint64_t v7 = v10;
  long long v8 = v11;
  return Column.subscript.setter(&v6, a1, a2);
}

double sub_22086924C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  a5[3] = type metadata accessor for DiscontiguousColumnSlice();
  a5[4] = (uint64_t)&off_26D223748;
  uint64_t v10 = swift_allocObject();
  *a5 = v10;
  return sub_220866A38(a1, a2, a3, a4, v10 + 16);
}

uint64_t sub_2208692F8(void *a1, uint64_t a2)
{
  return sub_2208682C8(a1, a2);
}

uint64_t sub_220869320()
{
  uint64_t v0 = sub_220869F28();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_220869358()
{
  return 0;
}

uint64_t sub_220869368(uint64_t a1)
{
  BOOL v1 = __OFADD__(a1, 1);
  uint64_t result = a1 + 1;
  if (v1) {
    __break(1u);
  }
  return result;
}

uint64_t sub_220869378(uint64_t a1)
{
  BOOL v1 = __OFSUB__(a1, 1);
  uint64_t result = a1 - 1;
  if (v1) {
    __break(1u);
  }
  return result;
}

uint64_t sub_220869388(uint64_t a1)
{
  return nullsub_5(*(void *)(a1 + 16));
}

uint64_t Column<A>.encode(to:)(void *a1, uint64_t a2, uint64_t a3)
{
  v11[1] = *(void *)(a2 + 16);
  uint64_t v12 = a3;
  type metadata accessor for Column.CodingKeys();
  swift_getWitnessTable();
  uint64_t v5 = sub_22093F160();
  uint64_t v14 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v11 - v6;
  uint64_t v13 = *v3;
  v11[0] = v3[2];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22093F500();
  LOBYTE(v18) = 0;
  uint64_t v8 = v15;
  sub_22093F140();
  if (v8) {
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v7, v5);
  }
  uint64_t v10 = v14;
  uint64_t v18 = v11[0];
  char v17 = 1;
  type metadata accessor for PackedOptionalsArray();
  uint64_t v16 = v12;
  swift_getWitnessTable();
  sub_22093F150();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v7, v5);
}

uint64_t sub_2208695B8(void *a1, uint64_t a2, uint64_t a3)
{
  return Column<A>.encode(to:)(a1, a2, *(void *)(a3 - 8));
}

uint64_t Column<A>.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  char v17 = a3;
  uint64_t v18 = a2;
  type metadata accessor for Column.CodingKeys();
  swift_getWitnessTable();
  uint64_t v19 = sub_22093F130();
  uint64_t v5 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v7 = (char *)&v16 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22093F4E0();
  if (v3) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  uint64_t v8 = v5;
  uint64_t v10 = v17;
  uint64_t v9 = v18;
  LOBYTE(v22) = 0;
  uint64_t v11 = sub_22093F110();
  uint64_t v13 = v12;
  uint64_t v16 = v11;
  type metadata accessor for PackedOptionalsArray();
  char v21 = 1;
  uint64_t v20 = v9;
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_22093F120();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v19);
  uint64_t v14 = v22;
  *uint64_t v10 = v16;
  v10[1] = v13;
  _OWORD v10[2] = v14;
  swift_retain();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_220869850@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  return Column<A>.init(from:)(a1, *(void *)(a2 - 8), a3);
}

unint64_t sub_220869870(unint64_t result, uint64_t a2)
{
  if (result == a2) {
    return result;
  }
  int64_t v4 = result;
  uint64_t v6 = *(void *)v2;
  uint64_t v5 = *(void *)(v2 + 8);
  int v7 = *(unsigned __int8 *)(v2 + 16);
  if (*(unsigned char *)(v2 + 16) && (v7 != 1 || !*(void *)(v6 + 16))) {
    goto LABEL_11;
  }
  uint64_t result = sub_220883950(*(void *)v2, *(void *)(v2 + 8), *(unsigned char *)(v2 + 16));
  if (v9)
  {
LABEL_50:
    __break(1u);
    return result;
  }
  if (v8 > v4)
  {
    uint64_t v10 = v6;
    if (v7)
    {
      if (!*(void *)(v6 + 16)) {
        goto LABEL_42;
      }
      uint64_t v10 = *(void *)(v6 + 32);
    }
    if (v10 > a2)
    {
LABEL_11:
      uint64_t result = 0;
      int64_t v11 = 0;
LABEL_12:
      uint64_t v12 = v4;
      uint64_t v13 = a2;
LABEL_13:
      return sub_220869DC4(result, v11, v12, v13);
    }
    uint64_t result = sub_220869A20(v4, a2, v6, v5, v7);
    if (result == v11)
    {
      int64_t v11 = result;
      goto LABEL_12;
    }
    if (v7)
    {
      if ((result & 0x8000000000000000) != 0)
      {
LABEL_44:
        __break(1u);
        goto LABEL_45;
      }
      unint64_t v14 = *(void *)(v6 + 16);
      if (result >= v14)
      {
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
      if (*(void *)(v6 + 32 + 16 * result) >= v4) {
        uint64_t v12 = v4;
      }
      else {
        uint64_t v12 = *(void *)(v6 + 32 + 16 * result);
      }
      unint64_t v15 = v11 - 1;
      if (__OFSUB__(v11, 1))
      {
LABEL_43:
        __break(1u);
        goto LABEL_44;
      }
      if ((v15 & 0x8000000000000000) != 0)
      {
LABEL_46:
        __break(1u);
        goto LABEL_47;
      }
      if (v15 >= v14)
      {
LABEL_47:
        __break(1u);
        goto LABEL_48;
      }
      uint64_t v5 = *(void *)(v6 + 32 + 16 * v15 + 8);
    }
    else
    {
      if (result)
      {
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
        goto LABEL_50;
      }
      if (__OFSUB__(v11, 1)) {
        goto LABEL_43;
      }
      if (v6 >= v4) {
        uint64_t v12 = v4;
      }
      else {
        uint64_t v12 = v6;
      }
      if (v11 != 1) {
        goto LABEL_49;
      }
    }
    if (v5 <= a2) {
      uint64_t v13 = a2;
    }
    else {
      uint64_t v13 = v5;
    }
    if (v13 >= v12) {
      goto LABEL_13;
    }
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }

  return sub_22081A204(v4, a2);
}

uint64_t sub_220869A20(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  v18[0] = result;
  v18[1] = a2;
  if (result == a2) {
    goto LABEL_19;
  }
  uint64_t v9 = result;
  if (a5 && (a5 != 1 || !*(void *)(a3 + 16))) {
    goto LABEL_25;
  }
  uint64_t result = sub_220883950(a3, a4, a5);
  if ((v11 & 1) == 0)
  {
    if (v10 < v9)
    {
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
    uint64_t v12 = a3;
    if (a5)
    {
      if (!*(void *)(a3 + 16))
      {
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
      uint64_t v12 = *(void *)(a3 + 32);
    }
    if (v12 > a2) {
      goto LABEL_21;
    }
    MEMORY[0x270FA5388](result);
    char v17 = v18;
    sub_220831F30(a3, a4, a5);
    uint64_t v13 = sub_2208FD268((uint64_t (*)(long long *))sub_22086A804, (uint64_t)&v16, a3, a4, a5);
    uint64_t result = sub_22080B6B4(a3, a4, a5);
    if (a5)
    {
      if (*(void *)(a3 + 16) < v13)
      {
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
      if ((v13 & 0x8000000000000000) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      if (v13 > 1)
      {
LABEL_26:
        __break(1u);
        goto LABEL_27;
      }
      if ((v13 & 0x8000000000000000) == 0)
      {
LABEL_14:
        MEMORY[0x270FA5388](result);
        char v17 = v18;
        void v18[2] = v13;
        void v18[3] = v14;
        v18[4] = a3;
        uint64_t v18[5] = a4;
        char v19 = a5;
        sub_220831F30(a3, a4, a5);
        uint64_t v15 = sub_2208FD414((uint64_t (*)(long long *))sub_22086A81C);
        uint64_t result = sub_22080B6B4(a3, a4, a5);
        if (v15 >= v13) {
          return v13;
        }
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
LABEL_27:
  __break(1u);
  return result;
}

unint64_t sub_220869C30(unint64_t a1, int64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v7 = v6;
  if (*((unsigned char *)v6 + 16))
  {
    if (*((unsigned char *)v6 + 16) == 1)
    {
      char v19 = *v6;
      unint64_t result = sub_22081B0E0(a1, a2, a3, a4, a5, a6);
      void *v6 = v19;
      goto LABEL_8;
    }
LABEL_7:
    unint64_t result = (unint64_t)sub_2208642D0(a3, a4, a5, a6);
    void *v6 = (char *)result;
    goto LABEL_8;
  }
  if (a1 != a2) {
    goto LABEL_7;
  }
  long long v18 = *(_OWORD *)v6;
  if (a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD411A8);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_220944FB0;
    *(_OWORD *)(v13 + 32) = v18;
    uint64_t v20 = v13;
    unint64_t result = sub_2208445B4(a3, a4, a5, a6);
    void *v6 = (char *)v20;
  }
  else
  {
    uint64_t v14 = (char *)sub_2208642D0(a3, a4, a5, a6);
    unint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      unint64_t result = (unint64_t)sub_22081B3EC(0, *((void *)v14 + 2) + 1, 1, v14);
      uint64_t v14 = (char *)result;
    }
    long long v15 = v18;
    unint64_t v17 = *((void *)v14 + 2);
    unint64_t v16 = *((void *)v14 + 3);
    if (v17 >= v16 >> 1)
    {
      unint64_t result = (unint64_t)sub_22081B3EC((char *)(v16 > 1), v17 + 1, 1, v14);
      long long v15 = v18;
      uint64_t v14 = (char *)result;
    }
    *((void *)v14 + 2) = v17 + 1;
    *(_OWORD *)&v14[16 * v17 + 32] = v15;
    *int v7 = v14;
  }
LABEL_8:
  v7[1] = 0;
  *((unsigned char *)v7 + 16) = 1;
  return result;
}

unint64_t sub_220869DC4(unint64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  if (*((unsigned char *)v4 + 16))
  {
    if (*((unsigned char *)v4 + 16) == 1)
    {
      long long v15 = *v4;
      unint64_t result = sub_22081AFC4(a1, a2, a3, a4);
      *int64_t v4 = v15;
      goto LABEL_8;
    }
LABEL_7:
    unint64_t result = (unint64_t)sub_220837958(a3, a4);
    *int64_t v4 = (char *)result;
    goto LABEL_8;
  }
  if (a1 != a2) {
    goto LABEL_7;
  }
  long long v14 = *(_OWORD *)v4;
  if (a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD411A8);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_220944FB0;
    *(_OWORD *)(v9 + 32) = v14;
    uint64_t v16 = v9;
    unint64_t result = sub_220844514(a3, a4);
    *int64_t v4 = (char *)v16;
  }
  else
  {
    uint64_t v10 = (char *)sub_220837958(a3, a4);
    unint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      unint64_t result = (unint64_t)sub_22081B3EC(0, *((void *)v10 + 2) + 1, 1, v10);
      uint64_t v10 = (char *)result;
    }
    long long v11 = v14;
    unint64_t v13 = *((void *)v10 + 2);
    unint64_t v12 = *((void *)v10 + 3);
    if (v13 >= v12 >> 1)
    {
      unint64_t result = (unint64_t)sub_22081B3EC((char *)(v12 > 1), v13 + 1, 1, v10);
      long long v11 = v14;
      uint64_t v10 = (char *)result;
    }
    *((void *)v10 + 2) = v13 + 1;
    *(_OWORD *)&v10[16 * v13 + 32] = v11;
    *uint64_t v5 = v10;
  }
LABEL_8:
  v5[1] = 0;
  *((unsigned char *)v5 + 16) = 1;
  return result;
}

uint64_t sub_220869F28()
{
  return *(void *)v0;
}

void *sub_220869F30(uint64_t a1, uint64_t a2)
{
  return sub_220921B20(a1, a2);
}

uint64_t sub_220869F7C(uint64_t a1)
{
  swift_getWitnessTable();
  sub_22093E820();
  uint64_t v2 = *(void *)(a1 + 16);
  long long v4 = *(_OWORD *)a1;
  uint64_t v5 = v2;
  long long v6 = *(_OWORD *)(a1 + 24);
  return Column.subscript.setter(&v4, v7, v8);
}

uint64_t type metadata accessor for Column.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_22086A044(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22086A080(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22086A0BC()
{
  return swift_getWitnessTable();
}

uint64_t sub_22086A0D8()
{
  return sub_22086A1F0(&qword_267F18D30);
}

uint64_t sub_22086A10C()
{
  return swift_getWitnessTable();
}

uint64_t sub_22086A128()
{
  return swift_getWitnessTable();
}

uint64_t sub_22086A144()
{
  return MEMORY[0x263F8D6E0];
}

uint64_t sub_22086A150()
{
  return sub_22086A1F0(&qword_267F18D38);
}

uint64_t sub_22086A184()
{
  return swift_getWitnessTable();
}

uint64_t sub_22086A1A0()
{
  return swift_getWitnessTable();
}

uint64_t sub_22086A1BC()
{
  return sub_22086A1F0(qword_267F18D40);
}

uint64_t sub_22086A1F0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267F18D20);
    sub_220832008();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22086A260()
{
  return swift_getWitnessTable();
}

uint64_t sub_22086A27C()
{
  return swift_getWitnessTable();
}

uint64_t sub_22086A298()
{
  return swift_getWitnessTable();
}

void *sub_22086A2E4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = *a3;
  type metadata accessor for Column();
  return sub_220869F30(a1, v4);
}

uint64_t sub_22086A334()
{
  return 8;
}

void *sub_22086A340(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_22086A354()
{
  return 8;
}

uint64_t sub_22086A368()
{
  return 24;
}

__n128 sub_22086A374(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_22086A38C()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

void *sub_22086A3C8(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *sub_22086A408(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_22086A470(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t type metadata accessor for Column()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_22086A4D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 8);
}

uint64_t getEnumTagSinglePayload for Order(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *sub_22086A568(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    uint64_t *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22086A634);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          uint64_t *result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_22086A65C(unsigned char *result, char a2)
{
  uint64_t *result = a2 & 1;
  return result;
}

uint64_t sub_22086A668()
{
  return swift_getWitnessTable();
}

uint64_t sub_22086A684()
{
  return swift_getWitnessTable();
}

uint64_t sub_22086A6A0()
{
  return swift_getWitnessTable();
}

unint64_t sub_22086A6BC()
{
  unint64_t result = qword_267F18DC8[0];
  if (!qword_267F18DC8[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267F18B18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_267F18DC8);
  }
  return result;
}

uint64_t sub_22086A718()
{
  swift_bridgeObjectRelease();
  swift_release();
  sub_22080B6B4(*(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned char *)(v0 + 56));

  return MEMORY[0x270FA0238](v0, 57, 7);
}

uint64_t sub_22086A764()
{
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_22086A7A4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD40FF8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL sub_22086A804(uint64_t a1)
{
  return *(void *)(a1 + 8) >= **(void **)(v1 + 16);
}

BOOL sub_22086A81C(void *a1)
{
  return *(void *)(*(void *)(v1 + 16) + 8) < *a1;
}

uint64_t ColumnID.name.getter()
{
  uint64_t v0 = sub_220869F28();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t ColumnID.init(_:_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t ColumnID.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ColumnID.name.modify())(void)
{
  return nullsub_5;
}

uint64_t ColumnID.description.getter()
{
  return 0x44496E6D756C6F43;
}

uint64_t type metadata accessor for ColumnID()
{
  return __swift_instantiateGenericMetadata();
}

Swift::Bool __swiftcall ColumnSlice.isNil(at:)(Swift::Int at)
{
  LOBYTE(at) = sub_22091F068(at);
  swift_release();
  return at & 1;
}

uint64_t ColumnSlice.name.getter()
{
  swift_bridgeObjectRetain();
  swift_retain();
  type metadata accessor for Column();
  swift_getWitnessTable();
  sub_22093F3B0();
  sub_22093F360();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v0 = sub_220869F28();
  swift_bridgeObjectRetain();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

__n128 ColumnSlice.init(base:bounds:)@<Q0>(uint64_t a1@<X8>)
{
  type metadata accessor for Column();
  swift_getWitnessTable();
  sub_22093F350();
  __n128 result = v5;
  *(_OWORD *)a1 = v3;
  *(void *)(a1 + 16) = v4;
  *(__n128 *)(a1 + 24) = v5;
  return result;
}

uint64_t ColumnSlice.subscript.getter()
{
  return swift_bridgeObjectRelease();
}

uint64_t ColumnSlice.slice.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v2 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v2;
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();

  return swift_retain();
}

__n128 ColumnSlice.slice.setter(long long *a1)
{
  long long v5 = *a1;
  uint64_t v3 = *((void *)a1 + 2);
  swift_release();
  swift_bridgeObjectRelease();
  *(_OWORD *)uint64_t v1 = v5;
  *(void *)(v1 + 16) = v3;
  __n128 result = *(__n128 *)((char *)a1 + 24);
  *(__n128 *)(v1 + 24) = result;
  return result;
}

uint64_t (*ColumnSlice.slice.modify())(void)
{
  return nullsub_5;
}

uint64_t sub_22086ADC0@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ColumnSlice();
  uint64_t result = ColumnSlice.name.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_22086AE1C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  type metadata accessor for ColumnSlice();
  swift_bridgeObjectRetain();
  return ColumnSlice.name.setter(v1, v2);
}

uint64_t ColumnSlice.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *((void *)v2 + 2);
  uint64_t v7 = *((void *)v2 + 3);
  uint64_t v8 = *((void *)v3 + 4);
  long long v29 = *v3;
  uint64_t v30 = v6;
  *(void *)&long long v31 = v7;
  *((void *)&v31 + 1) = v8;
  type metadata accessor for Column();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_getWitnessTable();
  uint64_t v9 = sub_22093F3B0();
  sub_22093F360();
  swift_release();
  swift_bridgeObjectRelease();
  Column.name.setter(a1, a2);
  uint64_t v26 = v32;
  uint64_t v27 = v33;
  uint64_t v28 = v34;
  uint64_t v11 = *((void *)v3 + 2);
  uint64_t v10 = *((void *)v3 + 3);
  uint64_t v12 = *((void *)v3 + 4);
  long long v29 = *v3;
  uint64_t v30 = v11;
  *(void *)&long long v31 = v10;
  *((void *)&v31 + 1) = v12;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_22093F340();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v13 = v25;
  uint64_t v15 = *((void *)v3 + 2);
  uint64_t v14 = *((void *)v3 + 3);
  uint64_t v16 = *((void *)v3 + 4);
  long long v21 = *v3;
  uint64_t v22 = v15;
  uint64_t v23 = v14;
  uint64_t v24 = v16;
  swift_bridgeObjectRetain();
  swift_retain();
  MEMORY[0x223C6AAB0](&v20, v9);
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  if (v20 < v13)
  {
    __break(1u);
  }
  else
  {
    *(void *)&long long v21 = v13;
    *((void *)&v21 + 1) = v20;
    sub_22093F350();
    long long v19 = v29;
    uint64_t v18 = v30;
    swift_bridgeObjectRelease();
    swift_release();
    *uint64_t v3 = v19;
    *((void *)v3 + 2) = v18;
    *(long long *)((char *)v3 + 24) = v31;
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t (*ColumnSlice.name.modify(uint64_t *a1, uint64_t a2))(uint64_t *a1, char a2)
{
  a1[2] = a2;
  a1[3] = v2;
  *a1 = ColumnSlice.name.getter();
  a1[1] = v4;
  return sub_22086B0C4;
}

uint64_t sub_22086B0C4(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  if ((a2 & 1) == 0) {
    return ColumnSlice.name.setter(*a1, v2);
  }
  swift_bridgeObjectRetain();
  ColumnSlice.name.setter(v3, v2);

  return swift_bridgeObjectRelease();
}

uint64_t ColumnSlice.wrappedElementType.getter(uint64_t a1)
{
  return nullsub_5(*(void *)(a1 + 16));
}

uint64_t ColumnSlice.prototype.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = ColumnSlice.name.getter();
  uint64_t v3 = nullsub_5(v2);
  uint64_t v5 = v4;
  uint64_t result = type metadata accessor for ColumnPrototype();
  a1[3] = result;
  a1[4] = (uint64_t)&off_26D221838;
  *a1 = v3;
  a1[1] = v5;
  return result;
}

__n128 ColumnSlice.init(_:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(void *)(a2 + 16) = v2;
  __n128 result = *(__n128 *)(a1 + 24);
  *(__n128 *)(a2 + 24) = result;
  return result;
}

uint64_t ColumnSlice.init(_:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Column();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t result = Column.count.getter(v2);
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    ColumnSlice.init(base:bounds:)(a1);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t ColumnSlice.map<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v7 = v6;
  uint64_t v13 = ColumnSlice.name.getter();
  uint64_t v15 = v14;
  uint64_t v17 = *((void *)v5 + 2);
  uint64_t v16 = *((void *)v5 + 3);
  uint64_t v18 = *((void *)v5 + 4);
  long long v29 = *v5;
  uint64_t v30 = v17;
  uint64_t v31 = v16;
  uint64_t v32 = v18;
  _OWORD v28[2] = *(void *)(a3 + 16);
  void v28[3] = a4;
  v28[4] = a1;
  v28[5] = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  type metadata accessor for Column();
  swift_getWitnessTable();
  uint64_t v19 = sub_22093F3B0();
  uint64_t v20 = sub_22093ED30();
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F188B0);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v23 = sub_2208F0D18((void (*)(char *, char *))sub_22086E94C, (uint64_t)v28, v19, v20, v21, WitnessTable, MEMORY[0x263F8E4E0], (uint64_t)&v33);
  if (v7)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v25 = v23;
    swift_release();
    swift_bridgeObjectRelease();
    *(void *)&long long v29 = v25;
    uint64_t v26 = sub_22093E900();
    uint64_t v27 = swift_getWitnessTable();
    return Column.init<A>(name:contents:)(v13, v15, (uint64_t)&v29, a4, v26, v27, a5);
  }
}

uint64_t sub_22086B484(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t result = a2();
  if (v6) {
    *a6 = v6;
  }
  return result;
}

void ColumnSlice.filter(_:)(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v37 = a1;
  uint64_t v38 = a2;
  uint64_t v31 = *(void *)(a3 + 16);
  uint64_t v32 = a4;
  uint64_t v7 = sub_22093ED30();
  uint64_t v33 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v28 - v8;
  uint64_t v63 = v10;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v12 = sub_22093ED30();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (uint64_t *)((char *)&v28 - v13);
  uint64_t v15 = *v4;
  uint64_t v35 = v4[1];
  uint64_t v36 = v15;
  uint64_t v16 = v4[3];
  uint64_t v34 = v4[2];
  uint64_t v17 = v4[4];
  uint64_t v60 = 0;
  uint64_t v61 = 0;
  char v62 = 2;
  *(void *)&v53[0] = v15;
  *((void *)&v53[0] + 1) = v35;
  *(void *)&v53[1] = v34;
  *((void *)&v53[1] + 1) = v16;
  uint64_t v54 = v17;
  swift_getWitnessTable();
  sub_22093EA40();
  long long v52 = v43;
  *(void *)&long long v46 = v36;
  *((void *)&v46 + 1) = v35;
  *(void *)&long long v47 = v34;
  *((void *)&v47 + 1) = v16;
  uint64_t v29 = v17;
  uint64_t v30 = v16;
  uint64_t v48 = v17;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18D20);
  unint64_t v19 = sub_220832008();
  uint64_t v50 = MEMORY[0x263F8D708];
  unint64_t v51 = v19;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v21 = a3;
  uint64_t v22 = swift_getWitnessTable();
  sub_22093F2C0();
  long long v46 = v53[0];
  long long v47 = v53[1];
  uint64_t v48 = v54;
  long long v49 = v55;
  *(void *)&long long v42 = v18;
  *((void *)&v42 + 1) = v21;
  *(void *)&long long v43 = v18;
  *((void *)&v43 + 1) = v21;
  uint64_t v40 = v22;
  uint64_t v41 = WitnessTable;
  uint64_t v44 = WitnessTable;
  uint64_t v45 = v22;
  sub_22093EEE0();
  sub_22093EEB0();
  uint64_t v39 = TupleTypeMetadata2 - 8;
  uint64_t v23 = (void (**)(char *, char *, uint64_t))(v33 + 32);
  for (uint64_t i = (void (**)(char *, uint64_t))(v33 + 8); ; (*i)(v9, v63))
  {
    v53[0] = v42;
    *(void *)&v53[1] = v41;
    *((void *)&v53[1] + 1) = v40;
    sub_22093EED0();
    sub_22093EEC0();
    if ((*(unsigned int (**)(int64_t *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v14, 1, TupleTypeMetadata2) == 1)
    {
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v56 = v36;
      *(void *)&long long v57 = v35;
      *((void *)&v57 + 1) = v34;
      uint64_t v58 = v30;
      uint64_t v59 = v29;
      type metadata accessor for Column();
      swift_getWitnessTable();
      sub_22093F3B0();
      sub_22093F360();
      uint64_t v56 = *(void *)&v53[0];
      long long v57 = *(_OWORD *)((char *)v53 + 8);
      sub_2208BE1D0(&v56, v60, v61, v62, v32);
      return;
    }
    int64_t v25 = *v14;
    (*v23)(v9, (char *)v14 + *(int *)(TupleTypeMetadata2 + 48), v63);
    char v26 = v37(v9);
    if (v5)
    {
      (*i)(v9, v63);
      swift_release();
      swift_bridgeObjectRelease();
      sub_22080B6B4(v60, v61, v62);
      return;
    }
    if ((v26 & 1) == 0) {
      continue;
    }
    uint64_t v27 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v27 < v25) {
      goto LABEL_12;
    }
    sub_220869870(v25, v27);
  }
  __break(1u);
LABEL_12:
  __break(1u);
}

uint64_t ColumnSlice.eraseToAnyColumn()@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  long long v9 = *v2;
  uint64_t v5 = *((void *)v2 + 2);
  uint64_t v4 = *((void *)v2 + 3);
  uint64_t v6 = *((void *)v2 + 4);
  a2[3] = a1;
  a2[4] = (uint64_t)&off_26D222690;
  uint64_t v7 = swift_allocObject();
  *a2 = v7;
  *(_OWORD *)(v7 + 16) = v9;
  *(void *)(v7 + 32) = v5;
  *(void *)(v7 + 40) = v4;
  *(void *)(v7 + 48) = v6;
  swift_bridgeObjectRetain();

  return swift_retain();
}

void (*sub_22086B9C8(uint64_t **a1, uint64_t a2))(void *)
{
  uint64_t v4 = (uint64_t *)malloc(0x28uLL);
  *a1 = v4;
  v4[4] = (uint64_t)ColumnSlice.name.modify(v4, a2);
  return sub_220865E74;
}

Swift::Int sub_22086BA28@<X0>(Swift::Int *a1@<X0>, Swift::Int *a2@<X8>)
{
  Swift::Int result = ColumnSlice.index(before:)(*a1);
  *a2 = result;
  return result;
}

Swift::Int __swiftcall ColumnSlice.index(before:)(Swift::Int before)
{
  swift_bridgeObjectRetain();
  swift_retain();
  type metadata accessor for Column();
  swift_getWitnessTable();
  sub_22093F3B0();
  swift_getWitnessTable();
  sub_22093F3C0();
  swift_release();
  swift_bridgeObjectRelease();
  return v2;
}

Swift::Int sub_22086BB38(Swift::Int *a1)
{
  Swift::Int result = ColumnSlice.index(before:)(*a1);
  *a1 = result;
  return result;
}

uint64_t sub_22086BB64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D708];

  return MEMORY[0x270F9E068](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_22086BBE8()
{
  swift_getWitnessTable();

  return sub_22093EA00();
}

uint64_t sub_22086BC6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D708];

  return MEMORY[0x270F9E078](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_22086BCE0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = ColumnSlice.startIndex.getter(a1);
  *a2 = result;
  return result;
}

uint64_t ColumnSlice.startIndex.getter(uint64_t a1)
{
  return sub_22086BD60(a1, MEMORY[0x263F8E728]);
}

uint64_t sub_22086BD20@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = ColumnSlice.endIndex.getter(a1);
  *a2 = result;
  return result;
}

uint64_t ColumnSlice.endIndex.getter(uint64_t a1)
{
  return sub_22086BD60(a1, MEMORY[0x263F8E730]);
}

uint64_t sub_22086BD60(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v5 = *((void *)v2 + 2);
  uint64_t v4 = *((void *)v2 + 3);
  uint64_t v6 = *((void *)v2 + 4);
  long long v10 = *v2;
  uint64_t v11 = v5;
  uint64_t v12 = v4;
  uint64_t v13 = v6;
  swift_bridgeObjectRetain();
  swift_retain();
  type metadata accessor for Column();
  swift_getWitnessTable();
  uint64_t v7 = sub_22093F3B0();
  a2(&v9, v7);
  swift_release();
  swift_bridgeObjectRelease();
  return v9;
}

void (*sub_22086BE18(uint64_t **a1))(void *a1)
{
  Swift::Int v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)sub_22086BE88(v2);
  return sub_22085FBC4;
}

void (*sub_22086BE88(uint64_t *a1))(void *a1)
{
  uint64_t v2 = sub_22093ED30();
  *a1 = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  a1[1] = v3;
  a1[2] = (uint64_t)malloc(*(void *)(v3 + 64));
  ColumnSlice.subscript.getter();
  return sub_22085FCE0;
}

double sub_22086BF48@<D0>(uint64_t a1@<X8>)
{
  return ColumnSlice.subscript.getter(a1);
}

double ColumnSlice.subscript.getter@<D0>(uint64_t a1@<X8>)
{
  swift_bridgeObjectRetain();
  swift_retain();
  type metadata accessor for Column();
  swift_getWitnessTable();
  sub_22093F3B0();
  swift_getWitnessTable();
  sub_22093F3F0();
  swift_release();
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = v3;
  *(void *)(a1 + 16) = v4;
  double result = *(double *)&v5;
  *(_OWORD *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_22086C060()
{
  swift_getWitnessTable();

  return sub_22093EA40();
}

uint64_t ColumnSlice.count.getter()
{
  type metadata accessor for Column();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_getWitnessTable();
  sub_22093F3B0();
  swift_getWitnessTable();
  uint64_t v0 = sub_22093EB20();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

Swift::Int sub_22086C1A8@<X0>(Swift::Int *a1@<X0>, Swift::Int *a2@<X8>)
{
  Swift::Int result = ColumnSlice.index(after:)(*a1);
  *a2 = result;
  return result;
}

Swift::Int __swiftcall ColumnSlice.index(after:)(Swift::Int after)
{
  swift_bridgeObjectRetain();
  swift_retain();
  type metadata accessor for Column();
  swift_getWitnessTable();
  sub_22093F3B0();
  sub_22093F370();
  swift_release();
  swift_bridgeObjectRelease();
  return v2;
}

Swift::Int sub_22086C294(Swift::Int *a1)
{
  Swift::Int result = ColumnSlice.index(after:)(*a1);
  *a1 = result;
  return result;
}

__n128 sub_22086C2C0@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *((void *)v2 + 2);
  __n128 v7 = *(__n128 *)((char *)v2 + 24);
  long long v8 = *v2;
  uint64_t v5 = ColumnSlice.startIndex.getter(a1);
  *(_OWORD *)a2 = v8;
  *(void *)(a2 + 16) = v4;
  __n128 result = v7;
  *(__n128 *)(a2 + 24) = v7;
  *(void *)(a2 + 40) = v5;
  return result;
}

uint64_t sub_22086C31C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F9E108](a1, WitnessTable);
}

uint64_t sub_22086C370()
{
  swift_getWitnessTable();
  uint64_t v0 = sub_22086E948();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ColumnSlice.missingCount.getter()
{
  swift_getWitnessTable();
  sub_22093EA40();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18D20);
  sub_220832008();
  swift_getWitnessTable();
  sub_22093E7E0();
  uint64_t v0 = MEMORY[0x223C69FE0]();
  swift_bridgeObjectRelease();
  return v0;
}

BOOL sub_22086C4D8(Swift::Int *a1)
{
  Swift::Int v1 = *a1;
  swift_bridgeObjectRetain();
  swift_retain();
  type metadata accessor for Column();
  swift_getWitnessTable();
  sub_22093F3B0();
  sub_22093F360();
  swift_release();
  swift_bridgeObjectRelease();
  Swift::Bool v2 = Column.isNil(at:)(v1);
  swift_release();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_22086C5B8()
{
  return ColumnSlice.subscript.getter();
}

uint64_t ColumnSlice.subscript.setter(uint64_t a1, uint64_t a2)
{
  sub_22086E9E4(a1, a2);
  uint64_t v3 = sub_22093ED30();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(a1, v3);
}

void (*ColumnSlice.subscript.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t **a1, char a2)
{
  __n128 v7 = malloc(0x38uLL);
  *a1 = v7;
  v7[1] = a3;
  _OWORD v7[2] = v3;
  *__n128 v7 = a2;
  uint64_t v8 = sub_22093ED30();
  void v7[3] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  void v7[4] = v9;
  size_t v10 = *(void *)(v9 + 64);
  uint64_t v7[5] = malloc(v10);
  v7[6] = malloc(v10);
  ColumnSlice.subscript.getter();
  return sub_22086C78C;
}

void sub_22086C78C(uint64_t **a1, char a2)
{
  Swift::Bool v2 = *a1;
  uint64_t v3 = (void *)(*a1)[5];
  uint64_t v4 = (void *)(*a1)[6];
  uint64_t v5 = (*a1)[3];
  uint64_t v6 = (*a1)[4];
  uint64_t v7 = **a1;
  if (a2)
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[5], v4, v5);
    sub_22086E9E4((uint64_t)v3, v7);
    uint64_t v8 = *(void (**)(void *, uint64_t))(v6 + 8);
    v8(v3, v5);
    v8(v4, v5);
  }
  else
  {
    sub_22086E9E4((*a1)[6], v7);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  free(v4);
  free(v3);

  free(v2);
}

double sub_22086C884@<D0>(uint64_t a1@<X8>)
{
  type metadata accessor for ColumnSlice();
  ColumnSlice.subscript.getter((uint64_t)&v4);
  uint64_t v2 = v5;
  *(_OWORD *)a1 = v4;
  *(void *)(a1 + 16) = v2;
  double result = v6[0];
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v6;
  return result;
}

uint64_t sub_22086C914()
{
  return ColumnSlice.subscript.setter();
}

uint64_t ColumnSlice.subscript.setter()
{
  return swift_bridgeObjectRelease();
}

void (*ColumnSlice.subscript.modify(void *a1, uint64_t a2, uint64_t a3, uint64_t a4))(void **a1, char a2)
{
  uint64_t v9 = malloc(0x48uLL);
  *a1 = v9;
  v9[7] = a4;
  v9[8] = v4;
  v9[5] = a2;
  v9[6] = a3;
  ColumnSlice.subscript.getter((uint64_t)v9);
  return sub_22086CB20;
}

void sub_22086CB20(void **a1, char a2)
{
  uint64_t v2 = *a1;
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    ColumnSlice.subscript.setter();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    ColumnSlice.subscript.setter();
  }

  free(v2);
}

uint64_t sub_22086CBD8(uint64_t a1, uint64_t *a2)
{
  sub_22086E9E4(a1, *a2);
  uint64_t v3 = sub_22093ED30();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(a1, v3);
}

void (*sub_22086CC54(void *a1, uint64_t *a2, uint64_t a3))(void *)
{
  uint64_t v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = ColumnSlice.subscript.modify(v6, *a2, a3);
  return sub_220865E74;
}

uint64_t sub_22086CCC4()
{
  return ColumnSlice.subscript.setter();
}

void (*sub_22086CCD4(void *a1, uint64_t *a2, uint64_t a3))(void *)
{
  uint64_t v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = ColumnSlice.subscript.modify(v6, *a2, a2[1], a3);
  return sub_220865E74;
}

uint64_t sub_22086CD44()
{
  return sub_22093E500();
}

uint64_t static ColumnSlice<A>.== infix(_:_:)(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v73 = a4;
  uint64_t v87 = *(uint64_t (**)(char *, uint64_t, uint64_t))(a3 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](a1);
  uint64_t v72 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v76 = (char *)&v69 - v9;
  uint64_t v10 = sub_22093ED30();
  uint64_t v89 = *(char ***)(v10 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v74 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v75 = (char *)&v69 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v78 = (char *)&v69 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v88 = (char *)&v69 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v92 = (char *)&v69 - v19;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v20 = sub_22093ED30();
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v83 = (char *)&v69 - v21;
  uint64_t v22 = *a1;
  uint64_t v23 = (void (**)(char *, char *, uint64_t))a1[1];
  uint64_t v24 = (void (**)(void, void, uint64_t))a1[2];
  uint64_t v25 = a1[3];
  char v26 = (void (*)(char *, char *, uint64_t))a1[4];
  uint64_t v27 = *a2;
  uint64_t v90 = (uint64_t (**)(char *, uint64_t, uint64_t))a2[1];
  uint64_t v91 = a3;
  uint64_t v28 = a2[2];
  uint64_t v29 = a2[3];
  uint64_t v30 = (void (*)(char *, char *, uint64_t))a2[4];
  uint64_t v80 = v23;
  uint64_t v81 = v22;
  uint64_t v110 = v22;
  uint64_t v111 = v23;
  uint64_t v79 = v24;
  uint64_t v112 = v24;
  uint64_t v113 = v25;
  uint64_t v77 = v25;
  char v86 = v26;
  uint64_t v114 = v26;
  uint64_t v31 = type metadata accessor for ColumnSlice();
  uint64_t v32 = ColumnSlice.name.getter();
  uint64_t v34 = v33;
  uint64_t v82 = v27;
  uint64_t v110 = v27;
  uint64_t v35 = v90;
  uint64_t v111 = (void (**)(char *, char *, uint64_t))v90;
  uint64_t v112 = (void (**)(void, void, uint64_t))v28;
  uint64_t v113 = v29;
  uint64_t v114 = v30;
  uint64_t v85 = v31;
  if (v32 == ColumnSlice.name.getter() && v34 == v36)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v37 = sub_22093F250();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if ((v37 & 1) == 0) {
      return result;
    }
  }
  *(void *)&long long v93 = v81;
  *((void *)&v93 + 1) = v80;
  long long v94 = v79;
  *(void *)&long long v95 = v77;
  *((void *)&v95 + 1) = v86;
  uint64_t v99 = v82;
  uint64_t v100 = (uint64_t (**)(void, uint64_t, void))v35;
  uint64_t v101 = v28;
  uint64_t v102 = v29;
  uint64_t v103 = v30;
  uint64_t v39 = v85;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_22093F2C0();
  long long v93 = v104;
  long long v94 = (void (**)(void, void, uint64_t))v105;
  long long v95 = v106;
  long long v96 = v107;
  uint64_t v97 = v108;
  long long v98 = v109;
  uint64_t v99 = v39;
  uint64_t v100 = (uint64_t (**)(void, uint64_t, void))v39;
  uint64_t v101 = WitnessTable;
  uint64_t v102 = WitnessTable;
  uint64_t v82 = WitnessTable;
  sub_22093EEE0();
  sub_22093EEB0();
  long long v42 = v83;
  uint64_t v41 = TupleTypeMetadata2;
  long long v43 = v88;
  uint64_t v80 = (void (**)(char *, char *, uint64_t))(v89 + 4);
  uint64_t v81 = TupleTypeMetadata2 - 8;
  uint64_t v44 = (void (**)(void, void))(v89 + 2);
  ++v89;
  uint64_t v90 = (uint64_t (**)(char *, uint64_t, uint64_t))((char *)v87 + 48);
  long long v70 = (void (**)(char *, char *, uint64_t))((char *)v87 + 32);
  uint64_t v71 = (void (**)(char *, uint64_t))((char *)v87 + 8);
  uint64_t v77 = v10;
  uint64_t v45 = v78;
  uint64_t v79 = (void (**)(void, void, uint64_t))v44;
  while (1)
  {
    *(void *)&long long v104 = v85;
    *((void *)&v104 + 1) = v85;
    uint64_t v105 = v82;
    *(void *)&long long v106 = v82;
    sub_22093EED0();
    sub_22093EEC0();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 48))(v42, 1, v41) == 1)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      return 1;
    }
    long long v46 = &v42[*(int *)(v41 + 48)];
    long long v47 = *v80;
    uint64_t v48 = v92;
    (*v80)(v92, v42, v10);
    v47(v43, v46, v10);
    uint64_t v49 = v91;
    uint64_t v50 = *v90;
    unint64_t v51 = v48;
    long long v52 = (void (**)(char *, char *, uint64_t))v79;
    LODWORD(v46) = (*v90)(v51, 1, v91);
    uint64_t v53 = *v52;
    (*v52)(v45, v43, v10);
    if (v46 == 1)
    {
      unsigned int v54 = v50(v45, 1, v49);
      long long v55 = *v89;
      if (v54 == 1)
      {
        ((void (*)(char *, uint64_t))v55)(v45, v10);
        ((void (*)(char *, uint64_t))v55)(v43, v10);
        ((void (*)(char *, uint64_t))v55)(v92, v10);
        goto LABEL_7;
      }
    }
    else
    {
      long long v55 = *v89;
    }
    long long v57 = v75;
    uint64_t v56 = v76;
    uint64_t v58 = v45;
    uint64_t v59 = v77;
    uint64_t v88 = v55;
    ((void (*)(char *, uint64_t))v55)(v58, v77);
    v53(v57, v92, v59);
    uint64_t v60 = v91;
    if (v50(v57, 1, v91) == 1) {
      goto LABEL_19;
    }
    char v86 = v53;
    uint64_t v87 = v50;
    uint64_t v61 = v43;
    char v62 = *v70;
    (*v70)(v56, v57, v60);
    long long v57 = v74;
    v86(v74, v61, v59);
    if (v87(v57, 1, v60) == 1)
    {
      (*v71)(v56, v60);
      long long v43 = v61;
LABEL_19:
      uint64_t v67 = v77;
      uint64_t v68 = (void (*)(void, void))v88;
      ((void (*)(char *, uint64_t))v88)(v43, v77);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      v68(v57, v67);
      v68(v92, v67);
      return 0;
    }
    uint64_t v63 = v72;
    v62(v72, v57, v60);
    char v64 = sub_22093E520();
    uint64_t v65 = *v71;
    (*v71)(v63, v60);
    v65(v56, v60);
    uint64_t v66 = (void (*)(void, void))v88;
    ((void (*)(char *, uint64_t))v88)(v61, v59);
    uint64_t v10 = v59;
    if ((v64 & 1) == 0) {
      break;
    }
    long long v43 = v61;
    v66(v92, v59);
    uint64_t v45 = v78;
LABEL_7:
    long long v42 = v83;
    uint64_t v41 = TupleTypeMetadata2;
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  v66(v92, v59);
  return 0;
}

uint64_t sub_22086D5D8(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return static ColumnSlice<A>.== infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a4 - 8));
}

uint64_t ColumnSlice<A>.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v18 = a2;
  uint64_t v20 = *(void *)(a2 + 16);
  uint64_t v3 = sub_22093ED30();
  uint64_t v17 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v16 - v4;
  uint64_t v6 = v2[1];
  uint64_t v8 = v2[2];
  uint64_t v9 = v2[3];
  uint64_t v10 = v2[4];
  *(void *)&long long v24 = *v2;
  uint64_t v7 = v24;
  *((void *)&v24 + 1) = v6;
  *(void *)&long long v19 = v24;
  *((void *)&v19 + 1) = v6;
  uint64_t v25 = v8;
  *(void *)&long long v26 = v9;
  *((void *)&v26 + 1) = v10;
  ColumnSlice.name.getter();
  sub_22093E650();
  swift_bridgeObjectRelease();
  *(void *)&long long v21 = v7;
  *((void *)&v21 + 1) = v6;
  uint64_t v22 = v8;
  *(void *)&long long v23 = v9;
  *((void *)&v23 + 1) = v10;
  type metadata accessor for Column();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_getWitnessTable();
  uint64_t v11 = sub_22093F3B0();
  sub_22093F340();
  uint64_t v12 = v24;
  long long v24 = v19;
  uint64_t v25 = v8;
  *(void *)&long long v26 = v9;
  *((void *)&v26 + 1) = v10;
  uint64_t v27 = v12;
  MEMORY[0x223C6AAB0](&v21, v11);
  if (v12 != (void)v21)
  {
    uint64_t v13 = (void (**)(char *, uint64_t))(v17 + 8);
    do
    {
      sub_22093F400();
      long long v21 = v24;
      uint64_t v22 = v25;
      long long v23 = v26;
      sub_22093F3A0();
      sub_22093ED40();
      (*v13)(v5, v3);
      uint64_t v14 = v27;
      MEMORY[0x223C6AAB0](&v21, v11);
    }
    while (v14 != (void)v21);
  }
  swift_release();
  return swift_bridgeObjectRelease();
}

void ColumnSlice<A>.distinct()(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *((void *)&v48 + 1) = a1;
  uint64_t WitnessTable = a2;
  uint64_t v36 = *(void *)(a1 + 16);
  uint64_t v37 = a3;
  uint64_t v4 = sub_22093ED30();
  uint64_t v38 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v44 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  long long v43 = (char *)&v33 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v33 - v9;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v12 = sub_22093ED30();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (uint64_t *)((char *)&v33 - v13);
  uint64_t v15 = *v3;
  uint64_t v40 = v3[1];
  uint64_t v16 = v40;
  uint64_t v41 = v15;
  uint64_t v17 = v3[3];
  uint64_t v39 = v3[2];
  uint64_t v18 = v3[4];
  uint64_t v67 = WitnessTable;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v68 = sub_22093E240();
  uint64_t v64 = 0;
  uint64_t v65 = 0;
  char v66 = 2;
  uint64_t v60 = v15;
  *(void *)&long long v61 = v16;
  uint64_t v19 = v39;
  *((void *)&v61 + 1) = v39;
  uint64_t v62 = v17;
  uint64_t v63 = v18;
  swift_getWitnessTable();
  uint64_t v20 = MEMORY[0x263F8D708];
  sub_22093EA40();
  long long v56 = v50;
  uint64_t v60 = v41;
  *(void *)&long long v61 = v40;
  *((void *)&v61 + 1) = v19;
  uint64_t v62 = v17;
  uint64_t v34 = v18;
  uint64_t v35 = v17;
  uint64_t v63 = v18;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18D20);
  unint64_t v22 = sub_220832008();
  uint64_t v54 = v20;
  unint64_t v55 = v22;
  uint64_t v23 = swift_getWitnessTable();
  uint64_t v24 = *((void *)&v48 + 1);
  uint64_t v25 = swift_getWitnessTable();
  sub_22093F2C0();
  long long v50 = v57[0];
  long long v51 = v57[1];
  uint64_t v52 = v58;
  long long v53 = v59;
  uint64_t v47 = v23;
  *(void *)&long long v48 = v21;
  uint64_t v60 = v21;
  *(void *)&long long v61 = v24;
  *((void *)&v61 + 1) = v23;
  uint64_t v62 = v25;
  uint64_t v46 = v25;
  sub_22093EEE0();
  sub_22093EEB0();
  uint64_t v45 = TupleTypeMetadata2 - 8;
  long long v26 = (void (**)(char *, char *, uint64_t))(v38 + 32);
  long long v42 = (void (**)(char *, char *, uint64_t))(v38 + 16);
  uint64_t v27 = (void (**)(char *, uint64_t))(v38 + 8);
  while (1)
  {
    while (1)
    {
      v57[0] = v48;
      *(void *)&v57[1] = v47;
      *((void *)&v57[1] + 1) = v46;
      sub_22093EED0();
      sub_22093EEC0();
      if ((*(unsigned int (**)(int64_t *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8)
                                                                              + 48))(v14, 1, TupleTypeMetadata2) == 1)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v60 = v41;
        *(void *)&long long v61 = v40;
        *((void *)&v61 + 1) = v39;
        uint64_t v62 = v35;
        uint64_t v63 = v34;
        type metadata accessor for Column();
        swift_getWitnessTable();
        sub_22093F3B0();
        sub_22093F360();
        uint64_t v60 = *(void *)&v57[0];
        long long v61 = *(_OWORD *)((char *)v57 + 8);
        sub_2208BE1D0(&v60, v64, v65, v66, v37);
        return;
      }
      int64_t v28 = *v14;
      (*v26)(v10, (char *)v14 + *(int *)(TupleTypeMetadata2 + 48), v4);
      swift_bridgeObjectRetain();
      char v29 = sub_22093E9C0();
      swift_bridgeObjectRelease();
      if ((v29 & 1) == 0) {
        break;
      }
      (*v27)(v10, v4);
    }
    uint64_t v30 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v30 < v28) {
      goto LABEL_10;
    }
    sub_220869870(v28, v30);
    (*v42)(v44, v10, v4);
    sub_22093E9D0();
    uint64_t v31 = v43;
    sub_22093E9B0();
    uint64_t v32 = *v27;
    (*v27)(v31, v4);
    v32(v10, v4);
  }
  __break(1u);
LABEL_10:
  __break(1u);
}

uint64_t ColumnSlice<A>.hashValue.getter(uint64_t a1)
{
  uint64_t v3 = *((void *)v1 + 2);
  long long v6 = *v1;
  uint64_t v7 = v3;
  long long v8 = *(long long *)((char *)v1 + 24);
  sub_22093F430();
  ColumnSlice<A>.hash(into:)((uint64_t)v5, a1);
  return sub_22093F490();
}

uint64_t sub_22086DDFC(uint64_t a1)
{
  return ColumnSlice<A>.hashValue.getter(a1);
}

uint64_t sub_22086DE04(uint64_t a1, uint64_t a2)
{
  return ColumnSlice<A>.hash(into:)(a1, a2);
}

uint64_t sub_22086DE0C(uint64_t a1, uint64_t a2)
{
  sub_22093F430();
  ColumnSlice<A>.hash(into:)((uint64_t)v4, a2);
  return sub_22093F490();
}

uint64_t sub_22086DE60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = sub_22093ED30();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v15 - v9;
  uint64_t v11 = *((void *)v3 + 2);
  long long v16 = *v3;
  uint64_t v17 = v11;
  long long v18 = *(long long *)((char *)v3 + 24);
  v15[1] = a1;
  type metadata accessor for Column();
  swift_getWitnessTable();
  sub_22093F3B0();
  swift_getWitnessTable();
  sub_22093F3D0();
  uint64_t v12 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v6) == 1)
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  else
  {
    *(void *)(a3 + 24) = v6;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a3);
    return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v12 + 32))(boxed_opaque_existential_1, v10, v6);
  }
  return result;
}

void *sub_22086E04C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = sub_22093ED30();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v22 - v9;
  uint64_t v11 = *((void *)v3 + 2);
  long long v30 = *v3;
  uint64_t v31 = v11;
  long long v32 = *(long long *)((char *)v3 + 24);
  uint64_t v12 = type metadata accessor for Column();
  _OWORD v22[2] = swift_getWitnessTable();
  uint64_t v23 = sub_22093F3B0();
  sub_22093F360();
  sub_220842FF8(a2, (uint64_t)&v27);
  v22[3] = v12;
  if (v29)
  {
    sub_220835340(&v27, &v30);
    sub_220835350((uint64_t)&v30, (uint64_t)&v27);
    swift_dynamicCast();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v10, 0, 1, v6);
    sub_220869F30((uint64_t)v10, a1);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v30);
  }
  else
  {
    sub_22086A7A4((uint64_t)&v27);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v10, 1, 1, v6);
    sub_220869F30((uint64_t)v10, a1);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  long long v27 = v33;
  uint64_t v28 = v34;
  uint64_t v14 = *((void *)v3 + 1);
  uint64_t v15 = *((void *)v3 + 2);
  uint64_t v16 = *((void *)v3 + 3);
  uint64_t v17 = *((void *)v3 + 4);
  *(void *)&long long v30 = *(void *)v3;
  uint64_t v13 = v30;
  *((void *)&v30 + 1) = v14;
  uint64_t v31 = v15;
  *(void *)&long long v32 = v16;
  *((void *)&v32 + 1) = v17;
  v22[1] = *((void *)&v33 + 1);
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v18 = v23;
  sub_22093F340();
  uint64_t v19 = v24;
  *(void *)&long long v30 = v13;
  *((void *)&v30 + 1) = v14;
  uint64_t v31 = v15;
  *(void *)&long long v32 = v16;
  *((void *)&v32 + 1) = v17;
  uint64_t result = MEMORY[0x223C6AAB0](&v26, v18);
  if (v26 < v19)
  {
    __break(1u);
  }
  else
  {
    uint64_t v24 = v19;
    uint64_t v25 = v26;
    sub_22093F350();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t result = (void *)swift_bridgeObjectRelease();
    uint64_t v21 = v31;
    *uint64_t v3 = v30;
    *((void *)v3 + 2) = v21;
    *(long long *)((char *)v3 + 24) = v32;
  }
  return result;
}

void *sub_22086E370@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v32 = *v3;
  uint64_t v9 = type metadata accessor for Column();
  swift_getWitnessTable();
  uint64_t v10 = sub_22093F3B0();
  sub_22093F360();
  uint64_t v26 = v37;
  uint64_t v28 = v39;
  uint64_t v29 = v38;
  sub_22093F340();
  uint64_t v11 = v31[1];
  uint64_t v33 = v5;
  uint64_t v34 = v6;
  uint64_t v35 = v7;
  uint64_t v36 = v8;
  uint64_t result = MEMORY[0x223C6AAB0](v31, v10);
  if (v31[0] < v11)
  {
    __break(1u);
  }
  else
  {
    BOOL v13 = v11 == v31[0];
    if (v11 == v31[0]) {
      uint64_t v14 = 0;
    }
    else {
      uint64_t v14 = v11;
    }
    if (v11 == v31[0]) {
      uint64_t v15 = 0;
    }
    else {
      uint64_t v15 = v31[0];
    }
    BOOL v16 = a1 == (char *)a2;
    if (a1 == (char *)a2) {
      uint64_t v17 = 0;
    }
    else {
      uint64_t v17 = a1;
    }
    if (a1 == (char *)a2) {
      uint64_t v18 = 0;
    }
    else {
      uint64_t v18 = a2;
    }
    char v19 = 2 * v16;
    uint64_t v20 = sub_22081A46C(v17, v18, 2 * v16, v14, v15, 2 * v13);
    uint64_t v22 = v21;
    char v24 = v23;
    sub_22080B6B4((uint64_t)v17, v18, v19);
    uint64_t v32 = v26;
    uint64_t v33 = v29;
    uint64_t v34 = v28;
    a3[3] = type metadata accessor for DiscontiguousColumnSlice();
    a3[4] = (uint64_t)&off_26D223748;
    uint64_t v25 = swift_allocObject();
    *a3 = v25;
    sub_220866A38((uint64_t)v20, v22, v24, v9, v25 + 16);
    sub_22080B6B4((uint64_t)v20, v22, v24);
    swift_release();
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_22086E560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_22083B5D0(a3, (uint64_t)v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18A90);
  swift_dynamicCast();
  type metadata accessor for Column();
  swift_getWitnessTable();
  sub_22093F3B0();
  swift_getWitnessTable();
  sub_22086EB28();
  swift_release();
  return swift_bridgeObjectRelease();
}

void *sub_22086E66C@<X0>(char *a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t v6 = v4[1];
  uint64_t v8 = v4[2];
  uint64_t v7 = v4[3];
  uint64_t v9 = v4[4];
  uint64_t v29 = *v4;
  uint64_t v10 = type metadata accessor for Column();
  swift_getWitnessTable();
  uint64_t v11 = sub_22093F3B0();
  sub_22093F360();
  uint64_t v22 = v34;
  uint64_t v26 = v36;
  uint64_t v27 = v35;
  sub_22093F340();
  uint64_t v12 = v28[1];
  uint64_t v30 = v6;
  uint64_t v31 = v8;
  uint64_t v32 = v7;
  uint64_t v33 = v9;
  uint64_t result = MEMORY[0x223C6AAB0](v28, v11);
  if (v28[0] < v12)
  {
    __break(1u);
  }
  else
  {
    if (v12 == v28[0]) {
      uint64_t v14 = 0;
    }
    else {
      uint64_t v14 = v12;
    }
    if (v12 == v28[0]) {
      uint64_t v15 = 0;
    }
    else {
      uint64_t v15 = v28[0];
    }
    BOOL v16 = sub_22081A46C(a1, a2, a3, v14, v15, 2 * (v12 == v28[0]));
    uint64_t v18 = v17;
    char v20 = v19;
    uint64_t v29 = v22;
    uint64_t v30 = v27;
    uint64_t v31 = v26;
    a4[3] = type metadata accessor for DiscontiguousColumnSlice();
    a4[4] = (uint64_t)&off_26D223748;
    uint64_t v21 = swift_allocObject();
    *a4 = v21;
    sub_220866A38((uint64_t)v16, v18, v20, v10, v21 + 16);
    sub_22080B6B4((uint64_t)v16, v18, v20);
    swift_release();
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_22086E82C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *v2;
  uint64_t v6 = v2[1];
  uint64_t v8 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v9 = v2[4];
  uint64_t v10 = ColumnSlice.name.getter();
  uint64_t v12 = v11;
  v16[0] = v5;
  v16[1] = v6;
  _OWORD v16[2] = v8;
  void v16[3] = v7;
  v16[4] = v9;
  uint64_t v13 = *(void *)(a1 + 16);
  a2[3] = type metadata accessor for Column();
  a2[4] = &off_26D2223C0;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t WitnessTable = swift_getWitnessTable();
  return Column.init<A>(name:contents:)(v10, v12, (uint64_t)v16, v13, a1, WitnessTable, a2);
}

uint64_t sub_22086E94C(uint64_t a1, void *a2)
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 32))();
  if (v3) {
    *a2 = v3;
  }
  return result;
}

uint64_t sub_22086E984()
{
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

BOOL sub_22086E9C4(Swift::Int *a1)
{
  return sub_22086C4D8(a1);
}

uint64_t sub_22086E9E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22093ED30();
  MEMORY[0x270FA5388](v4);
  (*(void (**)(char *, uint64_t))(v6 + 16))((char *)v8 - v5, a1);
  v8[1] = a2;
  type metadata accessor for Column();
  swift_getWitnessTable();
  sub_22093F3B0();
  swift_getWitnessTable();
  return sub_22093F3E0();
}

uint64_t sub_22086EB28()
{
  return sub_22093F190();
}

uint64_t type metadata accessor for ColumnSlice()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_22086EBE4(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22086EC20(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22086EC5C()
{
  return swift_getWitnessTable();
}

uint64_t sub_22086EC78()
{
  return sub_22086ECF8();
}

uint64_t sub_22086EC90()
{
  return swift_getWitnessTable();
}

uint64_t sub_22086ECAC()
{
  return swift_getWitnessTable();
}

uint64_t sub_22086ECC8()
{
  return sub_22086ECF8();
}

uint64_t sub_22086ECE0()
{
  return sub_22086ECF8();
}

uint64_t sub_22086ECF8()
{
  return swift_getWitnessTable();
}

uint64_t sub_22086ED44()
{
  return swift_getWitnessTable();
}

uint64_t sub_22086ED60()
{
  return swift_getWitnessTable();
}

uint64_t sub_22086ED7C()
{
  return swift_getWitnessTable();
}

uint64_t sub_22086EDCC()
{
  return 8;
}

void *sub_22086EDD8(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_22086EDE8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = *a3;
  type metadata accessor for ColumnSlice();
  return sub_22086E9E4(a1, v4);
}

uint64_t sub_22086EE38()
{
  return 8;
}

uint64_t sub_22086EE4C()
{
  return 8;
}

uint64_t sub_22086EE58()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_22086EE94(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *sub_22086EEDC(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_22086EF54(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AnyColumn(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnyColumn(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_22086F034()
{
  swift_bridgeObjectRelease();
  swift_release();
  sub_22080B6B4(*(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned char *)(v0 + 56));

  return MEMORY[0x270FA0238](v0, 57, 7);
}

uint64_t PackedOptionalsBuffer.rawBuffer.getter()
{
  return *(void *)v0;
}

uint64_t static PackedOptionalsBuffer.headerSize.getter()
{
  return 64;
}

uint64_t static Alignment.roundToAligment(_:)(uint64_t result)
{
  uint64_t v1 = result - 1;
  if (__OFSUB__(result, 1))
  {
    __break(1u);
  }
  else
  {
    if (v1 < 0) {
      uint64_t v1 = result + 62;
    }
    uint64_t v2 = v1 >> 6;
    if ((unint64_t)(v2 - 0x1FFFFFFFFFFFFFFLL) >> 58 == 63) {
      return (v2 << 6) + 64;
    }
  }
  __break(1u);
  return result;
}

unint64_t static PackedOptionalsBuffer.nilBitmapSize(capacity:)(unint64_t result)
{
  uint64_t v1 = result + 7;
  if (__OFADD__(result, 7))
  {
    __break(1u);
  }
  else
  {
    if (v1 < 0) {
      uint64_t v1 = result + 14;
    }
    uint64_t v2 = v1 >> 3;
    uint64_t v4 = v2 - 1;
    BOOL v3 = v2 < 1;
    uint64_t v5 = v2 + 62;
    if (!v3) {
      uint64_t v5 = v4;
    }
    return (v5 & 0xFFFFFFFFFFFFFFC0) + 64;
  }
  return result;
}

unint64_t PackedOptionalsBuffer.nilBitmapSize.getter()
{
  if (!*v0) {
    goto LABEL_7;
  }
  uint64_t v1 = **v0;
  BOOL v2 = __OFADD__(v1, 7);
  uint64_t v3 = v1 + 7;
  if (v2)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v4 = v3 / 8;
  uint64_t v6 = v4 - 1;
  BOOL v5 = v4 < 1;
  uint64_t v7 = v4 + 62;
  if (!v5) {
    uint64_t v7 = v6;
  }
  return (v7 & 0xFFFFFFFFFFFFFFC0) + 64;
}

uint64_t PackedOptionalsBuffer.capacity.getter()
{
  if (*(void *)v0) {
    return **(void **)v0;
  }
  __break(1u);
  return result;
}

uint64_t PackedOptionalsBuffer.headerAddress.getter()
{
  uint64_t result = *v0;
  if (!*v0) {
    __break(1u);
  }
  return result;
}

void *PackedOptionalsBuffer.nilBitmapBuffer.getter()
{
  uint64_t v1 = (void *)*v0;
  if (*v0)
  {
    if (!__OFADD__(*v1, 7)) {
      return v1 + 8;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t PackedOptionalsBuffer.firstElementAddress.getter()
{
  uint64_t v1 = (void *)*v0;
  if (!*v0) {
    goto LABEL_9;
  }
  uint64_t v2 = *v1 + 7;
  if (__OFADD__(*v1, 7))
  {
    __break(1u);
LABEL_9:
    __break(1u);
    return result;
  }
  if (v2 < 0) {
    uint64_t v2 = *v1 + 14;
  }
  uint64_t v3 = v2 >> 3;
  uint64_t v5 = v3 - 1;
  BOOL v4 = v3 < 1;
  uint64_t v6 = v3 + 62;
  if (!v4) {
    uint64_t v6 = v5;
  }
  return (unint64_t)v1 + (v6 & 0xFFFFFFFFFFFFFFC0) + 128;
}

uint64_t PackedOptionalsBuffer.elementsBuffer.getter()
{
  if (*v0)
  {
    if (!__OFADD__(**v0, 7)) {
      return sub_22093ED60();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t PackedOptionalsBuffer.Header.capacity.getter()
{
  return *(void *)v0;
}

uint64_t PackedOptionalsBuffer.count.getter()
{
  if (*(void *)v0) {
    return *(void *)(*(void *)v0 + 8);
  }
  __break(1u);
  return result;
}

uint64_t sub_22086F27C(uint64_t *a1)
{
  return PackedOptionalsBuffer.count.setter(*a1);
}

uint64_t PackedOptionalsBuffer.count.setter(uint64_t result)
{
  if (*(void *)v1) {
    *(void *)(*(void *)v1 + 8) = result;
  }
  else {
    __break(1u);
  }
  return result;
}

uint64_t PackedOptionalsBuffer.Header.count.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t PackedOptionalsBuffer.Header.count.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

void *PackedOptionalsBuffer.count.modify(void *result)
{
  uint64_t v2 = *v1;
  result[1] = *v1;
  if (v2)
  {
    void *result = *(void *)(v2 + 8);
    return sub_22086F310;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_22086F310(void *result)
{
  *(void *)(result[1] + 8) = *result;
  return result;
}

uint64_t PackedOptionalsBuffer.nilCount.getter()
{
  if (*(void *)v0) {
    return *(void *)(*(void *)v0 + 16);
  }
  __break(1u);
  return result;
}

uint64_t sub_22086F330(uint64_t *a1)
{
  return PackedOptionalsBuffer.nilCount.setter(*a1);
}

uint64_t PackedOptionalsBuffer.nilCount.setter(uint64_t result)
{
  if (*(void *)v1) {
    *(void *)(*(void *)v1 + 16) = result;
  }
  else {
    __break(1u);
  }
  return result;
}

uint64_t PackedOptionalsBuffer.Header.nilCount.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t PackedOptionalsBuffer.Header.nilCount.setter(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

void *PackedOptionalsBuffer.nilCount.modify(void *result)
{
  uint64_t v2 = *v1;
  result[1] = *v1;
  if (v2)
  {
    void *result = *(void *)(v2 + 16);
    return sub_22086F3C4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_22086F3C4(void *result)
{
  *(void *)(result[1] + 16) = *result;
  return result;
}

uint64_t PackedOptionalsBuffer.init(rawBuffer:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

void static PackedOptionalsBuffer.allocate(capacity:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3 = a1 + 7;
  if (__OFADD__(a1, 7))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v6 = a1 + 14;
  if (v3 >= 0) {
    uint64_t v6 = a1 + 7;
  }
  uint64_t v7 = v6 >> 3;
  uint64_t v9 = v7 - 1;
  BOOL v8 = v7 < 1;
  uint64_t v10 = v7 + 62;
  if (!v8) {
    uint64_t v10 = v9;
  }
  uint64_t v11 = *(void *)(*(void *)(a2 - 8) + 72);
  uint64_t v12 = v11 * a1;
  if ((unsigned __int128)(v11 * (__int128)a1) >> 64 != (v11 * a1) >> 63) {
    goto LABEL_13;
  }
  unint64_t v13 = v10 & 0xFFFFFFFFFFFFFFC0;
  unint64_t v14 = (v10 & 0xFFFFFFFFFFFFFFC0) + 128;
  unint64_t v15 = v14 + v12;
  if (__OFADD__(v14, v12))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v16 = swift_slowAlloc();
  v18[0] = a1;
  uint64_t v17 = type metadata accessor for PackedOptionalsBuffer.Header();
  v18[1] = 0;
  void v18[2] = 0;
  (*(void (**)(uint64_t, void *, uint64_t))(*(void *)(v17 - 8) + 32))(v16, v18, v17);
  if (v3 < -1015)
  {
LABEL_15:
    __break(1u);
    return;
  }
  if (v13 != -64) {
    bzero((void *)(v16 + 64), v13 + 64);
  }
  *a3 = v16;
  a3[1] = v16 + v15;
}

uint64_t static Alignment.bufferAlignment.getter()
{
  return 64;
}

uint64_t type metadata accessor for PackedOptionalsBuffer.Header()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t PackedOptionalsBuffer.Header.init(capacity:count:nilCount:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

void PackedOptionalsBuffer.init(copying:capacity:)(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v54 = a3;
  uint64_t v7 = *(void *)(a3 - 8);
  BOOL v8 = (uint64_t *)MEMORY[0x270FA5388](a1);
  uint64_t v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v8;
  if (!*v8) {
    goto LABEL_51;
  }
  if (*(void *)v11 > a2)
  {
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v12 = a2 + 7;
  if (__OFADD__(a2, 7))
  {
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  if (v12 < 0) {
    uint64_t v12 = a2 + 14;
  }
  uint64_t v13 = v12 >> 3;
  uint64_t v15 = v13 - 1;
  BOOL v14 = v13 < 1;
  uint64_t v16 = v13 + 62;
  if (!v14) {
    uint64_t v16 = v15;
  }
  uint64_t v17 = *(void *)(v7 + 72);
  uint64_t v18 = v17 * a2;
  uint64_t v55 = v17;
  if ((unsigned __int128)(v17 * (__int128)a2) >> 64 != (v17 * a2) >> 63) {
    goto LABEL_44;
  }
  unint64_t v19 = v16 & 0xFFFFFFFFFFFFFFC0;
  unint64_t v20 = (v16 & 0xFFFFFFFFFFFFFFC0) + 128;
  unint64_t v21 = v20 + v18;
  if (__OFADD__(v20, v18))
  {
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  uint64_t v22 = swift_slowAlloc();
  *(void *)&long long v58 = v22;
  *((void *)&v58 + 1) = v22 + v21;
  if (!v22)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  uint64_t v23 = v22;
  uint64_t v56 = a2;
  long long v57 = *(_OWORD *)(v11 + 8);
  uint64_t v24 = type metadata accessor for PackedOptionalsBuffer.Header();
  (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v24 - 8) + 32))(v23, &v56, v24);
  long long v53 = v58;
  uint64_t v25 = v58;
  if (!(void)v58)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  uint64_t v26 = PackedOptionalsBuffer.nilBitmapBuffer.getter();
  if (!v26)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  uint64_t v27 = (void *)*a1;
  if (!*a1)
  {
LABEL_55:
    __break(1u);
    return;
  }
  uint64_t v28 = *v27 + 7;
  if (__OFADD__(*v27, 7)) {
    goto LABEL_46;
  }
  if (v28 < 0) {
    uint64_t v28 = *v27 + 14;
  }
  uint64_t v29 = v28 >> 3;
  uint64_t v30 = v29 - 1;
  BOOL v14 = v29 < 1;
  uint64_t v31 = v29 + 62;
  if (!v14) {
    uint64_t v31 = v30;
  }
  memcpy((void *)(v25 + 64), v26, (v31 & 0xFFFFFFFFFFFFFFC0) + 64);
  uint64_t v32 = *v27 + 7;
  BOOL v33 = __OFADD__(*v27, 7);
  if (__OFADD__(*v27, 7)) {
    goto LABEL_47;
  }
  uint64_t v34 = *v27 + 14;
  if (v32 >= 0) {
    uint64_t v34 = *v27 + 7;
  }
  uint64_t v35 = v34 >> 3;
  uint64_t v36 = v35 - 1;
  uint64_t v37 = v35 + 62;
  if (v36 >= 0) {
    uint64_t v37 = v36;
  }
  unint64_t v38 = v37 & 0xFFFFFFFFFFFFFFC0;
  if ((uint64_t)(v19 - v38) < 0) {
    goto LABEL_48;
  }
  if (v19 != v38)
  {
    bzero((void *)(v25 + 64 + v38 + 64), v19 - v38);
    uint64_t v32 = *v27 + 7;
    BOOL v33 = __OFADD__(*v27, 7);
  }
  if (v33) {
    goto LABEL_49;
  }
  uint64_t v39 = v32 / 8;
  uint64_t v40 = v39 - 1;
  BOOL v14 = v39 < 1;
  uint64_t v41 = v39 + 62;
  if (!v14) {
    uint64_t v41 = v40;
  }
  uint64_t v42 = *(void *)(v25 + 8);
  if (v42 < 0) {
    goto LABEL_50;
  }
  uint64_t v52 = a4;
  if (v42)
  {
    unint64_t v43 = 0;
    unint64_t v44 = v19;
    uint64_t v45 = (void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    uint64_t v46 = (void (**)(uint64_t, char *, uint64_t))(v7 + 32);
    uint64_t v47 = (char *)v27 + (v41 & 0xFFFFFFFFFFFFFFC0);
    uint64_t v48 = v25 + v44;
    uint64_t v49 = 128;
    do
    {
      if ((*((unsigned __int8 *)PackedOptionalsBuffer.nilBitmapBuffer.getter() + (v43 >> 3)) >> (v43 & 7)))
      {
        uint64_t v50 = v54;
        (*v45)(v10, (uint64_t)&v47[v49], v54);
        (*v46)(v48 + v49, v10, v50);
      }
      ++v43;
      v49 += v55;
    }
    while (v42 != v43);
  }
  *uint64_t v52 = v53;
}

uint64_t type metadata accessor for PackedOptionalsBuffer()
{
  return __swift_instantiateGenericMetadata();
}

Swift::Bool __swiftcall PackedOptionalsBuffer.isNil(at:)(Swift::Int at)
{
  int64_t v2 = at - (v1 & 0xFFFFFFFFFFFFFFF8);
  int v3 = *((unsigned __int8 *)PackedOptionalsBuffer.nilBitmapBuffer.getter() + at / 8);
  int v4 = 1 << v2;
  if (v2 < 0) {
    int v4 = 0;
  }
  return (v4 & v3) == 0;
}

void PackedOptionalsBuffer.init(moving:capacity:)(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  int v4 = (void *)*a1;
  if (!*a1) {
    goto LABEL_54;
  }
  if (*v4 > a2)
  {
    __break(1u);
    goto LABEL_45;
  }
  uint64_t v7 = a2 + 7;
  if (__OFADD__(a2, 7))
  {
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  if (v7 < 0) {
    uint64_t v7 = a2 + 14;
  }
  uint64_t v8 = v7 >> 3;
  uint64_t v10 = v8 - 1;
  BOOL v9 = v8 < 1;
  uint64_t v11 = v8 + 62;
  if (!v9) {
    uint64_t v11 = v10;
  }
  uint64_t v12 = *(void *)(*(void *)(a3 - 8) + 72);
  uint64_t v13 = v12 * a2;
  if ((unsigned __int128)(v12 * (__int128)a2) >> 64 != (v12 * a2) >> 63) {
    goto LABEL_46;
  }
  unint64_t v14 = v11 & 0xFFFFFFFFFFFFFFC0;
  unint64_t v15 = (v11 & 0xFFFFFFFFFFFFFFC0) + 128;
  unint64_t v16 = v15 + v13;
  if (__OFADD__(v15, v13))
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  uint64_t v18 = swift_slowAlloc();
  *(void *)&long long v42 = v18;
  *((void *)&v42 + 1) = v18 + v16;
  if (!v18)
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  uint64_t v19 = v18;
  uint64_t v40 = a2;
  long long v41 = *(_OWORD *)(v4 + 1);
  uint64_t v20 = type metadata accessor for PackedOptionalsBuffer.Header();
  (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v20 - 8) + 32))(v19, &v40, v20);
  long long v39 = v42;
  uint64_t v21 = v42;
  if (!(void)v42)
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  uint64_t v22 = PackedOptionalsBuffer.nilBitmapBuffer.getter();
  if (!v22)
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  uint64_t v23 = (void *)*a1;
  if (*a1)
  {
    uint64_t v24 = *v23 + 7;
    if (!__OFADD__(*v23, 7))
    {
      if (v24 < 0) {
        uint64_t v24 = *v23 + 14;
      }
      uint64_t v25 = v24 >> 3;
      uint64_t v26 = v25 - 1;
      BOOL v9 = v25 < 1;
      uint64_t v27 = v25 + 62;
      if (!v9) {
        uint64_t v27 = v26;
      }
      memcpy((void *)(v21 + 64), v22, (v27 & 0xFFFFFFFFFFFFFFC0) + 64);
      BOOL v28 = __OFADD__(*v23, 7);
      if (!__OFADD__(*v23, 7))
      {
        uint64_t v29 = *v23 + 14;
        if (*v23 + 7 >= 0) {
          uint64_t v29 = *v23 + 7;
        }
        uint64_t v30 = v29 >> 3;
        uint64_t v31 = v30 - 1;
        uint64_t v32 = v30 + 62;
        if (v31 >= 0) {
          uint64_t v32 = v31;
        }
        unint64_t v33 = v32 & 0xFFFFFFFFFFFFFFC0;
        if ((uint64_t)(v14 - v33) >= 0)
        {
          if (v14 != v33)
          {
            bzero((void *)(v21 + 64 + v33 + 64), v14 - v33);
            BOOL v28 = __OFADD__(*v23, 7);
          }
          if (!v28)
          {
            uint64_t v34 = *(void *)(v21 + 8);
            if ((v34 & 0x8000000000000000) == 0)
            {
              if (v34)
              {
                unint64_t v35 = 0;
                uint64_t v36 = 128;
                do
                {
                  if ((*((unsigned __int8 *)PackedOptionalsBuffer.nilBitmapBuffer.getter() + (v35 >> 3)) >> (v35 & 7))) {
                    sub_22093ED20();
                  }
                  ++v35;
                  v36 += v12;
                }
                while (v34 != v35);
              }
              uint64_t v37 = PackedOptionalsBuffer.nilBitmapBuffer.getter();
              if (!v37) {
                goto LABEL_43;
              }
              if ((v38 & 0x8000000000000000) == 0)
              {
                if (v38) {
                  bzero(v37, v38);
                }
LABEL_43:
                _OWORD v23[2] = *(void *)(v21 + 8);
                *a4 = v39;
                return;
              }
              goto LABEL_53;
            }
LABEL_52:
            __break(1u);
LABEL_53:
            __break(1u);
LABEL_54:
            __break(1u);
            goto LABEL_55;
          }
LABEL_51:
          __break(1u);
          goto LABEL_52;
        }
LABEL_50:
        __break(1u);
        goto LABEL_51;
      }
LABEL_49:
      __break(1u);
      goto LABEL_50;
    }
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
LABEL_58:
  __break(1u);
}

Swift::Void __swiftcall PackedOptionalsBuffer.deallocate()()
{
  uint64_t v1 = (void *)*v0;
  if (!*v0) {
    goto LABEL_19;
  }
  if (__OFADD__(*v1, 7))
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v2 = v1[1];
  if (v2 < 0)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v2)
  {
    for (unint64_t i = 0; i != v2; ++i)
    {
      if ((*((unsigned __int8 *)PackedOptionalsBuffer.nilBitmapBuffer.getter() + (i >> 3)) >> (i & 7))) {
        sub_22093ED10();
      }
    }
  }
  if (!PackedOptionalsBuffer.nilBitmapBuffer.getter()) {
    goto LABEL_20;
  }
  if ((uint64_t)*v1 >= 0x7FFFFFFFFFFFFFF9) {
    goto LABEL_18;
  }
  type metadata accessor for PackedOptionalsBuffer.Header();
  sub_22093ED10();
  if (*v0)
  {
LABEL_21:
    JUMPOUT(0x223C6B140);
  }
}

Swift::Void __swiftcall PackedOptionalsBuffer.setNil(at:)(Swift::Int at)
{
  Swift::Int v2 = at / 8;
  int64_t v3 = at - (v1 & 0xFFFFFFFFFFFFFFF8);
  int v4 = PackedOptionalsBuffer.nilBitmapBuffer.getter();
  if (v3 >= 0) {
    char v5 = ~(1 << v3);
  }
  else {
    char v5 = -1;
  }
  *((unsigned char *)v4 + v2) &= v5;
}

Swift::Void __swiftcall PackedOptionalsBuffer.setNonNil(at:)(Swift::Int at)
{
  Swift::Int v2 = at / 8;
  int64_t v3 = at - (v1 & 0xFFFFFFFFFFFFFFF8);
  int v4 = PackedOptionalsBuffer.nilBitmapBuffer.getter();
  int v5 = 1 << v3;
  if (v3 < 0) {
    LOBYTE(v5) = 0;
  }
  *((unsigned char *)v4 + v2) |= v5;
}

Swift::Void __swiftcall PackedOptionalsBuffer.resize(by:)(Swift::Int by)
{
  Swift::Int v2 = (void *)*v1;
  if (!*v1) {
    goto LABEL_35;
  }
  uint64_t v3 = *v2 + 7;
  if (__OFADD__(*v2, 7)) {
    goto LABEL_29;
  }
  if (v3 < 0) {
    uint64_t v3 = *v2 + 14;
  }
  uint64_t v4 = v3 >> 3;
  uint64_t v6 = v4 - 1;
  BOOL v5 = v4 < 1;
  uint64_t v7 = v4 + 62;
  if (!v5) {
    uint64_t v7 = v6;
  }
  if ((by & 0x8000000000000000) == 0)
  {
    uint64_t v8 = v2[2];
    BOOL v9 = __OFADD__(v8, by);
    Swift::Int v10 = v8 + by;
    if (v9) {
      goto LABEL_31;
    }
    long long v2[2] = v10;
    goto LABEL_13;
  }
  Swift::Int v11 = v2[1];
  Swift::Int v12 = v11 + by;
  if (__OFADD__(v11, by)) {
    goto LABEL_32;
  }
  if (v11 < v12)
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
    return;
  }
  if (v12 != v11)
  {
    if (v12 < v11)
    {
      while (1)
      {
        uint64_t v16 = v12 - (v7 & 0xFFFFFFFFFFFFFFF8);
        int v17 = *((unsigned __int8 *)PackedOptionalsBuffer.nilBitmapBuffer.getter() + v12 / 8);
        if (v16 >= 0) {
          int v18 = 1 << v16;
        }
        else {
          int v18 = 0;
        }
        if ((v18 & v17) != 0)
        {
          sub_22093ED10();
          unint64_t v15 = PackedOptionalsBuffer.nilBitmapBuffer.getter();
          if (v16 >= 0) {
            LOBYTE(v7) = ~(1 << v16);
          }
          else {
            LOBYTE(v7) = -1;
          }
          *((unsigned char *)v15 + v12 / 8) &= v7;
        }
        else
        {
          uint64_t v19 = v2[2];
          BOOL v9 = __OFSUB__(v19, 1);
          uint64_t v7 = v19 - 1;
          if (v9)
          {
            __break(1u);
LABEL_29:
            __break(1u);
LABEL_30:
            __break(1u);
LABEL_31:
            __break(1u);
LABEL_32:
            __break(1u);
            goto LABEL_33;
          }
          long long v2[2] = v7;
        }
        if (v11 == ++v12) {
          goto LABEL_13;
        }
      }
    }
    goto LABEL_34;
  }
LABEL_13:
  uint64_t v13 = v2[1];
  BOOL v9 = __OFADD__(v13, by);
  Swift::Int v14 = v13 + by;
  if (v9) {
    goto LABEL_30;
  }
  v2[1] = v14;
}

uint64_t (*PackedOptionalsBuffer.Header.nilCount.modify())(void)
{
  return nullsub_5;
}

uint64_t (*PackedOptionalsBuffer.Header.count.modify())(void)
{
  return nullsub_5;
}

Swift::Void __swiftcall PackedOptionalsBuffer.clear(at:)(Swift::Int at)
{
  Swift::Int v3 = at / 8;
  int64_t v4 = at - (v1 & 0xFFFFFFFFFFFFFFF8);
  int v5 = *((unsigned __int8 *)PackedOptionalsBuffer.nilBitmapBuffer.getter() + at / 8);
  if (v4 >= 0) {
    int v6 = 1 << v4;
  }
  else {
    int v6 = 0;
  }
  if ((v6 & v5) != 0)
  {
    uint64_t v7 = (void *)*v2;
    if (*v2)
    {
      if (__OFADD__(*v7, 7))
      {
        __break(1u);
      }
      else
      {
        sub_22093ED10();
        uint64_t v8 = PackedOptionalsBuffer.nilBitmapBuffer.getter();
        if (v4 >= 0) {
          char v9 = ~(1 << v4);
        }
        else {
          char v9 = -1;
        }
        *((unsigned char *)v8 + v3) &= v9;
        uint64_t v10 = v7[2];
        BOOL v11 = __OFADD__(v10, 1);
        uint64_t v12 = v10 + 1;
        if (!v11)
        {
          _OWORD v7[2] = v12;
          return;
        }
      }
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t PackedOptionalsBuffer.append(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = sub_22093ED30();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  char v9 = (char *)&v36 - v8;
  uint64_t v10 = *(void *)(v4 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v7);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  unint64_t v15 = (char *)&v36 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v4) == 1)
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    int v17 = (void *)*v2;
    if (!*v2)
    {
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
    uint64_t v18 = v17[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (v19) {
      goto LABEL_19;
    }
    void v17[2] = v20;
LABEL_16:
    uint64_t v34 = v17[1];
    BOOL v19 = __OFADD__(v34, 1);
    uint64_t v35 = v34 + 1;
    if (!v19)
    {
      v17[1] = v35;
      return result;
    }
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v21 = *(uint64_t (**)(char *, char *, uint64_t))(v10 + 32);
  uint64_t result = v21(v15, v9, v4);
  int v17 = (void *)*v2;
  if (*v2)
  {
    uint64_t v22 = *v17 + 7;
    if (__OFADD__(*v17, 7))
    {
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    if (v22 < 0) {
      uint64_t v22 = *v17 + 14;
    }
    uint64_t v23 = v22 >> 3;
    uint64_t v25 = v23 - 1;
    BOOL v24 = v23 < 1;
    uint64_t v26 = v23 + 62;
    if (!v24) {
      uint64_t v26 = v25;
    }
    unint64_t v27 = (unint64_t)v17 + (v26 & 0xFFFFFFFFFFFFFFC0) + *(void *)(v10 + 72) * v17[1] + 128;
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v4);
    v21((char *)v27, v13, v4);
    uint64_t v28 = v17[1];
    uint64_t v29 = v28 + 7;
    if (v28 >= 0) {
      uint64_t v29 = v17[1];
    }
    uint64_t v30 = v29 >> 3;
    uint64_t v31 = v28 - (v29 & 0xFFFFFFFFFFFFFFF8);
    uint64_t v32 = PackedOptionalsBuffer.nilBitmapBuffer.getter();
    int v33 = 1 << v31;
    if (v31 < 0) {
      LOBYTE(v33) = 0;
    }
    *((unsigned char *)v32 + v30) |= v33;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v4);
    goto LABEL_16;
  }
LABEL_22:
  __break(1u);
  return result;
}

Swift::Void __swiftcall PackedOptionalsBuffer.swapAt(_:_:)(Swift::Int a1, Swift::Int a2)
{
  unint64_t v4 = *v3;
  if (!*v3) {
    goto LABEL_28;
  }
  if (__OFADD__(*(void *)v4, 7))
  {
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    MEMORY[0x270F9FB08](a1, a2, v2);
    return;
  }
  Swift::Int v5 = a2;
  Swift::Int v6 = a1;
  uint64_t v27 = v2;
  uint64_t v7 = (*(void *)v4 + 7) / 8;
  uint64_t v9 = v7 - 1;
  BOOL v8 = v7 < 1;
  uint64_t v10 = v7 + 62;
  if (!v8) {
    uint64_t v10 = v9;
  }
  unint64_t v11 = (v10 & 0xFFFFFFFFFFFFFFC0) + v4 + 128;
  int64_t v12 = a1 - (v4 & 0xFFFFFFFFFFFFFFF8);
  Swift::Int v26 = a1 / 8;
  LOBYTE(v13) = *((unsigned char *)PackedOptionalsBuffer.nilBitmapBuffer.getter() + a1 / 8);
  if (v12 >= 0) {
    char v14 = 1 << v12;
  }
  else {
    char v14 = 0;
  }
  int v15 = (v13 & v14);
  uint64_t v16 = v5 - (v13 & 0xFFFFFFFFFFFFFFF8);
  char v17 = *((unsigned char *)PackedOptionalsBuffer.nilBitmapBuffer.getter() + v5 / 8);
  if (v16 >= 0) {
    int v18 = 1 << v16;
  }
  else {
    LOBYTE(v18) = 0;
  }
  char v19 = v17 & v18;
  if (v15)
  {
    uint64_t v20 = *(void *)(*(void *)(*(void *)(v27 + 16) - 8) + 72);
    a2 = v11 + v20 * v6;
    if (v19)
    {
      a1 = v11 + v20 * v5;
      uint64_t v2 = *(void *)(v27 + 16);
      goto LABEL_29;
    }
    sub_22093ED20();
    uint64_t v25 = PackedOptionalsBuffer.nilBitmapBuffer.getter();
    *((unsigned char *)v25 + v5 / 8) |= v18;
    uint64_t v22 = PackedOptionalsBuffer.nilBitmapBuffer.getter();
    if (v12 >= 0) {
      char v23 = ~(1 << v12);
    }
    else {
      char v23 = -1;
    }
    uint64_t v24 = v26;
  }
  else
  {
    if (!v19) {
      return;
    }
    sub_22093ED20();
    uint64_t v21 = PackedOptionalsBuffer.nilBitmapBuffer.getter();
    *((unsigned char *)v21 + v26) |= v14;
    uint64_t v22 = PackedOptionalsBuffer.nilBitmapBuffer.getter();
    if (v16 >= 0) {
      char v23 = ~(1 << v16);
    }
    else {
      char v23 = -1;
    }
    uint64_t v24 = v5 / 8;
  }
  *((unsigned char *)v22 + v24) &= v23;
}

Swift::Void __swiftcall PackedOptionalsBuffer.move(from:to:)(Swift::Int from, Swift::Int to)
{
  Swift::Int v3 = (void *)*v2;
  if (!*v2) {
    goto LABEL_29;
  }
  if (__OFADD__(*v3, 7))
  {
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    return;
  }
  uint64_t v5 = (*v3 + 7) / 8;
  uint64_t v7 = v5 - 1;
  BOOL v6 = v5 < 1;
  uint64_t v8 = v5 + 62;
  if (!v6) {
    uint64_t v8 = v7;
  }
  uint64_t v28 = (void *)*v2;
  int64_t v9 = from - (v8 & 0xFFFFFFFFFFFFFFF8);
  Swift::Int v29 = from / 8;
  LODWORD(v10) = *((unsigned __int8 *)PackedOptionalsBuffer.nilBitmapBuffer.getter() + from / 8);
  if (v9 >= 0) {
    int v11 = 1 << v9;
  }
  else {
    int v11 = 0;
  }
  int v12 = v11 & v10;
  int64_t v13 = to - (v10 & 0xFFFFFFFFFFFFFFF8);
  Swift::Int v27 = to / 8;
  char v14 = *((unsigned char *)PackedOptionalsBuffer.nilBitmapBuffer.getter() + to / 8);
  if (v13 >= 0) {
    int v15 = 1 << v13;
  }
  else {
    LOBYTE(v15) = 0;
  }
  LOBYTE(v16) = v14 & v15;
  if (v12)
  {
    if (v9 >= 0) {
      char v17 = ~(1 << v9);
    }
    else {
      char v17 = -1;
    }
    if (!(_BYTE)v16)
    {
      sub_22093ED20();
      uint64_t v25 = PackedOptionalsBuffer.nilBitmapBuffer.getter();
      *((unsigned char *)v25 + v29) &= v17;
      Swift::Int v26 = PackedOptionalsBuffer.nilBitmapBuffer.getter();
      *((unsigned char *)v26 + v27) |= v15;
      return;
    }
    sub_22093ED00();
    int v18 = PackedOptionalsBuffer.nilBitmapBuffer.getter();
    *((unsigned char *)v18 + v29) &= v17;
    char v19 = v28;
    uint64_t v20 = v28[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v16 = v20 + 1;
    if (!v21)
    {
LABEL_24:
      void v19[2] = v16;
      return;
    }
    __break(1u);
  }
  if ((_BYTE)v16)
  {
    sub_22093ED10();
    uint64_t v22 = PackedOptionalsBuffer.nilBitmapBuffer.getter();
    if (v13 >= 0) {
      char v23 = ~(1 << v13);
    }
    else {
      char v23 = -1;
    }
    *((unsigned char *)v22 + v27) &= v23;
    char v19 = v28;
    uint64_t v24 = v28[2];
    BOOL v21 = __OFADD__(v24, 1);
    uint64_t v16 = v24 + 1;
    if (!v21) {
      goto LABEL_24;
    }
    goto LABEL_28;
  }
}

uint64_t PackedOptionalsBuffer.startIndex.getter()
{
  return 0;
}

Swift::Int __swiftcall PackedOptionalsBuffer.index(after:)(Swift::Int after)
{
  BOOL v1 = __OFADD__(after, 1);
  Swift::Int result = after + 1;
  if (v1) {
    __break(1u);
  }
  return result;
}

Swift::Int __swiftcall PackedOptionalsBuffer.index(before:)(Swift::Int before)
{
  BOOL v1 = __OFSUB__(before, 1);
  Swift::Int result = before - 1;
  if (v1) {
    __break(1u);
  }
  return result;
}

Swift::Int __swiftcall PackedOptionalsBuffer.distance(from:to:)(Swift::Int from, Swift::Int to)
{
  BOOL v2 = __OFSUB__(to, from);
  Swift::Int result = to - from;
  if (v2) {
    __break(1u);
  }
  return result;
}

BOOL PackedOptionalsBuffer.isEmpty.getter()
{
  if (*(void *)v0) {
    return *(void *)(*(void *)v0 + 8) == 0;
  }
  __break(1u);
  return result;
}

uint64_t _s11TabularData21PackedOptionalsBufferV8endIndexSivg_0()
{
  if (*(void *)v0) {
    return *(void *)(*(void *)v0 + 8);
  }
  __break(1u);
  return result;
}

void *PackedOptionalsBuffer.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = a1 / 8;
  uint64_t v8 = a1 - (a3 & 0xFFFFFFFFFFFFFFF8);
  uint64_t result = PackedOptionalsBuffer.nilBitmapBuffer.getter();
  int v10 = 1 << v8;
  if (v8 < 0) {
    LOBYTE(v10) = 0;
  }
  if ((v10 & *((unsigned char *)result + v7)) != 0)
  {
    int v11 = (void *)*v3;
    if (*v3)
    {
      uint64_t v12 = *v11 + 7;
      if (!__OFADD__(*v11, 7))
      {
        if (v12 < 0) {
          uint64_t v12 = *v11 + 14;
        }
        uint64_t v13 = v12 >> 3;
        uint64_t v15 = v13 - 1;
        BOOL v14 = v13 < 1;
        uint64_t v16 = v13 + 62;
        if (!v14) {
          uint64_t v16 = v15;
        }
        uint64_t v17 = *(void *)(a2 + 16);
        uint64_t v22 = *(void *)(v17 - 8);
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v22 + 16))(a3, (unint64_t)v11 + (v16 & 0xFFFFFFFFFFFFFFC0) + *(void *)(v22 + 72) * a1 + 128, v17);
        int v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56);
        uint64_t v19 = a3;
        uint64_t v20 = 0;
        uint64_t v21 = v17;
        goto LABEL_12;
      }
      __break(1u);
    }
    __break(1u);
    return result;
  }
  uint64_t v21 = *(void *)(a2 + 16);
  int v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
  uint64_t v19 = a3;
  uint64_t v20 = 1;
LABEL_12:

  return (void *)v18(v19, v20, 1, v21);
}

void *sub_2208709E4@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = type metadata accessor for PackedOptionalsBuffer();
  return PackedOptionalsBuffer.subscript.getter(v3, v4, a2);
}

void *sub_220870A48(uint64_t a1, long long *a2, Swift::Int *a3)
{
  uint64_t v6 = sub_22093ED30();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v13 - v7;
  Swift::Int v9 = *a3;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v13 - v7, a1);
  long long v13 = *a2;
  uint64_t v11 = type metadata accessor for PackedOptionalsBuffer();
  return PackedOptionalsBuffer.subscript.setter((uint64_t)v8, v9, v11);
}

void *PackedOptionalsBuffer.subscript.setter(uint64_t a1, Swift::Int a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = sub_22093ED30();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v42 - v10;
  uint64_t v12 = *(void *)(v6 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v9);
  uint64_t v47 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v42 - v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v6) == 1)
  {
    uint64_t v17 = *(void (**)(char *, uint64_t))(v8 + 8);
    v17(v11, v7);
    PackedOptionalsBuffer.clear(at:)(a2);
    return (void *)((uint64_t (*)(uint64_t, uint64_t))v17)(a1, v7);
  }
  uint64_t v45 = v7;
  uint64_t v46 = a1;
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v19(v16, v11, v6);
  uint64_t v21 = a2 - (v20 & 0xFFFFFFFFFFFFFFF8);
  uint64_t result = PackedOptionalsBuffer.nilBitmapBuffer.getter();
  if (v21 >= 0) {
    int v22 = 1 << v21;
  }
  else {
    LOBYTE(v22) = 0;
  }
  if ((*((unsigned char *)result + a2 / 8) & v22) == 0)
  {
    uint64_t v31 = (void *)*v3;
    if (!*v3)
    {
LABEL_26:
      __break(1u);
      return result;
    }
    uint64_t v43 = a2 / 8;
    unint64_t v44 = (void (*)(unint64_t, char *, uint64_t))v19;
    uint64_t v32 = *v31 + 7;
    if (!__OFADD__(*v31, 7))
    {
      if (v32 < 0) {
        uint64_t v32 = *v31 + 14;
      }
      uint64_t v33 = v32 >> 3;
      uint64_t v34 = v33 - 1;
      BOOL v28 = v33 < 1;
      uint64_t v35 = v33 + 62;
      if (!v28) {
        uint64_t v35 = v34;
      }
      uint64_t v36 = v31;
      unint64_t v37 = (unint64_t)v31 + (v35 & 0xFFFFFFFFFFFFFFC0) + *(void *)(v12 + 72) * a2 + 128;
      size_t v38 = v47;
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v47, v16, v6);
      v44(v37, v38, v6);
      uint64_t result = PackedOptionalsBuffer.nilBitmapBuffer.getter();
      *((unsigned char *)result + v43) |= v22;
      uint64_t v39 = v36[2];
      BOOL v40 = __OFSUB__(v39, 1);
      uint64_t v41 = v39 - 1;
      if (!v40)
      {
        __n128 v36[2] = v41;
        (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v46, v45);
        return (void *)(*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v16, v6);
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  char v23 = (void *)*v3;
  if (!*v3)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v24 = *v23 + 7;
  uint64_t v26 = v45;
  uint64_t v25 = v46;
  if (__OFADD__(*v23, 7))
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v24 < 0) {
    uint64_t v24 = *v23 + 14;
  }
  uint64_t v27 = v24 >> 3;
  uint64_t v29 = v27 - 1;
  BOOL v28 = v27 < 1;
  uint64_t v30 = v27 + 62;
  if (!v28) {
    uint64_t v30 = v29;
  }
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 40))((unint64_t)v23 + (v30 & 0xFFFFFFFFFFFFFFC0) + *(void *)(v12 + 72) * a2 + 128, v16, v6);
  return (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v25, v26);
}

void (*PackedOptionalsBuffer.subscript.modify(void *a1, uint64_t a2, uint64_t a3))(Swift::Int **a1, char a2)
{
  uint64_t v7 = malloc(0x38uLL);
  *a1 = v7;
  v7[1] = a3;
  _OWORD v7[2] = v3;
  *uint64_t v7 = a2;
  uint64_t v8 = sub_22093ED30();
  void v7[3] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  void v7[4] = v9;
  size_t v10 = *(void *)(v9 + 64);
  uint64_t v7[5] = malloc(v10);
  uint64_t v11 = malloc(v10);
  v7[6] = v11;
  PackedOptionalsBuffer.subscript.getter(a2, a3, (uint64_t)v11);
  return sub_220870FE0;
}

void sub_220870FE0(Swift::Int **a1, char a2)
{
  BOOL v2 = *a1;
  uint64_t v3 = (void *)(*a1)[5];
  uint64_t v4 = (void *)(*a1)[6];
  if (a2)
  {
    Swift::Int v5 = v2[3];
    Swift::Int v6 = v2[4];
    uint64_t v7 = v2[1];
    Swift::Int v8 = *v2;
    (*(void (**)(Swift::Int, void *, Swift::Int))(v6 + 16))((*a1)[5], v4, v5);
    PackedOptionalsBuffer.subscript.setter((uint64_t)v3, v8, v7);
    (*(void (**)(void *, Swift::Int))(v6 + 8))(v4, v5);
  }
  else
  {
    PackedOptionalsBuffer.subscript.setter((*a1)[6], *v2, v2[1]);
  }
  free(v4);
  free(v3);

  free(v2);
}

void *sub_2208710AC(uint64_t a1, Swift::Int *a2, uint64_t a3)
{
  return PackedOptionalsBuffer.subscript.setter(a1, *a2, a3);
}

void (*sub_2208710B4(void *a1, uint64_t *a2, uint64_t a3))(void *)
{
  Swift::Int v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = PackedOptionalsBuffer.subscript.modify(v6, *a2, a3);
  return sub_220865E74;
}

uint64_t sub_220871124()
{
  return sub_2208C71C8();
}

void (*sub_22087115C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4))(void *)
{
  Swift::Int v8 = malloc(0x28uLL);
  *a1 = v8;
  void v8[4] = sub_2208C4968(v8, a2, a3, a4);
  return sub_220865E74;
}

uint64_t sub_2208711D4()
{
  return sub_22093E500();
}

void sub_220871254(Swift::Int *a1, Swift::Int *a2)
{
}

uint64_t sub_220871260@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = PackedOptionalsBuffer.underestimatedCount.getter();
  *a1 = result;
  return result;
}

void (*sub_220871288(uint64_t **a1, uint64_t *a2, uint64_t a3))(void *a1)
{
  Swift::Int v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  v6[4] = (uint64_t)sub_2208712F8(v6, *a2, a3);
  return sub_22085FBC4;
}

void (*sub_2208712F8(uint64_t *a1, uint64_t a2, uint64_t a3))(void *a1)
{
  uint64_t v6 = sub_22093ED30();
  *a1 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  a1[1] = v7;
  Swift::Int v8 = malloc(*(void *)(v7 + 64));
  a1[2] = (uint64_t)v8;
  PackedOptionalsBuffer.subscript.getter(a2, a3, (uint64_t)v8);
  return sub_22085FCE0;
}

uint64_t sub_2208713B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_2208C4CDC(a1, a2, WitnessTable, a3);
}

uint64_t sub_220871420()
{
  swift_getWitnessTable();

  return sub_22093EA40();
}

uint64_t sub_220871494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D708];

  return MEMORY[0x270F9E068](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_220871518()
{
  swift_getWitnessTable();

  return sub_22093EA00();
}

uint64_t sub_22087159C(void *a1, void *a2)
{
  BOOL v2 = __OFSUB__(*a2, *a1);
  uint64_t result = *a2 - *a1;
  if (v2) {
    __break(1u);
  }
  return result;
}

__n128 sub_2208715B4@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *v1;
  *a1 = *v1;
  a1[1].n128_u64[0] = 0;
  return result;
}

uint64_t sub_2208715C8()
{
  return sub_22093EB10();
}

uint64_t sub_220871624(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x223C69ED0](a1, a2);
}

double PackedOptionalsBuffer.init()@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  static PackedOptionalsBuffer.allocate(capacity:)(0, a1, (uint64_t *)&v4);
  double result = *(double *)&v4;
  *a2 = v4;
  return result;
}

void PackedOptionalsBuffer.replaceSubrange<A>(_:with:)(void (**a1)(uint64_t), Swift::Int a2, uint64_t a3, uint64_t a4, void (**a5)(char *), Swift::Int a6)
{
  Swift::Int v12 = sub_22093EA80();

  PackedOptionalsBuffer.replaceSubrange<A>(_:with:elementsOf:)(a1, a2, v12, a3, a4, a5, a6);
}

void PackedOptionalsBuffer.replaceSubrange<A>(_:with:elementsOf:)(void (**a1)(uint64_t), Swift::Int a2, Swift::Int a3, uint64_t a4, uint64_t a5, void (**a6)(char *), Swift::Int a7)
{
  Swift::Int v8 = v7;
  Swift::Int v66 = a3;
  uint64_t v15 = sub_22093ED30();
  long long v59 = *(void (***)(char *, uint64_t))(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v58 - v16;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v19 = *(char **)(AssociatedTypeWitness - 8);
  uint64_t v20 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v62 = (char *)&v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  uint64_t v69 = (char *)&v58 - v25;
  uint64_t v26 = *v8;
  if (!*v8) {
    goto LABEL_92;
  }
  Swift::Int v27 = a2 - (void)a1;
  if (__OFSUB__(a2, a1)) {
    goto LABEL_68;
  }
  uint64_t v71 = v17;
  uint64_t v60 = a1;
  Swift::Int v28 = v66 - v27;
  if (__OFSUB__(v66, v27))
  {
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  Swift::Int v64 = a2 + v28;
  if (__OFADD__(a2, v28))
  {
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  uint64_t v70 = v15;
  Swift::Int v29 = *(void *)(v26 + 8);
  if (__OFSUB__(v29, a2))
  {
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  uint64_t v65 = v23;
  if (v28 < 1)
  {
    long long v61 = (void (**)(uint64_t))(v29 - a2);
    sub_22093EA60();
    if (v66 < 0)
    {
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
      goto LABEL_76;
    }
    uint64_t v63 = v19;
    uint64_t v19 = v62;
    if (v66)
    {
      uint64_t v34 = a4;
      Swift::Int v35 = (Swift::Int)v60;
      uint64_t v67 = (void (**)(char *))(v59 + 2);
      Swift::Int v36 = v66;
      uint64_t v72 = v34;
      while (1)
      {
        Swift::Int v68 = v36;
        uint64_t v69 = (char *)sub_22093EBD0();
        uint64_t v37 = (uint64_t)v71;
        (*v67)(v71);
        ((void (*)(unsigned char *, void))v69)(v73, 0);
        PackedOptionalsBuffer.subscript.setter(v37, v35, a5);
        if (v35 == 0x7FFFFFFFFFFFFFFFLL) {
          break;
        }
        ++v35;
        sub_22093EAF0();
        Swift::Int v36 = v68 - 1;
        if (v68 == 1) {
          goto LABEL_25;
        }
      }
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
LABEL_25:
    if (!v28)
    {
LABEL_45:
      (*((void (**)(char *, uint64_t))v63 + 1))(v19, v65);
      return;
    }
    Swift::Int v38 = -v28;
    uint64_t v39 = v63;
    if (__OFSUB__(0, v28)) {
      goto LABEL_74;
    }
    Swift::Int v40 = v64;
    if (v38 >= (uint64_t)v61)
    {
      uint64_t v47 = (char *)v61 + a2;
      if (__OFADD__(a2, v61))
      {
LABEL_78:
        __break(1u);
        goto LABEL_79;
      }
      if ((uint64_t)v47 < a2)
      {
LABEL_79:
        __break(1u);
        goto LABEL_80;
      }
      if (v47 != (char *)a2)
      {
        if ((uint64_t)v47 <= a2)
        {
LABEL_89:
          __break(1u);
          goto LABEL_90;
        }
        while (!__OFADD__(a2, v28))
        {
          PackedOptionalsBuffer.move(from:to:)(a2, a2 + v28);
          if (v29 == ++a2) {
            goto LABEL_52;
          }
        }
        goto LABEL_66;
      }
LABEL_52:
      Swift::Int v48 = (Swift::Int)v61 + v40;
      if (__OFADD__(v40, v61))
      {
LABEL_82:
        __break(1u);
        goto LABEL_83;
      }
      Swift::Int v49 = v40 - v28;
      if (__OFADD__(v40, v38))
      {
LABEL_83:
        __break(1u);
        goto LABEL_84;
      }
      if (v49 < v48)
      {
LABEL_84:
        __break(1u);
        goto LABEL_85;
      }
      if (v48 != v49)
      {
        if (v48 >= v49)
        {
LABEL_91:
          __break(1u);
LABEL_92:
          __break(1u);
          return;
        }
        uint64_t v50 = 2 * v49 - v29 - v66 - (void)v60;
        do
        {
          Swift::Int v51 = v48 + 1;
          PackedOptionalsBuffer.clear(at:)(v48);
          Swift::Int v48 = v51;
          --v50;
        }
        while (v50);
      }
    }
    else
    {
      Swift::Int v41 = a2 - v28;
      if (__OFADD__(a2, v38))
      {
LABEL_76:
        __break(1u);
        goto LABEL_77;
      }
      if (v41 < a2)
      {
LABEL_77:
        __break(1u);
        goto LABEL_78;
      }
      if (v41 != a2)
      {
        if (v41 <= a2)
        {
LABEL_88:
          __break(1u);
          goto LABEL_89;
        }
        Swift::Int v42 = a2 - v64;
        Swift::Int v43 = a2;
        while (!__OFADD__(v43, v28))
        {
          Swift::Int v44 = v43 + 1;
          PackedOptionalsBuffer.move(from:to:)(v43, v43 + v28);
          Swift::Int v43 = v44;
          if (!--v42) {
            goto LABEL_35;
          }
        }
        goto LABEL_65;
      }
LABEL_35:
      uint64_t v45 = (char *)v61 + a2;
      if (__OFADD__(a2, v61))
      {
LABEL_80:
        __break(1u);
        goto LABEL_81;
      }
      uint64_t v39 = v63;
      if ((uint64_t)v45 < v41)
      {
LABEL_81:
        __break(1u);
        goto LABEL_82;
      }
      if ((char *)v41 != v45)
      {
        if (v41 >= (uint64_t)v45)
        {
LABEL_90:
          __break(1u);
          goto LABEL_91;
        }
        uint64_t v46 = (uint64_t)v60 + v29 + v66 + -2 * a2;
        while (!__OFSUB__(v41, v38))
        {
          PackedOptionalsBuffer.move(from:to:)(v41, v41 + v28);
          ++v41;
          if (!--v46) {
            goto LABEL_59;
          }
        }
        goto LABEL_67;
      }
    }
LABEL_59:
    PackedOptionalsBuffer.resize(by:)(v28);
    (*((void (**)(char *, uint64_t))v39 + 1))(v62, v65);
    return;
  }
  uint64_t v62 = v24;
  PackedOptionalsBuffer.resize(by:)(v28);
  if (v29 < a2)
  {
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  if (v29 != a2)
  {
    while (v29 > a2)
    {
      if (__OFADD__(--v29, v28)) {
        goto LABEL_44;
      }
      PackedOptionalsBuffer.swapAt(_:_:)(v29, v29 + v28);
      if (a2 == v29) {
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
LABEL_12:
  uint64_t v63 = v19;
  sub_22093EA60();
  Swift::Int v30 = (Swift::Int)v60;
  uint64_t v67 = a6;
  Swift::Int v68 = a7;
  uint64_t v72 = a4;
  if (v60 != (void (**)(uint64_t))a2)
  {
    if (a2 < (uint64_t)v60)
    {
LABEL_85:
      __break(1u);
      goto LABEL_86;
    }
    if ((uint64_t)v60 >= a2)
    {
LABEL_86:
      __break(1u);
LABEL_87:
      __break(1u);
      goto LABEL_88;
    }
    long long v61 = (void (**)(uint64_t))(v59 + 2);
    uint64_t v31 = (uint64_t)v71;
    do
    {
      Swift::Int v66 = v30 + 1;
      uint64_t v32 = (void (*)(unsigned char *, void))sub_22093EBD0();
      (*v61)(v31);
      v32(v73, 0);
      PackedOptionalsBuffer.subscript.setter(v31, v30, a5);
      sub_22093EAF0();
      Swift::Int v30 = v66;
    }
    while (a2 != v66);
  }
  if (a2 > v64) {
    goto LABEL_75;
  }
  uint64_t v33 = v63;
  if (a2 == v64)
  {
    (*((void (**)(char *, uint64_t))v63 + 1))(v69, v65);
    return;
  }
  if (a2 >= v64) {
    goto LABEL_87;
  }
  uint64_t v52 = (void (**)(uint64_t))*((void *)v63 + 2);
  v63 += 16;
  uint64_t v60 = (void (**)(uint64_t))(v59 + 2);
  long long v61 = v52;
  long long v59 = (void (**)(char *, uint64_t))(v33 + 8);
  uint64_t v58 = (unint64_t)(v33 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  long long v53 = v62;
  uint64_t v54 = v65;
  uint64_t v55 = (uint64_t)v71;
  do
  {
    Swift::Int v66 = a2 + 1;
    ((void (*)(char *, char *, uint64_t))v61)(v53, v69, v54);
    uint64_t v56 = (void (*)(unsigned char *, void))sub_22093EBD0();
    (*v60)(v55);
    v56(v73, 0);
    long long v57 = *v59;
    (*v59)(v53, v54);
    PackedOptionalsBuffer.subscript.setter(v55, a2, a5);
    sub_22093EAF0();
    a2 = v66;
  }
  while (v64 != v66);
  v57(v69, v65);
}

double sub_220871EA4@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return PackedOptionalsBuffer.init()(*(void *)(a1 + 16), a2);
}

uint64_t sub_220871EAC(uint64_t a1, uint64_t a2, void (**a3)(char *), Swift::Int a4, uint64_t a5)
{
  PackedOptionalsBuffer.replaceSubrange<A>(_:with:)(*(void (***)(uint64_t))a1, *(void *)(a1 + 8), a2, a5, a3, a4);
  uint64_t v7 = (uint64_t (*)(uint64_t, void (**)(char *)))*((void *)*(a3 - 1) + 1);

  return v7(a2, a3);
}

uint64_t sub_220871F30(uint64_t a1, uint64_t a2)
{
  return nullsub_5(a2);
}

uint64_t sub_220871F40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x270F9E2D0](a1, a4, a2, a5, a3);
}

uint64_t sub_220871F58(uint64_t a1, uint64_t a2)
{
  PackedOptionalsBuffer.append(_:)(a1, a2);
  uint64_t v3 = sub_22093ED30();
  long long v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(a1, v3);
}

uint64_t sub_220871FD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x270F9E288](a1, a4, a2, a5, a3);
}

uint64_t sub_220871FEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return MEMORY[0x270F9E2A0](a1, a2, a5, a3, a6, a4);
}

uint64_t sub_220872010()
{
  return sub_2208C7260();
}

uint64_t sub_220872028()
{
  return sub_22093ECA0();
}

uint64_t PackedOptionalsBuffer.customMirror.getter()
{
  uint64_t v1 = sub_22093F4B0();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18E50);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::Int v8 = *(void **)v0;
  uint64_t v7 = *(void *)(v0 + 8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18E58);
  uint64_t result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_220945120;
  *(void *)(result + 32) = 0x7974696361706163;
  *(void *)(result + 40) = 0xE800000000000000;
  if (v8)
  {
    uint64_t v10 = MEMORY[0x263F8D6C8];
    *(void *)(result + 48) = *v8;
    *(void *)(result + 72) = v10;
    *(void *)(result + 80) = 0x746E756F63;
    *(void *)(result + 88) = 0xE500000000000000;
    *(void *)(result + 96) = v8[1];
    *(void *)(result + 120) = v10;
    *(void *)(result + 128) = 0x746E756F436C696ELL;
    *(void *)(result + 136) = 0xE800000000000000;
    uint64_t v11 = v8[2];
    *(void *)(result + 168) = v10;
    *(void *)(result + 144) = v11;
    v13[0] = v8;
    v13[1] = v7;
    uint64_t v12 = sub_22093F4A0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 1, 1, v12);
    sub_220923F28((uint64_t)v3);
    return sub_22093F4C0();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t PackedOptionalsBuffer.Header.capacity.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*PackedOptionalsBuffer.Header.capacity.modify())(void)
{
  return nullsub_5;
}

uint64_t sub_2208722A8()
{
  return swift_getWitnessTable();
}

uint64_t sub_2208722C4()
{
  return swift_getWitnessTable();
}

uint64_t sub_220872328()
{
  return swift_getWitnessTable();
}

uint64_t sub_220872344()
{
  return swift_getWitnessTable();
}

uint64_t sub_2208723A8()
{
  return swift_getWitnessTable();
}

uint64_t sub_2208723C4()
{
  return swift_getWitnessTable();
}

uint64_t sub_2208723E0()
{
  return swift_getWitnessTable();
}

uint64_t sub_220872444()
{
  return swift_getWitnessTable();
}

uint64_t sub_2208724A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return keypath_getTm(a1, a2, (uint64_t (*)(uint64_t, uint64_t))PackedOptionalsBuffer.count.getter, a3);
}

uint64_t sub_2208724C4()
{
  return 8;
}

void *sub_2208724D0(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_2208724DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return keypath_getTm(a1, a2, (uint64_t (*)(uint64_t, uint64_t))PackedOptionalsBuffer.nilCount.getter, a3);
}

uint64_t keypath_getTm@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t)@<X3>, uint64_t *a4@<X8>)
{
  uint64_t result = a3(a1, a2);
  *a4 = result;
  return result;
}

uint64_t sub_220872538()
{
  return 8;
}

uint64_t sub_22087254C()
{
  return 8;
}

uint64_t sub_220872558(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_220872578(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for ProcessedRows(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ProcessedRows(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for Alignment()
{
  return &type metadata for Alignment;
}

uint64_t sub_220872610(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_267F18E60);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v36 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  Swift::Int v35 = (char *)&v32 - v10;
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v37 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v32 - v14;
  uint64_t v42 = v16;
  uint64_t v17 = sub_22093E890();
  uint64_t v48 = v17;
  swift_getTupleTypeMetadata2();
  sub_22093E890();
  uint64_t v47 = sub_22093E2A0();
  sub_22093EA60();
  int64_t v18 = v46;
  sub_22093EAE0();
  if (v18 == v43)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    return v17;
  }
  uint64_t v41 = a3;
  uint64_t v19 = (void (**)(char *))(v11 + 16);
  uint64_t v20 = (void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v21 = MEMORY[0x263F8D6C8];
  uint64_t v39 = v3;
  uint64_t v40 = a1;
  uint64_t v38 = a2;
  uint64_t v33 = v15;
  uint64_t v34 = v20;
  uint64_t v32 = v19;
  while (1)
  {
    int64_t v45 = v18;
    uint64_t v22 = (void (*)(unint64_t *, void))sub_22093EBD0();
    uint64_t v23 = *v19;
    (*v19)(v15);
    v22(&v43, 0);
    MEMORY[0x223C699F0](&v43, v15, v47, AssociatedTypeWitness, v21, v41);
    if ((v44 & 1) == 0)
    {
      unint64_t v29 = v43;
      uint64_t v30 = sub_22093E900();
      sub_22093E880();
      uint64_t result = sub_2208F8A34(v29, v48);
      uint64_t v31 = v18 + 1;
      if (__OFADD__(v18, 1)) {
        goto LABEL_15;
      }
      if (v31 < v18) {
        goto LABEL_16;
      }
      sub_220869870(v18, v31);
      nullsub_5(v30);
      goto LABEL_3;
    }
    ((void (*)(char *, char *, uint64_t))v23)(v37, v15, AssociatedTypeWitness);
    uint64_t v24 = swift_bridgeObjectRetain();
    uint64_t v25 = MEMORY[0x223C69FE0](v24, v42);
    swift_bridgeObjectRelease();
    unint64_t v43 = v25;
    char v44 = 0;
    sub_22093E2C0();
    uint64_t result = sub_22093E2E0();
    int64_t v27 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v27 < v18) {
      goto LABEL_14;
    }
    Swift::Int v28 = &v35[*(int *)(v42 + 48)];
    uint64_t v19 = v32;
    uint64_t v15 = v33;
    ((void (*)(char *, char *, uint64_t))v23)(v35, v33, AssociatedTypeWitness);
    *(void *)Swift::Int v28 = v18;
    *((void *)v28 + 1) = v27;
    v28[16] = 0;
    sub_22093E900();
    sub_22093E8E0();
    uint64_t v20 = v34;
LABEL_3:
    sub_22093EAF0();
    (*v20)(v15, AssociatedTypeWitness);
    int64_t v18 = v46;
    sub_22093EAE0();
    if (v18 == v43)
    {
      uint64_t v17 = v48;
      goto LABEL_12;
    }
  }
  __break(1u);
LABEL_14:
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for _RangeSet()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_220872AE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a2 + 16);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v5 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v76 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v75 = (char *)&v74 - v8;
  uint64_t v87 = *(v4 - 1);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v78 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  char v86 = (char *)&v74 - v11;
  uint64_t v12 = *(void *)(a2 + 24);
  uint64_t v13 = sub_22093ECE0();
  uint64_t v14 = sub_22093ED30();
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v80 = (char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v81 = (char *)&v74 - v18;
  uint64_t v19 = *(void *)(v13 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v74 = (char *)&v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v77 = (uint64_t)&v74 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v89 = (char *)&v74 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  unint64_t v84 = (unint64_t)&v74 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v30 = (char *)&v74 - v29;
  MEMORY[0x270FA5388](v28);
  uint64_t v32 = (char *)&v74 - v31;
  uint64_t v33 = *(char **)(v19 + 16);
  uint64_t v91 = a1;
  ((void (*)(char *, uint64_t, uint64_t))v33)((char *)&v74 - v31, a1, v13);
  uint64_t v85 = (void (*)(void, void, void))v4;
  uint64_t v88 = v12;
  uint64_t v34 = type metadata accessor for _RangeSetStorage();
  uint64_t WitnessTable = swift_getWitnessTable();
  LOBYTE(v4) = sub_22093EB70();
  uint64_t v92 = v33;
  long long v93 = (void (*)(void, void))(v19 + 16);
  ((void (*)(char *, char *, uint64_t))v33)(v30, v32, v13);
  uint64_t v82 = v19;
  uint64_t v90 = v34;
  if (v4)
  {
    Swift::Int v35 = *(void (**)(char *, uint64_t))(v19 + 8);
    v35(v30, v13);
    v35(v32, v13);
    uint64_t v36 = v85;
    uint64_t v37 = v86;
  }
  else
  {
    swift_getWitnessTable();
    uint64_t v38 = v81;
    sub_22093E400();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v38, 1, v13);
    if (result == 1)
    {
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
    uint64_t v40 = v19;
    uint64_t v37 = v86;
    uint64_t v41 = v87;
    uint64_t v36 = v85;
    (*(void (**)(char *, char *, void))(v87 + 16))(v86, &v38[*(int *)(v13 + 36)], v85);
    Swift::Int v35 = *(void (**)(char *, uint64_t))(v40 + 8);
    v35(v38, v13);
    char v42 = sub_22093E480();
    (*(void (**)(char *, void (*)(void, void, void)))(v41 + 8))(v37, v36);
    v35(v30, v13);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v35)(v32, v13);
    if ((v42 & 1) == 0) {
      goto LABEL_18;
    }
  }
  unint64_t v43 = v89;
  unint64_t v44 = v84;
  uint64_t v45 = v91;
  ((void (*)(unint64_t, uint64_t, uint64_t))v92)(v84, v91, v13);
  char v46 = sub_22093ECC0();
  uint64_t result = ((uint64_t (*)(unint64_t, uint64_t))v35)(v44, v13);
  if (v46)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if ((sub_22093EB70() & 1) == 0)
  {
    char v86 = (char *)v35;
    swift_getWitnessTable();
    uint64_t v47 = v80;
    sub_22093E400();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v82 + 48))(v47, 1, v13);
    if (result == 1)
    {
LABEL_23:
      __break(1u);
      return result;
    }
    uint64_t v48 = &v47[*(int *)(v13 + 36)];
    uint64_t v49 = v87;
    uint64_t v85 = *(void (**)(void, void, void))(v87 + 16);
    v85(v37, v48, v36);
    ((void (*)(char *, uint64_t))v86)(v47, v13);
    uint64_t v50 = v91;
    char v51 = sub_22093E520();
    uint64_t v54 = *(void (**)(void, void))(v49 + 8);
    uint64_t v53 = v49 + 8;
    uint64_t v52 = v54;
    v54(v37, v36);
    if ((v51 & 1) == 0)
    {
      ((void (*)(char *, uint64_t, uint64_t))v92)(v89, v50, v13);
      swift_getWitnessTable();
      return sub_22093EC30();
    }
    long long v93 = v52;
    uint64_t v55 = v90;
    uint64_t result = sub_2208C4964(v90);
    unint64_t v56 = result - 1;
    if (!__OFSUB__(result, 1))
    {
      uint64_t v57 = sub_2208C4964(v55);
      BOOL v58 = __OFSUB__(v57, 1);
      uint64_t result = v57 - 1;
      if (!v58)
      {
        unint64_t v84 = v56;
        uint64_t v59 = v77;
        sub_2208C479C(result, v77);
        uint64_t v60 = (void (*)(char *, uint64_t, void))v85;
        v85(v37, v59, v36);
        ((void (*)(uint64_t, uint64_t))v86)(v59, v13);
        long long v61 = v78;
        v60(v78, v91 + *(int *)(v13 + 36), v36);
        uint64_t result = sub_22093E480();
        if (result)
        {
          uint64_t v62 = TupleTypeMetadata2;
          uint64_t v63 = v75;
          Swift::Int v64 = &v75[*(int *)(TupleTypeMetadata2 + 48)];
          uint64_t v91 = v53;
          uint64_t v92 = v64;
          uint64_t v65 = v37;
          Swift::Int v66 = *(void (**)(char *, char *, void))(v87 + 32);
          v66(v75, v65, v36);
          uint64_t v67 = v92;
          v66(v92, v61, v36);
          Swift::Int v68 = v76;
          uint64_t v69 = &v76[*(int *)(v62 + 48)];
          uint64_t v70 = (void (*)(char *, char *, void))v85;
          v85(v76, v63, v36);
          v70(v69, v67, v36);
          uint64_t v71 = v74;
          v66(v74, v68, v36);
          v93(v69, v36);
          uint64_t v72 = &v68[*(int *)(TupleTypeMetadata2 + 48)];
          v66(v68, v63, v36);
          v66(v72, v92, v36);
          v66(&v71[*(int *)(v13 + 36)], v72, v36);
          v93(v68, v36);
          uint64_t v73 = (uint64_t)v89;
          (*(void (**)(char *, char *, uint64_t))(v82 + 32))(v89, v71, v13);
          return sub_2208C5434(v73, v84);
        }
        goto LABEL_21;
      }
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  ((void (*)(char *, uint64_t, uint64_t))v92)(v43, v45, v13);
  swift_getWitnessTable();
  return sub_22093EC30();
}

uint64_t sub_220873408()
{
  type metadata accessor for _RangeSetStorage();
  swift_getWitnessTable();

  return sub_22093EB70();
}

uint64_t sub_220873468@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for _RangeSetStorage();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v8 - v5;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v8 - v5, v1, v3);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(a1, v6, v3);
}

uint64_t sub_220873550@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v137 = a1;
  uint64_t v97 = a3;
  uint64_t v6 = *(void *)(a2 + 16);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v7 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v110 = (char *)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  long long v109 = (char *)&v95 - v10;
  uint64_t v11 = *(void *)(v6 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v108 = (char *)&v95 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v121 = (char *)&v95 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  unint64_t v122 = (char *)&v95 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v115 = (char *)&v95 - v19;
  uint64_t v141 = a2;
  uint64_t v99 = *(void *)(a2 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  v120 = (char *)&v95 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v95 - v22;
  uint64_t v24 = *(void *)(a2 + 24);
  uint64_t v25 = sub_22093ECE0();
  v140 = *(void (***)(char *, uint64_t))(v25 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v25);
  long long v107 = (char *)&v95 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v112 = (char *)&v95 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v32 = (char *)&v95 - v31;
  uint64_t v33 = MEMORY[0x270FA5388](v30);
  Swift::Int v35 = (char *)&v95 - v34;
  uint64_t v36 = MEMORY[0x270FA5388](v33);
  v139 = (char *)&v95 - v37;
  MEMORY[0x270FA5388](v36);
  uint64_t v104 = (uint64_t)&v95 - v38;
  uint64_t v134 = v24;
  uint64_t v39 = type metadata accessor for _RangeSetStorage();
  swift_getWitnessTable();
  uint64_t v40 = sub_22093F040();
  uint64_t v95 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  char v42 = (char *)&v95 - v41;
  uint64_t v136 = v25;
  uint64_t v143 = sub_22093E890();
  unint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v39 - 8) + 16);
  uint64_t v98 = v4;
  v43(v42, v4, v39);
  uint64_t v96 = v40;
  unint64_t v44 = (uint64_t *)&v42[*(int *)(v40 + 36)];
  *unint64_t v44 = 0;
  if (sub_2208C4964(v39))
  {
    uint64_t v45 = 0;
    uint64_t v114 = (void (**)(char *, uint64_t, uint64_t))(v140 + 4);
    uint64_t v129 = (void (**)(char *, uint64_t, uint64_t))(v99 + 16);
    uint64_t v128 = (void (**)(char *, char *, uint64_t))(v140 + 2);
    v132 = (void (**)(char *, char *, uint64_t))(v11 + 16);
    v135 = v140 + 1;
    char v46 = (void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v127 = (void (**)(char *, uint64_t))(v99 + 8);
    uint64_t v47 = (void (**)(char *, char *, uint64_t))(v11 + 32);
    uint64_t v48 = 0;
    long long v106 = v47;
    uint64_t v103 = v23;
    v119 = v32;
    uint64_t v102 = v35;
    uint64_t v138 = v39;
    uint64_t v101 = v42;
    uint64_t v100 = v44;
    v140 = v46;
    uint64_t v131 = v6;
    while (1)
    {
      uint64_t v50 = v104;
      sub_2208C479C(v48, v104);
      swift_getWitnessTable();
      sub_22093EA10();
      *unint64_t v44 = v142;
      uint64_t v113 = *v114;
      v113(v139, v50, v136);
      char v51 = v115;
      while (1)
      {
        uint64_t v52 = v137;
        uint64_t v53 = sub_2208C4964(v138);
        uint64_t v125 = *v129;
        v125(v23, v52, v141);
        uint64_t v54 = v136;
        int64x2_t v126 = *v128;
        v126(v35, v139, v136);
        if (v45 >= v53)
        {
          unint64_t v58 = (unint64_t)v135;
          uint64_t v55 = *v135;
          (*v135)(v35, v54);
          uint64_t v116 = *v127;
          v116(v23, v141);
          goto LABEL_12;
        }
        sub_2208C479C(v45, (uint64_t)v32);
        (*v132)(v51, &v32[*(int *)(v54 + 36)], v6);
        uint64_t v55 = *v135;
        (*v135)(v32, v54);
        char v56 = sub_22093E480();
        (*v140)(v51, v6);
        v55(v35, v54);
        uint64_t v57 = *v127;
        (*v127)(v23, v141);
        if ((v56 & 1) == 0) {
          break;
        }
        ++v45;
      }
      uint64_t v116 = v57;
      unint64_t v58 = (unint64_t)v135;
      uint64_t v54 = v136;
LABEL_12:
      uint64_t v59 = v112;
      uint64_t v60 = v125;
      uint64_t v61 = v137;
      uint64_t v62 = sub_2208C4964(v138);
      v60(v120, v61, v141);
      v126(v59, v139, v54);
      v130 = v55;
      uint64_t v105 = v58 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      if (v45 < v62) {
        break;
      }
      uint64_t v63 = v136;
      Swift::Int v64 = v59;
      long long v94 = v120;
LABEL_20:
      uint64_t v67 = v130;
      v130(v64, v63);
      v116(v94, v141);
      uint64_t v32 = v119;
LABEL_4:
      v67(v139, v63);
      uint64_t v23 = v103;
      Swift::Int v35 = v102;
      uint64_t v49 = v138;
      char v42 = v101;
      unint64_t v44 = v100;
LABEL_5:
      uint64_t v48 = *v44;
      if (v48 == sub_2208C4964(v49)) {
        goto LABEL_22;
      }
    }
    uint64_t v63 = v136;
    Swift::Int v64 = v59;
    while (1)
    {
      uint64_t v32 = v119;
      uint64_t v133 = v45;
      sub_2208C479C(v45, (uint64_t)v119);
      v124 = *v132;
      v124(v51, v32, v6);
      uint64_t v65 = v130;
      v130(v32, v63);
      char v66 = sub_22093E460();
      uint64_t v123 = *v140;
      v123(v51, v6);
      uint64_t v67 = v65;
      v65(v64, v63);
      v116(v120, v141);
      if ((v66 & 1) == 0)
      {
        uint64_t v45 = v133;
        goto LABEL_4;
      }
      sub_2208C479C(v133, (uint64_t)v32);
      v124(v51, v32, v6);
      v130(v32, v63);
      sub_22093F2A0();
      Swift::Int v68 = v123;
      v123(v51, v6);
      uint64_t v69 = v130;
      sub_2208C479C(v133, (uint64_t)v32);
      v124(v51, &v32[*(int *)(v63 + 36)], v131);
      v69(v32, v63);
      uint64_t v70 = &v139[*(int *)(v63 + 36)];
      sub_22093F2B0();
      v68(v51, v131);
      uint64_t v71 = v131;
      uint64_t result = sub_22093E480();
      if ((result & 1) == 0) {
        break;
      }
      uint64_t v73 = TupleTypeMetadata2;
      uint64_t v74 = v109;
      uint64_t v75 = &v109[*(int *)(TupleTypeMetadata2 + 48)];
      uint64_t v118 = v70;
      uint64_t v76 = v124;
      v124(v109, v122, v71);
      uint64_t v117 = v75;
      v76(v75, v121, v71);
      uint64_t v77 = v110;
      uint64_t v78 = &v110[*(int *)(v73 + 48)];
      v76(v110, v74, v71);
      v76(v78, v75, v71);
      uint64_t v79 = *v106;
      uint64_t v80 = v107;
      (*v106)(v107, v77, v71);
      v123(v78, v71);
      uint64_t v81 = *(int *)(v73 + 48);
      char v51 = v115;
      uint64_t v82 = &v77[v81];
      v79(v77, v74, v71);
      v79(v82, v117, v71);
      v79(&v80[*(int *)(v136 + 36)], v82, v71);
      uint64_t v83 = v77;
      uint64_t v32 = v119;
      unint64_t v84 = v123;
      v123(v83, v71);
      uint64_t v85 = v80;
      uint64_t v86 = v136;
      v113(v32, (uint64_t)v85, v136);
      sub_22093E900();
      sub_22093E8E0();
      v76(v51, v118, v71);
      uint64_t v49 = v138;
      sub_2208C479C(v133, (uint64_t)v32);
      uint64_t v87 = v108;
      v76(v108, &v32[*(int *)(v86 + 36)], v71);
      v130(v32, v86);
      char v88 = sub_22093E450();
      v84(v87, v71);
      v84(v51, v71);
      v84(v121, v71);
      v84(v122, v71);
      if ((v88 & 1) == 0)
      {
        uint64_t v45 = v133;
        v130(v139, v86);
        uint64_t v23 = v103;
        Swift::Int v35 = v102;
        char v42 = v101;
        unint64_t v44 = v100;
        uint64_t v6 = v131;
        goto LABEL_5;
      }
      uint64_t v89 = v133 + 1;
      uint64_t v90 = v137;
      uint64_t v91 = sub_2208C4964(v49);
      uint64_t v63 = v86;
      uint64_t v92 = v120;
      v125(v120, v90, v141);
      Swift::Int v64 = v112;
      v126(v112, v139, v63);
      BOOL v93 = v89 < v91;
      long long v94 = v92;
      uint64_t v45 = v89;
      uint64_t v6 = v131;
      if (!v93) {
        goto LABEL_20;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_22:
    (*(void (**)(char *, uint64_t))(v95 + 8))(v42, v96);
    sub_220874E24(v143, v97);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v99 + 8))(v98, v141);
  }
  return result;
}

uint64_t sub_2208743F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_2208C51C4();
  uint64_t v4 = sub_22093ECE0();
  if (sub_22093ECC0())
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v5(a1, v4);
  }
  else
  {
    uint64_t v7 = type metadata accessor for _RangeSetStorage();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a2, v7);
    return sub_2208C5210(a1, a2);
  }
}

uint64_t sub_220874508(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v25 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v8 + 24);
  uint64_t v23 = sub_22093ECE0();
  uint64_t v10 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v12 = (char *)&v22 - v11;
  uint64_t v13 = type metadata accessor for _RangeSetStorage();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v22 - v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v22 - v15, v3, v13);
  uint64_t v27 = v5;
  uint64_t v28 = v9;
  uint64_t v24 = a1;
  uint64_t v29 = a1;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_2208BD3D8((uint64_t (*)(char *))sub_2208758F0, (uint64_t)v26, v13, WitnessTable, (char *)&v30);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v18 = v30;
  if (v18 == sub_2208C4964(v13))
  {
    char v19 = 0;
  }
  else
  {
    sub_2208C479C(v18, (uint64_t)v12);
    uint64_t v20 = v25;
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v7, v12, v5);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v23);
    char v19 = sub_22093E480();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v5);
  }
  return v19 & 1;
}

uint64_t sub_2208747F4(uint64_t a1)
{
  uint64_t v55 = a1;
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = sub_22093ECE0();
  uint64_t v56 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  Swift::Int v64 = (char *)&v46 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v63 = (char *)&v46 - v9;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v11 = sub_22093ED30();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v46 - v12;
  uint64_t v57 = v2;
  uint64_t v58 = v1;
  uint64_t v14 = type metadata accessor for _RangeSet.Ranges();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v15 = sub_22093F3B0();
  uint64_t v61 = *(char **)(v15 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v54 = (char *)&v46 - v17;
  uint64_t v59 = *(void *)(v14 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v52 = (uint64_t)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v46 - v20;
  uint64_t v47 = (char *)&v46 - v20;
  uint64_t v22 = swift_getWitnessTable();
  uint64_t v23 = swift_getWitnessTable();
  uint64_t v65 = v14;
  uint64_t v66 = v15;
  uint64_t v49 = v15;
  uint64_t v50 = v23;
  uint64_t v67 = v22;
  uint64_t v68 = v23;
  uint64_t v51 = v22;
  uint64_t v24 = v23;
  uint64_t v53 = sub_22093EEE0();
  MEMORY[0x270FA5388](v53);
  uint64_t v48 = (char *)&v46 - v25;
  uint64_t v65 = v14;
  uint64_t v66 = v15;
  uint64_t v67 = v22;
  uint64_t v68 = v24;
  uint64_t v62 = sub_22093EED0();
  uint64_t v46 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  uint64_t v27 = (char *)&v46 - v26;
  sub_220873468((uint64_t)v21);
  sub_220873468(v52);
  uint64_t v28 = v54;
  sub_22093EB90();
  uint64_t v29 = v49;
  uint64_t v30 = v47;
  sub_22093F2C0();
  (*((void (**)(char *, uint64_t))v61 + 1))(v28, v29);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v30, v14);
  uint64_t v61 = v27;
  sub_22093EEB0();
  uint64_t v31 = (void (**)(char *, char *, uint64_t))(v56 + 32);
  uint64_t v59 = v56 + 16;
  uint64_t WitnessTable = TupleTypeMetadata2 - 8;
  uint64_t v32 = (uint64_t (**)(char *, uint64_t))(v56 + 8);
  while (1)
  {
    sub_22093EEC0();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v13, 1, TupleTypeMetadata2) == 1)return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v61, v62); {
    uint64_t v33 = TupleTypeMetadata2;
    }
    uint64_t v34 = &v13[*(int *)(TupleTypeMetadata2 + 48)];
    Swift::Int v35 = v6;
    uint64_t v36 = *v31;
    uint64_t v37 = v13;
    (*v31)(v63, v13, v3);
    uint64_t v38 = v64;
    v36(v64, v34, v3);
    char v39 = sub_22093ECC0();
    (*(void (**)(char *, char *, uint64_t))v59)(v35, v38, v3);
    char v40 = (v39 & 1) != 0 ? 1 : sub_22093ECC0();
    uint64_t v41 = *v32;
    uint64_t result = (*v32)(v35, v3);
    if (v40) {
      break;
    }
    unint64_t v44 = v63;
    unint64_t v43 = v64;
    char v45 = sub_22093E460();
    v41(v43, v3);
    uint64_t result = v41(v44, v3);
    uint64_t v6 = v35;
    TupleTypeMetadata2 = v33;
    uint64_t v13 = v37;
    if ((v45 & 1) == 0) {
      goto LABEL_11;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_220874E24@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_2208C51C4();
  uint64_t v4 = type metadata accessor for _RangeSetStorage();
  (*(void (**)(void *, uint64_t))(*(void *)(v4 - 8) + 8))(a2, v4);
  sub_2208C52AC(a1, a2);
  uint64_t v5 = type metadata accessor for _RangeSet();
  return sub_2208747F4(v5);
}

uint64_t sub_220874ED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for _RangeSetStorage();

  return sub_2208C6224(a1, v5, a3);
}

uint64_t sub_220874F2C(uint64_t a1, uint64_t a2)
{
  sub_22093F430();
  uint64_t v3 = type metadata accessor for _RangeSetStorage();
  sub_2208C6224((uint64_t)v5, v3, a2);
  return sub_22093F490();
}

uint64_t sub_220874F90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_220874ED0(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
}

uint64_t sub_220874F9C(uint64_t a1, uint64_t a2)
{
  return sub_220874F2C(a1, *(void *)(a2 - 8));
}

uint64_t sub_220874FA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_220874ED4(a1, a2, *(void *)(a3 - 8));
}

uint64_t sub_220874FAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 - 8);
  sub_22093F430();
  sub_220874ED4((uint64_t)v6, a2, v4);
  return sub_22093F490();
}

uint64_t sub_220875000()
{
  uint64_t v0 = type metadata accessor for _RangeSetStorage();

  return sub_2208C4964(v0);
}

uint64_t sub_220875030(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x263F8D708];

  return MEMORY[0x270F9E060](a1, a2, WitnessTable, v5);
}

void *sub_2208750A0(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_22087549C(a1, a2, a3, MEMORY[0x263F8D7A8]);
}

uint64_t sub_2208750B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D708];

  return MEMORY[0x270F9E068](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_22087513C()
{
  swift_getWitnessTable();

  return sub_22093EA00();
}

uint64_t sub_2208751C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D708];

  return MEMORY[0x270F9E078](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_220875234@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_220875000();
  *a1 = result;
  return result;
}

void (*sub_22087525C(uint64_t **a1, uint64_t *a2))(void *a1)
{
  uint64_t v4 = (uint64_t *)malloc(0x28uLL);
  *a1 = v4;
  v4[4] = (uint64_t)sub_2208752CC(v4, *a2);
  return sub_22085FBC4;
}

void (*sub_2208752CC(uint64_t *a1, uint64_t a2))(void *a1)
{
  uint64_t v4 = sub_22093ECE0();
  *a1 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  a1[1] = v5;
  uint64_t v6 = malloc(*(void *)(v5 + 64));
  a1[2] = (uint64_t)v6;
  type metadata accessor for _RangeSetStorage();
  sub_2208C479C(a2, (uint64_t)v6);
  return sub_22085FCE0;
}

uint64_t sub_2208753A4()
{
  swift_getWitnessTable();

  return sub_22093EA40();
}

uint64_t sub_220875414()
{
  swift_getWitnessTable();

  return sub_22093EA10();
}

void *sub_220875484(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_22087549C(a1, a2, a3, MEMORY[0x263F8D7A0]);
}

void *sub_22087549C(void *a1, uint64_t a2, uint64_t a3, void *(*a4)(uint64_t *__return_ptr, void *, uint64_t, uint64_t, void))
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t result = a4(&v9, a1, a2, WitnessTable, MEMORY[0x263F8D708]);
  *a1 = v9;
  return result;
}

uint64_t sub_220875514@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 32))(a2, v3, a1);
  swift_getWitnessTable();
  uint64_t result = sub_22093F040();
  *(void *)(a2 + *(int *)(result + 36)) = 0;
  return result;
}

uint64_t sub_2208755A0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F9E108](a1, WitnessTable);
}

uint64_t sub_2208755F4()
{
  swift_getWitnessTable();

  return sub_22093EB10();
}

uint64_t sub_220875648(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = type metadata accessor for _RangeSetStorage();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v12[-v6];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(&v12[-v6], v1, v4);
  uint64_t v13 = v2;
  uint64_t v14 = v3;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v10 = sub_2208F0D18((void (*)(char *, char *))sub_220875960, (uint64_t)v12, v4, MEMORY[0x263F8D310], MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v9);
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v15 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18BE0);
  sub_220875980();
  sub_22093E440();
  swift_bridgeObjectRelease();
  uint64_t v15 = 0x655365676E61525FLL;
  unint64_t v16 = 0xEA00000000002874;
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  return v15;
}

uint64_t sub_22087581C@<X0>(void *a1@<X8>)
{
  sub_22093F220();
  sub_22093E6C0();
  sub_22093ECE0();
  uint64_t result = sub_22093F220();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  return result;
}

uint64_t sub_2208758BC()
{
  return swift_getWitnessTable();
}

uint64_t type metadata accessor for _RangeSet.Ranges()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2208758F0()
{
  return sub_22093E450() & 1;
}

uint64_t sub_220875960@<X0>(void *a1@<X8>)
{
  return sub_22087581C(a1);
}

unint64_t sub_220875980()
{
  unint64_t result = qword_267F18BE8;
  if (!qword_267F18BE8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267F18BE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F18BE8);
  }
  return result;
}

uint64_t sub_2208759DC()
{
  uint64_t result = type metadata accessor for _RangeSetStorage._Storage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_220875A6C(unsigned char *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v4 = __dst;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  int v8 = *(_DWORD *)(v6 + 80);
  uint64_t v9 = v8;
  uint64_t v10 = v7 + v8;
  unint64_t v11 = ((v7 + v9) & ~v9) + v7;
  if (v11 <= 8) {
    uint64_t v12 = 8;
  }
  else {
    uint64_t v12 = v11;
  }
  size_t v13 = v12 + 1;
  if (v8 > 7u || (v8 & 0x100000) != 0 || v13 > 0x18)
  {
    uint64_t v16 = *(void *)__src;
    *uint64_t v4 = *(void *)__src;
    uint64_t v4 = (void *)(v16 + ((v8 & 0xF8 ^ 0x1F8u) & (v8 + 16)));
    swift_retain();
  }
  else
  {
    unsigned int v17 = __src[v12];
    unsigned int v18 = v17 - 2;
    if (v17 >= 2)
    {
      if (v12 <= 3) {
        uint64_t v19 = v12;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *__src;
          goto LABEL_22;
        case 2:
          int v20 = *(unsigned __int16 *)__src;
          goto LABEL_22;
        case 3:
          int v20 = *(unsigned __int16 *)__src | (__src[2] << 16);
          goto LABEL_22;
        case 4:
          int v20 = *(_DWORD *)__src;
LABEL_22:
          int v21 = (v20 | (v18 << (8 * v12))) + 2;
          unsigned int v17 = v20 + 2;
          if (v12 < 4) {
            unsigned int v17 = v21;
          }
          break;
        default:
          break;
      }
    }
    if (v17 == 1)
    {
      *(void *)__dst = *(void *)__src;
      __dst[v12] = 1;
      swift_bridgeObjectRetain();
    }
    else if (v17)
    {
      memcpy(__dst, __src, v13);
    }
    else
    {
      uint64_t v22 = ~v9;
      uint64_t v23 = *(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v6 + 16);
      v23(__dst, __src, v5);
      v23((unsigned char *)(((unint64_t)v4 + v10) & v22), (unsigned __int8 *)((unint64_t)&__src[v10] & v22), v5);
      *((unsigned char *)v4 + v12) = 0;
    }
  }
  return v4;
}

uint64_t sub_220875C54(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(result + 64);
  uint64_t v6 = *(unsigned __int8 *)(result + 80);
  uint64_t v7 = v5 + v6;
  unint64_t v8 = ((v5 + v6) & ~v6) + v5;
  if (v8 <= 8) {
    unint64_t v8 = 8;
  }
  unsigned int v9 = a1[v8];
  unsigned int v10 = v9 - 2;
  if (v9 >= 2)
  {
    if (v8 <= 3) {
      uint64_t v11 = v8;
    }
    else {
      uint64_t v11 = 4;
    }
    switch(v11)
    {
      case 1:
        int v12 = *a1;
        goto LABEL_12;
      case 2:
        int v12 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v12 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v12 = *(_DWORD *)a1;
LABEL_12:
        int v13 = (v12 | (v10 << (8 * v8))) + 2;
        unsigned int v9 = v12 + 2;
        if (v8 < 4) {
          unsigned int v9 = v13;
        }
        break;
      default:
        break;
    }
  }
  if (v9 == 1)
  {
    return swift_bridgeObjectRelease();
  }
  else if (!v9)
  {
    uint64_t v14 = ~v6;
    uint64_t v15 = *(void (**)(unsigned __int8 *, uint64_t))(result + 8);
    v15(a1, v3);
    return ((uint64_t (*)(unint64_t, uint64_t))v15)((unint64_t)&a1[v7] & v14, v3);
  }
  return result;
}

unsigned char *sub_220875E08(unsigned char *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = v7 + v8;
  unint64_t v10 = ((v7 + v8) & ~v8) + v7;
  if (v10 <= 8) {
    uint64_t v11 = 8;
  }
  else {
    uint64_t v11 = v10;
  }
  unsigned int v12 = __src[v11];
  unsigned int v13 = v12 - 2;
  if (v12 >= 2)
  {
    if (v11 <= 3) {
      uint64_t v14 = v11;
    }
    else {
      uint64_t v14 = 4;
    }
    switch(v14)
    {
      case 1:
        int v15 = *__src;
        goto LABEL_13;
      case 2:
        int v15 = *(unsigned __int16 *)__src;
        goto LABEL_13;
      case 3:
        int v15 = *(unsigned __int16 *)__src | (__src[2] << 16);
        goto LABEL_13;
      case 4:
        int v15 = *(_DWORD *)__src;
LABEL_13:
        int v16 = (v15 | (v13 << (8 * v11))) + 2;
        unsigned int v12 = v15 + 2;
        if (v11 < 4) {
          unsigned int v12 = v16;
        }
        break;
      default:
        break;
    }
  }
  if (v12 == 1)
  {
    *(void *)__dst = *(void *)__src;
    __dst[v11] = 1;
    swift_bridgeObjectRetain();
  }
  else if (v12)
  {
    memcpy(__dst, __src, v11 + 1);
  }
  else
  {
    uint64_t v17 = ~v8;
    unsigned int v18 = *(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v6 + 16);
    v18(__dst, __src, v5);
    v18((unsigned char *)((unint64_t)&__dst[v9] & v17), (unsigned __int8 *)((unint64_t)&__src[v9] & v17), v5);
    __dst[v11] = 0;
  }
  return __dst;
}

unsigned __int8 *sub_220875FB4(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  if (__dst != __src)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(void *)(v6 + 64);
    uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
    uint64_t v9 = v7 + v8;
    unint64_t v10 = ((v7 + v8) & ~v8) + v7;
    if (v10 <= 8) {
      uint64_t v11 = 8;
    }
    else {
      uint64_t v11 = v10;
    }
    unsigned int v12 = __dst[v11];
    unsigned int v13 = v12 - 2;
    if (v12 >= 2)
    {
      if (v11 <= 3) {
        uint64_t v14 = v11;
      }
      else {
        uint64_t v14 = 4;
      }
      switch(v14)
      {
        case 1:
          int v15 = *__dst;
          goto LABEL_14;
        case 2:
          int v15 = *(unsigned __int16 *)__dst;
          goto LABEL_14;
        case 3:
          int v15 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
          goto LABEL_14;
        case 4:
          int v15 = *(_DWORD *)__dst;
LABEL_14:
          int v16 = (v15 | (v13 << (8 * v11))) + 2;
          unsigned int v12 = v15 + 2;
          if (v11 < 4) {
            unsigned int v12 = v16;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v17 = ~v8;
    if (v12 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else if (!v12)
    {
      unsigned int v18 = *(void (**)(unsigned __int8 *, uint64_t))(v6 + 8);
      v18(__dst, v5);
      v18((unsigned __int8 *)((unint64_t)&__dst[v9] & v17), v5);
    }
    unsigned int v19 = __src[v11];
    unsigned int v20 = v19 - 2;
    if (v19 >= 2)
    {
      if (v11 <= 3) {
        uint64_t v21 = v11;
      }
      else {
        uint64_t v21 = 4;
      }
      switch(v21)
      {
        case 1:
          int v22 = *__src;
          goto LABEL_29;
        case 2:
          int v22 = *(unsigned __int16 *)__src;
          goto LABEL_29;
        case 3:
          int v22 = *(unsigned __int16 *)__src | (__src[2] << 16);
          goto LABEL_29;
        case 4:
          int v22 = *(_DWORD *)__src;
LABEL_29:
          int v23 = (v22 | (v20 << (8 * v11))) + 2;
          unsigned int v19 = v22 + 2;
          if (v11 < 4) {
            unsigned int v19 = v23;
          }
          break;
        default:
          break;
      }
    }
    if (v19 == 1)
    {
      *(void *)__dst = *(void *)__src;
      __dst[v11] = 1;
      swift_bridgeObjectRetain();
    }
    else if (v19)
    {
      memcpy(__dst, __src, v11 + 1);
    }
    else
    {
      uint64_t v24 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16);
      v24(__dst, __src, v5);
      v24((unsigned __int8 *)((unint64_t)&__dst[v9] & v17), (unsigned __int8 *)((unint64_t)&__src[v9] & v17), v5);
      __dst[v11] = 0;
    }
  }
  return __dst;
}

unsigned char *sub_220876248(unsigned char *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = v7 + v8;
  unint64_t v10 = ((v7 + v8) & ~v8) + v7;
  if (v10 <= 8) {
    uint64_t v11 = 8;
  }
  else {
    uint64_t v11 = v10;
  }
  unsigned int v12 = __src[v11];
  unsigned int v13 = v12 - 2;
  if (v12 >= 2)
  {
    if (v11 <= 3) {
      uint64_t v14 = v11;
    }
    else {
      uint64_t v14 = 4;
    }
    switch(v14)
    {
      case 1:
        int v15 = *__src;
        goto LABEL_13;
      case 2:
        int v15 = *(unsigned __int16 *)__src;
        goto LABEL_13;
      case 3:
        int v15 = *(unsigned __int16 *)__src | (__src[2] << 16);
        goto LABEL_13;
      case 4:
        int v15 = *(_DWORD *)__src;
LABEL_13:
        int v16 = (v15 | (v13 << (8 * v11))) + 2;
        unsigned int v12 = v15 + 2;
        if (v11 < 4) {
          unsigned int v12 = v16;
        }
        break;
      default:
        break;
    }
  }
  if (v12 == 1)
  {
    *(void *)__dst = *(void *)__src;
    __dst[v11] = 1;
  }
  else if (v12)
  {
    memcpy(__dst, __src, v11 + 1);
  }
  else
  {
    uint64_t v17 = ~v8;
    unsigned int v18 = *(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v6 + 32);
    v18(__dst, __src, v5);
    v18((unsigned char *)((unint64_t)&__dst[v9] & v17), (unsigned __int8 *)((unint64_t)&__src[v9] & v17), v5);
    __dst[v11] = 0;
  }
  return __dst;
}

unsigned __int8 *sub_2208763F0(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  if (__dst != __src)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(void *)(v6 + 64);
    uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
    uint64_t v9 = v7 + v8;
    unint64_t v10 = ((v7 + v8) & ~v8) + v7;
    if (v10 <= 8) {
      uint64_t v11 = 8;
    }
    else {
      uint64_t v11 = v10;
    }
    unsigned int v12 = __dst[v11];
    unsigned int v13 = v12 - 2;
    if (v12 >= 2)
    {
      if (v11 <= 3) {
        uint64_t v14 = v11;
      }
      else {
        uint64_t v14 = 4;
      }
      switch(v14)
      {
        case 1:
          int v15 = *__dst;
          goto LABEL_14;
        case 2:
          int v15 = *(unsigned __int16 *)__dst;
          goto LABEL_14;
        case 3:
          int v15 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
          goto LABEL_14;
        case 4:
          int v15 = *(_DWORD *)__dst;
LABEL_14:
          int v16 = (v15 | (v13 << (8 * v11))) + 2;
          unsigned int v12 = v15 + 2;
          if (v11 < 4) {
            unsigned int v12 = v16;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v17 = ~v8;
    if (v12 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else if (!v12)
    {
      unsigned int v18 = *(void (**)(unsigned __int8 *, uint64_t))(v6 + 8);
      v18(__dst, v5);
      v18((unsigned __int8 *)((unint64_t)&__dst[v9] & v17), v5);
    }
    unsigned int v19 = __src[v11];
    unsigned int v20 = v19 - 2;
    if (v19 >= 2)
    {
      if (v11 <= 3) {
        uint64_t v21 = v11;
      }
      else {
        uint64_t v21 = 4;
      }
      switch(v21)
      {
        case 1:
          int v22 = *__src;
          goto LABEL_29;
        case 2:
          int v22 = *(unsigned __int16 *)__src;
          goto LABEL_29;
        case 3:
          int v22 = *(unsigned __int16 *)__src | (__src[2] << 16);
          goto LABEL_29;
        case 4:
          int v22 = *(_DWORD *)__src;
LABEL_29:
          int v23 = (v22 | (v20 << (8 * v11))) + 2;
          unsigned int v19 = v22 + 2;
          if (v11 < 4) {
            unsigned int v19 = v23;
          }
          break;
        default:
          break;
      }
    }
    if (v19 == 1)
    {
      *(void *)__dst = *(void *)__src;
      __dst[v11] = 1;
    }
    else if (v19)
    {
      memcpy(__dst, __src, v11 + 1);
    }
    else
    {
      uint64_t v24 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32);
      v24(__dst, __src, v5);
      v24((unsigned __int8 *)((unint64_t)&__dst[v9] & v17), (unsigned __int8 *)((unint64_t)&__src[v9] & v17), v5);
      __dst[v11] = 0;
    }
  }
  return __dst;
}

uint64_t sub_220876680(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3 = 8;
  if (((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64)
       + *(unsigned __int8 *)(*(void *)(*(void *)(a3 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a3 + 16) - 8) + 80))
     + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) > 8)
    unint64_t v3 = ((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64)
         + *(unsigned __int8 *)(*(void *)(*(void *)(a3 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a3 + 16) - 8) + 80))
       + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_22;
  }
  unint64_t v4 = v3 + 1;
  char v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    unsigned int v8 = ((a2 + ~(-1 << v5) - 253) >> v5) + 1;
    if (HIWORD(v8))
    {
      int v6 = *(_DWORD *)((char *)a1 + v4);
      if (!v6) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      int v6 = *(unsigned __int16 *)((char *)a1 + v4);
      if (!*(unsigned __int16 *)((char *)a1 + v4)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_22:
      unsigned int v10 = *((unsigned __int8 *)a1 + v3);
      if (v10 >= 3) {
        return (v10 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v6 = *((unsigned __int8 *)a1 + v4);
  if (!*((unsigned char *)a1 + v4)) {
    goto LABEL_22;
  }
LABEL_14:
  int v9 = (v6 - 1) << v5;
  if (v4 > 3) {
    int v9 = 0;
  }
  if (v4)
  {
    if (v4 > 3) {
      LODWORD(v4) = 4;
    }
    switch((int)v4)
    {
      case 2:
        LODWORD(v4) = *a1;
        break;
      case 3:
        LODWORD(v4) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v4) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v4) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v4 | v9) + 254;
}

void sub_2208767F0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = ((*(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64)
       + *(unsigned __int8 *)(*(void *)(*(void *)(a4 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a4 + 16) - 8) + 80))
     + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 8) {
    unint64_t v5 = 8;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFE)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 253) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFD)
  {
    unsigned int v8 = a2 - 254;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x2208769F4);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_220876A1C()
{
  return swift_getWitnessTable();
}

uint64_t sub_220876A38()
{
  return swift_getWitnessTable();
}

uint64_t sub_220876A9C()
{
  return swift_getWitnessTable();
}

uint64_t sub_220876AB8()
{
  return swift_getWitnessTable();
}

uint64_t sub_220876B1C()
{
  return swift_getWitnessTable();
}

__n128 __swift_memcpy232_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  long long v7 = a2[7];
  long long v8 = a2[8];
  long long v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  __n128 result = (__n128)a2[11];
  long long v11 = a2[12];
  long long v12 = a2[13];
  *(void *)(a1 + 224) = *((void *)a2 + 28);
  *(_OWORD *)(a1 + 192) = v11;
  *(_OWORD *)(a1 + 208) = v12;
  *(__n128 *)(a1 + 176) = result;
  return result;
}

ValueMetadata *type metadata accessor for IntegerColumnProcessor()
{
  return &type metadata for IntegerColumnProcessor;
}

uint64_t destroy for BooleanColumnProcessor()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for BooleanColumnProcessor(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 60) = *(unsigned char *)(a2 + 60);
  long long v4 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v4;
  uint64_t v5 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v5;
  uint64_t v6 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v6;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  uint64_t v10 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v10;
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(_DWORD *)(a1 + 184) = *(_DWORD *)(a2 + 184);
  *(unsigned char *)(a1 + 188) = *(unsigned char *)(a2 + 188);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  uint64_t v7 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v7;
  uint64_t v8 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for BooleanColumnProcessor(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  *(unsigned char *)(a1 + 59) = *(unsigned char *)(a2 + 59);
  *(unsigned char *)(a1 + 60) = *(unsigned char *)(a2 + 60);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(unsigned char *)(a1 + 185) = *(unsigned char *)(a2 + 185);
  *(unsigned char *)(a1 + 186) = *(unsigned char *)(a2 + 186);
  *(unsigned char *)(a1 + 187) = *(unsigned char *)(a2 + 187);
  *(unsigned char *)(a1 + 188) = *(unsigned char *)(a2 + 188);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy248_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  long long v8 = a2[8];
  long long v9 = a2[9];
  long long v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  __n128 result = (__n128)a2[12];
  long long v12 = a2[13];
  long long v13 = a2[14];
  *(void *)(a1 + 240) = *((void *)a2 + 30);
  *(_OWORD *)(a1 + 208) = v12;
  *(_OWORD *)(a1 + 224) = v13;
  *(__n128 *)(a1 + 192) = result;
  return result;
}

uint64_t assignWithTake for BooleanColumnProcessor(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  *(_WORD *)(a1 + 59) = *(_WORD *)(a2 + 59);
  long long v4 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(unsigned char *)(a1 + 185) = *(unsigned char *)(a2 + 185);
  *(unsigned char *)(a1 + 186) = *(unsigned char *)(a2 + 186);
  *(_WORD *)(a1 + 187) = *(_WORD *)(a2 + 187);
  long long v5 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v5;
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for BooleanColumnProcessor(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 248)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BooleanColumnProcessor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 248) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 248) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BooleanColumnProcessor()
{
  return &type metadata for BooleanColumnProcessor;
}

ValueMetadata *type metadata accessor for StringColumnProcessor()
{
  return &type metadata for StringColumnProcessor;
}

uint64_t _s11TabularData22IntegerColumnProcessorVwxx_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t _s11TabularData22IntegerColumnProcessorVwcp_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 60) = *(unsigned char *)(a2 + 60);
  long long v4 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v4;
  uint64_t v5 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v5;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  uint64_t v6 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v6;
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
  *(unsigned char *)(a1 + 172) = *(unsigned char *)(a2 + 172);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  uint64_t v7 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v7;
  uint64_t v8 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t _s11TabularData22IntegerColumnProcessorVwca_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  *(unsigned char *)(a1 + 59) = *(unsigned char *)(a2 + 59);
  *(unsigned char *)(a1 + 60) = *(unsigned char *)(a2 + 60);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(unsigned char *)(a1 + 169) = *(unsigned char *)(a2 + 169);
  *(unsigned char *)(a1 + 170) = *(unsigned char *)(a2 + 170);
  *(unsigned char *)(a1 + 171) = *(unsigned char *)(a2 + 171);
  *(unsigned char *)(a1 + 172) = *(unsigned char *)(a2 + 172);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t _s11TabularData22IntegerColumnProcessorVwta_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  *(_WORD *)(a1 + 59) = *(_WORD *)(a2 + 59);
  long long v4 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(unsigned char *)(a1 + 169) = *(unsigned char *)(a2 + 169);
  *(unsigned char *)(a1 + 170) = *(unsigned char *)(a2 + 170);
  *(_WORD *)(a1 + 171) = *(_WORD *)(a2 + 171);
  long long v5 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v5;
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  swift_release();
  return a1;
}

uint64_t _s11TabularData22IntegerColumnProcessorVwet_0(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 232)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_220877900(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 232) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 232) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BinaryColumnProcessor()
{
  return &type metadata for BinaryColumnProcessor;
}

uint64_t sub_220877988(uint64_t result)
{
  uint64_t v2 = *(void *)(v1 + 200);
  uint64_t v3 = *(void *)(v1 + 216);
  uint64_t v4 = v2 + v3;
  if (__OFADD__(v2, v3))
  {
    __break(1u);
    goto LABEL_11;
  }
  if (__OFADD__(v4, result))
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (*(void *)(v1 + 208) >= v4 + result) {
    uint64_t v5 = v4 + result;
  }
  else {
    uint64_t v5 = *(void *)(v1 + 208);
  }
  uint64_t v6 = v5 - v4;
  if (v5 < v4) {
    goto LABEL_12;
  }
  if (__OFSUB__(v5, v4))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  BOOL v7 = __OFADD__(v3, v6);
  uint64_t v8 = v3 + v6;
  if (!v7)
  {
    *(void *)(v1 + 216) = v8;
    char v9 = *(unsigned char *)(v1 + 8);
    uint64_t v10 = *(void *)(v1 + 32);
    char v11 = *(unsigned char *)(v1 + 40);
    uint64_t v12 = *(void *)(v1 + 48);
    char v13 = *(unsigned char *)(v1 + 56);
    char v14 = *(unsigned char *)(v1 + 57);
    char v15 = *(unsigned char *)(v1 + 58);
    __int16 v16 = *(_WORD *)(v1 + 59);
    uint64_t v17 = *(void *)(v1 + 96);
    uint64_t v19 = *(void *)v1;
    char v20 = v9;
    long long v21 = *(_OWORD *)(v1 + 16);
    uint64_t v22 = v10;
    char v23 = v11;
    uint64_t v24 = v12;
    char v25 = v13;
    char v26 = v14;
    char v27 = v15;
    __int16 v28 = v16;
    long long v18 = *(_OWORD *)(v1 + 80);
    long long v29 = *(_OWORD *)(v1 + 64);
    long long v30 = v18;
    uint64_t v31 = v17;
    return sub_22084DA14(*(void *)(v1 + 192), v4, v5, &v19, (uint64_t *)v1);
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_220877A68(uint64_t result)
{
  uint64_t v2 = v1[26];
  uint64_t v3 = v1[28];
  uint64_t v4 = v2 + v3;
  if (__OFADD__(v2, v3))
  {
    __break(1u);
    goto LABEL_11;
  }
  if (__OFADD__(v4, result))
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v1[27] >= v4 + result) {
    uint64_t v5 = v4 + result;
  }
  else {
    uint64_t v5 = v1[27];
  }
  uint64_t v6 = v5 - v4;
  if (v5 < v4) {
    goto LABEL_12;
  }
  if (__OFSUB__(v5, v4))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  BOOL v7 = __OFADD__(v3, v6);
  uint64_t v8 = v3 + v6;
  if (!v7)
  {
    v1[28] = v8;
    char v9 = *((unsigned char *)v1 + 8);
    uint64_t v10 = v1[4];
    char v11 = *((unsigned char *)v1 + 40);
    uint64_t v12 = v1[6];
    char v13 = *((unsigned char *)v1 + 56);
    char v14 = *((unsigned char *)v1 + 57);
    char v15 = *((unsigned char *)v1 + 58);
    __int16 v16 = *(_WORD *)((char *)v1 + 59);
    uint64_t v17 = v1[12];
    uint64_t v19 = *v1;
    char v20 = v9;
    long long v21 = *((_OWORD *)v1 + 1);
    uint64_t v22 = v10;
    char v23 = v11;
    uint64_t v24 = v12;
    char v25 = v13;
    char v26 = v14;
    char v27 = v15;
    __int16 v28 = v16;
    long long v18 = *((_OWORD *)v1 + 5);
    long long v29 = *((_OWORD *)v1 + 4);
    long long v30 = v18;
    uint64_t v31 = v17;
    return sub_22084EF24(v1[25], v4, v5, &v19);
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_220877B48(uint64_t result, uint64_t (*a2)(uint64_t))
{
  uint64_t v4 = v2[23];
  uint64_t v5 = v2[25];
  uint64_t v6 = v4 + v5;
  if (__OFADD__(v4, v5))
  {
    __break(1u);
    goto LABEL_11;
  }
  if (__OFADD__(v6, result))
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v2[24] >= v6 + result) {
    uint64_t v7 = v6 + result;
  }
  else {
    uint64_t v7 = v2[24];
  }
  uint64_t v8 = v7 - v6;
  if (v7 < v6) {
    goto LABEL_12;
  }
  if (__OFSUB__(v7, v6))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  BOOL v9 = __OFADD__(v5, v8);
  uint64_t v10 = v5 + v8;
  if (!v9)
  {
    v2[25] = v10;
    char v11 = *((unsigned char *)v2 + 8);
    uint64_t v12 = v2[4];
    char v13 = *((unsigned char *)v2 + 40);
    uint64_t v14 = v2[6];
    char v15 = *((unsigned char *)v2 + 56);
    char v16 = *((unsigned char *)v2 + 57);
    char v17 = *((unsigned char *)v2 + 58);
    __int16 v18 = *(_WORD *)((char *)v2 + 59);
    uint64_t v19 = v2[12];
    uint64_t v21 = *v2;
    char v22 = v11;
    long long v23 = *((_OWORD *)v2 + 1);
    uint64_t v24 = v12;
    char v25 = v13;
    uint64_t v26 = v14;
    char v27 = v15;
    char v28 = v16;
    char v29 = v17;
    __int16 v30 = v18;
    long long v20 = *((_OWORD *)v2 + 5);
    long long v31 = *((_OWORD *)v2 + 4);
    long long v32 = v20;
    uint64_t v33 = v19;
    return a2(v2[22]);
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_220877C30@<X0>(void *a1@<X8>)
{
  return sub_220877D68(&qword_26AD413F0, a1);
}

uint64_t sub_220877C3C(uint64_t a1)
{
  return sub_220877B48(a1, (uint64_t (*)(uint64_t))sub_22084D0F8);
}

uint64_t sub_220877C68@<X0>(void *a1@<X8>)
{
  uint64_t v4 = v1[28];
  uint64_t v3 = v1[29];
  uint64_t v5 = v1[30];
  a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41140);
  a1[4] = &off_26D2223C0;
  *a1 = v4;
  a1[1] = v3;
  a1[2] = v5;
  swift_bridgeObjectRetain();

  return swift_retain();
}

uint64_t sub_220877CD4(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 224) = a1;
  *(void *)(v2 + 232) = a2;
  return result;
}

uint64_t sub_220877D0C(uint64_t a1)
{
  return sub_220877988(a1);
}

uint64_t sub_220877D24@<X0>(void *a1@<X8>)
{
  return sub_220877D68(&qword_26AD413E0, a1);
}

uint64_t sub_220877D30(uint64_t a1)
{
  return sub_220877B48(a1, (uint64_t (*)(uint64_t))sub_22084E1DC);
}

uint64_t sub_220877D5C@<X0>(void *a1@<X8>)
{
  return sub_220877D68(&qword_267F185C8, a1);
}

uint64_t sub_220877D68@<X0>(uint64_t *a1@<X2>, void *a2@<X8>)
{
  uint64_t v5 = v2[26];
  uint64_t v4 = v2[27];
  uint64_t v6 = v2[28];
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(a1);
  a2[4] = &off_26D2223C0;
  *a2 = v5;
  a2[1] = v4;
  a2[2] = v6;
  swift_bridgeObjectRetain();

  return swift_retain();
}

uint64_t sub_220877DD0(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 208) = a1;
  *(void *)(v2 + 216) = a2;
  return result;
}

uint64_t sub_220877E08(uint64_t a1)
{
  return sub_220877B48(a1, (uint64_t (*)(uint64_t))sub_22084E8C8);
}

uint64_t sub_220877E34(uint64_t a1)
{
  return sub_220877A68(a1);
}

uint64_t sub_220877E4C(uint64_t a1)
{
  return sub_220877B48(a1, (uint64_t (*)(uint64_t))sub_22084F20C);
}

uint64_t sub_220877E78(uint64_t a1)
{
  return sub_220877B48(a1, (uint64_t (*)(uint64_t))sub_22084F9FC);
}

ValueMetadata *type metadata accessor for ProcessedRows()
{
  return &type metadata for ProcessedRows;
}

TabularData::DataFrame __swiftcall DataFrame.summary()()
{
  uint64_t v1 = v0;
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_220877F00(v2, v1);

  uint64_t v3 = (void *)swift_bridgeObjectRelease();
  result.columnIndicesByName._rawValue = v5;
  result.aliases._rawValue = v4;
  result.columns._rawValue = v3;
  return result;
}

uint64_t sub_220877F00@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v135 = 0x6E6D756C6F63;
  unint64_t v136 = 0xE600000000000000;
  uint64_t v4 = MEMORY[0x263F8EE78];
  uint64_t v137 = sub_2208322FC(MEMORY[0x263F8EE78]);
  sub_2208F18BC(v3);
  uint64_t v132 = 1851876717;
  unint64_t v133 = 0xE400000000000000;
  sub_220832520(v4);
  uint64_t v134 = v5;
  sub_2208F1888(v3);
  uint64_t v129 = 6583411;
  unint64_t v130 = 0xE300000000000000;
  sub_220832520(v4);
  uint64_t v131 = v6;
  sub_2208F1888(v3);
  uint64_t v126 = 7235949;
  unint64_t v127 = 0xE300000000000000;
  sub_220832520(v4);
  uint64_t v128 = v7;
  sub_2208F1888(v3);
  uint64_t v123 = 7889261;
  unint64_t v124 = 0xE300000000000000;
  sub_220832520(v4);
  uint64_t v125 = v8;
  sub_2208F1888(v3);
  uint64_t v120 = 0x6E616964656DLL;
  unint64_t v121 = 0xE600000000000000;
  sub_220832520(v4);
  uint64_t v122 = v9;
  sub_2208F1888(v3);
  uint64_t v117 = 12625;
  unint64_t v118 = 0xE200000000000000;
  sub_220832520(v4);
  uint64_t v119 = v10;
  sub_2208F1888(v3);
  uint64_t v114 = 13137;
  unint64_t v115 = 0xE200000000000000;
  sub_220832520(v4);
  uint64_t v116 = v11;
  sub_2208F1888(v3);
  uint64_t v111 = 1701080941;
  unint64_t v112 = 0xE400000000000000;
  uint64_t v113 = sub_2208327C8(v4);
  sub_2208F1840(v3);
  uint64_t v108 = 0x6F43657571696E75;
  unint64_t v109 = 0xEB00000000746E75;
  sub_220831BD0(v4);
  uint64_t v110 = v12;
  sub_2208F180C(v3);
  uint64_t v105 = 0x6E756F43656E6F6ELL;
  unint64_t v106 = 0xE900000000000074;
  sub_220831BD0(v4);
  uint64_t v107 = v13;
  sub_2208F180C(v3);
  uint64_t v102 = 0x6E756F43656D6F73;
  unint64_t v103 = 0xE900000000000074;
  sub_220831BD0(v4);
  uint64_t v104 = v14;
  sub_2208F180C(v3);
  if (!v3)
  {
LABEL_33:
    unint64_t v66 = sub_22080CCF4(v4);
    *a2 = v4;
    a2[1] = v4;
    a2[2] = v66;
    uint64_t v68 = v135;
    unint64_t v67 = v136;
    uint64_t v69 = v137;
    uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413E0);
    uint64_t v91 = &off_26D2223C0;
    uint64_t v87 = v68;
    unint64_t v88 = v67;
    uint64_t v89 = v69;
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    DataFrame.append(column:)((uint64_t)&v87);
    sub_22080B0D8((uint64_t)&v87);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v70 = v132;
    unint64_t v71 = v133;
    uint64_t v72 = v134;
    uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413E8);
    uint64_t v90 = v73;
    uint64_t v91 = &off_26D2223C0;
    uint64_t v87 = v70;
    unint64_t v88 = v71;
    uint64_t v89 = v72;
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    DataFrame.append(column:)((uint64_t)&v87);
    sub_22080B0D8((uint64_t)&v87);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v90 = v73;
    uint64_t v91 = &off_26D2223C0;
    uint64_t v87 = v129;
    unint64_t v88 = v130;
    uint64_t v89 = v131;
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    DataFrame.append(column:)((uint64_t)&v87);
    sub_22080B0D8((uint64_t)&v87);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v90 = v73;
    uint64_t v91 = &off_26D2223C0;
    uint64_t v87 = v126;
    unint64_t v88 = v127;
    uint64_t v89 = v128;
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    DataFrame.append(column:)((uint64_t)&v87);
    sub_22080B0D8((uint64_t)&v87);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v90 = v73;
    uint64_t v91 = &off_26D2223C0;
    uint64_t v87 = v123;
    unint64_t v88 = v124;
    uint64_t v89 = v125;
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    DataFrame.append(column:)((uint64_t)&v87);
    sub_22080B0D8((uint64_t)&v87);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v90 = v73;
    uint64_t v91 = &off_26D2223C0;
    uint64_t v87 = v120;
    unint64_t v88 = v121;
    uint64_t v89 = v122;
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    DataFrame.append(column:)((uint64_t)&v87);
    sub_22080B0D8((uint64_t)&v87);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v90 = v73;
    uint64_t v91 = &off_26D2223C0;
    uint64_t v87 = v117;
    unint64_t v88 = v118;
    uint64_t v89 = v119;
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    DataFrame.append(column:)((uint64_t)&v87);
    sub_22080B0D8((uint64_t)&v87);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v90 = v73;
    uint64_t v91 = &off_26D2223C0;
    uint64_t v87 = v114;
    unint64_t v88 = v115;
    uint64_t v89 = v116;
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    DataFrame.append(column:)((uint64_t)&v87);
    sub_22080B0D8((uint64_t)&v87);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v74 = v111;
    unint64_t v75 = v112;
    uint64_t v76 = v113;
    uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18F68);
    uint64_t v91 = &off_26D2223C0;
    uint64_t v87 = v74;
    unint64_t v88 = v75;
    uint64_t v89 = v76;
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    DataFrame.append(column:)((uint64_t)&v87);
    sub_22080B0D8((uint64_t)&v87);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v77 = v108;
    unint64_t v78 = v109;
    uint64_t v79 = v110;
    uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413F0);
    uint64_t v90 = v80;
    uint64_t v91 = &off_26D2223C0;
    uint64_t v87 = v77;
    unint64_t v88 = v78;
    uint64_t v89 = v79;
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    DataFrame.append(column:)((uint64_t)&v87);
    sub_22080B0D8((uint64_t)&v87);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v90 = v80;
    uint64_t v91 = &off_26D2223C0;
    uint64_t v87 = v105;
    unint64_t v88 = v106;
    uint64_t v89 = v107;
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    DataFrame.append(column:)((uint64_t)&v87);
    sub_22080B0D8((uint64_t)&v87);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v90 = v80;
    uint64_t v91 = &off_26D2223C0;
    uint64_t v87 = v102;
    unint64_t v88 = v103;
    uint64_t v89 = v104;
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    DataFrame.append(column:)((uint64_t)&v87);
    sub_22080B0D8((uint64_t)&v87);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  uint64_t v15 = a1 + 32;
  swift_bridgeObjectRetain();
  uint64_t v16 = 0;
  while (1)
  {
    sub_22080B5B8(v15, (uint64_t)v99);
    uint64_t v31 = v100;
    uint64_t v32 = v101;
    __swift_project_boxed_opaque_existential_1(v99, v100);
    uint64_t v33 = (*(uint64_t (**)(uint64_t))(*(void *)(v32 + 8) + 8))(v31);
    sub_2208F2244(v33, v34);
    swift_bridgeObjectRelease();
    sub_220840854(&v87);
    uint64_t v35 = v87;
    uint64_t v36 = v88;
    uint64_t v37 = v89;
    uint64_t v38 = swift_bridgeObjectRetain();
    sub_2208F2750(v38);
    swift_bridgeObjectRelease();
    sub_2208F1E18(v37, 0);
    sub_2208F1E18(v36, 0);
    sub_2208F1E18(v35, 0);
    swift_bridgeObjectRelease();
    sub_22083B5D0((uint64_t)v99, (uint64_t)v98);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41110);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413E8);
    if (swift_dynamicCast()) {
      break;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F185D0);
    if (swift_dynamicCast())
    {
      uint64_t v43 = v96;
      uint64_t v44 = v97;
      uint64_t result = swift_beginAccess();
      char v45 = *(uint64_t **)(v44 + 16);
      if (!v45) {
        goto LABEL_37;
      }
      uint64_t v46 = *v45 + 7;
      if (__OFADD__(*v45, 7)) {
        goto LABEL_34;
      }
      if (v46 < 0) {
        uint64_t v46 = *v45 + 14;
      }
      uint64_t v47 = v46 >> 3;
      uint64_t v48 = v47 - 1;
      BOOL v19 = v47 < 1;
      uint64_t v49 = v47 + 62;
      if (!v19) {
        uint64_t v49 = v48;
      }
      sub_22087A050((uint64_t)v45 + (v49 & 0xFFFFFFFFFFFFFFC0) + 128, *v45, v43, v44, (uint64_t)&v87);
      uint64_t v50 = v89;
      float v51 = *(float *)&v90;
      uint64_t v52 = v91;
      float v53 = *(float *)&v92;
      sub_2208F2014(COERCE__INT64(*((float *)&v90 + 1)), 0);
      sub_2208F2014(COERCE__INT64(*(float *)&v52), 0);
      sub_2208F2014(COERCE__INT64(*((float *)&v52 + 1)), 0);
      sub_2208F2014(COERCE__INT64(v53), 0);
      sub_2208F2014(COERCE__INT64(*(float *)&v50), 0);
      sub_2208F2014(COERCE__INT64(*((float *)&v50 + 1)), 0);
      *(double *)&uint64_t v30 = v51;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413F0);
      if ((swift_dynamicCast() & 1) == 0)
      {
        sub_2208F2014(0, 1);
        sub_2208F2014(0, 1);
        sub_2208F2014(0, 1);
        sub_2208F2014(0, 1);
        sub_2208F2014(0, 1);
        sub_2208F2014(0, 1);
        sub_2208F2014(0, 1);
        goto LABEL_9;
      }
      uint64_t v54 = v96;
      uint64_t v55 = v97;
      uint64_t result = swift_beginAccess();
      uint64_t v56 = *(uint64_t **)(v55 + 16);
      if (!v56) {
        goto LABEL_38;
      }
      uint64_t v57 = *v56 + 7;
      if (__OFADD__(*v56, 7)) {
        goto LABEL_35;
      }
      if (v57 < 0) {
        uint64_t v57 = *v56 + 14;
      }
      uint64_t v58 = v57 >> 3;
      uint64_t v59 = v58 - 1;
      BOOL v19 = v58 < 1;
      uint64_t v60 = v58 + 62;
      if (!v19) {
        uint64_t v60 = v59;
      }
      sub_22087B308((uint64_t)v56 + (v60 & 0xFFFFFFFFFFFFFFC0) + 128, *v56, v54, v55, (uint64_t)&v87);
      uint64_t v86 = v15;
      uint64_t v61 = v89;
      uint64_t v82 = v90;
      unint64_t v84 = v91;
      uint64_t v62 = v93;
      uint64_t v63 = v94;
      uint64_t v64 = v95;
      sub_2208F2014(v92, 0);
      sub_2208F2014(v62, 0);
      sub_2208F2014(v63, 0);
      sub_2208F2014(v64, 0);
      uint64_t v65 = v61;
      uint64_t v15 = v86;
      sub_2208F2014(v65, 0);
      sub_2208F2014(v82, 0);
      uint64_t v30 = (uint64_t)v84;
    }
LABEL_8:
    sub_2208F2014(v30, 0);
    swift_release();
    swift_bridgeObjectRelease();
LABEL_9:
    sub_22080B0D8((uint64_t)v99);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v98);
    v15 += 40;
    if (!--v3)
    {
      swift_bridgeObjectRelease();
      uint64_t v4 = MEMORY[0x263F8EE78];
      goto LABEL_33;
    }
  }
  uint64_t v39 = v96;
  uint64_t v40 = v97;
  uint64_t result = swift_beginAccess();
  char v42 = *(uint64_t **)(v40 + 16);
  if (!v42) {
    goto LABEL_36;
  }
  uint64_t v17 = *v42 + 7;
  if (!__OFADD__(*v42, 7))
  {
    if (v17 < 0) {
      uint64_t v17 = *v42 + 14;
    }
    uint64_t v18 = v17 >> 3;
    uint64_t v20 = v18 - 1;
    BOOL v19 = v18 < 1;
    uint64_t v21 = v18 + 62;
    if (!v19) {
      uint64_t v21 = v20;
    }
    sub_22087A290((uint64_t)v42 + (v21 & 0xFFFFFFFFFFFFFFC0) + 128, *v42, v39, v40, (uint64_t)&v87);
    uint64_t v22 = v16;
    uint64_t v23 = v89;
    uint64_t v24 = v90;
    uint64_t v83 = v91;
    uint64_t v85 = v3;
    uint64_t v25 = v93;
    uint64_t v26 = v94;
    uint64_t v27 = v15;
    uint64_t v28 = v95;
    sub_2208F2014(v92, 0);
    sub_2208F2014(v25, 0);
    sub_2208F2014(v26, 0);
    uint64_t v29 = v28;
    uint64_t v15 = v27;
    uint64_t v16 = v22;
    sub_2208F2014(v29, 0);
    sub_2208F2014(v23, 0);
    sub_2208F2014(v24, 0);
    uint64_t v30 = (uint64_t)v83;
    uint64_t v3 = v85;
    goto LABEL_8;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t DataFrame.summary(of:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_22087BC54(a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_22087BE90(v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_220877F00(v7, a2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t DataFrame.summary(ofColumns:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_22087BE90(a1, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_220877F00(v6, a2);
  return swift_bridgeObjectRelease();
}

TabularData::DataFrame __swiftcall DataFrame.Slice.summary()()
{
  uint64_t v2 = v0;
  long long v3 = v1[1];
  long long v9 = *v1;
  v10[0] = v3;
  *(_OWORD *)((char *)v10 + 9) = *(long long *)((char *)v1 + 25);
  sub_220833B58((uint64_t)&v9);
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_22083196C(v4, (uint64_t)&v9);
  sub_220833BC0((uint64_t)&v9);
  swift_bridgeObjectRelease();
  sub_220878DF0(v5, v2);
  uint64_t v6 = (void *)swift_bridgeObjectRelease();
  result.columnIndicesByName._rawValue = v8;
  result.aliases._rawValue = v7;
  result.columns._rawValue = v6;
  return result;
}

uint64_t sub_220878DF0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v163 = 0x6E6D756C6F63;
  unint64_t v164 = 0xE600000000000000;
  uint64_t v4 = MEMORY[0x263F8EE78];
  uint64_t v165 = sub_2208322FC(MEMORY[0x263F8EE78]);
  sub_2208F18BC(v3);
  uint64_t v160 = 1851876717;
  unint64_t v161 = 0xE400000000000000;
  sub_220832520(v4);
  uint64_t v162 = v5;
  sub_2208F1888(v3);
  uint64_t v157 = 6583411;
  unint64_t v158 = 0xE300000000000000;
  sub_220832520(v4);
  uint64_t v159 = v6;
  sub_2208F1888(v3);
  uint64_t v154 = 7235949;
  unint64_t v155 = 0xE300000000000000;
  sub_220832520(v4);
  uint64_t v156 = v7;
  sub_2208F1888(v3);
  uint64_t v151 = 7889261;
  unint64_t v152 = 0xE300000000000000;
  sub_220832520(v4);
  uint64_t v153 = v8;
  sub_2208F1888(v3);
  uint64_t v148 = 0x6E616964656DLL;
  unint64_t v149 = 0xE600000000000000;
  sub_220832520(v4);
  uint64_t v150 = v9;
  sub_2208F1888(v3);
  uint64_t v145 = 12625;
  unint64_t v146 = 0xE200000000000000;
  sub_220832520(v4);
  uint64_t v147 = v10;
  sub_2208F1888(v3);
  uint64_t v142 = 13137;
  unint64_t v143 = 0xE200000000000000;
  sub_220832520(v4);
  uint64_t v144 = v11;
  sub_2208F1888(v3);
  uint64_t v139 = 1701080941;
  unint64_t v140 = 0xE400000000000000;
  uint64_t v141 = sub_2208327C8(v4);
  sub_2208F1840(v3);
  uint64_t v136 = 0x6F43657571696E75;
  unint64_t v137 = 0xEB00000000746E75;
  sub_220831BD0(v4);
  uint64_t v138 = v12;
  sub_2208F180C(v3);
  uint64_t v133 = 0x6E756F43656E6F6ELL;
  unint64_t v134 = 0xE900000000000074;
  sub_220831BD0(v4);
  uint64_t v135 = v13;
  sub_2208F180C(v3);
  uint64_t v130 = 0x6E756F43656D6F73;
  unint64_t v131 = 0xE900000000000074;
  sub_220831BD0(v4);
  uint64_t v132 = v14;
  sub_2208F180C(v3);
  if (!v3)
  {
LABEL_57:
    uint64_t v98 = MEMORY[0x263F8EE78];
    unint64_t v99 = sub_22080CCF4(MEMORY[0x263F8EE78]);
    *a2 = v98;
    a2[1] = v98;
    a2[2] = v99;
    uint64_t v100 = v163;
    unint64_t v101 = v164;
    uint64_t v102 = v165;
    uint64_t v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413E0);
    uint64_t v119 = &off_26D2223C0;
    uint64_t v115 = v100;
    unint64_t v116 = v101;
    uint64_t v117 = v102;
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    DataFrame.append(column:)((uint64_t)&v115);
    sub_22080B0D8((uint64_t)&v115);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v103 = v160;
    unint64_t v104 = v161;
    uint64_t v105 = v162;
    uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413E8);
    uint64_t v118 = v106;
    uint64_t v119 = &off_26D2223C0;
    uint64_t v115 = v103;
    unint64_t v116 = v104;
    uint64_t v117 = v105;
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    DataFrame.append(column:)((uint64_t)&v115);
    sub_22080B0D8((uint64_t)&v115);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v118 = v106;
    uint64_t v119 = &off_26D2223C0;
    uint64_t v115 = v157;
    unint64_t v116 = v158;
    uint64_t v117 = v159;
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    DataFrame.append(column:)((uint64_t)&v115);
    sub_22080B0D8((uint64_t)&v115);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v118 = v106;
    uint64_t v119 = &off_26D2223C0;
    uint64_t v115 = v154;
    unint64_t v116 = v155;
    uint64_t v117 = v156;
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    DataFrame.append(column:)((uint64_t)&v115);
    sub_22080B0D8((uint64_t)&v115);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v118 = v106;
    uint64_t v119 = &off_26D2223C0;
    uint64_t v115 = v151;
    unint64_t v116 = v152;
    uint64_t v117 = v153;
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    DataFrame.append(column:)((uint64_t)&v115);
    sub_22080B0D8((uint64_t)&v115);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v118 = v106;
    uint64_t v119 = &off_26D2223C0;
    uint64_t v115 = v148;
    unint64_t v116 = v149;
    uint64_t v117 = v150;
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    DataFrame.append(column:)((uint64_t)&v115);
    sub_22080B0D8((uint64_t)&v115);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v118 = v106;
    uint64_t v119 = &off_26D2223C0;
    uint64_t v115 = v145;
    unint64_t v116 = v146;
    uint64_t v117 = v147;
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    DataFrame.append(column:)((uint64_t)&v115);
    sub_22080B0D8((uint64_t)&v115);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v118 = v106;
    uint64_t v119 = &off_26D2223C0;
    uint64_t v115 = v142;
    unint64_t v116 = v143;
    uint64_t v117 = v144;
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    DataFrame.append(column:)((uint64_t)&v115);
    sub_22080B0D8((uint64_t)&v115);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v107 = v139;
    unint64_t v108 = v140;
    uint64_t v109 = v141;
    uint64_t v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18F68);
    uint64_t v119 = &off_26D2223C0;
    uint64_t v115 = v107;
    unint64_t v116 = v108;
    uint64_t v117 = v109;
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    DataFrame.append(column:)((uint64_t)&v115);
    sub_22080B0D8((uint64_t)&v115);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v110 = v136;
    unint64_t v111 = v137;
    uint64_t v112 = v138;
    uint64_t v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413F0);
    uint64_t v118 = v113;
    uint64_t v119 = &off_26D2223C0;
    uint64_t v115 = v110;
    unint64_t v116 = v111;
    uint64_t v117 = v112;
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    DataFrame.append(column:)((uint64_t)&v115);
    sub_22080B0D8((uint64_t)&v115);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v118 = v113;
    uint64_t v119 = &off_26D2223C0;
    uint64_t v115 = v133;
    unint64_t v116 = v134;
    uint64_t v117 = v135;
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    DataFrame.append(column:)((uint64_t)&v115);
    sub_22080B0D8((uint64_t)&v115);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v118 = v113;
    uint64_t v119 = &off_26D2223C0;
    uint64_t v115 = v130;
    unint64_t v116 = v131;
    uint64_t v117 = v132;
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    DataFrame.append(column:)((uint64_t)&v115);
    sub_22080B0D8((uint64_t)&v115);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  uint64_t v15 = a1 + 32;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_220833C28(v15, (uint64_t)v127);
    uint64_t v29 = v128;
    uint64_t v30 = v129;
    __swift_project_boxed_opaque_existential_1(v127, v128);
    uint64_t v31 = (*(uint64_t (**)(uint64_t))(*(void *)(v30 + 8) + 8))(v29);
    sub_2208F2244(v31, v32);
    swift_bridgeObjectRelease();
    AnyColumnSlice.summary()(&v115);
    uint64_t v33 = v115;
    uint64_t v34 = v116;
    uint64_t v35 = v117;
    uint64_t v36 = swift_bridgeObjectRetain();
    sub_2208F2750(v36);
    swift_bridgeObjectRelease();
    sub_2208F1E18(v35, 0);
    sub_2208F1E18(v34, 0);
    sub_2208F1E18(v33, 0);
    swift_bridgeObjectRelease();
    sub_22083B5D0((uint64_t)v127, (uint64_t)v126);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F18A90);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F18AC8);
    if (swift_dynamicCast()) {
      break;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F18AB8);
    if (swift_dynamicCast())
    {
      v168[0] = v124;
      v168[1] = *(_OWORD *)v125;
      uint64_t v51 = *(void *)&v125[16];
      uint64_t v169 = *(void *)&v125[16];
      uint64_t v179 = *(void *)&v125[16];
      uint64_t result = swift_beginAccess();
      uint64_t v52 = *(void **)(v51 + 16);
      if (!v52) {
        goto LABEL_65;
      }
      uint64_t v53 = *v52 + 7;
      if (__OFADD__(*v52, 7)) {
        goto LABEL_59;
      }
      if (v53 < 0) {
        uint64_t v53 = *v52 + 14;
      }
      uint64_t v54 = v53 >> 3;
      uint64_t v55 = v54 - 1;
      BOOL v18 = v54 < 1;
      uint64_t v56 = v54 + 62;
      if (!v18) {
        uint64_t v56 = v55;
      }
      uint64_t v57 = (uint64_t)v52 + (v56 & 0xFFFFFFFFFFFFFFC0) + 128;
      swift_retain();
      sub_22087A4D0(v57, (uint64_t)v168, (uint64_t)&v115);
      sub_22087C2CC((uint64_t)&v179);
      uint64_t v58 = v117;
      float v59 = *(float *)&v118;
      uint64_t v60 = v119;
      float v61 = *(float *)&v120;
      sub_2208F2014(COERCE__INT64(*((float *)&v118 + 1)), 0);
      sub_2208F2014(COERCE__INT64(*(float *)&v60), 0);
      sub_2208F2014(COERCE__INT64(*((float *)&v60 + 1)), 0);
      sub_2208F2014(COERCE__INT64(v61), 0);
      sub_2208F2014(COERCE__INT64(*(float *)&v58), 0);
      sub_2208F2014(COERCE__INT64(*((float *)&v58 + 1)), 0);
      sub_2208F2014(COERCE__INT64(v59), 0);
      uint64_t v28 = v168;
      goto LABEL_8;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F18A98);
    if (swift_dynamicCast())
    {
      v170[0] = v124;
      v170[1] = *(_OWORD *)v125;
      uint64_t v62 = *(void *)&v125[16];
      uint64_t v171 = *(void *)&v125[16];
      uint64_t v178 = *(void *)&v125[16];
      uint64_t result = swift_beginAccess();
      uint64_t v63 = *(void **)(v62 + 16);
      if (!v63) {
        goto LABEL_66;
      }
      uint64_t v16 = *v63 + 7;
      if (__OFADD__(*v63, 7)) {
        goto LABEL_60;
      }
      if (v16 < 0) {
        uint64_t v16 = *v63 + 14;
      }
      uint64_t v17 = v16 >> 3;
      uint64_t v19 = v17 - 1;
      BOOL v18 = v17 < 1;
      uint64_t v20 = v17 + 62;
      if (!v18) {
        uint64_t v20 = v19;
      }
      uint64_t v21 = (uint64_t)v63 + (v20 & 0xFFFFFFFFFFFFFFC0) + 128;
      swift_retain();
      sub_22087B544(v21, (uint64_t)v170, (uint64_t)&v115);
      sub_22087C2CC((uint64_t)&v178);
      uint64_t v22 = v117;
      uint64_t v23 = v118;
      uint64_t v24 = (uint64_t)v119;
      uint64_t v25 = v121;
      uint64_t v26 = v122;
      uint64_t v27 = v123;
      sub_2208F2014(v120, 0);
      sub_2208F2014(v25, 0);
      sub_2208F2014(v26, 0);
      sub_2208F2014(v27, 0);
      sub_2208F2014(v22, 0);
      sub_2208F2014(v23, 0);
      sub_2208F2014(v24, 0);
      uint64_t v28 = v170;
      goto LABEL_8;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F18AD0);
    if (swift_dynamicCast())
    {
      long long v172 = v124;
      v173[0] = *(_OWORD *)v125;
      *(_OWORD *)((char *)v173 + 9) = *(_OWORD *)&v125[9];
      uint64_t v64 = *(void *)v125;
      uint64_t result = swift_beginAccess();
      uint64_t v65 = *(void **)(v64 + 16);
      if (!v65) {
        goto LABEL_67;
      }
      uint64_t v66 = *v65 + 7;
      if (__OFADD__(*v65, 7)) {
        goto LABEL_61;
      }
      if (v66 < 0) {
        uint64_t v66 = *v65 + 14;
      }
      uint64_t v67 = v66 >> 3;
      uint64_t v68 = v67 - 1;
      BOOL v18 = v67 < 1;
      uint64_t v69 = v67 + 62;
      if (!v18) {
        uint64_t v69 = v68;
      }
      sub_22087AEC0((uint64_t)v65 + (v69 & 0xFFFFFFFFFFFFFFC0) + 128, &v172, (uint64_t)&v115);
      uint64_t v70 = v117;
      uint64_t v71 = v118;
      uint64_t v72 = (uint64_t)v119;
      uint64_t v73 = v121;
      uint64_t v74 = v122;
      uint64_t v75 = v123;
      sub_2208F2014(v120, 0);
      sub_2208F2014(v73, 0);
      sub_2208F2014(v74, 0);
      sub_2208F2014(v75, 0);
      sub_2208F2014(v70, 0);
      sub_2208F2014(v71, 0);
      sub_2208F2014(v72, 0);
      sub_220843060((uint64_t)&v172);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_267F18AC0);
      if (swift_dynamicCast())
      {
        long long v174 = v124;
        v175[0] = *(_OWORD *)v125;
        *(_OWORD *)((char *)v175 + 9) = *(_OWORD *)&v125[9];
        uint64_t v76 = *(void *)v125;
        uint64_t result = swift_beginAccess();
        uint64_t v77 = *(void **)(v76 + 16);
        if (!v77) {
          goto LABEL_68;
        }
        uint64_t v78 = *v77 + 7;
        if (__OFADD__(*v77, 7)) {
          goto LABEL_62;
        }
        if (v78 < 0) {
          uint64_t v78 = *v77 + 14;
        }
        uint64_t v79 = v78 >> 3;
        uint64_t v80 = v79 - 1;
        BOOL v18 = v79 < 1;
        uint64_t v81 = v79 + 62;
        if (!v18) {
          uint64_t v81 = v80;
        }
        sub_22087AA78((uint64_t)v77 + (v81 & 0xFFFFFFFFFFFFFFC0) + 128, &v174, (uint64_t)&v115);
        uint64_t v82 = v117;
        float v83 = *(float *)&v118;
        unint64_t v84 = v119;
        float v85 = *(float *)&v120;
        sub_2208F2014(COERCE__INT64(*((float *)&v118 + 1)), 0);
        sub_2208F2014(COERCE__INT64(*(float *)&v84), 0);
        sub_2208F2014(COERCE__INT64(*((float *)&v84 + 1)), 0);
        sub_2208F2014(COERCE__INT64(v85), 0);
        sub_2208F2014(COERCE__INT64(*(float *)&v82), 0);
        sub_2208F2014(COERCE__INT64(*((float *)&v82 + 1)), 0);
        sub_2208F2014(COERCE__INT64(v83), 0);
        sub_220843060((uint64_t)&v174);
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_267F18AA0);
        if (swift_dynamicCast())
        {
          long long v176 = v124;
          v177[0] = *(_OWORD *)v125;
          *(_OWORD *)((char *)v177 + 9) = *(_OWORD *)&v125[9];
          uint64_t v86 = *(void *)v125;
          uint64_t result = swift_beginAccess();
          uint64_t v87 = *(void **)(v86 + 16);
          if (!v87) {
            goto LABEL_69;
          }
          uint64_t v88 = *v87 + 7;
          if (__OFADD__(*v87, 7)) {
            goto LABEL_63;
          }
          if (v88 < 0) {
            uint64_t v88 = *v87 + 14;
          }
          uint64_t v89 = v88 >> 3;
          uint64_t v90 = v89 - 1;
          BOOL v18 = v89 < 1;
          uint64_t v91 = v89 + 62;
          if (!v18) {
            uint64_t v91 = v90;
          }
          sub_22087B810((uint64_t)v87 + (v91 & 0xFFFFFFFFFFFFFFC0) + 128, &v176, (uint64_t)&v115);
          uint64_t v92 = v117;
          uint64_t v93 = v118;
          uint64_t v94 = (uint64_t)v119;
          uint64_t v95 = v121;
          uint64_t v96 = v122;
          uint64_t v97 = v123;
          sub_2208F2014(v120, 0);
          sub_2208F2014(v95, 0);
          sub_2208F2014(v96, 0);
          sub_2208F2014(v97, 0);
          sub_2208F2014(v92, 0);
          sub_2208F2014(v93, 0);
          sub_2208F2014(v94, 0);
          sub_220843060((uint64_t)&v176);
        }
        else
        {
          sub_2208F2014(0, 1);
          sub_2208F2014(0, 1);
          sub_2208F2014(0, 1);
          sub_2208F2014(0, 1);
          sub_2208F2014(0, 1);
          sub_2208F2014(0, 1);
          sub_2208F2014(0, 1);
        }
      }
    }
LABEL_9:
    sub_220833C84((uint64_t)v127);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v126);
    v15 += 40;
    if (!--v3)
    {
      swift_bridgeObjectRelease();
      goto LABEL_57;
    }
  }
  v166[0] = v124;
  v166[1] = *(_OWORD *)v125;
  uint64_t v37 = *(void *)&v125[16];
  uint64_t v167 = *(void *)&v125[16];
  v180[0] = *(void *)&v125[16];
  uint64_t result = swift_beginAccess();
  uint64_t v39 = *(void **)(v37 + 16);
  if (!v39) {
    goto LABEL_64;
  }
  uint64_t v40 = *v39 + 7;
  if (!__OFADD__(*v39, 7))
  {
    if (v40 < 0) {
      uint64_t v40 = *v39 + 14;
    }
    uint64_t v41 = v40 >> 3;
    uint64_t v42 = v41 - 1;
    BOOL v18 = v41 < 1;
    uint64_t v43 = v41 + 62;
    if (!v18) {
      uint64_t v43 = v42;
    }
    uint64_t v44 = (uint64_t)v39 + (v43 & 0xFFFFFFFFFFFFFFC0) + 128;
    swift_retain();
    sub_22087A7A4(v44, (uint64_t)v166, (uint64_t)&v115);
    sub_22087C2CC((uint64_t)v180);
    uint64_t v45 = v117;
    uint64_t v46 = v118;
    uint64_t v47 = (uint64_t)v119;
    uint64_t v48 = v121;
    uint64_t v49 = v122;
    uint64_t v50 = v123;
    sub_2208F2014(v120, 0);
    sub_2208F2014(v48, 0);
    sub_2208F2014(v49, 0);
    sub_2208F2014(v50, 0);
    sub_2208F2014(v45, 0);
    sub_2208F2014(v46, 0);
    sub_2208F2014(v47, 0);
    uint64_t v28 = v166;
LABEL_8:
    sub_22087C2F8((uint64_t)v28);
    goto LABEL_9;
  }
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
  return result;
}

uint64_t DataFrame.Slice.summary(of:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  long long v5 = v2[1];
  long long v9 = *v2;
  v10[0] = v5;
  *(_OWORD *)((char *)v10 + 9) = *(long long *)((char *)v2 + 25);
  sub_220833B58((uint64_t)&v9);
  uint64_t v6 = sub_22087BD68(a1, &v9);
  sub_220833BC0((uint64_t)&v9);
  sub_220833B58((uint64_t)&v9);
  uint64_t v7 = sub_22087BF9C(v6, (uint64_t)&v9);
  sub_220833BC0((uint64_t)&v9);
  sub_220878DF0(v7, a2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t DataFrame.Slice.summary(ofColumns:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  long long v5 = v2[1];
  long long v8 = *v2;
  v9[0] = v5;
  *(_OWORD *)((char *)v9 + 9) = *(long long *)((char *)v2 + 25);
  sub_220833B58((uint64_t)&v8);
  uint64_t v6 = sub_22087BF9C(a1, (uint64_t)&v8);
  sub_220833BC0((uint64_t)&v8);
  sub_220878DF0(v6, a2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22087A050@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  if (a2 < 0)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  else
  {
    uint64_t v5 = a4;
    uint64_t v8 = result;
    long long v9 = (void *)(a4 + 16);
    swift_bridgeObjectRetain();
    uint64_t result = swift_retain();
    uint64_t v10 = 0;
    uint64_t v11 = MEMORY[0x263F8EE78];
LABEL_3:
    if (v10 <= a2) {
      uint64_t v12 = a2;
    }
    else {
      uint64_t v12 = v10;
    }
    unint64_t v13 = v10;
    while (a2 != v13)
    {
      if (v12 == v13)
      {
        __break(1u);
        goto LABEL_25;
      }
      uint64_t result = swift_beginAccess();
      if (!*v9) {
        goto LABEL_26;
      }
      uint64_t v10 = v13 + 1;
      int v14 = *(unsigned __int8 *)(*v9 + (v13 >> 3) + 64) >> (v13 & 7);
      ++v13;
      if (v14)
      {
        uint64_t v25 = v5;
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v15 = a3;
        if ((result & 1) == 0) {
          uint64_t result = (uint64_t)sub_220826C98(0, *(void *)(v11 + 16) + 1, 1);
        }
        unint64_t v17 = *(void *)(v11 + 16);
        unint64_t v16 = *(void *)(v11 + 24);
        if (v17 >= v16 >> 1) {
          uint64_t result = (uint64_t)sub_220826C98((char *)(v16 > 1), v17 + 1, 1);
        }
        *(void *)(v11 + 16) = v17 + 1;
        *(void *)(v11 + 8 * v17 + 32) = v10 - 1;
        a3 = v15;
        uint64_t v5 = v25;
        goto LABEL_3;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    int64_t v18 = *(void *)(v11 + 16);
    if (v18)
    {
      uint64_t v27 = (float32x4_t *)MEMORY[0x263F8EE78];
      sub_220826F18(0, v18, 0);
      uint64_t v19 = 0;
      uint64_t v20 = v27;
      unint64_t v21 = v27[1].u64[0];
      do
      {
        __int32 v22 = *(_DWORD *)(v8 + 4 * *(void *)(v11 + 8 * v19 + 32));
        unint64_t v23 = v27[1].u64[1];
        if (v21 >= v23 >> 1) {
          sub_220826F18((char *)(v23 > 1), v21 + 1, 1);
        }
        ++v19;
        v27[1].i64[0] = v21 + 1;
        v27[2].i32[v21++] = v22;
      }
      while (v18 != v19);
      swift_release();
    }
    else
    {
      swift_release();
      uint64_t v20 = (float32x4_t *)MEMORY[0x263F8EE78];
    }
    sub_22092E84C(v20, a2 - v18, a5, v24);
    return swift_bridgeObjectRelease();
  }
  return result;
}