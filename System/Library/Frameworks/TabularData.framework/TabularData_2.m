uint64_t (*CSVWritingOptions.dateFormat.modify())(void)
{
  return nullsub_5;
}

uint64_t CSVWritingOptions.dateFormatter.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_retain();
  return v1;
}

uint64_t sub_2208ED04C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  swift_retain();
  uint64_t result = swift_release();
  *(void *)(a2 + 24) = sub_2208EE238;
  *(void *)(a2 + 32) = v5;
  return result;
}

uint64_t CSVWritingOptions.dateFormatter.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_release();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*CSVWritingOptions.dateFormatter.modify(void *a1))(uint64_t *a1, char a2)
{
  a1[2] = v1;
  uint64_t v3 = *(void *)(v1 + 32);
  *a1 = *(void *)(v1 + 24);
  a1[1] = v3;
  swift_retain();
  return sub_2208ED144;
}

uint64_t sub_2208ED144(uint64_t *a1, char a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = *a1;
  if (a2)
  {
    swift_retain();
    swift_release();
    *(void *)(v3 + 24) = v4;
    *(void *)(v3 + 32) = v2;
    return swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    *(void *)(v3 + 24) = v4;
    *(void *)(v3 + 32) = v2;
  }
  return result;
}

uint64_t CSVWritingOptions.nilEncoding.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CSVWritingOptions.nilEncoding.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

uint64_t (*CSVWritingOptions.nilEncoding.modify())(void)
{
  return nullsub_5;
}

uint64_t CSVWritingOptions.trueEncoding.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CSVWritingOptions.trueEncoding.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a2;
  return result;
}

uint64_t (*CSVWritingOptions.trueEncoding.modify())(void)
{
  return nullsub_5;
}

uint64_t CSVWritingOptions.falseEncoding.getter()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CSVWritingOptions.falseEncoding.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = a2;
  return result;
}

uint64_t (*CSVWritingOptions.falseEncoding.modify())(void)
{
  return nullsub_5;
}

uint64_t CSVWritingOptions.newline.getter()
{
  uint64_t v1 = *(void *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CSVWritingOptions.newline.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 88) = a1;
  *(void *)(v2 + 96) = a2;
  return result;
}

uint64_t (*CSVWritingOptions.newline.modify())(void)
{
  return nullsub_5;
}

uint64_t CSVWritingOptions.delimiter.getter()
{
  uint64_t v1 = *(void *)(v0 + 104);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CSVWritingOptions.delimiter.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 104) = a1;
  *(void *)(v2 + 112) = a2;
  return result;
}

uint64_t (*CSVWritingOptions.delimiter.modify())(void)
{
  return nullsub_5;
}

uint64_t CSVWritingOptions.init(includesHeader:dateFormat:nilEncoding:trueEncoding:falseEncoding:newline:delimiter:)@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v47 = a6;
  uint64_t v48 = a8;
  uint64_t v49 = a2;
  int v44 = a1;
  uint64_t v18 = a14;
  uint64_t v19 = a10;
  uint64_t v45 = a4;
  uint64_t v46 = a13;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(qword_267F196E0);
  MEMORY[0x270FA5388](v20 - 8);
  v43 = (char *)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_22093E140();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  v25 = (char *)&v38 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRelease();
  if (a3)
  {
    id v26 = objc_allocWithZone(MEMORY[0x263F08790]);
    uint64_t v38 = a3;
    swift_bridgeObjectRetain_n();
    uint64_t v42 = a5;
    swift_bridgeObjectRetain();
    uint64_t v40 = a7;
    swift_bridgeObjectRetain();
    uint64_t v39 = a10;
    swift_bridgeObjectRetain();
    uint64_t v41 = a14;
    swift_bridgeObjectRetain();
    id v27 = objc_msgSend(v26, sel_init);
    sub_22093E110();
    v28 = (void *)sub_22093E120();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
    objc_msgSend(v27, sel_setLocale_, v28);

    v29 = v43;
    sub_22093E190();
    uint64_t v30 = sub_22093E1B0();
    uint64_t v31 = *(void *)(v30 - 8);
    v32 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30) != 1)
    {
      v32 = (void *)sub_22093E1A0();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v29, v30);
    }
    objc_msgSend(v27, sel_setTimeZone_, v32);

    a3 = v38;
    v33 = (void *)sub_22093E540();
    swift_bridgeObjectRelease();
    objc_msgSend(v27, sel_setDateFormat_, v33);

    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = v27;
    v35 = sub_2208EDB10;
    uint64_t v18 = v41;
    a5 = v42;
    uint64_t v19 = v39;
    a7 = v40;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v34 = 0;
    v35 = sub_2208ED900;
  }
  char v36 = v44 & 1;
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(unsigned char *)a9 = v36;
  *(void *)(a9 + 8) = v49;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = v35;
  *(void *)(a9 + 32) = v34;
  *(void *)(a9 + 40) = v45;
  *(void *)(a9 + 48) = a5;
  *(void *)(a9 + 56) = v47;
  *(void *)(a9 + 64) = a7;
  *(void *)(a9 + 72) = v48;
  *(void *)(a9 + 80) = v19;
  *(void *)(a9 + 88) = 10;
  *(void *)(a9 + 96) = 0xE100000000000000;
  *(void *)(a9 + 104) = v46;
  *(void *)(a9 + 112) = v18;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2208ED88C(uint64_t a1, void *a2)
{
  uint64_t v3 = (void *)sub_22093E0D0();
  id v4 = objc_msgSend(a2, sel_stringFromDate_, v3);

  uint64_t v5 = sub_22093E550();
  return v5;
}

uint64_t sub_2208ED900()
{
  uint64_t v0 = sub_22093E0C0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2208EC694((uint64_t)v3);
  uint64_t v4 = sub_22093E060();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_2208ED9E4()
{
  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_2208EDA24@<X0>(uint64_t a1@<X8>)
{
  return sub_2208506C0(a1);
}

uint64_t sub_2208EDA50()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);

  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_2208EDAD8()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2208EDB10(uint64_t a1)
{
  return sub_2208ED88C(a1, *(void **)(v1 + 16));
}

uint64_t sub_2208EDB18@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t *a1@<X8>)@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  *a2 = sub_2208EE270;
  a2[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v5;

  return swift_retain();
}

uint64_t destroy for CSVReadingOptions()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CSVReadingOptions(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CSVReadingOptions(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  *(unsigned char *)(a1 + 51) = *(unsigned char *)(a2 + 51);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  return a1;
}

__n128 __swift_memcpy53_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 45) = *(void *)(a2 + 45);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for CSVReadingOptions(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  *(_WORD *)(a1 + 51) = *(_WORD *)(a2 + 51);
  return a1;
}

uint64_t getEnumTagSinglePayload for CSVReadingOptions(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 53)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CSVReadingOptions(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 52) = 0;
    *(_DWORD *)(result + 48) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 53) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 53) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CSVReadingOptions()
{
  return &type metadata for CSVReadingOptions;
}

uint64_t destroy for CSVWritingOptions()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CSVWritingOptions(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v3 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v3;
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  uint64_t v5 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v5;
  uint64_t v6 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v6;
  uint64_t v7 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v7;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CSVWritingOptions(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CSVWritingOptions(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = v4;
  swift_release();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v9;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CSVWritingOptions(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 120)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CSVWritingOptions(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CSVWritingOptions()
{
  return &type metadata for CSVWritingOptions;
}

uint64_t sub_2208EE200()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2208EE238()
{
  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v2);
  return v2;
}

uint64_t sub_2208EE270@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t CSVWritingError.row.getter()
{
  return *(void *)v0;
}

uint64_t CSVWritingError.column.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t CSVWritingError.description.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[3];
  unint64_t v3 = v0[4];
  sub_22080B7F4(v2, v3);
  sub_22093EEA0();
  swift_bridgeObjectRelease();
  unint64_t v10 = 0xD000000000000019;
  unint64_t v11 = 0x80000002209408B0;
  uint64_t v8 = v1;
  sub_22093F1A0();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  sub_22093E6C0();
  sub_22093E6C0();
  sub_22080B7F4(v2, v3);
  sub_2208B456C(1024, v2, v3, &v8);
  uint64_t v4 = v8;
  unint64_t v5 = v9;
  uint64_t v6 = sub_2208BA6D8(v8, v9);
  sub_22080B88C(v4, v5);
  MEMORY[0x223C69F60](v6, MEMORY[0x263F8E778]);
  sub_22093E6C0();
  swift_release();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  sub_22080B88C(v2, v3);
  return v10;
}

uint64_t destroy for CSVWritingError(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 24);
  unint64_t v3 = *(void *)(a1 + 32);

  return sub_22080B88C(v2, v3);
}

uint64_t initializeWithCopy for CSVWritingError(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  unint64_t v4 = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  sub_22080B7F4(v3, v4);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = v4;
  return a1;
}

void *assignWithCopy for CSVWritingError(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  unint64_t v4 = a2[4];
  sub_22080B7F4(v5, v4);
  uint64_t v6 = a1[3];
  unint64_t v7 = a1[4];
  a1[3] = v5;
  a1[4] = v4;
  sub_22080B88C(v6, v7);
  return a1;
}

uint64_t assignWithTake for CSVWritingError(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a1 + 24);
  unint64_t v5 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  sub_22080B88C(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for CSVWritingError(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CSVWritingError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CSVWritingError()
{
  return &type metadata for CSVWritingError;
}

int64_t sub_2208EE658(int64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t v5 = sub_2208EE720(a2, a3, a4);
  int64_t result = sub_2208B4528(a1, v5);
  unint64_t v10 = (v9 >> 1) - v8;
  if (v9 >> 1 == v8)
  {
    swift_unknownObjectRelease();
    return 0;
  }
  else
  {
    if ((uint64_t)(v9 >> 1) > v8)
    {
      unint64_t v11 = (int64_t *)(v7 + 8 * v8);
      while (1)
      {
        int64_t v12 = *v11++;
        int64_t result = v12;
        uint64_t v13 = v12 + 1;
        if (__OFADD__(v12, 1)) {
          break;
        }
        if (v13 < result) {
          goto LABEL_11;
        }
        sub_220869870(result, v13);
        if (!--v10)
        {
          swift_unknownObjectRelease();
          return 0;
        }
      }
      __break(1u);
LABEL_11:
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2208EE720(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v13 = MEMORY[0x263F8EE78];
  uint64_t result = sub_220831F30(a1, a2, a3);
  unint64_t v7 = 0;
  uint64_t v8 = (int64_t *)(a1 + 40);
  int v9 = a3;
  if (!a3) {
    goto LABEL_6;
  }
  while (1)
  {
    if (v9 != 1) {
      return v13;
    }
    unint64_t v10 = *(void *)(a1 + 16);
    if (v7 == v10)
    {
      sub_22080B6B4(a1, a2, 1);
      return v13;
    }
    if (v7 >= v10) {
      break;
    }
    uint64_t v11 = *(v8 - 1);
    for (int64_t i = *v8; ; int64_t i = a2)
    {
      ++v7;
      uint64_t result = sub_22084468C(v11, i);
      v8 += 2;
      int v9 = a3;
      if (a3) {
        break;
      }
LABEL_6:
      if (v7 == 1) {
        return v13;
      }
      if (v7) {
        goto LABEL_14;
      }
      uint64_t v11 = a1;
    }
  }
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_2208EE804(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = 0;
  uint64_t result = 0;
  uint64_t v6 = (uint64_t *)(a1 + 40);
  while (1)
  {
    if (a3)
    {
      if (a3 != 1) {
        return 0;
      }
      unint64_t v7 = *(void *)(a1 + 16);
      if (v4 == v7) {
        return result;
      }
      if (v4 >= v7) {
        goto LABEL_17;
      }
      uint64_t v8 = *(v6 - 1);
      uint64_t v9 = *v6;
    }
    else
    {
      if (v4 == 1) {
        return result;
      }
      if (v4) {
        goto LABEL_18;
      }
      uint64_t v8 = a1;
      uint64_t v9 = a2;
    }
    uint64_t v10 = v9 - v8;
    if (__OFSUB__(v9, v8)) {
      break;
    }
    ++v4;
    v6 += 2;
    BOOL v11 = __OFADD__(result, v10);
    result += v10;
    if (v11)
    {
      __break(1u);
      return 0;
    }
  }
  __break(1u);
LABEL_17:
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_2208EE898@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v4 = *(void *)(a3 + 16);
  if (!v4) {
    goto LABEL_33;
  }
  uint64_t v5 = 0;
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = (uint64_t *)(a3 + 56);
  while (1)
  {
    uint64_t v12 = *v10;
    v10 += 6;
    uint64_t v11 = v12;
    uint64_t v13 = v5 + v12;
    if (__OFADD__(v5, v12))
    {
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    if (v13 <= result) {
      goto LABEL_3;
    }
    if (v5 <= result) {
      break;
    }
    BOOL v14 = __OFADD__(v6, v11);
    v6 += v11;
    if (v14) {
      goto LABEL_25;
    }
    if (v5 < a2) {
      goto LABEL_14;
    }
LABEL_3:
    ++v9;
    uint64_t v5 = v13;
    if (v4 == v9) {
      goto LABEL_21;
    }
  }
  uint64_t v7 = result - v5;
  if (__OFSUB__(result, v5)) {
    goto LABEL_26;
  }
  uint64_t v15 = v11 - v7;
  if (__OFSUB__(v11, v7)) {
    goto LABEL_27;
  }
  BOOL v14 = __OFADD__(v6, v15);
  v6 += v15;
  if (v14) {
    goto LABEL_28;
  }
  uint64_t v8 = v9;
  if (v5 >= a2) {
    goto LABEL_3;
  }
LABEL_14:
  if (v13 < a2) {
    goto LABEL_3;
  }
  uint64_t v4 = v9 + 1;
  if (v9 + 1 < v8) {
    goto LABEL_30;
  }
  uint64_t v16 = a2 - v5;
  if (__OFSUB__(a2, v5)) {
    goto LABEL_31;
  }
  uint64_t v17 = v11 - v16;
  if (__OFSUB__(v11, v16)) {
    goto LABEL_32;
  }
  BOOL v14 = __OFSUB__(v6, v17);
  v6 -= v17;
  if (!v14) {
    goto LABEL_23;
  }
  __break(1u);
LABEL_21:
  if (v4 >= v8)
  {
    uint64_t v16 = *(void *)(a3 + 48 * v4 + 8);
LABEL_23:
    *a4 = v8;
    a4[1] = v4;
    a4[2] = v7;
    a4[3] = v16;
    a4[4] = v6;
    return result;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_2208EE99C@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    uint64_t v3 = 0;
    uint64_t v4 = *(void *)(result + 48 * v2 + 8);
    uint64_t v5 = (uint64_t *)(result + 56);
    uint64_t v6 = *(void *)(result + 16);
    while (1)
    {
      uint64_t v7 = *v5;
      v5 += 6;
      BOOL v8 = __OFADD__(v3, v7);
      v3 += v7;
      if (v8) {
        break;
      }
      if (!--v6) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v3 = 0;
    uint64_t v4 = 0;
LABEL_7:
    *a2 = 0;
    a2[1] = v2;
    a2[2] = 0;
    a2[3] = v4;
    a2[4] = v3;
  }
  return result;
}

uint64_t sub_2208EE9F0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_2208EEB00(uint64_t *a1, uint64_t *a2, void *a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(a3[2] - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = a3[4];
  uint64_t v8 = *(void *)(a3[3] - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  uint64_t v11 = (v6 + v9) & ~v9;
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v13 = *(void *)(v7 - 8);
  uint64_t v14 = *(_DWORD *)(v13 + 80);
  uint64_t v15 = v12 + v14;
  unint64_t v16 = ((v12 + v14 + v11) & ~v14) + *(void *)(v13 + 64);
  uint64_t v17 = (*(unsigned char *)(v8 + 80) | *(unsigned char *)(v5 + 80) | *(unsigned char *)(v13 + 80));
  if (v17 <= 7
    && v16 <= 0x18
    && ((*(_DWORD *)(v8 + 80) | *(_DWORD *)(v5 + 80) | *(_DWORD *)(v13 + 80)) & 0x100000) == 0)
  {
    uint64_t v21 = ~v9;
    uint64_t v22 = ~v14;
    uint64_t v25 = a3[3];
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v23 = ((unint64_t)a2 + v10) & v21;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)v4 + v10) & v21, v23, v25);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v13 + 16))(((((unint64_t)v4 + v10) & v21) + v15) & v22, (v23 + v15) & v22, v7);
  }
  else
  {
    uint64_t v20 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v20 + ((v17 + 16) & ~v17));
    swift_retain();
  }
  return v4;
}

uint64_t sub_2208EED04(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void *)(a2[2] - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(v4 + 56) + a1;
  uint64_t v6 = *(void *)(a2[3] - 8);
  uint64_t v7 = v6 + 8;
  unint64_t v8 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v8);
  uint64_t v9 = *(void *)(a2[4] - 8);
  uint64_t v10 = *(uint64_t (**)(unint64_t))(v9 + 8);
  unint64_t v11 = (v8 + *(void *)(v7 + 56) + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);

  return v10(v11);
}

uint64_t sub_2208EEDEC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 16;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 48) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v11, v12);
  uint64_t v13 = *(void *)(a3[4] - 8);
  (*(void (**)(unint64_t, unint64_t))(v13 + 16))((*(void *)(v8 + 48) + *(unsigned __int8 *)(v13 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80), (*(void *)(v8 + 48) + *(unsigned __int8 *)(v13 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  return a1;
}

uint64_t sub_2208EEEEC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 24;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 40) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v11, v12);
  uint64_t v13 = *(void *)(a3[4] - 8);
  (*(void (**)(unint64_t, unint64_t))(v13 + 24))((*(void *)(v8 + 40) + *(unsigned __int8 *)(v13 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80), (*(void *)(v8 + 40) + *(unsigned __int8 *)(v13 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  return a1;
}

uint64_t sub_2208EEFEC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 32;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 32) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v11, v12);
  uint64_t v13 = *(void *)(a3[4] - 8);
  (*(void (**)(unint64_t, unint64_t))(v13 + 32))((*(void *)(v8 + 32) + *(unsigned __int8 *)(v13 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80), (*(void *)(v8 + 32) + *(unsigned __int8 *)(v13 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  return a1;
}

uint64_t sub_2208EF0EC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 40;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 24) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v11, v12);
  uint64_t v13 = *(void *)(a3[4] - 8);
  (*(void (**)(unint64_t, unint64_t))(v13 + 40))((*(void *)(v8 + 24) + *(unsigned __int8 *)(v13 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80), (*(void *)(v8 + 24) + *(unsigned __int8 *)(v13 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  return a1;
}

uint64_t sub_2208EF1EC(unsigned __int16 *a1, unsigned int a2, void *a3)
{
  uint64_t v5 = *(void *)(a3[2] - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  uint64_t v7 = *(void *)(a3[3] - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  if (v8 <= v6) {
    unsigned int v9 = *(_DWORD *)(v5 + 84);
  }
  else {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v10 = a3[4];
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int *)(v11 + 84);
  uint64_t v13 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v14 = *(void *)(*(void *)(a3[3] - 8) + 64);
  uint64_t v15 = *(unsigned __int8 *)(v11 + 80);
  if (v12 <= v9) {
    unsigned int v16 = v9;
  }
  else {
    unsigned int v16 = *(_DWORD *)(v11 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v17 = *(void *)(*(void *)(a3[2] - 8) + 64) + v13;
  int v18 = a2 - v16;
  if (a2 <= v16) {
    goto LABEL_27;
  }
  uint64_t v19 = ((v14 + v15 + (v17 & ~v13)) & ~v15) + *(void *)(*(void *)(v10 - 8) + 64);
  char v20 = 8 * v19;
  if (v19 <= 3)
  {
    unsigned int v22 = ((v18 + ~(-1 << v20)) >> v20) + 1;
    if (HIWORD(v22))
    {
      int v21 = *(_DWORD *)((char *)a1 + v19);
      if (!v21) {
        goto LABEL_27;
      }
      goto LABEL_17;
    }
    if (v22 > 0xFF)
    {
      int v21 = *(unsigned __int16 *)((char *)a1 + v19);
      if (!*(unsigned __int16 *)((char *)a1 + v19)) {
        goto LABEL_27;
      }
      goto LABEL_17;
    }
    if (v22 < 2)
    {
LABEL_27:
      if (v16)
      {
        if (v6 == v16)
        {
          id v26 = *(uint64_t (**)(void))(v5 + 48);
          return v26();
        }
        else
        {
          unint64_t v28 = ((unint64_t)a1 + v17) & ~v13;
          if (v8 == v16)
          {
            v29 = *(uint64_t (**)(unint64_t))(v7 + 48);
            return v29(v28);
          }
          else
          {
            unint64_t v30 = (v28 + v14 + v15) & ~v15;
            uint64_t v31 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v11 + 48);
            return v31(v30, v12, v10);
          }
        }
      }
      return 0;
    }
  }
  int v21 = *((unsigned __int8 *)a1 + v19);
  if (!*((unsigned char *)a1 + v19)) {
    goto LABEL_27;
  }
LABEL_17:
  int v23 = (v21 - 1) << v20;
  if (v19 > 3) {
    int v23 = 0;
  }
  if (v19)
  {
    if (v19 <= 3) {
      int v24 = ((v14 + v15 + (v17 & ~v13)) & ~v15) + *(_DWORD *)(*(void *)(v10 - 8) + 64);
    }
    else {
      int v24 = 4;
    }
    switch(v24)
    {
      case 2:
        int v25 = *a1;
        break;
      case 3:
        int v25 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v25 = *(_DWORD *)a1;
        break;
      default:
        int v25 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v25 = 0;
  }
  return v16 + (v25 | v23) + 1;
}

void sub_2208EF4C0(char *a1, unsigned int a2, unsigned int a3, void *a4)
{
  uint64_t v6 = *(void *)(a4[2] - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = a4[3];
  uint64_t v9 = a4[4];
  uint64_t v10 = *(void *)(v8 - 8);
  unsigned int v11 = *(_DWORD *)(v10 + 84);
  if (v11 <= v7) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v13 = *(void *)(v9 - 8);
  uint64_t v14 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = *(void *)(*(void *)(v8 - 8) + 64);
  uint64_t v16 = *(unsigned __int8 *)(v13 + 80);
  if (*(_DWORD *)(v13 + 84) <= v12) {
    unsigned int v17 = v12;
  }
  else {
    unsigned int v17 = *(_DWORD *)(v13 + 84);
  }
  uint64_t v18 = *(void *)(*(void *)(a4[2] - 8) + 64) + v14;
  size_t v19 = ((v15 + v16 + (v18 & ~v14)) & ~v16) + *(void *)(*(void *)(v9 - 8) + 64);
  BOOL v20 = a3 >= v17;
  unsigned int v21 = a3 - v17;
  if (v21 != 0 && v20)
  {
    if (v19 <= 3)
    {
      unsigned int v26 = ((v21 + ~(-1 << (8 * v19))) >> (8 * v19)) + 1;
      if (HIWORD(v26))
      {
        int v22 = 4;
      }
      else if (v26 >= 0x100)
      {
        int v22 = 2;
      }
      else
      {
        int v22 = v26 > 1;
      }
    }
    else
    {
      int v22 = 1;
    }
  }
  else
  {
    int v22 = 0;
  }
  if (v17 < a2)
  {
    unsigned int v23 = ~v17 + a2;
    if (v19 < 4)
    {
      int v24 = (v23 >> (8 * v19)) + 1;
      if (v19)
      {
        int v27 = v23 & ~(-1 << (8 * v19));
        bzero(a1, v19);
        if (v19 == 3)
        {
          *(_WORD *)a1 = v27;
          a1[2] = BYTE2(v27);
        }
        else if (v19 == 2)
        {
          *(_WORD *)a1 = v27;
        }
        else
        {
          *a1 = v27;
        }
      }
    }
    else
    {
      bzero(a1, v19);
      *(_DWORD *)a1 = v23;
      int v24 = 1;
    }
    switch(v22)
    {
      case 1:
        a1[v19] = v24;
        return;
      case 2:
        *(_WORD *)&a1[v19] = v24;
        return;
      case 3:
        goto LABEL_48;
      case 4:
        *(_DWORD *)&a1[v19] = v24;
        return;
      default:
        return;
    }
  }
  uint64_t v25 = ~v14;
  switch(v22)
  {
    case 1:
      a1[v19] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    case 2:
      *(_WORD *)&a1[v19] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    case 3:
LABEL_48:
      __break(1u);
      JUMPOUT(0x2208EF83CLL);
    case 4:
      *(_DWORD *)&a1[v19] = 0;
      goto LABEL_26;
    default:
LABEL_26:
      if (!a2) {
        return;
      }
LABEL_27:
      if (v7 == v17)
      {
        unint64_t v28 = *(void (**)(char *))(v6 + 56);
        v29 = a1;
LABEL_30:
        v28(v29);
        return;
      }
      unint64_t v30 = (unint64_t)&a1[v18] & v25;
      if (v11 != v17)
      {
        v29 = (char *)((v30 + v15 + v16) & ~v16);
        unint64_t v28 = *(void (**)(char *))(v13 + 56);
        goto LABEL_30;
      }
      uint64_t v31 = *(void (**)(unint64_t))(v10 + 56);
      v31(v30);
      return;
  }
}

uint64_t type metadata accessor for Tuple3()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2208EF87C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 40);
}

uint64_t sub_2208EF884()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_2208EF954(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  unint64_t v11 = ((v6 + v9) & ~v9) + *(void *)(v8 + 64);
  uint64_t v12 = (*(unsigned char *)(v5 + 80) | *(unsigned char *)(v8 + 80));
  if (v12 > 7 || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0 || v11 > 0x18)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v12 + 16) & ~v12));
    swift_retain();
  }
  else
  {
    uint64_t v16 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)v4 + v10) & v16, ((unint64_t)a2 + v10) & v16, v7);
  }
  return v4;
}

uint64_t sub_2208EFAB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v6 = *(uint64_t (**)(unint64_t))(v5 + 8);
  unint64_t v7 = (*(void *)(v4 + 56) + a1 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);

  return v6(v7);
}

uint64_t sub_2208EFB54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(void *)(v6 + 48) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 48) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_2208EFBFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(void *)(v6 + 40) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 40) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_2208EFCA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(void *)(v6 + 32) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 32) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_2208EFD4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(void *)(v6 + 24) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 24) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_2208EFDF4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(a3 + 24);
  unsigned int v6 = *(_DWORD *)(v4 + 84);
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  if (v8 <= v6) {
    unsigned int v10 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v7 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v11 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + v9;
  unsigned int v12 = a2 - v10;
  if (a2 <= v10) {
    goto LABEL_24;
  }
  uint64_t v13 = (v11 & ~v9) + *(void *)(*(void *)(v5 - 8) + 64);
  char v14 = 8 * v13;
  if (v13 <= 3)
  {
    unsigned int v16 = ((v12 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v16))
    {
      int v15 = *(_DWORD *)((char *)a1 + v13);
      if (!v15) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 > 0xFF)
    {
      int v15 = *(unsigned __int16 *)((char *)a1 + v13);
      if (!*(unsigned __int16 *)((char *)a1 + v13)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 < 2)
    {
LABEL_24:
      if (v10)
      {
        if (v6 >= v8) {
          return (*(uint64_t (**)(void))(v4 + 48))();
        }
        else {
          return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(((unint64_t)a1 + v11) & ~v9, v8, v5);
        }
      }
      return 0;
    }
  }
  int v15 = *((unsigned __int8 *)a1 + v13);
  if (!*((unsigned char *)a1 + v13)) {
    goto LABEL_24;
  }
LABEL_14:
  int v17 = (v15 - 1) << v14;
  if (v13 > 3) {
    int v17 = 0;
  }
  if (v13)
  {
    if (v13 <= 3) {
      int v18 = v13;
    }
    else {
      int v18 = 4;
    }
    switch(v18)
    {
      case 2:
        int v19 = *a1;
        break;
      case 3:
        int v19 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v19 = *(_DWORD *)a1;
        break;
      default:
        int v19 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v19 = 0;
  }
  return v10 + (v19 | v17) + 1;
}

void sub_2208EFFEC(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v7) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v13 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + v11;
  size_t v14 = (v13 & ~v11) + *(void *)(*(void *)(v8 - 8) + 64);
  BOOL v15 = a3 >= v12;
  unsigned int v16 = a3 - v12;
  if (v16 != 0 && v15)
  {
    if (v14 <= 3)
    {
      unsigned int v20 = ((v16 + ~(-1 << (8 * v14))) >> (8 * v14)) + 1;
      if (HIWORD(v20))
      {
        int v17 = 4;
      }
      else if (v20 >= 0x100)
      {
        int v17 = 2;
      }
      else
      {
        int v17 = v20 > 1;
      }
    }
    else
    {
      int v17 = 1;
    }
  }
  else
  {
    int v17 = 0;
  }
  if (v12 < a2)
  {
    unsigned int v18 = ~v12 + a2;
    if (v14 < 4)
    {
      int v19 = (v18 >> (8 * v14)) + 1;
      if (v14)
      {
        int v21 = v18 & ~(-1 << (8 * v14));
        bzero(a1, v14);
        if (v14 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v14 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v14);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v14] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v14] = v19;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v14] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x2208F02B8);
    case 4:
      *(_DWORD *)&a1[v14] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 >= v10)
        {
          int v24 = *(void (**)(void))(v6 + 56);
          v24();
        }
        else
        {
          unint64_t v22 = (unint64_t)&a1[v13] & ~v11;
          unsigned int v23 = *(void (**)(unint64_t))(v9 + 56);
          v23(v22);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for Tuple2()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2208F02F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a5, a1);
  uint64_t v8 = type metadata accessor for Tuple2();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5 + *(int *)(v8 + 52), a2, a4);
}

uint64_t sub_2208F03C0()
{
  return sub_22093E370();
}

uint64_t sub_2208F0410()
{
  if (sub_22093E520())
  {
    type metadata accessor for Tuple2();
    char v0 = sub_22093E520();
  }
  else
  {
    char v0 = 0;
  }
  return v0 & 1;
}

uint64_t sub_2208F04A4(uint64_t a1)
{
  return sub_2208F092C(a1, (void (*)(unsigned char *, uint64_t))sub_2208F03C0);
}

uint64_t sub_2208F04D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2208F09CC(a1, a2, a3, (void (*)(unsigned char *, uint64_t))sub_2208F03C0);
}

uint64_t sub_2208F04EC()
{
  return sub_2208F0410();
}

uint64_t sub_2208F04FC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v6 + 16);
  MEMORY[0x270FA5388](v6);
  v13[0] = 0x28656C707554;
  v13[1] = 0xE600000000000000;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v2, v9);
  sub_22093E620();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v2 + *(int *)(a1 + 52), v4);
  sub_22093E620();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  return v13[0];
}

uint64_t sub_2208F06CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a7, a1, a4);
  uint64_t v12 = type metadata accessor for Tuple3();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(a7 + *(int *)(v12 + 68), a2, a5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(a7 + *(int *)(v12 + 72), a3, a6);
}

uint64_t sub_2208F07F4()
{
  return sub_22093E370();
}

uint64_t sub_2208F0860()
{
  if (sub_22093E520() & 1) != 0 && (type metadata accessor for Tuple3(), (sub_22093E520())) {
    char v0 = sub_22093E520();
  }
  else {
    char v0 = 0;
  }
  return v0 & 1;
}

uint64_t sub_2208F092C(uint64_t a1, void (*a2)(unsigned char *, uint64_t))
{
  sub_22093F430();
  a2(v5, a1);
  return sub_22093F490();
}

uint64_t sub_2208F0984(uint64_t a1)
{
  return sub_2208F092C(a1, (void (*)(unsigned char *, uint64_t))sub_2208F07F4);
}

uint64_t sub_2208F09B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2208F09CC(a1, a2, a3, (void (*)(unsigned char *, uint64_t))sub_2208F07F4);
}

uint64_t sub_2208F09CC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *, uint64_t))
{
  sub_22093F430();
  a4(v7, a2);
  return sub_22093F490();
}

uint64_t sub_2208F0A20()
{
  return sub_2208F0860();
}

uint64_t sub_2208F0A34(uint64_t a1)
{
  uint64_t v17 = *(void *)(a1 + 32);
  uint64_t v16 = *(void *)(v17 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](a1);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v3 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v3);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v8 + 16);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v8);
  size_t v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = 0;
  unint64_t v19 = 0xE000000000000000;
  sub_22093EEA0();
  swift_bridgeObjectRelease();
  uint64_t v18 = 0x28656C707554;
  unint64_t v19 = 0xE600000000000000;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v1, v11);
  sub_22093E620();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v1 + *(int *)(a1 + 68), v6);
  sub_22093E620();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v5, v1 + *(int *)(a1 + 72), v17);
  sub_22093E620();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  return v18;
}

uint64_t sub_2208F0CE0()
{
  return swift_getWitnessTable();
}

uint64_t sub_2208F0CFC()
{
  return swift_getWitnessTable();
}

uint64_t sub_2208F0D18(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v29 = a5;
  uint64_t v30 = a8;
  uint64_t v10 = v9;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v28 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v40 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  char v36 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v13 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  BOOL v15 = (char *)&v26 - v14;
  MEMORY[0x270FA5388](v13);
  v33 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v31 = *(void *)(v17 - 8);
  uint64_t v32 = v17;
  MEMORY[0x270FA5388](v17);
  unint64_t v19 = (char *)&v26 - v18;
  uint64_t v34 = v8;
  uint64_t v20 = sub_22093EA80();
  if (!v20) {
    return sub_22093E890();
  }
  uint64_t v21 = v20;
  int v27 = v15;
  uint64_t v43 = sub_22093E230();
  uint64_t v35 = sub_22093EFF0();
  sub_22093EFB0();
  uint64_t v41 = v19;
  uint64_t result = sub_22093EA60();
  if (v21 < 0)
  {
    __break(1u);
  }
  else
  {
    unsigned int v23 = (void (**)(char *))(v36 + 2);
    ++v36;
    v37 = v23;
    int v24 = v27;
    while (1)
    {
      uint64_t v25 = (void (*)(char *, void))sub_22093EBD0();
      (*v37)(v24);
      v25(v42, 0);
      v38(v24, v40);
      if (v10) {
        break;
      }
      uint64_t v10 = 0;
      (*v36)(v24, AssociatedTypeWitness);
      sub_22093EFD0();
      sub_22093EAF0();
      if (!--v21)
      {
        (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
        return v43;
      }
    }
    (*v36)(v24, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v28 + 32))(v30, v40, v29);
  }
  return result;
}

uint64_t RowGrouping.randomSplit(by:seed:)(uint64_t *a1, uint64_t *a2, uint64_t a3, char a4, uint64_t a5, double a6)
{
  uint64_t v24 = v6[2];
  uint64_t v25 = v6[1];
  uint64_t v45 = *v6;
  uint64_t v7 = *(void *)(a5 + 16);
  uint64_t v8 = *(void *)(a5 + 24);
  uint64_t v40 = v7;
  uint64_t v41 = v8;
  double v42 = a6;
  uint64_t v43 = a3;
  char v44 = a4 & 1;
  uint64_t v35 = v7;
  uint64_t v36 = v8;
  v37 = sub_2208F6D0C;
  uint64_t v38 = &v39;
  sub_22093ED30();
  swift_bridgeObjectRetain();
  swift_getTupleTypeMetadata2();
  uint64_t v9 = sub_22093E900();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267F197E8);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v12 = MEMORY[0x263F8E628];
  uint64_t v13 = MEMORY[0x263F8E658];
  uint64_t v15 = sub_2208F0D18((void (*)(char *, char *))sub_2208F6E08, (uint64_t)v34, v9, TupleTypeMetadata2, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v14);
  swift_bridgeObjectRelease();
  uint64_t v45 = v15;
  uint64_t v32 = v7;
  uint64_t v33 = v8;
  uint64_t v16 = sub_22093E900();
  uint64_t v17 = swift_getTupleTypeMetadata2();
  uint64_t v18 = swift_getWitnessTable();
  uint64_t v20 = sub_2208F0D18((void (*)(char *, char *))sub_2208F70D8, (uint64_t)v31, v16, v17, v12, v18, v13, v19);
  uint64_t v45 = v15;
  uint64_t v29 = v7;
  uint64_t v30 = v8;
  uint64_t v22 = sub_2208F0D18((void (*)(char *, char *))sub_2208F739C, (uint64_t)v28, v16, v17, MEMORY[0x263F8E628], v18, v13, v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  RowGrouping.init<A>(groups:groupKeysColumnName:)(v20, v25, v24, v7, (uint64_t)&type metadata for DataFrame.Slice, v8, (uint64_t)&protocol witness table for DataFrame.Slice, a1);
  swift_bridgeObjectRetain();
  return RowGrouping.init<A>(groups:groupKeysColumnName:)(v22, v25, v24, v7, (uint64_t)&type metadata for DataFrame.Slice, v8, (uint64_t)&protocol witness table for DataFrame.Slice, a2);
}

TabularData::DataFrame __swiftcall RowGrouping.ungrouped()()
{
  uint64_t v3 = v1;
  uint64_t v4 = v2[1];
  uint64_t v5 = v2[2];
  uint64_t v32 = *v2;
  uint64_t v6 = *(void *)(v0 + 24);
  uint64_t v25 = *(void *)(v0 + 16);
  uint64_t v26 = v6;
  uint64_t v27 = v32;
  uint64_t v28 = v4;
  uint64_t v29 = v5;
  v23[2] = v25;
  v23[3] = v6;
  v23[4] = sub_2208F73BC;
  v23[5] = &v24;
  sub_22093ED30();
  swift_bridgeObjectRetain();
  swift_getTupleTypeMetadata2();
  uint64_t v7 = sub_22093E900();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v10 = (void *)sub_2208F0D18((void (*)(char *, char *))sub_2208F73CC, (uint64_t)v23, v7, (uint64_t)&type metadata for DataFrame, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v9);
  swift_bridgeObjectRelease();
  uint64_t v11 = v10[2];
  if (v11)
  {
    uint64_t v13 = v10[4];
    uint64_t v12 = v10[5];
    uint64_t v14 = v10[6];
    uint64_t v32 = v13;
    uint64_t v33 = v12;
    uint64_t v34 = v14;
    uint64_t v15 = v11 - 1;
    if (v11 == 1)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v16 = (void *)swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v21 = v10 + 9;
      do
      {
        uint64_t v22 = *v21;
        long long v30 = *((_OWORD *)v21 - 1);
        uint64_t v31 = v22;
        v20.columns._rawValue = &v30;
        DataFrame.append(rowsOf:)(v20);
        v21 += 3;
        --v15;
      }
      while (v15);
      uint64_t v16 = (void *)swift_bridgeObjectRelease_n();
      uint64_t v13 = v32;
      uint64_t v12 = v33;
      uint64_t v14 = v34;
    }
    *uint64_t v3 = v13;
    v3[1] = v12;
    v3[2] = v14;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v19 = MEMORY[0x263F8EE78];
    uint64_t v16 = (void *)sub_22080CCF4(MEMORY[0x263F8EE78]);
    *uint64_t v3 = v19;
    v3[1] = v19;
    v3[2] = v16;
  }
  result.columnIndicesByName._rawValue = v18;
  result.aliases._rawValue = v17;
  result.columns._rawValue = v16;
  return result;
}

uint64_t sub_2208F15A4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6 = a6;
  uint64_t v7 = a3;
  uint64_t v8 = 1;
  do
  {
    swift_bridgeObjectRetain();
    sub_22093E6C0();
    sub_22093F1A0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v10 = v7;
    if (*(void *)(v6 + 16))
    {
      swift_bridgeObjectRetain();
      sub_22081D290(a2, v7);
      char v12 = v11;
      uint64_t result = swift_bridgeObjectRelease();
      if (v12) {
        continue;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v14 = swift_bridgeObjectRetain();
    uint64_t v15 = sub_220831E80(v14, a2, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int64_t v16 = *(void *)(v15 + 16);
    if (v16)
    {
      uint64_t v32 = v7;
      uint64_t v34 = MEMORY[0x263F8EE78];
      sub_220826C78(0, v16, 0);
      uint64_t v17 = v34;
      uint64_t v18 = (uint64_t *)(v15 + 56);
      do
      {
        uint64_t v19 = *(v18 - 1);
        uint64_t v20 = *v18;
        unint64_t v21 = *(void *)(v34 + 16);
        unint64_t v22 = *(void *)(v34 + 24);
        swift_bridgeObjectRetain();
        if (v21 >= v22 >> 1) {
          sub_220826C78((char *)(v22 > 1), v21 + 1, 1);
        }
        *(void *)(v34 + 16) = v21 + 1;
        uint64_t v23 = v34 + 16 * v21;
        *(void *)(v23 + 32) = v19;
        *(void *)(v23 + 40) = v20;
        v18 += 4;
        --v16;
      }
      while (v16);
      swift_bridgeObjectRelease();
      uint64_t v10 = v32;
      uint64_t v7 = a3;
      uint64_t v6 = a6;
      uint64_t v24 = *(void *)(v34 + 16);
      if (!v24)
      {
LABEL_17:
        uint64_t result = swift_bridgeObjectRelease();
LABEL_18:
        *a1 = a2;
        a1[1] = v10;
        return result;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v17 = MEMORY[0x263F8EE78];
      uint64_t v24 = *(void *)(MEMORY[0x263F8EE78] + 16);
      if (!v24) {
        goto LABEL_17;
      }
    }
    uint64_t v25 = *(void *)(v17 + 32);
    uint64_t v26 = *(void *)(v17 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (v24 != 1 || !*(void *)(v6 + 16)) {
      goto LABEL_17;
    }
    sub_22081D290(v25, v26);
    char v28 = v27;
    uint64_t result = swift_bridgeObjectRelease();
    if ((v28 & 1) == 0) {
      goto LABEL_18;
    }
  }
  while (!__OFADD__(v8++, 1));
  __break(1u);
  return result;
}

uint64_t sub_2208F180C(uint64_t a1)
{
  return sub_2208F1B64(a1, (void (*)(void *__return_ptr, void, void, uint64_t))sub_22088F714, &qword_26AD413D8, (void (*)(long long *__return_ptr, void, void, uint64_t))sub_22088E6B0);
}

uint64_t sub_2208F1840(uint64_t a1)
{
  return sub_2208F1D0C(a1, (void (*)(void *__return_ptr, void, void, uint64_t))sub_22088F900, (void (*)(void, void))sub_2208904FC, &qword_267F185E0, (void (*)(long long *__return_ptr, void, void, uint64_t))sub_22088E840);
}

uint64_t sub_2208F1888(uint64_t a1)
{
  return sub_2208F1B64(a1, (void (*)(void *__return_ptr, void, void, uint64_t))sub_22088F714, &qword_26AD413D0, (void (*)(long long *__return_ptr, void, void, uint64_t))sub_22088E844);
}

uint64_t sub_2208F18BC(uint64_t a1)
{
  return sub_2208F1D0C(a1, (void (*)(void *__return_ptr, void, void, uint64_t))sub_22088F904, (void (*)(void, void))sub_220890508, &qword_26AD413C8, (void (*)(long long *__return_ptr, void, void, uint64_t))sub_22088E9D4);
}

uint64_t sub_2208F1904(uint64_t a1)
{
  return sub_2208F1B64(a1, (void (*)(void *__return_ptr, void, void, uint64_t))sub_22088FD6C, &qword_26AD41120, (void (*)(long long *__return_ptr, void, void, uint64_t))sub_22088ED7C);
}

uint64_t sub_2208F1938(uint64_t a1)
{
  return sub_2208F1D0C(a1, (void (*)(void *__return_ptr, void, void, uint64_t))sub_22088FAF0, (void (*)(void, void))sub_2208906DC, &qword_26AD41118, (void (*)(long long *__return_ptr, void, void, uint64_t))sub_22088EB70);
}

uint64_t sub_2208F1980(uint64_t a1)
{
  return sub_2208F1D0C(a1, (void (*)(void *__return_ptr, void, void, uint64_t))sub_22088F900, (void (*)(void, void))sub_2208908C0, &qword_267F18808, (void (*)(long long *__return_ptr, void, void, uint64_t))sub_22088E840);
}

uint64_t sub_2208F19C8(uint64_t a1)
{
  return sub_2208F1D0C(a1, (void (*)(void *__return_ptr, void, void, uint64_t))sub_22088F900, (void (*)(void, void))sub_2208908CC, &qword_267F18810, (void (*)(long long *__return_ptr, void, void, uint64_t))sub_22088E840);
}

uint64_t sub_2208F1A10(uint64_t a1)
{
  return sub_2208F1D0C(a1, (void (*)(void *__return_ptr, void, void, uint64_t))sub_22088F900, (void (*)(void, void))sub_2208908D8, &qword_267F187B0, (void (*)(long long *__return_ptr, void, void, uint64_t))sub_22088E840);
}

uint64_t sub_2208F1A58(uint64_t a1)
{
  return sub_2208F1D0C(a1, (void (*)(void *__return_ptr, void, void, uint64_t))sub_22088F900, (void (*)(void, void))sub_2208908E4, &qword_267F187A8, (void (*)(long long *__return_ptr, void, void, uint64_t))sub_22088E840);
}

uint64_t sub_2208F1AA0(uint64_t a1)
{
  return sub_2208F1D0C(a1, (void (*)(void *__return_ptr, void, void, uint64_t))sub_220890120, (void (*)(void, void))sub_2208908F0, &qword_267F18790, (void (*)(long long *__return_ptr, void, void, uint64_t))sub_22088EEF0);
}

uint64_t sub_2208F1AE8(uint64_t a1)
{
  return sub_2208F1D0C(a1, (void (*)(void *__return_ptr, void, void, uint64_t))sub_22088F900, (void (*)(void, void))sub_2208909E0, &qword_267F18778, (void (*)(long long *__return_ptr, void, void, uint64_t))sub_22088E840);
}

uint64_t sub_2208F1B30(uint64_t a1)
{
  return sub_2208F1B64(a1, (void (*)(void *__return_ptr, void, void, uint64_t))sub_22088FF34, &qword_267F18898, (void (*)(long long *__return_ptr, void, void, uint64_t))sub_22088F250);
}

uint64_t sub_2208F1B64(uint64_t a1, void (*a2)(void *__return_ptr, void, void, uint64_t), uint64_t *a3, void (*a4)(long long *__return_ptr, void, void, uint64_t))
{
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *v4;
  if (isUniquelyReferenced_nonNull_native)
  {
    swift_beginAccess();
    a2(v16, *(void *)(v10 + 16), *(void *)(v10 + 24), a1);
    uint64_t result = *(void *)(v10 + 16);
    if (result)
    {
      if ((*(void *)(result + 8) & 0x8000000000000000) == 0)
      {
        MEMORY[0x223C6B140]();
        uint64_t v12 = v16[0];
        uint64_t v13 = v16[1];
        uint64_t result = swift_beginAccess();
        *(void *)(v10 + 16) = v12;
        *(void *)(v10 + 24) = v13;
        return result;
      }
      __break(1u);
    }
    __break(1u);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a3);
    uint64_t v14 = swift_allocObject();
    swift_beginAccess();
    a4(&v15, *(void *)(v10 + 16), *(void *)(v10 + 24), a1);
    *(_OWORD *)(v14 + 16) = v15;
    uint64_t result = swift_release();
    *uint64_t v4 = v14;
  }
  return result;
}

uint64_t sub_2208F1C7C(uint64_t a1)
{
  return sub_2208F1D0C(a1, (void (*)(void *__return_ptr, void, void, uint64_t))sub_22088F904, (void (*)(void, void))sub_2208907D8, &qword_267F188A0, (void (*)(long long *__return_ptr, void, void, uint64_t))sub_22088F3E0);
}

uint64_t sub_2208F1CC4(uint64_t a1)
{
  return sub_2208F1D0C(a1, (void (*)(void *__return_ptr, void, void, uint64_t))sub_22088FAEC, (void (*)(void, void))sub_220890AD8, &qword_267F188D0, (void (*)(long long *__return_ptr, void, void, uint64_t))sub_22088F57C);
}

uint64_t sub_2208F1D0C(uint64_t a1, void (*a2)(void *__return_ptr, void, void, uint64_t), void (*a3)(void, void), uint64_t *a4, void (*a5)(long long *__return_ptr, void, void, uint64_t))
{
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v12 = *v5;
  if (isUniquelyReferenced_nonNull_native)
  {
    swift_beginAccess();
    a2(v18, *(void *)(v12 + 16), *(void *)(v12 + 24), a1);
    a3(*(void *)(v12 + 16), *(void *)(v12 + 24));
    uint64_t v13 = v18[0];
    uint64_t v14 = v18[1];
    uint64_t result = swift_beginAccess();
    *(void *)(v12 + 16) = v13;
    *(void *)(v12 + 24) = v14;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a4);
    uint64_t v16 = swift_allocObject();
    swift_beginAccess();
    a5(&v17, *(void *)(v12 + 16), *(void *)(v12 + 24), a1);
    *(_OWORD *)(v16 + 16) = v17;
    uint64_t result = swift_release();
    *uint64_t v5 = v16;
  }
  return result;
}

uint64_t sub_2208F1E18(uint64_t a1, char a2)
{
  return sub_2208F205C(a1, a2, &qword_26AD413D8, (void (*)(long long *__return_ptr, uint64_t *, void, uint64_t))sub_22088E6B0, (void (*)(uint64_t, uint64_t))sub_2208939A4, (uint64_t (*)(uint64_t, void, void, void))sub_220890BC8);
}

uint64_t sub_2208F1E60(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t result = swift_beginAccess();
  uint64_t v5 = *(void *)(v3 + 16);
  if (!v5) {
    goto LABEL_17;
  }
  uint64_t v6 = *(void *)(v5 + 8);
  uint64_t v7 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v1;
  uint64_t v10 = (uint64_t **)(*v1 + 16);
  if (isUniquelyReferenced_nonNull_native)
  {
    uint64_t result = swift_beginAccess();
    if (*v10)
    {
      if (**v10 < v7) {
        sub_220893ADC(v7, 1);
      }
      goto LABEL_14;
    }
    goto LABEL_18;
  }
  uint64_t result = swift_beginAccess();
  char v11 = *v10;
  if (v11)
  {
    uint64_t v12 = *v11;
    if (*v11 >= v7)
    {
LABEL_13:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41118);
      uint64_t v13 = swift_allocObject();
      sub_22088EB70((uint64_t)v11, v12, (uint64_t *)&v14);
      *(_OWORD *)(v13 + 16) = v14;
      swift_release();
      *uint64_t v1 = v13;
      uint64_t v9 = v13;
LABEL_14:
      swift_beginAccess();
      return sub_220890E2C(a1, *(void **)(v9 + 16));
    }
    if (v12 + 0x4000000000000000 >= 0)
    {
      if (2 * v12 <= v7) {
        uint64_t v12 = v7;
      }
      else {
        v12 *= 2;
      }
      goto LABEL_13;
    }
    goto LABEL_16;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_2208F1FCC(uint64_t a1)
{
  return sub_2208F2798(a1, &qword_267F18808, (void (*)(long long *__return_ptr, uint64_t *, void, uint64_t))sub_22088E840, (void (*)(uint64_t, uint64_t))sub_220893C58, (uint64_t (*)(uint64_t, void, void))sub_220890C88);
}

uint64_t sub_2208F2014(uint64_t a1, char a2)
{
  return sub_2208F205C(a1, a2, &qword_26AD413D0, (void (*)(long long *__return_ptr, uint64_t *, void, uint64_t))sub_22088E844, (void (*)(uint64_t, uint64_t))sub_2208939A4, (uint64_t (*)(uint64_t, void, void, void))sub_220890C8C);
}

uint64_t sub_2208F205C(uint64_t a1, char a2, uint64_t *a3, void (*a4)(long long *__return_ptr, uint64_t *, void, uint64_t), void (*a5)(uint64_t, uint64_t), uint64_t (*a6)(uint64_t, void, void, void))
{
  uint64_t v13 = *v6;
  uint64_t result = swift_beginAccess();
  uint64_t v15 = *(void *)(v13 + 16);
  if (!v15) {
    goto LABEL_17;
  }
  uint64_t v16 = *(void *)(v15 + 8);
  uint64_t v17 = v16 + 1;
  if (__OFADD__(v16, 1))
  {
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v19 = *v6;
  uint64_t v20 = (uint64_t **)(*v6 + 16);
  if (isUniquelyReferenced_nonNull_native)
  {
    uint64_t result = swift_beginAccess();
    if (*v20)
    {
      if (**v20 < v17) {
        a5(v17, 1);
      }
      goto LABEL_14;
    }
    goto LABEL_18;
  }
  uint64_t result = swift_beginAccess();
  unint64_t v21 = *v20;
  if (*v20)
  {
    uint64_t v22 = *v21;
    if (*v21 >= v17)
    {
LABEL_13:
      __swift_instantiateConcreteTypeFromMangledName(a3);
      uint64_t v23 = swift_allocObject();
      a4(&v24, v21, *(void *)(v19 + 24), v22);
      *(_OWORD *)(v23 + 16) = v24;
      swift_release();
      *uint64_t v6 = v23;
      uint64_t v19 = v23;
LABEL_14:
      swift_beginAccess();
      return a6(a1, a2 & 1, *(void *)(v19 + 16), *(void *)(v19 + 24));
    }
    if (v22 + 0x4000000000000000 >= 0)
    {
      if (2 * v22 <= v17) {
        uint64_t v22 = v17;
      }
      else {
        v22 *= 2;
      }
      goto LABEL_13;
    }
    goto LABEL_16;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_2208F21FC(uint64_t a1)
{
  return sub_2208F2798(a1, &qword_267F18810, (void (*)(long long *__return_ptr, uint64_t *, void, uint64_t))sub_22088E840, (void (*)(uint64_t, uint64_t))sub_220893D3C, (uint64_t (*)(uint64_t, void, void))sub_220890C88);
}

uint64_t sub_2208F2244(uint64_t a1, uint64_t a2)
{
  return sub_2208F25B4(a1, a2, &qword_26AD413C8, (void (*)(long long *__return_ptr, uint64_t *, void, uint64_t))sub_22088E9D4, (void (*)(uint64_t, uint64_t))sub_2208939C8, (uint64_t (*)(uint64_t, uint64_t, void, void))sub_220890D48);
}

uint64_t sub_2208F228C(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t result = swift_beginAccess();
  uint64_t v5 = *(void *)(v3 + 16);
  if (!v5) {
    goto LABEL_17;
  }
  uint64_t v6 = *(void *)(v5 + 8);
  uint64_t v7 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v1;
  uint64_t v10 = (uint64_t **)(*v1 + 16);
  if (isUniquelyReferenced_nonNull_native)
  {
    uint64_t result = swift_beginAccess();
    if (*v10)
    {
      if (**v10 < v7) {
        sub_220893B34(v7, 1);
      }
      goto LABEL_14;
    }
    goto LABEL_18;
  }
  uint64_t result = swift_beginAccess();
  char v11 = *v10;
  if (v11)
  {
    uint64_t v12 = *v11;
    if (*v11 >= v7)
    {
LABEL_13:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41120);
      uint64_t v13 = swift_allocObject();
      sub_22088ED7C((uint64_t)v11, v12, (uint64_t *)&v14);
      *(_OWORD *)(v13 + 16) = v14;
      swift_release();
      *uint64_t v1 = v13;
      uint64_t v9 = v13;
LABEL_14:
      swift_beginAccess();
      return sub_22089114C(a1, *(void **)(v9 + 16));
    }
    if (v12 + 0x4000000000000000 >= 0)
    {
      if (2 * v12 <= v7) {
        uint64_t v12 = v7;
      }
      else {
        v12 *= 2;
      }
      goto LABEL_13;
    }
    goto LABEL_16;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_2208F23F8(unint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t result = swift_beginAccess();
  uint64_t v5 = *(void *)(v3 + 16);
  if (!v5) {
    goto LABEL_17;
  }
  uint64_t v6 = *(void *)(v5 + 8);
  uint64_t v7 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v1;
  uint64_t v10 = (uint64_t **)(*v1 + 16);
  if (isUniquelyReferenced_nonNull_native)
  {
    uint64_t result = swift_beginAccess();
    if (*v10)
    {
      if (**v10 < v7) {
        sub_220893B4C(v7, 1);
      }
      goto LABEL_14;
    }
    goto LABEL_18;
  }
  uint64_t result = swift_beginAccess();
  char v11 = *v10;
  if (v11)
  {
    uint64_t v12 = *v11;
    if (*v11 >= v7)
    {
LABEL_13:
      __swift_instantiateConcreteTypeFromMangledName(&qword_267F18898);
      uint64_t v13 = swift_allocObject();
      sub_22088F250((uint64_t)v11, v12, (uint64_t *)&v14);
      *(_OWORD *)(v13 + 16) = v14;
      swift_release();
      *uint64_t v1 = v13;
      uint64_t v9 = v13;
LABEL_14:
      swift_beginAccess();
      return sub_220891214(a1 | ((HIDWORD(a1) & 1) << 32), *(void **)(v9 + 16));
    }
    if (v12 + 0x4000000000000000 >= 0)
    {
      if (2 * v12 <= v7) {
        uint64_t v12 = v7;
      }
      else {
        v12 *= 2;
      }
      goto LABEL_13;
    }
    goto LABEL_16;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_2208F256C(uint64_t a1, uint64_t a2)
{
  return sub_2208F25B4(a1, a2, &qword_267F188A0, (void (*)(long long *__return_ptr, uint64_t *, void, uint64_t))sub_22088F3E0, (void (*)(uint64_t, uint64_t))sub_220893B08, (uint64_t (*)(uint64_t, uint64_t, void, void))sub_220891088);
}

uint64_t sub_2208F25B4(uint64_t a1, uint64_t a2, uint64_t *a3, void (*a4)(long long *__return_ptr, uint64_t *, void, uint64_t), void (*a5)(uint64_t, uint64_t), uint64_t (*a6)(uint64_t, uint64_t, void, void))
{
  uint64_t v13 = *v6;
  uint64_t result = swift_beginAccess();
  uint64_t v15 = *(void *)(v13 + 16);
  if (!v15) {
    goto LABEL_17;
  }
  uint64_t v16 = *(void *)(v15 + 8);
  uint64_t v17 = v16 + 1;
  if (__OFADD__(v16, 1))
  {
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v19 = *v6;
  uint64_t v20 = (uint64_t **)(*v6 + 16);
  if (isUniquelyReferenced_nonNull_native)
  {
    uint64_t result = swift_beginAccess();
    if (*v20)
    {
      if (**v20 < v17) {
        a5(v17, 1);
      }
      goto LABEL_14;
    }
    goto LABEL_18;
  }
  uint64_t result = swift_beginAccess();
  unint64_t v21 = *v20;
  if (*v20)
  {
    uint64_t v22 = *v21;
    if (*v21 >= v17)
    {
LABEL_13:
      __swift_instantiateConcreteTypeFromMangledName(a3);
      uint64_t v23 = swift_allocObject();
      a4(&v24, v21, *(void *)(v19 + 24), v22);
      *(_OWORD *)(v23 + 16) = v24;
      swift_release();
      *uint64_t v6 = v23;
      uint64_t v19 = v23;
LABEL_14:
      swift_beginAccess();
      return a6(a1, a2, *(void *)(v19 + 16), *(void *)(v19 + 24));
    }
    if (v22 + 0x4000000000000000 >= 0)
    {
      if (2 * v22 <= v17) {
        uint64_t v22 = v17;
      }
      else {
        v22 *= 2;
      }
      goto LABEL_13;
    }
    goto LABEL_16;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_2208F2750(uint64_t a1)
{
  return sub_2208F2798(a1, &qword_267F185E0, (void (*)(long long *__return_ptr, uint64_t *, void, uint64_t))sub_22088E840, (void (*)(uint64_t, uint64_t))sub_2208939BC, (uint64_t (*)(uint64_t, void, void))sub_220890C88);
}

uint64_t sub_2208F2798(uint64_t a1, uint64_t *a2, void (*a3)(long long *__return_ptr, uint64_t *, void, uint64_t), void (*a4)(uint64_t, uint64_t), uint64_t (*a5)(uint64_t, void, void))
{
  uint64_t v11 = *v5;
  uint64_t result = swift_beginAccess();
  uint64_t v13 = *(void *)(v11 + 16);
  if (!v13) {
    goto LABEL_17;
  }
  uint64_t v14 = *(void *)(v13 + 8);
  uint64_t v15 = v14 + 1;
  if (__OFADD__(v14, 1))
  {
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v17 = *v5;
  uint64_t v18 = (uint64_t **)(*v5 + 16);
  if (isUniquelyReferenced_nonNull_native)
  {
    uint64_t result = swift_beginAccess();
    if (*v18)
    {
      if (**v18 < v15) {
        a4(v15, 1);
      }
      goto LABEL_14;
    }
    goto LABEL_18;
  }
  uint64_t result = swift_beginAccess();
  uint64_t v19 = *v18;
  if (*v18)
  {
    uint64_t v20 = *v19;
    if (*v19 >= v15)
    {
LABEL_13:
      __swift_instantiateConcreteTypeFromMangledName(a2);
      uint64_t v21 = swift_allocObject();
      a3(&v22, v19, *(void *)(v17 + 24), v20);
      *(_OWORD *)(v21 + 16) = v22;
      swift_release();
      *uint64_t v5 = v21;
      uint64_t v17 = v21;
LABEL_14:
      swift_beginAccess();
      return a5(a1, *(void *)(v17 + 16), *(void *)(v17 + 24));
    }
    if (v20 + 0x4000000000000000 >= 0)
    {
      if (2 * v20 <= v15) {
        uint64_t v20 = v15;
      }
      else {
        v20 *= 2;
      }
      goto LABEL_13;
    }
    goto LABEL_16;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_2208F292C()
{
  sub_2208F29B8((uint64_t)v3);
  sub_220833B58((uint64_t)v3);
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_22083196C(v0, (uint64_t)v3);
  sub_220833BC0((uint64_t)v3);
  swift_bridgeObjectRelease();
  sub_220833BC0((uint64_t)v3);
  return v1;
}

double sub_2208F29B8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_22093ED30();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v6 = (char *)&v13 - v5;
  uint64_t v15 = *v1;
  sub_22093E900();
  swift_getWitnessTable();
  if (sub_22093EB70())
  {
    int64x2_t v14 = vdupq_n_s64(MEMORY[0x263F8EE78]);
    unint64_t v7 = sub_22080CCF4(MEMORY[0x263F8EE78]);
    long long v8 = 0uLL;
    char v9 = 2;
  }
  else
  {
    sub_22093E940();
    uint64_t v10 = &v6[*(int *)(TupleTypeMetadata2 + 48)];
    int64x2_t v11 = *(int64x2_t *)v10;
    unint64_t v7 = *((void *)v10 + 2);
    long long v13 = *(_OWORD *)(v10 + 24);
    int64x2_t v14 = v11;
    char v9 = v10[40];
    (*(void (**)(char *, uint64_t))(*(void *)(v3 - 8) + 8))(v6, v3);
    long long v8 = v13;
  }
  double result = *(double *)v14.i64;
  *(int64x2_t *)a1 = v14;
  *(void *)(a1 + 16) = v7;
  *(_OWORD *)(a1 + 24) = v8;
  *(unsigned char *)(a1 + 40) = v9;
  return result;
}

uint64_t sub_2208F2B4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, unint64_t *a8@<X8>)
{
  unint64_t v13 = sub_2208F2BCC(a1, a2, a3, a4, a5, a6, a7);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a5 - 8) + 8))(a1, a5);
  *a8 = v13;
  a8[1] = a2;
  a8[2] = a3;
  return result;
}

unint64_t sub_2208F2BCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void (*v15)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t WitnessTable;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t TupleTypeMetadata2;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void v46[10];
  void v47[2];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void v59[3];
  uint64_t v60;
  uint64_t v61;
  unsigned __int8 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned __int8 v69;
  void v70[3];
  void v71[3];
  uint64_t v72;
  uint64_t v73;

  v57 = a6;
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a7 + 24))(v70, a5, a7);
  uint64_t v13 = v70[0];
  v64 = v70[0];
  v65 = v70[1];
  v66 = v70[2];
  unint64_t result = sub_22080BA90(a2, a3);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (result >= *(void *)(v13 + 16))
  {
LABEL_8:
    __break(1u);
    return result;
  }
  v54 = 0;
  sub_22080B5B8(v13 + 40 * result + 32, (uint64_t)v59);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a7 + 32);
  v56 = a1;
  v15(&v64, a5, a7);
  uint64_t v16 = v67;
  uint64_t v17 = v68;
  v55 = a5;
  uint64_t v18 = v69;
  sub_220831F30(v67, v68, v69);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v16, v17, v18);
  uint64_t v20 = v60;
  uint64_t v19 = v61;
  __swift_project_boxed_opaque_existential_1(v59, v60);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 + 8) + 160))(v71, v16, v17, v18, v20);
  sub_22080B6B4(v16, v17, v18);
  sub_22080B0D8((uint64_t)v59);
  long long v22 = v72;
  uint64_t v21 = v73;
  __swift_project_boxed_opaque_existential_1(v71, v72);
  uint64_t v23 = (*(uint64_t (**)(uint64_t))(*(void *)(v21 + 8) + 80))(v22);
  if (v23 == a4)
  {
    AnyColumnSlice.assumingType<A>(_:)(a4, (uint64_t)&v64);
    v53 = v67;
    v52 = v68;
    uint64_t v34 = v69;
    v59[0] = v64;
    v59[1] = v65;
    v59[2] = v66;
    v60 = v67;
    v61 = v68;
    v62 = v69;
    uint64_t v35 = type metadata accessor for DiscontiguousColumnSlice();
    uint64_t WitnessTable = swift_getWitnessTable();
    sub_22093ED30();
    uint64_t v25 = v57;
    v58 = v57;
    v37 = swift_getWitnessTable();
    sub_220872610(v35, WitnessTable, v37);
    swift_release();
    swift_bridgeObjectRelease();
    sub_22080B6B4(v53, v52, v34);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_267F18E60);
    swift_getTupleTypeMetadata2();
    swift_getTupleTypeMetadata2();
    uint64_t v32 = sub_22093F020();
    uint64_t v33 = v55;
  }
  else
  {
    MEMORY[0x270FA5388](v23);
    long long v24 = v55;
    uint64_t v48 = a4;
    uint64_t v49 = v55;
    uint64_t v25 = v57;
    v50 = v57;
    v51 = a7;
    uint64_t v26 = sub_22093ED30();
    char v27 = sub_2208E2A5C();
    v64 = sub_2208F0D18((void (*)(char *, char *))sub_2208F9144, (uint64_t)v47, (uint64_t)&type metadata for AnyColumnSlice, v26, MEMORY[0x263F8E628], v27, MEMORY[0x263F8E658], v28);
    uint64_t v29 = sub_22093E900();
    long long v30 = swift_getWitnessTable();
    v63 = v25;
    uint64_t v31 = swift_getWitnessTable();
    sub_220872610(v29, v30, v31);
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_267F18E60);
    swift_getTupleTypeMetadata2();
    swift_getTupleTypeMetadata2();
    uint64_t v32 = sub_22093F020();
    uint64_t v33 = v24;
  }
  uint64_t v38 = swift_bridgeObjectRelease();
  v64 = v32;
  char v39 = MEMORY[0x270FA5388](v38);
  v47[0] = a4;
  v47[1] = v33;
  uint64_t v48 = v25;
  uint64_t v49 = a7;
  v50 = v56;
  MEMORY[0x270FA5388](v39);
  v46[2] = a4;
  v46[3] = v33;
  v46[4] = v25;
  v46[5] = a7;
  v46[6] = sub_2208F9168;
  v46[7] = v40;
  sub_22093ED30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_267F18E60);
  swift_getTupleTypeMetadata2();
  uint64_t v41 = sub_22093E900();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v43 = swift_getWitnessTable();
  uint64_t v45 = sub_2208F0D18((void (*)(char *, char *))sub_2208F919C, (uint64_t)v46, v41, TupleTypeMetadata2, MEMORY[0x263F8E628], v43, MEMORY[0x263F8E658], v44);
  swift_bridgeObjectRelease();
  sub_220833C84((uint64_t)v71);
  return v45;
}

uint64_t RowGrouping.description.getter(uint64_t a1)
{
  uint64_t v3 = 1937207154;
  uint64_t v4 = type metadata accessor for FormattingOptions();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v46 = (uint64_t)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = *(void *)(a1 + 16);
  uint64_t v6 = sub_22093ED30();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  char v9 = (char *)&v46 - v8;
  uint64_t v50 = v10;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v52 = sub_22093ED30();
  v51 = *(void (***)(char *, char *, uint64_t))(v52 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v52);
  v54 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v46 - v14;
  uint64_t v16 = v1[1];
  uint64_t v53 = *v1;
  uint64_t v17 = v1[2];
  if (v16 == 1937207154 && v17 == 0xE400000000000000 || (unint64_t v18 = 0xE400000000000000, (sub_22093F250() & 1) != 0))
  {
    unint64_t v18 = 0xE500000000000000;
    uint64_t v3 = 0x73776F725FLL;
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = v53;
  Swift::Int v20 = MEMORY[0x223C69FE0](v53, TupleTypeMetadata2);
  Column.init(name:capacity:)(v16, v17, v20, v55, v67);
  uint64_t v64 = v3;
  unint64_t v65 = v18;
  uint64_t v21 = v19;
  sub_220831BD0(MEMORY[0x263F8EE78]);
  uint64_t v66 = v22;
  uint64_t v49 = &v66;
  sub_2208F1B64(v20, (void (*)(void *__return_ptr, void, void, uint64_t))sub_22088F714, &qword_26AD413D8, (void (*)(long long *__return_ptr, void, void, uint64_t))sub_22088E6B0);
  v51 += 4;
  uint64_t v48 = (void (**)(char *, char *, uint64_t))(v7 + 32);
  uint64_t v47 = (void (**)(char *, uint64_t))(v7 + 8);
  swift_bridgeObjectRetain();
  uint64_t v23 = 0;
  while (1)
  {
    uint64_t v24 = MEMORY[0x223C6A010](v21, TupleTypeMetadata2);
    uint64_t v25 = v54;
    if (v23 == v24)
    {
      uint64_t v26 = *(void *)(TupleTypeMetadata2 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56))(v54, 1, 1, TupleTypeMetadata2);
      goto LABEL_11;
    }
    char v27 = sub_22093E8B0();
    sub_22093E860();
    if ((v27 & 1) == 0) {
      break;
    }
    uint64_t v28 = *(void *)(TupleTypeMetadata2 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v28 + 16))(v25, v21+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(void *)(v28 + 72) * v23, TupleTypeMetadata2);
    BOOL v29 = __OFADD__(v23++, 1);
    if (v29) {
      goto LABEL_16;
    }
LABEL_10:
    uint64_t v26 = v28;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, TupleTypeMetadata2);
LABEL_11:
    (*v51)(v15, v25, v52);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v15, 1, TupleTypeMetadata2) == 1) {
      goto LABEL_17;
    }
    long long v30 = &v15[*(int *)(TupleTypeMetadata2 + 48)];
    long long v31 = *((_OWORD *)v30 + 1);
    long long v68 = *(_OWORD *)v30;
    *(_OWORD *)v69 = v31;
    *(_OWORD *)&v69[9] = *(_OWORD *)(v30 + 25);
    uint64_t v32 = v50;
    (*v48)(v9, v15, v50);
    type metadata accessor for Column();
    Column.append(_:)((uint64_t)v9);
    uint64_t v33 = sub_2208EE804(*(uint64_t *)&v69[8], *(uint64_t *)&v69[16], v69[24]);
    sub_220833B58((uint64_t)&v68);
    uint64_t v34 = swift_bridgeObjectRetain();
    sub_22083196C(v34, (uint64_t)&v68);
    sub_220833BC0((uint64_t)&v68);
    uint64_t v21 = v53;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_220833BC0((uint64_t)&v68);
    sub_2208F205C(v33, 0, &qword_26AD413D8, (void (*)(long long *__return_ptr, uint64_t *, void, uint64_t))sub_22088E6B0, (void (*)(uint64_t, uint64_t))sub_2208939A4, (uint64_t (*)(uint64_t, void, void, void))sub_220890BC8);
    (*v47)(v9, v32);
  }
  uint64_t result = sub_22093EEF0();
  uint64_t v28 = *(void *)(TupleTypeMetadata2 - 8);
  if (*(void *)(v28 + 64) == 8)
  {
    uint64_t v56 = result;
    (*(void (**)(char *, uint64_t *, uint64_t))(v28 + 16))(v25, &v56, TupleTypeMetadata2);
    swift_unknownObjectRelease();
    BOOL v29 = __OFADD__(v23++, 1);
    if (v29)
    {
LABEL_16:
      __break(1u);
LABEL_17:
      swift_bridgeObjectRelease();
      uint64_t v36 = MEMORY[0x263F8EE78];
      unint64_t v37 = sub_22080CCF4(MEMORY[0x263F8EE78]);
      uint64_t v61 = v36;
      uint64_t v62 = v36;
      unint64_t v63 = v37;
      uint64_t v56 = v67[0];
      unint64_t v57 = v67[1];
      uint64_t v58 = v67[2];
      DataFrame.append<A>(column:)();
      uint64_t v38 = v64;
      unint64_t v39 = v65;
      uint64_t v40 = v66;
      uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413F0);
      v60 = &off_26D2223C0;
      uint64_t v56 = v38;
      unint64_t v57 = v39;
      uint64_t v58 = v40;
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      DataFrame.append(column:)((uint64_t)&v56);
      sub_22080B0D8((uint64_t)&v56);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v41 = v61;
      uint64_t v42 = v62;
      uint64_t v43 = v63;
      uint64_t v44 = v46;
      FormattingOptions.init()(v46);
      uint64_t v45 = sub_2208B0224(v44, v41, v42, v43);
      sub_2208946CC(v44);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v45;
    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t RowGrouping.init<A>(groups:groupKeysColumnName:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v23 = a1;
  uint64_t v19 = a4;
  uint64_t v20 = a5;
  uint64_t v21 = a6;
  uint64_t v22 = a7;
  v17[2] = a4;
  v17[3] = a5;
  v17[4] = a6;
  v17[5] = a7;
  v17[6] = sub_2208F8A88;
  v17[7] = &v18;
  sub_22093ED30();
  swift_getTupleTypeMetadata2();
  uint64_t v11 = sub_22093E900();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v15 = sub_2208F0D18((void (*)(char *, char *))sub_2208F8A94, (uint64_t)v17, v11, TupleTypeMetadata2, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v14);
  uint64_t result = swift_bridgeObjectRelease();
  *a8 = v15;
  a8[1] = a2;
  a8[2] = a3;
  return result;
}

double sub_2208F3B00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13 = sub_22093ED30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a3, v13);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(a8 + 24))(&v23, a6, a8);
  uint64_t v14 = v24;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a8 + 32))(&v19, a6, a8);
  uint64_t v15 = v20;
  uint64_t v16 = v21;
  char v17 = v22;
  sub_220831F30(v20, v21, v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v15, v16, v17);
  double result = *(double *)&v23;
  *(_OWORD *)a2 = v23;
  *(void *)(a2 + 16) = v14;
  *(void *)(a2 + 24) = v15;
  *(void *)(a2 + 32) = v16;
  *(unsigned char *)(a2 + 40) = v17;
  return result;
}

uint64_t sub_2208F3C34@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  sub_22093ED30();
  uint64_t v6 = a1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a3, a3 + *(int *)(TupleTypeMetadata2 + 48), a1, v6);
}

uint64_t sub_2208F3CF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_220835280(a1, (uint64_t)&v7, qword_26AD40FF8);
  __swift_instantiateConcreteTypeFromMangledName(qword_26AD40FF8);
  int v5 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56))(a3, v5 ^ 1u, 1, a2);
}

uint64_t sub_2208F3D9C(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, unsigned __int8 a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v17 = sub_22093ED30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a3, v17);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a11 + 24))(v38, a9, a11);
  uint64_t v18 = v38[0];
  uint64_t v19 = v38[1];
  uint64_t v20 = v38[2];
  if (!*(void *)(v38[0] + 16))
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    goto LABEL_6;
  }
  uint64_t v34 = a4;
  unsigned __int8 v21 = a6;
  sub_22080B5B8(v38[0] + 32, (uint64_t)v35);
  uint64_t v22 = v36;
  uint64_t v23 = v37;
  __swift_project_boxed_opaque_existential_1(v35, v36);
  uint64_t v24 = *(void *)(v23 + 8);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t))(v24 + 48);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v26 = v25(v22, v24);
  uint64_t result = sub_22080B0D8((uint64_t)v35);
  if ((v26 & 0x8000000000000000) == 0)
  {
    a6 = v21;
    a4 = v34;
    if (v26)
    {
      char v28 = 0;
LABEL_7:
      sub_220831F30(0, v26, v28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22080B6B4(0, v26, v28);
      BOOL v29 = sub_22081A46C(a4, a5, a6, 0, v26, v28);
      uint64_t v31 = v30;
      char v33 = v32;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)a2 = v18;
      *(void *)(a2 + 8) = v19;
      *(void *)(a2 + 16) = v20;
      *(void *)(a2 + 24) = v29;
      *(void *)(a2 + 32) = v31;
      *(unsigned char *)(a2 + 40) = v33;
      return result;
    }
LABEL_6:
    uint64_t v26 = 0;
    char v28 = 2;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_2208F3FBC@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  sub_22093ED30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_267F18E60);
  uint64_t v6 = (uint64_t *)(a1 + *(int *)(swift_getTupleTypeMetadata2() + 48));
  uint64_t v7 = *v6;
  uint64_t v8 = v6[1];
  uint64_t v9 = *((unsigned __int8 *)v6 + 16);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a3, a3 + *(int *)(TupleTypeMetadata2 + 48), a1, v7, v8, v9);
}

TabularData::DataFrame __swiftcall RowGrouping.counts(order:)(TabularData::Order_optional order)
{
  uint64_t v4 = *(unsigned __int8 **)&order;
  uint64_t v58 = v2;
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = sub_22093ED30();
  uint64_t v72 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v65 = (char *)&v55 - v7;
  uint64_t v66 = v8;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v70 = sub_22093ED30();
  v67 = *(void (***)(char *, char *, uint64_t))(v70 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v70);
  uint64_t v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  v69 = (char *)&v55 - v13;
  int v57 = *v4;
  uint64_t v14 = v3[1];
  uint64_t v59 = *v3;
  uint64_t v15 = v3[2];
  Swift::Int v16 = MEMORY[0x223C69FE0]();
  Swift::Int v71 = v16;
  swift_bridgeObjectRetain();
  sub_220839984(v14, v15, v5, (uint64_t)v82);
  uint64_t v68 = type metadata accessor for SingleColumnBuilder();
  sub_2208399F4(v16, v68);
  uint64_t v78 = 0x746E756F63;
  unint64_t v79 = 0xE500000000000000;
  uint64_t v17 = MEMORY[0x263F8EE78];
  sub_220831BD0(MEMORY[0x263F8EE78]);
  uint64_t v80 = v18;
  uint64_t v56 = &v80;
  sub_2208F1B64(0, (void (*)(void *__return_ptr, void, void, uint64_t))sub_22088F714, &qword_26AD413D8, (void (*)(long long *__return_ptr, void, void, uint64_t))sub_22088E6B0);
  uint64_t v78 = 0x746E756F63;
  unint64_t v79 = 0xE500000000000000;
  uint64_t v62 = (char *)&v81 + 8;
  *(void *)v73 = 0x746E756F63;
  *(void *)&v73[8] = 0xE500000000000000;
  sub_220831BD0(v17);
  *(void *)&v73[16] = v19;
  uint64_t v20 = v59;
  sub_2208F1B64(v71, (void (*)(void *__return_ptr, void, void, uint64_t))sub_22088F714, &qword_26AD413D8, (void (*)(long long *__return_ptr, void, void, uint64_t))sub_22088E6B0);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v80 = *(void *)v73;
  long long v81 = *(_OWORD *)&v73[8];
  Swift::Int v71 = TupleTypeMetadata2 - 8;
  v67 += 4;
  uint64_t v61 = (void (**)(char *, char *, uint64_t))(v72 + 32);
  v60 = (void (**)(uint64_t, uint64_t))(v72 + 8);
  swift_bridgeObjectRetain();
  uint64_t v21 = 0;
  uint64_t v64 = TupleTypeMetadata2;
  unint64_t v63 = v12;
  while (1)
  {
    if (v21 == MEMORY[0x223C6A010](v20, TupleTypeMetadata2))
    {
      uint64_t v22 = *(void *)(TupleTypeMetadata2 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v12, 1, 1, TupleTypeMetadata2);
      goto LABEL_7;
    }
    char v23 = sub_22093E8B0();
    sub_22093E860();
    if (v23)
    {
      uint64_t v24 = *(void *)(TupleTypeMetadata2 - 8);
      (*(void (**)(char *, unint64_t, uint64_t))(v24 + 16))(v12, v20+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(void *)(v24 + 72) * v21, TupleTypeMetadata2);
      BOOL v25 = __OFADD__(v21++, 1);
      if (v25) {
        break;
      }
      goto LABEL_6;
    }
    uint64_t v38 = (void *)sub_22093EEF0();
    uint64_t v24 = *(void *)(TupleTypeMetadata2 - 8);
    if (*(void *)(v24 + 64) != 8)
    {
      __break(1u);
      goto LABEL_23;
    }
    *(void *)v73 = v38;
    (*(void (**)(char *, unsigned char *, uint64_t))(v24 + 16))(v12, v73, TupleTypeMetadata2);
    swift_unknownObjectRelease();
    BOOL v25 = __OFADD__(v21++, 1);
    if (v25) {
      break;
    }
LABEL_6:
    uint64_t v22 = v24;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v12, 0, 1, TupleTypeMetadata2);
LABEL_7:
    uint64_t v26 = v69;
    (*v67)(v69, v12, v70);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v26, 1, TupleTypeMetadata2) == 1) {
      goto LABEL_13;
    }
    char v27 = &v26[*(int *)(TupleTypeMetadata2 + 48)];
    char v28 = v26;
    uint64_t v29 = *((void *)v27 + 3);
    uint64_t v72 = v21;
    uint64_t v30 = *((void *)v27 + 4);
    char v31 = v27[40];
    uint64_t v32 = (uint64_t)v65;
    uint64_t v33 = v66;
    (*v61)(v65, v28, v66);
    sub_220839A74(v32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_220831F30(v29, v30, v31);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22080B6B4(v29, v30, v31);
    uint64_t v34 = sub_2208EE804(v29, v30, v31);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v35 = v30;
    uint64_t v21 = v72;
    sub_22080B6B4(v29, v35, v31);
    sub_2208F205C(v34, 0, &qword_26AD413D8, (void (*)(long long *__return_ptr, uint64_t *, void, uint64_t))sub_22088E6B0, (void (*)(uint64_t, uint64_t))sub_2208939A4, (uint64_t (*)(uint64_t, void, void, void))sub_220890BC8);
    uint64_t v36 = v32;
    TupleTypeMetadata2 = v64;
    uint64_t v37 = v33;
    uint64_t v12 = v63;
    (*v60)(v36, v37);
  }
  __break(1u);
LABEL_13:
  swift_bridgeObjectRelease();
  uint64_t v41 = MEMORY[0x263F8EE78];
  unint64_t v42 = sub_22080CCF4(MEMORY[0x263F8EE78]);
  *(void *)&long long v76 = v41;
  *((void *)&v76 + 1) = v41;
  unint64_t v77 = v42;
  sub_220839AB0((uint64_t *)&v76, 0);
  uint64_t v44 = v78;
  uint64_t v43 = (void *)v79;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v80 = v44;
  *(void *)&long long v81 = v43;
  long long v45 = v76;
  uint64_t v46 = v77;
  *(_OWORD *)v73 = v76;
  *(void *)&v73[16] = v77;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v47._countAndFlagsBits = v44;
  v47._object = v43;
  Swift::Int_optional v83 = DataFrame.indexOfColumn(_:)(v47);
  Swift::Bool is_nil = v83.is_nil;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!is_nil)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2208F15A4(v56, v44, (uint64_t)v43, v45, *((uint64_t *)&v45 + 1), v46);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v44 = v80;
    uint64_t v43 = (void *)v81;
  }
  uint64_t v49 = *((void *)&v81 + 1);
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413F0);
  v75 = &off_26D2223C0;
  *(void *)v73 = v44;
  *(void *)&v73[8] = v43;
  *(void *)&v73[16] = v49;
  swift_bridgeObjectRetain();
  swift_retain();
  DataFrame.append(column:)((uint64_t)v73);
  sub_22080B0D8((uint64_t)v73);
  char v50 = v57;
  if (v57 == 2)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v38 = (void *)swift_bridgeObjectRelease();
    unint64_t v51 = v77;
    uint64_t v52 = v58;
    *uint64_t v58 = v76;
    *((void *)v52 + 2) = v51;
  }
  else
  {
    long long v53 = v76;
    uint64_t v54 = v77;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v50) {
      sub_2208968CC(0x746E756F63, 0xE500000000000000, v53, *((uint64_t *)&v53 + 1), v54, (uint64_t)v58);
    }
    else {
      sub_220896884(0x746E756F63, 0xE500000000000000, v53, *((uint64_t *)&v53 + 1), v54, (uint64_t)v58);
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v38 = (void *)swift_bridgeObjectRelease();
  }
LABEL_23:
  result.columnIndicesByName._rawValue = v40;
  result.aliases._rawValue = v39;
  result.columns._rawValue = v38;
  return result;
}

uint64_t RowGrouping.aggregated<A, B>(on:naming:transform:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(long long *)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _OWORD *a7@<X6>, uint64_t a8@<X7>, _OWORD *a9@<X8>)
{
  uint64_t v111 = a5;
  v110 = a4;
  v125 = (_OWORD *)a3;
  uint64_t v119 = a2;
  v99 = a9;
  uint64_t v107 = sub_22093ED30();
  uint64_t v112 = *(void *)(v107 - 8);
  MEMORY[0x270FA5388](v107);
  v109 = (char *)&v99 - v14;
  uint64_t v15 = *(void *)(a6 + 16);
  uint64_t v16 = sub_22093ED30();
  uint64_t v118 = *(void *)(v16 - 8);
  uint64_t v113 = *(void *)(v118 + 64);
  MEMORY[0x270FA5388](v16);
  v126 = (char *)&v99 - v17;
  unint64_t v19 = *v9;
  uint64_t v18 = v9[1];
  uint64_t v20 = v9[2];
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  unint64_t v123 = v19;
  uint64_t v117 = TupleTypeMetadata2;
  Swift::Int v22 = MEMORY[0x223C69FE0](v19);
  swift_bridgeObjectRetain();
  sub_220839984(v18, v20, v15, (uint64_t)v144);
  uint64_t v23 = type metadata accessor for SingleColumnBuilder();
  Swift::Int v116 = v22;
  uint64_t v122 = v23;
  sub_2208399F4(v22, v23);
  uint64_t v104 = a1;
  *(void *)&long long v139 = a1;
  v124 = (_OWORD *)v15;
  uint64_t v128 = v15;
  v115 = a7;
  v129 = a7;
  uint64_t v24 = *(_OWORD **)(a6 + 24);
  uint64_t v130 = a8;
  v131 = v24;
  v121 = v24;
  uint64_t v132 = v119;
  uint64_t v133 = (uint64_t)v125;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18BE0);
  v125 = (_OWORD *)a8;
  uint64_t v26 = type metadata accessor for SingleColumnBuilder();
  unint64_t v27 = sub_2208F8B14();
  uint64_t v28 = v120;
  uint64_t v145 = sub_2208F0D18((void (*)(char *, char *))sub_2208F8AC0, (uint64_t)v127, v25, v26, MEMORY[0x263F8E628], v27, MEMORY[0x263F8E658], v29);
  uint64_t v30 = swift_bridgeObjectRetain();
  uint64_t v114 = v26;
  uint64_t v31 = MEMORY[0x223C69FE0](v30, v26);
  uint64_t result = swift_bridgeObjectRelease();
  if (v31 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v119 = v16;
  uint64_t v120 = v28;
  uint64_t v33 = v114;
  Swift::Int v34 = v116;
  if (v31)
  {
    sub_22093E900();
    sub_22093E880();
    sub_22093E880();
    sub_22093E880();
    unint64_t v35 = 0;
    uint64_t v36 = 32;
    do
    {
      sub_22093E880();
      sub_2208F8A34(v35, v145);
      sub_2208399F4(v34, v33);
      v36 += 40;
      ++v35;
    }
    while (v31 != v35);
  }
  *(void *)&long long v139 = v123;
  MEMORY[0x270FA5388](result);
  uint64_t v37 = v115;
  *(&v99 - 4) = v124;
  *(&v99 - 3) = v37;
  uint64_t v38 = (uint64_t)v125;
  unint64_t v39 = v121;
  *(&v99 - 2) = v125;
  *(&v99 - 1) = v39;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v41 = MEMORY[0x270FA5388](KeyPath);
  *(&v99 - 4) = v37;
  *(&v99 - 3) = (_OWORD *)v38;
  *(&v99 - 2) = v39;
  *(&v99 - 1) = (_OWORD *)v41;
  uint64_t v42 = sub_22093E900();
  swift_bridgeObjectRetain();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v117 = v42;
  uint64_t v44 = v119;
  Swift::Int v116 = WitnessTable;
  uint64_t v45 = v120;
  uint64_t v47 = sub_2208F0D18((void (*)(char *, char *))sub_2208F8B70, (uint64_t)(&v99 - 6), v42, v119, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v46);
  uint64_t v120 = v45;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v48 = MEMORY[0x223C6A010](v47, v44);
  uint64_t v49 = v118;
  if (v48)
  {
    uint64_t v50 = 0;
    unint64_t v51 = (void (**)(char *, long long *, uint64_t))(v118 + 16);
    uint64_t v52 = (void (**)(uint64_t, uint64_t))(v118 + 8);
    uint64_t v53 = (uint64_t)v126;
    do
    {
      char v54 = sub_22093E8B0();
      sub_22093E860();
      if (v54)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v49 + 16))(v126, v47+ ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))+ *(void *)(v49 + 72) * v50, v44);
        uint64_t v55 = v50 + 1;
        if (__OFADD__(v50, 1)) {
          goto LABEL_14;
        }
      }
      else
      {
        uint64_t result = sub_22093EEF0();
        if (v113 != 8) {
          goto LABEL_42;
        }
        *(void *)&long long v139 = result;
        (*v51)(v126, &v139, v44);
        swift_unknownObjectRelease();
        uint64_t v55 = v50 + 1;
        if (__OFADD__(v50, 1))
        {
LABEL_14:
          __break(1u);
          break;
        }
      }
      sub_220839A74(v53);
      (*v52)(v53, v44);
      ++v50;
    }
    while (v55 != MEMORY[0x223C6A010](v47, v44));
  }
  uint64_t v56 = swift_bridgeObjectRelease();
  *(void *)&long long v139 = v123;
  MEMORY[0x270FA5388](v56);
  int v57 = v124;
  uint64_t v58 = v115;
  *(&v99 - 4) = v124;
  *(&v99 - 3) = v58;
  uint64_t v59 = (uint64_t)v125;
  v60 = v121;
  *(&v99 - 2) = v125;
  *(&v99 - 1) = v60;
  uint64_t v61 = swift_getKeyPath();
  uint64_t v62 = MEMORY[0x270FA5388](v61);
  *(&v99 - 6) = v57;
  *(&v99 - 5) = v58;
  *(&v99 - 4) = (_OWORD *)v59;
  *(&v99 - 3) = v60;
  *(&v99 - 2) = (_OWORD *)v62;
  swift_bridgeObjectRetain();
  uint64_t v63 = v120;
  uint64_t v65 = sub_2208F0D18((void (*)(char *, char *))sub_2208F8B94, (uint64_t)(&v99 - 8), v117, (uint64_t)&type metadata for DataFrame.Slice, MEMORY[0x263F8E628], v116, MEMORY[0x263F8E658], v64);
  v126 = (char *)v63;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v101 = *(void *)(v65 + 16);
  if (v101)
  {
    uint64_t v66 = v114;
    uint64_t v67 = sub_22093E900();
    sub_22093E880();
    sub_22093E880();
    uint64_t v103 = v65 + 32;
    uint64_t v113 = v67;
    uint64_t result = sub_22093E880();
    unint64_t v68 = 0;
    v106 = (uint64_t (**)(uint64_t, uint64_t))(v112 + 8);
    v100 = (uint64_t *)(v104 + 40);
    uint64_t v102 = v65;
    while (v68 < *(void *)(v65 + 16))
    {
      uint64_t v69 = v103 + 48 * v68;
      uint64_t v70 = *(void *)(v69 + 8);
      uint64_t v72 = *(void *)(v69 + 16);
      uint64_t v71 = *(void *)(v69 + 24);
      uint64_t v73 = *(void *)(v69 + 32);
      int v74 = *(unsigned __int8 *)(v69 + 40);
      uint64_t v118 = *(void *)v69;
      swift_bridgeObjectRetain();
      uint64_t v117 = v70;
      swift_bridgeObjectRetain();
      Swift::Int v116 = v72;
      swift_bridgeObjectRetain();
      uint64_t v119 = v71;
      uint64_t v120 = v73;
      LODWORD(v121) = v74;
      sub_220831F30(v71, v73, v74);
      uint64_t v75 = swift_bridgeObjectRetain();
      uint64_t v76 = MEMORY[0x223C69FE0](v75, v66);
      uint64_t result = swift_bridgeObjectRelease();
      if (v76 < 0) {
        goto LABEL_39;
      }
      unint64_t v105 = v68;
      if (v76)
      {
        sub_22093E880();
        sub_22093E880();
        uint64_t v112 = *(void *)(v104 + 16);
        uint64_t result = sub_22093E880();
        uint64_t v77 = 0;
        uint64_t v78 = 32;
        unint64_t v79 = v100;
        uint64_t v108 = v76;
        while (v76 != v77)
        {
          if (v112 == v77) {
            goto LABEL_37;
          }
          unint64_t v123 = v77;
          v124 = (_OWORD *)v78;
          uint64_t v80 = *v79;
          v125 = (_OWORD *)*(v79 - 1);
          *(void *)&long long v134 = v118;
          *((void *)&v134 + 1) = v117;
          uint64_t v81 = v119;
          uint64_t v135 = v116;
          uint64_t v136 = v119;
          uint64_t v82 = v120;
          uint64_t v137 = v120;
          char v83 = (char)v121;
          char v138 = (char)v121;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_220831F30(v81, v82, v83);
          swift_bridgeObjectRetain();
          DataFrame.Slice.subscript.getter((uint64_t)v125, v80, (uint64_t)&v139);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_22080B6B4(v81, v82, v83);
          uint64_t v84 = v141;
          uint64_t v85 = v142;
          char v86 = v143;
          long long v134 = v139;
          uint64_t v135 = v140;
          uint64_t v136 = v141;
          uint64_t v137 = v142;
          char v138 = v143;
          uint64_t v87 = (uint64_t)v109;
          v88 = v126;
          v110(&v134);
          v126 = v88;
          if (v88)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_22080B6B4(v119, v120, (char)v121);
            swift_release();
            swift_bridgeObjectRelease();
            sub_22080B6B4(v84, v85, v86);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            return swift_bridgeObjectRelease();
          }
          unint64_t v89 = v123;
          v125 = (_OWORD *)(v123 + 1);
          swift_release();
          swift_bridgeObjectRelease();
          sub_22080B6B4(v84, v85, v86);
          sub_22093E880();
          uint64_t v66 = v114;
          sub_2208F8A34(v89, v145);
          v90 = v124;
          sub_220839A74(v87);
          uint64_t result = (*v106)(v87, v107);
          v79 += 2;
          uint64_t v78 = (uint64_t)v90 + 40;
          uint64_t v77 = (uint64_t)v125;
          uint64_t v76 = v108;
          if ((_OWORD *)v108 == v125) {
            goto LABEL_17;
          }
        }
        __break(1u);
LABEL_37:
        __break(1u);
        break;
      }
LABEL_17:
      unint64_t v68 = v105 + 1;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = sub_22080B6B4(v119, v120, (char)v121);
      uint64_t v65 = v102;
      if (v68 == v101)
      {
        swift_bridgeObjectRelease();
        goto LABEL_29;
      }
    }
    __break(1u);
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  swift_bridgeObjectRelease();
  uint64_t v66 = v114;
LABEL_29:
  uint64_t v91 = MEMORY[0x263F8EE78];
  unint64_t v92 = sub_22080CCF4(MEMORY[0x263F8EE78]);
  *(void *)&long long v139 = v91;
  *((void *)&v139 + 1) = v91;
  unint64_t v140 = v92;
  sub_220839AB0((uint64_t *)&v139, 0);
  uint64_t v93 = swift_bridgeObjectRetain();
  uint64_t v94 = MEMORY[0x223C69FE0](v93, v66);
  uint64_t result = swift_bridgeObjectRelease();
  if ((v94 & 0x8000000000000000) == 0)
  {
    if (v94)
    {
      sub_22093E900();
      sub_22093E880();
      sub_22093E880();
      sub_22093E880();
      unint64_t v95 = 0;
      uint64_t v96 = 32;
      do
      {
        sub_22093E880();
        sub_2208F8A34(v95, v145);
        sub_220839AB0((uint64_t *)&v139, 0);
        v96 += 40;
        ++v95;
      }
      while (v94 != v95);
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v97 = v140;
    v98 = v99;
    _OWORD *v99 = v139;
    *((void *)v98 + 2) = v97;
    return result;
  }
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_2208F5794@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  uint64_t v28 = *(void *)(*(void *)(*a2 + *MEMORY[0x263F8EA20]) - 8);
  uint64_t v3 = MEMORY[0x270FA5388](a1);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v3);
  uint64_t v8 = (char *)&v25 - v7;
  uint64_t v10 = *(int *)(v9 + 48);
  uint64_t v11 = v9;
  uint64_t v27 = v9;
  uint64_t v12 = (uint64_t *)(v6 + v10);
  uint64_t v14 = *(void *)(v13 + 8);
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)&v25 - v7, v16, v14);
  uint64_t v17 = *v12;
  uint64_t v18 = v12[1];
  uint64_t v20 = v12[2];
  uint64_t v19 = v12[3];
  uint64_t v25 = v12[4];
  uint64_t v26 = v19;
  uint64_t v21 = &v5[*(int *)(v11 + 48)];
  LOBYTE(v12) = *((unsigned char *)v12 + 40);
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v5, v8, v14);
  *(void *)uint64_t v21 = v17;
  *((void *)v21 + 1) = v18;
  uint64_t v22 = v25;
  uint64_t v23 = v26;
  *((void *)v21 + 2) = v20;
  *((void *)v21 + 3) = v23;
  *((void *)v21 + 4) = v22;
  v21[40] = (char)v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220831F30(v23, v22, (char)v12);
  swift_getAtKeyPath();
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v5, v27);
}

uint64_t sub_2208F59A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v28 = a3;
  uint64_t v29 = a2;
  uint64_t v4 = sub_22093ED30();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v27 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v24 - v10;
  uint64_t v12 = *(int *)(v9 + 48);
  uint64_t v13 = v9;
  uint64_t v26 = v9;
  uint64_t v14 = (uint64_t *)(a1 + v12);
  uint64_t v15 = *(void *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)&v24 - v10, a1, v4);
  uint64_t v16 = *v14;
  uint64_t v17 = v14[1];
  uint64_t v19 = v14[2];
  uint64_t v18 = v14[3];
  uint64_t v24 = v14[4];
  uint64_t v25 = v18;
  uint64_t v20 = &v8[*(int *)(v13 + 48)];
  LOBYTE(v14) = *((unsigned char *)v14 + 40);
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v8, v11, v4);
  *(void *)uint64_t v20 = v16;
  *((void *)v20 + 1) = v17;
  uint64_t v21 = v24;
  uint64_t v22 = v25;
  *((void *)v20 + 2) = v19;
  *((void *)v20 + 3) = v22;
  *((void *)v20 + 4) = v21;
  v20[40] = (char)v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220831F30(v22, v21, (char)v14);
  swift_getAtKeyPath();
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v8, v26);
}

void sub_2208F5BAC(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t *a6@<X8>)
{
  uint64_t v10 = *a2;
  uint64_t v9 = a2[1];
  uint64_t v12 = a2[2];
  uint64_t v11 = a2[3];
  uint64_t v13 = a2[4];
  char v14 = *((unsigned char *)a2 + 40);
  Swift::Int v15 = sub_2208EE804(v11, v13, v14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220831F30(v11, v13, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v11, v13, v14);
  swift_bridgeObjectRetain();
  sub_220839984(a3, a4, a5, (uint64_t)v24);
  uint64_t v16 = type metadata accessor for SingleColumnBuilder();
  sub_2208399F4(v15, v16);
  if (v15 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; v15; --v15)
      sub_220839A74(a1);
    *(void *)&long long v19 = v10;
    *((void *)&v19 + 1) = v9;
    uint64_t v20 = v12;
    uint64_t v21 = v11;
    uint64_t v22 = v13;
    char v23 = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_220831F30(v11, v13, v14);
    DataFrame.init(_:)(&v19, a6);
    sub_220839AB0(a6, 1);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t RowGrouping.filter(_:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v4 = *(void *)(v1 + 8);
  uint64_t v5 = *(void *)(v1 + 16);
  sub_22093ED30();
  swift_bridgeObjectRetain();
  swift_getTupleTypeMetadata2();
  sub_22093E900();
  swift_getWitnessTable();
  uint64_t result = sub_22093EF70();
  if (!v2)
  {
    *a1 = result;
    a1[1] = v4;
    a1[2] = v5;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2208F5E50(uint64_t a1, uint64_t (*a2)(long long *))
{
  sub_22093ED30();
  uint64_t v4 = (long long *)(a1 + *(int *)(swift_getTupleTypeMetadata2() + 48));
  uint64_t v5 = *((void *)v4 + 2);
  char v6 = *((unsigned char *)v4 + 40);
  long long v8 = *v4;
  uint64_t v9 = v5;
  long long v10 = *(long long *)((char *)v4 + 24);
  char v11 = v6;
  return a2(&v8) & 1;
}

uint64_t RowGrouping.mapGroups(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v6 = v4[1];
  uint64_t v7 = v4[2];
  v27[2] = *v4;
  uint64_t v8 = *(void *)(a3 + 16);
  uint64_t v9 = *(void *)(a3 + 24);
  uint64_t v23 = v8;
  uint64_t v24 = v9;
  uint64_t v25 = a1;
  uint64_t v26 = a2;
  uint64_t v18 = v8;
  uint64_t v19 = v9;
  uint64_t v20 = sub_2208F8BE0;
  uint64_t v21 = &v22;
  sub_22093ED30();
  swift_bridgeObjectRetain();
  swift_getTupleTypeMetadata2();
  uint64_t v10 = sub_22093E900();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F188B0);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v14 = sub_2208F0D18((void (*)(char *, char *))sub_2208F8C00, (uint64_t)v17, v10, TupleTypeMetadata2, v12, WitnessTable, MEMORY[0x263F8E4E0], (uint64_t)v27);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v5)
  {
    swift_bridgeObjectRetain();
    return RowGrouping.init<A>(groups:groupKeysColumnName:)(v14, v6, v7, v8, (uint64_t)&type metadata for DataFrame, v9, (uint64_t)&protocol witness table for DataFrame, a4);
  }
  return result;
}

uint64_t sub_2208F609C(uint64_t a1, uint64_t a2, uint64_t a3, long long *a4, uint64_t (*a5)(_OWORD *))
{
  long long v15 = a4[1];
  uint64_t v8 = *((void *)a4 + 4);
  char v9 = *((unsigned char *)a4 + 40);
  uint64_t v10 = sub_22093ED30();
  uint64_t v11 = *(void *)(v10 - 8);
  long long v14 = *a4;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(a1, a3, v10);
  v17[0] = v14;
  v17[1] = v15;
  uint64_t v18 = v8;
  char v19 = v9;
  uint64_t v12 = v20;
  uint64_t result = a5(v17);
  if (v12) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
  }
  return result;
}

uint64_t sub_2208F61C0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, void *a3@<X5>, uint64_t a4@<X8>)
{
  sub_22093ED30();
  uint64_t v9 = a1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t result = a2(a4, a4 + *(int *)(TupleTypeMetadata2 + 48), a1, v9);
  if (v4) {
    *a3 = v4;
  }
  return result;
}

uint64_t sub_2208F628C(uint64_t a1, uint64_t a2)
{
  sub_2208F29B8((uint64_t)v6);
  sub_22080B6B4(v6[3], v6[4], v7);
  uint64_t v4 = sub_22080BA90(a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t RowGrouping.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = sub_22093ED30();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v9 = sub_22093ED30();
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v32 - v11;
  uint64_t v37 = v7;
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  long long v15 = (char *)v32 - v14;
  uint64_t v16 = *(void *)(v6 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v13);
  char v19 = (char *)v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *v3;
  uint64_t v21 = *(void *)(a1 + 16);
  uint64_t v36 = v22;
  uint64_t v33 = v23;
  uint64_t v34 = v17;
  if (v21)
  {
    sub_220835280(a1 + 32, (uint64_t)v38, qword_26AD40FF8);
  }
  else
  {
    memset(v38, 0, 24);
    void v38[3] = 1;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F185A8);
  int v24 = swift_dynamicCast();
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  if (!v24)
  {
    v25(v15, 1, 1, v6);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v15, v37);
    goto LABEL_8;
  }
  v25(v15, 0, 1, v6);
  uint64_t v26 = (*(uint64_t (**)(char *, char *, uint64_t))(v16 + 32))(v19, v15, v6);
  v32[1] = v32;
  v38[0] = v20;
  MEMORY[0x270FA5388](v26);
  uint64_t v27 = *(void *)(v35 + 24);
  v32[-4] = v6;
  v32[-3] = v27;
  v32[-2] = v19;
  sub_22093E900();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_22093E7D0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v12, 1, TupleTypeMetadata2) == 1)
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v12, v34);
LABEL_8:
    *(_OWORD *)(a3 + 25) = 0u;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    return result;
  }
  uint64_t v29 = &v12[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v30 = *((void *)v29 + 2);
  char v31 = v29[40];
  *(_OWORD *)a3 = *(_OWORD *)v29;
  *(void *)(a3 + 16) = v30;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)(v29 + 24);
  *(unsigned char *)(a3 + 40) = v31;
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v12, v37);
}

uint64_t sub_2208F6740(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a1;
  uint64_t v31 = a4;
  uint64_t v6 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v30 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_22093ED30();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v32 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v12 = (char *)&v29 - v11;
  uint64_t v13 = *(void *)(v8 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v10);
  uint64_t v36 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v29 - v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v29 - v16, a2, a3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v17, 0, 1, a3);
  uint64_t v33 = TupleTypeMetadata2;
  uint64_t v18 = &v12[*(int *)(TupleTypeMetadata2 + 48)];
  char v19 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v19(v12, v35, v8);
  uint64_t v35 = v18;
  v19(v18, v17, v8);
  uint64_t v34 = v6;
  uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (v20(v12, 1, a3) != 1)
  {
    v19(v36, v12, v8);
    uint64_t v23 = v35;
    if (v20(v35, 1, a3) != 1)
    {
      uint64_t v24 = v34;
      uint64_t v25 = v30;
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v30, v23, a3);
      char v22 = sub_22093E520();
      uint64_t v26 = *(void (**)(char *, uint64_t))(v24 + 8);
      v26(v25, a3);
      uint64_t v27 = *(void (**)(char *, uint64_t))(v13 + 8);
      v27(v17, v8);
      v26(v36, a3);
      v27(v12, v8);
      return v22 & 1;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v8);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v36, a3);
    goto LABEL_6;
  }
  uint64_t v21 = *(void (**)(char *, uint64_t))(v13 + 8);
  v21(v17, v8);
  if (v20(v35, 1, a3) != 1)
  {
LABEL_6:
    (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v33);
    char v22 = 0;
    return v22 & 1;
  }
  v21(v12, v8);
  char v22 = 1;
  return v22 & 1;
}

uint64_t RowGrouping.count.getter(uint64_t a1)
{
  return sub_2208F82A8(a1, MEMORY[0x263F8D448]);
}

uint64_t sub_2208F6B88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(long long *)@<X3>, uint64_t a5@<X4>, _OWORD *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _OWORD *a9@<X8>)
{
  return RowGrouping.aggregated<A, B>(on:naming:transform:)(a1, a2, a3, a4, a5, a8, a6, a7, a9);
}

uint64_t sub_2208F6BB0@<X0>(uint64_t *a1@<X8>)
{
  return RowGrouping.filter(_:)(a1);
}

uint64_t sub_2208F6BC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return RowGrouping.mapGroups(_:)(a1, a2, a3, a4);
}

uint64_t sub_2208F6BE0(uint64_t *a1, uint64_t *a2, uint64_t a3, char a4, uint64_t a5, double a6)
{
  return RowGrouping.randomSplit(by:seed:)(a1, a2, a3, a4 & 1, a5, a6);
}

uint64_t sub_2208F6BF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, long long *a5, uint64_t a6, char a7, double a8)
{
  long long v15 = a5[1];
  long long v19 = *a5;
  v20[0] = v15;
  *(_OWORD *)((char *)v20 + 9) = *(long long *)((char *)a5 + 25);
  uint64_t v16 = sub_22093ED30();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a4, v16);
  if (a7) {
    return sub_2209372A8(a2, a3, a8);
  }
  if (a6 < 0)
  {
    __break(1u);
  }
  else
  {
    type metadata accessor for MersenneTwisterGenerator();
    swift_initStackObject();
    uint64_t v18 = sub_22083691C(a6);
    sub_220936A64(a2, a3, &v18, a8);
    return swift_release();
  }
  return result;
}

uint64_t sub_2208F6D0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, long long *a5)
{
  return sub_2208F6BF0(a1, a2, a3, a4, a5, *(void *)(v5 + 40), *(unsigned char *)(v5 + 48), *(double *)(v5 + 32));
}

uint64_t sub_2208F6D40@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  sub_22093ED30();
  uint64_t v6 = a1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267F197E8);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a3, a3 + *(int *)(TupleTypeMetadata2 + 48), a3 + *(int *)(TupleTypeMetadata2 + 48) + 48, a1, v6);
}

uint64_t sub_2208F6E08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2208F6D40(a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 32), a2);
}

uint64_t sub_2208F6E2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v4 = sub_22093ED30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267F197E8);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v6 = TupleTypeMetadata2 - 8;
  uint64_t v7 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v46 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v34 - v9;
  uint64_t v11 = a2 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  uint64_t v12 = *(int *)(v6 + 56);
  uint64_t v13 = &v10[v12];
  uint64_t v14 = (uint64_t *)(a1 + v12);
  uint64_t v39 = v4;
  uint64_t v47 = *(void *)(v4 - 8);
  uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v47 + 16);
  uint64_t v44 = a1;
  v43(v10, a1, v4);
  uint64_t v15 = *v14;
  uint64_t v16 = v14[1];
  uint64_t v18 = v14[2];
  uint64_t v42 = v14[3];
  uint64_t v17 = v42;
  uint64_t v19 = v14[4];
  uint64_t v40 = v18;
  uint64_t v41 = v19;
  *(void *)uint64_t v13 = v15;
  *((void *)v13 + 1) = v16;
  *((void *)v13 + 2) = v18;
  *((void *)v13 + 3) = v17;
  *((void *)v13 + 4) = v19;
  LOBYTE(a1) = *((unsigned char *)v14 + 40);
  v13[40] = a1;
  uint64_t v20 = v14[6];
  uint64_t v37 = v14[7];
  uint64_t v21 = v37;
  uint64_t v38 = v20;
  uint64_t v22 = v14[8];
  uint64_t v35 = v14[9];
  uint64_t v23 = v35;
  uint64_t v36 = v22;
  uint64_t v34 = v14[10];
  uint64_t v24 = v34;
  LOBYTE(v14) = *((unsigned char *)v14 + 88);
  *((void *)v13 + 6) = v20;
  *((void *)v13 + 7) = v21;
  *((void *)v13 + 8) = v22;
  *((void *)v13 + 9) = v23;
  *((void *)v13 + 10) = v24;
  v13[88] = (char)v14;
  uint64_t v25 = v39;
  (*(void (**)(uint64_t, char *, uint64_t))(v47 + 32))(v45, v10, v39);
  uint64_t v26 = *(int *)(v6 + 56);
  uint64_t v27 = v46;
  uint64_t v28 = &v46[v26];
  v43(v46, v44, v25);
  *(void *)uint64_t v28 = v15;
  *((void *)v28 + 1) = v16;
  uint64_t v30 = v40;
  uint64_t v29 = v41;
  uint64_t v31 = v42;
  *((void *)v28 + 2) = v40;
  *((void *)v28 + 3) = v31;
  *((void *)v28 + 4) = v29;
  v28[40] = a1;
  *((void *)v28 + 6) = v38;
  *((void *)v28 + 7) = v37;
  *((void *)v28 + 8) = v36;
  *((void *)v28 + 9) = v35;
  *((void *)v28 + 10) = v34;
  v28[88] = (char)v14;
  *(void *)uint64_t v11 = v15;
  *(void *)(v11 + 8) = v16;
  *(void *)(v11 + 16) = v30;
  *(void *)(v11 + 24) = v31;
  *(void *)(v11 + 32) = v29;
  uint64_t v32 = v29;
  *(unsigned char *)(v11 + 40) = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220831F30(v31, v32, a1);
  return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v27, v25);
}

uint64_t sub_2208F70D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2208F6E2C(a1, a2);
}

uint64_t sub_2208F70F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v4 = sub_22093ED30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267F197E8);
  uint64_t v5 = swift_getTupleTypeMetadata2() - 8;
  uint64_t v46 = v5;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v47 = &v33[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = &v33[-v8];
  uint64_t v10 = a2 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  uint64_t v11 = *(int *)(v5 + 56);
  uint64_t v12 = v9;
  uint64_t v35 = v4;
  uint64_t v36 = v9;
  uint64_t v13 = &v9[v11];
  uint64_t v14 = a1;
  uint64_t v44 = a1;
  uint64_t v15 = (uint64_t *)(a1 + v11);
  uint64_t v48 = *(void *)(v4 - 8);
  uint64_t v43 = *(void (**)(void))(v48 + 16);
  ((void (*)(unsigned char *, uint64_t, uint64_t))v43)(v12, v14, v4);
  uint64_t v16 = *v15;
  uint64_t v41 = v15[1];
  uint64_t v17 = v41;
  uint64_t v42 = v16;
  uint64_t v18 = v15[2];
  uint64_t v39 = v15[3];
  uint64_t v19 = v39;
  uint64_t v40 = v18;
  uint64_t v38 = v15[4];
  uint64_t v20 = v38;
  unsigned __int8 v21 = *((unsigned char *)v15 + 40);
  int v37 = v21;
  *(void *)uint64_t v13 = v16;
  *((void *)v13 + 1) = v17;
  *((void *)v13 + 2) = v18;
  *((void *)v13 + 3) = v19;
  *((void *)v13 + 4) = v20;
  v13[40] = v21;
  uint64_t v22 = v15[6];
  uint64_t v23 = v15[7];
  uint64_t v24 = v15[8];
  uint64_t v25 = v15[9];
  uint64_t v26 = v15[10];
  LOBYTE(v16) = *((unsigned char *)v15 + 88);
  int v34 = v16;
  *((void *)v13 + 6) = v22;
  *((void *)v13 + 7) = v23;
  *((void *)v13 + 8) = v24;
  *((void *)v13 + 9) = v25;
  *((void *)v13 + 10) = v26;
  v13[88] = v16;
  uint64_t v27 = v35;
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v48 + 32))(v45, v36, v35);
  uint64_t v28 = &v47[*(int *)(v46 + 56)];
  v43();
  uint64_t v29 = v41;
  *(void *)uint64_t v28 = v42;
  *((void *)v28 + 1) = v29;
  uint64_t v30 = v39;
  *((void *)v28 + 2) = v40;
  *((void *)v28 + 3) = v30;
  *((void *)v28 + 4) = v38;
  v28[40] = v37;
  *((void *)v28 + 6) = v22;
  *((void *)v28 + 7) = v23;
  *((void *)v28 + 8) = v24;
  *((void *)v28 + 9) = v25;
  *((void *)v28 + 10) = v26;
  char v31 = v34;
  v28[88] = v34;
  *(void *)uint64_t v10 = v22;
  *(void *)(v10 + 8) = v23;
  *(void *)(v10 + 16) = v24;
  *(void *)(v10 + 24) = v25;
  *(void *)(v10 + 32) = v26;
  *(unsigned char *)(v10 + 40) = v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220831F30(v25, v26, v31);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v48 + 8))(v47, v27);
}

uint64_t sub_2208F739C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2208F70F8(a1, a2);
}

void sub_2208F73BC(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  sub_2208F5BAC(a1, a2, v3[5], v3[6], v3[2], a3);
}

uint64_t sub_2208F73CC(uint64_t a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 32);
  sub_22093ED30();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return v3(a1, a1 + *(int *)(TupleTypeMetadata2 + 48));
}

uint64_t sub_2208F7450@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v16 = sub_2208F74E0(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a7 - 8) + 8))(a1, a7);
  *a9 = v16;
  a9[1] = a2;
  a9[2] = a3;
  return result;
}

uint64_t sub_2208F74E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11 = a7;
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a10 + 24))(v66, a7, a10);
  uint64_t v60 = v66[0];
  uint64_t v61 = v66[1];
  uint64_t v62 = v66[2];
  DataFrame.subscript.getter(a2, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a10 + 32))(&v60, v11, a10);
  uint64_t v14 = v63;
  uint64_t v15 = v64;
  LOBYTE(v11) = v65;
  sub_220831F30(v63, v64, v65);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v14, v15, v11);
  uint64_t v16 = type metadata accessor for Column();
  sub_220866A38(v14, v15, v11, v16, (uint64_t)v56);
  sub_22080B6B4(v14, v15, v11);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v17 = v57;
  uint64_t v18 = v58;
  LOBYTE(a3) = v59;
  uint64_t v50 = v56[0];
  uint64_t v51 = v56[1];
  uint64_t v52 = v56[2];
  uint64_t v53 = v57;
  uint64_t v54 = v58;
  char v55 = v59;
  uint64_t v19 = type metadata accessor for DiscontiguousColumnSlice();
  DiscontiguousColumnSlice.map<A>(_:)(a4, a5, v19, a6, v67);
  swift_release();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v17, v18, a3);
  uint64_t v60 = v67[0];
  uint64_t v61 = v67[1];
  uint64_t v62 = v67[2];
  uint64_t v20 = type metadata accessor for Column();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_22093ED30();
  uint64_t v22 = swift_getWitnessTable();
  uint64_t v23 = sub_220872610(v20, WitnessTable, v22);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v60 = v23;
  uint64_t v44 = a6;
  uint64_t v45 = a7;
  uint64_t v46 = a8;
  uint64_t v47 = a9;
  uint64_t v48 = a10;
  uint64_t v49 = a1;
  uint64_t v36 = a6;
  uint64_t v37 = a7;
  uint64_t v38 = a8;
  uint64_t v39 = a9;
  uint64_t v40 = a10;
  uint64_t v41 = sub_2208F91F8;
  uint64_t v42 = &v43;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_267F18E60);
  swift_getTupleTypeMetadata2();
  uint64_t v24 = sub_22093E900();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v26 = swift_getWitnessTable();
  uint64_t v28 = sub_2208F0D18((void (*)(char *, char *))sub_2208F9230, (uint64_t)v35, v24, TupleTypeMetadata2, MEMORY[0x263F8E628], v26, MEMORY[0x263F8E658], v27);
  swift_bridgeObjectRelease();
  return v28;
}

uint64_t sub_2208F788C(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, unsigned __int8 a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v18 = sub_22093ED30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(a1, a3, v18);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a12 + 24))(v39, a9, a12);
  uint64_t v19 = v39[0];
  uint64_t v20 = v39[1];
  uint64_t v21 = v39[2];
  if (!*(void *)(v39[0] + 16))
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    goto LABEL_6;
  }
  uint64_t v35 = a4;
  unsigned __int8 v22 = a6;
  sub_22080B5B8(v39[0] + 32, (uint64_t)v36);
  uint64_t v23 = v37;
  uint64_t v24 = v38;
  __swift_project_boxed_opaque_existential_1(v36, v37);
  uint64_t v25 = *(void *)(v24 + 8);
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t))(v25 + 48);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v27 = v26(v23, v25);
  uint64_t result = sub_22080B0D8((uint64_t)v36);
  if ((v27 & 0x8000000000000000) == 0)
  {
    a6 = v22;
    a4 = v35;
    if (v27)
    {
      char v29 = 0;
LABEL_7:
      sub_220831F30(0, v27, v29);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22080B6B4(0, v27, v29);
      uint64_t v30 = sub_22081A46C(a4, a5, a6, 0, v27, v29);
      uint64_t v32 = v31;
      char v34 = v33;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)a2 = v19;
      *(void *)(a2 + 8) = v20;
      *(void *)(a2 + 16) = v21;
      *(void *)(a2 + 24) = v30;
      *(void *)(a2 + 32) = v32;
      *(unsigned char *)(a2 + 40) = v34;
      return result;
    }
LABEL_6:
    uint64_t v27 = 0;
    char v29 = 2;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_2208F7AAC@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  sub_22093ED30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_267F18E60);
  uint64_t v6 = (uint64_t *)(a1 + *(int *)(swift_getTupleTypeMetadata2() + 48));
  uint64_t v7 = *v6;
  uint64_t v8 = v6[1];
  uint64_t v9 = *((unsigned __int8 *)v6 + 16);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a3, a3 + *(int *)(TupleTypeMetadata2 + 48), a1, v7, v8, v9);
}

uint64_t RowGrouping.init<A>(frame:columnName:timeUnit:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  uint64_t v45 = a3;
  uint64_t v46 = a6;
  uint64_t v43 = a5;
  uint64_t v44 = a1;
  uint64_t v39 = a4;
  uint64_t v47 = a2;
  uint64_t v48 = a7;
  uint64_t v42 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v41 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_22093E170();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_22093E180();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v37 - v18;
  uint64_t v40 = (char *)&v37 - v18;
  sub_22093E160();
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  uint64_t v38 = v13;
  v20(v17, v19, v13);
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v22 = a4;
  uint64_t v23 = v9;
  uint64_t v37 = v9;
  v21(v12, v22, v9);
  unint64_t v24 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v25 = (v15 + *(unsigned __int8 *)(v10 + 80) + v24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v26 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v26 + v24, v17, v13);
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v26 + v25, v12, v23);
  uint64_t v27 = (uint64_t)v41;
  uint64_t v28 = v42;
  uint64_t v29 = v43;
  uint64_t v30 = v44;
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v41, v44, v43);
  uint64_t v50 = sub_2208F8D98;
  uint64_t v51 = v26;
  uint64_t v31 = sub_22093E100();
  uint64_t v32 = v47;
  uint64_t v33 = v45;
  uint64_t v46 = sub_2208F74E0(v27, v47, v45, (uint64_t)sub_2208F8E6C, (uint64_t)v49, MEMORY[0x263F8D6C8], v29, v31, MEMORY[0x263F8D6D8], v46);
  char v34 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
  v34(v27, v29);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v39, v37);
  v34(v30, v29);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v40, v38);
  uint64_t result = swift_release();
  uint64_t v36 = v48;
  *uint64_t v48 = v46;
  v36[1] = v32;
  v36[2] = v33;
  return result;
}

uint64_t sub_2208F7F48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_22093DE90();
  uint64_t v23 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD411B8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_22093E100();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_220835280(a1, (uint64_t)v10, qword_26AD411B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_2208573C0((uint64_t)v10);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F19878);
    uint64_t v16 = sub_22093E170();
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v22 = v5;
    uint64_t v18 = v17;
    unint64_t v19 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_220944FB0;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v18 + 16))(v20 + v19, a3, v16);
    sub_2208F9268(v20);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    sub_22093E150();
    swift_bridgeObjectRelease();
    uint64_t v15 = sub_22093DE80();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v22);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  return v15;
}

uint64_t RowGrouping.startIndex.getter()
{
  return 0;
}

uint64_t RowGrouping.endIndex.getter(uint64_t a1)
{
  return sub_2208F82A8(a1, MEMORY[0x263F8D470]);
}

uint64_t sub_2208F82A8(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v3 = *v2;
  sub_22093ED30();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();

  return a2(v3, TupleTypeMetadata2);
}

Swift::Int __swiftcall RowGrouping.index(after:)(Swift::Int after)
{
  BOOL v1 = __OFADD__(after, 1);
  Swift::Int result = after + 1;
  if (v1) {
    __break(1u);
  }
  return result;
}

Swift::Int __swiftcall RowGrouping.index(before:)(Swift::Int before)
{
  BOOL v1 = __OFSUB__(before, 1);
  Swift::Int result = before - 1;
  if (v1) {
    __break(1u);
  }
  return result;
}

__n128 RowGrouping.subscript.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22093ED30();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v7 = (char *)&v13 - v6;
  sub_22093E940();
  uint64_t v8 = &v7[*(int *)(TupleTypeMetadata2 + 48)];
  __n128 v14 = *((__n128 *)v8 + 1);
  uint64_t v9 = *((void *)v8 + 4);
  char v10 = v8[40];
  uint64_t v11 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v4 - 8) + 32);
  long long v13 = *(_OWORD *)v8;
  v11(a1, v7, v4);
  __n128 result = v14;
  *(_OWORD *)a2 = v13;
  *(__n128 *)(a2 + 16) = result;
  *(void *)(a2 + 32) = v9;
  *(unsigned char *)(a2 + 40) = v10;
  return result;
}

uint64_t sub_2208F8474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D708];

  return MEMORY[0x270F9E068](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_2208F84F8()
{
  swift_getWitnessTable();

  return sub_22093EA00();
}

uint64_t sub_2208F857C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D708];

  return MEMORY[0x270F9E078](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_2208F85F0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = RowGrouping.endIndex.getter(a1);
  *a2 = result;
  return result;
}

void (*sub_2208F8618(uint64_t **a1))(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = (uint64_t *)malloc(0x40uLL);
  *a1 = v2;
  uint64_t v3 = sub_22093ED30();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v2[4] = TupleTypeMetadata2;
  uint64_t v5 = *(void *)(TupleTypeMetadata2 - 8);
  v2[5] = v5;
  uint64_t v6 = (char *)malloc(*(void *)(v5 + 64));
  v2[6] = (uint64_t)v6;
  uint64_t v7 = sub_2208F8818(v2);
  uint64_t v9 = v8;
  v2[7] = (uint64_t)v7;
  (*(void (**)(char *))(*(void *)(v3 - 8) + 16))(v6);
  char v10 = &v6[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v11 = *v9;
  uint64_t v12 = v9[1];
  uint64_t v13 = v9[2];
  uint64_t v14 = v9[3];
  uint64_t v15 = v9[4];
  LOBYTE(v9) = *((unsigned char *)v9 + 40);
  *(void *)char v10 = v11;
  *((void *)v10 + 1) = v12;
  *((void *)v10 + 2) = v13;
  *((void *)v10 + 3) = v14;
  *((void *)v10 + 4) = v15;
  v10[40] = (char)v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220831F30(v14, v15, (char)v9);
  return sub_2208F87A0;
}

void sub_2208F87A0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  (*(void (**)(void, void))(*(void *)(*a1 + 40) + 8))(*(void *)(*a1 + 48), *(void *)(*a1 + 32));
  uint64_t v4 = *(void **)(v3 + 48);
  (*(void (**)(uint64_t, uint64_t))(v3 + 56))(v3, a2);
  free(v4);

  free((void *)v3);
}

void (*sub_2208F8818(uint64_t *a1))(void *a1)
{
  sub_22093ED30();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  *a1 = TupleTypeMetadata2;
  uint64_t v3 = *(void *)(TupleTypeMetadata2 - 8);
  a1[1] = v3;
  uint64_t v4 = malloc(*(void *)(v3 + 64));
  a1[2] = (uint64_t)v4;
  RowGrouping.subscript.getter((uint64_t)v4, (uint64_t)v4 + *(int *)(TupleTypeMetadata2 + 48));
  return sub_22085FCE0;
}

uint64_t sub_2208F890C()
{
  swift_getWitnessTable();

  return sub_22093EA40();
}

__n128 sub_2208F8978@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *v1;
  unint64_t v3 = v1[1].n128_u64[0];
  *a1 = *v1;
  a1[1].n128_u64[0] = v3;
  a1[1].n128_u64[1] = 0;
  return result;
}

uint64_t sub_2208F898C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F9E108](a1, WitnessTable);
}

uint64_t sub_2208F89E0()
{
  swift_getWitnessTable();

  return sub_22093EB10();
}

uint64_t sub_2208F8A34(unint64_t a1, uint64_t a2)
{
  uint64_t result = _swift_isClassOrObjCExistentialType();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v5 = a2 & 0xFFFFFFFFFFFFFF8;
  if ((result & 1) == 0) {
    uint64_t v5 = a2;
  }
  if (*(void *)(v5 + 16) <= a1) {
    goto LABEL_7;
  }
  return result;
}

double sub_2208F8A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2208F3B00(a1, a2, a3, a4, v4[2], v4[3], v4[4], v4[5]);
}

uint64_t sub_2208F8A94(uint64_t a1, uint64_t a2)
{
  return sub_2208F91C8(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void, void, uint64_t))sub_2208F3C34);
}

double sub_2208F8AC0@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + 32);
  uint64_t v5 = (*(uint64_t (**)(void, void))(v2 + 48))(*a1, a1[1]);
  *(void *)&double result = sub_220839984(v5, v6, v4, a2).n128_u64[0];
  return result;
}

unint64_t sub_2208F8B14()
{
  unint64_t result = qword_267F197F0[0];
  if (!qword_267F197F0[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267F18BE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_267F197F0);
  }
  return result;
}

uint64_t sub_2208F8B70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2208F5794(a1, *(void **)(v2 + 40), a2);
}

uint64_t sub_2208F8B94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2208F59A8(a1, *(void *)(v2 + 48), a2);
}

uint64_t sub_2208F8BBC(uint64_t a1)
{
  return sub_2208F5E50(a1, *(uint64_t (**)(long long *))(v1 + 32)) & 1;
}

uint64_t sub_2208F8BE0(uint64_t a1, uint64_t a2, uint64_t a3, long long *a4)
{
  return sub_2208F609C(a1, a2, a3, a4, *(uint64_t (**)(_OWORD *))(v4 + 32));
}

uint64_t sub_2208F8C00@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_2208F61C0(a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 32), a2, a3);
}

uint64_t sub_2208F8C24(char *a1)
{
  return sub_2208F6740(a1, v1[4], v1[2], v1[3]) & 1;
}

uint64_t sub_2208F8C48()
{
  uint64_t v1 = sub_22093E180();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_22093E170();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return MEMORY[0x270FA0238](v0, v10, v11);
}

uint64_t sub_2208F8D98(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_22093E180() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(sub_22093E170() - 8);
  uint64_t v7 = v1 + ((v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_2208F7F48(a1, v1 + v4, v7);
}

uint64_t sub_2208F8E6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v4 & 1;
  return result;
}

uint64_t sub_2208F8EA4(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2208F8EE0()
{
  return swift_getWitnessTable();
}

uint64_t sub_2208F8EFC()
{
  return swift_getWitnessTable();
}

uint64_t sub_2208F8F60()
{
  return swift_getWitnessTable();
}

uint64_t sub_2208F8F7C()
{
  return swift_getWitnessTable();
}

uint64_t sub_2208F8FE0()
{
  return swift_getWitnessTable();
}

uint64_t sub_2208F9000()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_2208F903C(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_2208F907C(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_2208F90E4(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t type metadata accessor for RowGrouping()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2208F9144@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2208F3CF4(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_2208F9168(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, unsigned __int8 a6)
{
  return sub_2208F3D9C(a1, a2, a3, a4, a5, a6, v6[6], v6[2], v6[3], v6[4], v6[5]);
}

uint64_t sub_2208F919C(uint64_t a1, uint64_t a2)
{
  return sub_2208F91C8(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void, void, uint64_t))sub_2208F3FBC);
}

uint64_t sub_2208F91C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, void, void, void, void, void, void, uint64_t))
{
  return a3(a1, v3[6], v3[7], v3[2], v3[3], v3[4], v3[5], a2);
}

uint64_t sub_2208F91F8(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, unsigned __int8 a6)
{
  return sub_2208F788C(a1, a2, a3, a4, a5, a6, v6[7], v6[2], v6[3], v6[4], v6[5], v6[6]);
}

uint64_t sub_2208F9230@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2208F7AAC(a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56), a2);
}

uint64_t sub_2208F9268(uint64_t a1)
{
  uint64_t v2 = sub_22093E170();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F19880);
    uint64_t v9 = sub_22093EE90();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_2208F9558(&qword_267F19888);
      uint64_t v16 = sub_22093E360();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_2208F9558(qword_267F19890);
          char v23 = sub_22093E520();
          unint64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        unint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t sub_2208F9558(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22093E170();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t NumericSummary.someCount.getter()
{
  return *(void *)v0;
}

uint64_t NumericSummary.someCount.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*NumericSummary.someCount.modify())(void)
{
  return nullsub_5;
}

uint64_t NumericSummary.noneCount.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t NumericSummary.noneCount.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

uint64_t (*NumericSummary.noneCount.modify())(void)
{
  return nullsub_5;
}

uint64_t NumericSummary.totalCount.getter()
{
  uint64_t v1 = v0[1];
  uint64_t result = *v0 + v1;
  if (__OFADD__(*v0, v1)) {
    __break(1u);
  }
  return result;
}

uint64_t NumericSummary.median.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 40));
}

uint64_t NumericSummary.median.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 40), a1);
}

uint64_t (*NumericSummary.median.modify())(void)
{
  return nullsub_5;
}

uint64_t NumericSummary.firstQuartile.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 44));
}

uint64_t NumericSummary.firstQuartile.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 44), a1);
}

uint64_t (*NumericSummary.firstQuartile.modify())(void)
{
  return nullsub_5;
}

uint64_t NumericSummary.thirdQuartile.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 48));
}

uint64_t NumericSummary.thirdQuartile.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 48), a1);
}

uint64_t (*NumericSummary.thirdQuartile.modify())(void)
{
  return nullsub_5;
}

uint64_t NumericSummary.mean.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 52));
}

uint64_t NumericSummary.mean.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 52), a1);
}

uint64_t (*NumericSummary.mean.modify())(void)
{
  return nullsub_5;
}

uint64_t NumericSummary.standardDeviation.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 56));
}

uint64_t NumericSummary.standardDeviation.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 56), a1);
}

uint64_t (*NumericSummary.standardDeviation.modify())(void)
{
  return nullsub_5;
}

uint64_t NumericSummary.min.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 60));
}

uint64_t NumericSummary.min.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 60), a1);
}

uint64_t (*NumericSummary.min.modify())(void)
{
  return nullsub_5;
}

uint64_t NumericSummary.max.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 64));
}

uint64_t NumericSummary.max.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 64), a1);
}

uint64_t (*NumericSummary.max.modify())(void)
{
  return nullsub_5;
}

uint64_t NumericSummary.init()@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  sub_22093E310();
  sub_22093E310();
  sub_22093E310();
  sub_22093E310();
  sub_22093E310();
  sub_22093E310();
  return sub_22093E310();
}

uint64_t type metadata accessor for NumericSummary()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t NumericSummary.init(someCount:noneCount:mean:standardDeviation:min:max:median:firstQuartile:thirdQuartile:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>, uint64_t a10, uint64_t a11)
{
  *(void *)a9 = a1;
  *((void *)a9 + 1) = a2;
  unint64_t v18 = (int *)type metadata accessor for NumericSummary();
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(a11 - 8) + 32);
  v21(&a9[v18[13]], a3, a11);
  v21(&a9[v18[14]], a4, a11);
  v21(&a9[v18[15]], a5, a11);
  v21(&a9[v18[16]], a6, a11);
  v21(&a9[v18[10]], a7, a11);
  v21(&a9[v18[11]], a8, a11);
  unint64_t v19 = &a9[v18[12]];

  return ((uint64_t (*)(char *, uint64_t, uint64_t))v21)(v19, a10, a11);
}

uint64_t NumericSummary.debugDescription.getter()
{
  return 0;
}

uint64_t sub_2208F9F30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  uint64_t v118 = a6;
  uint64_t v104 = a2;
  uint64_t v117 = a1;
  uint64_t v103 = a7;
  uint64_t v110 = *(void *)(a5 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v101 = (char *)&v101 - v10;
  uint64_t v114 = a5;
  uint64_t v145 = *(void *)(a5 + 16);
  uint64_t v11 = *(void *)(*(void *)(v145 + 16) + 8);
  uint64_t v109 = *(void *)(v11 + 16);
  uint64_t v108 = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](v108);
  uint64_t v107 = (char *)&v101 - v12;
  uint64_t v13 = sub_22093ED30();
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t WitnessTable = (char *)&v101 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  v129 = (char *)&v101 - v17;
  uint64_t v116 = a4;
  uint64_t v119 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](v16);
  unint64_t v19 = (char *)&v101 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = swift_getAssociatedTypeWitness();
  uint64_t v120 = *(void *)(v20 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  uint64_t v132 = (char *)&v101 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v133 = (char *)&v101 - v24;
  uint64_t v122 = *(void *)(a3 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v112 = (uint64_t)&v101 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v111 = (void (*)(char *, uint64_t, unint64_t))((char *)&v101 - v28);
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v31 = (void (*)(char *, uint64_t, unint64_t))((char *)&v101 - v30);
  uint64_t v32 = MEMORY[0x270FA5388](v29);
  uint64_t v34 = (void (*)(char *, uint64_t, unint64_t))((char *)&v101 - v33);
  uint64_t v35 = MEMORY[0x270FA5388](v32);
  long long v134 = (void (*)(char *, uint64_t, unint64_t))((char *)&v101 - v36);
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v121 = (uint64_t)&v101 - v38;
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v115 = (uint64_t)&v101 - v40;
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  v125 = (char *)&v101 - v42;
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  v124 = (char *)&v101 - v44;
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  uint64_t v47 = (char *)&v101 - v46;
  uint64_t v48 = MEMORY[0x270FA5388](v45);
  uint64_t v50 = (char *)&v101 - v49;
  uint64_t v51 = MEMORY[0x270FA5388](v48);
  uint64_t v53 = (char *)&v101 - v52;
  MEMORY[0x270FA5388](v51);
  uint64_t v126 = v11;
  uint64_t v54 = *(void *)(v11 + 8);
  uint64_t v130 = (void (*)(char *, uint64_t, unint64_t))((char *)&v101 - v55);
  uint64_t v127 = v54;
  sub_22093F0D0();
  uint64_t v128 = v53;
  uint64_t v56 = (void (*)(uint64_t, uint64_t))v20;
  sub_22093E310();
  uint64_t v137 = v50;
  uint64_t v57 = v119;
  sub_22093E310();
  unint64_t v105 = *(void (**)(char *, uint64_t, uint64_t))(v57 + 16);
  v105(v19, v117, v116);
  v106 = v19;
  sub_22093E780();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  char v59 = v129;
  uint64_t v141 = AssociatedConformanceWitness;
  sub_22093ED70();
  uint64_t v60 = v122 + 48;
  uint64_t v61 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v122 + 48);
  uint64_t v62 = v59;
  uint64_t v63 = v120;
  uint64_t v64 = 0;
  BOOL v65 = v61(v62, 1, a3) == 1;
  uint64_t v66 = v133;
  v144 = v31;
  uint64_t v113 = v34;
  uint64_t v142 = v56;
  uint64_t v119 = v57 + 16;
  long long v139 = v61;
  uint64_t v140 = v60;
  if (!v65)
  {
    uint64_t v67 = 0;
    uint64_t v135 = *(void (**)(char *, char *, uint64_t))(v122 + 32);
    uint64_t v136 = (void (*)(char *, void))(v122 + 32);
    char v138 = (void (**)(char *, char *, uint64_t))(v122 + 16);
    unint64_t v68 = (void (**)(char *, uint64_t))(v122 + 8);
    unint64_t v123 = (void (**)(uint64_t, char *, uint64_t))(v122 + 24);
    uint64_t v69 = (uint64_t)v128;
    uint64_t v70 = v125;
    v135(v47, v129, a3);
    while (1)
    {
      uint64_t result = sub_22093F0C0();
      if (__OFADD__(v67, 1))
      {
        __break(1u);
LABEL_28:
        __break(1u);
        return result;
      }
      uint64_t v131 = v67 + 1;
      char v72 = sub_22093E320();
      uint64_t v73 = *v138;
      int v74 = v124;
      (*v138)(v124, v47, a3);
      if (v72)
      {
        uint64_t v75 = *v68;
        (*v68)(v74, a3);
      }
      else
      {
        char v76 = sub_22093E460();
        uint64_t v75 = *v68;
        (*v68)(v74, a3);
        if ((v76 & 1) == 0) {
          goto LABEL_11;
        }
      }
      (*v123)(v69, v47, a3);
LABEL_11:
      char v77 = sub_22093E320();
      v73(v70, v47, a3);
      if (v77)
      {
        v75(v70, a3);
        uint64_t v78 = v129;
      }
      else
      {
        char v79 = sub_22093E450();
        v75(v70, a3);
        uint64_t v78 = v129;
        if ((v79 & 1) == 0)
        {
          v75(v47, a3);
          goto LABEL_4;
        }
      }
      uint64_t v80 = (uint64_t)v137;
      v75(v137, a3);
      v135((char *)v80, v47, a3);
LABEL_4:
      uint64_t v69 = (uint64_t)v128;
      uint64_t v56 = v142;
      sub_22093ED70();
      ++v67;
      if (v139(v78, 1, a3) == 1)
      {
        uint64_t v34 = v113;
        uint64_t v64 = v131;
        uint64_t v63 = v120;
        uint64_t v66 = v133;
        break;
      }
      v135(v47, v78, a3);
    }
  }
  uint64_t v136 = *(void (**)(char *, void))(v63 + 8);
  v136(v66, v56);
  uint64_t v131 = v64;
  uint64_t v120 = v63 + 8;
  if (v64 < 1)
  {
    sub_22093E310();
  }
  else
  {
    uint64_t v81 = v121;
    sub_22093E340();
    sub_22093E300();
    (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v81, a3);
  }
  sub_22093F0D0();
  v105(v106, v117, v116);
  sub_22093E780();
  uint64_t v82 = (uint64_t)WitnessTable;
  sub_22093ED70();
  uint64_t v83 = v82;
  unsigned int v84 = v139((char *)v82, 1, a3);
  uint64_t v85 = v121;
  char v86 = v111;
  if (v84 != 1)
  {
    char v138 = *(void (***)(char *, char *, uint64_t))(v122 + 32);
    uint64_t v87 = (void (**)(void (*)(char *, uint64_t, unint64_t), uint64_t))(v122 + 8);
    do
    {
      ((void (*)(uint64_t, uint64_t, uint64_t))v138)(v85, v83, a3);
      sub_22093F0B0();
      sub_22093F0B0();
      sub_22093E9F0();
      v88 = v34;
      unint64_t v89 = *v87;
      (*v87)(v86, a3);
      v89(v144, a3);
      sub_22093F0C0();
      v89(v88, a3);
      v89((void (*)(char *, uint64_t, unint64_t))v85, a3);
      uint64_t v34 = v88;
      sub_22093ED70();
      uint64_t v83 = (uint64_t)WitnessTable;
    }
    while (v139(WitnessTable, 1, a3) != 1);
  }
  v136(v132, v142);
  swift_getAssociatedConformanceWitness();
  sub_22093F290();
  sub_22093F240();
  char v90 = sub_22093E450();
  uint64_t v91 = v122 + 8;
  unint64_t v92 = *(void (**)(uint64_t, uint64_t))(v122 + 8);
  v92(v85, a3);
  uint64_t v122 = v91;
  uint64_t v142 = v92;
  if (v90)
  {
    uint64_t result = v131 - 1;
    if (__OFSUB__(v131, 1)) {
      goto LABEL_28;
    }
    sub_22093E340();
    sub_22093E300();
    v92((uint64_t)v34, a3);
    sub_22093E2F0();
    uint64_t v93 = ((uint64_t (*)(uint64_t, uint64_t))v92)(v85, a3);
  }
  else
  {
    uint64_t v93 = sub_22093E310();
  }
  MEMORY[0x270FA5388](v93);
  uint64_t v146 = sub_22093E7A0();
  uint64_t v94 = sub_22093E900();
  swift_getWitnessTable();
  uint64_t v95 = sub_22093E810();
  swift_bridgeObjectRelease();
  uint64_t v146 = v95;
  uint64_t v141 = swift_getAssociatedConformanceWitness();
  sub_22093F280();
  uint64_t v96 = v113;
  sub_22093F1F0();
  uint64_t v145 = v94;
  uint64_t WitnessTable = (char *)swift_getWitnessTable();
  uint64_t v97 = v114;
  sub_2208FAF68(v96, v94, (uint64_t)WitnessTable, v114, v121);
  v98 = (void (*)(void (*)(char *, uint64_t, unint64_t), uint64_t))v142;
  v142((uint64_t)v96, a3);
  uint64_t v146 = v95;
  sub_22093F280();
  v99 = v144;
  sub_22093F1F0();
  sub_2208FAF68(v99, v145, (uint64_t)WitnessTable, v97, (uint64_t)v96);
  v98(v99, a3);
  uint64_t v146 = v95;
  sub_22093F280();
  v100 = v111;
  sub_22093F1F0();
  sub_2208FAF68(v100, v145, (uint64_t)WitnessTable, v114, (uint64_t)v99);
  v98(v100, a3);
  v98(v134, a3);
  v98(v130, a3);
  swift_bridgeObjectRelease();
  return NumericSummary.init(someCount:noneCount:mean:standardDeviation:min:max:median:firstQuartile:thirdQuartile:)(v131, v104, v115, v112, (uint64_t)v128, (uint64_t)v137, (uint64_t)v113, v121, v103, (uint64_t)v99, a3);
}

uint64_t sub_2208FAF68@<X0>(void (*a1)(char *, uint64_t, unint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v86 = a5;
  unint64_t v79 = sub_22093F200();
  uint64_t v78 = *(void *)(v79 - 8);
  MEMORY[0x270FA5388](v79);
  char v77 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = *(void *)(*(void *)(a3 + 8) + 8);
  uint64_t v93 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v12 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v73 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v75 = (char *)&v71 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  int v74 = (char *)&v71 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  char v72 = (char *)&v71 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v81 = (char *)&v71 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v71 = (char *)&v71 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v83 = (char *)&v71 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  char v90 = (char *)&v71 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  unint64_t v92 = (void (*)(char *, uint64_t))((char *)&v71 - v29);
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  unint64_t v89 = (char *)&v71 - v31;
  MEMORY[0x270FA5388](v30);
  uint64_t v33 = (char *)&v71 - v32;
  uint64_t v34 = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](v34);
  uint64_t AssociatedConformanceWitness = (void (*)(char *, uint64_t))swift_getAssociatedConformanceWitness();
  sub_22093F280();
  sub_22093F1F0();
  uint64_t v82 = a4;
  uint64_t v85 = *(void *)(a4 + 16);
  uint64_t v87 = *(void *)(*(void *)(v85 + 24) + 8);
  LOBYTE(a2) = sub_22093E470();
  uint64_t v36 = (char *)(v11 + 8);
  uint64_t v35 = *(void (**)(char *, uint64_t))(v11 + 8);
  v35(v33, AssociatedTypeWitness);
  uint64_t v37 = v11;
  uint64_t v38 = v89;
  uint64_t v39 = *(void (**)(uint64_t))(v37 + 16);
  char v76 = a1;
  uint64_t v84 = v37 + 16;
  uint64_t v80 = v39;
  ((void (*)(char *, void, uint64_t))v39)(v89, a1, AssociatedTypeWitness);
  if ((a2 & 1) == 0) {
    goto LABEL_13;
  }
  sub_22093F280();
  sub_22093F1F0();
  char v40 = sub_22093E480();
  v35(v33, AssociatedTypeWitness);
  v35(v38, AssociatedTypeWitness);
  if ((v40 & 1) == 0) {
    goto LABEL_16;
  }
  uint64_t v41 = v35;
  char v42 = sub_22093EAC0();
  uint64_t v35 = v92;
  if (v42) {
    return sub_22093E310();
  }
  if (__OFSUB__(sub_22093EA80(), 1))
  {
    __break(1u);
LABEL_13:
    v35(v38, AssociatedTypeWitness);
    goto LABEL_16;
  }
  uint64_t v44 = v85;
  sub_22093E340();
  uint64_t v87 = *(void *)(*(void *)(v44 + 16) + 8);
  sub_22093E9F0();
  uint64_t AssociatedConformanceWitness = v41;
  unint64_t v89 = v36;
  v41(v33, AssociatedTypeWitness);
  uint64_t v45 = *MEMORY[0x263F8E1F8];
  uint64_t v46 = v78;
  char v76 = *(void (**)(char *, uint64_t, unint64_t))(v78 + 104);
  uint64_t v47 = v77;
  uint64_t v48 = v35;
  unint64_t v49 = v79;
  v76(v77, v45, v79);
  sub_22093E330();
  uint64_t v78 = *(void *)(v46 + 8);
  ((void (*)(char *, unint64_t))v78)(v47, v49);
  sub_22093E270();
  v76(v47, *MEMORY[0x263F8E200], v49);
  uint64_t v50 = v48;
  sub_22093E330();
  ((void (*)(char *, unint64_t))v78)(v47, v49);
  uint64_t v51 = v83;
  sub_22093E270();
  uint64_t v52 = v90;
  if (sub_22093E520())
  {
    uint64_t v53 = v52;
    uint64_t v54 = v71;
    uint64_t v55 = v80;
    ((void (*)(char *, void (*)(char *, uint64_t), uint64_t))v80)(v71, v50, AssociatedTypeWitness);
    sub_2208FCDAC();
    sub_22093F050();
    if ((v95 & 1) == 0)
    {
      uint64_t v56 = AssociatedConformanceWitness;
      AssociatedConformanceWitness(v54, AssociatedTypeWitness);
      uint64_t v96 = v94;
      uint64_t v57 = (void (*)(uint64_t *, void))sub_22093EBD0();
      v55(v86);
      v57(&v94, 0);
      v56(v51, AssociatedTypeWitness);
      v56(v53, AssociatedTypeWitness);
      return ((uint64_t (*)(void, uint64_t))v56)(v92, AssociatedTypeWitness);
    }
  }
  else
  {
    uint64_t v58 = v33;
    char v59 = v72;
    uint64_t v60 = (void (*)(char *))v80;
    ((void (*)(char *, char *, uint64_t))v80)(v72, v52, AssociatedTypeWitness);
    unint64_t v79 = sub_2208FCDAC();
    sub_22093F050();
    if ((v95 & 1) == 0)
    {
      uint64_t v61 = AssociatedConformanceWitness;
      AssociatedConformanceWitness(v59, AssociatedTypeWitness);
      uint64_t v96 = v94;
      uint64_t v62 = (void (*)(uint64_t *, void))sub_22093EBD0();
      v60(v33);
      v62(&v94, 0);
      uint64_t v63 = v61;
      uint64_t v64 = v74;
      uint64_t v85 = *(void *)(v87 + 8);
      sub_22093F0B0();
      sub_22093E9F0();
      v63(v64, AssociatedTypeWitness);
      v63(v58, AssociatedTypeWitness);
      BOOL v65 = v73;
      ((void (*)(char *, char *, uint64_t))v60)(v73, v51, AssociatedTypeWitness);
      sub_22093F050();
      if ((v95 & 1) == 0)
      {
        v63(v65, AssociatedTypeWitness);
        uint64_t v96 = v94;
        uint64_t v66 = (void (*)(uint64_t *, void))sub_22093EBD0();
        v60(v58);
        v66(&v94, 0);
        uint64_t v67 = v92;
        unint64_t v68 = v90;
        sub_22093F0B0();
        uint64_t v69 = v75;
        sub_22093E9F0();
        v63(v64, AssociatedTypeWitness);
        v63(v58, AssociatedTypeWitness);
        uint64_t v70 = v81;
        sub_22093F0A0();
        v63(v69, AssociatedTypeWitness);
        v63(v70, AssociatedTypeWitness);
        v63(v83, AssociatedTypeWitness);
        v63(v68, AssociatedTypeWitness);
        return ((uint64_t (*)(void, uint64_t))v63)(v67, AssociatedTypeWitness);
      }
    }
  }
  uint64_t v94 = 0;
  unint64_t v95 = 0xE000000000000000;
  sub_22093EEA0();
  sub_22093F530();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  sub_22093E6C0();
  sub_22093E6C0();
LABEL_16:
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

uint64_t NumericSummary.hash(into:)()
{
  return sub_22093E370();
}

uint64_t static NumericSummary.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2
    && a1[1] == a2[1]
    && (type metadata accessor for NumericSummary(), (sub_22093E520() & 1) != 0)
    && (sub_22093E520() & 1) != 0
    && (sub_22093E520() & 1) != 0
    && (sub_22093E520() & 1) != 0
    && (sub_22093E520() & 1) != 0
    && (sub_22093E520() & 1) != 0)
  {
    return sub_22093E520() & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t NumericSummary.hashValue.getter()
{
  return sub_22093F490();
}

uint64_t sub_2208FBD90()
{
  return sub_22093F490();
}

uint64_t sub_2208FBDD4()
{
  return swift_getWitnessTable();
}

uint64_t sub_2208FBDF4(void *a1, void *a2)
{
  return static NumericSummary.== infix(_:_:)(a1, a2);
}

uint64_t sub_2208FBE00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 56);
}

uint64_t sub_2208FBE08()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_2208FBEB4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = v6 + 16;
  uint64_t v8 = *(void *)(v5 + 64);
  BOOL v9 = v6 <= 7 && (*(_DWORD *)(v5 + 80) & 0x100000) == 0;
  if (v9
    && (uint64_t v10 = v8 + v6,
        ((v8
        + v6
        + ((v8 + v6 + ((v8 + v6 + ((v8 + v6 + ((v8 + v6 + ((v8 + v6 + (v7 & ~v6)) & ~v6)) & ~v6)) & ~v6)) & ~v6)) & ~v6)) & (unint64_t)~v6)
      + v8 <= 0x18))
  {
    uint64_t v11 = ~v6;
    *a1 = *a2;
    uint64_t v12 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v13 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v12 = *v13;
    uint64_t v14 = ((unint64_t)v12 + v6 + 8) & ~v6;
    uint64_t v15 = ((unint64_t)v13 + v6 + 8) & ~v6;
    uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    v16(v14, v15, v4);
    uint64_t v17 = (v10 + v14) & v11;
    uint64_t v18 = (v10 + v15) & v11;
    v16(v17, v18, v4);
    uint64_t v19 = (v10 + v17) & v11;
    uint64_t v20 = (v10 + v18) & v11;
    v16(v19, v20, v4);
    uint64_t v21 = (v10 + v19) & v11;
    uint64_t v22 = (v10 + v20) & v11;
    v16(v21, v22, v4);
    uint64_t v23 = (v10 + v21) & v11;
    uint64_t v24 = (v10 + v22) & v11;
    v16(v23, v24, v4);
    uint64_t v25 = (v10 + v23) & v11;
    uint64_t v26 = (v10 + v24) & v11;
    v16(v25, v26, v4);
    v16((v10 + v25) & v11, (v10 + v26) & v11, v4);
  }
  else
  {
    uint64_t v27 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v27 + ((v6 & 0xF8 ^ 0x1F8) & v7));
    swift_retain();
  }
  return v3;
}

uint64_t sub_2208FC0F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v13 = *(void (**)(unint64_t, uint64_t))(v3 + 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (((a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v4 + 8) & ~v4;
  v13(v5, v2);
  uint64_t v6 = *(void *)(v3 + 64) + v4;
  unint64_t v7 = (v6 + v5) & ~v4;
  v13(v7, v2);
  unint64_t v8 = (v6 + v7) & ~v4;
  v13(v8, v2);
  unint64_t v9 = (v6 + v8) & ~v4;
  v13(v9, v2);
  uint64_t v10 = (v6 + v9) & ~v4;
  v13(v10, v2);
  uint64_t v11 = (v6 + v10) & ~v4;
  v13(v11, v2);

  return ((uint64_t (*)(uint64_t, uint64_t))v13)((v6 + v11) & ~v4, v2);
}

void *sub_2208FC248(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v5 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  uint64_t v9 = v7 + 16;
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = ((unint64_t)v4 + v10 + 8) & ~v10;
  uint64_t v12 = ((unint64_t)v5 + v10 + 8) & ~v10;
  v8(v11, v12, v6);
  uint64_t v13 = *(void *)(v9 + 48) + v10;
  uint64_t v14 = (v13 + v11) & ~v10;
  uint64_t v15 = (v13 + v12) & ~v10;
  v8(v14, v15, v6);
  uint64_t v16 = (v13 + v14) & ~v10;
  uint64_t v17 = (v13 + v15) & ~v10;
  v8(v16, v17, v6);
  uint64_t v18 = (v13 + v16) & ~v10;
  uint64_t v19 = (v13 + v17) & ~v10;
  v8(v18, v19, v6);
  uint64_t v20 = (v13 + v18) & ~v10;
  uint64_t v21 = (v13 + v19) & ~v10;
  v8(v20, v21, v6);
  uint64_t v22 = (v13 + v20) & ~v10;
  uint64_t v23 = (v13 + v21) & ~v10;
  v8(v22, v23, v6);
  v8((v13 + v22) & ~v10, (v13 + v23) & ~v10, v6);
  return a1;
}

void *sub_2208FC3E0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v5 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  uint64_t v9 = v7 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = ((unint64_t)v4 + v10 + 8) & ~v10;
  uint64_t v12 = ((unint64_t)v5 + v10 + 8) & ~v10;
  v8(v11, v12, v6);
  uint64_t v13 = *(void *)(v9 + 40) + v10;
  uint64_t v14 = (v13 + v11) & ~v10;
  uint64_t v15 = (v13 + v12) & ~v10;
  v8(v14, v15, v6);
  uint64_t v16 = (v13 + v14) & ~v10;
  uint64_t v17 = (v13 + v15) & ~v10;
  v8(v16, v17, v6);
  uint64_t v18 = (v13 + v16) & ~v10;
  uint64_t v19 = (v13 + v17) & ~v10;
  v8(v18, v19, v6);
  uint64_t v20 = (v13 + v18) & ~v10;
  uint64_t v21 = (v13 + v19) & ~v10;
  v8(v20, v21, v6);
  uint64_t v22 = (v13 + v20) & ~v10;
  uint64_t v23 = (v13 + v21) & ~v10;
  v8(v22, v23, v6);
  v8((v13 + v22) & ~v10, (v13 + v23) & ~v10, v6);
  return a1;
}

void *sub_2208FC578(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v5 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  uint64_t v9 = v7 + 32;
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = ((unint64_t)v4 + v10 + 8) & ~v10;
  uint64_t v12 = ((unint64_t)v5 + v10 + 8) & ~v10;
  v8(v11, v12, v6);
  uint64_t v13 = *(void *)(v9 + 32) + v10;
  uint64_t v14 = (v13 + v11) & ~v10;
  uint64_t v15 = (v13 + v12) & ~v10;
  v8(v14, v15, v6);
  uint64_t v16 = (v13 + v14) & ~v10;
  uint64_t v17 = (v13 + v15) & ~v10;
  v8(v16, v17, v6);
  uint64_t v18 = (v13 + v16) & ~v10;
  uint64_t v19 = (v13 + v17) & ~v10;
  v8(v18, v19, v6);
  uint64_t v20 = (v13 + v18) & ~v10;
  uint64_t v21 = (v13 + v19) & ~v10;
  v8(v20, v21, v6);
  uint64_t v22 = (v13 + v20) & ~v10;
  uint64_t v23 = (v13 + v21) & ~v10;
  v8(v22, v23, v6);
  v8((v13 + v22) & ~v10, (v13 + v23) & ~v10, v6);
  return a1;
}

void *sub_2208FC710(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v5 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  uint64_t v9 = v7 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = ((unint64_t)v4 + v10 + 8) & ~v10;
  uint64_t v12 = ((unint64_t)v5 + v10 + 8) & ~v10;
  v8(v11, v12, v6);
  uint64_t v13 = *(void *)(v9 + 24) + v10;
  uint64_t v14 = (v13 + v11) & ~v10;
  uint64_t v15 = (v13 + v12) & ~v10;
  v8(v14, v15, v6);
  uint64_t v16 = (v13 + v14) & ~v10;
  uint64_t v17 = (v13 + v15) & ~v10;
  v8(v16, v17, v6);
  uint64_t v18 = (v13 + v16) & ~v10;
  uint64_t v19 = (v13 + v17) & ~v10;
  v8(v18, v19, v6);
  uint64_t v20 = (v13 + v18) & ~v10;
  uint64_t v21 = (v13 + v19) & ~v10;
  v8(v20, v21, v6);
  uint64_t v22 = (v13 + v20) & ~v10;
  uint64_t v23 = (v13 + v21) & ~v10;
  v8(v22, v23, v6);
  v8((v13 + v22) & ~v10, (v13 + v23) & ~v10, v6);
  return a1;
}

uint64_t sub_2208FC8A8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (!a2) {
    return 0;
  }
  unsigned int v8 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  uint64_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  uint64_t v9 = ((v7
       + v6
       + ((v7 + v6 + ((v7 + v6 + ((v7 + v6 + ((v7 + v6 + ((v7 + v6 + ((v6 + 16) & ~v6)) & ~v6)) & ~v6)) & ~v6)) & ~v6)) & ~v6)) & ~v6)
     + v7;
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v12 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v12))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v12 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v12 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8)
      }
                                                                      + v6
                                                                      + 8) & ~v6);
      return 0;
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_19;
  }
LABEL_11:
  int v13 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v13 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v9 | v13) + 1;
}

void sub_2208FCA60(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = *(void *)(v6 + 64);
  size_t v10 = ((v9
        + v8
        + ((v9 + v8 + ((v9 + v8 + ((v9 + v8 + ((v9 + v8 + ((v9 + v8 + ((v8 + 16) & ~v8)) & ~v8)) & ~v8)) & ~v8)) & ~v8)) & ~v8)) & ~v8)
      + v9;
  BOOL v11 = a3 >= v7;
  unsigned int v12 = a3 - v7;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v14 = ~v7 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x2208FCCD0);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        unint64_t v18 = (((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v8 + 8) & ~v8;
        uint64_t v19 = *(void (**)(unint64_t))(v6 + 56);
        v19(v18);
      }
      return;
  }
}

uint64_t sub_2208FCCF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, a1, v4);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
}

unint64_t sub_2208FCDAC()
{
  unint64_t result = qword_267F19918;
  if (!qword_267F19918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F19918);
  }
  return result;
}

uint64_t DataFrame.Rows.count.getter()
{
  return sub_2208EE804(*(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
}

uint64_t DataFrame.Row.count.getter()
{
  return *(void *)(*(void *)v0 + 16);
}

uint64_t DataFrame.Rows.subscript.getter@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *v2;
  uint64_t v4 = v2[1];
  uint64_t v5 = v2[2];
  *a2 = v3;
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t DataFrame.Rows.subscript.setter(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v17 = *a1;
  uint64_t v4 = *(void *)(*a1 + 16);
  uint64_t v5 = *v2;
  if (v4 == *((void *)v5 + 2))
  {
    if (v4)
    {
      uint64_t v6 = a1[3];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_12:
      }
        uint64_t v5 = sub_22080AB34((uint64_t)v5);
      uint64_t v7 = 0;
      unint64_t v8 = 0;
      do
      {
        sub_22080B5B8(v17 + v7 + 32, (uint64_t)v19);
        *uint64_t v3 = v5;
        if (v8 >= *((void *)v5 + 2))
        {
          __break(1u);
          goto LABEL_12;
        }
        ++v8;
        uint64_t v10 = v20;
        uint64_t v9 = v21;
        BOOL v11 = __swift_project_boxed_opaque_existential_1(v19, v20);
        v18[3] = v10;
        v18[4] = *(void *)(v9 + 8);
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v18);
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(boxed_opaque_existential_1, v11, v10);
        uint64_t v13 = *(void *)&v5[v7 + 56];
        uint64_t v14 = *(void *)&v5[v7 + 64];
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v5[v7 + 32], v13);
        (*(void (**)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t))(v14 + 72))(a2, v6, v18, v13, v14);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
        sub_22080B0D8((uint64_t)v19);
        uint64_t v5 = *v3;
        v7 += 40;
      }
      while (v4 != v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t result = sub_22093F090();
    __break(1u);
  }
  return result;
}

uint64_t DataFrame.Rows.startIndex.getter()
{
  uint64_t result = *(void *)(v0 + 24);
  int v2 = *(unsigned __int8 *)(v0 + 40);
  if (*(unsigned char *)(v0 + 40))
  {
    if (v2 == 1 && *(void *)(result + 16))
    {
      return *(void *)(result + 32);
    }
    else
    {
      sub_220883950(result, *(void *)(v0 + 32), v2);
      if (v4) {
        return 0;
      }
      else {
        return v3;
      }
    }
  }
  return result;
}

uint64_t DataFrame.Rows.endIndex.getter()
{
  sub_220883950(*(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
  if (v2) {
    return 0;
  }
  else {
    return v1;
  }
}

Swift::Int sub_2208FD104(Swift::Int result, uint64_t a2)
{
  uint64_t v2 = a2;
  if (a2 < 0)
  {
    uint64_t v3 = 0;
    do
    {
      --v3;
      uint64_t result = DataFrame.Rows.index(before:)(result);
    }
    while (v3 > v2);
  }
  else if (a2)
  {
    do
    {
      uint64_t result = DataFrame.Rows.index(after:)(result);
      --v2;
    }
    while (v2);
  }
  return result;
}

Swift::Int sub_2208FD158(Swift::Int result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a2;
  if (a2 < 0)
  {
    uint64_t v5 = 0;
    while (result != a3)
    {
      --v5;
      uint64_t result = DataFrame.Rows.index(before:)(result);
      if (v5 <= v4) {
        return result;
      }
    }
  }
  else
  {
    if (!a2) {
      return result;
    }
    while (result != a3)
    {
      uint64_t result = DataFrame.Rows.index(after:)(result);
      if (!--v4) {
        return result;
      }
    }
  }
  return 0;
}

Swift::Int sub_2208FD1E4(Swift::Int result, Swift::Int a2)
{
  if (result < a2)
  {
    for (uint64_t i = 0; ; ++i)
    {
      uint64_t v4 = i + 1;
      if (__OFADD__(i, 1)) {
        break;
      }
      uint64_t result = DataFrame.Rows.index(after:)(result);
      if (result == a2) {
        return v4;
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if (a2 < result)
  {
    uint64_t v4 = 0;
    while (!__OFSUB__(v4--, 1))
    {
      uint64_t result = DataFrame.Rows.index(before:)(result);
      if (result == a2) {
        return v4;
      }
    }
    goto LABEL_14;
  }
  return 0;
}

uint64_t sub_2208FD268(uint64_t (*a1)(long long *), uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 == 2) {
    return 0;
  }
  if (a5 == 1)
  {
    unint64_t v9 = *(void *)(a3 + 16);
    if (!v9) {
      return 0;
    }
  }
  else
  {
    unint64_t v9 = 1;
  }
  uint64_t v10 = 0;
  *(void *)&long long v11 = a3;
  *((void *)&v11 + 1) = a4;
  long long v17 = v11;
  while (1)
  {
    uint64_t v12 = v9 >> 1;
    uint64_t v13 = v10 + (v9 >> 1);
    if (__OFADD__(v10, v9 >> 1)) {
      break;
    }
    if (a5)
    {
      if ((unint64_t)v13 > *(void *)(a3 + 16)) {
        goto LABEL_28;
      }
    }
    else if ((unint64_t)v13 > 1)
    {
      goto LABEL_28;
    }
    if (a5)
    {
      if (a5 != 1) {
        goto LABEL_32;
      }
      if (v13 >= *(void *)(a3 + 16)) {
        goto LABEL_30;
      }
      long long v14 = *(_OWORD *)(a3 + 32 + 16 * v13);
    }
    else
    {
      long long v14 = v17;
      if (v13) {
        goto LABEL_29;
      }
    }
    long long v18 = v14;
    char v15 = a1(&v18);
    if (v5) {
      return v10;
    }
    if ((v15 & 1) == 0)
    {
      if (a5)
      {
        if (v13 >= *(void *)(a3 + 16)) {
          goto LABEL_31;
        }
      }
      else if (v13 >= 1)
      {
        goto LABEL_31;
      }
      uint64_t v10 = v13 + 1;
      uint64_t v12 = v9 + ~v12;
    }
    unint64_t v9 = v12;
    if (v12 <= 0) {
      return v10;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

uint64_t sub_2208FD414(uint64_t (*a1)(long long *))
{
  long long v18 = a1;
  long long v16 = *(_OWORD *)(v1 + 16);
  int v3 = *(unsigned __int8 *)(v1 + 32);
  if (*(unsigned char *)(v1 + 32))
  {
    if (v3 == 1) {
      unint64_t v4 = *(void *)(v16 + 16);
    }
    else {
      unint64_t v4 = 0;
    }
  }
  else
  {
    unint64_t v4 = 1;
  }
  uint64_t v5 = *(void *)v1;
  if (*(void *)v1 > v4)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  if (*(unsigned char *)(v1 + 32))
  {
    if (v3 == 1) {
      unint64_t v6 = *(void *)(v16 + 16);
    }
    else {
      unint64_t v6 = 0;
    }
  }
  else
  {
    unint64_t v6 = 1;
  }
  unint64_t v7 = *(void *)(v1 + 8);
  if (v7 > v6)
  {
LABEL_47:
    __break(1u);
LABEL_48:
    uint64_t result = sub_22093F090();
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 - v5;
  if ((uint64_t)(v7 - v5) >= 1)
  {
    uint64_t v9 = *(void *)v1;
    while (1)
    {
      uint64_t v10 = v8 >> 1;
      uint64_t v11 = v9 + (v8 >> 1);
      if (__OFADD__(v9, v8 >> 1)) {
        break;
      }
      if (v3)
      {
        if (v3 == 1) {
          unint64_t v12 = *(void *)(v16 + 16);
        }
        else {
          unint64_t v12 = 0;
        }
      }
      else
      {
        unint64_t v12 = 1;
      }
      if (v11 >= (uint64_t)v7 || v11 < v5 || v11 > v12) {
        goto LABEL_42;
      }
      if (v3)
      {
        if (v3 != 1) {
          goto LABEL_48;
        }
        if (v11 >= *(void *)(v16 + 16)) {
          goto LABEL_44;
        }
        long long v13 = *(_OWORD *)(v16 + 32 + 16 * v11);
      }
      else
      {
        long long v13 = v16;
        if (v11) {
          goto LABEL_43;
        }
      }
      long long v17 = v13;
      char v14 = v18(&v17);
      if (v2) {
        return v9;
      }
      if ((v14 & 1) == 0)
      {
        if (v3)
        {
          if (v11 >= *(void *)(v16 + 16)) {
            goto LABEL_45;
          }
        }
        else if (v11 >= 1)
        {
          goto LABEL_45;
        }
        uint64_t v9 = v11 + 1;
        uint64_t v10 = v8 + ~v10;
      }
      unint64_t v8 = v10;
      if (v10 <= 0) {
        return v9;
      }
    }
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  return *(void *)v1;
}

uint64_t DataFrame.Row.base.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v4 = v1[2];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t DataFrame.Row.index.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t DataFrame.Row.subscript.getter@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + 24);
  DataFrame.subscript.getter(a1);
  type metadata accessor for Column();
  Column.subscript.getter(v4, a2);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t DataFrame.Row.subscript.setter(uint64_t a1, unint64_t a2)
{
  sub_220900FF0(a1, a2);
  uint64_t v3 = sub_22093ED30();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(a1, v3);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  unsigned char v10[24];
  uint64_t v11;
  uint64_t v12;
  unsigned char v13[32];

  uint64_t v3 = v2;
  unint64_t v6 = *(void *)(v2 + 24);
  uint64_t result = sub_220842FF8(a1, (uint64_t)v13);
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(*(void *)v3 + 16) > a2)
  {
    sub_22080B5B8(*(void *)v3 + 40 * a2 + 32, (uint64_t)v10);
    unint64_t v8 = v11;
    uint64_t v9 = v12;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v10, v11);
    (*(void (**)(uint64_t, unsigned char *, uint64_t))(*(void *)(v9 + 8) + 136))(v6, v13, v8);
    sub_22086A7A4((uint64_t)v13);
    sub_22080A474(a2, (uint64_t)v10);
    sub_22080B0D8((uint64_t)v10);
    return sub_22086A7A4(a1);
  }
  __break(1u);
  return result;
}

void (*DataFrame.Row.subscript.modify(void *a1, unint64_t a2, uint64_t a3, uint64_t a4))(unint64_t **a1, char a2)
{
  uint64_t v9 = malloc(0x40uLL);
  *a1 = v9;
  v9[2] = a4;
  v9[3] = v4;
  *uint64_t v9 = a2;
  v9[1] = a3;
  uint64_t v10 = sub_22093ED30();
  v9[4] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v9[5] = v11;
  size_t v12 = *(void *)(v11 + 64);
  v9[6] = malloc(v12);
  long long v13 = malloc(v12);
  v9[7] = v13;
  DataFrame.Row.subscript.getter(a2, (uint64_t)v13);
  return sub_2208FD8B8;
}

void sub_2208FD8B8(unint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a1)[6];
  uint64_t v4 = (void *)(*a1)[7];
  unint64_t v5 = (*a1)[4];
  unint64_t v6 = (*a1)[5];
  unint64_t v7 = **a1;
  if (a2)
  {
    (*(void (**)(unint64_t, void *, unint64_t))(v6 + 16))((*a1)[6], v4, v5);
    sub_220900FF0((uint64_t)v3, v7);
    unint64_t v8 = *(void (**)(void *, unint64_t))(v6 + 8);
    v8(v3, v5);
    v8(v4, v5);
  }
  else
  {
    sub_220900FF0((*a1)[7], v7);
    (*(void (**)(void *, unint64_t))(v6 + 8))(v4, v5);
  }
  free(v4);
  free(v3);

  free(v2);
}

uint64_t DataFrame.Row.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)(v3 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  DataFrame.subscript.getter(a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for Column();
  Column.subscript.getter(v7, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t DataFrame.Row.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2209010B0(a1, a2, a3);
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_22093ED30();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);

  return v5(a1, v4);
}

{
  uint64_t vars8;

  sub_22090117C(a1, a2, a3);

  return swift_bridgeObjectRelease();
}

void (*DataFrame.Row.subscript.modify(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))(uint64_t **a1, char a2)
{
  uint64_t v11 = malloc(0x48uLL);
  *a1 = v11;
  v11[3] = a5;
  v11[4] = v5;
  v11[1] = a3;
  v11[2] = a4;
  *uint64_t v11 = a2;
  uint64_t v12 = sub_22093ED30();
  v11[5] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  v11[6] = v13;
  size_t v14 = *(void *)(v13 + 64);
  v11[7] = malloc(v14);
  char v15 = malloc(v14);
  v11[8] = v15;
  DataFrame.Row.subscript.getter(a2, a3, (uint64_t)v15);
  return sub_2208FDC64;
}

void sub_2208FDC64(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a1)[7];
  uint64_t v4 = (void *)(*a1)[8];
  uint64_t v5 = (*a1)[5];
  uint64_t v6 = (*a1)[6];
  uint64_t v7 = (*a1)[1];
  uint64_t v8 = **a1;
  if (a2)
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[7], v4, v5);
    swift_bridgeObjectRetain();
    sub_2209010B0((uint64_t)v3, v8, v7);
    swift_bridgeObjectRelease();
    uint64_t v9 = *(void (**)(void *, uint64_t))(v6 + 8);
    v9(v3, v5);
    v9(v4, v5);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_2209010B0((uint64_t)v4, v8, v7);
    swift_bridgeObjectRelease();
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  free(v4);
  free(v3);

  free(v2);
}

unint64_t DataFrame.Row.subscript.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = v2[1];
  uint64_t v8 = v2[2];
  uint64_t v7 = v2[3];
  v12[0] = *v2;
  v12[1] = v6;
  v12[2] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t result = sub_22080BA90(a1, a2);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)(v5 + 16))
  {
    sub_22080B5B8(v5 + 40 * result + 32, (uint64_t)v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v10 = v13;
    uint64_t v11 = v14;
    __swift_project_boxed_opaque_existential_1(v12, v13);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 + 8) + 128))(v7, v10);
    return sub_22080B0D8((uint64_t)v12);
  }
  __break(1u);
  return result;
}

unint64_t sub_2208FDE9C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  v11[0] = *a1;
  v11[1] = v3;
  v11[2] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t result = sub_22080BA90(v6, v7);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)(v2 + 16))
  {
    sub_22080B5B8(v2 + 40 * result + 32, (uint64_t)v11);
    uint64_t v9 = v12;
    uint64_t v10 = v13;
    __swift_project_boxed_opaque_existential_1(v11, v12);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 + 8) + 128))(v5, v9);
    sub_22080B0D8((uint64_t)v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_2208FDF9C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = *a3;
  uint64_t v4 = a3[1];
  sub_220842FF8(a1, (uint64_t)v6);
  swift_bridgeObjectRetain();
  sub_22090117C((uint64_t)v6, v3, v4);
  return swift_bridgeObjectRelease();
}

unint64_t DataFrame.Row.subscript.modify(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = malloc(0x60uLL);
  *a1 = v7;
  v7[10] = a3;
  v7[11] = v3;
  v7[9] = a2;
  uint64_t v8 = *v3;
  uint64_t v9 = v3[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t result = sub_22080BA90(a2, a3);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)(v8 + 16))
  {
    sub_22080B5B8(v8 + 40 * result + 32, (uint64_t)v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v11 = v7[3];
    uint64_t v12 = v7[4];
    __swift_project_boxed_opaque_existential_1(v7, v11);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 + 8) + 128))(v9, v11);
    sub_22080B0D8((uint64_t)v7);
    return (unint64_t)sub_2208FE174;
  }
  __break(1u);
  return result;
}

void sub_2208FE174(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)a1 + 40;
  uint64_t v4 = *(void *)(*(void *)a1 + 80);
  uint64_t v5 = *(void *)(*(void *)a1 + 72);
  if (a2)
  {
    sub_220842FF8(*(void *)a1 + 40, (uint64_t)v2);
    swift_bridgeObjectRetain();
    sub_22090117C((uint64_t)v2, v5, v4);
    swift_bridgeObjectRelease();
    sub_22086A7A4(v3);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_22090117C(v3, v5, v4);
    swift_bridgeObjectRelease();
  }

  free(v2);
}

uint64_t DataFrame.Row.subscript.getter@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v6 = *((void *)v2 + 2);
  uint64_t v7 = *((void *)v2 + 3);
  long long v10 = *v2;
  uint64_t v11 = v6;
  v9[0] = v4;
  v9[1] = v5;
  DataFrame.subscript.getter(v9);
  long long v10 = v12;
  uint64_t v11 = v13;
  type metadata accessor for Column();
  Column.subscript.getter(v7, a2);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2208FE2D0@<X0>(long long *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = *((void *)a1 + 2);
  uint64_t v4 = *((void *)a1 + 3);
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  long long v9 = *a1;
  uint64_t v10 = v3;
  uint64_t v11 = v4;
  v8[0] = v5;
  v8[1] = v6;
  return DataFrame.Row.subscript.getter(v8, a3);
}

uint64_t DataFrame.Row.subscript.setter(uint64_t a1, uint64_t *a2)
{
  sub_2209012E0(a1, a2);
  uint64_t v3 = sub_22093ED30();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(a1, v3);
}

void (*DataFrame.Row.subscript.modify(void *a1, uint64_t *a2, uint64_t a3))(uint64_t a1, char a2)
{
  uint64_t v7 = malloc(0x40uLL);
  *a1 = v7;
  *uint64_t v7 = a3;
  v7[1] = v3;
  uint64_t v8 = sub_22093ED30();
  v7[2] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v7[3] = v9;
  size_t v10 = *(void *)(v9 + 64);
  v7[4] = malloc(v10);
  uint64_t v11 = malloc(v10);
  uint64_t v13 = *a2;
  uint64_t v12 = a2[1];
  v7[5] = v11;
  v7[6] = v13;
  v7[7] = v12;
  uint64_t v14 = *((void *)v3 + 2);
  uint64_t v15 = *((void *)v3 + 3);
  long long v18 = *v3;
  uint64_t v19 = v14;
  uint64_t v20 = v15;
  v17[0] = v13;
  v17[1] = v12;
  swift_bridgeObjectRetain();
  DataFrame.Row.subscript.getter(v17, (uint64_t)v11);
  return sub_2208FE4AC;
}

void sub_2208FE4AC(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v4 = *(void *)(*(void *)a1 + 48);
  uint64_t v3 = *(void *)(*(void *)a1 + 56);
  uint64_t v5 = *(void **)(*(void *)a1 + 32);
  uint64_t v6 = *(void **)(*(void *)a1 + 40);
  uint64_t v7 = *(void *)(*(void *)a1 + 16);
  uint64_t v8 = *(void *)(*(void *)a1 + 24);
  if (a2)
  {
    (*(void (**)(void, void *, uint64_t))(v8 + 16))(*(void *)(*(void *)a1 + 32), v6, v7);
    uint64_t v10 = v4;
    uint64_t v11 = v3;
    sub_2209012E0((uint64_t)v5, &v10);
    uint64_t v9 = *(void (**)(void *, uint64_t))(v8 + 8);
    v9(v5, v7);
    v9(v6, v7);
  }
  else
  {
    uint64_t v10 = *(void *)(*(void *)a1 + 48);
    uint64_t v11 = v3;
    sub_2209012E0((uint64_t)v6, &v10);
    (*(void (**)(void *, uint64_t))(v8 + 8))(v6, v7);
  }
  free(v6);
  free(v5);

  free(v2);
}

Swift::Int __swiftcall DataFrame.Rows.index(after:)(Swift::Int after)
{
  unint64_t v3 = 0;
  Swift::Int result = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  int v6 = *(unsigned __int8 *)(v1 + 40);
  uint64_t v7 = (Swift::Int *)(result + 32);
  if (!*(unsigned char *)(v1 + 40)) {
    goto LABEL_6;
  }
LABEL_2:
  if (v6 != 1) {
    goto LABEL_25;
  }
  unint64_t v8 = *(void *)(result + 16);
  if (v3 == v8) {
    goto LABEL_25;
  }
  if (v3 < v8)
  {
    Swift::Int v10 = *v7;
    Swift::Int v9 = v7[1];
    while (v10 > after || v9 <= after)
    {
      if (*(unsigned char *)(v1 + 40))
      {
        if (v3 >= *(void *)(result + 16)) {
          goto LABEL_29;
        }
      }
      else if (v3)
      {
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
      ++v3;
      v7 += 2;
      if (*(unsigned char *)(v1 + 40)) {
        goto LABEL_2;
      }
LABEL_6:
      if (v3 == 1) {
        goto LABEL_25;
      }
      Swift::Int v10 = *(void *)(v1 + 24);
      Swift::Int v9 = *(void *)(v1 + 32);
      if (v3) {
        goto LABEL_31;
      }
    }
    if (*(unsigned char *)(v1 + 40))
    {
      unint64_t v11 = *(void *)(result + 16);
      if (v3 >= v11) {
        goto LABEL_32;
      }
      Swift::Int v12 = after + 1;
      if (v12 < *v7 || v12 >= v7[1])
      {
        if (v3 + 1 >= v11) {
          goto LABEL_25;
        }
        return v7[2];
      }
      return v12;
    }
    if (v3) {
      goto LABEL_33;
    }
    Swift::Int v12 = after + 1;
    if (v12 >= result && v12 < v5) {
      return v12;
    }
LABEL_25:
    sub_220883950(result, v5, v6);
    if (v14) {
      return 0;
    }
    else {
      return v13;
    }
  }
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

Swift::Int __swiftcall DataFrame.Rows.index(before:)(Swift::Int before)
{
  Swift::Int v4 = *(void *)(v1 + 24);
  uint64_t v3 = *(void *)(v1 + 32);
  int v5 = *(unsigned __int8 *)(v1 + 40);
  Swift::Int v6 = v4;
  if (*(unsigned char *)(v1 + 40))
  {
    if (v5 == 1 && *(void *)(v4 + 16))
    {
      Swift::Int v6 = *(void *)(v4 + 32);
    }
    else
    {
      sub_220883950(*(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40));
      if (v7) {
        goto LABEL_37;
      }
    }
  }
  if (v6 >= before) {
    goto LABEL_54;
  }
  while (2)
  {
    sub_220883950(v4, v3, v5);
    if (v9) {
      goto LABEL_13;
    }
    if (v8 == before)
    {
      do
      {
        sub_220883950(v4, v3, v5);
        if (v11) {
          goto LABEL_52;
        }
        Swift::Int result = v10 - 1;
        if (!__OFSUB__(v10, 1)) {
          return result;
        }
        __break(1u);
LABEL_13:
        ;
      }
      while (!before);
    }
    unint64_t v13 = 0;
    char v14 = (Swift::Int *)(v4 + 40);
    if (!v5)
    {
LABEL_15:
      Swift::Int v15 = v3;
      if (v13) {
        goto LABEL_44;
      }
      if (v4 <= before) {
        goto LABEL_22;
      }
      goto LABEL_23;
    }
    while (1)
    {
      if (v5 != 1) {
        goto LABEL_54;
      }
      unint64_t v16 = *(void *)(v4 + 16);
      if (v13 == v16) {
        goto LABEL_54;
      }
      if (v13 >= v16) {
        goto LABEL_46;
      }
      Swift::Int v15 = *v14;
      if (*(v14 - 1) > before) {
        goto LABEL_23;
      }
LABEL_22:
      if (v15 > before) {
        break;
      }
LABEL_23:
      if (v5)
      {
        if (v13 >= *(void *)(v4 + 16)) {
          goto LABEL_43;
        }
      }
      else if (v13)
      {
LABEL_43:
        __break(1u);
LABEL_44:
        if (v13 == 1) {
          goto LABEL_54;
        }
        __break(1u);
LABEL_46:
        __break(1u);
        goto LABEL_47;
      }
      ++v13;
      v14 += 2;
      if (!v5) {
        goto LABEL_15;
      }
    }
    if (v5)
    {
      unint64_t v17 = *(void *)(v4 + 16);
      if (v13 >= v17) {
        goto LABEL_48;
      }
      if (*(v14 - 1) != before) {
        goto LABEL_41;
      }
      if (!v13) {
        goto LABEL_50;
      }
      if (v13 - 1 >= v17) {
        goto LABEL_51;
      }
      uint64_t v18 = *(v14 - 2);
      Swift::Int result = v18 - 1;
      if (!__OFSUB__(v18, 1)) {
        return result;
      }
      __break(1u);
LABEL_37:
      if (before <= 0) {
        goto LABEL_54;
      }
      continue;
    }
    break;
  }
  if (v13)
  {
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  if (v4 == before)
  {
LABEL_53:
    __break(1u);
LABEL_54:
    Swift::Int result = sub_22093F090();
    __break(1u);
    return result;
  }
LABEL_41:
  Swift::Int result = before - 1;
  if (__OFSUB__(before, 1))
  {
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  return result;
}

uint64_t sub_2208FE930@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = *a2;
  *a3 = *a1;
  a3[1] = v3;
  a3[2] = v4;
  a3[3] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_2208FE984(void *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = *a3;
  uint64_t v4 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v5 = a1[3];
  v8[0] = *a1;
  v8[1] = v4;
  uint64_t v8[2] = v6;
  v8[3] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return DataFrame.Rows.subscript.setter(v8, v3);
}

void (*DataFrame.Rows.subscript.modify(void *a1, uint64_t a2))(void **a1, char a2)
{
  uint64_t v5 = malloc(0x30uLL);
  *a1 = v5;
  v5[4] = a2;
  v5[5] = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = v2[1];
  uint64_t v8 = v2[2];
  *uint64_t v5 = v6;
  v5[1] = v7;
  v5[2] = v8;
  v5[3] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_2208FEA78;
}

void sub_2208FEA78(void **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (*a1)[1];
  uint64_t v5 = (*a1)[2];
  uint64_t v4 = (*a1)[3];
  uint64_t v6 = (*a1)[4];
  v7[0] = **a1;
  v7[1] = v3;
  v7[2] = v5;
  v7[3] = v4;
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    DataFrame.Rows.subscript.setter(v7, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    DataFrame.Rows.subscript.setter(v7, v6);
  }

  free(v2);
}

uint64_t DataFrame.Rows.subscript.getter@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *v3;
  uint64_t v6 = v3[1];
  uint64_t v7 = v3[2];
  uint64_t v8 = v3[3];
  uint64_t v9 = v3[4];
  BOOL v10 = a1 == (char *)a2;
  if (a1 == (char *)a2) {
    char v11 = 0;
  }
  else {
    char v11 = a1;
  }
  if (a1 == (char *)a2) {
    uint64_t v12 = 0;
  }
  else {
    uint64_t v12 = a2;
  }
  char v13 = *((unsigned char *)v3 + 40);
  sub_220831F30(v8, v9, v13);
  char v14 = 2 * v10;
  Swift::Int v15 = sub_22081A46C(v11, v12, v14, v8, v9, v13);
  uint64_t v17 = v16;
  char v19 = v18;
  sub_22080B6B4((uint64_t)v11, v12, v14);
  *(void *)a3 = v5;
  *(void *)(a3 + 8) = v6;
  *(void *)(a3 + 16) = v7;
  *(void *)(a3 + 24) = v15;
  *(void *)(a3 + 32) = v17;
  *(unsigned char *)(a3 + 40) = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_2208FEC10@<X0>(uint64_t *a1@<X0>, char **a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v19 = a1[1];
  uint64_t v20 = *a1;
  uint64_t v4 = a1[3];
  uint64_t v18 = a1[2];
  uint64_t v5 = a1[4];
  uint64_t v6 = a2[1];
  BOOL v7 = *a2 == v6;
  if (*a2 == v6) {
    uint64_t v8 = 0;
  }
  else {
    uint64_t v8 = *a2;
  }
  if (*a2 == v6) {
    uint64_t v9 = 0;
  }
  else {
    uint64_t v9 = (uint64_t)a2[1];
  }
  char v10 = *((unsigned char *)a1 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220831F30(v4, v5, v10);
  sub_220831F30(v4, v5, v10);
  char v11 = 2 * v7;
  uint64_t v12 = sub_22081A46C(v8, v9, 2 * v7, v4, v5, v10);
  uint64_t v14 = v13;
  char v16 = v15;
  sub_22080B6B4((uint64_t)v8, v9, v11);
  uint64_t result = sub_22080B6B4(v4, v5, v10);
  *(void *)a3 = v20;
  *(void *)(a3 + 8) = v19;
  *(void *)(a3 + 16) = v18;
  *(void *)(a3 + 24) = v12;
  *(void *)(a3 + 32) = v14;
  *(unsigned char *)(a3 + 40) = v16;
  return result;
}

uint64_t sub_2208FED24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(char **)a3;
  uint64_t v4 = *(void *)(a3 + 8);
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  char v9 = *(unsigned char *)(a1 + 40);
  v11[0] = *(void *)a1;
  v11[1] = v5;
  v11[2] = v6;
  void v11[3] = v7;
  v11[4] = v8;
  char v12 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220831F30(v7, v8, v9);
  return DataFrame.Rows.subscript.setter(v11, v3, v4);
}

uint64_t DataFrame.Rows.subscript.setter(uint64_t *a1, char *a2, uint64_t a3)
{
  uint64_t v52 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = (unint64_t *)a1[3];
  uint64_t v48 = a1[2];
  uint64_t v49 = v4;
  uint64_t v45 = a1[4];
  LODWORD(v6) = *((unsigned __int8 *)a1 + 40);
  uint64_t v8 = *(void *)(v3 + 24);
  uint64_t v7 = *(void *)(v3 + 32);
  BOOL v9 = a2 == (char *)a3;
  if (a2 == (char *)a3) {
    char v10 = 0;
  }
  else {
    char v10 = a2;
  }
  if (a2 == (char *)a3) {
    uint64_t v11 = 0;
  }
  else {
    uint64_t v11 = a3;
  }
  char v12 = *(unsigned char *)(v3 + 40);
  sub_220831F30(*(void *)(v3 + 24), *(void *)(v3 + 32), v12);
  char v13 = v12;
  uint64_t v14 = v45;
  uint64_t v44 = sub_22081A46C(v10, v11, 2 * v9, v8, v7, v13);
  uint64_t v43 = v15;
  int v47 = v16;
  sub_22080B6B4((uint64_t)v10, v11, 2 * v9);
  Swift::Int v17 = (Swift::Int)v5;
  if (v6)
  {
    if (v6 == 1 && v5[2])
    {
      Swift::Int v17 = v5[4];
    }
    else
    {
      sub_220883950((uint64_t)v5, v45, v6);
      if (v19) {
        Swift::Int v17 = 0;
      }
      else {
        Swift::Int v17 = v18;
      }
    }
  }
  sub_220883950((uint64_t)v5, v45, v6);
  if (v21) {
    uint64_t v22 = 0;
  }
  else {
    uint64_t v22 = v20;
  }
  uint64_t v46 = v22;
  if (v17 == v22)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_220831F30((uint64_t)v5, v45, v6);
    uint64_t v23 = (uint64_t)v44;
    uint64_t v24 = v43;
LABEL_19:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22080B6B4((uint64_t)v5, v14, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22080B6B4((uint64_t)v5, v14, v6);
    return sub_22080B6B4(v23, v24, v47);
  }
  unint64_t v26 = *v51;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220831F30((uint64_t)v5, v45, v6);
  uint64_t v23 = (uint64_t)v44;
  uint64_t v24 = v43;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_43:
  }
    unint64_t v26 = (unint64_t)sub_22080AB34(v26);
  *uint64_t v51 = v26;
  uint64_t v42 = v23 + 32;
  uint64_t v41 = v5;
  int v40 = v6;
  while (1)
  {
    v54[0] = v52;
    v54[1] = v49;
    v54[2] = v48;
    uint64_t v55 = v5;
    uint64_t v56 = v14;
    char v57 = v6;
    Swift::Int v50 = DataFrame.Rows.index(after:)(v17);
    v54[0] = v17;
    MEMORY[0x270FA5388](v50);
    uint64_t v38 = (uint64_t)v54;
    char v27 = v47;
    sub_220831F30(v23, v24, v47);
    unint64_t v26 = sub_2208FD268((uint64_t (*)(long long *))sub_2208C363C, (uint64_t)&v37, v23, v24, v27);
    sub_22080B6B4(v23, v24, v27);
    if (!v27)
    {
      if (v26 == 1) {
        goto LABEL_23;
      }
      uint64_t v29 = v23;
      if (v26) {
        goto LABEL_41;
      }
      goto LABEL_31;
    }
    if (v27 == 1) {
      break;
    }
    if (v26)
    {
      int v39 = 0;
      uint64_t v38 = 91;
      goto LABEL_46;
    }
LABEL_23:
    Swift::Int v17 = v50;
    if (v50 == v46) {
      goto LABEL_19;
    }
  }
  unint64_t v28 = *(void *)(v23 + 16);
  if (v26 == v28) {
    goto LABEL_23;
  }
  if (v26 >= v28) {
    goto LABEL_42;
  }
  uint64_t v29 = *(void *)(v42 + 16 * v26);
LABEL_31:
  if (v54[0] < v29) {
    goto LABEL_23;
  }
  uint64_t v30 = *(void *)(v52 + 16);
  unint64_t v26 = *v51;
  if (v30 == *(void *)(*v51 + 16))
  {
    if (v30)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v26 = (unint64_t)sub_22080AB34(v26);
      }
      uint64_t v5 = v51;
      uint64_t v14 = 0;
      unint64_t v31 = 0;
      while (1)
      {
        sub_22080B5B8(v52 + v14 + 32, (uint64_t)v54);
        *uint64_t v5 = v26;
        if (v31 >= *(void *)(v26 + 16)) {
          break;
        }
        ++v31;
        uint64_t v23 = v26 + v14;
        uint64_t v33 = (uint64_t)v55;
        uint64_t v32 = v56;
        uint64_t v34 = __swift_project_boxed_opaque_existential_1(v54, (uint64_t)v55);
        v53[3] = v33;
        uint64_t v35 = *(void *)(v32 + 8);
        uint64_t v5 = v51;
        v53[4] = v35;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v53);
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v33 - 8) + 16))(boxed_opaque_existential_1, v34, v33);
        uint64_t v24 = *(void *)(v26 + v14 + 56);
        uint64_t v6 = *(void *)(v26 + v14 + 64);
        __swift_mutable_project_boxed_opaque_existential_1(v26 + v14 + 32, v24);
        (*(void (**)(Swift::Int, Swift::Int, uint64_t *, uint64_t, uint64_t))(v6 + 72))(v17, v17, v53, v24, v6);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v53);
        sub_22080B0D8((uint64_t)v54);
        unint64_t v26 = *v5;
        v14 += 40;
        if (v30 == v31)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v5 = v41;
          LODWORD(v6) = v40;
          uint64_t v23 = (uint64_t)v44;
          uint64_t v14 = v45;
          uint64_t v24 = v43;
          goto LABEL_23;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    goto LABEL_23;
  }
  int v39 = 0;
  uint64_t v38 = 151;
LABEL_46:
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

void (*DataFrame.Rows.subscript.modify(void *a1, char *a2, uint64_t a3))(uint64_t **a1, char a2)
{
  uint64_t v7 = malloc(0x48uLL);
  *a1 = v7;
  v7[7] = a3;
  v7[8] = v3;
  v7[6] = a2;
  uint64_t v8 = *v3;
  uint64_t v9 = v3[1];
  uint64_t v10 = v3[2];
  uint64_t v11 = v3[3];
  uint64_t v12 = v3[4];
  BOOL v13 = a2 == (char *)a3;
  if (a2 == (char *)a3)
  {
    a2 = 0;
    a3 = 0;
  }
  char v14 = *((unsigned char *)v3 + 40);
  sub_220831F30(v11, v12, v14);
  char v15 = 2 * v13;
  int v16 = sub_22081A46C(a2, a3, v15, v11, v12, v14);
  uint64_t v18 = v17;
  char v20 = v19;
  sub_22080B6B4((uint64_t)a2, a3, v15);
  *uint64_t v7 = v8;
  v7[1] = v9;
  v7[2] = v10;
  v7[3] = v16;
  void v7[4] = v18;
  *((unsigned char *)v7 + 40) = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_2208FF474;
}

void sub_2208FF474(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (*a1)[1];
  uint64_t v5 = (*a1)[2];
  uint64_t v4 = (*a1)[3];
  uint64_t v6 = (*a1)[4];
  char v7 = *((unsigned char *)*a1 + 40);
  uint64_t v8 = (*a1)[7];
  uint64_t v9 = (char *)(*a1)[6];
  v13[0] = **a1;
  v13[1] = v3;
  void v13[2] = v5;
  v13[3] = v4;
  v13[4] = v6;
  char v14 = v7;
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_220831F30(v4, v6, v7);
    DataFrame.Rows.subscript.setter(v13, v9, v8);
    uint64_t v10 = v2[3];
    uint64_t v11 = v2[4];
    char v12 = *((unsigned char *)v2 + 40);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22080B6B4(v10, v11, v12);
  }
  else
  {
    DataFrame.Rows.subscript.setter(v13, v9, v8);
  }

  free(v2);
}

Swift::Int sub_2208FF588@<X0>(Swift::Int *a1@<X0>, Swift::Int *a2@<X8>)
{
  Swift::Int result = DataFrame.Rows.index(before:)(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_2208FF5B4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_2208FFB00(a1, a2, a3, (uint64_t (*)(uint64_t))DataFrame.Rows.index(before:));
}

Swift::Int sub_2208FF5CC@<X0>(Swift::Int *a1@<X0>, uint64_t a2@<X1>, Swift::Int *a3@<X8>)
{
  Swift::Int result = sub_2208FD104(*a1, a2);
  *a3 = result;
  return result;
}

Swift::Int sub_2208FF618(Swift::Int *a1, Swift::Int *a2)
{
  return sub_2208FD1E4(*a1, *a2);
}

uint64_t sub_2208FF65C(void *a1, uint64_t *a2)
{
  return DataFrame.Rows.subscript.setter(a1, *a2);
}

void (*sub_2208FF664(void *a1, uint64_t *a2))(void *)
{
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = DataFrame.Rows.subscript.modify(v4, *a2);
  return sub_220865E74;
}

uint64_t sub_2208FF6C4(uint64_t *a1, uint64_t a2)
{
  return DataFrame.Rows.subscript.setter(a1, *(char **)a2, *(void *)(a2 + 8));
}

void (*sub_2208FF6D0(void *a1, uint64_t a2))(void *)
{
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = DataFrame.Rows.subscript.modify(v4, *(char **)a2, *(void *)(a2 + 8));
  return sub_220865E74;
}

Swift::Int sub_2208FF730@<X0>(uint64_t (*a1)(uint64_t *)@<X0>, uint64_t a2@<X1>, Swift::Int *a3@<X8>)
{
  Swift::Int result = sub_22092D084(a1, a2);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

uint64_t *sub_2208FF75C(uint64_t *result, uint64_t *a2)
{
  uint64_t v3 = *result;
  uint64_t v4 = *a2;
  if (*result != *a2)
  {
    uint64_t v5 = v2[1];
    uint64_t v6 = v2[2];
    v8[0] = *v2;
    v8[1] = v5;
    uint64_t v8[2] = v6;
    v8[3] = v3;
    v7[0] = v8[0];
    v7[1] = v5;
    v7[2] = v6;
    v7[3] = v4;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    DataFrame.Rows.subscript.setter(v7, v3);
    return (uint64_t *)DataFrame.Rows.subscript.setter(v8, v4);
  }
  return result;
}

uint64_t sub_2208FF7F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = DataFrame.Rows.startIndex.getter();
  *a1 = result;
  return result;
}

uint64_t sub_2208FF818@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_220883950(*(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40));
  if (v5) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = v4;
  }
  *a1 = v6;
  return result;
}

uint64_t (*sub_2208FF850(void *a1, uint64_t *a2))()
{
  uint64_t v4 = *a2;
  uint64_t v5 = *v2;
  uint64_t v6 = v2[1];
  uint64_t v7 = v2[2];
  *a1 = v5;
  a1[1] = v6;
  a1[2] = v7;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_2208FF8C0;
}

uint64_t sub_2208FF8C0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2208FF908@<X0>(char **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1[1];
  uint64_t v5 = *v2;
  uint64_t v6 = v2[1];
  uint64_t v7 = v2[2];
  uint64_t v8 = v2[3];
  uint64_t v9 = v2[4];
  BOOL v10 = *a1 == v4;
  if (*a1 == v4) {
    uint64_t v11 = 0;
  }
  else {
    uint64_t v11 = *a1;
  }
  if (*a1 == v4) {
    uint64_t v12 = 0;
  }
  else {
    uint64_t v12 = (uint64_t)a1[1];
  }
  char v13 = *((unsigned char *)v2 + 40);
  sub_220831F30(v8, v9, v13);
  char v14 = 2 * v10;
  char v15 = sub_22081A46C(v11, v12, v14, v8, v9, v13);
  uint64_t v17 = v16;
  char v19 = v18;
  sub_22080B6B4((uint64_t)v11, v12, v14);
  *(void *)a2 = v5;
  *(void *)(a2 + 8) = v6;
  *(void *)(a2 + 16) = v7;
  *(void *)(a2 + 24) = v15;
  *(void *)(a2 + 32) = v17;
  *(unsigned char *)(a2 + 40) = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_2208FF9EC@<X0>(uint64_t a1@<X8>)
{
  return sub_220883478(a1);
}

BOOL sub_2208FFA28()
{
  return sub_2208836D4();
}

Swift::Int sub_2208FFA68@<X0>(Swift::Int *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  Swift::Int result = sub_2208FD158(*a1, a2, *a3);
  *(void *)a4 = result;
  *(unsigned char *)(a4 + 8) = v6 & 1;
  return result;
}

Swift::Int sub_2208FFABC@<X0>(Swift::Int *a1@<X0>, Swift::Int *a2@<X8>)
{
  Swift::Int result = DataFrame.Rows.index(after:)(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_2208FFAE8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_2208FFB00(a1, a2, a3, (uint64_t (*)(uint64_t))DataFrame.Rows.index(after:));
}

uint64_t sub_2208FFB00(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(*a1);
  *a1 = result;
  return result;
}

uint64_t sub_2208FFB5C@<X0>(uint64_t a1@<X8>)
{
  long long v3 = *v1;
  uint64_t v5 = *((void *)v1 + 2);
  uint64_t v4 = *((void *)v1 + 3);
  uint64_t v6 = *((void *)v1 + 4);
  int v7 = *((unsigned __int8 *)v1 + 40);
  uint64_t v8 = v4;
  if (*((unsigned char *)v1 + 40))
  {
    if (v7 == 1 && *(void *)(v4 + 16))
    {
      uint64_t v8 = *(void *)(v4 + 32);
    }
    else
    {
      long long v12 = *v1;
      uint64_t result = sub_220883950(*((void *)v1 + 3), *((void *)v1 + 4), *((unsigned char *)v1 + 40));
      long long v3 = v12;
      if (v11) {
        uint64_t v8 = 0;
      }
      else {
        uint64_t v8 = v10;
      }
    }
  }
  *(_OWORD *)a1 = v3;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  return result;
}

uint64_t sub_2208FFBF8()
{
  return sub_2208EE804(*(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
}

uint64_t sub_2208FFC04()
{
  long long v1 = v0[1];
  long long v4 = *v0;
  v5[0] = v1;
  *(_OWORD *)((char *)v5 + 9) = *(long long *)((char *)v0 + 25);
  uint64_t v2 = sub_2208376A8((uint64_t)&v4);
  sub_220833BC0((uint64_t)&v4);
  return v2;
}

uint64_t sub_2208FFC50(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_22092C618(a1, a2, a3);
}

uint64_t DataFrame.Row.startIndex.getter()
{
  return 0;
}

Swift::Int __swiftcall DataFrame.Row.index(after:)(Swift::Int after)
{
  BOOL v1 = __OFADD__(after, 1);
  Swift::Int result = after + 1;
  if (v1) {
    __break(1u);
  }
  return result;
}

unint64_t DataFrame.Row.subscript.getter(unint64_t result)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = *v1;
    if (*(void *)(*v1 + 16) > result)
    {
      uint64_t v3 = v1[3];
      sub_22080B5B8(v2 + 40 * result + 32, (uint64_t)v6);
      uint64_t v4 = v7;
      uint64_t v5 = v8;
      __swift_project_boxed_opaque_existential_1(v6, v7);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 + 8) + 128))(v3, v4);
      return sub_22080B0D8((uint64_t)v6);
    }
  }
  __break(1u);
  return result;
}

void *sub_2208FFD4C(void *result, unint64_t *a2)
{
  unint64_t v2 = *a2;
  if ((*a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v2 < *(void *)(*result + 16))
  {
    uint64_t v3 = result[3];
    sub_22080B5B8(*result + 40 * v2 + 32, (uint64_t)v8);
    uint64_t v4 = v9;
    uint64_t v5 = v10;
    __swift_project_boxed_opaque_existential_1(v8, v9);
    uint64_t v6 = *(void *)(v5 + 8);
    uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7(v3, v4, v6);
    sub_22080B0D8((uint64_t)v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (void *)swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_2208FFE48(uint64_t a1, void *a2, unint64_t *a3)
{
  unint64_t v4 = *a3;
  sub_220842FF8(a1, (uint64_t)v13);
  uint64_t v5 = a2[3];
  uint64_t result = sub_220842FF8((uint64_t)v13, (uint64_t)v12);
  if ((v4 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v4 < *(void *)(*a2 + 16))
  {
    sub_22080B5B8(*a2 + 40 * v4 + 32, (uint64_t)v9);
    uint64_t v7 = v10;
    uint64_t v8 = v11;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v9, v10);
    (*(void (**)(uint64_t, unsigned char *, uint64_t))(*(void *)(v8 + 8) + 136))(v5, v12, v7);
    sub_22086A7A4((uint64_t)v12);
    sub_22080A474(v4, (uint64_t)v9);
    sub_22080B0D8((uint64_t)v9);
    return sub_22086A7A4((uint64_t)v13);
  }
  __break(1u);
  return result;
}

void (*DataFrame.Row.subscript.modify(void (**a1)(uint64_t a1, char a2), unint64_t a2))(uint64_t a1, char a2)
{
  uint64_t result = (void (*)(uint64_t, char))malloc(0x98uLL);
  *a1 = result;
  *((void *)result + 17) = a2;
  *((void *)result + 18) = v2;
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = *v2;
    if (*(void *)(*v2 + 16) > a2)
    {
      uint64_t v7 = result;
      uint64_t v8 = v2[3];
      sub_22080B5B8(v6 + 40 * a2 + 32, (uint64_t)result);
      uint64_t v9 = *((void *)v7 + 3);
      uint64_t v10 = *((void *)v7 + 4);
      __swift_project_boxed_opaque_existential_1(v7, v9);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 + 8) + 128))(v8, v9);
      sub_22080B0D8((uint64_t)v7);
      return sub_2209000F0;
    }
  }
  __break(1u);
  return result;
}

void sub_2209000F0(uint64_t a1, char a2)
{
  unint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)a1 + 40;
  uint64_t v4 = *(void *)a1 + 72;
  unint64_t v5 = *(void *)(*(void *)a1 + 136);
  uint64_t v6 = *(void **)(*(void *)a1 + 144);
  if ((a2 & 1) == 0)
  {
    uint64_t v12 = v6[3];
    sub_220842FF8(*(void *)a1 + 40, v4);
    if (*(void *)(*v6 + 16) > v5)
    {
      unint64_t v13 = v2[17];
      sub_22080B5B8(*v6 + 40 * v13 + 32, (uint64_t)v2);
      uint64_t v14 = v2[3];
      uint64_t v15 = v2[4];
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v14);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 8) + 136))(v12, v4, v14);
      sub_22086A7A4(v4);
      sub_22080A474(v13, (uint64_t)v2);
      sub_22080B0D8((uint64_t)v2);
      goto LABEL_6;
    }
LABEL_10:
    __break(1u);
    return;
  }
  sub_220842FF8(*(void *)a1 + 40, v4);
  uint64_t v7 = v6[3];
  sub_220842FF8(v4, (uint64_t)(v2 + 13));
  uint64_t v8 = *v6;
  if (*(void *)(*v6 + 16) <= v5)
  {
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v9 = v2[17];
  sub_22080B5B8(v8 + 40 * v9 + 32, (uint64_t)v2);
  uint64_t v10 = v2[3];
  uint64_t v11 = v2[4];
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v10);
  (*(void (**)(uint64_t, void *, uint64_t))(*(void *)(v11 + 8) + 136))(v7, v2 + 13, v10);
  sub_22086A7A4((uint64_t)(v2 + 13));
  sub_22080A474(v9, (uint64_t)v2);
  sub_22080B0D8((uint64_t)v2);
  sub_22086A7A4(v4);
LABEL_6:
  sub_22086A7A4(v3);

  free(v2);
}

uint64_t DataFrame.Row.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v5 = v3[3];
  a3[2] = *v3;
  a3[3] = v4;
  a3[4] = v6;
  a3[5] = v5;
  *a3 = a1;
  a3[1] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_220900304@<X0>(uint64_t *a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v5 = a1[3];
  *(_OWORD *)a3 = *a2;
  *(void *)(a3 + 16) = v3;
  *(void *)(a3 + 24) = v4;
  *(void *)(a3 + 32) = v6;
  *(void *)(a3 + 40) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_22090035C(long long *a1)
{
  uint64_t v1 = *((void *)a1 + 2);
  uint64_t v2 = *((void *)a1 + 3);
  uint64_t v4 = *((void *)a1 + 4);
  uint64_t v3 = *((void *)a1 + 5);
  long long v6 = *a1;
  uint64_t v7 = v1;
  uint64_t v8 = v2;
  uint64_t v9 = v4;
  uint64_t v10 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return _s11TabularData0B5FrameV3RowVys5SliceVyAEGSnySiGcis_0((uint64_t *)&v6);
}

void (*DataFrame.Row.subscript.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t **a1, char a2)
{
  uint64_t v7 = malloc(0x38uLL);
  *a1 = v7;
  v7[6] = v3;
  uint64_t v8 = v3[1];
  uint64_t v10 = v3[2];
  uint64_t v9 = v3[3];
  v7[2] = *v3;
  v7[3] = v8;
  void v7[4] = v10;
  v7[5] = v9;
  *uint64_t v7 = a2;
  v7[1] = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_220900464;
}

void sub_220900464(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v4 = **a1;
  uint64_t v3 = (*a1)[1];
  uint64_t v5 = (*a1)[2];
  uint64_t v6 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v7 = v2[5];
  v9[0] = v4;
  v9[1] = v3;
  uint64_t v9[2] = v5;
  v9[3] = v6;
  v9[4] = v8;
  v9[5] = v7;
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    _s11TabularData0B5FrameV3RowVys5SliceVyAEGSnySiGcis_0(v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    _s11TabularData0B5FrameV3RowVys5SliceVyAEGSnySiGcis_0(v9);
  }

  free(v2);
}

uint64_t sub_220900524(uint64_t a1, unint64_t *a2)
{
  return DataFrame.Row.subscript.setter(a1, *a2);
}

void (*sub_22090052C(void (***a1)(uint64_t a1, char a2), unint64_t *a2))(void *)
{
  uint64_t v4 = (void (**)(uint64_t, char))malloc(0x28uLL);
  *a1 = v4;
  v4[4] = DataFrame.Row.subscript.modify(v4, *a2);
  return sub_220865E74;
}

void (*sub_220900590(void *a1, uint64_t *a2))(void *)
{
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = DataFrame.Row.subscript.modify(v4, *a2, a2[1]);
  return sub_220865E74;
}

unint64_t sub_2209005F0@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  unint64_t result = sub_22092D2F8(a1, a2);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

unint64_t sub_22090061C(unint64_t *a1, unint64_t *a2)
{
  return sub_220929238(*a1, *a2);
}

void sub_220900628(void *a1@<X8>)
{
  *a1 = *(void *)(*(void *)v1 + 16);
}

void (*sub_220900638(void (***a1)(void **a1), unint64_t *a2))(void *a1)
{
  uint64_t v4 = (void (**)(void **))malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_220900698(v4, *a2);
  return sub_22085FBC4;
}

void (*sub_220900698(void (**a1)(void **a1), unint64_t a2))(void **a1)
{
  unint64_t result = (void (*)(void **))malloc(0x48uLL);
  *a1 = result;
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = *v2;
    if (*(void *)(*v2 + 16) > a2)
    {
      uint64_t v7 = result;
      uint64_t v8 = v2[3];
      sub_22080B5B8(v6 + 40 * a2 + 32, (uint64_t)result);
      uint64_t v9 = *((void *)v7 + 3);
      uint64_t v10 = *((void *)v7 + 4);
      __swift_project_boxed_opaque_existential_1(v7, v9);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 + 8) + 128))(v8, v9);
      sub_22080B0D8((uint64_t)v7);
      return sub_220900774;
    }
  }
  __break(1u);
  return result;
}

void sub_220900774(void **a1)
{
  uint64_t v1 = *a1;
  sub_22086A7A4((uint64_t)*a1 + 40);

  free(v1);
}

uint64_t sub_2209007B0@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2[1];
  uint64_t v5 = v2[2];
  uint64_t v4 = v2[3];
  *(void *)(a2 + 16) = *v2;
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = v5;
  *(void *)(a2 + 40) = v4;
  *(_OWORD *)a2 = *a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

void sub_220900810(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 16);
  *a1 = 0;
  a1[1] = v2;
}

BOOL sub_220900820()
{
  return *(void *)(*(void *)v0 + 16) == 0;
}

void *sub_220900834@<X0>(void *result@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  unint64_t v4 = *result + a2;
  if (__OFADD__(*result, a2))
  {
    __break(1u);
  }
  else if (v4 <= *(void *)(*(void *)v3 + 16))
  {
    *a3 = v4;
    return result;
  }
  __break(1u);
  return result;
}

unint64_t sub_220900860@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t result = sub_22092954C(*a1, a2, *a3, *v4);
  *(void *)a4 = result;
  *(unsigned char *)(a4 + 8) = v7 & 1;
  return result;
}

unint64_t *sub_2209008A0(unint64_t *result, unint64_t *a2)
{
  unint64_t v3 = *a2;
  unint64_t v4 = *(void *)(*(void *)v2 + 16);
  if (*result <= v4 && v3 <= v4) {
    return (unint64_t *)(v3 - *result);
  }
  __break(1u);
  return result;
}

__n128 sub_2209008C8@<Q0>(__n128 *a1@<X8>)
{
  unint64_t v2 = v1[1].n128_u64[0];
  unint64_t v3 = v1[1].n128_u64[1];
  __n128 result = *v1;
  *a1 = *v1;
  a1[1].n128_u64[0] = v2;
  a1[1].n128_u64[1] = v3;
  a1[2].n128_u64[0] = 0;
  return result;
}

uint64_t sub_2209008E0()
{
  return *(void *)(*(void *)v0 + 16);
}

void *sub_2209008EC()
{
  uint64_t v1 = sub_2208375A4(*v0, v0[1], v0[2], v0[3]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_220900948(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_22092C4AC(a1, a2, a3, *v3, v3[1], v3[2], v3[3]);
}

uint64_t DataFrame.Row.hash(into:)(uint64_t a1)
{
  uint64_t v2 = *v1;
  int64_t v3 = *(void *)(*v1 + 16);
  uint64_t v4 = MEMORY[0x263F8EE78];
  if (v3)
  {
    uint64_t v12 = a1;
    uint64_t v5 = v1[3];
    uint64_t v20 = MEMORY[0x263F8EE78];
    sub_220826C38(0, v3, 0);
    uint64_t v6 = v2 + 32;
    do
    {
      sub_22080B5B8(v6, (uint64_t)&v17);
      uint64_t v7 = *((void *)&v18 + 1);
      uint64_t v8 = v19;
      __swift_project_boxed_opaque_existential_1(&v17, *((uint64_t *)&v18 + 1));
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(*(void *)(v8 + 8) + 128))(v16, v5, v7);
      sub_22080B0D8((uint64_t)&v17);
      sub_220834D3C((uint64_t)v16, (uint64_t)v15, qword_26AD40FF8);
      sub_220842FF8((uint64_t)v15, (uint64_t)v13);
      if (v14)
      {
        if ((swift_dynamicCast() & 1) == 0)
        {
          uint64_t v19 = 0;
          long long v17 = 0u;
          long long v18 = 0u;
        }
      }
      else
      {
        sub_22086A7A4((uint64_t)v13);
        long long v17 = 0u;
        long long v18 = 0u;
        uint64_t v19 = 0;
      }
      sub_22086A7A4((uint64_t)v15);
      uint64_t v4 = v20;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_220826C38(0, *(void *)(v4 + 16) + 1, 1);
        uint64_t v4 = v20;
      }
      unint64_t v10 = *(void *)(v4 + 16);
      unint64_t v9 = *(void *)(v4 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_220826C38((void *)(v9 > 1), v10 + 1, 1);
        uint64_t v4 = v20;
      }
      *(void *)(v4 + 16) = v10 + 1;
      sub_220834D3C((uint64_t)&v17, v4 + 40 * v10 + 32, &qword_267F18658);
      v6 += 40;
      --v3;
    }
    while (v3);
    a1 = v12;
  }
  sub_2208E2274(a1, v4);
  return swift_bridgeObjectRelease();
}

uint64_t DataFrame.Row.hashValue.getter()
{
  uint64_t v1 = *((void *)v0 + 2);
  uint64_t v2 = *((void *)v0 + 3);
  long long v5 = *v0;
  uint64_t v6 = v1;
  uint64_t v7 = v2;
  sub_22093F430();
  DataFrame.Row.hash(into:)((uint64_t)v4);
  return sub_22093F490();
}

uint64_t sub_220900B98()
{
  uint64_t v1 = *((void *)v0 + 2);
  uint64_t v2 = *((void *)v0 + 3);
  long long v5 = *v0;
  uint64_t v6 = v1;
  uint64_t v7 = v2;
  sub_22093F430();
  DataFrame.Row.hash(into:)((uint64_t)v4);
  return sub_22093F490();
}

uint64_t sub_220900BF0()
{
  uint64_t v1 = *((void *)v0 + 2);
  uint64_t v2 = *((void *)v0 + 3);
  long long v5 = *v0;
  uint64_t v6 = v1;
  uint64_t v7 = v2;
  sub_22093F430();
  DataFrame.Row.hash(into:)((uint64_t)v4);
  return sub_22093F490();
}

BOOL sub_220900C44(uint64_t a1, void *a2)
{
  return *a2 < *(void *)(a1 + 8);
}

uint64_t _s11TabularData0B5FrameV3RowV2eeoiySbAE_AEtFZ_0(void *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t v22 = a2[3];
  int64_t v4 = *(void *)(*a1 + 16);
  uint64_t v5 = MEMORY[0x263F8EE78];
  if (v4)
  {
    uint64_t v21 = *a2;
    uint64_t v6 = a1[3];
    uint64_t v30 = MEMORY[0x263F8EE78];
    sub_220826C38(0, v4, 0);
    uint64_t v7 = v2 + 32;
    do
    {
      sub_22080B5B8(v7, (uint64_t)&v27);
      uint64_t v8 = *((void *)&v28 + 1);
      uint64_t v9 = v29;
      __swift_project_boxed_opaque_existential_1(&v27, *((uint64_t *)&v28 + 1));
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(*(void *)(v9 + 8) + 128))(v26, v6, v8);
      sub_22080B0D8((uint64_t)&v27);
      sub_220834D3C((uint64_t)v26, (uint64_t)v25, qword_26AD40FF8);
      sub_220842FF8((uint64_t)v25, (uint64_t)v23);
      if (v24)
      {
        if ((swift_dynamicCast() & 1) == 0)
        {
          uint64_t v29 = 0;
          long long v27 = 0u;
          long long v28 = 0u;
        }
      }
      else
      {
        sub_22086A7A4((uint64_t)v23);
        long long v27 = 0u;
        long long v28 = 0u;
        uint64_t v29 = 0;
      }
      sub_22086A7A4((uint64_t)v25);
      uint64_t v5 = v30;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_220826C38(0, *(void *)(v5 + 16) + 1, 1);
        uint64_t v5 = v30;
      }
      unint64_t v11 = *(void *)(v5 + 16);
      unint64_t v10 = *(void *)(v5 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_220826C38((void *)(v10 > 1), v11 + 1, 1);
        uint64_t v5 = v30;
      }
      *(void *)(v5 + 16) = v11 + 1;
      sub_220834D3C((uint64_t)&v27, v5 + 40 * v11 + 32, &qword_267F18658);
      v7 += 40;
      --v4;
    }
    while (v4);
    uint64_t v3 = v21;
  }
  int64_t v12 = *(void *)(v3 + 16);
  uint64_t v13 = MEMORY[0x263F8EE78];
  if (v12)
  {
    uint64_t v30 = MEMORY[0x263F8EE78];
    sub_220826C38(0, v12, 0);
    uint64_t v14 = v3 + 32;
    do
    {
      sub_22080B5B8(v14, (uint64_t)&v27);
      uint64_t v16 = *((void *)&v28 + 1);
      uint64_t v15 = v29;
      __swift_project_boxed_opaque_existential_1(&v27, *((uint64_t *)&v28 + 1));
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(*(void *)(v15 + 8) + 128))(v26, v22, v16);
      sub_22080B0D8((uint64_t)&v27);
      sub_220834D3C((uint64_t)v26, (uint64_t)v25, qword_26AD40FF8);
      sub_220842FF8((uint64_t)v25, (uint64_t)v23);
      if (v24)
      {
        if ((swift_dynamicCast() & 1) == 0)
        {
          uint64_t v29 = 0;
          long long v27 = 0u;
          long long v28 = 0u;
        }
      }
      else
      {
        sub_22086A7A4((uint64_t)v23);
        long long v27 = 0u;
        long long v28 = 0u;
        uint64_t v29 = 0;
      }
      sub_22086A7A4((uint64_t)v25);
      uint64_t v13 = v30;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_220826C38(0, *(void *)(v13 + 16) + 1, 1);
        uint64_t v13 = v30;
      }
      unint64_t v18 = *(void *)(v13 + 16);
      unint64_t v17 = *(void *)(v13 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_220826C38((void *)(v17 > 1), v18 + 1, 1);
        uint64_t v13 = v30;
      }
      *(void *)(v13 + 16) = v18 + 1;
      sub_220834D3C((uint64_t)&v27, v13 + 40 * v18 + 32, &qword_267F18658);
      v14 += 40;
      --v12;
    }
    while (v12);
  }
  char v19 = sub_220818678(v5, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v19 & 1;
}

uint64_t sub_220900FF0(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 24);
  DataFrame.subscript.getter(a2);
  type metadata accessor for Column();
  sub_220869F30(a1, v5);
  uint64_t v7 = v9;
  long long v8 = v10;
  return DataFrame.subscript.setter((uint64_t)&v7, a2);
}

uint64_t sub_2209010B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(v3 + 24);
  DataFrame.subscript.getter(a2, a3);
  type metadata accessor for Column();
  sub_220869F30(a1, v7);
  uint64_t v9 = v11;
  long long v10 = v12;
  return sub_2208345FC((uint64_t)&v9, a2, a3);
}

unint64_t sub_22090117C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *((void *)v3 + 3);
  sub_220842FF8(a1, (uint64_t)v18);
  uint64_t v8 = *((void *)v3 + 2);
  long long v13 = *v3;
  long long v14 = *v3;
  uint64_t v15 = v8;
  unint64_t result = sub_22080BA90(a2, a3);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)(v13 + 16))
  {
    sub_22080B5B8(v13 + 40 * result + 32, (uint64_t)&v14);
    uint64_t v10 = v16;
    uint64_t v11 = v17;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v14, v16);
    (*(void (**)(uint64_t, unsigned char *, uint64_t))(*(void *)(v11 + 8) + 136))(v7, v18, v10);
    sub_22086A7A4((uint64_t)v18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v12 = sub_22080BA90(a2, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22080A474(v12, (uint64_t)&v14);
    sub_22080B0D8((uint64_t)&v14);
    return sub_22086A7A4(a1);
  }
  __break(1u);
  return result;
}

uint64_t sub_2209012E0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 24);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v2;
  *(void *)&v11[16] = v6;
  uint64_t v9 = v4;
  uint64_t v10 = v5;
  DataFrame.subscript.getter(&v9);
  type metadata accessor for Column();
  sub_220869F30(a1, v7);
  uint64_t v10 = v5;
  *(void *)uint64_t v11 = v12;
  *(_OWORD *)&v11[8] = v13;
  uint64_t v9 = v4;
  return DataFrame.subscript.setter((uint64_t)v11, &v9);
}

uint64_t _s11TabularData0B5FrameV3RowVys5SliceVyAEGSnySiGcis_0(uint64_t *a1)
{
  void (*v13)(_OWORD *__return_ptr, uint64_t, uint64_t, uint64_t);
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  int64_t v19;
  long long v20;
  uint64_t v21;
  _OWORD v22[2];
  void v23[3];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  uint64_t v1 = a1[2];
  uint64_t v2 = a1[3];
  uint64_t v4 = a1[4];
  uint64_t v3 = a1[5];
  uint64_t v17 = *a1;
  unint64_t v18 = a1[1];
  v23[0] = *a1;
  v23[1] = v18;
  v23[2] = v1;
  uint64_t v24 = v2;
  uint64_t v25 = v4;
  unint64_t v26 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F19968);
  uint64_t result = sub_22093F380();
  int64_t v7 = *((void *)&v22[0] + 1);
  uint64_t v6 = *(void *)&v22[0];
  if (*(void *)&v22[0] == *((void *)&v22[0] + 1))
  {
    swift_bridgeObjectRelease();
LABEL_14:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    if (*((uint64_t *)&v22[0] + 1) >= *(uint64_t *)&v22[0])
    {
      uint64_t v8 = v1 + 40 * *(void *)&v22[0] + 32;
      long long v14 = *((void *)&v22[0] + 1);
      int64_t v9 = *(void *)&v22[0];
      uint64_t v15 = *(void *)&v22[0];
      while (!__OFADD__(v9, 1))
      {
        if (v9 >= v18 || v6 < v17 || v9 >= v7) {
          goto LABEL_16;
        }
        if (v6 < 0) {
          goto LABEL_17;
        }
        if ((unint64_t)v9 >= *(void *)(v1 + 16)) {
          goto LABEL_18;
        }
        char v19 = v9 + 1;
        sub_22080B5B8(v8, (uint64_t)v23);
        uint64_t v11 = v24;
        uint64_t v10 = v25;
        __swift_project_boxed_opaque_existential_1(v23, v24);
        uint64_t v12 = *(void *)(v10 + 8);
        long long v13 = *(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t, uint64_t))(v12 + 128);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v13(v22, v16, v11, v12);
        sub_22080B0D8((uint64_t)v23);
        sub_220834D3C((uint64_t)v22, (uint64_t)&v20, qword_26AD40FF8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        if (!v21) {
          goto LABEL_20;
        }
        sub_220835340(&v20, v22);
        swift_dynamicCast();
        sub_22080A474(v9, (uint64_t)v23);
        uint64_t result = sub_22080B0D8((uint64_t)v23);
        ++v9;
        v8 += 40;
        int64_t v7 = v14;
        uint64_t v6 = v15;
        if (v19 == v14)
        {
          swift_bridgeObjectRelease();
          goto LABEL_14;
        }
      }
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
    }
    __break(1u);
LABEL_20:
    __break(1u);
  }
  return result;
}

unint64_t sub_2209015D8()
{
  unint64_t result = qword_267F19920;
  if (!qword_267F19920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F19920);
  }
  return result;
}

uint64_t sub_22090162C()
{
  return sub_220901A44(&qword_267F19928, &qword_267F18BD0, (void (*)(void))sub_22090167C);
}

unint64_t sub_22090167C()
{
  unint64_t result = qword_267F19930;
  if (!qword_267F19930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F19930);
  }
  return result;
}

unint64_t sub_2209016D8()
{
  unint64_t result = qword_267F19938;
  if (!qword_267F19938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F19938);
  }
  return result;
}

unint64_t sub_220901730()
{
  unint64_t result = qword_267F19940;
  if (!qword_267F19940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F19940);
  }
  return result;
}

uint64_t sub_220901784()
{
  return sub_2208502C4((unint64_t *)&qword_267F18FB0, &qword_267F18BD0);
}

uint64_t sub_2209017C0()
{
  return sub_2208502C4(&qword_267F19948, &qword_267F19950);
}

unint64_t sub_220901800()
{
  unint64_t result = qword_267F19958;
  if (!qword_267F19958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F19958);
  }
  return result;
}

uint64_t sub_220901854()
{
  return sub_220901A44(&qword_267F19960, &qword_267F19968, (void (*)(void))sub_2209018A4);
}

unint64_t sub_2209018A4()
{
  unint64_t result = qword_267F19970;
  if (!qword_267F19970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F19970);
  }
  return result;
}

unint64_t sub_2209018FC()
{
  unint64_t result = qword_267F19978;
  if (!qword_267F19978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F19978);
  }
  return result;
}

uint64_t sub_220901950()
{
  return sub_220901A44(&qword_267F19980, &qword_267F19968, (void (*)(void))sub_2209019A0);
}

unint64_t sub_2209019A0()
{
  unint64_t result = qword_267F19988;
  if (!qword_267F19988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F19988);
  }
  return result;
}

uint64_t sub_2209019F4()
{
  return sub_220901A44(&qword_267F19990, &qword_267F19968, (void (*)(void))sub_220901800);
}

uint64_t sub_220901A44(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_220901AB4()
{
  unint64_t result = qword_267F19998;
  if (!qword_267F19998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F19998);
  }
  return result;
}

uint64_t sub_220901B08()
{
  return sub_2208502C4(&qword_267F199A0, &qword_267F19968);
}

uint64_t sub_220901B44()
{
  return sub_2208502C4(&qword_267F199A8, &qword_267F199B0);
}

unint64_t sub_220901B84()
{
  unint64_t result = qword_267F199B8;
  if (!qword_267F199B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F199B8);
  }
  return result;
}

uint64_t sub_220901BE0()
{
  return 0;
}

uint64_t sub_220901BF4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = a3[1];
  v6[0] = *a3;
  v6[1] = v4;
  swift_bridgeObjectRetain();
  return sub_2209012E0(a1, v6);
}

uint64_t sub_220901C4C()
{
  return 8;
}

void *sub_220901C58(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_220901C6C()
{
  return 0;
}

uint64_t sub_220901C84()
{
  return 0;
}

uint64_t sub_220901C9C()
{
  return 0;
}

uint64_t sub_220901CB4()
{
  return 0;
}

void *_s3RowVwcp(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s3RowVwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  return a1;
}

uint64_t _s3RowVwta(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t _s3RowVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s3RowVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DataFrame.Row()
{
  return &type metadata for DataFrame.Row;
}

ValueMetadata *type metadata accessor for DataFrame.Rows()
{
  return &type metadata for DataFrame.Rows;
}

uint64_t sub_220901EB4(void *a1)
{
  uint64_t v12 = 0;
  unint64_t v13 = 0xE000000000000000;
  uint64_t v1 = a1[2];
  if (v1 == a1[1]) {
    return 0;
  }
  uint64_t result = 0;
  unsigned int v4 = *(unsigned __int8 *)(*a1 + v1);
  BOOL v5 = v4 > 0x3D || ((1 << v4) & 0x2000000000002400) == 0;
  if (v5 && v4 != 93)
  {
    do
    {
      if ((v4 & 0x80) != 0) {
        unsigned int v6 = ((v4 & 0x3F) << 8) + (v4 >> 6) + 33217;
      }
      else {
        unsigned int v6 = v4 + 1;
      }
      uint64_t v11 = (v6 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * ((4 - (__clz(v6) >> 3)) & 7)));
      uint64_t v7 = MEMORY[0x223C69D60](&v11);
      MEMORY[0x223C69DD0](v7);
      swift_bridgeObjectRelease();
      uint64_t v8 = a1[1];
      uint64_t v9 = a1[2] + 1;
      a1[2] = v9;
      if (v9 == v8) {
        break;
      }
      unsigned int v4 = *(unsigned __int8 *)(*a1 + v9);
      BOOL v10 = v4 > 0x3D || ((1 << v4) & 0x2000000000002400) == 0;
    }
    while (v10 && v4 != 93);
    return v12;
  }
  return result;
}

uint64_t sub_220902000(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = sub_220901EB4(a1);
  uint64_t v7 = a1[1];
  uint64_t v6 = a1[2];
  if (v6 >= v7 || (uint64_t v8 = *a1, *(unsigned char *)(*a1 + v6) != 93))
  {
LABEL_12:
    swift_bridgeObjectRelease();
    sub_220902860();
    swift_allocError();
    *(void *)uint64_t v11 = a2;
    *(unsigned char *)(v11 + 8) = 1;
    swift_willThrow();
    return v2;
  }
  uint64_t v2 = v5;
  a1[2] = v6 + 1;
  if (v6 + 1 != v7)
  {
    if (v6 + 1 >= v7) {
      goto LABEL_12;
    }
    int v9 = *(unsigned __int8 *)(v8 + v6 + 1);
    if (v9 != 10 && v9 != 13) {
      goto LABEL_12;
    }
    a1[2] = v6 + 2;
  }
  sub_22080CF5C(MEMORY[0x263F8EE78]);
  return v2;
}

uint64_t sub_2209020E8(void *a1)
{
  uint64_t v12 = 0;
  unint64_t v13 = 0xE000000000000000;
  uint64_t v1 = a1[2];
  if (v1 == a1[1]) {
    return 0;
  }
  unsigned int v3 = *(unsigned __int8 *)(*a1 + v1);
  if (v3 == 10 || v3 == 13) {
    return 0;
  }
  do
  {
    if ((v3 & 0x80) != 0) {
      unsigned int v6 = ((v3 & 0x3F) << 8) + (v3 >> 6) + 33217;
    }
    else {
      unsigned int v6 = v3 + 1;
    }
    uint64_t v11 = (v6 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * ((4 - (__clz(v6) >> 3)) & 7)));
    uint64_t v7 = MEMORY[0x223C69D60](&v11);
    MEMORY[0x223C69DD0](v7);
    swift_bridgeObjectRelease();
    uint64_t v8 = a1[1];
    uint64_t v9 = a1[2] + 1;
    a1[2] = v9;
    if (v9 == v8) {
      break;
    }
    unsigned int v3 = *(unsigned __int8 *)(*a1 + v9);
  }
  while (v3 != 10 && v3 != 13);
  return v12;
}

uint64_t sub_2209021F0(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = sub_220901EB4(a1);
  uint64_t v7 = a1[1];
  uint64_t v6 = a1[2];
  if (v6 >= v7) {
    goto LABEL_12;
  }
  uint64_t v8 = *a1;
  if (*(unsigned char *)(*a1 + v6) != 61) {
    goto LABEL_12;
  }
  uint64_t v2 = v5;
  a1[2] = v6 + 1;
  sub_2209020E8(a1);
  uint64_t v9 = a1[2];
  if (v9 != v7)
  {
    if (v9 >= v7 || ((int v10 = *(unsigned __int8 *)(v8 + v9), v10 != 10) ? (v11 = v10 == 13) : (v11 = 1), !v11))
    {
      swift_bridgeObjectRelease();
LABEL_12:
      swift_bridgeObjectRelease();
      sub_220902860();
      swift_allocError();
      *(void *)uint64_t v12 = a2;
      *(unsigned char *)(v12 + 8) = 2;
      swift_willThrow();
      return v2;
    }
    a1[2] = v9 + 1;
  }
  return v2;
}

uint64_t sub_2209022EC(uint64_t result, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v42 = result;
  uint64_t v43 = a2;
  if (!a2) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v4 = 0;
  uint64_t v5 = MEMORY[0x263F8EE78];
  uint64_t v6 = 1;
  while (1)
  {
    while (1)
    {
      unsigned int v7 = *(unsigned __int8 *)(v42 + v4);
      BOOL v8 = v7 > 0x20;
      uint64_t v9 = (1 << v7) & 0x100002600;
      if (v8 || v9 == 0) {
        break;
      }
      if (a2 == ++v4)
      {
        uint64_t v44 = a2;
        goto LABEL_9;
      }
    }
    uint64_t v44 = v4;
    if (v4 < a2)
    {
      int v23 = *(unsigned __int8 *)(v42 + v4);
      if (v23 == 91)
      {
        uint64_t v44 = v4 + 1;
        uint64_t v28 = v6;
        uint64_t v29 = sub_220902000(&v42, v6);
        if (v3)
        {
LABEL_42:
          swift_bridgeObjectRelease();
          return v5;
        }
        uint64_t v32 = v29;
        uint64_t v33 = v30;
        uint64_t v34 = v31;
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_22081CB70(0, *(void *)(v5 + 16) + 1, 1, (char *)v5);
          uint64_t v5 = result;
        }
        unint64_t v36 = *(void *)(v5 + 16);
        unint64_t v35 = *(void *)(v5 + 24);
        unint64_t v37 = v36 + 1;
        if (v36 >= v35 >> 1)
        {
          uint64_t result = (uint64_t)sub_22081CB70((char *)(v35 > 1), v36 + 1, 1, (char *)v5);
          unint64_t v37 = v36 + 1;
          uint64_t v5 = result;
        }
        *(void *)(v5 + 16) = v37;
        uint64_t v41 = v5;
        uint64_t v38 = (void *)(v5 + 24 * v36);
        void v38[4] = v32;
        v38[5] = v33;
        v38[6] = v34;
        uint64_t v6 = v28;
        goto LABEL_15;
      }
      if (v23 == 59)
      {
        uint64_t v44 = v4 + 1;
        uint64_t v41 = v5;
        if (a2 - 1 != v4)
        {
          int v24 = *(unsigned __int8 *)(v42 + v4 + 1);
          uint64_t v25 = v4 + 2;
          uint64_t v44 = v4 + 2;
          if (v24 != 10 && v24 != 13)
          {
            if (a2 - 2 != v4)
            {
              while (1)
              {
                int v26 = *(unsigned __int8 *)(v42 + v25++);
                if (v26 == 10 || v26 == 13) {
                  break;
                }
                if (a2 == v25) {
                  goto LABEL_38;
                }
              }
              a2 = v25;
            }
LABEL_38:
            uint64_t v44 = a2;
          }
        }
        goto LABEL_15;
      }
    }
LABEL_9:
    if (!*(void *)(v5 + 16))
    {
      swift_bridgeObjectRelease();
      sub_220902860();
      swift_allocError();
      *(void *)uint64_t v39 = v6;
      *(unsigned char *)(v39 + 8) = 0;
      swift_willThrow();
      return v5;
    }
    uint64_t v11 = sub_2209021F0(&v42, v6);
    if (v3) {
      goto LABEL_42;
    }
    uint64_t v15 = v11;
    uint64_t v16 = v12;
    uint64_t v17 = v13;
    uint64_t v18 = v14;
    uint64_t v40 = v6;
    unint64_t v19 = *(void *)(v5 + 16);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if (result)
    {
      if (!v19) {
        goto LABEL_47;
      }
    }
    else
    {
      uint64_t result = (uint64_t)sub_22080ABE8(v5);
      uint64_t v5 = result;
      if (!v19) {
        goto LABEL_47;
      }
    }
    if (v19 > *(void *)(v5 + 16)) {
      goto LABEL_46;
    }
    uint64_t v41 = v5;
    uint64_t v20 = v5 + 24 * (v19 - 1);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v45 = *(void *)(v20 + 48);
    *(void *)(v20 + 48) = 0x8000000000000000;
    sub_22080B12C(v17, v18, v15, v16, isUniquelyReferenced_nonNull_native);
    *(void *)(v20 + 48) = v45;
    uint64_t v3 = 0;
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v6 = v40;
LABEL_15:
    if (__OFADD__(v6++, 1)) {
      break;
    }
    a2 = v43;
    uint64_t v4 = v44;
    uint64_t v5 = v41;
    if (v44 == v43) {
      return v5;
    }
  }
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
  return result;
}

uint64_t sub_220902620(uint64_t a1, unint64_t a2)
{
  uint64_t v29 = *MEMORY[0x263EF8340];
  uint64_t v3 = MEMORY[0x263F8EE78];
  switch(a2 >> 62)
  {
    case 1uLL:
      uint64_t v7 = (a1 >> 32) - (int)a1;
      if (a1 >> 32 < (int)a1)
      {
        __break(1u);
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
      sub_22080B7F4(a1, a2);
      uint64_t v8 = sub_22093DE40();
      if (!v8)
      {
        sub_22093DE50();
        __break(1u);
LABEL_26:
        __break(1u);
        JUMPOUT(0x220902850);
      }
      uint64_t v9 = v8;
      uint64_t v10 = sub_22093DE60();
      uint64_t v11 = (int)a1 - v10;
      if (__OFSUB__((int)a1, v10))
      {
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
      }
      uint64_t v12 = sub_22093DE50();
      if (v12 >= v7) {
        uint64_t v13 = (a1 >> 32) - (int)a1;
      }
      else {
        uint64_t v13 = v12;
      }
      uint64_t v3 = sub_2209022EC(v9 + v11, v13);
      sub_22080B88C(a1, a2);
      return v3;
    case 2uLL:
      uint64_t v14 = *(void *)(a1 + 16);
      uint64_t v15 = *(void *)(a1 + 24);
      swift_retain();
      swift_retain();
      uint64_t v16 = sub_22093DE40();
      if (!v16) {
        goto LABEL_14;
      }
      uint64_t v17 = sub_22093DE60();
      if (__OFSUB__(v14, v17)) {
        goto LABEL_24;
      }
      v16 += v14 - v17;
LABEL_14:
      BOOL v18 = __OFSUB__(v15, v14);
      uint64_t v19 = v15 - v14;
      if (v18) {
        goto LABEL_22;
      }
      uint64_t v20 = sub_22093DE50();
      if (!v16) {
        goto LABEL_26;
      }
      if (v20 >= v19) {
        uint64_t v21 = v19;
      }
      else {
        uint64_t v21 = v20;
      }
      uint64_t v3 = sub_2209022EC(v16, v21);
      swift_release();
      swift_release();
      return v3;
    case 3uLL:
      return v3;
    default:
      uint64_t v23 = a1;
      __int16 v24 = a2;
      char v25 = BYTE2(a2);
      char v26 = BYTE3(a2);
      char v27 = BYTE4(a2);
      char v28 = BYTE5(a2);
      uint64_t v6 = sub_2209022EC((uint64_t)&v23, BYTE6(a2));
      if (!v2) {
        return v6;
      }
      return v3;
  }
}

unint64_t sub_220902860()
{
  unint64_t result = qword_267F199C0;
  if (!qword_267F199C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F199C0);
  }
  return result;
}

uint64_t destroy for INISection()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s11TabularData10INISectionVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for INISection(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for INISection(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for INISection()
{
  return &type metadata for INISection;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for INILoadingError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for INILoadingError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_220902A94(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_220902A9C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for INILoadingError()
{
  return &type metadata for INILoadingError;
}

uint64_t DiscontiguousColumnSlice<A>.sum()()
{
  return sub_22091D9E8((uint64_t (*)(uint64_t))sub_220906960);
}

uint64_t DiscontiguousColumnSlice<A>.mean()(uint64_t a1, uint64_t a2)
{
  return sub_220902BD8(a1, a2, (uint64_t (*)(uint64_t))sub_220907234);
}

{
  return sub_2209082C0(a1, a2, &qword_26AD40FD0, (uint64_t (*)(uint64_t))sub_2209084E4);
}

uint64_t sub_220902B38()
{
  return sub_22091D9E8((uint64_t (*)(uint64_t))sub_220909108);
}

uint64_t DiscontiguousColumnSlice<A>.min()(uint64_t a1, uint64_t a2)
{
  return sub_220902BD8(a1, a2, (uint64_t (*)(uint64_t))sub_220907254);
}

uint64_t DiscontiguousColumnSlice<A>.max()(uint64_t a1, uint64_t a2)
{
  return sub_220902BD8(a1, a2, (uint64_t (*)(uint64_t))sub_220907288);
}

uint64_t sub_220902BD8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  return sub_22091D9E8(a3);
}

uint64_t Column<A>.min()(uint64_t a1, uint64_t a2)
{
  return sub_220906C88(a1, a2, (uint64_t (*)(uint64_t))sub_2209072BC);
}

uint64_t Column<A>.max()(uint64_t a1, uint64_t a2)
{
  return sub_220906C88(a1, a2, (uint64_t (*)(uint64_t))sub_2209072E8);
}

uint64_t Column<A>.sum()()
{
  return sub_22091D9E8((uint64_t (*)(uint64_t))sub_22090733C);
}

uint64_t sub_220902CEC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t AssociatedConformanceWitness = a1;
  uint64_t v45 = a4;
  uint64_t v46 = a5;
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) + 8);
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v51 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v57 = v7;
  uint64_t v53 = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](v53);
  uint64_t v56 = (char *)&v43 - v9;
  uint64_t v10 = sub_22093ED30();
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v43 - v12;
  uint64_t v54 = *(a2 - 1);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v43 = v16;
  uint64_t v44 = v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v43 - v19;
  int v47 = *(void **)(AssociatedTypeWitness - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  uint64_t v23 = (char *)&v43 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  char v26 = (char *)&v43 - v25;
  uint64_t v27 = MEMORY[0x270FA5388](v24);
  uint64_t v29 = (char *)&v43 - v28;
  MEMORY[0x270FA5388](v27);
  uint64_t v30 = *(void *)(v6 + 8);
  uint64_t v58 = (char *)&v43 - v31;
  sub_22093F0D0();
  sub_22093F0D0();
  uint64_t v32 = *(void (**)(char *, uint64_t, void *))(v54 + 16);
  Swift::Int v50 = a2;
  v32(v15, AssociatedConformanceWitness, a2);
  uint64_t v33 = v43;
  sub_22093E780();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_22093ED70();
  uint64_t v34 = v47 + 6;
  uint64_t v54 = v47[6];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v54)(v13, 1, AssociatedTypeWitness) != 1)
  {
    uint64_t v49 = (void (*)(char *, char *, uint64_t))v47[4];
    Swift::Int v50 = v47 + 4;
    uint64_t v48 = (void (**)(char *, uint64_t))(v47 + 1);
    uint64_t v51 = v34;
    uint64_t v52 = v30;
    do
    {
      v49(v26, v13, AssociatedTypeWitness);
      sub_22093F0C0();
      swift_getAssociatedConformanceWitness();
      sub_22093F290();
      sub_22093F240();
      sub_22093F0C0();
      unint64_t v35 = *v48;
      (*v48)(v23, AssociatedTypeWitness);
      v35(v26, AssociatedTypeWitness);
      sub_22093ED70();
    }
    while (((unsigned int (*)(char *, uint64_t, uint64_t))v54)(v13, 1, AssociatedTypeWitness) != 1);
  }
  unint64_t v36 = v58;
  (*(void (**)(char *, uint64_t))(v44 + 8))(v20, v33);
  sub_22093F0D0();
  char v37 = sub_22093E520();
  uint64_t v38 = v47;
  uint64_t v39 = (void (*)(char *, uint64_t))v47[1];
  v39(v26, AssociatedTypeWitness);
  if (v37)
  {
    uint64_t v40 = 1;
    uint64_t v41 = v46;
  }
  else
  {
    uint64_t v41 = v46;
    sub_22093E300();
    uint64_t v40 = 0;
  }
  v39(v29, AssociatedTypeWitness);
  v39(v36, AssociatedTypeWitness);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v38[7])(v41, v40, 1, AssociatedTypeWitness);
}

uint64_t sub_2209032F4@<X0>(void (**a1)(char *, uint64_t)@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v55 = a6;
  uint64_t v56 = a5;
  uint64_t v62 = *(a3 - 1);
  uint64_t v63 = a1;
  MEMORY[0x270FA5388](a1);
  uint64_t v60 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v52 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  char v72 = (char *)&v51 - v10;
  uint64_t v11 = a4;
  uint64_t v12 = a3;
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t v14 = sub_22093ED30();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v54 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v51 - v19;
  uint64_t v21 = *(void *)(v13 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v18);
  BOOL v65 = (char *)&v51 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v64 = (char *)&v51 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v67 = (char *)&v51 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v66 = (char *)&v51 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v70 = (char *)&v51 - v31;
  MEMORY[0x270FA5388](v30);
  uint64_t v71 = (char *)&v51 - v32;
  uint64_t v53 = a2;
  if (a2 < 0)
  {
    uint64_t result = sub_22093F090();
    __break(1u);
  }
  else
  {
    sub_220902CEC((uint64_t)v63, v12, v11, v56, (uint64_t)v20);
    unint64_t v68 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
    uint64_t v69 = v21 + 48;
    if (v68(v20, 1, v13) == 1)
    {
      (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
    }
    else
    {
      char v59 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
      v59(v71, v20, v13);
      uint64_t v58 = *(void *)(*(void *)(v56 + 16) + 8);
      uint64_t v57 = *(void *)(v58 + 8);
      sub_22093F0D0();
      (*(void (**)(char *, void (**)(char *, uint64_t), void *))(v62 + 16))(v60, v63, v12);
      sub_22093E780();
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v34 = 0;
      uint64_t v60 = (char *)(v21 + 32);
      uint64_t v61 = v21;
      uint64_t v62 = AssociatedConformanceWitness;
      uint64_t v63 = (void (**)(char *, uint64_t))(v21 + 8);
      unint64_t v35 = v54;
      unint64_t v36 = v65;
      char v37 = v66;
      uint64_t v38 = v67;
      while (1)
      {
        sub_22093ED70();
        if (v68(v35, 1, v13) == 1) {
          break;
        }
        v59(v37, v35, v13);
        uint64_t v39 = v13;
        uint64_t v40 = v64;
        sub_22093F0B0();
        sub_22093F0B0();
        sub_22093E9F0();
        uint64_t v41 = *v63;
        (*v63)(v36, v39);
        uint64_t v42 = v40;
        uint64_t v13 = v39;
        v41(v42, v39);
        sub_22093F0C0();
        v41(v38, v39);
        v41(v37, v39);
        uint64_t v21 = v61;
        if (__OFADD__(v34++, 1))
        {
          __break(1u);
          break;
        }
      }
      (*(void (**)(char *, uint64_t))(v52 + 8))(v72, AssociatedTypeWitness);
      if (v34 > v53)
      {
        uint64_t v44 = v67;
        sub_22093E340();
        uint64_t v45 = v66;
        uint64_t v46 = v70;
        sub_22093E300();
        int v47 = *(void (**)(char *, uint64_t))(v21 + 8);
        v47(v44, v13);
        uint64_t v48 = v55;
        sub_22093E2F0();
        v47(v45, v13);
        v47(v46, v13);
        v47(v71, v13);
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v21 + 56))(v48, 0, 1, v13);
      }
      Swift::Int v50 = *(void (**)(char *, uint64_t))(v21 + 8);
      v50(v70, v13);
      v50(v71, v13);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56))(v55, 1, 1, v13);
  }
  return result;
}

uint64_t sub_220903A10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, void (*a7)(char *, char *, uint64_t, uint64_t)@<X7>, char *a8@<X8>)
{
  uint64_t v46 = a6;
  int v47 = a7;
  uint64_t v58 = a1;
  uint64_t v13 = sub_22093ED30();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v56 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v40 - v18;
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v45 = (char *)&v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v44 = (char *)&v40 - v22;
  uint64_t v59 = v23;
  uint64_t v24 = *(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56);
  uint64_t v57 = a8;
  uint64_t v54 = v24;
  uint64_t v55 = v23 + 56;
  v24(a8, 1, 1, a5);
  uint64_t v60 = a2;
  uint64_t v61 = a3;
  uint64_t v62 = a2;
  uint64_t v63 = a3;
  uint64_t v65 = a4;
  uint64_t v64 = a4;
  uint64_t v48 = type metadata accessor for Column();
  uint64_t result = Column.count.getter(v48);
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v26 = result;
    if (result)
    {
      Swift::Int v27 = 0;
      uint64_t v51 = (unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48);
      uint64_t v52 = (void (**)(char *, char *, uint64_t))(v14 + 16);
      uint64_t v43 = v59 + 32;
      uint64_t v50 = v59 + 16;
      uint64_t v42 = v59 + 8;
      uint64_t v28 = v14;
      uint64_t v29 = (void (**)(char *, uint64_t))(v14 + 8);
      uint64_t v49 = (uint64_t (**)(char *, char *, uint64_t))(v28 + 32);
      uint64_t v53 = result;
      uint64_t v41 = v29;
      do
      {
        uint64_t v62 = v60;
        uint64_t v63 = v61;
        uint64_t v64 = v65;
        uint64_t result = Column.isNil(at:)(v27);
        if ((result & 1) == 0)
        {
          uint64_t v38 = v57;
          (*v52)(v19, v57, v13);
          if ((*v51)(v19, 1, a5) == 1)
          {
            uint64_t v39 = *v29;
            (*v29)(v19, v13);
            unint64_t v35 = v56;
            (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v56, v58 + *(void *)(v59 + 72) * v27, a5);
            v39(v38, v13);
          }
          else
          {
            uint64_t v30 = v59;
            uint64_t v31 = v44;
            (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v44, v19, a5);
            uint64_t v32 = v13;
            uint64_t v33 = v19;
            uint64_t v34 = v45;
            (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v45, v58 + *(void *)(v30 + 72) * v27, a5);
            unint64_t v35 = v56;
            v47(v31, v34, a5, v46);
            unint64_t v36 = *(void (**)(char *, uint64_t))(v30 + 8);
            char v37 = v34;
            uint64_t v19 = v33;
            uint64_t v13 = v32;
            v36(v37, a5);
            v36(v31, a5);
            uint64_t v29 = v41;
            (*v41)(v38, v13);
          }
          v54(v35, 0, 1, a5);
          uint64_t result = (*v49)(v38, v35, v13);
          uint64_t v26 = v53;
        }
        ++v27;
      }
      while (v26 != v27);
    }
  }
  return result;
}

uint64_t Column<A>.argmin()(uint64_t a1, uint64_t a2)
{
  return sub_220907D90(a1, a2, &qword_26AD40FE0, (uint64_t (*)(uint64_t))sub_220907394);
}

uint64_t Column<A>.argmax()(uint64_t a1, uint64_t a2)
{
  return sub_220907D90(a1, a2, &qword_26AD40FE0, (uint64_t (*)(uint64_t))sub_2209073D4);
}

uint64_t sub_220903EB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t (*a7)(char *, char *, uint64_t, uint64_t)@<X7>, Swift::Int *a8@<X8>, void (*a9)(char *, char *, uint64_t, uint64_t))
{
  uint64_t v57 = a7;
  uint64_t v56 = a6;
  uint64_t v71 = a1;
  uint64_t v14 = *(void *)(a5 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](a1);
  uint64_t v55 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v54 = (char *)&v46 - v17;
  uint64_t v59 = sub_22093ED30();
  uint64_t v48 = *(void *)(v59 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v59);
  uint64_t v70 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v46 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = *(void (**)(void))(v14 + 56);
  uint64_t v58 = (char *)&v46 - v24;
  unint64_t v68 = v23;
  uint64_t v69 = v14 + 56;
  v23();
  uint64_t v76 = a2;
  uint64_t v77 = a2;
  uint64_t v25 = a5;
  uint64_t v26 = a3;
  uint64_t v78 = a3;
  uint64_t v79 = a4;
  uint64_t v80 = a4;
  uint64_t v75 = type metadata accessor for Column();
  uint64_t result = Column.count.getter(v75);
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    int v47 = a8;
    if (result)
    {
      Swift::Int v73 = 0;
      Swift::Int v28 = 0;
      uint64_t v52 = a9;
      uint64_t v64 = (unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
      uint64_t v65 = (void (**)(char *, char *, uint64_t))(v48 + 16);
      uint64_t v51 = v14 + 32;
      uint64_t v63 = v14 + 16;
      uint64_t v50 = v14 + 8;
      uint64_t v29 = (void (**)(char *, uint64_t))(v48 + 8);
      uint64_t v62 = (void (**)(char *, char *, uint64_t))(v48 + 32);
      int v72 = 1;
      uint64_t v30 = v59;
      uint64_t v31 = v58;
      uint64_t v66 = v22;
      uint64_t v53 = a3;
      uint64_t v67 = v14;
      uint64_t v74 = result;
      uint64_t v49 = (void (**)(char *, uint64_t))(v48 + 8);
      do
      {
        uint64_t v77 = v76;
        uint64_t v78 = v26;
        uint64_t v79 = v80;
        if (!Column.isNil(at:)(v28))
        {
          (*v65)(v22, v31, v30);
          if ((*v64)(v22, 1, v25) == 1)
          {
            uint64_t v44 = *v29;
            (*v29)(v22, v30);
            uint64_t v40 = v70;
            (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v70, v71 + *(void *)(v14 + 72) * v28, v25);
            v44(v31, v30);
            int v72 = 0;
            Swift::Int v73 = v28;
          }
          else
          {
            uint64_t v32 = v54;
            (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v54, v22, v25);
            uint64_t v33 = *(void (**)(char *, Swift::Int, uint64_t))(v14 + 16);
            Swift::Int v60 = v71 + *(void *)(v14 + 72) * v28;
            uint64_t v61 = v33;
            uint64_t v34 = v25;
            unint64_t v35 = v55;
            ((void (*)(char *))v33)(v55);
            uint64_t v36 = v56;
            int v37 = v57(v35, v32, v34, v56);
            uint64_t v38 = *(void (**)(char *, uint64_t))(v67 + 8);
            v38(v35, v34);
            Swift::Int v39 = v73;
            if (v37) {
              Swift::Int v39 = v28;
            }
            Swift::Int v73 = v39;
            v72 &= v37 ^ 1;
            v61(v35, v60, v34);
            uint64_t v40 = v70;
            uint64_t v41 = v36;
            uint64_t v26 = v53;
            v52(v32, v35, v34, v41);
            uint64_t v42 = v35;
            uint64_t v25 = v34;
            v38(v42, v34);
            uint64_t v43 = v32;
            uint64_t v31 = v58;
            v38(v43, v34);
            uint64_t v29 = v49;
            uint64_t v14 = v67;
            uint64_t v30 = v59;
            (*v49)(v31, v59);
          }
          ((void (*)(char *, void, uint64_t, uint64_t))v68)(v40, 0, 1, v25);
          (*v62)(v31, v40, v30);
          uint64_t v22 = v66;
        }
        ++v28;
      }
      while (v74 != v28);
    }
    else
    {
      Swift::Int v73 = 0;
      int v72 = 1;
      uint64_t v30 = v59;
      uint64_t v31 = v58;
    }
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v31, v30);
    uint64_t v45 = v47;
    *int v47 = v73;
    *((unsigned char *)v45 + 8) = v72 & 1;
  }
  return result;
}

uint64_t sub_220904470@<X0>(uint64_t a1@<X0>, long long *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, void (*a5)(char *, char *, uint64_t, uint64_t)@<X5>, char *a6@<X8>)
{
  uint64_t v52 = a5;
  uint64_t v51 = a4;
  uint64_t v59 = a1;
  uint64_t v68 = sub_22093ED30();
  uint64_t v9 = *(void *)(v68 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v68);
  uint64_t v58 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v62 = (char *)&v44 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v50 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v49 = (char *)&v44 - v16;
  uint64_t v63 = v17;
  uint64_t v18 = *(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56);
  uint64_t v60 = v17 + 56;
  uint64_t v61 = v18;
  v18((char *)a6, 1, 1, a3);
  uint64_t v19 = sub_2208EE720(*((void *)a2 + 3), *((void *)a2 + 4), *((unsigned char *)a2 + 40));
  uint64_t v65 = *(void *)(v19 + 16);
  if (v65)
  {
    uint64_t v57 = a6;
    uint64_t v64 = type metadata accessor for DiscontiguousColumnSlice();
    uint64_t v20 = 0;
    uint64_t v54 = (unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48);
    uint64_t v55 = (void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    uint64_t v47 = v63 + 32;
    uint64_t v53 = v63 + 16;
    uint64_t v46 = v63 + 8;
    uint64_t v21 = (void (**)(char *, uint64_t))(v9 + 8);
    uint64_t v22 = (void (**)(uint64_t, char *, uint64_t))(v9 + 32);
    uint64_t v23 = a3;
    uint64_t v24 = v19;
    uint64_t v48 = a2;
    uint64_t v56 = v19;
    uint64_t v45 = v22;
    do
    {
      Swift::Int v35 = *(void *)(v24 + 8 * v20 + 32);
      long long v36 = a2[1];
      long long v66 = *a2;
      v67[0] = v36;
      *(_OWORD *)((char *)v67 + 9) = *(long long *)((char *)a2 + 25);
      if (!DiscontiguousColumnSlice.isNil(at:)(v35))
      {
        int v37 = v62;
        uint64_t v38 = (char *)v57;
        (*v55)(v62, v57, v68);
        if ((*v54)(v37, 1, v23) == 1)
        {
          Swift::Int v39 = v37;
          uint64_t v40 = *v21;
          uint64_t v41 = v68;
          (*v21)(v39, v68);
          Swift::Int v42 = v59 + *(void *)(v63 + 72) * v35;
          uint64_t v31 = v58;
          (*(void (**)(char *, Swift::Int, uint64_t))(v63 + 16))(v58, v42, v23);
          v40(v38, v41);
        }
        else
        {
          uint64_t v25 = v63;
          uint64_t v26 = v49;
          (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v49, v37, v23);
          Swift::Int v27 = v59 + *(void *)(v25 + 72) * v35;
          Swift::Int v28 = *(void (**)(char *, Swift::Int, uint64_t))(v25 + 16);
          uint64_t v29 = v25;
          uint64_t v30 = v50;
          v28(v50, v27, v23);
          uint64_t v31 = v58;
          v52(v26, v30, v23, v51);
          uint64_t v32 = *(void (**)(char *, uint64_t))(v29 + 8);
          uint64_t v33 = v30;
          uint64_t v22 = v45;
          v32(v33, v23);
          uint64_t v34 = v26;
          a2 = v48;
          v32(v34, v23);
          (*v21)(v38, v68);
        }
        v61(v31, 0, 1, v23);
        (*v22)((uint64_t)v38, v31, v68);
        uint64_t v24 = v56;
      }
      ++v20;
    }
    while (v65 != v20);
  }
  return swift_bridgeObjectRelease();
}

uint64_t DiscontiguousColumnSlice<A>.argmin()(uint64_t a1, uint64_t a2)
{
  return sub_2209082C0(a1, a2, &qword_26AD40FE0, (uint64_t (*)(uint64_t))sub_22090744C);
}

uint64_t sub_220904930@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, Swift::Int *a5@<X8>)
{
  uint64_t v58 = a1;
  uint64_t v59 = a4;
  uint64_t v5 = a3;
  uint64_t v41 = a5;
  uint64_t v7 = *(void *)(a3 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](a1);
  uint64_t v49 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v48 = (char *)&v40 - v10;
  uint64_t v11 = sub_22093ED30();
  uint64_t v42 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v57 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v65 = (char *)&v40 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v40 - v16;
  uint64_t v18 = v7;
  uint64_t v60 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  uint64_t v61 = v7 + 56;
  v60((char *)&v40 - v16, 1, 1, v5);
  uint64_t v19 = *(void *)(a2 + 24);
  uint64_t v20 = *(void *)(a2 + 32);
  long long v66 = (long long *)a2;
  uint64_t v21 = sub_2208EE720(v19, v20, *(unsigned char *)(a2 + 40));
  uint64_t v22 = *(void *)(v21 + 16);
  uint64_t v40 = v21;
  if (v22)
  {
    uint64_t v23 = (Swift::Int *)(v21 + 32);
    uint64_t v64 = type metadata accessor for DiscontiguousColumnSlice();
    Swift::Int v62 = 0;
    uint64_t v55 = (unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
    uint64_t v56 = (void (**)(char *, char *, uint64_t))(v42 + 16);
    uint64_t v45 = v7 + 32;
    uint64_t v52 = v7 + 16;
    uint64_t v44 = v7 + 8;
    uint64_t v24 = (void (**)(char *, uint64_t))(v42 + 8);
    uint64_t v54 = (void (**)(char *, char *, uint64_t))(v42 + 32);
    int v63 = 1;
    uint64_t v47 = v11;
    uint64_t v53 = v7;
    uint64_t v46 = v17;
    uint64_t v43 = (void (**)(char *, uint64_t))(v42 + 8);
    do
    {
      while (1)
      {
        Swift::Int v25 = *v23;
        uint64_t v69 = v23 + 1;
        long long v26 = v66[1];
        long long v67 = *v66;
        *(_OWORD *)uint64_t v68 = v26;
        *(_OWORD *)&v68[9] = *(long long *)((char *)v66 + 25);
        if (!DiscontiguousColumnSlice.isNil(at:)(v25)) {
          break;
        }
        uint64_t v23 = v69;
        if (!--v22) {
          goto LABEL_13;
        }
      }
      Swift::Int v27 = v65;
      (*v56)(v65, v17, v11);
      if ((*v55)(v27, 1, v5) == 1)
      {
        Swift::Int v28 = *v24;
        (*v24)(v65, v11);
        uint64_t v29 = v57;
        (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v57, v58 + *(void *)(v18 + 72) * v25, v5);
        v28(v17, v11);
        int v63 = 0;
        Swift::Int v62 = v25;
      }
      else
      {
        uint64_t v30 = v48;
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v48, v65, v5);
        Swift::Int v50 = v58 + *(void *)(v18 + 72) * v25;
        uint64_t v51 = *(void (**)(char *))(v18 + 16);
        uint64_t v31 = v5;
        uint64_t v32 = v49;
        v51(v49);
        int v33 = sub_22093E460();
        uint64_t v34 = *(void (**)(char *, uint64_t))(v53 + 8);
        v34(v32, v31);
        Swift::Int v35 = v62;
        if (v33) {
          Swift::Int v35 = v25;
        }
        Swift::Int v62 = v35;
        v63 &= v33 ^ 1;
        ((void (*)(char *, Swift::Int, uint64_t))v51)(v32, v50, v31);
        uint64_t v29 = v57;
        sub_22093F2B0();
        long long v36 = v32;
        uint64_t v5 = v31;
        v34(v36, v31);
        int v37 = v30;
        uint64_t v17 = v46;
        v34(v37, v31);
        uint64_t v24 = v43;
        uint64_t v18 = v53;
        uint64_t v11 = v47;
        (*v43)(v17, v47);
      }
      uint64_t v23 = v69;
      v60(v29, 0, 1, v5);
      (*v54)(v17, v29, v11);
      --v22;
    }
    while (v22);
  }
  else
  {
    int v63 = 1;
    Swift::Int v62 = 0;
  }
LABEL_13:
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v17, v11);
  Swift::Int v39 = v41;
  *uint64_t v41 = v62;
  *((unsigned char *)v39 + 8) = v63 & 1;
  return result;
}

uint64_t DiscontiguousColumnSlice<A>.argmax()(uint64_t a1, uint64_t a2)
{
  return sub_2209082C0(a1, a2, &qword_26AD40FE0, (uint64_t (*)(uint64_t))sub_22090746C);
}

uint64_t sub_220904EEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, Swift::Int *a5@<X8>)
{
  uint64_t v58 = a1;
  uint64_t v59 = a4;
  uint64_t v5 = a3;
  uint64_t v41 = a5;
  uint64_t v7 = *(void *)(a3 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](a1);
  uint64_t v49 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v48 = (char *)&v40 - v10;
  uint64_t v11 = sub_22093ED30();
  uint64_t v42 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v57 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v65 = (char *)&v40 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v40 - v16;
  uint64_t v18 = v7;
  uint64_t v60 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  uint64_t v61 = v7 + 56;
  v60((char *)&v40 - v16, 1, 1, v5);
  uint64_t v19 = *(void *)(a2 + 24);
  uint64_t v20 = *(void *)(a2 + 32);
  long long v66 = (long long *)a2;
  uint64_t v21 = sub_2208EE720(v19, v20, *(unsigned char *)(a2 + 40));
  uint64_t v22 = *(void *)(v21 + 16);
  uint64_t v40 = v21;
  if (v22)
  {
    uint64_t v23 = (Swift::Int *)(v21 + 32);
    uint64_t v64 = type metadata accessor for DiscontiguousColumnSlice();
    Swift::Int v62 = 0;
    uint64_t v55 = (unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
    uint64_t v56 = (void (**)(char *, char *, uint64_t))(v42 + 16);
    uint64_t v45 = v7 + 32;
    uint64_t v52 = v7 + 16;
    uint64_t v44 = v7 + 8;
    uint64_t v24 = (void (**)(char *, uint64_t))(v42 + 8);
    uint64_t v54 = (void (**)(char *, char *, uint64_t))(v42 + 32);
    int v63 = 1;
    uint64_t v47 = v11;
    uint64_t v53 = v7;
    uint64_t v46 = v17;
    uint64_t v43 = (void (**)(char *, uint64_t))(v42 + 8);
    do
    {
      while (1)
      {
        Swift::Int v25 = *v23;
        uint64_t v69 = v23 + 1;
        long long v26 = v66[1];
        long long v67 = *v66;
        *(_OWORD *)uint64_t v68 = v26;
        *(_OWORD *)&v68[9] = *(long long *)((char *)v66 + 25);
        if (!DiscontiguousColumnSlice.isNil(at:)(v25)) {
          break;
        }
        uint64_t v23 = v69;
        if (!--v22) {
          goto LABEL_13;
        }
      }
      Swift::Int v27 = v65;
      (*v56)(v65, v17, v11);
      if ((*v55)(v27, 1, v5) == 1)
      {
        Swift::Int v28 = *v24;
        (*v24)(v65, v11);
        uint64_t v29 = v57;
        (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v57, v58 + *(void *)(v18 + 72) * v25, v5);
        v28(v17, v11);
        int v63 = 0;
        Swift::Int v62 = v25;
      }
      else
      {
        uint64_t v30 = v48;
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v48, v65, v5);
        Swift::Int v50 = v58 + *(void *)(v18 + 72) * v25;
        uint64_t v51 = *(void (**)(char *))(v18 + 16);
        uint64_t v31 = v5;
        uint64_t v32 = v49;
        v51(v49);
        int v33 = sub_22093E450();
        uint64_t v34 = *(void (**)(char *, uint64_t))(v53 + 8);
        v34(v32, v31);
        Swift::Int v35 = v62;
        if (v33) {
          Swift::Int v35 = v25;
        }
        Swift::Int v62 = v35;
        v63 &= v33 ^ 1;
        ((void (*)(char *, Swift::Int, uint64_t))v51)(v32, v50, v31);
        uint64_t v29 = v57;
        sub_22093F2A0();
        long long v36 = v32;
        uint64_t v5 = v31;
        v34(v36, v31);
        int v37 = v30;
        uint64_t v17 = v46;
        v34(v37, v31);
        uint64_t v24 = v43;
        uint64_t v18 = v53;
        uint64_t v11 = v47;
        (*v43)(v17, v47);
      }
      uint64_t v23 = v69;
      v60(v29, 0, 1, v5);
      (*v54)(v17, v29, v11);
      --v22;
    }
    while (v22);
  }
  else
  {
    int v63 = 1;
    Swift::Int v62 = 0;
  }
LABEL_13:
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v17, v11);
  Swift::Int v39 = v41;
  *uint64_t v41 = v62;
  *((unsigned char *)v39 + 8) = v63 & 1;
  return result;
}

uint64_t ColumnSlice<A>.min()(uint64_t a1, uint64_t a2)
{
  return sub_2209077D8(a1, a2, (uint64_t (*)(uint64_t))sub_22090748C);
}

uint64_t ColumnSlice<A>.max()(uint64_t a1, uint64_t a2)
{
  return sub_2209077D8(a1, a2, (uint64_t (*)(uint64_t))sub_2209074C0);
}

uint64_t sub_2209054B8@<X0>(uint64_t a1@<X0>, long long *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, void (*a5)(unsigned char *, unsigned char *, uint64_t, uint64_t)@<X5>, unsigned char *a6@<X8>)
{
  uint64_t v48 = a5;
  uint64_t v47 = a4;
  uint64_t v59 = a1;
  uint64_t v57 = sub_22093ED30();
  uint64_t v9 = *(void *)(v57 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v57);
  uint64_t v12 = &v39[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v56 = &v39[-v14];
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v46 = &v39[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v15);
  uint64_t v45 = &v39[-v17];
  uint64_t v65 = v18;
  uint64_t v19 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v18 + 56);
  uint64_t v58 = a6;
  uint64_t v54 = v19;
  uint64_t v55 = v18 + 56;
  v19(a6, 1, 1, a3);
  long long v20 = a2[1];
  long long v60 = *a2;
  long long v61 = v20;
  uint64_t v62 = *((void *)a2 + 4);
  type metadata accessor for Column();
  swift_getWitnessTable();
  sub_22093F3B0();
  uint64_t result = sub_22093F380();
  Swift::Int v23 = v63;
  Swift::Int v22 = v64;
  if (v63 == v64) {
    return result;
  }
  if (v64 < v63)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v63 >= v64)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  uint64_t v24 = type metadata accessor for ColumnSlice();
  uint64_t v51 = (unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v65 + 48);
  uint64_t v52 = (void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v42 = v65 + 32;
  uint64_t v50 = v65 + 16;
  uint64_t v41 = v65 + 8;
  Swift::Int v25 = (void (**)(uint64_t, uint64_t))(v9 + 8);
  uint64_t v49 = (uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v9 + 32);
  uint64_t v44 = a2;
  Swift::Int v43 = v22;
  uint64_t v53 = v24;
  uint64_t v40 = (void (**)(uint64_t, uint64_t))(v9 + 8);
  uint64_t v26 = v57;
  do
  {
    long long v34 = a2[1];
    long long v60 = *a2;
    long long v61 = v34;
    uint64_t v62 = *((void *)a2 + 4);
    uint64_t result = ColumnSlice.isNil(at:)(v23);
    if ((result & 1) == 0)
    {
      Swift::Int v35 = v56;
      long long v36 = v58;
      (*v52)(v56, (uint64_t)v58, v26);
      if ((*v51)(v35, 1, a3) == 1)
      {
        int v37 = v35;
        uint64_t v38 = *v25;
        (*v25)((uint64_t)v37, v26);
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v65 + 16))(v12, v59 + *(void *)(v65 + 72) * v23, a3);
        v38((uint64_t)v36, v26);
      }
      else
      {
        uint64_t v27 = v65;
        Swift::Int v28 = v45;
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v65 + 32))(v45, v35, a3);
        uint64_t v29 = a3;
        uint64_t v30 = v46;
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v27 + 16))(v46, v59 + *(void *)(v27 + 72) * v23, v29);
        v48(v28, v30, v29, v47);
        uint64_t v31 = *(void (**)(unsigned char *, uint64_t))(v27 + 8);
        Swift::Int v22 = v43;
        uint64_t v32 = v30;
        a3 = v29;
        v31(v32, v29);
        int v33 = v28;
        a2 = v44;
        v31(v33, v29);
        Swift::Int v25 = v40;
        (*v40)((uint64_t)v36, v26);
      }
      v54(v12, 0, 1, a3);
      uint64_t result = (*v49)((uint64_t)v36, v12, v26);
    }
    ++v23;
  }
  while (v22 != v23);
  return result;
}

uint64_t ColumnSlice<A>.argmin()(uint64_t a1, uint64_t a2)
{
  return sub_220908780(a1, a2, &qword_26AD40FE0, (uint64_t (*)(uint64_t))sub_2209074F4);
}

uint64_t sub_220905998@<X0>(uint64_t a1@<X0>, long long *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, Swift::Int *a5@<X8>)
{
  uint64_t v50 = a4;
  uint64_t v62 = a1;
  uint64_t v8 = *(void *)(a3 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](a1);
  uint64_t v49 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v48 = (char *)&v41 - v11;
  uint64_t v12 = sub_22093ED30();
  uint64_t v43 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  long long v61 = (char *)&v41 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v63 = v8;
  uint64_t v18 = *(void (**)(void))(v8 + 56);
  int v65 = 1;
  uint64_t v51 = (char *)&v41 - v19;
  uint64_t v59 = v18;
  uint64_t v60 = v8 + 56;
  v18();
  long long v20 = a2[1];
  long long v68 = *a2;
  long long v69 = v20;
  uint64_t v70 = *((void *)a2 + 4);
  uint64_t v73 = a3;
  type metadata accessor for Column();
  swift_getWitnessTable();
  sub_22093F3B0();
  uint64_t result = sub_22093F380();
  Swift::Int v23 = v71;
  Swift::Int v22 = v72;
  uint64_t v42 = a5;
  if (v71 == v72)
  {
    Swift::Int v64 = 0;
    uint64_t v24 = v51;
LABEL_3:
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v24, v12);
    Swift::Int v25 = v42;
    *uint64_t v42 = v64;
    *((unsigned char *)v25 + 8) = v65 & 1;
    return result;
  }
  if (v72 < v71)
  {
    __break(1u);
  }
  else if (v71 < v72)
  {
    uint64_t v26 = v73;
    uint64_t v66 = type metadata accessor for ColumnSlice();
    Swift::Int v64 = 0;
    uint64_t v56 = (unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48);
    uint64_t v57 = (void (**)(char *, char *, uint64_t))(v43 + 16);
    uint64_t v45 = v63 + 32;
    uint64_t v55 = v63 + 16;
    uint64_t v44 = v63 + 8;
    uint64_t v54 = (void (**)(char *, uint64_t))(v43 + 8);
    uint64_t v53 = (void (**)(char *, char *, uint64_t))(v43 + 32);
    int v65 = 1;
    uint64_t v24 = v51;
    uint64_t v47 = a2;
    uint64_t v46 = v12;
    uint64_t v58 = v15;
    Swift::Int v67 = v22;
    do
    {
      long long v37 = a2[1];
      long long v68 = *a2;
      long long v69 = v37;
      uint64_t v70 = *((void *)a2 + 4);
      if (!ColumnSlice.isNil(at:)(v23))
      {
        uint64_t v38 = v61;
        (*v57)(v61, v24, v12);
        if ((*v56)(v38, 1, v26) == 1)
        {
          Swift::Int v39 = v38;
          uint64_t v40 = *v54;
          (*v54)(v39, v12);
          (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v15, v62 + *(void *)(v63 + 72) * v23, v26);
          v40(v24, v12);
          int v65 = 0;
          Swift::Int v64 = v23;
        }
        else
        {
          uint64_t v27 = v63;
          Swift::Int v28 = v48;
          (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v48, v38, v26);
          Swift::Int v29 = v62 + *(void *)(v27 + 72) * v23;
          uint64_t v52 = *(void (**)(char *, Swift::Int, uint64_t))(v27 + 16);
          uint64_t v30 = v49;
          v52(v49, v29, v73);
          int v31 = sub_22093E460();
          uint64_t v32 = *(void (**)(char *, uint64_t))(v63 + 8);
          v32(v30, v73);
          Swift::Int v33 = v64;
          if (v31) {
            Swift::Int v33 = v23;
          }
          Swift::Int v64 = v33;
          v65 &= v31 ^ 1;
          uint64_t v34 = v46;
          v52(v30, v29, v73);
          uint64_t v26 = v73;
          sub_22093F2B0();
          Swift::Int v35 = v30;
          uint64_t v24 = v51;
          v32(v35, v26);
          long long v36 = v28;
          uint64_t v15 = v58;
          v32(v36, v26);
          a2 = v47;
          uint64_t v12 = v34;
          (*v54)(v24, v34);
        }
        ((void (*)(char *, void, uint64_t, uint64_t))v59)(v15, 0, 1, v26);
        (*v53)(v24, v15, v12);
      }
      ++v23;
    }
    while (v67 != v23);
    goto LABEL_3;
  }
  __break(1u);
  return result;
}

uint64_t ColumnSlice<A>.argmax()(uint64_t a1, uint64_t a2)
{
  return sub_220908780(a1, a2, &qword_26AD40FE0, (uint64_t (*)(uint64_t))sub_220907514);
}

uint64_t sub_220905FBC@<X0>(uint64_t a1@<X0>, long long *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, Swift::Int *a5@<X8>)
{
  uint64_t v50 = a4;
  uint64_t v62 = a1;
  uint64_t v8 = *(void *)(a3 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](a1);
  uint64_t v49 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v48 = (char *)&v41 - v11;
  uint64_t v12 = sub_22093ED30();
  uint64_t v43 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  long long v61 = (char *)&v41 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v63 = v8;
  uint64_t v18 = *(void (**)(void))(v8 + 56);
  int v65 = 1;
  uint64_t v51 = (char *)&v41 - v19;
  uint64_t v59 = v18;
  uint64_t v60 = v8 + 56;
  v18();
  long long v20 = a2[1];
  long long v68 = *a2;
  long long v69 = v20;
  uint64_t v70 = *((void *)a2 + 4);
  uint64_t v73 = a3;
  type metadata accessor for Column();
  swift_getWitnessTable();
  sub_22093F3B0();
  uint64_t result = sub_22093F380();
  Swift::Int v23 = v71;
  Swift::Int v22 = v72;
  uint64_t v42 = a5;
  if (v71 == v72)
  {
    Swift::Int v64 = 0;
    uint64_t v24 = v51;
LABEL_3:
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v24, v12);
    Swift::Int v25 = v42;
    *uint64_t v42 = v64;
    *((unsigned char *)v25 + 8) = v65 & 1;
    return result;
  }
  if (v72 < v71)
  {
    __break(1u);
  }
  else if (v71 < v72)
  {
    uint64_t v26 = v73;
    uint64_t v66 = type metadata accessor for ColumnSlice();
    Swift::Int v64 = 0;
    uint64_t v56 = (unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48);
    uint64_t v57 = (void (**)(char *, char *, uint64_t))(v43 + 16);
    uint64_t v45 = v63 + 32;
    uint64_t v55 = v63 + 16;
    uint64_t v44 = v63 + 8;
    uint64_t v54 = (void (**)(char *, uint64_t))(v43 + 8);
    uint64_t v53 = (void (**)(char *, char *, uint64_t))(v43 + 32);
    int v65 = 1;
    uint64_t v24 = v51;
    uint64_t v47 = a2;
    uint64_t v46 = v12;
    uint64_t v58 = v15;
    Swift::Int v67 = v22;
    do
    {
      long long v37 = a2[1];
      long long v68 = *a2;
      long long v69 = v37;
      uint64_t v70 = *((void *)a2 + 4);
      if (!ColumnSlice.isNil(at:)(v23))
      {
        uint64_t v38 = v61;
        (*v57)(v61, v24, v12);
        if ((*v56)(v38, 1, v26) == 1)
        {
          Swift::Int v39 = v38;
          uint64_t v40 = *v54;
          (*v54)(v39, v12);
          (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v15, v62 + *(void *)(v63 + 72) * v23, v26);
          v40(v24, v12);
          int v65 = 0;
          Swift::Int v64 = v23;
        }
        else
        {
          uint64_t v27 = v63;
          Swift::Int v28 = v48;
          (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v48, v38, v26);
          Swift::Int v29 = v62 + *(void *)(v27 + 72) * v23;
          uint64_t v52 = *(void (**)(char *, Swift::Int, uint64_t))(v27 + 16);
          uint64_t v30 = v49;
          v52(v49, v29, v73);
          int v31 = sub_22093E450();
          uint64_t v32 = *(void (**)(char *, uint64_t))(v63 + 8);
          v32(v30, v73);
          Swift::Int v33 = v64;
          if (v31) {
            Swift::Int v33 = v23;
          }
          Swift::Int v64 = v33;
          v65 &= v31 ^ 1;
          uint64_t v34 = v46;
          v52(v30, v29, v73);
          uint64_t v26 = v73;
          sub_22093F2A0();
          Swift::Int v35 = v30;
          uint64_t v24 = v51;
          v32(v35, v26);
          long long v36 = v28;
          uint64_t v15 = v58;
          v32(v36, v26);
          a2 = v47;
          uint64_t v12 = v34;
          (*v54)(v24, v34);
        }
        ((void (*)(char *, void, uint64_t, uint64_t))v59)(v15, 0, 1, v26);
        (*v53)(v24, v15, v12);
      }
      ++v23;
    }
    while (v67 != v23);
    goto LABEL_3;
  }
  __break(1u);
  return result;
}

uint64_t sub_2209065C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v20 = a1;
  uint64_t v10 = *(void *)(a6 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[4] = v13;
  uint64_t v21 = v14;
  sub_22093F0D0();
  uint64_t v25 = a3;
  uint64_t v22 = a3;
  uint64_t v23 = a4;
  uint64_t v24 = a5;
  uint64_t v15 = type metadata accessor for Column();
  uint64_t result = Column.count.getter(v15);
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v17 = result;
    if (result)
    {
      Swift::Int v18 = 0;
      v19[2] = v10 + 8;
      void v19[3] = v10 + 16;
      do
      {
        uint64_t v22 = v25;
        uint64_t v23 = a4;
        uint64_t v24 = a5;
        uint64_t result = Column.isNil(at:)(v18);
        if ((result & 1) == 0)
        {
          (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v20 + *(void *)(v10 + 72) * v18, a6);
          sub_22093F0C0();
          uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, a6);
        }
        ++v18;
      }
      while (v17 != v18);
    }
  }
  return result;
}

uint64_t sub_220906784(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4)
{
  uint64_t v17 = a1;
  uint64_t v6 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[3] = v9;
  uint64_t v18 = v10;
  sub_22093F0D0();
  uint64_t v11 = sub_2208EE720(*((void *)a3 + 3), *((void *)a3 + 4), *((unsigned char *)a3 + 40));
  uint64_t v21 = *(void *)(v11 + 16);
  if (v21)
  {
    type metadata accessor for DiscontiguousColumnSlice();
    uint64_t v12 = 0;
    v16[1] = v6 + 8;
    void v16[2] = v6 + 16;
    do
    {
      Swift::Int v13 = *(void *)(v11 + 8 * v12 + 32);
      long long v14 = a3[1];
      long long v19 = *a3;
      v20[0] = v14;
      *(_OWORD *)((char *)v20 + 9) = *(long long *)((char *)a3 + 25);
      if (!DiscontiguousColumnSlice.isNil(at:)(v13))
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v17 + *(void *)(v6 + 72) * v13, a4);
        sub_22093F0C0();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, a4);
      }
      ++v12;
    }
    while (v21 != v12);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_220906960(uint64_t a1, uint64_t a2)
{
  return sub_220906784(a1, a2, *(long long **)(v2 + 32), *(void *)(v2 + 16));
}

uint64_t ColumnSlice<A>.sum()()
{
  return swift_release();
}

uint64_t sub_220906A6C(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4)
{
  uint64_t v17 = a1;
  uint64_t v6 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  void v16[2] = v9;
  uint64_t v23 = v10;
  sub_22093F0D0();
  long long v11 = a3[1];
  long long v18 = *a3;
  long long v19 = v11;
  uint64_t v20 = *((void *)a3 + 4);
  type metadata accessor for Column();
  swift_getWitnessTable();
  sub_22093F3B0();
  uint64_t result = sub_22093F380();
  Swift::Int v13 = v21;
  Swift::Int v14 = v22;
  if (v21 == v22) {
    return result;
  }
  if (v22 < v21)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v21 >= v22)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  type metadata accessor for ColumnSlice();
  v16[1] = v6 + 16;
  do
  {
    long long v15 = a3[1];
    long long v18 = *a3;
    long long v19 = v15;
    uint64_t v20 = *((void *)a3 + 4);
    uint64_t result = ColumnSlice.isNil(at:)(v13);
    if ((result & 1) == 0)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v17 + *(void *)(v6 + 72) * v13, a4);
      sub_22093F0C0();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a4);
    }
    ++v13;
  }
  while (v14 != v13);
  return result;
}

uint64_t Column<A>.mean()(uint64_t a1, uint64_t a2)
{
  return sub_220906C88(a1, a2, (uint64_t (*)(uint64_t))sub_220907554);
}

{
  return sub_220907D90(a1, a2, &qword_26AD40FD0, (uint64_t (*)(uint64_t))sub_220907FFC);
}

uint64_t sub_220906C88(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  return sub_22091D9E8(a3);
}

uint64_t sub_220906D00@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X8>)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = result;
    MEMORY[0x270FA5388](result);
    v22[0] = v10;
    v22[1] = v11;
    uint64_t v23 = v12;
    uint64_t v24 = v13;
    uint64_t v25 = v14;
    uint64_t v27 = sub_2208BB82C((uint64_t)sub_2209090EC, (uint64_t)&v21, 0, a2);
    MEMORY[0x270FA5388](v27);
    uint64_t v23 = a3;
    uint64_t v24 = a4;
    uint64_t v25 = v8;
    uint64_t v26 = a2;
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B18);
    unint64_t v16 = sub_220843214();
    uint64_t v18 = sub_2208F0D18((void (*)(char *, char *))sub_2208431FC, (uint64_t)v22, v15, a3, MEMORY[0x263F8E628], v16, MEMORY[0x263F8E658], v17);
    swift_bridgeObjectRelease();
    uint64_t v27 = v18;
    long long v19 = (void *)sub_22093E900();
    uint64_t WitnessTable = (void *)swift_getWitnessTable();
    sub_220902CEC((uint64_t)&v27, v19, WitnessTable, a4, a5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t Column<A>.standardDeviation(deltaDegreesOfFreedom:)()
{
  return sub_22091D9E8((uint64_t (*)(uint64_t))sub_220907580);
}

{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD40FD0);
  sub_22091D9E8((uint64_t (*)(uint64_t))sub_22090827C);
  return v1;
}

uint64_t sub_220906F28(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v11 = result;
    MEMORY[0x270FA5388](result);
    uint64_t v32 = v12;
    v27[0] = v13;
    v27[1] = v14;
    uint64_t v28 = v15;
    uint64_t v29 = v16;
    uint64_t v30 = v17;
    uint64_t v19 = v18;
    Swift::Int v33 = (void (*)(char *, uint64_t))sub_2208BB82C((uint64_t)sub_2209090EC, (uint64_t)&v26, 0, a2);
    MEMORY[0x270FA5388](v33);
    uint64_t v28 = a7;
    uint64_t v29 = a8;
    uint64_t v30 = v11;
    uint64_t v31 = a2;
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B18);
    unint64_t v21 = sub_220843214();
    uint64_t v23 = (void (*)(char *, uint64_t))sub_2208F0D18((void (*)(char *, char *))sub_2208431FC, (uint64_t)v27, v20, a7, MEMORY[0x263F8E628], v21, MEMORY[0x263F8E658], v22);
    swift_bridgeObjectRelease();
    Swift::Int v33 = v23;
    uint64_t v24 = (void *)sub_22093E900();
    uint64_t WitnessTable = (void *)swift_getWitnessTable();
    sub_2209032F4(&v33, v19, v24, WitnessTable, a8, v32);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2209070D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = sub_2208EE720(*(void *)(a3 + 24), *(void *)(a3 + 32), *(unsigned char *)(a3 + 40));
  uint64_t v22 = a4;
  uint64_t v23 = a5;
  uint64_t v24 = a3;
  uint64_t v25 = sub_22091B844((uint64_t)sub_2209090D0, (uint64_t)v21, v12);
  _OWORD v20[2] = a4;
  v20[3] = a5;
  v20[4] = a1;
  v20[5] = a2;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B18);
  unint64_t v14 = sub_220843214();
  uint64_t v16 = sub_2208F0D18((void (*)(char *, char *))sub_2208431FC, (uint64_t)v20, v13, a4, MEMORY[0x263F8E628], v14, MEMORY[0x263F8E658], v15);
  swift_bridgeObjectRelease();
  uint64_t v25 = v16;
  uint64_t v17 = (void *)sub_22093E900();
  uint64_t WitnessTable = (void *)swift_getWitnessTable();
  sub_220902CEC((uint64_t)&v25, v17, WitnessTable, a5, a6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_220907234@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_2209070D8(a1, a2, v3[4], v3[2], v3[3], a3);
}

uint64_t sub_220907254@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_220904470(a1, *(long long **)(v2 + 32), *(void *)(v2 + 16), *(void *)(v2 + 24), MEMORY[0x263F8E470], a2);
}

uint64_t sub_220907288@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_220904470(a1, *(long long **)(v2 + 32), *(void *)(v2 + 16), *(void *)(v2 + 24), MEMORY[0x263F8E468], a2);
}

uint64_t sub_2209072BC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_220907314(a1, MEMORY[0x263F8E470], a2);
}

uint64_t sub_2209072E8@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_220907314(a1, MEMORY[0x263F8E468], a2);
}

uint64_t sub_220907314@<X0>(uint64_t a1@<X0>, void (*a2)(char *, char *, uint64_t, uint64_t)@<X2>, char *a3@<X8>)
{
  return sub_220903A10(a1, v3[4], v3[5], v3[6], v3[2], v3[3], a2, a3);
}

uint64_t sub_22090733C(uint64_t a1, uint64_t a2)
{
  return sub_220907368(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void))sub_2209065C0);
}

uint64_t sub_220907368(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, void, void, void, void, void))
{
  return a3(a1, a2, v3[4], v3[5], v3[6], v3[2], v3[3]);
}

uint64_t sub_220907394@<X0>(uint64_t a1@<X0>, Swift::Int *a2@<X8>)
{
  return sub_220907414(a1, MEMORY[0x263F8D170], MEMORY[0x263F8E470], a2);
}

uint64_t sub_2209073D4@<X0>(uint64_t a1@<X0>, Swift::Int *a2@<X8>)
{
  return sub_220907414(a1, MEMORY[0x263F8D168], MEMORY[0x263F8E468], a2);
}

uint64_t sub_220907414@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(char *, char *, uint64_t, uint64_t)@<X2>, void (*a3)(char *, char *, uint64_t, uint64_t)@<X3>, Swift::Int *a4@<X8>)
{
  return sub_220903EB4(a1, v4[4], v4[5], v4[6], v4[2], v4[3], a2, a4, a3);
}

uint64_t sub_22090744C@<X0>(uint64_t a1@<X0>, Swift::Int *a2@<X8>)
{
  return sub_220904930(a1, v2[4], v2[2], v2[3], a2);
}

uint64_t sub_22090746C@<X0>(uint64_t a1@<X0>, Swift::Int *a2@<X8>)
{
  return sub_220904EEC(a1, v2[4], v2[2], v2[3], a2);
}

uint64_t sub_22090748C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_2209054B8(a1, *(long long **)(v2 + 32), *(void *)(v2 + 16), *(void *)(v2 + 24), MEMORY[0x263F8E470], a2);
}

uint64_t sub_2209074C0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_2209054B8(a1, *(long long **)(v2 + 32), *(void *)(v2 + 16), *(void *)(v2 + 24), MEMORY[0x263F8E468], a2);
}

uint64_t sub_2209074F4@<X0>(uint64_t a1@<X0>, Swift::Int *a2@<X8>)
{
  return sub_220905998(a1, *(long long **)(v2 + 32), *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_220907514@<X0>(uint64_t a1@<X0>, Swift::Int *a2@<X8>)
{
  return sub_220905FBC(a1, *(long long **)(v2 + 32), *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_220907534(uint64_t a1, uint64_t a2)
{
  return sub_220906A6C(a1, a2, *(long long **)(v2 + 32), *(void *)(v2 + 16));
}

uint64_t sub_220907554(uint64_t a1, uint64_t a2)
{
  return sub_220907368(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void))sub_220906D00);
}

uint64_t sub_220907580(uint64_t a1, uint64_t a2)
{
  return sub_220906F28(a1, a2, v2[4], v2[5], v2[6], v2[7], v2[2], v2[3]);
}

uint64_t DiscontiguousColumnSlice<A>.standardDeviation(deltaDegreesOfFreedom:)()
{
  return sub_22091D9E8((uint64_t (*)(uint64_t))sub_2209077A0);
}

{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD40FD0);
  sub_22091D9E8((uint64_t (*)(uint64_t))sub_220908740);
  return v1;
}

uint64_t sub_220907634@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v14 = sub_2208EE720(*(void *)(a3 + 24), *(void *)(a3 + 32), *(unsigned char *)(a3 + 40));
  uint64_t v24 = a5;
  uint64_t v25 = a6;
  uint64_t v26 = a3;
  uint64_t v27 = (void (*)(char *, uint64_t))sub_22091B844((uint64_t)sub_2209090D0, (uint64_t)v23, v14);
  void v22[2] = a5;
  v22[3] = a6;
  v22[4] = a1;
  v22[5] = a2;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B18);
  unint64_t v16 = sub_220843214();
  uint64_t v18 = (void (*)(char *, uint64_t))sub_2208F0D18((void (*)(char *, char *))sub_2208431FC, (uint64_t)v22, v15, a5, MEMORY[0x263F8E628], v16, MEMORY[0x263F8E658], v17);
  swift_bridgeObjectRelease();
  uint64_t v27 = v18;
  uint64_t v19 = (void *)sub_22093E900();
  uint64_t WitnessTable = (void *)swift_getWitnessTable();
  sub_2209032F4(&v27, a4, v19, WitnessTable, a6, a7);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2209077A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_220907634(a1, a2, v3[4], v3[5], v3[2], v3[3], a3);
}

uint64_t ColumnSlice<A>.mean()(uint64_t a1, uint64_t a2)
{
  return sub_2209077D8(a1, a2, (uint64_t (*)(uint64_t))sub_220907A74);
}

{
  return sub_220908780(a1, a2, &qword_26AD40FD0, (uint64_t (*)(uint64_t))sub_220908A64);
}

uint64_t sub_2209077D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  return swift_release();
}

uint64_t sub_2209078CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  long long v12 = *(_OWORD *)(a3 + 16);
  v25[0] = *(_OWORD *)a3;
  v25[1] = v12;
  uint64_t v26 = *(void *)(a3 + 32);
  type metadata accessor for Column();
  swift_getWitnessTable();
  sub_22093F3B0();
  sub_22093F380();
  uint64_t v22 = a4;
  uint64_t v23 = a5;
  uint64_t v24 = a3;
  *(void *)&v25[0] = sub_2208BB82C((uint64_t)sub_220908D98, (uint64_t)v21, v27, v28);
  _OWORD v20[2] = a4;
  v20[3] = a5;
  v20[4] = a1;
  v20[5] = a2;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B18);
  unint64_t v14 = sub_220843214();
  uint64_t v16 = sub_2208F0D18((void (*)(char *, char *))sub_2208431FC, (uint64_t)v20, v13, a4, MEMORY[0x263F8E628], v14, MEMORY[0x263F8E658], v15);
  swift_bridgeObjectRelease();
  *(void *)&v25[0] = v16;
  uint64_t v17 = (void *)sub_22093E900();
  uint64_t WitnessTable = (void *)swift_getWitnessTable();
  sub_220902CEC((uint64_t)v25, v17, WitnessTable, a5, a6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_220907A74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_2209078CC(a1, a2, v3[4], v3[2], v3[3], a3);
}

uint64_t ColumnSlice<A>.standardDeviation(deltaDegreesOfFreedom:)()
{
  return swift_release();
}

{
  long long *v0;
  long long v2;

  uint64_t v2 = *v0;
  type metadata accessor for Column();
  swift_getWitnessTable();
  sub_22093F3B0();
  sub_22093F360();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD40FD0);
  sub_22091D9E8((uint64_t (*)(uint64_t))sub_220908D78);
  swift_release();
  return v2;
}

uint64_t sub_220907B98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  long long v14 = *(_OWORD *)(a3 + 16);
  v27[0] = *(_OWORD *)a3;
  v27[1] = v14;
  uint64_t v28 = *(void *)(a3 + 32);
  type metadata accessor for Column();
  swift_getWitnessTable();
  sub_22093F3B0();
  sub_22093F380();
  uint64_t v24 = a5;
  uint64_t v25 = a6;
  uint64_t v26 = a3;
  *(void *)&v27[0] = sub_2208BB82C((uint64_t)sub_220908D98, (uint64_t)v23, v29, v30);
  void v22[2] = a5;
  v22[3] = a6;
  v22[4] = a1;
  v22[5] = a2;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B18);
  unint64_t v16 = sub_220843214();
  uint64_t v18 = sub_2208F0D18((void (*)(char *, char *))sub_2208431FC, (uint64_t)v22, v15, a5, MEMORY[0x263F8E628], v16, MEMORY[0x263F8E658], v17);
  swift_bridgeObjectRelease();
  *(void *)&v27[0] = v18;
  uint64_t v19 = (void *)sub_22093E900();
  uint64_t WitnessTable = (void *)swift_getWitnessTable();
  sub_2209032F4((void (**)(char *, uint64_t))v27, a4, v19, WitnessTable, a6, a7);
  return swift_bridgeObjectRelease();
}

uint64_t sub_220907D50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_220907B98(a1, a2, v3[4], v3[5], v3[2], v3[3], a3);
}

uint64_t sub_220907D90(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  sub_22091D9E8(a4);
  return v6;
}

uint64_t sub_220907E08@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X8>)
{
  uint64_t v35 = result;
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = a2;
    MEMORY[0x270FA5388](result);
    void v32[2] = v10;
    v32[3] = v11;
    v32[4] = v12;
    v32[5] = v13;
    v32[6] = v14;
    uint64_t v15 = sub_2208BB82C((uint64_t)sub_2209090EC, (uint64_t)v32, 0, v8);
    int64_t v16 = *(void *)(v15 + 16);
    if (v16)
    {
      uint64_t v34 = a5;
      uint64_t v38 = MEMORY[0x263F8EE78];
      sub_220826EF8(0, v16, 0);
      uint64_t v17 = 0;
      uint64_t v18 = v38;
      do
      {
        uint64_t v19 = v15;
        uint64_t v36 = *(void *)(v15 + 8 * v17 + 32);
        uint64_t v20 = v8;
        uint64_t v21 = a3;
        uint64_t v22 = a3;
        uint64_t v23 = a4;
        sub_220908DB4((uint64_t)&v36, v22, (double *)&v37);
        uint64_t v24 = v37;
        uint64_t v38 = v18;
        unint64_t v26 = *(void *)(v18 + 16);
        unint64_t v25 = *(void *)(v18 + 24);
        if (v26 >= v25 >> 1)
        {
          uint64_t v33 = v5;
          sub_220826EF8((char *)(v25 > 1), v26 + 1, 1);
          uint64_t v5 = v33;
          uint64_t v18 = v38;
        }
        ++v17;
        *(void *)(v18 + 16) = v26 + 1;
        *(void *)(v18 + 8 * v26 + 32) = v24;
        a4 = v23;
        a3 = v21;
        uint64_t v8 = v20;
        uint64_t v15 = v19;
      }
      while (v16 != v17);
      swift_bridgeObjectRelease();
      a5 = v34;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v18 = MEMORY[0x263F8EE78];
    }
    sub_2208E6FD8(v18, v27);
    uint64_t v29 = v28;
    char v31 = v30;
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)a5 = v29;
    *(unsigned char *)(a5 + 8) = v31 & 1;
  }
  return result;
}

uint64_t sub_220907FFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_220907E08(a1, a2, *(void *)(v3 + 16), *(void *)(v3 + 24), a3);
}

uint64_t sub_2209080A8@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X8>)
{
  uint64_t v28 = result;
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    MEMORY[0x270FA5388](result);
    v24[2] = v9;
    v24[3] = v10;
    v24[4] = v11;
    v24[5] = v12;
    v24[6] = v13;
    uint64_t v14 = sub_2208BB82C((uint64_t)sub_2209090EC, (uint64_t)v24, 0, a2);
    int64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      uint64_t v26 = a5;
      uint64_t v27 = a4;
      uint64_t v25 = a3;
      uint64_t v31 = MEMORY[0x263F8EE78];
      sub_220826EF8(0, v15, 0);
      uint64_t v16 = 0;
      uint64_t v17 = v31;
      do
      {
        uint64_t v29 = *(void *)(v14 + 8 * v16 + 32);
        sub_220908DB4((uint64_t)&v29, v27, (double *)&v30);
        uint64_t v18 = v30;
        uint64_t v31 = v17;
        unint64_t v20 = *(void *)(v17 + 16);
        unint64_t v19 = *(void *)(v17 + 24);
        if (v20 >= v19 >> 1)
        {
          sub_220826EF8((char *)(v19 > 1), v20 + 1, 1);
          uint64_t v17 = v31;
        }
        ++v16;
        *(void *)(v17 + 16) = v20 + 1;
        *(void *)(v17 + 8 * v20 + 32) = v18;
      }
      while (v15 != v16);
      swift_bridgeObjectRelease();
      a3 = v25;
      a5 = v26;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v17 = MEMORY[0x263F8EE78];
    }
    uint64_t v21 = sub_2208E7320(v17, a3);
    char v23 = v22;
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)a5 = v21;
    *(unsigned char *)(a5 + 8) = v23 & 1;
  }
  return result;
}

uint64_t sub_22090827C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_2209080A8(a1, a2, *(void *)(v3 + 56), *(void *)(v3 + 16), a3);
}

uint64_t sub_2209082C0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  sub_22091D9E8(a4);
  return v6;
}

uint64_t sub_220908344@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_2208EE720(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  uint64_t v24 = a2;
  uint64_t v25 = a3;
  uint64_t v26 = a1;
  uint64_t v9 = sub_22091B844((uint64_t)sub_2209090D0, (uint64_t)v23, v8);
  int64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    uint64_t v22 = a4;
    uint64_t v29 = MEMORY[0x263F8EE78];
    sub_220826EF8(0, v10, 0);
    uint64_t v11 = 0;
    uint64_t v12 = v29;
    do
    {
      uint64_t v27 = *(void *)(v9 + 8 * v11 + 32);
      sub_220908DB4((uint64_t)&v27, a2, (double *)&v28);
      uint64_t v13 = v28;
      uint64_t v29 = v12;
      unint64_t v15 = *(void *)(v12 + 16);
      unint64_t v14 = *(void *)(v12 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_220826EF8((char *)(v14 > 1), v15 + 1, 1);
        uint64_t v12 = v29;
      }
      ++v11;
      *(void *)(v12 + 16) = v15 + 1;
      *(void *)(v12 + 8 * v15 + 32) = v13;
    }
    while (v10 != v11);
    swift_bridgeObjectRelease();
    a4 = v22;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v12 = MEMORY[0x263F8EE78];
  }
  sub_2208E6FD8(v12, v16);
  uint64_t v18 = v17;
  char v20 = v19;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a4 = v18;
  *(unsigned char *)(a4 + 8) = v20 & 1;
  return result;
}

uint64_t sub_2209084E4@<X0>(uint64_t a1@<X8>)
{
  return sub_220908344(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_220908598@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_2208EE720(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  uint64_t v25 = a3;
  uint64_t v26 = a4;
  uint64_t v27 = a1;
  uint64_t v11 = sub_22091B844((uint64_t)sub_2209090D0, (uint64_t)v24, v10);
  int64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    uint64_t v22 = a2;
    uint64_t v23 = a5;
    uint64_t v30 = MEMORY[0x263F8EE78];
    sub_220826EF8(0, v12, 0);
    uint64_t v13 = 0;
    uint64_t v14 = v30;
    do
    {
      uint64_t v28 = *(void *)(v11 + 8 * v13 + 32);
      sub_220908DB4((uint64_t)&v28, a3, (double *)&v29);
      uint64_t v15 = v29;
      uint64_t v30 = v14;
      unint64_t v17 = *(void *)(v14 + 16);
      unint64_t v16 = *(void *)(v14 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_220826EF8((char *)(v16 > 1), v17 + 1, 1);
        uint64_t v14 = v30;
      }
      ++v13;
      *(void *)(v14 + 16) = v17 + 1;
      *(void *)(v14 + 8 * v17 + 32) = v15;
    }
    while (v12 != v13);
    swift_bridgeObjectRelease();
    a2 = v22;
    a5 = v23;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = MEMORY[0x263F8EE78];
  }
  uint64_t v18 = sub_2208E7320(v14, a2);
  char v20 = v19;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a5 = v18;
  *(unsigned char *)(a5 + 8) = v20 & 1;
  return result;
}

uint64_t sub_220908740@<X0>(uint64_t a1@<X8>)
{
  return sub_220908598(v1[4], v1[5], v1[2], v1[3], a1);
}

uint64_t sub_220908780(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  long long v8 = *v4;
  type metadata accessor for Column();
  swift_getWitnessTable();
  sub_22093F3B0();
  sub_22093F360();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(a3);
  sub_22091D9E8(a4);
  swift_release();
  return v8;
}

uint64_t sub_220908878@<X0>(long long *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  long long v8 = a1[1];
  long long v28 = *a1;
  long long v29 = v8;
  uint64_t v30 = *((void *)a1 + 4);
  type metadata accessor for Column();
  swift_getWitnessTable();
  sub_22093F3B0();
  sub_22093F380();
  uint64_t v24 = a2;
  uint64_t v25 = a3;
  uint64_t v26 = a1;
  uint64_t v9 = sub_2208BB82C((uint64_t)sub_220908D98, (uint64_t)v23, v31[0], v31[1]);
  int64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    uint64_t v22 = a4;
    *(void *)&long long v28 = MEMORY[0x263F8EE78];
    sub_220826EF8(0, v10, 0);
    uint64_t v11 = 0;
    uint64_t v12 = v28;
    do
    {
      uint64_t v27 = *(void *)(v9 + 8 * v11 + 32);
      sub_220908DB4((uint64_t)&v27, a2, (double *)v31);
      uint64_t v13 = v31[0];
      *(void *)&long long v28 = v12;
      unint64_t v15 = *(void *)(v12 + 16);
      unint64_t v14 = *(void *)(v12 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_220826EF8((char *)(v14 > 1), v15 + 1, 1);
        uint64_t v12 = v28;
      }
      ++v11;
      *(void *)(v12 + 16) = v15 + 1;
      *(void *)(v12 + 8 * v15 + 32) = v13;
    }
    while (v10 != v11);
    swift_bridgeObjectRelease();
    a4 = v22;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v12 = MEMORY[0x263F8EE78];
  }
  sub_2208E6FD8(v12, v16);
  uint64_t v18 = v17;
  char v20 = v19;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a4 = v18;
  *(unsigned char *)(a4 + 8) = v20 & 1;
  return result;
}

uint64_t sub_220908A64@<X0>(uint64_t a1@<X8>)
{
  return sub_220908878(*(long long **)(v1 + 32), *(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_220908B84@<X0>(long long *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  long long v10 = a1[1];
  long long v29 = *a1;
  long long v30 = v10;
  uint64_t v31 = *((void *)a1 + 4);
  type metadata accessor for Column();
  swift_getWitnessTable();
  sub_22093F3B0();
  sub_22093F380();
  uint64_t v25 = a3;
  uint64_t v26 = a4;
  uint64_t v27 = a1;
  uint64_t v11 = sub_2208BB82C((uint64_t)sub_220908D98, (uint64_t)v24, v32[0], v32[1]);
  int64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    uint64_t v22 = a2;
    uint64_t v23 = a5;
    *(void *)&long long v29 = MEMORY[0x263F8EE78];
    sub_220826EF8(0, v12, 0);
    uint64_t v13 = 0;
    uint64_t v14 = v29;
    do
    {
      uint64_t v28 = *(void *)(v11 + 8 * v13 + 32);
      sub_220908DB4((uint64_t)&v28, a3, (double *)v32);
      uint64_t v15 = v32[0];
      *(void *)&long long v29 = v14;
      unint64_t v17 = *(void *)(v14 + 16);
      unint64_t v16 = *(void *)(v14 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_220826EF8((char *)(v16 > 1), v17 + 1, 1);
        uint64_t v14 = v29;
      }
      ++v13;
      *(void *)(v14 + 16) = v17 + 1;
      *(void *)(v14 + 8 * v17 + 32) = v15;
    }
    while (v12 != v13);
    swift_bridgeObjectRelease();
    a2 = v22;
    a5 = v23;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = MEMORY[0x263F8EE78];
  }
  uint64_t v18 = sub_2208E7320(v14, a2);
  char v20 = v19;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a5 = v18;
  *(unsigned char *)(a5 + 8) = v20 & 1;
  return result;
}

uint64_t sub_220908D78@<X0>(uint64_t a1@<X8>)
{
  return sub_220908B84(*(long long **)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

BOOL sub_220908D98(Swift::Int *a1)
{
  return sub_22084318C(a1);
}

uint64_t sub_220908DB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, double *a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 - 8);
  uint64_t v6 = (void *)MEMORY[0x270FA5388](a1);
  long long v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v10 + *(void *)(v9 + 72) * *v6, v11);
  if (sub_22093EDC0() < 65)
  {
    char v14 = sub_22093EDD0();
    uint64_t v15 = sub_22093EDB0();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, a2);
    if (v14) {
      double v13 = (double)v15;
    }
    else {
      double v13 = (double)(unint64_t)v15;
    }
  }
  else
  {
    sub_2208B8B00();
    sub_220838AEC();
    sub_22093E260();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, a2);
    double v13 = *(double *)&v16[1];
  }
  *a3 = v13;
  return result;
}

uint64_t sub_220908F68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(char *, uint64_t, unint64_t)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v14 = sub_2208EE720(*(void *)(a3 + 24), *(void *)(a3 + 32), *(unsigned char *)(a3 + 40));
  uint64_t v24 = a5;
  uint64_t v25 = a6;
  uint64_t v26 = a3;
  uint64_t v27 = sub_22091B844((uint64_t)sub_2209090D0, (uint64_t)v23, v14);
  void v22[2] = a5;
  v22[3] = a6;
  v22[4] = a1;
  v22[5] = a2;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B18);
  unint64_t v16 = sub_220843214();
  uint64_t v18 = sub_2208F0D18((void (*)(char *, char *))sub_2208431FC, (uint64_t)v22, v15, a5, MEMORY[0x263F8E628], v16, MEMORY[0x263F8E658], v17);
  swift_bridgeObjectRelease();
  uint64_t v27 = v18;
  uint64_t v19 = sub_22093E900();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_2208FAF68(a4, v19, WitnessTable, a6, a7);
  return swift_bridgeObjectRelease();
}

BOOL sub_2209090D0(Swift::Int *a1)
{
  return sub_220843270(a1);
}

BOOL sub_2209090EC(Swift::Int *a1)
{
  return sub_2208432E0(a1);
}

uint64_t sub_220909108@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_220908F68(a1, a2, *(void *)(v3 + 32), *(void (**)(char *, uint64_t, unint64_t))(v3 + 40), *(void *)(v3 + 16), *(void *)(v3 + 24), a3);
}

uint64_t DataFrameProtocol.writeJSON(to:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned __int8 v5 = *(unsigned char *)(a2 + 1);
  v10[0] = *(unsigned char *)a2;
  v10[1] = v5;
  long long v11 = *(_OWORD *)(a2 + 8);
  uint64_t result = DataFrameProtocol.jsonRepresentation(options:)(v10, a3, a4);
  if (!v4)
  {
    uint64_t v8 = result;
    unint64_t v9 = v7;
    sub_22093E020();
    return sub_22080B88C(v8, v9);
  }
  return result;
}

uint64_t DataFrameProtocol.jsonRepresentation(options:)(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  void (*v16)(void **__return_ptr, uint64_t, uint64_t);
  void *v17;
  uint64_t v18;
  void *v19;
  char v20;
  Swift::Int v21;
  unint64_t v22;
  Swift::Int v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  id v33;
  void *v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  unsigned char *v47;
  uint64_t v48;
  unsigned char *v49;
  uint64_t v50;
  uint64_t v51;
  char isUniquelyReferenced_nonNull_native;
  char v53;
  unint64_t v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  char v60;
  uint64_t *v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  void *v67;
  uint64_t result;
  unsigned char v69[12];
  int v70;
  uint64_t v71;
  unsigned char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  void *v77;
  uint64_t v78;
  void (*v79)(void **__return_ptr, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  void *v84;
  Swift::Int v85;
  void *v86;
  void (**v87)(unsigned char *, uint64_t);
  void (**v88)(unsigned char *, unsigned char *, uint64_t);
  uint64_t v89;
  uint64_t (*v90)(unsigned char *);
  unsigned char *v91;
  uint64_t v92;
  unsigned char *v93;
  uint64_t v94;
  Swift::Int v95;
  unsigned char v96[32];
  void v97[4];
  uint64_t v98;
  long long v99;
  long long v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  unsigned char *v104;
  void *v105;
  unsigned __int8 v106;
  uint64_t v107;

  uint64_t v4 = v3;
  uint64_t v107 = *MEMORY[0x263EF8340];
  uint64_t v94 = sub_22093E100();
  unint64_t v8 = *(void *)(v94 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v94);
  uint64_t v91 = &v69[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v9);
  uint64_t v93 = &v69[-v11];
  uint64_t v12 = sub_22093E610();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = &v69[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v70 = *a1;
  Swift::Int v71 = a1[1];
  char v90 = (uint64_t (*)(unsigned char *))*((void *)a1 + 1);
  unint64_t v89 = *((void *)a1 + 2);
  unint64_t v16 = *(void (**)(void **__return_ptr, uint64_t, uint64_t))(a3 + 24);
  uint64_t v80 = a3 + 24;
  uint64_t v79 = v16;
  v16(&v101, a2, a3);
  uint64_t v17 = v101;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v18 = v17[2];
  swift_bridgeObjectRelease();
  if (v18)
  {
    (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(a3 + 32))(&v101, a2, a3);
    uint64_t v83 = v101;
    uint64_t v82 = v102;
    uint64_t v15 = v104;
    uint64_t v81 = v103;
    uint64_t v19 = v105;
    char v20 = v106;
    uint64_t v21 = (Swift::Int)v104;
    uint64_t v76 = v106;
    if (!v106) {
      goto LABEL_11;
    }
    if (v106 == 1 && *((void *)v104 + 2))
    {
      uint64_t v21 = *((void *)v104 + 4);
      char v20 = v76;
      goto LABEL_11;
    }
  }
  else
  {
    sub_22093E600();
    uint64_t v19 = (void *)sub_22093E560();
    unint64_t v8 = v22;
    (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v15, v12);
    if (v8 >> 60 != 15) {
      return (uint64_t)v19;
    }
    __break(1u);
  }
  char v20 = v76;
  sub_220883950((uint64_t)v15, (uint64_t)v19, v76);
  if (v24) {
    uint64_t v21 = 0;
  }
  else {
    uint64_t v21 = v23;
  }
LABEL_11:
  sub_220883950((uint64_t)v15, (uint64_t)v19, v20);
  if (v26) {
    uint64_t v27 = 0;
  }
  else {
    uint64_t v27 = v25;
  }
  uint64_t v78 = v27;
  if (v21 == v27)
  {
    uint64_t v86 = (void *)MEMORY[0x263F8EE78];
    uint64_t v28 = v76;
LABEL_16:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22080B6B4((uint64_t)v15, (uint64_t)v19, v28);
    long long v29 = 2;
    if (!v70) {
      long long v29 = 0;
    }
    long long v30 = v29 | v71;
    uint64_t v31 = self;
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F18760);
    uint64_t v32 = (void *)sub_22093E830();
    swift_bridgeObjectRelease();
    uint64_t v101 = 0;
    uint64_t v33 = objc_msgSend(v31, sel_dataWithJSONObject_options_error_, v32, v30, &v101);

    uint64_t v34 = v101;
    if (v33)
    {
      uint64_t v19 = (void *)sub_22093E000();
    }
    else
    {
      uint64_t v19 = v34;
      sub_22093DF20();

      swift_willThrow();
    }
    return (uint64_t)v19;
  }
  v88 = (void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 32);
  uint64_t v87 = (void (**)(unsigned char *, uint64_t))(v8 + 8);
  uint64_t v86 = (void *)MEMORY[0x263F8EE78];
  unint64_t v92 = MEMORY[0x263F8EE58] + 8;
  uint64_t v28 = v76;
  uint64_t v75 = v4;
  uint64_t v74 = a3;
  uint64_t v73 = a2;
  Swift::Int v72 = v15;
  uint64_t v77 = v19;
  while (1)
  {
    uint64_t v101 = v83;
    uint64_t v102 = v82;
    uint64_t v103 = v81;
    uint64_t v104 = v15;
    unint64_t v105 = v19;
    v106 = v28;
    uint64_t v85 = DataFrame.Rows.index(after:)(v21);
    v79(&v101, a2, a3);
    uint64_t v35 = v101;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v36 = v35;
    uint64_t v37 = v35[2];
    if (v37) {
      break;
    }
    swift_bridgeObjectRelease();
    Swift::Int v39 = (void *)MEMORY[0x263F8EE80];
LABEL_44:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v86 = sub_22081CC8C(0, v86[2] + 1, 1, v86);
    }
    uint64_t v66 = v86[2];
    int v65 = v86[3];
    if (v66 >= v65 >> 1) {
      uint64_t v86 = sub_22081CC8C((void *)(v65 > 1), v66 + 1, 1, v86);
    }
    Swift::Int v67 = v86;
    v86[2] = v66 + 1;
    v67[v66 + 4] = v39;
    uint64_t v21 = v85;
    uint64_t v19 = v77;
    if (v85 == v78) {
      goto LABEL_16;
    }
  }
  unint64_t v95 = v21;
  uint64_t v84 = v36;
  uint64_t v38 = (uint64_t)(v36 + 4);
  Swift::Int v39 = (void *)MEMORY[0x263F8EE80];
  while (1)
  {
    sub_22080B5B8(v38, (uint64_t)&v101);
    uint64_t v41 = (uint64_t)v104;
    uint64_t v40 = v105;
    __swift_project_boxed_opaque_existential_1(&v101, (uint64_t)v104);
    uint64_t v42 = (*(uint64_t (**)(uint64_t))(v40[1] + 8))(v41);
    uint64_t v44 = v43;
    uint64_t v45 = (uint64_t)v104;
    uint64_t v46 = v105;
    __swift_project_boxed_opaque_existential_1(&v101, (uint64_t)v104);
    (*(void (**)(uint64_t *__return_ptr, Swift::Int, uint64_t))(v46[1] + 128))(&v98, v95, v45);
    sub_220842FF8((uint64_t)&v98, (uint64_t)v97);
    if (v97[3])
    {
      sub_220842FF8((uint64_t)v97, (uint64_t)v96);
      uint64_t v47 = v93;
      uint64_t v48 = v94;
      if (swift_dynamicCast())
      {
        uint64_t v49 = v91;
        (*v88)(v91, v47, v48);
        uint64_t v50 = v90(v49);
        *((void *)&v100 + 1) = MEMORY[0x263F8D310];
        *(void *)&v99 = v50;
        *((void *)&v99 + 1) = v51;
        (*v87)(v49, v48);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v96);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v96);
        sub_220842FF8((uint64_t)&v98, (uint64_t)&v99);
      }
    }
    else
    {
      v99 = 0u;
      v100 = 0u;
    }
    sub_22086A7A4((uint64_t)v97);
    sub_22086A7A4((uint64_t)&v98);
    sub_220842F90((uint64_t)&v99, (uint64_t)&v98);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v97[0] = v39;
    uint64_t v54 = sub_22081D290(v42, v44);
    uint64_t v55 = v39[2];
    uint64_t v56 = (v53 & 1) == 0;
    uint64_t v57 = v55 + v56;
    if (__OFADD__(v55, v56))
    {
      __break(1u);
LABEL_53:
      __break(1u);
    }
    uint64_t v58 = v53;
    if (v39[3] < v57) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      Swift::Int v39 = (void *)v97[0];
      if ((v53 & 1) == 0) {
        goto LABEL_38;
      }
    }
    else
    {
      sub_220825DE0();
      Swift::Int v39 = (void *)v97[0];
      if ((v58 & 1) == 0)
      {
LABEL_38:
        v39[(v54 >> 6) + 8] |= 1 << v54;
        long long v61 = (uint64_t *)(v39[6] + 16 * v54);
        *long long v61 = v42;
        v61[1] = v44;
        sub_220842F90((uint64_t)&v98, v39[7] + 32 * v54);
        uint64_t v62 = v39[2];
        uint64_t v63 = __OFADD__(v62, 1);
        Swift::Int v64 = v62 + 1;
        if (v63) {
          goto LABEL_53;
        }
        v39[2] = v64;
        swift_bridgeObjectRetain();
        goto LABEL_25;
      }
    }
LABEL_24:
    sub_22085CB8C((uint64_t)&v98, v39[7] + 32 * v54);
LABEL_25:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22080B0D8((uint64_t)&v101);
    v38 += 40;
    if (!--v37)
    {
      swift_bridgeObjectRelease();
      a3 = v74;
      a2 = v73;
      uint64_t v15 = v72;
      uint64_t v28 = v76;
      goto LABEL_44;
    }
  }
  sub_220820320(v57, isUniquelyReferenced_nonNull_native);
  uint64_t v59 = sub_22081D290(v42, v44);
  if ((v58 & 1) == (v60 & 1))
  {
    uint64_t v54 = v59;
    Swift::Int v39 = (void *)v97[0];
    if ((v58 & 1) == 0) {
      goto LABEL_38;
    }
    goto LABEL_24;
  }
  uint64_t result = sub_22093F2F0();
  __break(1u);
  return result;
}

BOOL static CSVType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t CSVType.hash(into:)()
{
  return sub_22093F440();
}

uint64_t CSVType.hashValue.getter()
{
  return sub_22093F490();
}

unint64_t sub_220909B98()
{
  unint64_t result = qword_267F199C8;
  if (!qword_267F199C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F199C8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CSVType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x220909CB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CSVType()
{
  return &type metadata for CSVType;
}

uint64_t sub_220909CF0(uint64_t a1, uint64_t a2)
{
  int v3 = v2;
  uint64_t v6 = v2[1];
  if (*(void *)(v6 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_22081D290(a1, a2);
    if (v8)
    {
      uint64_t v9 = *(void *)(*(void *)(v6 + 56) + 8 * v7);
      swift_bridgeObjectRelease();
      uint64_t v15 = 0;
      unint64_t v16 = 0xE000000000000000;
      sub_22093E6C0();
      swift_bridgeObjectRetain();
      sub_22093E3D0();
      swift_bridgeObjectRelease();
      uint64_t v10 = v9 + 1;
      if (!__OFADD__(v9, 1)) {
        goto LABEL_9;
      }
      __break(1u);
    }
    swift_bridgeObjectRelease();
  }
  if ((sub_220812DA0(a1, a2, *v3) & 1) == 0)
  {
    swift_bridgeObjectRetain();
    goto LABEL_11;
  }
  uint64_t v15 = 0;
  unint64_t v16 = 0xE000000000000000;
  sub_22093E6C0();
  swift_bridgeObjectRetain();
  sub_22093E3D0();
  swift_bridgeObjectRelease();
  uint64_t v10 = v3[2];
LABEL_9:
  sub_22093F1A0();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  uint64_t v11 = v15;
  unint64_t v12 = v16;
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = v3[1];
  v3[1] = 0x8000000000000000;
  sub_22080AF54(v10, a1, a2, isUniquelyReferenced_nonNull_native);
  v3[1] = v15;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1 = v11;
  a2 = v12;
LABEL_11:
  swift_bridgeObjectRetain();
  sub_220827238(&v15, a1, a2);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_220909EF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v73 = a4;
  uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41160);
  uint64_t v7 = *(void *)(v84 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v83 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41158);
  MEMORY[0x270FA5388]();
  uint64_t v82 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41150);
  uint64_t v10 = *(void *)(v89 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v79 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = sub_22080CCF4(MEMORY[0x263F8EE78]);
  uint64_t v13 = *(void *)(a1 + 56);
  uint64_t v87 = a1 + 56;
  uint64_t v14 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  int64_t v88 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v80 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  uint64_t v81 = (void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v76 = (void (**)(char *, uint64_t, uint64_t))(v10 + 32);
  uint64_t v74 = (uint64_t (**)(char *, uint64_t))(v10 + 8);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v18 = 0;
  uint64_t v78 = 0;
  uint64_t v75 = a2;
  uint64_t v86 = a1;
LABEL_4:
  unint64_t v85 = v12;
  while (1)
  {
    while (1)
    {
      do
      {
        if (v16)
        {
          unint64_t v19 = __clz(__rbit64(v16));
          v16 &= v16 - 1;
          unint64_t v20 = v19 | (v18 << 6);
        }
        else
        {
          if (__OFADD__(v18++, 1)) {
            goto LABEL_57;
          }
          if (v18 >= v88)
          {
LABEL_55:
            uint64_t result = swift_release();
            Swift::Int v71 = v73;
            *uint64_t v73 = a1;
            v71[1] = v12;
            v71[2] = 1;
            v71[3] = a2;
            v71[4] = a3;
            return result;
          }
          unint64_t v22 = *(void *)(v87 + 8 * v18);
          if (!v22)
          {
            int64_t v23 = v18 + 1;
            if (v18 + 1 >= v88) {
              goto LABEL_55;
            }
            unint64_t v22 = *(void *)(v87 + 8 * v23);
            if (!v22)
            {
              int64_t v23 = v18 + 2;
              if (v18 + 2 >= v88) {
                goto LABEL_55;
              }
              unint64_t v22 = *(void *)(v87 + 8 * v23);
              if (!v22)
              {
                int64_t v23 = v18 + 3;
                if (v18 + 3 >= v88) {
                  goto LABEL_55;
                }
                unint64_t v22 = *(void *)(v87 + 8 * v23);
                if (!v22)
                {
                  while (1)
                  {
                    int64_t v18 = v23 + 1;
                    if (__OFADD__(v23, 1)) {
                      goto LABEL_59;
                    }
                    if (v18 >= v88) {
                      goto LABEL_55;
                    }
                    unint64_t v22 = *(void *)(v87 + 8 * v18);
                    ++v23;
                    if (v22) {
                      goto LABEL_19;
                    }
                  }
                }
              }
            }
            int64_t v18 = v23;
          }
LABEL_19:
          unint64_t v16 = (v22 - 1) & v22;
          unint64_t v20 = __clz(__rbit64(v22)) + (v18 << 6);
        }
        uint64_t v24 = (void *)(*(void *)(a1 + 48) + 16 * v20);
        unint64_t v25 = v24[1];
        if ((v25 & 0x2000000000000000) != 0) {
          uint64_t v26 = HIBYTE(v25) & 0xF;
        }
        else {
          uint64_t v26 = *v24 & 0xFFFFFFFFFFFFLL;
        }
      }
      while (!v26);
      int64_t v90 = v18;
      unint64_t v91 = v16;
      swift_bridgeObjectRetain();
      unint64_t v27 = sub_22093E680();
      if (sub_22093E750() == a2 && v28 == a3) {
        goto LABEL_37;
      }
      char v30 = sub_22093F250();
      swift_bridgeObjectRelease();
      if (v30) {
        goto LABEL_38;
      }
      if (v27 >= 0x4000) {
        break;
      }
LABEL_36:
      uint64_t result = swift_bridgeObjectRelease();
      a1 = v86;
LABEL_6:
      int64_t v18 = v90;
      unint64_t v16 = v91;
    }
    while (1)
    {
      unint64_t v31 = sub_22093E680();
      if (sub_22093E750() == a2 && v32 == a3) {
        break;
      }
      char v34 = sub_22093F250();
      swift_bridgeObjectRelease();
      if (v34) {
        goto LABEL_38;
      }
      if (!(v31 >> 14)) {
        goto LABEL_36;
      }
    }
LABEL_37:
    swift_bridgeObjectRelease();
LABEL_38:
    if (4 * v26 < (unint64_t)sub_22093E670() >> 14) {
      break;
    }
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_22093E770();
    unint64_t v37 = v36;
    unint64_t v39 = v38;
    unint64_t v41 = v40;
    swift_bridgeObjectRelease();
    unint64_t v92 = v35;
    unint64_t v93 = v37;
    unint64_t v94 = v39;
    unint64_t v95 = v41;
    uint64_t v42 = v83;
    sub_22093E1C0();
    sub_22090A65C();
    sub_22090A6B0();
    uint64_t v43 = (uint64_t)v82;
    uint64_t v44 = v84;
    sub_22093E3E0();
    (*v81)(v42, v44);
    swift_bridgeObjectRelease();
    uint64_t v45 = v89;
    if ((*v80)(v43, 1, v89) == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t result = sub_22090A70C(v43);
      unint64_t v12 = v85;
      a1 = v86;
      goto LABEL_6;
    }
    uint64_t v46 = a3;
    (*v76)(v79, v43, v45);
    sub_22093E1D0();
    uint64_t v47 = v92;
    uint64_t v48 = v93;
    uint64_t v49 = v95;
    if (!((v93 ^ v92) >> 14)) {
      goto LABEL_58;
    }
    uint64_t v50 = v94;
    uint64_t v51 = v78;
    uint64_t v77 = sub_2208CE848(v92, v93, v94, v95, 10);
    uint64_t v78 = v51;
    if ((v52 & 0x100) != 0)
    {
      uint64_t v54 = sub_2208CE4D8(v47, v48, v50, v49, 10);
      char v56 = v55;
      uint64_t result = swift_bridgeObjectRelease();
      if (v56) {
        goto LABEL_60;
      }
    }
    else
    {
      char v53 = v52;
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v54 = (unsigned __int8 *)v77;
      if (v53) {
        goto LABEL_60;
      }
    }
    a3 = v46;
    a2 = v75;
    unint64_t v12 = v85;
    uint64_t v57 = sub_22093E770();
    uint64_t v59 = v58;
    uint64_t v61 = v60;
    uint64_t v63 = v62;
    swift_bridgeObjectRelease();
    uint64_t v64 = MEMORY[0x223C69D50](v57, v59, v61, v63);
    uint64_t v66 = v65;
    swift_bridgeObjectRelease();
    a1 = v86;
    unint64_t v16 = v91;
    if (!*(void *)(v12 + 16)) {
      goto LABEL_54;
    }
    swift_bridgeObjectRetain();
    uint64_t v67 = sub_22081D290(v64, v66);
    if ((v68 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_54:
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v92 = v12;
      sub_22080AF54((uint64_t)v54, v64, v66, isUniquelyReferenced_nonNull_native);
      unint64_t v12 = v92;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = (*v74)(v79, v89);
      int64_t v18 = v90;
      goto LABEL_4;
    }
    uint64_t v69 = *(void *)(*(void *)(v12 + 56) + 8 * v67);
    swift_bridgeObjectRelease();
    if (v69 < (uint64_t)v54) {
      goto LABEL_54;
    }
    (*v74)(v79, v89);
    uint64_t result = swift_bridgeObjectRelease();
    int64_t v18 = v90;
  }
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
  return result;
}

unint64_t sub_22090A65C()
{
  unint64_t result = qword_267F199D0;
  if (!qword_267F199D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F199D0);
  }
  return result;
}

unint64_t sub_22090A6B0()
{
  unint64_t result = qword_267F199D8;
  if (!qword_267F199D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26AD41160);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F199D8);
  }
  return result;
}

uint64_t sub_22090A70C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41158);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22090A76C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, unint64_t *a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD411B8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22080B550(a1, (uint64_t)v8);
  uint64_t v9 = sub_22093E100();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_2208573C0((uint64_t)v8);
    unint64_t v11 = 0xE300000000000000;
    uint64_t v12 = 7104878;
  }
  else
  {
    type metadata accessor for FormattingOptions();
    sub_22093E050();
    sub_22090A8FC();
    sub_22093E0F0();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    uint64_t v12 = v17[0];
    unint64_t v11 = v17[1];
  }
  unint64_t v13 = sub_22087EC94(a2, v12, v11);
  unint64_t v15 = v14;
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v13;
  a3[1] = v15;
  return result;
}

unint64_t sub_22090A8FC()
{
  unint64_t result = qword_267F199E0;
  if (!qword_267F199E0)
  {
    sub_22093E050();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F199E0);
  }
  return result;
}

double sub_22090A958@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v10 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v12 = &v22[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v28 = v13;
  uint64_t v29 = v14;
  uint64_t v30 = v5;
  uint64_t v15 = sub_22091B5D8((void (*)(uint64_t *__return_ptr, void *))sub_22091B544, (uint64_t)v27, a1);
  uint64_t v24 = a2;
  uint64_t v25 = a3;
  uint64_t v26 = v5;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_22091A7B8(v15, a1, (void (*)(long long *__return_ptr, uint64_t, uint64_t, uint64_t))sub_22091B568);
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v10 + 16))(v12, v5, a2);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v16;
  uint64_t v23 = v15;
  int64_t v18 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_267F18588);
  unint64_t v19 = sub_22091ACE0();
  sub_22093C820((uint64_t)v12, (uint64_t)sub_22091ACC0, v17, (void (*)(void))sub_22091586C, 0, (void (*)(unint64_t *))sub_22091B5BC, (uint64_t)v22, v18, (uint64_t *)v31, (uint64_t)&type metadata for AnyHashableBuilder, a2, v19, (uint64_t)&off_26B59CD90, a3);
  (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v12, a2);
  swift_bridgeObjectRelease();
  double result = *(double *)v31;
  long long v21 = v31[1];
  *(_OWORD *)a4 = v31[0];
  *(_OWORD *)(a4 + 16) = v21;
  *(void *)(a4 + 32) = v32;
  return result;
}

uint64_t DataFrameProtocol.grouped<A>(by:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t *a6@<X8>)
{
  uint64_t v12 = (uint64_t *)MEMORY[0x270FA5388](a1);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *v12;
  uint64_t v16 = v12[1];
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v14, v6, a2);
  swift_bridgeObjectRetain();
  return sub_2208F2B4C((uint64_t)v14, v15, v16, a3, a2, a5, a4, a6);
}

double DataFrameProtocol.grouped<A, B>(by:_:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X7>, _OWORD *a7@<X8>)
{
  void (*v15)(long long *__return_ptr, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t WitnessTable;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  double result;
  long long v42;
  _OWORD *v43;
  uint64_t v44;
  void v45[2];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _OWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60[16];
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  long long v71;
  uint64_t v72;
  long long v73;
  long long v74;
  uint64_t v75;

  char v55 = a6;
  uint64_t v54 = a5;
  char v53 = a4;
  __int16 v52 = a3;
  char v56 = a7;
  uint64_t v59 = *(void *)(a2 - 8);
  uint64_t v8 = (uint64_t *)MEMORY[0x270FA5388](a1);
  uint64_t v58 = (uint64_t)v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v8[1];
  uint64_t v49 = *v8;
  uint64_t v10 = v49;
  uint64_t v48 = v11;
  uint64_t v13 = *v12;
  uint64_t v46 = v12[1];
  uint64_t v57 = v14;
  uint64_t v15 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v14 + 24);
  v15(&v73, v16, v14);
  Swift::Int v71 = v73;
  uint64_t v72 = v74;
  uint64_t v51 = sub_22080BA90(v10, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v17 = v45[1];
  int64_t v18 = v57;
  v15(&v73, a2, v57);
  Swift::Int v71 = v73;
  uint64_t v72 = v74;
  uint64_t v19 = v46;
  uint64_t v47 = sub_22080BA90(v13, v46);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16))(v58, v17, a2);
  unint64_t v20 = (void *)swift_allocObject();
  long long v21 = v52;
  _OWORD v20[2] = a2;
  v20[3] = v21;
  unint64_t v22 = v53;
  v20[4] = v53;
  v20[5] = v18;
  uint64_t v23 = v54;
  uint64_t v24 = v55;
  void v20[6] = v54;
  v20[7] = v24;
  uint64_t v25 = v48;
  v20[8] = v49;
  v20[9] = v25;
  v20[10] = v13;
  v20[11] = v19;
  uint64_t v26 = (void *)swift_allocObject();
  unint64_t v27 = a2;
  uint64_t v50 = a2;
  v26[2] = a2;
  v26[3] = v21;
  uint64_t v28 = v21;
  void v26[4] = v22;
  v26[5] = v18;
  uint64_t v29 = v23;
  v26[6] = v23;
  v26[7] = v24;
  uint64_t v61 = v27;
  uint64_t v62 = v28;
  uint64_t v63 = v22;
  uint64_t v64 = v18;
  uint64_t v65 = v23;
  uint64_t v66 = v24;
  uint64_t v30 = v24;
  uint64_t v67 = v51;
  char v68 = v47;
  unint64_t v31 = sub_22093ED30();
  uint64_t v32 = sub_22093ED30();
  uint64_t v70 = v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v69 = v30;
  char v34 = swift_getWitnessTable();
  *(void *)&uint64_t v73 = v31;
  *((void *)&v73 + 1) = v32;
  *(void *)&uint64_t v74 = WitnessTable;
  *((void *)&v74 + 1) = v34;
  uint64_t v35 = (char *)type metadata accessor for Tuple2();
  *(void *)&uint64_t v73 = v28;
  *((void *)&v73 + 1) = v22;
  *(void *)&uint64_t v74 = v29;
  *((void *)&v74 + 1) = v30;
  unint64_t v36 = type metadata accessor for ColumnBuilder2();
  unint64_t v37 = swift_getWitnessTable();
  unint64_t v38 = swift_getWitnessTable();
  unint64_t v39 = v50;
  uint64_t v44 = v36;
  unint64_t v40 = v58;
  sub_22093C820(v58, (uint64_t)sub_220918560, (uint64_t)v20, (void (*)(void))sub_2209185A8, (uint64_t)v26, (void (*)(unint64_t *))sub_2209188C8, (uint64_t)v60, v35, (uint64_t *)&v73, v44, v50, v37, v38, v57);
  (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v40, v39);
  double result = *(double *)&v73;
  uint64_t v42 = v74;
  uint64_t v43 = v56;
  *char v56 = v73;
  v43[1] = v42;
  *((void *)v43 + 4) = v75;
  return result;
}

double DataFrameProtocol.grouped<A, B, C>(by:_:_:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, _OWORD *a7@<X8>, uint64_t a8, uint64_t a9, uint64_t a10)
{
  void (*v20)(long long *__return_ptr, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t WitnessTable;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  double result;
  long long v52;
  _OWORD *v53;
  uint64_t v54;
  void v55[2];
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _OWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76[16];
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  long long v88;
  long long v89;
  uint64_t v90;
  uint64_t v91;
  long long v92;
  uint64_t v93;

  uint64_t v64 = a5;
  uint64_t v63 = a4;
  Swift::Int v71 = a3;
  uint64_t v65 = a7;
  uint64_t v70 = a10;
  uint64_t v12 = *(void *)(a2 - 8);
  uint64_t v69 = a9;
  char v68 = a8;
  uint64_t v74 = v12;
  uint64_t v13 = (uint64_t *)MEMORY[0x270FA5388](a1);
  uint64_t v73 = (uint64_t)v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = v13[1];
  uint64_t v61 = *v13;
  uint64_t v16 = v61;
  uint64_t v72 = v15;
  uint64_t v67 = *v17;
  uint64_t v75 = v17[1];
  uint64_t v59 = *v18;
  uint64_t v58 = v18[1];
  unint64_t v20 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v19 + 24);
  v20(&v88, v21, v19);
  unint64_t v92 = v88;
  unint64_t v93 = v89;
  uint64_t v62 = sub_22080BA90(v16, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v22 = v55[1];
  v20(&v88, a2, a6);
  unint64_t v92 = v88;
  unint64_t v93 = v89;
  uint64_t v60 = sub_22080BA90(v67, v75);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v66 = a6;
  v20(&v88, a2, a6);
  unint64_t v92 = v88;
  unint64_t v93 = v89;
  uint64_t v23 = v59;
  uint64_t v24 = v58;
  char v56 = sub_22080BA90(v59, v58);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 16))(v73, v22, a2);
  uint64_t v25 = (void *)swift_allocObject();
  uint64_t v26 = v71;
  _OWORD v25[2] = a2;
  v25[3] = v26;
  unint64_t v27 = v63;
  v25[4] = v63;
  uint64_t v28 = v64;
  v25[5] = v64;
  v25[6] = a6;
  uint64_t v29 = v68;
  uint64_t v30 = v69;
  v25[7] = v68;
  v25[8] = v30;
  unint64_t v31 = v70;
  uint64_t v32 = v61;
  v25[9] = v70;
  v25[10] = v32;
  uint64_t v33 = v67;
  v25[11] = v72;
  v25[12] = v33;
  v25[13] = v75;
  v25[14] = v23;
  v25[15] = v24;
  char v34 = (void *)swift_allocObject();
  uint64_t v57 = a2;
  v34[2] = a2;
  v34[3] = v26;
  v34[4] = v27;
  v34[5] = v28;
  uint64_t v35 = v66;
  v34[6] = v66;
  v34[7] = v29;
  unint64_t v36 = v29;
  v34[8] = v30;
  v34[9] = v31;
  uint64_t v77 = a2;
  uint64_t v78 = v26;
  uint64_t v79 = v27;
  uint64_t v80 = v28;
  unint64_t v37 = v27;
  uint64_t v81 = v35;
  uint64_t v82 = v36;
  uint64_t v83 = v30;
  uint64_t v84 = v31;
  unint64_t v85 = v62;
  uint64_t v86 = v60;
  uint64_t v87 = v56;
  unint64_t v38 = sub_22093ED30();
  unint64_t v39 = v37;
  unint64_t v40 = sub_22093ED30();
  unint64_t v41 = sub_22093ED30();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v43 = swift_getWitnessTable();
  uint64_t v44 = swift_getWitnessTable();
  *(void *)&int64_t v88 = v38;
  *((void *)&v88 + 1) = v40;
  *(void *)&uint64_t v89 = v41;
  *((void *)&v89 + 1) = WitnessTable;
  int64_t v90 = v43;
  unint64_t v91 = v44;
  uint64_t v45 = (char *)type metadata accessor for Tuple3();
  *(void *)&int64_t v88 = v71;
  *((void *)&v88 + 1) = v39;
  *(void *)&uint64_t v89 = v28;
  *((void *)&v89 + 1) = v68;
  int64_t v90 = v69;
  unint64_t v91 = v70;
  uint64_t v46 = type metadata accessor for ColumnBuilder3();
  uint64_t v47 = swift_getWitnessTable();
  uint64_t v48 = swift_getWitnessTable();
  uint64_t v49 = v57;
  uint64_t v54 = v46;
  uint64_t v50 = v73;
  sub_22093C820(v73, (uint64_t)sub_22091AA9C, (uint64_t)v25, (void (*)(void))sub_22091AAEC, (uint64_t)v34, (void (*)(unint64_t *))sub_22091AB20, (uint64_t)v76, v45, (uint64_t *)&v88, v54, v57, v47, v48, v66);
  (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v50, v49);
  double result = *(double *)&v88;
  __int16 v52 = v89;
  char v53 = v65;
  *uint64_t v65 = v88;
  v53[1] = v52;
  *((void *)v53 + 4) = v90;
  return result;
}

uint64_t sub_22090B6C4()
{
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18720);
  uint64_t v46 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  uint64_t v53 = (uint64_t)&v43 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD411B8);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v45 = (uint64_t)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v49 = (uint64_t)&v43 - v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v43 - v7;
  unint64_t v9 = sub_22080D1A8(MEMORY[0x263F8EE78]);
  uint64_t v10 = *(void *)(v0 + 16);
  long long v58 = *(_OWORD *)(v0 + 24);
  uint64_t v48 = v0;
  unsigned __int8 v59 = *(unsigned char *)(v0 + 40);
  uint64_t v11 = v59;
  uint64_t v50 = *((void *)&v58 + 1);
  uint64_t v12 = v58;
  uint64_t v51 = v10;
  uint64_t v43 = v58;
  if (v59)
  {
    if (v59 == 1 && *(void *)(v58 + 16))
    {
      uint64_t v13 = (uint64_t *)(v58 + 32);
    }
    else
    {
      uint64_t v14 = v51;
      swift_beginAccess();
      uint64_t v15 = *(void *)(v14 + 16);
      if (!v15) {
        goto LABEL_43;
      }
      uint64_t v13 = (uint64_t *)(v15 + 8);
    }
    uint64_t v43 = *v13;
  }
  uint64_t v16 = v51;
  uint64_t v54 = (void **)(v51 + 16);
  uint64_t v17 = swift_beginAccess();
  int64_t v18 = *(void **)(v16 + 16);
  if (!v18) {
    goto LABEL_41;
  }
  uint64_t v19 = 0;
  uint64_t v44 = v12 + 32;
  unint64_t v20 = (void *)MEMORY[0x263F8EE78];
  uint64_t v21 = v43;
  while (1)
  {
    if (v21 == v18[1]) {
      goto LABEL_36;
    }
    uint64_t v56 = v21;
    MEMORY[0x270FA5388](v17);
    uint64_t v41 = (uint64_t)&v56;
    uint64_t v22 = v50;
    sub_220831F30(v12, v50, v11);
    sub_220831F30(v12, v22, v11);
    unint64_t v23 = sub_2208FD268((uint64_t (*)(long long *))sub_220894728, (uint64_t)(&v43 - 4), v12, v22, v11);
    sub_220894638((uint64_t)&v58);
    if (!v11) {
      break;
    }
    if (v11 != 1)
    {
      if (v23)
      {
        int v42 = 0;
        uint64_t v41 = 91;
        goto LABEL_51;
      }
      goto LABEL_49;
    }
    unint64_t v25 = *(void *)(v12 + 16);
    if (v23 == v25)
    {
      sub_220894638((uint64_t)&v58);
LABEL_48:
      uint64_t v43 = v21;
LABEL_49:
      uint64_t v21 = v43;
LABEL_50:
      uint64_t v56 = 0;
      unint64_t v57 = 0xE000000000000000;
      sub_22093EEA0();
      swift_bridgeObjectRelease();
      uint64_t v56 = 0x6E6F697469736F70;
      unint64_t v57 = 0xE900000000000020;
      uint64_t v55 = v21;
      sub_22093F1A0();
      sub_22093E6C0();
      swift_bridgeObjectRelease();
      sub_22093E6C0();
      int v42 = 0;
      uint64_t v41 = 169;
      goto LABEL_51;
    }
    if (v23 >= v25) {
      goto LABEL_39;
    }
    uint64_t v24 = *(void *)(v44 + 16 * v23);
    sub_220894638((uint64_t)&v58);
LABEL_20:
    if (v56 < v24) {
      goto LABEL_50;
    }
    if (v21 < 0) {
      goto LABEL_44;
    }
    uint64_t v26 = *v54;
    if (!*v54) {
      goto LABEL_42;
    }
    if (v21 >= v26[1]) {
      goto LABEL_44;
    }
    uint64_t v27 = v49;
    sub_220891810(v21, v26, v49);
    sub_220834D3C(v27, (uint64_t)v8, qword_26AD411B8);
    if (*(void *)(v9 + 16) && (unint64_t v28 = sub_22081D640((uint64_t)v8), (v29 & 1) != 0))
    {
      unint64_t v30 = *(void *)(*(void *)(v9 + 56) + 8 * v28);
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        if ((v30 & 0x8000000000000000) != 0) {
          goto LABEL_35;
        }
      }
      else
      {
        unint64_t v20 = (void *)sub_22080AC10(v20);
        if ((v30 & 0x8000000000000000) != 0)
        {
LABEL_35:
          __break(1u);
LABEL_36:
          swift_bridgeObjectRelease();
          return (uint64_t)v20;
        }
      }
      if (v30 >= v20[2]) {
        goto LABEL_40;
      }
      sub_220869870(v21, v21 + 1);
    }
    else
    {
      uint64_t v52 = v19;
      uint64_t v31 = v11;
      uint64_t v32 = v12;
      uint64_t v33 = v45;
      sub_220835280((uint64_t)v8, v45, qword_26AD411B8);
      uint64_t v34 = v20[2];
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v56 = v9;
      sub_22080B3A8(v34, v33, isUniquelyReferenced_nonNull_native);
      unint64_t v36 = v56;
      swift_bridgeObjectRelease();
      sub_2208352E4(v33, qword_26AD411B8);
      uint64_t v37 = v53 + *(int *)(v47 + 48);
      sub_220835280((uint64_t)v8, v53, qword_26AD411B8);
      *(void *)uint64_t v37 = v21;
      *(void *)(v37 + 8) = v21 + 1;
      *(unsigned char *)(v37 + 16) = 0;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v20 = (void *)sub_22081CDDC(0, v20[2] + 1, 1, v20);
      }
      unint64_t v39 = v20[2];
      unint64_t v38 = v20[3];
      unint64_t v9 = v36;
      if (v39 >= v38 >> 1) {
        unint64_t v20 = (void *)sub_22081CDDC(v38 > 1, v39 + 1, 1, v20);
      }
      uint64_t v12 = v32;
      _OWORD v20[2] = v39 + 1;
      sub_220834D3C(v53, (uint64_t)v20+ ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))+ *(void *)(v46 + 72) * v39, &qword_267F18720);
      uint64_t v11 = v31;
      uint64_t v19 = v52;
    }
    uint64_t v21 = sub_2208937D4(v21);
    uint64_t v17 = sub_2208352E4((uint64_t)v8, qword_26AD411B8);
    int64_t v18 = *v54;
    if (!*v54) {
      goto LABEL_41;
    }
  }
  uint64_t v24 = v12;
  if (!v23) {
    goto LABEL_20;
  }
  if (v23 == 1) {
    goto LABEL_48;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  int v42 = 0;
  uint64_t v41 = 128;
LABEL_51:
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

uint64_t sub_22090BDB4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18720);
  uint64_t v45 = *(void *)(v2 - 8);
  uint64_t v46 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD411B8);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v49 = (uint64_t)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v42 - v9;
  uint64_t v11 = (void *)MEMORY[0x263F8EE78];
  uint64_t v12 = (void *)sub_22080D1A8(MEMORY[0x263F8EE78]);
  uint64_t v44 = *(void *)(a1 + 16);
  if (!v44)
  {
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v11;
  }
  unint64_t v13 = 0;
  uint64_t v14 = *(unsigned __int8 *)(v6 + 80);
  v42[1] = v5;
  uint64_t v43 = a1 + ((v14 + 32) & ~v14);
  uint64_t v48 = *(void *)(v6 + 72);
  uint64_t v15 = qword_26AD411B8;
  while (1)
  {
    sub_220835280(v43 + v48 * v13, (uint64_t)v10, v15);
    if (!v12[2]) {
      break;
    }
    unint64_t v16 = sub_22081D640((uint64_t)v10);
    if ((v17 & 1) == 0) {
      break;
    }
    unint64_t v18 = *(void *)(v12[7] + 8 * v16);
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      if ((v18 & 0x8000000000000000) != 0) {
        goto LABEL_27;
      }
    }
    else
    {
      uint64_t v11 = (void *)sub_22080AC10(v11);
      if ((v18 & 0x8000000000000000) != 0)
      {
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
    }
    if (v18 >= v11[2]) {
      goto LABEL_31;
    }
    sub_220869870(v13, v13 + 1);
    ++v13;
LABEL_4:
    sub_2208352E4((uint64_t)v10, v15);
    if (v13 == v44) {
      goto LABEL_28;
    }
  }
  uint64_t v19 = v11;
  uint64_t v20 = (uint64_t)v4;
  uint64_t v21 = (uint64_t)v10;
  uint64_t v22 = (uint64_t)v10;
  uint64_t v23 = v49;
  uint64_t v24 = v15;
  sub_220835280(v22, v49, v15);
  uint64_t v47 = v19;
  uint64_t v25 = v19[2];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v50 = v12;
  unint64_t v28 = sub_22081D640(v23);
  uint64_t v29 = v12[2];
  BOOL v30 = (v27 & 1) == 0;
  uint64_t v31 = v29 + v30;
  if (!__OFADD__(v29, v30))
  {
    char v32 = v27;
    if (v12[3] < v31)
    {
      sub_2208209EC(v31, isUniquelyReferenced_nonNull_native);
      unint64_t v33 = sub_22081D640(v49);
      if ((v32 & 1) != (v34 & 1)) {
        goto LABEL_32;
      }
      unint64_t v28 = v33;
      uint64_t v12 = v50;
      if ((v32 & 1) == 0) {
        goto LABEL_20;
      }
LABEL_18:
      *(void *)(v12[7] + 8 * v28) = v25;
LABEL_22:
      swift_bridgeObjectRelease();
      uint64_t v15 = v24;
      sub_2208352E4(v49, v24);
      uint64_t v4 = (char *)v20;
      uint64_t v38 = v20 + *(int *)(v46 + 48);
      uint64_t v10 = (char *)v21;
      sub_220835280(v21, v20, v15);
      *(void *)uint64_t v38 = v13;
      *(void *)(v38 + 8) = v13 + 1;
      *(unsigned char *)(v38 + 16) = 0;
      uint64_t v11 = v47;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v11 = (void *)sub_22081CDDC(0, v11[2] + 1, 1, v11);
      }
      unint64_t v40 = v11[2];
      unint64_t v39 = v11[3];
      if (v40 >= v39 >> 1) {
        uint64_t v11 = (void *)sub_22081CDDC(v39 > 1, v40 + 1, 1, v11);
      }
      v11[2] = v40 + 1;
      sub_220834D3C((uint64_t)v4, (uint64_t)v11+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(void *)(v45 + 72) * v40, &qword_267F18720);
      ++v13;
      goto LABEL_4;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v12 = v50;
      if (v27) {
        goto LABEL_18;
      }
    }
    else
    {
      sub_220826184();
      uint64_t v12 = v50;
      if (v32) {
        goto LABEL_18;
      }
    }
LABEL_20:
    v12[(v28 >> 6) + 8] |= 1 << v28;
    sub_220835280(v49, v12[6] + v28 * v48, v24);
    *(void *)(v12[7] + 8 * v28) = v25;
    uint64_t v35 = v12[2];
    BOOL v36 = __OFADD__(v35, 1);
    uint64_t v37 = v35 + 1;
    if (v36) {
      goto LABEL_30;
    }
    v12[2] = v37;
    goto LABEL_22;
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  uint64_t result = sub_22093F2F0();
  __break(1u);
  return result;
}

uint64_t sub_22090C234()
{
  unint64_t v1 = sub_22080D390(MEMORY[0x263F8EE78]);
  uint64_t v2 = *(void *)(v0 + 16);
  long long v67 = *(_OWORD *)(v0 + 24);
  unsigned __int8 v68 = *(unsigned char *)(v0 + 40);
  int v3 = v68;
  uint64_t v4 = v67;
  uint64_t v60 = v0;
  uint64_t v61 = *((void *)&v67 + 1);
  unint64_t v56 = v67;
  if (v68)
  {
    if (v68 == 1 && *(void *)(v67 + 16))
    {
      uint64_t v5 = (unint64_t *)(v67 + 32);
    }
    else
    {
      unint64_t v6 = v1;
      swift_beginAccess();
      uint64_t v7 = *(void *)(v2 + 16);
      if (!v7) {
        goto LABEL_62;
      }
      uint64_t v5 = (unint64_t *)(v7 + 8);
      unint64_t v1 = v6;
    }
    unint64_t v56 = *v5;
  }
  uint64_t v63 = (void *)v1;
  uint64_t v8 = (uint64_t **)(v2 + 16);
  uint64_t v9 = swift_beginAccess();
  uint64_t v10 = *(uint64_t **)(v2 + 16);
  if (!v10) {
    goto LABEL_60;
  }
  uint64_t v11 = 0;
  uint64_t v57 = v67 + 32;
  uint64_t v12 = (void *)MEMORY[0x263F8EE78];
  unint64_t v13 = v56;
  int v59 = v68;
  uint64_t v58 = v67;
  while (1)
  {
    if (v13 == v10[1]) {
      goto LABEL_52;
    }
    uint64_t v65 = v13;
    MEMORY[0x270FA5388](v9);
    uint64_t v54 = (uint64_t)&v65;
    uint64_t v15 = v61;
    sub_220831F30(v4, v61, v3);
    sub_220831F30(v4, v15, v3);
    unint64_t v16 = sub_2208FD268((uint64_t (*)(long long *))sub_220894728, (uint64_t)&v53, v4, v15, v3);
    sub_220894638((uint64_t)&v67);
    if (v3)
    {
      if (v3 != 1)
      {
        if (v16)
        {
          int v55 = 0;
          uint64_t v54 = 91;
          goto LABEL_70;
        }
        goto LABEL_68;
      }
      unint64_t v18 = *(void *)(v4 + 16);
      if (v16 == v18)
      {
        sub_220894638((uint64_t)&v67);
LABEL_67:
        unint64_t v56 = v13;
LABEL_68:
        unint64_t v13 = v56;
LABEL_69:
        uint64_t v65 = 0;
        unint64_t v66 = 0xE000000000000000;
        sub_22093EEA0();
        swift_bridgeObjectRelease();
        uint64_t v65 = 0x6E6F697469736F70;
        unint64_t v66 = 0xE900000000000020;
        unint64_t v64 = v13;
        sub_22093F1A0();
        sub_22093E6C0();
        swift_bridgeObjectRelease();
        sub_22093E6C0();
        int v55 = 0;
        uint64_t v54 = 169;
        goto LABEL_70;
      }
      if (v16 >= v18) {
        goto LABEL_57;
      }
      uint64_t v17 = *(void *)(v57 + 16 * v16);
      sub_220894638((uint64_t)&v67);
    }
    else
    {
      uint64_t v17 = v4;
      if (v16) {
        goto LABEL_55;
      }
    }
    if (v65 < v17) {
      goto LABEL_69;
    }
    if ((v13 & 0x8000000000000000) != 0) {
      goto LABEL_63;
    }
    uint64_t v19 = *v8;
    if (!*v8) {
      goto LABEL_61;
    }
    if ((uint64_t)v13 >= v19[1]) {
      goto LABEL_63;
    }
    uint64_t v20 = v19 + 8;
    if ((*((unsigned __int8 *)v19 + (v13 >> 3) + 64) >> (v13 & 7)))
    {
      uint64_t v21 = *v19;
      BOOL v22 = __OFADD__(v21, 7);
      uint64_t v23 = v21 + 7;
      if (v22) {
        goto LABEL_54;
      }
      uint64_t v24 = v23 / 8;
      uint64_t v26 = v24 - 1;
      BOOL v25 = v24 < 1;
      uint64_t v27 = v24 + 62;
      if (!v25) {
        uint64_t v27 = v26;
      }
      unint64_t v28 = (unint64_t)&v20[2 * v13] + (v27 & 0xFFFFFFFFFFFFFFC0);
      unint64_t v16 = *(void *)(v28 + 64);
      unint64_t v29 = *(void *)(v28 + 72);
      sub_22080B7F4(v16, v29);
    }
    else
    {
      unint64_t v16 = 0;
      unint64_t v29 = 0xF000000000000000;
    }
    if (!v63[2]) {
      break;
    }
    unint64_t v30 = sub_22081D830(v16, v29);
    if ((v31 & 1) == 0) {
      break;
    }
    unint64_t v32 = *(void *)(v63[7] + 8 * v30);
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      if ((v32 & 0x8000000000000000) != 0) {
        goto LABEL_51;
      }
    }
    else
    {
      uint64_t v12 = sub_22080AC24(v12);
      if ((v32 & 0x8000000000000000) != 0)
      {
LABEL_51:
        __break(1u);
LABEL_52:
        swift_bridgeObjectRelease();
        return (uint64_t)v12;
      }
    }
    if (v32 >= v12[2]) {
      goto LABEL_59;
    }
    sub_220869870(v13, v13 + 1);
LABEL_11:
    unint64_t v13 = sub_2208937D4(v13);
    uint64_t v9 = sub_220834944(v16, v29);
    uint64_t v10 = *v8;
    if (!*v8) {
      goto LABEL_60;
    }
  }
  uint64_t v62 = v11;
  unint64_t v33 = v8;
  char v34 = v12;
  uint64_t v35 = v12[2];
  sub_220834CD4(v16, v29);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v65 = (uint64_t)v63;
  unint64_t v38 = sub_22081D830(v16, v29);
  uint64_t v39 = v63[2];
  BOOL v40 = (v37 & 1) == 0;
  uint64_t v41 = v39 + v40;
  if (!__OFADD__(v39, v40))
  {
    char v42 = v37;
    if (v63[3] >= v41)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_2208263F8();
      }
    }
    else
    {
      sub_220820C78(v41, isUniquelyReferenced_nonNull_native);
      unint64_t v43 = sub_22081D830(v16, v29);
      if ((v42 & 1) != (v44 & 1)) {
        goto LABEL_71;
      }
      unint64_t v38 = v43;
    }
    uint64_t v45 = (void *)v65;
    uint64_t v63 = (void *)v65;
    if (v42)
    {
      *(void *)(*(void *)(v65 + 56) + 8 * v38) = v35;
    }
    else
    {
      *(void *)(v65 + 8 * (v38 >> 6) + 64) |= 1 << v38;
      uint64_t v46 = (unint64_t *)(v45[6] + 16 * v38);
      *uint64_t v46 = v16;
      v46[1] = v29;
      *(void *)(v45[7] + 8 * v38) = v35;
      uint64_t v47 = v45[2];
      BOOL v22 = __OFADD__(v47, 1);
      uint64_t v48 = v47 + 1;
      if (v22) {
        goto LABEL_58;
      }
      v45[2] = v48;
      sub_220834CD4(v16, v29);
    }
    swift_bridgeObjectRelease();
    sub_220834944(v16, v29);
    sub_220834CD4(v16, v29);
    uint64_t v12 = v34;
    char v49 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v4 = v58;
    uint64_t v8 = v33;
    if ((v49 & 1) == 0) {
      uint64_t v12 = sub_22081CFB8(0, v34[2] + 1, 1, v34);
    }
    uint64_t v11 = v62;
    unint64_t v51 = v12[2];
    unint64_t v50 = v12[3];
    if (v51 >= v50 >> 1) {
      uint64_t v12 = sub_22081CFB8((void *)(v50 > 1), v51 + 1, 1, v12);
    }
    v12[2] = v51 + 1;
    uint64_t v14 = &v12[5 * v51];
    v14[4] = v16;
    v14[5] = v29;
    v14[6] = v13;
    v14[7] = v13 + 1;
    *((unsigned char *)v14 + 64) = 0;
    int v3 = v59;
    goto LABEL_11;
  }
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  if (v16 == 1) {
    goto LABEL_67;
  }
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  int v55 = 0;
  uint64_t v54 = 128;
LABEL_70:
  sub_22093F090();
  __break(1u);
LABEL_71:
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F185B8);
  uint64_t result = sub_22093F2F0();
  __break(1u);
  return result;
}

uint64_t sub_22090C8AC(uint64_t a1)
{
  uint64_t v2 = (void *)MEMORY[0x263F8EE78];
  int v3 = (void *)sub_22080D390(MEMORY[0x263F8EE78]);
  uint64_t v31 = *(void *)(a1 + 16);
  if (!v31)
  {
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v2;
  }
  unint64_t v4 = 0;
  uint64_t v30 = a1 + 32;
  while (1)
  {
    unint64_t v6 = (uint64_t *)(v30 + 16 * v4);
    uint64_t v7 = *v6;
    unint64_t v8 = v6[1];
    uint64_t v9 = v3[2];
    sub_220834CD4(*v6, v8);
    if (!v9) {
      break;
    }
    unint64_t v10 = sub_22081D830(v7, v8);
    if ((v11 & 1) == 0) {
      break;
    }
    unint64_t v12 = *(void *)(v3[7] + 8 * v10);
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      if ((v12 & 0x8000000000000000) != 0) {
        goto LABEL_27;
      }
    }
    else
    {
      uint64_t v2 = sub_22080AC24(v2);
      if ((v12 & 0x8000000000000000) != 0)
      {
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
    }
    if (v12 >= v2[2]) {
      goto LABEL_31;
    }
    sub_220869870(v4, v4 + 1);
    ++v4;
LABEL_4:
    sub_220834944(v7, v8);
    if (v4 == v31) {
      goto LABEL_28;
    }
  }
  uint64_t v13 = v2[2];
  sub_220834CD4(v7, v8);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v16 = sub_22081D830(v7, v8);
  uint64_t v17 = v3[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (!__OFADD__(v17, v18))
  {
    char v20 = v15;
    if (v3[3] < v19)
    {
      sub_220820C78(v19, isUniquelyReferenced_nonNull_native);
      unint64_t v21 = sub_22081D830(v7, v8);
      if ((v20 & 1) != (v22 & 1)) {
        goto LABEL_32;
      }
      unint64_t v16 = v21;
      if ((v20 & 1) == 0) {
        goto LABEL_20;
      }
LABEL_18:
      *(void *)(v3[7] + 8 * v16) = v13;
LABEL_22:
      swift_bridgeObjectRelease();
      sub_220834944(v7, v8);
      sub_220834CD4(v7, v8);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v2 = sub_22081CFB8(0, v2[2] + 1, 1, v2);
      }
      unint64_t v28 = v2[2];
      unint64_t v27 = v2[3];
      if (v28 >= v27 >> 1) {
        uint64_t v2 = sub_22081CFB8((void *)(v27 > 1), v28 + 1, 1, v2);
      }
      v2[2] = v28 + 1;
      uint64_t v5 = &v2[5 * v28];
      v5[5] = v8;
      v5[6] = v4++;
      v5[4] = v7;
      v5[7] = v4;
      *((unsigned char *)v5 + 64) = 0;
      goto LABEL_4;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      if (v15) {
        goto LABEL_18;
      }
    }
    else
    {
      sub_2208263F8();
      if (v20) {
        goto LABEL_18;
      }
    }
LABEL_20:
    v3[(v16 >> 6) + 8] |= 1 << v16;
    uint64_t v23 = (uint64_t *)(v3[6] + 16 * v16);
    *uint64_t v23 = v7;
    v23[1] = v8;
    *(void *)(v3[7] + 8 * v16) = v13;
    uint64_t v24 = v3[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25) {
      goto LABEL_30;
    }
    v3[2] = v26;
    sub_220834CD4(v7, v8);
    goto LABEL_22;
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F185B8);
  uint64_t result = sub_22093F2F0();
  __break(1u);
  return result;
}

uint64_t sub_22090CB9C()
{
  unint64_t v1 = (void *)sub_220833E00(MEMORY[0x263F8EE78]);
  uint64_t v2 = *(void *)(v0 + 16);
  long long v54 = *(_OWORD *)(v0 + 24);
  uint64_t v46 = v0;
  unsigned __int8 v55 = *(unsigned char *)(v0 + 40);
  int v3 = v55;
  uint64_t v47 = *((void *)&v54 + 1);
  uint64_t v4 = v54;
  uint64_t v48 = v2;
  int64_t v43 = v54;
  if (v55)
  {
    if (v55 == 1 && *(void *)(v54 + 16))
    {
      uint64_t v5 = (int64_t *)(v54 + 32);
    }
    else
    {
      swift_beginAccess();
      uint64_t v6 = *(void *)(v48 + 16);
      if (!v6) {
        goto LABEL_56;
      }
      uint64_t v5 = (int64_t *)(v6 + 8);
    }
    int64_t v43 = *v5;
  }
  uint64_t v7 = (void **)(v48 + 16);
  uint64_t v8 = swift_beginAccess();
  uint64_t v9 = *(void **)(v48 + 16);
  if (!v9) {
    goto LABEL_54;
  }
  uint64_t v10 = 0;
  uint64_t v44 = v54 + 32;
  char v11 = (void *)MEMORY[0x263F8EE78];
  int64_t v12 = v43;
  int v45 = v55;
  while (1)
  {
    if (v12 == v9[1]) {
      goto LABEL_47;
    }
    unint64_t v50 = v11;
    uint64_t v52 = v12;
    MEMORY[0x270FA5388](v8);
    uint64_t v41 = (uint64_t)&v52;
    uint64_t v14 = v47;
    sub_220831F30(v4, v47, v3);
    sub_220831F30(v4, v14, v3);
    unint64_t v15 = sub_2208FD268((uint64_t (*)(long long *))sub_220894728, (uint64_t)&v40, v4, v14, v3);
    sub_220894638((uint64_t)&v54);
    if (v3)
    {
      if (v3 != 1)
      {
        if (v15)
        {
          int v42 = 0;
          uint64_t v41 = 91;
          goto LABEL_64;
        }
        goto LABEL_62;
      }
      unint64_t v17 = *(void *)(v4 + 16);
      char v11 = v50;
      if (v15 == v17)
      {
        sub_220894638((uint64_t)&v54);
LABEL_61:
        int64_t v43 = v12;
LABEL_62:
        int64_t v12 = v43;
LABEL_63:
        uint64_t v52 = 0;
        unint64_t v53 = 0xE000000000000000;
        sub_22093EEA0();
        swift_bridgeObjectRelease();
        uint64_t v52 = 0x6E6F697469736F70;
        unint64_t v53 = 0xE900000000000020;
        int64_t v51 = v12;
        sub_22093F1A0();
        sub_22093E6C0();
        swift_bridgeObjectRelease();
        sub_22093E6C0();
        int v42 = 0;
        uint64_t v41 = 169;
        goto LABEL_64;
      }
      if (v15 >= v17) {
        goto LABEL_51;
      }
      uint64_t v16 = *(void *)(v44 + 16 * v15);
      sub_220894638((uint64_t)&v54);
    }
    else
    {
      uint64_t v16 = v4;
      char v11 = v50;
      if (v15) {
        goto LABEL_49;
      }
    }
    if (v52 < v16) {
      goto LABEL_63;
    }
    if (v12 < 0) {
      goto LABEL_57;
    }
    BOOL v18 = *v7;
    if (!*v7) {
      goto LABEL_55;
    }
    if (v12 >= v18[1]) {
      goto LABEL_57;
    }
    uint64_t v19 = sub_220891788(v12, v18, v48);
    unint64_t v15 = v19;
    if (!v1[2]) {
      break;
    }
    unint64_t v20 = sub_22081D8E4(v19);
    if ((v21 & 1) == 0) {
      break;
    }
    unint64_t v22 = *(void *)(v1[7] + 8 * v20);
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      if ((v22 & 0x8000000000000000) != 0) {
        goto LABEL_46;
      }
    }
    else
    {
      char v11 = sub_22080AC38(v11);
      if ((v22 & 0x8000000000000000) != 0)
      {
LABEL_46:
        __break(1u);
LABEL_47:
        swift_bridgeObjectRelease();
        return (uint64_t)v11;
      }
    }
    if (v22 >= v11[2]) {
      goto LABEL_53;
    }
    sub_220869870(v12, v12 + 1);
LABEL_11:
    uint64_t v8 = sub_2208937D4(v12);
    int64_t v12 = v8;
    uint64_t v9 = *v7;
    if (!*v7) {
      goto LABEL_54;
    }
  }
  uint64_t v49 = v10;
  uint64_t v23 = v7;
  uint64_t v24 = v11[2];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v52 = (uint64_t)v1;
  unint64_t v27 = sub_22081D8E4(v15);
  uint64_t v28 = v1[2];
  BOOL v29 = (v26 & 1) == 0;
  uint64_t v30 = v28 + v29;
  if (!__OFADD__(v28, v29))
  {
    char v31 = v26;
    if (v1[3] >= v30)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        unint64_t v1 = (void *)v52;
        if ((v26 & 1) == 0) {
          goto LABEL_39;
        }
      }
      else
      {
        sub_2208265A8();
        unint64_t v1 = (void *)v52;
        if ((v31 & 1) == 0) {
          goto LABEL_39;
        }
      }
    }
    else
    {
      sub_220820FC0(v30, isUniquelyReferenced_nonNull_native);
      unint64_t v32 = sub_22081D8E4(v15);
      if ((v31 & 1) != (v33 & 1)) {
        goto LABEL_65;
      }
      unint64_t v27 = v32;
      unint64_t v1 = (void *)v52;
      if ((v31 & 1) == 0)
      {
LABEL_39:
        v1[(v27 >> 6) + 8] |= 1 << v27;
        *(unsigned char *)(v1[6] + v27) = v15;
        *(void *)(v1[7] + 8 * v27) = v24;
        uint64_t v34 = v1[2];
        BOOL v35 = __OFADD__(v34, 1);
        uint64_t v36 = v34 + 1;
        if (v35) {
          goto LABEL_52;
        }
        v1[2] = v36;
        goto LABEL_41;
      }
    }
    *(void *)(v1[7] + 8 * v27) = v24;
LABEL_41:
    swift_bridgeObjectRelease();
    char v11 = v50;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v11 = sub_22081CFCC(0, v11[2] + 1, 1, v11);
    }
    uint64_t v7 = v23;
    uint64_t v10 = v49;
    unint64_t v38 = v11[2];
    unint64_t v37 = v11[3];
    if (v38 >= v37 >> 1) {
      char v11 = sub_22081CFCC((void *)(v37 > 1), v38 + 1, 1, v11);
    }
    v11[2] = v38 + 1;
    uint64_t v13 = &v11[4 * v38];
    *((unsigned char *)v13 + 32) = v15;
    uint64_t v13[5] = v12;
    v13[6] = v12 + 1;
    *((unsigned char *)v13 + 56) = 0;
    int v3 = v45;
    goto LABEL_11;
  }
  __break(1u);
LABEL_49:
  if (v15 == 1) {
    goto LABEL_61;
  }
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  int v42 = 0;
  uint64_t v41 = 128;
LABEL_64:
  sub_22093F090();
  __break(1u);
LABEL_65:
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F185B0);
  uint64_t result = sub_22093F2F0();
  __break(1u);
  return result;
}

uint64_t sub_22090D168(uint64_t a1)
{
  uint64_t v2 = (void *)MEMORY[0x263F8EE78];
  int v3 = (void *)sub_220833E00(MEMORY[0x263F8EE78]);
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v2;
  }
  unint64_t v5 = 0;
  uint64_t v27 = a1 + 32;
  while (1)
  {
    while (1)
    {
      unsigned __int8 v7 = *(unsigned char *)(v27 + v5);
      if (!v3[2]) {
        break;
      }
      unint64_t v8 = sub_22081D8E4(*(unsigned char *)(v27 + v5));
      if ((v9 & 1) == 0) {
        break;
      }
      unint64_t v10 = *(void *)(v3[7] + 8 * v8);
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        if ((v10 & 0x8000000000000000) != 0) {
          goto LABEL_27;
        }
      }
      else
      {
        uint64_t v2 = sub_22080AC38(v2);
        if ((v10 & 0x8000000000000000) != 0)
        {
LABEL_27:
          __break(1u);
          goto LABEL_28;
        }
      }
      if (v10 >= v2[2]) {
        goto LABEL_31;
      }
      sub_220869870(v5, v5 + 1);
      if (++v5 == v4) {
        goto LABEL_28;
      }
    }
    uint64_t v11 = v2[2];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v14 = sub_22081D8E4(v7);
    uint64_t v15 = v3[2];
    BOOL v16 = (v13 & 1) == 0;
    uint64_t v17 = v15 + v16;
    if (__OFADD__(v15, v16)) {
      break;
    }
    char v18 = v13;
    if (v3[3] >= v17)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v13) {
          goto LABEL_18;
        }
      }
      else
      {
        sub_2208265A8();
        if (v18) {
          goto LABEL_18;
        }
      }
    }
    else
    {
      sub_220820FC0(v17, isUniquelyReferenced_nonNull_native);
      unint64_t v19 = sub_22081D8E4(v7);
      if ((v18 & 1) != (v20 & 1)) {
        goto LABEL_32;
      }
      unint64_t v14 = v19;
      if (v18)
      {
LABEL_18:
        *(void *)(v3[7] + 8 * v14) = v11;
        goto LABEL_22;
      }
    }
    v3[(v14 >> 6) + 8] |= 1 << v14;
    *(unsigned char *)(v3[6] + v14) = v7;
    *(void *)(v3[7] + 8 * v14) = v11;
    uint64_t v21 = v3[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_30;
    }
    v3[2] = v23;
LABEL_22:
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v2 = sub_22081CFCC(0, v2[2] + 1, 1, v2);
    }
    unint64_t v25 = v2[2];
    unint64_t v24 = v2[3];
    if (v25 >= v24 >> 1) {
      uint64_t v2 = sub_22081CFCC((void *)(v24 > 1), v25 + 1, 1, v2);
    }
    v2[2] = v25 + 1;
    uint64_t v6 = &v2[4 * v25];
    void v6[5] = v5++;
    *((unsigned char *)v6 + 32) = v7;
    v6[6] = v5;
    *((unsigned char *)v6 + 56) = 0;
    if (v5 == v4) {
      goto LABEL_28;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F185B0);
  uint64_t result = sub_22093F2F0();
  __break(1u);
  return result;
}

uint64_t sub_22090D3F4()
{
  unint64_t v1 = sub_220833ED8(MEMORY[0x263F8EE78]);
  uint64_t v2 = *(void *)(v0 + 16);
  long long v63 = *(_OWORD *)(v0 + 24);
  uint64_t v55 = v0;
  unsigned __int8 v64 = *(unsigned char *)(v0 + 40);
  int v3 = v64;
  uint64_t v56 = *((void *)&v63 + 1);
  uint64_t v4 = v63;
  uint64_t v57 = v2;
  int64_t v50 = v63;
  if (v64)
  {
    if (v64 == 1 && *(void *)(v63 + 16))
    {
      unint64_t v5 = (int64_t *)(v63 + 32);
    }
    else
    {
      unint64_t v6 = v1;
      swift_beginAccess();
      uint64_t v7 = *(void *)(v57 + 16);
      if (!v7) {
        goto LABEL_55;
      }
      unint64_t v5 = (int64_t *)(v7 + 8);
      unint64_t v1 = v6;
    }
    int64_t v50 = *v5;
  }
  int v59 = (void *)v1;
  unint64_t v8 = (void **)(v57 + 16);
  uint64_t v9 = swift_beginAccess();
  unint64_t v10 = *(void **)(v57 + 16);
  if (!v10) {
    goto LABEL_53;
  }
  uint64_t v11 = 0;
  uint64_t v51 = v63 + 32;
  int64_t v12 = (void *)MEMORY[0x263F8EE78];
  int64_t v13 = v50;
  int v54 = v64;
  uint64_t v52 = v63;
  unint64_t v53 = (void **)(v57 + 16);
  while (1)
  {
    if (v13 == v10[1]) {
      goto LABEL_46;
    }
    uint64_t v61 = v13;
    MEMORY[0x270FA5388](v9);
    uint64_t v48 = (uint64_t)&v61;
    uint64_t v15 = v56;
    sub_220831F30(v4, v56, v3);
    sub_220831F30(v4, v15, v3);
    unint64_t v16 = sub_2208FD268((uint64_t (*)(long long *))sub_220894728, (uint64_t)&v47, v4, v15, v3);
    sub_220894638((uint64_t)&v63);
    if (v3)
    {
      if (v3 != 1)
      {
        if (v16)
        {
          int v49 = 0;
          uint64_t v48 = 91;
          goto LABEL_63;
        }
        goto LABEL_61;
      }
      unint64_t v18 = *(void *)(v4 + 16);
      if (v16 == v18)
      {
        sub_220894638((uint64_t)&v63);
LABEL_60:
        int64_t v50 = v13;
LABEL_61:
        int64_t v13 = v50;
LABEL_62:
        uint64_t v61 = 0;
        unint64_t v62 = 0xE000000000000000;
        sub_22093EEA0();
        swift_bridgeObjectRelease();
        uint64_t v61 = 0x6E6F697469736F70;
        unint64_t v62 = 0xE900000000000020;
        int64_t v60 = v13;
        sub_22093F1A0();
        sub_22093E6C0();
        swift_bridgeObjectRelease();
        sub_22093E6C0();
        int v49 = 0;
        uint64_t v48 = 169;
        goto LABEL_63;
      }
      if (v16 >= v18) {
        goto LABEL_50;
      }
      uint64_t v17 = *(void *)(v51 + 16 * v16);
      sub_220894638((uint64_t)&v63);
    }
    else
    {
      uint64_t v17 = v4;
      if (v16) {
        goto LABEL_48;
      }
    }
    if (v61 < v17) {
      goto LABEL_62;
    }
    if (v13 < 0) {
      goto LABEL_56;
    }
    unint64_t v19 = *v8;
    if (!*v8) {
      goto LABEL_54;
    }
    if (v13 >= v19[1]) {
      goto LABEL_56;
    }
    uint64_t v20 = sub_2208915A0(v13, v19, v57);
    uint64_t v22 = v20;
    int v23 = v21 & 1;
    if (!v59[2]) {
      break;
    }
    unint64_t v24 = sub_22081D974(v20, v21 & 1);
    if ((v25 & 1) == 0) {
      break;
    }
    unint64_t v26 = *(void *)(v59[7] + 8 * v24);
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      if ((v26 & 0x8000000000000000) != 0) {
        goto LABEL_45;
      }
    }
    else
    {
      int64_t v12 = sub_22080AC4C(v12);
      if ((v26 & 0x8000000000000000) != 0)
      {
LABEL_45:
        __break(1u);
LABEL_46:
        swift_bridgeObjectRelease();
        return (uint64_t)v12;
      }
    }
    if (v26 >= v12[2]) {
      goto LABEL_52;
    }
    sub_220869870(v13, v13 + 1);
LABEL_11:
    uint64_t v9 = sub_2208937D4(v13);
    int64_t v13 = v9;
    unint64_t v10 = *v8;
    if (!*v8) {
      goto LABEL_53;
    }
  }
  uint64_t v58 = v11;
  uint64_t v27 = v12;
  uint64_t v28 = v12[2];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v61 = (uint64_t)v59;
  unint64_t v16 = v22;
  unint64_t v31 = sub_22081D974(v22, v23);
  uint64_t v32 = v59[2];
  BOOL v33 = (v30 & 1) == 0;
  uint64_t v34 = v32 + v33;
  if (!__OFADD__(v32, v33))
  {
    char v35 = v30;
    if (v59[3] >= v34)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_220826738();
      }
    }
    else
    {
      sub_2208212AC(v34, isUniquelyReferenced_nonNull_native);
      unint64_t v36 = sub_22081D974(v22, v23);
      if ((v35 & 1) != (v37 & 1)) {
        goto LABEL_64;
      }
      unint64_t v31 = v36;
    }
    unint64_t v38 = (void *)v61;
    int v59 = (void *)v61;
    if (v35)
    {
      *(void *)(*(void *)(v61 + 56) + 8 * v31) = v28;
    }
    else
    {
      *(void *)(v61 + 8 * (v31 >> 6) + 64) |= 1 << v31;
      uint64_t v39 = v38[6] + 16 * v31;
      *(void *)uint64_t v39 = v22;
      *(unsigned char *)(v39 + 8) = v23 != 0;
      *(void *)(v38[7] + 8 * v31) = v28;
      uint64_t v40 = v38[2];
      BOOL v41 = __OFADD__(v40, 1);
      uint64_t v42 = v40 + 1;
      if (v41) {
        goto LABEL_51;
      }
      v38[2] = v42;
    }
    swift_bridgeObjectRelease();
    int64_t v12 = v27;
    char v43 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v4 = v52;
    unint64_t v8 = v53;
    uint64_t v11 = v58;
    if ((v43 & 1) == 0) {
      int64_t v12 = sub_22081CFE0(0, v12[2] + 1, 1, v12);
    }
    unint64_t v45 = v12[2];
    unint64_t v44 = v12[3];
    if (v45 >= v44 >> 1) {
      int64_t v12 = sub_22081CFE0((void *)(v44 > 1), v45 + 1, 1, v12);
    }
    v12[2] = v45 + 1;
    unint64_t v14 = &v12[5 * v45];
    v14[4] = v22;
    *((unsigned char *)v14 + 40) = v23 != 0;
    v14[6] = v13;
    v14[7] = v13 + 1;
    *((unsigned char *)v14 + 64) = 0;
    int v3 = v54;
    goto LABEL_11;
  }
  __break(1u);
LABEL_48:
  if (v16 == 1) {
    goto LABEL_60;
  }
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  int v49 = 0;
  uint64_t v48 = 128;
LABEL_63:
  sub_22093F090();
  __break(1u);
LABEL_64:
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD40FD0);
  uint64_t result = sub_22093F2F0();
  __break(1u);
  return result;
}

uint64_t sub_22090DA18(uint64_t a1)
{
  uint64_t v2 = (void *)MEMORY[0x263F8EE78];
  int v3 = (void *)sub_220833ED8(MEMORY[0x263F8EE78]);
  uint64_t v30 = *(void *)(a1 + 16);
  if (!v30)
  {
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v2;
  }
  unint64_t v4 = 0;
  uint64_t v29 = a1 + 32;
  while (1)
  {
    uint64_t v6 = v29 + 16 * v4;
    uint64_t v7 = *(void *)v6;
    char v8 = *(unsigned char *)(v6 + 8);
    if (!v3[2]) {
      break;
    }
    unint64_t v9 = sub_22081D974(v7, v8);
    if ((v10 & 1) == 0) {
      break;
    }
    unint64_t v11 = *(void *)(v3[7] + 8 * v9);
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      if ((v11 & 0x8000000000000000) != 0) {
        goto LABEL_27;
      }
    }
    else
    {
      uint64_t v2 = sub_22080AC4C(v2);
      if ((v11 & 0x8000000000000000) != 0)
      {
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
    }
    if (v11 >= v2[2]) {
      goto LABEL_31;
    }
    sub_220869870(v4, v4 + 1);
    ++v4;
LABEL_4:
    if (v4 == v30) {
      goto LABEL_28;
    }
  }
  uint64_t v12 = v2[2];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v15 = sub_22081D974(v7, v8);
  uint64_t v16 = v3[2];
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (!__OFADD__(v16, v17))
  {
    char v19 = v14;
    if (v3[3] < v18)
    {
      sub_2208212AC(v18, isUniquelyReferenced_nonNull_native);
      unint64_t v20 = sub_22081D974(v7, v8);
      if ((v19 & 1) != (v21 & 1)) {
        goto LABEL_32;
      }
      unint64_t v15 = v20;
      if ((v19 & 1) == 0) {
        goto LABEL_20;
      }
LABEL_18:
      *(void *)(v3[7] + 8 * v15) = v12;
LABEL_22:
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v2 = sub_22081CFE0(0, v2[2] + 1, 1, v2);
      }
      unint64_t v27 = v2[2];
      unint64_t v26 = v2[3];
      if (v27 >= v26 >> 1) {
        uint64_t v2 = sub_22081CFE0((void *)(v26 > 1), v27 + 1, 1, v2);
      }
      v2[2] = v27 + 1;
      unint64_t v5 = &v2[5 * v27];
      v5[6] = v4++;
      v5[4] = v7;
      *((unsigned char *)v5 + 40) = v8;
      v5[7] = v4;
      *((unsigned char *)v5 + 64) = 0;
      goto LABEL_4;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      if (v14) {
        goto LABEL_18;
      }
    }
    else
    {
      sub_220826738();
      if (v19) {
        goto LABEL_18;
      }
    }
LABEL_20:
    v3[(v15 >> 6) + 8] |= 1 << v15;
    uint64_t v22 = v3[6] + 16 * v15;
    *(void *)uint64_t v22 = v7;
    *(unsigned char *)(v22 + 8) = v8;
    *(void *)(v3[7] + 8 * v15) = v12;
    uint64_t v23 = v3[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_30;
    }
    v3[2] = v25;
    goto LABEL_22;
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD40FD0);
  uint64_t result = sub_22093F2F0();
  __break(1u);
  return result;
}

uint64_t sub_22090DCCC()
{
  unint64_t v1 = sub_220833EF8(MEMORY[0x263F8EE78]);
  uint64_t v2 = *(void *)(v0 + 16);
  long long v72 = *(_OWORD *)(v0 + 24);
  uint64_t v64 = v0;
  unsigned __int8 v73 = *(unsigned char *)(v0 + 40);
  uint64_t v3 = v73;
  uint64_t v65 = *((void *)&v72 + 1);
  uint64_t v4 = v72;
  uint64_t v66 = v2;
  int64_t v60 = v72;
  if (v73)
  {
    if (v73 == 1 && *(void *)(v72 + 16))
    {
      unint64_t v5 = (int64_t *)(v72 + 32);
    }
    else
    {
      unint64_t v6 = v1;
      swift_beginAccess();
      uint64_t v7 = *(void *)(v66 + 16);
      if (!v7) {
        goto LABEL_57;
      }
      unint64_t v5 = (int64_t *)(v7 + 8);
      unint64_t v1 = v6;
    }
    int64_t v60 = *v5;
  }
  char v8 = (void *)v1;
  unint64_t v9 = (void **)(v66 + 16);
  uint64_t v10 = swift_beginAccess();
  unint64_t v11 = *(void **)(v66 + 16);
  if (!v11) {
    goto LABEL_55;
  }
  uint64_t v12 = 0;
  uint64_t v61 = v72 + 32;
  int64_t v13 = (void *)MEMORY[0x263F8EE78];
  int64_t v14 = v60;
  long long v63 = (void **)(v66 + 16);
  uint64_t v62 = v72;
  while (1)
  {
    if (v14 == v11[1]) {
      goto LABEL_48;
    }
    uint64_t v70 = v14;
    MEMORY[0x270FA5388](v10);
    uint64_t v58 = (uint64_t)&v70;
    uint64_t v16 = v65;
    sub_220831F30(v4, v65, v3);
    sub_220831F30(v4, v16, v3);
    unint64_t v17 = sub_2208FD268((uint64_t (*)(long long *))sub_220894728, (uint64_t)&v57, v4, v16, v3);
    sub_220894638((uint64_t)&v72);
    if (v3)
    {
      if (v3 != 1)
      {
        if (v17)
        {
          int v59 = 0;
          uint64_t v58 = 91;
          goto LABEL_65;
        }
        goto LABEL_63;
      }
      unint64_t v19 = *(void *)(v4 + 16);
      if (v17 == v19)
      {
        sub_220894638((uint64_t)&v72);
LABEL_62:
        int64_t v60 = v14;
LABEL_63:
        int64_t v14 = v60;
LABEL_64:
        uint64_t v70 = 0;
        unint64_t v71 = 0xE000000000000000;
        sub_22093EEA0();
        swift_bridgeObjectRelease();
        uint64_t v70 = 0x6E6F697469736F70;
        unint64_t v71 = 0xE900000000000020;
        int64_t v69 = v14;
        sub_22093F1A0();
        sub_22093E6C0();
        swift_bridgeObjectRelease();
        sub_22093E6C0();
        int v59 = 0;
        uint64_t v58 = 169;
        goto LABEL_65;
      }
      if (v17 >= v19) {
        goto LABEL_52;
      }
      uint64_t v18 = *(void *)(v61 + 16 * v17);
      sub_220894638((uint64_t)&v72);
    }
    else
    {
      uint64_t v18 = v4;
      if (v17) {
        goto LABEL_50;
      }
    }
    if (v70 < v18) {
      goto LABEL_64;
    }
    if (v14 < 0) {
      goto LABEL_58;
    }
    unint64_t v20 = *v9;
    if (!*v9) {
      goto LABEL_56;
    }
    if (v14 >= v20[1]) {
      goto LABEL_58;
    }
    unint64_t v21 = sub_220891A38(v14, v20, v66);
    uint64_t v22 = v8[2];
    uint64_t v23 = HIDWORD(v21) & 1;
    unint64_t v68 = v21;
    if (!v22) {
      break;
    }
    uint64_t v24 = v21;
    unint64_t v25 = sub_22081DA10(v21 | (unint64_t)(v23 << 32));
    if ((v26 & 1) == 0) {
      goto LABEL_31;
    }
    unint64_t v27 = *(void *)(v8[7] + 8 * v25);
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      if ((v27 & 0x8000000000000000) != 0) {
        goto LABEL_47;
      }
    }
    else
    {
      int64_t v13 = sub_22080AC60(v13);
      if ((v27 & 0x8000000000000000) != 0)
      {
LABEL_47:
        __break(1u);
LABEL_48:
        swift_bridgeObjectRelease();
        return (uint64_t)v13;
      }
    }
    if (v27 >= v13[2]) {
      goto LABEL_54;
    }
    sub_220869870(v14, v14 + 1);
LABEL_11:
    uint64_t v10 = sub_2208937D4(v14);
    int64_t v14 = v10;
    unint64_t v11 = *v9;
    if (!*v9) {
      goto LABEL_55;
    }
  }
  uint64_t v24 = v21;
LABEL_31:
  uint64_t v67 = v12;
  uint64_t v28 = v3;
  uint64_t v29 = v23;
  unint64_t v17 = (unint64_t)v13;
  uint64_t v30 = v13[2];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v70 = (uint64_t)v8;
  uint64_t v32 = v29;
  unint64_t v33 = sub_22081DA10(v24 | (v29 << 32));
  char v35 = v8;
  unint64_t v36 = v33;
  uint64_t v37 = v8[2];
  BOOL v38 = (v34 & 1) == 0;
  uint64_t v39 = v37 + v38;
  if (!__OFADD__(v37, v38))
  {
    char v40 = v34;
    if (v35[3] >= v39)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        char v43 = (void *)v70;
        if ((v34 & 1) == 0) {
          goto LABEL_40;
        }
      }
      else
      {
        sub_220826744();
        char v43 = (void *)v70;
        if ((v40 & 1) == 0) {
          goto LABEL_40;
        }
      }
    }
    else
    {
      sub_220821478(v39, isUniquelyReferenced_nonNull_native);
      unint64_t v41 = sub_22081DA10(v24 | (v32 << 32));
      if ((v40 & 1) != (v42 & 1)) {
        goto LABEL_66;
      }
      unint64_t v36 = v41;
      char v43 = (void *)v70;
      if ((v40 & 1) == 0)
      {
LABEL_40:
        v43[(v36 >> 6) + 8] |= 1 << v36;
        uint64_t v44 = v43[6] + 8 * v36;
        *(_DWORD *)uint64_t v44 = v68;
        *(unsigned char *)(v44 + 4) = v32;
        *(void *)(v43[7] + 8 * v36) = v30;
        uint64_t v45 = v43[2];
        BOOL v46 = __OFADD__(v45, 1);
        uint64_t v47 = v45 + 1;
        if (v46) {
          goto LABEL_53;
        }
        char v8 = v43;
        v43[2] = v47;
        goto LABEL_42;
      }
    }
    char v8 = v43;
    *(void *)(v43[7] + 8 * v36) = v30;
LABEL_42:
    swift_bridgeObjectRelease();
    int64_t v13 = (void *)v17;
    char v48 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v3 = v28;
    uint64_t v4 = v62;
    int v49 = v63;
    uint64_t v12 = v67;
    if ((v48 & 1) == 0) {
      int64_t v13 = sub_22081CFF4(0, v13[2] + 1, 1, v13);
    }
    unint64_t v51 = v13[2];
    unint64_t v50 = v13[3];
    int v52 = v68;
    if (v51 >= v50 >> 1)
    {
      unint64_t v53 = v13;
      int v54 = v68;
      uint64_t v55 = sub_22081CFF4((void *)(v50 > 1), v51 + 1, 1, v53);
      int v52 = v54;
      int64_t v13 = v55;
    }
    void v13[2] = v51 + 1;
    unint64_t v15 = &v13[4 * v51];
    *((_DWORD *)v15 + 8) = v52;
    *((unsigned char *)v15 + 36) = v32;
    v15[5] = v14;
    v15[6] = v14 + 1;
    *((unsigned char *)v15 + 56) = 0;
    unint64_t v9 = v49;
    goto LABEL_11;
  }
  __break(1u);
LABEL_50:
  if (v17 == 1) {
    goto LABEL_62;
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  int v59 = 0;
  uint64_t v58 = 128;
LABEL_65:
  sub_22093F090();
  __break(1u);
LABEL_66:
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD40FD8);
  uint64_t result = sub_22093F2F0();
  __break(1u);
  return result;
}

uint64_t sub_22090E318(uint64_t a1)
{
  uint64_t v2 = (void *)MEMORY[0x263F8EE78];
  uint64_t v3 = (void *)sub_220833EF8(MEMORY[0x263F8EE78]);
  uint64_t v30 = *(void *)(a1 + 16);
  if (!v30)
  {
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v2;
  }
  unint64_t v4 = 0;
  uint64_t v29 = a1 + 32;
  while (1)
  {
    unint64_t v6 = (unsigned int *)(v29 + 8 * v4);
    uint64_t v7 = *v6;
    unsigned __int8 v8 = *((unsigned char *)v6 + 4);
    if (!v3[2]) {
      break;
    }
    unint64_t v9 = sub_22081DA10(v7 | ((unint64_t)*((unsigned __int8 *)v6 + 4) << 32));
    if ((v10 & 1) == 0) {
      break;
    }
    unint64_t v11 = *(void *)(v3[7] + 8 * v9);
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      if ((v11 & 0x8000000000000000) != 0) {
        goto LABEL_27;
      }
    }
    else
    {
      uint64_t v2 = sub_22080AC60(v2);
      if ((v11 & 0x8000000000000000) != 0)
      {
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
    }
    if (v11 >= v2[2]) {
      goto LABEL_31;
    }
    sub_220869870(v4, v4 + 1);
    ++v4;
LABEL_4:
    if (v4 == v30) {
      goto LABEL_28;
    }
  }
  uint64_t v12 = v2[2];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v15 = sub_22081DA10(v7 | ((unint64_t)v8 << 32));
  uint64_t v16 = v3[2];
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (!__OFADD__(v16, v17))
  {
    char v19 = v14;
    if (v3[3] < v18)
    {
      sub_220821478(v18, isUniquelyReferenced_nonNull_native);
      unint64_t v20 = sub_22081DA10(v7 | ((unint64_t)v8 << 32));
      if ((v19 & 1) != (v21 & 1)) {
        goto LABEL_32;
      }
      unint64_t v15 = v20;
      if ((v19 & 1) == 0) {
        goto LABEL_20;
      }
LABEL_18:
      *(void *)(v3[7] + 8 * v15) = v12;
LABEL_22:
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v2 = sub_22081CFF4(0, v2[2] + 1, 1, v2);
      }
      unint64_t v27 = v2[2];
      unint64_t v26 = v2[3];
      if (v27 >= v26 >> 1) {
        uint64_t v2 = sub_22081CFF4((void *)(v26 > 1), v27 + 1, 1, v2);
      }
      v2[2] = v27 + 1;
      unint64_t v5 = &v2[4 * v27];
      v5[5] = v4++;
      *((_DWORD *)v5 + 8) = v7;
      *((unsigned char *)v5 + 36) = v8;
      v5[6] = v4;
      *((unsigned char *)v5 + 56) = 0;
      goto LABEL_4;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      if (v14) {
        goto LABEL_18;
      }
    }
    else
    {
      sub_220826744();
      if (v19) {
        goto LABEL_18;
      }
    }
LABEL_20:
    v3[(v15 >> 6) + 8] |= 1 << v15;
    uint64_t v22 = v3[6] + 8 * v15;
    *(_DWORD *)uint64_t v22 = v7;
    *(unsigned char *)(v22 + 4) = v8;
    *(void *)(v3[7] + 8 * v15) = v12;
    uint64_t v23 = v3[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_30;
    }
    v3[2] = v25;
    goto LABEL_22;
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD40FD8);
  uint64_t result = sub_22093F2F0();
  __break(1u);
  return result;
}

uint64_t sub_22090E5D4()
{
  unint64_t v1 = sub_22080D4A8(MEMORY[0x263F8EE78]);
  uint64_t v2 = *(void *)(v0 + 16);
  long long v63 = *(_OWORD *)(v0 + 24);
  uint64_t v55 = v0;
  unsigned __int8 v64 = *(unsigned char *)(v0 + 40);
  int v3 = v64;
  uint64_t v56 = *((void *)&v63 + 1);
  uint64_t v4 = v63;
  uint64_t v57 = v2;
  uint64_t v51 = v63;
  if (v64)
  {
    if (v64 == 1 && *(void *)(v63 + 16))
    {
      unint64_t v5 = (uint64_t *)(v63 + 32);
    }
    else
    {
      unint64_t v6 = v1;
      swift_beginAccess();
      uint64_t v7 = *(void *)(v57 + 16);
      if (!v7) {
        goto LABEL_55;
      }
      unint64_t v5 = (uint64_t *)(v7 + 8);
      unint64_t v1 = v6;
    }
    uint64_t v51 = *v5;
  }
  int v59 = (void *)v1;
  unsigned __int8 v8 = (void **)(v57 + 16);
  uint64_t v9 = swift_beginAccess();
  char v10 = *(void **)(v57 + 16);
  if (!v10) {
    goto LABEL_53;
  }
  uint64_t v11 = 0;
  uint64_t v52 = v63 + 32;
  uint64_t v12 = (void *)MEMORY[0x263F8EE78];
  uint64_t v13 = v51;
  int v54 = v64;
  unint64_t v53 = (void **)(v57 + 16);
  while (1)
  {
    if (v13 == v10[1]) {
      goto LABEL_46;
    }
    uint64_t v61 = v13;
    MEMORY[0x270FA5388](v9);
    uint64_t v49 = (uint64_t)&v61;
    uint64_t v15 = v56;
    sub_220831F30(v4, v56, v3);
    sub_220831F30(v4, v15, v3);
    unint64_t v16 = sub_2208FD268((uint64_t (*)(long long *))sub_220894728, (uint64_t)&v48, v4, v15, v3);
    sub_220894638((uint64_t)&v63);
    if (v3)
    {
      if (v3 != 1)
      {
        if (v16)
        {
          int v50 = 0;
          uint64_t v49 = 91;
          goto LABEL_63;
        }
        goto LABEL_61;
      }
      unint64_t v18 = *(void *)(v4 + 16);
      if (v16 == v18)
      {
        sub_220894638((uint64_t)&v63);
LABEL_60:
        uint64_t v51 = v13;
LABEL_61:
        uint64_t v13 = v51;
LABEL_62:
        uint64_t v61 = 0;
        unint64_t v62 = 0xE000000000000000;
        sub_22093EEA0();
        swift_bridgeObjectRelease();
        uint64_t v61 = 0x6E6F697469736F70;
        unint64_t v62 = 0xE900000000000020;
        uint64_t v60 = v13;
        sub_22093F1A0();
        sub_22093E6C0();
        swift_bridgeObjectRelease();
        sub_22093E6C0();
        int v50 = 0;
        uint64_t v49 = 169;
        goto LABEL_63;
      }
      if (v16 >= v18) {
        goto LABEL_50;
      }
      uint64_t v17 = *(void *)(v52 + 16 * v16);
      sub_220894638((uint64_t)&v63);
    }
    else
    {
      uint64_t v17 = v4;
      if (v16) {
        goto LABEL_48;
      }
    }
    if (v61 < v17) {
      goto LABEL_62;
    }
    if (v13 < 0) {
      goto LABEL_56;
    }
    char v19 = *v8;
    if (!*v8) {
      goto LABEL_54;
    }
    if (v13 >= v19[1]) {
      goto LABEL_56;
    }
    uint64_t v20 = sub_2208916D4(v13, v19, v57);
    uint64_t v22 = v20;
    unint64_t v16 = v21;
    if (!v59[2]) {
      break;
    }
    unint64_t v23 = sub_22081DAAC(v20, v21);
    if ((v24 & 1) == 0) {
      break;
    }
    unint64_t v25 = *(void *)(v59[7] + 8 * v23);
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      if ((v25 & 0x8000000000000000) != 0) {
        goto LABEL_45;
      }
    }
    else
    {
      uint64_t v12 = sub_22080AC74(v12);
      if ((v25 & 0x8000000000000000) != 0)
      {
LABEL_45:
        __break(1u);
LABEL_46:
        swift_bridgeObjectRelease();
        return (uint64_t)v12;
      }
    }
    if (v25 >= v12[2]) {
      goto LABEL_52;
    }
    sub_220869870(v13, v13 + 1);
LABEL_11:
    uint64_t v13 = sub_2208937D4(v13);
    uint64_t v9 = swift_bridgeObjectRelease();
    char v10 = *v8;
    if (!*v8) {
      goto LABEL_53;
    }
  }
  uint64_t v58 = v11;
  uint64_t v26 = v4;
  uint64_t v27 = v22;
  uint64_t v28 = v12;
  uint64_t v29 = v12[2];
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v61 = (uint64_t)v59;
  unint64_t v32 = sub_22081DAAC(v27, v16);
  uint64_t v33 = v59[2];
  BOOL v34 = (v31 & 1) == 0;
  uint64_t v35 = v33 + v34;
  if (!__OFADD__(v33, v34))
  {
    char v36 = v31;
    if (v59[3] >= v35)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_2208268E4();
      }
    }
    else
    {
      sub_22082165C(v35, isUniquelyReferenced_nonNull_native);
      unint64_t v37 = sub_22081DAAC(v27, v16);
      if ((v36 & 1) != (v38 & 1)) {
        goto LABEL_64;
      }
      unint64_t v32 = v37;
    }
    uint64_t v39 = (void *)v61;
    int v59 = (void *)v61;
    if (v36)
    {
      *(void *)(*(void *)(v61 + 56) + 8 * v32) = v29;
    }
    else
    {
      *(void *)(v61 + 8 * (v32 >> 6) + 64) |= 1 << v32;
      char v40 = (uint64_t *)(v39[6] + 16 * v32);
      *char v40 = v27;
      v40[1] = v16;
      *(void *)(v39[7] + 8 * v32) = v29;
      uint64_t v41 = v39[2];
      BOOL v42 = __OFADD__(v41, 1);
      uint64_t v43 = v41 + 1;
      if (v42) {
        goto LABEL_51;
      }
      v39[2] = v43;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v12 = v28;
    char v44 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v4 = v26;
    unsigned __int8 v8 = v53;
    if ((v44 & 1) == 0) {
      uint64_t v12 = sub_22081D130(0, v28[2] + 1, 1, v28);
    }
    uint64_t v11 = v58;
    unint64_t v46 = v12[2];
    unint64_t v45 = v12[3];
    if (v46 >= v45 >> 1) {
      uint64_t v12 = sub_22081D130((void *)(v45 > 1), v46 + 1, 1, v12);
    }
    v12[2] = v46 + 1;
    char v14 = &v12[5 * v46];
    v14[4] = v27;
    v14[5] = v16;
    v14[6] = v13;
    v14[7] = v13 + 1;
    *((unsigned char *)v14 + 64) = 0;
    int v3 = v54;
    goto LABEL_11;
  }
  __break(1u);
LABEL_48:
  if (v16 == 1) {
    goto LABEL_60;
  }
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  int v50 = 0;
  uint64_t v49 = 128;
LABEL_63:
  sub_22093F090();
  __break(1u);
LABEL_64:
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD40FC0);
  uint64_t result = sub_22093F2F0();
  __break(1u);
  return result;
}

uint64_t sub_22090EC0C(uint64_t a1)
{
  uint64_t v2 = (void *)MEMORY[0x263F8EE78];
  int v3 = (void *)sub_22080D4A8(MEMORY[0x263F8EE78]);
  uint64_t v31 = *(void *)(a1 + 16);
  if (!v31)
  {
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v2;
  }
  unint64_t v4 = 0;
  uint64_t v30 = a1 + 32;
  while (1)
  {
    unint64_t v6 = (uint64_t *)(v30 + 16 * v4);
    uint64_t v8 = *v6;
    uint64_t v7 = v6[1];
    uint64_t v9 = v3[2];
    swift_bridgeObjectRetain();
    if (!v9) {
      break;
    }
    unint64_t v10 = sub_22081DAAC(v8, v7);
    if ((v11 & 1) == 0) {
      break;
    }
    unint64_t v12 = *(void *)(v3[7] + 8 * v10);
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      if ((v12 & 0x8000000000000000) != 0) {
        goto LABEL_27;
      }
    }
    else
    {
      uint64_t v2 = sub_22080AC74(v2);
      if ((v12 & 0x8000000000000000) != 0)
      {
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
    }
    if (v12 >= v2[2]) {
      goto LABEL_31;
    }
    sub_220869870(v4, v4 + 1);
    ++v4;
LABEL_4:
    swift_bridgeObjectRelease();
    if (v4 == v31) {
      goto LABEL_28;
    }
  }
  uint64_t v13 = v2[2];
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v16 = sub_22081DAAC(v8, v7);
  uint64_t v17 = v3[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (!__OFADD__(v17, v18))
  {
    char v20 = v15;
    if (v3[3] < v19)
    {
      sub_22082165C(v19, isUniquelyReferenced_nonNull_native);
      unint64_t v21 = sub_22081DAAC(v8, v7);
      if ((v20 & 1) != (v22 & 1)) {
        goto LABEL_32;
      }
      unint64_t v16 = v21;
      if ((v20 & 1) == 0) {
        goto LABEL_20;
      }
LABEL_18:
      *(void *)(v3[7] + 8 * v16) = v13;
LABEL_22:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v2 = sub_22081D130(0, v2[2] + 1, 1, v2);
      }
      unint64_t v28 = v2[2];
      unint64_t v27 = v2[3];
      if (v28 >= v27 >> 1) {
        uint64_t v2 = sub_22081D130((void *)(v27 > 1), v28 + 1, 1, v2);
      }
      v2[2] = v28 + 1;
      unint64_t v5 = &v2[5 * v28];
      v5[5] = v7;
      v5[6] = v4++;
      v5[4] = v8;
      v5[7] = v4;
      *((unsigned char *)v5 + 64) = 0;
      goto LABEL_4;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      if (v15) {
        goto LABEL_18;
      }
    }
    else
    {
      sub_2208268E4();
      if (v20) {
        goto LABEL_18;
      }
    }
LABEL_20:
    v3[(v16 >> 6) + 8] |= 1 << v16;
    unint64_t v23 = (uint64_t *)(v3[6] + 16 * v16);
    *unint64_t v23 = v8;
    v23[1] = v7;
    *(void *)(v3[7] + 8 * v16) = v13;
    uint64_t v24 = v3[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25) {
      goto LABEL_30;
    }
    v3[2] = v26;
    swift_bridgeObjectRetain();
    goto LABEL_22;
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD40FC0);
  uint64_t result = sub_22093F2F0();
  __break(1u);
  return result;
}

uint64_t sub_22090EEE4()
{
  unint64_t v1 = sub_220833FF0(MEMORY[0x263F8EE78]);
  uint64_t v2 = *(void *)(v0 + 16);
  long long v63 = *(_OWORD *)(v0 + 24);
  uint64_t v55 = v0;
  unsigned __int8 v64 = *(unsigned char *)(v0 + 40);
  int v3 = v64;
  uint64_t v56 = *((void *)&v63 + 1);
  uint64_t v4 = v63;
  uint64_t v57 = v2;
  int64_t v50 = v63;
  if (v64)
  {
    if (v64 == 1 && *(void *)(v63 + 16))
    {
      unint64_t v5 = (int64_t *)(v63 + 32);
    }
    else
    {
      unint64_t v6 = v1;
      swift_beginAccess();
      uint64_t v7 = *(void *)(v57 + 16);
      if (!v7) {
        goto LABEL_55;
      }
      unint64_t v5 = (int64_t *)(v7 + 8);
      unint64_t v1 = v6;
    }
    int64_t v50 = *v5;
  }
  int v59 = (void *)v1;
  uint64_t v8 = (void **)(v57 + 16);
  uint64_t v9 = swift_beginAccess();
  unint64_t v10 = *(void **)(v57 + 16);
  if (!v10) {
    goto LABEL_53;
  }
  uint64_t v11 = 0;
  uint64_t v51 = v63 + 32;
  unint64_t v12 = (void *)MEMORY[0x263F8EE78];
  int64_t v13 = v50;
  int v54 = v64;
  uint64_t v52 = v63;
  unint64_t v53 = (void **)(v57 + 16);
  while (1)
  {
    if (v13 == v10[1]) {
      goto LABEL_46;
    }
    uint64_t v61 = v13;
    MEMORY[0x270FA5388](v9);
    uint64_t v48 = (uint64_t)&v61;
    uint64_t v15 = v56;
    sub_220831F30(v4, v56, v3);
    sub_220831F30(v4, v15, v3);
    unint64_t v16 = sub_2208FD268((uint64_t (*)(long long *))sub_22089466C, (uint64_t)&v47, v4, v15, v3);
    sub_220894638((uint64_t)&v63);
    if (v3)
    {
      if (v3 != 1)
      {
        if (v16)
        {
          int v49 = 0;
          uint64_t v48 = 91;
          goto LABEL_63;
        }
        goto LABEL_61;
      }
      unint64_t v18 = *(void *)(v4 + 16);
      if (v16 == v18)
      {
        sub_220894638((uint64_t)&v63);
LABEL_60:
        int64_t v50 = v13;
LABEL_61:
        int64_t v13 = v50;
LABEL_62:
        uint64_t v61 = 0;
        unint64_t v62 = 0xE000000000000000;
        sub_22093EEA0();
        swift_bridgeObjectRelease();
        uint64_t v61 = 0x6E6F697469736F70;
        unint64_t v62 = 0xE900000000000020;
        int64_t v60 = v13;
        sub_22093F1A0();
        sub_22093E6C0();
        swift_bridgeObjectRelease();
        sub_22093E6C0();
        int v49 = 0;
        uint64_t v48 = 169;
        goto LABEL_63;
      }
      if (v16 >= v18) {
        goto LABEL_50;
      }
      uint64_t v17 = *(void *)(v51 + 16 * v16);
      sub_220894638((uint64_t)&v63);
    }
    else
    {
      uint64_t v17 = v4;
      if (v16) {
        goto LABEL_48;
      }
    }
    if (v61 < v17) {
      goto LABEL_62;
    }
    if (v13 < 0) {
      goto LABEL_56;
    }
    uint64_t v19 = *v8;
    if (!*v8) {
      goto LABEL_54;
    }
    if (v13 >= v19[1]) {
      goto LABEL_56;
    }
    uint64_t v20 = sub_2208915A0(v13, v19, v57);
    uint64_t v22 = v20;
    int v23 = v21 & 1;
    if (!v59[2]) {
      break;
    }
    unint64_t v24 = sub_22081DB50(v20, v21 & 1);
    if ((v25 & 1) == 0) {
      break;
    }
    unint64_t v26 = *(void *)(v59[7] + 8 * v24);
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      if ((v26 & 0x8000000000000000) != 0) {
        goto LABEL_45;
      }
    }
    else
    {
      unint64_t v12 = sub_22080AC88(v12);
      if ((v26 & 0x8000000000000000) != 0)
      {
LABEL_45:
        __break(1u);
LABEL_46:
        swift_bridgeObjectRelease();
        return (uint64_t)v12;
      }
    }
    if (v26 >= v12[2]) {
      goto LABEL_52;
    }
    sub_220869870(v13, v13 + 1);
LABEL_11:
    uint64_t v9 = sub_2208937D4(v13);
    int64_t v13 = v9;
    unint64_t v10 = *v8;
    if (!*v8) {
      goto LABEL_53;
    }
  }
  uint64_t v58 = v11;
  unint64_t v27 = v12;
  uint64_t v28 = v12[2];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v61 = (uint64_t)v59;
  unint64_t v16 = v22;
  unint64_t v31 = sub_22081DB50(v22, v23);
  uint64_t v32 = v59[2];
  BOOL v33 = (v30 & 1) == 0;
  uint64_t v34 = v32 + v33;
  if (!__OFADD__(v32, v33))
  {
    char v35 = v30;
    if (v59[3] >= v34)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_220826A90();
      }
    }
    else
    {
      sub_220821988(v34, isUniquelyReferenced_nonNull_native);
      unint64_t v36 = sub_22081DB50(v22, v23);
      if ((v35 & 1) != (v37 & 1)) {
        goto LABEL_64;
      }
      unint64_t v31 = v36;
    }
    char v38 = (void *)v61;
    int v59 = (void *)v61;
    if (v35)
    {
      *(void *)(*(void *)(v61 + 56) + 8 * v31) = v28;
    }
    else
    {
      *(void *)(v61 + 8 * (v31 >> 6) + 64) |= 1 << v31;
      uint64_t v39 = v38[6] + 16 * v31;
      *(void *)uint64_t v39 = v22;
      *(unsigned char *)(v39 + 8) = v23 != 0;
      *(void *)(v38[7] + 8 * v31) = v28;
      uint64_t v40 = v38[2];
      BOOL v41 = __OFADD__(v40, 1);
      uint64_t v42 = v40 + 1;
      if (v41) {
        goto LABEL_51;
      }
      v38[2] = v42;
    }
    swift_bridgeObjectRelease();
    unint64_t v12 = v27;
    char v43 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v4 = v52;
    uint64_t v8 = v53;
    uint64_t v11 = v58;
    if ((v43 & 1) == 0) {
      unint64_t v12 = sub_22081D144(0, v12[2] + 1, 1, v12);
    }
    unint64_t v45 = v12[2];
    unint64_t v44 = v12[3];
    if (v45 >= v44 >> 1) {
      unint64_t v12 = sub_22081D144((void *)(v44 > 1), v45 + 1, 1, v12);
    }
    v12[2] = v45 + 1;
    char v14 = &v12[5 * v45];
    v14[4] = v22;
    *((unsigned char *)v14 + 40) = v23 != 0;
    v14[6] = v13;
    v14[7] = v13 + 1;
    *((unsigned char *)v14 + 64) = 0;
    int v3 = v54;
    goto LABEL_11;
  }
  __break(1u);
LABEL_48:
  if (v16 == 1) {
    goto LABEL_60;
  }
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  int v49 = 0;
  uint64_t v48 = 128;
LABEL_63:
  sub_22093F090();
  __break(1u);
LABEL_64:
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD40FE0);
  uint64_t result = sub_22093F2F0();
  __break(1u);
  return result;
}

uint64_t sub_22090F508(uint64_t a1)
{
  uint64_t v2 = (void *)MEMORY[0x263F8EE78];
  int v3 = (void *)sub_220833FF0(MEMORY[0x263F8EE78]);
  uint64_t v30 = *(void *)(a1 + 16);
  if (!v30)
  {
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v2;
  }
  unint64_t v4 = 0;
  uint64_t v29 = a1 + 32;
  while (1)
  {
    uint64_t v6 = v29 + 16 * v4;
    uint64_t v7 = *(void *)v6;
    char v8 = *(unsigned char *)(v6 + 8);
    if (!v3[2]) {
      break;
    }
    unint64_t v9 = sub_22081DB50(v7, v8);
    if ((v10 & 1) == 0) {
      break;
    }
    unint64_t v11 = *(void *)(v3[7] + 8 * v9);
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      if ((v11 & 0x8000000000000000) != 0) {
        goto LABEL_27;
      }
    }
    else
    {
      uint64_t v2 = sub_22080AC88(v2);
      if ((v11 & 0x8000000000000000) != 0)
      {
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
    }
    if (v11 >= v2[2]) {
      goto LABEL_31;
    }
    sub_220869870(v4, v4 + 1);
    ++v4;
LABEL_4:
    if (v4 == v30) {
      goto LABEL_28;
    }
  }
  uint64_t v12 = v2[2];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v15 = sub_22081DB50(v7, v8);
  uint64_t v16 = v3[2];
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (!__OFADD__(v16, v17))
  {
    char v19 = v14;
    if (v3[3] < v18)
    {
      sub_220821988(v18, isUniquelyReferenced_nonNull_native);
      unint64_t v20 = sub_22081DB50(v7, v8);
      if ((v19 & 1) != (v21 & 1)) {
        goto LABEL_32;
      }
      unint64_t v15 = v20;
      if ((v19 & 1) == 0) {
        goto LABEL_20;
      }
LABEL_18:
      *(void *)(v3[7] + 8 * v15) = v12;
LABEL_22:
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v2 = sub_22081D144(0, v2[2] + 1, 1, v2);
      }
      unint64_t v27 = v2[2];
      unint64_t v26 = v2[3];
      if (v27 >= v26 >> 1) {
        uint64_t v2 = sub_22081D144((void *)(v26 > 1), v27 + 1, 1, v2);
      }
      v2[2] = v27 + 1;
      unint64_t v5 = &v2[5 * v27];
      v5[6] = v4++;
      v5[4] = v7;
      *((unsigned char *)v5 + 40) = v8;
      v5[7] = v4;
      *((unsigned char *)v5 + 64) = 0;
      goto LABEL_4;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      if (v14) {
        goto LABEL_18;
      }
    }
    else
    {
      sub_220826A90();
      if (v19) {
        goto LABEL_18;
      }
    }
LABEL_20:
    v3[(v15 >> 6) + 8] |= 1 << v15;
    uint64_t v22 = v3[6] + 16 * v15;
    *(void *)uint64_t v22 = v7;
    *(unsigned char *)(v22 + 8) = v8;
    *(void *)(v3[7] + 8 * v15) = v12;
    uint64_t v23 = v3[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_30;
    }
    v3[2] = v25;
    goto LABEL_22;
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD40FE0);
  uint64_t result = sub_22093F2F0();
  __break(1u);
  return result;
}

unint64_t sub_22090F7BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD411B8);
  uint64_t v48 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55[0] = a1;
  v55[1] = a2;
  v55[2] = a3;
  v56[0] = a1;
  v56[1] = a2;
  v56[2] = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t result = sub_22080BA90(a4, a5);
  if ((result & 0x8000000000000000) != 0) {
    goto LABEL_17;
  }
  if (result >= *(void *)(a1 + 16))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  sub_22080B5B8(a1 + 32 + 40 * result, (uint64_t)v56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B5B8(a1 + 32, (uint64_t)v52);
  uint64_t v15 = v53;
  uint64_t v14 = v54;
  __swift_project_boxed_opaque_existential_1(v52, v53);
  uint64_t v16 = *(void *)(v14 + 8);
  BOOL v17 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v18 = v17(v15, v16);
  unint64_t result = sub_22080B0D8((uint64_t)v52);
  if (v18 < 0)
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  BOOL v19 = v18 == 0;
  uint64_t v20 = (2 * v19);
  sub_220831F30(0, v18, 2 * v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(0, v18, v20);
  uint64_t v22 = v57;
  uint64_t v21 = v58;
  __swift_project_boxed_opaque_existential_1(v56, v57);
  (*(void (**)(void *__return_ptr, void, uint64_t, uint64_t, uint64_t))(*(void *)(v21 + 8) + 160))(v52, 0, v18, v20, v22);
  sub_22080B6B4(0, v18, v20);
  sub_22080B0D8((uint64_t)v56);
  uint64_t v24 = v53;
  uint64_t v23 = v54;
  __swift_project_boxed_opaque_existential_1(v52, v53);
  uint64_t v25 = (*(uint64_t (**)(uint64_t))(*(void *)(v23 + 8) + 80))(v24);
  uint64_t v26 = sub_22093E100();
  if (v25 == v26)
  {
    sub_220842AC4((uint64_t)v56);
    uint64_t v43 = sub_22090B6C4();
    sub_220843060((uint64_t)v56);
    goto LABEL_15;
  }
  uint64_t v27 = v26;
  uint64_t v29 = v53;
  uint64_t v28 = v54;
  __swift_project_boxed_opaque_existential_1(v52, v53);
  uint64_t v30 = (*(uint64_t (**)(uint64_t))(*(void *)(v28 + 8) + 48))(v29);
  uint64_t v31 = MEMORY[0x263F8EE78];
  if (!v30)
  {
LABEL_13:
    uint64_t v43 = sub_22090BDB4(v31);
    swift_bridgeObjectRelease();
LABEL_15:
    uint64_t v44 = sub_22088671C(v43);
    uint64_t v45 = swift_bridgeObjectRelease();
    MEMORY[0x270FA5388](v45);
    *(&v47 - 2) = (uint64_t)v55;
    uint64_t v46 = sub_220919E48(v44, (void (*)(char *, char *, uint64_t, void, void, void))sub_22091B4C4, (uint64_t)(&v47 - 4));
    swift_bridgeObjectRelease();
    sub_220833C84((uint64_t)v52);
    return v46;
  }
  uint64_t v32 = v30;
  uint64_t v51 = MEMORY[0x263F8EE78];
  sub_220826CF8(0, v30 & ~(v30 >> 63), 0);
  uint64_t v34 = v53;
  uint64_t v33 = v54;
  __swift_project_boxed_opaque_existential_1(v52, v53);
  unint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v33 + 8) + 32))(v34);
  if ((v32 & 0x8000000000000000) == 0)
  {
    uint64_t v35 = result;
    do
    {
      uint64_t v37 = v53;
      uint64_t v36 = v54;
      __swift_project_boxed_opaque_existential_1(v52, v53);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(*(void *)(v36 + 8) + 128))(v56, v35, v37);
      sub_220834D3C((uint64_t)v56, (uint64_t)v50, qword_26AD40FF8);
      sub_220835280((uint64_t)v50, (uint64_t)v49, qword_26AD40FF8);
      __swift_instantiateConcreteTypeFromMangledName(qword_26AD40FF8);
      int v38 = swift_dynamicCast();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v12, v38 ^ 1u, 1, v27);
      sub_2208352E4((uint64_t)v50, qword_26AD40FF8);
      uint64_t v31 = v51;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_220826CF8(0, *(void *)(v31 + 16) + 1, 1);
        uint64_t v31 = v51;
      }
      unint64_t v40 = *(void *)(v31 + 16);
      unint64_t v39 = *(void *)(v31 + 24);
      if (v40 >= v39 >> 1)
      {
        sub_220826CF8(v39 > 1, v40 + 1, 1);
        uint64_t v31 = v51;
      }
      *(void *)(v31 + 16) = v40 + 1;
      sub_220834D3C((uint64_t)v12, v31+ ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))+ *(void *)(v48 + 72) * v40, qword_26AD411B8);
      uint64_t v42 = v53;
      uint64_t v41 = v54;
      __swift_project_boxed_opaque_existential_1(v52, v53);
      uint64_t v35 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v41 + 8) + 64))(v35, v42);
      --v32;
    }
    while (v32);
    goto LABEL_13;
  }
LABEL_19:
  __break(1u);
  return result;
}

unint64_t sub_22090FD38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v46 = a1;
  uint64_t v47 = a2;
  uint64_t v48 = a3;
  v49[0] = a1;
  v49[1] = a2;
  v49[2] = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t result = sub_22080BA90(a4, a5);
  if ((result & 0x8000000000000000) != 0) {
    goto LABEL_19;
  }
  if (result >= *(void *)(a1 + 16))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  sub_22080B5B8(a1 + 32 + 40 * result, (uint64_t)v49);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B5B8(a1 + 32, (uint64_t)v43);
  uint64_t v9 = v44;
  uint64_t v10 = v45;
  __swift_project_boxed_opaque_existential_1(v43, v44);
  uint64_t v11 = *(void *)(v10 + 8);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = v12(v9, v11);
  unint64_t result = sub_22080B0D8((uint64_t)v43);
  if (v13 < 0)
  {
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  BOOL v14 = v13 == 0;
  uint64_t v15 = (2 * v14);
  sub_220831F30(0, v13, 2 * v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(0, v13, v15);
  uint64_t v16 = v50;
  uint64_t v17 = v51;
  __swift_project_boxed_opaque_existential_1(v49, v50);
  (*(void (**)(void *__return_ptr, void, uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 8) + 160))(v43, 0, v13, v15, v16);
  sub_22080B6B4(0, v13, v15);
  sub_22080B0D8((uint64_t)v49);
  uint64_t v18 = v44;
  uint64_t v19 = v45;
  __swift_project_boxed_opaque_existential_1(v43, v44);
  if ((*(uint64_t (**)(uint64_t))(*(void *)(v19 + 8) + 80))(v18) == MEMORY[0x263F06F78])
  {
    sub_220842D2C((uint64_t)v49);
    uint64_t v34 = sub_22090C234();
    sub_220843060((uint64_t)v49);
    goto LABEL_17;
  }
  uint64_t v20 = v44;
  uint64_t v21 = v45;
  __swift_project_boxed_opaque_existential_1(v43, v44);
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(*(void *)(v21 + 8) + 48))(v20);
  uint64_t v23 = MEMORY[0x263F8EE78];
  if (!v22)
  {
LABEL_15:
    uint64_t v34 = sub_22090C8AC(v23);
    swift_bridgeObjectRelease();
LABEL_17:
    uint64_t v35 = sub_220886958(v34);
    uint64_t v36 = swift_bridgeObjectRelease();
    MEMORY[0x270FA5388](v36);
    uint64_t v37 = sub_22091A054(v35, (void (*)(long long *, long long *, void *, uint64_t, uint64_t, uint64_t))sub_22091B480);
    swift_bridgeObjectRelease();
    sub_220833C84((uint64_t)v43);
    return v37;
  }
  uint64_t v24 = v22;
  uint64_t v42 = MEMORY[0x263F8EE78];
  sub_220826D18(0, v22 & ~(v22 >> 63), 0);
  uint64_t v26 = v44;
  uint64_t v25 = v45;
  __swift_project_boxed_opaque_existential_1(v43, v44);
  unint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v25 + 8) + 32))(v26);
  if ((v24 & 0x8000000000000000) == 0)
  {
    uint64_t v27 = result;
    do
    {
      uint64_t v28 = v44;
      uint64_t v29 = v45;
      __swift_project_boxed_opaque_existential_1(v43, v44);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(*(void *)(v29 + 8) + 128))(v49, v27, v28);
      sub_220834D3C((uint64_t)v49, (uint64_t)v40, qword_26AD40FF8);
      sub_220835280((uint64_t)v40, (uint64_t)v39, qword_26AD40FF8);
      __swift_instantiateConcreteTypeFromMangledName(qword_26AD40FF8);
      if ((swift_dynamicCast() & 1) == 0) {
        long long v41 = xmmword_220944E00;
      }
      sub_2208352E4((uint64_t)v40, qword_26AD40FF8);
      long long v38 = v41;
      uint64_t v23 = v42;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_220826D18(0, *(void *)(v23 + 16) + 1, 1);
        uint64_t v23 = v42;
      }
      unint64_t v31 = *(void *)(v23 + 16);
      unint64_t v30 = *(void *)(v23 + 24);
      if (v31 >= v30 >> 1)
      {
        sub_220826D18((void *)(v30 > 1), v31 + 1, 1);
        uint64_t v23 = v42;
      }
      *(void *)(v23 + 16) = v31 + 1;
      *(_OWORD *)(v23 + 16 * v31 + 32) = v38;
      uint64_t v32 = v44;
      uint64_t v33 = v45;
      __swift_project_boxed_opaque_existential_1(v43, v44);
      uint64_t v27 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v33 + 8) + 64))(v27, v32);
      --v24;
    }
    while (v24);
    goto LABEL_15;
  }
LABEL_21:
  __break(1u);
  return result;
}

unint64_t sub_22091020C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v45 = a1;
  uint64_t v46 = a2;
  uint64_t v47 = a3;
  v48[0] = a1;
  v48[1] = a2;
  v48[2] = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t result = sub_22080BA90(a4, a5);
  if ((result & 0x8000000000000000) != 0) {
    goto LABEL_20;
  }
  if (result >= *(void *)(a1 + 16))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  sub_22080B5B8(a1 + 32 + 40 * result, (uint64_t)v48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B5B8(a1 + 32, (uint64_t)v42);
  uint64_t v9 = v43;
  uint64_t v10 = v44;
  __swift_project_boxed_opaque_existential_1(v42, v43);
  uint64_t v11 = *(void *)(v10 + 8);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = v12(v9, v11);
  unint64_t result = sub_22080B0D8((uint64_t)v42);
  if (v13 < 0)
  {
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  BOOL v14 = v13 == 0;
  uint64_t v15 = (2 * v14);
  sub_220831F30(0, v13, 2 * v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(0, v13, v15);
  uint64_t v16 = v49;
  uint64_t v17 = v50;
  __swift_project_boxed_opaque_existential_1(v48, v49);
  (*(void (**)(void *__return_ptr, void, uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 8) + 160))(v42, 0, v13, v15, v16);
  sub_22080B6B4(0, v13, v15);
  sub_22080B0D8((uint64_t)v48);
  uint64_t v18 = v43;
  uint64_t v19 = v44;
  __swift_project_boxed_opaque_existential_1(v42, v43);
  if ((*(uint64_t (**)(uint64_t))(*(void *)(v19 + 8) + 80))(v18) == MEMORY[0x263F8D4F8])
  {
    sub_2208425F8((uint64_t)v48);
    uint64_t v35 = sub_22090CB9C();
    sub_220843060((uint64_t)v48);
    goto LABEL_18;
  }
  uint64_t v20 = v43;
  uint64_t v21 = v44;
  __swift_project_boxed_opaque_existential_1(v42, v43);
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(*(void *)(v21 + 8) + 48))(v20);
  uint64_t v23 = MEMORY[0x263F8EE78];
  if (!v22)
  {
LABEL_16:
    uint64_t v35 = sub_22090D168(v23);
    swift_bridgeObjectRelease();
LABEL_18:
    uint64_t v36 = sub_220886AC0(v35);
    uint64_t v37 = swift_bridgeObjectRelease();
    MEMORY[0x270FA5388](v37);
    uint64_t v38 = sub_22091A1D8(v36, (void (*)(unsigned char *, long long *, char *, uint64_t, uint64_t, uint64_t))sub_22091B430);
    swift_bridgeObjectRelease();
    sub_220833C84((uint64_t)v42);
    return v38;
  }
  uint64_t v24 = v22;
  uint64_t v41 = MEMORY[0x263F8EE78];
  sub_220826D38(0, v22 & ~(v22 >> 63), 0);
  uint64_t v26 = v43;
  uint64_t v25 = v44;
  __swift_project_boxed_opaque_existential_1(v42, v43);
  unint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v25 + 8) + 32))(v26);
  if ((v24 & 0x8000000000000000) == 0)
  {
    uint64_t v27 = result;
    do
    {
      uint64_t v28 = v43;
      uint64_t v29 = v44;
      __swift_project_boxed_opaque_existential_1(v42, v43);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(*(void *)(v29 + 8) + 128))(v48, v27, v28);
      sub_220834D3C((uint64_t)v48, (uint64_t)v40, qword_26AD40FF8);
      sub_220835280((uint64_t)v40, (uint64_t)v39, qword_26AD40FF8);
      __swift_instantiateConcreteTypeFromMangledName(qword_26AD40FF8);
      if (swift_dynamicCast()) {
        char v30 = v39[39];
      }
      else {
        char v30 = 2;
      }
      sub_2208352E4((uint64_t)v40, qword_26AD40FF8);
      uint64_t v23 = v41;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_220826D38(0, *(void *)(v23 + 16) + 1, 1);
        uint64_t v23 = v41;
      }
      unint64_t v32 = *(void *)(v23 + 16);
      unint64_t v31 = *(void *)(v23 + 24);
      if (v32 >= v31 >> 1)
      {
        sub_220826D38((char *)(v31 > 1), v32 + 1, 1);
        uint64_t v23 = v41;
      }
      *(void *)(v23 + 16) = v32 + 1;
      *(unsigned char *)(v23 + v32 + 32) = v30;
      uint64_t v33 = v43;
      uint64_t v34 = v44;
      __swift_project_boxed_opaque_existential_1(v42, v43);
      uint64_t v27 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v34 + 8) + 64))(v27, v33);
      --v24;
    }
    while (v24);
    goto LABEL_16;
  }
LABEL_22:
  __break(1u);
  return result;
}

unint64_t sub_2209106BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v51[0] = a1;
  v51[1] = a2;
  v51[2] = a3;
  v52[0] = a1;
  v52[1] = a2;
  v52[2] = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t result = sub_22080BA90(a4, a5);
  if ((result & 0x8000000000000000) != 0) {
    goto LABEL_20;
  }
  if (result >= *(void *)(a1 + 16))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  sub_22080B5B8(a1 + 32 + 40 * result, (uint64_t)v52);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B5B8(a1 + 32, (uint64_t)v48);
  uint64_t v9 = v49;
  uint64_t v10 = v50;
  __swift_project_boxed_opaque_existential_1(v48, v49);
  uint64_t v11 = *(void *)(v10 + 8);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = v12(v9, v11);
  unint64_t result = sub_22080B0D8((uint64_t)v48);
  if (v13 < 0)
  {
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  BOOL v14 = v13 == 0;
  uint64_t v15 = (2 * v14);
  sub_220831F30(0, v13, 2 * v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(0, v13, v15);
  uint64_t v16 = v53;
  uint64_t v17 = v54;
  __swift_project_boxed_opaque_existential_1(v52, v53);
  (*(void (**)(void *__return_ptr, void, uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 8) + 160))(v48, 0, v13, v15, v16);
  sub_22080B6B4(0, v13, v15);
  sub_22080B0D8((uint64_t)v52);
  uint64_t v18 = v49;
  uint64_t v19 = v50;
  __swift_project_boxed_opaque_existential_1(v48, v49);
  if ((*(uint64_t (**)(uint64_t))(*(void *)(v19 + 8) + 80))(v18) == MEMORY[0x263F8D538])
  {
    sub_220842390((uint64_t)v52);
    uint64_t v38 = sub_22090D3F4();
    sub_220843060((uint64_t)v52);
    goto LABEL_18;
  }
  uint64_t v20 = v49;
  uint64_t v21 = v50;
  __swift_project_boxed_opaque_existential_1(v48, v49);
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(*(void *)(v21 + 8) + 48))(v20);
  uint64_t v23 = MEMORY[0x263F8EE78];
  if (!v22)
  {
LABEL_16:
    uint64_t v38 = sub_22090DA18(v23);
    swift_bridgeObjectRelease();
LABEL_18:
    uint64_t v39 = sub_220886C40(v38);
    uint64_t v40 = swift_bridgeObjectRelease();
    MEMORY[0x270FA5388](v40);
    void v42[2] = v51;
    uint64_t v41 = sub_22091A630(v39, (void (*)(uint64_t *, long long *, uint64_t *, uint64_t, uint64_t, uint64_t))sub_22091B380, (uint64_t)v42, (uint64_t)v43, (void (*)(BOOL, unint64_t, uint64_t))sub_220827118);
    swift_bridgeObjectRelease();
    sub_220833C84((uint64_t)v48);
    return v41;
  }
  uint64_t v24 = v22;
  uint64_t v47 = MEMORY[0x263F8EE78];
  sub_220826D98(0, v22 & ~(v22 >> 63), 0);
  uint64_t v26 = v49;
  uint64_t v25 = v50;
  __swift_project_boxed_opaque_existential_1(v48, v49);
  unint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v25 + 8) + 32))(v26);
  if ((v24 & 0x8000000000000000) == 0)
  {
    uint64_t v27 = result;
    do
    {
      uint64_t v28 = v49;
      uint64_t v29 = v50;
      __swift_project_boxed_opaque_existential_1(v48, v49);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(*(void *)(v29 + 8) + 128))(v52, v27, v28);
      sub_220834D3C((uint64_t)v52, (uint64_t)v46, qword_26AD40FF8);
      sub_220835280((uint64_t)v46, (uint64_t)v44, qword_26AD40FF8);
      __swift_instantiateConcreteTypeFromMangledName(qword_26AD40FF8);
      int v30 = swift_dynamicCast();
      char v31 = v30;
      if (v30) {
        uint64_t v32 = v45;
      }
      else {
        uint64_t v32 = 0;
      }
      sub_2208352E4((uint64_t)v46, qword_26AD40FF8);
      uint64_t v23 = v47;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_220826D98(0, *(void *)(v23 + 16) + 1, 1);
        uint64_t v23 = v47;
      }
      unint64_t v34 = *(void *)(v23 + 16);
      unint64_t v33 = *(void *)(v23 + 24);
      if (v34 >= v33 >> 1)
      {
        sub_220826D98((char *)(v33 > 1), v34 + 1, 1);
        uint64_t v23 = v47;
      }
      *(void *)(v23 + 16) = v34 + 1;
      uint64_t v35 = v23 + 16 * v34;
      *(void *)(v35 + 32) = v32;
      *(unsigned char *)(v35 + 40) = v31 ^ 1;
      uint64_t v36 = v49;
      uint64_t v37 = v50;
      __swift_project_boxed_opaque_existential_1(v48, v49);
      uint64_t v27 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v37 + 8) + 64))(v27, v36);
      --v24;
    }
    while (v24);
    goto LABEL_16;
  }
LABEL_22:
  __break(1u);
  return result;
}

unint64_t sub_220910B88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v49 = a1;
  uint64_t v50 = a2;
  uint64_t v51 = a3;
  v52[0] = a1;
  v52[1] = a2;
  v52[2] = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t result = sub_22080BA90(a4, a5);
  if ((result & 0x8000000000000000) != 0) {
    goto LABEL_20;
  }
  if (result >= *(void *)(a1 + 16))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  sub_22080B5B8(a1 + 32 + 40 * result, (uint64_t)v52);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B5B8(a1 + 32, (uint64_t)v46);
  uint64_t v9 = v47;
  uint64_t v10 = v48;
  __swift_project_boxed_opaque_existential_1(v46, v47);
  uint64_t v11 = *(void *)(v10 + 8);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = v12(v9, v11);
  unint64_t result = sub_22080B0D8((uint64_t)v46);
  if (v13 < 0)
  {
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  BOOL v14 = v13 == 0;
  uint64_t v15 = (2 * v14);
  sub_220831F30(0, v13, 2 * v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(0, v13, v15);
  uint64_t v16 = v53;
  uint64_t v17 = v54;
  __swift_project_boxed_opaque_existential_1(v52, v53);
  (*(void (**)(void *__return_ptr, void, uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 8) + 160))(v46, 0, v13, v15, v16);
  sub_22080B6B4(0, v13, v15);
  sub_22080B0D8((uint64_t)v52);
  uint64_t v18 = v47;
  uint64_t v19 = v48;
  __swift_project_boxed_opaque_existential_1(v46, v47);
  if ((*(uint64_t (**)(uint64_t))(*(void *)(v19 + 8) + 80))(v18) == MEMORY[0x263F8D5C8])
  {
    sub_220842128((uint64_t)v52);
    uint64_t v38 = sub_22090DCCC();
    sub_220843060((uint64_t)v52);
    goto LABEL_18;
  }
  uint64_t v20 = v47;
  uint64_t v21 = v48;
  __swift_project_boxed_opaque_existential_1(v46, v47);
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(*(void *)(v21 + 8) + 48))(v20);
  uint64_t v23 = MEMORY[0x263F8EE78];
  if (!v22)
  {
LABEL_16:
    uint64_t v38 = sub_22090E318(v23);
    swift_bridgeObjectRelease();
LABEL_18:
    uint64_t v39 = sub_220886C68(v38);
    uint64_t v40 = swift_bridgeObjectRelease();
    MEMORY[0x270FA5388](v40);
    uint64_t v41 = sub_22091A340(v39, (void (*)(int *, long long *, int *, uint64_t, uint64_t, uint64_t))sub_22091B3D0);
    swift_bridgeObjectRelease();
    sub_220833C84((uint64_t)v46);
    return v41;
  }
  uint64_t v24 = v22;
  uint64_t v45 = MEMORY[0x263F8EE78];
  sub_220826D78(0, v22 & ~(v22 >> 63), 0);
  uint64_t v26 = v47;
  uint64_t v25 = v48;
  __swift_project_boxed_opaque_existential_1(v46, v47);
  unint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v25 + 8) + 32))(v26);
  if ((v24 & 0x8000000000000000) == 0)
  {
    uint64_t v27 = result;
    do
    {
      uint64_t v28 = v47;
      uint64_t v29 = v48;
      __swift_project_boxed_opaque_existential_1(v46, v47);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(*(void *)(v29 + 8) + 128))(v52, v27, v28);
      sub_220834D3C((uint64_t)v52, (uint64_t)v44, qword_26AD40FF8);
      sub_220835280((uint64_t)v44, (uint64_t)v42, qword_26AD40FF8);
      __swift_instantiateConcreteTypeFromMangledName(qword_26AD40FF8);
      int v30 = swift_dynamicCast();
      char v31 = v30;
      if (v30) {
        int v32 = v43;
      }
      else {
        int v32 = 0;
      }
      sub_2208352E4((uint64_t)v44, qword_26AD40FF8);
      uint64_t v23 = v45;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_220826D78(0, *(void *)(v23 + 16) + 1, 1);
        uint64_t v23 = v45;
      }
      unint64_t v34 = *(void *)(v23 + 16);
      unint64_t v33 = *(void *)(v23 + 24);
      if (v34 >= v33 >> 1)
      {
        sub_220826D78((char *)(v33 > 1), v34 + 1, 1);
        uint64_t v23 = v45;
      }
      *(void *)(v23 + 16) = v34 + 1;
      uint64_t v35 = v23 + 8 * v34;
      *(_DWORD *)(v35 + 32) = v32;
      *(unsigned char *)(v35 + 36) = v31 ^ 1;
      uint64_t v36 = v47;
      uint64_t v37 = v48;
      __swift_project_boxed_opaque_existential_1(v46, v47);
      uint64_t v27 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v37 + 8) + 64))(v27, v36);
      --v24;
    }
    while (v24);
    goto LABEL_16;
  }
LABEL_22:
  __break(1u);
  return result;
}

unint64_t sub_220911040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v50 = a1;
  uint64_t v51 = a2;
  uint64_t v52 = a3;
  v53[0] = a1;
  v53[1] = a2;
  v53[2] = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t result = sub_22080BA90(a4, a5);
  if ((result & 0x8000000000000000) != 0) {
    goto LABEL_23;
  }
  if (result >= *(void *)(a1 + 16))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_22080B5B8(a1 + 32 + 40 * result, (uint64_t)v53);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B5B8(a1 + 32, (uint64_t)v47);
  uint64_t v9 = v48;
  uint64_t v10 = v49;
  __swift_project_boxed_opaque_existential_1(v47, v48);
  uint64_t v11 = *(void *)(v10 + 8);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = v12(v9, v11);
  unint64_t result = sub_22080B0D8((uint64_t)v47);
  if (v13 < 0)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  BOOL v14 = v13 == 0;
  uint64_t v15 = (2 * v14);
  sub_220831F30(0, v13, 2 * v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(0, v13, v15);
  uint64_t v16 = v54;
  uint64_t v17 = v55;
  __swift_project_boxed_opaque_existential_1(v53, v54);
  (*(void (**)(void *__return_ptr, void, uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 8) + 160))(v47, 0, v13, v15, v16);
  sub_22080B6B4(0, v13, v15);
  sub_22080B0D8((uint64_t)v53);
  uint64_t v18 = v48;
  uint64_t v19 = v49;
  __swift_project_boxed_opaque_existential_1(v47, v48);
  if ((*(uint64_t (**)(uint64_t))(*(void *)(v19 + 8) + 80))(v18) == MEMORY[0x263F8D310])
  {
    sub_22084285C((uint64_t)v53);
    uint64_t v38 = sub_22090E5D4();
    sub_220843060((uint64_t)v53);
    goto LABEL_21;
  }
  uint64_t v20 = v48;
  uint64_t v21 = v49;
  __swift_project_boxed_opaque_existential_1(v47, v48);
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(*(void *)(v21 + 8) + 48))(v20);
  uint64_t v23 = MEMORY[0x263F8EE78];
  if (!v22)
  {
LABEL_19:
    uint64_t v38 = sub_22090EC0C(v23);
    swift_bridgeObjectRelease();
LABEL_21:
    uint64_t v39 = sub_220886E00(v38);
    uint64_t v40 = swift_bridgeObjectRelease();
    MEMORY[0x270FA5388](v40);
    uint64_t v41 = sub_22091A4C0(v39, (void (*)(long long *, long long *, void *, uint64_t, uint64_t, uint64_t))sub_22091B384);
    swift_bridgeObjectRelease();
    sub_220833C84((uint64_t)v47);
    return v41;
  }
  uint64_t v24 = v22;
  uint64_t v46 = MEMORY[0x263F8EE78];
  sub_220826D58(0, v22 & ~(v22 >> 63), 0);
  uint64_t v26 = v48;
  uint64_t v25 = v49;
  __swift_project_boxed_opaque_existential_1(v47, v48);
  unint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v25 + 8) + 32))(v26);
  if ((v24 & 0x8000000000000000) == 0)
  {
    uint64_t v27 = result;
    do
    {
      uint64_t v28 = v48;
      uint64_t v29 = v49;
      __swift_project_boxed_opaque_existential_1(v47, v48);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(*(void *)(v29 + 8) + 128))(v53, v27, v28);
      sub_220834D3C((uint64_t)v53, (uint64_t)v45, qword_26AD40FF8);
      sub_220835280((uint64_t)v45, (uint64_t)v42, qword_26AD40FF8);
      __swift_instantiateConcreteTypeFromMangledName(qword_26AD40FF8);
      int v30 = swift_dynamicCast();
      if (v30) {
        uint64_t v31 = v44;
      }
      else {
        uint64_t v31 = 0;
      }
      if (v30) {
        uint64_t v32 = v43;
      }
      else {
        uint64_t v32 = 0;
      }
      sub_2208352E4((uint64_t)v45, qword_26AD40FF8);
      uint64_t v23 = v46;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_220826D58(0, *(void *)(v23 + 16) + 1, 1);
        uint64_t v23 = v46;
      }
      unint64_t v34 = *(void *)(v23 + 16);
      unint64_t v33 = *(void *)(v23 + 24);
      if (v34 >= v33 >> 1)
      {
        sub_220826D58((void *)(v33 > 1), v34 + 1, 1);
        uint64_t v23 = v46;
      }
      *(void *)(v23 + 16) = v34 + 1;
      uint64_t v35 = v23 + 16 * v34;
      *(void *)(v35 + 32) = v32;
      *(void *)(v35 + 40) = v31;
      uint64_t v36 = v48;
      uint64_t v37 = v49;
      __swift_project_boxed_opaque_existential_1(v47, v48);
      uint64_t v27 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v37 + 8) + 64))(v27, v36);
      --v24;
    }
    while (v24);
    goto LABEL_19;
  }
LABEL_25:
  __break(1u);
  return result;
}

unint64_t sub_2209114F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v51[0] = a1;
  v51[1] = a2;
  v51[2] = a3;
  v52[0] = a1;
  v52[1] = a2;
  v52[2] = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t result = sub_22080BA90(a4, a5);
  if ((result & 0x8000000000000000) != 0) {
    goto LABEL_20;
  }
  if (result >= *(void *)(a1 + 16))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  sub_22080B5B8(a1 + 32 + 40 * result, (uint64_t)v52);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B5B8(a1 + 32, (uint64_t)v48);
  uint64_t v9 = v49;
  uint64_t v10 = v50;
  __swift_project_boxed_opaque_existential_1(v48, v49);
  uint64_t v11 = *(void *)(v10 + 8);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = v12(v9, v11);
  unint64_t result = sub_22080B0D8((uint64_t)v48);
  if (v13 < 0)
  {
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  BOOL v14 = v13 == 0;
  uint64_t v15 = (2 * v14);
  sub_220831F30(0, v13, 2 * v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(0, v13, v15);
  uint64_t v16 = v53;
  uint64_t v17 = v54;
  __swift_project_boxed_opaque_existential_1(v52, v53);
  (*(void (**)(void *__return_ptr, void, uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 8) + 160))(v48, 0, v13, v15, v16);
  sub_22080B6B4(0, v13, v15);
  sub_22080B0D8((uint64_t)v52);
  uint64_t v18 = v49;
  uint64_t v19 = v50;
  __swift_project_boxed_opaque_existential_1(v48, v49);
  if ((*(uint64_t (**)(uint64_t))(*(void *)(v19 + 8) + 80))(v18) == MEMORY[0x263F8D6C8])
  {
    sub_220841C58((uint64_t)v52);
    uint64_t v38 = sub_22090EEE4();
    sub_220843060((uint64_t)v52);
    goto LABEL_18;
  }
  uint64_t v20 = v49;
  uint64_t v21 = v50;
  __swift_project_boxed_opaque_existential_1(v48, v49);
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(*(void *)(v21 + 8) + 48))(v20);
  uint64_t v23 = MEMORY[0x263F8EE78];
  if (!v22)
  {
LABEL_16:
    uint64_t v38 = sub_22090F508(v23);
    swift_bridgeObjectRelease();
LABEL_18:
    uint64_t v39 = sub_220886FAC(v38);
    uint64_t v40 = swift_bridgeObjectRelease();
    MEMORY[0x270FA5388](v40);
    void v42[2] = v51;
    uint64_t v41 = sub_22091A630(v39, (void (*)(uint64_t *, long long *, uint64_t *, uint64_t, uint64_t, uint64_t))sub_22091B380, (uint64_t)v42, (uint64_t)v43, (void (*)(BOOL, unint64_t, uint64_t))sub_2208271D8);
    swift_bridgeObjectRelease();
    sub_220833C84((uint64_t)v48);
    return v41;
  }
  uint64_t v24 = v22;
  uint64_t v47 = MEMORY[0x263F8EE78];
  sub_220826DB8(0, v22 & ~(v22 >> 63), 0);
  uint64_t v26 = v49;
  uint64_t v25 = v50;
  __swift_project_boxed_opaque_existential_1(v48, v49);
  unint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v25 + 8) + 32))(v26);
  if ((v24 & 0x8000000000000000) == 0)
  {
    uint64_t v27 = result;
    do
    {
      uint64_t v28 = v49;
      uint64_t v29 = v50;
      __swift_project_boxed_opaque_existential_1(v48, v49);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(*(void *)(v29 + 8) + 128))(v52, v27, v28);
      sub_220834D3C((uint64_t)v52, (uint64_t)v46, qword_26AD40FF8);
      sub_220835280((uint64_t)v46, (uint64_t)v44, qword_26AD40FF8);
      __swift_instantiateConcreteTypeFromMangledName(qword_26AD40FF8);
      int v30 = swift_dynamicCast();
      char v31 = v30;
      if (v30) {
        uint64_t v32 = v45;
      }
      else {
        uint64_t v32 = 0;
      }
      sub_2208352E4((uint64_t)v46, qword_26AD40FF8);
      uint64_t v23 = v47;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_220826DB8(0, *(void *)(v23 + 16) + 1, 1);
        uint64_t v23 = v47;
      }
      unint64_t v34 = *(void *)(v23 + 16);
      unint64_t v33 = *(void *)(v23 + 24);
      if (v34 >= v33 >> 1)
      {
        sub_220826DB8((char *)(v33 > 1), v34 + 1, 1);
        uint64_t v23 = v47;
      }
      *(void *)(v23 + 16) = v34 + 1;
      uint64_t v35 = v23 + 16 * v34;
      *(void *)(v35 + 32) = v32;
      *(unsigned char *)(v35 + 40) = v31 ^ 1;
      uint64_t v36 = v49;
      uint64_t v37 = v50;
      __swift_project_boxed_opaque_existential_1(v48, v49);
      uint64_t v27 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v37 + 8) + 64))(v27, v36);
      --v24;
    }
    while (v24);
    goto LABEL_16;
  }
LABEL_22:
  __break(1u);
  return result;
}

unint64_t sub_2209119BC(long long *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD411B8);
  uint64_t v44 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  char v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *((void *)a1 + 3);
  uint64_t v10 = *((void *)a1 + 4);
  uint64_t v11 = *((unsigned __int8 *)a1 + 40);
  uint64_t v13 = *((void *)a1 + 1);
  uint64_t v14 = *((void *)a1 + 2);
  long long v15 = a1[1];
  long long v51 = *a1;
  uint64_t v12 = v51;
  v52[0] = v15;
  *(_OWORD *)((char *)v52 + 9) = *(long long *)((char *)a1 + 25);
  v53[0] = v51;
  v53[1] = v13;
  v53[2] = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t result = sub_22080BA90(a2, a3);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (result >= *(void *)(v12 + 16))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  sub_22080B5B8(v12 + 40 * result + 32, (uint64_t)v53);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_220831F30(v9, v10, v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220831F30(v9, v10, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v9, v10, v11);
  uint64_t v18 = v54;
  uint64_t v17 = v55;
  __swift_project_boxed_opaque_existential_1(v53, v54);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 8) + 160))(v48, v9, v10, v11, v18);
  sub_22080B6B4(v9, v10, v11);
  sub_22080B0D8((uint64_t)v53);
  uint64_t v20 = v49;
  uint64_t v19 = v50;
  __swift_project_boxed_opaque_existential_1(v48, v49);
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(*(void *)(v19 + 8) + 80))(v20);
  uint64_t v22 = sub_22093E100();
  if (v21 == v22)
  {
    sub_220842AC4((uint64_t)v53);
    uint64_t v39 = sub_22090B6C4();
    sub_220843060((uint64_t)v53);
    goto LABEL_14;
  }
  uint64_t v23 = v22;
  uint64_t v25 = v49;
  uint64_t v24 = v50;
  __swift_project_boxed_opaque_existential_1(v48, v49);
  uint64_t v26 = (*(uint64_t (**)(uint64_t))(*(void *)(v24 + 8) + 48))(v25);
  uint64_t v27 = MEMORY[0x263F8EE78];
  if (!v26)
  {
LABEL_12:
    uint64_t v39 = sub_22090BDB4(v27);
    swift_bridgeObjectRelease();
LABEL_14:
    uint64_t v40 = sub_22088671C(v39);
    uint64_t v41 = swift_bridgeObjectRelease();
    MEMORY[0x270FA5388](v41);
    *(&v43 - 2) = (uint64_t)&v51;
    uint64_t v42 = sub_220919E48(v40, (void (*)(char *, char *, uint64_t, void, void, void))sub_22091B2E4, (uint64_t)(&v43 - 4));
    swift_bridgeObjectRelease();
    sub_220833C84((uint64_t)v48);
    return v42;
  }
  uint64_t v28 = v26;
  uint64_t v47 = MEMORY[0x263F8EE78];
  sub_220826CF8(0, v26 & ~(v26 >> 63), 0);
  uint64_t v30 = v49;
  uint64_t v29 = v50;
  __swift_project_boxed_opaque_existential_1(v48, v49);
  unint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v29 + 8) + 32))(v30);
  if ((v28 & 0x8000000000000000) == 0)
  {
    uint64_t v31 = result;
    do
    {
      uint64_t v33 = v49;
      uint64_t v32 = v50;
      __swift_project_boxed_opaque_existential_1(v48, v49);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(*(void *)(v32 + 8) + 128))(v53, v31, v33);
      sub_220834D3C((uint64_t)v53, (uint64_t)v46, qword_26AD40FF8);
      sub_220835280((uint64_t)v46, (uint64_t)v45, qword_26AD40FF8);
      __swift_instantiateConcreteTypeFromMangledName(qword_26AD40FF8);
      int v34 = swift_dynamicCast();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v8, v34 ^ 1u, 1, v23);
      sub_2208352E4((uint64_t)v46, qword_26AD40FF8);
      uint64_t v27 = v47;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_220826CF8(0, *(void *)(v27 + 16) + 1, 1);
        uint64_t v27 = v47;
      }
      unint64_t v36 = *(void *)(v27 + 16);
      unint64_t v35 = *(void *)(v27 + 24);
      if (v36 >= v35 >> 1)
      {
        sub_220826CF8(v35 > 1, v36 + 1, 1);
        uint64_t v27 = v47;
      }
      *(void *)(v27 + 16) = v36 + 1;
      sub_220834D3C((uint64_t)v8, v27+ ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80))+ *(void *)(v44 + 72) * v36, qword_26AD411B8);
      uint64_t v38 = v49;
      uint64_t v37 = v50;
      __swift_project_boxed_opaque_existential_1(v48, v49);
      uint64_t v31 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v37 + 8) + 64))(v31, v38);
      --v28;
    }
    while (v28);
    goto LABEL_12;
  }
LABEL_17:
  __break(1u);
  return result;
}

unint64_t sub_220911EFC(long long *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *((void *)a1 + 3);
  uint64_t v6 = *((void *)a1 + 4);
  uint64_t v7 = *((unsigned __int8 *)a1 + 40);
  uint64_t v8 = *((void *)a1 + 1);
  uint64_t v9 = *((void *)a1 + 2);
  long long v10 = a1[1];
  long long v42 = *a1;
  v43[0] = v10;
  *(_OWORD *)((char *)v43 + 9) = *(long long *)((char *)a1 + 25);
  v44[0] = v42;
  v44[1] = v8;
  v44[2] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t result = sub_22080BA90(a2, a3);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (result >= *(void *)(v42 + 16))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  sub_22080B5B8(v42 + 40 * result + 32, (uint64_t)v44);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_220831F30(v5, v6, v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220831F30(v5, v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v5, v6, v7);
  uint64_t v12 = v45;
  uint64_t v13 = v46;
  __swift_project_boxed_opaque_existential_1(v44, v45);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 8) + 160))(v39, v5, v6, v7, v12);
  sub_22080B6B4(v5, v6, v7);
  sub_22080B0D8((uint64_t)v44);
  uint64_t v14 = v40;
  uint64_t v15 = v41;
  __swift_project_boxed_opaque_existential_1(v39, v40);
  if ((*(uint64_t (**)(uint64_t))(*(void *)(v15 + 8) + 80))(v14) == MEMORY[0x263F06F78])
  {
    sub_220842D2C((uint64_t)v44);
    uint64_t v30 = sub_22090C234();
    sub_220843060((uint64_t)v44);
    goto LABEL_16;
  }
  uint64_t v16 = v40;
  uint64_t v17 = v41;
  __swift_project_boxed_opaque_existential_1(v39, v40);
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(*(void *)(v17 + 8) + 48))(v16);
  uint64_t v19 = MEMORY[0x263F8EE78];
  if (!v18)
  {
LABEL_14:
    uint64_t v30 = sub_22090C8AC(v19);
    swift_bridgeObjectRelease();
LABEL_16:
    uint64_t v31 = sub_220886958(v30);
    uint64_t v32 = swift_bridgeObjectRelease();
    MEMORY[0x270FA5388](v32);
    uint64_t v33 = sub_22091A054(v31, (void (*)(long long *, long long *, void *, uint64_t, uint64_t, uint64_t))sub_22091B298);
    swift_bridgeObjectRelease();
    sub_220833C84((uint64_t)v39);
    return v33;
  }
  uint64_t v20 = v18;
  uint64_t v38 = MEMORY[0x263F8EE78];
  sub_220826D18(0, v18 & ~(v18 >> 63), 0);
  uint64_t v22 = v40;
  uint64_t v21 = v41;
  __swift_project_boxed_opaque_existential_1(v39, v40);
  unint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v21 + 8) + 32))(v22);
  if ((v20 & 0x8000000000000000) == 0)
  {
    uint64_t v23 = result;
    do
    {
      uint64_t v24 = v40;
      uint64_t v25 = v41;
      __swift_project_boxed_opaque_existential_1(v39, v40);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(*(void *)(v25 + 8) + 128))(v44, v23, v24);
      sub_220834D3C((uint64_t)v44, (uint64_t)v36, qword_26AD40FF8);
      sub_220835280((uint64_t)v36, (uint64_t)v35, qword_26AD40FF8);
      __swift_instantiateConcreteTypeFromMangledName(qword_26AD40FF8);
      if ((swift_dynamicCast() & 1) == 0) {
        long long v37 = xmmword_220944E00;
      }
      sub_2208352E4((uint64_t)v36, qword_26AD40FF8);
      long long v34 = v37;
      uint64_t v19 = v38;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_220826D18(0, *(void *)(v19 + 16) + 1, 1);
        uint64_t v19 = v38;
      }
      unint64_t v27 = *(void *)(v19 + 16);
      unint64_t v26 = *(void *)(v19 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_220826D18((void *)(v26 > 1), v27 + 1, 1);
        uint64_t v19 = v38;
      }
      *(void *)(v19 + 16) = v27 + 1;
      *(_OWORD *)(v19 + 16 * v27 + 32) = v34;
      uint64_t v28 = v40;
      uint64_t v29 = v41;
      __swift_project_boxed_opaque_existential_1(v39, v40);
      uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v29 + 8) + 64))(v23, v28);
      --v20;
    }
    while (v20);
    goto LABEL_14;
  }
LABEL_19:
  __break(1u);
  return result;
}

unint64_t sub_220912394(long long *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *((void *)a1 + 3);
  uint64_t v6 = *((void *)a1 + 4);
  uint64_t v7 = *((unsigned __int8 *)a1 + 40);
  uint64_t v8 = *((void *)a1 + 1);
  uint64_t v9 = *((void *)a1 + 2);
  long long v10 = a1[1];
  long long v41 = *a1;
  v42[0] = v10;
  *(_OWORD *)((char *)v42 + 9) = *(long long *)((char *)a1 + 25);
  v43[0] = v41;
  v43[1] = v8;
  _OWORD v43[2] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t result = sub_22080BA90(a2, a3);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (result >= *(void *)(v41 + 16))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  sub_22080B5B8(v41 + 40 * result + 32, (uint64_t)v43);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_220831F30(v5, v6, v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220831F30(v5, v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v5, v6, v7);
  uint64_t v12 = v44;
  uint64_t v13 = v45;
  __swift_project_boxed_opaque_existential_1(v43, v44);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 8) + 160))(v38, v5, v6, v7, v12);
  sub_22080B6B4(v5, v6, v7);
  sub_22080B0D8((uint64_t)v43);
  uint64_t v14 = v39;
  uint64_t v15 = v40;
  __swift_project_boxed_opaque_existential_1(v38, v39);
  if ((*(uint64_t (**)(uint64_t))(*(void *)(v15 + 8) + 80))(v14) == MEMORY[0x263F8D4F8])
  {
    sub_2208425F8((uint64_t)v43);
    uint64_t v31 = sub_22090CB9C();
    sub_220843060((uint64_t)v43);
    goto LABEL_17;
  }
  uint64_t v16 = v39;
  uint64_t v17 = v40;
  __swift_project_boxed_opaque_existential_1(v38, v39);
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(*(void *)(v17 + 8) + 48))(v16);
  uint64_t v19 = MEMORY[0x263F8EE78];
  if (!v18)
  {
LABEL_15:
    uint64_t v31 = sub_22090D168(v19);
    swift_bridgeObjectRelease();
LABEL_17:
    uint64_t v32 = sub_220886AC0(v31);
    uint64_t v33 = swift_bridgeObjectRelease();
    MEMORY[0x270FA5388](v33);
    uint64_t v34 = sub_22091A1D8(v32, (void (*)(unsigned char *, long long *, char *, uint64_t, uint64_t, uint64_t))sub_22091B234);
    swift_bridgeObjectRelease();
    sub_220833C84((uint64_t)v38);
    return v34;
  }
  uint64_t v20 = v18;
  uint64_t v37 = MEMORY[0x263F8EE78];
  sub_220826D38(0, v18 & ~(v18 >> 63), 0);
  uint64_t v22 = v39;
  uint64_t v21 = v40;
  __swift_project_boxed_opaque_existential_1(v38, v39);
  unint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v21 + 8) + 32))(v22);
  if ((v20 & 0x8000000000000000) == 0)
  {
    uint64_t v23 = result;
    do
    {
      uint64_t v24 = v39;
      uint64_t v25 = v40;
      __swift_project_boxed_opaque_existential_1(v38, v39);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(*(void *)(v25 + 8) + 128))(v43, v23, v24);
      sub_220834D3C((uint64_t)v43, (uint64_t)v36, qword_26AD40FF8);
      sub_220835280((uint64_t)v36, (uint64_t)v35, qword_26AD40FF8);
      __swift_instantiateConcreteTypeFromMangledName(qword_26AD40FF8);
      if (swift_dynamicCast()) {
        char v26 = v35[39];
      }
      else {
        char v26 = 2;
      }
      sub_2208352E4((uint64_t)v36, qword_26AD40FF8);
      uint64_t v19 = v37;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_220826D38(0, *(void *)(v19 + 16) + 1, 1);
        uint64_t v19 = v37;
      }
      unint64_t v28 = *(void *)(v19 + 16);
      unint64_t v27 = *(void *)(v19 + 24);
      if (v28 >= v27 >> 1)
      {
        sub_220826D38((char *)(v27 > 1), v28 + 1, 1);
        uint64_t v19 = v37;
      }
      *(void *)(v19 + 16) = v28 + 1;
      *(unsigned char *)(v19 + v28 + 32) = v26;
      uint64_t v29 = v39;
      uint64_t v30 = v40;
      __swift_project_boxed_opaque_existential_1(v38, v39);
      uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v30 + 8) + 64))(v23, v29);
      --v20;
    }
    while (v20);
    goto LABEL_15;
  }
LABEL_20:
  __break(1u);
  return result;
}

unint64_t sub_220912810(long long *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *((void *)a1 + 3);
  uint64_t v6 = *((void *)a1 + 4);
  uint64_t v7 = *((unsigned __int8 *)a1 + 40);
  uint64_t v8 = *((void *)a1 + 1);
  uint64_t v9 = *((void *)a1 + 2);
  long long v10 = a1[1];
  long long v47 = *a1;
  v48[0] = v10;
  *(_OWORD *)((char *)v48 + 9) = *(long long *)((char *)a1 + 25);
  v49[0] = v47;
  v49[1] = v8;
  v49[2] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t result = sub_22080BA90(a2, a3);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (result >= *(void *)(v47 + 16))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  sub_22080B5B8(v47 + 40 * result + 32, (uint64_t)v49);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_220831F30(v5, v6, v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220831F30(v5, v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v5, v6, v7);
  uint64_t v12 = v50;
  uint64_t v13 = v51;
  __swift_project_boxed_opaque_existential_1(v49, v50);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 8) + 160))(v44, v5, v6, v7, v12);
  sub_22080B6B4(v5, v6, v7);
  sub_22080B0D8((uint64_t)v49);
  uint64_t v14 = v45;
  uint64_t v15 = v46;
  __swift_project_boxed_opaque_existential_1(v44, v45);
  if ((*(uint64_t (**)(uint64_t))(*(void *)(v15 + 8) + 80))(v14) == MEMORY[0x263F8D538])
  {
    sub_220842390((uint64_t)v49);
    uint64_t v34 = sub_22090D3F4();
    sub_220843060((uint64_t)v49);
    goto LABEL_17;
  }
  uint64_t v16 = v45;
  uint64_t v17 = v46;
  __swift_project_boxed_opaque_existential_1(v44, v45);
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(*(void *)(v17 + 8) + 48))(v16);
  uint64_t v19 = MEMORY[0x263F8EE78];
  if (!v18)
  {
LABEL_15:
    uint64_t v34 = sub_22090DA18(v19);
    swift_bridgeObjectRelease();
LABEL_17:
    uint64_t v35 = sub_220886C40(v34);
    uint64_t v36 = swift_bridgeObjectRelease();
    MEMORY[0x270FA5388](v36);
    v38[2] = &v47;
    uint64_t v37 = sub_22091A630(v35, (void (*)(uint64_t *, long long *, uint64_t *, uint64_t, uint64_t, uint64_t))sub_22091B100, (uint64_t)v38, (uint64_t)v39, (void (*)(BOOL, unint64_t, uint64_t))sub_220827118);
    swift_bridgeObjectRelease();
    sub_220833C84((uint64_t)v44);
    return v37;
  }
  uint64_t v20 = v18;
  uint64_t v43 = MEMORY[0x263F8EE78];
  sub_220826D98(0, v18 & ~(v18 >> 63), 0);
  uint64_t v22 = v45;
  uint64_t v21 = v46;
  __swift_project_boxed_opaque_existential_1(v44, v45);
  unint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v21 + 8) + 32))(v22);
  if ((v20 & 0x8000000000000000) == 0)
  {
    uint64_t v23 = result;
    do
    {
      uint64_t v24 = v45;
      uint64_t v25 = v46;
      __swift_project_boxed_opaque_existential_1(v44, v45);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(*(void *)(v25 + 8) + 128))(v49, v23, v24);
      sub_220834D3C((uint64_t)v49, (uint64_t)v42, qword_26AD40FF8);
      sub_220835280((uint64_t)v42, (uint64_t)v40, qword_26AD40FF8);
      __swift_instantiateConcreteTypeFromMangledName(qword_26AD40FF8);
      int v26 = swift_dynamicCast();
      char v27 = v26;
      if (v26) {
        uint64_t v28 = v41;
      }
      else {
        uint64_t v28 = 0;
      }
      sub_2208352E4((uint64_t)v42, qword_26AD40FF8);
      uint64_t v19 = v43;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_220826D98(0, *(void *)(v19 + 16) + 1, 1);
        uint64_t v19 = v43;
      }
      unint64_t v30 = *(void *)(v19 + 16);
      unint64_t v29 = *(void *)(v19 + 24);
      if (v30 >= v29 >> 1)
      {
        sub_220826D98((char *)(v29 > 1), v30 + 1, 1);
        uint64_t v19 = v43;
      }
      *(void *)(v19 + 16) = v30 + 1;
      uint64_t v31 = v19 + 16 * v30;
      *(void *)(v31 + 32) = v28;
      *(unsigned char *)(v31 + 40) = v27 ^ 1;
      uint64_t v32 = v45;
      uint64_t v33 = v46;
      __swift_project_boxed_opaque_existential_1(v44, v45);
      uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v33 + 8) + 64))(v23, v32);
      --v20;
    }
    while (v20);
    goto LABEL_15;
  }
LABEL_20:
  __break(1u);
  return result;
}

unint64_t sub_220912CA4(long long *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *((void *)a1 + 3);
  uint64_t v6 = *((void *)a1 + 4);
  uint64_t v7 = *((unsigned __int8 *)a1 + 40);
  uint64_t v8 = *((void *)a1 + 1);
  uint64_t v9 = *((void *)a1 + 2);
  long long v10 = a1[1];
  long long v45 = *a1;
  v46[0] = v10;
  *(_OWORD *)((char *)v46 + 9) = *(long long *)((char *)a1 + 25);
  v47[0] = v45;
  v47[1] = v8;
  v47[2] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t result = sub_22080BA90(a2, a3);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (result >= *(void *)(v45 + 16))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  sub_22080B5B8(v45 + 40 * result + 32, (uint64_t)v47);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_220831F30(v5, v6, v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220831F30(v5, v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v5, v6, v7);
  uint64_t v12 = v48;
  uint64_t v13 = v49;
  __swift_project_boxed_opaque_existential_1(v47, v48);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 8) + 160))(v42, v5, v6, v7, v12);
  sub_22080B6B4(v5, v6, v7);
  sub_22080B0D8((uint64_t)v47);
  uint64_t v14 = v43;
  uint64_t v15 = v44;
  __swift_project_boxed_opaque_existential_1(v42, v43);
  if ((*(uint64_t (**)(uint64_t))(*(void *)(v15 + 8) + 80))(v14) == MEMORY[0x263F8D5C8])
  {
    sub_220842128((uint64_t)v47);
    uint64_t v34 = sub_22090DCCC();
    sub_220843060((uint64_t)v47);
    goto LABEL_17;
  }
  uint64_t v16 = v43;
  uint64_t v17 = v44;
  __swift_project_boxed_opaque_existential_1(v42, v43);
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(*(void *)(v17 + 8) + 48))(v16);
  uint64_t v19 = MEMORY[0x263F8EE78];
  if (!v18)
  {
LABEL_15:
    uint64_t v34 = sub_22090E318(v19);
    swift_bridgeObjectRelease();
LABEL_17:
    uint64_t v35 = sub_220886C68(v34);
    uint64_t v36 = swift_bridgeObjectRelease();
    MEMORY[0x270FA5388](v36);
    uint64_t v37 = sub_22091A340(v35, (void (*)(int *, long long *, int *, uint64_t, uint64_t, uint64_t))sub_22091B158);
    swift_bridgeObjectRelease();
    sub_220833C84((uint64_t)v42);
    return v37;
  }
  uint64_t v20 = v18;
  uint64_t v41 = MEMORY[0x263F8EE78];
  sub_220826D78(0, v18 & ~(v18 >> 63), 0);
  uint64_t v22 = v43;
  uint64_t v21 = v44;
  __swift_project_boxed_opaque_existential_1(v42, v43);
  unint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v21 + 8) + 32))(v22);
  if ((v20 & 0x8000000000000000) == 0)
  {
    uint64_t v23 = result;
    do
    {
      uint64_t v24 = v43;
      uint64_t v25 = v44;
      __swift_project_boxed_opaque_existential_1(v42, v43);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(*(void *)(v25 + 8) + 128))(v47, v23, v24);
      sub_220834D3C((uint64_t)v47, (uint64_t)v40, qword_26AD40FF8);
      sub_220835280((uint64_t)v40, (uint64_t)v38, qword_26AD40FF8);
      __swift_instantiateConcreteTypeFromMangledName(qword_26AD40FF8);
      int v26 = swift_dynamicCast();
      char v27 = v26;
      if (v26) {
        int v28 = v39;
      }
      else {
        int v28 = 0;
      }
      sub_2208352E4((uint64_t)v40, qword_26AD40FF8);
      uint64_t v19 = v41;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_220826D78(0, *(void *)(v19 + 16) + 1, 1);
        uint64_t v19 = v41;
      }
      unint64_t v30 = *(void *)(v19 + 16);
      unint64_t v29 = *(void *)(v19 + 24);
      if (v30 >= v29 >> 1)
      {
        sub_220826D78((char *)(v29 > 1), v30 + 1, 1);
        uint64_t v19 = v41;
      }
      *(void *)(v19 + 16) = v30 + 1;
      uint64_t v31 = v19 + 8 * v30;
      *(_DWORD *)(v31 + 32) = v28;
      *(unsigned char *)(v31 + 36) = v27 ^ 1;
      uint64_t v32 = v43;
      uint64_t v33 = v44;
      __swift_project_boxed_opaque_existential_1(v42, v43);
      uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v33 + 8) + 64))(v23, v32);
      --v20;
    }
    while (v20);
    goto LABEL_15;
  }
LABEL_20:
  __break(1u);
  return result;
}

unint64_t sub_220913128(long long *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *((void *)a1 + 3);
  uint64_t v6 = *((void *)a1 + 4);
  uint64_t v7 = *((unsigned __int8 *)a1 + 40);
  uint64_t v8 = *((void *)a1 + 1);
  uint64_t v9 = *((void *)a1 + 2);
  long long v10 = a1[1];
  long long v46 = *a1;
  v47[0] = v10;
  *(_OWORD *)((char *)v47 + 9) = *(long long *)((char *)a1 + 25);
  v48[0] = v46;
  v48[1] = v8;
  _OWORD v48[2] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t result = sub_22080BA90(a2, a3);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  if (result >= *(void *)(v46 + 16))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  sub_22080B5B8(v46 + 40 * result + 32, (uint64_t)v48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_220831F30(v5, v6, v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220831F30(v5, v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v5, v6, v7);
  uint64_t v12 = v49;
  uint64_t v13 = v50;
  __swift_project_boxed_opaque_existential_1(v48, v49);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 8) + 160))(v43, v5, v6, v7, v12);
  sub_22080B6B4(v5, v6, v7);
  sub_22080B0D8((uint64_t)v48);
  uint64_t v14 = v44;
  uint64_t v15 = v45;
  __swift_project_boxed_opaque_existential_1(v43, v44);
  if ((*(uint64_t (**)(uint64_t))(*(void *)(v15 + 8) + 80))(v14) == MEMORY[0x263F8D310])
  {
    sub_22084285C((uint64_t)v48);
    uint64_t v34 = sub_22090E5D4();
    sub_220843060((uint64_t)v48);
    goto LABEL_20;
  }
  uint64_t v16 = v44;
  uint64_t v17 = v45;
  __swift_project_boxed_opaque_existential_1(v43, v44);
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(*(void *)(v17 + 8) + 48))(v16);
  uint64_t v19 = MEMORY[0x263F8EE78];
  if (!v18)
  {
LABEL_18:
    uint64_t v34 = sub_22090EC0C(v19);
    swift_bridgeObjectRelease();
LABEL_20:
    uint64_t v35 = sub_220886E00(v34);
    uint64_t v36 = swift_bridgeObjectRelease();
    MEMORY[0x270FA5388](v36);
    uint64_t v37 = sub_22091A4C0(v35, (void (*)(long long *, long long *, void *, uint64_t, uint64_t, uint64_t))sub_22091B104);
    swift_bridgeObjectRelease();
    sub_220833C84((uint64_t)v43);
    return v37;
  }
  uint64_t v20 = v18;
  uint64_t v42 = MEMORY[0x263F8EE78];
  sub_220826D58(0, v18 & ~(v18 >> 63), 0);
  uint64_t v22 = v44;
  uint64_t v21 = v45;
  __swift_project_boxed_opaque_existential_1(v43, v44);
  unint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v21 + 8) + 32))(v22);
  if ((v20 & 0x8000000000000000) == 0)
  {
    uint64_t v23 = result;
    do
    {
      uint64_t v24 = v44;
      uint64_t v25 = v45;
      __swift_project_boxed_opaque_existential_1(v43, v44);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(*(void *)(v25 + 8) + 128))(v48, v23, v24);
      sub_220834D3C((uint64_t)v48, (uint64_t)v41, qword_26AD40FF8);
      sub_220835280((uint64_t)v41, (uint64_t)v38, qword_26AD40FF8);
      __swift_instantiateConcreteTypeFromMangledName(qword_26AD40FF8);
      int v26 = swift_dynamicCast();
      if (v26) {
        uint64_t v27 = v40;
      }
      else {
        uint64_t v27 = 0;
      }
      if (v26) {
        uint64_t v28 = v39;
      }
      else {
        uint64_t v28 = 0;
      }
      sub_2208352E4((uint64_t)v41, qword_26AD40FF8);
      uint64_t v19 = v42;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_220826D58(0, *(void *)(v19 + 16) + 1, 1);
        uint64_t v19 = v42;
      }
      unint64_t v30 = *(void *)(v19 + 16);
      unint64_t v29 = *(void *)(v19 + 24);
      if (v30 >= v29 >> 1)
      {
        sub_220826D58((void *)(v29 > 1), v30 + 1, 1);
        uint64_t v19 = v42;
      }
      *(void *)(v19 + 16) = v30 + 1;
      uint64_t v31 = v19 + 16 * v30;
      *(void *)(v31 + 32) = v28;
      *(void *)(v31 + 40) = v27;
      uint64_t v32 = v44;
      uint64_t v33 = v45;
      __swift_project_boxed_opaque_existential_1(v43, v44);
      uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v33 + 8) + 64))(v23, v32);
      --v20;
    }
    while (v20);
    goto LABEL_18;
  }
LABEL_23:
  __break(1u);
  return result;
}

unint64_t sub_2209135A8(long long *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *((void *)a1 + 3);
  uint64_t v6 = *((void *)a1 + 4);
  uint64_t v7 = *((unsigned __int8 *)a1 + 40);
  uint64_t v8 = *((void *)a1 + 1);
  uint64_t v9 = *((void *)a1 + 2);
  long long v10 = a1[1];
  long long v47 = *a1;
  v48[0] = v10;
  *(_OWORD *)((char *)v48 + 9) = *(long long *)((char *)a1 + 25);
  v49[0] = v47;
  v49[1] = v8;
  v49[2] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t result = sub_22080BA90(a2, a3);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (result >= *(void *)(v47 + 16))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  sub_22080B5B8(v47 + 40 * result + 32, (uint64_t)v49);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_220831F30(v5, v6, v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220831F30(v5, v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v5, v6, v7);
  uint64_t v12 = v50;
  uint64_t v13 = v51;
  __swift_project_boxed_opaque_existential_1(v49, v50);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 8) + 160))(v44, v5, v6, v7, v12);
  sub_22080B6B4(v5, v6, v7);
  sub_22080B0D8((uint64_t)v49);
  uint64_t v14 = v45;
  uint64_t v15 = v46;
  __swift_project_boxed_opaque_existential_1(v44, v45);
  if ((*(uint64_t (**)(uint64_t))(*(void *)(v15 + 8) + 80))(v14) == MEMORY[0x263F8D6C8])
  {
    sub_220841C58((uint64_t)v49);
    uint64_t v34 = sub_22090EEE4();
    sub_220843060((uint64_t)v49);
    goto LABEL_17;
  }
  uint64_t v16 = v45;
  uint64_t v17 = v46;
  __swift_project_boxed_opaque_existential_1(v44, v45);
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(*(void *)(v17 + 8) + 48))(v16);
  uint64_t v19 = MEMORY[0x263F8EE78];
  if (!v18)
  {
LABEL_15:
    uint64_t v34 = sub_22090F508(v19);
    swift_bridgeObjectRelease();
LABEL_17:
    uint64_t v35 = sub_220886FAC(v34);
    uint64_t v36 = swift_bridgeObjectRelease();
    MEMORY[0x270FA5388](v36);
    v38[2] = &v47;
    uint64_t v37 = sub_22091A630(v35, (void (*)(uint64_t *, long long *, uint64_t *, uint64_t, uint64_t, uint64_t))sub_22091B100, (uint64_t)v38, (uint64_t)v39, (void (*)(BOOL, unint64_t, uint64_t))sub_2208271D8);
    swift_bridgeObjectRelease();
    sub_220833C84((uint64_t)v44);
    return v37;
  }
  uint64_t v20 = v18;
  uint64_t v43 = MEMORY[0x263F8EE78];
  sub_220826DB8(0, v18 & ~(v18 >> 63), 0);
  uint64_t v22 = v45;
  uint64_t v21 = v46;
  __swift_project_boxed_opaque_existential_1(v44, v45);
  unint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v21 + 8) + 32))(v22);
  if ((v20 & 0x8000000000000000) == 0)
  {
    uint64_t v23 = result;
    do
    {
      uint64_t v24 = v45;
      uint64_t v25 = v46;
      __swift_project_boxed_opaque_existential_1(v44, v45);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(*(void *)(v25 + 8) + 128))(v49, v23, v24);
      sub_220834D3C((uint64_t)v49, (uint64_t)v42, qword_26AD40FF8);
      sub_220835280((uint64_t)v42, (uint64_t)v40, qword_26AD40FF8);
      __swift_instantiateConcreteTypeFromMangledName(qword_26AD40FF8);
      int v26 = swift_dynamicCast();
      char v27 = v26;
      if (v26) {
        uint64_t v28 = v41;
      }
      else {
        uint64_t v28 = 0;
      }
      sub_2208352E4((uint64_t)v42, qword_26AD40FF8);
      uint64_t v19 = v43;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_220826DB8(0, *(void *)(v19 + 16) + 1, 1);
        uint64_t v19 = v43;
      }
      unint64_t v30 = *(void *)(v19 + 16);
      unint64_t v29 = *(void *)(v19 + 24);
      if (v30 >= v29 >> 1)
      {
        sub_220826DB8((char *)(v29 > 1), v30 + 1, 1);
        uint64_t v19 = v43;
      }
      *(void *)(v19 + 16) = v30 + 1;
      uint64_t v31 = v19 + 16 * v30;
      *(void *)(v31 + 32) = v28;
      *(unsigned char *)(v31 + 40) = v27 ^ 1;
      uint64_t v32 = v45;
      uint64_t v33 = v46;
      __swift_project_boxed_opaque_existential_1(v44, v45);
      uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v33 + 8) + 64))(v23, v32);
      --v20;
    }
    while (v20);
    goto LABEL_15;
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_220913A3C(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, unsigned __int8 a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_220835280(a3, a1, qword_26AD411B8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!*(void *)(a7 + 16))
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    goto LABEL_6;
  }
  uint64_t v28 = a4;
  unsigned __int8 v15 = a6;
  sub_22080B5B8(a7 + 32, (uint64_t)v29);
  uint64_t v16 = v30;
  uint64_t v17 = v31;
  __swift_project_boxed_opaque_existential_1(v29, v30);
  uint64_t v18 = *(void *)(v17 + 8);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 48);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v20 = v19(v16, v18);
  uint64_t result = sub_22080B0D8((uint64_t)v29);
  if ((v20 & 0x8000000000000000) == 0)
  {
    a6 = v15;
    a4 = v28;
    if (v20)
    {
      char v22 = 0;
LABEL_7:
      sub_220831F30(0, v20, v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22080B6B4(0, v20, v22);
      uint64_t v23 = sub_22081A46C(a4, a5, a6, 0, v20, v22);
      uint64_t v25 = v24;
      char v27 = v26;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)a2 = a7;
      *(void *)(a2 + 8) = a8;
      *(void *)(a2 + 16) = a9;
      *(void *)(a2 + 24) = v23;
      *(void *)(a2 + 32) = v25;
      *(unsigned char *)(a2 + 40) = v27;
      return result;
    }
LABEL_6:
    uint64_t v20 = 0;
    char v22 = 2;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_220913C1C(uint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, char *a5, uint64_t a6, unsigned __int8 a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *a1 = a3;
  a1[1] = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!*(void *)(a8 + 16))
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    sub_220834CD4(a3, a4);
    goto LABEL_6;
  }
  unint64_t v29 = a5;
  uint64_t v30 = a6;
  sub_22080B5B8(a8 + 32, (uint64_t)v31);
  uint64_t v18 = v32;
  uint64_t v17 = v33;
  __swift_project_boxed_opaque_existential_1(v31, v32);
  uint64_t v19 = *(void *)(v17 + 8);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 48);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_220834CD4(a3, a4);
  uint64_t v21 = v20(v18, v19);
  uint64_t result = sub_22080B0D8((uint64_t)v31);
  if ((v21 & 0x8000000000000000) == 0)
  {
    a5 = v29;
    a6 = v30;
    if (v21)
    {
      char v23 = 0;
LABEL_7:
      sub_220831F30(0, v21, v23);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22080B6B4(0, v21, v23);
      uint64_t v24 = sub_22081A46C(a5, a6, a7, 0, v21, v23);
      uint64_t v26 = v25;
      char v28 = v27;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)a2 = a8;
      *(void *)(a2 + 8) = a9;
      *(void *)(a2 + 16) = a10;
      *(void *)(a2 + 24) = v24;
      *(void *)(a2 + 32) = v26;
      *(unsigned char *)(a2 + 40) = v28;
      return result;
    }
LABEL_6:
    uint64_t v21 = 0;
    char v23 = 2;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_220913E10(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, unsigned __int8 a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!*(void *)(a6 + 16))
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    goto LABEL_6;
  }
  uint64_t v28 = a4;
  unsigned __int8 v29 = a5;
  sub_22080B5B8(a6 + 32, (uint64_t)v30);
  uint64_t v17 = v31;
  uint64_t v16 = v32;
  __swift_project_boxed_opaque_existential_1(v30, v31);
  uint64_t v18 = *(void *)(v16 + 8);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 48);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v20 = v19(v17, v18);
  uint64_t result = sub_22080B0D8((uint64_t)v30);
  if ((v20 & 0x8000000000000000) == 0)
  {
    a5 = v29;
    a4 = v28;
    if (v20)
    {
      char v22 = 0;
LABEL_7:
      sub_220831F30(0, v20, v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22080B6B4(0, v20, v22);
      char v23 = sub_22081A46C(a3, a4, a5, 0, v20, v22);
      uint64_t v25 = v24;
      char v27 = v26;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)a1 = a6;
      *(void *)(a1 + 8) = a7;
      *(void *)(a1 + 16) = a8;
      *(void *)(a1 + 24) = v23;
      *(void *)(a1 + 32) = v25;
      *(unsigned char *)(a1 + 40) = v27;
      return a2;
    }
LABEL_6:
    uint64_t v20 = 0;
    char v22 = 2;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_220913FE8(uint64_t a1, unint64_t a2, char *a3, uint64_t a4, unsigned __int8 a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!*(void *)(a6 + 16))
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    goto LABEL_6;
  }
  uint64_t v29 = a4;
  unint64_t v30 = a2;
  unsigned __int8 v16 = a5;
  sub_22080B5B8(a6 + 32, (uint64_t)v31);
  uint64_t v18 = v32;
  uint64_t v17 = v33;
  __swift_project_boxed_opaque_existential_1(v31, v32);
  uint64_t v19 = *(void *)(v17 + 8);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 48);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v21 = v20(v18, v19);
  uint64_t result = sub_22080B0D8((uint64_t)v31);
  if ((v21 & 0x8000000000000000) == 0)
  {
    a5 = v16;
    a4 = v29;
    a2 = v30;
    if (v21)
    {
      char v23 = 0;
LABEL_7:
      sub_220831F30(0, v21, v23);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22080B6B4(0, v21, v23);
      uint64_t v24 = sub_22081A46C(a3, a4, a5, 0, v21, v23);
      uint64_t v26 = v25;
      char v28 = v27;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)a1 = a6;
      *(void *)(a1 + 8) = a7;
      *(void *)(a1 + 16) = a8;
      *(void *)(a1 + 24) = v24;
      *(void *)(a1 + 32) = v26;
      *(unsigned char *)(a1 + 40) = v28;
      return a2 | ((HIDWORD(a2) & 1) << 32);
    }
LABEL_6:
    uint64_t v21 = 0;
    char v23 = 2;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_2209141C8(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, unsigned __int8 a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!*(void *)(a7 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    goto LABEL_6;
  }
  unsigned __int8 v27 = a6;
  uint64_t v28 = a2;
  sub_22080B5B8(a7 + 32, (uint64_t)v30);
  uint64_t v15 = v31;
  uint64_t v16 = v32;
  __swift_project_boxed_opaque_existential_1(v30, v31);
  uint64_t v17 = *(void *)(v16 + 8);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v19 = v18(v15, v17);
  uint64_t result = sub_22080B0D8((uint64_t)v30);
  if ((v19 & 0x8000000000000000) == 0)
  {
    a2 = v28;
    a6 = v27;
    if (v19)
    {
      char v21 = 0;
LABEL_7:
      sub_220831F30(0, v19, v21);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22080B6B4(0, v19, v21);
      char v22 = sub_22081A46C(a4, a5, a6, 0, v19, v21);
      uint64_t v24 = v23;
      char v26 = v25;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)a1 = a7;
      *(void *)(a1 + 8) = a8;
      *(void *)(a1 + 16) = a9;
      *(void *)(a1 + 24) = v22;
      *(void *)(a1 + 32) = v24;
      *(unsigned char *)(a1 + 40) = v26;
      return a2;
    }
LABEL_6:
    uint64_t v19 = 0;
    char v21 = 2;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_2209143BC(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, unsigned __int8 a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!*(void *)(a7 + 16))
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    goto LABEL_7;
  }
  uint64_t v28 = a5;
  unsigned __int8 v29 = a6;
  sub_22080B5B8(a7 + 32, (uint64_t)v30);
  uint64_t v16 = v31;
  uint64_t v17 = v32;
  __swift_project_boxed_opaque_existential_1(v30, v31);
  uint64_t v18 = *(void *)(v17 + 8);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 48);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v20 = v19(v16, v18);
  uint64_t result = sub_22080B0D8((uint64_t)v30);
  if ((v20 & 0x8000000000000000) == 0)
  {
    if (v20)
    {
      char v22 = 0;
      a6 = v29;
      a5 = v28;
LABEL_8:
      sub_220831F30(0, v20, v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22080B6B4(0, v20, v22);
      uint64_t v23 = sub_22081A46C(a4, a5, a6, 0, v20, v22);
      uint64_t v25 = v24;
      char v27 = v26;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)a1 = a7;
      *(void *)(a1 + 8) = a8;
      *(void *)(a1 + 16) = a9;
      *(void *)(a1 + 24) = v23;
      *(void *)(a1 + 32) = v25;
      *(unsigned char *)(a1 + 40) = v27;
      return a2;
    }
    a6 = v29;
    a5 = v28;
LABEL_7:
    uint64_t v20 = 0;
    char v22 = 2;
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_2209145B8(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, unsigned __int8 a6, uint64_t *a7)
{
  sub_220835280(a3, a1, qword_26AD411B8);
  uint64_t v12 = *a7;
  uint64_t v13 = a7[1];
  uint64_t v14 = a7[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!*(void *)(v12 + 16))
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    goto LABEL_6;
  }
  uint64_t v28 = a4;
  unsigned __int8 v15 = a6;
  sub_22080B5B8(v12 + 32, (uint64_t)v29);
  uint64_t v16 = v30;
  uint64_t v17 = v31;
  __swift_project_boxed_opaque_existential_1(v29, v30);
  uint64_t v18 = *(void *)(v17 + 8);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 48);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v20 = v19(v16, v18);
  uint64_t result = sub_22080B0D8((uint64_t)v29);
  if ((v20 & 0x8000000000000000) == 0)
  {
    a6 = v15;
    a4 = v28;
    if (v20)
    {
      char v22 = 0;
LABEL_7:
      sub_220831F30(0, v20, v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22080B6B4(0, v20, v22);
      uint64_t v23 = sub_22081A46C(a4, a5, a6, 0, v20, v22);
      uint64_t v25 = v24;
      char v27 = v26;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)a2 = v12;
      *(void *)(a2 + 8) = v13;
      *(void *)(a2 + 16) = v14;
      *(void *)(a2 + 24) = v23;
      *(void *)(a2 + 32) = v25;
      *(unsigned char *)(a2 + 40) = v27;
      return result;
    }
LABEL_6:
    uint64_t v20 = 0;
    char v22 = 2;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_220914798(uint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, char *a5, uint64_t a6, unsigned __int8 a7, uint64_t *a8)
{
  *a1 = a3;
  a1[1] = a4;
  uint64_t v14 = *a8;
  uint64_t v15 = a8[1];
  uint64_t v16 = a8[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!*(void *)(v14 + 16))
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    sub_220834CD4(a3, a4);
    goto LABEL_6;
  }
  unsigned __int8 v29 = a5;
  uint64_t v30 = a6;
  sub_22080B5B8(v14 + 32, (uint64_t)v31);
  uint64_t v18 = v32;
  uint64_t v17 = v33;
  __swift_project_boxed_opaque_existential_1(v31, v32);
  uint64_t v19 = *(void *)(v17 + 8);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 48);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_220834CD4(a3, a4);
  uint64_t v21 = v20(v18, v19);
  uint64_t result = sub_22080B0D8((uint64_t)v31);
  if ((v21 & 0x8000000000000000) == 0)
  {
    a5 = v29;
    a6 = v30;
    if (v21)
    {
      char v23 = 0;
LABEL_7:
      sub_220831F30(0, v21, v23);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22080B6B4(0, v21, v23);
      uint64_t v24 = sub_22081A46C(a5, a6, a7, 0, v21, v23);
      uint64_t v26 = v25;
      char v28 = v27;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)a2 = v14;
      *(void *)(a2 + 8) = v15;
      *(void *)(a2 + 16) = v16;
      *(void *)(a2 + 24) = v24;
      *(void *)(a2 + 32) = v26;
      *(unsigned char *)(a2 + 40) = v28;
      return result;
    }
LABEL_6:
    uint64_t v21 = 0;
    char v23 = 2;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_22091498C(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, unsigned __int8 a5, uint64_t *a6)
{
  uint64_t v11 = *a6;
  uint64_t v12 = a6[1];
  uint64_t v13 = a6[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!*(void *)(v11 + 16))
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    goto LABEL_6;
  }
  uint64_t v26 = a4;
  unsigned __int8 v27 = a5;
  sub_22080B5B8(v11 + 32, (uint64_t)v28);
  uint64_t v15 = v29;
  uint64_t v14 = v30;
  __swift_project_boxed_opaque_existential_1(v28, v29);
  uint64_t v16 = *(void *)(v14 + 8);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 48);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v18 = v17(v15, v16);
  uint64_t result = sub_22080B0D8((uint64_t)v28);
  if ((v18 & 0x8000000000000000) == 0)
  {
    a5 = v27;
    a4 = v26;
    if (v18)
    {
      char v20 = 0;
LABEL_7:
      sub_220831F30(0, v18, v20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22080B6B4(0, v18, v20);
      uint64_t v21 = sub_22081A46C(a3, a4, a5, 0, v18, v20);
      uint64_t v23 = v22;
      char v25 = v24;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)a1 = v11;
      *(void *)(a1 + 8) = v12;
      *(void *)(a1 + 16) = v13;
      *(void *)(a1 + 24) = v21;
      *(void *)(a1 + 32) = v23;
      *(unsigned char *)(a1 + 40) = v25;
      return a2;
    }
LABEL_6:
    uint64_t v18 = 0;
    char v20 = 2;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_220914B60(uint64_t a1, unint64_t a2, char *a3, uint64_t a4, unsigned __int8 a5, uint64_t *a6)
{
  uint64_t v11 = *a6;
  uint64_t v12 = a6[1];
  uint64_t v13 = a6[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!*(void *)(v11 + 16))
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    goto LABEL_6;
  }
  uint64_t v27 = a4;
  unint64_t v28 = a2;
  unsigned __int8 v14 = a5;
  sub_22080B5B8(v11 + 32, (uint64_t)v29);
  uint64_t v16 = v30;
  uint64_t v15 = v31;
  __swift_project_boxed_opaque_existential_1(v29, v30);
  uint64_t v17 = *(void *)(v15 + 8);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 48);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v19 = v18(v16, v17);
  uint64_t result = sub_22080B0D8((uint64_t)v29);
  if ((v19 & 0x8000000000000000) == 0)
  {
    a5 = v14;
    a4 = v27;
    a2 = v28;
    if (v19)
    {
      char v21 = 0;
LABEL_7:
      sub_220831F30(0, v19, v21);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22080B6B4(0, v19, v21);
      uint64_t v22 = sub_22081A46C(a3, a4, a5, 0, v19, v21);
      uint64_t v24 = v23;
      char v26 = v25;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)a1 = v11;
      *(void *)(a1 + 8) = v12;
      *(void *)(a1 + 16) = v13;
      *(void *)(a1 + 24) = v22;
      *(void *)(a1 + 32) = v24;
      *(unsigned char *)(a1 + 40) = v26;
      return a2 | ((HIDWORD(a2) & 1) << 32);
    }
LABEL_6:
    uint64_t v19 = 0;
    char v21 = 2;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_220914D3C(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, unsigned __int8 a6, uint64_t *a7)
{
  uint64_t v11 = *a7;
  uint64_t v12 = a7[1];
  uint64_t v13 = a7[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!*(void *)(v11 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    goto LABEL_6;
  }
  unsigned __int8 v26 = a6;
  uint64_t v27 = a2;
  sub_22080B5B8(v11 + 32, (uint64_t)v29);
  uint64_t v14 = v30;
  uint64_t v15 = v31;
  __swift_project_boxed_opaque_existential_1(v29, v30);
  uint64_t v16 = *(void *)(v15 + 8);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v18 = v17(v14, v16);
  uint64_t result = sub_22080B0D8((uint64_t)v29);
  if ((v18 & 0x8000000000000000) == 0)
  {
    a2 = v27;
    a6 = v26;
    if (v18)
    {
      char v20 = 0;
LABEL_7:
      sub_220831F30(0, v18, v20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22080B6B4(0, v18, v20);
      char v21 = sub_22081A46C(a4, a5, a6, 0, v18, v20);
      uint64_t v23 = v22;
      char v25 = v24;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)a1 = v11;
      *(void *)(a1 + 8) = v12;
      *(void *)(a1 + 16) = v13;
      *(void *)(a1 + 24) = v21;
      *(void *)(a1 + 32) = v23;
      *(unsigned char *)(a1 + 40) = v25;
      return a2;
    }
LABEL_6:
    uint64_t v18 = 0;
    char v20 = 2;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_220914F2C(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, unsigned __int8 a6, uint64_t *a7)
{
  uint64_t v12 = *a7;
  uint64_t v13 = a7[1];
  uint64_t v14 = a7[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v29 = a4;
  if (!*(void *)(v12 + 16))
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    goto LABEL_7;
  }
  uint64_t v27 = a5;
  unsigned __int8 v28 = a6;
  sub_22080B5B8(v12 + 32, (uint64_t)v30);
  uint64_t v15 = v31;
  uint64_t v16 = v32;
  __swift_project_boxed_opaque_existential_1(v30, v31);
  uint64_t v17 = *(void *)(v16 + 8);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 48);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v19 = v18(v15, v17);
  uint64_t result = sub_22080B0D8((uint64_t)v30);
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v19)
    {
      char v21 = 0;
      a6 = v28;
      a5 = v27;
LABEL_8:
      sub_220831F30(0, v19, v21);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22080B6B4(0, v19, v21);
      uint64_t v22 = sub_22081A46C(v29, a5, a6, 0, v19, v21);
      uint64_t v24 = v23;
      char v26 = v25;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)a1 = v12;
      *(void *)(a1 + 8) = v13;
      *(void *)(a1 + 16) = v14;
      *(void *)(a1 + 24) = v22;
      *(void *)(a1 + 32) = v24;
      *(unsigned char *)(a1 + 40) = v26;
      return a2;
    }
    a6 = v28;
    a5 = v27;
LABEL_7:
    uint64_t v19 = 0;
    char v21 = 2;
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

unint64_t DataFrame.grouped(by:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  unint64_t v8 = v3[1];
  uint64_t v9 = v3[2];
  *(void *)&long long v30 = *v3;
  unint64_t v7 = v30;
  *((void *)&v30 + 1) = v8;
  *(void *)&long long v31 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t result = sub_22080BA90(a1, a2);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (result >= *(void *)(v30 + 16))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_22080B5B8(v30 + 32 + 40 * result, (uint64_t)v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = v28;
  uint64_t v11 = v29;
  __swift_project_boxed_opaque_existential_1(v27, v28);
  (*(void (**)(uint64_t))(*(void *)(v11 + 8) + 80))(v12);
  sub_22080B0D8((uint64_t)v27);
  if (!swift_dynamicCastMetatype())
  {
    if (swift_dynamicCastMetatype())
    {
      a3[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_267F19A48);
      a3[4] = sub_2208502C4(&qword_267F19A50, &qword_267F19A48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v13 = sub_220911040(v7, v8, v9, a1, a2);
      goto LABEL_17;
    }
    if (swift_dynamicCastMetatype())
    {
      a3[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_267F19A38);
      a3[4] = sub_2208502C4(&qword_267F19A40, &qword_267F19A38);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v13 = sub_220910B88(v7, v8, v9, a1, a2);
      goto LABEL_17;
    }
    if (swift_dynamicCastMetatype())
    {
      a3[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_267F19A28);
      a3[4] = sub_2208502C4(&qword_267F19A30, &qword_267F19A28);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v13 = sub_2209106BC(v7, v8, v9, a1, a2);
      goto LABEL_17;
    }
    if (swift_dynamicCastMetatype())
    {
      a3[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_267F19A18);
      a3[4] = sub_2208502C4(&qword_267F19A20, &qword_267F19A18);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v13 = sub_22091020C(v7, v8, v9, a1, a2);
      goto LABEL_17;
    }
    if (swift_dynamicCastMetatype())
    {
      a3[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_267F19A08);
      a3[4] = sub_2208502C4(&qword_267F19A10, &qword_267F19A08);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v13 = sub_22090FD38(v7, v8, v9, a1, a2);
      goto LABEL_17;
    }
    sub_22093E100();
    if (swift_dynamicCastMetatype())
    {
      a3[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_267F199F8);
      a3[4] = sub_2208502C4(&qword_267F19A00, &qword_267F199F8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v13 = sub_22090F7BC(v7, v8, v9, a1, a2);
      goto LABEL_17;
    }
    *(void *)&long long v30 = v7;
    *((void *)&v30 + 1) = v8;
    *(void *)&long long v31 = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v15 = sub_22080BA90(a1, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t result = swift_allocObject();
    if ((v15 & 0x8000000000000000) == 0)
    {
      if (v15 < *(void *)(v7 + 16))
      {
        uint64_t v16 = result + 16;
        unint64_t v17 = result;
        sub_22080B5B8(v7 + 32 + 40 * v15, (uint64_t)&v30);
        uint64_t v19 = *((void *)&v31 + 1);
        uint64_t v18 = v32;
        __swift_project_boxed_opaque_existential_1(&v30, *((uint64_t *)&v31 + 1));
        (*(void (**)(uint64_t))(*(void *)(v18 + 8) + 88))(v19);
        sub_22080B0D8((uint64_t)&v30);
        uint64_t v26 = v17;
        uint64_t v21 = *(void *)(v17 + 40);
        uint64_t v20 = *(void *)(v17 + 48);
        __swift_mutable_project_boxed_opaque_existential_1(v16, v21);
        char v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 16);
        swift_bridgeObjectRetain();
        uint64_t v22 = v25(a1, a2, v21, v20);
        MEMORY[0x270FA5388](v22);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        sub_220915870(v7, v8, v9, (uint64_t)sub_22091AB98, v26, (void (*)(uint64_t *__return_ptr))sub_22091586C, 0, (void (*)(unint64_t *))sub_22091B5A4, (uint64_t *)&v30);
        a3[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_267F199E8);
        a3[4] = sub_2208502C4(&qword_267F199F0, &qword_267F199E8);
        uint64_t v23 = swift_allocObject();
        *a3 = v23;
        unint64_t result = swift_release();
        long long v24 = v31;
        *(_OWORD *)(v23 + 16) = v30;
        *(_OWORD *)(v23 + 32) = v24;
        *(void *)(v23 + 48) = v32;
        return result;
      }
      goto LABEL_25;
    }
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  a3[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_267F19A58);
  a3[4] = sub_2208502C4(&qword_267F19A60, &qword_267F19A58);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v13 = sub_2209114F0(v7, v8, v9, a1, a2);
LABEL_17:
  unint64_t v14 = v13;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t result = swift_bridgeObjectRelease();
  *a3 = v14;
  a3[1] = a1;
  a3[2] = a2;
  return result;
}

uint64_t sub_220915870@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void (*a6)(uint64_t *__return_ptr)@<X5>, uint64_t a7@<X6>, void (*a8)(unint64_t *)@<X7>, uint64_t *a9@<X8>)
{
  uint64_t v10 = v9;
  unint64_t v57 = a1;
  unint64_t v58 = a2;
  uint64_t v59 = a3;
  unint64_t v48 = sub_22080D0A8(MEMORY[0x263F8EE78]);
  if (!*(void *)(a1 + 16)) {
    goto LABEL_4;
  }
  sub_22080B5B8(a1 + 32, (uint64_t)&v51);
  uint64_t v15 = v54;
  uint64_t v16 = v55;
  __swift_project_boxed_opaque_existential_1(&v51, v54);
  uint64_t v17 = *(void *)(v16 + 8);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v19 = v18(v15, v17);
  sub_22080B0D8((uint64_t)&v51);
  if (v19 < 0)
  {
    __break(1u);
LABEL_4:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v19 = 0;
  }
  Swift::Int v20 = 0;
  uint64_t v43 = a5;
  char v47 = 2 * (v19 == 0);
  uint64_t v50 = (void *)MEMORY[0x263F8EE78];
  while (1)
  {
    uint64_t v21 = v20;
    if (v19) {
      break;
    }
    while (1)
    {
      if (!v21) {
        goto LABEL_32;
      }
LABEL_10:
      unint64_t v51 = a1;
      unint64_t v52 = a2;
      uint64_t v53 = a3;
      uint64_t v54 = 0;
      uint64_t v22 = v19;
      uint64_t v55 = v19;
      char v56 = v47;
      Swift::Int v20 = DataFrame.Rows.index(after:)(v21);
      unint64_t v51 = a1;
      unint64_t v52 = a2;
      uint64_t v53 = a3;
      uint64_t v54 = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a8(&v51);
      if (v10)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        sub_22080B6B4(0, v19, v47);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      a6(&v60);
      swift_bridgeObjectRelease();
      uint64_t v23 = v60;
      if (!v60) {
        goto LABEL_40;
      }
      unint64_t v24 = v48;
      if (!*(void *)(v48 + 16)) {
        break;
      }
      unint64_t v25 = sub_22081D5D4(v60);
      unint64_t v24 = v48;
      if ((v26 & 1) == 0) {
        break;
      }
      unint64_t v27 = *(void *)(*(void *)(v48 + 56) + 8 * v25);
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        if ((v27 & 0x8000000000000000) != 0) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v50 = sub_22080ABFC(v50);
        if ((v27 & 0x8000000000000000) != 0)
        {
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
          goto LABEL_39;
        }
      }
      if (v27 >= v50[2]) {
        goto LABEL_35;
      }
      uint64_t v28 = v21 + 1;
      if (__OFADD__(v21, 1)) {
        goto LABEL_36;
      }
      if (v28 < v21) {
        goto LABEL_37;
      }
      sub_220869870(v21, v28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v21 = v20;
      uint64_t v19 = v22;
      if (v22) {
        goto LABEL_7;
      }
    }
    uint64_t v49 = v50[2];
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v51 = v24;
    sub_22080B280(v49, v23, isUniquelyReferenced_nonNull_native);
    unint64_t v30 = v51;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v31 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      goto LABEL_38;
    }
    if (v31 < v21)
    {
LABEL_39:
      __break(1u);
LABEL_40:
      unint64_t v51 = 0;
      unint64_t v52 = 0xE000000000000000;
      sub_22093EEA0();
      swift_bridgeObjectRelease();
      unint64_t v51 = 0xD00000000000002BLL;
      unint64_t v52 = 0x8000000220941280;
      uint64_t v60 = v21;
      sub_22093F1A0();
      sub_22093E6C0();
      swift_bridgeObjectRelease();
      sub_22093E6C0();
      uint64_t result = sub_22093F090();
      __break(1u);
      return result;
    }
    if (v21 == v31)
    {
      uint64_t v21 = 0;
      uint64_t v31 = 0;
    }
    uint64_t v41 = v31;
    unint64_t v48 = v30;
    uint64_t v42 = v21;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v50 = sub_22081CDC8(0, v50[2] + 1, 1, v50);
    }
    unint64_t v33 = v50[2];
    unint64_t v32 = v50[3];
    if (v33 >= v32 >> 1) {
      uint64_t v50 = sub_22081CDC8((void *)(v32 > 1), v33 + 1, 1, v50);
    }
    v50[2] = v33 + 1;
    uint64_t v34 = &v50[4 * v33];
    v34[4] = v23;
    v34[5] = v42;
    v34[6] = v41;
    *((unsigned char *)v34 + 56) = 0;
    swift_bridgeObjectRelease();
    uint64_t v19 = v22;
  }
LABEL_7:
  if (v21 != v19) {
    goto LABEL_10;
  }
LABEL_32:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v35 = sub_22080B6B4(0, v19, v47);
  MEMORY[0x270FA5388](v35);
  uint64_t v36 = swift_bridgeObjectRetain();
  uint64_t v37 = sub_220919CDC(v36, (void (*)(long long *, char *, uint64_t *, uint64_t, uint64_t, uint64_t))sub_22091B4F4);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a9 = v37;
  a9[1] = a4;
  a9[2] = v43;
  a9[3] = (uint64_t)a6;
  a9[4] = a7;
  return result;
}

uint64_t sub_220915E58@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(uint64_t *__return_ptr)@<X3>, uint64_t a5@<X4>, void (*a6)(unint64_t *)@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v8 = v7;
  uint64_t v9 = *((void *)a1 + 3);
  uint64_t v55 = *((void *)a1 + 4);
  uint64_t v10 = *((unsigned __int8 *)a1 + 40);
  unint64_t v58 = *((void *)a1 + 1);
  unint64_t v59 = *(void *)a1;
  uint64_t v57 = *((void *)a1 + 2);
  long long v11 = a1[1];
  long long v67 = *a1;
  *(_OWORD *)unint64_t v68 = v11;
  *(_OWORD *)&v68[9] = *(long long *)((char *)a1 + 25);
  unint64_t v12 = sub_22080D0A8(MEMORY[0x263F8EE78]);
  uint64_t v13 = v9;
  if (v10)
  {
    if (v10 == 1 && *(void *)(v9 + 16))
    {
      uint64_t v13 = *(void *)(v9 + 32);
      swift_bridgeObjectRetain();
    }
    else
    {
      sub_220883950(v9, v55, v10);
      if (v15)
      {
        sub_220831F30(v9, v55, v10);
        uint64_t v13 = 0;
      }
      else
      {
        uint64_t v13 = v14;
        sub_220831F30(v9, v55, v10);
      }
    }
  }
  unint64_t v60 = v12;
  uint64_t v50 = v9 + 32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v16 = (void *)MEMORY[0x263F8EE78];
  for (i = v9; ; uint64_t v9 = i)
  {
    while (1)
    {
      uint64_t v17 = v55;
      uint64_t v18 = v55;
      if (!v10) {
        goto LABEL_13;
      }
      if (v10 == 1)
      {
        uint64_t v19 = *(void *)(v9 + 16);
        if (v19)
        {
          uint64_t v18 = *(void *)(v50 + 16 * v19 - 8);
          uint64_t v20 = swift_bridgeObjectRetain();
          sub_22080B6B4(v20, v55, 1);
          uint64_t v17 = v55;
LABEL_13:
          if (v13 == v18) {
            goto LABEL_41;
          }
          goto LABEL_16;
        }
      }
      if (!v13)
      {
LABEL_41:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v37 = sub_22080B6B4(v9, v17, v10);
        MEMORY[0x270FA5388](v37);
        uint64_t v38 = swift_bridgeObjectRetain();
        uint64_t v39 = sub_220919CDC(v38, (void (*)(long long *, char *, uint64_t *, uint64_t, uint64_t, uint64_t))sub_22091B31C);
        swift_bridgeObjectRelease_n();
        uint64_t v40 = *(void *)&v68[8];
        uint64_t v41 = *(void *)&v68[16];
        char v42 = v68[24];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_22080B6B4(v40, v41, v42);
        uint64_t result = swift_bridgeObjectRelease();
        *a7 = v39;
        a7[1] = a2;
        a7[2] = a3;
        a7[3] = (uint64_t)a4;
        a7[4] = a5;
        return result;
      }
LABEL_16:
      unint64_t v61 = v59;
      unint64_t v62 = v58;
      uint64_t v63 = v57;
      uint64_t v64 = v9;
      uint64_t v65 = v17;
      uint64_t v21 = v10;
      char v66 = v10;
      Swift::Int v56 = DataFrame.Rows.index(after:)(v13);
      unint64_t v61 = v59;
      unint64_t v62 = v58;
      uint64_t v63 = v57;
      uint64_t v64 = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a6(&v61);
      if (v8)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        sub_22080B6B4(i, v55, v10);
        swift_bridgeObjectRelease();
        uint64_t v44 = *(void *)&v68[8];
        uint64_t v45 = *(void *)&v68[16];
        char v46 = v68[24];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_22080B6B4(v44, v45, v46);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      a4(&v69);
      swift_bridgeObjectRelease();
      uint64_t v22 = v69;
      if (!v69) {
        goto LABEL_49;
      }
      unint64_t v23 = v60;
      if (*(void *)(v60 + 16))
      {
        unint64_t v24 = sub_22081D5D4(v69);
        unint64_t v23 = v60;
        if (v25) {
          break;
        }
      }
      uint64_t v28 = v16[2];
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v61 = v23;
      sub_22080B280(v28, v22, isUniquelyReferenced_nonNull_native);
      unint64_t v30 = v61;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v31 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_47;
      }
      if (v31 < v13) {
        goto LABEL_48;
      }
      if (v13 == v31) {
        uint64_t v32 = 0;
      }
      else {
        uint64_t v32 = v13;
      }
      if (v13 == v31) {
        uint64_t v33 = 0;
      }
      else {
        uint64_t v33 = v13 + 1;
      }
      unint64_t v60 = v30;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v16 = sub_22081CDC8(0, v16[2] + 1, 1, v16);
      }
      unint64_t v35 = v16[2];
      unint64_t v34 = v16[3];
      if (v35 >= v34 >> 1) {
        uint64_t v16 = sub_22081CDC8((void *)(v34 > 1), v35 + 1, 1, v16);
      }
      void v16[2] = v35 + 1;
      uint64_t v36 = &v16[4 * v35];
      v36[4] = v22;
      v36[5] = v32;
      v36[6] = v33;
      *((unsigned char *)v36 + 56) = 0;
      swift_bridgeObjectRelease();
      uint64_t v10 = v21;
      uint64_t v9 = i;
      uint64_t v13 = v56;
    }
    unint64_t v26 = *(void *)(*(void *)(v60 + 56) + 8 * v24);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      break;
    }
    if ((v26 & 0x8000000000000000) != 0) {
      goto LABEL_43;
    }
LABEL_22:
    if (v26 >= v16[2]) {
      goto LABEL_44;
    }
    uint64_t v27 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      goto LABEL_45;
    }
    if (v27 < v13) {
      goto LABEL_46;
    }
    sub_220869870(v13, v27);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v13 = v56;
    uint64_t v10 = v21;
  }
  uint64_t v16 = sub_22080ABFC(v16);
  if ((v26 & 0x8000000000000000) == 0) {
    goto LABEL_22;
  }
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  unint64_t v61 = 0;
  unint64_t v62 = 0xE000000000000000;
  sub_22093EEA0();
  swift_bridgeObjectRelease();
  unint64_t v61 = 0xD00000000000002BLL;
  unint64_t v62 = 0x8000000220941280;
  uint64_t v69 = v13;
  sub_22093F1A0();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

uint64_t DataFrame.Slice.grouped(by:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *(_OWORD *)&v40[9] = *(long long *)((char *)v3 + 25);
  long long v7 = v3[1];
  long long v39 = *v3;
  *(_OWORD *)uint64_t v40 = v7;
  long long v41 = *v3;
  uint64_t v42 = *((void *)v3 + 2);
  uint64_t v9 = *((void *)&v7 + 1);
  uint64_t v8 = *(void *)&v40[16];
  uint64_t v10 = v40[24];
  long long v36 = v39;
  *(void *)&long long v37 = *((void *)v3 + 2);
  sub_220833B58((uint64_t)&v39);
  sub_22087C23C((uint64_t)&v41);
  uint64_t v32 = a1;
  unint64_t v11 = sub_22080BA90(a1, a2);
  uint64_t result = sub_22087C284((uint64_t)&v41);
  if ((v11 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v13 = v41;
  if (v11 >= *(void *)(v41 + 16))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_22080B5B8(v41 + 32 + 40 * v11, (uint64_t)&v36);
  uint64_t v15 = *((void *)&v37 + 1);
  uint64_t v14 = v38;
  __swift_project_boxed_opaque_existential_1(&v36, *((uint64_t *)&v37 + 1));
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 + 8) + 160))(v33, v9, v8, v10, v15);
  sub_22080B0D8((uint64_t)&v36);
  sub_220833BC0((uint64_t)&v39);
  uint64_t v17 = v34;
  uint64_t v16 = v35;
  __swift_project_boxed_opaque_existential_1(v33, v34);
  (*(void (**)(uint64_t))(*(void *)(v16 + 8) + 80))(v17);
  sub_220833C84((uint64_t)v33);
  if (!swift_dynamicCastMetatype())
  {
    if (swift_dynamicCastMetatype())
    {
      a3[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_267F19A48);
      a3[4] = sub_2208502C4(&qword_267F19A50, &qword_267F19A48);
      sub_220833B58((uint64_t)&v39);
      swift_bridgeObjectRetain();
      uint64_t v18 = v32;
      unint64_t v19 = sub_220913128(&v39, v32, a2);
      goto LABEL_17;
    }
    if (swift_dynamicCastMetatype())
    {
      a3[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_267F19A38);
      a3[4] = sub_2208502C4(&qword_267F19A40, &qword_267F19A38);
      sub_220833B58((uint64_t)&v39);
      swift_bridgeObjectRetain();
      uint64_t v18 = v32;
      unint64_t v19 = sub_220912CA4(&v39, v32, a2);
      goto LABEL_17;
    }
    if (swift_dynamicCastMetatype())
    {
      a3[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_267F19A28);
      a3[4] = sub_2208502C4(&qword_267F19A30, &qword_267F19A28);
      sub_220833B58((uint64_t)&v39);
      swift_bridgeObjectRetain();
      uint64_t v18 = v32;
      unint64_t v19 = sub_220912810(&v39, v32, a2);
      goto LABEL_17;
    }
    if (swift_dynamicCastMetatype())
    {
      a3[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_267F19A18);
      a3[4] = sub_2208502C4(&qword_267F19A20, &qword_267F19A18);
      sub_220833B58((uint64_t)&v39);
      swift_bridgeObjectRetain();
      uint64_t v18 = v32;
      unint64_t v19 = sub_220912394(&v39, v32, a2);
      goto LABEL_17;
    }
    if (swift_dynamicCastMetatype())
    {
      a3[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_267F19A08);
      a3[4] = sub_2208502C4(&qword_267F19A10, &qword_267F19A08);
      sub_220833B58((uint64_t)&v39);
      swift_bridgeObjectRetain();
      uint64_t v18 = v32;
      unint64_t v19 = sub_220911EFC(&v39, v32, a2);
      goto LABEL_17;
    }
    sub_22093E100();
    if (swift_dynamicCastMetatype())
    {
      a3[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_267F199F8);
      a3[4] = sub_2208502C4(&qword_267F19A00, &qword_267F199F8);
      sub_220833B58((uint64_t)&v39);
      swift_bridgeObjectRetain();
      uint64_t v18 = v32;
      unint64_t v19 = sub_2209119BC(&v39, v32, a2);
      goto LABEL_17;
    }
    long long v36 = v41;
    *(void *)&long long v37 = v42;
    sub_22087C23C((uint64_t)&v41);
    unint64_t v21 = sub_22080BA90(v32, a2);
    sub_22087C284((uint64_t)&v41);
    uint64_t result = swift_allocObject();
    if ((v21 & 0x8000000000000000) == 0)
    {
      if (v21 < *(void *)(v13 + 16))
      {
        uint64_t v22 = result;
        uint64_t v23 = result + 16;
        sub_22080B5B8(v13 + 32 + 40 * v21, (uint64_t)&v36);
        uint64_t v25 = *((void *)&v37 + 1);
        uint64_t v24 = v38;
        __swift_project_boxed_opaque_existential_1(&v36, *((uint64_t *)&v37 + 1));
        (*(void (**)(uint64_t))(*(void *)(v24 + 8) + 88))(v25);
        sub_22080B0D8((uint64_t)&v36);
        uint64_t v26 = *(void *)(v22 + 40);
        uint64_t v27 = *(void *)(v22 + 48);
        __swift_mutable_project_boxed_opaque_existential_1(v23, v26);
        uint64_t v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 16);
        swift_bridgeObjectRetain();
        uint64_t v29 = v28(v32, a2, v26, v27);
        MEMORY[0x270FA5388](v29);
        sub_220833B58((uint64_t)&v39);
        swift_retain();
        sub_220915E58(&v39, (uint64_t)sub_22091AB98, v22, (void (*)(uint64_t *__return_ptr))sub_22091586C, 0, (void (*)(unint64_t *))sub_22091ABFC, (uint64_t *)&v36);
        a3[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_267F199E8);
        a3[4] = sub_2208502C4(&qword_267F199F0, &qword_267F199E8);
        uint64_t v30 = swift_allocObject();
        *a3 = v30;
        uint64_t result = swift_release();
        long long v31 = v37;
        *(_OWORD *)(v30 + 16) = v36;
        *(_OWORD *)(v30 + 32) = v31;
        *(void *)(v30 + 48) = v38;
        return result;
      }
      goto LABEL_25;
    }
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  a3[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_267F19A58);
  a3[4] = sub_2208502C4(&qword_267F19A60, &qword_267F19A58);
  sub_220833B58((uint64_t)&v39);
  swift_bridgeObjectRetain();
  uint64_t v18 = v32;
  unint64_t v19 = sub_2209135A8(&v39, v32, a2);
LABEL_17:
  unint64_t v20 = v19;
  uint64_t result = sub_220833BC0((uint64_t)&v39);
  *a3 = v20;
  a3[1] = v18;
  a3[2] = a2;
  return result;
}

uint64_t sub_220916BE4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = a1 + 16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F19190);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_220944FB0;
  swift_beginAccess();
  sub_22083B5D0(v3, v4 + 32);
  uint64_t result = sub_22083B634(v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_220916C70@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  int64_t v2 = *(void *)(result + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v4 = result;
    uint64_t v8 = a2;
    uint64_t v15 = MEMORY[0x263F8EE78];
    sub_220826C38(0, v2, 0);
    uint64_t v5 = v4 + 32;
    do
    {
      sub_220835280(v5, (uint64_t)v11, qword_26AD40FF8);
      sub_220835280((uint64_t)v11, (uint64_t)v9, qword_26AD40FF8);
      if (v10)
      {
        if ((swift_dynamicCast() & 1) == 0)
        {
          uint64_t v14 = 0;
          long long v12 = 0u;
          long long v13 = 0u;
        }
      }
      else
      {
        sub_2208352E4((uint64_t)v9, qword_26AD40FF8);
        long long v12 = 0u;
        long long v13 = 0u;
        uint64_t v14 = 0;
      }
      sub_2208352E4((uint64_t)v11, qword_26AD40FF8);
      uint64_t v3 = v15;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_220826C38(0, *(void *)(v3 + 16) + 1, 1);
        uint64_t v3 = v15;
      }
      unint64_t v7 = *(void *)(v3 + 16);
      unint64_t v6 = *(void *)(v3 + 24);
      if (v7 >= v6 >> 1)
      {
        sub_220826C38((void *)(v6 > 1), v7 + 1, 1);
        uint64_t v3 = v15;
      }
      *(void *)(v3 + 16) = v7 + 1;
      uint64_t result = sub_220834D3C((uint64_t)&v12, v3 + 40 * v7 + 32, &qword_267F18658);
      v5 += 32;
      --v2;
    }
    while (v2);
    a2 = v8;
  }
  *a2 = v3;
  return result;
}

uint64_t sub_220916E14(uint64_t *a1, unint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[3];
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F187A0);
  uint64_t result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_220944FB0;
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(v4 + 16) > a2)
  {
    uint64_t v7 = result;
    sub_22080B5B8(v4 + 40 * a2 + 32, (uint64_t)v12);
    uint64_t v8 = v13;
    uint64_t v9 = v14;
    __swift_project_boxed_opaque_existential_1(v12, v13);
    uint64_t v15 = v2;
    uint64_t v10 = *(void *)(v9 + 8);
    unint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v5, v8, v10);
    sub_22080B0D8((uint64_t)v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v7;
  }
  __break(1u);
  return result;
}

uint64_t DataFrameProtocol.grouped<A, B>(by:transform:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10)
{
  uint64_t v23 = a7;
  uint64_t v24 = a6;
  MEMORY[0x270FA5388](a1);
  unint64_t v19 = (char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v19, v10, v21);
  swift_bridgeObjectRetain();
  return sub_2208F7450((uint64_t)v19, a1, a2, a3, a4, v23, a5, v24, a9, a10, a8);
}

uint64_t DataFrameProtocol.grouped<A, B>(by:transform:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  uint64_t v24 = a6;
  uint64_t v25 = a5;
  uint64_t v16 = (uint64_t *)MEMORY[0x270FA5388](a1);
  uint64_t v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *v16;
  uint64_t v19 = v16[1];
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v18, v9, v22);
  swift_bridgeObjectRetain();
  return sub_2208F7450((uint64_t)v18, v20, v19, a2, a3, v24, a4, v25, a9, a8, a7);
}

uint64_t DataFrameProtocol.grouped(by:timeUnit:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v7 = v6;
  uint64_t v23 = a5;
  uint64_t v13 = sub_22093E170();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v19, v7, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, a3, v13);
  swift_bridgeObjectRetain();
  return RowGrouping.init<A>(frame:columnName:timeUnit:)((uint64_t)v19, a1, a2, (uint64_t)v17, a4, v23, a6);
}

uint64_t DataFrameProtocol.grouped(by:timeUnit:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v6 = v5;
  uint64_t v23 = a4;
  uint64_t v11 = sub_22093E170();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *a1;
  uint64_t v18 = a1[1];
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v17, v6, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a2, v11);
  swift_bridgeObjectRetain();
  return RowGrouping.init<A>(frame:columnName:timeUnit:)((uint64_t)v17, v19, v18, (uint64_t)v15, a3, v23, a5);
}

uint64_t sub_2209174D0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a3 + 24))(&v9, a2, a3);
  uint64_t v7 = sub_22080BA90(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a4 = v7;
  return result;
}

void *sub_220917580@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a5 + 24))(&v19, a4, a5);
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(v19 + 16) > a1)
  {
    sub_22080B5B8(v19 + 40 * a1 + 32, (uint64_t)v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v12 = v17;
    uint64_t v11 = v18;
    __swift_project_boxed_opaque_existential_1(v16, v17);
    (*(void (**)(uint64_t))(*(void *)(v11 + 8) + 88))(v12);
    sub_22080B0D8((uint64_t)v16);
    uint64_t v13 = *(void *)(a6 + 24);
    uint64_t v14 = *(void *)(a6 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(a6, v13);
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 16);
    swift_bridgeObjectRetain();
    return (void *)v15(a2, a3, v13, v14);
  }
  __break(1u);
  return result;
}

double DataFrameProtocol.grouped<A>(by:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _OWORD *a6@<X8>)
{
  uint64_t v7 = v6;
  long long v41 = a6;
  uint64_t v42 = a4;
  uint64_t v40 = *(void *)(a2 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](a1);
  long long v39 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = v12;
  _OWORD v46[2] = v14;
  void v46[3] = v15;
  v46[4] = v16;
  v46[5] = v17;
  uint64_t v47 = v6;
  type metadata accessor for ColumnID();
  uint64_t v18 = sub_22093E900();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v38 = sub_2208F0D18((void (*)(char *, char *))sub_22091AC18, (uint64_t)v46, v18, MEMORY[0x263F8D6C8], MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v20);
  *(void *)&long long v51 = v38;
  *(void *)&long long v48 = a1;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B18);
  uint64_t v22 = sub_2208502C4(qword_267F18DC8, &qword_267F18B18);
  uint64_t v23 = swift_getWitnessTable();
  sub_22093F2C0();
  long long v48 = v49;
  v45[2] = a2;
  v45[3] = a3;
  v45[4] = v42;
  v45[5] = a5;
  v45[6] = v7;
  v44[2] = a2;
  void v44[3] = a3;
  v44[4] = v42;
  v44[5] = a5;
  v44[6] = sub_22091AC40;
  v44[7] = v45;
  *(void *)&long long v51 = v21;
  *((void *)&v51 + 1) = v18;
  *(void *)&long long v52 = v22;
  *((void *)&v52 + 1) = v23;
  uint64_t v24 = sub_22093EEE0();
  uint64_t v25 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_267F19198);
  uint64_t v26 = swift_getWitnessTable();
  uint64_t v28 = sub_22080E314((void (*)(char *, char *))sub_22091AC50, (uint64_t)v44, v24, v25, MEMORY[0x263F8E628], v26, MEMORY[0x263F8E658], v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v30 = (uint64_t)v39;
  uint64_t v29 = v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v39, v7, a2);
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = v28;
  _OWORD v43[2] = v38;
  uint64_t v32 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_267F18588);
  unint64_t v33 = sub_22091ACE0();
  sub_22093C820(v30, (uint64_t)sub_22091ACC0, v31, (void (*)(void))sub_22091586C, 0, (void (*)(unint64_t *))sub_22091ACC4, (uint64_t)v43, v32, (uint64_t *)&v51, (uint64_t)&type metadata for AnyHashableBuilder, a2, v33, (uint64_t)&off_26B59CD90, v42);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v30, a2);
  swift_bridgeObjectRelease();
  double result = *(double *)&v51;
  long long v35 = v52;
  long long v36 = v41;
  *long long v41 = v51;
  v36[1] = v35;
  *((void *)v36 + 4) = v53;
  return result;
}

uint64_t sub_220917A78@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a3 + 24))(&v9, a2, a3);
  uint64_t v7 = sub_22080BA90(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a4 = v7;
  return result;
}

void *sub_220917B28@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a4 + 24))(&v18, a3, a4);
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(v18 + 16) > a1)
  {
    sub_22080B5B8(v18 + 40 * a1 + 32, (uint64_t)v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v11 = v16;
    uint64_t v10 = v17;
    __swift_project_boxed_opaque_existential_1(v15, v16);
    (*(void (**)(uint64_t))(*(void *)(v10 + 8) + 88))(v11);
    sub_22080B0D8((uint64_t)v15);
    uint64_t v12 = *(void *)(a5 + 24);
    uint64_t v13 = *(void *)(a5 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(a5, v12);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 16);
    swift_bridgeObjectRetain();
    return (void *)v14(v7, v8, v12, v13);
  }
  __break(1u);
  return result;
}

uint64_t sub_220917C5C(uint64_t *a1, uint64_t a2)
{
  void (*v13)(void *__return_ptr, uint64_t, uint64_t, uint64_t);
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  void v18[3];
  uint64_t v19;
  uint64_t v20;
  void v21[4];
  uint64_t v22;

  int64_t v2 = *(void *)(a2 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (!v2) {
    return v3;
  }
  uint64_t v5 = *a1;
  uint64_t v16 = a1[3];
  uint64_t v22 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = (uint64_t)sub_220827218(0, v2, 0);
  uint64_t v3 = v22;
  uint64_t v7 = (unint64_t *)(a2 + 32);
  while (1)
  {
    unint64_t v9 = *v7++;
    unint64_t v8 = v9;
    if ((v9 & 0x8000000000000000) != 0) {
      break;
    }
    if (v8 >= *(void *)(v5 + 16)) {
      goto LABEL_11;
    }
    uint64_t v17 = v2;
    sub_22080B5B8(v5 + 32 + 40 * v8, (uint64_t)v18);
    uint64_t v10 = v19;
    uint64_t v11 = v20;
    __swift_project_boxed_opaque_existential_1(v18, v19);
    uint64_t v12 = *(void *)(v11 + 8);
    uint64_t v13 = *(void (**)(void *__return_ptr, uint64_t, uint64_t, uint64_t))(v12 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v21, v16, v10, v12);
    sub_22080B0D8((uint64_t)v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v22 = v3;
    uint64_t v15 = *(void *)(v3 + 16);
    uint64_t v14 = *(void *)(v3 + 24);
    if (v15 >= v14 >> 1)
    {
      sub_220827218((void *)(v14 > 1), v15 + 1, 1);
      uint64_t v3 = v22;
    }
    *(void *)(v3 + 16) = v15 + 1;
    uint64_t result = sub_220834D3C((uint64_t)v21, v3 + 32 * v15 + 32, qword_26AD40FF8);
    int64_t v2 = v17 - 1;
    if (v17 == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v3;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_220917E38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v58 = a6;
  uint64_t v11 = sub_22093ED30();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v50 - v16;
  uint64_t v18 = sub_22093ED30();
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  MEMORY[0x270FA5388](v19);
  uint64_t v24 = (char *)&v50 - v23;
  if (*(void *)(a1 + 16) != 2)
  {
    uint64_t v71 = a4;
    uint64_t v29 = v20;
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v70 = a5;
    goto LABEL_6;
  }
  uint64_t v55 = v22;
  long long v51 = v17;
  uint64_t v52 = v12;
  uint64_t v53 = v21;
  uint64_t v56 = a5;
  uint64_t v57 = v20;
  uint64_t v54 = v15;
  uint64_t v25 = a1 + 32;
  sub_220835280(a1 + 32, (uint64_t)&v66, qword_26AD40FF8);
  uint64_t v26 = v69;
  sub_2208352E4((uint64_t)&v66, qword_26AD40FF8);
  if (v26)
  {
    sub_220835280(a1 + 32, (uint64_t)&v66, qword_26AD40FF8);
    __swift_instantiateConcreteTypeFromMangledName(qword_26AD40FF8);
    int v27 = swift_dynamicCast();
    uint64_t v28 = *(void *)(a2 - 8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v24, v27 ^ 1u, 1, a2);
    LODWORD(v28) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48))(v24, 1, a2);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v24, v57);
    if (v28)
    {
      uint64_t v60 = a4;
      uint64_t v29 = v57;
      uint64_t WitnessTable = swift_getWitnessTable();
      uint64_t v59 = v56;
LABEL_6:
      uint64_t v31 = swift_getWitnessTable();
      uint64_t v66 = v29;
      uint64_t v67 = v11;
      goto LABEL_7;
    }
  }
  uint64_t v34 = a1 + 64;
  sub_220835280(v34, (uint64_t)&v66, qword_26AD40FF8);
  uint64_t v35 = v69;
  sub_2208352E4((uint64_t)&v66, qword_26AD40FF8);
  uint64_t v36 = v11;
  if (!v35) {
    goto LABEL_12;
  }
  sub_220835280(v34, (uint64_t)&v66, qword_26AD40FF8);
  __swift_instantiateConcreteTypeFromMangledName(qword_26AD40FF8);
  uint64_t v37 = v51;
  int v38 = swift_dynamicCast();
  uint64_t v39 = *(void *)(a3 - 8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v37, v38 ^ 1u, 1, a3);
  LODWORD(v39) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, a3);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v37, v11);
  if (!v39)
  {
LABEL_12:
    sub_220835280(v25, (uint64_t)&v66, qword_26AD40FF8);
    __swift_instantiateConcreteTypeFromMangledName(qword_26AD40FF8);
    uint64_t v41 = v53;
    int v42 = swift_dynamicCast();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56))(v41, v42 ^ 1u, 1, a2);
    sub_220835280(v34, (uint64_t)v65, qword_26AD40FF8);
    uint64_t v43 = (uint64_t)v54;
    int v44 = swift_dynamicCast();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56))(v43, v44 ^ 1u, 1, a3);
    uint64_t v64 = a4;
    uint64_t v45 = v57;
    uint64_t v46 = swift_getWitnessTable();
    uint64_t v63 = v56;
    uint64_t v47 = swift_getWitnessTable();
    uint64_t v48 = v58;
    sub_2208F02F8(v41, v43, v45, v36, v58);
    uint64_t v66 = v45;
    uint64_t v67 = v36;
    uint64_t v68 = v46;
    uint64_t v69 = v47;
    uint64_t v49 = type metadata accessor for Tuple2();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v48, 0, 1, v49);
  }
  uint64_t v62 = a4;
  uint64_t v40 = v57;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v61 = v56;
  uint64_t v31 = swift_getWitnessTable();
  uint64_t v66 = v40;
  uint64_t v67 = v36;
LABEL_7:
  uint64_t v68 = WitnessTable;
  uint64_t v69 = v31;
  uint64_t v32 = type metadata accessor for Tuple2();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v58, 1, 1, v32);
}

double sub_2209184A0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  v12[0] = a1;
  v12[1] = a2;
  v11[0] = a3;
  v11[1] = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(void *)&double result = sub_22083A86C(v12, v11, a5, a6, a7).n128_u64[0];
  return result;
}

uint64_t sub_220918520()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 96, 7);
}

double sub_220918560@<D0>(uint64_t a1@<X8>)
{
  return sub_2209184A0(v1[8], v1[9], v1[10], v1[11], v1[3], v1[4], a1);
}

uint64_t sub_220918598()
{
  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_2209185A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_220917E38(a1, v2[3], v2[4], v2[6], v2[7], a2);
}

uint64_t sub_2209185B8(uint64_t *a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v37 = a3;
  unint64_t v33 = a2;
  uint64_t v9 = sub_22093ED30();
  uint64_t v31 = *(void *)(v9 - 8);
  uint64_t v32 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v34 = (uint64_t)&v28 - v10;
  uint64_t v11 = sub_22093ED30();
  uint64_t v29 = *(void *)(v11 - 8);
  uint64_t v30 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v28 - v12;
  uint64_t v14 = *a1;
  uint64_t v15 = a1[1];
  uint64_t v17 = a1[2];
  uint64_t v16 = a1[3];
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F187A0);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_220945110;
  uint64_t v19 = (uint64_t *)(v18 + 32);
  uint64_t v35 = v15;
  uint64_t v36 = v14;
  uint64_t v38 = v14;
  uint64_t v39 = v15;
  uint64_t v20 = v17;
  uint64_t v21 = v16;
  uint64_t v40 = v20;
  uint64_t v41 = v16;
  DataFrame.Row.subscript.getter(v33, (uint64_t)v13);
  uint64_t v22 = *(void *)(a5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v13, 1, a5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v29 + 8))(v13, v30);
    *(_OWORD *)uint64_t v19 = 0u;
    *(_OWORD *)(v18 + 48) = 0u;
  }
  else
  {
    *(void *)(v18 + 56) = a5;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v19);
    (*(void (**)(uint64_t *, char *, uint64_t))(v22 + 32))(boxed_opaque_existential_1, v13, a5);
  }
  uint64_t v24 = v34;
  uint64_t v38 = v36;
  uint64_t v39 = v35;
  uint64_t v40 = v20;
  uint64_t v41 = v21;
  DataFrame.Row.subscript.getter(v37, v34);
  uint64_t v25 = *(void *)(a6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v24, 1, a6) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v24, v32);
    *(_OWORD *)(v18 + 64) = 0u;
    *(_OWORD *)(v18 + 80) = 0u;
  }
  else
  {
    *(void *)(v18 + 88) = a6;
    uint64_t v26 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v18 + 64));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v25 + 32))(v26, v24, a6);
  }
  return v18;
}

uint64_t sub_2209188C8(uint64_t *a1)
{
  return sub_2209185B8(a1, *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_2209188FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>, uint64_t a8)
{
  uint64_t v89 = a4;
  uint64_t v14 = sub_22093ED30();
  uint64_t v85 = *(void *)(v14 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v87 = (char *)&v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v84 = (char *)&v79 - v17;
  uint64_t v90 = a3;
  uint64_t v18 = sub_22093ED30();
  uint64_t v88 = *(void *)(v18 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v86 = (char *)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v79 - v21;
  uint64_t v92 = a2;
  uint64_t v23 = sub_22093ED30();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  MEMORY[0x270FA5388](v25);
  uint64_t v29 = (char *)&v79 - v28;
  if (*(void *)(a1 + 16) == 3)
  {
    uint64_t v79 = v27;
    uint64_t v91 = v26;
    uint64_t v80 = a6;
    uint64_t v81 = a8;
    uint64_t v83 = v14;
    uint64_t v82 = a7;
    uint64_t v30 = a1 + 32;
    sub_220835280(a1 + 32, (uint64_t)&v107, qword_26AD40FF8);
    uint64_t v31 = v110;
    sub_2208352E4((uint64_t)&v107, qword_26AD40FF8);
    if (v31)
    {
      sub_220835280(a1 + 32, (uint64_t)&v107, qword_26AD40FF8);
      __swift_instantiateConcreteTypeFromMangledName(qword_26AD40FF8);
      uint64_t v32 = v92;
      int v33 = swift_dynamicCast();
      uint64_t v34 = *(void *)(v32 - 8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v29, v33 ^ 1u, 1, v32);
      LODWORD(v34) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48))(v29, 1, v32);
      (*(void (**)(char *, uint64_t))(v24 + 8))(v29, v91);
      if (v34)
      {
        uint64_t v95 = a5;
        uint64_t v35 = v91;
        uint64_t WitnessTable = swift_getWitnessTable();
        uint64_t v94 = v80;
        uint64_t v37 = swift_getWitnessTable();
        uint64_t v93 = v81;
        uint64_t v38 = v83;
        uint64_t v39 = swift_getWitnessTable();
        uint64_t v107 = v35;
        uint64_t v108 = v18;
LABEL_10:
        uint64_t v109 = v38;
        uint64_t v110 = WitnessTable;
        uint64_t v111 = v37;
        uint64_t v112 = v39;
        uint64_t v44 = type metadata accessor for Tuple3();
        uint64_t v45 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56);
        uint64_t v46 = v82;
        return v45(v46, 1, 1, v44);
      }
    }
    uint64_t v47 = a1 + 64;
    sub_220835280(a1 + 64, (uint64_t)&v107, qword_26AD40FF8);
    uint64_t v48 = v110;
    sub_2208352E4((uint64_t)&v107, qword_26AD40FF8);
    uint64_t v49 = v18;
    if (v48)
    {
      sub_220835280(a1 + 64, (uint64_t)&v107, qword_26AD40FF8);
      __swift_instantiateConcreteTypeFromMangledName(qword_26AD40FF8);
      uint64_t v50 = v90;
      int v51 = swift_dynamicCast();
      uint64_t v52 = *(void *)(v50 - 8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(v22, v51 ^ 1u, 1, v50);
      LODWORD(v52) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v52 + 48))(v22, 1, v50);
      (*(void (**)(char *, uint64_t))(v88 + 8))(v22, v18);
      if (v52)
      {
        uint64_t v98 = a5;
        uint64_t v53 = v91;
        uint64_t WitnessTable = swift_getWitnessTable();
        uint64_t v97 = v80;
        uint64_t v37 = swift_getWitnessTable();
        uint64_t v96 = v81;
        uint64_t v38 = v83;
        uint64_t v39 = swift_getWitnessTable();
        uint64_t v107 = v53;
        uint64_t v108 = v18;
        goto LABEL_10;
      }
    }
    uint64_t v55 = a1 + 96;
    sub_220835280(v55, (uint64_t)&v107, qword_26AD40FF8);
    uint64_t v56 = v110;
    sub_2208352E4((uint64_t)&v107, qword_26AD40FF8);
    a7 = v82;
    uint64_t v57 = v83;
    if (!v56) {
      goto LABEL_16;
    }
    sub_220835280(v55, (uint64_t)&v107, qword_26AD40FF8);
    __swift_instantiateConcreteTypeFromMangledName(qword_26AD40FF8);
    uint64_t v58 = v84;
    uint64_t v59 = v89;
    int v60 = swift_dynamicCast();
    uint64_t v61 = *(void *)(v59 - 8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v58, v60 ^ 1u, 1, v59);
    LODWORD(v61) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v61 + 48))(v58, 1, v59);
    (*(void (**)(char *, uint64_t))(v85 + 8))(v58, v57);
    if (!v61)
    {
LABEL_16:
      sub_220835280(v30, (uint64_t)&v107, qword_26AD40FF8);
      __swift_instantiateConcreteTypeFromMangledName(qword_26AD40FF8);
      uint64_t v63 = v79;
      uint64_t v64 = v92;
      int v65 = swift_dynamicCast();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v63, v65 ^ 1u, 1, v64);
      sub_220835280(v47, (uint64_t)v106, qword_26AD40FF8);
      uint64_t v66 = (uint64_t)v86;
      uint64_t v67 = v90;
      int v68 = swift_dynamicCast();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v66, v68 ^ 1u, 1, v67);
      sub_220835280(v55, (uint64_t)v105, qword_26AD40FF8);
      uint64_t v69 = a7;
      uint64_t v70 = (uint64_t)v87;
      uint64_t v71 = v89;
      int v72 = swift_dynamicCast();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v70, v72 ^ 1u, 1, v71);
      uint64_t v104 = a5;
      uint64_t v73 = v91;
      uint64_t v74 = swift_getWitnessTable();
      uint64_t v103 = v80;
      uint64_t v75 = swift_getWitnessTable();
      uint64_t v102 = v81;
      uint64_t v76 = v83;
      uint64_t v78 = swift_getWitnessTable();
      sub_2208F06CC(v63, v66, v70, v73, v49, v76, v69);
      uint64_t v107 = v73;
      uint64_t v108 = v49;
      uint64_t v109 = v76;
      uint64_t v110 = v74;
      uint64_t v111 = v75;
      uint64_t v112 = v78;
      uint64_t v77 = type metadata accessor for Tuple3();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56))(v69, 0, 1, v77);
    }
    uint64_t v101 = a5;
    uint64_t v62 = v91;
    uint64_t v41 = swift_getWitnessTable();
    uint64_t v100 = v80;
    uint64_t v42 = swift_getWitnessTable();
    uint64_t v99 = v81;
    uint64_t v43 = swift_getWitnessTable();
    uint64_t v107 = v62;
    uint64_t v108 = v49;
    uint64_t v109 = v57;
  }
  else
  {
    uint64_t v115 = a5;
    uint64_t v40 = v26;
    uint64_t v41 = swift_getWitnessTable();
    uint64_t v114 = a6;
    uint64_t v42 = swift_getWitnessTable();
    uint64_t v113 = a8;
    uint64_t v43 = swift_getWitnessTable();
    uint64_t v107 = v40;
    uint64_t v108 = v18;
    uint64_t v109 = v14;
  }
  uint64_t v110 = v41;
  uint64_t v111 = v42;
  uint64_t v112 = v43;
  uint64_t v44 = type metadata accessor for Tuple3();
  uint64_t v45 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56);
  uint64_t v46 = a7;
  return v45(v46, 1, 1, v44);
}

double sub_220919390@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10)
{
  v15[0] = a1;
  v15[1] = a2;
  v14[0] = a3;
  v14[1] = a4;
  v13[0] = a5;
  v13[1] = a6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(void *)&double result = sub_22083AE54(v15, v14, v13, a7, a9, a10, a8).n128_u64[0];
  return result;
}

uint64_t sub_220919440(uint64_t *a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t v49 = a3;
  unint64_t v50 = a4;
  unint64_t v44 = a2;
  uint64_t v46 = a8;
  uint64_t v11 = sub_22093ED30();
  uint64_t v42 = *(void *)(v11 - 8);
  uint64_t v43 = v11;
  MEMORY[0x270FA5388](v11);
  int v51 = (char *)&v37 - v12;
  uint64_t v13 = sub_22093ED30();
  uint64_t v40 = *(void *)(v13 - 8);
  uint64_t v41 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v45 = (uint64_t)&v37 - v14;
  uint64_t v15 = sub_22093ED30();
  uint64_t v38 = *(void *)(v15 - 8);
  uint64_t v39 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v37 - v16;
  uint64_t v18 = *a1;
  uint64_t v19 = a1[1];
  uint64_t v21 = a1[2];
  uint64_t v20 = a1[3];
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F187A0);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_220945120;
  uint64_t v23 = (uint64_t *)(v22 + 32);
  uint64_t v47 = v19;
  uint64_t v48 = v18;
  uint64_t v53 = v18;
  uint64_t v54 = v19;
  uint64_t v57 = v21;
  uint64_t v55 = v21;
  uint64_t v56 = v20;
  uint64_t v52 = v20;
  DataFrame.Row.subscript.getter(v44, (uint64_t)v17);
  uint64_t v24 = *(void *)(a6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v17, 1, a6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v38 + 8))(v17, v39);
    *(_OWORD *)uint64_t v23 = 0u;
    *(_OWORD *)(v22 + 48) = 0u;
  }
  else
  {
    *(void *)(v22 + 56) = a6;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v23);
    (*(void (**)(uint64_t *, char *, uint64_t))(v24 + 32))(boxed_opaque_existential_1, v17, a6);
  }
  uint64_t v27 = v47;
  uint64_t v26 = v48;
  uint64_t v53 = v48;
  uint64_t v54 = v47;
  uint64_t v55 = v57;
  uint64_t v56 = v52;
  uint64_t v28 = v45;
  DataFrame.Row.subscript.getter(v49, v45);
  uint64_t v29 = *(void *)(a7 - 8);
  int v30 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v28, 1, a7);
  uint64_t v31 = (uint64_t)v51;
  uint64_t v32 = v46;
  if (v30 == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v28, v41);
    *(_OWORD *)(v22 + 64) = 0u;
    *(_OWORD *)(v22 + 80) = 0u;
  }
  else
  {
    *(void *)(v22 + 88) = a7;
    int v33 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v22 + 64));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v29 + 32))(v33, v28, a7);
  }
  uint64_t v53 = v26;
  uint64_t v54 = v27;
  uint64_t v55 = v57;
  uint64_t v56 = v52;
  DataFrame.Row.subscript.getter(v50, v31);
  uint64_t v34 = *(void *)(v32 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v31, 1, v32) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v31, v43);
    *(_OWORD *)(v22 + 96) = 0u;
    *(_OWORD *)(v22 + 112) = 0u;
  }
  else
  {
    *(void *)(v22 + 120) = v32;
    uint64_t v35 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v22 + 96));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v34 + 32))(v35, v31, v32);
  }
  return v22;
}

uint64_t sub_2209198A8(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, unsigned __int8 a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!*(void *)(a6 + 16))
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    goto LABEL_6;
  }
  uint64_t v26 = a4;
  unsigned __int8 v27 = a5;
  sub_22080B5B8(a6 + 32, (uint64_t)v28);
  uint64_t v17 = v29;
  uint64_t v16 = v30;
  __swift_project_boxed_opaque_existential_1(v28, v29);
  uint64_t v18 = *(void *)(v16 + 8);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 48);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v20 = v19(v17, v18);
  uint64_t result = sub_22080B0D8((uint64_t)v28);
  if ((v20 & 0x8000000000000000) == 0)
  {
    a5 = v27;
    a4 = v26;
    if (v20)
    {
      char v22 = 0;
LABEL_7:
      sub_220831F30(0, v20, v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22080B6B4(0, v20, v22);
      uint64_t v23 = sub_22081A46C(a3, a4, a5, 0, v20, v22);
      *(void *)a1 = a6;
      *(void *)(a1 + 8) = a7;
      *(void *)(a1 + 16) = a8;
      *(void *)(a1 + 24) = v23;
      *(void *)(a1 + 32) = v24;
      *(unsigned char *)(a1 + 40) = v25;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return a2;
    }
LABEL_6:
    uint64_t v20 = 0;
    char v22 = 2;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_220919A8C(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, unsigned __int8 a5, uint64_t *a6)
{
  uint64_t v11 = *a6;
  uint64_t v12 = a6[1];
  uint64_t v13 = a6[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!*(void *)(v11 + 16))
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    goto LABEL_6;
  }
  uint64_t v24 = a4;
  unsigned __int8 v25 = a5;
  sub_22080B5B8(v11 + 32, (uint64_t)v26);
  uint64_t v15 = v27;
  uint64_t v14 = v28;
  __swift_project_boxed_opaque_existential_1(v26, v27);
  uint64_t v16 = *(void *)(v14 + 8);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 48);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v18 = v17(v15, v16);
  uint64_t result = sub_22080B0D8((uint64_t)v26);
  if ((v18 & 0x8000000000000000) == 0)
  {
    a5 = v25;
    a4 = v24;
    if (v18)
    {
      char v20 = 0;
LABEL_7:
      sub_220831F30(0, v18, v20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22080B6B4(0, v18, v20);
      uint64_t v21 = sub_22081A46C(a3, a4, a5, 0, v18, v20);
      *(void *)a1 = v11;
      *(void *)(a1 + 8) = v12;
      *(void *)(a1 + 16) = v13;
      *(void *)(a1 + 24) = v21;
      *(void *)(a1 + 32) = v22;
      *(unsigned char *)(a1 + 40) = v23;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return a2;
    }
LABEL_6:
    uint64_t v18 = 0;
    char v20 = 2;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_220919C6C(uint64_t a1, uint64_t a2, unsigned int *a3, char *a4, uint64_t a5, unsigned __int8 a6, uint64_t *a7)
{
  uint64_t result = sub_220913FE8(a2, *a3 | ((unint64_t)*((unsigned __int8 *)a3 + 4) << 32), a4, a5, a6, *a7, a7[1], a7[2]);
  *(_DWORD *)a1 = result;
  *(unsigned char *)(a1 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t sub_220919CDC(uint64_t a1, void (*a2)(long long *, char *, uint64_t *, uint64_t, uint64_t, uint64_t))
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v26 = MEMORY[0x263F8EE78];
    sub_220826E18(0, v2, 0);
    uint64_t v3 = v26;
    uint64_t v5 = (unsigned __int8 *)(a1 + 56);
    do
    {
      uint64_t v6 = *((void *)v5 - 2);
      uint64_t v7 = *((void *)v5 - 1);
      uint64_t v8 = *v5;
      uint64_t v21 = *((void *)v5 - 3);
      swift_bridgeObjectRetain();
      sub_220831F30(v6, v7, v8);
      a2(&v22, (char *)&v22 + 8, &v21, v6, v7, v8);
      swift_bridgeObjectRelease();
      sub_22080B6B4(v6, v7, v8);
      long long v9 = v22;
      long long v10 = v23;
      long long v11 = v24;
      char v12 = v25;
      uint64_t v26 = v3;
      unint64_t v14 = *(void *)(v3 + 16);
      unint64_t v13 = *(void *)(v3 + 24);
      if (v14 >= v13 >> 1)
      {
        long long v18 = v23;
        long long v19 = v22;
        long long v17 = v24;
        sub_220826E18((void *)(v13 > 1), v14 + 1, 1);
        long long v11 = v17;
        long long v10 = v18;
        long long v9 = v19;
        uint64_t v3 = v26;
      }
      v5 += 32;
      *(void *)(v3 + 16) = v14 + 1;
      uint64_t v15 = v3 + 56 * v14;
      *(_OWORD *)(v15 + 32) = v9;
      *(_OWORD *)(v15 + 48) = v10;
      *(_OWORD *)(v15 + 64) = v11;
      *(unsigned char *)(v15 + 80) = v12;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_220919E48(uint64_t a1, void (*a2)(char *, char *, uint64_t, void, void, void), uint64_t a3)
{
  long long v18 = a2;
  uint64_t v19 = a3;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F19150);
  uint64_t v5 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = MEMORY[0x263F8EE78];
  if (v8)
  {
    v15[1] = v3;
    uint64_t v20 = MEMORY[0x263F8EE78];
    sub_220827058(0, v8, 0);
    uint64_t v9 = v20;
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18FE8);
    uint64_t v10 = a1
        + ((*(unsigned __int8 *)(*(void *)(v16 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v16 - 8) + 80));
    uint64_t v11 = *(void *)(*(void *)(v16 - 8) + 72);
    do
    {
      v18(v7, &v7[*(int *)(v17 + 48)], v10, *(void *)(v10 + *(int *)(v16 + 48)), *(void *)(v10 + *(int *)(v16 + 48) + 8), *(unsigned __int8 *)(v10 + *(int *)(v16 + 48) + 16));
      uint64_t v20 = v9;
      unint64_t v13 = *(void *)(v9 + 16);
      unint64_t v12 = *(void *)(v9 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_220827058(v12 > 1, v13 + 1, 1);
        uint64_t v9 = v20;
      }
      *(void *)(v9 + 16) = v13 + 1;
      sub_220834D3C((uint64_t)v7, v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v13, &qword_267F19150);
      v10 += v11;
      --v8;
    }
    while (v8);
  }
  return v9;
}

uint64_t sub_22091A054(uint64_t a1, void (*a2)(long long *, long long *, void *, uint64_t, uint64_t, uint64_t))
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v31 = MEMORY[0x263F8EE78];
    sub_220827098(0, v2, 0);
    uint64_t v3 = v31;
    uint64_t v5 = (unsigned __int8 *)(a1 + 64);
    do
    {
      uint64_t v6 = *((void *)v5 - 4);
      unint64_t v7 = *((void *)v5 - 3);
      uint64_t v8 = *((void *)v5 - 2);
      uint64_t v9 = *((void *)v5 - 1);
      uint64_t v10 = *v5;
      v24[0] = v6;
      v24[1] = v7;
      v24[2] = v8;
      v24[3] = v9;
      char v25 = v10;
      sub_220834CD4(v6, v7);
      sub_220831F30(v8, v9, v10);
      a2(&v26, &v27, v24, v8, v9, v10);
      sub_220834944(v6, v7);
      sub_22080B6B4(v8, v9, v10);
      long long v11 = v26;
      long long v12 = v27;
      uint64_t v13 = v28;
      long long v14 = v29;
      char v15 = v30;
      uint64_t v31 = v3;
      unint64_t v17 = *(void *)(v3 + 16);
      unint64_t v16 = *(void *)(v3 + 24);
      if (v17 >= v16 >> 1)
      {
        long long v21 = v27;
        long long v22 = v26;
        long long v20 = v29;
        sub_220827098((void *)(v16 > 1), v17 + 1, 1);
        long long v14 = v20;
        long long v12 = v21;
        long long v11 = v22;
        uint64_t v3 = v31;
      }
      v5 += 40;
      *(void *)(v3 + 16) = v17 + 1;
      uint64_t v18 = v3 + (v17 << 6);
      *(_OWORD *)(v18 + 32) = v11;
      *(_OWORD *)(v18 + 48) = v12;
      *(void *)(v18 + 64) = v13;
      *(_OWORD *)(v18 + 72) = v14;
      *(unsigned char *)(v18 + 88) = v15;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_22091A1D8(uint64_t a1, void (*a2)(unsigned char *, long long *, char *, uint64_t, uint64_t, uint64_t))
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v27 = MEMORY[0x263F8EE78];
    sub_2208270D8(0, v2, 0);
    uint64_t v3 = v27;
    uint64_t v5 = (unsigned __int8 *)(a1 + 56);
    do
    {
      uint64_t v6 = *((void *)v5 - 2);
      uint64_t v7 = *((void *)v5 - 1);
      uint64_t v8 = *v5;
      char v21 = *(v5 - 24);
      sub_220831F30(v6, v7, v8);
      a2(v22, &v23, &v21, v6, v7, v8);
      sub_22080B6B4(v6, v7, v8);
      char v9 = v22[0];
      long long v10 = v23;
      uint64_t v11 = v24;
      long long v12 = v25;
      char v13 = v26;
      uint64_t v27 = v3;
      unint64_t v15 = *(void *)(v3 + 16);
      unint64_t v14 = *(void *)(v3 + 24);
      if (v15 >= v14 >> 1)
      {
        long long v18 = v25;
        long long v19 = v23;
        sub_2208270D8((void *)(v14 > 1), v15 + 1, 1);
        long long v12 = v18;
        long long v10 = v19;
        uint64_t v3 = v27;
      }
      *(void *)(v3 + 16) = v15 + 1;
      uint64_t v16 = v3 + 56 * v15;
      *(unsigned char *)(v16 + 32) = v9;
      v5 += 32;
      *(_OWORD *)(v16 + 40) = v10;
      *(void *)(v16 + 56) = v11;
      *(_OWORD *)(v16 + 64) = v12;
      *(unsigned char *)(v16 + 80) = v13;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_22091A340(uint64_t a1, void (*a2)(int *, long long *, int *, uint64_t, uint64_t, uint64_t))
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v32 = MEMORY[0x263F8EE78];
    sub_220827158(0, v2, 0);
    uint64_t v3 = v32;
    uint64_t v5 = (unsigned __int8 *)(a1 + 56);
    do
    {
      char v6 = *(v5 - 20);
      uint64_t v7 = *((void *)v5 - 2);
      uint64_t v8 = *((void *)v5 - 1);
      uint64_t v9 = *v5;
      int v24 = *((_DWORD *)v5 - 6);
      char v25 = v6;
      sub_220831F30(v7, v8, v9);
      a2(&v26, &v28, &v24, v7, v8, v9);
      sub_22080B6B4(v7, v8, v9);
      int v10 = v26;
      char v11 = v27;
      long long v12 = v28;
      uint64_t v13 = v29;
      long long v14 = v30;
      char v15 = v31;
      uint64_t v32 = v3;
      unint64_t v17 = *(void *)(v3 + 16);
      unint64_t v16 = *(void *)(v3 + 24);
      if (v17 >= v16 >> 1)
      {
        long long v21 = v30;
        long long v22 = v28;
        int v19 = v26;
        sub_220827158((void *)(v16 > 1), v17 + 1, 1);
        int v10 = v19;
        long long v14 = v21;
        long long v12 = v22;
        uint64_t v3 = v32;
      }
      *(void *)(v3 + 16) = v17 + 1;
      uint64_t v18 = v3 + 56 * v17;
      *(_DWORD *)(v18 + 32) = v10;
      v5 += 32;
      *(unsigned char *)(v18 + 36) = v11;
      *(_OWORD *)(v18 + 40) = v12;
      *(void *)(v18 + 56) = v13;
      *(_OWORD *)(v18 + 64) = v14;
      *(unsigned char *)(v18 + 80) = v15;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_22091A4C0(uint64_t a1, void (*a2)(long long *, long long *, void *, uint64_t, uint64_t, uint64_t))
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v29 = MEMORY[0x263F8EE78];
    sub_220827198(0, v2, 0);
    uint64_t v3 = v29;
    uint64_t v5 = (unsigned __int8 *)(a1 + 64);
    do
    {
      uint64_t v6 = *((void *)v5 - 3);
      uint64_t v8 = *((void *)v5 - 2);
      uint64_t v7 = *((void *)v5 - 1);
      uint64_t v9 = *v5;
      v23[0] = *((void *)v5 - 4);
      v23[1] = v6;
      swift_bridgeObjectRetain();
      sub_220831F30(v8, v7, v9);
      a2(&v24, &v25, v23, v8, v7, v9);
      swift_bridgeObjectRelease();
      sub_22080B6B4(v8, v7, v9);
      long long v10 = v24;
      long long v11 = v25;
      uint64_t v12 = v26;
      long long v13 = v27;
      char v14 = v28;
      uint64_t v29 = v3;
      unint64_t v16 = *(void *)(v3 + 16);
      unint64_t v15 = *(void *)(v3 + 24);
      if (v16 >= v15 >> 1)
      {
        long long v20 = v25;
        long long v21 = v24;
        long long v19 = v27;
        sub_220827198((void *)(v15 > 1), v16 + 1, 1);
        long long v13 = v19;
        long long v11 = v20;
        long long v10 = v21;
        uint64_t v3 = v29;
      }
      v5 += 40;
      *(void *)(v3 + 16) = v16 + 1;
      uint64_t v17 = v3 + (v16 << 6);
      *(_OWORD *)(v17 + 32) = v10;
      *(_OWORD *)(v17 + 48) = v11;
      *(void *)(v17 + 64) = v12;
      *(_OWORD *)(v17 + 72) = v13;
      *(unsigned char *)(v17 + 88) = v14;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_22091A630(uint64_t a1, void (*a2)(uint64_t *, long long *, uint64_t *, uint64_t, uint64_t, uint64_t), uint64_t a3, uint64_t a4, void (*a5)(BOOL, unint64_t, uint64_t))
{
  unint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = MEMORY[0x263F8EE78];
  if (v5)
  {
    uint64_t v36 = MEMORY[0x263F8EE78];
    a5(0, v5, 0);
    uint64_t v6 = v36;
    uint64_t v8 = (unsigned __int8 *)(a1 + 64);
    do
    {
      char v9 = *(v8 - 24);
      uint64_t v11 = *((void *)v8 - 2);
      uint64_t v10 = *((void *)v8 - 1);
      uint64_t v12 = *v8;
      uint64_t v28 = *((void *)v8 - 4);
      char v29 = v9;
      sub_220831F30(v11, v10, v12);
      a2(&v30, &v32, &v28, v11, v10, v12);
      sub_22080B6B4(v11, v10, v12);
      uint64_t v13 = v30;
      char v14 = v31;
      long long v15 = v32;
      uint64_t v16 = v33;
      long long v17 = v34;
      char v18 = v35;
      uint64_t v36 = v6;
      unint64_t v20 = *(void *)(v6 + 16);
      unint64_t v19 = *(void *)(v6 + 24);
      if (v20 >= v19 >> 1)
      {
        long long v24 = v34;
        long long v25 = v32;
        uint64_t v22 = v30;
        a5(v19 > 1, v20 + 1, 1);
        uint64_t v13 = v22;
        long long v17 = v24;
        long long v15 = v25;
        uint64_t v6 = v36;
      }
      *(void *)(v6 + 16) = v20 + 1;
      uint64_t v21 = v6 + (v20 << 6);
      *(void *)(v21 + 32) = v13;
      v8 += 40;
      *(unsigned char *)(v21 + 40) = v14;
      *(_OWORD *)(v21 + 48) = v15;
      *(void *)(v21 + 64) = v16;
      *(_OWORD *)(v21 + 72) = v17;
      *(unsigned char *)(v21 + 88) = v18;
      --v5;
    }
    while (v5);
  }
  return v6;
}

uint64_t sub_22091A7B8(uint64_t a1, uint64_t a2, void (*a3)(long long *__return_ptr, uint64_t, uint64_t, uint64_t))
{
  unint64_t v5 = *(void *)(a1 + 16);
  unint64_t v6 = *(void *)(a2 + 16);
  if (v6 >= v5) {
    int64_t v7 = *(void *)(a1 + 16);
  }
  else {
    int64_t v7 = *(void *)(a2 + 16);
  }
  uint64_t v39 = MEMORY[0x263F8EE78];
  sub_220826DD8(0, v7, 0);
  uint64_t v8 = v39;
  int64_t v32 = v7;
  uint64_t v34 = a2;
  uint64_t v35 = a1;
  unint64_t v36 = v5;
  int64_t v33 = v6;
  if (v7)
  {
    uint64_t v9 = a2;
    uint64_t v10 = (uint64_t *)(a1 + 32);
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v12 = (uint64_t *)(v9 + 40);
    unint64_t v13 = v5;
    unint64_t v14 = v6;
    int64_t v15 = v7;
    unint64_t v16 = v14;
    while (v13)
    {
      if (!v16) {
        goto LABEL_26;
      }
      uint64_t v17 = *v10;
      uint64_t v18 = *(v12 - 1);
      uint64_t v19 = *v12;
      swift_bridgeObjectRetain();
      a3(v38, v17, v18, v19);
      swift_bridgeObjectRelease();
      uint64_t v39 = v8;
      unint64_t v21 = *(void *)(v8 + 16);
      unint64_t v20 = *(void *)(v8 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_220826DD8((void *)(v20 > 1), v21 + 1, 1);
        uint64_t v8 = v39;
      }
      *(void *)(v8 + 16) = v21 + 1;
      uint64_t result = sub_2208343B8(v38, v8 + 40 * v21 + 32);
      --v16;
      --v13;
      v12 += 2;
      ++v10;
      if (!--v15) {
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
LABEL_13:
    if (v36 <= v33)
    {
LABEL_24:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8;
    }
    uint64_t v22 = 0;
    if (v32 <= v33) {
      int64_t v23 = v33;
    }
    else {
      int64_t v23 = v32;
    }
    int64_t v24 = v23 - v32;
    unint64_t v25 = v36 - v32;
    uint64_t v26 = (uint64_t *)(v34 + 16 * v32 + 40);
    while (v25 != v22)
    {
      if (v33 - v32 == v22) {
        goto LABEL_24;
      }
      if (v24 == v22) {
        goto LABEL_28;
      }
      uint64_t v27 = *(void *)(v35 + 8 * v32 + 32 + 8 * v22);
      uint64_t v28 = *(v26 - 1);
      uint64_t v29 = *v26;
      swift_bridgeObjectRetain();
      a3(v38, v27, v28, v29);
      swift_bridgeObjectRelease();
      uint64_t v39 = v8;
      unint64_t v31 = *(void *)(v8 + 16);
      unint64_t v30 = *(void *)(v8 + 24);
      if (v31 >= v30 >> 1)
      {
        sub_220826DD8((void *)(v30 > 1), v31 + 1, 1);
        uint64_t v8 = v39;
      }
      *(void *)(v8 + 16) = v31 + 1;
      uint64_t result = sub_2208343B8(v38, v8 + 40 * v31 + 32);
      ++v22;
      v26 += 2;
      if (v25 == v22) {
        goto LABEL_24;
      }
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_22091AA54()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 128, 7);
}

double sub_22091AA9C@<D0>(uint64_t a1@<X8>)
{
  return sub_220919390(v1[10], v1[11], v1[12], v1[13], v1[14], v1[15], v1[3], a1, v1[4], v1[5]);
}

uint64_t sub_22091AADC()
{
  return MEMORY[0x270FA0238](v0, 80, 7);
}

uint64_t sub_22091AAEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2209188FC(a1, v2[3], v2[4], v2[5], v2[7], v2[8], a2, v2[9]);
}

uint64_t sub_22091AB20(uint64_t *a1)
{
  return sub_220919440(a1, *(void *)(v1 + 80), *(void *)(v1 + 88), *(void *)(v1 + 96), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_22091AB60()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_22091AB98@<X0>(uint64_t *a1@<X8>)
{
  return sub_220916BE4(v1, a1);
}

uint64_t sub_22091ABB4()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_22091ABFC(uint64_t *a1)
{
  return sub_220916E14(a1, *(void *)(v1 + 16));
}

uint64_t sub_22091AC18@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_220917A78(a1, *(void *)(v2 + 16), *(void *)(v2 + 32), a2);
}

void *sub_22091AC40@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_220917B28(a1, a2, *(void *)(v3 + 16), *(void *)(v3 + 32), a3);
}

uint64_t sub_22091AC50(void *a1)
{
  return (*(uint64_t (**)(void, void *))(v1 + 48))(*a1, a1 + 1);
}

uint64_t sub_22091AC88()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_22091ACC4(uint64_t *a1)
{
  return sub_220917C5C(a1, *(void *)(v1 + 16));
}

unint64_t sub_22091ACE0()
{
  unint64_t result = qword_267F19A68;
  if (!qword_267F19A68)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267F18588);
    sub_22091AD54();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F19A68);
  }
  return result;
}

unint64_t sub_22091AD54()
{
  unint64_t result = qword_267F19A70;
  if (!qword_267F19A70)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267F18658);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F19A70);
  }
  return result;
}

uint64_t sub_22091ADC0()
{
  return sub_2208502C4(&qword_267F199F0, &qword_267F199E8);
}

uint64_t sub_22091ADFC()
{
  return sub_2208502C4(&qword_267F199F0, &qword_267F199E8);
}

uint64_t sub_22091AE38()
{
  return swift_getWitnessTable();
}

uint64_t sub_22091AF78()
{
  return swift_getWitnessTable();
}

uint64_t sub_22091B104(uint64_t *a1, uint64_t a2, uint64_t *a3, char *a4, uint64_t a5, unsigned __int8 a6)
{
  uint64_t v9 = *(long long **)(v6 + 16);
  uint64_t v10 = *a3;
  uint64_t v11 = a3[1];
  long long v12 = v9[1];
  long long v15 = *v9;
  v16[0] = v12;
  *(_OWORD *)((char *)v16 + 9) = *(long long *)((char *)v9 + 25);
  uint64_t result = sub_220914D3C(a2, v10, v11, a4, a5, a6, (uint64_t *)&v15);
  *a1 = result;
  a1[1] = v14;
  return result;
}

uint64_t sub_22091B158(uint64_t a1, uint64_t a2, unsigned int *a3, char *a4, uint64_t a5, unsigned __int8 a6)
{
  uint64_t v8 = *(long long **)(v6 + 16);
  uint64_t v9 = *a3;
  unsigned __int8 v10 = *((unsigned char *)a3 + 4);
  long long v11 = v8[1];
  long long v13 = *v8;
  v14[0] = v11;
  *(_OWORD *)((char *)v14 + 9) = *(long long *)((char *)v8 + 25);
  uint64_t result = sub_220914B60(a2, v9 | ((unint64_t)v10 << 32), a4, a5, a6, (uint64_t *)&v13);
  *(_DWORD *)a1 = result;
  *(unsigned char *)(a1 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t sub_22091B1D4(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, unsigned __int8 a6)
{
  uint64_t v9 = *(long long **)(v6 + 16);
  uint64_t v10 = *(void *)a3;
  uint64_t v11 = *(unsigned __int8 *)(a3 + 8);
  long long v12 = v9[1];
  long long v15 = *v9;
  v16[0] = v12;
  *(_OWORD *)((char *)v16 + 9) = *(long long *)((char *)v9 + 25);
  uint64_t result = sub_220914F2C(a2, v10, v11, a4, a5, a6, (uint64_t *)&v15);
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v14 & 1;
  return result;
}

uint64_t sub_22091B234(unsigned char *a1, uint64_t a2, unsigned __int8 *a3, char *a4, uint64_t a5, unsigned __int8 a6)
{
  uint64_t v8 = *(long long **)(v6 + 16);
  long long v9 = v8[1];
  long long v11 = *v8;
  v12[0] = v9;
  *(_OWORD *)((char *)v12 + 9) = *(long long *)((char *)v8 + 25);
  uint64_t result = sub_22091498C(a2, *a3, a4, a5, a6, (uint64_t *)&v11);
  *a1 = result;
  return result;
}

uint64_t sub_22091B298(uint64_t *a1, uint64_t a2, uint64_t *a3, char *a4, uint64_t a5, unsigned __int8 a6)
{
  uint64_t v10 = *(long long **)(v6 + 16);
  uint64_t v12 = *a3;
  unint64_t v11 = a3[1];
  long long v13 = v10[1];
  long long v15 = *v10;
  v16[0] = v13;
  *(_OWORD *)((char *)v16 + 9) = *(long long *)((char *)v10 + 25);
  return sub_220914798(a1, a2, v12, v11, a4, a5, a6, (uint64_t *)&v15);
}

uint64_t sub_22091B2E4(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, unsigned __int8 a6)
{
  int64_t v7 = *(long long **)(v6 + 16);
  long long v8 = v7[1];
  long long v10 = *v7;
  v11[0] = v8;
  *(_OWORD *)((char *)v11 + 9) = *(long long *)((char *)v7 + 25);
  return sub_2209145B8(a1, a2, a3, a4, a5, a6, (uint64_t *)&v10);
}

uint64_t sub_22091B31C(uint64_t *a1, uint64_t a2, uint64_t *a3, char *a4, uint64_t a5, unsigned __int8 a6)
{
  long long v9 = *(long long **)(v6 + 16);
  uint64_t v10 = *a3;
  long long v11 = v9[1];
  long long v13 = *v9;
  v14[0] = v11;
  *(_OWORD *)((char *)v14 + 9) = *(long long *)((char *)v9 + 25);
  uint64_t result = sub_220919A8C(a2, v10, a4, a5, a6, (uint64_t *)&v13);
  *a1 = result;
  return result;
}

uint64_t sub_22091B384(uint64_t *a1, uint64_t a2, uint64_t *a3, char *a4, uint64_t a5, unsigned __int8 a6)
{
  uint64_t result = sub_2209141C8(a2, *a3, a3[1], a4, a5, a6, **(void **)(v6 + 16), *(void *)(*(void *)(v6 + 16) + 8), *(void *)(*(void *)(v6 + 16) + 16));
  *a1 = result;
  a1[1] = v9;
  return result;
}

uint64_t sub_22091B3D0(uint64_t a1, uint64_t a2, unsigned int *a3, char *a4, uint64_t a5, unsigned __int8 a6)
{
  return sub_220919C6C(a1, a2, a3, a4, a5, a6, *(uint64_t **)(v6 + 16));
}

uint64_t sub_22091B3D8(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, unsigned __int8 a6)
{
  uint64_t result = sub_2209143BC(a2, *(void *)a3, *(unsigned __int8 *)(a3 + 8), a4, a5, a6, **(void **)(v6 + 16), *(void *)(*(void *)(v6 + 16) + 8), *(void *)(*(void *)(v6 + 16) + 16));
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v9 & 1;
  return result;
}

uint64_t sub_22091B430(unsigned char *a1, uint64_t a2, unsigned __int8 *a3, char *a4, uint64_t a5, unsigned __int8 a6)
{
  uint64_t result = sub_220913E10(a2, *a3, a4, a5, a6, **(void **)(v6 + 16), *(void *)(*(void *)(v6 + 16) + 8), *(void *)(*(void *)(v6 + 16) + 16));
  *a1 = result;
  return result;
}

uint64_t sub_22091B480(uint64_t *a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, unsigned __int8 a6)
{
  return sub_220913C1C(a1, a2, *(void *)a3, *(void *)(a3 + 8), a4, a5, a6, **(void **)(v6 + 16), *(void *)(*(void *)(v6 + 16) + 8), *(void *)(*(void *)(v6 + 16) + 16));
}

uint64_t sub_22091B4C4(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, unsigned __int8 a6)
{
  return sub_220913A3C(a1, a2, a3, a4, a5, a6, **(void **)(v6 + 16), *(void *)(*(void *)(v6 + 16) + 8), *(void *)(*(void *)(v6 + 16) + 16));
}

uint64_t sub_22091B4F4(uint64_t *a1, uint64_t a2, uint64_t *a3, char *a4, uint64_t a5, unsigned __int8 a6)
{
  uint64_t result = sub_2209198A8(a2, *a3, a4, a5, a6, **(void **)(v6 + 16), *(void *)(*(void *)(v6 + 16) + 8), *(void *)(*(void *)(v6 + 16) + 16));
  *a1 = result;
  return result;
}

uint64_t sub_22091B544@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2209174D0(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

void *sub_22091B568@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_220917580(a1, a2, a3, *(void *)(v4 + 16), *(void *)(v4 + 24), a4);
}

uint64_t sub_22091B574@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t result = sub_22083B634(v2);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_22091B5A4(uint64_t *a1)
{
  return sub_22091ABFC(a1);
}

uint64_t sub_22091B5BC(uint64_t *a1)
{
  return sub_22091ACC4(a1);
}

uint64_t sub_22091B5D8(void (*a1)(uint64_t *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x263F8EE78];
  if (v5)
  {
    uint64_t v17 = MEMORY[0x263F8EE78];
    sub_220826C98(0, v5, 0);
    uint64_t v6 = v17;
    char v9 = (uint64_t *)(a3 + 40);
    while (1)
    {
      uint64_t v10 = *v9;
      v15[0] = *(v9 - 1);
      v15[1] = v10;
      swift_bridgeObjectRetain();
      a1(&v16, v15);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      swift_bridgeObjectRelease();
      uint64_t v11 = v16;
      uint64_t v17 = v6;
      unint64_t v13 = *(void *)(v6 + 16);
      unint64_t v12 = *(void *)(v6 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_220826C98((char *)(v12 > 1), v13 + 1, 1);
        uint64_t v6 = v17;
      }
      v9 += 2;
      *(void *)(v6 + 16) = v13 + 1;
      *(void *)(v6 + 8 * v13 + 32) = v11;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_22091B704(void (*a1)(uint64_t *__return_ptr, uint64_t, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x263F8EE78];
  if (v5)
  {
    uint64_t v28 = MEMORY[0x263F8EE78];
    sub_220826F98(0, v5, 0);
    uint64_t v6 = v28;
    for (uint64_t i = a3 + 32; ; i += 40)
    {
      a1(&v23, i, &v22);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v10 = v23;
      uint64_t v9 = v24;
      uint64_t v11 = v25;
      long long v12 = v26;
      uint64_t v13 = v27;
      uint64_t v28 = v6;
      unint64_t v15 = *(void *)(v6 + 16);
      unint64_t v14 = *(void *)(v6 + 24);
      if (v15 >= v14 >> 1)
      {
        long long v20 = v26;
        uint64_t v19 = v24;
        uint64_t v17 = v27;
        sub_220826F98((char *)(v14 > 1), v15 + 1, 1);
        uint64_t v13 = v17;
        uint64_t v9 = v19;
        long long v12 = v20;
        uint64_t v6 = v28;
      }
      *(void *)(v6 + 16) = v15 + 1;
      uint64_t v16 = v6 + 48 * v15;
      *(void *)(v16 + 32) = v10;
      *(void *)(v16 + 40) = v9;
      *(void *)(v16 + 48) = v11;
      *(_OWORD *)(v16 + 56) = v12;
      *(void *)(v16 + 72) = v13;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
  }
  return v6;
}

uint64_t sub_22091B844(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t (*)(uint64_t *))result;
    unint64_t v7 = 0;
    uint64_t v8 = MEMORY[0x263F8EE78];
    long long v12 = (uint64_t (*)(uint64_t *))result;
    while (v7 < *(void *)(a3 + 16))
    {
      uint64_t v11 = *(void *)(a3 + 8 * v7 + 32);
      uint64_t v13 = v11;
      uint64_t result = v6(&v13);
      if (v3)
      {
        swift_release();
        goto LABEL_14;
      }
      if (result)
      {
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v14 = v8;
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_220826C98(0, *(void *)(v8 + 16) + 1, 1);
          uint64_t v8 = v14;
        }
        unint64_t v10 = *(void *)(v8 + 16);
        unint64_t v9 = *(void *)(v8 + 24);
        if (v10 >= v9 >> 1)
        {
          uint64_t result = (uint64_t)sub_220826C98((char *)(v9 > 1), v10 + 1, 1);
          uint64_t v8 = v14;
        }
        *(void *)(v8 + 16) = v10 + 1;
        *(void *)(v8 + 8 * v10 + 32) = v11;
        uint64_t v6 = v12;
      }
      if (v5 == ++v7) {
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
LABEL_14:
    swift_bridgeObjectRelease();
    return v8;
  }
  return result;
}

uint64_t RowGrouping.summary()@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_2208F628C(*(void *)(v2 + 8), *(void *)(v2 + 16));
  int64_t v5 = *(void *)(sub_2208F292C() + 16);
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_220837D30(0, v5);
  int64_t v7 = v6[2];
  if (v7)
  {
    uint64_t v8 = v6 + 4;
    uint64_t v9 = MEMORY[0x263F8EE78];
    do
    {
      uint64_t v13 = *v8++;
      uint64_t v12 = v13;
      if (v13 != v4)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_220826C98(0, *(void *)(v9 + 16) + 1, 1);
        }
        unint64_t v11 = *(void *)(v9 + 16);
        unint64_t v10 = *(void *)(v9 + 24);
        if (v11 >= v10 >> 1) {
          sub_220826C98((char *)(v10 > 1), v11 + 1, 1);
        }
        *(void *)(v9 + 16) = v11 + 1;
        *(void *)(v9 + 8 * v11 + 32) = v12;
      }
      --v7;
    }
    while (v7);
  }
  else
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
  }
  swift_release();
  sub_22091BE10(v9, a1, a2);

  return swift_release();
}

uint64_t RowGrouping.summary(of:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v23 = v3[2];
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v35 = *(void *)(a2 + 16);
  uint64_t v7 = v35;
  uint64_t v36 = v6;
  uint64_t v37 = v4;
  uint64_t v38 = v5;
  uint64_t v39 = v23;
  uint64_t v8 = sub_22091B5D8((void (*)(uint64_t *__return_ptr, void *))sub_22091C328, (uint64_t)v34, a1);
  *(void *)&v45[0] = v4;
  uint64_t v31 = v7;
  uint64_t v32 = v6;
  uint64_t v33 = v8;
  uint64_t v26 = v7;
  uint64_t v27 = v6;
  uint64_t v28 = sub_22091C3A0;
  uint64_t v29 = &v30;
  uint64_t v9 = sub_22093ED30();
  swift_bridgeObjectRetain();
  swift_getTupleTypeMetadata2();
  uint64_t v10 = sub_22093E900();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v14 = sub_2208F0D18((void (*)(char *, char *))sub_22091C3C0, (uint64_t)v25, v10, TupleTypeMetadata2, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v15 = (void *)swift_allocObject();
  void v15[2] = v7;
  void v15[3] = v6;
  v15[4] = v4;
  v15[5] = v5;
  v15[6] = v23;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v7;
  *(void *)(v16 + 24) = v6;
  uint64_t v17 = type metadata accessor for SingleColumnBuilder();
  uint64_t v44 = v6;
  uint64_t v18 = swift_getWitnessTable();
  uint64_t v22 = swift_getWitnessTable();
  sub_220891B80((uint64_t)sub_22091C3E8, (uint64_t)v15, (uint64_t)sub_22091C3FC, v16, v14, v45);
  uint64_t v40 = v9;
  uint64_t v41 = v17;
  uint64_t v42 = v18;
  uint64_t v43 = v22;
  a3[3] = type metadata accessor for _GroupSummaries();
  a3[4] = swift_getWitnessTable();
  uint64_t v19 = swift_allocObject();
  *a3 = v19;
  long long v20 = v45[1];
  *(_OWORD *)(v19 + 16) = v45[0];
  *(_OWORD *)(v19 + 32) = v20;
  *(void *)(v19 + 48) = v46;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t RowGroupingProtocol.summary(of:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t sub_22091BE10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = v3[1];
  uint64_t v7 = v3[2];
  *(void *)&v38[0] = *v3;
  uint64_t v5 = *(void *)&v38[0];
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  uint64_t v30 = v8;
  uint64_t v31 = v9;
  uint64_t v32 = a1;
  uint64_t v25 = v8;
  uint64_t v26 = v9;
  uint64_t v27 = sub_22091C50C;
  uint64_t v28 = &v29;
  uint64_t v10 = sub_22093ED30();
  swift_bridgeObjectRetain();
  swift_getTupleTypeMetadata2();
  uint64_t v11 = sub_22093E900();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v15 = sub_2208F0D18((void (*)(char *, char *))sub_22091C510, (uint64_t)v24, v11, TupleTypeMetadata2, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v14);
  swift_bridgeObjectRelease();
  uint64_t v16 = (void *)swift_allocObject();
  _OWORD v16[2] = v8;
  void v16[3] = v9;
  void v16[4] = v5;
  v16[5] = v6;
  v16[6] = v7;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v8;
  *(void *)(v17 + 24) = v9;
  uint64_t v18 = type metadata accessor for SingleColumnBuilder();
  uint64_t v37 = v9;
  uint64_t v19 = swift_getWitnessTable();
  uint64_t v23 = swift_getWitnessTable();
  sub_220891B80((uint64_t)sub_22091C3E8, (uint64_t)v16, (uint64_t)sub_22091C528, v17, v15, v38);
  uint64_t v33 = v10;
  uint64_t v34 = v18;
  uint64_t v35 = v19;
  uint64_t v36 = v23;
  a3[3] = type metadata accessor for _GroupSummaries();
  a3[4] = swift_getWitnessTable();
  uint64_t v20 = swift_allocObject();
  *a3 = v20;
  long long v21 = v38[1];
  *(_OWORD *)(v20 + 16) = v38[0];
  *(_OWORD *)(v20 + 32) = v21;
  *(void *)(v20 + 48) = v39;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_22091C0B4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  sub_22093ED30();
  uint64_t v6 = a1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a3, a3 + *(int *)(TupleTypeMetadata2 + 48), a1, v6);
}

uint64_t sub_22091C170(uint64_t a1, void *a2, uint64_t a3, long long *a4, uint64_t a5)
{
  long long v9 = a4[1];
  long long v13 = *a4;
  v14[0] = v9;
  *(_OWORD *)((char *)v14 + 9) = *(long long *)((char *)a4 + 25);
  uint64_t v10 = sub_22093ED30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a3, v10);
  sub_220833B58((uint64_t)&v13);
  uint64_t v11 = sub_22087BF9C(a5, (uint64_t)&v13);
  sub_220833BC0((uint64_t)&v13);
  sub_220878DF0(v11, a2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22091C238@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*(void *)(a1 + 16))
  {
    sub_220842FF8(a1 + 32, (uint64_t)v8);
  }
  else
  {
    memset(v8, 0, 24);
    void v8[3] = 1;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F185A8);
  int v5 = swift_dynamicCast();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56))(a3, v5 ^ 1u, 1, a2);
  uint64_t v6 = sub_22093ED30();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a3, 0, 1, v6);
}

uint64_t sub_22091C328@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  type metadata accessor for RowGrouping();
  uint64_t result = sub_2208F628C(v3, v4);
  *a2 = result;
  return result;
}

uint64_t sub_22091C3A0(uint64_t a1, void *a2, uint64_t a3, long long *a4)
{
  return sub_22091C170(a1, a2, a3, a4, *(void *)(v4 + 32));
}

uint64_t sub_22091C3C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22091C0B4(a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 32), a2);
}

uint64_t sub_22091C3EC()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22091C3FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22091C238(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_22091C418()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t objectdestroyTm_1()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

double sub_22091C4A4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1[2];
  uint64_t v5 = v1[5];
  uint64_t v4 = v1[6];
  swift_bridgeObjectRetain();

  *(void *)&double result = sub_220839984(v5, v4, v3, a1).n128_u64[0];
  return result;
}

uint64_t sub_22091C4FC()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22091C510@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22091C3C0(a1, a2);
}

__n128 PackedOptionalsStorage.buffer.getter@<Q0>(__n128 *a1@<X8>)
{
  swift_beginAccess();
  __n128 result = v1[1];
  *a1 = result;
  return result;
}

uint64_t PackedOptionalsStorage.buffer.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = v3;
  return result;
}

uint64_t (*PackedOptionalsStorage.buffer.modify())()
{
  return j__swift_endAccess;
}

uint64_t PackedOptionalsStorage.capacity.getter()
{
  return sub_22091C658((uint64_t (*)(uint64_t))PackedOptionalsBuffer.capacity.getter);
}

uint64_t PackedOptionalsStorage.count.getter()
{
  return sub_22091C658((uint64_t (*)(uint64_t))PackedOptionalsBuffer.count.getter);
}

uint64_t PackedOptionalsStorage.nilCount.getter()
{
  return sub_22091C658((uint64_t (*)(uint64_t))PackedOptionalsBuffer.nilCount.getter);
}

uint64_t sub_22091C658(uint64_t (*a1)(uint64_t))
{
  swift_beginAccess();
  uint64_t v2 = type metadata accessor for PackedOptionalsBuffer();
  return a1(v2);
}

_OWORD *PackedOptionalsStorage.__allocating_init(capacity:)(uint64_t a1)
{
  uint64_t v2 = (_OWORD *)swift_allocObject();
  static PackedOptionalsBuffer.allocate(capacity:)(a1, *(void *)(*(void *)v2 + 80), (uint64_t *)&v4);
  v2[1] = v4;
  return v2;
}

_OWORD *PackedOptionalsStorage.init(capacity:)(uint64_t a1)
{
  static PackedOptionalsBuffer.allocate(capacity:)(a1, *(void *)(*(void *)v1 + 80), (uint64_t *)&v3);
  v1[1] = v3;
  return v1;
}

uint64_t *PackedOptionalsStorage.__allocating_init(copying:capacity:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_22091CBC8(a1, a2);
  swift_release();
  return v2;
}

uint64_t *PackedOptionalsStorage.init(copying:capacity:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_22091CB44(a1, a2);
  swift_release();
  return v2;
}

uint64_t PackedOptionalsStorage.deinit()
{
  swift_beginAccess();
  type metadata accessor for PackedOptionalsBuffer();
  PackedOptionalsBuffer.deallocate()();
  return v0;
}

uint64_t PackedOptionalsStorage.__deallocating_deinit()
{
  PackedOptionalsStorage.deinit();

  return swift_deallocClassInstance();
}

Swift::Void __swiftcall PackedOptionalsStorage.grow(minimumCapacity:growForAppend:)(Swift::Int minimumCapacity, Swift::Bool growForAppend)
{
  long long v3 = v2;
  uint64_t v4 = *v2;
  Swift::Int v5 = PackedOptionalsStorage.growCapacity(minimumCapacity:growForAppend:)(minimumCapacity, growForAppend);
  swift_beginAccess();
  long long v8 = *((_OWORD *)v3 + 1);
  PackedOptionalsBuffer.init(moving:capacity:)(&v8, v5, *(void *)(v4 + 80), &v7);
  swift_beginAccess();
  long long v8 = *((_OWORD *)v3 + 1);
  type metadata accessor for PackedOptionalsBuffer();
  PackedOptionalsBuffer.deallocate()();
  long long v6 = v7;
  swift_beginAccess();
  *((_OWORD *)v3 + 1) = v6;
}

Swift::Int __swiftcall PackedOptionalsStorage.growCapacity(minimumCapacity:growForAppend:)(Swift::Int minimumCapacity, Swift::Bool growForAppend)
{
  Swift::Int v2 = minimumCapacity;
  if (growForAppend)
  {
    uint64_t v3 = PackedOptionalsStorage.capacity.getter();
    minimumCapacity = PackedOptionalsStorage.capacity.getter();
    if (v3 < v2)
    {
      if (minimumCapacity + 0x4000000000000000 < 0)
      {
        __break(1u);
      }
      else if (2 * minimumCapacity <= v2)
      {
        return v2;
      }
      else
      {
        minimumCapacity *= 2;
      }
    }
  }
  return minimumCapacity;
}

uint64_t *PackedOptionalsStorage.createNew(minimumCapacity:growForAppend:)(Swift::Int a1, Swift::Bool a2)
{
  Swift::Int v2 = PackedOptionalsStorage.growCapacity(minimumCapacity:growForAppend:)(a1, a2);
  swift_allocObject();
  uint64_t v3 = swift_retain();
  uint64_t v4 = sub_22091CB44(v3, v2);
  swift_release();
  return v4;
}

Swift::Void __swiftcall PackedOptionalsStorage.resize(by:)(Swift::Int by)
{
}

uint64_t PackedOptionalsStorage.append(_:)(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v2 = type metadata accessor for PackedOptionalsBuffer();
  return PackedOptionalsBuffer.append(_:)(a1, v2);
}

uint64_t *sub_22091CB44(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  swift_beginAccess();
  long long v7 = *(_OWORD *)(a1 + 16);
  PackedOptionalsBuffer.init(copying:capacity:)(&v7, a2, *(void *)(v5 + 80), &v8);
  *((_OWORD *)v2 + 1) = v8;
  return v2;
}

uint64_t *sub_22091CBC8(uint64_t a1, uint64_t a2)
{
  return sub_22091CB44(a1, a2);
}

uint64_t sub_22091CC18()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for PackedOptionalsStorage()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for PackedOptionalsStorage(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for PackedOptionalsStorage);
}

uint64_t dispatch thunk of PackedOptionalsStorage.__allocating_init(capacity:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of PackedOptionalsStorage.__allocating_init(copying:capacity:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

char *sub_22091CCB4@<X0>(size_t *a1@<X0>, uint64_t *a2@<X8>)
{
  size_t v6 = *a1;
  uint64_t v7 = *a1 + 1;
  int v8 = *(unsigned __int8 *)*a1;
  *a1 = v7;
  if (v8)
  {
    sub_220809E4C();
    swift_allocError();
    *(void *)uint64_t v9 = 0xD00000000000002BLL;
    *(void *)(v9 + 8) = 0x80000002209412C0;
    *(unsigned char *)(v9 + 16) = 3;
    return (char *)swift_willThrow();
  }
  if ((v7 & 7) != 0)
  {
    int64_t v12 = sub_22093DA88();
    if ((v12 & 0x8000000000000000) == 0) {
      goto LABEL_5;
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v12 = *(void *)(v6 + 1);
  *a1 = v6 + 9;
  if (v12 < 0) {
    goto LABEL_24;
  }
LABEL_5:
  uint64_t result = sub_22081B4E8(0, v12, 0, MEMORY[0x263F8EE78]);
  uint64_t v2 = (uint64_t)result;
  size_t v3 = *a1;
  if (v12)
  {
    while (1)
    {
      unint64_t v13 = *(void *)v3;
      v3 += 8;
      uint64_t v4 = (uint64_t *)v13;
      if ((v13 & 0x8000000000000000) != 0) {
        break;
      }
      unint64_t v15 = *(void *)(v2 + 16);
      unint64_t v14 = *(void *)(v2 + 24);
      if (v15 >= v14 >> 1)
      {
        uint64_t result = sub_22081B4E8((char *)(v14 > 1), v15 + 1, 1, (char *)v2);
        uint64_t v2 = (uint64_t)result;
      }
      *(void *)(v2 + 16) = v15 + 1;
      *(void *)(v2 + 8 * v15 + 32) = v4;
      if (!--v12)
      {
        *a1 = v3;
        goto LABEL_11;
      }
    }
    __break(1u);
    goto LABEL_35;
  }
LABEL_11:
  if ((v3 & 7) != 0)
  {
    int64_t v16 = sub_22093DA88();
    if ((v16 & 0x8000000000000000) == 0) {
      goto LABEL_13;
    }
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
LABEL_25:
  int64_t v23 = *(void *)v3;
  v3 += 8;
  int64_t v16 = v23;
  *a1 = v3;
  if (v23 < 0) {
    goto LABEL_26;
  }
LABEL_13:
  uint64_t result = sub_22081B4E8(0, v16, 0, MEMORY[0x263F8EE78]);
  int64_t v12 = (int64_t)result;
  uint64_t v4 = (uint64_t *)*a1;
  if (v16)
  {
    while (1)
    {
      uint64_t v18 = *v4++;
      uint64_t v17 = v18;
      if (v18 < 0) {
        break;
      }
      unint64_t v20 = *(void *)(v12 + 16);
      unint64_t v19 = *(void *)(v12 + 24);
      size_t v3 = v20 + 1;
      if (v20 >= v19 >> 1)
      {
        uint64_t result = sub_22081B4E8((char *)(v19 > 1), v20 + 1, 1, (char *)v12);
        int64_t v12 = (int64_t)result;
      }
      *(void *)(v12 + 16) = v3;
      *(void *)(v12 + 8 * v20 + 32) = v17;
      if (!--v16)
      {
        *a1 = (size_t)v4;
        goto LABEL_19;
      }
    }
LABEL_35:
    __break(1u);
    return result;
  }
LABEL_19:
  if ((v4 & 7) != 0)
  {
    uint64_t v21 = sub_22093DA88();
    if ((v21 & 0x8000000000000000) == 0) {
      goto LABEL_21;
    }
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
LABEL_27:
  uint64_t v21 = *v4;
  *a1 = (size_t)(v4 + 1);
  if (v21 < 0) {
    goto LABEL_28;
  }
LABEL_21:
  size_t v3 = 8 * v21;
  if (v21)
  {
    uint64_t v22 = sub_22093E8A0();
    *(void *)(v22 + 16) = v21;
    bzero((void *)(v22 + 32), 8 * v21);
    goto LABEL_30;
  }
LABEL_29:
  uint64_t v22 = MEMORY[0x263F8EE78];
LABEL_30:
  uint64_t v24 = (char *)(v22 + 32);
  uint64_t v25 = (char *)*a1;
  if (v22 + 32 != *a1 || v24 >= &v25[8 * v21]) {
    memmove(v24, v25, v3);
  }
  return (char *)sub_22091CF44(v2, v12, v22, a2);
}

uint64_t sub_22091CF44@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4 = *(void *)(result + 16);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(result + 32);
    uint64_t v6 = 1;
    uint64_t v7 = *(void *)(result + 16);
    while (1)
    {
      uint64_t v8 = *v5++;
      uint64_t v9 = v6 * v8;
      if ((unsigned __int128)(v6 * (__int128)v8) >> 64 != (v6 * v8) >> 63) {
        break;
      }
      uint64_t v6 = v9;
      if (!--v7) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v9 = 1;
LABEL_7:
    if (v9 == *(void *)(a3 + 16))
    {
      *a4 = result;
      a4[1] = a2;
      a4[2] = a3;
      return result;
    }
  }
  uint64_t v10 = result;
  sub_22093EEA0();
  sub_22093E6C0();
  MEMORY[0x223C69F60](v10, MEMORY[0x263F8D6C8]);
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  if (v4)
  {
    uint64_t v11 = (uint64_t *)(v10 + 32);
    uint64_t v12 = 1;
    while (1)
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = v12 * v13;
      if ((unsigned __int128)(v12 * (__int128)v13) >> 64 != (v12 * v13) >> 63) {
        break;
      }
      uint64_t v12 = v14;
      if (!--v4) {
        goto LABEL_16;
      }
    }
    __break(1u);
  }
LABEL_16:
  sub_22093F1A0();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  sub_22093F1A0();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

unint64_t sub_22091D178(unsigned __int8 **a1, uint64_t a2, uint64_t a3, char a4)
{
  ++*a1;
  uint64_t v10 = sub_220844BB4(a1, a2);
  if (v4) {
    return (unint64_t)v5;
  }
  uint64_t v11 = v10;
  unint64_t result = sub_220844BB4(a1, a2);
  unint64_t v13 = result;
  uint64_t v14 = *(void *)(v11 + 16);
  if (v14)
  {
    uint64_t v15 = 0;
    int64_t v16 = (uint64_t *)(v11 + 32);
    while (1)
    {
      uint64_t v17 = *v16++;
      BOOL v18 = __OFADD__(v15, v17);
      v15 += v17;
      if (v18) {
        break;
      }
      if (!--v14) {
        goto LABEL_8;
      }
    }
    __break(1u);
LABEL_85:
    __break(1u);
LABEL_86:
    __break(1u);
LABEL_87:
    __break(1u);
    goto LABEL_88;
  }
  uint64_t v15 = 0;
LABEL_8:
  uint64_t v19 = sub_220844BB4(a1, v15);
  unint64_t result = sub_220844BB4(a1, v15);
  unint64_t v74 = result;
  uint64_t v20 = *(void *)(v13 + 16);
  if (!v20)
  {
    uint64_t v21 = 0;
LABEL_14:
    unint64_t result = sub_22093DCA0(a1, v21, a3, a4);
    uint64_t v79 = (char *)MEMORY[0x263F8EE78];
    uint64_t v78 = (char *)MEMORY[0x263F8EE78];
    if (a2 < 0) {
      goto LABEL_96;
    }
    if (a2)
    {
      uint64_t v68 = 0;
      unint64_t v24 = 0;
      unint64_t v25 = 0;
      unint64_t v63 = result + 32;
      unint64_t v65 = v13 + 32;
      uint64_t v66 = v11 + 32;
      uint64_t v73 = v19 + 32;
      unint64_t v72 = result;
      uint64_t v70 = (void *)MEMORY[0x263F8EE78];
      unint64_t v67 = v13;
      uint64_t v64 = v11;
      uint64_t v75 = v19;
      while (v25 != a2)
      {
        unint64_t v26 = v25;
        uint64_t v27 = v79;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_220833944(0, *((void *)v27 + 2));
        }
        else
        {
          uint64_t v28 = (void *)MEMORY[0x263F8EE78];
          if (*((void *)v27 + 3) >= 2uLL)
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_26AD411A0);
            uint64_t v28 = (void *)swift_allocObject();
            int64_t v29 = _swift_stdlib_malloc_size(v28);
            uint64_t v30 = v29 - 32;
            if (v29 < 32) {
              uint64_t v30 = v29 - 25;
            }
            v28[2] = 0;
            void v28[3] = 2 * (v30 >> 3);
          }
          uint64_t v79 = (char *)v28;
          swift_bridgeObjectRelease();
        }
        uint64_t v31 = v78;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          unint64_t result = sub_220833944(0, *((void *)v31 + 2));
        }
        else
        {
          uint64_t v32 = (void *)MEMORY[0x263F8EE78];
          if (*((void *)v31 + 3) >= 2uLL)
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_26AD411A0);
            uint64_t v32 = (void *)swift_allocObject();
            int64_t v33 = _swift_stdlib_malloc_size(v32);
            uint64_t v34 = v33 - 32;
            if (v33 < 32) {
              uint64_t v34 = v33 - 25;
            }
            uint64_t v32[2] = 0;
            v32[3] = 2 * (v34 >> 3);
          }
          uint64_t v78 = (char *)v32;
          unint64_t result = swift_bridgeObjectRelease();
        }
        if (v26 >= *(void *)(v11 + 16)) {
          goto LABEL_90;
        }
        uint64_t v35 = *(void *)(v66 + 8 * v26);
        if (v35 < 0) {
          goto LABEL_91;
        }
        unint64_t v71 = v26;
        if (v35)
        {
          uint64_t v36 = v79;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v36 = sub_22081B4E8(0, *((void *)v36 + 2) + 1, 1, v36);
          }
          uint64_t v37 = v78;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v37 = sub_22081B4E8(0, *((void *)v37 + 2) + 1, 1, v37);
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v36 = sub_22081B4E8(0, *((void *)v36 + 2) + 1, 1, v36);
          }
          uint64_t v79 = v36;
          unint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            unint64_t result = (unint64_t)sub_22081B4E8(0, *((void *)v37 + 2) + 1, 1, v37);
            uint64_t v37 = (char *)result;
          }
          uint64_t v78 = v37;
          unint64_t v38 = v24;
          while ((v24 & 0x8000000000000000) == 0)
          {
            if (v38 >= *(void *)(v75 + 16)) {
              goto LABEL_86;
            }
            uint64_t v39 = *(void *)(v73 + 8 * v38);
            unint64_t v40 = (unint64_t)v79;
            unint64_t result = swift_isUniquelyReferenced_nonNull_native();
            if ((result & 1) == 0)
            {
              unint64_t result = (unint64_t)sub_22081B4E8(0, *(void *)(v40 + 16) + 1, 1, (char *)v40);
              unint64_t v40 = result;
            }
            unint64_t v42 = *(void *)(v40 + 16);
            unint64_t v41 = *(void *)(v40 + 24);
            if (v42 >= v41 >> 1)
            {
              unint64_t result = (unint64_t)sub_22081B4E8((char *)(v41 > 1), v42 + 1, 1, (char *)v40);
              unint64_t v40 = result;
            }
            *(void *)(v40 + 16) = v42 + 1;
            *(void *)(v40 + 8 * v42 + 32) = v39;
            uint64_t v79 = (char *)v40;
            if (v38 >= *(void *)(v74 + 16)) {
              goto LABEL_87;
            }
            uint64_t v43 = *(void *)(v74 + 32 + 8 * v38);
            unint64_t v44 = (unint64_t)v78;
            unint64_t result = swift_isUniquelyReferenced_nonNull_native();
            if ((result & 1) == 0)
            {
              unint64_t result = (unint64_t)sub_22081B4E8(0, *(void *)(v44 + 16) + 1, 1, (char *)v44);
              unint64_t v44 = result;
            }
            unint64_t v46 = *(void *)(v44 + 16);
            unint64_t v45 = *(void *)(v44 + 24);
            if (v46 >= v45 >> 1)
            {
              unint64_t result = (unint64_t)sub_22081B4E8((char *)(v45 > 1), v46 + 1, 1, (char *)v44);
              unint64_t v44 = result;
            }
            *(void *)(v44 + 16) = v46 + 1;
            *(void *)(v44 + 8 * v46 + 32) = v43;
            uint64_t v78 = (char *)v44;
            ++v38;
            if (!--v35) {
              goto LABEL_60;
            }
          }
          goto LABEL_85;
        }
        unint64_t v38 = v24;
LABEL_60:
        if (v71 >= *(void *)(v67 + 16)) {
          goto LABEL_92;
        }
        uint64_t v47 = *(void *)(v65 + 8 * v71);
        uint64_t v48 = v68 + v47;
        if (__OFADD__(v68, v47)) {
          goto LABEL_93;
        }
        uint64_t v49 = *(void *)(v65 + 8 * v71);
        if (v48 < v68) {
          goto LABEL_94;
        }
        uint64_t v50 = *(void *)(v72 + 16);
        if (v50 < v68 || v50 < v48) {
          goto LABEL_95;
        }
        uint64_t v51 = (uint64_t)v79;
        uint64_t v52 = (uint64_t)v78;
        sub_22093F260();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v53 = swift_dynamicCastClass();
        if (!v53)
        {
          swift_bridgeObjectRelease();
          uint64_t v53 = MEMORY[0x263F8EE78];
        }
        uint64_t v54 = *(void *)(v53 + 16);
        swift_release();
        if (v54 == v49)
        {
          uint64_t v55 = (void *)swift_dynamicCastClass();
          if (!v55)
          {
            swift_bridgeObjectRelease();
            uint64_t v55 = (void *)MEMORY[0x263F8EE78];
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v55 = (void *)MEMORY[0x263F8EE78];
          if (v48 != v68)
          {
            if (v49 >= 1)
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_267F185F0);
              uint64_t v55 = (void *)swift_allocObject();
              int64_t v61 = _swift_stdlib_malloc_size(v55);
              uint64_t v62 = v61 - 32;
              if (v61 < 32) {
                uint64_t v62 = v61 - 25;
              }
              v55[2] = v49;
              void v55[3] = 2 * (v62 >> 3);
            }
            memcpy(v55 + 4, (const void *)(v63 + 8 * v68), 8 * v49);
          }
        }
        swift_bridgeObjectRelease();
        sub_22091CF44(v51, v52, (uint64_t)v55, (uint64_t *)&v76);
        long long v69 = v76;
        uint64_t v56 = v77;
        uint64_t v57 = v70;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v57 = sub_22081C248(0, v70[2] + 1, 1, v70);
        }
        unint64_t v59 = v57[2];
        unint64_t v58 = v57[3];
        if (v59 >= v58 >> 1) {
          uint64_t v57 = sub_22081C248((void *)(v58 > 1), v59 + 1, 1, v57);
        }
        unint64_t v25 = v71 + 1;
        v57[2] = v59 + 1;
        uint64_t v70 = v57;
        int v60 = &v57[3 * v59];
        *((_OWORD *)v60 + 2) = v69;
        v60[6] = v56;
        uint64_t v68 = v48;
        unint64_t v24 = v38;
        unint64_t result = v67;
        uint64_t v11 = v64;
        if (v71 + 1 == a2)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v5 = v57;
          goto LABEL_83;
        }
      }
      goto LABEL_89;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = (void *)MEMORY[0x263F8EE78];
LABEL_83:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (unint64_t)v5;
  }
  uint64_t v21 = 0;
  uint64_t v22 = (uint64_t *)(v13 + 32);
  while (1)
  {
    uint64_t v23 = *v22++;
    BOOL v18 = __OFADD__(v21, v23);
    v21 += v23;
    if (v18) {
      break;
    }
    if (!--v20) {
      goto LABEL_14;
    }
  }
LABEL_88:
  __break(1u);
LABEL_89:
  __break(1u);
LABEL_90:
  __break(1u);
LABEL_91:
  __break(1u);
LABEL_92:
  __break(1u);
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
LABEL_96:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for PackedOptionalsArray()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_22091D968()
{
  return swift_getWitnessTable();
}

uint64_t sub_22091D984()
{
  return swift_getWitnessTable();
}

uint64_t sub_22091D9E8(uint64_t (*a1)(uint64_t))
{
  swift_beginAccess();
  type metadata accessor for PackedOptionalsBuffer();
  PackedOptionalsBuffer.elementsBuffer.getter();
  uint64_t v2 = sub_22093E530();
  return a1(v2);
}

uint64_t sub_22091DA80()
{
  return PackedOptionalsBuffer.nilCount.getter();
}

void sub_22091DADC(Swift::Int a1)
{
}

uint64_t sub_22091DAE8(uint64_t a1)
{
  uint64_t result = PackedOptionalsStorage.count.getter();
  Swift::Int v4 = result + 1;
  if (__OFADD__(result, 1))
  {
    __break(1u);
  }
  else
  {
    type metadata accessor for PackedOptionalsStorage();
    if (sub_22093F210())
    {
      if (PackedOptionalsStorage.capacity.getter() < v4) {
        PackedOptionalsStorage.grow(minimumCapacity:growForAppend:)(v4, 1);
      }
    }
    else
    {
      uint64_t v5 = PackedOptionalsStorage.createNew(minimumCapacity:growForAppend:)(v4, 1);
      swift_release();
      *uint64_t v1 = v5;
    }
    return PackedOptionalsStorage.append(_:)(a1);
  }
  return result;
}

Swift::Int sub_22091DB98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v29 = *(void *)(a2 + 16);
  uint64_t v6 = sub_22093ED30();
  uint64_t v32 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v27 - v7;
  uint64_t v9 = sub_22093ED30();
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)&v27 - v11;
  uint64_t v31 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v30 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v35 = (char *)&v27 - v15;
  uint64_t v16 = PackedOptionalsStorage.count.getter();
  uint64_t AssociatedConformanceWitness = a1;
  Swift::Int result = sub_22093E790();
  BOOL v18 = __OFADD__(v16, result);
  Swift::Int v19 = v16 + result;
  if (v18)
  {
LABEL_15:
    __break(1u);
  }
  else
  {
    type metadata accessor for PackedOptionalsStorage();
    char v20 = sub_22093F210();
    uint64_t v34 = v3;
    uint64_t v28 = v14;
    if (v20)
    {
      if (PackedOptionalsStorage.capacity.getter() < v19) {
        PackedOptionalsStorage.grow(minimumCapacity:growForAppend:)(v19, 1);
      }
    }
    else
    {
      uint64_t v21 = PackedOptionalsStorage.createNew(minimumCapacity:growForAppend:)(v19, 1);
      swift_release();
      *size_t v3 = v21;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v30, AssociatedConformanceWitness, a3);
    sub_22093E780();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    sub_22093ED70();
    uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
    if (v22(v12, 1, v6) != 1)
    {
      uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
      unint64_t v24 = (void (**)(char *, uint64_t))(v32 + 8);
      v23(v8, v12, v6);
      while (1)
      {
        uint64_t v25 = PackedOptionalsStorage.count.getter();
        if (v25 >= PackedOptionalsStorage.capacity.getter())
        {
          uint64_t v26 = PackedOptionalsStorage.count.getter();
          BOOL v18 = __OFADD__(v26, 1);
          Swift::Int result = v26 + 1;
          if (v18)
          {
            __break(1u);
            goto LABEL_15;
          }
          PackedOptionalsStorage.grow(minimumCapacity:growForAppend:)(result, 1);
        }
        PackedOptionalsStorage.append(_:)((uint64_t)v8);
        (*v24)(v8, v6);
        sub_22093ED70();
        if (v22(v12, 1, v6) == 1) {
          return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v35, AssociatedTypeWitness);
        }
        v23(v8, v12, v6);
      }
    }
    return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v35, AssociatedTypeWitness);
  }
  return result;
}

Swift::Int sub_22091DF9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Swift::Int v4 = v3;
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v49 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_22093ED30();
  uint64_t v37 = *(void *)(v46 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v46);
  unint64_t v45 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  unint64_t v40 = (char *)&v36 - v13;
  uint64_t v14 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v43 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v16 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v47 = (char *)&v36 - v17;
  uint64_t v18 = PackedOptionalsStorage.count.getter();
  uint64_t v44 = a1;
  Swift::Int result = sub_22093E790();
  Swift::Int v20 = v18 + result;
  if (__OFADD__(v18, result))
  {
LABEL_15:
    __break(1u);
  }
  else
  {
    type metadata accessor for PackedOptionalsStorage();
    char v21 = sub_22093F210();
    uint64_t v38 = v16;
    uint64_t v39 = v9;
    if (v21)
    {
      if (PackedOptionalsStorage.capacity.getter() < v20) {
        PackedOptionalsStorage.grow(minimumCapacity:growForAppend:)(v20, 1);
      }
    }
    else
    {
      uint64_t v22 = PackedOptionalsStorage.createNew(minimumCapacity:growForAppend:)(v20, 1);
      swift_release();
      *size_t v3 = v22;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v43, v44, a3);
    sub_22093E780();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    unint64_t v24 = v40;
    uint64_t v44 = AssociatedConformanceWitness;
    sub_22093ED70();
    unint64_t v42 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v49 + 48);
    uint64_t v43 = (char *)(v49 + 48);
    int v25 = v42(v24, 1, v7);
    uint64_t v26 = v39;
    if (v25 != 1)
    {
      unint64_t v41 = *(void (**)(char *, char *, uint64_t))(v49 + 32);
      uint64_t v27 = (void (**)(char *, char *, uint64_t))(v49 + 16);
      uint64_t v28 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v49 + 56);
      uint64_t v29 = (void (**)(uint64_t, uint64_t))(v37 + 8);
      v49 += 32;
      uint64_t v30 = (void (**)(char *, uint64_t))(v49 - 24);
      v41(v39, v24, v7);
      while (1)
      {
        uint64_t v32 = v4;
        uint64_t v33 = PackedOptionalsStorage.count.getter();
        if (v33 >= PackedOptionalsStorage.capacity.getter())
        {
          uint64_t v34 = PackedOptionalsStorage.count.getter();
          BOOL v35 = __OFADD__(v34, 1);
          Swift::Int result = v34 + 1;
          if (v35)
          {
            __break(1u);
            goto LABEL_15;
          }
          PackedOptionalsStorage.grow(minimumCapacity:growForAppend:)(result, 1);
          uint64_t v26 = v39;
          unint64_t v24 = v40;
        }
        uint64_t v31 = (uint64_t)v45;
        (*v27)(v45, v26, v7);
        (*v28)(v31, 0, 1, v7);
        PackedOptionalsStorage.append(_:)(v31);
        (*v29)(v31, v46);
        (*v30)(v26, v7);
        sub_22093ED70();
        Swift::Int v4 = v32;
        if (v42(v24, 1, v7) == 1) {
          return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v47, AssociatedTypeWitness);
        }
        v41(v26, v24, v7);
      }
    }
    return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v47, AssociatedTypeWitness);
  }
  return result;
}

void sub_22091E47C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 + 16);
  sub_22091FAB4(a1);
  sub_22091FB3C();
  swift_beginAccess();
  uint64_t v6 = type metadata accessor for PackedOptionalsBuffer();
  unint64_t v7 = PackedOptionalsBuffer.firstElementAddress.getter();
  BOOL v8 = sub_22091F068(a1);
  uint64_t v9 = *(void *)(v5 - 8);
  if (v8)
  {
    uint64_t v10 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a3, v7 + *(void *)(*(void *)(v5 - 8) + 72) * a1, v5);
    uint64_t v10 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a3, v10, 1, v5);
  if (__OFADD__(a1, 1))
  {
    __break(1u);
  }
  else if (a1 + 1 >= a1)
  {
    sub_22093ED30();
    sub_22093F000();
    uint64_t v11 = (void (**)(char *))sub_22093F010();
    Swift::Int WitnessTable = swift_getWitnessTable();
    PackedOptionalsBuffer.replaceSubrange<A>(_:with:elementsOf:)((void (**)(uint64_t))a1, a1 + 1, 0, v13, v6, v11, WitnessTable);
    return;
  }
  __break(1u);
}

uint64_t sub_22091E61C(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v23 = a1;
  uint64_t v24 = a2;
  uint64_t v22 = sub_22093ED30();
  uint64_t v5 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  unint64_t v7 = (char *)&v17 - v6;
  uint64_t v21 = sub_22093ED30();
  uint64_t v18 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v9 = (char *)&v17 - v8;
  type metadata accessor for PackedOptionalsStorage();
  uint64_t v26 = PackedOptionalsStorage.__allocating_init(capacity:)(0);
  Swift::Int v10 = PackedOptionalsStorage.count.getter();
  uint64_t v20 = type metadata accessor for PackedOptionalsArray();
  sub_22092093C(v10, 0);
  uint64_t result = PackedOptionalsStorage.count.getter();
  if ((result & 0x8000000000000000) == 0)
  {
    uint64_t v12 = result;
    if (!result) {
      return (uint64_t)v26;
    }
    Swift::Int v19 = (long long *)(a3 + 16);
    swift_beginAccess();
    uint64_t v13 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v14 = (uint64_t (**)(char *, uint64_t))(v18 + 8);
    uint64_t result = type metadata accessor for PackedOptionalsBuffer();
    uint64_t v15 = result;
    uint64_t v16 = 0;
    while (v12 != v16)
    {
      long long v25 = *v19;
      PackedOptionalsBuffer.subscript.getter(v16, v15, (uint64_t)v7);
      v23(v7);
      if (v3)
      {
        (*v13)(v7, v22);
        return swift_release();
      }
      ++v16;
      (*v13)(v7, v22);
      sub_22091DAE8((uint64_t)v9);
      uint64_t result = (*v14)(v9, v21);
      if (v12 == v16) {
        return (uint64_t)v26;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_22091E8C4(void (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = a1;
  uint64_t v29 = a2;
  uint64_t v7 = sub_22093ED30();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v22 - v8;
  uint64_t v27 = sub_22093ED30();
  uint64_t v10 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v12 = (char *)&v22 - v11;
  type metadata accessor for PackedOptionalsStorage();
  uint64_t v31 = PackedOptionalsStorage.__allocating_init(capacity:)(0);
  Swift::Int v13 = PackedOptionalsStorage.count.getter();
  uint64_t v26 = type metadata accessor for PackedOptionalsArray();
  sub_22092093C(v13, 0);
  uint64_t result = PackedOptionalsStorage.count.getter();
  if ((result & 0x8000000000000000) == 0)
  {
    uint64_t v15 = result;
    if (!result) {
      return (uint64_t)v31;
    }
    uint64_t v16 = v10;
    Swift::Int v17 = 0;
    uint64_t v24 = a4 - 8;
    long long v25 = (long long *)(a3 + 16);
    uint64_t v23 = (uint64_t (**)(char *, uint64_t))(v16 + 8);
    while (v15 != v17)
    {
      uint64_t result = sub_22091F068(v17);
      if ((result & 1) == 0)
      {
        uint64_t v18 = a3;
        Swift::Int v19 = v25;
        swift_beginAccess();
        long long v30 = *v19;
        uint64_t v20 = type metadata accessor for PackedOptionalsBuffer();
        PackedOptionalsBuffer.subscript.getter(v17, v20, (uint64_t)v9);
        uint64_t v21 = *(void *)(a4 - 8);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48))(v9, 1, a4);
        if (result == 1) {
          goto LABEL_14;
        }
        v28(v9);
        if (v4)
        {
          swift_release();
          return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v9, a4);
        }
        (*(void (**)(char *, uint64_t))(v21 + 8))(v9, a4);
        sub_22091DAE8((uint64_t)v12);
        uint64_t result = (*v23)(v12, v27);
        a3 = v18;
      }
      if (v15 == ++v17) {
        return (uint64_t)v31;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_22091EBBC(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v21 = a1;
  uint64_t v22 = a2;
  uint64_t v20 = *(void *)(a3 + 16);
  uint64_t v19 = sub_22093ED30();
  uint64_t v5 = *(void *)(v19 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v19);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v18 - v9;
  uint64_t v27 = v3;
  uint64_t result = PackedOptionalsStorage.count.getter();
  if (result < 0)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  uint64_t v12 = result;
  if (result)
  {
    Swift::Int v13 = 0;
    uint64_t v14 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
    while (v12 != v13)
    {
      uint64_t v15 = *v27;
      swift_beginAccess();
      uint64_t v16 = *(void *)(v15 + 24);
      uint64_t v25 = *(void *)(v15 + 16);
      uint64_t v26 = v16;
      uint64_t v23 = v25;
      uint64_t v24 = v16;
      uint64_t v17 = type metadata accessor for PackedOptionalsBuffer();
      PackedOptionalsBuffer.subscript.getter(v13, v17, (uint64_t)v8);
      v21(v8);
      if (v4) {
        return (*v14)(v8, v19);
      }
      (*v14)(v8, v19);
      uint64_t result = (uint64_t)PackedOptionalsBuffer.subscript.setter((uint64_t)v10, v13++, v17);
      if (v12 == v13) {
        return result;
      }
    }
    __break(1u);
    goto LABEL_11;
  }
  return result;
}

uint64_t sub_22091EDA0(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v30 = a2;
  uint64_t v25 = a1;
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = sub_22093ED30();
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v21 - v11;
  uint64_t result = PackedOptionalsStorage.count.getter();
  if ((result & 0x8000000000000000) == 0)
  {
    uint64_t v14 = result;
    if (!result) {
      return result;
    }
    uint64_t v22 = v3;
    uint64_t v23 = v12;
    Swift::Int v15 = 0;
    uint64_t v24 = v6 - 8;
    uint64_t v21 = result;
    while (v14 != v15)
    {
      uint64_t v16 = *v5;
      uint64_t result = sub_22091F068(v15);
      if ((result & 1) == 0)
      {
        swift_beginAccess();
        uint64_t v17 = *(void *)(v16 + 24);
        uint64_t v28 = *(void *)(v16 + 16);
        uint64_t v29 = v17;
        uint64_t v26 = v28;
        uint64_t v27 = v17;
        uint64_t v18 = type metadata accessor for PackedOptionalsBuffer();
        PackedOptionalsBuffer.subscript.getter(v15, v18, (uint64_t)v10);
        uint64_t v19 = *(void *)(v6 - 8);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v10, 1, v6);
        if (result == 1) {
          goto LABEL_13;
        }
        uint64_t v20 = (uint64_t)v23;
        v25(v10);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v10, v6);
        if (v4) {
          return result;
        }
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v19 + 56))(v20, 0, 1, v6);
        uint64_t result = (uint64_t)PackedOptionalsBuffer.subscript.setter(v20, v15, v18);
        uint64_t v14 = v21;
        uint64_t v5 = v22;
      }
      if (v14 == ++v15) {
        return result;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_13:
  __break(1u);
  return result;
}

void *sub_22091EFEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22091FAB4(a1);
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for PackedOptionalsBuffer();
  return PackedOptionalsBuffer.subscript.getter(a1, v4, a2);
}

BOOL sub_22091F068(Swift::Int a1)
{
  return PackedOptionalsBuffer.isNil(at:)(a1);
}

void sub_22091F0DC(void (**a1)(uint64_t), Swift::Int a2, uint64_t a3, uint64_t a4, void (**a5)(char *), Swift::Int a6)
{
  if (((unint64_t)a1 & 0x8000000000000000) != 0 || PackedOptionalsStorage.count.getter() < a2) {
    goto LABEL_14;
  }
  Swift::Int v12 = a2 - (void)a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_12;
  }
  Swift::Int v21 = a6;
  uint64_t v13 = sub_22093EA80();
  BOOL v14 = __OFSUB__(v13, v12);
  uint64_t v15 = v13 - v12;
  if (v14)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  Swift::Int v16 = v13;
  uint64_t v17 = PackedOptionalsStorage.count.getter();
  Swift::Int v18 = v17 + v15;
  if (__OFADD__(v17, v15))
  {
LABEL_13:
    __break(1u);
LABEL_14:
    sub_22093F090();
    __break(1u);
    return;
  }
  type metadata accessor for PackedOptionalsStorage();
  if (sub_22093F210())
  {
    if (PackedOptionalsStorage.capacity.getter() < v18) {
      PackedOptionalsStorage.grow(minimumCapacity:growForAppend:)(v18, 1);
    }
  }
  else
  {
    uint64_t v19 = PackedOptionalsStorage.createNew(minimumCapacity:growForAppend:)(v18, 1);
    swift_release();
    *uint64_t v6 = v19;
  }
  swift_beginAccess();
  uint64_t v20 = type metadata accessor for PackedOptionalsBuffer();
  PackedOptionalsBuffer.replaceSubrange<A>(_:with:elementsOf:)(a1, a2, v16, a3, v20, a5, v21);
}

uint64_t sub_22091F2D0@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56))(a2, 1, 1, a1);
}

uint64_t sub_22091F32C@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56))(a2, 1, 1);
}

uint64_t sub_22091F384@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  uint64_t result = sub_22091D9E8((uint64_t (*)(uint64_t))sub_2209221B8);
  if (!v2) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56))(a2, 0, 1, a1);
  }
  return result;
}

uint64_t sub_22091F420@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t result = sub_22091F990((void (*)(void *))sub_220922190);
  if (!v2) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56))(a2, 0, 1, a1);
  }
  return result;
}

uint64_t sub_22091F4C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = PackedOptionalsStorage.count.getter();
  if (v8 != PackedOptionalsStorage.count.getter()) {
    return 0;
  }
  uint64_t v9 = sub_22091DA80();
  if (v9 != sub_22091DA80()) {
    return 0;
  }
  swift_beginAccess();
  v24[1] = *(_OWORD *)(a1 + 16);
  type metadata accessor for PackedOptionalsBuffer();
  uint64_t v10 = PackedOptionalsBuffer.nilBitmapBuffer.getter();
  uint64_t v12 = v11;
  swift_beginAccess();
  v24[0] = *(_OWORD *)(a2 + 16);
  uint64_t v13 = PackedOptionalsBuffer.nilBitmapBuffer.getter();
  uint64_t v15 = (void *)((char *)v10 + v12);
  if (!v10) {
    uint64_t v15 = 0;
  }
  Swift::Int v16 = (void *)((char *)v13 + v14);
  if (!v13) {
    Swift::Int v16 = 0;
  }
  while (1)
  {
    if (!v10 || v10 == v15)
    {
      int v18 = 0;
      char v17 = 1;
      if (!v13) {
        break;
      }
    }
    else
    {
      char v17 = 0;
      int v19 = *(unsigned __int8 *)v10;
      uint64_t v10 = (void *)((char *)v10 + 1);
      int v18 = v19;
      if (!v13) {
        break;
      }
    }
    if (v13 == v16) {
      break;
    }
    int v20 = *(unsigned __int8 *)v13;
    uint64_t v13 = (void *)((char *)v13 + 1);
    if (v18 != v20) {
      char v17 = 1;
    }
    if (v17) {
      return 0;
    }
  }
  if ((v17 & 1) == 0) {
    return 0;
  }
  uint64_t result = PackedOptionalsStorage.count.getter();
  if ((result & 0x8000000000000000) == 0)
  {
    uint64_t v22 = result;
    swift_retain();
    uint64_t result = swift_retain();
    if (!v22)
    {
LABEL_28:
      swift_release();
      swift_release();
      return 1;
    }
    Swift::Int v23 = 0;
    while (v22 != v23)
    {
      uint64_t result = sub_22091F068(v23);
      if ((result & 1) == 0)
      {
        uint64_t result = sub_22091F068(v23);
        if ((result & 1) == 0)
        {
          *(void *)&v24[0] = v23;
          uint64_t result = sub_22092022C((uint64_t *)v24, a1, a2, a3, a4);
          if ((result & 1) == 0)
          {
            swift_release();
            swift_release();
            return 0;
          }
        }
      }
      if (v22 == ++v23) {
        goto LABEL_28;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_22091F6D4(uint64_t a1, Swift::Int a2, uint64_t a3)
{
  uint64_t v16 = a1;
  uint64_t v5 = sub_22093ED30();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = (void (**)(char *))sub_22093EF80();
  uint64_t v10 = (uint64_t)*(v9 - 1);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v15 - v11;
  if (a2 < 0 || PackedOptionalsStorage.count.getter() < a2)
  {
    uint64_t result = sub_22093F090();
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v16, v5);
    sub_22093EF90();
    Swift::Int WitnessTable = swift_getWitnessTable();
    sub_22091F0DC((void (**)(uint64_t))a2, a2, (uint64_t)v12, a3, v9, WitnessTable);
    return (*(uint64_t (**)(char *, void (**)(char *)))(v10 + 8))(v12, v9);
  }
  return result;
}

unsigned __int8 *sub_22091F900(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = 0;
  if (result) {
    uint64_t v4 = &result[a2];
  }
  else {
    uint64_t v4 = 0;
  }
  unint64_t v5 = *(void *)(a3 + 16);
  while (1)
  {
    if (v3 == v5)
    {
      int v6 = 0;
      unint64_t v7 = *(void *)(a3 + 16);
      if (!result) {
        goto LABEL_13;
      }
      goto LABEL_10;
    }
    if (v3 >= v5) {
      break;
    }
    int v6 = *(unsigned __int8 *)(a3 + 32 + v3);
    unint64_t v7 = v3 + 1;
    if (!result) {
      goto LABEL_13;
    }
LABEL_10:
    if (result == v4)
    {
LABEL_13:
      int v9 = 0;
      uint64_t v8 = 1;
      if (v3 == v5) {
        return (unsigned __int8 *)v8;
      }
      goto LABEL_14;
    }
    uint64_t v8 = 0;
    int v10 = *result++;
    int v9 = v10;
    if (v3 == v5) {
      return (unsigned __int8 *)v8;
    }
LABEL_14:
    if (v6 != v9) {
      LODWORD(v8) = 1;
    }
    unint64_t v3 = v7;
    if (v8 == 1) {
      return 0;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_22091F990(void (*a1)(void *))
{
  sub_22091FB3C();
  uint64_t v3 = *v1;
  uint64_t v4 = PackedOptionalsStorage.count.getter();
  type metadata accessor for PackedOptionalsStorage();
  uint64_t v9 = v3;
  *uint64_t v1 = (uint64_t)PackedOptionalsStorage.__allocating_init(capacity:)(0);
  swift_beginAccess();
  type metadata accessor for PackedOptionalsBuffer();
  unint64_t v5 = PackedOptionalsBuffer.firstElementAddress.getter();
  v8[0] = sub_22093ED60();
  v8[1] = v6;
  a1(v8);
  sub_22092105C((uint64_t)v8, v5, v4, &v9, v1);
  return swift_release();
}

uint64_t sub_22091FAB4(uint64_t a1)
{
  if (a1 < 0 || (uint64_t result = PackedOptionalsStorage.count.getter(), result <= a1))
  {
    uint64_t result = sub_22093F090();
    __break(1u);
  }
  return result;
}

uint64_t sub_22091FB3C()
{
  type metadata accessor for PackedOptionalsStorage();
  uint64_t result = sub_22093F210();
  if ((result & 1) == 0)
  {
    Swift::Int v2 = PackedOptionalsStorage.capacity.getter();
    uint64_t v3 = PackedOptionalsStorage.createNew(minimumCapacity:growForAppend:)(v2, 0);
    uint64_t result = swift_release();
    *uint64_t v0 = v3;
  }
  return result;
}

uint64_t sub_22091FBA8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_220920DAC(a1, a2, a3, a4, (void (*)(uint64_t, void))sub_220921B20);
}

void (*sub_22091FBC0(void *a1, uint64_t *a2, uint64_t a3))(uint64_t a1, char a2)
{
  unint64_t v7 = malloc(0x38uLL);
  *a1 = v7;
  *unint64_t v7 = v3;
  v7[1] = a3;
  uint64_t v8 = sub_22093ED30();
  v7[2] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v7[3] = v9;
  size_t v10 = *(void *)(v9 + 64);
  void v7[4] = malloc(v10);
  uint64_t v11 = malloc(v10);
  uint64_t v12 = *a2;
  v7[5] = v11;
  v7[6] = v12;
  sub_22091EFEC(v12, (uint64_t)v11);
  return sub_22091FCAC;
}

void sub_22091FCAC(uint64_t a1, char a2)
{
  Swift::Int v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 40);
  uint64_t v4 = *(void *)(*(void *)a1 + 48);
  uint64_t v6 = *(void *)(*(void *)a1 + 24);
  unint64_t v5 = *(void **)(*(void *)a1 + 32);
  uint64_t v7 = *(void *)(*(void *)a1 + 16);
  if (a2)
  {
    (*(void (**)(void, void *, uint64_t))(v6 + 16))(*(void *)(*(void *)a1 + 32), v3, v7);
    sub_220921B20((uint64_t)v5, v4);
    uint64_t v8 = *(void (**)(void *, uint64_t))(v6 + 8);
    v8(v5, v7);
    v8(v3, v7);
  }
  else
  {
    sub_220921B20(*(void *)(*(void *)a1 + 40), v4);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v3, v7);
  }
  free(v3);
  free(v5);

  free(v2);
}

uint64_t sub_22091FDA4()
{
  return swift_release();
}

uint64_t sub_22091FDE4()
{
  return sub_22093E500();
}

uint64_t sub_22091FE64@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  return sub_22091F32C(a1, a2);
}

uint64_t sub_22091FE80@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_220920154();
  *a1 = result;
  return result;
}

void (*sub_22091FEAC(uint64_t **a1, uint64_t *a2))(void *a1)
{
  uint64_t v4 = (uint64_t *)malloc(0x28uLL);
  *a1 = v4;
  v4[4] = (uint64_t)sub_22091FF20(v4, *a2);
  return sub_22085FBC4;
}

void (*sub_22091FF20(uint64_t *a1, uint64_t a2))(void *a1)
{
  uint64_t v4 = sub_22093ED30();
  *a1 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  a1[1] = v5;
  uint64_t v6 = malloc(*(void *)(v5 + 64));
  a1[2] = (uint64_t)v6;
  sub_22091EFEC(a2, (uint64_t)v6);
  return sub_22085FCE0;
}

uint64_t sub_22091FFE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_2208C4CDC(a1, a2, WitnessTable, a3);
}

uint64_t sub_220920050()
{
  swift_getWitnessTable();

  return sub_22093EA40();
}

BOOL sub_2209200BC()
{
  return sub_2209200C4();
}

BOOL sub_2209200C4()
{
  return PackedOptionalsStorage.count.getter() == 0;
}

void *sub_2209200F0@<X0>(void *result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (__OFADD__(*result, a2)) {
    __break(1u);
  }
  else {
    *a3 = *result + a2;
  }
  return result;
}

uint64_t sub_220920108@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result = sub_220921668(*a1, a2, *a3);
  *(void *)a4 = result;
  *(unsigned char *)(a4 + 8) = v6 & 1;
  return result;
}

void sub_220920140(void *a1@<X8>)
{
  *a1 = *v1;
  a1[1] = 0;
}

uint64_t sub_22092014C()
{
  return sub_220920154();
}

uint64_t sub_220920154()
{
  return PackedOptionalsStorage.count.getter();
}

uint64_t sub_220920178()
{
  swift_getWitnessTable();

  return sub_22093EB10();
}

uint64_t sub_2209201CC@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  return sub_22091F2D0(a1, a2);
}

uint64_t sub_2209201E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, Swift::Int *a3@<X8>)
{
  Swift::Int v4 = sub_220921AAC(a1, *(void *)(a2 + 16));
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v4;
  return result;
}

uint64_t sub_22092022C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v45 = a5;
  uint64_t v52 = a2;
  uint64_t v53 = a3;
  uint64_t v7 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v44 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_22093ED30();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v46 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v13 = (char *)&v42 - v12;
  uint64_t v14 = *(void *)(v9 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v11);
  uint64_t v51 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  int v19 = (char *)&v42 - v18;
  MEMORY[0x270FA5388](v17);
  Swift::Int v21 = (char *)&v42 - v20;
  uint64_t v22 = *a1;
  sub_22091EFEC(v22, (uint64_t)&v42 - v20);
  sub_22091EFEC(v22, (uint64_t)v19);
  uint64_t v47 = TupleTypeMetadata2;
  Swift::Int v23 = &v13[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v53 = v14;
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  v24(v13, v21, v9);
  uint64_t v49 = v23;
  uint64_t v50 = v9;
  v24(v23, v19, v9);
  uint64_t v48 = v7;
  uint64_t v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  uint64_t v52 = a4;
  if (v25(v13, 1, a4) != 1)
  {
    unint64_t v42 = v19;
    uint64_t v43 = v21;
    uint64_t v30 = v50;
    v24(v51, v13, v50);
    uint64_t v31 = v49;
    uint64_t v32 = v52;
    int v33 = v25(v49, 1, v52);
    uint64_t v34 = v48;
    BOOL v35 = (void (**)(char *, uint64_t))(v48 + 8);
    if (v33 != 1)
    {
      uint64_t v37 = v44;
      (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v44, v31, v32);
      uint64_t v38 = v51;
      char v29 = sub_22093E520();
      uint64_t v39 = *(void (**)(char *, uint64_t))(v34 + 8);
      v39(v37, v32);
      unint64_t v40 = *(void (**)(char *, uint64_t))(v53 + 8);
      v40(v42, v30);
      v40(v43, v30);
      v39(v38, v32);
      v40(v13, v30);
      return v29 & 1;
    }
    uint64_t v26 = v13;
    uint64_t v36 = *(void (**)(char *, uint64_t))(v53 + 8);
    v36(v42, v30);
    v36(v43, v30);
    (*v35)(v51, v32);
    goto LABEL_6;
  }
  uint64_t v26 = v13;
  uint64_t v27 = *(void (**)(char *, uint64_t))(v53 + 8);
  uint64_t v28 = v50;
  v27(v19, v50);
  v27(v21, v28);
  if (v25(v49, 1, v52) != 1)
  {
LABEL_6:
    (*(void (**)(char *, uint64_t))(v46 + 8))(v26, v47);
    char v29 = 0;
    return v29 & 1;
  }
  v27(v13, v28);
  char v29 = 1;
  return v29 & 1;
}

uint64_t sub_2209206C8(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_22091F4C4(*a1, *a2, *(void *)(a3 + 16), *(void *)(a4 - 8));
}

void *sub_2209206DC()
{
  uint64_t v0 = sub_22093ED30();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v8 - v2;
  swift_retain();
  if (PackedOptionalsStorage.count.getter())
  {
    uint64_t v4 = 0;
    uint64_t v5 = (void (**)(char *, uint64_t))(v1 + 8);
    while (1)
    {
      uint64_t result = sub_22091EFEC(v4, (uint64_t)v3);
      uint64_t v7 = v4 + 1;
      if (__OFADD__(v4, 1)) {
        break;
      }
      sub_22093ED40();
      (*v5)(v3, v0);
      ++v4;
      if (v7 == PackedOptionalsStorage.count.getter()) {
        return (void *)swift_release();
      }
    }
    __break(1u);
  }
  else
  {
    return (void *)swift_release();
  }
  return result;
}

uint64_t sub_22092085C()
{
  return sub_22093F490();
}

uint64_t sub_2209208BC()
{
  return sub_22092085C();
}

void *sub_2209208D0()
{
  return sub_2209206DC();
}

uint64_t sub_2209208E4()
{
  return sub_22093F490();
}

void sub_22092093C(Swift::Int a1, char a2)
{
  type metadata accessor for PackedOptionalsStorage();
  char v5 = sub_22093F210();
  Swift::Bool v6 = a2 & 1;
  if (v5)
  {
    PackedOptionalsStorage.grow(minimumCapacity:growForAppend:)(a1, v6);
  }
  else
  {
    uint64_t v7 = PackedOptionalsStorage.createNew(minimumCapacity:growForAppend:)(a1, v6);
    swift_release();
    *uint64_t v2 = v7;
  }
}

void sub_2209209B4(char a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (a1)
  {
    swift_getWitnessTable();
    sub_22093EA40();
    sub_22093ED30();
    sub_22093F000();
    char v5 = (void (**)(char *))sub_22093F010();
    Swift::Int WitnessTable = swift_getWitnessTable();
    sub_22091F0DC(v9, v10, v7, a2, v5, WitnessTable);
  }
  else
  {
    type metadata accessor for PackedOptionalsStorage();
    uint64_t v8 = PackedOptionalsStorage.__allocating_init(capacity:)(0);
    swift_release();
    *uint64_t v3 = v8;
  }
}

_OWORD *sub_220920AC0()
{
  return PackedOptionalsStorage.__allocating_init(capacity:)(0);
}

_OWORD *sub_220920AF4@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_220920AC0();
  *a1 = result;
  return result;
}

uint64_t sub_220920B20(uint64_t a1, uint64_t a2, void (**a3)(char *), Swift::Int a4, uint64_t a5)
{
  sub_22091F0DC(*(void (***)(uint64_t))a1, *(void *)(a1 + 8), a2, a5, a3, a4);
  uint64_t v7 = (uint64_t (*)(uint64_t, void (**)(char *)))*((void *)*(a3 - 1) + 1);

  return v7(a2, a3);
}

uint64_t sub_220920BA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  char v5 = sub_220922118(a1, a2);
  uint64_t v6 = sub_22093ED30();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  *a3 = v5;
  return result;
}

uint64_t sub_220920C24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, Swift::Int *a4@<X8>)
{
  Swift::Int v7 = sub_2209216BC(a1, *(void *)(a3 + 16), a2);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
  *a4 = v7;
  return result;
}

uint64_t sub_220920CA0(uint64_t a1)
{
  sub_22091DAE8(a1);
  uint64_t v2 = sub_22093ED30();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_220920D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_22091DB98(a1, a4, a2);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8);

  return v6(a1, a2);
}

uint64_t sub_220920D94(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_220920DAC(a1, a2, a3, a4, (void (*)(uint64_t, void))sub_22091F6D4);
}

uint64_t sub_220920DAC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, void))
{
  a5(a1, *a2);
  uint64_t v6 = sub_22093ED30();
  Swift::Int v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(a1, v6);
}

void sub_220920E2C(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
}

uint64_t sub_220920E38()
{
  return sub_22093ECA0();
}

uint64_t sub_220920EB0()
{
  return swift_getWitnessTable();
}

uint64_t sub_220920EF8()
{
  return swift_getWitnessTable();
}

uint64_t sub_220920F14()
{
  return swift_getWitnessTable();
}

uint64_t sub_220920F78()
{
  return swift_getWitnessTable();
}

uint64_t sub_220920FDC()
{
  return swift_getWitnessTable();
}

uint64_t sub_220920FF8()
{
  return swift_getWitnessTable();
}

uint64_t sub_22092105C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t v10 = sub_22093ED50();
  if (v10) {
    BOOL v11 = v10 == a2;
  }
  else {
    BOOL v11 = 0;
  }
  if (v11 && *(void *)(a1 + 8) == a3)
  {
    uint64_t v12 = *a4;
    *a4 = *a5;
    *a5 = v12;
    swift_retain();
    return swift_release();
  }
  else
  {
    uint64_t result = sub_22093F090();
    __break(1u);
  }
  return result;
}

void *sub_220921144(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v22 = a4;
  uint64_t v23 = a3;
  uint64_t v6 = sub_22093ED30();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v18 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22093F4F0();
  swift_retain();
  if (PackedOptionalsStorage.count.getter())
  {
    uint64_t v20 = v6;
    Swift::Int v21 = v10;
    uint64_t v24 = v4;
    uint64_t v13 = 0;
    uint64_t v18 = (void (**)(char *, char *, uint64_t))(v7 + 32);
    int v19 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v14 = v6;
    while (1)
    {
      uint64_t result = sub_22091EFEC(v13, (uint64_t)v12);
      uint64_t v16 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        break;
      }
      (*v18)(v10, v12, v14);
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v25, v26);
      uint64_t v27 = v22;
      swift_getWitnessTable();
      uint64_t v17 = v24;
      sub_22093F1E0();
      uint64_t v24 = v17;
      if (v17)
      {
        (*v19)(v10, v14);
        swift_release();
        return (void *)__swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
      }
      (*v19)(v10, v14);
      ++v13;
      if (v16 == PackedOptionalsStorage.count.getter()) {
        goto LABEL_6;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_6:
    swift_release();
    return (void *)__swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
  }
  return result;
}

void *sub_2209213C0(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_220921144(a1, *v3, *(void *)(a2 + 16), *(void *)(a3 - 8));
}

_OWORD *sub_2209213E8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v15 = a3;
  uint64_t v5 = sub_22093ED30();
  uint64_t v14 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v12 - v6;
  type metadata accessor for PackedOptionalsStorage();
  uint64_t v8 = PackedOptionalsStorage.__allocating_init(capacity:)(0);
  int v19 = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22093F4D0();
  if (v3)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  else
  {
    uint64_t v13 = a1;
    uint64_t v9 = v15;
    __swift_project_boxed_opaque_existential_1(v17, v18);
    if ((sub_22093F1D0() & 1) == 0)
    {
      uint64_t v10 = (void (**)(char *, uint64_t))(v14 + 8);
      do
      {
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v17, v18);
        uint64_t v16 = v9;
        swift_getWitnessTable();
        sub_22093F1C0();
        type metadata accessor for PackedOptionalsArray();
        sub_22091DAE8((uint64_t)v7);
        (*v10)(v7, v5);
        __swift_project_boxed_opaque_existential_1(v17, v18);
      }
      while ((sub_22093F1D0() & 1) == 0);
      uint64_t v8 = v19;
    }
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
  }
  return v8;
}

_OWORD *sub_220921634@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t result = sub_2209213E8(a1, *(void *)(a2 + 16), *(void *)(a3 - 8));
  if (!v4) {
    *a4 = result;
  }
  return result;
}

uint64_t sub_220921668(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3 - result;
  if (__OFSUB__(a3, result))
  {
    __break(1u);
    goto LABEL_12;
  }
  if (a2 >= 1)
  {
    if (v3 < 0 || v3 >= (unint64_t)a2) {
      goto LABEL_9;
    }
    return 0;
  }
  if (v3 <= 0 && v3 > a2) {
    return 0;
  }
LABEL_9:
  BOOL v4 = __OFADD__(result, a2);
  result += a2;
  if (v4) {
LABEL_12:
  }
    __break(1u);
  return result;
}

Swift::Int sub_2209216BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_22093ED30();
  uint64_t v27 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v26 - v6;
  uint64_t v8 = sub_22093ED30();
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v26 - v10;
  uint64_t v31 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v30 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v26 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v15 = (char *)&v26 - v14;
  type metadata accessor for PackedOptionalsStorage();
  uint64_t v16 = sub_22093E790();
  uint64_t v17 = PackedOptionalsStorage.__allocating_init(capacity:)(v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v30, a1, a3);
  swift_retain();
  sub_22093E780();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v30 = v15;
  uint64_t v31 = AssociatedTypeWitness;
  uint64_t v29 = AssociatedConformanceWitness;
  sub_22093ED70();
  uint64_t v19 = v27;
  uint64_t v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  if (v28(v11, 1, v5) == 1)
  {
LABEL_2:
    swift_release();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v30, v31);
    return (Swift::Int)v17;
  }
  Swift::Int v21 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
  uint64_t v22 = (void (**)(char *, uint64_t))(v19 + 8);
  v21(v7, v11, v5);
  while (1)
  {
    swift_retain();
    uint64_t v23 = PackedOptionalsStorage.count.getter();
    swift_release();
    swift_retain();
    uint64_t v24 = PackedOptionalsStorage.capacity.getter();
    swift_release();
    if (v23 < v24) {
      goto LABEL_4;
    }
    swift_retain();
    uint64_t v25 = PackedOptionalsStorage.count.getter();
    swift_release();
    Swift::Int result = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    PackedOptionalsStorage.grow(minimumCapacity:growForAppend:)(result, 1);
LABEL_4:
    PackedOptionalsStorage.append(_:)((uint64_t)v7);
    (*v22)(v7, v5);
    sub_22093ED70();
    if (v28(v11, 1, v5) == 1) {
      goto LABEL_2;
    }
    v21(v7, v11, v5);
  }
  __break(1u);
  return result;
}

Swift::Int sub_220921AAC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a1;
  sub_22093ED30();
  uint64_t v3 = sub_22093E900();
  swift_getWitnessTable();
  return sub_2209216BC((uint64_t)&v5, a2, v3);
}

void *sub_220921B20(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_22093ED30();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v12 - v7;
  sub_22091FAB4(a2);
  sub_22091FB3C();
  uint64_t v9 = *v2;
  swift_beginAccess();
  long long v12 = *(_OWORD *)(v9 + 16);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  uint64_t v10 = type metadata accessor for PackedOptionalsBuffer();
  return PackedOptionalsBuffer.subscript.setter((uint64_t)v8, a2, v10);
}

Swift::Int sub_220921C54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v46 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v37 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_22093ED30();
  uint64_t v34 = *(void *)(v43 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v43);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v36 = (char *)&v33 - v11;
  uint64_t v45 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v35 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v16 = (char *)&v33 - v15;
  type metadata accessor for PackedOptionalsStorage();
  uint64_t v17 = sub_22093E790();
  uint64_t v18 = PackedOptionalsStorage.__allocating_init(capacity:)(v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v13, a1, a3);
  swift_retain();
  sub_22093E780();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v20 = v36;
  uint64_t v44 = v16;
  uint64_t v45 = AssociatedTypeWitness;
  uint64_t v42 = AssociatedConformanceWitness;
  sub_22093ED70();
  uint64_t v21 = v46;
  uint64_t v22 = v20;
  uint64_t v23 = v37;
  unint64_t v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48);
  uint64_t v41 = v46 + 48;
  if (v40(v20, 1, a2) == 1)
  {
LABEL_2:
    swift_release();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v44, v45);
    return (Swift::Int)v18;
  }
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
  uint64_t v25 = v21 + 32;
  uint64_t v38 = (void (**)(char *, char *, uint64_t))(v25 - 16);
  uint64_t v39 = v26;
  uint64_t v27 = (void (**)(char *, void, uint64_t, uint64_t))(v25 + 24);
  uint64_t v28 = (void (**)(char *, uint64_t))(v34 + 8);
  uint64_t v46 = v25;
  uint64_t v29 = (void (**)(char *, uint64_t))(v25 - 24);
  v26(v23, v22, a2);
  while (1)
  {
    swift_retain();
    uint64_t v30 = PackedOptionalsStorage.count.getter();
    swift_release();
    swift_retain();
    uint64_t v31 = PackedOptionalsStorage.capacity.getter();
    swift_release();
    if (v30 < v31) {
      goto LABEL_4;
    }
    swift_retain();
    uint64_t v32 = PackedOptionalsStorage.count.getter();
    swift_release();
    Swift::Int result = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    PackedOptionalsStorage.grow(minimumCapacity:growForAppend:)(result, 1);
LABEL_4:
    (*v38)(v9, v23, a2);
    (*v27)(v9, 0, 1, a2);
    PackedOptionalsStorage.append(_:)((uint64_t)v9);
    (*v28)(v9, v43);
    (*v29)(v23, a2);
    sub_22093ED70();
    if (v40(v22, 1, a2) == 1) {
      goto LABEL_2;
    }
    v39(v23, v22, a2);
  }
  __break(1u);
  return result;
}

_OWORD *sub_220922118(uint64_t a1, uint64_t a2)
{
  type metadata accessor for PackedOptionalsStorage();
  Swift::Int result = PackedOptionalsStorage.__allocating_init(capacity:)(a2);
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v5 = result;
    if (a2)
    {
      swift_retain();
      do
      {
        PackedOptionalsStorage.append(_:)(a1);
        --a2;
      }
      while (a2);
      swift_release();
    }
    return v5;
  }
  return result;
}

uint64_t sub_220922190()
{
  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_2209221B8()
{
  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_2209221E8(uint64_t a1, uint64_t a2)
{
  int64_t v4 = *(void *)(a1 + 16);
  uint64_t v15 = MEMORY[0x263F8EE78];
  sub_220826C78(0, v4, 0);
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = (uint64_t *)(a1 + 40);
    while (1)
    {
      uint64_t v7 = *(v5 - 1);
      uint64_t v6 = *v5;
      swift_bridgeObjectRetain();
      if (sub_22093E660() <= a2)
      {
        uint64_t result = sub_22093E660();
        if (__OFSUB__(a2, result))
        {
          __break(1u);
          return result;
        }
        uint64_t v13 = MEMORY[0x223C69E50](32, 0xE100000000000000, a2 - result);
        uint64_t v14 = v9;
        swift_bridgeObjectRetain();
        sub_22093E6C0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v7 = v13;
        uint64_t v6 = v14;
      }
      unint64_t v11 = *(void *)(v15 + 16);
      unint64_t v10 = *(void *)(v15 + 24);
      if (v11 >= v10 >> 1) {
        sub_220826C78((char *)(v10 > 1), v11 + 1, 1);
      }
      v5 += 2;
      *(void *)(v15 + 16) = v11 + 1;
      uint64_t v12 = v15 + 16 * v11;
      *(void *)(v12 + 32) = v7;
      *(void *)(v12 + 40) = v6;
      if (!--v4) {
        goto LABEL_11;
      }
    }
  }
  swift_bridgeObjectRetain();
LABEL_11:
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_220922354(void (*a1)(void *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v6 = *(void *)(a3 + 16);
  uint64_t v19 = MEMORY[0x263F8EE78];
  sub_220826C78(0, v6, 0);
  uint64_t v7 = v19;
  if (v6)
  {
    uint64_t v8 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(qword_26AD411B8) - 8);
    uint64_t v9 = a3 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v16 = *(void *)(v8 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      a1(v18, v9);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v10 = v18[0];
      uint64_t v11 = v18[1];
      uint64_t v19 = v7;
      unint64_t v13 = *(void *)(v7 + 16);
      unint64_t v12 = *(void *)(v7 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_220826C78((char *)(v12 > 1), v13 + 1, 1);
        uint64_t v7 = v19;
      }
      *(void *)(v7 + 16) = v13 + 1;
      uint64_t v14 = v7 + 16 * v13;
      *(void *)(v14 + 32) = v10;
      *(void *)(v14 + 40) = v11;
      v9 += v16;
      if (!--v6) {
        goto LABEL_9;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_9:
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_2209224E4(void (*a1)(void *__return_ptr, int *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v6 = *(void *)(a3 + 16);
  uint64_t v21 = MEMORY[0x263F8EE78];
  sub_220826C78(0, v6, 0);
  uint64_t v7 = v21;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = (unsigned char *)(a3 + 36);
    while (1)
    {
      BOOL v9 = *v8 != 0;
      int v17 = *((_DWORD *)v8 - 1);
      BOOL v18 = v9;
      char v19 = 0;
      a1(v20, &v17);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v10 = v20[0];
      uint64_t v11 = v20[1];
      uint64_t v21 = v7;
      unint64_t v13 = *(void *)(v7 + 16);
      unint64_t v12 = *(void *)(v7 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_220826C78((char *)(v12 > 1), v13 + 1, 1);
        uint64_t v7 = v21;
      }
      *(void *)(v7 + 16) = v13 + 1;
      uint64_t v14 = v7 + 16 * v13;
      *(void *)(v14 + 32) = v10;
      *(void *)(v14 + 40) = v11;
      v8 += 8;
      if (!--v6) {
        goto LABEL_9;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_9:
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_220922638(void (*a1)(void *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v6 = *(void *)(a3 + 16);
  uint64_t v21 = MEMORY[0x263F8EE78];
  sub_220826C78(0, v6, 0);
  uint64_t v7 = v21;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = (unsigned char *)(a3 + 40);
    while (1)
    {
      char v9 = *v8;
      uint64_t v17 = *((void *)v8 - 1);
      char v18 = v9;
      char v19 = 0;
      a1(v20, &v17);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v10 = v20[0];
      uint64_t v11 = v20[1];
      uint64_t v21 = v7;
      unint64_t v13 = *(void *)(v7 + 16);
      unint64_t v12 = *(void *)(v7 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_220826C78((char *)(v12 > 1), v13 + 1, 1);
        uint64_t v7 = v21;
      }
      *(void *)(v7 + 16) = v13 + 1;
      uint64_t v14 = v7 + 16 * v13;
      *(void *)(v14 + 32) = v10;
      *(void *)(v14 + 40) = v11;
      v8 += 16;
      if (!--v6) {
        goto LABEL_9;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_9:
    swift_bridgeObjectRelease();
  }
  return v7;
}

void *sub_22092277C(void *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  void *(*v25)(uint64_t *__return_ptr, uint64_t *);
  int64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  uint64_t v25 = (void *(*)(uint64_t *__return_ptr, uint64_t *))result;
  uint64_t v27 = a6 >> 1;
  uint64_t v7 = (a6 >> 1) - a5;
  if (__OFSUB__(a6 >> 1, a5)) {
    goto LABEL_31;
  }
  uint64_t v32 = MEMORY[0x263F8EE78];
  uint64_t result = sub_220826C78(0, v7 & ~(v7 >> 63), 0);
  if (v7 < 0)
  {
LABEL_32:
    __break(1u);
    return result;
  }
  uint64_t v8 = v32;
  if (v7)
  {
    uint64_t result = (void *)swift_unknownObjectRetain();
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        break;
      }
      if (!(a5 - v27 + v9)) {
        goto LABEL_28;
      }
      if (a5 + v9 >= v27 || v9 >= v7) {
        goto LABEL_29;
      }
      uint64_t v28 = *(void *)(a4 + 8 * a5 + 8 * v9);
      uint64_t v29 = 0;
      uint64_t result = v25(&v30, &v28);
      if (v6)
      {
LABEL_25:
        swift_release();
        swift_unknownObjectRelease();
        return (void *)v8;
      }
      uint64_t v11 = v7;
      uint64_t v13 = v30;
      uint64_t v12 = v31;
      uint64_t v32 = v8;
      unint64_t v15 = *(void *)(v8 + 16);
      unint64_t v14 = *(void *)(v8 + 24);
      if (v15 >= v14 >> 1)
      {
        uint64_t result = sub_220826C78((char *)(v14 > 1), v15 + 1, 1);
        uint64_t v8 = v32;
      }
      *(void *)(v8 + 16) = v15 + 1;
      uint64_t v16 = v8 + 16 * v15;
      *(void *)(v16 + 32) = v13;
      *(void *)(v16 + 40) = v12;
      ++v9;
      uint64_t v7 = v11;
      if (v10 == v11)
      {
        uint64_t v17 = a5 + v9;
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t result = (void *)swift_unknownObjectRetain();
  uint64_t v17 = a5;
LABEL_15:
  if (v17 != v27)
  {
    uint64_t v18 = v17;
    while (v17 >= a5 && v18 < v27)
    {
      uint64_t v28 = *(void *)(a4 + 8 * v18);
      uint64_t result = v25(&v30, &v28);
      if (v6) {
        goto LABEL_25;
      }
      uint64_t v19 = v30;
      uint64_t v20 = v31;
      uint64_t v32 = v8;
      unint64_t v22 = *(void *)(v8 + 16);
      unint64_t v21 = *(void *)(v8 + 24);
      if (v22 >= v21 >> 1)
      {
        uint64_t result = sub_220826C78((char *)(v21 > 1), v22 + 1, 1);
        uint64_t v8 = v32;
      }
      ++v18;
      *(void *)(v8 + 16) = v22 + 1;
      uint64_t v23 = v8 + 16 * v22;
      *(void *)(v23 + 32) = v19;
      *(void *)(v23 + 40) = v20;
      if (v27 == v18) {
        goto LABEL_16;
      }
    }
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
LABEL_16:
  swift_unknownObjectRelease();
  return (void *)v8;
}

uint64_t OptionalColumnProtocol.description(options:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v54 = a3;
  uint64_t v51 = a1;
  uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 8) + 8) + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v49 - v10;
  uint64_t v12 = sub_22093EA80();
  if (*(void *)(a1 + 16) >= v12) {
    uint64_t v13 = v12;
  }
  else {
    uint64_t v13 = *(void *)(a1 + 16);
  }
  sub_22093EAB0();
  v49[2] = v6;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v53 = v13;
  uint64_t v15 = v51;
  sub_22093EB60();
  uint64_t v16 = *(void *)(AssociatedConformanceWitness + 8);
  void v49[3] = a2;
  v49[4] = v3;
  sub_2209235A4((uint64_t)v11, v15, a2, AssociatedTypeWitness, v54, v16, v57);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, AssociatedTypeWitness);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD411A0);
  uint64_t result = swift_initStackObject();
  long long v52 = xmmword_220944FB0;
  *(_OWORD *)(result + 16) = xmmword_220944FB0;
  uint64_t v19 = v60;
  uint64_t v20 = v60 + 2;
  if (__OFADD__(v60, 2))
  {
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  *(void *)(result + 32) = v20;
  uint64_t v21 = sub_220933A90(qword_26D2210C0, result, 9278946, 0xA300000000000000, 0);
  uint64_t v23 = v22;
  swift_arrayDestroy();
  swift_setDeallocating();
  uint64_t v55 = v21;
  uint64_t v56 = v23;
  unint64_t v24 = v57[0];
  unint64_t v25 = v57[1];
  if (v19 >= sub_22093E660())
  {
    uint64_t result = sub_22093E660();
    if (__OFSUB__(v19, result))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    MEMORY[0x223C69E50](32, 0xE100000000000000, v19 - result);
    v62[0] = v24;
    v62[1] = v25;
    swift_bridgeObjectRetain();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  v62[0] = 32;
  v62[1] = 0xE100000000000000;
  sub_22093E6C0();
  swift_bridgeObjectRetain();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v62[0] = 8623330;
  v62[1] = 0xA300000000000000;
  sub_22093E6C0();
  swift_bridgeObjectRetain();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_22093E6C0();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v26 = *(unsigned __int8 *)(v15 + 24);
  uint64_t v54 = v19;
  if (v26 == 1)
  {
    long long v27 = v58;
    if (v19 >= sub_22093E660())
    {
      uint64_t result = sub_22093E660();
      if (__OFSUB__(v19, result))
      {
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
      MEMORY[0x223C69E50](32, 0xE100000000000000, v19 - result);
      *(_OWORD *)uint64_t v62 = v27;
      swift_bridgeObjectRetain();
      sub_22093E6C0();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    v62[0] = 32;
    v62[1] = 0xE100000000000000;
    sub_22093E6C0();
    swift_bridgeObjectRetain();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v62[0] = 8623330;
    v62[1] = 0xA300000000000000;
    sub_22093E6C0();
    swift_bridgeObjectRetain();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_22093E6C0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = v52;
  *(void *)(inited + 32) = v20;
  sub_220933A90(qword_26D221120, inited, 9278946, 0xA300000000000000, 0);
  swift_arrayDestroy();
  swift_setDeallocating();
  sub_22093E6C0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v53 < 0) {
    goto LABEL_36;
  }
  v49[1] = v25;
  v49[5] = v17;
  uint64_t v50 = v20;
  uint64_t v29 = v54;
  if (!v53) {
    goto LABEL_24;
  }
  uint64_t v30 = v53;
  if ((unint64_t)(v53 - 1) >= *(void *)(v59 + 16)) {
    goto LABEL_37;
  }
  uint64_t v31 = (uint64_t *)(v59 + 40);
  while (1)
  {
    uint64_t v32 = *(v31 - 1);
    uint64_t v33 = *v31;
    swift_bridgeObjectRetain();
    if (v29 >= sub_22093E660()) {
      break;
    }
LABEL_19:
    v31 += 2;
    v62[0] = 32;
    v62[1] = 0xE100000000000000;
    sub_22093E6C0();
    swift_bridgeObjectRetain();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v62[0] = 8557794;
    v62[1] = 0xA300000000000000;
    sub_22093E6C0();
    swift_bridgeObjectRetain();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_22093E6C0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!--v30) {
      goto LABEL_24;
    }
  }
  if (!__OFSUB__(v29, sub_22093E660()))
  {
    MEMORY[0x223C69E50](32, 0xE100000000000000);
    v62[0] = v32;
    v62[1] = v33;
    swift_bridgeObjectRetain();
    uint64_t v29 = v54;
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  __break(1u);
LABEL_24:
  uint64_t v34 = sub_22093EA80();
  uint64_t v35 = v53;
  if (v53 >= v34)
  {
    uint64_t v48 = swift_initStackObject();
    *(_OWORD *)(v48 + 16) = v52;
    swift_bridgeObjectRelease();
    *(_OWORD *)uint64_t v62 = v58;
    sub_220926E8C((uint64_t)v62);
    uint64_t v61 = v59;
    sub_220838B94((uint64_t)&v61);
    *(void *)(v48 + 32) = v50;
    uint64_t v47 = 9213410;
    uint64_t v45 = &unk_26D221240;
    uint64_t v46 = v48;
    goto LABEL_34;
  }
  uint64_t result = sub_22093EA80();
  uint64_t v36 = v50;
  if (__OFSUB__(result, v35)) {
    goto LABEL_39;
  }
  uint64_t v61 = result - v35;
  v62[0] = sub_22093F1A0();
  v62[1] = v37;
  sub_22093E6C0();
  unint64_t v38 = sub_22087EC94(v29, v62[0], v62[1]);
  uint64_t v40 = v39;
  swift_bridgeObjectRelease();
  if (v29 < sub_22093E660()) {
    goto LABEL_29;
  }
  uint64_t result = sub_22093E660();
  if (__OFSUB__(v29, result)) {
    goto LABEL_41;
  }
  MEMORY[0x223C69E50](32, 0xE100000000000000, v29 - result);
  v62[0] = v38;
  v62[1] = v40;
  swift_bridgeObjectRetain();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_29:
  v62[0] = 32;
  v62[1] = 0xE100000000000000;
  sub_22093E6C0();
  swift_bridgeObjectRetain();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v41 = *(_OWORD *)v62;
  uint64_t v42 = swift_initStackObject();
  *(_OWORD *)(v42 + 16) = v52;
  *(void *)(v42 + 32) = v36;
  sub_220933A90(qword_26D221180, v42, 9278946, 0xA300000000000000, 0);
  swift_arrayDestroy();
  swift_setDeallocating();
  uint64_t v43 = v50;
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  if (v43 < sub_22093E660())
  {
LABEL_32:
    v62[0] = 8885474;
    v62[1] = 0xA300000000000000;
    sub_22093E6C0();
    swift_bridgeObjectRetain();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_22093E6C0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v44 = swift_initStackObject();
    *(_OWORD *)(v44 + 16) = v52;
    swift_bridgeObjectRelease();
    *(_OWORD *)uint64_t v62 = v58;
    sub_220926E8C((uint64_t)v62);
    uint64_t v61 = v59;
    sub_220838B94((uint64_t)&v61);
    *(void *)(v44 + 32) = v43;
    uint64_t v45 = &unk_26D2211E0;
    uint64_t v46 = v44;
    uint64_t v47 = 9278946;
LABEL_34:
    sub_220933A90(v45, v46, v47, 0xA300000000000000, 0);
    swift_arrayDestroy();
    swift_setDeallocating();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    return v55;
  }
  uint64_t result = sub_22093E660();
  if (!__OFSUB__(v43, result))
  {
    MEMORY[0x223C69E50](32, 0xE100000000000000, v43 - result);
    *(_OWORD *)uint64_t v62 = v41;
    swift_bridgeObjectRetain();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
LABEL_42:
  __break(1u);
  return result;
}

double sub_220923504@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _OWORD *a6@<X8>)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_2209235A4(a1, a2, a5, a3, WitnessTable, a4, (unint64_t *)v15);
  long long v13 = v15[1];
  *a6 = v15[0];
  a6[1] = v13;
  double result = *(double *)&v16;
  a6[2] = v16;
  return result;
}

uint64_t sub_2209235A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t *a7@<X8>)
{
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)(a5 + 8) + 16))(a3);
  uint64_t v12 = *(void *)(a2 + 8);
  unint64_t v14 = sub_22087EC94(v12, v11, v13);
  unint64_t v16 = v15;
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(a2 + 24) == 1)
  {
    swift_getAssociatedTypeWitness();
    sub_22093F530();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    unint64_t v17 = sub_22087EC94(v12, 60, 0xE100000000000000);
    unint64_t v19 = v18;
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v17 = 0;
    unint64_t v19 = 0xE000000000000000;
  }
  uint64_t v20 = sub_22093E660();
  uint64_t v21 = sub_22093E660();
  if (v21 <= v20) {
    uint64_t v22 = v20;
  }
  else {
    uint64_t v22 = v21;
  }
  uint64_t v23 = sub_220924518(a1, v22, v12, a2, a3, a4, a5, a6);
  uint64_t v24 = sub_22093E660();
  uint64_t v25 = sub_220857548(v23);
  int64_t v26 = sub_22085992C(v25);
  char v28 = v27;
  swift_bridgeObjectRelease();
  if (v28) {
    int64_t v29 = 0;
  }
  else {
    int64_t v29 = v26;
  }
  if (v29 <= v24) {
    uint64_t v30 = v24;
  }
  else {
    uint64_t v30 = v29;
  }
  uint64_t result = sub_22093E660();
  if (result <= v30) {
    uint64_t v32 = v30;
  }
  else {
    uint64_t v32 = result;
  }
  *a7 = v14;
  a7[1] = v16;
  a7[2] = v17;
  a7[3] = v19;
  a7[4] = v23;
  a7[5] = v32;
  return result;
}

uint64_t Column.description.getter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for FormattingOptions();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[1] = *(void *)v1;
  long long v10 = *(_OWORD *)(v1 + 8);
  FormattingOptions.init()((uint64_t)v5);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = OptionalColumnProtocol.description(options:)((uint64_t)v5, a1, WitnessTable);
  sub_2208946CC((uint64_t)v5);
  return v7;
}

uint64_t Column.customMirror.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v20[1] = a2;
  uint64_t v4 = sub_22093F4B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18E50);
  MEMORY[0x270FA5388](v8 - 8);
  long long v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v2[1];
  uint64_t v13 = v2[2];
  uint64_t v21 = *v2;
  uint64_t v11 = v21;
  uint64_t v22 = v12;
  uint64_t v23 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18E58);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_220945120;
  *(void *)(v14 + 32) = 1701667182;
  *(void *)(v14 + 40) = 0xE400000000000000;
  uint64_t v15 = MEMORY[0x263F8D310];
  *(void *)(v14 + 48) = v11;
  *(void *)(v14 + 56) = v12;
  *(void *)(v14 + 72) = v15;
  *(void *)(v14 + 80) = 0x746E756F63;
  *(void *)(v14 + 88) = 0xE500000000000000;
  void v20[2] = v11;
  v20[3] = v12;
  v20[4] = v13;
  swift_bridgeObjectRetain_n();
  swift_retain();
  uint64_t v16 = Column.count.getter(a1);
  uint64_t v17 = MEMORY[0x263F8D6C8];
  *(void *)(v14 + 96) = v16;
  *(void *)(v14 + 120) = v17;
  *(void *)(v14 + 128) = 0x73746E65746E6F63;
  *(void *)(v14 + 136) = 0xE800000000000000;
  *(void *)(v14 + 168) = type metadata accessor for PackedOptionalsArray();
  *(void *)(v14 + 144) = v13;
  uint64_t v18 = sub_22093F4A0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v10, 1, 1, v18);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F8E830], v4);
  swift_retain();
  return sub_22093F4C0();
}

double sub_220923AC8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _OWORD *a6@<X8>)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_2209235A4(a1, a2, a5, a3, WitnessTable, a4, (unint64_t *)v15);
  long long v13 = v15[1];
  *a6 = v15[0];
  a6[1] = v13;
  double result = *(double *)&v16;
  a6[2] = v16;
  return result;
}

uint64_t ColumnSlice.description.getter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for FormattingOptions();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *((void *)v1 + 2);
  long long v10 = *v1;
  uint64_t v11 = v6;
  long long v12 = *(long long *)((char *)v1 + 24);
  FormattingOptions.init()((uint64_t)v5);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v8 = OptionalColumnProtocol.description(options:)((uint64_t)v5, a1, WitnessTable);
  sub_2208946CC((uint64_t)v5);
  return v8;
}

uint64_t ColumnSlice.customMirror.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v23 = sub_22093F4B0();
  uint64_t v2 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v22 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18E50);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v1[1];
  uint64_t v9 = v1[2];
  uint64_t v10 = v1[3];
  uint64_t v11 = v1[4];
  uint64_t v30 = *v1;
  uint64_t v7 = v30;
  uint64_t v31 = v8;
  uint64_t v32 = v9;
  uint64_t v33 = v10;
  uint64_t v34 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18E58);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_220945120;
  *(void *)(v12 + 32) = 1701667182;
  *(void *)(v12 + 40) = 0xE400000000000000;
  uint64_t v25 = v7;
  uint64_t v26 = v8;
  uint64_t v27 = v9;
  uint64_t v28 = v10;
  uint64_t v29 = v11;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v13 = ColumnSlice.name.getter();
  uint64_t v14 = MEMORY[0x263F8D310];
  *(void *)(v12 + 48) = v13;
  *(void *)(v12 + 56) = v15;
  *(void *)(v12 + 72) = v14;
  *(void *)(v12 + 80) = 0x746E756F63;
  *(void *)(v12 + 88) = 0xE500000000000000;
  uint64_t v25 = v7;
  uint64_t v26 = v8;
  uint64_t v27 = v9;
  uint64_t v28 = v10;
  uint64_t v29 = v11;
  uint64_t v16 = ColumnSlice.count.getter();
  uint64_t v17 = MEMORY[0x263F8D6C8];
  *(void *)(v12 + 96) = v16;
  *(void *)(v12 + 120) = v17;
  *(void *)(v12 + 128) = 0x73746E65746E6F63;
  *(void *)(v12 + 136) = 0xE800000000000000;
  type metadata accessor for Column();
  swift_getWitnessTable();
  *(void *)(v12 + 168) = sub_22093F3B0();
  uint64_t v18 = (void *)swift_allocObject();
  *(void *)(v12 + 144) = v18;
  void v18[2] = v7;
  v18[3] = v8;
  v18[4] = v9;
  uint64_t v18[5] = v10;
  v18[6] = v11;
  uint64_t v19 = sub_22093F4A0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v6, 1, 1, v19);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v22, *MEMORY[0x263F8E830], v23);
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_22093F4C0();
}

uint64_t sub_220923F28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F8E830];
  uint64_t v3 = sub_22093F4B0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

double sub_220923F9C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _OWORD *a6@<X8>)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_2209235A4(a1, a2, a5, a3, WitnessTable, a4, (unint64_t *)v15);
  long long v13 = v15[1];
  *a6 = v15[0];
  a6[1] = v13;
  double result = *(double *)&v16;
  a6[2] = v16;
  return result;
}

uint64_t DiscontiguousColumnSlice.description.getter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for FormattingOptions();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v6 = *((unsigned char *)v1 + 40);
  uint64_t v10 = *v1;
  long long v11 = *(_OWORD *)(v1 + 1);
  long long v12 = *(_OWORD *)(v1 + 3);
  char v13 = v6;
  FormattingOptions.init()((uint64_t)v5);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v8 = OptionalColumnProtocol.description(options:)((uint64_t)v5, a1, WitnessTable);
  sub_2208946CC((uint64_t)v5);
  return v8;
}

uint64_t DiscontiguousColumnSlice.customMirror.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v2 = sub_22093F4B0();
  uint64_t v23 = *(void *)(v2 - 8);
  uint64_t v24 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v22 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18E50);
  MEMORY[0x270FA5388](v4 - 8);
  char v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[1];
  uint64_t v10 = v1[2];
  uint64_t v9 = v1[3];
  uint64_t v11 = v1[4];
  char v12 = *((unsigned char *)v1 + 40);
  uint64_t v32 = *v1;
  uint64_t v8 = v32;
  uint64_t v33 = v7;
  uint64_t v34 = v10;
  uint64_t v35 = v9;
  uint64_t v36 = v11;
  char v37 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18E58);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_220945120;
  *(void *)(v13 + 32) = 1701667182;
  *(void *)(v13 + 40) = 0xE400000000000000;
  uint64_t v26 = v8;
  uint64_t v27 = v7;
  uint64_t v28 = v10;
  uint64_t v29 = v9;
  uint64_t v30 = v11;
  char v31 = v12;
  uint64_t v14 = sub_220869F28();
  uint64_t v15 = MEMORY[0x263F8D310];
  *(void *)(v13 + 48) = v14;
  *(void *)(v13 + 56) = v16;
  *(void *)(v13 + 72) = v15;
  *(void *)(v13 + 80) = 0x746E756F63;
  *(void *)(v13 + 88) = 0xE500000000000000;
  uint64_t v26 = v8;
  uint64_t v27 = v7;
  uint64_t v28 = v10;
  uint64_t v29 = v9;
  uint64_t v30 = v11;
  char v31 = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_220831F30(v9, v11, v12);
  uint64_t v17 = DiscontiguousColumnSlice.count.getter();
  uint64_t v18 = MEMORY[0x263F8D6C8];
  *(void *)(v13 + 96) = v17;
  *(void *)(v13 + 120) = v18;
  *(void *)(v13 + 128) = 0x73746E65746E6F63;
  *(void *)(v13 + 136) = 0xE800000000000000;
  type metadata accessor for Column();
  swift_getWitnessTable();
  *(void *)(v13 + 168) = type metadata accessor for _DiscontiguousSlice();
  uint64_t v19 = swift_allocObject();
  *(void *)(v13 + 144) = v19;
  *(void *)(v19 + 16) = v8;
  *(void *)(v19 + 24) = v7;
  *(void *)(v19 + 32) = v10;
  *(void *)(v19 + 40) = v9;
  *(void *)(v19 + 48) = v11;
  *(unsigned char *)(v19 + 56) = v12;
  uint64_t v20 = sub_22093F4A0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v6, 1, 1, v20);
  (*(void (**)(char *, void, uint64_t))(v23 + 104))(v22, *MEMORY[0x263F8E830], v24);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_220831F30(v9, v11, v12);
  return sub_22093F4C0();
}

uint64_t Column.debugDescription.getter(uint64_t a1)
{
  return Column.description.getter(a1);
}

uint64_t ColumnSlice.debugDescription.getter(uint64_t a1)
{
  return ColumnSlice.description.getter(a1);
}

uint64_t DiscontiguousColumnSlice.debugDescription.getter(uint64_t a1)
{
  return DiscontiguousColumnSlice.description.getter(a1);
}

uint64_t sub_220924518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8;
  swift_getAssociatedTypeWitness();
  uint64_t v17 = swift_dynamicCastMetatype();
  if (v17)
  {
    uint64_t v18 = a2;
    MEMORY[0x270FA5388](v17);
    uint64_t v58 = a5;
    uint64_t v59 = a6;
    uint64_t v60 = a7;
    uint64_t v61 = a8;
    uint64_t v62 = v19;
    uint64_t v20 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_26AD40FE0);
    uint64_t v22 = sub_22080E314((void (*)(char *, char *))sub_220927540, (uint64_t)v57, a6, v20, MEMORY[0x263F8E628], a8, MEMORY[0x263F8E658], v21);
    MEMORY[0x270FA5388](v22);
    uint64_t v62 = a4;
    uint64_t v63 = a3;
    uint64_t v23 = sub_220922638((void (*)(void *__return_ptr, uint64_t *))sub_2209275B4, (uint64_t)&v60, v22);
    uint64_t v24 = sub_220857548(v23);
    int64_t v25 = sub_22085992C(v24);
    char v27 = v26;
    swift_bridgeObjectRelease();
    if (v27) {
      int64_t v28 = 0;
    }
    else {
      int64_t v28 = v25;
    }
    if (v28 <= v18) {
      uint64_t v29 = v18;
    }
    else {
      uint64_t v29 = v28;
    }
LABEL_24:
    uint64_t v49 = sub_2209221E8(v23, v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v49;
  }
  uint64_t v30 = swift_dynamicCastMetatype();
  if (v30)
  {
    uint64_t v64 = a2;
    MEMORY[0x270FA5388](v30);
    uint64_t v58 = a5;
    uint64_t v59 = a6;
    uint64_t v60 = a7;
    uint64_t v61 = a8;
    uint64_t v62 = v9;
    char v31 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_26AD40FD0);
    uint64_t v33 = sub_22080E314((void (*)(char *, char *))sub_2209274E4, (uint64_t)v57, a6, v31, MEMORY[0x263F8E628], a8, MEMORY[0x263F8E658], v32);
    MEMORY[0x270FA5388](v33);
    uint64_t v62 = a4;
    uint64_t v63 = a3;
    uint64_t v23 = sub_220922638((void (*)(void *__return_ptr, uint64_t *))sub_22092759C, (uint64_t)&v60, v33);
    uint64_t v34 = sub_220857548(v23);
    int64_t v35 = sub_22085992C(v34);
    char v37 = v36;
    swift_bridgeObjectRelease();
    if (v37) {
      int64_t v38 = 0;
    }
    else {
      int64_t v38 = v35;
    }
    if (v38 <= v64) {
      uint64_t v29 = v64;
    }
    else {
      uint64_t v29 = v38;
    }
    goto LABEL_24;
  }
  uint64_t v64 = a4;
  uint64_t v39 = swift_dynamicCastMetatype();
  if (v39)
  {
    MEMORY[0x270FA5388](v39);
    uint64_t v58 = a5;
    uint64_t v59 = a6;
    uint64_t v60 = a7;
    uint64_t v61 = a8;
    uint64_t v62 = v9;
    uint64_t v40 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_26AD40FD8);
    uint64_t v41 = a2;
    uint64_t v43 = sub_22080E314((void (*)(char *, char *))sub_220927488, (uint64_t)v57, a6, v40, MEMORY[0x263F8E628], a8, MEMORY[0x263F8E658], v42);
    MEMORY[0x270FA5388](v43);
    uint64_t v62 = v64;
    uint64_t v63 = a3;
    uint64_t v23 = sub_2209224E4((void (*)(void *__return_ptr, int *))sub_220927584, (uint64_t)&v60, v43);
    uint64_t v44 = sub_220857548(v23);
    int64_t v45 = sub_22085992C(v44);
    char v47 = v46;
    swift_bridgeObjectRelease();
    if (v47) {
      int64_t v48 = 0;
    }
    else {
      int64_t v48 = v45;
    }
    if (v48 <= v41) {
      uint64_t v29 = v41;
    }
    else {
      uint64_t v29 = v48;
    }
    goto LABEL_24;
  }
  sub_22093E100();
  uint64_t v51 = swift_dynamicCastMetatype();
  if (v51)
  {
    MEMORY[0x270FA5388](v51);
    uint64_t v58 = a5;
    uint64_t v59 = a6;
    uint64_t v60 = a7;
    uint64_t v61 = a8;
    uint64_t v62 = v9;
    long long v52 = (char *)__swift_instantiateConcreteTypeFromMangledName(qword_26AD411B8);
    uint64_t v54 = sub_22080E314((void (*)(char *, char *))sub_22092742C, (uint64_t)v57, a6, v52, MEMORY[0x263F8E628], a8, MEMORY[0x263F8E658], v53);
    MEMORY[0x270FA5388](v54);
    uint64_t v62 = v64;
    uint64_t v63 = v55;
    uint64_t v49 = sub_220922354((void (*)(void *__return_ptr, uint64_t))sub_22092756C, (uint64_t)&v60, v54);
    swift_bridgeObjectRelease();
  }
  else
  {
    MEMORY[0x270FA5388](0);
    uint64_t v58 = a5;
    uint64_t v59 = a6;
    uint64_t v60 = a7;
    uint64_t v61 = a8;
    uint64_t v62 = v9;
    uint64_t v63 = a3;
    return sub_22080E314((void (*)(char *, char *))sub_2209273D0, (uint64_t)v57, a6, MEMORY[0x263F8D310], MEMORY[0x263F8E628], a8, MEMORY[0x263F8E658], v56);
  }
  return v49;
}

uint64_t sub_220924ABC@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  uint64_t v16 = a1;
  uint64_t v17 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = sub_22093ED30();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v16 - v6;
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v16 - v9;
  uint64_t v11 = (void (*)(void *, void))sub_22093EBD0();
  (*(void (**)(char *))(v4 + 16))(v7);
  v11(v18, 0);
  int v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, AssociatedTypeWitness);
  if (v12 == 1)
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    uint64_t v14 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v7, AssociatedTypeWitness);
    uint64_t result = swift_dynamicCast();
    uint64_t v14 = v18[0];
  }
  uint64_t v15 = v17;
  *uint64_t v17 = v14;
  *((unsigned char *)v15 + 8) = v12 == 1;
  return result;
}

uint64_t sub_220924D0C@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  uint64_t v16 = a1;
  uint64_t v17 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = sub_22093ED30();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v16 - v6;
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v16 - v9;
  uint64_t v11 = (void (*)(void *, void))sub_22093EBD0();
  (*(void (**)(char *))(v4 + 16))(v7);
  v11(v18, 0);
  int v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, AssociatedTypeWitness);
  if (v12 == 1)
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    uint64_t v14 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v7, AssociatedTypeWitness);
    uint64_t result = swift_dynamicCast();
    uint64_t v14 = v18[0];
  }
  uint64_t v15 = v17;
  *uint64_t v17 = v14;
  *((unsigned char *)v15 + 8) = v12 == 1;
  return result;
}

uint64_t sub_220924F5C@<X0>(uint64_t a1@<X1>, _DWORD *a2@<X8>)
{
  uint64_t v16 = a1;
  uint64_t v17 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = sub_22093ED30();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v16 - v6;
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v16 - v9;
  uint64_t v11 = (void (*)(_DWORD *, void))sub_22093EBD0();
  (*(void (**)(char *))(v4 + 16))(v7);
  v11(v18, 0);
  int v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, AssociatedTypeWitness);
  if (v12 == 1)
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    int v14 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v7, AssociatedTypeWitness);
    uint64_t result = swift_dynamicCast();
    int v14 = v18[0];
  }
  uint64_t v15 = v17;
  *uint64_t v17 = v14;
  *((unsigned char *)v15 + 4) = v12 == 1;
  return result;
}

uint64_t sub_2209251AC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v16 = a1;
  uint64_t v17 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = sub_22093ED30();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v16 - v6;
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v16 - v9;
  uint64_t v11 = (void (*)(unsigned char *, void))sub_22093EBD0();
  (*(void (**)(char *))(v4 + 16))(v7);
  v11(v18, 0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    uint64_t v12 = sub_22093E100();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v17, 1, 1, v12);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v7, AssociatedTypeWitness);
    uint64_t v14 = sub_22093E100();
    uint64_t v15 = v17;
    swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v15, 0, 1, v14);
  }
}

uint64_t sub_220925454@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unint64_t *a3@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v24 = a1;
  int64_t v25 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = sub_22093ED30();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v22 - v7;
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v6);
  uint64_t v22 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v22 - v12;
  uint64_t v14 = (void (*)(char *, void))sub_22093EBD0();
  (*(void (**)(char *))(v5 + 16))(v8);
  v14(v26, 0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    unint64_t v16 = 0xE300000000000000;
    unint64_t v17 = 7104878;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v13, v8, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v22, v13, AssociatedTypeWitness);
    uint64_t v18 = sub_22093E620();
    unint64_t v17 = sub_22087EC94(v23, v18, v19);
    unint64_t v16 = v20;
    swift_bridgeObjectRelease();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v13, AssociatedTypeWitness);
  }
  uint64_t v21 = v25;
  unint64_t *v25 = v17;
  v21[1] = v16;
  return result;
}

uint64_t FilledColumn.description.getter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormattingOptions();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  FormattingOptions.init()((uint64_t)v4);
  uint64_t v5 = FilledColumn.description(options:)((uint64_t)v4, a1);
  sub_2208946CC((uint64_t)v4);
  return v5;
}

uint64_t FilledColumn.description(options:)(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v6 = sub_22093E3B0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v46 - v9;
  uint64_t v11 = sub_22093EB20();
  if (*(void *)(a1 + 16) >= v11) {
    uint64_t v12 = v11;
  }
  else {
    uint64_t v12 = *(void *)(a1 + 16);
  }
  v46[4] = WitnessTable;
  sub_22093EBA0();
  swift_getWitnessTable();
  uint64_t v49 = v12;
  uint64_t v13 = a1;
  sub_22093EB60();
  uint64_t v14 = swift_getWitnessTable();
  v46[5] = a2;
  sub_2209262E4((uint64_t)v10, a1, a2, v6, v14, v53);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD411A0);
  uint64_t result = swift_initStackObject();
  long long v48 = xmmword_220944FB0;
  *(_OWORD *)(result + 16) = xmmword_220944FB0;
  uint64_t v17 = v56;
  uint64_t v18 = v56 + 2;
  if (__OFADD__(v56, 2))
  {
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  void v46[3] = v2;
  *(void *)(result + 32) = v18;
  uint64_t v19 = sub_220933A90(qword_26D2212A0, result, 9278946, 0xA300000000000000, 0);
  uint64_t v21 = v20;
  swift_arrayDestroy();
  swift_setDeallocating();
  uint64_t v51 = v19;
  uint64_t v52 = v21;
  unint64_t v22 = v53[0];
  unint64_t v23 = v53[1];
  if (v17 >= sub_22093E660())
  {
    uint64_t result = sub_22093E660();
    if (__OFSUB__(v17, result))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    MEMORY[0x223C69E50](32, 0xE100000000000000, v17 - result);
    v58[0] = v22;
    v58[1] = v23;
    swift_bridgeObjectRetain();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  v58[0] = 32;
  v58[1] = 0xE100000000000000;
  sub_22093E6C0();
  swift_bridgeObjectRetain();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v58[0] = 8623330;
  v58[1] = 0xA300000000000000;
  sub_22093E6C0();
  swift_bridgeObjectRetain();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_22093E6C0();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v24 = *(unsigned __int8 *)(v13 + 24);
  uint64_t v50 = v17;
  if (v24 == 1)
  {
    long long v25 = v54;
    if (v17 >= sub_22093E660())
    {
      uint64_t result = sub_22093E660();
      if (__OFSUB__(v17, result))
      {
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
      MEMORY[0x223C69E50](32, 0xE100000000000000, v17 - result);
      *(_OWORD *)uint64_t v58 = v25;
      swift_bridgeObjectRetain();
      sub_22093E6C0();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    v58[0] = 32;
    v58[1] = 0xE100000000000000;
    sub_22093E6C0();
    swift_bridgeObjectRetain();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v58[0] = 8623330;
    v58[1] = 0xA300000000000000;
    sub_22093E6C0();
    swift_bridgeObjectRetain();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_22093E6C0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = v48;
  *(void *)(inited + 32) = v18;
  sub_220933A90(qword_26D221300, inited, 9278946, 0xA300000000000000, 0);
  swift_arrayDestroy();
  swift_setDeallocating();
  sub_22093E6C0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v49 < 0) {
    goto LABEL_36;
  }
  v46[1] = v23;
  _OWORD v46[2] = v13;
  void v46[6] = v15;
  uint64_t v47 = v18;
  uint64_t v27 = v50;
  if (!v49) {
    goto LABEL_24;
  }
  uint64_t v28 = v49;
  if ((unint64_t)(v49 - 1) >= *(void *)(v55 + 16)) {
    goto LABEL_37;
  }
  uint64_t v29 = (uint64_t *)(v55 + 40);
  while (1)
  {
    uint64_t v30 = *(v29 - 1);
    uint64_t v31 = *v29;
    swift_bridgeObjectRetain();
    if (v27 >= sub_22093E660()) {
      break;
    }
LABEL_19:
    v29 += 2;
    v58[0] = 32;
    v58[1] = 0xE100000000000000;
    sub_22093E6C0();
    swift_bridgeObjectRetain();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v58[0] = 8557794;
    v58[1] = 0xA300000000000000;
    sub_22093E6C0();
    swift_bridgeObjectRetain();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_22093E6C0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!--v28) {
      goto LABEL_24;
    }
  }
  if (!__OFSUB__(v27, sub_22093E660()))
  {
    MEMORY[0x223C69E50](32, 0xE100000000000000);
    v58[0] = v30;
    v58[1] = v31;
    swift_bridgeObjectRetain();
    uint64_t v27 = v50;
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  __break(1u);
LABEL_24:
  uint64_t v32 = sub_22093EB20();
  uint64_t v33 = v49;
  if (v49 >= v32)
  {
    uint64_t v45 = swift_initStackObject();
    *(_OWORD *)(v45 + 16) = v48;
    swift_bridgeObjectRelease();
    *(_OWORD *)uint64_t v58 = v54;
    sub_220926E8C((uint64_t)v58);
    uint64_t v57 = v55;
    sub_220838B94((uint64_t)&v57);
    *(void *)(v45 + 32) = v47;
    uint64_t v44 = 9213410;
    uint64_t v42 = &unk_26D221420;
    uint64_t v43 = v45;
    goto LABEL_34;
  }
  uint64_t result = sub_22093EB20();
  if (__OFSUB__(result, v33)) {
    goto LABEL_39;
  }
  uint64_t v57 = result - v33;
  v58[0] = sub_22093F1A0();
  v58[1] = v34;
  sub_22093E6C0();
  unint64_t v35 = sub_22087EC94(v27, v58[0], v58[1]);
  uint64_t v37 = v36;
  swift_bridgeObjectRelease();
  if (v27 < sub_22093E660()) {
    goto LABEL_29;
  }
  uint64_t result = sub_22093E660();
  if (__OFSUB__(v27, result)) {
    goto LABEL_41;
  }
  MEMORY[0x223C69E50](32, 0xE100000000000000, v27 - result);
  v58[0] = v35;
  v58[1] = v37;
  swift_bridgeObjectRetain();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_29:
  v58[0] = 32;
  v58[1] = 0xE100000000000000;
  sub_22093E6C0();
  swift_bridgeObjectRetain();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v38 = *(_OWORD *)v58;
  uint64_t v39 = swift_initStackObject();
  *(_OWORD *)(v39 + 16) = v48;
  uint64_t v40 = v47;
  *(void *)(v39 + 32) = v47;
  sub_220933A90(qword_26D221360, v39, 9278946, 0xA300000000000000, 0);
  swift_arrayDestroy();
  swift_setDeallocating();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  if (v40 < sub_22093E660())
  {
LABEL_32:
    v58[0] = 8885474;
    v58[1] = 0xA300000000000000;
    sub_22093E6C0();
    swift_bridgeObjectRetain();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_22093E6C0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v41 = swift_initStackObject();
    *(_OWORD *)(v41 + 16) = v48;
    swift_bridgeObjectRelease();
    *(_OWORD *)uint64_t v58 = v54;
    sub_220926E8C((uint64_t)v58);
    uint64_t v57 = v55;
    sub_220838B94((uint64_t)&v57);
    *(void *)(v41 + 32) = v47;
    uint64_t v42 = &unk_26D2213C0;
    uint64_t v43 = v41;
    uint64_t v44 = 9278946;
LABEL_34:
    sub_220933A90(v42, v43, v44, 0xA300000000000000, 0);
    swift_arrayDestroy();
    swift_setDeallocating();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    return v51;
  }
  uint64_t result = sub_22093E660();
  if (!__OFSUB__(v40, result))
  {
    MEMORY[0x223C69E50](32, 0xE100000000000000, v40 - result);
    *(_OWORD *)uint64_t v58 = v38;
    swift_bridgeObjectRetain();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_2209262E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t *a6@<X8>)
{
  uint64_t v9 = FilledColumn.name.getter(a3);
  uint64_t v10 = *(void *)(a2 + 8);
  unint64_t v12 = sub_22087EC94(v10, v9, v11);
  unint64_t v14 = v13;
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(a2 + 24) == 1)
  {
    swift_getAssociatedTypeWitness();
    sub_22093F530();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    unint64_t v15 = sub_22087EC94(v10, 60, 0xE100000000000000);
    unint64_t v17 = v16;
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v15 = 0;
    unint64_t v17 = 0xE000000000000000;
  }
  uint64_t v18 = sub_22093E660();
  uint64_t v19 = sub_22093E660();
  if (v19 <= v18) {
    uint64_t v20 = v18;
  }
  else {
    uint64_t v20 = v19;
  }
  uint64_t v21 = sub_2209264AC(a1, v20, v10, a2, a3, a4, a5);
  uint64_t v22 = sub_22093E660();
  uint64_t v23 = sub_220857548(v21);
  int64_t v24 = sub_22085992C(v23);
  char v26 = v25;
  swift_bridgeObjectRelease();
  if (v26) {
    int64_t v27 = 0;
  }
  else {
    int64_t v27 = v24;
  }
  if (v27 <= v22) {
    uint64_t v28 = v22;
  }
  else {
    uint64_t v28 = v27;
  }
  uint64_t result = sub_22093E660();
  if (result <= v28) {
    uint64_t v30 = v28;
  }
  else {
    uint64_t v30 = result;
  }
  *a6 = v12;
  a6[1] = v14;
  a6[2] = v15;
  a6[3] = v17;
  a6[4] = v21;
  a6[5] = v30;
  return result;
}

uint64_t sub_2209264AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v15 = *(void *)(a5 + 16);
  uint64_t v14 = *(void *)(a5 + 24);
  swift_getAssociatedTypeWitness();
  uint64_t v16 = swift_dynamicCastMetatype();
  if (v16)
  {
    uint64_t v17 = a2;
    MEMORY[0x270FA5388](v16);
    uint64_t v57 = v15;
    uint64_t v58 = a6;
    uint64_t v59 = v14;
    uint64_t v60 = a7;
    uint64_t v61 = v18;
    uint64_t v19 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_26AD40FE0);
    uint64_t v21 = sub_22080E314((void (*)(char *, char *))sub_220927364, (uint64_t)v56, a6, v19, MEMORY[0x263F8E628], a7, MEMORY[0x263F8E658], v20);
    MEMORY[0x270FA5388](v21);
    uint64_t v61 = a4;
    uint64_t v62 = a3;
    uint64_t v22 = sub_220922638((void (*)(void *__return_ptr, uint64_t *))sub_2209273B0, (uint64_t)&v59, v21);
    uint64_t v23 = sub_220857548(v22);
    int64_t v24 = sub_22085992C(v23);
    char v26 = v25;
    swift_bridgeObjectRelease();
    if (v26) {
      int64_t v27 = 0;
    }
    else {
      int64_t v27 = v24;
    }
    if (v27 <= v17) {
      uint64_t v28 = v17;
    }
    else {
      uint64_t v28 = v27;
    }
LABEL_24:
    uint64_t v48 = sub_2209221E8(v22, v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v48;
  }
  uint64_t v29 = swift_dynamicCastMetatype();
  if (v29)
  {
    uint64_t v63 = a2;
    MEMORY[0x270FA5388](v29);
    uint64_t v57 = v15;
    uint64_t v58 = a6;
    uint64_t v59 = v14;
    uint64_t v60 = a7;
    uint64_t v61 = v8;
    uint64_t v30 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_26AD40FD0);
    uint64_t v32 = sub_22080E314((void (*)(char *, char *))sub_220927324, (uint64_t)v56, a6, v30, MEMORY[0x263F8E628], a7, MEMORY[0x263F8E658], v31);
    MEMORY[0x270FA5388](v32);
    uint64_t v61 = a4;
    uint64_t v62 = a3;
    uint64_t v22 = sub_220922638((void (*)(void *__return_ptr, uint64_t *))sub_220927344, (uint64_t)&v59, v32);
    uint64_t v33 = sub_220857548(v22);
    int64_t v34 = sub_22085992C(v33);
    char v36 = v35;
    swift_bridgeObjectRelease();
    if (v36) {
      int64_t v37 = 0;
    }
    else {
      int64_t v37 = v34;
    }
    if (v37 <= v63) {
      uint64_t v28 = v63;
    }
    else {
      uint64_t v28 = v37;
    }
    goto LABEL_24;
  }
  uint64_t v63 = a4;
  uint64_t v38 = swift_dynamicCastMetatype();
  if (v38)
  {
    MEMORY[0x270FA5388](v38);
    uint64_t v57 = v15;
    uint64_t v58 = a6;
    uint64_t v59 = v14;
    uint64_t v60 = a7;
    uint64_t v61 = v8;
    uint64_t v39 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_26AD40FD8);
    uint64_t v40 = a2;
    uint64_t v42 = sub_22080E314((void (*)(char *, char *))sub_2209272D8, (uint64_t)v56, a6, v39, MEMORY[0x263F8E628], a7, MEMORY[0x263F8E658], v41);
    MEMORY[0x270FA5388](v42);
    uint64_t v61 = v63;
    uint64_t v62 = a3;
    uint64_t v22 = sub_2209224E4((void (*)(void *__return_ptr, int *))sub_220927304, (uint64_t)&v59, v42);
    uint64_t v43 = sub_220857548(v22);
    int64_t v44 = sub_22085992C(v43);
    char v46 = v45;
    swift_bridgeObjectRelease();
    if (v46) {
      int64_t v47 = 0;
    }
    else {
      int64_t v47 = v44;
    }
    if (v47 <= v40) {
      uint64_t v28 = v40;
    }
    else {
      uint64_t v28 = v47;
    }
    goto LABEL_24;
  }
  sub_22093E100();
  uint64_t v50 = swift_dynamicCastMetatype();
  if (v50)
  {
    MEMORY[0x270FA5388](v50);
    uint64_t v57 = v15;
    uint64_t v58 = a6;
    uint64_t v59 = v14;
    uint64_t v60 = a7;
    uint64_t v61 = v8;
    uint64_t v51 = (char *)__swift_instantiateConcreteTypeFromMangledName(qword_26AD411B8);
    uint64_t v53 = sub_22080E314((void (*)(char *, char *))sub_22092728C, (uint64_t)v56, a6, v51, MEMORY[0x263F8E628], a7, MEMORY[0x263F8E658], v52);
    MEMORY[0x270FA5388](v53);
    uint64_t v61 = v63;
    uint64_t v62 = v54;
    uint64_t v48 = sub_220922354((void (*)(void *__return_ptr, uint64_t))sub_2209272B8, (uint64_t)&v59, v53);
    swift_bridgeObjectRelease();
  }
  else
  {
    MEMORY[0x270FA5388](0);
    uint64_t v57 = v15;
    uint64_t v58 = a6;
    uint64_t v59 = v14;
    uint64_t v60 = a7;
    uint64_t v61 = v8;
    uint64_t v62 = a3;
    return sub_22080E314((void (*)(char *, char *))sub_220927260, (uint64_t)v56, a6, MEMORY[0x263F8D310], MEMORY[0x263F8E628], a7, MEMORY[0x263F8E658], v55);
  }
  return v48;
}

uint64_t sub_220926A4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v6 = (char *)&v9 - v5;
  uint64_t v7 = type metadata accessor for FilledColumn();
  FilledColumn.subscript.getter(a1, v7, (uint64_t)v6);
  uint64_t result = swift_dynamicCast();
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_220926B48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v6 = (char *)&v9 - v5;
  uint64_t v7 = type metadata accessor for FilledColumn();
  FilledColumn.subscript.getter(a1, v7, (uint64_t)v6);
  uint64_t result = swift_dynamicCast();
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

uint64_t sub_220926C3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v6 = (char *)&v10 - v5;
  uint64_t v7 = type metadata accessor for FilledColumn();
  FilledColumn.subscript.getter(a1, v7, (uint64_t)v6);
  uint64_t v8 = sub_22093E100();
  swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a2, 0, 1, v8);
}

uint64_t sub_220926D6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, unint64_t *a3@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = type metadata accessor for FilledColumn();
  FilledColumn.subscript.getter(a1, v9, (uint64_t)v8);
  uint64_t v10 = sub_22093E620();
  unint64_t v12 = sub_22087EC94(a2, v10, v11);
  unint64_t v14 = v13;
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v12;
  a3[1] = v14;
  return result;
}

uint64_t sub_220926E8C(uint64_t a1)
{
  return a1;
}

uint64_t sub_220926EB8()
{
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_220926EF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, unint64_t *a3@<X8>)
{
  if (*(unsigned char *)(a1 + 4))
  {
    unint64_t v5 = 0xE300000000000000;
    uint64_t v6 = 7104878;
  }
  else
  {
    type metadata accessor for FormattingOptions();
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F19290);
    sub_2208B8B00();
    sub_2208502C4(&qword_267F19A78, &qword_267F19290);
    sub_22093E250();
    uint64_t v6 = v11;
    unint64_t v5 = v12;
  }
  unint64_t v7 = sub_22087EC94(a2, v6, v5);
  unint64_t v9 = v8;
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v7;
  a3[1] = v9;
  return result;
}

uint64_t sub_220927004@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, unint64_t *a3@<X8>)
{
  if (*(unsigned char *)(a1 + 8))
  {
    unint64_t v5 = 0xE300000000000000;
    uint64_t v6 = 7104878;
  }
  else
  {
    type metadata accessor for FormattingOptions();
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F19290);
    sub_2208B8B00();
    sub_2208502C4(&qword_267F19A78, &qword_267F19290);
    sub_22093E250();
    uint64_t v6 = v11;
    unint64_t v5 = v12;
  }
  unint64_t v7 = sub_22087EC94(a2, v6, v5);
  unint64_t v9 = v8;
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v7;
  a3[1] = v9;
  return result;
}

uint64_t sub_22092710C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, unint64_t *a3@<X8>)
{
  if (*(unsigned char *)(a1 + 8))
  {
    unint64_t v5 = 0xE300000000000000;
    uint64_t v6 = 7104878;
  }
  else
  {
    type metadata accessor for FormattingOptions();
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F192B8);
    sub_2208B8AAC();
    sub_2208502C4(qword_267F192C0, &qword_267F192B8);
    sub_22093EDA0();
    uint64_t v6 = v11;
    unint64_t v5 = v12;
  }
  unint64_t v7 = sub_22087EC94(a2, v6, v5);
  unint64_t v9 = v8;
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v7;
  a3[1] = v9;
  return result;
}

uint64_t sub_220927214()
{
  swift_bridgeObjectRelease();
  swift_release();
  sub_22080B6B4(*(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned char *)(v0 + 56));

  return MEMORY[0x270FA0238](v0, 57, 7);
}

uint64_t sub_220927260(uint64_t a1, uint64_t a2)
{
  return sub_2209273FC(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void, void, uint64_t))sub_220926D6C);
}

uint64_t sub_22092728C(uint64_t a1, uint64_t a2)
{
  return sub_220927458(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void, uint64_t))sub_220926C3C);
}

uint64_t sub_2209272B8@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  return sub_22090A76C(a1, *(void *)(v2 + 24), a2);
}

uint64_t sub_2209272D8(uint64_t a1, uint64_t a2)
{
  return sub_2209274B4(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void, uint64_t))sub_220926B48);
}

uint64_t sub_220927304@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  return sub_220926EF8(a1, *(void *)(v2 + 24), a2);
}

uint64_t sub_220927324@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_220927384(a1, a2);
}

uint64_t sub_220927344@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  return sub_220927004(a1, *(void *)(v2 + 24), a2);
}

uint64_t sub_220927364@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_220927384(a1, a2);
}

uint64_t sub_220927384@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_220926A4C(a1, a2);
}

uint64_t sub_2209273B0@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  return sub_22092710C(a1, *(void *)(v2 + 24), a2);
}

uint64_t sub_2209273D0(uint64_t a1, uint64_t a2)
{
  return sub_2209273FC(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void, void, uint64_t))sub_220925454);
}

uint64_t sub_2209273FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, void, void, void, void, void, void, uint64_t))
{
  return a3(a1, v3[6], v3[7], v3[2], v3[3], v3[4], v3[5], a2);
}

uint64_t sub_22092742C(uint64_t a1, uint64_t a2)
{
  return sub_220927458(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void, uint64_t))sub_2209251AC);
}

uint64_t sub_220927458(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, void, void, void, void, void, uint64_t))
{
  return a3(a1, v3[6], v3[2], v3[3], v3[4], v3[5], a2);
}

uint64_t sub_220927488(uint64_t a1, uint64_t a2)
{
  return sub_2209274B4(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void, uint64_t))sub_220924F5C);
}

uint64_t sub_2209274B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, void, void, void, void, void, uint64_t))
{
  return a3(a1, v3[6], v3[2], v3[3], v3[4], v3[5], a2);
}

uint64_t sub_2209274E4(uint64_t a1, uint64_t a2)
{
  return sub_220927510(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void, uint64_t))sub_220924D0C);
}

uint64_t sub_220927510(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, void, void, void, void, void, uint64_t))
{
  return a3(a1, v3[6], v3[2], v3[3], v3[4], v3[5], a2);
}

uint64_t sub_220927540(uint64_t a1, uint64_t a2)
{
  return sub_220927510(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void, uint64_t))sub_220924ABC);
}

uint64_t sub_22092756C@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  return sub_2209272B8(a1, a2);
}

uint64_t sub_220927584@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  return sub_220927304(a1, a2);
}

uint64_t sub_22092759C@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  return sub_220927344(a1, a2);
}

uint64_t sub_2209275B4@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  return sub_2209273B0(a1, a2);
}

BOOL static JoinKind.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t JoinKind.hash(into:)()
{
  return sub_22093F440();
}

uint64_t JoinKind.hashValue.getter()
{
  return sub_22093F490();
}

uint64_t DataFrameProtocol.joined<A>(_:on:kind:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _OWORD *a9@<X8>)
{
  char v10 = *a4;
  return DataFrameProtocol.joined<A>(_:on:kind:)(a1, a2, a3, a2, a3, &v10, a5, a6, a9, a7, a8);
}

uint64_t DataFrameProtocol.joined<A>(_:on:kind:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, unsigned char *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _OWORD *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v37 = a1;
  uint64_t v38 = a3;
  uint64_t v39 = a5;
  uint64_t v41 = a9;
  uint64_t v42 = a4;
  uint64_t v40 = a2;
  uint64_t v14 = *(void *)(a8 - 8);
  uint64_t v34 = a11;
  uint64_t v35 = a10;
  uint64_t v15 = MEMORY[0x270FA5388](a1);
  uint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v21 = (char *)&v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = v22;
  uint64_t v44 = v23;
  uint64_t v45 = v24;
  uint64_t v46 = v25;
  uint64_t v26 = type metadata accessor for HashJoin();
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v29 = (char *)&v33 - v28;
  LOBYTE(a6) = *a6;
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, v36, a7);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v37, a8);
  LOBYTE(v43) = (_BYTE)a6;
  uint64_t v30 = v38;
  swift_bridgeObjectRetain();
  uint64_t v31 = v39;
  swift_bridgeObjectRetain();
  sub_2208D1F48((uint64_t)v21, (uint64_t)v17, v40, v30, v42, v31, a7, (uint64_t)v29, a8, v35, v34);
  sub_2208D2638(v26, v41);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v29, v26);
}

uint64_t DataFrameProtocol.joined<A, B>(_:on:kind:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _OWORD *a9@<X8>, uint64_t a10)
{
  uint64_t v10 = a2[1];
  unsigned __int8 v11 = *a3;
  v15[0] = *a2;
  v15[1] = v10;
  v14[0] = v15[0];
  v14[1] = v10;
  unsigned __int8 v13 = v11;
  return DataFrameProtocol.joined<A, B>(_:on:kind:)(a1, v15, v14, &v13, a4, a5, a6, a7, a9, a8, a10);
}

uint64_t DataFrameProtocol.joined<A, B>(_:on:kind:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, unsigned __int8 *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _OWORD *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v42 = a8;
  uint64_t v46 = a9;
  uint64_t v47 = a7;
  uint64_t v40 = a4;
  uint64_t v44 = a1;
  uint64_t v38 = a6;
  uint64_t v14 = *(void *)(a6 - 8);
  uint64_t v45 = a11;
  uint64_t v41 = a10;
  uint64_t v15 = MEMORY[0x270FA5388](a1);
  uint64_t v39 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)&v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = v21;
  uint64_t v52 = v22;
  uint64_t v37 = v21;
  uint64_t v53 = v23;
  uint64_t v54 = v24;
  uint64_t v25 = type metadata accessor for HashJoin();
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v28 = (char *)&v36 - v27;
  uint64_t v30 = *a2;
  uint64_t v29 = a2[1];
  uint64_t v31 = *a3;
  uint64_t v32 = a3[1];
  uint64_t v36 = v31;
  LODWORD(v40) = *v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v43, a5);
  uint64_t v33 = v38;
  uint64_t v34 = (uint64_t)v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v39, v44, v38);
  swift_bridgeObjectRetain();
  uint64_t v51 = v30;
  uint64_t v52 = v29;
  swift_bridgeObjectRetain();
  uint64_t v49 = v36;
  uint64_t v50 = v32;
  char v48 = (char)v40;
  sub_2208D1D48((uint64_t)v20, v34, v37, v33, (uint64_t)v28, v42, v41);
  sub_2208D2638(v25, v46);
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v28, v25);
}

unint64_t sub_220927C2C()
{
  unint64_t result = qword_267F19A80;
  if (!qword_267F19A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F19A80);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for JoinKind(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for JoinKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x220927DDCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JoinKind()
{
  return &type metadata for JoinKind;
}

ValueMetadata *type metadata accessor for FloatColumnProcessor()
{
  return &type metadata for FloatColumnProcessor;
}

ValueMetadata *type metadata accessor for DoubleColumnProcessor()
{
  return &type metadata for DoubleColumnProcessor;
}

uint64_t sub_220927E34@<X0>(void *a1@<X8>)
{
  return sub_220877D68(&qword_267F185D0, a1);
}

uint64_t sub_220927E40@<X0>(void *a1@<X8>)
{
  return sub_220877D68(&qword_26AD413E8, a1);
}

uint64_t AnyColumn.name.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t))(*(void *)(v3 + 8) + 8))(v2);
}

uint64_t AnyColumn.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t v6 = *(void *)(v2 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v2, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 + 8) + 16))(a1, a2, v5);
}

uint64_t AnyColumn.count.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t))(*(void *)(v3 + 8) + 48))(v2);
}

uint64_t AnyColumn.wrappedElementType.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t))(*(void *)(v3 + 8) + 80))(v2);
}

uint64_t AnyColumn.append(_:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(a1, v3, v4);
}

Swift::Void __swiftcall AnyColumn.remove(at:)(Swift::Int at)
{
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v1, v3);
  (*(void (**)(Swift::Int, uint64_t, uint64_t))(v4 + 80))(at, v3, v4);
}

uint64_t AnyColumn.append(contentsOf:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 40))(a1, v3, v4);
}

{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, v3, v4);
}

uint64_t sub_22092810C()
{
  uint64_t v1 = v0;
  uint64_t v3 = v0[3];
  uint64_t v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  if ((*(uint64_t (**)(uint64_t))(*(void *)(v2 + 8) + 80))(v3) == MEMORY[0x263F8D6C8])
  {
    sub_22083B5D0((uint64_t)v1, (uint64_t)v7);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41110);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413F0);
    return swift_dynamicCast();
  }
  else
  {
    sub_22080B5B8((uint64_t)v1, (uint64_t)v7);
    sub_22093EEA0();
    swift_bridgeObjectRelease();
    uint64_t v5 = v8;
    uint64_t v6 = v9;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    (*(void (**)(uint64_t))(*(void *)(v6 + 8) + 80))(v5);
    sub_22093F530();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    sub_22093E6C0();
    sub_22093E6C0();
    uint64_t result = sub_22093F090();
    __break(1u);
  }
  return result;
}

uint64_t sub_2209282BC()
{
  uint64_t v1 = v0;
  uint64_t v3 = v0[3];
  uint64_t v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  if ((*(uint64_t (**)(uint64_t))(*(void *)(v2 + 8) + 80))(v3) == MEMORY[0x263F8E9F8])
  {
    sub_22083B5D0((uint64_t)v1, (uint64_t)v7);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41110);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F19178);
    return swift_dynamicCast();
  }
  else
  {
    sub_22080B5B8((uint64_t)v1, (uint64_t)v7);
    sub_22093EEA0();
    swift_bridgeObjectRelease();
    uint64_t v5 = v8;
    uint64_t v6 = v9;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    (*(void (**)(uint64_t))(*(void *)(v6 + 8) + 80))(v5);
    sub_22093F530();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    sub_22093E6C0();
    sub_22093E6C0();
    uint64_t result = sub_22093F090();
    __break(1u);
  }
  return result;
}

uint64_t sub_220928474()
{
  uint64_t v1 = v0;
  uint64_t v3 = v0[3];
  uint64_t v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  if ((*(uint64_t (**)(uint64_t))(*(void *)(v2 + 8) + 80))(v3) == MEMORY[0x263F8D5C8])
  {
    sub_22083B5D0((uint64_t)v1, (uint64_t)v7);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41110);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F185D0);
    return swift_dynamicCast();
  }
  else
  {
    sub_22080B5B8((uint64_t)v1, (uint64_t)v7);
    sub_22093EEA0();
    swift_bridgeObjectRelease();
    uint64_t v5 = v8;
    uint64_t v6 = v9;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    (*(void (**)(uint64_t))(*(void *)(v6 + 8) + 80))(v5);
    sub_22093F530();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    sub_22093E6C0();
    sub_22093E6C0();
    uint64_t result = sub_22093F090();
    __break(1u);
  }
  return result;
}

uint64_t sub_220928628()
{
  uint64_t v1 = v0;
  uint64_t v3 = v0[3];
  uint64_t v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  if ((*(uint64_t (**)(uint64_t))(*(void *)(v2 + 8) + 80))(v3) == MEMORY[0x263F8D538])
  {
    sub_22083B5D0((uint64_t)v1, (uint64_t)v7);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41110);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413E8);
    return swift_dynamicCast();
  }
  else
  {
    sub_22080B5B8((uint64_t)v1, (uint64_t)v7);
    sub_22093EEA0();
    swift_bridgeObjectRelease();
    uint64_t v5 = v8;
    uint64_t v6 = v9;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    (*(void (**)(uint64_t))(*(void *)(v6 + 8) + 80))(v5);
    sub_22093F530();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    sub_22093E6C0();
    sub_22093E6C0();
    uint64_t result = sub_22093F090();
    __break(1u);
  }
  return result;
}

uint64_t sub_2209287DC()
{
  uint64_t v1 = v0;
  uint64_t v3 = v0[3];
  uint64_t v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  if ((*(uint64_t (**)(uint64_t))(*(void *)(v2 + 8) + 80))(v3) == MEMORY[0x263F8D4F8])
  {
    sub_22083B5D0((uint64_t)v1, (uint64_t)v7);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41110);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41140);
    return swift_dynamicCast();
  }
  else
  {
    sub_22080B5B8((uint64_t)v1, (uint64_t)v7);
    sub_22093EEA0();
    swift_bridgeObjectRelease();
    uint64_t v5 = v8;
    uint64_t v6 = v9;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    (*(void (**)(uint64_t))(*(void *)(v6 + 8) + 80))(v5);
    sub_22093F530();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    sub_22093E6C0();
    sub_22093E6C0();
    uint64_t result = sub_22093F090();
    __break(1u);
  }
  return result;
}

uint64_t sub_22092898C()
{
  uint64_t v1 = v0;
  uint64_t v3 = v0[3];
  uint64_t v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  if ((*(uint64_t (**)(uint64_t))(*(void *)(v2 + 8) + 80))(v3) == MEMORY[0x263F8D310])
  {
    sub_22083B5D0((uint64_t)v1, (uint64_t)v7);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41110);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413E0);
    return swift_dynamicCast();
  }
  else
  {
    sub_22080B5B8((uint64_t)v1, (uint64_t)v7);
    sub_22093EEA0();
    swift_bridgeObjectRelease();
    uint64_t v5 = v8;
    uint64_t v6 = v9;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    (*(void (**)(uint64_t))(*(void *)(v6 + 8) + 80))(v5);
    sub_22093F530();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    sub_22093E6C0();
    sub_22093E6C0();
    uint64_t result = sub_22093F090();
    __break(1u);
  }
  return result;
}

uint64_t sub_220928B40()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_22093E100();
  uint64_t v4 = v0[3];
  uint64_t v3 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v4);
  if (v2 == (*(uint64_t (**)(uint64_t))(*(void *)(v3 + 8) + 80))(v4))
  {
    sub_22083B5D0((uint64_t)v1, (uint64_t)v8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41110);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41138);
    return swift_dynamicCast();
  }
  else
  {
    sub_22080B5B8((uint64_t)v1, (uint64_t)v8);
    sub_22093EEA0();
    swift_bridgeObjectRelease();
    uint64_t v6 = v9;
    uint64_t v7 = v10;
    __swift_project_boxed_opaque_existential_1(v8, v9);
    (*(void (**)(uint64_t))(*(void *)(v7 + 8) + 80))(v6);
    sub_22093F530();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    sub_22093E6C0();
    sub_22093E6C0();
    uint64_t result = sub_22093F090();
    __break(1u);
  }
  return result;
}

uint64_t sub_220928CFC()
{
  uint64_t v1 = v0;
  uint64_t v3 = v0[3];
  uint64_t v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  if ((*(uint64_t (**)(uint64_t))(*(void *)(v2 + 8) + 80))(v3) == MEMORY[0x263F06F78])
  {
    sub_22083B5D0((uint64_t)v1, (uint64_t)v7);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41110);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F185C8);
    return swift_dynamicCast();
  }
  else
  {
    sub_22080B5B8((uint64_t)v1, (uint64_t)v7);
    sub_22093EEA0();
    swift_bridgeObjectRelease();
    uint64_t v5 = v8;
    uint64_t v6 = v9;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    (*(void (**)(uint64_t))(*(void *)(v6 + 8) + 80))(v5);
    sub_22093F530();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    sub_22093E6C0();
    sub_22093E6C0();
    uint64_t result = sub_22093F090();
    __break(1u);
  }
  return result;
}

uint64_t AnyColumn.assumingType<A>(_:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v5 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v2, v5);
  if ((*(uint64_t (**)(uint64_t))(*(void *)(v4 + 8) + 80))(v5) == a1)
  {
    sub_22083B5D0((uint64_t)v2, (uint64_t)v9);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41110);
    type metadata accessor for Column();
    return swift_dynamicCast();
  }
  else
  {
    sub_22080B5B8((uint64_t)v2, (uint64_t)v9);
    sub_22093EEA0();
    swift_bridgeObjectRelease();
    uint64_t v8 = v10;
    uint64_t v7 = v11;
    __swift_project_boxed_opaque_existential_1(v9, v10);
    (*(void (**)(uint64_t))(*(void *)(v7 + 8) + 80))(v8);
    sub_22093F530();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    sub_22093F530();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    uint64_t result = sub_22093F090();
    __break(1u);
  }
  return result;
}

Swift::Bool __swiftcall AnyColumn.isNil(at:)(Swift::Int at)
{
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  return (*(uint64_t (**)(Swift::Int, uint64_t))(*(void *)(v4 + 8) + 96))(at, v3) & 1;
}

uint64_t sub_2209290D4(uint64_t result, uint64_t a2)
{
  if (result != a2)
  {
    v18[12] = v3;
    v18[13] = v4;
    uint64_t v5 = v2;
    uint64_t v7 = result;
    uint64_t v8 = v2[3];
    uint64_t v9 = v2[4];
    __swift_project_boxed_opaque_existential_1(v2, v8);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(*(void *)(v9 + 8) + 128))(v18, v7, v8);
    uint64_t v10 = v2[3];
    uint64_t v11 = v2[4];
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(*(void *)(v11 + 8) + 128))(v17, a2, v10);
    sub_220834D3C((uint64_t)v17, (uint64_t)v16, qword_26AD40FF8);
    uint64_t v12 = v2[3];
    uint64_t v13 = v2[4];
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v5, v5[3]);
    (*(void (**)(uint64_t, unsigned char *, uint64_t))(*(void *)(v13 + 8) + 136))(v7, v16, v12);
    sub_2208352E4((uint64_t)v16, qword_26AD40FF8);
    uint64_t v14 = v2[3];
    uint64_t v15 = v2[4];
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v5, v5[3]);
    (*(void (**)(uint64_t, void *, uint64_t))(*(void *)(v15 + 8) + 136))(a2, v18, v14);
    return sub_2208352E4((uint64_t)v18, qword_26AD40FF8);
  }
  return result;
}

unint64_t sub_220929238(unint64_t result, unint64_t a2)
{
  if (result != a2)
  {
    unint64_t v3 = result;
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v4 = v2;
      uint64_t v5 = *v2;
      if (*(void *)(*v2 + 16) > result)
      {
        uint64_t v7 = v2[3];
        sub_22080B5B8(v5 + 40 * result + 32, (uint64_t)v21);
        uint64_t v8 = v22;
        uint64_t v9 = v23;
        __swift_project_boxed_opaque_existential_1(v21, v22);
        (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(*(void *)(v9 + 8) + 128))(v24, v7, v8);
        sub_22080B0D8((uint64_t)v21);
        uint64_t result = sub_220834D3C((uint64_t)v24, (uint64_t)v25, qword_26AD40FF8);
        if ((a2 & 0x8000000000000000) == 0)
        {
          if (*(void *)(*v4 + 16) > a2)
          {
            uint64_t v10 = v4[3];
            sub_22080B5B8(*v4 + 40 * a2 + 32, (uint64_t)v21);
            uint64_t v11 = v22;
            uint64_t v12 = v23;
            __swift_project_boxed_opaque_existential_1(v21, v22);
            (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(*(void *)(v12 + 8) + 128))(v24, v10, v11);
            sub_22080B0D8((uint64_t)v21);
            sub_220834D3C((uint64_t)v24, (uint64_t)v20, qword_26AD40FF8);
            uint64_t v13 = v4[3];
            uint64_t result = sub_220835280((uint64_t)v20, (uint64_t)v19, qword_26AD40FF8);
            if (*(void *)(*v4 + 16) > v3)
            {
              sub_22080B5B8(*v4 + 40 * v3 + 32, (uint64_t)v21);
              uint64_t v14 = v22;
              uint64_t v15 = v23;
              __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v22);
              (*(void (**)(uint64_t, unsigned char *, uint64_t))(*(void *)(v15 + 8) + 136))(v13, v19, v14);
              sub_2208352E4((uint64_t)v19, qword_26AD40FF8);
              sub_22080A474(v3, (uint64_t)v21);
              sub_22080B0D8((uint64_t)v21);
              sub_2208352E4((uint64_t)v20, qword_26AD40FF8);
              uint64_t v16 = v4[3];
              uint64_t result = sub_220835280((uint64_t)v25, (uint64_t)v24, qword_26AD40FF8);
              if (*(void *)(*v4 + 16) > a2)
              {
                sub_22080B5B8(*v4 + 40 * a2 + 32, (uint64_t)v21);
                uint64_t v17 = v22;
                uint64_t v18 = v23;
                __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v22);
                (*(void (**)(uint64_t, void *, uint64_t))(*(void *)(v18 + 8) + 136))(v16, v24, v17);
                sub_2208352E4((uint64_t)v24, qword_26AD40FF8);
                sub_22080A474(a2, (uint64_t)v21);
                sub_22080B0D8((uint64_t)v21);
                return sub_2208352E4((uint64_t)v25, qword_26AD40FF8);
              }
LABEL_15:
              __break(1u);
              return result;
            }
LABEL_14:
            __break(1u);
            goto LABEL_15;
          }
LABEL_13:
          __break(1u);
          goto LABEL_14;
        }
LABEL_12:
        __break(1u);
        goto LABEL_13;
      }
    }
    __break(1u);
    goto LABEL_12;
  }
  return result;
}

__n128 sub_2209294FC@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *a1;
  *(void *)(a2 + 24) = type metadata accessor for Column();
  *(void *)(a2 + 32) = &off_26D2223C0;
  *(void *)a2 = v4;
  __n128 result = *(__n128 *)(a1 + 1);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

unint64_t sub_22092954C(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = *(void *)(a4 + 16);
  if (v4 < result || v4 < a3)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = a3 - result;
  if (a2 >= 1)
  {
    if (v6 < 0 || v6 >= (unint64_t)a2) {
      goto LABEL_13;
    }
    return 0;
  }
  if (v6 <= 0 && v6 > a2) {
    return 0;
  }
LABEL_13:
  BOOL v7 = __OFADD__(result, a2);
  result += a2;
  if (v7) {
    goto LABEL_16;
  }
  if (result > v4) {
LABEL_17:
  }
    __break(1u);
  return result;
}

uint64_t sub_2209295BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3;
  uint64_t result = sub_220929798(a1, a3);
  if (a2 >= 1)
  {
    if (result < 0 || result >= (unint64_t)a2) {
      goto LABEL_8;
    }
    return 0;
  }
  if (result <= 0 && result > a2) {
    return 0;
  }
LABEL_8:
  BOOL v9 = __OFADD__(a1, a2);
  uint64_t v8 = a1 + a2;
  if (v9)
  {
    __break(1u);
  }
  else
  {
    uint64_t v11 = v3[3];
    uint64_t v10 = v3[4];
    __swift_project_boxed_opaque_existential_1(v4, v4[3]);
    uint64_t v12 = (*(uint64_t (**)(uint64_t))(*(void *)(v10 + 8) + 32))(v11);
    uint64_t v14 = v4[3];
    uint64_t v13 = v4[4];
    __swift_project_boxed_opaque_existential_1(v4, v14);
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v13 + 8) + 40))(v14);
    if (v8 >= v12 && result >= v8) {
      return v8;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_2209296B8(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6)
  {
    if (a6 == 1) {
      unint64_t v6 = *(void *)(a4 + 16);
    }
    else {
      unint64_t v6 = 0;
    }
  }
  else
  {
    unint64_t v6 = 1;
  }
  if (v6 < result)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (a6)
  {
    if (a6 == 1) {
      unint64_t v7 = *(void *)(a4 + 16);
    }
    else {
      unint64_t v7 = 0;
    }
  }
  else
  {
    unint64_t v7 = 1;
  }
  if (v7 < a3) {
    goto LABEL_29;
  }
  uint64_t v8 = a3 - result;
  if (a2 >= 1)
  {
    if (v8 < 0 || v8 >= a2) {
      goto LABEL_20;
    }
    return 0;
  }
  if (v8 <= 0 && v8 > a2) {
    return 0;
  }
LABEL_20:
  BOOL v9 = __OFADD__(result, a2);
  result += a2;
  if (v9)
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    return result;
  }
  if (a6)
  {
    if (a6 == 1) {
      unint64_t v10 = *(void *)(a4 + 16);
    }
    else {
      unint64_t v10 = 0;
    }
  }
  else
  {
    unint64_t v10 = 1;
  }
  if (result > v10) {
    goto LABEL_31;
  }
  return result;
}

uint64_t sub_220929798(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v7 = v2[3];
  uint64_t v6 = v2[4];
  __swift_project_boxed_opaque_existential_1(v3, v7);
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)(v6 + 8) + 32))(v7);
  uint64_t v10 = v3[3];
  uint64_t v9 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v10);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v9 + 8) + 40))(v10);
  if (v8 > a1 || result < a1)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v14 = v3[3];
  uint64_t v13 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v14);
  uint64_t v15 = (*(uint64_t (**)(uint64_t))(*(void *)(v13 + 8) + 32))(v14);
  uint64_t v17 = v3[3];
  uint64_t v16 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v17);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v16 + 8) + 40))(v17);
  if (v15 > a2 || result < a2) {
    goto LABEL_12;
  }
  uint64_t result = a2 - a1;
  if (__OFSUB__(a2, a1)) {
LABEL_13:
  }
    __break(1u);
  return result;
}

uint64_t sub_2209298C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v30 = MEMORY[0x263F8EE88];
  long long v28 = 0uLL;
  char v29 = 2;
  uint64_t v8 = (void **)(a3 + 16);
  swift_beginAccess();
  uint64_t v9 = *(void *)(a3 + 16);
  if (v9)
  {
    uint64_t v10 = *(void *)(v9 + 8);
    if ((v10 & 0x8000000000000000) == 0)
    {
      if (!v10)
      {
LABEL_23:
        swift_bridgeObjectRelease();
        char v24 = v29;
        *(void *)a4 = a1;
        *(void *)(a4 + 8) = a2;
        *(void *)(a4 + 16) = a3;
        *(_OWORD *)(a4 + 24) = v28;
        *(unsigned char *)(a4 + 40) = v24;
        swift_bridgeObjectRetain();
        return swift_retain();
      }
      uint64_t v26 = a1;
      swift_bridgeObjectRetain();
      swift_retain();
      int64_t v11 = 0;
      while (v11 != v10)
      {
        uint64_t v12 = *v8;
        if (!*v8) {
          goto LABEL_26;
        }
        unint64_t v13 = v11;
        uint64_t v14 = v12[1];
        if (v11 != v14)
        {
          if (v11 >= v14) {
            goto LABEL_28;
          }
          ++v11;
          uint64_t v15 = sub_2208915A0(v13, v12, v14);
          int v17 = v16 & 1;
          uint64_t v18 = v30;
          if (*(void *)(v30 + 16))
          {
            sub_22093F430();
            sub_22093F450();
            if (!v17) {
              sub_22093F440();
            }
            uint64_t v19 = sub_22093F490();
            uint64_t v20 = -1 << *(unsigned char *)(v18 + 32);
            unint64_t v21 = v19 & ~v20;
            if ((*(void *)(v18 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21))
            {
              uint64_t v22 = ~v20;
              do
              {
                uint64_t v23 = *(void *)(v18 + 48) + 16 * v21;
                if (*(unsigned char *)(v23 + 8))
                {
                  if (v17) {
                    goto LABEL_6;
                  }
                }
                else if (!v17 && *(void *)v23 == v15)
                {
                  goto LABEL_6;
                }
                unint64_t v21 = (v21 + 1) & v22;
              }
              while (((*(void *)(v18 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) != 0);
            }
          }
          sub_220869870(v13, v13 + 1);
          sub_2208291CC((uint64_t)v27, v15, v17);
LABEL_6:
          if (v11 != v10) {
            continue;
          }
        }
        swift_release();
        swift_bridgeObjectRelease();
        a1 = v26;
        goto LABEL_23;
      }
      __break(1u);
    }
    __break(1u);
LABEL_26:
    __break(1u);
  }
  __break(1u);
LABEL_28:
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

uint64_t sub_220929B40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v28 = MEMORY[0x263F8EE88];
  long long v26 = 0uLL;
  char v27 = 2;
  uint64_t v8 = (void **)(a3 + 16);
  swift_beginAccess();
  uint64_t v9 = *(void *)(a3 + 16);
  if (v9)
  {
    uint64_t v10 = *(void *)(v9 + 8);
    if ((v10 & 0x8000000000000000) == 0)
    {
      if (!v10)
      {
LABEL_23:
        swift_bridgeObjectRelease();
        char v22 = v27;
        *(void *)a4 = a1;
        *(void *)(a4 + 8) = a2;
        *(void *)(a4 + 16) = a3;
        *(_OWORD *)(a4 + 24) = v26;
        *(unsigned char *)(a4 + 40) = v22;
        swift_bridgeObjectRetain();
        return swift_retain();
      }
      uint64_t v24 = a1;
      swift_bridgeObjectRetain();
      swift_retain();
      int64_t v11 = 0;
      while (v11 != v10)
      {
        uint64_t v12 = *v8;
        if (!*v8) {
          goto LABEL_26;
        }
        unint64_t v13 = v11;
        uint64_t v14 = v12[1];
        if (v11 != v14)
        {
          if (v11 >= v14) {
            goto LABEL_28;
          }
          ++v11;
          int v15 = sub_220891AE0(v13, v12, v14);
          uint64_t v16 = v28;
          if (*(void *)(v28 + 16))
          {
            sub_22093F430();
            sub_22093F450();
            if ((v15 & 0x10000) == 0) {
              sub_22093F460();
            }
            uint64_t v17 = sub_22093F490();
            uint64_t v18 = -1 << *(unsigned char *)(v16 + 32);
            unint64_t v19 = v17 & ~v18;
            if ((*(void *)(v16 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19))
            {
              uint64_t v20 = ~v18;
              do
              {
                uint64_t v21 = *(void *)(v16 + 48) + 4 * v19;
                if (*(unsigned char *)(v21 + 2))
                {
                  if ((v15 & 0x10000) != 0) {
                    goto LABEL_6;
                  }
                }
                else if ((v15 & 0x10000) == 0 && *(short float *)v21 == *(short float *)&v15)
                {
                  goto LABEL_6;
                }
                unint64_t v19 = (v19 + 1) & v20;
              }
              while (((*(void *)(v16 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) != 0);
            }
          }
          sub_220869870(v13, v13 + 1);
          sub_220829068((uint64_t)v25, v15 & 0x1FFFF);
LABEL_6:
          if (v11 != v10) {
            continue;
          }
        }
        swift_release();
        swift_bridgeObjectRelease();
        a1 = v24;
        goto LABEL_23;
      }
      __break(1u);
    }
    __break(1u);
LABEL_26:
    __break(1u);
  }
  __break(1u);
LABEL_28:
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

uint64_t sub_220929DBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v28 = MEMORY[0x263F8EE88];
  long long v26 = 0uLL;
  char v27 = 2;
  uint64_t v8 = (void **)(a3 + 16);
  swift_beginAccess();
  uint64_t v9 = *(void *)(a3 + 16);
  if (v9)
  {
    uint64_t v10 = *(void *)(v9 + 8);
    if ((v10 & 0x8000000000000000) == 0)
    {
      if (!v10)
      {
LABEL_23:
        swift_bridgeObjectRelease();
        char v22 = v27;
        *(void *)a4 = a1;
        *(void *)(a4 + 8) = a2;
        *(void *)(a4 + 16) = a3;
        *(_OWORD *)(a4 + 24) = v26;
        *(unsigned char *)(a4 + 40) = v22;
        swift_bridgeObjectRetain();
        return swift_retain();
      }
      uint64_t v24 = a1;
      swift_bridgeObjectRetain();
      swift_retain();
      int64_t v11 = 0;
      while (v11 != v10)
      {
        uint64_t v12 = *v8;
        if (!*v8) {
          goto LABEL_26;
        }
        unint64_t v13 = v11;
        uint64_t v14 = v12[1];
        if (v11 != v14)
        {
          if (v11 >= v14) {
            goto LABEL_28;
          }
          ++v11;
          unint64_t v15 = sub_220891A38(v13, v12, v14);
          uint64_t v16 = v28;
          if (*(void *)(v28 + 16))
          {
            sub_22093F430();
            sub_22093F450();
            if ((v15 & 0x100000000) == 0) {
              sub_22093F470();
            }
            uint64_t v17 = sub_22093F490();
            uint64_t v18 = -1 << *(unsigned char *)(v16 + 32);
            unint64_t v19 = v17 & ~v18;
            if ((*(void *)(v16 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19))
            {
              uint64_t v20 = ~v18;
              do
              {
                uint64_t v21 = *(void *)(v16 + 48) + 8 * v19;
                if (*(unsigned char *)(v21 + 4))
                {
                  if ((v15 & 0x100000000) != 0) {
                    goto LABEL_6;
                  }
                }
                else if ((v15 & 0x100000000) == 0 && *(float *)v21 == *(float *)&v15)
                {
                  goto LABEL_6;
                }
                unint64_t v19 = (v19 + 1) & v20;
              }
              while (((*(void *)(v16 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) != 0);
            }
          }
          sub_220869870(v13, v13 + 1);
          sub_220828EF4((uint64_t)v25, v15 | ((HIDWORD(v15) & 1) << 32));
LABEL_6:
          if (v11 != v10) {
            continue;
          }
        }
        swift_release();
        swift_bridgeObjectRelease();
        a1 = v24;
        goto LABEL_23;
      }
      __break(1u);
    }
    __break(1u);
LABEL_26:
    __break(1u);
  }
  __break(1u);
LABEL_28:
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

uint64_t sub_22092A048@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v30 = MEMORY[0x263F8EE88];
  long long v28 = 0uLL;
  char v29 = 2;
  uint64_t v8 = (void **)(a3 + 16);
  swift_beginAccess();
  uint64_t v9 = *(void *)(a3 + 16);
  if (v9)
  {
    uint64_t v10 = *(void *)(v9 + 8);
    if ((v10 & 0x8000000000000000) == 0)
    {
      if (!v10)
      {
LABEL_23:
        swift_bridgeObjectRelease();
        char v24 = v29;
        *(void *)a4 = a1;
        *(void *)(a4 + 8) = a2;
        *(void *)(a4 + 16) = a3;
        *(_OWORD *)(a4 + 24) = v28;
        *(unsigned char *)(a4 + 40) = v24;
        swift_bridgeObjectRetain();
        return swift_retain();
      }
      uint64_t v26 = a1;
      swift_bridgeObjectRetain();
      swift_retain();
      int64_t v11 = 0;
      while (v11 != v10)
      {
        uint64_t v12 = *v8;
        if (!*v8) {
          goto LABEL_26;
        }
        unint64_t v13 = v11;
        uint64_t v14 = v12[1];
        if (v11 != v14)
        {
          if (v11 >= v14) {
            goto LABEL_28;
          }
          ++v11;
          double v15 = COERCE_DOUBLE(sub_2208915A0(v13, v12, v14));
          int v17 = v16 & 1;
          uint64_t v18 = v30;
          if (*(void *)(v30 + 16))
          {
            sub_22093F430();
            sub_22093F450();
            if (!v17) {
              sub_22093F480();
            }
            uint64_t v19 = sub_22093F490();
            uint64_t v20 = -1 << *(unsigned char *)(v18 + 32);
            unint64_t v21 = v19 & ~v20;
            if ((*(void *)(v18 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21))
            {
              uint64_t v22 = ~v20;
              do
              {
                uint64_t v23 = *(void *)(v18 + 48) + 16 * v21;
                if (*(unsigned char *)(v23 + 8))
                {
                  if (v17) {
                    goto LABEL_6;
                  }
                }
                else if (!v17 && *(double *)v23 == v15)
                {
                  goto LABEL_6;
                }
                unint64_t v21 = (v21 + 1) & v22;
              }
              while (((*(void *)(v18 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) != 0);
            }
          }
          sub_220869870(v13, v13 + 1);
          sub_220828D7C((uint64_t)v27, *(uint64_t *)&v15, v17);
LABEL_6:
          if (v11 != v10) {
            continue;
          }
        }
        swift_release();
        swift_bridgeObjectRelease();
        a1 = v26;
        goto LABEL_23;
      }
      __break(1u);
    }
    __break(1u);
LABEL_26:
    __break(1u);
  }
  __break(1u);
LABEL_28:
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

uint64_t sub_22092A2CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v28 = MEMORY[0x263F8EE88];
  long long v26 = 0uLL;
  char v27 = 2;
  uint64_t v8 = (void **)(a3 + 16);
  swift_beginAccess();
  uint64_t v9 = *(void *)(a3 + 16);
  if (v9)
  {
    uint64_t v10 = *(void *)(v9 + 8);
    if ((v10 & 0x8000000000000000) == 0)
    {
      if (!v10)
      {
LABEL_23:
        swift_bridgeObjectRelease();
        char v22 = v27;
        *(void *)a4 = a1;
        *(void *)(a4 + 8) = a2;
        *(void *)(a4 + 16) = a3;
        *(_OWORD *)(a4 + 24) = v26;
        *(unsigned char *)(a4 + 40) = v22;
        swift_bridgeObjectRetain();
        return swift_retain();
      }
      uint64_t v24 = a1;
      swift_bridgeObjectRetain();
      swift_retain();
      int64_t v11 = 0;
      while (v11 != v10)
      {
        uint64_t v12 = *v8;
        if (!*v8) {
          goto LABEL_26;
        }
        unint64_t v13 = v11;
        uint64_t v14 = v12[1];
        if (v11 != v14)
        {
          if (v11 >= v14) {
            goto LABEL_28;
          }
          ++v11;
          uint64_t v15 = sub_220891788(v13, v12, v14);
          uint64_t v16 = v28;
          if (*(void *)(v28 + 16))
          {
            sub_22093F430();
            if (v15 != 2) {
              sub_22093F450();
            }
            sub_22093F450();
            uint64_t v17 = sub_22093F490();
            uint64_t v18 = -1 << *(unsigned char *)(v16 + 32);
            unint64_t v19 = v17 & ~v18;
            if ((*(void *)(v16 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19))
            {
              uint64_t v20 = ~v18;
              do
              {
                int v21 = *(unsigned __int8 *)(*(void *)(v16 + 48) + v19);
                if (v21 == 2)
                {
                  if (v15 == 2) {
                    goto LABEL_6;
                  }
                }
                else if v15 != 2 && ((((v15 & 1) == 0) ^ v21))
                {
                  goto LABEL_6;
                }
                unint64_t v19 = (v19 + 1) & v20;
              }
              while (((*(void *)(v16 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) != 0);
            }
          }
          sub_220869870(v13, v13 + 1);
          sub_220828C18(v25, v15);
LABEL_6:
          if (v11 != v10) {
            continue;
          }
        }
        swift_release();
        swift_bridgeObjectRelease();
        a1 = v24;
        goto LABEL_23;
      }
      __break(1u);
    }
    __break(1u);
LABEL_26:
    __break(1u);
  }
  __break(1u);
LABEL_28:
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

uint64_t sub_22092A55C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4 = a3;
  uint64_t v35 = MEMORY[0x263F8EE88];
  long long v33 = 0uLL;
  char v34 = 2;
  uint64_t v31 = (void **)(a3 + 16);
  swift_beginAccess();
  uint64_t v8 = *(void *)(v4 + 16);
  if (!v8) {
    goto LABEL_33;
  }
  uint64_t v9 = *(void *)(v8 + 8);
  if (v9 < 0)
  {
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    uint64_t result = sub_22093F090();
    __break(1u);
    return result;
  }
  if (v9)
  {
    uint64_t v28 = a1;
    uint64_t v29 = a4;
    swift_bridgeObjectRetain();
    swift_retain();
    int64_t v10 = 0;
    uint64_t v30 = v4;
    while (1)
    {
      if (v10 == v9)
      {
        __break(1u);
        goto LABEL_31;
      }
      int64_t v11 = *v31;
      if (!*v31) {
        goto LABEL_32;
      }
      unint64_t v12 = v10;
      uint64_t v13 = v11[1];
      if (v10 == v13)
      {
LABEL_28:
        swift_release();
        swift_bridgeObjectRelease();
        a1 = v28;
        a4 = v29;
        break;
      }
      if (v10 >= v13) {
        goto LABEL_34;
      }
      ++v10;
      uint64_t v14 = sub_2208916D4(v12, v11, v13);
      uint64_t v16 = v15;
      uint64_t v17 = v35;
      if (!*(void *)(v35 + 16)) {
        goto LABEL_6;
      }
      sub_22093F430();
      sub_22093F450();
      swift_bridgeObjectRetain();
      if (v16)
      {
        swift_bridgeObjectRetain();
        sub_22093E650();
        swift_bridgeObjectRelease();
      }
      uint64_t v18 = sub_22093F490();
      uint64_t v19 = -1 << *(unsigned char *)(v17 + 32);
      unint64_t v20 = v18 & ~v19;
      if (((*(void *)(v17 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
      {
LABEL_5:
        swift_bridgeObjectRelease();
        uint64_t v4 = v30;
LABEL_6:
        sub_220869870(v12, v12 + 1);
        swift_bridgeObjectRetain();
        sub_220828A4C(&v32, v14, v16);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
      uint64_t v21 = ~v19;
      uint64_t v22 = *(void *)(v17 + 48);
      while (1)
      {
        uint64_t v23 = (void *)(v22 + 16 * v20);
        uint64_t v24 = v23[1];
        if (v24) {
          break;
        }
        if (!v16) {
          goto LABEL_27;
        }
LABEL_18:
        unint64_t v20 = (v20 + 1) & v21;
        if (((*(void *)(v17 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
          goto LABEL_5;
        }
      }
      if (!v16) {
        goto LABEL_18;
      }
      BOOL v25 = *v23 == v14 && v24 == v16;
      if (!v25 && (sub_22093F250() & 1) == 0) {
        goto LABEL_18;
      }
      swift_bridgeObjectRelease();
LABEL_27:
      swift_bridgeObjectRelease();
      uint64_t v4 = v30;
LABEL_7:
      if (v10 == v9) {
        goto LABEL_28;
      }
    }
  }
  swift_bridgeObjectRelease();
  char v26 = v34;
  *(void *)a4 = a1;
  *(void *)(a4 + 8) = a2;
  *(void *)(a4 + 16) = v4;
  *(_OWORD *)(a4 + 24) = v33;
  *(unsigned char *)(a4 + 40) = v26;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_22092A85C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v60 = a1;
  uint64_t v61 = a4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD411B8);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v65 = (uint64_t)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v64 = (uint64_t)&v57 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v57 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v57 - v15;
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v57 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v57 - v20;
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F19650);
  MEMORY[0x270FA5388](v67);
  uint64_t v23 = (unint64_t *)((char *)&v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v73 = MEMORY[0x263F8EE88];
  uint64_t v70 = 0;
  uint64_t v71 = 0;
  char v72 = 2;
  uint64_t v68 = (uint64_t **)(a3 + 16);
  swift_beginAccess();
  uint64_t v24 = *(void *)(a3 + 16);
  if (!v24) {
    goto LABEL_26;
  }
  uint64_t v25 = *(void *)(v24 + 8);
  if (v25 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    uint64_t result = sub_22093F090();
    __break(1u);
    return result;
  }
  char v69 = 0;
  if (v25)
  {
    uint64_t v58 = a2;
    swift_bridgeObjectRetain();
    uint64_t v59 = a3;
    swift_retain();
    unint64_t v26 = 0;
    uint64_t v66 = v25 - 1;
    uint64_t v62 = v13;
    uint64_t v63 = v25;
    while (v25 != v26)
    {
      char v27 = v68;
      swift_beginAccess();
      uint64_t v28 = *v27;
      if (!*v27) {
        goto LABEL_25;
      }
      int64_t v29 = v28[1];
      if (v26 != v29)
      {
        if ((uint64_t)v26 >= v29) {
          goto LABEL_27;
        }
        uint64_t v30 = v28 + 8;
        if ((*((unsigned __int8 *)v28 + (v26 >> 3) + 64) >> (v26 & 7)))
        {
          uint64_t v31 = *v28;
          BOOL v32 = __OFADD__(v31, 7);
          uint64_t v33 = v31 + 7;
          if (v32) {
            goto LABEL_23;
          }
          uint64_t v34 = v33 / 8;
          uint64_t v36 = v34 - 1;
          BOOL v35 = v34 < 1;
          uint64_t v37 = v34 + 62;
          if (!v35) {
            uint64_t v37 = v36;
          }
          uint64_t v38 = (char *)v30 + (v37 & 0xFFFFFFFFFFFFFFC0);
          uint64_t v39 = sub_22093E100();
          uint64_t v40 = *(void *)(v39 - 8);
          uint64_t v41 = &v38[*(void *)(v40 + 72) * v26];
          uint64_t v42 = v40;
          (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v16, v41 + 64, v39);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v16, 0, 1, v39);
        }
        else
        {
          uint64_t v43 = sub_22093E100();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v16, 1, 1, v43);
        }
        sub_220834D3C((uint64_t)v16, (uint64_t)v19, qword_26AD411B8);
        sub_220834D3C((uint64_t)v19, (uint64_t)v21, qword_26AD411B8);
        uint64_t v44 = (uint64_t)v23 + *(int *)(v67 + 48);
        *uint64_t v23 = v26;
        sub_220834D3C((uint64_t)v21, v44, qword_26AD411B8);
        sub_220834D3C(v44, (uint64_t)v13, qword_26AD411B8);
        uint64_t v45 = v73;
        swift_bridgeObjectRetain();
        char v46 = sub_220813D28((uint64_t)v13, v45);
        swift_bridgeObjectRelease();
        if ((v46 & 1) == 0)
        {
          sub_220869870(v26, v26 + 1);
          uint64_t v47 = v65;
          sub_220835280((uint64_t)v13, v65, qword_26AD411B8);
          char v48 = v21;
          uint64_t v49 = v19;
          uint64_t v50 = v64;
          sub_2208283E0(v64, v47);
          uint64_t v51 = v50;
          uint64_t v19 = v49;
          uint64_t v21 = v48;
          uint64_t v13 = v62;
          uint64_t v25 = v63;
          sub_2208352E4(v51, qword_26AD411B8);
        }
        sub_2208352E4((uint64_t)v13, qword_26AD411B8);
        if (v66 != v26)
        {
          ++v26;
          if ((v69 & 1) == 0) {
            continue;
          }
        }
      }
      uint64_t v52 = v70;
      uint64_t v53 = v71;
      char v54 = v72;
      a3 = v59;
      a2 = v58;
      goto LABEL_21;
    }
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v53 = 0;
  uint64_t v52 = 0;
  char v54 = 2;
LABEL_21:
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v55 = v61;
  *uint64_t v61 = v60;
  v55[1] = a2;
  v55[2] = a3;
  void v55[3] = v52;
  v55[4] = v53;
  *((unsigned char *)v55 + 40) = v54;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_22092ADB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4 = a3;
  uint64_t v37 = MEMORY[0x263F8EE88];
  uint64_t v34 = 0;
  uint64_t v35 = 0;
  char v36 = 2;
  uint64_t v8 = (void *)(a3 + 16);
  swift_beginAccess();
  uint64_t v9 = *(void *)(v4 + 16);
  if (!v9) {
    goto LABEL_28;
  }
  uint64_t v10 = *(void *)(v9 + 8);
  if (v10 < 0)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    uint64_t result = sub_22093F090();
    __break(1u);
    return result;
  }
  swift_bridgeObjectRetain();
  swift_retain();
  if (v10)
  {
    uint64_t v30 = a1;
    uint64_t v31 = a2;
    uint64_t v32 = v4;
    uint64_t v11 = 0;
    unint64_t v12 = 0;
    while (v10 != v12)
    {
      uint64_t v13 = (void *)*v8;
      if (!*v8) {
        goto LABEL_27;
      }
      int64_t v14 = v13[1];
      if (v12 == v14) {
        goto LABEL_21;
      }
      if ((uint64_t)v12 >= v14) {
        goto LABEL_29;
      }
      if ((*((unsigned __int8 *)v13 + (v12 >> 3) + 64) >> (v12 & 7)))
      {
        uint64_t v15 = *v13 + 7;
        if (__OFADD__(*v13, 7)) {
          goto LABEL_25;
        }
        if (v15 < 0) {
          uint64_t v15 = *v13 + 14;
        }
        uint64_t v16 = v15 >> 3;
        uint64_t v18 = v16 - 1;
        BOOL v17 = v16 < 1;
        uint64_t v19 = v16 + 62;
        if (!v17) {
          uint64_t v19 = v18;
        }
        unint64_t v20 = (unint64_t)&v13[v11] + (v19 & 0xFFFFFFFFFFFFFFC0);
        uint64_t v21 = *(void *)(v20 + 128);
        unint64_t v22 = *(void *)(v20 + 136);
        sub_22080B7F4(v21, v22);
        if (v22 >> 60 == 11)
        {
LABEL_21:
          uint64_t v26 = v34;
          uint64_t v27 = v35;
          char v28 = v36;
          a2 = v31;
          uint64_t v4 = v32;
          a1 = v30;
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t v21 = 0;
        unint64_t v22 = 0xF000000000000000;
      }
      unint64_t v23 = v12 + 1;
      uint64_t v24 = v37;
      swift_bridgeObjectRetain();
      char v25 = sub_2208131D0(v21, v22, v24);
      swift_bridgeObjectRelease();
      if ((v25 & 1) == 0)
      {
        sub_220869870(v12, v12 + 1);
        sub_220834CD4(v21, v22);
        sub_2208277C8(v33, v21, v22);
        sub_220834944(v33[0], v33[1]);
      }
      sub_220834944(v21, v22);
      v11 += 2;
      ++v12;
      if (v10 == v23) {
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v27 = 0;
  uint64_t v26 = 0;
  char v28 = 2;
LABEL_23:
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)a4 = a1;
  *(void *)(a4 + 8) = a2;
  *(void *)(a4 + 16) = v4;
  *(void *)(a4 + 24) = v26;
  *(void *)(a4 + 32) = v27;
  *(unsigned char *)(a4 + 40) = v28;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t AnyColumn.prototype.getter()
{
  uint64_t v1 = v0;
  uint64_t v3 = v0[3];
  uint64_t v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  return (*(uint64_t (**)(uint64_t))(*(void *)(v2 + 8) + 88))(v3);
}

uint64_t AnyColumn.subscript.getter(uint64_t a1)
{
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 + 8) + 128))(a1, v3);
}

uint64_t AnyColumn.subscript.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t v6 = *(void *)(v2 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v2, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 + 8) + 136))(a2, a1, v5);
  return sub_2208352E4(a1, qword_26AD40FF8);
}

uint64_t (*AnyColumn.name.modify(void *a1))(uint64_t *a1, char a2)
{
  a1[2] = v1;
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  *a1 = (*(uint64_t (**)(uint64_t))(*(void *)(v4 + 8) + 8))(v3);
  a1[1] = v5;
  return sub_2208DFF58;
}

uint64_t AnyColumn.missingCount.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t))(*(void *)(v3 + 8) + 56))(v2);
}

uint64_t AnyColumn.hashValue.getter()
{
  sub_22093F430();
  AnyColumn.hash(into:)((uint64_t)v1);
  return sub_22093F490();
}

uint64_t AnyColumn.subscript.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2[3];
  uint64_t v6 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 + 8) + 144))(a1, a2, v5);
}

uint64_t sub_22092B304()
{
  sub_22093F430();
  AnyColumn.hash(into:)((uint64_t)v1);
  return sub_22093F490();
}

uint64_t AnyColumn.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  __swift_project_boxed_opaque_existential_1(v2, v4);
  (*(void (**)(uint64_t))(*(void *)(v5 + 8) + 8))(v4);
  sub_22093E650();
  swift_bridgeObjectRelease();
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v6);
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)(v7 + 8) + 48))(v6);
  uint64_t v9 = MEMORY[0x263F8EE78];
  if (!v8)
  {
LABEL_13:
    sub_2208E2274(a1, v9);
    return swift_bridgeObjectRelease();
  }
  uint64_t v10 = v8;
  uint64_t v28 = MEMORY[0x263F8EE78];
  sub_220826C38(0, v8 & ~(v8 >> 63), 0);
  uint64_t v11 = v2[3];
  uint64_t v12 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v11);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v12 + 8) + 32))(v11);
  if ((v10 & 0x8000000000000000) == 0)
  {
    uint64_t v14 = result;
    do
    {
      uint64_t v15 = v2[3];
      uint64_t v16 = v2[4];
      __swift_project_boxed_opaque_existential_1(v2, v15);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(*(void *)(v16 + 8) + 128))(v24, v14, v15);
      sub_220834D3C((uint64_t)v24, (uint64_t)v23, qword_26AD40FF8);
      sub_220835280((uint64_t)v23, (uint64_t)v21, qword_26AD40FF8);
      if (v22)
      {
        if ((swift_dynamicCast() & 1) == 0)
        {
          uint64_t v27 = 0;
          long long v25 = 0u;
          long long v26 = 0u;
        }
      }
      else
      {
        sub_2208352E4((uint64_t)v21, qword_26AD40FF8);
        long long v25 = 0u;
        long long v26 = 0u;
        uint64_t v27 = 0;
      }
      sub_2208352E4((uint64_t)v23, qword_26AD40FF8);
      uint64_t v9 = v28;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_220826C38(0, *(void *)(v9 + 16) + 1, 1);
        uint64_t v9 = v28;
      }
      unint64_t v18 = *(void *)(v9 + 16);
      unint64_t v17 = *(void *)(v9 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_220826C38((void *)(v17 > 1), v18 + 1, 1);
        uint64_t v9 = v28;
      }
      *(void *)(v9 + 16) = v18 + 1;
      sub_220834D3C((uint64_t)&v25, v9 + 40 * v18 + 32, &qword_267F18658);
      uint64_t v19 = v2[3];
      uint64_t v20 = v2[4];
      __swift_project_boxed_opaque_existential_1(v2, v19);
      uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v20 + 8) + 64))(v14, v19);
      --v10;
    }
    while (v10);
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_22092B620()
{
  sub_22093F430();
  AnyColumn.hash(into:)((uint64_t)v1);
  return sub_22093F490();
}

uint64_t AnyColumn.startIndex.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t))(*(void *)(v3 + 8) + 32))(v2);
}

uint64_t AnyColumn.endIndex.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t))(*(void *)(v3 + 8) + 40))(v2);
}

Swift::Int __swiftcall AnyColumn.index(after:)(Swift::Int after)
{
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  return (*(uint64_t (**)(Swift::Int, uint64_t))(*(void *)(v4 + 8) + 64))(after, v3);
}

Swift::Int __swiftcall AnyColumn.index(before:)(Swift::Int before)
{
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  return (*(uint64_t (**)(Swift::Int, uint64_t))(*(void *)(v4 + 8) + 72))(before, v3);
}

void (*AnyColumn.subscript.modify(void *a1, uint64_t a2))(uint64_t *a1, char a2)
{
  uint64_t v5 = malloc(0x50uLL);
  *a1 = v5;
  v5[8] = a2;
  v5[9] = v2;
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v6);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 + 8) + 128))(a2, v6);
  return sub_2208E0AC0;
}

uint64_t AnyColumn.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v8 = *(void *)(v3 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v3, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 + 8) + 152))(a2, a3, a1, v7);

  return sub_220833C84(a1);
}

void (*AnyColumn.subscript.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t *a1, char a2)
{
  uint64_t v7 = malloc(0x68uLL);
  *a1 = v7;
  v7[11] = a3;
  v7[12] = v3;
  v7[10] = a2;
  uint64_t v8 = v3[3];
  uint64_t v9 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 + 8) + 144))(a2, a3, v8);
  return sub_2208E0D88;
}

uint64_t AnyColumn.subscript.getter(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  uint64_t v10 = v3[3];
  uint64_t v9 = v3[4];
  __swift_project_boxed_opaque_existential_1(v4, v10);
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)(v9 + 8) + 32))(v10);
  uint64_t v13 = v4[3];
  uint64_t v12 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v13);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v12 + 8) + 40))(v13);
  if (result < v11)
  {
    __break(1u);
  }
  else
  {
    uint64_t v15 = sub_22086436C(a1, v11, result, a2, a3);
    uint64_t v17 = v16;
    char v19 = v18;
    (*(void (**)(void))(*(void *)(v8 + 8) + 160))();
    return sub_22080B6B4(v15, v17, v19);
  }
  return result;
}

uint64_t sub_22092BACC@<X0>(uint64_t (*a1)(unsigned char *)@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_22092D550(a1, a2, (void (*)(void *, void *))sub_22080B5B8, (void (*)(void *))sub_22080B0D8);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

uint64_t sub_22092BB20(uint64_t *a1, uint64_t *a2)
{
  return sub_2209290D4(*a1, *a2);
}

uint64_t sub_22092BB40(uint64_t *a1, uint64_t *a2)
{
  return sub_220929798(*a1, *a2);
}

uint64_t sub_22092BB60@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result = sub_2209295BC(*a1, a2, *a3);
  *(void *)a4 = result;
  *(unsigned char *)(a4 + 8) = v6 & 1;
  return result;
}

uint64_t sub_22092BB98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = (void *)v1;
  sub_22080B5B8(v1, a1);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  __swift_project_boxed_opaque_existential_1(v2, v5);
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)(v4 + 8) + 32))(v5);
  uint64_t result = sub_22080B0D8((uint64_t)v2);
  *(void *)(a1 + 40) = v6;
  return result;
}

uint64_t sub_22092BC10()
{
  uint64_t v1 = sub_2208377FC(v0);
  sub_22080B0D8((uint64_t)v0);
  return v1;
}

uint64_t sub_22092BC44(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_22092C7F0(a1, a2, a3, (void (*)(long long *, long long *))sub_22080B5B8, (uint64_t (*)(long long *))sub_22080B0D8);
}

uint64_t AnyColumn.customMirror.getter()
{
  uint64_t v1 = v0;
  uint64_t v3 = v0[3];
  uint64_t v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  return (*(uint64_t (**)(uint64_t))(*(void *)(v2 + 8) + 176))(v3);
}

uint64_t AnyColumn.distinct()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v5 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v2, v5);
  (*(void (**)(uint64_t))(*(void *)(v4 + 8) + 80))(v5);
  if (swift_dynamicCastMetatype())
  {
    sub_22092810C();
    a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18AA0);
    a1[4] = (uint64_t)&off_26D223748;
    uint64_t v6 = swift_allocObject();
    *a1 = v6;
    sub_2209298C4(v15, v16, v17, v6 + 16);
LABEL_17:
    swift_release();
    return swift_bridgeObjectRelease();
  }
  if (swift_dynamicCastMetatype())
  {
    sub_2209282BC();
    a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18AB0);
    a1[4] = (uint64_t)&off_26D223748;
    uint64_t v7 = swift_allocObject();
    *a1 = v7;
    sub_220929B40(v15, v16, v17, v7 + 16);
    goto LABEL_17;
  }
  if (swift_dynamicCastMetatype())
  {
    sub_220928474();
    a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18AC0);
    a1[4] = (uint64_t)&off_26D223748;
    uint64_t v8 = swift_allocObject();
    *a1 = v8;
    sub_220929DBC(v15, v16, v17, v8 + 16);
    goto LABEL_17;
  }
  if (swift_dynamicCastMetatype())
  {
    sub_220928628();
    a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18AD0);
    a1[4] = (uint64_t)&off_26D223748;
    uint64_t v9 = swift_allocObject();
    *a1 = v9;
    sub_22092A048(v15, v16, v17, v9 + 16);
    goto LABEL_17;
  }
  if (swift_dynamicCastMetatype())
  {
    sub_2209287DC();
    a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18AE0);
    a1[4] = (uint64_t)&off_26D223748;
    uint64_t v10 = swift_allocObject();
    *a1 = v10;
    sub_22092A2CC(v15, v16, v17, v10 + 16);
    goto LABEL_17;
  }
  if (swift_dynamicCastMetatype())
  {
    sub_22092898C();
    a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18AF0);
    a1[4] = (uint64_t)&off_26D223748;
    uint64_t v11 = swift_allocObject();
    *a1 = v11;
    sub_22092A55C(v15, v16, v17, v11 + 16);
    goto LABEL_17;
  }
  sub_22093E100();
  if (swift_dynamicCastMetatype())
  {
    sub_220928B40();
    a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B00);
    a1[4] = (uint64_t)&off_26D223748;
    uint64_t v12 = swift_allocObject();
    *a1 = v12;
    sub_22092A85C(v15, v16, v17, (void *)(v12 + 16));
    goto LABEL_17;
  }
  if (swift_dynamicCastMetatype())
  {
    sub_220928CFC();
    a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B10);
    a1[4] = (uint64_t)&off_26D223748;
    uint64_t v13 = swift_allocObject();
    *a1 = v13;
    sub_22092ADB0(v15, v16, v17, v13 + 16);
    goto LABEL_17;
  }

  return sub_22092C100();
}

uint64_t sub_22092C100()
{
  uint64_t v1 = v0;
  uint64_t v33 = MEMORY[0x263F8EE88];
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  unsigned __int8 v32 = 2;
  uint64_t v3 = v0[3];
  uint64_t v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  int64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)(v2 + 8) + 32))(v3);
  uint64_t v6 = v1[3];
  uint64_t v5 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v6);
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)(v5 + 8) + 40))(v6);
  if (v7 < v4)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    uint64_t v26 = 0;
    long long v24 = 0u;
    long long v25 = 0u;
    sub_2208352E4((uint64_t)&v24, &qword_267F18658);
    sub_22080B5B8((uint64_t)v1, (uint64_t)&v27);
    *(void *)&long long v24 = 0;
    *((void *)&v24 + 1) = 0xE000000000000000;
    sub_22093EEA0();
    swift_bridgeObjectRelease();
    *(void *)&long long v24 = 0xD00000000000002ALL;
    *((void *)&v24 + 1) = 0x8000000220940D00;
    uint64_t v20 = *((void *)&v28 + 1);
    uint64_t v21 = v29;
    __swift_project_boxed_opaque_existential_1(&v27, *((uint64_t *)&v28 + 1));
    (*(void (**)(uint64_t))(*(void *)(v21 + 8) + 80))(v20);
    sub_22093F530();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_22093F090();
    __break(1u);
    return result;
  }
  int64_t v8 = v7;
  if (v4 != v7)
  {
    while (v4 < v8)
    {
      uint64_t v13 = v1[3];
      uint64_t v12 = v1[4];
      __swift_project_boxed_opaque_existential_1(v1, v13);
      (*(void (**)(long long *__return_ptr, int64_t, uint64_t))(*(void *)(v12 + 8) + 128))(&v27, v4, v13);
      if (*((void *)&v28 + 1))
      {
        sub_220835340(&v27, v23);
        sub_220835350((uint64_t)v23, (uint64_t)v22);
        if (!swift_dynamicCast()) {
          goto LABEL_17;
        }
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v23);
        long long v27 = v24;
        long long v28 = v25;
        uint64_t v29 = v26;
      }
      else
      {
        sub_2208352E4((uint64_t)&v27, qword_26AD40FF8);
        long long v27 = 0u;
        long long v28 = 0u;
        uint64_t v29 = 0;
      }
      int64_t v14 = v4 + 1;
      uint64_t v15 = v33;
      swift_bridgeObjectRetain();
      char v16 = sub_220812FA4((uint64_t)&v27, v15);
      swift_bridgeObjectRelease();
      if ((v16 & 1) == 0)
      {
        sub_220835280((uint64_t)&v27, (uint64_t)v23, &qword_267F18658);
        sub_2208274E4((uint64_t)&v24, (uint64_t)v23);
        sub_2208352E4((uint64_t)&v24, &qword_267F18658);
        sub_220869870(v4, v4 + 1);
      }
      sub_2208352E4((uint64_t)&v27, &qword_267F18658);
      ++v4;
      if (v8 == v14)
      {
        uint64_t v10 = v30;
        uint64_t v9 = v31;
        uint64_t v11 = v32;
        goto LABEL_14;
      }
    }
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 2;
LABEL_14:
  swift_bridgeObjectRelease();
  uint64_t v17 = v1[3];
  uint64_t v18 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v17);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 + 8) + 160))(v10, v9, v11, v17);
  return sub_22080B6B4(v10, v9, v11);
}

uint64_t sub_22092C4AC(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2)
  {
    a3 = 0;
    goto LABEL_14;
  }
  if (!a3)
  {
LABEL_14:
    *uint64_t v9 = a4;
    v9[1] = a5;
    void v9[2] = a6;
    void v9[3] = a7;
    v9[4] = a3;
    return a3;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = a5;
    uint64_t v18 = a6;
    unint64_t v10 = *(void *)(a4 + 16);
    if (v10)
    {
      uint64_t v11 = a2;
      unint64_t v12 = 0;
      uint64_t v13 = a4 + 32;
      unint64_t v16 = a3;
      unint64_t v19 = a3 - 1;
      while (v12 < v10)
      {
        sub_22080B5B8(v13, (uint64_t)v20);
        uint64_t v14 = v21;
        uint64_t v15 = v22;
        __swift_project_boxed_opaque_existential_1(v20, v21);
        (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(*(void *)(v15 + 8) + 128))(v23, a7, v14);
        sub_22080B0D8((uint64_t)v20);
        sub_220834D3C((uint64_t)v23, (uint64_t)v24, qword_26AD40FF8);
        sub_220834D3C((uint64_t)v24, (uint64_t)v25, qword_26AD40FF8);
        uint64_t result = sub_220834D3C((uint64_t)v25, v11, qword_26AD40FF8);
        if (v19 == v12)
        {
          a5 = v17;
          a6 = v18;
          a3 = v16;
          goto LABEL_14;
        }
        v11 += 32;
        unint64_t v10 = *(void *)(a4 + 16);
        ++v12;
        v13 += 40;
        if (v12 == v10) {
          goto LABEL_12;
        }
      }
      __break(1u);
      goto LABEL_16;
    }
    unint64_t v12 = 0;
LABEL_12:
    a3 = v12;
    a5 = v17;
    a6 = v18;
    goto LABEL_14;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_22092C618(uint64_t result, void *a2, uint64_t a3)
{
  uint64_t v5 = a2;
  uint64_t v6 = result;
  uint64_t v7 = *v3;
  uint64_t v8 = v3[1];
  uint64_t v10 = v3[2];
  uint64_t v9 = v3[3];
  uint64_t v21 = v3[4];
  uint64_t v22 = v9;
  int v11 = *((unsigned __int8 *)v3 + 40);
  if (!*((unsigned char *)v3 + 40))
  {
LABEL_5:
    if (a2) {
      goto LABEL_6;
    }
LABEL_19:
    a3 = 0;
    goto LABEL_22;
  }
  if (v11 == 1 && *(void *)(v9 + 16))
  {
    uint64_t v9 = *(void *)(v9 + 32);
    goto LABEL_5;
  }
  uint64_t result = sub_220883950(v9, v21, *((unsigned char *)v3 + 40));
  if (v18) {
    uint64_t v9 = 0;
  }
  else {
    uint64_t v9 = v17;
  }
  if (!v5) {
    goto LABEL_19;
  }
LABEL_6:
  if (!a3)
  {
LABEL_22:
    *(void *)uint64_t v6 = v7;
    *(void *)(v6 + 8) = v8;
    *(void *)(v6 + 16) = v10;
    *(void *)(v6 + 24) = v22;
    *(void *)(v6 + 32) = v21;
    *(unsigned char *)(v6 + 40) = v11;
    *(void *)(v6 + 48) = v9;
    return a3;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    uint64_t v12 = a3;
    a3 = 0;
    uint64_t v19 = v12;
    uint64_t v20 = v6;
    uint64_t v13 = v12 - 1;
    while (1)
    {
      sub_220883950(v22, v21, v11);
      if (v15)
      {
        if (!v9) {
          goto LABEL_21;
        }
      }
      else if (v9 == v14)
      {
        goto LABEL_21;
      }
      Swift::Int v16 = DataFrame.Rows.index(after:)(v9);
      *uint64_t v5 = v7;
      v5[1] = v8;
      _OWORD v5[2] = v10;
      v5[3] = v9;
      if (v13 == a3) {
        break;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v5 += 4;
      ++a3;
      uint64_t v9 = v16;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v9 = v16;
    a3 = v19;
LABEL_21:
    uint64_t v6 = v20;
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t sub_22092C798(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_22092C7F0(a1, a2, a3, (void (*)(long long *, long long *))sub_220833C28, (uint64_t (*)(long long *))sub_220833C84);
}

uint64_t sub_22092C7C4(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_22092C7F0(a1, a2, a3, (void (*)(long long *, long long *))sub_22080B5B8, (uint64_t (*)(long long *))sub_22080B0D8);
}

uint64_t sub_22092C7F0(_OWORD *a1, uint64_t a2, uint64_t a3, void (*a4)(long long *, long long *), uint64_t (*a5)(long long *))
{
  uint64_t v8 = v5;
  a4(v5, &v32);
  uint64_t v13 = *((void *)v5 + 3);
  uint64_t v12 = *((void *)v5 + 4);
  __swift_project_boxed_opaque_existential_1(v5, v13);
  uint64_t v14 = (*(uint64_t (**)(uint64_t))(*(void *)(v12 + 8) + 32))(v13);
  uint64_t result = a5(v8);
  *((void *)&v34 + 1) = v14;
  long long v35 = v32;
  long long v36 = v33;
  long long v37 = v34;
  if (!a2)
  {
    a3 = 0;
    goto LABEL_12;
  }
  if (!a3)
  {
LABEL_12:
    long long v27 = v36;
    *a1 = v35;
    a1[1] = v27;
    a1[2] = v37;
    return a3;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    uint64_t v29 = a1;
    uint64_t v17 = *((void *)&v37 + 1);
    uint64_t v16 = v37;
    uint64_t v18 = *((void *)&v36 + 1);
    __swift_project_boxed_opaque_existential_1(&v35, *((uint64_t *)&v36 + 1));
    if (v17 == (*(uint64_t (**)(uint64_t))(*(void *)(v16 + 8) + 40))(v18))
    {
      uint64_t v19 = 0;
LABEL_10:
      a3 = v19;
      a1 = v29;
    }
    else
    {
      uint64_t v19 = 0;
      uint64_t v28 = a3;
      uint64_t v20 = a3 - 1;
      while (1)
      {
        uint64_t v22 = *((void *)&v36 + 1);
        uint64_t v21 = v37;
        __swift_project_boxed_opaque_existential_1(&v35, *((uint64_t *)&v36 + 1));
        (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(*(void *)(v21 + 8) + 128))(v30, v17, v22);
        a4(&v35, &v32);
        uint64_t v24 = *((void *)&v33 + 1);
        uint64_t v23 = v34;
        __swift_project_boxed_opaque_existential_1(&v32, *((uint64_t *)&v33 + 1));
        *((void *)&v37 + 1) = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v23 + 8) + 64))(v17, v24);
        a5(&v32);
        sub_220834D3C((uint64_t)v30, (uint64_t)v31, qword_26AD40FF8);
        sub_220834D3C((uint64_t)v31, a2, qword_26AD40FF8);
        if (v20 == v19) {
          break;
        }
        a2 += 32;
        uint64_t v17 = *((void *)&v37 + 1);
        uint64_t v25 = v37;
        uint64_t v26 = *((void *)&v36 + 1);
        __swift_project_boxed_opaque_existential_1(&v35, *((uint64_t *)&v36 + 1));
        ++v19;
        if (v17 == (*(uint64_t (**)(uint64_t))(*(void *)(v25 + 8) + 40))(v26)) {
          goto LABEL_10;
        }
      }
      a3 = v28;
      a1 = v29;
    }
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

int64_t *sub_22092CA40(int64_t *result, int64_t *a2, int64_t a3, int64_t a4, int64_t a5)
{
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
LABEL_6:
    unint64_t v5 = a4;
LABEL_7:
    *uint64_t result = a4;
    result[1] = a5;
    result[2] = v5;
    return (int64_t *)a3;
  }
  if (a3 < 0) {
    goto LABEL_31;
  }
  if (a5 == a4)
  {
LABEL_5:
    a3 = 0;
    goto LABEL_6;
  }
  if (a5 < a4) {
    goto LABEL_32;
  }
  if (a5 > a4)
  {
    unint64_t v5 = a4 + 1;
    *a2 = a4;
    unint64_t v6 = a3 - 1;
    if (a3 == 1) {
      goto LABEL_7;
    }
    unint64_t v7 = a3 - 2;
    if (a3 - 2 >= (unint64_t)(~a4 + a5)) {
      unint64_t v7 = ~a4 + a5;
    }
    if (v7 < v6) {
      unint64_t v6 = v7;
    }
    unint64_t v8 = v6 + 1;
    if (v8 > 4)
    {
      uint64_t v11 = v8 & 3;
      if ((v8 & 3) == 0) {
        uint64_t v11 = 4;
      }
      unint64_t v12 = v8 - v11;
      uint64_t v9 = v8 - v11 + 1;
      unint64_t v13 = v5 + v12;
      uint64_t v10 = &a2[v12];
      int64x2_t v14 = vaddq_s64(vdupq_n_s64(v5), (int64x2_t)xmmword_220949760);
      char v15 = (int64x2_t *)(a2 + 3);
      int64x2_t v16 = vdupq_n_s64(2uLL);
      do
      {
        v15[-1] = v14;
        *char v15 = vaddq_s64(v14, v16);
        int64x2_t v14 = vaddq_s64(v14, vdupq_n_s64(4uLL));
        v15 += 2;
        v12 -= 4;
      }
      while (v12);
      unint64_t v5 = v13;
    }
    else
    {
      uint64_t v9 = 1;
      uint64_t v10 = a2;
    }
    uint64_t v17 = v10 + 1;
    int64_t v18 = v5;
    while (a3 != v9)
    {
      if (a5 == v18)
      {
        unint64_t v5 = a5;
        a3 = a5 - a4;
        goto LABEL_7;
      }
      if (v18 >= a5) {
        goto LABEL_30;
      }
      ++v9;
      unint64_t v5 = v18 + 1;
      *v17++ = v18++;
      if (a3 == v9) {
        goto LABEL_7;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_22092CB70(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 56;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(void *)(*(void *)(a4 + 48) + 8 * v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_22092CD04(uint64_t result, Swift::Int *a2, uint64_t a3)
{
  uint64_t v4 = result;
  uint64_t v5 = *((void *)v3 + 2);
  char v6 = *((unsigned char *)v3 + 40);
  Swift::Int v7 = *((void *)v3 + 6);
  Swift::Int v8 = *((void *)v3 + 7);
  long long v16 = *(long long *)((char *)v3 + 24);
  long long v17 = *v3;
  if (!a2)
  {
LABEL_5:
    uint64_t v9 = 0;
    goto LABEL_6;
  }
  uint64_t v9 = a3;
  if (!a3)
  {
LABEL_6:
    Swift::Int v10 = *((void *)v3 + 6);
LABEL_7:
    *(_OWORD *)uint64_t v4 = v17;
    *(void *)(v4 + 16) = v5;
    *(_OWORD *)(v4 + 24) = v16;
    *(unsigned char *)(v4 + 40) = v6;
    *(void *)(v4 + 48) = v7;
    *(void *)(v4 + 56) = v8;
    *(void *)(v4 + 64) = v10;
    return v9;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    if (v7 != v8)
    {
      char v15 = *((unsigned char *)v3 + 40);
      Swift::Int v10 = DataFrame.Rows.index(after:)(v7);
      *a2 = v7;
      if (v9 != 1)
      {
        uint64_t v14 = v5;
        uint64_t v12 = 1;
        while (v10 != v8)
        {
          Swift::Int v13 = DataFrame.Rows.index(after:)(v10);
          a2[v12] = v10;
          Swift::Int v10 = v13;
          if (v9 == ++v12)
          {
            Swift::Int v10 = v13;
            goto LABEL_14;
          }
        }
        Swift::Int v10 = v8;
        uint64_t v9 = v12;
LABEL_14:
        uint64_t v5 = v14;
      }
      char v6 = v15;
      goto LABEL_7;
    }
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_22092CE44(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    _OWORD v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  unint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *unint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_22092D044(uint64_t (*a1)(unsigned char *), uint64_t a2)
{
  return sub_22092D550(a1, a2, (void (*)(void *, void *))sub_220833C28, (void (*)(void *))sub_220833C84);
}

Swift::Int sub_22092D084(uint64_t (*a1)(uint64_t *), uint64_t a2)
{
  uint64_t v32 = a2;
  uint64_t v4 = *v2;
  uint64_t v5 = v2[1];
  uint64_t v7 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v8 = v2[4];
  int v9 = *((unsigned __int8 *)v2 + 40);
  Swift::Int v10 = v6;
  if (*((unsigned char *)v2 + 40))
  {
    if (v9 == 1 && *(void *)(v6 + 16))
    {
      Swift::Int v10 = *(void *)(v6 + 32);
    }
    else
    {
      sub_220883950(v2[3], v2[4], *((unsigned char *)v2 + 40));
      if (v12) {
        Swift::Int v10 = 0;
      }
      else {
        Swift::Int v10 = v11;
      }
    }
  }
  uint64_t v23 = v8;
  sub_220883950(v6, v8, v9);
  if (v14)
  {
    if (v10 < 0)
    {
      Swift::Int v15 = 0;
      goto LABEL_13;
    }
  }
  else
  {
    Swift::Int v15 = v13;
    while (v10 < v15)
    {
LABEL_13:
      uint64_t v26 = v4;
      uint64_t v27 = v5;
      uint64_t v28 = v7;
      Swift::Int v29 = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v16 = a1(&v26);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v10;
      }
      char v17 = v16;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v17)
      {
        while (1)
        {
          uint64_t v26 = v4;
          uint64_t v27 = v5;
          uint64_t v28 = v7;
          Swift::Int v29 = v6;
          uint64_t v30 = v23;
          char v31 = v9;
          Swift::Int v18 = DataFrame.Rows.index(before:)(v15);
          if (v10 >= v18) {
            return v10;
          }
          Swift::Int v15 = v18;
          uint64_t v26 = v4;
          uint64_t v27 = v5;
          uint64_t v28 = v7;
          Swift::Int v29 = v18;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v19 = a1(&v26);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v19 & 1) == 0)
          {
            uint64_t v26 = v4;
            uint64_t v27 = v5;
            uint64_t v28 = v7;
            Swift::Int v29 = v10;
            v25[0] = v4;
            v25[1] = v5;
            _OWORD v25[2] = v7;
            v25[3] = v15;
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain_n();
            DataFrame.Rows.subscript.setter(v25, v10);
            DataFrame.Rows.subscript.setter(&v26, v15);
            uint64_t v4 = *v22;
            uint64_t v5 = v22[1];
            uint64_t v7 = v22[2];
            uint64_t v6 = v22[3];
            uint64_t v20 = v22[4];
            LOBYTE(v9) = *((unsigned char *)v22 + 40);
            uint64_t v26 = *v22;
            uint64_t v27 = v5;
            uint64_t v28 = v7;
            Swift::Int v29 = v6;
            uint64_t v23 = v20;
            goto LABEL_20;
          }
        }
      }
      uint64_t v26 = v4;
      uint64_t v27 = v5;
      uint64_t v28 = v7;
      Swift::Int v29 = v6;
      uint64_t v20 = v23;
LABEL_20:
      uint64_t v30 = v20;
      char v31 = v9;
      Swift::Int v10 = DataFrame.Rows.index(after:)(v10);
    }
  }
  return v10;
}

unint64_t sub_22092D2F8(unint64_t result, uint64_t a2)
{
  v21[5] = a2;
  char v17 = (uint64_t (*)(void *))result;
  int64_t v4 = *(void *)(*v2 + 16);
  if (v4)
  {
    uint64_t v5 = v2;
    int64_t v6 = 0;
    while ((unint64_t)v6 < *(void *)(*v5 + 16))
    {
      uint64_t v7 = v5[3];
      sub_22080B5B8(*v5 + 40 * v6 + 32, (uint64_t)v18);
      uint64_t v9 = v19;
      uint64_t v8 = v20;
      __swift_project_boxed_opaque_existential_1(v18, v19);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(*(void *)(v8 + 8) + 128))(v21, v7, v9);
      sub_22080B0D8((uint64_t)v18);
      sub_220834D3C((uint64_t)v21, (uint64_t)v18, qword_26AD40FF8);
      char v10 = v17(v18);
      uint64_t result = sub_2208352E4((uint64_t)v18, qword_26AD40FF8);
      if (v3) {
        return v6;
      }
      if (v10)
      {
        if (__OFADD__(v4, 1)) {
          goto LABEL_21;
        }
        if (v6 >= v4 + 1) {
          return v6;
        }
        int64_t v11 = v4 + 2;
        uint64_t v12 = 40 * v4++ + 72;
        while (v4 < *(void *)(*v5 + 16))
        {
          uint64_t v13 = v5[3];
          sub_22080B5B8(*v5 + v12, (uint64_t)v18);
          uint64_t v15 = v19;
          uint64_t v14 = v20;
          __swift_project_boxed_opaque_existential_1(v18, v19);
          (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(*(void *)(v14 + 8) + 128))(v21, v13, v15);
          sub_22080B0D8((uint64_t)v18);
          sub_220834D3C((uint64_t)v21, (uint64_t)v18, qword_26AD40FF8);
          char v16 = v17(v18);
          uint64_t result = sub_2208352E4((uint64_t)v18, qword_26AD40FF8);
          if ((v16 & 1) == 0)
          {
            uint64_t result = sub_220929238(v6, v4);
            goto LABEL_5;
          }
          if (__OFADD__(v4, 1)) {
            goto LABEL_19;
          }
          ++v4;
          v12 += 40;
          if (v11 <= v6) {
            return v6;
          }
        }
        __break(1u);
LABEL_19:
        __break(1u);
        break;
      }
LABEL_5:
      if (++v6 >= v4) {
        return v6;
      }
    }
    __break(1u);
LABEL_21:
    __break(1u);
  }
  else
  {
    return 0;
  }
  return result;
}

uint64_t sub_22092D550(uint64_t (*a1)(unsigned char *), uint64_t a2, void (*a3)(void *, void *), void (*a4)(void *))
{
  uint64_t v8 = v4;
  uint64_t v31 = a2;
  a3(v4, v28);
  uint64_t v10 = v29;
  uint64_t v9 = v30;
  __swift_project_boxed_opaque_existential_1(v28, v29);
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)(v9 + 8) + 32))(v10);
  a4(v28);
  a3(v8, v28);
  uint64_t v13 = v29;
  uint64_t v12 = v30;
  __swift_project_boxed_opaque_existential_1(v28, v29);
  uint64_t v14 = (*(uint64_t (**)(uint64_t))(*(void *)(v12 + 8) + 40))(v13);
  a4(v28);
  while (v11 < v14)
  {
    uint64_t v18 = v8[3];
    uint64_t v17 = v8[4];
    __swift_project_boxed_opaque_existential_1(v8, v18);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(*(void *)(v17 + 8) + 128))(v28, v11, v18);
    sub_220834D3C((uint64_t)v28, (uint64_t)v27, qword_26AD40FF8);
    char v19 = a1(v27);
    sub_2208352E4((uint64_t)v27, qword_26AD40FF8);
    if (v5) {
      break;
    }
    if (v19)
    {
      while (1)
      {
        a3(v8, v28);
        uint64_t v21 = v29;
        uint64_t v20 = v30;
        __swift_project_boxed_opaque_existential_1(v28, v29);
        uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v20 + 8) + 72))(v14, v21);
        a4(v28);
        if (v11 >= v14) {
          return v11;
        }
        uint64_t v23 = v8[3];
        uint64_t v22 = v8[4];
        __swift_project_boxed_opaque_existential_1(v8, v23);
        (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(*(void *)(v22 + 8) + 128))(v28, v14, v23);
        sub_220834D3C((uint64_t)v28, (uint64_t)v27, qword_26AD40FF8);
        char v24 = a1(v27);
        sub_2208352E4((uint64_t)v27, qword_26AD40FF8);
        if ((v24 & 1) == 0)
        {
          sub_2209290D4(v11, v14);
          break;
        }
      }
    }
    a3(v8, v28);
    uint64_t v16 = v29;
    uint64_t v15 = v30;
    __swift_project_boxed_opaque_existential_1(v28, v29);
    uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v15 + 8) + 64))(v11, v16);
    a4(v28);
  }
  return v11;
}

uint64_t _s11TabularData9AnyColumnV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v5 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)(v4 + 8) + 8))(v5);
  uint64_t v8 = v7;
  uint64_t v10 = a2[3];
  uint64_t v9 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v10);
  if (v6 == (*(uint64_t (**)(uint64_t))(*(void *)(v9 + 8) + 8))(v10) && v8 == v11)
  {
    swift_bridgeObjectRelease_n();
    sub_22080B5B8((uint64_t)a1, (uint64_t)v55);
    sub_22080B5B8((uint64_t)a2, (uint64_t)v52);
  }
  else
  {
    char v13 = sub_22093F250();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22080B5B8((uint64_t)a1, (uint64_t)v55);
    sub_22080B5B8((uint64_t)a2, (uint64_t)v52);
    char v14 = 0;
    if ((v13 & 1) == 0) {
      goto LABEL_33;
    }
  }
  uint64_t v15 = v56;
  uint64_t v16 = v57;
  __swift_project_boxed_opaque_existential_1(v55, v56);
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(*(void *)(v16 + 8) + 48))(v15);
  uint64_t v18 = MEMORY[0x263F8EE78];
  if (v17)
  {
    uint64_t v19 = v17;
    uint64_t v51 = MEMORY[0x263F8EE78];
    sub_220826C38(0, v17 & ~(v17 >> 63), 0);
    uint64_t v20 = v56;
    uint64_t v21 = v57;
    __swift_project_boxed_opaque_existential_1(v55, v56);
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v21 + 8) + 32))(v20);
    if (v19 < 0)
    {
      __break(1u);
      goto LABEL_35;
    }
    uint64_t v23 = result;
    do
    {
      uint64_t v24 = v56;
      uint64_t v25 = v57;
      __swift_project_boxed_opaque_existential_1(v55, v56);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(*(void *)(v25 + 8) + 128))(v47, v23, v24);
      sub_220834D3C((uint64_t)v47, (uint64_t)v46, qword_26AD40FF8);
      sub_220835280((uint64_t)v46, (uint64_t)v44, qword_26AD40FF8);
      if (v45)
      {
        if ((swift_dynamicCast() & 1) == 0)
        {
          uint64_t v50 = 0;
          long long v48 = 0u;
          long long v49 = 0u;
        }
      }
      else
      {
        sub_2208352E4((uint64_t)v44, qword_26AD40FF8);
        long long v48 = 0u;
        long long v49 = 0u;
        uint64_t v50 = 0;
      }
      sub_2208352E4((uint64_t)v46, qword_26AD40FF8);
      uint64_t v18 = v51;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_220826C38(0, *(void *)(v18 + 16) + 1, 1);
        uint64_t v18 = v51;
      }
      unint64_t v27 = *(void *)(v18 + 16);
      unint64_t v26 = *(void *)(v18 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_220826C38((void *)(v26 > 1), v27 + 1, 1);
        uint64_t v18 = v51;
      }
      *(void *)(v18 + 16) = v27 + 1;
      sub_220834D3C((uint64_t)&v48, v18 + 40 * v27 + 32, &qword_267F18658);
      uint64_t v29 = v56;
      uint64_t v28 = v57;
      __swift_project_boxed_opaque_existential_1(v55, v56);
      uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v28 + 8) + 64))(v23, v29);
      --v19;
    }
    while (v19);
  }
  uint64_t v31 = v53;
  uint64_t v30 = v54;
  __swift_project_boxed_opaque_existential_1(v52, v53);
  uint64_t v32 = (*(uint64_t (**)(uint64_t))(*(void *)(v30 + 8) + 48))(v31);
  uint64_t v33 = MEMORY[0x263F8EE78];
  if (!v32)
  {
LABEL_32:
    char v14 = sub_220818678(v18, v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_33:
    sub_22080B0D8((uint64_t)v52);
    sub_22080B0D8((uint64_t)v55);
    return v14 & 1;
  }
  uint64_t v34 = v32;
  uint64_t v51 = MEMORY[0x263F8EE78];
  sub_220826C38(0, v32 & ~(v32 >> 63), 0);
  uint64_t v36 = v53;
  uint64_t v35 = v54;
  __swift_project_boxed_opaque_existential_1(v52, v53);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v35 + 8) + 32))(v36);
  if ((v34 & 0x8000000000000000) == 0)
  {
    uint64_t v37 = result;
    do
    {
      uint64_t v39 = v53;
      uint64_t v38 = v54;
      __swift_project_boxed_opaque_existential_1(v52, v53);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(*(void *)(v38 + 8) + 128))(v47, v37, v39);
      sub_220834D3C((uint64_t)v47, (uint64_t)v46, qword_26AD40FF8);
      sub_220835280((uint64_t)v46, (uint64_t)v44, qword_26AD40FF8);
      if (v45)
      {
        if ((swift_dynamicCast() & 1) == 0)
        {
          uint64_t v50 = 0;
          long long v48 = 0u;
          long long v49 = 0u;
        }
      }
      else
      {
        sub_2208352E4((uint64_t)v44, qword_26AD40FF8);
        long long v48 = 0u;
        long long v49 = 0u;
        uint64_t v50 = 0;
      }
      sub_2208352E4((uint64_t)v46, qword_26AD40FF8);
      uint64_t v33 = v51;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_220826C38(0, *(void *)(v33 + 16) + 1, 1);
        uint64_t v33 = v51;
      }
      unint64_t v41 = *(void *)(v33 + 16);
      unint64_t v40 = *(void *)(v33 + 24);
      if (v41 >= v40 >> 1)
      {
        sub_220826C38((void *)(v40 > 1), v41 + 1, 1);
        uint64_t v33 = v51;
      }
      *(void *)(v33 + 16) = v41 + 1;
      sub_220834D3C((uint64_t)&v48, v33 + 40 * v41 + 32, &qword_267F18658);
      uint64_t v43 = v53;
      uint64_t v42 = v54;
      __swift_project_boxed_opaque_existential_1(v52, v53);
      uint64_t v37 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v42 + 8) + 64))(v37, v43);
      --v34;
    }
    while (v34);
    goto LABEL_32;
  }
LABEL_35:
  __break(1u);
  return result;
}

unint64_t sub_22092DE18()
{
  unint64_t result = qword_267F19A88;
  if (!qword_267F19A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F19A88);
  }
  return result;
}

unint64_t sub_22092DE70()
{
  unint64_t result = qword_267F19A90;
  if (!qword_267F19A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F19A90);
  }
  return result;
}

unint64_t sub_22092DEC8()
{
  unint64_t result = qword_267F19A98;
  if (!qword_267F19A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F19A98);
  }
  return result;
}

unint64_t sub_22092DF20()
{
  unint64_t result = qword_267F19AA0;
  if (!qword_267F19AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F19AA0);
  }
  return result;
}

unint64_t sub_22092DF78()
{
  unint64_t result = qword_267F19AA8;
  if (!qword_267F19AA8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267F188F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F19AA8);
  }
  return result;
}

uint64_t sub_22092DFD4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v3 + 8) + 8))(v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_22092E030(void *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 + 8) + 128))(v2, v3);
}

uint64_t sub_22092E098()
{
  return 0;
}

uint64_t sub_22092E0A8(void *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = a2[1];
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 + 8) + 144))(v2, v3, v4);
}

uint64_t sub_22092E11C()
{
  return 0;
}

ValueMetadata *type metadata accessor for AnyColumn()
{
  return &type metadata for AnyColumn;
}

uint64_t Column<A>.numericSummary()()
{
  return sub_22091D9E8((uint64_t (*)(uint64_t))sub_22092F158);
}

{
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F19AB0);
  return sub_22091D9E8((uint64_t (*)(uint64_t))sub_22092FE04);
}

uint64_t ColumnSlice<A>.numericSummary()()
{
  return swift_release();
}

{
  type metadata accessor for Column();
  swift_getWitnessTable();
  sub_22093F3B0();
  sub_22093F360();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F19AB0);
  sub_22091D9E8((uint64_t (*)(uint64_t))sub_220930078);
  return swift_release();
}

uint64_t DiscontiguousColumnSlice<A>.numericSummary()()
{
  return sub_22091D9E8((uint64_t (*)(uint64_t))sub_220930098);
}

{
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F19AB0);
  return sub_22091D9E8((uint64_t (*)(uint64_t))sub_220930398);
}

__n128 sub_22092E564@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, __n128 a4@<Q0>, __n128 a5@<Q6>)
{
  uint64_t v7 = *(void *)(a1 + 16);
  if (!v7)
  {
    uint64_t v21 = (char *)MEMORY[0x263F8EE78];
    double v22 = NAN;
    a4.n128_u64[0] = 0x7FF8000000000000;
    __n128 v45 = a4;
    double v11 = NAN;
    double v12 = NAN;
    goto LABEL_38;
  }
  uint64_t v9 = 0;
  double v10 = 0.0;
  double v11 = NAN;
  double v12 = NAN;
  do
  {
    uint64_t v13 = a1 + 8 * v9;
    double v14 = *(double *)(v13 + 32);
    if (v14 >= v12) {
      double v15 = v12;
    }
    else {
      double v15 = *(double *)(v13 + 32);
    }
    if ((*(void *)&v12 & 0xFFFFFFFFFFFFFLL) != 0 && (~*(void *)&v12 & 0x7FF0000000000000) == 0) {
      double v12 = *(double *)(v13 + 32);
    }
    else {
      double v12 = v15;
    }
    if (v11 >= v14) {
      double v17 = v11;
    }
    else {
      double v17 = *(double *)(v13 + 32);
    }
    ++v9;
    double v10 = v10 + v14;
    if ((*(void *)&v11 & 0xFFFFFFFFFFFFFLL) != 0 && (~*(void *)&v11 & 0x7FF0000000000000) == 0) {
      double v11 = *(double *)(v13 + 32);
    }
    else {
      double v11 = v17;
    }
  }
  while (v7 != v9);
  a5.n128_f64[0] = v10 / (double)v7;
  if ((unint64_t)v7 >= 4)
  {
    uint64_t v19 = v7 & 0x7FFFFFFFFFFFFFFCLL;
    float64x2_t v23 = (float64x2_t)vdupq_lane_s64(a5.n128_i64[0], 0);
    uint64_t v24 = (float64x2_t *)(a1 + 48);
    double v20 = 0.0;
    uint64_t v25 = v7 & 0x7FFFFFFFFFFFFFFCLL;
    do
    {
      float64x2_t v26 = vsubq_f64(v24[-1], v23);
      float64x2_t v27 = vsubq_f64(*v24, v23);
      float64x2_t v28 = vmulq_f64(v26, v26);
      float64x2_t v29 = vmulq_f64(v27, v27);
      double v20 = v20 + v28.f64[0] + v28.f64[1] + v29.f64[0] + v29.f64[1];
      v24 += 2;
      v25 -= 4;
    }
    while (v25);
    if (v7 == v19) {
      goto LABEL_30;
    }
  }
  else
  {
    uint64_t v19 = 0;
    double v20 = 0.0;
  }
  uint64_t v30 = v7 - v19;
  uint64_t v31 = (double *)(a1 + 8 * v19 + 32);
  do
  {
    double v32 = *v31++;
    double v20 = v20 + (v32 - a5.n128_f64[0]) * (v32 - a5.n128_f64[0]);
    --v30;
  }
  while (v30);
LABEL_30:
  __n128 v45 = a5;
  if (v20 <= 0.0) {
    double v22 = NAN;
  }
  else {
    double v22 = sqrt(v20 / (double)(v7 - 1));
  }
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_22081BF58(0, 1, 1, MEMORY[0x263F8EE78]);
  uint64_t v33 = 0;
  unint64_t v34 = *((void *)v21 + 2);
  do
  {
    uint64_t v35 = *(void *)(a1 + 8 * v33 + 32);
    unint64_t v36 = *((void *)v21 + 3);
    if (v34 >= v36 >> 1) {
      uint64_t v21 = sub_22081BF58((char *)(v36 > 1), v34 + 1, 1, v21);
    }
    ++v33;
    *((void *)v21 + 2) = v34 + 1;
    *(void *)&v21[8 * v34++ + 32] = v35;
  }
  while (v7 != v33);
  swift_bridgeObjectRelease();
LABEL_38:
  char v46 = v21;
  swift_bridgeObjectRetain();
  sub_2209308C8((uint64_t *)&v46, (uint64_t (*)(uint64_t))sub_22089E468, sub_22093094C);
  swift_bridgeObjectRelease();
  uint64_t v37 = (uint64_t)v46;
  sub_22092EB50((uint64_t)v46, 0.25);
  uint64_t v39 = v38;
  sub_22092EB50(v37, 0.5);
  uint64_t v41 = v40;
  sub_22092EB50(v37, 0.75);
  uint64_t v43 = v42;
  swift_release();
  *(void *)a3 = v7;
  *(void *)(a3 + 8) = a2;
  *(double *)(a3 + 48) = v22;
  *(double *)(a3 + 56) = v12;
  *(double *)(a3 + 64) = v11;
  *(void *)(a3 + 16) = v41;
  *(void *)(a3 + 24) = v39;
  __n128 result = v45;
  *(void *)(a3 + 32) = v43;
  *(void *)(a3 + 40) = v45.n128_u64[0];
  return result;
}

__n128 sub_22092E84C@<Q0>(float32x4_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, __n128 a4@<Q0>)
{
  uint64_t v7 = a1[1].i64[0];
  if (!v7)
  {
    a4.n128_u64[0] = (unint64_t)vdup_n_s32(0x7FC00000u);
    unint64_t v44 = a4.n128_u64[0];
    uint64_t v19 = (char *)MEMORY[0x263F8EE78];
    float v20 = NAN;
    a4.n128_u32[0] = 2143289344;
    __n128 v43 = a4;
    goto LABEL_20;
  }
  uint64_t v9 = 0;
  int8x8_t v10 = (int8x8_t)vdup_n_s32(0x7FC00000u);
  float v11 = 0.0;
  int32x2_t v12 = vdup_n_s32(0x7F800000u);
  do
  {
    uint64_t v13 = &a1->f32[v9++];
    float v11 = v11 + v13[8];
    v14.i32[1] = v10.i32[1];
    v14.f32[0] = v13[8];
    int8x8_t v15 = (int8x8_t)vcgt_f32((float32x2_t)__PAIR64__(v14.u32[0], v10.u32[0]), v14);
    int8x8_t v16 = (int8x8_t)vdup_lane_s32((int32x2_t)v14, 0);
    int8x8_t v10 = vbsl_s8(vorn_s8((int8x8_t)vceqz_s32((int32x2_t)vand_s8(v10, (int8x8_t)0x7F0000007FLL)), (int8x8_t)vceq_s32((int32x2_t)vand_s8(v10, (int8x8_t)v12), v12)), vbsl_s8(v15, v16, v10), v16);
  }
  while (v7 != v9);
  v4.n128_f32[0] = v11 / (float)v7;
  if ((unint64_t)v7 >= 8)
  {
    uint64_t v17 = v7 & 0x7FFFFFFFFFFFFFF8;
    float32x4_t v21 = (float32x4_t)vdupq_lane_s32((int32x2_t)v4.n128_u64[0], 0);
    double v22 = a1 + 3;
    float v18 = 0.0;
    uint64_t v23 = v7 & 0x7FFFFFFFFFFFFFF8;
    do
    {
      float32x4_t v24 = vsubq_f32(v22[-1], v21);
      float32x4_t v25 = vsubq_f32(*v22, v21);
      float32x4_t v26 = vmulq_f32(v24, v24);
      float32x4_t v27 = vmulq_f32(v25, v25);
      float v18 = (float)((float)((float)((float)((float)((float)((float)(v18 + v26.f32[0]) + v26.f32[1]) + v26.f32[2])
                                          + v26.f32[3])
                                  + v27.f32[0])
                          + v27.f32[1])
                  + v27.f32[2])
          + v27.f32[3];
      v22 += 2;
      v23 -= 8;
    }
    while (v23);
    if (v7 == v17) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v17 = 0;
    float v18 = 0.0;
  }
  uint64_t v28 = v7 - v17;
  float64x2_t v29 = &a1[2].f32[v17];
  do
  {
    float v30 = *v29++;
    float v18 = v18 + (float)((float)(v30 - v4.n128_f32[0]) * (float)(v30 - v4.n128_f32[0]));
    --v28;
  }
  while (v28);
LABEL_12:
  __n128 v43 = v4;
  unint64_t v44 = (unint64_t)v10;
  if (v18 <= 0.0) {
    float v20 = NAN;
  }
  else {
    float v20 = sqrtf(v18 / (float)(v7 - 1));
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_22081C054(0, 1, 1, MEMORY[0x263F8EE78]);
  uint64_t v31 = 0;
  unint64_t v32 = *((void *)v19 + 2);
  do
  {
    __int32 v33 = a1[2].i32[v31];
    unint64_t v34 = *((void *)v19 + 3);
    if (v32 >= v34 >> 1) {
      uint64_t v19 = sub_22081C054((char *)(v34 > 1), v32 + 1, 1, v19);
    }
    ++v31;
    *((void *)v19 + 2) = v32 + 1;
    *(_DWORD *)&v19[4 * v32++ + 32] = v33;
  }
  while (v7 != v31);
  swift_bridgeObjectRelease();
LABEL_20:
  __n128 v45 = v19;
  swift_bridgeObjectRetain();
  sub_2209308C8((uint64_t *)&v45, (uint64_t (*)(uint64_t))sub_22089E47C, sub_220930F9C);
  swift_bridgeObjectRelease();
  uint64_t v35 = (uint64_t)v45;
  sub_22092ED78((uint64_t)v45, 0.25);
  int v37 = v36;
  sub_22092ED78(v35, 0.5);
  int v39 = v38;
  sub_22092ED78(v35, 0.75);
  int v41 = v40;
  swift_release();
  *(void *)a3 = v7;
  *(void *)(a3 + 8) = a2;
  *(void *)(a3 + 36) = v44;
  *(_DWORD *)(a3 + 16) = v39;
  *(_DWORD *)(a3 + 20) = v37;
  __n128 result = v43;
  *(_DWORD *)(a3 + 28) = v43.n128_u32[0];
  *(float *)(a3 + 32) = v20;
  *(_DWORD *)(a3 + 24) = v41;
  return result;
}

uint64_t sub_22092EB50(uint64_t result, double a2)
{
  if (a2 < 0.0 || a2 > 1.0) {
    goto LABEL_24;
  }
  unint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    double v4 = (double)(uint64_t)(v3 - 1) * a2;
    double v5 = trunc(v4);
    double v6 = floor(v4);
    double v7 = ceil(v4);
    if (v4 >= 0.0) {
      double v8 = v7;
    }
    else {
      double v8 = v6;
    }
    if (v5 == v8)
    {
      __n128 result = sub_220930590((uint64_t)&v9, v4);
      if ((v10 & 1) == 0)
      {
        if (v9 < v3) {
          return result;
        }
        __break(1u);
        goto LABEL_20;
      }
      goto LABEL_23;
    }
    sub_220930590((uint64_t)&v9, v5);
    if (v10) {
      goto LABEL_23;
    }
    if (v9 >= v3)
    {
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    __n128 result = sub_220930590((uint64_t)&v9, v8);
    if (v10)
    {
LABEL_23:
      unint64_t v9 = 0;
      unint64_t v10 = 0xE000000000000000;
      sub_22093EEA0();
      sub_22093E6C0();
      sub_22093E6C0();
      sub_22093E6C0();
      sub_22093E6C0();
LABEL_24:
      __n128 result = sub_22093F090();
      __break(1u);
      return result;
    }
    if (v9 >= v3)
    {
LABEL_21:
      __break(1u);
      goto LABEL_24;
    }
  }
  return result;
}

uint64_t sub_22092ED78(uint64_t result, float a2)
{
  if (a2 < 0.0 || a2 > 1.0) {
    goto LABEL_24;
  }
  unint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    float v4 = (float)(uint64_t)(v3 - 1) * a2;
    float v5 = truncf(v4);
    float v6 = floorf(v4);
    float v7 = ceilf(v4);
    if (v4 >= 0.0) {
      float v8 = v7;
    }
    else {
      float v8 = v6;
    }
    if (v5 == v8)
    {
      __n128 result = sub_220930718((uint64_t)&v9, v4);
      if ((v10 & 1) == 0)
      {
        if (v9 < v3) {
          return result;
        }
        __break(1u);
        goto LABEL_20;
      }
      goto LABEL_23;
    }
    sub_220930718((uint64_t)&v9, v5);
    if (v10) {
      goto LABEL_23;
    }
    if (v9 >= v3)
    {
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    __n128 result = sub_220930718((uint64_t)&v9, v8);
    if (v10)
    {
LABEL_23:
      unint64_t v9 = 0;
      unint64_t v10 = 0xE000000000000000;
      sub_22093EEA0();
      sub_22093E6C0();
      sub_22093E6C0();
      sub_22093E6C0();
      sub_22093E6C0();
LABEL_24:
      __n128 result = sub_22093F090();
      __break(1u);
      return result;
    }
    if (v9 >= v3)
    {
LABEL_21:
      __break(1u);
      goto LABEL_24;
    }
  }
  return result;
}

uint64_t sub_22092EFA0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v10 = result;
    MEMORY[0x270FA5388](result);
    uint64_t v31 = v11;
    v26[0] = v12;
    v26[1] = v13;
    uint64_t v27 = v14;
    uint64_t v28 = v15;
    uint64_t v29 = v16;
    uint64_t v17 = sub_2208BB82C((uint64_t)sub_2209090EC, (uint64_t)&v25, 0, a2);
    uint64_t v18 = a2 - *(void *)(v17 + 16);
    uint64_t v32 = v17;
    MEMORY[0x270FA5388](v17);
    uint64_t v27 = a6;
    uint64_t v28 = a7;
    uint64_t v29 = v10;
    uint64_t v30 = a2;
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B18);
    unint64_t v20 = sub_220843214();
    uint64_t v22 = sub_2208F0D18((void (*)(char *, char *))sub_2208431FC, (uint64_t)v26, v19, a6, MEMORY[0x263F8E628], v20, MEMORY[0x263F8E658], v21);
    swift_bridgeObjectRelease();
    uint64_t v32 = v22;
    uint64_t v23 = sub_22093E900();
    uint64_t WitnessTable = swift_getWitnessTable();
    sub_2208F9F30((uint64_t)&v32, v18, a6, v23, a7, WitnessTable, v31);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_22092F158(uint64_t a1, uint64_t a2)
{
  return sub_22092EFA0(a1, a2, v2[4], v2[5], v2[6], v2[2], v2[3]);
}

uint64_t sub_22092F17C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  uint64_t v38 = a2;
  long long v11 = a3[1];
  long long v35 = *a3;
  long long v36 = v11;
  uint64_t v37 = *((void *)a3 + 4);
  long long v12 = a3[1];
  long long v30 = *a3;
  long long v31 = v12;
  uint64_t v32 = *((void *)a3 + 4);
  type metadata accessor for Column();
  swift_getWitnessTable();
  sub_22093F3B0();
  sub_22093F380();
  uint64_t v27 = a4;
  uint64_t v28 = a5;
  uint64_t v29 = a3;
  uint64_t v13 = sub_2208BB82C((uint64_t)sub_220908D98, (uint64_t)v26, v33, v34);
  long long v30 = v35;
  long long v31 = v36;
  uint64_t v32 = v37;
  uint64_t result = sub_22093F380();
  uint64_t v15 = v34 - v33;
  if (__OFSUB__(v34, v33))
  {
    __break(1u);
  }
  else
  {
    uint64_t v16 = *(void *)(v13 + 16);
    uint64_t v17 = v15 - v16;
    if (!__OFSUB__(v15, v16))
    {
      uint64_t v25 = a6;
      *(void *)&long long v30 = v13;
      MEMORY[0x270FA5388](result);
      _OWORD v24[2] = a4;
      v24[3] = a5;
      void v24[4] = a1;
      v24[5] = v38;
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B18);
      unint64_t v19 = sub_220843214();
      uint64_t v21 = sub_2208F0D18((void (*)(char *, char *))sub_2208431FC, (uint64_t)v24, v18, a4, MEMORY[0x263F8E628], v19, MEMORY[0x263F8E658], v20);
      swift_bridgeObjectRelease();
      *(void *)&long long v30 = v21;
      uint64_t v22 = sub_22093E900();
      uint64_t WitnessTable = swift_getWitnessTable();
      sub_2208F9F30((uint64_t)&v30, v17, a4, v22, a5, WitnessTable, v25);
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_22092F3B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  unint64_t v9 = a3;
  uint64_t v31 = a2;
  uint64_t v30 = a1;
  uint64_t v32 = a6;
  long long v52 = *a3;
  uint64_t v10 = *((void *)a3 + 3);
  uint64_t v53 = *((void *)a3 + 2);
  uint64_t v11 = *((void *)a3 + 4);
  unsigned __int8 v12 = *((unsigned char *)a3 + 40);
  uint64_t v13 = sub_2208EE720(v10, v11, v12);
  uint64_t v35 = a4;
  uint64_t v33 = a5;
  uint64_t v36 = a5;
  uint64_t v37 = v9;
  uint64_t v54 = sub_22091B844((uint64_t)sub_2209090D0, (uint64_t)v34, v13);
  uint64_t v29 = v6;
  long long v38 = v52;
  uint64_t v39 = v53;
  uint64_t v40 = v10;
  uint64_t v41 = v11;
  unsigned __int8 v42 = v12;
  type metadata accessor for Column();
  swift_getWitnessTable();
  type metadata accessor for _DiscontiguousSlice();
  swift_getWitnessTable();
  sub_22093EBA0();
  uint64_t v14 = v47;
  uint64_t v15 = v48;
  LOBYTE(v9) = v49;
  long long v38 = v45;
  uint64_t v39 = v46;
  uint64_t v40 = v47;
  uint64_t v41 = v48;
  unsigned __int8 v42 = v49;
  long long v43 = v50;
  long long v44 = v51;
  sub_22093E3B0();
  swift_getWitnessTable();
  uint64_t v16 = sub_22093EB20();
  uint64_t v17 = v54;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = sub_22080B6B4(v14, v15, (char)v9);
  uint64_t v19 = *(void *)(v17 + 16);
  uint64_t v20 = v16 - v19;
  if (__OFSUB__(v16, v19))
  {
    __break(1u);
  }
  else
  {
    *(void *)&long long v45 = v17;
    MEMORY[0x270FA5388](result);
    uint64_t v21 = v33;
    v28[2] = a4;
    void v28[3] = v33;
    v28[4] = v30;
    v28[5] = v31;
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B18);
    unint64_t v23 = sub_220843214();
    uint64_t v25 = sub_2208F0D18((void (*)(char *, char *))sub_2208431FC, (uint64_t)v28, v22, a4, MEMORY[0x263F8E628], v23, MEMORY[0x263F8E658], v24);
    swift_bridgeObjectRelease();
    *(void *)&long long v45 = v25;
    uint64_t v26 = sub_22093E900();
    uint64_t WitnessTable = swift_getWitnessTable();
    sub_2208F9F30((uint64_t)&v45, v20, a4, v26, v21, WitnessTable, v32);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t FilledColumn<>.numericSummary()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v19 = a3;
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v10 = (char *)&v18 - v9;
  sub_22093EAB0();
  uint64_t v21 = v6;
  uint64_t v22 = v5;
  uint64_t v23 = a2;
  uint64_t v24 = v3;
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v14 = sub_2208F0D18((void (*)(char *, char *))sub_220840800, (uint64_t)v20, AssociatedTypeWitness, v11, MEMORY[0x263F8E628], AssociatedConformanceWitness, MEMORY[0x263F8E658], v13);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
  uint64_t v25 = v14;
  uint64_t v15 = sub_22093E900();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_2208F9F30((uint64_t)&v25, 0, v11, v15, a2, WitnessTable, v19);
  return swift_bridgeObjectRelease();
}

uint64_t FilledColumn<>.numericSummary()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v11 = &v18[-v10];
  sub_22093EAB0();
  uint64_t v19 = v6;
  uint64_t v20 = v7;
  uint64_t v21 = a2;
  uint64_t v22 = v3;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v14 = sub_2208F0D18((void (*)(char *, char *))sub_2209303B8, (uint64_t)v18, AssociatedTypeWitness, MEMORY[0x263F8D538], MEMORY[0x263F8E628], AssociatedConformanceWitness, MEMORY[0x263F8E658], v13);
  v15.n128_f64[0] = (*(double (**)(unsigned char *, uint64_t))(v9 + 8))(v11, AssociatedTypeWitness);
  sub_22092E564(v14, 0, a3, v15, v16);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22092FA70@<X0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v7 = (char *)v13 - v6;
  uint64_t v8 = type metadata accessor for FilledColumn();
  FilledColumn.subscript.getter(a1, v8, (uint64_t)v7);
  if (sub_22093EDC0() < 65)
  {
    char v11 = sub_22093EDD0();
    uint64_t v12 = sub_22093EDB0();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, AssociatedTypeWitness);
    if (v11) {
      double v10 = (double)v12;
    }
    else {
      double v10 = (double)(unint64_t)v12;
    }
  }
  else
  {
    sub_2208B8B00();
    sub_220838AEC();
    sub_22093E260();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, AssociatedTypeWitness);
    double v10 = *(double *)&v13[3];
  }
  *a2 = v10;
  return result;
}

uint64_t sub_22092FC40@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X8>)
{
  uint64_t v28 = result;
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = a2;
    MEMORY[0x270FA5388](result);
    _OWORD v25[2] = v9;
    v25[3] = v10;
    void v25[4] = v11;
    v25[5] = v12;
    v25[6] = v13;
    uint64_t v14 = sub_2208BB82C((uint64_t)sub_2209090EC, (uint64_t)v25, 0, v7);
    int64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      uint64_t v26 = a5;
      uint64_t v27 = a4;
      uint64_t v31 = MEMORY[0x263F8EE78];
      sub_220826EF8(0, v15, 0);
      uint64_t v16 = 0;
      uint64_t v17 = v31;
      do
      {
        uint64_t v18 = v14;
        uint64_t v29 = *(void *)(v14 + 8 * v16 + 32);
        uint64_t v19 = v7;
        sub_2209303DC((uint64_t)&v29, a3, (double *)&v30);
        uint64_t v20 = v30;
        uint64_t v31 = v17;
        unint64_t v22 = *(void *)(v17 + 16);
        unint64_t v21 = *(void *)(v17 + 24);
        if (v22 >= v21 >> 1)
        {
          sub_220826EF8((char *)(v21 > 1), v22 + 1, 1);
          uint64_t v17 = v31;
        }
        ++v16;
        *(void *)(v17 + 16) = v22 + 1;
        *(void *)(v17 + 8 * v22 + 32) = v20;
        uint64_t v7 = v19;
        uint64_t v14 = v18;
      }
      while (v15 != v16);
      swift_bridgeObjectRelease();
      a5 = v26;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v17 = MEMORY[0x263F8EE78];
    }
    sub_22092E564(v17, v7 - v15, a5, v23, v24);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_22092FE04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_22092FC40(a1, a2, *(void *)(v3 + 16), *(void *)(v3 + 24), a3);
}

uint64_t sub_22092FE28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  return sub_22092F17C(a1, a2, *(long long **)(v3 + 32), *(void *)(v3 + 16), *(void *)(v3 + 24), a3);
}

uint64_t sub_22092FE48@<X0>(long long *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  long long v8 = a1[1];
  long long v34 = *a1;
  long long v35 = v8;
  uint64_t v36 = *((void *)a1 + 4);
  long long v9 = a1[1];
  long long v29 = *a1;
  long long v30 = v9;
  uint64_t v31 = *((void *)a1 + 4);
  type metadata accessor for Column();
  swift_getWitnessTable();
  sub_22093F3B0();
  sub_22093F380();
  uint64_t v25 = a2;
  uint64_t v26 = a3;
  uint64_t v27 = a1;
  uint64_t v10 = sub_2208BB82C((uint64_t)sub_220908D98, (uint64_t)v24, v32, v33);
  long long v29 = v34;
  long long v30 = v35;
  uint64_t v31 = v36;
  uint64_t result = sub_22093F380();
  uint64_t v12 = v33 - v32;
  if (__OFSUB__(v33, v32))
  {
    __break(1u);
    goto LABEL_12;
  }
  int64_t v13 = *(void *)(v10 + 16);
  uint64_t v14 = v12 - v13;
  if (__OFSUB__(v12, v13))
  {
LABEL_12:
    __break(1u);
    return result;
  }
  if (v13)
  {
    uint64_t v22 = v12 - v13;
    uint64_t v23 = a4;
    *(void *)&long long v29 = MEMORY[0x263F8EE78];
    sub_220826EF8(0, v13, 0);
    uint64_t v15 = 0;
    uint64_t v16 = v29;
    do
    {
      uint64_t v28 = *(void *)(v10 + 8 * v15 + 32);
      sub_2209303DC((uint64_t)&v28, a2, (double *)&v32);
      uint64_t v17 = v32;
      *(void *)&long long v29 = v16;
      unint64_t v19 = *(void *)(v16 + 16);
      unint64_t v18 = *(void *)(v16 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_220826EF8((char *)(v18 > 1), v19 + 1, 1);
        uint64_t v16 = v29;
      }
      ++v15;
      *(void *)(v16 + 16) = v19 + 1;
      *(void *)(v16 + 8 * v19 + 32) = v17;
    }
    while (v13 != v15);
    swift_bridgeObjectRelease();
    uint64_t v14 = v22;
    a4 = v23;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v16 = MEMORY[0x263F8EE78];
  }
  sub_22092E564(v16, v14, a4, v20, v21);
  return swift_bridgeObjectRelease();
}

uint64_t sub_220930078@<X0>(uint64_t a1@<X8>)
{
  return sub_22092FE48(*(long long **)(v1 + 32), *(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_220930098@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  return sub_22092F3B0(a1, a2, *(long long **)(v3 + 32), *(void *)(v3 + 16), *(void *)(v3 + 24), a3);
}

uint64_t sub_2209300B8@<X0>(long long *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  long long v48 = *a1;
  uint64_t v7 = *((void *)a1 + 3);
  uint64_t v49 = *((void *)a1 + 2);
  uint64_t v8 = *((void *)a1 + 4);
  unsigned __int8 v9 = *((unsigned char *)a1 + 40);
  uint64_t v10 = sub_2208EE720(v7, v8, v9);
  uint64_t v30 = a2;
  uint64_t v31 = a3;
  uint64_t v32 = a1;
  uint64_t v11 = sub_22091B844((uint64_t)sub_2209090D0, (uint64_t)v29, v10);
  long long v34 = v48;
  uint64_t v35 = v49;
  uint64_t v36 = v7;
  uint64_t v37 = v8;
  unsigned __int8 v38 = v9;
  type metadata accessor for Column();
  swift_getWitnessTable();
  type metadata accessor for _DiscontiguousSlice();
  swift_getWitnessTable();
  sub_22093EBA0();
  uint64_t v12 = v43;
  uint64_t v13 = v44;
  char v27 = v45;
  long long v34 = v41;
  uint64_t v35 = v42;
  uint64_t v36 = v43;
  uint64_t v37 = v44;
  unsigned __int8 v38 = v45;
  long long v39 = v46;
  long long v40 = v47;
  sub_22093E3B0();
  swift_getWitnessTable();
  uint64_t v14 = sub_22093EB20();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = sub_22080B6B4(v12, v13, v27);
  int64_t v16 = *(void *)(v11 + 16);
  uint64_t v17 = v14 - v16;
  if (__OFSUB__(v14, v16))
  {
    __break(1u);
  }
  else
  {
    if (v16)
    {
      uint64_t v28 = v14 - v16;
      *(void *)&long long v41 = MEMORY[0x263F8EE78];
      sub_220826EF8(0, v16, 0);
      uint64_t v18 = 0;
      uint64_t v19 = v41;
      do
      {
        uint64_t v33 = *(void *)(v11 + 8 * v18 + 32);
        sub_2209303DC((uint64_t)&v33, a2, (double *)&v34);
        uint64_t v20 = v34;
        *(void *)&long long v41 = v19;
        unint64_t v22 = *(void *)(v19 + 16);
        unint64_t v21 = *(void *)(v19 + 24);
        if (v22 >= v21 >> 1)
        {
          sub_220826EF8((char *)(v21 > 1), v22 + 1, 1);
          uint64_t v19 = v41;
        }
        ++v18;
        *(void *)(v19 + 16) = v22 + 1;
        *(void *)(v19 + 8 * v22 + 32) = v20;
      }
      while (v16 != v18);
      swift_bridgeObjectRelease();
      uint64_t v25 = a4;
      uint64_t v17 = v28;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v19 = MEMORY[0x263F8EE78];
      uint64_t v25 = a4;
    }
    sub_22092E564(v19, v17, v25, v23, v24);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_220930398@<X0>(uint64_t a1@<X8>)
{
  return sub_2209300B8(*(long long **)(v1 + 32), *(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_2209303B8@<X0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  return sub_22092FA70(a1, a2);
}

uint64_t sub_2209303DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, double *a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 - 8);
  uint64_t v6 = (void *)MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v10 + *(void *)(v9 + 72) * *v6, v11);
  if (sub_22093EDC0() < 65)
  {
    char v14 = sub_22093EDD0();
    uint64_t v15 = sub_22093EDB0();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, a2);
    if (v14) {
      double v13 = (double)v15;
    }
    else {
      double v13 = (double)(unint64_t)v15;
    }
  }
  else
  {
    sub_2208B8B00();
    sub_220838AEC();
    sub_22093E260();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, a2);
    double v13 = *(double *)&v16[1];
  }
  *a3 = v13;
  return result;
}

BOOL sub_220930590(uint64_t a1, double a2)
{
  uint64_t v4 = (*(void *)&a2 >> 52) & 0x7FFLL;
  unint64_t v5 = *(void *)&a2 & 0xFFFFFFFFFFFFFLL;
  uint64_t v6 = v4 | *(void *)&a2 & 0xFFFFFFFFFFFFFLL;
  if (!v6)
  {
    uint64_t v12 = 0;
    BOOL result = 1;
    goto LABEL_25;
  }
  if (v4 == 2047) {
    goto LABEL_28;
  }
  uint64_t v7 = sub_22093E970();
  if (v7 > 63) {
    goto LABEL_28;
  }
  uint64_t v8 = v7;
  uint64_t v9 = sub_22093E960();
  BOOL result = v8 >= v9;
  uint64_t v11 = v9 + __clz(__rbit64(v5));
  uint64_t v12 = v8 - v11;
  if (__OFSUB__(v8, v11))
  {
    __break(1u);
LABEL_27:
    if (a2 < 0.0)
    {
LABEL_36:
      LOBYTE(v6) = 0;
      uint64_t v12 = 0x8000000000000000;
      goto LABEL_25;
    }
LABEL_28:
    uint64_t v12 = 0;
    BOOL result = 0;
    LOBYTE(v6) = 1;
    goto LABEL_25;
  }
  if (v11 > 63)
  {
    if (v12 < -64 || v12 > 64) {
      goto LABEL_11;
    }
  }
  else if (v12 < -64 || v12 > 64)
  {
    goto LABEL_11;
  }
  if (v12 < 0) {
    goto LABEL_32;
  }
  if ((unint64_t)v12 < 0x40)
  {
    unint64_t v14 = v5 << v12;
    if (v8 != 63) {
      goto LABEL_17;
    }
LABEL_34:
    if (a2 < 0.0 && !v14) {
      goto LABEL_36;
    }
    goto LABEL_28;
  }
LABEL_11:
  if (v8 == 63) {
    goto LABEL_27;
  }
  uint64_t v13 = 0;
  unint64_t v14 = 0;
  if (v8 < 0) {
    goto LABEL_20;
  }
LABEL_19:
  uint64_t v13 = 1 << v8;
LABEL_20:
  while (1)
  {
    uint64_t v12 = v14 | v13;
    if (a2 >= 0.0) {
      break;
    }
    if ((v12 & 0x8000000000000000) == 0)
    {
      LOBYTE(v6) = 0;
      uint64_t v12 = -v12;
      goto LABEL_25;
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    if ((unint64_t)v12 <= 0xFFFFFFFFFFFFFFC0) {
      goto LABEL_11;
    }
    unint64_t v14 = v5 >> -(char)v12;
    if (v8 == 63) {
      goto LABEL_34;
    }
LABEL_17:
    if ((v8 & 0x8000000000000000) == 0) {
      goto LABEL_19;
    }
    uint64_t v13 = 0;
  }
  if (v12 < 0) {
    goto LABEL_31;
  }
  LOBYTE(v6) = 0;
LABEL_25:
  *(void *)a1 = v12;
  *(unsigned char *)(a1 + 8) = v6;
  return result;
}

BOOL sub_220930718(uint64_t a1, float a2)
{
  int v4 = (LODWORD(a2) >> 23);
  unint64_t v5 = LODWORD(a2) & 0x7FFFFF;
  char v6 = v4 | LOBYTE(a2);
  if (!(v4 | v5))
  {
    unint64_t v14 = 0;
    BOOL result = 1;
    goto LABEL_26;
  }
  if (v4 == 255 || (uint64_t v7 = sub_22093E990(), v7 > 63))
  {
LABEL_38:
    unint64_t v14 = 0;
    BOOL result = 0;
    char v6 = 1;
    goto LABEL_26;
  }
  uint64_t v8 = v7;
  uint64_t v9 = sub_22093E980();
  BOOL result = v8 >= v9;
  uint64_t v11 = v9 + __clz(__rbit32(v5));
  uint64_t v12 = v8 - v11;
  if (__OFSUB__(v8, v11))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v11 > 63)
  {
    if ((unint64_t)(v12 - 33) < 0xFFFFFFFFFFFFFFBFLL) {
      goto LABEL_12;
    }
    if (v12 < 0)
    {
      if ((unint64_t)v12 <= 0xFFFFFFFFFFFFFFE0) {
        LODWORD(v12) = 0;
      }
      else {
        LODWORD(v12) = v5 >> (v11 - v8);
      }
      goto LABEL_16;
    }
    if ((unint64_t)v12 >= 0x20) {
LABEL_12:
    }
      LODWORD(v12) = 0;
    else {
      LODWORD(v12) = v5 << v12;
    }
LABEL_16:
    uint64_t v12 = v12;
LABEL_17:
    if (v8 != 63)
    {
      if (v8 < 0)
      {
        uint64_t v13 = 0;
        goto LABEL_21;
      }
      goto LABEL_20;
    }
LABEL_31:
    if (a2 >= 0.0 || v12) {
      goto LABEL_38;
    }
    goto LABEL_33;
  }
  if (v12 >= -64 && v12 <= 64)
  {
    if (v12 < 0)
    {
      if ((unint64_t)v12 <= 0xFFFFFFFFFFFFFFC0) {
        goto LABEL_8;
      }
      uint64_t v12 = v5 >> (v11 - v8);
    }
    else
    {
      if ((unint64_t)v12 >= 0x40) {
        goto LABEL_8;
      }
      uint64_t v12 = v5 << v12;
    }
    goto LABEL_17;
  }
LABEL_8:
  if (v8 == 63) {
    goto LABEL_37;
  }
  uint64_t v13 = 0;
  uint64_t v12 = 0;
  if ((v8 & 0x8000000000000000) == 0) {
LABEL_20:
  }
    uint64_t v13 = 1 << v8;
LABEL_21:
  unint64_t v14 = v12 | v13;
  if (a2 >= 0.0)
  {
    if ((v14 & 0x8000000000000000) == 0)
    {
      char v6 = 0;
      goto LABEL_26;
    }
    goto LABEL_36;
  }
  if ((v14 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    if (a2 >= 0.0) {
      goto LABEL_38;
    }
LABEL_33:
    char v6 = 0;
    unint64_t v14 = 0x8000000000000000;
    goto LABEL_26;
  }
  char v6 = 0;
  unint64_t v14 = -(uint64_t)v14;
LABEL_26:
  *(void *)a1 = v14;
  *(unsigned char *)(a1 + 8) = v6;
  return result;
}

uint64_t sub_2209308C8(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void *))
{
  uint64_t v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v6 = a2(v6);
  }
  uint64_t v7 = *(void *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  uint64_t result = a3(v9);
  *a1 = v6;
  return result;
}

uint64_t sub_22093094C(void *a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_22093F170();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v78 = 0;
      uint64_t v79 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        double v81 = *(double *)(v79 + 8 * i);
        uint64_t v82 = v78;
        do
        {
          uint64_t v83 = v79 + 8 * v82;
          if (v81 >= *(double *)v83) {
            break;
          }
          if (!v79) {
            goto LABEL_141;
          }
          *(void *)(v83 + 8) = *(void *)v83;
          *(double *)(v79 + 8 * v82--) = v81;
        }
        while (v82 != -1);
        ++v78;
      }
    }
  }
  else
  {
    if (v3 >= 0) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = v3 + 1;
    }
    if (v3 < -1) {
      goto LABEL_136;
    }
    uint64_t v95 = result;
    uint64_t v96 = v3;
    if (v3 > 1)
    {
      uint64_t v6 = v5 >> 1;
      uint64_t result = sub_22093E8A0();
      *(void *)(result + 16) = v6;
      uint64_t v3 = v96;
      uint64_t v94 = result;
      uint64_t v98 = (double *)(result + 32);
LABEL_13:
      uint64_t v8 = 0;
      uint64_t v9 = *v2;
      uint64_t v92 = v2;
      uint64_t v93 = *v2 - 8;
      uint64_t v10 = MEMORY[0x263F8EE78];
      uint64_t v97 = *v2;
      while (1)
      {
        uint64_t v12 = v8++;
        if (v8 < v3)
        {
          double v13 = *(double *)(v9 + 8 * v8);
          double v14 = *(double *)(v9 + 8 * v12);
          uint64_t v8 = v12 + 2;
          if (v12 + 2 < v3)
          {
            double v15 = v13;
            while (1)
            {
              double v16 = v15;
              double v15 = *(double *)(v9 + 8 * v8);
              if (v13 < v14 == v15 >= v16) {
                break;
              }
              if (v3 == ++v8)
              {
                uint64_t v8 = v3;
                break;
              }
            }
          }
          if (v13 < v14)
          {
            if (v8 < v12) {
              goto LABEL_138;
            }
            if (v12 < v8)
            {
              uint64_t v17 = (uint64_t *)(v93 + 8 * v8);
              uint64_t v18 = v8;
              uint64_t v19 = v12;
              uint64_t v20 = (uint64_t *)(v9 + 8 * v12);
              do
              {
                if (v19 != --v18)
                {
                  if (!v9) {
                    goto LABEL_144;
                  }
                  uint64_t v21 = *v20;
                  *uint64_t v20 = *v17;
                  *uint64_t v17 = v21;
                }
                ++v19;
                --v17;
                ++v20;
              }
              while (v19 < v18);
            }
          }
        }
        if (v8 < v3)
        {
          if (__OFSUB__(v8, v12)) {
            goto LABEL_135;
          }
          if (v8 - v12 < v95)
          {
            uint64_t v22 = v12 + v95;
            if (__OFADD__(v12, v95)) {
              goto LABEL_139;
            }
            if (v22 >= v3) {
              uint64_t v22 = v3;
            }
            if (v22 < v12)
            {
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
              return result;
            }
            if (v8 != v22)
            {
              __n128 v23 = (double *)(v93 + 8 * v8);
              do
              {
                double v24 = *(double *)(v9 + 8 * v8);
                uint64_t v25 = v12;
                uint64_t v26 = v23;
                do
                {
                  double v27 = *v26;
                  if (v24 >= *v26) {
                    break;
                  }
                  if (!v9) {
                    goto LABEL_142;
                  }
                  *uint64_t v26 = v24;
                  v26[1] = v27;
                  --v26;
                  ++v25;
                }
                while (v8 != v25);
                ++v8;
                ++v23;
              }
              while (v8 != v22);
              uint64_t v8 = v22;
            }
          }
        }
        if (v8 < v12) {
          goto LABEL_130;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_22081B3EC(0, *(void *)(v10 + 16) + 1, 1, (char *)v10);
          uint64_t v10 = result;
        }
        unint64_t v29 = *(void *)(v10 + 16);
        unint64_t v28 = *(void *)(v10 + 24);
        unint64_t v11 = v29 + 1;
        uint64_t v9 = v97;
        if (v29 >= v28 >> 1)
        {
          uint64_t result = (uint64_t)sub_22081B3EC((char *)(v28 > 1), v29 + 1, 1, (char *)v10);
          uint64_t v9 = v97;
          uint64_t v10 = result;
        }
        *(void *)(v10 + 16) = v11;
        uint64_t v30 = v10 + 32;
        uint64_t v31 = (uint64_t *)(v10 + 32 + 16 * v29);
        *uint64_t v31 = v12;
        v31[1] = v8;
        if (v29)
        {
          while (1)
          {
            unint64_t v32 = v11 - 1;
            if (v11 >= 4)
            {
              unint64_t v37 = v30 + 16 * v11;
              uint64_t v38 = *(void *)(v37 - 64);
              uint64_t v39 = *(void *)(v37 - 56);
              BOOL v43 = __OFSUB__(v39, v38);
              uint64_t v40 = v39 - v38;
              if (v43) {
                goto LABEL_119;
              }
              uint64_t v42 = *(void *)(v37 - 48);
              uint64_t v41 = *(void *)(v37 - 40);
              BOOL v43 = __OFSUB__(v41, v42);
              uint64_t v35 = v41 - v42;
              char v36 = v43;
              if (v43) {
                goto LABEL_120;
              }
              unint64_t v44 = v11 - 2;
              char v45 = (uint64_t *)(v30 + 16 * (v11 - 2));
              uint64_t v47 = *v45;
              uint64_t v46 = v45[1];
              BOOL v43 = __OFSUB__(v46, v47);
              uint64_t v48 = v46 - v47;
              if (v43) {
                goto LABEL_121;
              }
              BOOL v43 = __OFADD__(v35, v48);
              uint64_t v49 = v35 + v48;
              if (v43) {
                goto LABEL_123;
              }
              if (v49 >= v40)
              {
                uint64_t v67 = (uint64_t *)(v30 + 16 * v32);
                uint64_t v69 = *v67;
                uint64_t v68 = v67[1];
                BOOL v43 = __OFSUB__(v68, v69);
                uint64_t v70 = v68 - v69;
                if (v43) {
                  goto LABEL_129;
                }
                BOOL v60 = v35 < v70;
                goto LABEL_83;
              }
            }
            else
            {
              if (v11 != 3)
              {
                uint64_t v61 = *(void *)(v10 + 32);
                uint64_t v62 = *(void *)(v10 + 40);
                BOOL v43 = __OFSUB__(v62, v61);
                uint64_t v54 = v62 - v61;
                char v55 = v43;
                goto LABEL_77;
              }
              uint64_t v34 = *(void *)(v10 + 32);
              uint64_t v33 = *(void *)(v10 + 40);
              BOOL v43 = __OFSUB__(v33, v34);
              uint64_t v35 = v33 - v34;
              char v36 = v43;
            }
            if (v36) {
              goto LABEL_122;
            }
            unint64_t v44 = v11 - 2;
            long long v50 = (uint64_t *)(v30 + 16 * (v11 - 2));
            uint64_t v52 = *v50;
            uint64_t v51 = v50[1];
            BOOL v53 = __OFSUB__(v51, v52);
            uint64_t v54 = v51 - v52;
            char v55 = v53;
            if (v53) {
              goto LABEL_124;
            }
            uint64_t v56 = (uint64_t *)(v30 + 16 * v32);
            uint64_t v58 = *v56;
            uint64_t v57 = v56[1];
            BOOL v43 = __OFSUB__(v57, v58);
            uint64_t v59 = v57 - v58;
            if (v43) {
              goto LABEL_126;
            }
            if (__OFADD__(v54, v59)) {
              goto LABEL_128;
            }
            if (v54 + v59 >= v35)
            {
              BOOL v60 = v35 < v59;
LABEL_83:
              if (v60) {
                unint64_t v32 = v44;
              }
              goto LABEL_85;
            }
LABEL_77:
            if (v55) {
              goto LABEL_125;
            }
            uint64_t v63 = (uint64_t *)(v30 + 16 * v32);
            uint64_t v65 = *v63;
            uint64_t v64 = v63[1];
            BOOL v43 = __OFSUB__(v64, v65);
            uint64_t v66 = v64 - v65;
            if (v43) {
              goto LABEL_127;
            }
            if (v66 < v54) {
              goto LABEL_15;
            }
LABEL_85:
            unint64_t v71 = v32 - 1;
            if (v32 - 1 >= v11)
            {
              __break(1u);
LABEL_116:
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
              goto LABEL_140;
            }
            if (!v9) {
              goto LABEL_143;
            }
            char v72 = (uint64_t *)(v30 + 16 * v71);
            uint64_t v73 = *v72;
            uint64_t v74 = v30;
            uint64_t v75 = (void *)(v30 + 16 * v32);
            uint64_t v76 = v75[1];
            uint64_t result = sub_2209315EC((double *)(v9 + 8 * *v72), (double *)(v9 + 8 * *v75), v9 + 8 * v76, v98);
            if (v1) {
              goto LABEL_113;
            }
            if (v76 < v73) {
              goto LABEL_116;
            }
            if (v32 > *(void *)(v10 + 16)) {
              goto LABEL_117;
            }
            *char v72 = v73;
            *(void *)(v74 + 16 * v71 + 8) = v76;
            unint64_t v77 = *(void *)(v10 + 16);
            if (v32 >= v77) {
              goto LABEL_118;
            }
            unint64_t v11 = v77 - 1;
            uint64_t result = (uint64_t)memmove(v75, v75 + 2, 16 * (v77 - 1 - v32));
            uint64_t v30 = v74;
            *(void *)(v10 + 16) = v77 - 1;
            uint64_t v9 = v97;
            if (v77 <= 2) {
              goto LABEL_15;
            }
          }
        }
        unint64_t v11 = 1;
LABEL_15:
        uint64_t v3 = v96;
        if (v8 >= v96)
        {
          uint64_t v7 = v94;
          uint64_t v2 = v92;
          goto LABEL_102;
        }
      }
    }
    uint64_t v7 = MEMORY[0x263F8EE78];
    uint64_t v98 = (double *)(MEMORY[0x263F8EE78] + 32);
    if (v3 == 1)
    {
      uint64_t v94 = MEMORY[0x263F8EE78];
      goto LABEL_13;
    }
    unint64_t v11 = *(void *)(MEMORY[0x263F8EE78] + 16);
    uint64_t v10 = MEMORY[0x263F8EE78];
LABEL_102:
    uint64_t v94 = v7;
    if (v11 >= 2)
    {
      uint64_t v84 = *v2;
      do
      {
        unint64_t v85 = v11 - 2;
        if (v11 < 2) {
          goto LABEL_131;
        }
        if (!v84) {
          goto LABEL_145;
        }
        uint64_t v86 = v10;
        uint64_t v87 = v10 + 32;
        uint64_t v88 = *(void *)(v10 + 32 + 16 * v85);
        uint64_t v89 = *(void *)(v10 + 32 + 16 * (v11 - 1) + 8);
        uint64_t result = sub_2209315EC((double *)(v84 + 8 * v88), (double *)(v84 + 8 * *(void *)(v87 + 16 * (v11 - 1))), v84 + 8 * v89, v98);
        if (v1) {
          break;
        }
        if (v89 < v88) {
          goto LABEL_132;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_22080AB70(v86);
          uint64_t v86 = result;
        }
        if (v85 >= *(void *)(v86 + 16)) {
          goto LABEL_133;
        }
        uint64_t v90 = (void *)(v86 + 32 + 16 * v85);
        void *v90 = v88;
        v90[1] = v89;
        unint64_t v91 = *(void *)(v86 + 16);
        if (v11 > v91) {
          goto LABEL_134;
        }
        uint64_t result = (uint64_t)memmove((void *)(v86 + 32 + 16 * (v11 - 1)), (const void *)(v86 + 32 + 16 * v11), 16 * (v91 - v11));
        uint64_t v10 = v86;
        *(void *)(v86 + 16) = v91 - 1;
        unint64_t v11 = v91 - 1;
      }
      while (v91 > 2);
    }
LABEL_113:
    swift_bridgeObjectRelease();
    *(void *)(v94 + 16) = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_220930F9C(void *a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_22093F170();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v78 = 0;
      uint64_t v79 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        float v81 = *(float *)(v79 + 4 * i);
        uint64_t v82 = v78;
        do
        {
          uint64_t v83 = v79 + 4 * v82;
          if (v81 >= *(float *)v83) {
            break;
          }
          if (!v79) {
            goto LABEL_141;
          }
          *(_DWORD *)(v83 + 4) = *(_DWORD *)v83;
          *(float *)(v79 + 4 * v82--) = v81;
        }
        while (v82 != -1);
        ++v78;
      }
    }
  }
  else
  {
    if (v3 >= 0) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = v3 + 1;
    }
    if (v3 < -1) {
      goto LABEL_136;
    }
    uint64_t v95 = result;
    uint64_t v96 = v3;
    if (v3 > 1)
    {
      uint64_t v6 = v5 >> 1;
      uint64_t result = sub_22093E8A0();
      *(void *)(result + 16) = v6;
      uint64_t v3 = v96;
      uint64_t v94 = result;
      uint64_t v98 = (float *)(result + 32);
LABEL_13:
      uint64_t v8 = 0;
      uint64_t v9 = *v2;
      uint64_t v92 = v2;
      uint64_t v93 = *v2 - 4;
      uint64_t v10 = MEMORY[0x263F8EE78];
      uint64_t v97 = *v2;
      while (1)
      {
        uint64_t v12 = v8++;
        if (v8 < v3)
        {
          float v13 = *(float *)(v9 + 4 * v8);
          float v14 = *(float *)(v9 + 4 * v12);
          uint64_t v8 = v12 + 2;
          if (v12 + 2 < v3)
          {
            float v15 = v13;
            while (1)
            {
              float v16 = v15;
              float v15 = *(float *)(v9 + 4 * v8);
              if (v13 < v14 == v15 >= v16) {
                break;
              }
              if (v3 == ++v8)
              {
                uint64_t v8 = v3;
                break;
              }
            }
          }
          if (v13 < v14)
          {
            if (v8 < v12) {
              goto LABEL_138;
            }
            if (v12 < v8)
            {
              uint64_t v17 = (int *)(v93 + 4 * v8);
              uint64_t v18 = v8;
              uint64_t v19 = v12;
              uint64_t v20 = (int *)(v9 + 4 * v12);
              do
              {
                if (v19 != --v18)
                {
                  if (!v9) {
                    goto LABEL_144;
                  }
                  int v21 = *v20;
                  *uint64_t v20 = *v17;
                  *uint64_t v17 = v21;
                }
                ++v19;
                --v17;
                ++v20;
              }
              while (v19 < v18);
            }
          }
        }
        if (v8 < v3)
        {
          if (__OFSUB__(v8, v12)) {
            goto LABEL_135;
          }
          if (v8 - v12 < v95)
          {
            uint64_t v22 = v12 + v95;
            if (__OFADD__(v12, v95)) {
              goto LABEL_139;
            }
            if (v22 >= v3) {
              uint64_t v22 = v3;
            }
            if (v22 < v12)
            {
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
              return result;
            }
            if (v8 != v22)
            {
              __n128 v23 = (float *)(v93 + 4 * v8);
              do
              {
                float v24 = *(float *)(v9 + 4 * v8);
                uint64_t v25 = v12;
                uint64_t v26 = v23;
                do
                {
                  float v27 = *v26;
                  if (v24 >= *v26) {
                    break;
                  }
                  if (!v9) {
                    goto LABEL_142;
                  }
                  *uint64_t v26 = v24;
                  v26[1] = v27;
                  --v26;
                  ++v25;
                }
                while (v8 != v25);
                ++v8;
                ++v23;
              }
              while (v8 != v22);
              uint64_t v8 = v22;
            }
          }
        }
        if (v8 < v12) {
          goto LABEL_130;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_22081B3EC(0, *(void *)(v10 + 16) + 1, 1, (char *)v10);
          uint64_t v10 = result;
        }
        unint64_t v29 = *(void *)(v10 + 16);
        unint64_t v28 = *(void *)(v10 + 24);
        unint64_t v11 = v29 + 1;
        uint64_t v9 = v97;
        if (v29 >= v28 >> 1)
        {
          uint64_t result = (uint64_t)sub_22081B3EC((char *)(v28 > 1), v29 + 1, 1, (char *)v10);
          uint64_t v9 = v97;
          uint64_t v10 = result;
        }
        *(void *)(v10 + 16) = v11;
        uint64_t v30 = v10 + 32;
        uint64_t v31 = (uint64_t *)(v10 + 32 + 16 * v29);
        *uint64_t v31 = v12;
        v31[1] = v8;
        if (v29)
        {
          while (1)
          {
            unint64_t v32 = v11 - 1;
            if (v11 >= 4)
            {
              unint64_t v37 = v30 + 16 * v11;
              uint64_t v38 = *(void *)(v37 - 64);
              uint64_t v39 = *(void *)(v37 - 56);
              BOOL v43 = __OFSUB__(v39, v38);
              uint64_t v40 = v39 - v38;
              if (v43) {
                goto LABEL_119;
              }
              uint64_t v42 = *(void *)(v37 - 48);
              uint64_t v41 = *(void *)(v37 - 40);
              BOOL v43 = __OFSUB__(v41, v42);
              uint64_t v35 = v41 - v42;
              char v36 = v43;
              if (v43) {
                goto LABEL_120;
              }
              unint64_t v44 = v11 - 2;
              char v45 = (uint64_t *)(v30 + 16 * (v11 - 2));
              uint64_t v47 = *v45;
              uint64_t v46 = v45[1];
              BOOL v43 = __OFSUB__(v46, v47);
              uint64_t v48 = v46 - v47;
              if (v43) {
                goto LABEL_121;
              }
              BOOL v43 = __OFADD__(v35, v48);
              uint64_t v49 = v35 + v48;
              if (v43) {
                goto LABEL_123;
              }
              if (v49 >= v40)
              {
                uint64_t v67 = (uint64_t *)(v30 + 16 * v32);
                uint64_t v69 = *v67;
                uint64_t v68 = v67[1];
                BOOL v43 = __OFSUB__(v68, v69);
                uint64_t v70 = v68 - v69;
                if (v43) {
                  goto LABEL_129;
                }
                BOOL v60 = v35 < v70;
                goto LABEL_83;
              }
            }
            else
            {
              if (v11 != 3)
              {
                uint64_t v61 = *(void *)(v10 + 32);
                uint64_t v62 = *(void *)(v10 + 40);
                BOOL v43 = __OFSUB__(v62, v61);
                uint64_t v54 = v62 - v61;
                char v55 = v43;
                goto LABEL_77;
              }
              uint64_t v34 = *(void *)(v10 + 32);
              uint64_t v33 = *(void *)(v10 + 40);
              BOOL v43 = __OFSUB__(v33, v34);
              uint64_t v35 = v33 - v34;
              char v36 = v43;
            }
            if (v36) {
              goto LABEL_122;
            }
            unint64_t v44 = v11 - 2;
            long long v50 = (uint64_t *)(v30 + 16 * (v11 - 2));
            uint64_t v52 = *v50;
            uint64_t v51 = v50[1];
            BOOL v53 = __OFSUB__(v51, v52);
            uint64_t v54 = v51 - v52;
            char v55 = v53;
            if (v53) {
              goto LABEL_124;
            }
            uint64_t v56 = (uint64_t *)(v30 + 16 * v32);
            uint64_t v58 = *v56;
            uint64_t v57 = v56[1];
            BOOL v43 = __OFSUB__(v57, v58);
            uint64_t v59 = v57 - v58;
            if (v43) {
              goto LABEL_126;
            }
            if (__OFADD__(v54, v59)) {
              goto LABEL_128;
            }
            if (v54 + v59 >= v35)
            {
              BOOL v60 = v35 < v59;
LABEL_83:
              if (v60) {
                unint64_t v32 = v44;
              }
              goto LABEL_85;
            }
LABEL_77:
            if (v55) {
              goto LABEL_125;
            }
            uint64_t v63 = (uint64_t *)(v30 + 16 * v32);
            uint64_t v65 = *v63;
            uint64_t v64 = v63[1];
            BOOL v43 = __OFSUB__(v64, v65);
            uint64_t v66 = v64 - v65;
            if (v43) {
              goto LABEL_127;
            }
            if (v66 < v54) {
              goto LABEL_15;
            }
LABEL_85:
            unint64_t v71 = v32 - 1;
            if (v32 - 1 >= v11)
            {
              __break(1u);
LABEL_116:
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
              goto LABEL_140;
            }
            if (!v9) {
              goto LABEL_143;
            }
            char v72 = (uint64_t *)(v30 + 16 * v71);
            uint64_t v73 = *v72;
            uint64_t v74 = v30;
            uint64_t v75 = (void *)(v30 + 16 * v32);
            uint64_t v76 = v75[1];
            uint64_t result = sub_2209317F0((float *)(v9 + 4 * *v72), (float *)(v9 + 4 * *v75), v9 + 4 * v76, v98);
            if (v1) {
              goto LABEL_113;
            }
            if (v76 < v73) {
              goto LABEL_116;
            }
            if (v32 > *(void *)(v10 + 16)) {
              goto LABEL_117;
            }
            *char v72 = v73;
            *(void *)(v74 + 16 * v71 + 8) = v76;
            unint64_t v77 = *(void *)(v10 + 16);
            if (v32 >= v77) {
              goto LABEL_118;
            }
            unint64_t v11 = v77 - 1;
            uint64_t result = (uint64_t)memmove(v75, v75 + 2, 16 * (v77 - 1 - v32));
            uint64_t v30 = v74;
            *(void *)(v10 + 16) = v77 - 1;
            uint64_t v9 = v97;
            if (v77 <= 2) {
              goto LABEL_15;
            }
          }
        }
        unint64_t v11 = 1;
LABEL_15:
        uint64_t v3 = v96;
        if (v8 >= v96)
        {
          uint64_t v7 = v94;
          uint64_t v2 = v92;
          goto LABEL_102;
        }
      }
    }
    uint64_t v7 = MEMORY[0x263F8EE78];
    uint64_t v98 = (float *)(MEMORY[0x263F8EE78] + 32);
    if (v3 == 1)
    {
      uint64_t v94 = MEMORY[0x263F8EE78];
      goto LABEL_13;
    }
    unint64_t v11 = *(void *)(MEMORY[0x263F8EE78] + 16);
    uint64_t v10 = MEMORY[0x263F8EE78];
LABEL_102:
    uint64_t v94 = v7;
    if (v11 >= 2)
    {
      uint64_t v84 = *v2;
      do
      {
        unint64_t v85 = v11 - 2;
        if (v11 < 2) {
          goto LABEL_131;
        }
        if (!v84) {
          goto LABEL_145;
        }
        uint64_t v86 = v10;
        uint64_t v87 = v10 + 32;
        uint64_t v88 = *(void *)(v10 + 32 + 16 * v85);
        uint64_t v89 = *(void *)(v10 + 32 + 16 * (v11 - 1) + 8);
        uint64_t result = sub_2209317F0((float *)(v84 + 4 * v88), (float *)(v84 + 4 * *(void *)(v87 + 16 * (v11 - 1))), v84 + 4 * v89, v98);
        if (v1) {
          break;
        }
        if (v89 < v88) {
          goto LABEL_132;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_22080AB70(v86);
          uint64_t v86 = result;
        }
        if (v85 >= *(void *)(v86 + 16)) {
          goto LABEL_133;
        }
        uint64_t v90 = (void *)(v86 + 32 + 16 * v85);
        void *v90 = v88;
        v90[1] = v89;
        unint64_t v91 = *(void *)(v86 + 16);
        if (v11 > v91) {
          goto LABEL_134;
        }
        uint64_t result = (uint64_t)memmove((void *)(v86 + 32 + 16 * (v11 - 1)), (const void *)(v86 + 32 + 16 * v11), 16 * (v91 - v11));
        uint64_t v10 = v86;
        *(void *)(v86 + 16) = v91 - 1;
        unint64_t v11 = v91 - 1;
      }
      while (v91 > 2);
    }
LABEL_113:
    swift_bridgeObjectRelease();
    *(void *)(v94 + 16) = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2209315EC(double *__dst, double *__src, unint64_t a3, double *a4)
{
  int v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = (char *)__src - (char *)__dst;
  int64_t v9 = (char *)__src - (char *)__dst + 7;
  if ((char *)__src - (char *)__dst >= 0) {
    int64_t v9 = (char *)__src - (char *)__dst;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)__src;
  uint64_t v12 = a3 - (void)__src + 7;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v12 = a3 - (void)__src;
  }
  uint64_t v13 = v12 >> 3;
  if (v10 >= v12 >> 3)
  {
    if (a4 != __src || &__src[v13] <= a4) {
      memmove(a4, __src, 8 * v13);
    }
    float v14 = &v4[v13];
    if (v7 >= v6 || v11 < 8) {
      goto LABEL_39;
    }
    uint64_t v17 = (double *)(a3 - 8);
    uint64_t v18 = v6;
    while (1)
    {
      uint64_t v19 = v17 + 1;
      double v20 = *--v18;
      double v21 = v20;
      if (*(v14 - 1) < v20) {
        break;
      }
      double v21 = *(v14 - 1);
      uint64_t v18 = v6;
      if (v19 != v14)
      {
        --v14;
LABEL_35:
        *uint64_t v17 = v21;
        goto LABEL_36;
      }
      if (v17 >= v14--) {
        goto LABEL_35;
      }
LABEL_36:
      if (v18 > v7)
      {
        --v17;
        uint64_t v6 = v18;
        if (v14 > v4) {
          continue;
        }
      }
      uint64_t v6 = v18;
      goto LABEL_39;
    }
    if (v19 == v6 && v17 < v6) {
      goto LABEL_36;
    }
    goto LABEL_35;
  }
  if (a4 != __dst || &__dst[v10] <= a4) {
    memmove(a4, __dst, 8 * v10);
  }
  float v14 = &v4[v10];
  if ((unint64_t)v6 < a3 && v8 >= 8)
  {
    while (1)
    {
      double v15 = *v6;
      if (*v6 >= *v4) {
        break;
      }
      BOOL v16 = v7 == v6++;
      if (!v16) {
        goto LABEL_16;
      }
LABEL_17:
      ++v7;
      if (v4 >= v14 || (unint64_t)v6 >= a3) {
        goto LABEL_19;
      }
    }
    double v15 = *v4;
    BOOL v16 = v7 == v4++;
    if (v16) {
      goto LABEL_17;
    }
LABEL_16:
    *uint64_t v7 = v15;
    goto LABEL_17;
  }
LABEL_19:
  uint64_t v6 = v7;
LABEL_39:
  int64_t v23 = (char *)v14 - (char *)v4 + ((char *)v14 - (char *)v4 < 0 ? 7uLL : 0);
  if (v6 != v4 || v6 >= (double *)((char *)v4 + (v23 & 0xFFFFFFFFFFFFFFF8))) {
    memmove(v6, v4, 8 * (v23 >> 3));
  }
  return 1;
}

uint64_t sub_2209317F0(float *__dst, float *__src, unint64_t a3, float *a4)
{
  int v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = (char *)__src - (char *)__dst;
  int64_t v9 = (char *)__src - (char *)__dst + 3;
  if ((char *)__src - (char *)__dst >= 0) {
    int64_t v9 = (char *)__src - (char *)__dst;
  }
  uint64_t v10 = v9 >> 2;
  uint64_t v11 = a3 - (void)__src;
  uint64_t v12 = a3 - (void)__src + 3;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v12 = a3 - (void)__src;
  }
  uint64_t v13 = v12 >> 2;
  if (v10 >= v12 >> 2)
  {
    if (a4 != __src || &__src[v13] <= a4) {
      memmove(a4, __src, 4 * v13);
    }
    float v14 = &v4[v13];
    if (v7 >= v6 || v11 < 4) {
      goto LABEL_39;
    }
    uint64_t v17 = (float *)(a3 - 4);
    uint64_t v18 = v6;
    while (1)
    {
      uint64_t v19 = v17 + 1;
      float v20 = *--v18;
      float v21 = v20;
      if (*(v14 - 1) < v20) {
        break;
      }
      float v21 = *(v14 - 1);
      uint64_t v18 = v6;
      if (v19 != v14)
      {
        --v14;
LABEL_35:
        *uint64_t v17 = v21;
        goto LABEL_36;
      }
      if (v17 >= v14--) {
        goto LABEL_35;
      }
LABEL_36:
      if (v18 > v7)
      {
        --v17;
        uint64_t v6 = v18;
        if (v14 > v4) {
          continue;
        }
      }
      uint64_t v6 = v18;
      goto LABEL_39;
    }
    if (v19 == v6 && v17 < v6) {
      goto LABEL_36;
    }
    goto LABEL_35;
  }
  if (a4 != __dst || &__dst[v10] <= a4) {
    memmove(a4, __dst, 4 * v10);
  }
  float v14 = &v4[v10];
  if ((unint64_t)v6 < a3 && v8 >= 4)
  {
    while (1)
    {
      float v15 = *v6;
      if (*v6 >= *v4) {
        break;
      }
      BOOL v16 = v7 == v6++;
      if (!v16) {
        goto LABEL_16;
      }
LABEL_17:
      ++v7;
      if (v4 >= v14 || (unint64_t)v6 >= a3) {
        goto LABEL_19;
      }
    }
    float v15 = *v4;
    BOOL v16 = v7 == v4++;
    if (v16) {
      goto LABEL_17;
    }
LABEL_16:
    *uint64_t v7 = v15;
    goto LABEL_17;
  }
LABEL_19:
  uint64_t v6 = v7;
LABEL_39:
  int64_t v23 = (char *)v14 - (char *)v4 + ((char *)v14 - (char *)v4 < 0 ? 3uLL : 0);
  if (v6 != v4 || v6 >= (float *)((char *)v4 + (v23 & 0xFFFFFFFFFFFFFFFCLL))) {
    memmove(v6, v4, 4 * (v23 >> 2));
  }
  return 1;
}

uint64_t FormattingOptions.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v43 = *MEMORY[0x263EF8340];
  uint64_t v41 = sub_22093DF70();
  uint64_t v2 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  int v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F19290);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_22093E140();
  MEMORY[0x270FA5388](v9 - 8);
  *(_OWORD *)a1 = xmmword_220949AE0;
  *(void *)(a1 + 16) = 20;
  *(_WORD *)(a1 + 24) = 257;
  *(unsigned char *)(a1 + 26) = 1;
  id v10 = objc_msgSend(self, sel_processInfo);
  id v11 = objc_msgSend(v10, sel_environment);

  uint64_t v12 = sub_22093E280();
  if (!*(void *)(v12 + 16)) {
    goto LABEL_12;
  }
  uint64_t v13 = sub_22081D290(0x534E4D554C4F43, 0xE700000000000000);
  if ((v14 & 1) == 0) {
    goto LABEL_12;
  }
  float v15 = (uint64_t *)(*(void *)(v12 + 56) + 16 * v13);
  uint64_t v17 = *v15;
  unint64_t v16 = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = HIBYTE(v16) & 0xF;
  uint64_t v19 = v17 & 0xFFFFFFFFFFFFLL;
  if (!((v16 & 0x2000000000000000) != 0 ? HIBYTE(v16) & 0xF : v17 & 0xFFFFFFFFFFFFLL))
  {
LABEL_12:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  if ((v16 & 0x1000000000000000) != 0)
  {
    uint64_t v22 = (uint64_t)sub_220933D20(v17, v16, 10);
    LOBYTE(v17) = v39;
    goto LABEL_40;
  }
  if ((v16 & 0x2000000000000000) != 0)
  {
    *(void *)&long long v42 = v17;
    *((void *)&v42 + 1) = v16 & 0xFFFFFFFFFFFFFFLL;
    if (v17 == 43)
    {
      if (!v18) {
        goto LABEL_63;
      }
      if (v18 != 1 && (BYTE1(v17) - 48) <= 9u)
      {
        uint64_t v22 = (BYTE1(v17) - 48);
        if (v18 == 2) {
          goto LABEL_39;
        }
        if ((BYTE2(v17) - 48) <= 9u)
        {
          uint64_t v22 = 10 * (BYTE1(v17) - 48) + (BYTE2(v17) - 48);
          uint64_t v25 = v18 - 3;
          if (v25)
          {
            uint64_t v26 = (unsigned __int8 *)&v42 + 3;
            while (1)
            {
              unsigned int v27 = *v26 - 48;
              if (v27 > 9) {
                goto LABEL_37;
              }
              uint64_t v28 = 10 * v22;
              if ((unsigned __int128)(v22 * (__int128)10) >> 64 != (10 * v22) >> 63) {
                goto LABEL_37;
              }
              uint64_t v22 = v28 + v27;
              if (__OFADD__(v28, v27)) {
                goto LABEL_37;
              }
              LOBYTE(v17) = 0;
              ++v26;
              if (!--v25) {
                goto LABEL_40;
              }
            }
          }
          goto LABEL_39;
        }
      }
    }
    else
    {
      if (v17 == 45)
      {
        if (v18)
        {
          if (v18 == 1 || (BYTE1(v17) - 48) > 9u) {
            goto LABEL_37;
          }
          if (v18 == 2)
          {
            LOBYTE(v17) = 0;
            uint64_t v22 = -(uint64_t)(BYTE1(v17) - 48);
            goto LABEL_40;
          }
          if ((BYTE2(v17) - 48) > 9u) {
            goto LABEL_37;
          }
          uint64_t v22 = -10 * (BYTE1(v17) - 48) - (BYTE2(v17) - 48);
          uint64_t v35 = v18 - 3;
          if (v35)
          {
            char v36 = (unsigned __int8 *)&v42 + 3;
            while (1)
            {
              unsigned int v37 = *v36 - 48;
              if (v37 > 9) {
                goto LABEL_37;
              }
              uint64_t v38 = 10 * v22;
              if ((unsigned __int128)(v22 * (__int128)10) >> 64 != (10 * v22) >> 63) {
                goto LABEL_37;
              }
              uint64_t v22 = v38 - v37;
              if (__OFSUB__(v38, v37)) {
                goto LABEL_37;
              }
              LOBYTE(v17) = 0;
              ++v36;
              if (!--v35) {
                goto LABEL_40;
              }
            }
          }
LABEL_39:
          LOBYTE(v17) = 0;
          goto LABEL_40;
        }
        __break(1u);
LABEL_63:
        __break(1u);
      }
      if (v18 && (v17 - 48) <= 9u)
      {
        uint64_t v22 = (v17 - 48);
        if (v18 == 1) {
          goto LABEL_39;
        }
        if ((BYTE1(v17) - 48) <= 9u)
        {
          uint64_t v22 = 10 * (v17 - 48) + (BYTE1(v17) - 48);
          uint64_t v31 = v18 - 2;
          if (v31)
          {
            unint64_t v32 = (unsigned __int8 *)&v42 + 2;
            while (1)
            {
              unsigned int v33 = *v32 - 48;
              if (v33 > 9) {
                goto LABEL_37;
              }
              uint64_t v34 = 10 * v22;
              if ((unsigned __int128)(v22 * (__int128)10) >> 64 != (10 * v22) >> 63) {
                goto LABEL_37;
              }
              uint64_t v22 = v34 + v33;
              if (__OFADD__(v34, v33)) {
                goto LABEL_37;
              }
              LOBYTE(v17) = 0;
              ++v32;
              if (!--v31) {
                goto LABEL_40;
              }
            }
          }
          goto LABEL_39;
        }
      }
    }
LABEL_37:
    uint64_t v22 = 0;
    LOBYTE(v17) = 1;
    goto LABEL_40;
  }
  if ((v17 & 0x1000000000000000) != 0) {
    float v21 = (unsigned __int8 *)((v16 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else {
    float v21 = (unsigned __int8 *)sub_22093EF60();
  }
  uint64_t v22 = (uint64_t)sub_220934C98(v21, v19, 10);
  LOBYTE(v17) = v23 & 1;
LABEL_40:
  swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
    *(void *)a1 = v22;
    goto LABEL_42;
  }
LABEL_13:
  *(void *)&long long v42 = 0;
  uint64_t v24 = sub_22093E1E0();
  if (!MEMORY[0x223C69910](1, v24, &v42) && WORD1(v42)) {
    *(void *)a1 = WORD1(v42);
  }
LABEL_42:
  type metadata accessor for FormattingOptions();
  sub_22093E130();
  sub_2208B8AAC();
  sub_22093DF00();
  sub_22093E130();
  sub_2208B8B00();
  sub_22093DF40();
  long long v42 = xmmword_220947180;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18D20);
  sub_2208502C4(&qword_267F192B0, &qword_267F18D20);
  sub_22093DF60();
  MEMORY[0x223C69670](v4, v5);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v41);
  uint64_t v29 = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return MEMORY[0x223C69630](v29);
}

uint64_t FormattingOptions.init(maximumLineWidth:maximumCellWidth:maximumRowCount:includesColumnTypes:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_22093DF70();
  uint64_t v20 = *(void *)(v10 - 8);
  uint64_t v21 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F19290);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  unint64_t v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_22093E140();
  MEMORY[0x270FA5388](v17 - 8);
  *(_WORD *)(a5 + 25) = 257;
  *(void *)a5 = a1;
  *(void *)(a5 + 8) = a2;
  *(void *)(a5 + 16) = a3;
  *(unsigned char *)(a5 + 24) = a4;
  type metadata accessor for FormattingOptions();
  sub_22093E130();
  sub_2208B8AAC();
  sub_22093DF00();
  sub_22093E130();
  sub_2208B8B00();
  sub_22093DF40();
  long long v22 = xmmword_220947180;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18D20);
  sub_2208502C4(&qword_267F192B0, &qword_267F18D20);
  sub_22093DF60();
  MEMORY[0x223C69670](v12, v13);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v12, v21);
  uint64_t v18 = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  return MEMORY[0x223C69630](v18);
}

uint64_t sub_2209322EC(uint64_t result, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0) {
        uint64_t v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v6 = (unsigned __int8 *)sub_22093EF60();
      }
      uint64_t v7 = (uint64_t)sub_220934C98(v6, v4, 10);
      char v9 = v8 & 1;
      goto LABEL_37;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3) {
        goto LABEL_50;
      }
      if (v3 == 1 || (BYTE1(result) - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (BYTE1(result) - 48);
      uint64_t v14 = v3 - 2;
      if (v14)
      {
        uint64_t v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          unsigned int v16 = *v15 - 48;
          if (v16 > 9) {
            goto LABEL_34;
          }
          uint64_t v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v17 + v16;
          if (__OFADD__(v17, v16)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v15;
          if (!--v14) {
            goto LABEL_37;
          }
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            uint64_t v7 = -(uint64_t)(BYTE1(result) - 48);
            uint64_t v10 = v3 - 2;
            if (v10)
            {
              uint64_t v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                unsigned int v12 = *v11 - 48;
                if (v12 > 9) {
                  goto LABEL_34;
                }
                uint64_t v13 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
                  goto LABEL_34;
                }
                uint64_t v7 = v13 - v12;
                if (__OFSUB__(v13, v12)) {
                  goto LABEL_34;
                }
                char v9 = 0;
                ++v11;
                if (!--v10) {
                  goto LABEL_37;
                }
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          uint64_t v7 = 0;
          char v9 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (result - 48);
      uint64_t v18 = v3 - 1;
      if (v18)
      {
        uint64_t v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          unsigned int v20 = *v19 - 48;
          if (v20 > 9) {
            goto LABEL_34;
          }
          uint64_t v21 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v21 + v20;
          if (__OFADD__(v21, v20)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v19;
          if (!--v18) {
            goto LABEL_37;
          }
        }
      }
    }
LABEL_36:
    char v9 = 0;
    goto LABEL_37;
  }
  uint64_t v7 = (uint64_t)sub_220933D20(result, a2, 10);
  char v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease();
  if (v9) {
    return 0;
  }
  else {
    return v7;
  }
}

uint64_t FormattingOptions.maximumLineWidth.getter()
{
  return *(void *)v0;
}

uint64_t FormattingOptions.maximumLineWidth.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*FormattingOptions.maximumLineWidth.modify())(void)
{
  return nullsub_5;
}

uint64_t FormattingOptions.maximumCellWidth.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t FormattingOptions.maximumCellWidth.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

uint64_t (*FormattingOptions.maximumCellWidth.modify())(void)
{
  return nullsub_5;
}

uint64_t FormattingOptions.maximumRowCount.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t FormattingOptions.maximumRowCount.setter(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t (*FormattingOptions.maximumRowCount.modify())(void)
{
  return nullsub_5;
}

uint64_t FormattingOptions.includesColumnTypes.getter()
{
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t FormattingOptions.includesColumnTypes.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 24) = result;
  return result;
}

uint64_t (*FormattingOptions.includesColumnTypes.modify())(void)
{
  return nullsub_5;
}

uint64_t FormattingOptions.includesRowIndices.getter()
{
  return *(unsigned __int8 *)(v0 + 25);
}

uint64_t FormattingOptions.includesRowIndices.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 25) = result;
  return result;
}

uint64_t (*FormattingOptions.includesRowIndices.modify())(void)
{
  return nullsub_5;
}

uint64_t FormattingOptions.includesRowAndColumnCounts.getter()
{
  return *(unsigned __int8 *)(v0 + 26);
}

uint64_t FormattingOptions.includesRowAndColumnCounts.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 26) = result;
  return result;
}

uint64_t (*FormattingOptions.includesRowAndColumnCounts.modify())(void)
{
  return nullsub_5;
}

uint64_t FormattingOptions.floatingPointFormatStyle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormattingOptions() + 40);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F19290);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_2209326D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F19290);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v8 = type metadata accessor for FormattingOptions();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 40))(a2 + *(int *)(v8 + 40), v7, v4);
}

uint64_t FormattingOptions.floatingPointFormatStyle.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormattingOptions() + 40);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F19290);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*FormattingOptions.floatingPointFormatStyle.modify(void *a1))()
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F19290);
  v3[1] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  v3[2] = v5;
  size_t v7 = *(void *)(v5 + 64);
  v3[3] = malloc(v7);
  uint64_t v8 = malloc(v7);
  v3[4] = v8;
  uint64_t v9 = *(int *)(type metadata accessor for FormattingOptions() + 40);
  *((_DWORD *)v3 + 14) = v9;
  uint64_t v10 = v1 + v9;
  uint64_t v11 = *(void (**)(void *, uint64_t, uint64_t))(v6 + 16);
  v3[5] = v11;
  void v3[6] = (v6 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v11(v8, v10, v4);
  return sub_220932960;
}

uint64_t FormattingOptions.integerFormatStyle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormattingOptions() + 44);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F192B8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_2209329E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F192B8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  size_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v8 = type metadata accessor for FormattingOptions();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 40))(a2 + *(int *)(v8 + 44), v7, v4);
}

uint64_t FormattingOptions.integerFormatStyle.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormattingOptions() + 44);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F192B8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*FormattingOptions.integerFormatStyle.modify(void *a1))()
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F192B8);
  v3[1] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  v3[2] = v5;
  size_t v7 = *(void *)(v5 + 64);
  v3[3] = malloc(v7);
  uint64_t v8 = malloc(v7);
  v3[4] = v8;
  uint64_t v9 = *(int *)(type metadata accessor for FormattingOptions() + 44);
  *((_DWORD *)v3 + 14) = v9;
  uint64_t v10 = v1 + v9;
  uint64_t v11 = *(void (**)(void *, uint64_t, uint64_t))(v6 + 16);
  v3[5] = v11;
  void v3[6] = (v6 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v11(v8, v10, v4);
  return sub_220932960;
}

uint64_t FormattingOptions.dateFormatStyle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormattingOptions() + 48);
  uint64_t v4 = sub_22093E050();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_220932CE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22093E050();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  size_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v8 = type metadata accessor for FormattingOptions();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 40))(a2 + *(int *)(v8 + 48), v7, v4);
}

uint64_t FormattingOptions.dateFormatStyle.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormattingOptions() + 48);
  uint64_t v4 = sub_22093E050();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*FormattingOptions.dateFormatStyle.modify(void *a1))()
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_22093E050();
  v3[1] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  v3[2] = v5;
  size_t v7 = *(void *)(v5 + 64);
  v3[3] = malloc(v7);
  uint64_t v8 = malloc(v7);
  v3[4] = v8;
  uint64_t v9 = *(int *)(type metadata accessor for FormattingOptions() + 48);
  *((_DWORD *)v3 + 14) = v9;
  uint64_t v10 = v1 + v9;
  uint64_t v11 = *(void (**)(void *, uint64_t, uint64_t))(v6 + 16);
  v3[5] = v11;
  void v3[6] = (v6 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v11(v8, v10, v4);
  return sub_220932960;
}

void sub_220932F5C(int **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v4 = (void *)*((void *)*a1 + 3);
  uint64_t v3 = (void *)*((void *)*a1 + 4);
  if (a2)
  {
    uint64_t v5 = *((void *)v2 + 1);
    uint64_t v6 = *((void *)v2 + 2);
    uint64_t v7 = *(void *)v2 + v2[14];
    (*((void (**)(void, void, uint64_t))v2 + 5))(*((void *)v2 + 3), *((void *)v2 + 4), v5);
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 40))(v7, v4, v5);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v3, v5);
  }
  else
  {
    (*(void (**)(void, void, void))(*((void *)v2 + 2) + 40))(*(void *)v2 + v2[14], *((void *)v2 + 4), *((void *)v2 + 1));
  }
  free(v3);
  free(v4);

  free(v2);
}

uint64_t FormattingOptions.locale.getter()
{
  return sub_22093DEE0();
}

uint64_t sub_220933084(uint64_t a1)
{
  uint64_t v2 = sub_22093E140();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return FormattingOptions.locale.setter((uint64_t)v4);
}

uint64_t FormattingOptions.locale.setter(uint64_t a1)
{
  uint64_t v28 = a1;
  uint64_t v3 = sub_22093E050();
  uint64_t v34 = *(void *)(v3 - 8);
  uint64_t v35 = v3;
  MEMORY[0x270FA5388](v3);
  unsigned int v33 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F19290);
  uint64_t v29 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v30 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F192B8);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_22093E140();
  uint64_t v31 = *(void *)(v36 - 8);
  uint64_t v10 = v31;
  MEMORY[0x270FA5388](v36);
  unsigned int v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void (**)(char *, uint64_t))(v10 + 16);
  v13(v12, a1);
  unsigned int v27 = (void (*)(char *, uint64_t, uint64_t))v13;
  uint64_t v14 = (int *)type metadata accessor for FormattingOptions();
  uint64_t v15 = v1 + v14[11];
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v15, v6);
  sub_22093DEF0();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 40))(v15, v9, v6);
  uint64_t v16 = v28;
  ((void (*)(char *, uint64_t, uint64_t))v13)(v12, v28, v36);
  uint64_t v17 = v1 + v14[10];
  uint64_t v19 = v29;
  uint64_t v18 = v30;
  uint64_t v20 = v32;
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v30, v17, v32);
  sub_22093DF30();
  (*(void (**)(uint64_t, char *, uint64_t))(v19 + 40))(v17, v18, v20);
  uint64_t v21 = v36;
  v27(v12, v16, v36);
  uint64_t v22 = v1 + v14[12];
  uint64_t v24 = v33;
  uint64_t v23 = v34;
  uint64_t v25 = v35;
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v33, v22, v35);
  sub_22093E040();
  (*(void (**)(uint64_t, char *, uint64_t))(v23 + 40))(v22, v24, v25);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 8))(v16, v21);
}

void (*FormattingOptions.locale.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_22093E140();
  v3[1] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[2] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[3] = malloc(v6);
  v3[4] = malloc(v6);
  type metadata accessor for FormattingOptions();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F192B8);
  sub_22093DEE0();
  return sub_2209335FC;
}

void sub_2209335FC(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 24);
  uint64_t v4 = *(void **)(*(void *)a1 + 32);
  if (a2)
  {
    uint64_t v5 = v2[1];
    uint64_t v6 = v2[2];
    (*(void (**)(void, void *, uint64_t))(v6 + 16))(*(void *)(*(void *)a1 + 24), v4, v5);
    FormattingOptions.locale.setter((uint64_t)v3);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    FormattingOptions.locale.setter(*(void *)(*(void *)a1 + 32));
  }
  free(v4);
  free(v3);

  free(v2);
}

uint64_t FormattingOptions.init(locale:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = a1;
  uint64_t v4 = sub_22093E050();
  uint64_t v42 = *(void *)(v4 - 8);
  uint64_t v43 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v41 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F19290);
  uint64_t v37 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v38 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F192B8);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_22093E140();
  uint64_t v39 = *(void *)(v11 - 8);
  uint64_t v12 = v39;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  FormattingOptions.init()(a2);
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v16 = a1;
  uint64_t v17 = v11;
  v15(v14, v16, v11);
  uint64_t v34 = v15;
  uint64_t v18 = type metadata accessor for FormattingOptions();
  uint64_t v19 = *(int *)(v18 + 44);
  uint64_t v35 = v18;
  uint64_t v20 = a2 + v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2 + v19, v7);
  sub_22093DEF0();
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 40))(v20, v10, v7);
  uint64_t v21 = v36;
  v15(v14, v36, v17);
  uint64_t v22 = *(int *)(v18 + 40);
  uint64_t v23 = a2;
  uint64_t v24 = a2 + v22;
  uint64_t v26 = v37;
  uint64_t v25 = v38;
  uint64_t v27 = v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v38, v24, v40);
  sub_22093DF30();
  (*(void (**)(uint64_t, char *, uint64_t))(v26 + 40))(v24, v25, v27);
  uint64_t v28 = v17;
  v34(v14, v21, v17);
  uint64_t v29 = v23 + *(int *)(v35 + 48);
  uint64_t v31 = v41;
  uint64_t v30 = v42;
  uint64_t v32 = v43;
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v41, v29, v43);
  sub_22093E040();
  (*(void (**)(uint64_t, char *, uint64_t))(v30 + 40))(v29, v31, v32);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 8))(v21, v28);
}

uint64_t sub_220933A90(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_bridgeObjectRetain();
  sub_220934F14(a2, a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (a1[2] < 3uLL)
  {
    __break(1u);
  }
  else
  {
    unint64_t v11 = a1[2];
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F18BE0);
    sub_2208502C4((unint64_t *)&qword_267F18BE8, &qword_267F18BE0);
    sub_22093E440();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (a5)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      MEMORY[0x223C69E60](a3, a4, a5);
      swift_bridgeObjectRetain();
      sub_22093E6C0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22093E6C0();
      swift_bridgeObjectRelease();
    }
    uint64_t v12 = a1[4];
    swift_bridgeObjectRetain_n();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v11 >= 4)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_22093E6C0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_22093E6C0();
      swift_bridgeObjectRelease();
      return v12;
    }
  }
  __break(1u);
  return result;
}

unsigned __int8 *sub_220933CBC(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_220934C98(a1, a2, a3);
}

uint64_t type metadata accessor for FormattingOptions()
{
  uint64_t result = qword_267F19AB8;
  if (!qword_267F19AB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unsigned __int8 *sub_220933D20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_22093E760();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_2208CDDFC();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    uint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v7 = (unsigned __int8 *)sub_22093EF60();
  }
LABEL_7:
  unint64_t v11 = sub_220934C98(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_220933E08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1 + *(int *)(type metadata accessor for FormattingOptions() + 40);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F19290);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a2, v3, v4);
}

uint64_t sub_220933E8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1 + *(int *)(type metadata accessor for FormattingOptions() + 44);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F192B8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a2, v3, v4);
}

uint64_t sub_220933F10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1 + *(int *)(type metadata accessor for FormattingOptions() + 48);
  uint64_t v4 = sub_22093E050();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a2, v3, v4);
}

uint64_t sub_220933F90()
{
  return sub_22093DEE0();
}

void *initializeBufferWithCopyOfBuffer for FormattingOptions(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    *(_WORD *)(a1 + 25) = *(_WORD *)((char *)a2 + 25);
    uint64_t v7 = a3[10];
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F19290);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[11];
    uint64_t v12 = (char *)v4 + v11;
    uint64_t v13 = (uint64_t)a2 + v11;
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F192B8);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    uint64_t v15 = a3[12];
    uint64_t v16 = (char *)v4 + v15;
    uint64_t v17 = (uint64_t)a2 + v15;
    uint64_t v18 = sub_22093E050();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  }
  return v4;
}

uint64_t destroy for FormattingOptions(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[10];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F19290);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + a2[11];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F192B8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = a1 + a2[12];
  uint64_t v9 = sub_22093E050();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);

  return v10(v8, v9);
}

uint64_t initializeWithCopy for FormattingOptions(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  uint64_t v6 = a3[10];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F19290);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[11];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F192B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  uint64_t v14 = a3[12];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_22093E050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  return a1;
}

uint64_t assignWithCopy for FormattingOptions(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  uint64_t v6 = a3[10];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F19290);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[11];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F192B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  uint64_t v14 = a3[12];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_22093E050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  return a1;
}

uint64_t initializeWithTake for FormattingOptions(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  uint64_t v6 = a3[10];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F19290);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[11];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F192B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = a3[12];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_22093E050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  return a1;
}

uint64_t assignWithTake for FormattingOptions(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  uint64_t v6 = a3[10];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F19290);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[11];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F192B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  uint64_t v14 = a3[12];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_22093E050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 40))(v15, v16, v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormattingOptions(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22093478C);
}

uint64_t sub_22093478C(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 24);
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F19290);
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v11 = v10;
    uint64_t v12 = *(void *)(v10 - 8);
    uint64_t v13 = a3[10];
LABEL_9:
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v15(a1 + v13, a2, v11);
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F192B8);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v11 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_9;
  }
  uint64_t v16 = sub_22093E050();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + a3[12];

  return v17(v19, a2, v18);
}

uint64_t storeEnumTagSinglePayload for FormattingOptions(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_220934920);
}

uint64_t sub_220934920(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 24) = a2 + 1;
    return result;
  }
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F19290);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[10];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F192B8);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[11];
    goto LABEL_7;
  }
  uint64_t v14 = sub_22093E050();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[12];

  return v15(v17, a2, a2, v16);
}

void sub_220934A9C()
{
  sub_220934C30(319, &qword_267F19AC8, (uint64_t (*)(void))sub_2208B8B00, MEMORY[0x263F8D538], MEMORY[0x263F06DA8]);
  if (v0 <= 0x3F)
  {
    sub_220934C30(319, qword_267F19AD0, (uint64_t (*)(void))sub_2208B8AAC, MEMORY[0x263F8D6C8], MEMORY[0x263F068B8]);
    if (v1 <= 0x3F)
    {
      sub_22093E050();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_220934C30(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unsigned __int8 *sub_220934C98(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

char *sub_220934F14(uint64_t a1, void *a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (!v2) {
    return (char *)v3;
  }
  uint64_t v17 = MEMORY[0x263F8EE78];
  uint64_t result = sub_220826C78(0, v2, 0);
  if (a2[2] >= 2uLL)
  {
    unsigned __int8 v7 = (uint64_t *)(a1 + 32);
    uint64_t v8 = a2[6];
    uint64_t v9 = a2[7];
    uint64_t v3 = v17;
    do
    {
      uint64_t v10 = *v7++;
      swift_bridgeObjectRetain();
      uint64_t v11 = MEMORY[0x223C69E50](v8, v9, v10);
      uint64_t v13 = v12;
      unint64_t v15 = *(void *)(v17 + 16);
      unint64_t v14 = *(void *)(v17 + 24);
      if (v15 >= v14 >> 1) {
        sub_220826C78((char *)(v14 > 1), v15 + 1, 1);
      }
      *(void *)(v17 + 16) = v15 + 1;
      uint64_t v16 = v17 + 16 * v15;
      *(void *)(v16 + 32) = v11;
      *(void *)(v16 + 40) = v13;
      --v2;
    }
    while (v2);
    return (char *)v3;
  }
  __break(1u);
  return result;
}

uint64_t destroy for PrintableColumn()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for PrintableColumn(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for PrintableColumn(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for PrintableColumn(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for PrintableColumn(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PrintableColumn(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PrintableColumn()
{
  return &type metadata for PrintableColumn;
}

uint64_t static OptionalColumnProtocol<>.+ infix(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, void *a5@<X8>)
{
  return sub_22093546C(a1, a2, a3, a4, (uint64_t)sub_22093529C, (void (*)(char *, char *))sub_2209352D0, 43, a5);
}

uint64_t sub_22093529C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_220935708(a1, a2, *(void *)(v3 + 32), MEMORY[0x263F8DF20], a3);
}

uint64_t sub_2209352D0(uint64_t a1)
{
  return sub_22093534C(a1);
}

uint64_t static OptionalColumnProtocol<>.- infix(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, void *a5@<X8>)
{
  return sub_22093546C(a1, a2, a3, a4, (uint64_t)sub_220935318, (void (*)(char *, char *))sub_2209352D0, 45, a5);
}

uint64_t sub_220935318@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_220935708(a1, a2, *(void *)(v3 + 32), MEMORY[0x263F8DF28], a3);
}

uint64_t sub_22093534C(uint64_t a1)
{
  return sub_220935A64(a1, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 40));
}

uint64_t static OptionalColumnProtocol<>.* infix(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, void *a5@<X8>)
{
  return sub_22093546C(a1, a2, a3, a4, (uint64_t)sub_2209353A4, (void (*)(char *, char *))sub_2209352D0, 42, a5);
}

{
  unsigned char v11[16];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  unint64_t v15 = 0;
  uint64_t v16 = 0xE000000000000000;
  swift_getAssociatedTypeWitness();
  sub_22093F220();
  sub_22093E6C0();
  (*(void (**)(uint64_t))(*(void *)(a3 + 8) + 16))(a2);
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  uint64_t v12 = a2;
  uint64_t v13 = a3;
  unint64_t v14 = a4;
  sub_220935B0C(a1, 0, 0xE000000000000000, (uint64_t)sub_2209362B0, (uint64_t)v11, a2, a3, a5, *(void *)(a4 + 8));
  return swift_bridgeObjectRelease();
}

uint64_t sub_2209353A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_220935708(a1, a2, *(void *)(v3 + 32), MEMORY[0x263F8D758], a3);
}

uint64_t static OptionalColumnProtocol<>./ infix(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, void *a5@<X8>)
{
  return sub_22093546C(a1, a2, a3, a4, (uint64_t)sub_220935408, (void (*)(char *, char *))sub_2209352D0, 47, a5);
}

{
  return sub_22093546C(a1, a2, a3, a4, (uint64_t)sub_220935A30, (void (*)(char *, char *))sub_2209352D0, 47, a5);
}

{
  unsigned char v11[16];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  unint64_t v15 = 0;
  uint64_t v16 = 0xE000000000000000;
  swift_getAssociatedTypeWitness();
  sub_22093F230();
  sub_22093E6C0();
  (*(void (**)(uint64_t))(*(void *)(a3 + 8) + 16))(a2);
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  uint64_t v12 = a2;
  uint64_t v13 = a3;
  unint64_t v14 = a4;
  sub_220935B0C(a1, 0, 0xE000000000000000, (uint64_t)sub_220936678, (uint64_t)v11, a2, a3, a5, *(void *)(*(void *)(a4 + 24) + 8));
  return swift_bridgeObjectRelease();
}

{
  unsigned char v11[16];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  unint64_t v15 = 0;
  uint64_t v16 = 0xE000000000000000;
  swift_getAssociatedTypeWitness();
  sub_22093F220();
  sub_22093E6C0();
  (*(void (**)(uint64_t))(*(void *)(a3 + 8) + 16))(a2);
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  uint64_t v12 = a2;
  uint64_t v13 = a3;
  unint64_t v14 = a4;
  sub_220935B0C(a1, 0, 0xE000000000000000, (uint64_t)sub_220936990, (uint64_t)v11, a2, a3, a5, *(void *)(*(void *)(*(void *)(a4 + 16) + 8) + 8));
  return swift_bridgeObjectRelease();
}

uint64_t sub_220935408@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_220935708(a1, a2, *(void *)(v3 + 32), MEMORY[0x263F8DA80], a3);
}

uint64_t sub_22093546C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, void (*a6)(char *, char *)@<X6>, uint64_t a7@<X7>, void *a8@<X8>)
{
  uint64_t v33 = a7;
  uint64_t v32 = a6;
  uint64_t v30 = a5;
  uint64_t v31 = a1;
  uint64_t v34 = a8;
  uint64_t v11 = *(void *)(a3 + 8);
  uint64_t v12 = *(void *)(*(void *)(*(void *)(v11 + 8) + 8) + 8);
  uint64_t v45 = a2;
  uint64_t v46 = a2;
  uint64_t v47 = v12;
  uint64_t v48 = v12;
  uint64_t v13 = sub_22093EEE0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v29 - v15;
  sub_22093F2C0();
  uint64_t v42 = a2;
  uint64_t v43 = a3;
  uint64_t v44 = a4;
  uint64_t v36 = a2;
  uint64_t v37 = a3;
  uint64_t v38 = a4;
  uint64_t v39 = v30;
  uint64_t v40 = &v41;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v18 = (char *)sub_22093ED30();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v21 = sub_22080E314(v32, (uint64_t)v35, v13, v18, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v20);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  unsigned __int8 v22 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 16);
  uint64_t v45 = v22(a2, v11);
  uint64_t v46 = v23;
  sub_22093E6C0();
  v22(a2, v11);
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  uint64_t v24 = v45;
  uint64_t v25 = v46;
  uint64_t v45 = v21;
  uint64_t v26 = sub_22093E900();
  uint64_t v27 = swift_getWitnessTable();
  return Column.init<A>(name:contents:)(v24, v25, (uint64_t)&v45, AssociatedTypeWitness, v26, v27, v34);
}

uint64_t sub_220935708@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, void (*a4)(char *, char *, uint64_t, uint64_t)@<X5>, uint64_t a5@<X8>)
{
  uint64_t v32 = a3;
  uint64_t v33 = a4;
  uint64_t v34 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_22093ED30();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v29 - v14;
  uint64_t v16 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v13);
  uint64_t v31 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v35 = v9;
  uint64_t v36 = (char *)&v29 - v19;
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v20(v15, a1, v8);
  uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v21(v15, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v12 = v15;
  }
  else
  {
    uint64_t v30 = a5;
    unsigned __int8 v22 = v15;
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v23(v36, v22, AssociatedTypeWitness);
    v20(v12, v34, v8);
    if (v21(v12, 1, AssociatedTypeWitness) != 1)
    {
      uint64_t v25 = v31;
      v23(v31, v12, AssociatedTypeWitness);
      a5 = v30;
      uint64_t v26 = v36;
      v33(v36, v25, AssociatedTypeWitness, v32);
      uint64_t v27 = *(void (**)(char *, uint64_t))(v16 + 8);
      v27(v25, AssociatedTypeWitness);
      v27(v26, AssociatedTypeWitness);
      uint64_t v24 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(a5, v24, 1, AssociatedTypeWitness);
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v36, AssociatedTypeWitness);
    a5 = v30;
  }
  (*(void (**)(char *, uint64_t))(v35 + 8))(v12, v8);
  uint64_t v24 = 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(a5, v24, 1, AssociatedTypeWitness);
}

uint64_t sub_220935A30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_220935708(a1, a2, *(void *)(v3 + 32), MEMORY[0x263F8D0B8], a3);
}

uint64_t sub_220935A64(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  swift_getAssociatedTypeWitness();
  sub_22093ED30();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a1, a1 + *(int *)(TupleTypeMetadata2 + 48));
}

uint64_t sub_220935B0C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, void *a8@<X8>, uint64_t a9)
{
  void v20[2] = a6;
  void v20[3] = a7;
  v20[4] = a9;
  void v20[5] = a4;
  void v20[6] = a5;
  v20[7] = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = sub_22093ED30();
  uint64_t v21 = sub_2208F0D18((void (*)(char *, char *))sub_220936A24, (uint64_t)v20, a6, v15, MEMORY[0x263F8E628], *(void *)(*(void *)(*(void *)(a7 + 8) + 8) + 8), MEMORY[0x263F8E658], v16);
  uint64_t v17 = sub_22093E900();
  swift_bridgeObjectRetain();
  uint64_t WitnessTable = swift_getWitnessTable();
  return Column.init<A>(name:contents:)(a2, a3, (uint64_t)&v21, AssociatedTypeWitness, v17, WitnessTable, a8);
}

uint64_t sub_220935C44@<X0>(uint64_t a1@<X0>, void (*a2)(char *, uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v19 = a3;
  uint64_t v20 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_22093ED30();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v19 - v12;
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v19 - v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a1, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    uint64_t v17 = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v13, AssociatedTypeWitness);
    v20(v16, a4);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, AssociatedTypeWitness);
    uint64_t v17 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(a5, v17, 1, AssociatedTypeWitness);
}

uint64_t static OptionalColumnProtocol.+ infix<>(_:_:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, void *a5@<X8>)
{
  return sub_220935EF0(a1, a2, a3, a4, (uint64_t)sub_220935EA0, a5);
}

uint64_t sub_220935EA0(uint64_t a1, uint64_t a2)
{
  return sub_2209367E0(a1, a2, MEMORY[0x263F8DF20]);
}

uint64_t static OptionalColumnProtocol.+ infix<>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, void *a5@<X8>)
{
  return sub_220936048(a1, a2, a3, a4, (uint64_t)sub_220935EA0, a5);
}

uint64_t static OptionalColumnProtocol.- infix<>(_:_:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, void *a5@<X8>)
{
  return sub_220935EF0(a1, a2, a3, a4, (uint64_t)sub_220936014, a5);
}

uint64_t sub_220935EF0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, void *a6@<X8>)
{
  uint64_t v17 = 0;
  unint64_t v18 = 0xE000000000000000;
  (*(void (**)(uint64_t))(*(void *)(a3 + 8) + 16))(a2);
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  swift_getAssociatedTypeWitness();
  sub_22093F220();
  uint64_t v14 = a2;
  uint64_t v15 = a3;
  uint64_t v16 = a4;
  sub_220935B0C(a1, 0, 0xE000000000000000, a5, (uint64_t)v13, a2, a3, a6, a4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_220936014(uint64_t a1, uint64_t a2)
{
  return sub_2209367E0(a1, a2, MEMORY[0x263F8DF28]);
}

uint64_t static OptionalColumnProtocol.- infix<>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, void *a5@<X8>)
{
  return sub_220936048(a1, a2, a3, a4, (uint64_t)sub_220936168, a5);
}

uint64_t sub_220936048@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, void *a6@<X8>)
{
  uint64_t v17 = 0;
  unint64_t v18 = 0xE000000000000000;
  swift_getAssociatedTypeWitness();
  sub_22093F220();
  sub_22093E6C0();
  (*(void (**)(uint64_t))(*(void *)(a3 + 8) + 16))(a2);
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  uint64_t v14 = a2;
  uint64_t v15 = a3;
  uint64_t v16 = a4;
  sub_220935B0C(a1, 0, 0xE000000000000000, a5, (uint64_t)v13, a2, a3, a6, a4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_220936168(uint64_t a1, uint64_t a2)
{
  return sub_2209369A8(a1, a2, MEMORY[0x263F8DF28]);
}

uint64_t static OptionalColumnProtocol<>.* infix(_:_:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, void *a5@<X8>)
{
  uint64_t v15 = 0;
  unint64_t v16 = 0xE000000000000000;
  (*(void (**)(uint64_t))(*(void *)(a3 + 8) + 16))(a2);
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  swift_getAssociatedTypeWitness();
  sub_22093F220();
  uint64_t v12 = a2;
  uint64_t v13 = a3;
  uint64_t v14 = a4;
  sub_220935B0C(a1, 0, 0xE000000000000000, (uint64_t)sub_2209362B0, (uint64_t)v11, a2, a3, a5, *(void *)(a4 + 8));
  return swift_bridgeObjectRelease();
}

uint64_t sub_2209362B0(uint64_t a1, uint64_t a2)
{
  return sub_2209367E0(a1, a2, MEMORY[0x263F8D758]);
}

uint64_t static OptionalColumnProtocol<>./ infix(_:_:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, void *a5@<X8>)
{
  uint64_t v15 = 0;
  unint64_t v16 = 0xE000000000000000;
  (*(void (**)(uint64_t))(*(void *)(a3 + 8) + 16))(a2);
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  swift_getAssociatedTypeWitness();
  sub_22093F230();
  uint64_t v12 = a2;
  uint64_t v13 = a3;
  uint64_t v14 = a4;
  sub_220935B0C(a1, 0, 0xE000000000000000, (uint64_t)sub_22093652C, (uint64_t)v11, a2, a3, a5, *(void *)(*(void *)(a4 + 24) + 8));
  return swift_bridgeObjectRelease();
}

{
  unsigned char v11[16];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  uint64_t v15 = 0;
  unint64_t v16 = 0xE000000000000000;
  (*(void (**)(uint64_t))(*(void *)(a3 + 8) + 16))(a2);
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  swift_getAssociatedTypeWitness();
  sub_22093F220();
  uint64_t v12 = a2;
  uint64_t v13 = a3;
  uint64_t v14 = a4;
  sub_220935B0C(a1, 0, 0xE000000000000000, (uint64_t)sub_2209367C8, (uint64_t)v11, a2, a3, a5, *(void *)(*(void *)(*(void *)(a4 + 16) + 8) + 8));
  return swift_bridgeObjectRelease();
}

uint64_t sub_22093652C(uint64_t a1, uint64_t a2)
{
  return sub_2209367E0(a1, a2, MEMORY[0x263F8DA80]);
}

uint64_t sub_220936678(uint64_t a1, uint64_t a2)
{
  return sub_2209369A8(a1, a2, MEMORY[0x263F8DA80]);
}

uint64_t sub_2209367C8(uint64_t a1, uint64_t a2)
{
  return sub_2209367E0(a1, a2, MEMORY[0x263F8D0B8]);
}

uint64_t sub_2209367E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  return a3(a1, a2);
}

uint64_t sub_220936990(uint64_t a1, uint64_t a2)
{
  return sub_2209369A8(a1, a2, MEMORY[0x263F8D0B8]);
}

uint64_t sub_2209369A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  return a3(a2, a1);
}

uint64_t sub_220936A24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_220935C44(a1, *(void (**)(char *, uint64_t))(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), a2);
}

uint64_t type metadata accessor for CustomGrouping()
{
  return swift_getGenericMetadata();
}

uint64_t sub_220936A64(uint64_t a1, uint64_t a2, uint64_t *a3, double a4)
{
  if (a4 <= 0.0 || a4 >= 1.0) {
    goto LABEL_106;
  }
  uint64_t v9 = v4[1];
  uint64_t v87 = *v4;
  uint64_t v10 = v4[2];
  uint64_t v11 = v4[3];
  uint64_t v12 = v4[4];
  int v13 = *((unsigned __int8 *)v4 + 40);
  uint64_t v14 = v11;
  if (v13)
  {
    if (v13 == 1 && *(void *)(v11 + 16))
    {
      uint64_t v14 = *(void *)(v11 + 32);
      swift_bridgeObjectRetain();
    }
    else
    {
      sub_220883950(v11, v12, v13);
      if (v16)
      {
        sub_220831F30(v11, v12, v13);
        uint64_t v14 = 0;
      }
      else
      {
        uint64_t v14 = v15;
        sub_220831F30(v11, v12, v13);
      }
    }
  }
  sub_220883950(v11, v12, v13);
  v102[0] = v87;
  v102[1] = v9;
  if (v18) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = v17;
  }
  v102[2] = v10;
  v102[3] = v11;
  v102[4] = v12;
  char v103 = v13;
  uint64_t v104 = v14;
  uint64_t v105 = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Swift::Int v20 = sub_220837AB0((uint64_t)v102);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v11, v12, v13);
  Swift::Int v91 = v20;
  double v21 = (double)*(uint64_t *)(v20 + 16) * a4;
  if ((~*(void *)&v21 & 0x7FF0000000000000) == 0) {
    goto LABEL_102;
  }
  if (v21 <= -9.22337204e18)
  {
LABEL_103:
    __break(1u);
    goto LABEL_104;
  }
  if (v21 >= 9.22337204e18)
  {
LABEL_104:
    __break(1u);
LABEL_105:
    __break(1u);
LABEL_106:
    sub_22093F090();
    __break(1u);
    swift_release();
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
    return result;
  }
  unint64_t v92 = *(void *)(v20 + 16);
  uint64_t v22 = (uint64_t)v21;
  uint64_t v23 = MEMORY[0x263F8EE88];
  uint64_t v101 = MEMORY[0x263F8EE88];
  uint64_t v24 = swift_retain();
  uint64_t v25 = sub_220833AE4(v24);
  swift_release();
  uint64_t v100 = v25;
  uint64_t v85 = v9;
  uint64_t v86 = v22;
  uint64_t v82 = a2;
  uint64_t v83 = v10;
  if (v22 < 1) {
    goto LABEL_72;
  }
  unint64_t v26 = v92;
  if (!v92) {
    goto LABEL_105;
  }
  uint64_t v27 = *a3;
  unint64_t v88 = -(uint64_t)v92;
  Swift::Int v89 = v91 + 32;
  while (2)
  {
    uint64_t v90 = v23;
    uint64_t v94 = v23 + 56;
    do
    {
LABEL_23:
      unint64_t v28 = *(void *)(v27 + 128);
      if (v28 == 624)
      {
        unint64_t v29 = 0;
        unint64_t v30 = 156;
        while (1)
        {
          uint64_t v31 = *(char **)(v27 + 120);
          unint64_t v32 = *((void *)v31 + 2);
          if (v29 >= v32) {
            goto LABEL_89;
          }
          unint64_t v33 = v29 + 1;
          if (v29 == 623) {
            unint64_t v34 = 0;
          }
          else {
            unint64_t v34 = v29 + 1;
          }
          if (v34 >= v32) {
            goto LABEL_90;
          }
          unint64_t v35 = *(void *)&v31[8 * v34 + 32] % 0x270uLL;
          if (v35) {
            unint64_t v36 = ((v35 | ((unint64_t)*(unsigned int *)&v31[8 * v29 + 36] << 32)) >> 1) ^ 0xB5026F5AA96619E9;
          }
          else {
            unint64_t v36 = (v35 | ((unint64_t)*(unsigned int *)&v31[8 * v29 + 36] << 32)) >> 1;
          }
          if (v29 + 156 - 624 * (v30 / 0x270) >= v32) {
            goto LABEL_91;
          }
          uint64_t v37 = *(void *)&v31[8 * v29 + 1280 - 4992 * (v30 / 0x270)];
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)(v27 + 120) = v31;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            uint64_t v31 = sub_22080AB84((uint64_t)v31);
            *(void *)(v27 + 120) = v31;
          }
          if (v29 >= *((void *)v31 + 2)) {
            goto LABEL_92;
          }
          *(void *)&v31[8 * v29 + 32] = v37 ^ v36;
          *(void *)(v27 + 128) = 0;
          ++v30;
          ++v29;
          if (v33 == 624)
          {
            unint64_t v28 = 0;
            unint64_t v26 = v92;
            goto LABEL_40;
          }
        }
      }
      if ((v28 & 0x8000000000000000) != 0) {
        goto LABEL_100;
      }
LABEL_40:
      uint64_t v39 = *(char **)(v27 + 120);
      if (v28 >= *((void *)v39 + 2)) {
        goto LABEL_99;
      }
      unint64_t v40 = v28 + 1;
      uint64_t v41 = (*(void *)&v39[8 * v28 + 32] >> 29) & 0x555555555 ^ *(void *)&v39[8 * v28 + 32];
      unint64_t v42 = (((v41 << 17) & 0x71D67FFFEDA60000 ^ v41) << 37) & 0xFFF7EEE000000000 ^ (v41 << 17) & 0x71D67FFFEDA60000 ^ v41;
      unint64_t v43 = v42 ^ (v42 >> 43);
      *(void *)(v27 + 128) = v40;
      uint64_t v44 = (v43 * (unsigned __int128)v26) >> 64;
      if (v26 > v43 * v26)
      {
        unint64_t v93 = v88 % v26;
        if (v88 % v26 > v43 * v26)
        {
          while (v40 != 624)
          {
            if ((v40 & 0x8000000000000000) != 0) {
              goto LABEL_94;
            }
LABEL_60:
            if (v40 >= *((void *)v39 + 2)) {
              goto LABEL_93;
            }
            uint64_t v54 = &v39[8 * v40++];
            uint64_t v55 = (*((void *)v54 + 4) >> 29) & 0x555555555 ^ *((void *)v54 + 4);
            unint64_t v56 = (((v55 << 17) & 0x71D67FFFEDA60000 ^ v55) << 37) & 0xFFF7EEE000000000 ^ (v55 << 17) & 0x71D67FFFEDA60000 ^ v55;
            unint64_t v57 = v56 ^ (v56 >> 43);
            *(void *)(v27 + 128) = v40;
            if (v93 <= v57 * v26)
            {
              uint64_t v44 = (v57 * (unsigned __int128)v26) >> 64;
              goto LABEL_63;
            }
          }
          unint64_t v45 = 0;
          unint64_t v46 = 156;
          while (1)
          {
            unint64_t v47 = *((void *)v39 + 2);
            if (v45 >= v47) {
              break;
            }
            unint64_t v48 = v45 + 1;
            if (v45 == 623) {
              unint64_t v49 = 0;
            }
            else {
              unint64_t v49 = v45 + 1;
            }
            if (v49 >= v47) {
              goto LABEL_86;
            }
            unint64_t v50 = *(void *)&v39[8 * v49 + 32] % 0x270uLL;
            if (v50) {
              unint64_t v51 = ((v50 | ((unint64_t)*(unsigned int *)&v39[8 * v45 + 36] << 32)) >> 1) ^ 0xB5026F5AA96619E9;
            }
            else {
              unint64_t v51 = (v50 | ((unint64_t)*(unsigned int *)&v39[8 * v45 + 36] << 32)) >> 1;
            }
            if (v45 + 156 - 624 * (v46 / 0x270) >= v47) {
              goto LABEL_87;
            }
            uint64_t v52 = *(void *)&v39[8 * v45 + 1280 - 4992 * (v46 / 0x270)];
            char v53 = swift_isUniquelyReferenced_nonNull_native();
            *(void *)(v27 + 120) = v39;
            if ((v53 & 1) == 0)
            {
              uint64_t v39 = sub_22080AB84((uint64_t)v39);
              *(void *)(v27 + 120) = v39;
            }
            if (v45 >= *((void *)v39 + 2)) {
              goto LABEL_88;
            }
            *(void *)&v39[8 * v45 + 32] = v52 ^ v51;
            uint64_t v39 = *(char **)(v27 + 120);
            *(void *)(v27 + 128) = 0;
            ++v46;
            ++v45;
            if (v48 == 624)
            {
              unint64_t v40 = 0;
              unint64_t v26 = v92;
              goto LABEL_60;
            }
          }
          __break(1u);
LABEL_86:
          __break(1u);
LABEL_87:
          __break(1u);
LABEL_88:
          __break(1u);
LABEL_89:
          __break(1u);
LABEL_90:
          __break(1u);
LABEL_91:
          __break(1u);
LABEL_92:
          __break(1u);
LABEL_93:
          __break(1u);
LABEL_94:
          __break(1u);
          goto LABEL_95;
        }
      }
LABEL_63:
      if (v44 >= *(void *)(v91 + 16)) {
        goto LABEL_101;
      }
      if (!*(void *)(v90 + 16)) {
        goto LABEL_71;
      }
      uint64_t v58 = *(void *)(v89 + 8 * v44);
      uint64_t v59 = sub_22093F420();
      uint64_t v60 = -1 << *(unsigned char *)(v90 + 32);
      unint64_t v61 = v59 & ~v60;
      if (((*(void *)(v94 + ((v61 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v61) & 1) == 0) {
        goto LABEL_71;
      }
      uint64_t v62 = *(void *)(v90 + 48);
    }
    while (*(void *)(v62 + 8 * v61) == v58);
    uint64_t v63 = ~v60;
    while (1)
    {
      unint64_t v61 = (v61 + 1) & v63;
      if (((*(void *)(v94 + ((v61 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v61) & 1) == 0) {
        break;
      }
      if (*(void *)(v62 + 8 * v61) == v58) {
        goto LABEL_23;
      }
    }
LABEL_71:
    sub_2208273E8((uint64_t *)&v98, *(void *)(v89 + 8 * v44));
    sub_220837F88(*(void *)(v89 + 8 * v44));
    unint64_t v26 = v92;
    uint64_t v23 = v101;
    if (*(void *)(v101 + 16) < v86) {
      continue;
    }
    break;
  }
LABEL_72:
  swift_release();
  long long v98 = 0uLL;
  char v99 = 2;
  uint64_t v64 = swift_bridgeObjectRetain();
  uint64_t v65 = sub_2208379C8(v64);
  swift_bridgeObjectRelease();
  *(void *)&long long v96 = v65;
  sub_220838094((char **)&v96);
  swift_bridgeObjectRelease();
  uint64_t v66 = *(void *)(v96 + 16);
  if (v66)
  {
    uint64_t v67 = (int64_t *)(v96 + 32);
    while (1)
    {
      int64_t v69 = *v67++;
      int64_t v68 = v69;
      uint64_t v70 = v69 + 1;
      if (__OFADD__(v69, 1)) {
        break;
      }
      if (v70 < v68) {
        goto LABEL_96;
      }
      sub_22081A204(v68, v70);
      if (!--v66) {
        goto LABEL_77;
      }
    }
LABEL_95:
    __break(1u);
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
LABEL_98:
    __break(1u);
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
LABEL_101:
    __break(1u);
LABEL_102:
    __break(1u);
    goto LABEL_103;
  }
LABEL_77:
  swift_release();
  long long v96 = 0uLL;
  char v97 = 2;
  uint64_t v71 = swift_bridgeObjectRetain();
  char v72 = (char *)sub_2208379C8(v71);
  swift_bridgeObjectRelease();
  uint64_t v95 = v72;
  sub_220838094(&v95);
  swift_bridgeObjectRelease();
  uint64_t v73 = v95;
  uint64_t v74 = *((void *)v95 + 2);
  if (v74)
  {
    uint64_t v75 = 0;
    while (1)
    {
      int64_t v76 = *(void *)&v73[8 * v75 + 32];
      uint64_t v77 = v76 + 1;
      if (__OFADD__(v76, 1)) {
        goto LABEL_97;
      }
      if (v77 < v76) {
        goto LABEL_98;
      }
      ++v75;
      sub_22081A204(v76, v77);
      if (v74 == v75)
      {
        swift_release();
        long long v78 = v96;
        char v79 = v97;
        goto LABEL_84;
      }
    }
  }
  swift_release();
  long long v78 = 0uLL;
  char v79 = 2;
LABEL_84:
  char v80 = v99;
  *(void *)a1 = v87;
  *(void *)(a1 + 8) = v85;
  *(void *)(a1 + 16) = v83;
  *(_OWORD *)(a1 + 24) = v98;
  *(unsigned char *)(a1 + 40) = v80;
  *(void *)uint64_t v82 = v87;
  *(void *)(v82 + 8) = v85;
  *(void *)(v82 + 16) = v83;
  *(_OWORD *)(v82 + 24) = v78;
  *(unsigned char *)(v82 + 40) = v79;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_2209372A8(uint64_t a1, uint64_t a2, double a3)
{
  if (a3 <= 0.0 || a3 >= 1.0) {
    goto LABEL_60;
  }
  uint64_t v8 = *v3;
  uint64_t v9 = v3[1];
  uint64_t v10 = v3[2];
  uint64_t v11 = v3[3];
  uint64_t v12 = v3[4];
  int v13 = *((unsigned __int8 *)v3 + 40);
  uint64_t v14 = v11;
  if (*((unsigned char *)v3 + 40))
  {
    if (v13 == 1 && *(void *)(v11 + 16))
    {
      uint64_t v14 = *(void *)(v11 + 32);
      swift_bridgeObjectRetain();
    }
    else
    {
      sub_220883950(v3[3], v3[4], *((unsigned char *)v3 + 40));
      if (v16)
      {
        sub_220831F30(v11, v12, v13);
        uint64_t v14 = 0;
      }
      else
      {
        uint64_t v14 = v15;
        sub_220831F30(v11, v12, v13);
      }
    }
  }
  sub_220883950(v11, v12, v13);
  v73[0] = v8;
  v73[1] = v9;
  if (v18) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = v17;
  }
  v73[2] = v10;
  v73[3] = v11;
  v73[4] = v12;
  char v74 = v13;
  uint64_t v75 = v14;
  uint64_t v76 = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Swift::Int v20 = sub_220837AB0((uint64_t)v73);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v11, v12, v13);
  unint64_t v21 = *(void *)(v20 + 16);
  double v22 = (double)(uint64_t)v21 * a3;
  if ((~*(void *)&v22 & 0x7FF0000000000000) == 0) {
    goto LABEL_56;
  }
  if (v22 <= -9.22337204e18)
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  if (v22 >= 9.22337204e18)
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  uint64_t v65 = v10;
  uint64_t v23 = a2;
  uint64_t v24 = a1;
  uint64_t v25 = (uint64_t)v22;
  uint64_t v72 = MEMORY[0x263F8EE88];
  uint64_t v26 = swift_retain();
  uint64_t v27 = sub_220833AE4(v26);
  swift_release();
  uint64_t v71 = v27;
  uint64_t v63 = v24;
  uint64_t v64 = v8;
  if (v25 < 1)
  {
    swift_release();
    uint64_t v42 = v23;
    uint64_t v41 = v65;
  }
  else
  {
    if (!v21)
    {
LABEL_59:
      __break(1u);
LABEL_60:
      sub_22093F090();
      __break(1u);
      swift_release();
      __break(1u);
      uint64_t result = swift_release();
      __break(1u);
      return result;
    }
    uint64_t v28 = v25;
    uint64_t v61 = v9;
    uint64_t v62 = v23;
    Swift::Int v29 = v20 + 32;
    uint64_t v30 = MEMORY[0x263F8EE88];
    unint64_t v31 = -(uint64_t)v21 % v21;
    while (2)
    {
      uint64_t v33 = v30 + 56;
      while (1)
      {
LABEL_24:
        *(void *)&long long v69 = 0;
        MEMORY[0x223C6B160](&v69, 8);
        uint64_t v34 = ((unint64_t)v69 * (unsigned __int128)v21) >> 64;
        if (v21 > (unint64_t)v69 * v21 && v31 > (unint64_t)v69 * v21)
        {
          do
          {
            *(void *)&long long v69 = 0;
            MEMORY[0x223C6B160](&v69, 8);
          }
          while (v31 > (unint64_t)v69 * v21);
          uint64_t v34 = ((unint64_t)v69 * (unsigned __int128)v21) >> 64;
        }
        if (v34 >= *(void *)(v20 + 16))
        {
          __break(1u);
          goto LABEL_52;
        }
        if (!*(void *)(v30 + 16)) {
          break;
        }
        uint64_t v35 = *(void *)(v29 + 8 * v34);
        uint64_t v36 = sub_22093F420();
        uint64_t v37 = -1 << *(unsigned char *)(v30 + 32);
        unint64_t v38 = v36 & ~v37;
        if (((*(void *)(v33 + ((v38 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v38) & 1) == 0) {
          break;
        }
        uint64_t v39 = *(void *)(v30 + 48);
        if (*(void *)(v39 + 8 * v38) != v35)
        {
          uint64_t v40 = ~v37;
          while (1)
          {
            unint64_t v38 = (v38 + 1) & v40;
            if (((*(void *)(v33 + ((v38 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v38) & 1) == 0) {
              goto LABEL_22;
            }
            if (*(void *)(v39 + 8 * v38) == v35) {
              goto LABEL_24;
            }
          }
        }
      }
LABEL_22:
      uint64_t v32 = 8 * v34;
      sub_2208273E8((uint64_t *)&v69, *(void *)(v29 + v32));
      sub_220837F88(*(void *)(v29 + v32));
      uint64_t v30 = v72;
      if (*(void *)(v72 + 16) < v28) {
        continue;
      }
      break;
    }
    swift_release();
    uint64_t v41 = v65;
    uint64_t v9 = v61;
    uint64_t v42 = v62;
  }
  long long v69 = 0uLL;
  char v70 = 2;
  uint64_t v43 = swift_bridgeObjectRetain();
  uint64_t v44 = sub_2208379C8(v43);
  swift_bridgeObjectRelease();
  *(void *)&long long v67 = v44;
  sub_220838094((char **)&v67);
  swift_bridgeObjectRelease();
  uint64_t v45 = *(void *)(v67 + 16);
  if (v45)
  {
    unint64_t v46 = (int64_t *)(v67 + 32);
    while (1)
    {
      int64_t v48 = *v46++;
      int64_t v47 = v48;
      uint64_t v49 = v48 + 1;
      if (__OFADD__(v48, 1)) {
        break;
      }
      if (v49 < v47) {
        goto LABEL_53;
      }
      sub_22081A204(v47, v49);
      if (!--v45) {
        goto LABEL_43;
      }
    }
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
LABEL_43:
  swift_release();
  long long v67 = 0uLL;
  char v68 = 2;
  uint64_t v50 = swift_bridgeObjectRetain();
  unint64_t v51 = (char *)sub_2208379C8(v50);
  swift_bridgeObjectRelease();
  uint64_t v66 = v51;
  sub_220838094(&v66);
  swift_bridgeObjectRelease();
  uint64_t v52 = v66;
  uint64_t v53 = *((void *)v66 + 2);
  if (v53)
  {
    uint64_t v54 = 0;
    while (1)
    {
      int64_t v55 = *(void *)&v52[8 * v54 + 32];
      uint64_t v56 = v55 + 1;
      if (__OFADD__(v55, 1)) {
        break;
      }
      if (v56 < v55) {
        goto LABEL_55;
      }
      ++v54;
      sub_22081A204(v55, v56);
      if (v53 == v54)
      {
        swift_release();
        long long v57 = v67;
        char v58 = v68;
        goto LABEL_50;
      }
    }
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  swift_release();
  long long v57 = 0uLL;
  char v58 = 2;
LABEL_50:
  char v59 = v70;
  *(void *)uint64_t v63 = v64;
  *(void *)(v63 + 8) = v9;
  *(void *)(v63 + 16) = v41;
  *(_OWORD *)(v63 + 24) = v69;
  *(unsigned char *)(v63 + 40) = v59;
  *(void *)uint64_t v42 = v64;
  *(void *)(v42 + 8) = v9;
  *(void *)(v42 + 16) = v41;
  *(_OWORD *)(v42 + 24) = v57;
  *(unsigned char *)(v42 + 40) = v58;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_2209377E0(uint64_t a1)
{
  sub_220937858(a1, (uint64_t)v4);
  sub_220833B58((uint64_t)v4);
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = sub_22083196C(v1, (uint64_t)v4);
  sub_220833BC0((uint64_t)v4);
  swift_bridgeObjectRelease();
  sub_220833BC0((uint64_t)v4);
  return v2;
}

double sub_220937858@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  unsigned __int8 v7 = (char *)&v14 - v6;
  uint64_t v16 = *v2;
  sub_22093E900();
  swift_getWitnessTable();
  if (sub_22093EB70())
  {
    int64x2_t v15 = vdupq_n_s64(MEMORY[0x263F8EE78]);
    unint64_t v8 = sub_22080CCF4(MEMORY[0x263F8EE78]);
    long long v9 = 0uLL;
    char v10 = 2;
  }
  else
  {
    sub_22093E940();
    uint64_t v11 = &v7[*(int *)(TupleTypeMetadata2 + 48)];
    int64x2_t v12 = *(int64x2_t *)v11;
    unint64_t v8 = *((void *)v11 + 2);
    long long v14 = *(_OWORD *)(v11 + 24);
    int64x2_t v15 = v12;
    char v10 = v11[40];
    (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v7, v4);
    long long v9 = v14;
  }
  double result = *(double *)v15.i64;
  *(int64x2_t *)a2 = v15;
  *(void *)(a2 + 16) = v8;
  *(_OWORD *)(a2 + 24) = v9;
  *(unsigned char *)(a2 + 40) = v10;
  return result;
}

uint64_t sub_2209379E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_220937858(a3, (uint64_t)v7);
  sub_22080B6B4(v7[3], v7[4], v8);
  uint64_t v5 = sub_22080BA90(a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_220937A74(void *a1)
{
  uint64_t v3 = type metadata accessor for FormattingOptions();
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v60 = (uint64_t)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1[2] - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v65 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = v8;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v70 = sub_22093ED30();
  uint64_t v10 = *(void *)(v70 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v70);
  int v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  char v68 = (char *)&v59 - v15;
  uint64_t v16 = a1[3];
  uint64_t v59 = *(void *)(v16 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  ((void (*)(uint64_t))v1[1])(v17);
  uint64_t v20 = *v1;
  uint64_t v21 = MEMORY[0x223C69FE0](*v1, TupleTypeMetadata2);
  uint64_t v22 = a1[5];
  uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 24);
  uint64_t v71 = v19;
  uint64_t v72 = v16;
  v23(v21, v16, v22);
  uint64_t v78 = 1937207154;
  unint64_t v79 = 0xE400000000000000;
  sub_220831BD0(MEMORY[0x263F8EE78]);
  uint64_t v80 = v24;
  uint64_t v64 = &v80;
  sub_2208F180C(v21);
  uint64_t v73 = TupleTypeMetadata2 - 8;
  long long v67 = (void (**)(char *, char *, uint64_t))(v10 + 32);
  uint64_t v63 = (void (**)(char *, char *, uint64_t))(v6 + 32);
  uint64_t v69 = v22;
  uint64_t v62 = v22 + 32;
  uint64_t v61 = (void (**)(char *, uint64_t))(v6 + 8);
  swift_bridgeObjectRetain();
  uint64_t v25 = 0;
  while (1)
  {
    if (v25 == MEMORY[0x223C6A010](v20, TupleTypeMetadata2))
    {
      uint64_t v26 = *(void *)(TupleTypeMetadata2 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56))(v13, 1, 1, TupleTypeMetadata2);
      goto LABEL_7;
    }
    char v27 = sub_22093E8B0();
    sub_22093E860();
    if (v27)
    {
      uint64_t v28 = *(void *)(TupleTypeMetadata2 - 8);
      (*(void (**)(char *, unint64_t, uint64_t))(v28 + 16))(v13, v20+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(void *)(v28 + 72) * v25, TupleTypeMetadata2);
      BOOL v29 = __OFADD__(v25++, 1);
      if (v29) {
        break;
      }
      goto LABEL_6;
    }
    uint64_t result = sub_22093EEF0();
    uint64_t v28 = *(void *)(TupleTypeMetadata2 - 8);
    if (*(void *)(v28 + 64) != 8)
    {
      __break(1u);
      return result;
    }
    v74[0] = result;
    (*(void (**)(char *, void *, uint64_t))(v28 + 16))(v13, v74, TupleTypeMetadata2);
    swift_unknownObjectRelease();
    BOOL v29 = __OFADD__(v25++, 1);
    if (v29) {
      break;
    }
LABEL_6:
    uint64_t v26 = v28;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v13, 0, 1, TupleTypeMetadata2);
LABEL_7:
    uint64_t v30 = v68;
    (*v67)(v68, v13, v70);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v30, 1, TupleTypeMetadata2) == 1) {
      goto LABEL_13;
    }
    unint64_t v31 = &v30[*(int *)(TupleTypeMetadata2 + 48)];
    long long v32 = *((_OWORD *)v31 + 1);
    long long v81 = *(_OWORD *)v31;
    *(_OWORD *)uint64_t v82 = v32;
    *(_OWORD *)&v82[9] = *(_OWORD *)(v31 + 25);
    uint64_t v33 = v20;
    uint64_t v34 = v65;
    uint64_t v35 = v13;
    uint64_t v36 = v66;
    (*v63)(v65, v30, v66);
    (*(void (**)(char *, uint64_t))(v69 + 32))(v34, v72);
    uint64_t v37 = sub_2208EE804(*(uint64_t *)&v82[8], *(uint64_t *)&v82[16], v82[24]);
    sub_220833B58((uint64_t)&v81);
    uint64_t v38 = swift_bridgeObjectRetain();
    sub_22083196C(v38, (uint64_t)&v81);
    sub_220833BC0((uint64_t)&v81);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_220833BC0((uint64_t)&v81);
    sub_2208F1E18(v37, 0);
    uint64_t v39 = v34;
    uint64_t v20 = v33;
    uint64_t v40 = v36;
    int v13 = v35;
    (*v61)(v39, v40);
  }
  __break(1u);
LABEL_13:
  swift_bridgeObjectRelease();
  uint64_t v42 = MEMORY[0x263F8EE78];
  unint64_t v43 = sub_22080CCF4(MEMORY[0x263F8EE78]);
  uint64_t v75 = v42;
  uint64_t v76 = v42;
  unint64_t v77 = v43;
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v69 + 40))(&v75, 1, v72);
  uint64_t v44 = *(void *)(v75 + 16);
  uint64_t v46 = v78;
  unint64_t v45 = v79;
  if (v44)
  {
    int64_t v47 = (void *)(v75 + 32);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v49 = v47[3];
      uint64_t v48 = v47[4];
      __swift_project_boxed_opaque_existential_1(v47, v49);
      if ((*(uint64_t (**)(uint64_t))(*(void *)(v48 + 8) + 8))(v49) == v46 && v50 == v45) {
        break;
      }
      char v52 = sub_22093F250();
      swift_bridgeObjectRelease();
      if (v52) {
        goto LABEL_23;
      }
      v47 += 5;
      if (!--v44)
      {
        swift_bridgeObjectRelease();
        uint64_t v46 = v78;
        unint64_t v45 = v79;
        goto LABEL_24;
      }
    }
    swift_bridgeObjectRelease();
LABEL_23:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v46 = 0x73776F725FLL;
    unint64_t v45 = 0xE500000000000000;
  }
LABEL_24:
  uint64_t v53 = v80;
  v74[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413F0);
  v74[4] = &off_26D2223C0;
  v74[0] = v46;
  v74[1] = v45;
  v74[2] = v53;
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  DataFrame.append(column:)((uint64_t)v74);
  sub_22080B0D8((uint64_t)v74);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v54 = v75;
  uint64_t v55 = v76;
  uint64_t v56 = v77;
  uint64_t v57 = v60;
  FormattingOptions.init()(v60);
  uint64_t v58 = sub_2208B0224(v57, v54, v55, v56);
  sub_2208946CC(v57);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v71, v72);
  swift_release();
  swift_bridgeObjectRelease();
  return v58;
}

uint64_t sub_220938304(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, unsigned __int8 a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a8 - 8) + 16))(a1, a3, a8);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a13 + 24))(v37, a10, a13);
  uint64_t v17 = v37[0];
  uint64_t v18 = v37[1];
  uint64_t v19 = v37[2];
  if (!*(void *)(v37[0] + 16))
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    goto LABEL_6;
  }
  uint64_t v33 = a4;
  unsigned __int8 v20 = a6;
  sub_22080B5B8(v37[0] + 32, (uint64_t)v34);
  uint64_t v21 = v35;
  uint64_t v22 = v36;
  __swift_project_boxed_opaque_existential_1(v34, v35);
  uint64_t v23 = *(void *)(v22 + 8);
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + 48);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v25 = v24(v21, v23);
  uint64_t result = sub_22080B0D8((uint64_t)v34);
  if ((v25 & 0x8000000000000000) == 0)
  {
    a6 = v20;
    a4 = v33;
    if (v25)
    {
      char v27 = 0;
LABEL_7:
      sub_220831F30(0, v25, v27);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22080B6B4(0, v25, v27);
      uint64_t v28 = sub_22081A46C(a4, a5, a6, 0, v25, v27);
      uint64_t v30 = v29;
      char v32 = v31;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)a2 = v17;
      *(void *)(a2 + 8) = v18;
      *(void *)(a2 + 16) = v19;
      *(void *)(a2 + 24) = v28;
      *(void *)(a2 + 32) = v30;
      *(unsigned char *)(a2 + 40) = v32;
      return result;
    }
LABEL_6:
    uint64_t v25 = 0;
    char v27 = 2;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_22093850C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_267F18E60);
  uint64_t v6 = (uint64_t *)(a1 + *(int *)(swift_getTupleTypeMetadata2() + 48));
  uint64_t v7 = *v6;
  uint64_t v8 = v6[1];
  uint64_t v9 = *((unsigned __int8 *)v6 + 16);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a3, a3 + *(int *)(TupleTypeMetadata2 + 48), a1, v7, v8, v9);
}

double sub_2209385E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 - 8) + 16))(a1, a3, a5);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(a10 + 24))(&v22, a7, a10);
  uint64_t v13 = v23;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a10 + 32))(&v18, a7, a10);
  uint64_t v14 = v19;
  uint64_t v15 = v20;
  char v16 = v21;
  sub_220831F30(v19, v20, v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v14, v15, v16);
  double result = *(double *)&v22;
  *(_OWORD *)a2 = v22;
  *(void *)(a2 + 16) = v13;
  *(void *)(a2 + 24) = v14;
  *(void *)(a2 + 32) = v15;
  *(unsigned char *)(a2 + 40) = v16;
  return result;
}

uint64_t sub_220938700@<X0>(unsigned __int8 *a1@<X0>, void *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v60 = a3;
  uint64_t v77 = *(void *)(a2[2] - 8);
  MEMORY[0x270FA5388](a1);
  char v68 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = v7;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v73 = sub_22093ED30();
  uint64_t v71 = *(void *)(v73 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v73);
  uint64_t v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v72 = (char *)&v56 - v13;
  uint64_t v14 = a2[3];
  uint64_t v59 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v12);
  char v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v58 = *a1;
  uint64_t v61 = *v3;
  uint64_t v17 = MEMORY[0x223C69FE0]();
  ((void (*)(void))v3[1])();
  uint64_t v18 = a2[5];
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 24);
  char v74 = v16;
  uint64_t v75 = v14;
  v19(v17, v14, v18);
  uint64_t v83 = 0x746E756F63;
  unint64_t v84 = 0xE500000000000000;
  uint64_t v20 = MEMORY[0x263F8EE78];
  sub_220831BD0(MEMORY[0x263F8EE78]);
  uint64_t v85 = v21;
  uint64_t v57 = &v85;
  sub_2208F180C(0);
  uint64_t v83 = 0x746E756F63;
  unint64_t v84 = 0xE500000000000000;
  uint64_t v65 = (char *)&v86 + 8;
  *(void *)uint64_t v78 = 0x746E756F63;
  *(void *)&v78[8] = 0xE500000000000000;
  sub_220831BD0(v20);
  *(void *)&v78[16] = v22;
  sub_2208F180C(v17);
  swift_release();
  uint64_t v23 = v61;
  swift_bridgeObjectRelease();
  uint64_t v85 = *(void *)v78;
  uint64_t v76 = TupleTypeMetadata2 - 8;
  long long v86 = *(_OWORD *)&v78[8];
  uint64_t v70 = (void (**)(char *, char *, uint64_t))(v71 + 32);
  uint64_t v64 = (void (**)(char *, char *, uint64_t))(v77 + 32);
  uint64_t v71 = v18;
  uint64_t v63 = v18 + 32;
  uint64_t v62 = (void (**)(char *, uint64_t))(v77 + 8);
  swift_bridgeObjectRetain();
  uint64_t v24 = 0;
  uint64_t v67 = TupleTypeMetadata2;
  uint64_t v66 = v11;
  while (1)
  {
    if (v24 == MEMORY[0x223C6A010](v23, TupleTypeMetadata2))
    {
      uint64_t v25 = *(void *)(TupleTypeMetadata2 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v11, 1, 1, TupleTypeMetadata2);
      goto LABEL_7;
    }
    char v26 = sub_22093E8B0();
    sub_22093E860();
    if (v26)
    {
      uint64_t v27 = *(void *)(TupleTypeMetadata2 - 8);
      (*(void (**)(char *, unint64_t, uint64_t))(v27 + 16))(v11, v23+ ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))+ *(void *)(v27 + 72) * v24, TupleTypeMetadata2);
      BOOL v28 = __OFADD__(v24++, 1);
      if (v28) {
        break;
      }
      goto LABEL_6;
    }
    uint64_t result = sub_22093EEF0();
    uint64_t v27 = *(void *)(TupleTypeMetadata2 - 8);
    if (*(void *)(v27 + 64) != 8)
    {
      __break(1u);
      return result;
    }
    *(void *)uint64_t v78 = result;
    (*(void (**)(char *, unsigned char *, uint64_t))(v27 + 16))(v11, v78, TupleTypeMetadata2);
    swift_unknownObjectRelease();
    BOOL v28 = __OFADD__(v24++, 1);
    if (v28) {
      break;
    }
LABEL_6:
    uint64_t v25 = v27;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v11, 0, 1, TupleTypeMetadata2);
LABEL_7:
    uint64_t v29 = v72;
    (*v70)(v72, v11, v73);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v29, 1, TupleTypeMetadata2) == 1) {
      goto LABEL_13;
    }
    uint64_t v30 = &v29[*(int *)(TupleTypeMetadata2 + 48)];
    uint64_t v31 = *((void *)v30 + 3);
    uint64_t v77 = v24;
    uint64_t v32 = *((void *)v30 + 4);
    char v33 = v30[40];
    uint64_t v34 = v68;
    uint64_t v35 = v69;
    (*v64)(v68, v29, v69);
    (*(void (**)(char *, uint64_t))(v71 + 32))(v34, v75);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_220831F30(v31, v32, v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22080B6B4(v31, v32, v33);
    uint64_t v36 = sub_2208EE804(v31, v32, v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v37 = v32;
    uint64_t v24 = v77;
    sub_22080B6B4(v31, v37, v33);
    sub_2208F1E18(v36, 0);
    uint64_t v38 = v34;
    uint64_t v11 = v66;
    uint64_t v39 = v35;
    TupleTypeMetadata2 = v67;
    (*v62)(v38, v39);
  }
  __break(1u);
LABEL_13:
  swift_bridgeObjectRelease();
  uint64_t v41 = MEMORY[0x263F8EE78];
  unint64_t v42 = sub_22080CCF4(MEMORY[0x263F8EE78]);
  *(void *)&long long v81 = v41;
  *((void *)&v81 + 1) = v41;
  unint64_t v82 = v42;
  (*(void (**)(long long *, void, uint64_t))(v71 + 40))(&v81, 0, v75);
  uint64_t v44 = v83;
  unint64_t v43 = (void *)v84;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v85 = v44;
  *(void *)&long long v86 = v43;
  long long v45 = v81;
  uint64_t v46 = v82;
  *(_OWORD *)uint64_t v78 = v81;
  *(void *)&v78[16] = v82;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v47._countAndFlagsBits = v44;
  v47._object = v43;
  Swift::Int_optional v87 = DataFrame.indexOfColumn(_:)(v47);
  Swift::Bool is_nil = v87.is_nil;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!is_nil)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2208F15A4(v57, v44, (uint64_t)v43, v45, *((uint64_t *)&v45 + 1), v46);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v44 = v85;
    unint64_t v43 = (void *)v86;
  }
  uint64_t v49 = *((void *)&v86 + 1);
  uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413F0);
  uint64_t v80 = &off_26D2223C0;
  *(void *)uint64_t v78 = v44;
  *(void *)&v78[8] = v43;
  *(void *)&v78[16] = v49;
  swift_bridgeObjectRetain();
  swift_retain();
  DataFrame.append(column:)((uint64_t)v78);
  sub_22080B0D8((uint64_t)v78);
  char v50 = v58;
  if (v58 == 2)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v74, v75);
    unint64_t v51 = v82;
    char v52 = v60;
    _OWORD *v60 = v81;
    *((void *)v52 + 2) = v51;
  }
  else
  {
    long long v53 = v81;
    uint64_t v54 = v82;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v55 = (uint64_t (**)(char *, uint64_t))(v59 + 8);
    if (v50) {
      sub_2208968CC(0x746E756F63, 0xE500000000000000, v53, *((uint64_t *)&v53 + 1), v54, (uint64_t)v60);
    }
    else {
      sub_220896884(0x746E756F63, 0xE500000000000000, v53, *((uint64_t *)&v53 + 1), v54, (uint64_t)v60);
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (*v55)(v74, v75);
  }
  return result;
}

uint64_t sub_220939098@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(long long *)@<X3>, uint64_t a5@<X4>, void *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _OWORD *a9@<X8>)
{
  uint64_t v105 = a7;
  uint64_t v103 = a5;
  uint64_t v102 = a4;
  uint64_t v114 = a3;
  uint64_t v113 = a2;
  uint64_t v76 = a9;
  uint64_t v99 = sub_22093ED30();
  uint64_t v112 = *(uint64_t **)(v99 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v99);
  uint64_t v101 = (char *)&v76 - v14;
  uint64_t v15 = a6[2];
  uint64_t v111 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v94 = (char *)&v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v84 = sub_22093ED30();
  uint64_t v110 = *(void *)(v84 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v84);
  Swift::Int_optional v87 = (char *)&v76 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v85 = (char *)&v76 - v21;
  uint64_t v22 = a6[3];
  uint64_t v77 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v76 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = *v9;
  uint64_t v86 = TupleTypeMetadata2;
  Swift::Int v25 = MEMORY[0x223C69FE0]();
  ((void (*)(void))v9[1])();
  uint64_t v26 = a6[5];
  uint64_t v27 = *(void (**)(Swift::Int, uint64_t, uint64_t))(v26 + 24);
  uint64_t v90 = v24;
  v27(v25, v22, v26);
  uint64_t v79 = a1;
  *(void *)&long long v130 = a1;
  uint64_t v95 = v15;
  uint64_t v117 = v15;
  uint64_t v118 = v22;
  uint64_t v91 = v22;
  uint64_t v119 = v105;
  uint64_t v120 = a8;
  uint64_t v121 = a6[4];
  uint64_t v122 = v26;
  uint64_t v92 = v26;
  uint64_t v123 = v113;
  uint64_t v124 = v114;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18BE0);
  uint64_t v29 = type metadata accessor for SingleColumnBuilder();
  unint64_t v30 = sub_2208F8B14();
  uint64_t v31 = v115;
  uint64_t v33 = sub_2208F0D18((void (*)(char *, char *))sub_22093D84C, (uint64_t)v116, v28, v29, MEMORY[0x263F8E628], v30, MEMORY[0x263F8E658], v32);
  uint64_t v115 = v31;
  uint64_t v135 = v33;
  uint64_t v34 = swift_bridgeObjectRetain();
  uint64_t v35 = MEMORY[0x223C69FE0](v34, v29);
  uint64_t result = swift_bridgeObjectRelease();
  if (v35 < 0)
  {
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
  }
  else
  {
    if (v35)
    {
      uint64_t v37 = sub_22093E900();
      sub_22093E880();
      nullsub_5(v37);
      sub_22093E880();
      nullsub_5(v37);
      sub_22093E880();
      nullsub_5(v37);
      unint64_t v38 = 0;
      uint64_t v39 = 32;
      do
      {
        sub_22093E880();
        sub_2208F8A34(v38, v135);
        sub_2208399F4(v25, v29);
        nullsub_5(v37);
        v39 += 40;
        ++v38;
      }
      while (v35 != v38);
    }
    uint64_t v40 = sub_22093E900();
    uint64_t v41 = v88;
    swift_bridgeObjectRetain();
    sub_22093E880();
    nullsub_5(v40);
    sub_22093E880();
    nullsub_5(v40);
    sub_22093E880();
    nullsub_5(v40);
    uint64_t v42 = 0;
    uint64_t v43 = v86;
    uint64_t v93 = v86 - 8;
    uint64_t v83 = (void (**)(char *, char *, uint64_t))(v110 + 32);
    unint64_t v82 = (void (**)(char *, char *, uint64_t))(v111 + 32);
    uint64_t v81 = v92 + 32;
    long long v96 = (uint64_t (**)(uint64_t, uint64_t))(v112 + 1);
    uint64_t v80 = (void (**)(char *, uint64_t))(v111 + 8);
    uint64_t v78 = (uint64_t *)(v79 + 40);
    uint64_t v98 = v29;
    uint64_t v97 = v40;
    while (1)
    {
      uint64_t v44 = MEMORY[0x223C6A010](v41, v43);
      long long v45 = v87;
      if (v42 == v44)
      {
        uint64_t v89 = v42;
        uint64_t v46 = *(void *)(v43 - 8);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v46 + 56))(v87, 1, 1, v43);
      }
      else
      {
        char v47 = sub_22093E8B0();
        sub_22093E860();
        if (v47)
        {
          uint64_t v48 = *(void *)(v43 - 8);
          uint64_t result = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v48 + 16))(v45, v41+ ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))+ *(void *)(v48 + 72) * v42, v43);
        }
        else
        {
          uint64_t result = sub_22093EEF0();
          uint64_t v48 = *(void *)(v43 - 8);
          if (*(void *)(v48 + 64) != 8) {
            goto LABEL_37;
          }
          *(void *)&long long v130 = result;
          (*(void (**)(char *, long long *, uint64_t))(v48 + 16))(v45, &v130, v43);
          uint64_t result = swift_unknownObjectRelease();
        }
        uint64_t v89 = v42 + 1;
        if (__OFADD__(v42, 1)) {
          goto LABEL_34;
        }
        uint64_t v46 = v48;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v43);
      }
      uint64_t v49 = v85;
      (*v83)(v85, v45, v84);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v49, 1, v43) == 1) {
        break;
      }
      char v50 = &v49[*(int *)(v43 + 48)];
      uint64_t v108 = *(void *)v50;
      uint64_t v107 = *((void *)v50 + 1);
      unint64_t v106 = *((void *)v50 + 2);
      uint64_t v109 = *((void *)v50 + 3);
      uint64_t v110 = *((void *)v50 + 4);
      LODWORD(v111) = v50[40];
      unint64_t v51 = v49;
      char v52 = v94;
      (*v82)(v94, v51, v95);
      (*(void (**)(char *, uint64_t))(v92 + 32))(v52, v91);
      uint64_t v53 = swift_bridgeObjectRetain();
      uint64_t v54 = MEMORY[0x223C69FE0](v53, v29);
      uint64_t result = swift_bridgeObjectRelease();
      if (v54 < 0) {
        goto LABEL_33;
      }
      if (v54)
      {
        sub_22093E880();
        nullsub_5(v40);
        sub_22093E880();
        nullsub_5(v40);
        uint64_t v104 = *(void *)(v79 + 16);
        sub_22093E880();
        uint64_t result = nullsub_5(v40);
        unint64_t v55 = 0;
        uint64_t v56 = 32;
        uint64_t v57 = v78;
        uint64_t v100 = v54;
        while (v54 != v55)
        {
          if (v104 == v55) {
            goto LABEL_32;
          }
          uint64_t v113 = v56;
          uint64_t v58 = *v57;
          uint64_t v114 = *(v57 - 1);
          *(void *)&long long v125 = v108;
          *((void *)&v125 + 1) = v107;
          uint64_t v59 = v109;
          unint64_t v126 = v106;
          uint64_t v127 = v109;
          uint64_t v60 = v110;
          uint64_t v128 = v110;
          char v61 = v111;
          char v129 = v111;
          uint64_t v112 = v57;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_220831F30(v59, v60, v61);
          DataFrame.Slice.subscript.getter(v114, v58, (uint64_t)&v130);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_22080B6B4(v59, v60, v61);
          uint64_t v62 = v132;
          uint64_t v63 = v133;
          char v64 = v134;
          long long v125 = v130;
          unint64_t v126 = v131;
          uint64_t v127 = v132;
          uint64_t v128 = v133;
          char v129 = v134;
          uint64_t v65 = (uint64_t)v101;
          uint64_t v66 = v115;
          v102(&v125);
          if (v66)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_22080B6B4(v109, v110, v111);
            swift_release();
            swift_bridgeObjectRelease();
            sub_22080B6B4(v62, v63, v64);
            (*v80)(v94, v95);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return (*(uint64_t (**)(char *, uint64_t))(v77 + 8))(v90, v91);
          }
          uint64_t v115 = 0;
          swift_release();
          swift_bridgeObjectRelease();
          sub_22080B6B4(v62, v63, v64);
          uint64_t v40 = v97;
          sub_22093E880();
          uint64_t v29 = v98;
          sub_2208F8A34(v55, v135);
          uint64_t v67 = v113;
          sub_220839A74(v65);
          nullsub_5(v40);
          uint64_t result = (*v96)(v65, v99);
          uint64_t v57 = v112 + 2;
          uint64_t v56 = v67 + 40;
          ++v55;
          uint64_t v54 = v100;
          if (v100 == v55) {
            goto LABEL_6;
          }
        }
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
LABEL_6:
      (*v80)(v94, v95);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22080B6B4(v109, v110, v111);
      uint64_t v43 = v86;
      uint64_t v41 = v88;
      uint64_t v42 = v89;
    }
    swift_bridgeObjectRelease();
    uint64_t v68 = MEMORY[0x263F8EE78];
    unint64_t v69 = sub_22080CCF4(MEMORY[0x263F8EE78]);
    *(void *)&long long v130 = v68;
    *((void *)&v130 + 1) = v68;
    unint64_t v131 = v69;
    (*(void (**)(long long *, void, uint64_t))(v92 + 40))(&v130, 0, v91);
    uint64_t v70 = swift_bridgeObjectRetain();
    uint64_t v71 = MEMORY[0x223C69FE0](v70, v29);
    uint64_t result = swift_bridgeObjectRelease();
    if (v71 < 0) {
      goto LABEL_36;
    }
    if (v71)
    {
      sub_22093E880();
      nullsub_5(v40);
      sub_22093E880();
      nullsub_5(v40);
      sub_22093E880();
      nullsub_5(v40);
      unint64_t v72 = 0;
      uint64_t v73 = 32;
      do
      {
        sub_22093E880();
        sub_2208F8A34(v72, v135);
        sub_220839AB0((uint64_t *)&v130, 0);
        nullsub_5(v40);
        v73 += 40;
        ++v72;
      }
      while (v71 != v72);
    }
    swift_bridgeObjectRelease();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v77 + 8))(v90, v91);
    unint64_t v74 = v131;
    uint64_t v75 = v76;
    *uint64_t v76 = v130;
    *((void *)v75 + 2) = v74;
  }
  return result;
}

unint64_t sub_220939EB4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v28 = *v2;
  uint64_t v4 = a1[3];
  uint64_t v22 = a1[2];
  uint64_t v23 = v4;
  uint64_t v5 = a1[5];
  uint64_t v24 = a1[4];
  uint64_t v25 = v5;
  void v20[2] = v22;
  void v20[3] = v4;
  v20[4] = v24;
  void v20[5] = v5;
  void v20[6] = sub_22093D910;
  v20[7] = &v21;
  swift_bridgeObjectRetain();
  swift_getTupleTypeMetadata2();
  uint64_t v6 = sub_22093E900();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v9 = (void *)sub_2208F0D18((void (*)(char *, char *))sub_22093D920, (uint64_t)v20, v6, (uint64_t)&type metadata for DataFrame, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v8);
  swift_bridgeObjectRelease();
  uint64_t v10 = v9[2];
  if (v10)
  {
    uint64_t v12 = v9[4];
    uint64_t v11 = v9[5];
    uint64_t v13 = v9[6];
    uint64_t v28 = v12;
    uint64_t v29 = v11;
    uint64_t v30 = v13;
    uint64_t v14 = v10 - 1;
    if (v10 == 1)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v18 = v9 + 9;
      do
      {
        uint64_t v19 = *v18;
        long long v26 = *((_OWORD *)v18 - 1);
        uint64_t v27 = v19;
        v17.columns._rawValue = &v26;
        DataFrame.append(rowsOf:)(v17);
        v18 += 3;
        --v14;
      }
      while (v14);
      unint64_t result = swift_bridgeObjectRelease_n();
      uint64_t v12 = v28;
      uint64_t v11 = v29;
      uint64_t v13 = v30;
    }
    *a2 = v12;
    a2[1] = v11;
    a2[2] = v13;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v16 = MEMORY[0x263F8EE78];
    unint64_t result = sub_22080CCF4(MEMORY[0x263F8EE78]);
    *a2 = v16;
    a2[1] = v16;
    a2[2] = result;
  }
  return result;
}

uint64_t sub_22093A0A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X6>, void *a5@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v25 = a5;
  uint64_t v26 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v10[1];
  uint64_t v29 = *v10;
  uint64_t v12 = v10[2];
  uint64_t v13 = v10[3];
  uint64_t v27 = v10[4];
  char v14 = *((unsigned char *)v10 + 40);
  uint64_t v15 = sub_2208EE804(v13, v27, v14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v16 = v27;
  sub_220831F30(v13, v27, v14);
  uint64_t v23 = v12;
  swift_bridgeObjectRelease();
  uint64_t v22 = v11;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v24 = v13;
  uint64_t v17 = sub_22080B6B4(v13, v16, v14);
  (*(void (**)(uint64_t))(v28 + 8))(v17);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 24))(v15, a3, a4);
  if (v15 < 0)
  {
    __break(1u);
  }
  else
  {
    if (v15)
    {
      uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 32);
      do
      {
        v19(a1, a3, a4);
        --v15;
      }
      while (v15);
    }
    *(void *)&long long v30 = v29;
    *((void *)&v30 + 1) = v22;
    uint64_t v20 = v24;
    uint64_t v31 = v23;
    uint64_t v32 = v24;
    uint64_t v33 = v16;
    char v34 = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_220831F30(v20, v16, v14);
    char v21 = v25;
    DataFrame.init(_:)(&v30, v25);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(a4 + 40))(v21, 1, a3, a4);
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v9, a3);
  }
  return result;
}

uint64_t sub_22093A2F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1;
  swift_bridgeObjectRetain();
  swift_getTupleTypeMetadata2();
  sub_22093E900();
  swift_getWitnessTable();
  uint64_t result = sub_22093EF70();
  if (!v2)
  {
    uint64_t v6 = *(void *)(v1 + 8);
    uint64_t v7 = *(void *)(v1 + 32);
    *(void *)a1 = result;
    *(void *)(a1 + 8) = v6;
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(v3 + 16);
    *(void *)(a1 + 32) = v7;
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_22093A400@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v40 = a4;
  v37[1] = *v4;
  uint64_t v7 = a3[2];
  uint64_t v6 = a3[3];
  uint64_t v31 = v7;
  uint64_t v32 = v6;
  uint64_t v8 = a3[4];
  uint64_t v9 = a3[5];
  uint64_t v33 = v8;
  uint64_t v34 = v9;
  uint64_t v35 = a1;
  uint64_t v36 = a2;
  uint64_t v24 = v7;
  uint64_t v25 = v6;
  uint64_t v22 = v6;
  uint64_t v26 = v8;
  uint64_t v27 = v9;
  uint64_t v28 = sub_22093D684;
  uint64_t v29 = &v30;
  swift_bridgeObjectRetain();
  swift_getTupleTypeMetadata2();
  uint64_t v10 = sub_22093E900();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F188B0);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v14 = sub_2208F0D18((void (*)(char *, char *))sub_22093D6B4, (uint64_t)v23, v10, TupleTypeMetadata2, v12, WitnessTable, MEMORY[0x263F8E4E0], (uint64_t)v37);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v5)
  {
    uint64_t v16 = v4[1];
    uint64_t v17 = v4[2];
    uint64_t v19 = v4[3];
    uint64_t v18 = v4[4];
    swift_retain();
    swift_retain();
    sub_22093D2B4(v14, v16, v17, v19, v18, v7, v22, (uint64_t)&type metadata for DataFrame, (uint64_t *)v38, v8, v9, (uint64_t)&protocol witness table for DataFrame);
    uint64_t result = swift_bridgeObjectRelease();
    long long v20 = v38[1];
    char v21 = v40;
    *uint64_t v40 = v38[0];
    v21[1] = v20;
    *((void *)v21 + 4) = v39;
  }
  return result;
}

uint64_t sub_22093A5E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_OWORD *), uint64_t a6, uint64_t a7)
{
  long long v16 = *(_OWORD *)(a4 + 16);
  uint64_t v11 = *(void *)(a4 + 32);
  char v12 = *(unsigned char *)(a4 + 40);
  uint64_t v13 = *(void *)(a7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(a1, a3, a7);
  v17[0] = *(_OWORD *)a4;
  v17[1] = v16;
  uint64_t v18 = v11;
  char v19 = v12;
  uint64_t v14 = v20;
  uint64_t result = a5(v17);
  if (v14) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(a1, a7);
  }
  return result;
}

uint64_t sub_22093A6FC@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, void *a3@<X7>, uint64_t a4@<X8>)
{
  uint64_t v9 = a1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t result = a2(a4, a4 + *(int *)(TupleTypeMetadata2 + 48), a1, v9);
  if (v4) {
    *a3 = v4;
  }
  return result;
}

uint64_t sub_22093A7C0@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)&long long v32 = swift_getTupleTypeMetadata2();
  uint64_t v7 = sub_22093ED30();
  uint64_t v30 = *(void *)(v7 - 8);
  *(void *)&long long v31 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v34 = (char *)&v29 - v8;
  uint64_t v9 = sub_22093ED30();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v29 - v12;
  uint64_t v14 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v11);
  long long v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  ((void (*)(_OWORD *))v3[3])(v33);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v6) == 1)
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    *(_OWORD *)((char *)a3 + 25) = 0u;
    *a3 = 0u;
    a3[1] = 0u;
  }
  else
  {
    uint64_t v33 = a3;
    uint64_t v18 = (*(uint64_t (**)(char *, char *, uint64_t))(v14 + 32))(v16, v13, v6);
    uint64_t v35 = *v3;
    MEMORY[0x270FA5388](v18);
    *(&v29 - 6) = v6;
    *(_OWORD *)(&v29 - 5) = *(_OWORD *)(a2 + 24);
    *(&v29 - 3) = *(void *)(a2 + 40);
    *(&v29 - 2) = (uint64_t)v16;
    uint64_t v19 = v32;
    sub_22093E900();
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    uint64_t v20 = v34;
    sub_22093E7D0();
    swift_bridgeObjectRelease();
    char v21 = *(uint64_t (**)(void))(v14 + 8);
    ((void (*)(char *, uint64_t))v21)(v16, v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v20, 1, v19) == 1)
    {
      uint64_t result = (*(uint64_t (**)(char *, void))(v30 + 8))(v34, v31);
      uint64_t v22 = 0;
      char v23 = 0;
      long long v24 = 0uLL;
      long long v25 = 0uLL;
    }
    else
    {
      uint64_t v26 = &v34[*(int *)(v19 + 48)];
      long long v27 = *(_OWORD *)v26;
      uint64_t v22 = *((void *)v26 + 2);
      long long v31 = *(_OWORD *)(v26 + 24);
      long long v32 = v27;
      char v23 = v26[40];
      uint64_t result = v21();
      long long v25 = v31;
      long long v24 = v32;
    }
    uint64_t v28 = v33;
    _OWORD *v33 = v24;
    *((void *)v28 + 2) = v22;
    *(_OWORD *)((char *)v28 + 24) = v25;
    *((unsigned char *)v28 + 40) = v23;
  }
  return result;
}

uint64_t sub_22093ABA0(uint64_t a1)
{
  return sub_22093BE64(a1, MEMORY[0x263F8D448]);
}

unint64_t sub_22093ABCC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_220939EB4(a1, a2);
}

uint64_t sub_22093AC0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(long long *)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X7>, _OWORD *a9@<X8>)
{
  return sub_220939098(a1, a2, a3, a4, a5, a8, a6, a7, a9);
}

double sub_22093AC34@<D0>(uint64_t a1@<X8>)
{
  return sub_22093AC8C((void (*)(_OWORD *__return_ptr))sub_22093A2F8, a1);
}

double sub_22093AC60@<D0>(uint64_t a1@<X8>)
{
  return sub_22093AC8C((void (*)(_OWORD *__return_ptr))sub_22093A400, a1);
}

double sub_22093AC8C@<D0>(void (*a1)(_OWORD *__return_ptr)@<X4>, uint64_t a2@<X8>)
{
  a1(v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

double sub_22093ACD8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5, double a6)
{
  sub_22093AD44(a3, a4 & 1, a5, (uint64_t)v14, a6);
  uint64_t v8 = v15;
  uint64_t v9 = v18;
  double result = *(double *)v14;
  long long v11 = v14[1];
  long long v12 = v16;
  long long v13 = v17;
  *(_OWORD *)a1 = v14[0];
  *(_OWORD *)(a1 + 16) = v11;
  *(void *)(a1 + 32) = v8;
  *(_OWORD *)a2 = v12;
  *(_OWORD *)(a2 + 16) = v13;
  *(void *)(a2 + 32) = v9;
  return result;
}

double sub_22093AD44@<D0>(uint64_t a1@<X0>, char a2@<W1>, void *a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  *(void *)&v64[0] = *v5;
  uint64_t v7 = a3[2];
  uint64_t v6 = a3[3];
  uint64_t v55 = v7;
  uint64_t v56 = v6;
  uint64_t v9 = a3[4];
  uint64_t v8 = a3[5];
  uint64_t v57 = v9;
  uint64_t v58 = v8;
  double v59 = a5;
  uint64_t v60 = a1;
  char v61 = a2 & 1;
  uint64_t v48 = v7;
  uint64_t v49 = v6;
  uint64_t v50 = v9;
  uint64_t v51 = v8;
  uint64_t v10 = v8;
  uint64_t v31 = v8;
  char v52 = sub_22093D998;
  uint64_t v53 = &v54;
  swift_bridgeObjectRetain();
  swift_getTupleTypeMetadata2();
  uint64_t v11 = sub_22093E900();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267F197E8);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v15 = sub_2208F0D18((void (*)(char *, char *))sub_22093D9D8, (uint64_t)v47, v11, TupleTypeMetadata2, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v14);
  swift_bridgeObjectRelease();
  *(void *)&v64[0] = v15;
  uint64_t v43 = v7;
  uint64_t v44 = v6;
  uint64_t v33 = v6;
  uint64_t v45 = v9;
  uint64_t v46 = v10;
  uint64_t v16 = sub_22093E900();
  uint64_t v17 = swift_getTupleTypeMetadata2();
  uint64_t v18 = swift_getWitnessTable();
  uint64_t v32 = sub_2208F0D18((void (*)(char *, char *))sub_22093DA34, (uint64_t)v42, v16, v17, MEMORY[0x263F8E628], v18, MEMORY[0x263F8E658], v19);
  *(void *)&v64[0] = v15;
  uint64_t v38 = v7;
  uint64_t v39 = v6;
  uint64_t v40 = v9;
  uint64_t v41 = v31;
  uint64_t v34 = sub_2208F0D18((void (*)(char *, char *))sub_22093DA58, (uint64_t)v37, v16, v17, MEMORY[0x263F8E628], v18, MEMORY[0x263F8E658], v20);
  swift_bridgeObjectRelease();
  uint64_t v21 = v35[1];
  uint64_t v22 = v35[2];
  uint64_t v24 = v35[3];
  uint64_t v23 = v35[4];
  swift_retain();
  swift_retain();
  sub_22093D2B4(v32, v21, v22, v24, v23, v7, v33, (uint64_t)&type metadata for DataFrame.Slice, (uint64_t *)v62, v9, v31, (uint64_t)&protocol witness table for DataFrame.Slice);
  uint64_t v25 = v63;
  swift_bridgeObjectRelease();
  swift_retain();
  swift_retain();
  sub_22093D2B4(v34, v21, v22, v24, v23, v7, v33, (uint64_t)&type metadata for DataFrame.Slice, (uint64_t *)v64, v9, v31, (uint64_t)&protocol witness table for DataFrame.Slice);
  uint64_t v26 = v65;
  swift_bridgeObjectRelease();
  double result = *(double *)v62;
  long long v28 = v62[1];
  long long v29 = v64[0];
  long long v30 = v64[1];
  *(_OWORD *)a4 = v62[0];
  *(_OWORD *)(a4 + 16) = v28;
  *(void *)(a4 + 32) = v25;
  *(_OWORD *)(a4 + 40) = v29;
  *(_OWORD *)(a4 + 56) = v30;
  *(void *)(a4 + 72) = v26;
  return result;
}

uint64_t sub_22093B070@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_22093B0AC(a1, a2);
}

uint64_t sub_22093B0AC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = a1[3];
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](a1);
  uint64_t v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(uint64_t))(v2 + 8))(v7);
  uint64_t v10 = a1[5];
  uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(v5, v10);
  uint64_t v18 = a1[2];
  uint64_t v19 = v5;
  uint64_t v20 = a1[4];
  uint64_t v21 = v10;
  uint64_t v22 = v2;
  uint64_t v12 = sub_22091B5D8((void (*)(uint64_t *__return_ptr, void *))sub_22093C730, (uint64_t)v17, v11);
  swift_bridgeObjectRelease();
  uint64_t v13 = sub_220833AE4(v12);
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(sub_2209377E0((uint64_t)a1) + 16);
  swift_bridgeObjectRelease();
  uint64_t v15 = sub_22093D400(0, v14, v13);
  swift_bridgeObjectRelease();
  sub_22093BBCC(v15, a1, a2);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_22093B264@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_22093B2A0(a1, a2, a3);
}

uint64_t sub_22093B2A0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = a2[3];
  uint64_t v32 = a2[2];
  uint64_t v4 = v32;
  uint64_t v33 = v5;
  uint64_t v6 = a2[5];
  uint64_t v34 = a2[4];
  uint64_t v7 = v34;
  uint64_t v35 = v6;
  uint64_t v8 = sub_22091B5D8((void (*)(uint64_t *__return_ptr, void *))sub_22093C730, (uint64_t)v31, a1);
  *(void *)&v40[0] = *v3;
  uint64_t v26 = v4;
  uint64_t v27 = v5;
  uint64_t v28 = v7;
  uint64_t v29 = v6;
  uint64_t v30 = v8;
  uint64_t v19 = v4;
  uint64_t v20 = v5;
  uint64_t v21 = v7;
  uint64_t v22 = v6;
  uint64_t v23 = sub_22093C748;
  uint64_t v24 = &v25;
  swift_bridgeObjectRetain();
  swift_getTupleTypeMetadata2();
  uint64_t v9 = sub_22093E900();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v13 = sub_2208F0D18((void (*)(char *, char *))sub_22093C74C, (uint64_t)v18, v9, TupleTypeMetadata2, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_220891B80(v3[1], v3[2], v3[3], v3[4], v13, v40);
  uint64_t v36 = v4;
  uint64_t v37 = v5;
  uint64_t v38 = v7;
  uint64_t v39 = v6;
  a3[3] = type metadata accessor for _GroupSummaries();
  a3[4] = swift_getWitnessTable();
  uint64_t v14 = swift_allocObject();
  *a3 = v14;
  long long v15 = v40[1];
  *(_OWORD *)(v14 + 16) = v40[0];
  *(_OWORD *)(v14 + 32) = v15;
  *(void *)(v14 + 48) = v41;
  swift_retain();
  return swift_retain();
}

uint64_t sub_22093B4D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, long long *a5, uint64_t a6, char a7, uint64_t a8, double a9)
{
  long long v14 = a5[1];
  long long v17 = *a5;
  v18[0] = v14;
  *(_OWORD *)((char *)v18 + 9) = *(long long *)((char *)a5 + 25);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a8 - 8) + 16))(a1, a4, a8);
  if (a7) {
    return sub_2209372A8(a2, a3, a9);
  }
  if (a6 < 0)
  {
    __break(1u);
  }
  else
  {
    type metadata accessor for MersenneTwisterGenerator();
    swift_initStackObject();
    uint64_t v16 = sub_22083691C(a6);
    sub_220936A64(a2, a3, &v16, a9);
    return swift_release();
  }
  return result;
}

uint64_t sub_22093B5CC@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = a1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267F197E8);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a3, a3 + *(int *)(TupleTypeMetadata2 + 48), a3 + *(int *)(TupleTypeMetadata2 + 48) + 48, a1, v6);
}

uint64_t sub_22093B68C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v46 = a3;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267F197E8);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v7 = TupleTypeMetadata2 - 8;
  uint64_t v8 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  char v47 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v35 - v10;
  uint64_t v12 = a3 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  uint64_t v13 = *(int *)(v7 + 56);
  long long v14 = &v11[v13];
  long long v15 = (uint64_t *)(a1 + v13);
  uint64_t v40 = a2;
  uint64_t v48 = *(void *)(a2 - 8);
  uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t))(v48 + 16);
  uint64_t v45 = a1;
  v44(v11, a1, a2);
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  uint64_t v19 = v15[2];
  uint64_t v43 = v15[3];
  uint64_t v18 = v43;
  uint64_t v20 = v15[4];
  uint64_t v41 = v19;
  uint64_t v42 = v20;
  *(void *)long long v14 = v16;
  *((void *)v14 + 1) = v17;
  *((void *)v14 + 2) = v19;
  *((void *)v14 + 3) = v18;
  *((void *)v14 + 4) = v20;
  LOBYTE(a1) = *((unsigned char *)v15 + 40);
  v14[40] = a1;
  uint64_t v21 = v15[6];
  uint64_t v38 = v15[7];
  uint64_t v22 = v38;
  uint64_t v39 = v21;
  uint64_t v23 = v15[8];
  uint64_t v36 = v15[9];
  uint64_t v24 = v36;
  uint64_t v37 = v23;
  uint64_t v35 = v15[10];
  uint64_t v25 = v35;
  LOBYTE(v15) = *((unsigned char *)v15 + 88);
  *((void *)v14 + 6) = v21;
  *((void *)v14 + 7) = v22;
  *((void *)v14 + 8) = v23;
  *((void *)v14 + 9) = v24;
  *((void *)v14 + 10) = v25;
  v14[88] = (char)v15;
  uint64_t v26 = v40;
  (*(void (**)(uint64_t, char *, uint64_t))(v48 + 32))(v46, v11, v40);
  uint64_t v27 = *(int *)(v7 + 56);
  uint64_t v28 = v47;
  uint64_t v29 = &v47[v27];
  v44(v47, v45, v26);
  *(void *)uint64_t v29 = v16;
  *((void *)v29 + 1) = v17;
  uint64_t v31 = v41;
  uint64_t v30 = v42;
  uint64_t v32 = v43;
  *((void *)v29 + 2) = v41;
  *((void *)v29 + 3) = v32;
  *((void *)v29 + 4) = v30;
  v29[40] = a1;
  *((void *)v29 + 6) = v39;
  *((void *)v29 + 7) = v38;
  *((void *)v29 + 8) = v37;
  *((void *)v29 + 9) = v36;
  *((void *)v29 + 10) = v35;
  v29[88] = (char)v15;
  *(void *)uint64_t v12 = v16;
  *(void *)(v12 + 8) = v17;
  *(void *)(v12 + 16) = v31;
  *(void *)(v12 + 24) = v32;
  *(void *)(v12 + 32) = v30;
  uint64_t v33 = v30;
  *(unsigned char *)(v12 + 40) = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220831F30(v32, v33, a1);
  return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v28, v26);
}

uint64_t sub_22093B930@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v46 = a3;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267F197E8);
  uint64_t v6 = swift_getTupleTypeMetadata2() - 8;
  uint64_t v47 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v48 = &v34[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v34[-v9];
  uint64_t v11 = a3 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  uint64_t v12 = *(int *)(v6 + 56);
  uint64_t v13 = v10;
  uint64_t v36 = a2;
  uint64_t v37 = v10;
  long long v14 = &v10[v12];
  uint64_t v15 = a1;
  uint64_t v45 = a1;
  uint64_t v16 = (uint64_t *)(a1 + v12);
  uint64_t v49 = *(void *)(a2 - 8);
  uint64_t v44 = *(void (**)(void))(v49 + 16);
  ((void (*)(unsigned char *, uint64_t, uint64_t))v44)(v13, v15, a2);
  uint64_t v17 = *v16;
  uint64_t v42 = v16[1];
  uint64_t v18 = v42;
  uint64_t v43 = v17;
  uint64_t v19 = v16[2];
  uint64_t v40 = v16[3];
  uint64_t v20 = v40;
  uint64_t v41 = v19;
  uint64_t v39 = v16[4];
  uint64_t v21 = v39;
  unsigned __int8 v22 = *((unsigned char *)v16 + 40);
  int v38 = v22;
  *(void *)long long v14 = v17;
  *((void *)v14 + 1) = v18;
  *((void *)v14 + 2) = v19;
  *((void *)v14 + 3) = v20;
  *((void *)v14 + 4) = v21;
  v14[40] = v22;
  uint64_t v23 = v16[6];
  uint64_t v24 = v16[7];
  uint64_t v25 = v16[8];
  uint64_t v26 = v16[9];
  uint64_t v27 = v16[10];
  LOBYTE(v17) = *((unsigned char *)v16 + 88);
  int v35 = v17;
  *((void *)v14 + 6) = v23;
  *((void *)v14 + 7) = v24;
  *((void *)v14 + 8) = v25;
  *((void *)v14 + 9) = v26;
  *((void *)v14 + 10) = v27;
  v14[88] = v17;
  uint64_t v28 = v36;
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v49 + 32))(v46, v37, v36);
  uint64_t v29 = &v48[*(int *)(v47 + 56)];
  v44();
  uint64_t v30 = v42;
  *(void *)uint64_t v29 = v43;
  *((void *)v29 + 1) = v30;
  uint64_t v31 = v40;
  *((void *)v29 + 2) = v41;
  *((void *)v29 + 3) = v31;
  *((void *)v29 + 4) = v39;
  v29[40] = v38;
  *((void *)v29 + 6) = v23;
  *((void *)v29 + 7) = v24;
  *((void *)v29 + 8) = v25;
  *((void *)v29 + 9) = v26;
  *((void *)v29 + 10) = v27;
  char v32 = v35;
  v29[88] = v35;
  *(void *)uint64_t v11 = v23;
  *(void *)(v11 + 8) = v24;
  *(void *)(v11 + 16) = v25;
  *(void *)(v11 + 24) = v26;
  *(void *)(v11 + 32) = v27;
  *(unsigned char *)(v11 + 40) = v32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220831F30(v26, v27, v32);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v49 + 8))(v48, v28);
}

uint64_t sub_22093BBCC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  *(void *)&v34[0] = *v3;
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v25 = v5;
  uint64_t v26 = v6;
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v27 = v7;
  uint64_t v28 = v8;
  uint64_t v29 = a1;
  uint64_t v18 = v5;
  uint64_t v19 = v6;
  uint64_t v20 = v7;
  uint64_t v21 = v8;
  unsigned __int8 v22 = sub_22093C748;
  uint64_t v23 = &v24;
  swift_bridgeObjectRetain();
  swift_getTupleTypeMetadata2();
  uint64_t v9 = sub_22093E900();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v13 = sub_2208F0D18((void (*)(char *, char *))sub_22093C74C, (uint64_t)v17, v9, TupleTypeMetadata2, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v12);
  swift_bridgeObjectRelease();
  sub_220891B80(v3[1], v3[2], v3[3], v3[4], v13, v34);
  uint64_t v30 = v5;
  uint64_t v31 = v6;
  uint64_t v32 = v7;
  uint64_t v33 = v8;
  a3[3] = type metadata accessor for _GroupSummaries();
  a3[4] = swift_getWitnessTable();
  uint64_t v14 = swift_allocObject();
  *a3 = v14;
  long long v15 = v34[1];
  *(_OWORD *)(v14 + 16) = v34[0];
  *(_OWORD *)(v14 + 32) = v15;
  *(void *)(v14 + 48) = v35;
  swift_retain();
  return swift_retain();
}

uint64_t sub_22093BDB4(uint64_t a1, void *a2, uint64_t a3, long long *a4, uint64_t a5, uint64_t a6)
{
  long long v8 = a4[1];
  long long v11 = *a4;
  v12[0] = v8;
  *(_OWORD *)((char *)v12 + 9) = *(long long *)((char *)a4 + 25);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a6 - 8) + 16))(a1, a3, a6);
  sub_220833B58((uint64_t)&v11);
  uint64_t v9 = sub_22087BF9C(a5, (uint64_t)&v11);
  sub_220833BC0((uint64_t)&v11);
  sub_220878DF0(v9, a2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22093BE64(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v3 = *v2;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();

  return a2(v3, TupleTypeMetadata2);
}

__n128 sub_22093BED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v9 = (char *)&v15 - v8;
  sub_22093E940();
  uint64_t v10 = &v9[*(int *)(TupleTypeMetadata2 + 48)];
  __n128 v16 = *((__n128 *)v10 + 1);
  uint64_t v11 = *((void *)v10 + 4);
  char v12 = v10[40];
  uint64_t v13 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v6 - 8) + 32);
  long long v15 = *(_OWORD *)v10;
  v13(a1, v9, v6);
  __n128 result = v16;
  *(_OWORD *)a2 = v15;
  *(__n128 *)(a2 + 16) = result;
  *(void *)(a2 + 32) = v11;
  *(unsigned char *)(a2 + 40) = v12;
  return result;
}

uint64_t sub_22093BFF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D708];

  return MEMORY[0x270F9E068](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_22093C07C()
{
  swift_getWitnessTable();

  return sub_22093EA00();
}

uint64_t sub_22093C100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D708];

  return MEMORY[0x270F9E078](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_22093C174@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_22093BE64(a1, MEMORY[0x263F8D470]);
  *a2 = result;
  return result;
}

void (*sub_22093C1B0(void *a1, uint64_t *a2, uint64_t a3))(uint64_t *a1, uint64_t a2)
{
  uint64_t v7 = malloc(0x68uLL);
  *a1 = v7;
  uint64_t v8 = *(void *)(a3 + 16);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v7[9] = TupleTypeMetadata2;
  uint64_t v10 = *(void *)(TupleTypeMetadata2 - 8);
  v7[10] = v10;
  uint64_t v11 = (char *)malloc(*(void *)(v10 + 64));
  v7[11] = v11;
  uint64_t v12 = *a2;
  long long v13 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)v3;
  *((_OWORD *)v7 + 1) = v13;
  void v7[4] = *(void *)(v3 + 32);
  uint64_t v14 = sub_22093C3C8(v7 + 5, v12, a3);
  __n128 v16 = v15;
  v7[12] = v14;
  (*(void (**)(char *))(*(void *)(v8 - 8) + 16))(v11);
  uint64_t v17 = &v11[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v18 = *v16;
  uint64_t v19 = v16[1];
  uint64_t v20 = v16[2];
  uint64_t v21 = v16[3];
  uint64_t v22 = v16[4];
  LOBYTE(v16) = *((unsigned char *)v16 + 40);
  *(void *)uint64_t v17 = v18;
  *((void *)v17 + 1) = v19;
  *((void *)v17 + 2) = v20;
  *((void *)v17 + 3) = v21;
  *((void *)v17 + 4) = v22;
  v17[40] = (char)v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220831F30(v21, v22, (char)v16);
  return sub_22093C34C;
}

void sub_22093C34C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 40;
  (*(void (**)(void, void))(*(void *)(*a1 + 80) + 8))(*(void *)(*a1 + 88), *(void *)(*a1 + 72));
  uint64_t v5 = *(void **)(v3 + 88);
  (*(void (**)(uint64_t, uint64_t))(v3 + 96))(v4, a2);
  free(v5);

  free((void *)v3);
}

void (*sub_22093C3C8(uint64_t *a1, uint64_t a2, uint64_t a3))(void *a1)
{
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  *a1 = TupleTypeMetadata2;
  uint64_t v7 = *(void *)(TupleTypeMetadata2 - 8);
  a1[1] = v7;
  uint64_t v8 = malloc(*(void *)(v7 + 64));
  a1[2] = (uint64_t)v8;
  sub_22093BED0((uint64_t)v8, (uint64_t)v8 + *(int *)(TupleTypeMetadata2 + 48), a2, a3);
  return sub_22085FCE0;
}

uint64_t sub_22093C4B0()
{
  swift_getWitnessTable();

  return sub_22093EA40();
}

__n128 sub_22093C51C@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 32);
  __n128 result = *(__n128 *)v1;
  long long v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = v2;
  *(void *)(a1 + 40) = 0;
  return result;
}

uint64_t sub_22093C530(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F9E108](a1, WitnessTable);
}

uint64_t sub_22093C584()
{
  swift_getWitnessTable();

  return sub_22093EB10();
}

uint64_t sub_22093C5D8()
{
  return swift_getWitnessTable();
}

uint64_t sub_22093C5F4()
{
  return swift_getWitnessTable();
}

uint64_t sub_22093C610()
{
  return swift_getWitnessTable();
}

uint64_t sub_22093C674()
{
  return swift_getWitnessTable();
}

uint64_t sub_22093C690()
{
  return swift_getWitnessTable();
}

uint64_t sub_22093C6F4(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22093C730@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_22093C7AC(a1, a2);
}

uint64_t sub_22093C74C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22093D5D8(a1, a2);
}

uint64_t sub_22093C764()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_22093C7AC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = type metadata accessor for CustomGrouping();
  uint64_t result = sub_2209379E0(v3, v4, v5);
  *a2 = result;
  return result;
}

uint64_t sub_22093C820@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(void)@<X3>, uint64_t a5@<X4>, void (*a6)(unint64_t *)@<X5>, uint64_t a7@<X6>, char *a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  void (*v28)(unint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v29;
  int v30;
  Swift::Int v31;
  Swift::Int v32;
  char v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char *v44;
  void (*v45)(char *, char *, char *);
  char *v46;
  void (*v47)(char *, char *, char *);
  uint64_t v48;
  uint64_t v49;
  int64_t v50;
  char *v51;
  int64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(void);
  uint64_t v68;
  uint64_t v69;
  uint64_t WitnessTable;
  uint64_t v71;
  uint64_t v72;
  uint64_t result;
  uint64_t *v74;
  uint64_t v75;
  uint64_t (*v76)(uint64_t, uint64_t, uint64_t, char *, uint64_t, unsigned __int8);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  void (*v92)(void);
  void (**v93)(char *, char *, char *);
  char *v94;
  void (**v95)(char *, char *);
  char *v96;
  unsigned int (**v97)(char *, uint64_t, char *);
  int i;
  void (*v99)(unint64_t *);
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  void (**v105)(char *, char *, char *);
  Swift::Int v106;
  int64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  int64_t v115;
  unint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unsigned __int8 v121;
  uint64_t v122;
  uint64_t v123;

  uint64_t v100 = a7;
  uint64_t v99 = a6;
  Swift::Int_optional v87 = a3;
  uint64_t v85 = a2;
  uint64_t v86 = a9;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_267F18E60);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v91 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v90 = (char *)&v78 - v19;
  uint64_t v79 = sub_22093ED30();
  uint64_t v78 = *(void *)(v79 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v79);
  uint64_t v103 = (char *)&v78 - v21;
  uint64_t v22 = *((void *)a8 - 1);
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  long long v96 = (char *)&v78 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v94 = (char *)&v78 - v26;
  MEMORY[0x270FA5388](v25);
  uint64_t v114 = (char *)&v78 - v27;
  uint64_t v108 = TupleTypeMetadata2;
  uint64_t v123 = sub_22093E890();
  swift_getTupleTypeMetadata2();
  sub_22093E890();
  uint64_t v101 = a8;
  uint64_t v122 = sub_22093E2A0();
  uint64_t v28 = *(void (**)(unint64_t *__return_ptr, uint64_t, uint64_t))(a14 + 32);
  unint64_t v82 = a1;
  uint64_t v83 = a11;
  uint64_t v84 = a14;
  v28(&v116, a11, a14);
  uint64_t v110 = v117;
  uint64_t v111 = v116;
  uint64_t v29 = v119;
  uint64_t v109 = v118;
  uint64_t v113 = v120;
  uint64_t v30 = v121;
  uint64_t v31 = v119;
  uint64_t v104 = v119;
  if (v121)
  {
    if (v121 == 1 && *(void *)(v119 + 16))
    {
      uint64_t v31 = *(void *)(v119 + 32);
    }
    else
    {
      sub_220883950(v119, v113, v121);
      uint64_t v29 = v104;
      if (v33) {
        uint64_t v31 = 0;
      }
      else {
        uint64_t v31 = v32;
      }
    }
  }
  uint64_t v102 = a12;
  uint64_t v81 = a13;
  uint64_t v80 = a10;
  uint64_t v88 = v29 + 32;
  uint64_t v97 = (unsigned int (**)(char *, uint64_t, char *))(v22 + 48);
  uint64_t v105 = (void (**)(char *, char *, char *))(v22 + 32);
  uint64_t v95 = (void (**)(char *, char *))(v22 + 8);
  uint64_t v93 = (void (**)(char *, char *, char *))(v22 + 16);
  uint64_t v34 = MEMORY[0x263F8D6C8];
  uint64_t v35 = v103;
  uint64_t v92 = a4;
  uint64_t v89 = a5;
  for (i = v30; ; uint64_t v30 = i)
  {
    uint64_t v36 = v113;
    if (!v30) {
      goto LABEL_15;
    }
    if (v30 == 1)
    {
      uint64_t v37 = *(void *)(v29 + 16);
      if (v37)
      {
        uint64_t v36 = *(void *)(v88 + 16 * v37 - 8);
        int v38 = swift_bridgeObjectRetain();
        sub_22080B6B4(v38, v113, 1);
        uint64_t v29 = v104;
LABEL_15:
        if (v31 == v36) {
          goto LABEL_27;
        }
        goto LABEL_18;
      }
    }
    if (!v31) {
      goto LABEL_27;
    }
LABEL_18:
    uint64_t v39 = v34;
    uint64_t v40 = a5;
    uint64_t v42 = v110;
    uint64_t v41 = v111;
    uint64_t v116 = v111;
    uint64_t v117 = v110;
    uint64_t v43 = v109;
    uint64_t v118 = v109;
    uint64_t v119 = v29;
    uint64_t v120 = v113;
    uint64_t v121 = v30;
    unint64_t v106 = DataFrame.Rows.index(after:)(v31);
    uint64_t v107 = v31;
    uint64_t v116 = v41;
    uint64_t v117 = v42;
    uint64_t v118 = v43;
    uint64_t v119 = v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v29 = v112;
    v99(&v116);
    uint64_t v112 = v29;
    if (v29)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      sub_22080B6B4(v104, v113, i);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    a5 = v40;
    a4();
    swift_bridgeObjectRelease();
    uint64_t v44 = v101;
    if ((*v97)(v35, 1, v101) == 1) {
      goto LABEL_33;
    }
    uint64_t v45 = *v105;
    uint64_t v46 = v114;
    (*v105)(v114, v35, v44);
    uint64_t v34 = v39;
    MEMORY[0x223C699F0](&v116, v46, v122, v44, v39, v102);
    if (v117 == 1) {
      break;
    }
    uint64_t v53 = v116;
    uint64_t v35 = (char *)v108;
    char v54 = sub_22093E900();
    sub_22093E880();
    LOBYTE(v30) = v123;
    sub_2208F8A34(v53, v123);
    uint64_t v55 = v107 + 1;
    if (__OFADD__(v107, 1)) {
      goto LABEL_31;
    }
    if (v55 < v107)
    {
      __break(1u);
LABEL_27:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v56 = sub_22080B6B4(v29, v113, v30);
      uint64_t v116 = v123;
      MEMORY[0x270FA5388](v56);
      uint64_t v57 = v101;
      uint64_t v58 = v80;
      *(&v78 - 8) = (uint64_t)v101;
      *(&v78 - 7) = v58;
      double v59 = v102;
      *(&v78 - 6) = v83;
      *(&v78 - 5) = v59;
      uint64_t v60 = v81;
      char v61 = v84;
      *(&v78 - 4) = v81;
      *(&v78 - 3) = v61;
      uint64_t v62 = MEMORY[0x270FA5388](v58);
      *(&v78 - 8) = (uint64_t)v57;
      *(&v78 - 7) = v62;
      *(&v78 - 6) = v64;
      *(&v78 - 5) = v63;
      *(&v78 - 4) = v60;
      *(&v78 - 3) = v65;
      uint64_t v76 = sub_22093D8A0;
      uint64_t v77 = v66;
      uint64_t v67 = a4;
      uint64_t v68 = sub_22093E900();
      swift_bridgeObjectRetain();
      unint64_t v69 = swift_getTupleTypeMetadata2();
      uint64_t WitnessTable = swift_getWitnessTable();
      unint64_t v72 = sub_2208F0D18((void (*)(char *, char *))sub_22093D8D8, (uint64_t)(&v78 - 10), v68, v69, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v71);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      unint64_t v74 = v86;
      uint64_t v75 = v85;
      *uint64_t v86 = v72;
      v74[1] = v75;
      v74[2] = v87;
      v74[3] = (uint64_t)v67;
      v74[4] = a5;
      return result;
    }
    sub_220869870(v107, v55);
    nullsub_5(v54);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_10:
    (*v95)(v114, v44);
    uint64_t v31 = v106;
    uint64_t v35 = v103;
    uint64_t v29 = v104;
  }
  uint64_t v47 = *v93;
  (*v93)(v94, v46, v44);
  uint64_t v48 = swift_bridgeObjectRetain();
  uint64_t v49 = MEMORY[0x223C69FE0](v48, v108);
  swift_bridgeObjectRelease();
  uint64_t v116 = v49;
  LOBYTE(v117) = 0;
  sub_22093E2C0();
  sub_22093E2E0();
  uint64_t v35 = v44;
  v47(v96, v114, v44);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v50 = v107 + 1;
  if (!__OFADD__(v107, 1))
  {
    if (v50 < v107) {
      goto LABEL_32;
    }
    uint64_t v51 = &v90[*(int *)(v108 + 48)];
    char v52 = v107;
    v45(v90, v96, v44);
    *(void *)uint64_t v51 = v52;
    *((void *)v51 + 1) = v50;
    v51[16] = 0;
    sub_22093E900();
    sub_22093E8E0();
    a5 = v89;
    a4 = v92;
    uint64_t v34 = v39;
    goto LABEL_10;
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  (*(void (**)(char *, uint64_t))(v78 + 8))(v35, v79);
  uint64_t v116 = 0;
  uint64_t v117 = 0xE000000000000000;
  sub_22093EEA0();
  swift_bridgeObjectRelease();
  uint64_t v116 = 0xD00000000000002BLL;
  uint64_t v117 = 0x8000000220941280;
  uint64_t v115 = v107;
  sub_22093F1A0();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

uint64_t sub_22093D2B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v30 = a1;
  uint64_t v24 = a6;
  uint64_t v25 = a7;
  uint64_t v26 = a8;
  uint64_t v27 = a10;
  uint64_t v28 = a11;
  uint64_t v29 = a12;
  void v22[2] = a6;
  v22[3] = a7;
  v22[4] = a8;
  v22[5] = a10;
  void v22[6] = a11;
  v22[7] = a12;
  unsigned char v22[8] = sub_22093D6E0;
  v22[9] = &v23;
  swift_getTupleTypeMetadata2();
  uint64_t v17 = sub_22093E900();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t result = sub_2208F0D18((void (*)(char *, char *))sub_22093D710, (uint64_t)v22, v17, TupleTypeMetadata2, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v20);
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  return result;
}

uint64_t sub_22093D400(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result == a2) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v5 = result;
  if (a2 >= result)
  {
    uint64_t v7 = a3 + 56;
    uint64_t v3 = MEMORY[0x263F8EE78];
    uint64_t v8 = result;
    do
    {
      uint64_t v9 = v8;
      if (v8 <= a2) {
        uint64_t v10 = a2;
      }
      else {
        uint64_t v10 = v8;
      }
      for (uint64_t i = v8; ; ++i)
      {
        if (v9 < v5)
        {
          __break(1u);
LABEL_27:
          __break(1u);
          goto LABEL_28;
        }
        if (i == v10) {
          goto LABEL_27;
        }
        uint64_t v8 = i + 1;
        if (!*(void *)(a3 + 16)) {
          break;
        }
        uint64_t result = sub_22093F420();
        uint64_t v12 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v13 = result & ~v12;
        if (((*(void *)(v7 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        uint64_t v14 = *(void *)(a3 + 48);
        if (*(void *)(v14 + 8 * v13) != i)
        {
          uint64_t v15 = ~v12;
          do
          {
            unint64_t v13 = (v13 + 1) & v15;
            if (((*(void *)(v7 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
              goto LABEL_20;
            }
          }
          while (*(void *)(v14 + 8 * v13) != i);
        }
        if (v8 == a2) {
          return v3;
        }
      }
LABEL_20:
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0) {
        uint64_t result = (uint64_t)sub_220826C98(0, *(void *)(v3 + 16) + 1, 1);
      }
      unint64_t v17 = *(void *)(v3 + 16);
      unint64_t v16 = *(void *)(v3 + 24);
      if (v17 >= v16 >> 1) {
        uint64_t result = (uint64_t)sub_220826C98((char *)(v16 > 1), v17 + 1, 1);
      }
      *(void *)(v3 + 16) = v17 + 1;
      *(void *)(v3 + 8 * v17 + 32) = i;
    }
    while (v8 != a2);
    return v3;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_22093D5A8(uint64_t a1, void *a2, uint64_t a3, long long *a4)
{
  return sub_22093BDB4(a1, a2, a3, a4, *(void *)(v4 + 48), *(void *)(v4 + 16));
}

uint64_t sub_22093D5D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 48);
  uint64_t v6 = a1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return v5(a2, a2 + *(int *)(TupleTypeMetadata2 + 48), a1, v6);
}

uint64_t sub_22093D684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22093A5E8(a1, a2, a3, a4, *(uint64_t (**)(_OWORD *))(v4 + 48), *(void *)(v4 + 56), *(void *)(v4 + 16));
}

uint64_t sub_22093D6B4(uint64_t a1, uint64_t a2)
{
  return sub_22093DA04(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void, void, uint64_t))sub_22093A6FC);
}

double sub_22093D6E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2209385E4(a1, a2, a3, a4, v4[2], v4[3], v4[4], v4[5], v4[6], v4[7]);
}

uint64_t sub_22093D710@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 64);
  uint64_t v6 = a1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return v5(a2, a2 + *(int *)(TupleTypeMetadata2 + 48), a1, v6);
}

uint64_t sub_22093D7B8(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(long long *))(v1 + 48);
  uint64_t v3 = (long long *)(a1 + *(int *)(swift_getTupleTypeMetadata2() + 48));
  uint64_t v4 = *((void *)v3 + 2);
  char v5 = *((unsigned char *)v3 + 40);
  long long v7 = *v3;
  uint64_t v8 = v4;
  long long v9 = *(long long *)((char *)v3 + 24);
  char v10 = v5;
  return v2(&v7) & 1;
}

double sub_22093D84C@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + 40);
  uint64_t v5 = (*(uint64_t (**)(void, void))(v2 + 64))(*a1, a1[1]);
  *(void *)&double result = sub_220839984(v5, v6, v4, a2).n128_u64[0];
  return result;
}

uint64_t sub_22093D8A0(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, unsigned __int8 a6)
{
  return sub_220938304(a1, a2, a3, a4, a5, a6, v6[8], v6[2], v6[3], v6[4], v6[5], v6[6], v6[7]);
}

uint64_t sub_22093D8D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22093850C(a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 64), a2);
}

uint64_t sub_22093D910@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22093A0A4(a1, v2[6], v2[3], v2[5], a2);
}

uint64_t sub_22093D920(uint64_t a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 48);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return v3(a1, a1 + *(int *)(TupleTypeMetadata2 + 48));
}

uint64_t sub_22093D998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, long long *a5)
{
  return sub_22093B4D0(a1, a2, a3, a4, a5, *(void *)(v5 + 56), *(unsigned char *)(v5 + 64), *(void *)(v5 + 16), *(double *)(v5 + 48));
}

uint64_t sub_22093D9D8(uint64_t a1, uint64_t a2)
{
  return sub_22093DA04(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void, void, uint64_t))sub_22093B5CC);
}

uint64_t sub_22093DA04(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, void, void, void, void, void, void, uint64_t))
{
  return a3(a1, v3[6], v3[7], v3[2], v3[3], v3[4], v3[5], a2);
}

uint64_t sub_22093DA34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22093B68C(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_22093DA58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22093B930(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_22093DA88()
{
  return *(*v0)++;
}

uint64_t sub_22093DA98(unsigned __int8 **a1, uint64_t a2)
{
  uint64_t v4 = sub_220844A3C(a1, a2);
  if (!v3)
  {
    uint64_t v5 = v4;
    int64_t v6 = *(void *)(v4 + 16);
    if (v6)
    {
      uint64_t v12 = MEMORY[0x263F8EE78];
      sub_220826EF8(0, v6, 0);
      uint64_t v7 = 0;
      uint64_t v2 = v12;
      unint64_t v8 = *(void *)(v12 + 16);
      do
      {
        uint64_t v9 = *(void *)(v5 + 8 * v7 + 32);
        unint64_t v10 = *(void *)(v12 + 24);
        if (v8 >= v10 >> 1) {
          sub_220826EF8((char *)(v10 > 1), v8 + 1, 1);
        }
        ++v7;
        *(void *)(v12 + 16) = v8 + 1;
        *(void *)(v12 + 8 * v8++ + 32) = __ROR8__(v9, 1);
      }
      while (v6 != v7);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x263F8EE78];
    }
  }
  return v2;
}

uint64_t sub_22093DB9C(unsigned __int8 **a1, uint64_t a2)
{
  uint64_t v4 = sub_220844BB4(a1, a2);
  if (!v3)
  {
    uint64_t v5 = v4;
    int64_t v6 = *(void *)(v4 + 16);
    if (v6)
    {
      uint64_t v12 = MEMORY[0x263F8EE78];
      sub_220826EF8(0, v6, 0);
      uint64_t v7 = 0;
      uint64_t v2 = v12;
      unint64_t v8 = *(void *)(v12 + 16);
      do
      {
        uint64_t v9 = *(void *)(v5 + 8 * v7 + 32);
        unint64_t v10 = *(void *)(v12 + 24);
        if (v8 >= v10 >> 1) {
          sub_220826EF8((char *)(v10 > 1), v8 + 1, 1);
        }
        ++v7;
        *(void *)(v12 + 16) = v8 + 1;
        *(double *)(v12 + 8 * v8++ + 32) = (double)v9;
      }
      while (v6 != v7);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x263F8EE78];
    }
  }
  return v2;
}

uint64_t sub_22093DCA0(unsigned __int8 **a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_22081BF58(0, a3 & ~(a3 >> 63), 0, MEMORY[0x263F8EE78]);
  swift_bridgeObjectRelease();
  if ((a4 & 8) == 0) {
    return sub_22093DA98(a1, a2);
  }
  int v7 = *(*a1)++;
  if (v7 == 1) {
    return sub_22093DB9C(a1, a2);
  }
  if (!v7) {
    return sub_22093DA98(a1, a2);
  }
  sub_22093EEA0();
  swift_bridgeObjectRelease();
  sub_22093F1A0();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  sub_220809E4C();
  swift_allocError();
  *(void *)uint64_t v9 = 0xD000000000000024;
  *(void *)(v9 + 8) = 0x80000002209408D0;
  *(unsigned char *)(v9 + 16) = 3;
  return swift_willThrow();
}

uint64_t sub_22093DE00()
{
  return MEMORY[0x270EEE098]();
}

uint64_t sub_22093DE10()
{
  return MEMORY[0x270EEE258]();
}

uint64_t sub_22093DE20()
{
  return MEMORY[0x270EEE460]();
}

uint64_t sub_22093DE30()
{
  return MEMORY[0x270EEE628]();
}

uint64_t sub_22093DE40()
{
  return MEMORY[0x270EEE638]();
}

uint64_t sub_22093DE50()
{
  return MEMORY[0x270EEE658]();
}

uint64_t sub_22093DE60()
{
  return MEMORY[0x270EEE670]();
}

uint64_t sub_22093DE70()
{
  return MEMORY[0x270EEE688]();
}

uint64_t sub_22093DE80()
{
  return MEMORY[0x270EEE818]();
}

uint64_t sub_22093DE90()
{
  return MEMORY[0x270EEE8E8]();
}

uint64_t sub_22093DEA0()
{
  return MEMORY[0x270EEE920]();
}

uint64_t sub_22093DEB0()
{
  return MEMORY[0x270EEE930]();
}

uint64_t sub_22093DEC0()
{
  return MEMORY[0x270EEE940]();
}

uint64_t sub_22093DED0()
{
  return MEMORY[0x270EEE950]();
}

uint64_t sub_22093DEE0()
{
  return MEMORY[0x270EEF090]();
}

uint64_t sub_22093DEF0()
{
  return MEMORY[0x270EEF098]();
}

uint64_t sub_22093DF00()
{
  return MEMORY[0x270EEF0A0]();
}

uint64_t sub_22093DF10()
{
  return MEMORY[0x270EEF318]();
}

uint64_t sub_22093DF20()
{
  return MEMORY[0x270EEF840]();
}

uint64_t sub_22093DF30()
{
  return MEMORY[0x270EEF948]();
}

uint64_t sub_22093DF40()
{
  return MEMORY[0x270EEF950]();
}

uint64_t sub_22093DF50()
{
  return MEMORY[0x270EEF9B8]();
}

uint64_t sub_22093DF60()
{
  return MEMORY[0x270EEFB20]();
}

uint64_t sub_22093DF70()
{
  return MEMORY[0x270EEFB28]();
}

uint64_t sub_22093DF80()
{
  return MEMORY[0x270EEFD78]();
}

uint64_t sub_22093DF90()
{
  return MEMORY[0x270EEFE80]();
}

uint64_t sub_22093DFA0()
{
  return MEMORY[0x270EEFF68]();
}

uint64_t sub_22093DFB0()
{
  return MEMORY[0x270EEFFC8]();
}

uint64_t sub_22093DFC0()
{
  return MEMORY[0x270EF0048]();
}

uint64_t sub_22093DFD0()
{
  return MEMORY[0x270EF0070]();
}

uint64_t sub_22093DFE0()
{
  return MEMORY[0x270EF00D0]();
}

uint64_t sub_22093DFF0()
{
  return MEMORY[0x270EF0120]();
}

uint64_t sub_22093E000()
{
  return MEMORY[0x270EF0178]();
}

uint64_t sub_22093E010()
{
  return MEMORY[0x270EF0190]();
}

uint64_t sub_22093E020()
{
  return MEMORY[0x270EF01C0]();
}

uint64_t sub_22093E030()
{
  return MEMORY[0x270EF0238]();
}

uint64_t sub_22093E040()
{
  return MEMORY[0x270EF0680]();
}

uint64_t sub_22093E050()
{
  return MEMORY[0x270EF06E0]();
}

uint64_t sub_22093E060()
{
  return MEMORY[0x270EF0790]();
}

uint64_t sub_22093E070()
{
  return MEMORY[0x270EF07E8]();
}

uint64_t sub_22093E080()
{
  return MEMORY[0x270EF07F8]();
}

uint64_t sub_22093E090()
{
  return MEMORY[0x270EF0808]();
}

uint64_t sub_22093E0A0()
{
  return MEMORY[0x270EF0820]();
}

uint64_t sub_22093E0B0()
{
  return MEMORY[0x270EF0840]();
}

uint64_t sub_22093E0C0()
{
  return MEMORY[0x270EF0890]();
}

uint64_t sub_22093E0D0()
{
  return MEMORY[0x270EF0998]();
}

uint64_t sub_22093E0E0()
{
  return MEMORY[0x270EF0BA8]();
}

uint64_t sub_22093E0F0()
{
  return MEMORY[0x270EF0C20]();
}

uint64_t sub_22093E100()
{
  return MEMORY[0x270EF0C40]();
}

uint64_t sub_22093E110()
{
  return MEMORY[0x270EF0D78]();
}

uint64_t sub_22093E120()
{
  return MEMORY[0x270EF0EE0]();
}

uint64_t sub_22093E130()
{
  return MEMORY[0x270EF0EF8]();
}

uint64_t sub_22093E140()
{
  return MEMORY[0x270EF10A8]();
}

uint64_t sub_22093E150()
{
  return MEMORY[0x270EF1258]();
}

uint64_t sub_22093E160()
{
  return MEMORY[0x270EF13D8]();
}

uint64_t sub_22093E170()
{
  return MEMORY[0x270EF1428]();
}

uint64_t sub_22093E180()
{
  return MEMORY[0x270EF1440]();
}

uint64_t sub_22093E190()
{
  return MEMORY[0x270EF15A8]();
}

uint64_t sub_22093E1A0()
{
  return MEMORY[0x270EF15C8]();
}

uint64_t sub_22093E1B0()
{
  return MEMORY[0x270EF1608]();
}

uint64_t sub_22093E1C0()
{
  return MEMORY[0x270FA2A68]();
}

uint64_t sub_22093E1D0()
{
  return MEMORY[0x270FA2AB8]();
}

uint64_t sub_22093E1E0()
{
  return MEMORY[0x270FA08B0]();
}

uint64_t sub_22093E1F0()
{
  return MEMORY[0x270FA08D8]();
}

uint64_t sub_22093E200()
{
  return MEMORY[0x270EE3BF8]();
}

uint64_t sub_22093E210()
{
  return MEMORY[0x270EE3C00]();
}

uint64_t sub_22093E220()
{
  return MEMORY[0x270F9CFB0]();
}

uint64_t sub_22093E230()
{
  return MEMORY[0x270F9CFC0]();
}

uint64_t sub_22093E240()
{
  return MEMORY[0x270F9CFC8]();
}

uint64_t sub_22093E250()
{
  return MEMORY[0x270EF1808]();
}

uint64_t sub_22093E260()
{
  return MEMORY[0x270F9D030]();
}

uint64_t sub_22093E270()
{
  return MEMORY[0x270F9D050]();
}

uint64_t sub_22093E280()
{
  return MEMORY[0x270EF1840]();
}

uint64_t sub_22093E290()
{
  return MEMORY[0x270F9D090]();
}

uint64_t sub_22093E2A0()
{
  return MEMORY[0x270F9D0A8]();
}

uint64_t sub_22093E2B0()
{
  return MEMORY[0x270F9D120]();
}

uint64_t sub_22093E2C0()
{
  return MEMORY[0x270F9D1D0]();
}

uint64_t sub_22093E2D0()
{
  return MEMORY[0x270F9D208]();
}

uint64_t sub_22093E2E0()
{
  return MEMORY[0x270F9D210]();
}

uint64_t sub_22093E2F0()
{
  return MEMORY[0x270F9D230]();
}

uint64_t sub_22093E300()
{
  return MEMORY[0x270F9D260]();
}

uint64_t sub_22093E310()
{
  return MEMORY[0x270F9D290]();
}

uint64_t sub_22093E320()
{
  return MEMORY[0x270F9D2A8]();
}

uint64_t sub_22093E330()
{
  return MEMORY[0x270F9D2C8]();
}

uint64_t sub_22093E340()
{
  return MEMORY[0x270F9D2F0]();
}

uint64_t sub_22093E350()
{
  return MEMORY[0x270F9D308]();
}

uint64_t sub_22093E360()
{
  return MEMORY[0x270F9D318]();
}

uint64_t sub_22093E370()
{
  return MEMORY[0x270F9D320]();
}

uint64_t sub_22093E380()
{
  return MEMORY[0x270F9D338]();
}

uint64_t sub_22093E390()
{
  return MEMORY[0x270F9D340]();
}

uint64_t sub_22093E3A0()
{
  return MEMORY[0x270F9D348]();
}

uint64_t sub_22093E3B0()
{
  return MEMORY[0x270F9D350]();
}

uint64_t sub_22093E3C0()
{
  return MEMORY[0x270F9D358]();
}

uint64_t sub_22093E3D0()
{
  return MEMORY[0x270F9D3C8]();
}

uint64_t sub_22093E3E0()
{
  return MEMORY[0x270FA2B48]();
}

uint64_t sub_22093E3F0()
{
  return MEMORY[0x270F9D3F8]();
}

uint64_t sub_22093E400()
{
  return MEMORY[0x270F9D428]();
}

uint64_t sub_22093E410()
{
  return MEMORY[0x270F9D430]();
}

uint64_t sub_22093E420()
{
  return MEMORY[0x270F9D438]();
}

uint64_t sub_22093E430()
{
  return MEMORY[0x270F9D448]();
}

uint64_t sub_22093E440()
{
  return MEMORY[0x270F9D478]();
}

uint64_t sub_22093E450()
{
  return MEMORY[0x270F9D480]();
}

uint64_t sub_22093E460()
{
  return MEMORY[0x270F9D488]();
}

uint64_t sub_22093E470()
{
  return MEMORY[0x270F9D490]();
}

uint64_t sub_22093E480()
{
  return MEMORY[0x270F9D498]();
}

uint64_t sub_22093E490()
{
  return MEMORY[0x270F9D4A0]();
}

uint64_t sub_22093E4A0()
{
  return MEMORY[0x270F9D4A8]();
}

uint64_t sub_22093E4B0()
{
  return MEMORY[0x270F9D4B0]();
}

uint64_t sub_22093E4C0()
{
  return MEMORY[0x270F9D4C8]();
}

uint64_t sub_22093E4D0()
{
  return MEMORY[0x270F9D4D0]();
}

uint64_t sub_22093E4E0()
{
  return MEMORY[0x270F9D4D8]();
}

uint64_t sub_22093E4F0()
{
  return MEMORY[0x270F9D4E0]();
}

uint64_t sub_22093E500()
{
  return MEMORY[0x270F9D500]();
}

uint64_t sub_22093E510()
{
  return MEMORY[0x270F9D530]();
}

uint64_t sub_22093E520()
{
  return MEMORY[0x270F9D598]();
}

uint64_t sub_22093E530()
{
  return MEMORY[0x270F9D5C8]();
}

uint64_t sub_22093E540()
{
  return MEMORY[0x270EF19B0]();
}

uint64_t sub_22093E550()
{
  return MEMORY[0x270EF19E8]();
}

uint64_t sub_22093E560()
{
  return MEMORY[0x270EF19F8]();
}

uint64_t sub_22093E570()
{
  return MEMORY[0x270EF1A10]();
}

uint64_t sub_22093E580()
{
  return MEMORY[0x270EF1A18]();
}

uint64_t sub_22093E590()
{
  return MEMORY[0x270EF1A50]();
}

uint64_t sub_22093E5A0()
{
  return MEMORY[0x270EF1A58]();
}

uint64_t sub_22093E5B0()
{
  return MEMORY[0x270EF1A68]();
}

uint64_t sub_22093E5C0()
{
  return MEMORY[0x270EF1A78]();
}

uint64_t sub_22093E5D0()
{
  return MEMORY[0x270EF1A80]();
}

uint64_t sub_22093E5E0()
{
  return MEMORY[0x270EF1A88]();
}

uint64_t sub_22093E5F0()
{
  return MEMORY[0x270EF1A90]();
}

uint64_t sub_22093E600()
{
  return MEMORY[0x270EF1AA8]();
}

uint64_t sub_22093E610()
{
  return MEMORY[0x270EF1AD0]();
}

uint64_t sub_22093E620()
{
  return MEMORY[0x270F9D5E0]();
}

uint64_t sub_22093E630()
{
  return MEMORY[0x270F9D648]();
}

uint64_t sub_22093E640()
{
  return MEMORY[0x270F9D6B8]();
}

uint64_t sub_22093E650()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_22093E660()
{
  return MEMORY[0x270F9D740]();
}

uint64_t sub_22093E670()
{
  return MEMORY[0x270F9D748]();
}

uint64_t sub_22093E680()
{
  return MEMORY[0x270F9D750]();
}

uint64_t sub_22093E690()
{
  return MEMORY[0x270F9D758]();
}

uint64_t sub_22093E6A0()
{
  return MEMORY[0x270F9D760]();
}

uint64_t sub_22093E6B0()
{
  return MEMORY[0x270F9D790]();
}

uint64_t sub_22093E6C0()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_22093E6D0()
{
  return MEMORY[0x270F9D7D8]();
}

uint64_t sub_22093E6E0()
{
  return MEMORY[0x270F9D7E8]();
}

uint64_t sub_22093E6F0()
{
  return MEMORY[0x270F9D800]();
}

uint64_t sub_22093E700()
{
  return MEMORY[0x270F9D808]();
}

uint64_t sub_22093E710()
{
  return MEMORY[0x270F9D810]();
}

uint64_t sub_22093E720()
{
  return MEMORY[0x270F9D860]();
}

uint64_t sub_22093E730()
{
  return MEMORY[0x270F9D898]();
}

uint64_t sub_22093E740()
{
  return MEMORY[0x270F9D8A0]();
}

uint64_t sub_22093E750()
{
  return MEMORY[0x270F9D8B0]();
}

uint64_t sub_22093E760()
{
  return MEMORY[0x270F9D8E0]();
}

uint64_t sub_22093E770()
{
  return MEMORY[0x270F9D8F0]();
}

uint64_t sub_22093E780()
{
  return MEMORY[0x270F9D8F8]();
}

uint64_t sub_22093E790()
{
  return MEMORY[0x270F9D908]();
}

uint64_t sub_22093E7A0()
{
  return MEMORY[0x270F9D938]();
}

uint64_t sub_22093E7B0()
{
  return MEMORY[0x270F9D948]();
}

uint64_t sub_22093E7C0()
{
  return MEMORY[0x270F9D968]();
}

uint64_t sub_22093E7D0()
{
  return MEMORY[0x270F9D988]();
}

uint64_t sub_22093E7E0()
{
  return MEMORY[0x270F9D990]();
}

uint64_t sub_22093E7F0()
{
  return MEMORY[0x270F9D9A8]();
}

uint64_t sub_22093E800()
{
  return MEMORY[0x270F9D9F0]();
}

uint64_t sub_22093E810()
{
  return MEMORY[0x270F9DA00]();
}

uint64_t sub_22093E820()
{
  return MEMORY[0x270F9DA60]();
}

uint64_t sub_22093E830()
{
  return MEMORY[0x270EF1B88]();
}

uint64_t sub_22093E840()
{
  return MEMORY[0x270F9DBB0]();
}

uint64_t sub_22093E850()
{
  return MEMORY[0x270F9DBC8]();
}

uint64_t sub_22093E860()
{
  return MEMORY[0x270F9DBD0]();
}

uint64_t sub_22093E870()
{
  return MEMORY[0x270F9DBD8]();
}

uint64_t sub_22093E880()
{
  return MEMORY[0x270F9DC08]();
}

uint64_t sub_22093E890()
{
  return MEMORY[0x270F9DC10]();
}

uint64_t sub_22093E8A0()
{
  return MEMORY[0x270F9DC20]();
}

uint64_t sub_22093E8B0()
{
  return MEMORY[0x270F9DC30]();
}

uint64_t sub_22093E8C0()
{
  return MEMORY[0x270F9DC60]();
}

uint64_t sub_22093E8D0()
{
  return MEMORY[0x270F9DC80]();
}

uint64_t sub_22093E8E0()
{
  return MEMORY[0x270F9DC88]();
}

uint64_t sub_22093E8F0()
{
  return MEMORY[0x270F9DCA8]();
}

uint64_t sub_22093E900()
{
  return MEMORY[0x270F9DCD8]();
}

uint64_t sub_22093E910()
{
  return MEMORY[0x270F9DCE8]();
}

uint64_t sub_22093E920()
{
  return MEMORY[0x270F9DCF8]();
}

uint64_t sub_22093E930()
{
  return MEMORY[0x270F9DD08]();
}

uint64_t sub_22093E940()
{
  return MEMORY[0x270F9DD28]();
}

uint64_t sub_22093E950()
{
  return MEMORY[0x270F9DD60]();
}

uint64_t sub_22093E960()
{
  return MEMORY[0x270F9DD78]();
}

uint64_t sub_22093E970()
{
  return MEMORY[0x270F9DDB0]();
}

uint64_t sub_22093E980()
{
  return MEMORY[0x270F9DE18]();
}

uint64_t sub_22093E990()
{
  return MEMORY[0x270F9DE58]();
}

uint64_t sub_22093E9A0()
{
  return MEMORY[0x270F9DEF0]();
}

uint64_t sub_22093E9B0()
{
  return MEMORY[0x270F9DF58]();
}

uint64_t sub_22093E9C0()
{
  return MEMORY[0x270F9DF90]();
}

uint64_t sub_22093E9D0()
{
  return MEMORY[0x270F9DFD0]();
}

uint64_t sub_22093E9E0()
{
  return MEMORY[0x270F9DFE8]();
}

uint64_t sub_22093E9F0()
{
  return MEMORY[0x270F9E018]();
}

uint64_t sub_22093EA00()
{
  return MEMORY[0x270F9E050]();
}

uint64_t sub_22093EA10()
{
  return MEMORY[0x270F9E058]();
}

uint64_t sub_22093EA40()
{
  return MEMORY[0x270F9E070]();
}

uint64_t sub_22093EA60()
{
  return MEMORY[0x270F9E080]();
}

uint64_t sub_22093EA70()
{
  return MEMORY[0x270F9E090]();
}

uint64_t sub_22093EA80()
{
  return MEMORY[0x270F9E0A0]();
}

uint64_t sub_22093EA90()
{
  return MEMORY[0x270F9E0A8]();
}

uint64_t sub_22093EAA0()
{
  return MEMORY[0x270F9E0B8]();
}

uint64_t sub_22093EAB0()
{
  return MEMORY[0x270F9E0C0]();
}

uint64_t sub_22093EAC0()
{
  return MEMORY[0x270F9E0C8]();
}

uint64_t sub_22093EAD0()
{
  return MEMORY[0x270F9E0D0]();
}

uint64_t sub_22093EAE0()
{
  return MEMORY[0x270F9E0D8]();
}

uint64_t sub_22093EAF0()
{
  return MEMORY[0x270F9E0E0]();
}

uint64_t sub_22093EB10()
{
  return MEMORY[0x270F9E128]();
}

uint64_t sub_22093EB20()
{
  return MEMORY[0x270F9E138]();
}

uint64_t sub_22093EB30()
{
  return MEMORY[0x270F9E140]();
}

uint64_t sub_22093EB40()
{
  return MEMORY[0x270F9E148]();
}

uint64_t sub_22093EB50()
{
  return MEMORY[0x270F9E150]();
}

uint64_t sub_22093EB60()
{
  return MEMORY[0x270F9E168]();
}

uint64_t sub_22093EB70()
{
  return MEMORY[0x270F9E178]();
}

uint64_t sub_22093EB80()
{
  return MEMORY[0x270F9E180]();
}

uint64_t sub_22093EB90()
{
  return MEMORY[0x270F9E190]();
}

uint64_t sub_22093EBA0()
{
  return MEMORY[0x270F9E1B8]();
}

uint64_t sub_22093EBB0()
{
  return MEMORY[0x270F9E1D0]();
}

uint64_t sub_22093EBC0()
{
  return MEMORY[0x270F9E1D8]();
}

uint64_t sub_22093EBD0()
{
  return MEMORY[0x270F9E1E0]();
}

uint64_t sub_22093EBE0()
{
  return MEMORY[0x270F9E240]();
}

uint64_t sub_22093EBF0()
{
  return MEMORY[0x270F9E248]();
}

uint64_t sub_22093EC00()
{
  return MEMORY[0x270F9E250]();
}

uint64_t sub_22093EC10()
{
  return MEMORY[0x270F9E260]();
}

uint64_t sub_22093EC30()
{
  return MEMORY[0x270F9E290]();
}

uint64_t sub_22093EC50()
{
  return MEMORY[0x270F9E2A8]();
}

uint64_t sub_22093EC60()
{
  return MEMORY[0x270F9E2B0]();
}

uint64_t sub_22093EC70()
{
  return MEMORY[0x270F9E2C0]();
}

uint64_t sub_22093EC80()
{
  return MEMORY[0x270F9E2C8]();
}

uint64_t sub_22093ECA0()
{
  return MEMORY[0x270F9E2F0]();
}

uint64_t sub_22093ECB0()
{
  return MEMORY[0x270F9E310]();
}

uint64_t sub_22093ECC0()
{
  return MEMORY[0x270F9E318]();
}

uint64_t sub_22093ECD0()
{
  return MEMORY[0x270F9E320]();
}

uint64_t sub_22093ECE0()
{
  return MEMORY[0x270F9E330]();
}

uint64_t sub_22093ECF0()
{
  return MEMORY[0x270F9E338]();
}

uint64_t sub_22093ED00()
{
  return MEMORY[0x270F9E370]();
}

uint64_t sub_22093ED10()
{
  return MEMORY[0x270F9E378]();
}

uint64_t sub_22093ED20()
{
  return MEMORY[0x270F9E380]();
}

uint64_t sub_22093ED30()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_22093ED40()
{
  return MEMORY[0x270F9E3D0]();
}

uint64_t sub_22093ED50()
{
  return MEMORY[0x270F9E400]();
}

uint64_t sub_22093ED60()
{
  return MEMORY[0x270F9E418]();
}

uint64_t sub_22093ED70()
{
  return MEMORY[0x270F9E518]();
}

uint64_t sub_22093ED80()
{
  return MEMORY[0x270EF2478]();
}

uint64_t sub_22093ED90()
{
  return MEMORY[0x270EF25B0]();
}

uint64_t sub_22093EDA0()
{
  return MEMORY[0x270EF25E8]();
}

uint64_t sub_22093EDB0()
{
  return MEMORY[0x270F9E640]();
}

uint64_t sub_22093EDC0()
{
  return MEMORY[0x270F9E648]();
}

uint64_t sub_22093EDD0()
{
  return MEMORY[0x270F9E650]();
}

uint64_t sub_22093EDE0()
{
  return MEMORY[0x270F9E668]();
}

uint64_t sub_22093EDF0()
{
  return MEMORY[0x270F9E670]();
}

uint64_t sub_22093EE10()
{
  return MEMORY[0x270F9E7F0]();
}

uint64_t sub_22093EE20()
{
  return MEMORY[0x270F9E800]();
}

uint64_t sub_22093EE30()
{
  return MEMORY[0x270F9E8C0]();
}

uint64_t sub_22093EE40()
{
  return MEMORY[0x270F9E8C8]();
}

uint64_t sub_22093EE50()
{
  return MEMORY[0x270F9E8D0]();
}

uint64_t sub_22093EE60()
{
  return MEMORY[0x270F9E8D8]();
}

uint64_t sub_22093EE70()
{
  return MEMORY[0x270F9E958]();
}

uint64_t sub_22093EE80()
{
  return MEMORY[0x270F9E960]();
}

uint64_t sub_22093EE90()
{
  return MEMORY[0x270F9E970]();
}

uint64_t sub_22093EEA0()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_22093EEB0()
{
  return MEMORY[0x270F9E9F0]();
}

uint64_t sub_22093EEC0()
{
  return MEMORY[0x270F9E9F8]();
}

uint64_t sub_22093EED0()
{
  return MEMORY[0x270F9EA00]();
}

uint64_t sub_22093EEE0()
{
  return MEMORY[0x270F9EA08]();
}

uint64_t sub_22093EEF0()
{
  return MEMORY[0x270F9EA38]();
}

uint64_t sub_22093EF00()
{
  return MEMORY[0x270F9EA88]();
}

uint64_t sub_22093EF10()
{
  return MEMORY[0x270F9EA90]();
}

uint64_t sub_22093EF20()
{
  return MEMORY[0x270F9EA98]();
}

uint64_t sub_22093EF30()
{
  return MEMORY[0x270F9EAA8]();
}

uint64_t sub_22093EF40()
{
  return MEMORY[0x270F9EAB0]();
}

uint64_t sub_22093EF50()
{
  return MEMORY[0x270F9EAB8]();
}

uint64_t sub_22093EF60()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t sub_22093EF70()
{
  return MEMORY[0x270F9EB80]();
}

uint64_t sub_22093EF80()
{
  return MEMORY[0x270F9EB88]();
}

uint64_t sub_22093EF90()
{
  return MEMORY[0x270F9EB90]();
}

uint64_t sub_22093EFA0()
{
  return MEMORY[0x270F9EBC8]();
}

uint64_t sub_22093EFB0()
{
  return MEMORY[0x270F9EBD8]();
}

uint64_t sub_22093EFC0()
{
  return MEMORY[0x270F9EC40]();
}

uint64_t sub_22093EFD0()
{
  return MEMORY[0x270F9EC48]();
}

uint64_t sub_22093EFE0()
{
  return MEMORY[0x270F9EC88]();
}

uint64_t sub_22093EFF0()
{
  return MEMORY[0x270F9EC90]();
}

uint64_t sub_22093F000()
{
  return MEMORY[0x270F9ECC0]();
}

uint64_t sub_22093F010()
{
  return MEMORY[0x270F9ECC8]();
}

uint64_t sub_22093F020()
{
  return MEMORY[0x270F9ED68]();
}

uint64_t sub_22093F030()
{
  return MEMORY[0x270F9ED70]();
}

uint64_t sub_22093F040()
{
  return MEMORY[0x270F9ED90]();
}

uint64_t sub_22093F050()
{
  return MEMORY[0x270F9EEB0]();
}

uint64_t sub_22093F060()
{
  return MEMORY[0x270F9EF08]();
}

uint64_t sub_22093F070()
{
  return MEMORY[0x270F9EF28]();
}

uint64_t sub_22093F080()
{
  return MEMORY[0x270F9EF40]();
}

uint64_t sub_22093F090()
{
  return MEMORY[0x270F9EFF0]();
}

uint64_t sub_22093F0A0()
{
  return MEMORY[0x270F9F010]();
}

uint64_t sub_22093F0B0()
{
  return MEMORY[0x270F9F018]();
}

uint64_t sub_22093F0C0()
{
  return MEMORY[0x270F9F020]();
}

uint64_t sub_22093F0D0()
{
  return MEMORY[0x270F9F030]();
}

uint64_t sub_22093F0E0()
{
  return MEMORY[0x270F9F098]();
}

uint64_t sub_22093F0F0()
{
  return MEMORY[0x270F9F0A0]();
}

uint64_t sub_22093F100()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_22093F110()
{
  return MEMORY[0x270F9F2E8]();
}

uint64_t sub_22093F120()
{
  return MEMORY[0x270F9F318]();
}

uint64_t sub_22093F130()
{
  return MEMORY[0x270F9F378]();
}

uint64_t sub_22093F140()
{
  return MEMORY[0x270F9F428]();
}

uint64_t sub_22093F150()
{
  return MEMORY[0x270F9F458]();
}

uint64_t sub_22093F160()
{
  return MEMORY[0x270F9F4A8]();
}

uint64_t sub_22093F170()
{
  return MEMORY[0x270F9F4C8]();
}

uint64_t sub_22093F180()
{
  return MEMORY[0x270F9F4D0]();
}

uint64_t sub_22093F190()
{
  return MEMORY[0x270F9F4D8]();
}

uint64_t sub_22093F1A0()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_22093F1B0()
{
  return MEMORY[0x270F9F4F8]();
}

uint64_t sub_22093F1C0()
{
  return MEMORY[0x270F9F578]();
}

uint64_t sub_22093F1D0()
{
  return MEMORY[0x270F9F5A0]();
}

uint64_t sub_22093F1E0()
{
  return MEMORY[0x270F9F658]();
}

uint64_t sub_22093F1F0()
{
  return MEMORY[0x270F9F740]();
}

uint64_t sub_22093F200()
{
  return MEMORY[0x270F9F750]();
}

uint64_t sub_22093F210()
{
  return MEMORY[0x270F9F768]();
}

uint64_t sub_22093F220()
{
  return MEMORY[0x270F9F770]();
}

uint64_t sub_22093F230()
{
  return MEMORY[0x270F9F778]();
}

uint64_t sub_22093F240()
{
  return MEMORY[0x270F9F7B0]();
}

uint64_t sub_22093F250()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_22093F260()
{
  return MEMORY[0x270F9F920]();
}

uint64_t sub_22093F270()
{
  return MEMORY[0x270F9FA60]();
}

uint64_t sub_22093F280()
{
  return MEMORY[0x270F9FA70]();
}

uint64_t sub_22093F290()
{
  return MEMORY[0x270F9FA80]();
}

uint64_t sub_22093F2A0()
{
  return MEMORY[0x270F9FA98]();
}

uint64_t sub_22093F2B0()
{
  return MEMORY[0x270F9FAA8]();
}

uint64_t sub_22093F2C0()
{
  return MEMORY[0x270F9FAB8]();
}

uint64_t sub_22093F2E0()
{
  return MEMORY[0x270F9FB10]();
}

uint64_t sub_22093F2F0()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_22093F300()
{
  return MEMORY[0x270F9FB30]();
}

uint64_t sub_22093F310()
{
  return MEMORY[0x270F9FB38]();
}

uint64_t sub_22093F320()
{
  return MEMORY[0x270F9FB40]();
}

uint64_t sub_22093F330()
{
  return MEMORY[0x270F9FB48]();
}

uint64_t sub_22093F340()
{
  return MEMORY[0x270F9FBA0]();
}

uint64_t sub_22093F350()
{
  return MEMORY[0x270F9FBA8]();
}

uint64_t sub_22093F360()
{
  return MEMORY[0x270F9FBB0]();
}

uint64_t sub_22093F370()
{
  return MEMORY[0x270F9FBB8]();
}

uint64_t sub_22093F380()
{
  return MEMORY[0x270F9FBC0]();
}

uint64_t sub_22093F390()
{
  return MEMORY[0x270F9FBC8]();
}

uint64_t sub_22093F3A0()
{
  return MEMORY[0x270F9FBD0]();
}

uint64_t sub_22093F3B0()
{
  return MEMORY[0x270F9FBD8]();
}

uint64_t sub_22093F3C0()
{
  return MEMORY[0x270F9FBE0]();
}

uint64_t sub_22093F3D0()
{
  return MEMORY[0x270F9FBE8]();
}

uint64_t sub_22093F3E0()
{
  return MEMORY[0x270F9FBF0]();
}

uint64_t sub_22093F3F0()
{
  return MEMORY[0x270F9FBF8]();
}

uint64_t sub_22093F400()
{
  return MEMORY[0x270F9FC08]();
}

uint64_t sub_22093F410()
{
  return MEMORY[0x270F9FC30]();
}

uint64_t sub_22093F420()
{
  return MEMORY[0x270F9FC40]();
}

uint64_t sub_22093F430()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_22093F440()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_22093F450()
{
  return MEMORY[0x270F9FC68]();
}

uint64_t sub_22093F460()
{
  return MEMORY[0x270F9FC70]();
}

uint64_t sub_22093F470()
{
  return MEMORY[0x270F9FC78]();
}

uint64_t sub_22093F480()
{
  return MEMORY[0x270F9FC80]();
}

uint64_t sub_22093F490()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_22093F4A0()
{
  return MEMORY[0x270F9FCB8]();
}

uint64_t sub_22093F4B0()
{
  return MEMORY[0x270F9FCC8]();
}

uint64_t sub_22093F4C0()
{
  return MEMORY[0x270F9FCF0]();
}

uint64_t sub_22093F4D0()
{
  return MEMORY[0x270F9FD58]();
}

uint64_t sub_22093F4E0()
{
  return MEMORY[0x270F9FD70]();
}

uint64_t sub_22093F4F0()
{
  return MEMORY[0x270F9FD80]();
}

uint64_t sub_22093F500()
{
  return MEMORY[0x270F9FD98]();
}

uint64_t sub_22093F530()
{
  return MEMORY[0x270FA0128]();
}

uint64_t _swift_isClassOrObjCExistentialType()
{
  return MEMORY[0x270FA0150]();
}

void bzero(void *a1, size_t a2)
{
}

size_t compression_decode_buffer(uint8_t *dst_buffer, size_t dst_size, const uint8_t *src_buffer, size_t src_size, void *scratch_buffer, compression_algorithm algorithm)
{
  return MEMORY[0x270F98F48](dst_buffer, dst_size, src_buffer, src_size, scratch_buffer, *(void *)&algorithm);
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x270EDA328](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x270EDA468](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

double strtod(const char *a1, char **a2)
{
  MEMORY[0x270EDB6A8](a1, a2);
  return result;
}

float strtof(const char *a1, char **a2)
{
  MEMORY[0x270EDB6B8](a1, a2);
  return result;
}

uint64_t swift_allocBox()
{
  return MEMORY[0x270FA0180]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x270FA01A0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x270FA01D0]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x270FA01D8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x270FA0208]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x270FA0228]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x270FA0268]();
}

uint64_t swift_dynamicCastMetatype()
{
  return MEMORY[0x270FA0278]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x270FA02F8]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x270FA0300]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x270FA0310]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x270FA0330]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x270FA0338]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x270FA03B0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x270FA03B8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x270FA0428]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x270FA0440]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x270FA0448]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x270FA0458]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x270FA0460]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x270FA0478]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isClassType()
{
  return MEMORY[0x270FA0490]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x270FA04D8]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x270FA0528]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x270FA0538]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x270FA0550]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x270FA0568]();
}

uint64_t swift_stdlib_random()
{
  return MEMORY[0x270FA0570]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x270FA0578]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x270FA0588]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x270FA05A8]();
}