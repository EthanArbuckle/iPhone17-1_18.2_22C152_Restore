id getCSSearchableIndexClass()
{
  void *v0;
  id v1;
  void v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t vars8;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getCSSearchableIndexClass_softClass;
  v7 = getCSSearchableIndexClass_softClass;
  if (!getCSSearchableIndexClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getCSSearchableIndexClass_block_invoke;
    v3[3] = &unk_1E5520EB8;
    v3[4] = &v4;
    __getCSSearchableIndexClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_18CB314EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

_INPBGeographicalFeature *INIntentSlotValueTransformToGeographicalFeature(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    v2 = objc_alloc_init(_INPBGeographicalFeature);
    v3 = [v1 geographicalFeatureType];
    v4 = INIntentSlotValueTransformToString(v3);
    [(_INPBGeographicalFeature *)v2 setGeographicalFeatureType:v4];

    v5 = [v1 geographicalFeatureDescriptors];

    v6 = INIntentSlotValueTransformToStrings(v5);
    [(_INPBGeographicalFeature *)v2 setGeographicalFeatureDescriptors:v6];
  }
  else
  {
    v2 = 0;
  }

  return v2;
}

id _INParameterCombinationsWithDictionary(void *a1, void *a2, void *a3)
{
  uint64_t v34 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v27 = a2;
  id v26 = a3;
  v6 = [MEMORY[0x1E4F1CA60] dictionary];
  long long v29 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  v28 = v5;
  id obj = [v5 allKeys];
  uint64_t v7 = [obj countByEnumeratingWithState:&v29 objects:v33 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)v30;
    do
    {
      uint64_t v10 = 0;
      do
      {
        if (*(void *)v30 != v9) {
          objc_enumerationMutation(obj);
        }
        v11 = *(void **)(*((void *)&v29 + 1) + 8 * v10);
        v12 = [v28 objectForKeyedSubscript:v11];
        v13 = (void *)MEMORY[0x1E4F1CAD0];
        v14 = [v11 stringByReplacingOccurrencesOfString:@" " withString:&stru_1EDA6DB28];
        v15 = [v14 componentsSeparatedByString:@","];
        v16 = [v13 setWithArray:v15];

        if (_INParameterCombinationsWithDictionary_onceToken != -1) {
          dispatch_once(&_INParameterCombinationsWithDictionary_onceToken, &__block_literal_global_270);
        }
        v17 = [v16 filteredSetUsingPredicate:_INParameterCombinationsWithDictionary_predicate];

        v18 = objc_alloc_init(INParameterCombination);
        v19 = [v12 objectForKeyedSubscript:@"INIntentParameterCombinationUnsupportedPlatforms"];
        [(INParameterCombination *)v18 updateWithDictionary:v12];
        v20 = [INCodableLocalizationTable alloc];
        v21 = [v27 stringByDeletingPathExtension];
        v22 = [(INCodableLocalizationTable *)v20 initWithBundleIdentifier:v26 tableName:v21];
        [(INParameterCombination *)v18 _setLocalizationTable:v22];

        [v6 setObject:v18 forKeyedSubscript:v17];
        ++v10;
      }
      while (v8 != v10);
      uint64_t v8 = [obj countByEnumeratingWithState:&v29 objects:v33 count:16];
    }
    while (v8);
  }

  v23 = (void *)[v6 copy];

  return v23;
}

id INIntentSlotValueTransformToPrivateAddMediaIntentDatas(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          uint64_t v8 = INIntentSlotValueTransformToPrivateAddMediaIntentData(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    uint64_t v9 = (void *)[v2 copy];
  }
  else
  {
    uint64_t v9 = 0;
  }

  return v9;
}

id INIntentSlotValueTransformToLocationValues(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = INIntentSlotValueTransformToLocationValue(*(void **)(*((void *)&v11 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  uint64_t v9 = (void *)[v2 copy];

  return v9;
}

void sub_18CB34D04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
}

uint64_t INCodableScalarAttributeTypeFromString(void *a1, uint64_t a2)
{
  id v3 = a1;
  char v4 = [v3 isEqualToString:@"Double"];
  if (a2 && (v4 & 1) != 0)
  {
    uint64_t v5 = 0;
  }
  else
  {
    char v6 = [v3 isEqualToString:@"Int32"];
    if (a2 && (v6 & 1) != 0)
    {
      uint64_t v5 = 2;
    }
    else
    {
      char v7 = [v3 isEqualToString:@"Int64"];
      if (a2 && (v7 & 1) != 0)
      {
        uint64_t v5 = 3;
      }
      else
      {
        char v8 = [v3 isEqualToString:@"Bool"];
        if (a2 && (v8 & 1) != 0)
        {
          uint64_t v5 = 6;
        }
        else if ([v3 isEqualToString:@"String"])
        {
          uint64_t v5 = 7;
        }
        else if ([v3 isEqualToString:@"Data"])
        {
          uint64_t v5 = 8;
        }
        else
        {
          uint64_t v5 = -1;
        }
      }
    }
  }

  return v5;
}

void __INCodableAttributeMetadataTypeNameWithTypeName_block_invoke()
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  id v0 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  id v1 = (void *)INCodableAttributeMetadataTypeNameWithTypeName_metadataTypeToAttributeNameMapping;
  INCodableAttributeMetadataTypeNameWithTypeName_metadataTypeToAttributeNameMapping = (uint64_t)v0;

  v2 = +[INSchema _supportedTypesDictionary];
  id v3 = [v2 allValues];

  long long v15 = 0u;
  long long v16 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v4 = v3;
  uint64_t v5 = [v4 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)v14;
    do
    {
      for (uint64_t i = 0; i != v6; ++i)
      {
        if (*(void *)v14 != v7) {
          objc_enumerationMutation(v4);
        }
        uint64_t v9 = *(void **)(*((void *)&v13 + 1) + 8 * i);
        uint64_t v10 = objc_msgSend(v9, "objectForKeyedSubscript:", @"MetadataTypeName", (void)v13);
        if (v10)
        {
          long long v11 = (void *)INCodableAttributeMetadataTypeNameWithTypeName_metadataTypeToAttributeNameMapping;
          long long v12 = [v9 objectForKeyedSubscript:@"Name"];
          [v11 setObject:v10 forKeyedSubscript:v12];
        }
      }
      uint64_t v6 = [v4 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }
    while (v6);
  }
}

id INCodableAttributeMetadataClassWithMetadataTypeName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (INCodableAttributeMetadataClassWithMetadataTypeName_onceToken != -1) {
      dispatch_once(&INCodableAttributeMetadataClassWithMetadataTypeName_onceToken, &__block_literal_global_10_103387);
    }
    v2 = [(id)INCodableAttributeMetadataClassWithMetadataTypeName_classForTypeName objectForKeyedSubscript:v1];
  }
  else
  {
    v2 = 0;
  }

  return v2;
}

id INCodableAttributeMetadataTypeNameWithTypeName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (INCodableAttributeMetadataTypeNameWithTypeName_onceToken != -1) {
      dispatch_once(&INCodableAttributeMetadataTypeNameWithTypeName_onceToken, &__block_literal_global_103377);
    }
    v2 = [(id)INCodableAttributeMetadataTypeNameWithTypeName_metadataTypeToAttributeNameMapping objectForKeyedSubscript:v1];
  }
  else
  {
    v2 = 0;
  }

  return v2;
}

uint64_t INBundleProxyCanDonateIntent(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = _INContainingBundleProxyWithBundleProxy(a1);
  if (v4 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    uint64_t v5 = +[INAppInfo appInfoWithAppProxy:v4];
    uint64_t v6 = [v5 supportedActionsByExtensions];
    char v7 = [v6 containsObject:v3];

    if (v7)
    {

LABEL_8:
      uint64_t v8 = 1;
      goto LABEL_9;
    }
    uint64_t v9 = objc_msgSend(v4, "if_userActivityTypes");
    char v10 = [v9 containsObject:v3];

    if (v10) {
      goto LABEL_8;
    }
  }
  else
  {

    id v4 = 0;
  }
  uint64_t v8 = 0;
LABEL_9:

  return v8;
}

id _INContainingBundleProxyWithBundleProxy(void *a1)
{
  id v1 = a1;
  v2 = [v1 bundleType];
  if (![v2 isEqualToString:*MEMORY[0x1E4F22368]])
  {

    goto LABEL_6;
  }
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  if ((isKindOfClass & 1) == 0)
  {
LABEL_6:

    goto LABEL_7;
  }
  if (v1)
  {
    id v4 = [v1 containingBundle];

    goto LABEL_8;
  }
LABEL_7:
  id v4 = v1;
LABEL_8:

  return v4;
}

uint64_t INCodableStringAttributeMetadataCapitalizationWithString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"None"])
  {
    uint64_t v2 = 0;
  }
  else if ([v1 isEqualToString:@"Words"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"Sentences"])
  {
    uint64_t v2 = 2;
  }
  else if ([v1 isEqualToString:@"AllCharacters"])
  {
    uint64_t v2 = 3;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

uint64_t __INThisProcessIsAssistantd_block_invoke()
{
  uint64_t result = INThisProcessHasAssistantdEntitlement();
  INThisProcessIsAssistantd_isAssistantd = result;
  return result;
}

uint64_t INThisProcessHasAssistantdEntitlement()
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  id v0 = SecTaskCreateFromSelf(0);
  if (v0)
  {
    id v1 = v0;
    CFErrorRef error = 0;
    uint64_t v2 = (void *)SecTaskCopyValueForEntitlement(v0, @"application-identifier", &error);
    id v3 = v2;
    CFErrorRef v4 = error;
    if (error)
    {
      uint64_t v5 = INSiriLogContextIntents;
      if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136315394;
        long long v11 = "_INThisProcessHasEntitlementEqualToValue";
        __int16 v12 = 2114;
        CFErrorRef v13 = v4;
        _os_log_error_impl(&dword_18CB2F000, v5, OS_LOG_TYPE_ERROR, "%s Error copying value for entitlement: %{public}@.", buf, 0x16u);
        CFErrorRef v4 = error;
      }
      CFRelease(v4);
    }
    else if (v2)
    {
      uint64_t v6 = [v2 isEqual:@"com.apple.assistant.assistantd"];
      goto LABEL_12;
    }
    uint64_t v6 = 0;
LABEL_12:
    CFRelease(v1);

    return v6;
  }
  char v7 = INSiriLogContextIntents;
  if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 136315138;
    long long v11 = "_INThisProcessHasEntitlementEqualToValue";
    _os_log_error_impl(&dword_18CB2F000, v7, OS_LOG_TYPE_ERROR, "%s SecTaskCreateFromSelf() failed, assuming this process is NOT entitled.", buf, 0xCu);
  }
  return 0;
}

BOOL _INPBSearchForTimersIntentResponseReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  CFErrorRef v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    char v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        uint64_t v18 = objc_alloc_init(_INPBTimer);
        if (!PBReaderPlaceMark() || !_INPBTimerReadFrom(v18, a2))
        {
LABEL_38:

          return 0;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addTimers:", v18, 0, 0);
        }
        goto LABEL_33;
      }
      if (v17 == 3) {
        break;
      }
      if (v17 == 2)
      {
        uint64_t v18 = objc_alloc_init(_INPBTimer);
        if (!PBReaderPlaceMark() || !_INPBTimerReadFrom(v18, a2)) {
          goto LABEL_38;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addMatchedTimers:", v18, 0, 0);
        }
LABEL_33:

        goto LABEL_35;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_35:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    uint64_t v18 = objc_alloc_init(_INPBTimer);
    if (!PBReaderPlaceMark() || !_INPBTimerReadFrom(v18, a2)) {
      goto LABEL_38;
    }
    PBReaderRecallMark();
    if (v18) {
      objc_msgSend(a1, "addUnmatchedTimers:", v18, 0, 0);
    }
    goto LABEL_33;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _INPBPropertyReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  CFErrorRef v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    char v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 1) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        unint64_t v17 = objc_alloc_init(_INPBIntentSlotValue);
        if (!PBReaderPlaceMark() || (_INPBIntentSlotValueReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPayload:", v17, 0, 0);
        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_26:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    PBReaderReadString();
    unint64_t v17 = (_INPBIntentSlotValue *)objc_claimAutoreleasedReturnValue();
    [a1 setRole:v17];
LABEL_24:

    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL INDescriptorContainsBundleIdentifiers(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 bundleIdentifier];
  if ([v2 length])
  {
    BOOL v3 = 1;
  }
  else
  {
    CFErrorRef v4 = [v1 extensionBundleIdentifier];
    BOOL v3 = [v4 length] != 0;
  }
  return v3;
}

_INPBDateTimeRange *INIntentSlotValueTransformToDateTimeRange(void *a1)
{
  id v1 = INIntentSlotValueTransformToDateTimeRangeValue(a1);
  if (v1)
  {
    uint64_t v2 = objc_alloc_init(_INPBDateTimeRange);
    [(_INPBDateTimeRange *)v2 addValue:v1];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

_INPBDateTimeRangeValue *INIntentSlotValueTransformToDateTimeRangeValue(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_alloc_init(_INPBDateTimeRangeValue);
    BOOL v3 = [v1 startDateComponents];
    CFErrorRef v4 = INIntentSlotValueTransformToDateTime(v3);

    [(_INPBDateTimeRangeValue *)v2 setStartDateTime:v4];
    -[_INPBDateTimeRangeValue setStartCalendar:](v2, "setStartCalendar:", (int)[v4 calendarSystem]);
    uint64_t v5 = [v1 endDateComponents];
    uint64_t v6 = INIntentSlotValueTransformToDateTime(v5);

    [(_INPBDateTimeRangeValue *)v2 setEndDateTime:v6];
    -[_INPBDateTimeRangeValue setEndCalendar:](v2, "setEndCalendar:", (int)[v6 calendarSystem]);
    char v7 = [v1 recurrenceRule];

    if (v7)
    {
      char v8 = objc_alloc_init(_INPBRecurrenceValue);
      unsigned int v9 = [v1 recurrenceRule];
      -[_INPBRecurrenceValue setInterval:](v8, "setInterval:", [v9 interval]);

      unint64_t v10 = [v1 recurrenceRule];
      unint64_t v11 = [v10 frequency];
      if (v11 > 6) {
        uint64_t v12 = 0x7FFFFFFFLL;
      }
      else {
        uint64_t v12 = dword_18CFC41A0[v11];
      }
      [(_INPBRecurrenceValue *)v8 setFrequency:v12];

      char v13 = [v1 startDateComponents];
      uint64_t v14 = [v13 weekdayOrdinal];

      if (v14 != 0x7FFFFFFFFFFFFFFFLL)
      {
        int v15 = [v1 startDateComponents];
        -[_INPBRecurrenceValue setOrdinal:](v8, "setOrdinal:", [v15 weekdayOrdinal]);
      }
      long long v16 = [v1 recurrenceRule];
      uint64_t v17 = [v16 weeklyRecurrenceDays];

      if (v17)
      {
        for (uint64_t i = 0; i != 7; ++i)
        {
          if ((v17 & (1 << i)) != 0) {
            [(_INPBRecurrenceValue *)v8 addWeeklyRecurrenceDays:(i + 1)];
          }
        }
      }
      [(_INPBDateTimeRangeValue *)v2 setRecurrence:v8];
    }
    v19 = [v1 userInput];
    if (v19)
    {
      v20 = objc_alloc_init(_INPBValueMetadata);
      [(_INPBValueMetadata *)v20 setInput:v19];
      [(_INPBDateTimeRangeValue *)v2 setValueMetadata:v20];
    }
    v21 = [v1 allDay];

    if (v21)
    {
      v22 = [v1 allDay];
      -[_INPBDateTimeRangeValue setAllDay:](v2, "setAllDay:", [v22 BOOLValue]);
    }
    else
    {
      [(_INPBDateTimeRangeValue *)v2 setHasAllDay:0];
    }
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INIntentSchemaGetIntentDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    if ([v1 hasPrefix:@"IN"])
    {
      uint64_t v2 = [v1 substringFromIndex:2];
      BOOL v3 = INIntentSchemaGetIntentDescriptionWithName(v2);
    }
    else
    {
      BOOL v3 = 0;
    }
  }
  else
  {
    BOOL v3 = 0;
  }

  return v3;
}

id INIntentSchemaGetIntentDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (INIntentSchemaGetIntentDescriptionWithName_onceToken != -1) {
      dispatch_once(&INIntentSchemaGetIntentDescriptionWithName_onceToken, &__block_literal_global_677);
    }
    uint64_t v2 = [(id)INIntentSchemaGetIntentDescriptionWithName_map objectForKey:v1];
    uint64_t v3 = [v2 integerValue];

    switch(v3)
    {
      case 1:
        uint64_t v4 = INAlarmDomainGetIntentDescriptionWithName(v1);
        break;
      case 2:
        uint64_t v4 = INCalendarEventDomainGetIntentDescriptionWithName(v1);
        break;
      case 3:
        uint64_t v4 = INCallsDomainGetIntentDescriptionWithName(v1);
        break;
      case 4:
        uint64_t v4 = INCarPlayDomainGetIntentDescriptionWithName(v1);
        break;
      case 5:
        uint64_t v4 = INContactDomainGetIntentDescriptionWithName(v1);
        break;
      case 6:
        uint64_t v4 = INFilesDomainGetIntentDescriptionWithName(v1);
        break;
      case 7:
        uint64_t v4 = INFindDeviceDomainGetIntentDescriptionWithName(v1);
        break;
      case 8:
        uint64_t v4 = INFocusStatusDomainGetIntentDescriptionWithName(v1);
        break;
      case 9:
        uint64_t v4 = INGeoDomainGetIntentDescriptionWithName(v1);
        break;
      case 10:
        uint64_t v4 = INHomeCommunicationDomainGetIntentDescriptionWithName(v1);
        break;
      case 11:
        uint64_t v4 = INHomeKitDomainGetIntentDescriptionWithName(v1);
        break;
      case 12:
        uint64_t v4 = INMediaDomainGetIntentDescriptionWithName(v1);
        break;
      case 13:
        uint64_t v4 = INMessagesDomainGetIntentDescriptionWithName(v1);
        break;
      case 14:
        uint64_t v4 = INNotebookDomainGetIntentDescriptionWithName(v1);
        break;
      case 15:
        uint64_t v4 = INPaymentsDomainGetIntentDescriptionWithName(v1);
        break;
      case 16:
        uint64_t v4 = INPhotosDomainGetIntentDescriptionWithName(v1);
        break;
      case 17:
        uint64_t v4 = INRRaaSDomainGetIntentDescriptionWithName(v1);
        break;
      case 18:
        uint64_t v4 = INRadioDomainGetIntentDescriptionWithName(v1);
        break;
      case 19:
        uint64_t v4 = INReservationsDomainGetIntentDescriptionWithName(v1);
        break;
      case 20:
        uint64_t v4 = INRidesharingDomainGetIntentDescriptionWithName(v1);
        break;
      case 21:
        uint64_t v4 = INSettingsDomainGetIntentDescriptionWithName(v1);
        break;
      case 22:
        uint64_t v4 = INTimersDomainGetIntentDescriptionWithName(v1);
        break;
      case 23:
        uint64_t v4 = INVisualCodeDomainGetIntentDescriptionWithName(v1);
        break;
      case 24:
        uint64_t v4 = INVoiceCommandsDomainGetIntentDescriptionWithName(v1);
        break;
      case 25:
        uint64_t v4 = INWellnessDomainGetIntentDescriptionWithName(v1);
        break;
      case 26:
        uint64_t v4 = INWorkflowDomainGetIntentDescriptionWithName(v1);
        break;
      case 27:
        uint64_t v4 = INWorkoutsDomainGetIntentDescriptionWithName(v1);
        break;
      case 28:
        uint64_t v4 = INGenericDomainGetIntentDescriptionWithName(v1);
        break;
      default:
        goto LABEL_6;
    }
    uint64_t v5 = (void *)v4;
  }
  else
  {
LABEL_6:
    uint64_t v5 = 0;
  }

  return v5;
}

id INContainingBundleIdentifierForCurrentProcess()
{
  id v0 = [MEMORY[0x1E4F223F0] bundleProxyForCurrentProcess];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v1 = [v0 containingBundle];

    id v0 = (void *)v1;
  }
  uint64_t v2 = [v0 bundleIdentifier];

  return v2;
}

uint64_t _INPBIntentMetadataReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  char v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    int v16 = v10 & 7;
    if (v15 || v16 == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t v18 = objc_alloc_init(_INPBString);
        if (!PBReaderPlaceMark() || (_INPBStringReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_259;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setUserUtterance:", v18, 0, 0);
        goto LABEL_152;
      case 2u:
        PBReaderReadString();
        uint64_t v18 = (_INPBString *)objc_claimAutoreleasedReturnValue();
        [a1 setLaunchId:v18];
        goto LABEL_152;
      case 3u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                uint64_t v28 = 0;
                goto LABEL_182;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_182:
        objc_msgSend(a1, "setBackgroundLaunch:", v28 != 0, v133, v134);
        goto LABEL_153;
      case 4u:
        char v32 = 0;
        unsigned int v33 = 0;
        uint64_t v34 = 0;
        while (2)
        {
          uint64_t v35 = *v3;
          unint64_t v36 = *(void *)(a2 + v35);
          if (v36 == -1 || v36 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
            *(void *)(a2 + v35) = v36 + 1;
            v34 |= (unint64_t)(v37 & 0x7F) << v32;
            if (v37 < 0)
            {
              v32 += 7;
              BOOL v14 = v33++ >= 9;
              if (v14)
              {
                uint64_t v34 = 0;
                goto LABEL_186;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v34 = 0;
        }
LABEL_186:
        [a1 setConfirmed:v34 != 0];
        goto LABEL_153;
      case 5u:
        PBReaderReadString();
        uint64_t v18 = (_INPBString *)objc_claimAutoreleasedReturnValue();
        [a1 setIntentId:v18];
        goto LABEL_152;
      case 6u:
        char v38 = 0;
        unsigned int v39 = 0;
        uint64_t v40 = 0;
        while (2)
        {
          uint64_t v41 = *v3;
          unint64_t v42 = *(void *)(a2 + v41);
          if (v42 == -1 || v42 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v43 = *(unsigned char *)(*(void *)(a2 + *v7) + v42);
            *(void *)(a2 + v41) = v42 + 1;
            v40 |= (unint64_t)(v43 & 0x7F) << v38;
            if (v43 < 0)
            {
              v38 += 7;
              BOOL v14 = v39++ >= 9;
              if (v14)
              {
                uint64_t v44 = 0;
                goto LABEL_191;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v44 = 0;
        }
        else {
          uint64_t v44 = v40;
        }
LABEL_191:
        objc_msgSend(a1, "setTriggerMethod:", v44, v133, v134);
        goto LABEL_153;
      case 7u:
        PBReaderReadString();
        uint64_t v18 = (_INPBString *)objc_claimAutoreleasedReturnValue();
        [a1 setSystemExtensionBundleId:v18];
        goto LABEL_152;
      case 8u:
        PBReaderReadString();
        uint64_t v18 = (_INPBString *)objc_claimAutoreleasedReturnValue();
        [a1 setIntentDescription:v18];
        goto LABEL_152;
      case 9u:
        uint64_t v18 = objc_alloc_init(_INPBPair);
        uint64_t v133 = 0;
        uint64_t v134 = 0;
        if (!PBReaderPlaceMark() || !_INPBPairReadFrom(v18, a2)) {
          goto LABEL_259;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addParameterImages:", v18, 0, 0);
        }
        goto LABEL_152;
      case 0xAu:
        PBReaderReadString();
        uint64_t v18 = (_INPBString *)objc_claimAutoreleasedReturnValue();
        [a1 setNanoLaunchId:v18];
        goto LABEL_152;
      case 0xBu:
        char v45 = 0;
        unsigned int v46 = 0;
        uint64_t v47 = 0;
        while (2)
        {
          uint64_t v48 = *v3;
          unint64_t v49 = *(void *)(a2 + v48);
          if (v49 == -1 || v49 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v50 = *(unsigned char *)(*(void *)(a2 + *v7) + v49);
            *(void *)(a2 + v48) = v49 + 1;
            v47 |= (unint64_t)(v50 & 0x7F) << v45;
            if (v50 < 0)
            {
              v45 += 7;
              BOOL v14 = v46++ >= 9;
              if (v14)
              {
                uint64_t v51 = 0;
                goto LABEL_196;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v51 = 0;
        }
        else {
          uint64_t v51 = v47;
        }
LABEL_196:
        objc_msgSend(a1, "setIntentCategory:", v51, v133, v134);
        goto LABEL_153;
      case 0xCu:
        PBReaderReadString();
        uint64_t v18 = (_INPBString *)objc_claimAutoreleasedReturnValue();
        [a1 setSuggestedInvocationPhrase:v18];
        goto LABEL_152;
      case 0xDu:
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v54 = 0;
        while (2)
        {
          uint64_t v55 = *v3;
          unint64_t v56 = *(void *)(a2 + v55);
          if (v56 == -1 || v56 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v57 = *(unsigned char *)(*(void *)(a2 + *v7) + v56);
            *(void *)(a2 + v55) = v56 + 1;
            v54 |= (unint64_t)(v57 & 0x7F) << v52;
            if (v57 < 0)
            {
              v52 += 7;
              BOOL v14 = v53++ >= 9;
              if (v14)
              {
                uint64_t v58 = 0;
                goto LABEL_201;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v58 = 0;
        }
        else {
          uint64_t v58 = v54;
        }
LABEL_201:
        objc_msgSend(a1, "setExecutionContext:", v58, v133, v134);
        goto LABEL_153;
      case 0xEu:
        PBReaderReadString();
        uint64_t v18 = (_INPBString *)objc_claimAutoreleasedReturnValue();
        [a1 setOriginatingDeviceIdsIdentifier:v18];
        goto LABEL_152;
      case 0xFu:
        char v59 = 0;
        unsigned int v60 = 0;
        uint64_t v61 = 0;
        while (2)
        {
          uint64_t v62 = *v3;
          unint64_t v63 = *(void *)(a2 + v62);
          if (v63 == -1 || v63 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v64 = *(unsigned char *)(*(void *)(a2 + *v7) + v63);
            *(void *)(a2 + v62) = v63 + 1;
            v61 |= (unint64_t)(v64 & 0x7F) << v59;
            if (v64 < 0)
            {
              v59 += 7;
              BOOL v14 = v60++ >= 9;
              if (v14)
              {
                uint64_t v61 = 0;
                goto LABEL_205;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v61 = 0;
        }
LABEL_205:
        [a1 setUserConfirmationRequired:v61 != 0];
        goto LABEL_153;
      case 0x10u:
        PBReaderReadString();
        uint64_t v18 = (_INPBString *)objc_claimAutoreleasedReturnValue();
        [a1 setCategoryVerb:v18];
        goto LABEL_152;
      case 0x11u:
        uint64_t v18 = objc_alloc_init(_INPBImageValue);
        if PBReaderPlaceMark() && (_INPBImageValueReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setDefaultImageValue:", v18, 0, 0);
LABEL_152:

LABEL_153:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_259:

        return 0;
      case 0x12u:
        PBReaderReadString();
        uint64_t v18 = (_INPBString *)objc_claimAutoreleasedReturnValue();
        [a1 setSystemUIExtensionBundleId:v18];
        goto LABEL_152;
      case 0x13u:
        char v65 = 0;
        unsigned int v66 = 0;
        uint64_t v67 = 0;
        while (2)
        {
          uint64_t v68 = *v3;
          unint64_t v69 = *(void *)(a2 + v68);
          if (v69 == -1 || v69 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v70 = *(unsigned char *)(*(void *)(a2 + *v7) + v69);
            *(void *)(a2 + v68) = v69 + 1;
            v67 |= (unint64_t)(v70 & 0x7F) << v65;
            if (v70 < 0)
            {
              v65 += 7;
              BOOL v14 = v66++ >= 9;
              if (v14)
              {
                uint64_t v67 = 0;
                goto LABEL_209;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v67 = 0;
        }
LABEL_209:
        [a1 setIsPrimaryDisplayDisabled:v67 != 0];
        goto LABEL_153;
      case 0x14u:
        char v71 = 0;
        unsigned int v72 = 0;
        uint64_t v73 = 0;
        while (2)
        {
          uint64_t v74 = *v3;
          unint64_t v75 = *(void *)(a2 + v74);
          if (v75 == -1 || v75 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v76 = *(unsigned char *)(*(void *)(a2 + *v7) + v75);
            *(void *)(a2 + v74) = v75 + 1;
            v73 |= (unint64_t)(v76 & 0x7F) << v71;
            if (v76 < 0)
            {
              v71 += 7;
              BOOL v14 = v72++ >= 9;
              if (v14)
              {
                uint64_t v77 = 0;
                goto LABEL_214;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v77 = 0;
        }
        else {
          uint64_t v77 = v73;
        }
LABEL_214:
        objc_msgSend(a1, "setIdiom:", v77, v133, v134);
        goto LABEL_153;
      case 0x15u:
        PBReaderReadString();
        uint64_t v18 = (_INPBString *)objc_claimAutoreleasedReturnValue();
        [a1 setOriginatingDeviceRapportEffectiveId:v18];
        goto LABEL_152;
      case 0x16u:
        PBReaderReadString();
        uint64_t v18 = (_INPBString *)objc_claimAutoreleasedReturnValue();
        [a1 setOriginatingDeviceRapportMediaSystemId:v18];
        goto LABEL_152;
      case 0x17u:
        char v78 = 0;
        unsigned int v79 = 0;
        uint64_t v80 = 0;
        while (2)
        {
          uint64_t v81 = *v3;
          unint64_t v82 = *(void *)(a2 + v81);
          if (v82 == -1 || v82 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v83 = *(unsigned char *)(*(void *)(a2 + *v7) + v82);
            *(void *)(a2 + v81) = v82 + 1;
            v80 |= (unint64_t)(v83 & 0x7F) << v78;
            if (v83 < 0)
            {
              v78 += 7;
              BOOL v14 = v79++ >= 9;
              if (v14)
              {
                uint64_t v80 = 0;
                goto LABEL_218;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v80 = 0;
        }
LABEL_218:
        [a1 setIsOwnedByCurrentUser:v80 != 0];
        goto LABEL_153;
      case 0x18u:
        PBReaderReadString();
        uint64_t v18 = (_INPBString *)objc_claimAutoreleasedReturnValue();
        if (v18) {
          [a1 addForceNeedsValueForParameter:v18];
        }
        goto LABEL_152;
      case 0x19u:
        if (v16 != 2)
        {
          char v127 = 0;
          unsigned int v128 = 0;
          uint64_t v129 = 0;
          while (1)
          {
            uint64_t v130 = *v3;
            unint64_t v131 = *(void *)(a2 + v130);
            if (v131 == -1 || v131 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v132 = *(unsigned char *)(*(void *)(a2 + *v7) + v131);
            *(void *)(a2 + v130) = v131 + 1;
            v129 |= (unint64_t)(v132 & 0x7F) << v127;
            if (v132 < 0)
            {
              v127 += 7;
              BOOL v14 = v128++ >= 9;
              if (!v14) {
                continue;
              }
            }
            goto LABEL_256;
          }
          *(unsigned char *)(a2 + *v5) = 1;
          goto LABEL_256;
        }
        uint64_t v133 = 0;
        uint64_t v134 = 0;
        uint64_t result = PBReaderPlaceMark();
        if (!result) {
          return result;
        }
        while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4) && !*(unsigned char *)(a2 + *v5))
        {
          char v84 = 0;
          unsigned int v85 = 0;
          uint64_t v86 = 0;
          while (1)
          {
            uint64_t v87 = *v3;
            unint64_t v88 = *(void *)(a2 + v87);
            if (v88 == -1 || v88 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v89 = *(unsigned char *)(*(void *)(a2 + *v7) + v88);
            *(void *)(a2 + v87) = v88 + 1;
            v86 |= (unint64_t)(v89 & 0x7F) << v84;
            if (v89 < 0)
            {
              v84 += 7;
              BOOL v14 = v85++ >= 9;
              if (!v14) {
                continue;
              }
            }
            goto LABEL_131;
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_131:
          PBRepeatedInt32Add();
        }
        goto LABEL_178;
      case 0x1Au:
        PBReaderReadString();
        uint64_t v18 = (_INPBString *)objc_claimAutoreleasedReturnValue();
        if (v18) {
          [a1 addAirPlayRouteIds:v18];
        }
        goto LABEL_152;
      case 0x1Bu:
        PBReaderReadData();
        uint64_t v18 = (_INPBString *)objc_claimAutoreleasedReturnValue();
        [a1 setAuditTokenData:v18];
        goto LABEL_152;
      case 0x1Cu:
        char v90 = 0;
        unsigned int v91 = 0;
        uint64_t v92 = 0;
        while (2)
        {
          uint64_t v93 = *v3;
          unint64_t v94 = *(void *)(a2 + v93);
          if (v94 == -1 || v94 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v95 = *(unsigned char *)(*(void *)(a2 + *v7) + v94);
            *(void *)(a2 + v93) = v94 + 1;
            v92 |= (unint64_t)(v95 & 0x7F) << v90;
            if (v95 < 0)
            {
              v90 += 7;
              BOOL v14 = v91++ >= 9;
              if (v14)
              {
                uint64_t v92 = 0;
                goto LABEL_222;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v92 = 0;
        }
LABEL_222:
        [a1 setShowsWhenRun:v92 != 0];
        goto LABEL_153;
      case 0x1Du:
        PBReaderReadString();
        uint64_t v18 = (_INPBString *)objc_claimAutoreleasedReturnValue();
        [a1 setEndpointId:v18];
        goto LABEL_152;
      case 0x1Eu:
        PBReaderReadString();
        uint64_t v18 = (_INPBString *)objc_claimAutoreleasedReturnValue();
        [a1 setMediaRouteId:v18];
        goto LABEL_152;
      case 0x1Fu:
        char v96 = 0;
        unsigned int v97 = 0;
        uint64_t v98 = 0;
        while (2)
        {
          uint64_t v99 = *v3;
          unint64_t v100 = *(void *)(a2 + v99);
          if (v100 == -1 || v100 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v101 = *(unsigned char *)(*(void *)(a2 + *v7) + v100);
            *(void *)(a2 + v99) = v100 + 1;
            v98 |= (unint64_t)(v101 & 0x7F) << v96;
            if (v101 < 0)
            {
              v96 += 7;
              BOOL v14 = v97++ >= 9;
              if (v14)
              {
                uint64_t v102 = 0;
                goto LABEL_227;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v102 = 0;
        }
        else {
          uint64_t v102 = v98;
        }
LABEL_227:
        objc_msgSend(a1, "setVersioningHash:", v102, v133, v134);
        goto LABEL_153;
      case 0x20u:
        PBReaderReadString();
        uint64_t v18 = (_INPBString *)objc_claimAutoreleasedReturnValue();
        [a1 setPreferredAudioOutputRouteId:v18];
        goto LABEL_152;
      case 0x21u:
        char v103 = 0;
        unsigned int v104 = 0;
        uint64_t v105 = 0;
        while (2)
        {
          uint64_t v106 = *v3;
          unint64_t v107 = *(void *)(a2 + v106);
          if (v107 == -1 || v107 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v108 = *(unsigned char *)(*(void *)(a2 + *v7) + v107);
            *(void *)(a2 + v106) = v107 + 1;
            v105 |= (unint64_t)(v108 & 0x7F) << v103;
            if (v108 < 0)
            {
              v103 += 7;
              BOOL v14 = v104++ >= 9;
              if (v14)
              {
                uint64_t v105 = 0;
                goto LABEL_231;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v105 = 0;
        }
LABEL_231:
        [a1 setMsLimitReached:v105 != 0];
        goto LABEL_153;
      case 0x22u:
        char v109 = 0;
        unsigned int v110 = 0;
        uint64_t v111 = 0;
        while (2)
        {
          uint64_t v112 = *v3;
          unint64_t v113 = *(void *)(a2 + v112);
          if (v113 == -1 || v113 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v114 = *(unsigned char *)(*(void *)(a2 + *v7) + v113);
            *(void *)(a2 + v112) = v113 + 1;
            v111 |= (unint64_t)(v114 & 0x7F) << v109;
            if (v114 < 0)
            {
              v109 += 7;
              BOOL v14 = v110++ >= 9;
              if (v14)
              {
                uint64_t v111 = 0;
                goto LABEL_235;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v111 = 0;
        }
LABEL_235:
        [a1 setEndpointMediaPlaybackEnabled:v111 != 0];
        goto LABEL_153;
      case 0x23u:
        char v115 = 0;
        unsigned int v116 = 0;
        uint64_t v117 = 0;
        while (2)
        {
          uint64_t v118 = *v3;
          unint64_t v119 = *(void *)(a2 + v118);
          if (v119 == -1 || v119 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v120 = *(unsigned char *)(*(void *)(a2 + *v7) + v119);
            *(void *)(a2 + v118) = v119 + 1;
            v117 |= (unint64_t)(v120 & 0x7F) << v115;
            if (v120 < 0)
            {
              v115 += 7;
              BOOL v14 = v116++ >= 9;
              if (v14)
              {
                uint64_t v117 = 0;
                goto LABEL_239;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v117 = 0;
        }
LABEL_239:
        [a1 setBypassAppProtectionAuthentication:v117 != 0];
        goto LABEL_153;
      default:
        if ((v10 >> 3) == 9999)
        {
          if (v16 == 2)
          {
            uint64_t v133 = 0;
            uint64_t v134 = 0;
            uint64_t result = PBReaderPlaceMark();
            if (!result) {
              return result;
            }
            while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4) && !*(unsigned char *)(a2 + *v5))
            {
              char v20 = 0;
              unsigned int v21 = 0;
              uint64_t v22 = 0;
              while (1)
              {
                uint64_t v23 = *v3;
                unint64_t v24 = *(void *)(a2 + v23);
                if (v24 == -1 || v24 >= *(void *)(a2 + *v4)) {
                  break;
                }
                char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
                *(void *)(a2 + v23) = v24 + 1;
                v22 |= (unint64_t)(v25 & 0x7F) << v20;
                if (v25 < 0)
                {
                  v20 += 7;
                  BOOL v14 = v21++ >= 9;
                  if (!v14) {
                    continue;
                  }
                }
                goto LABEL_35;
              }
              *(unsigned char *)(a2 + *v5) = 1;
LABEL_35:
              PBRepeatedInt32Add();
            }
LABEL_178:
            PBReaderRecallMark();
          }
          else
          {
            char v121 = 0;
            unsigned int v122 = 0;
            uint64_t v123 = 0;
            while (1)
            {
              uint64_t v124 = *v3;
              unint64_t v125 = *(void *)(a2 + v124);
              if (v125 == -1 || v125 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v126 = *(unsigned char *)(*(void *)(a2 + *v7) + v125);
              *(void *)(a2 + v124) = v125 + 1;
              v123 |= (unint64_t)(v126 & 0x7F) << v121;
              if (v126 < 0)
              {
                v121 += 7;
                BOOL v14 = v122++ >= 9;
                if (!v14) {
                  continue;
                }
              }
              goto LABEL_256;
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_256:
            PBRepeatedInt32Add();
          }
        }
        else if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
          return 0;
        }
        goto LABEL_153;
    }
  }
}

BOOL _INPBSaveParkingLocationIntentResponseReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    char v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = objc_alloc_init(_INPBLocation);
        if (!PBReaderPlaceMark() || (_INPBLocationReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setParkingLocation:", v17, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    uint64_t v17 = objc_alloc_init(_INPBString);
    if (!PBReaderPlaceMark() || (_INPBStringReadFrom(v17, a2) & 1) == 0)
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setParkingNote:", v17, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

_INPBActivity *INIntentSlotValueTransformToActivity(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    uint64_t v2 = objc_alloc_init(_INPBActivity);
    uint64_t v3 = [v1 activityType];
    uint64_t v4 = INIntentSlotValueTransformToString(v3);
    [(_INPBActivity *)v2 setActivityType:v4];

    uint64_t v5 = [v1 activityDescriptors];

    uint64_t v6 = INIntentSlotValueTransformToStrings(v5);
    [(_INPBActivity *)v2 setActivityDescriptors:v6];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INIntentSlotValueTransformToStrings(void *a1)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v11;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v11 != v6) {
          objc_enumerationMutation(v3);
        }
        char v8 = INIntentSlotValueTransformToString(*(void **)(*((void *)&v10 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v10);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v5);
  }

  return v2;
}

uint64_t _INPBAddTasksIntentResponseReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    char v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      int v16 = v10 & 7;
      if (v15 || v16 == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((v10 >> 3) == 1) {
        break;
      }
      if (v18 == 3)
      {
        if (v16 == 2)
        {
          uint64_t result = PBReaderPlaceMark();
          if (!result) {
            return result;
          }
          while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4) && !*(unsigned char *)(a2 + *v5))
          {
            char v21 = 0;
            unsigned int v22 = 0;
            uint64_t v23 = 0;
            while (1)
            {
              uint64_t v24 = *v3;
              unint64_t v25 = *(void *)(a2 + v24);
              if (v25 == -1 || v25 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v25);
              *(void *)(a2 + v24) = v25 + 1;
              v23 |= (unint64_t)(v26 & 0x7F) << v21;
              if (v26 < 0)
              {
                v21 += 7;
                BOOL v14 = v22++ >= 9;
                if (!v14) {
                  continue;
                }
              }
              goto LABEL_41;
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_41:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v29 = 0;
          while (1)
          {
            uint64_t v30 = *v3;
            unint64_t v31 = *(void *)(a2 + v30);
            if (v31 == -1 || v31 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
            *(void *)(a2 + v30) = v31 + 1;
            v29 |= (unint64_t)(v32 & 0x7F) << v27;
            if (v32 < 0)
            {
              v27 += 7;
              BOOL v14 = v28++ >= 9;
              if (!v14) {
                continue;
              }
            }
            goto LABEL_53;
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_53:
          PBRepeatedInt32Add();
        }
        goto LABEL_54;
      }
      if (v18 == 2)
      {
        v19 = objc_alloc_init(_INPBTask);
        if (!PBReaderPlaceMark() || !_INPBTaskReadFrom(v19, a2)) {
          goto LABEL_57;
        }
        PBReaderRecallMark();
        if (v19) {
          objc_msgSend(a1, "addAddedTasks:", v19, 0, 0);
        }
LABEL_28:

        goto LABEL_54;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_54:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    v19 = objc_alloc_init(_INPBTaskList);
    if (!PBReaderPlaceMark() || !_INPBTaskListReadFrom(v19, a2))
    {
LABEL_57:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setModifiedTaskList:", v19, 0, 0);
    goto LABEL_28;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

id INIntentSlotValueTransformFromPrivateMediaIntentDatas(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          INIntentSlotValueTransformFromPrivateMediaIntentData(*(INPrivateMediaIntentData **)(*((void *)&v11 + 1)
          char v8 = + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    unsigned int v9 = (void *)[v2 copy];
  }
  else
  {
    unsigned int v9 = 0;
  }

  return v9;
}

void __Block_byref_object_dispose__54911(uint64_t a1)
{
}

uint64_t _INPBActivateCarSignalIntentResponseReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v6 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v7 = 0;
      unsigned int v8 = 0;
      unint64_t v9 = 0;
      while (1)
      {
        uint64_t v10 = *v3;
        unint64_t v11 = *(void *)(a2 + v10);
        if (v11 == -1 || v11 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)(a2 + *v6) + v11);
        *(void *)(a2 + v10) = v11 + 1;
        v9 |= (unint64_t)(v12 & 0x7F) << v7;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v7 += 7;
        BOOL v13 = v8++ >= 9;
        if (v13)
        {
          unint64_t v9 = 0;
          int v14 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v14 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v9 = 0;
      }
LABEL_14:
      int v15 = v9 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v9 >> 3) == 1)
      {
        if (v15 == 2)
        {
          uint64_t result = PBReaderPlaceMark();
          if (!result) {
            return result;
          }
          while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4) && !*(unsigned char *)(a2 + *v5))
          {
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            while (1)
            {
              uint64_t v21 = *v3;
              unint64_t v22 = *(void *)(a2 + v21);
              if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v23 = *(unsigned char *)(*(void *)(a2 + *v6) + v22);
              *(void *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if (v23 < 0)
              {
                v18 += 7;
                BOOL v13 = v19++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_31;
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_31:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v26 = 0;
          while (1)
          {
            uint64_t v27 = *v3;
            unint64_t v28 = *(void *)(a2 + v27);
            if (v28 == -1 || v28 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v29 = *(unsigned char *)(*(void *)(a2 + *v6) + v28);
            *(void *)(a2 + v27) = v28 + 1;
            v26 |= (unint64_t)(v29 & 0x7F) << v24;
            if (v29 < 0)
            {
              v24 += 7;
              BOOL v13 = v25++ >= 9;
              if (!v13) {
                continue;
              }
            }
            goto LABEL_43;
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_43:
          PBRepeatedInt32Add();
        }
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        return 0;
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void _INSetIdProperty(void *a1, const char *a2, void *a3)
{
  v12[1] = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  id v6 = a1;
  char v7 = sel_getName(a2) + 3;
  size_t v8 = strlen(v7);
  unint64_t v9 = (char *)v12 - ((MEMORY[0x1F4188790]() + 16) & 0xFFFFFFFFFFFFFFF0);
  strlcpy(v9, v7, v10);
  *unint64_t v9 = __tolower(*v9);
  v9[v8 - 1] = 0;
  unint64_t v11 = [NSString stringWithUTF8String:v9];
  [v6 setValue:v5 forProperty:v11];
}

id _INGetIdProperty(void *a1, const char *a2)
{
  id v3 = NSString;
  id v4 = a1;
  id v5 = [v3 stringWithUTF8String:sel_getName(a2)];
  id v6 = [v4 valueForProperty:v5];

  return v6;
}

void sub_18CB48C58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,void *a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,void *a62)
{
  _Unwind_Resume(a1);
}

uint64_t **std::__tree<std::__value_type<std::string,INSystemApp>,std::__map_value_compare<std::string,std::__value_type<std::string,INSystemApp>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,INSystemApp>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(uint64_t **a1, void *a2, uint64_t a3)
{
  id v6 = a1 + 1;
  id v5 = a1[1];
  char v7 = a1 + 1;
  size_t v8 = a1 + 1;
  if (v5)
  {
    while (1)
    {
      while (1)
      {
        char v7 = (uint64_t **)v5;
        size_t v10 = v5 + 4;
        if (!std::less<std::string>::operator()[abi:ne180100](a2, v5 + 4)) {
          break;
        }
        id v5 = *v7;
        size_t v8 = v7;
        if (!*v7) {
          goto LABEL_7;
        }
      }
      if (!std::less<std::string>::operator()[abi:ne180100](v10, a2)) {
        break;
      }
      size_t v8 = v7 + 1;
      id v5 = v7[1];
      if (!v5) {
        goto LABEL_7;
      }
    }
  }
  else
  {
LABEL_7:
    unint64_t v11 = v7;
    char v7 = (uint64_t **)operator new(0x50uLL);
    *((_OWORD *)v7 + 2) = *(_OWORD *)a3;
    char v12 = *(void *)(a3 + 16);
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    *(void *)(a3 + 16) = 0;
    v7[6] = (uint64_t *)v12;
    v7[7] = 0;
    v7[8] = 0;
    v7[9] = 0;
    *char v7 = 0;
    v7[1] = 0;
    v7[2] = v11;
    *size_t v8 = (uint64_t *)v7;
    BOOL v13 = (uint64_t *)**a1;
    int v14 = (uint64_t *)v7;
    if (v13)
    {
      *a1 = v13;
      int v14 = *v8;
    }
    int v15 = *v6;
    BOOL v16 = v14 == *v6;
    *((unsigned char *)v14 + 24) = v16;
    if (!v16)
    {
      do
      {
        uint64_t v17 = v14[2];
        if (*(unsigned char *)(v17 + 24)) {
          break;
        }
        char v18 = *(uint64_t **)(v17 + 16);
        uint64_t v19 = *v18;
        if (*v18 == v17)
        {
          uint64_t v22 = v18[1];
          if (!v22 || (v23 = *(unsigned __int8 *)(v22 + 24), uint64_t v20 = (unsigned char *)(v22 + 24), v23))
          {
            if (*(uint64_t **)v17 == v14)
            {
              char v24 = (uint64_t *)v14[2];
            }
            else
            {
              char v24 = *(uint64_t **)(v17 + 8);
              uint64_t v25 = *v24;
              *(void *)(v17 + 8) = *v24;
              if (v25)
              {
                *(void *)(v25 + 16) = v17;
                char v18 = *(uint64_t **)(v17 + 16);
              }
              v24[2] = (uint64_t)v18;
              *(void *)(*(void *)(v17 + 16) + 8 * (**(void **)(v17 + 16) != v17)) = v24;
              *char v24 = v17;
              *(void *)(v17 + 16) = v24;
              char v18 = (uint64_t *)v24[2];
              uint64_t v17 = *v18;
            }
            *((unsigned char *)v24 + 24) = 1;
            *((unsigned char *)v18 + 24) = 0;
            uint64_t v28 = *(void *)(v17 + 8);
            uint64_t *v18 = v28;
            if (v28) {
              *(void *)(v28 + 16) = v18;
            }
            *(void *)(v17 + 16) = v18[2];
            *(void *)(v18[2] + 8 * (*(void *)v18[2] != (void)v18)) = v17;
            *(void *)(v17 + 8) = v18;
            goto LABEL_35;
          }
        }
        else if (!v19 || (v21 = *(unsigned __int8 *)(v19 + 24), uint64_t v20 = (unsigned char *)(v19 + 24), v21))
        {
          if (*(uint64_t **)v17 == v14)
          {
            uint64_t v26 = v14[1];
            *(void *)uint64_t v17 = v26;
            if (v26)
            {
              *(void *)(v26 + 16) = v17;
              char v18 = *(uint64_t **)(v17 + 16);
            }
            v14[2] = (uint64_t)v18;
            *(void *)(*(void *)(v17 + 16) + 8 * (**(void **)(v17 + 16) != v17)) = v14;
            v14[1] = v17;
            *(void *)(v17 + 16) = v14;
            char v18 = (uint64_t *)v14[2];
          }
          else
          {
            int v14 = (uint64_t *)v14[2];
          }
          *((unsigned char *)v14 + 24) = 1;
          *((unsigned char *)v18 + 24) = 0;
          uint64_t v17 = v18[1];
          uint64_t v27 = *(uint64_t **)v17;
          v18[1] = *(void *)v17;
          if (v27) {
            v27[2] = (uint64_t)v18;
          }
          *(void *)(v17 + 16) = v18[2];
          *(void *)(v18[2] + 8 * (*(void *)v18[2] != (void)v18)) = v17;
          *(void *)uint64_t v17 = v18;
LABEL_35:
          v18[2] = v17;
          break;
        }
        *(unsigned char *)(v17 + 24) = 1;
        int v14 = v18;
        *((unsigned char *)v18 + 24) = v18 == v15;
        unsigned char *v20 = 1;
      }
      while (v18 != v15);
    }
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
  }
  return v7;
}

BOOL std::less<std::string>::operator()[abi:ne180100](void *a1, void *a2)
{
  int v2 = *((char *)a2 + 23);
  int v3 = *((char *)a1 + 23);
  if (v3 >= 0) {
    size_t v4 = *((unsigned __int8 *)a1 + 23);
  }
  else {
    size_t v4 = a1[1];
  }
  if (v3 < 0) {
    a1 = (void *)*a1;
  }
  if (v2 >= 0) {
    size_t v5 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    size_t v5 = a2[1];
  }
  if (v2 < 0) {
    a2 = (void *)*a2;
  }
  if (v5 >= v4) {
    size_t v6 = v4;
  }
  else {
    size_t v6 = v5;
  }
  int v7 = memcmp(a1, a2, v6);
  if (v7) {
    return v7 < 0;
  }
  else {
    return v4 < v5;
  }
}

void *std::string::basic_string[abi:ne180100]<0>(void *a1, char *__s)
{
  size_t v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  size_t v5 = v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    size_t v6 = operator new(v7 + 1);
    a1[1] = v5;
    a1[2] = v8 | 0x8000000000000000;
    *a1 = v6;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v4;
    size_t v6 = a1;
    if (!v4) {
      goto LABEL_9;
    }
  }
  memmove(v6, __s, v5);
LABEL_9:
  *((unsigned char *)v6 + v5) = 0;
  return a1;
}

uint64_t INResolveInstanceMethod(const char *a1, objc_class *a2)
{
  uint64_t v39 = *MEMORY[0x1E4F143B8];
  Name = sel_getName(a1);
  uint64_t v27 = 0;
  uint64_t v28 = 0;
  if (!strncmp("set", Name, 3uLL) && Name[strlen(Name) - 1] == 58)
  {
    size_t v5 = 0;
    char v6 = 1;
    while (1)
    {
      char v7 = v6;
      uint64_t v8 = sel_getName(a1) + 3;
      size_t v9 = strlen(v8);
      size_t v10 = &types[-((MEMORY[0x1F4188790]() + 16) & 0xFFFFFFFFFFFFFFF0) - 8];
      strlcpy(v10, v8, v11);
      if (v7) {
        *size_t v10 = __tolower(*v10);
      }
      v10[v9 - 1] = 0;
      char v12 = [NSString stringWithUTF8String:v10];

      if (_INGetPropertyInfo(a2, v12, 1, &v28, (const char **)&v27)) {
        break;
      }
      char v6 = 0;
      size_t v5 = v12;
      if ((v7 & 1) == 0)
      {
        BOOL v13 = v27;
        goto LABEL_19;
      }
    }
    strcpy(types, "v@: ");
    BOOL v13 = v27;
    types[3] = *v27;
    int v16 = types[3];
    uint64_t v17 = (void (*)(void))_INSetIntProperty;
    if (types[3] > 82)
    {
      switch(types[3])
      {
        case 'c':
        case 'i':
        case 's':
          goto LABEL_53;
        case 'd':
          uint64_t v19 = (void (*)(void))_INSetDoubleProperty;
          goto LABEL_52;
        case 'e':
        case 'g':
        case 'h':
        case 'j':
        case 'k':
        case 'm':
        case 'n':
        case 'o':
        case 'p':
        case 'r':
          goto LABEL_20;
        case 'f':
          uint64_t v19 = (void (*)(void))_INSetFloatProperty;
          goto LABEL_52;
        case 'l':
          uint64_t v19 = (void (*)(void))_INSetLongProperty;
          goto LABEL_52;
        case 'q':
          uint64_t v19 = (void (*)(void))_INSetLongLongProperty;
          goto LABEL_52;
        default:
          goto LABEL_35;
      }
    }
    switch(types[3])
    {
      case '@':
        id v22 = _INClassFromType((uint64_t)v27, a2);
        uint64_t v19 = (void (*)(void))_INSetIdProperty;
        if (!v22)
        {
          int v23 = _INProtocolFromType((uint64_t)v13, a2);

          uint64_t v19 = (void (*)(void))_INSetIdProperty;
          if (!v23) {
            goto LABEL_20;
          }
        }
        goto LABEL_52;
      case 'A':
      case 'D':
      case 'E':
      case 'F':
      case 'G':
      case 'H':
        goto LABEL_20;
      case 'B':
        uint64_t v19 = (void (*)(void))_INSetBoolProperty;
        goto LABEL_52;
      case 'C':
        goto LABEL_53;
      case 'I':
        uint64_t v19 = (void (*)(void))_INSetUnsignedIntProperty;
        goto LABEL_52;
      default:
        if (types[3] == 76)
        {
          uint64_t v19 = (void (*)(void))_INSetUnsignedLongProperty;
        }
        else
        {
          if (types[3] != 81) {
            goto LABEL_20;
          }
          uint64_t v19 = (void (*)(void))_INSetUnsignedLongLongProperty;
        }
        break;
    }
    goto LABEL_52;
  }
  char v12 = 0;
  uint64_t v14 = 0;
  if (!*Name || *Name == 95) {
    goto LABEL_54;
  }
  if (Name[strlen(Name) - 1] == 58)
  {
    uint64_t v14 = 0;
    char v12 = 0;
    goto LABEL_54;
  }
  char v12 = [NSString stringWithUTF8String:sel_getName(a1)];
  unsigned int v15 = _INGetPropertyInfo(a2, v12, 0, &v28, (const char **)&v27);
  BOOL v13 = v27;
  if (v15)
  {
    strcpy(types, " @:");
    types[0] = *v27;
    int v16 = types[0];
    uint64_t v17 = (void (*)(void))_INGetIntProperty;
    if (types[0] > 82)
    {
      switch(types[0])
      {
        case 'c':
        case 'i':
        case 's':
          goto LABEL_53;
        case 'd':
          uint64_t v19 = (void (*)(void))_INGetDoubleProperty;
          goto LABEL_52;
        case 'e':
        case 'g':
        case 'h':
        case 'j':
        case 'k':
        case 'm':
        case 'n':
        case 'o':
        case 'p':
        case 'r':
          goto LABEL_20;
        case 'f':
          uint64_t v19 = (void (*)(void))_INGetFloatProperty;
          goto LABEL_52;
        case 'l':
          uint64_t v19 = (void (*)(void))_INGetLongProperty;
          goto LABEL_52;
        case 'q':
          uint64_t v19 = (void (*)(void))_INGetLongLongProperty;
          goto LABEL_52;
        default:
LABEL_35:
          if (v16 != 83) {
            goto LABEL_20;
          }
          goto LABEL_53;
      }
    }
    switch(types[0])
    {
      case '@':
        id v18 = _INClassFromType((uint64_t)v27, a2);
        uint64_t v19 = (void (*)(void))_INGetIdProperty;
        if (!v18)
        {
          uint64_t v20 = _INProtocolFromType((uint64_t)v13, a2);

          uint64_t v19 = (void (*)(void))_INGetIdProperty;
          if (!v20) {
            goto LABEL_20;
          }
        }
        break;
      case 'A':
      case 'D':
      case 'E':
      case 'F':
      case 'G':
      case 'H':
        goto LABEL_20;
      case 'B':
        uint64_t v19 = (void (*)(void))_INGetBoolProperty;
        break;
      case 'C':
        goto LABEL_53;
      case 'I':
        uint64_t v19 = (void (*)(void))_INGetUnsignedIntProperty;
        break;
      default:
        if (types[0] == 76)
        {
          uint64_t v19 = (void (*)(void))_INGetUnsignedLongProperty;
        }
        else
        {
          if (types[0] != 81) {
            goto LABEL_20;
          }
          uint64_t v19 = (void (*)(void))_INGetUnsignedLongLongProperty;
        }
        break;
    }
LABEL_52:
    uint64_t v17 = v19;
LABEL_53:
    class_addMethod(v28, a1, v17, types);
    uint64_t v14 = 1;
    goto LABEL_54;
  }
LABEL_19:
  if (v13)
  {
LABEL_20:
    int v21 = INSiriLogContextIntents;
    if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136316162;
      uint64_t v30 = "INResolveInstanceMethod";
      __int16 v31 = 2112;
      char v32 = a2;
      __int16 v33 = 2112;
      uint64_t v34 = v12;
      __int16 v35 = 2080;
      unint64_t v36 = v13;
      __int16 v37 = 2112;
      char v38 = a2;
      _os_log_error_impl(&dword_18CB2F000, v21, OS_LOG_TYPE_ERROR, "%s Dynamic property %@.%@ has type '%s' unsupported by %@", buf, 0x34u);
    }
  }
  uint64_t v14 = 0;
LABEL_54:

  return v14;
}

objc_property *_INGetPropertyInfo(objc_class *Superclass, id a2, int a3, objc_class **a4, const char **a5)
{
  size_t v9 = (const char *)[a2 UTF8String];
  uint64_t result = class_getProperty(Superclass, v9);
  if (result)
  {
    size_t v11 = result;
    do
    {
      *a4 = Superclass;
      Superclass = class_getSuperclass(Superclass);
    }
    while (class_getProperty(Superclass, v9) == v11);
    char v13 = 0;
    char v12 = _INGetPropertyType(v11, &v13);
    if (v13) {
      uint64_t result = (objc_property *)(a3 ^ 1u);
    }
    else {
      uint64_t result = (objc_property *)1;
    }
    if (!result) {
      char v12 = 0;
    }
    *a5 = v12;
  }
  else
  {
    *a5 = 0;
  }
  return result;
}

const char *_INGetPropertyType(objc_property *a1, unsigned char *a2)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  *a2 = 0;
  Attributes = property_getAttributes(a1);
  strlen(Attributes);
  size_t v4 = (char *)&__stringp - ((MEMORY[0x1F4188790]() + 16) & 0xFFFFFFFFFFFFFFF0);
  strlcpy(v4, Attributes, v5);
  __stringp = v4;
  char v6 = "@";
  while (1)
  {
    char v7 = strsep(&__stringp, ",");
    if (!v7) {
      break;
    }
    int v8 = *v7;
    if (v8 == 82)
    {
      *a2 = 1;
    }
    else if (v8 == 84)
    {
      objc_msgSend(MEMORY[0x1E4F1C9B8], "dataWithBytes:length:", v7 + 1, strlen(v7), __stringp, v12);
      id v9 = objc_claimAutoreleasedReturnValue();
      char v6 = (const char *)[v9 bytes];
    }
  }
  return v6;
}

void sub_18CB49C34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id _INClassFromType(uint64_t a1, objc_class *a2)
{
  v10[1] = *MEMORY[0x1E4F143B8];
  size_t v4 = strlen((const char *)a1);
  if (*(unsigned char *)a1 != 64) {
    goto LABEL_11;
  }
  if (v4 == 1)
  {
    size_t v5 = objc_opt_class();
    goto LABEL_12;
  }
  if (v4 >= 4 && *(unsigned char *)(a1 + 1) == 34 && *(unsigned char *)(v4 + a1 - 1) == 34)
  {
    char v6 = (char *)v10 - ((MEMORY[0x1F4188790]() + 13) & 0xFFFFFFFFFFFFFFF0);
    strlcpy(v6, (const char *)(a1 + 2), v7);
    int v8 = strchr(v6, 60);
    if (!v8)
    {
LABEL_10:
      size_t v5 = _INLookupNameInModule(v6, a2, &__block_literal_global_91343);
      goto LABEL_12;
    }
    if (v8 != v6)
    {
      *int v8 = 0;
      goto LABEL_10;
    }
    size_t v5 = 0;
  }
  else
  {
LABEL_11:
    size_t v5 = 0;
  }
LABEL_12:

  return v5;
}

id _INLookupNameInModule(char *a1, objc_class *a2, void *a3)
{
  v13[1] = *MEMORY[0x1E4F143B8];
  size_t v5 = a3;
  if (!a2) {
    goto LABEL_3;
  }
  if (strchr(a1, 46)) {
    goto LABEL_3;
  }
  Name = (char *)class_getName(a2);
  id v9 = strchr(Name, 46);
  if (!v9
    || (int v10 = v9 - Name,
        strlen(a1),
        MEMORY[0x1F4188790](),
        uint64_t v12 = (char *)v13 - v11,
        sprintf((char *)v13 - v11, "%.*s.%s", v10, Name, a1),
        v5[2](v5, v12),
        (char v6 = objc_claimAutoreleasedReturnValue()) == 0))
  {
LABEL_3:
    char v6 = v5[2](v5, a1);
  }

  return v6;
}

void __INCodableAttributeMetadataClassWithMetadataTypeName_block_invoke_2(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  size_t v4 = [a3 objectForKeyedSubscript:@"Extension"];
  if (v4) {
    size_t v5 = v4;
  }
  else {
    size_t v5 = v8;
  }
  id v6 = v5;

  size_t v7 = [NSString stringWithFormat:@"INCodable%@AttributeMetadata", v6];
  [(id)INCodableAttributeMetadataClassWithMetadataTypeName_classForTypeName setObject:NSClassFromString(v7) forKeyedSubscript:v8];
}

id INIntentDefinitionNamespacedName(uint64_t a1, void *a2)
{
  id v3 = a2;
  size_t v4 = v3;
  if (a1)
  {
    id v5 = [NSString stringWithFormat:@"%@.%@", a1, v3];
  }
  else
  {
    id v5 = v3;
  }
  id v6 = v5;

  return v6;
}

uint64_t INIntentCategoryWithString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"information"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"playAudio"])
  {
    uint64_t v2 = 2;
  }
  else if ([v1 isEqualToString:@"playVideo"])
  {
    uint64_t v2 = 3;
  }
  else if ([v1 isEqualToString:@"order"])
  {
    uint64_t v2 = 4;
  }
  else if ([v1 isEqualToString:@"navigation"])
  {
    uint64_t v2 = 5;
  }
  else if ([v1 isEqualToString:@"start"])
  {
    uint64_t v2 = 6;
  }
  else if ([v1 isEqualToString:@"share"])
  {
    uint64_t v2 = 7;
  }
  else if ([v1 isEqualToString:@"create"])
  {
    uint64_t v2 = 8;
  }
  else if ([v1 isEqualToString:@"search"])
  {
    uint64_t v2 = 9;
  }
  else if ([v1 isEqualToString:@"toggle"])
  {
    uint64_t v2 = 10;
  }
  else if ([v1 isEqualToString:@"download"])
  {
    uint64_t v2 = 11;
  }
  else if ([v1 isEqualToString:@"log"])
  {
    uint64_t v2 = 12;
  }
  else if ([v1 isEqualToString:@"checkIn"])
  {
    uint64_t v2 = 13;
  }
  else if ([v1 isEqualToString:@"workflow"])
  {
    uint64_t v2 = 14;
  }
  else if ([v1 isEqualToString:@"request"])
  {
    uint64_t v2 = 15;
  }
  else if ([v1 isEqualToString:@"set"])
  {
    uint64_t v2 = 16;
  }
  else if ([v1 isEqualToString:@"callAudio"])
  {
    uint64_t v2 = 17;
  }
  else if ([v1 isEqualToString:@"callVideo"])
  {
    uint64_t v2 = 18;
  }
  else if ([v1 isEqualToString:@"playSound"])
  {
    uint64_t v2 = 19;
  }
  else if ([v1 isEqualToString:@"userActivity"])
  {
    uint64_t v2 = 20;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

void sub_18CB4D09C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _INPBNoteContentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  size_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    size_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        uint64_t v25 = objc_alloc_init(_INPBImageNoteContent);
        if (!PBReaderPlaceMark() || (_INPBImageNoteContentReadFrom(v25, a2) & 1) == 0)
        {
LABEL_44:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setImage:", v25, 0, 0);
      }
      else
      {
        if (v17 != 2)
        {
          if (v17 == 1)
          {
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            while (1)
            {
              uint64_t v21 = *v3;
              unint64_t v22 = *(void *)(a2 + v21);
              if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
              *(void *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0) {
                goto LABEL_38;
              }
              v18 += 7;
              BOOL v14 = v19++ >= 9;
              if (v14)
              {
                uint64_t v24 = 0;
                goto LABEL_41;
              }
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_38:
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v24 = 0;
            }
            else {
              uint64_t v24 = v20;
            }
LABEL_41:
            [a1 setType:v24];
          }
          else
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
          }
          continue;
        }
        uint64_t v25 = objc_alloc_init(_INPBTextNoteContent);
        if (!PBReaderPlaceMark() || (_INPBTextNoteContentReadFrom(v25, a2) & 1) == 0) {
          goto LABEL_44;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText:", v25, 0, 0);
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t INCodableDateComponentsAttributeMetadataStyleFromString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"Full"])
  {
    uint64_t v2 = 4;
  }
  else if ([v1 isEqualToString:@"Long"])
  {
    uint64_t v2 = 3;
  }
  else if ([v1 isEqualToString:@"Medium"])
  {
    uint64_t v2 = 2;
  }
  else if ([v1 isEqualToString:@"Short"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"No"])
  {
    uint64_t v2 = 0;
  }
  else
  {
    uint64_t v2 = 4;
  }

  return v2;
}

uint64_t INCodableDateComponentsAttributeMetadataTypeFromString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"DateTime"])
  {
    uint64_t v2 = 0;
  }
  else if ([v1 isEqualToString:@"Date"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"Time"])
  {
    uint64_t v2 = 2;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

uint64_t INCodableDateComponentsAttributeMetadataFormatFromString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"Style"])
  {
    uint64_t v2 = 0;
  }
  else if ([v1 isEqualToString:@"Relative"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"Template"])
  {
    uint64_t v2 = 2;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INIntentSlotValueTransformToAnnouncementRecords(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          char v8 = INIntentSlotValueTransformToAnnouncementRecord(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    unsigned int v9 = (void *)[v2 copy];
  }
  else
  {
    unsigned int v9 = 0;
  }

  return v9;
}

uint64_t __Block_byref_object_copy__54910(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t _INPBHomeUserTaskReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    size_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        uint64_t v25 = objc_alloc_init(_INPBHomeAttributeValue);
        if (!PBReaderPlaceMark() || (_INPBHomeAttributeValueReadFrom(v25, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setValue:", v25, 0, 0);
      }
      else if (v17 == 2)
      {
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (1)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
          *(void *)(a2 + v29) = v30 + 1;
          v28 |= (unint64_t)(v31 & 0x7F) << v26;
          if ((v31 & 0x80) == 0) {
            goto LABEL_46;
          }
          v26 += 7;
          BOOL v14 = v27++ >= 9;
          if (v14)
          {
            uint64_t v32 = 0;
            goto LABEL_49;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_46:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v32 = 0;
        }
        else {
          uint64_t v32 = v28;
        }
LABEL_49:
        [a1 setAttribute:v32];
      }
      else if (v17 == 1)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          unint64_t v22 = *(void *)(a2 + v21);
          if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0) {
            goto LABEL_41;
          }
          v18 += 7;
          BOOL v14 = v19++ >= 9;
          if (v14)
          {
            uint64_t v24 = 0;
            goto LABEL_44;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_41:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v24 = 0;
        }
        else {
          uint64_t v24 = v20;
        }
LABEL_44:
        [a1 setTaskType:v24];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _INPBIntentTypeReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    size_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = PBReaderReadString();
        [a1 setType:v17];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

id INIntentSlotValueTransformFromActivities(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          char v8 = INIntentSlotValueTransformFromActivity(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    unsigned int v9 = (void *)[v2 copy];
  }
  else
  {
    unsigned int v9 = 0;
  }

  return v9;
}

INActivity *INIntentSlotValueTransformFromActivity(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    uint64_t v2 = [INActivity alloc];
    id v3 = [v1 activityType];
    uint64_t v4 = INIntentSlotValueTransformFromString(v3);
    uint64_t v5 = [v1 activityDescriptors];

    uint64_t v6 = INIntentSlotValueTransformFromStrings(v5);
    size_t v7 = [(INActivity *)v2 initWithActivityType:v4 activityDescriptors:v6];
  }
  else
  {
    size_t v7 = 0;
  }

  return v7;
}

id INIntentSlotDescriptionsWithCodable(void *a1)
{
  v65[4] = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  id v54 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  char v43 = v1;
  uint64_t v2 = [v1 _objectDescription];
  long long v59 = 0u;
  long long v60 = 0u;
  long long v61 = 0u;
  long long v62 = 0u;
  id obj = [v2 attributes];
  uint64_t v56 = [obj countByEnumeratingWithState:&v59 objects:v63 count:16];
  if (v56)
  {
    uint64_t v55 = *(void *)v60;
    do
    {
      for (uint64_t i = 0; i != v56; ++i)
      {
        if (*(void *)v60 != v55) {
          objc_enumerationMutation(obj);
        }
        uint64_t v4 = *(void **)(*((void *)&v59 + 1) + 8 * i);
        uint64_t v5 = [v2 attributes];
        uint64_t v6 = [v5 objectForKey:v4];

        uint64_t v7 = [v4 unsignedIntegerValue];
        char v8 = [v2 typeName];
        id v9 = v6;
        id v10 = v8;
        long long v11 = [v9 propertyName];
        if ([v11 length])
        {
          uint64_t v58 = [v9 valueType];
          if ([v9 supportsResolution])
          {
            long long v12 = NSString;
            long long v13 = [v9 propertyName];
            long long v14 = objc_msgSend(v13, "if_ASCIIStringByUppercasingFirstCharacter");
            id v15 = v10;
            uint64_t v16 = [v12 stringWithFormat:@"resolve%@For%@:withCompletion:", v14, v10];
            SEL v57 = NSSelectorFromString(v16);
          }
          else
          {
            id v15 = v10;
            SEL v57 = 0;
          }
          int v18 = [v9 supportsDynamicEnumeration];
          unsigned int v19 = (void *)MEMORY[0x1E4F1CBF0];
          uint64_t v20 = (void *)MEMORY[0x1E4F1CBF0];
          if (v18)
          {
            uint64_t v21 = NSString;
            char v52 = [v9 propertyName];
            uint64_t v51 = objc_msgSend(v52, "if_ASCIIStringByUppercasingFirstCharacter");
            uint64_t v53 = v7;
            id v22 = v15;
            char v50 = [v21 stringWithFormat:@"provide%@OptionsCollectionFor%@:searchTerm:withCompletion:", v51, v15];
            v65[0] = v50;
            char v23 = NSString;
            unint64_t v49 = [v9 propertyName];
            uint64_t v48 = objc_msgSend(v49, "if_ASCIIStringByUppercasingFirstCharacter");
            uint64_t v47 = [v23 stringWithFormat:@"provide%@OptionsCollectionFor%@:withCompletion:", v48, v15];
            v65[1] = v47;
            uint64_t v24 = NSString;
            unsigned int v46 = [v9 propertyName];
            char v45 = objc_msgSend(v46, "if_ASCIIStringByUppercasingFirstCharacter");
            uint64_t v25 = [v24 stringWithFormat:@"provide%@OptionsFor%@:searchTerm:withCompletion:", v45, v15];
            v65[2] = v25;
            char v26 = NSString;
            unsigned int v27 = [v9 propertyName];
            uint64_t v28 = objc_msgSend(v27, "if_ASCIIStringByUppercasingFirstCharacter");
            [v26 stringWithFormat:@"provide%@OptionsFor%@:withCompletion:", v28, v22];
            v30 = uint64_t v29 = v2;
            v65[3] = v30;
            unsigned int v19 = [MEMORY[0x1E4F1C978] arrayWithObjects:v65 count:4];

            uint64_t v2 = v29;
            char v31 = NSString;
            uint64_t v32 = [v9 propertyName];
            __int16 v33 = objc_msgSend(v32, "if_ASCIIStringByUppercasingFirstCharacter");
            id v15 = v22;
            uint64_t v34 = [v31 stringWithFormat:@"default%@For%@:", v33, v22];
            char v64 = v34;
            uint64_t v20 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v64 count:1];

            uint64_t v7 = v53;
          }
          __int16 v35 = [INIntentSlotDescription alloc];
          unint64_t v36 = [v9 modifier];
          if (v36 > 2) {
            uint64_t v37 = 0;
          }
          else {
            uint64_t v37 = qword_18CFC4E40[v36];
          }
          unint64_t v17 = -[INIntentSlotDescription initWithName:tag:facadePropertyName:dataPropertyName:isExtended:isPrivate:valueType:valueStyle:codableAttribute:defaultValueSelectorStrings:provideOptionsSelectorStrings:resolutionResultClass:resolveSelectors:](v35, "initWithName:tag:facadePropertyName:dataPropertyName:isExtended:isPrivate:valueType:valueStyle:codableAttribute:defaultValueSelectorStrings:provideOptionsSelectorStrings:resolutionResultClass:resolveSelectors:", v11, v7, v11, v11, 0, 0, v58, v37, v9, v20, v19, [v9 resolutionResultClass], v57, 0);

          id v10 = v15;
        }
        else
        {
          unint64_t v17 = 0;
        }

        char v38 = [v9 displayPriorityRank];
        [(INIntentSlotDescription *)v17 setRank:v38];

        uint64_t v39 = [(INIntentSlotDescription *)v17 name];

        if (v39)
        {
          uint64_t v40 = [(INIntentSlotDescription *)v17 name];
          [v54 setObject:v17 forKeyedSubscript:v40];
        }
      }
      uint64_t v56 = [obj countByEnumeratingWithState:&v59 objects:v63 count:16];
    }
    while (v56);
  }

  uint64_t v41 = (void *)[v54 copy];

  return v41;
}

void __INCodableAttributeMetadataClassWithMetadataTypeName_block_invoke()
{
  id v0 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  id v1 = (void *)INCodableAttributeMetadataClassWithMetadataTypeName_classForTypeName;
  INCodableAttributeMetadataClassWithMetadataTypeName_classForTypeName = (uint64_t)v0;

  id v2 = &unk_1EDBAF810;
  [&unk_1EDBAF810 enumerateKeysAndObjectsUsingBlock:&__block_literal_global_13_103389];
}

void sub_18CB53DE0(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(v1 + 16))(v1);
  _Unwind_Resume(a1);
}

id INContainingBundleURLForCurrentProcess()
{
  id v0 = [MEMORY[0x1E4F223F0] bundleProxyForCurrentProcess];
  objc_opt_class();
  uint64_t v1 = v0;
  if (objc_opt_isKindOfClass())
  {
    uint64_t v1 = [v0 containingBundle];
  }
  id v2 = [v1 bundleURL];

  return v2;
}

id INSchemaURLsWithBundle(void *a1)
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  id v2 = [MEMORY[0x1E4F1CA48] array];
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  id v3 = INSchemaFileExtensions();
  uint64_t v4 = [v3 countByEnumeratingWithState:&v20 objects:v25 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v21;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v21 != v6) {
          objc_enumerationMutation(v3);
        }
        char v8 = [v1 URLsForResourcesWithExtension:*(void *)(*((void *)&v20 + 1) + 8 * i) subdirectory:0];
        [v2 addObjectsFromArray:v8];
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v20 objects:v25 count:16];
    }
    while (v5);
  }

  if (![v2 count])
  {
    long long v18 = 0u;
    long long v19 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
    id v9 = INSchemaFileExtensions();
    uint64_t v10 = [v9 countByEnumeratingWithState:&v16 objects:v24 count:16];
    if (v10)
    {
      uint64_t v11 = v10;
      uint64_t v12 = *(void *)v17;
      do
      {
        for (uint64_t j = 0; j != v11; ++j)
        {
          if (*(void *)v17 != v12) {
            objc_enumerationMutation(v9);
          }
          long long v14 = objc_msgSend(v1, "URLsForResourcesWithExtension:subdirectory:localization:", *(void *)(*((void *)&v16 + 1) + 8 * j), 0, @"en", (void)v16);
          [v2 addObjectsFromArray:v14];
        }
        uint64_t v11 = [v9 countByEnumeratingWithState:&v16 objects:v24 count:16];
      }
      while (v11);
    }
  }

  return v2;
}

id INSchemaFileExtensions()
{
  if (INSchemaFileExtensions_onceToken != -1) {
    dispatch_once(&INSchemaFileExtensions_onceToken, &__block_literal_global_11975);
  }
  id v0 = (void *)INSchemaFileExtensions_extensions;

  return v0;
}

id INApplicationBundleIdentifierFromBundleIdentifier(void *a1)
{
  id v1 = a1;
  if (!v1)
  {
    id v4 = 0;
    goto LABEL_43;
  }
  if (INApplicationBundleIdentifierFromBundleIdentifier_onceToken != -1) {
    dispatch_once(&INApplicationBundleIdentifierFromBundleIdentifier_onceToken, &__block_literal_global_257);
  }
  id v2 = [(id)INApplicationBundleIdentifierFromBundleIdentifier_resultsCache objectForKey:v1];
  id v3 = v2;
  if (!v2)
  {
    id v5 = v1;
    if (INThisProcessCanMapLSDatabase(0))
    {
      id v6 = (id)[objc_alloc(MEMORY[0x1E4F223A0]) initWithBundleIdentifier:v5 error:0];
    }
    else
    {
      uint64_t v7 = [MEMORY[0x1E4F223F8] bundleRecordForCurrentProcess];
      char v8 = [v7 bundleIdentifier];
      int v9 = [v5 isEqualToString:v8];

      if (v9)
      {
        id v10 = v7;
        if (v10)
        {
          objc_opt_class();
          if (objc_opt_isKindOfClass()) {
            uint64_t v11 = v10;
          }
          else {
            uint64_t v11 = 0;
          }
        }
        else
        {
          uint64_t v11 = 0;
        }
        id v6 = v11;
      }
      else
      {
        id v6 = 0;
      }
    }
    uint64_t v12 = v5;
    long long v13 = v5;
    if (v6)
    {
      long long v14 = [v6 containingBundleRecord];
      if (v14)
      {
        objc_opt_class();
        id v15 = (objc_opt_isKindOfClass() & 1) != 0 ? v14 : 0;
      }
      else
      {
        id v15 = 0;
      }
      id v16 = v15;

      uint64_t v12 = [v16 bundleIdentifier];

      long long v13 = [v6 bundleIdentifier];

      if (!v13)
      {
        id v21 = v5;
LABEL_35:
        if (v12) {
          long long v22 = v12;
        }
        else {
          long long v22 = v21;
        }
        id v4 = v22;
        long long v23 = [(id)INApplicationBundleIdentifierFromBundleIdentifier_resultsCache objectForKey:v4];

        if (!v23 && v4) {
          [(id)INApplicationBundleIdentifierFromBundleIdentifier_resultsCache setObject:v4 forKey:v5];
        }

        goto LABEL_42;
      }
    }
    id v25 = v6;
    long long v17 = objc_alloc_init(INExecutionFrameworkMapper);
    uint64_t v18 = [(INExecutionFrameworkMapper *)v17 launchableAppBundleIdentifierForSystemExtensionBundleIdentifier:v13];
    uint64_t v19 = [(INExecutionFrameworkMapper *)v17 displayableAppBundleIdentifierForSystemExtensionBundleIdentifier:v13];
    if (v19 | v18)
    {
      id v20 = (id)v18;

      id v21 = (id)v19;
      if (v20 || !v19)
      {
        if (!v20 || v19) {
          goto LABEL_34;
        }
      }
      else
      {
        id v20 = v21;
      }
      id v21 = v20;
      id v20 = v21;
    }
    else
    {
      id v21 = v5;
      id v20 = v12;
    }
LABEL_34:

    uint64_t v12 = v20;
    id v6 = v25;
    goto LABEL_35;
  }
  id v4 = v2;
LABEL_42:

LABEL_43:

  return v4;
}

uint64_t INThisProcessCanMapLSDatabase(uint64_t a1)
{
  if (INThisProcessCanMapLSDatabase_onceToken != -1) {
    dispatch_once(&INThisProcessCanMapLSDatabase_onceToken, &__block_literal_global_50);
  }
  id v2 = (void *)INThisProcessCanMapLSDatabase_cache;
  id v3 = [NSNumber numberWithBool:a1];
  id v4 = [v2 objectForKeyedSubscript:v3];

  if (!v4)
  {
    id v5 = [NSNumber numberWithBool:INThisProcessHasEntitlement(@"com.apple.private.coreservices.canmaplsdatabase", a1)];
    id v6 = (void *)INThisProcessCanMapLSDatabase_cache;
    uint64_t v7 = [NSNumber numberWithBool:a1];
    [v6 setObject:v5 forKeyedSubscript:v7];
  }
  char v8 = (void *)INThisProcessCanMapLSDatabase_cache;
  int v9 = [NSNumber numberWithBool:a1];
  id v10 = [v8 objectForKeyedSubscript:v9];
  uint64_t v11 = [v10 BOOLValue];

  return v11;
}

uint64_t INThisProcessHasEntitlement(void *a1, int a2)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = SecTaskCreateFromSelf(0);
  if (v4)
  {
    id v5 = v4;
    uint64_t HasEntitlement = _INProcessHasEntitlement(v4, v3);
    CFRelease(v5);
    if ((HasEntitlement & 1) != 0 || !a2) {
      goto LABEL_13;
    }
    goto LABEL_7;
  }
  uint64_t v7 = INSiriLogContextIntents;
  if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_ERROR))
  {
    int v14 = 136315138;
    id v15 = "INThisProcessHasEntitlement";
    _os_log_error_impl(&dword_18CB2F000, v7, OS_LOG_TYPE_ERROR, "%s SecTaskCreateFromSelf() failed, assuming this process is NOT entitled.", (uint8_t *)&v14, 0xCu);
    if (a2) {
      goto LABEL_7;
    }
LABEL_12:
    uint64_t HasEntitlement = 0;
    goto LABEL_13;
  }
  if (!a2) {
    goto LABEL_12;
  }
LABEL_7:
  char v8 = [MEMORY[0x1E4F223F0] bundleProxyForCurrentProcess];
  uint64_t v9 = _INContainingBundleProxyWithBundleProxy(v8);
  if (v9)
  {
    id v10 = (void *)v9;
    uint64_t v11 = [MEMORY[0x1E4F1CAD0] setWithObject:v3];
    uint64_t v12 = [v10 entitlementValuesForKeys:v11];

    uint64_t HasEntitlement = [v12 BOOLForKey:v3];
  }
  else
  {
    uint64_t HasEntitlement = 0;
  }

LABEL_13:
  return HasEntitlement;
}

uint64_t _INProcessHasEntitlement(__SecTask *a1, void *a2)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  CFErrorRef error = 0;
  id v4 = (void *)SecTaskCopyValueForEntitlement(a1, v3, &error);
  CFErrorRef v5 = error;
  if (error)
  {
    id v6 = INSiriLogContextIntents;
    if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)buf = 136315394;
      uint64_t v12 = "_INProcessHasEntitlement";
      __int16 v13 = 2114;
      int v14 = v5;
      _os_log_fault_impl(&dword_18CB2F000, v6, OS_LOG_TYPE_FAULT, "%s SecTaskCopyValueForEntitlement() failed with error %{public}@", buf, 0x16u);
      CFErrorRef v5 = error;
    }
    CFRelease(v5);
  }
  if (v4 && (objc_opt_respondsToSelector() & 1) == 0)
  {
    uint64_t v7 = INSiriLogContextIntents;
    if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315394;
      uint64_t v12 = "_INProcessHasEntitlement";
      __int16 v13 = 2114;
      int v14 = v3;
      _os_log_error_impl(&dword_18CB2F000, v7, OS_LOG_TYPE_ERROR, "%s Expected a Boolean value for the %{public}@ entitlement, but found something else.", buf, 0x16u);
    }

    id v4 = 0;
  }
  uint64_t v8 = [v4 BOOLValue];

  return v8;
}

void sub_18CB55C10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18CB56178(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _INPBPauseTimerIntentResponseReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  CFErrorRef v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        long long v17 = objc_alloc_init(_INPBTimer);
        if (!PBReaderPlaceMark() || !_INPBTimerReadFrom(v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addPausedTimers:", v17, 0, 0);
        }
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void sub_18CB56EB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __INLogInitIfNeeded_block_invoke()
{
  INSiriLogContextIntents = (uint64_t)os_log_create((const char *)INLogSiriSubsystem, (const char *)INLogCategoryIntents);

  return MEMORY[0x1F41817F8]();
}

uint64_t _INPBImageValueReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  CFErrorRef v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          uint64_t v16 = *v5;
          int v17 = *(unsigned __int8 *)(a2 + v16);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      uint64_t v16 = *v5;
      int v17 = *(unsigned __int8 *)(a2 + v16);
      if (*(unsigned char *)(a2 + v16)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v17 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          uint64_t v19 = objc_alloc_init(_INPBValueMetadata);
          if PBReaderPlaceMark() && (_INPBValueMetadataReadFrom(v19, a2))
          {
            PBReaderRecallMark();
            objc_msgSend(a1, "setValueMetadata:", v19, 0, 0);
            goto LABEL_33;
          }

          return 0;
        case 2u:
          PBReaderReadString();
          uint64_t v19 = (_INPBValueMetadata *)objc_claimAutoreleasedReturnValue();
          [a1 setUri:v19];
          goto LABEL_33;
        case 3u:
          uint64_t v21 = *v3;
          unint64_t v22 = *(void *)(a2 + v21);
          if (v22 <= 0xFFFFFFFFFFFFFFF7 && v22 + 8 <= *(void *)(a2 + *v4))
          {
            double v23 = *(double *)(*(void *)(a2 + *v7) + v22);
            *(void *)(a2 + v21) = v22 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + v16) = 1;
            double v23 = 0.0;
          }
          [a1 setWidth:v23];
          continue;
        case 4u:
          uint64_t v24 = *v3;
          unint64_t v25 = *(void *)(a2 + v24);
          if (v25 <= 0xFFFFFFFFFFFFFFF7 && v25 + 8 <= *(void *)(a2 + *v4))
          {
            double v26 = *(double *)(*(void *)(a2 + *v7) + v25);
            *(void *)(a2 + v24) = v25 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + v16) = 1;
            double v26 = 0.0;
          }
          [a1 setHeight:v26];
          continue;
        case 5u:
          PBReaderReadData();
          uint64_t v19 = (_INPBValueMetadata *)objc_claimAutoreleasedReturnValue();
          [a1 setData:v19];
          goto LABEL_33;
        case 6u:
          PBReaderReadString();
          uint64_t v19 = (_INPBValueMetadata *)objc_claimAutoreleasedReturnValue();
          [a1 setProxyServiceIdentifier:v19];
LABEL_33:

          continue;
        case 7u:
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v29 = 0;
          while (2)
          {
            uint64_t v30 = *v3;
            uint64_t v31 = *(void *)(a2 + v30);
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
              *(void *)(a2 + v30) = v32;
              v29 |= (unint64_t)(v33 & 0x7F) << v27;
              if (v33 < 0)
              {
                v27 += 7;
                BOOL v15 = v28++ >= 9;
                if (v15)
                {
                  uint64_t v34 = 0;
                  goto LABEL_52;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v34 = 0;
          }
          else {
            uint64_t v34 = v29;
          }
LABEL_52:
          [a1 setType:v34];
          continue;
        case 8u:
          char v35 = 0;
          unsigned int v36 = 0;
          uint64_t v37 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v38 = *v3;
        uint64_t v39 = *(void *)(a2 + v38);
        unint64_t v40 = v39 + 1;
        if (v39 == -1 || v40 > *(void *)(a2 + *v4)) {
          break;
        }
        char v41 = *(unsigned char *)(*(void *)(a2 + *v7) + v39);
        *(void *)(a2 + v38) = v40;
        v37 |= (unint64_t)(v41 & 0x7F) << v35;
        if ((v41 & 0x80) == 0) {
          goto LABEL_54;
        }
        v35 += 7;
        BOOL v15 = v36++ >= 9;
        if (v15)
        {
          uint64_t v42 = 0;
          goto LABEL_57;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_54:
      uint64_t v42 = *(unsigned char *)(a2 + *v5) ? 0 : v37;
LABEL_57:
      [a1 setRenderingMode:v42];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _INPBRequestPaymentIntentResponseReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  CFErrorRef v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        int v17 = objc_alloc_init(_INPBPaymentRecord);
        if (!PBReaderPlaceMark() || (_INPBPaymentRecordReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPaymentRecord:", v17, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void __INSchemaFileExtensions_block_invoke()
{
  id v0 = (void *)INSchemaFileExtensions_extensions;
  INSchemaFileExtensions_extensions = (uint64_t)&unk_1EDBAAED8;
}

id INIntentSlotValueTransformToEvents(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    id v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          char v8 = INIntentSlotValueTransformToEvent(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    unsigned int v9 = (void *)[v2 copy];
  }
  else
  {
    unsigned int v9 = 0;
  }

  return v9;
}

_INPBEvent *INIntentSlotValueTransformToEvent(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    id v2 = objc_alloc_init(_INPBEvent);
    id v3 = [v1 eventType];
    uint64_t v4 = INIntentSlotValueTransformToString(v3);
    [(_INPBEvent *)v2 setEventType:v4];

    uint64_t v5 = [v1 eventDescriptors];

    uint64_t v6 = INIntentSlotValueTransformToStrings(v5);
    [(_INPBEvent *)v2 setEventDescriptors:v6];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t INObjectIsConsideredNil(void *a1, uint64_t a2)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  if (!v3) {
    goto LABEL_3;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    goto LABEL_3;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    [v3 doubleValue];
    if (v6 == 0.0 && (a2 & 1) != 0) {
      goto LABEL_3;
    }
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 && ![v3 length]) {
    goto LABEL_3;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v7 = [v3 spokenPhrase];
    if ([v7 length])
    {
    }
    else
    {
      char v8 = [v3 vocabularyIdentifier];
      uint64_t v9 = [v8 length];

      if (!v9) {
        goto LABEL_3;
      }
    }
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    goto LABEL_18;
  }
  unint64_t v10 = [v3 displayString];
  if ([v10 length])
  {

    goto LABEL_18;
  }
  long long v11 = [v3 identifier];
  uint64_t v12 = [v11 length];

  if (!v12)
  {
LABEL_3:
    uint64_t v4 = 1;
    goto LABEL_4;
  }
LABEL_18:
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    uint64_t v4 = 0;
    goto LABEL_4;
  }
  if (![v3 count]) {
    goto LABEL_3;
  }
  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v13 = v3;
  uint64_t v14 = [v13 countByEnumeratingWithState:&v18 objects:v22 count:16];
  if (v14)
  {
    uint64_t v15 = v14;
    uint64_t v16 = *(void *)v19;
    while (2)
    {
      uint64_t v17 = 0;
      do
      {
        if (*(void *)v19 != v16) {
          objc_enumerationMutation(v13);
        }
        if (!INObjectIsConsideredNil(*(void *)(*((void *)&v18 + 1) + 8 * v17), a2))
        {
          uint64_t v4 = 0;
          goto LABEL_31;
        }
        ++v17;
      }
      while (v15 != v17);
      uint64_t v15 = [v13 countByEnumeratingWithState:&v18 objects:v22 count:16];
      if (v15) {
        continue;
      }
      break;
    }
  }
  uint64_t v4 = 1;
LABEL_31:

LABEL_4:
  return v4;
}

Class __getCSSearchableIndexClass_block_invoke(uint64_t a1)
{
  CoreSpotlightLibrary();
  Class result = objc_getClass("CSSearchableIndex");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getCSSearchableIndexClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = abort_report_np();
    return (Class)__49__INInteraction_donateInteractionWithCompletion___block_invoke(v3);
  }
  return result;
}

uint64_t INThisProcessIsDonatingBySiri()
{
  if (INThisProcessIsDonatingBySiri_onceToken != -1) {
    dispatch_once(&INThisProcessIsDonatingBySiri_onceToken, &__block_literal_global_54);
  }
  if (INThisProcessIsAssistantd_onceToken != -1) {
    dispatch_once(&INThisProcessIsAssistantd_onceToken, &__block_literal_global_74918);
  }
  if (INThisProcessIsAssistantd_isAssistantd
    || ([(id)INThisProcessIsDonatingBySiri_bundleIdentifier isEqualToString:@"com.apple.springboard"] & 1) != 0|| (objc_msgSend((id)INThisProcessIsDonatingBySiri_bundleIdentifier, "isEqualToString:", @"com.apple.AppPredictionWidget.Siri.ActionPredictionNotificationContentIntents") & 1) != 0)
  {
    return 1;
  }
  id v1 = (void *)INThisProcessIsDonatingBySiri_bundleIdentifier;

  return [v1 isEqualToString:@"com.apple.WorkflowKit.ShortcutsIntents"];
}

void INExtractAppInfoFromSiriLaunchId(void *a1, void *a2, void *a3)
{
  id v11 = 0;
  id v12 = 0;
  INExtractAppInfoFromSiriLaunchIdWithoutLaunchServices(a1, &v12, &v11);
  id v5 = v12;
  id v6 = v11;
  if (a2) {
    *a2 = v5;
  }
  if (a3)
  {
    if (!v6 && v5)
    {
      uint64_t v7 = (void *)MEMORY[0x1E4F223F0];
      char v8 = INLocalAppBundleIdentifierForIntentBundleIdentifier(v5);
      uint64_t v9 = [v7 bundleProxyForIdentifier:v8];

      id v6 = [v9 bundleURL];
    }
    unint64_t v10 = [v6 path];
    *a3 = [v10 stringByRemovingPercentEncoding];
  }
}

void INExtractAppInfoFromSiriLaunchIdWithoutLaunchServices(void *a1, void *a2, void *a3)
{
  id v9 = a1;
  if (([v9 hasPrefix:@"x-apple-siri-app"] & 1) != 0
    || [v9 hasPrefix:@"x-apple-siri-watch-app"])
  {
    id v5 = [MEMORY[0x1E4F1CB10] URLWithString:v9];
    id v6 = [v5 host];

    uint64_t v7 = [v5 path];
    if (!a2) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  id v5 = 0;
  uint64_t v7 = 0;
  id v6 = v9;
  if (a2) {
LABEL_4:
  }
    *a2 = v6;
LABEL_5:
  if (a3)
  {
    if (v7)
    {
      id v8 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v7];
      *a3 = v8;
    }
    else
    {
      *a3 = 0;
    }
  }
}

void *INInteractionWithTypedInteraction(void *a1)
{
  id v1 = a1;
  id v2 = [v1 intent];
  uint64_t v3 = [v2 backingStore];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  id v5 = v1;
  if (isKindOfClass)
  {
    id v5 = (void *)[v1 copy];

    id v6 = [v1 intent];
    uint64_t v7 = INIntentWithTypedIntent(v6);
    id v8 = (void *)v5[1];
    v5[1] = v7;

    id v9 = [v1 intentResponse];
    uint64_t v10 = INIntentResponseWithTypedIntentResponse(v9);
    id v11 = (void *)v5[2];
    v5[2] = v10;
  }

  return v5;
}

INIntent *INIntentWithTypedIntent(void *a1)
{
  id v1 = a1;
  id v2 = [(INIntent *)v1 backingStore];
  uint64_t v3 = v1;
  if (v2)
  {
    objc_opt_class();
    uint64_t v3 = v1;
    if (objc_opt_isKindOfClass())
    {
      uint64_t v4 = [INIntent alloc];
      id v5 = [(INIntent *)v1 identifier];
      uint64_t v3 = [(INIntent *)v4 initWithIdentifier:v5 backingStore:v2];

      id v6 = [(INIntent *)v1 launchId];
      [(INIntent *)v3 _setLaunchId:v6];

      uint64_t v7 = [(INIntent *)v1 extensionBundleId];
      [(INIntent *)v3 _setExtensionBundleId:v7];

      id v8 = [(INIntent *)v1 suggestedInvocationPhrase];
      [(INIntent *)v3 setSuggestedInvocationPhrase:v8];

      id v9 = [(INIntent *)v1 _parameterCombinations];
      [(INIntent *)v3 _setParameterCombinations:v9];

      uint64_t v10 = [v2 _objectDescription];
      _INUntypePropertiesWithCodableDescription(v3, v10);
    }
  }

  return v3;
}

void _INUntypePropertiesWithCodableDescription(void *a1, void *a2)
{
  uint64_t v41 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  long long v35 = 0u;
  long long v36 = 0u;
  long long v37 = 0u;
  long long v38 = 0u;
  uint64_t v4 = [a2 attributes];
  id v5 = [v4 allValues];

  uint64_t v6 = [v5 countByEnumeratingWithState:&v35 objects:v40 count:16];
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)v36;
    double v26 = v5;
    char v27 = v3;
    uint64_t v25 = *(void *)v36;
    do
    {
      uint64_t v9 = 0;
      uint64_t v28 = v7;
      do
      {
        if (*(void *)v36 != v8) {
          objc_enumerationMutation(v5);
        }
        id v10 = *(id *)(*((void *)&v35 + 1) + 8 * v9);
        if (v10)
        {
          objc_opt_class();
          if (objc_opt_isKindOfClass())
          {
            uint64_t v11 = [v10 propertyName];
            id v12 = [v10 codableDescription];
            id v29 = v10;
            uint64_t v13 = [v10 modifier];
            uint64_t v30 = (void *)v11;
            uint64_t v14 = [v3 valueForKey:v11];
            id v15 = (id)v14;
            if (v13)
            {
              if (v14)
              {
                objc_opt_class();
                if (objc_opt_isKindOfClass())
                {
                  uint64_t v16 = _INObjectWithTypedObject(v15, v12);

                  [v3 setValue:v16 forKey:v11];
                  id v15 = (id)v16;
                }
              }
            }
            else if (v14)
            {
              objc_opt_class();
              if (objc_opt_isKindOfClass())
              {
                id v17 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
                long long v31 = 0u;
                long long v32 = 0u;
                long long v33 = 0u;
                long long v34 = 0u;
                id v15 = v15;
                uint64_t v18 = [v15 countByEnumeratingWithState:&v31 objects:v39 count:16];
                if (v18)
                {
                  uint64_t v19 = v18;
                  uint64_t v20 = *(void *)v32;
                  do
                  {
                    for (uint64_t i = 0; i != v19; ++i)
                    {
                      if (*(void *)v32 != v20) {
                        objc_enumerationMutation(v15);
                      }
                      id v22 = *(id *)(*((void *)&v31 + 1) + 8 * i);
                      if (v22 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
                      {
                        uint64_t v23 = _INObjectWithTypedObject(v22, v12);
                        [v17 addObject:v23];
                      }
                      else
                      {

                        [v17 addObject:v22];
                      }
                    }
                    uint64_t v19 = [v15 countByEnumeratingWithState:&v31 objects:v39 count:16];
                  }
                  while (v19);
                }

                uint64_t v24 = (void *)[v17 copy];
                id v3 = v27;
                [v27 setValue:v24 forKey:v30];

                uint64_t v8 = v25;
                id v5 = v26;
                uint64_t v7 = v28;
              }
            }

            id v10 = v29;
          }
        }

        ++v9;
      }
      while (v9 != v7);
      uint64_t v7 = [v5 countByEnumeratingWithState:&v35 objects:v40 count:16];
    }
    while (v7);
  }
}

INIntentResponse *INIntentResponseWithTypedIntentResponse(void *a1)
{
  id v1 = a1;
  id v2 = v1;
  if ([(INIntentResponse *)v1 _type] == 2)
  {
    uint64_t v3 = objc_opt_class();
    id v2 = v1;
    if (v3 != objc_opt_class())
    {
      uint64_t v4 = [INIntentResponse alloc];
      id v5 = [(INIntentResponse *)v1 backingStore];
      id v2 = [(INIntentResponse *)v4 initWithBackingStore:v5];

      uint64_t v6 = [(INIntentResponse *)v2 _responseMessagePBRepresentation];
      if (v6)
      {
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          uint64_t v7 = [v6 _objectDescription];
          _INUntypePropertiesWithCodableDescription(v2, v7);
        }
      }
    }
  }

  return v2;
}

void INImageProxyInjectionUtilitiesInjectProxiesIntoObjectWithContinuationHandler(void *a1, unsigned int a2, char a3, char a4, void *a5, void *a6, double a7, double a8)
{
  uint64_t v61 = *MEMORY[0x1E4F143B8];
  id v15 = a1;
  id v16 = a5;
  id v17 = a6;
  v58[0] = 0;
  v58[1] = v58;
  v58[2] = 0x3032000000;
  v58[3] = __Block_byref_object_copy_;
  v58[4] = __Block_byref_object_dispose_;
  id v59 = 0;
  uint64_t v18 = (id)INSiriLogContextIntents;
  if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
  {
    uint64_t v19 = (objc_class *)objc_opt_class();
    uint64_t v20 = NSStringFromClass(v19);
    *(_DWORD *)buf = 136315394;
    *(void *)&uint8_t buf[4] = "INImageProxyInjectionUtilitiesInjectProxiesIntoObjectWithContinuationHandler";
    *(_WORD *)&buf[12] = 2112;
    *(void *)&buf[14] = v20;
    _os_log_impl(&dword_18CB2F000, v18, OS_LOG_TYPE_INFO, "%s Starting image proxy injection for %@", buf, 0x16u);
  }
  double v21 = 1.0;
  id v22 = INImageProxyInjectionQueue();
  if (a2 <= 0x15 && ((1 << a2) & 0x220200) != 0) {
    double v21 = 15.0;
  }
  uint64_t v23 = _os_activity_create(&dword_18CB2F000, "Inject Image Proxy", MEMORY[0x1E4F144F0], OS_ACTIVITY_FLAG_DEFAULT);
  *(void *)buf = 0;
  *(void *)&buf[8] = 0;
  long long v33 = v23;
  os_activity_scope_enter(v23, (os_activity_scope_state_t)buf);
  uint64_t v24 = [INWatchdogTimer alloc];
  v53[0] = MEMORY[0x1E4F143A8];
  v53[1] = 3221225472;
  v53[2] = __INImageProxyInjectionUtilitiesInjectProxiesIntoObjectWithContinuationHandler_block_invoke;
  v53[3] = &unk_1E5515E78;
  double v56 = v21;
  id v25 = v15;
  id v54 = v25;
  id v26 = v17;
  id v55 = v26;
  long long v57 = *(_OWORD *)buf;
  char v27 = [(INWatchdogTimer *)v24 initWithTimeoutInterval:v22 onQueue:v53 timeoutHandler:v21];
  v42[0] = MEMORY[0x1E4F143A8];
  v42[1] = 3221225472;
  v42[2] = __INImageProxyInjectionUtilitiesInjectProxiesIntoObjectWithContinuationHandler_block_invoke_13;
  v42[3] = &unk_1E5515EF0;
  id v43 = v22;
  unsigned int v50 = a2;
  char v51 = a3;
  id v44 = v25;
  char v45 = v27;
  id v28 = v16;
  double v48 = a7;
  double v49 = a8;
  char v52 = a4;
  id v46 = v28;
  uint64_t v47 = v58;
  v34[0] = MEMORY[0x1E4F143A8];
  v34[1] = 3221225472;
  v34[2] = __INImageProxyInjectionUtilitiesInjectProxiesIntoObjectWithContinuationHandler_block_invoke_21;
  v34[3] = &unk_1E5515F40;
  id v29 = v43;
  id v35 = v29;
  unsigned int v41 = a2;
  uint64_t v30 = v45;
  long long v36 = v30;
  id v31 = v44;
  id v37 = v31;
  id v32 = v26;
  id v38 = v32;
  uint64_t v39 = v58;
  long long v40 = *(_OWORD *)buf;
  [v31 _injectProxiesForImages:v42 completion:v34];
  [(INWatchdogTimer *)v30 start];

  _Block_object_dispose(v58, 8);
}

void sub_18CB5C748(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 208), 8);
  _Unwind_Resume(a1);
}

void CoreSpotlightLibrary()
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  v1[0] = 0;
  if (!CoreSpotlightLibraryCore_frameworkLibrary)
  {
    v1[1] = MEMORY[0x1E4F143A8];
    v1[2] = 3221225472;
    v1[3] = __CoreSpotlightLibraryCore_block_invoke;
    v1[4] = &__block_descriptor_40_e5_v8__0l;
    v1[5] = v1;
    long long v2 = xmmword_1E5516688;
    uint64_t v3 = 0;
    CoreSpotlightLibraryCore_frameworkLibrary = _sl_dlopen();
    id v0 = (void *)v1[0];
    if (CoreSpotlightLibraryCore_frameworkLibrary)
    {
      if (!v1[0]) {
        return;
      }
    }
    else
    {
      id v0 = (void *)abort_report_np();
    }
    free(v0);
  }
}

id INImageProxyInjectionQueue()
{
  if (INImageProxyInjectionQueue_onceToken != -1) {
    dispatch_once(&INImageProxyInjectionQueue_onceToken, &__block_literal_global);
  }
  id v0 = (void *)INImageProxyInjectionQueue_injectionQueue;

  return v0;
}

INCustomObject *_INObjectWithTypedObject(void *a1, void *a2)
{
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  id v5 = [[INCustomObject alloc] initWithObject:v3 codableDescription:v4];
  long long v28 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  uint64_t v24 = v4;
  uint64_t v6 = [v4 attributes];
  uint64_t v7 = [v6 allValues];

  id obj = v7;
  uint64_t v8 = [v7 countByEnumeratingWithState:&v28 objects:v32 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v29;
    do
    {
      for (uint64_t i = 0; i != v9; ++i)
      {
        if (*(void *)v29 != v10) {
          objc_enumerationMutation(obj);
        }
        id v12 = *(void **)(*((void *)&v28 + 1) + 8 * i);
        uint64_t v13 = [v12 propertyName];
        id v14 = [v3 valueForKey:v13];
        id v15 = v12;
        if (v15)
        {
          objc_opt_class();
          if (objc_opt_isKindOfClass()) {
            id v16 = v15;
          }
          else {
            id v16 = 0;
          }
        }
        else
        {
          id v16 = 0;
        }
        id v17 = v16;

        uint64_t v18 = [v17 codableDescription];
        uint64_t v19 = (void *)v18;
        if (v14) {
          BOOL v20 = v18 == 0;
        }
        else {
          BOOL v20 = 1;
        }
        if (!v20)
        {
          objc_opt_class();
          if (objc_opt_isKindOfClass())
          {
            v26[0] = MEMORY[0x1E4F143A8];
            v26[1] = 3221225472;
            v26[2] = ___INObjectWithTypedObject_block_invoke;
            v26[3] = &unk_1E551F418;
            id v27 = v19;
            uint64_t v21 = objc_msgSend(v14, "if_flatMap:", v26);

            id v14 = v27;
          }
          else
          {
            id v14 = v14;
            objc_opt_class();
            char isKindOfClass = objc_opt_isKindOfClass();

            if ((isKindOfClass & 1) == 0) {
              goto LABEL_20;
            }
            uint64_t v21 = _INObjectWithTypedObject(v14, v19);
          }

          id v14 = (id)v21;
        }
LABEL_20:
        [(INCustomObject *)v5 setValue:v14 forKey:v13];
      }
      uint64_t v9 = [obj countByEnumeratingWithState:&v28 objects:v32 count:16];
    }
    while (v9);
  }

  return v5;
}

uint64_t _INPBCallRecordValueReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        id v17 = (_INPBDateTime *)objc_claimAutoreleasedReturnValue();
        [a1 setIdentifier:v17];
        goto LABEL_75;
      case 2u:
        id v17 = objc_alloc_init(_INPBDateTime);
        if (!PBReaderPlaceMark() || (_INPBDateTimeReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_102;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setDateCreated:", v17, 0, 0);
        goto LABEL_75;
      case 3u:
        id v17 = objc_alloc_init(_INPBContactValue);
        if (!PBReaderPlaceMark() || (_INPBContactValueReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_102;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCaller:", v17, 0, 0);
        goto LABEL_75;
      case 4u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_82;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v21;
        }
LABEL_82:
        objc_msgSend(a1, "setCallType:", v25, v52, v53);
        goto LABEL_76;
      case 5u:
        id v17 = objc_alloc_init(_INPBCallMetrics);
        if (!PBReaderPlaceMark() || (_INPBCallMetricsReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_102;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCallMetrics:", v17, 0, 0);
        goto LABEL_75;
      case 6u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                uint64_t v28 = 0;
                goto LABEL_86;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_86:
        [a1 setUnseen:v28 != 0];
        goto LABEL_76;
      case 7u:
        char v32 = 0;
        unsigned int v33 = 0;
        uint64_t v34 = 0;
        while (2)
        {
          uint64_t v35 = *v3;
          unint64_t v36 = *(void *)(a2 + v35);
          if (v36 == -1 || v36 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
            *(void *)(a2 + v35) = v36 + 1;
            v34 |= (unint64_t)(v37 & 0x7F) << v32;
            if (v37 < 0)
            {
              v32 += 7;
              BOOL v14 = v33++ >= 9;
              if (v14)
              {
                uint64_t v38 = 0;
                goto LABEL_91;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v38 = 0;
        }
        else {
          uint64_t v38 = v34;
        }
LABEL_91:
        objc_msgSend(a1, "setCallCapability:", v38, v52, v53);
        goto LABEL_76;
      case 8u:
        id v17 = objc_alloc_init(_INPBInteger);
        if (!PBReaderPlaceMark() || (_INPBIntegerReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_102;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setNumberOfCalls:", v17, 0, 0);
        goto LABEL_75;
      case 9u:
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        while (2)
        {
          uint64_t v42 = *v3;
          unint64_t v43 = *(void *)(a2 + v42);
          if (v43 == -1 || v43 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v44 = *(unsigned char *)(*(void *)(a2 + *v7) + v43);
            *(void *)(a2 + v42) = v43 + 1;
            v41 |= (unint64_t)(v44 & 0x7F) << v39;
            if (v44 < 0)
            {
              v39 += 7;
              BOOL v14 = v40++ >= 9;
              if (v14)
              {
                uint64_t v45 = 0;
                goto LABEL_96;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v45 = 0;
        }
        else {
          uint64_t v45 = v41;
        }
LABEL_96:
        objc_msgSend(a1, "setPreferredCallProvider:", v45, v52, v53);
        goto LABEL_76;
      case 0xAu:
        PBReaderReadString();
        id v17 = (_INPBDateTime *)objc_claimAutoreleasedReturnValue();
        [a1 setProviderId:v17];
        goto LABEL_75;
      case 0xBu:
        PBReaderReadString();
        id v17 = (_INPBDateTime *)objc_claimAutoreleasedReturnValue();
        [a1 setProviderBundleId:v17];
        goto LABEL_75;
      case 0xCu:
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v48 = 0;
        while (2)
        {
          uint64_t v49 = *v3;
          unint64_t v50 = *(void *)(a2 + v49);
          if (v50 == -1 || v50 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(a2 + *v7) + v50);
            *(void *)(a2 + v49) = v50 + 1;
            v48 |= (unint64_t)(v51 & 0x7F) << v46;
            if (v51 < 0)
            {
              v46 += 7;
              BOOL v14 = v47++ >= 9;
              if (v14)
              {
                uint64_t v48 = 0;
                goto LABEL_100;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v48 = 0;
        }
LABEL_100:
        [a1 setIsCallerIdBlocked:v48 != 0];
        goto LABEL_76;
      case 0xDu:
        id v17 = objc_alloc_init(_INPBContactValue);
        uint64_t v52 = 0;
        uint64_t v53 = 0;
        if (PBReaderPlaceMark() && _INPBContactValueReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          if (v17) {
            objc_msgSend(a1, "addParticipants:", v17, 0, 0);
          }
LABEL_75:

LABEL_76:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_102:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_76;
    }
  }
}

uint64_t _INPBCallMetricsReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        id v17 = objc_alloc_init(_INPBCallMetricsValue);
        if (!PBReaderPlaceMark() || (_INPBCallMetricsValueReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setValue:", v17, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void __INIntentSchemaGetIntentDescriptionWithName_block_invoke()
{
  id v0 = (void *)INIntentSchemaGetIntentDescriptionWithName_map;
  INIntentSchemaGetIntentDescriptionWithName_map = (uint64_t)&unk_1EDBAC6D8;
}

void sub_18CB5EC60(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 136), 8);
  _Unwind_Resume(a1);
}

id INUserSupportDirectoryPath()
{
  if (INUserSupportDirectoryPath_once != -1) {
    dispatch_once(&INUserSupportDirectoryPath_once, &__block_literal_global_76);
  }
  id v0 = (void *)INUserSupportDirectoryPath_sUserSupportDirectoryPath;

  return v0;
}

void _CleanUpDirectoryAsNeeded(void *a1, void *a2)
{
  id v6 = a1;
  id v3 = a2;
  if (([v6 isEqualToString:v3] & 1) == 0)
  {
    id v4 = v6;
    if (!rmdir((const char *)[v4 fileSystemRepresentation]))
    {
      id v5 = [v4 stringByDeletingLastPathComponent];
      _CleanUpDirectoryAsNeeded(v5, v3);
    }
  }
}

id INRemoveItemAtPath(void *a1)
{
  uint64_t v1 = (void *)MEMORY[0x1E4F28CB8];
  id v2 = a1;
  id v3 = [v1 defaultManager];
  id v7 = 0;
  [v3 removeItemAtPath:v2 error:&v7];

  id v4 = v7;
  id v5 = [v4 domain];
  LODWORD(v3) = [v5 isEqualToString:*MEMORY[0x1E4F281F8]];

  if (v3 && ([v4 code] & 0xFFFFFFFFFFFFFEFFLL) == 4)
  {

    id v4 = 0;
  }

  return v4;
}

void *_INVocabularyStringTypeFromSlotName(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"ContactNameType"])
  {
    id v2 = &unk_1EDBA7780;
  }
  else if ([v1 isEqualToString:@"ContactGroupNameType"])
  {
    id v2 = &unk_1EDBA7798;
  }
  else if ([v1 isEqualToString:@"PhotoAlbumNameType"])
  {
    id v2 = &unk_1EDBA77B0;
  }
  else if ([v1 isEqualToString:@"PhotoMemoryNameType"])
  {
    id v2 = &unk_1EDBA77C8;
  }
  else if ([v1 isEqualToString:@"PhotoTagsType"])
  {
    id v2 = &unk_1EDBA77E0;
  }
  else if ([v1 isEqualToString:@"HealthActivityNameType"])
  {
    id v2 = &unk_1EDBA77F8;
  }
  else if ([v1 isEqualToString:@"CarProfileNameType"])
  {
    id v2 = &unk_1EDBA7810;
  }
  else if ([v1 isEqualToString:@"CarNameType"])
  {
    id v2 = &unk_1EDBA7828;
  }
  else if ([v1 isEqualToString:@"PaymentsOrganizationNameType"])
  {
    id v2 = &unk_1EDBA7840;
  }
  else if ([v1 isEqualToString:@"PaymentsAccountNicknameType"])
  {
    id v2 = &unk_1EDBA7858;
  }
  else if ([v1 isEqualToString:@"NotebookItemTitleType"])
  {
    id v2 = &unk_1EDBA7870;
  }
  else if ([v1 isEqualToString:@"NotebookItemGroupNameType"])
  {
    id v2 = &unk_1EDBA7888;
  }
  else if ([v1 isEqualToString:@"VoiceCommandNameType"])
  {
    id v2 = &unk_1EDBA78A0;
  }
  else if ([v1 isEqualToString:@"AutoShortcutNameType"])
  {
    id v2 = &unk_1EDBA78B8;
  }
  else if ([v1 isEqualToString:@"PlaylistTitleType"])
  {
    id v2 = &unk_1EDBA78D0;
  }
  else if ([v1 isEqualToString:@"MusicArtistNameType"])
  {
    id v2 = &unk_1EDBA78E8;
  }
  else if ([v1 isEqualToString:@"AudiobookTitleType"])
  {
    id v2 = &unk_1EDBA7900;
  }
  else if ([v1 isEqualToString:@"AudiobookAuthorNameType"])
  {
    id v2 = &unk_1EDBA7918;
  }
  else if ([v1 isEqualToString:@"ShowTitleType"])
  {
    id v2 = &unk_1EDBA7930;
  }
  else if ([v1 isEqualToString:@"MediaUserContextType"])
  {
    id v2 = &unk_1EDBA7948;
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INPluginKitCompatiblePathFromPath(void *a1)
{
  id v1 = a1;
  if ([v1 fileSystemRepresentation])
  {
    id v2 = realpath_DARWIN_EXTSN((const char *)[v1 fileSystemRepresentation], 0);
    id v3 = v2;
    if (v2) {
      size_t v4 = strlen(v2);
    }
    else {
      size_t v4 = 0;
    }
    id v5 = (void *)[[NSString alloc] initWithBytesNoCopy:v3 length:v4 encoding:4 freeWhenDone:1];
  }
  else
  {
    id v5 = 0;
  }

  return v5;
}

void sub_18CB614C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

__CFString *_INSyncSlotFromVocabularyStringType(uint64_t a1)
{
  if (a1 > 500)
  {
    switch(a1)
    {
      case 50000:
        uint64_t result = @"VoiceCommandNameType";
        break;
      case 50001:
        uint64_t result = @"PhotoMemoryNameType";
        break;
      case 50002:
        uint64_t result = @"MediaUserContextType";
        break;
      case 50003:
        uint64_t result = @"AutoShortcutNameType";
        break;
      default:
        if (a1 == 501) {
          uint64_t result = @"NotebookItemGroupNameType";
        }
        else {
          uint64_t result = 0;
        }
        break;
    }
  }
  else
  {
    id v1 = @"PaymentsOrganizationNameType";
    id v2 = @"PaymentsAccountNicknameType";
    id v3 = @"NotebookItemTitleType";
    if (a1 != 500) {
      id v3 = 0;
    }
    if (a1 != 401) {
      id v2 = v3;
    }
    if (a1 != 400) {
      id v1 = v2;
    }
    size_t v4 = @"CarProfileNameType";
    id v5 = @"CarNameType";
    if (a1 != 301) {
      id v5 = 0;
    }
    if (a1 != 300) {
      size_t v4 = v5;
    }
    if (a1 <= 399) {
      id v1 = v4;
    }
    id v6 = @"PhotoTagsType";
    id v7 = @"PhotoAlbumNameType";
    char v8 = @"HealthActivityNameType";
    if (a1 != 200) {
      char v8 = 0;
    }
    if (a1 != 101) {
      id v7 = v8;
    }
    if (a1 != 100) {
      id v6 = v7;
    }
    unsigned int v9 = @"ContactNameType";
    unint64_t v10 = @"ContactGroupNameType";
    if (a1 != 2) {
      unint64_t v10 = 0;
    }
    if (a1 != 1) {
      unsigned int v9 = v10;
    }
    if (a1 <= 99) {
      id v6 = v9;
    }
    if (a1 <= 299) {
      return v6;
    }
    else {
      return v1;
    }
  }
  return result;
}

__CFString *_INStringFromVocabularyStringType(uint64_t a1)
{
  if (a1 <= 499)
  {
    id v2 = @"INVocabularyStringTypeCarName";
    id v3 = @"INVocabularyStringTypePaymentsOrganizationName";
    size_t v4 = @"INVocabularyStringTypePaymentsAccountNickname";
    if (a1 != 401) {
      size_t v4 = 0;
    }
    if (a1 != 400) {
      id v3 = v4;
    }
    if (a1 != 301) {
      id v2 = v3;
    }
    id v5 = @"INVocabularyStringTypeWorkoutActivityName";
    id v6 = @"INVocabularyStringTypeCarProfileName";
    if (a1 != 300) {
      id v6 = 0;
    }
    if (a1 != 200) {
      id v5 = v6;
    }
    if (a1 <= 300) {
      id v2 = v5;
    }
    id v7 = @"INVocabularyStringTypePhotoTag";
    char v8 = @"INVocabularyStringTypePhotoAlbumName";
    if (a1 != 101) {
      char v8 = 0;
    }
    if (a1 != 100) {
      id v7 = v8;
    }
    unsigned int v9 = @"INVocabularyStringTypeContactName";
    unint64_t v10 = @"INVocabularyStringTypeContactGroupName";
    if (a1 != 2) {
      unint64_t v10 = 0;
    }
    if (a1 != 1) {
      unsigned int v9 = v10;
    }
    if (a1 <= 99) {
      id v7 = v9;
    }
    if (a1 <= 199) {
      return v7;
    }
    else {
      return v2;
    }
  }
  else if (a1 > 49999)
  {
    if (a1 == 50003) {
      uint64_t v11 = @"_INVocabularyStringTypeAutoShortcutName";
    }
    else {
      uint64_t v11 = 0;
    }
    if (a1 == 50001) {
      unint64_t v12 = @"INVocabularyStringTypePhotoMemoryName";
    }
    else {
      unint64_t v12 = v11;
    }
    if (a1 == 50000) {
      return @"_INVocabularyStringTypeVoiceCommandName";
    }
    else {
      return v12;
    }
  }
  else
  {
    switch(a1)
    {
      case 700:
        uint64_t result = @"INVocabularyStringTypeMediaPlaylistTitle";
        break;
      case 701:
        uint64_t result = @"INVocabularyStringTypeMediaMusicArtistName";
        break;
      case 702:
        uint64_t result = @"INVocabularyStringTypeMediaAudiobookTitle";
        break;
      case 703:
        uint64_t result = @"INVocabularyStringTypeMediaAudiobookAuthorName";
        break;
      case 704:
        uint64_t result = @"INVocabularyStringTypeMediaShowTitle";
        break;
      default:
        char v13 = @"INVocabularyStringTypeNotebookItemGroupName";
        if (a1 != 501) {
          char v13 = 0;
        }
        if (a1 == 500) {
          uint64_t result = @"INVocabularyStringTypeNotebookItemTitle";
        }
        else {
          uint64_t result = v13;
        }
        break;
    }
  }
  return result;
}

uint64_t INCodableAttributeMetadataInputTypeWithString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"Field"])
  {
    uint64_t v2 = 0;
  }
  else if ([v1 isEqualToString:@"Stepper"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"Slider"])
  {
    uint64_t v2 = 2;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

uint64_t __INApplicationBundleIdentifierFromBundleIdentifier_block_invoke()
{
  INApplicationBundleIdentifierFromBundleIdentifier_resultsCache = objc_opt_new();

  return MEMORY[0x1F41817F8]();
}

_INPBWellnessUnitType *INIntentSlotValueTransformToWellnessUnitType(void *a1)
{
  id v1 = a1;
  if (!v1)
  {
    uint64_t v2 = 0;
    goto LABEL_36;
  }
  uint64_t v2 = objc_alloc_init(_INPBWellnessUnitType);
  id v3 = [v1 unitString];
  int v4 = [v3 isEqualToString:@"kg"];

  if (v4)
  {
    id v5 = v2;
    uint64_t v6 = 1;
LABEL_35:
    [(_INPBWellnessUnitType *)v5 setMassUnit:v6];
    goto LABEL_36;
  }
  id v7 = [v1 unitString];
  int v8 = [v7 isEqualToString:@"g"];

  if (v8)
  {
    id v5 = v2;
    uint64_t v6 = 2;
    goto LABEL_35;
  }
  unsigned int v9 = [v1 unitString];
  int v10 = [v9 isEqualToString:@"slug"];

  if (v10)
  {
    id v5 = v2;
    uint64_t v6 = 16;
    goto LABEL_35;
  }
  uint64_t v11 = [v1 unitString];
  int v12 = [v11 isEqualToString:@"oz"];

  if (v12)
  {
    id v5 = v2;
    uint64_t v6 = 9;
    goto LABEL_35;
  }
  char v13 = [v1 unitString];
  int v14 = [v13 isEqualToString:@"lb"];

  if (v14)
  {
    id v5 = v2;
    uint64_t v6 = 10;
    goto LABEL_35;
  }
  int v15 = [v1 unitString];
  int v16 = [v15 isEqualToString:@"st"];

  if (v16)
  {
    id v5 = v2;
    uint64_t v6 = 11;
    goto LABEL_35;
  }
  id v17 = [v1 unitString];
  int v18 = [v17 isEqualToString:@"ct"];

  if (v18)
  {
    id v5 = v2;
    uint64_t v6 = 14;
    goto LABEL_35;
  }
  char v19 = [v1 unitString];
  int v20 = [v19 isEqualToString:@"dg"];

  if (v20)
  {
    id v5 = v2;
    uint64_t v6 = 3;
    goto LABEL_35;
  }
  uint64_t v21 = [v1 unitString];
  int v22 = [v21 isEqualToString:@"ng"];

  if (v22)
  {
    id v5 = v2;
    uint64_t v6 = 7;
    goto LABEL_35;
  }
  unint64_t v23 = [v1 unitString];
  int v24 = [v23 isEqualToString:@"pg"];

  if (v24)
  {
    id v5 = v2;
    uint64_t v6 = 8;
    goto LABEL_35;
  }
  uint64_t v25 = [v1 unitString];
  int v26 = [v25 isEqualToString:@"cg"];

  if (v26)
  {
    id v5 = v2;
    uint64_t v6 = 4;
    goto LABEL_35;
  }
  unsigned int v27 = [v1 unitString];
  int v28 = [v27 isEqualToString:@"µg"];

  if (v28)
  {
    id v5 = v2;
    uint64_t v6 = 6;
    goto LABEL_35;
  }
  uint64_t v29 = [v1 unitString];
  int v30 = [v29 isEqualToString:@"mg"];

  if (v30)
  {
    id v5 = v2;
    uint64_t v6 = 5;
    goto LABEL_35;
  }
  char v31 = [v1 unitString];
  int v32 = [v31 isEqualToString:@"oz t"];

  if (v32)
  {
    id v5 = v2;
    uint64_t v6 = 15;
    goto LABEL_35;
  }
  unsigned int v33 = [v1 unitString];
  int v34 = [v33 isEqualToString:@"ton"];

  if (v34)
  {
    id v5 = v2;
    uint64_t v6 = 13;
    goto LABEL_35;
  }
  uint64_t v35 = [v1 unitString];
  int v36 = [v35 isEqualToString:@"t"];

  if (v36)
  {
    id v5 = v2;
    uint64_t v6 = 12;
    goto LABEL_35;
  }
  uint64_t v38 = [v1 unitString];
  int v39 = [v38 isEqualToString:@"d"];

  if (v39)
  {
    unsigned int v40 = v2;
    uint64_t v41 = 4;
LABEL_47:
    [(_INPBWellnessUnitType *)v40 setTimeUnit:v41];
    goto LABEL_36;
  }
  uint64_t v42 = [v1 unitString];
  int v43 = [v42 isEqualToString:@"hr"];

  if (v43)
  {
    unsigned int v40 = v2;
    uint64_t v41 = 3;
    goto LABEL_47;
  }
  char v44 = [v1 unitString];
  int v45 = [v44 isEqualToString:@"min"];

  if (v45)
  {
    unsigned int v40 = v2;
    uint64_t v41 = 2;
    goto LABEL_47;
  }
  char v46 = [v1 unitString];
  int v47 = [v46 isEqualToString:@"s"];

  if (v47)
  {
    unsigned int v40 = v2;
    uint64_t v41 = 1;
    goto LABEL_47;
  }
  uint64_t v48 = [v1 unitString];
  int v49 = [v48 isEqualToString:@"J"];

  if (v49)
  {
    unint64_t v50 = v2;
    uint64_t v51 = 2;
LABEL_58:
    [(_INPBWellnessUnitType *)v50 setEnergyUnit:v51];
    goto LABEL_36;
  }
  uint64_t v52 = [v1 unitString];
  int v53 = [v52 isEqualToString:@"Cal"];

  if (v53)
  {
    unint64_t v50 = v2;
    uint64_t v51 = 4;
    goto LABEL_58;
  }
  id v54 = [v1 unitString];
  int v55 = [v54 isEqualToString:@"kcal"];

  if (v55)
  {
    unint64_t v50 = v2;
    uint64_t v51 = 3;
    goto LABEL_58;
  }
  double v56 = [v1 unitString];
  int v57 = [v56 isEqualToString:@"kJ"];

  if (v57)
  {
    unint64_t v50 = v2;
    uint64_t v51 = 1;
    goto LABEL_58;
  }
  uint64_t v58 = [v1 unitString];
  int v59 = [v58 isEqualToString:@"kWh"];

  if (v59)
  {
    unint64_t v50 = v2;
    uint64_t v51 = 5;
    goto LABEL_58;
  }
  long long v60 = [v1 unitString];
  int v61 = [v60 isEqualToString:@"mi"];

  if (v61)
  {
    long long v62 = v2;
    uint64_t v63 = 2;
LABEL_73:
    [(_INPBWellnessUnitType *)v62 setLengthUnit:v63];
    goto LABEL_36;
  }
  char v64 = [v1 unitString];
  int v65 = [v64 isEqualToString:@"ft"];

  if (v65)
  {
    long long v62 = v2;
    uint64_t v63 = 4;
    goto LABEL_73;
  }
  unsigned int v66 = [v1 unitString];
  int v67 = [v66 isEqualToString:@"in"];

  if (v67)
  {
    long long v62 = v2;
    uint64_t v63 = 5;
    goto LABEL_73;
  }
  uint64_t v68 = [v1 unitString];
  int v69 = [v68 isEqualToString:@"yd"];

  if (v69)
  {
    long long v62 = v2;
    uint64_t v63 = 6;
    goto LABEL_73;
  }
  char v70 = [v1 unitString];
  int v71 = [v70 isEqualToString:@"m"];

  if (v71)
  {
    long long v62 = v2;
    uint64_t v63 = 1;
    goto LABEL_73;
  }
  unsigned int v72 = [v1 unitString];
  int v73 = [v72 isEqualToString:@"km"];

  if (v73)
  {
    long long v62 = v2;
    uint64_t v63 = 7;
    goto LABEL_73;
  }
  uint64_t v74 = [v1 unitString];
  int v75 = [v74 isEqualToString:@"cm"];

  if (v75)
  {
    long long v62 = v2;
    uint64_t v63 = 3;
    goto LABEL_73;
  }
  char v76 = [v1 unitString];
  int v77 = [v76 isEqualToString:@"cup_us"];

  if (v77)
  {
    char v78 = v2;
    uint64_t v79 = 19;
LABEL_125:
    [(_INPBWellnessUnitType *)v78 setVolumeUnit:v79];
    goto LABEL_36;
  }
  uint64_t v80 = [v1 unitString];
  int v81 = [v80 isEqualToString:@"pt_us"];

  if (v81)
  {
    char v78 = v2;
    uint64_t v79 = 20;
    goto LABEL_125;
  }
  unint64_t v82 = [v1 unitString];
  int v83 = [v82 isEqualToString:@"L"];

  if (v83)
  {
    char v78 = v2;
    uint64_t v79 = 3;
    goto LABEL_125;
  }
  char v84 = [v1 unitString];
  int v85 = [v84 isEqualToString:@"qt"];

  if (v85)
  {
    char v78 = v2;
    uint64_t v79 = 21;
    goto LABEL_125;
  }
  uint64_t v86 = [v1 unitString];
  int v87 = [v86 isEqualToString:@"bsh"];

  if (v87)
  {
    char v78 = v2;
    uint64_t v79 = 15;
    goto LABEL_125;
  }
  unint64_t v88 = [v1 unitString];
  int v89 = [v88 isEqualToString:@"gal"];

  if (v89)
  {
    char v78 = v2;
    uint64_t v79 = 22;
    goto LABEL_125;
  }
  char v90 = [v1 unitString];
  int v91 = [v90 isEqualToString:@"tsp"];

  if (v91) {
    goto LABEL_87;
  }
  uint64_t v92 = [v1 unitString];
  int v93 = [v92 isEqualToString:@"dL"];

  if (v93)
  {
    char v78 = v2;
    uint64_t v79 = 4;
    goto LABEL_125;
  }
  unint64_t v94 = [v1 unitString];
  int v95 = [v94 isEqualToString:@"kL"];

  if (v95)
  {
    char v78 = v2;
    uint64_t v79 = 2;
    goto LABEL_125;
  }
  char v96 = [v1 unitString];
  int v97 = [v96 isEqualToString:@"ML"];

  if (v97)
  {
    char v78 = v2;
    uint64_t v79 = 1;
    goto LABEL_125;
  }
  uint64_t v98 = [v1 unitString];
  int v99 = [v98 isEqualToString:@"af"];

  if (v99)
  {
    char v78 = v2;
    uint64_t v79 = 14;
    goto LABEL_125;
  }
  unint64_t v100 = [v1 unitString];
  int v101 = [v100 isEqualToString:@"cL"];

  if (v101)
  {
    char v78 = v2;
    uint64_t v79 = 5;
    goto LABEL_125;
  }
  uint64_t v102 = [v1 unitString];
  int v103 = [v102 isEqualToString:@"ft³"];

  if (v103)
  {
    char v78 = v2;
    uint64_t v79 = 11;
    goto LABEL_125;
  }
  unsigned int v104 = [v1 unitString];
  int v105 = [v104 isEqualToString:@"in³"];

  if (v105)
  {
    char v78 = v2;
    uint64_t v79 = 10;
    goto LABEL_125;
  }
  uint64_t v106 = [v1 unitString];
  int v107 = [v106 isEqualToString:@"mi³"];

  if (v107)
  {
    char v78 = v2;
    uint64_t v79 = 13;
    goto LABEL_125;
  }
  char v108 = [v1 unitString];
  int v109 = [v108 isEqualToString:@"yd³"];

  if (v109)
  {
    char v78 = v2;
    uint64_t v79 = 12;
    goto LABEL_125;
  }
  unsigned int v110 = [v1 unitString];
  int v111 = [v110 isEqualToString:@"metric cup"];

  if (v111)
  {
    char v78 = v2;
    uint64_t v79 = 26;
    goto LABEL_125;
  }
  uint64_t v112 = [v1 unitString];
  int v113 = [v112 isEqualToString:@"mL"];

  if (v113)
  {
    char v78 = v2;
    uint64_t v79 = 6;
    goto LABEL_125;
  }
  char v114 = [v1 unitString];
  int v115 = [v114 isEqualToString:@"tbsp"];

  if (v115)
  {
LABEL_87:
    char v78 = v2;
    uint64_t v79 = 16;
    goto LABEL_125;
  }
  unsigned int v116 = [v1 unitString];
  int v117 = [v116 isEqualToString:@"fl_oz_us"];

  if (v117)
  {
    char v78 = v2;
    uint64_t v79 = 18;
    goto LABEL_125;
  }
  uint64_t v118 = [v1 unitString];
  int v119 = [v118 isEqualToString:@"qt"];

  if (v119)
  {
    char v78 = v2;
    uint64_t v79 = 24;
    goto LABEL_125;
  }
  char v120 = [v1 unitString];
  int v121 = [v120 isEqualToString:@"dm³"];

  if (v121)
  {
    char v78 = v2;
    uint64_t v79 = 8;
    goto LABEL_125;
  }
  unsigned int v122 = [v1 unitString];
  int v123 = [v122 isEqualToString:@"km³"];

  if (v123)
  {
    char v78 = v2;
    uint64_t v79 = 7;
    goto LABEL_125;
  }
  uint64_t v124 = [v1 unitString];
  int v125 = [v124 isEqualToString:@"gal"];

  if (v125)
  {
    char v78 = v2;
    uint64_t v79 = 25;
    goto LABEL_125;
  }
  char v126 = [v1 unitString];
  int v127 = [v126 isEqualToString:@"mm³"];

  if (v127)
  {
    char v78 = v2;
    uint64_t v79 = 9;
    goto LABEL_125;
  }
  unsigned int v128 = [v1 unitString];
  int v129 = [v128 isEqualToString:@"tsp"];

  if (v129)
  {
    char v78 = v2;
    uint64_t v79 = 23;
    goto LABEL_125;
  }
  uint64_t v130 = [v1 unitString];
  int v131 = [v130 isEqualToString:@"degC"];

  if (v131)
  {
    char v132 = v2;
    uint64_t v133 = 1;
LABEL_132:
    [(_INPBWellnessUnitType *)v132 setTemperatureUnit:v133];
    goto LABEL_36;
  }
  uint64_t v134 = [v1 unitString];
  int v135 = [v134 isEqualToString:@"degF"];

  if (v135)
  {
    char v132 = v2;
    uint64_t v133 = 2;
    goto LABEL_132;
  }
  v136 = [v1 unitString];
  int v137 = [v136 isEqualToString:@"K"];

  if (v137)
  {
    char v132 = v2;
    uint64_t v133 = 3;
    goto LABEL_132;
  }
  v138 = [v1 unitString];
  int v139 = [v138 isEqualToString:@"breaths/min"];

  if (v139)
  {
    [(_INPBWellnessUnitType *)v2 setRespiratoryRateUnit:1];
    goto LABEL_36;
  }
  v140 = [v1 unitString];
  int v141 = [v140 isEqualToString:@"bpm"];

  if (v141)
  {
    [(_INPBWellnessUnitType *)v2 setHeartRateUnit:1];
    goto LABEL_36;
  }
  v142 = [v1 unitString];
  int v143 = [v142 isEqualToString:@"mmHg"];

  if (v143)
  {
    [(_INPBWellnessUnitType *)v2 setBloodPressureUnit:1];
    goto LABEL_36;
  }
  v144 = [v1 unitString];
  int v145 = [v144 isEqualToString:@"mg/dL"];

  if (v145)
  {
    v146 = v2;
    uint64_t v147 = 1;
  }
  else
  {
    v148 = [v1 unitString];
    int v149 = [v148 isEqualToString:@"mmol/L"];

    if (!v149) {
      goto LABEL_36;
    }
    v146 = v2;
    uint64_t v147 = 2;
  }
  [(_INPBWellnessUnitType *)v146 setBloodGlucoseUnit:v147];
LABEL_36:

  return v2;
}

uint64_t __INThisProcessCanMapLSDatabase_block_invoke()
{
  INThisProcessCanMapLSDatabase_cache = [objc_alloc(MEMORY[0x1E4F1CA60]) initWithCapacity:2];

  return MEMORY[0x1F41817F8]();
}

void sub_18CB638C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v24);
  objc_destroyWeak(v23);
  objc_destroyWeak(v22);
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  objc_destroyWeak((id *)(v25 - 88));
  _Unwind_Resume(a1);
}

id INHelperServingXPCInterface()
{
  id v0 = [MEMORY[0x1E4F29280] interfaceWithProtocol:&unk_1EDC315C8];
  [v0 setClass:objc_opt_class() forSelector:sel_loadDataImageForImage_scaledWidth_scaledHeight_usingPortableImageLoader_completion_ argumentIndex:0 ofReply:0];
  [v0 setClass:objc_opt_class() forSelector:sel_loadDataImageForImage_scaledWidth_scaledHeight_usingPortableImageLoader_completion_ argumentIndex:0 ofReply:1];
  id v1 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v2 = objc_opt_class();
  id v3 = objc_msgSend(v1, "setWithObjects:", v2, objc_opt_class(), 0);
  [v0 setClasses:v3 forSelector:sel_loadDataImageForImage_scaledWidth_scaledHeight_usingPortableImageLoader_completion_ argumentIndex:1 ofReply:0];

  [v0 setClass:objc_opt_class() forSelector:sel_storeImage_scaled_qualityOfService_storeType_completion_ argumentIndex:0 ofReply:0];
  [v0 setClass:objc_opt_class() forSelector:sel_retrieveImageWithIdentifier_completion_ argumentIndex:0 ofReply:1];
  int v4 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v5 = objc_opt_class();
  uint64_t v6 = objc_opt_class();
  uint64_t v7 = objc_opt_class();
  int v8 = objc_msgSend(v4, "setWithObjects:", v5, v6, v7, objc_opt_class(), 0);
  [v0 setClasses:v8 forSelector:sel_loadSchemaURLsWithCompletion_ argumentIndex:0 ofReply:1];

  unsigned int v9 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v10 = objc_opt_class();
  uint64_t v11 = objc_opt_class();
  uint64_t v12 = objc_opt_class();
  char v13 = objc_msgSend(v9, "setWithObjects:", v10, v11, v12, objc_opt_class(), 0);
  [v0 setClasses:v13 forSelector:sel_loadSchemaURLsForBundleIdentifiers_completion_ argumentIndex:0 ofReply:1];

  int v14 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v15 = objc_opt_class();
  uint64_t v16 = objc_opt_class();
  id v17 = objc_msgSend(v14, "setWithObjects:", v15, v16, objc_opt_class(), 0);
  [v0 setClasses:v17 forSelector:sel_loadBundleURLsForBundleIdentifiers_completion_ argumentIndex:0 ofReply:1];

  [v0 setClass:objc_opt_class() forSelector:sel_fetchShareExtensionIntentForExtensionContextUUID_completion_ argumentIndex:0 ofReply:0];
  [v0 setClass:objc_opt_class() forSelector:sel_fetchShareExtensionIntentForExtensionContextUUID_completion_ argumentIndex:0 ofReply:1];
  [v0 setClass:objc_opt_class() forSelector:sel_storeUserContext_forBundleIdentifier_ argumentIndex:0 ofReply:0];
  [v0 setClass:objc_opt_class() forSelector:sel_filePathForImage_usingPortableImageLoader_completion_ argumentIndex:0 ofReply:0];
  int v18 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v19 = objc_opt_class();
  int v20 = objc_msgSend(v18, "setWithObjects:", v19, objc_opt_class(), 0);
  [v0 setClasses:v20 forSelector:sel_filePathForImage_usingPortableImageLoader_completion_ argumentIndex:1 ofReply:0];

  return v0;
}

uint64_t INCodablePlacemarkAttributeMetadataTypeWithString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"Name"])
  {
    uint64_t v2 = 0;
  }
  else if ([v1 isEqualToString:@"Address"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"City"])
  {
    uint64_t v2 = 2;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

uint64_t _INPBWholeHouseAudioMetadataReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  int v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        id v17 = objc_alloc_init(_INPBString);
        uint64_t v62 = 0;
        uint64_t v63 = 0;
        if (!PBReaderPlaceMark() || !_INPBStringReadFrom(v17, a2)) {
          goto LABEL_139;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addSpeakerNames:", v17, 0, 0);
        }
        goto LABEL_57;
      case 2u:
        id v17 = objc_alloc_init(_INPBString);
        uint64_t v62 = 0;
        uint64_t v63 = 0;
        if (!PBReaderPlaceMark() || !_INPBStringReadFrom(v17, a2)) {
          goto LABEL_139;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addSpeakerRooms:", v17, 0, 0);
        }
        goto LABEL_57;
      case 3u:
        id v17 = objc_alloc_init(_INPBString);
        uint64_t v62 = 0;
        uint64_t v63 = 0;
        if (!PBReaderPlaceMark() || !_INPBStringReadFrom(v17, a2)) {
          goto LABEL_139;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addPermanentNames:", v17, 0, 0);
        }
        goto LABEL_57;
      case 4u:
        id v17 = objc_alloc_init(_INPBString);
        uint64_t v62 = 0;
        uint64_t v63 = 0;
        if (!PBReaderPlaceMark() || !_INPBStringReadFrom(v17, a2)) {
          goto LABEL_139;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addIntentSpeakerNames:", v17, 0, 0);
        }
        goto LABEL_57;
      case 5u:
        id v17 = objc_alloc_init(_INPBString);
        uint64_t v62 = 0;
        uint64_t v63 = 0;
        if (!PBReaderPlaceMark() || !_INPBStringReadFrom(v17, a2)) {
          goto LABEL_139;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addIntentSpeakerRooms:", v17, 0, 0);
        }
        goto LABEL_57;
      case 6u:
        id v17 = objc_alloc_init(_INPBString);
        uint64_t v62 = 0;
        uint64_t v63 = 0;
        if (!PBReaderPlaceMark() || !_INPBStringReadFrom(v17, a2)) {
          goto LABEL_139;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addIntentDestinationSpeakers:", v17, 0, 0);
        }
        goto LABEL_57;
      case 7u:
        id v17 = objc_alloc_init(_INPBString);
        uint64_t v62 = 0;
        uint64_t v63 = 0;
        if (!PBReaderPlaceMark() || !_INPBStringReadFrom(v17, a2)) {
          goto LABEL_139;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addIntentPermanentNames:", v17, 0, 0);
        }
        goto LABEL_57;
      case 8u:
        id v17 = objc_alloc_init(_INPBString);
        uint64_t v62 = 0;
        uint64_t v63 = 0;
        if (!PBReaderPlaceMark() || !_INPBStringReadFrom(v17, a2)) {
          goto LABEL_139;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addSpokenEntityType:", v17, 0, 0);
        }
        goto LABEL_57;
      case 9u:
        id v17 = objc_alloc_init(_INPBString);
        uint64_t v62 = 0;
        uint64_t v63 = 0;
        if (PBReaderPlaceMark() && _INPBStringReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          if (v17) {
            objc_msgSend(a1, "addSpokenEntityName:", v17, 0, 0);
          }
LABEL_57:

LABEL_58:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_139:

        return 0;
      case 0xAu:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_113;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v21;
        }
LABEL_113:
        objc_msgSend(a1, "setNumberOfHomeAutomationWords:", v25, v62, v63);
        goto LABEL_58;
      case 0xBu:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                uint64_t v28 = 0;
                goto LABEL_117;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_117:
        [a1 setIsAllSpeakers:v28 != 0];
        goto LABEL_58;
      case 0xCu:
        char v32 = 0;
        unsigned int v33 = 0;
        uint64_t v34 = 0;
        while (2)
        {
          uint64_t v35 = *v3;
          unint64_t v36 = *(void *)(a2 + v35);
          if (v36 == -1 || v36 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
            *(void *)(a2 + v35) = v36 + 1;
            v34 |= (unint64_t)(v37 & 0x7F) << v32;
            if (v37 < 0)
            {
              v32 += 7;
              BOOL v14 = v33++ >= 9;
              if (v14)
              {
                uint64_t v34 = 0;
                goto LABEL_121;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v34 = 0;
        }
LABEL_121:
        [a1 setIsPauseOrStop:v34 != 0];
        goto LABEL_58;
      case 0xDu:
        char v38 = 0;
        unsigned int v39 = 0;
        uint64_t v40 = 0;
        while (2)
        {
          uint64_t v41 = *v3;
          unint64_t v42 = *(void *)(a2 + v41);
          if (v42 == -1 || v42 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v43 = *(unsigned char *)(*(void *)(a2 + *v7) + v42);
            *(void *)(a2 + v41) = v42 + 1;
            v40 |= (unint64_t)(v43 & 0x7F) << v38;
            if (v43 < 0)
            {
              v38 += 7;
              BOOL v14 = v39++ >= 9;
              if (v14)
              {
                uint64_t v40 = 0;
                goto LABEL_125;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v40 = 0;
        }
LABEL_125:
        [a1 setIsWholeHouseAudioCommand:v40 != 0];
        goto LABEL_58;
      case 0xEu:
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v46 = 0;
        while (2)
        {
          uint64_t v47 = *v3;
          unint64_t v48 = *(void *)(a2 + v47);
          if (v48 == -1 || v48 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v49 = *(unsigned char *)(*(void *)(a2 + *v7) + v48);
            *(void *)(a2 + v47) = v48 + 1;
            v46 |= (unint64_t)(v49 & 0x7F) << v44;
            if (v49 < 0)
            {
              v44 += 7;
              BOOL v14 = v45++ >= 9;
              if (v14)
              {
                uint64_t v46 = 0;
                goto LABEL_129;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v46 = 0;
        }
LABEL_129:
        [a1 setIsInHere:v46 != 0];
        goto LABEL_58;
      case 0xFu:
        char v50 = 0;
        unsigned int v51 = 0;
        uint64_t v52 = 0;
        while (2)
        {
          uint64_t v53 = *v3;
          unint64_t v54 = *(void *)(a2 + v53);
          if (v54 == -1 || v54 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v55 = *(unsigned char *)(*(void *)(a2 + *v7) + v54);
            *(void *)(a2 + v53) = v54 + 1;
            v52 |= (unint64_t)(v55 & 0x7F) << v50;
            if (v55 < 0)
            {
              v50 += 7;
              BOOL v14 = v51++ >= 9;
              if (v14)
              {
                uint64_t v52 = 0;
                goto LABEL_133;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v52 = 0;
        }
LABEL_133:
        [a1 setHasExcept:v52 != 0];
        goto LABEL_58;
      case 0x10u:
        char v56 = 0;
        unsigned int v57 = 0;
        uint64_t v58 = 0;
        while (2)
        {
          uint64_t v59 = *v3;
          unint64_t v60 = *(void *)(a2 + v59);
          if (v60 == -1 || v60 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v61 = *(unsigned char *)(*(void *)(a2 + *v7) + v60);
            *(void *)(a2 + v59) = v60 + 1;
            v58 |= (unint64_t)(v61 & 0x7F) << v56;
            if (v61 < 0)
            {
              v56 += 7;
              BOOL v14 = v57++ >= 9;
              if (v14)
              {
                uint64_t v58 = 0;
                goto LABEL_137;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v58 = 0;
        }
LABEL_137:
        objc_msgSend(a1, "setIsParticipatingSpeaker:", v58 != 0, v62, v63);
        goto LABEL_58;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_58;
    }
  }
}

id INContainingAppProxyForCurrentProcess()
{
  id v0 = [MEMORY[0x1E4F223F0] bundleProxyForCurrentProcess];
  id v1 = _INContainingBundleProxyWithBundleProxy(v0);

  if (v1)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      uint64_t v2 = v1;
    }
    else {
      uint64_t v2 = 0;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  id v3 = v2;

  return v3;
}

uint64_t __INThisProcessIsSystemProcess_block_invoke()
{
  id v0 = [MEMORY[0x1E4F223F0] bundleProxyForCurrentProcess];
  if (v0) {
    char v1 = objc_msgSend(v0, "if_isSystem");
  }
  else {
    char v1 = 1;
  }
  INThisProcessIsSystemProcess_isSystemProcess = v1;

  return MEMORY[0x1F41817F8]();
}

id INPhotoAttributeOptionsGetNames(uint64_t a1)
{
  if (a1)
  {
    int v1 = a1;
    id v2 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
    id v3 = v2;
    if (v1)
    {
      [v2 addObject:@"photo"];
      if ((v1 & 2) == 0)
      {
LABEL_4:
        if ((v1 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_39;
      }
    }
    else if ((v1 & 2) == 0)
    {
      goto LABEL_4;
    }
    [v3 addObject:@"video"];
    if ((v1 & 4) == 0)
    {
LABEL_5:
      if ((v1 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_40;
    }
LABEL_39:
    [v3 addObject:@"GIF"];
    if ((v1 & 8) == 0)
    {
LABEL_6:
      if ((v1 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_41;
    }
LABEL_40:
    [v3 addObject:@"flash"];
    if ((v1 & 0x10) == 0)
    {
LABEL_7:
      if ((v1 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_42;
    }
LABEL_41:
    [v3 addObject:@"landscapeOrientation"];
    if ((v1 & 0x20) == 0)
    {
LABEL_8:
      if ((v1 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_43;
    }
LABEL_42:
    [v3 addObject:@"portraitOrientation"];
    if ((v1 & 0x40) == 0)
    {
LABEL_9:
      if ((v1 & 0x80) == 0) {
        goto LABEL_10;
      }
      goto LABEL_44;
    }
LABEL_43:
    [v3 addObject:@"favorite"];
    if ((v1 & 0x80) == 0)
    {
LABEL_10:
      if ((v1 & 0x100) == 0) {
        goto LABEL_11;
      }
      goto LABEL_45;
    }
LABEL_44:
    [v3 addObject:@"selfie"];
    if ((v1 & 0x100) == 0)
    {
LABEL_11:
      if ((v1 & 0x200) == 0) {
        goto LABEL_12;
      }
      goto LABEL_46;
    }
LABEL_45:
    [v3 addObject:@"frontFacingCamera"];
    if ((v1 & 0x200) == 0)
    {
LABEL_12:
      if ((v1 & 0x400) == 0) {
        goto LABEL_13;
      }
      goto LABEL_47;
    }
LABEL_46:
    [v3 addObject:@"screenshot"];
    if ((v1 & 0x400) == 0)
    {
LABEL_13:
      if ((v1 & 0x800) == 0) {
        goto LABEL_14;
      }
      goto LABEL_48;
    }
LABEL_47:
    [v3 addObject:@"burstPhoto"];
    if ((v1 & 0x800) == 0)
    {
LABEL_14:
      if ((v1 & 0x1000) == 0) {
        goto LABEL_15;
      }
      goto LABEL_49;
    }
LABEL_48:
    [v3 addObject:@"HDRPhoto"];
    if ((v1 & 0x1000) == 0)
    {
LABEL_15:
      if ((v1 & 0x2000) == 0) {
        goto LABEL_16;
      }
      goto LABEL_50;
    }
LABEL_49:
    [v3 addObject:@"squarePhoto"];
    if ((v1 & 0x2000) == 0)
    {
LABEL_16:
      if ((v1 & 0x4000) == 0) {
        goto LABEL_17;
      }
      goto LABEL_51;
    }
LABEL_50:
    [v3 addObject:@"panoramaPhoto"];
    if ((v1 & 0x4000) == 0)
    {
LABEL_17:
      if ((v1 & 0x8000) == 0) {
        goto LABEL_18;
      }
      goto LABEL_52;
    }
LABEL_51:
    [v3 addObject:@"timeLapseVideo"];
    if ((v1 & 0x8000) == 0)
    {
LABEL_18:
      if ((v1 & 0x10000) == 0) {
        goto LABEL_19;
      }
      goto LABEL_53;
    }
LABEL_52:
    [v3 addObject:@"slowMotionVideo"];
    if ((v1 & 0x10000) == 0)
    {
LABEL_19:
      if ((v1 & 0x20000) == 0) {
        goto LABEL_20;
      }
      goto LABEL_54;
    }
LABEL_53:
    [v3 addObject:@"noirFilter"];
    if ((v1 & 0x20000) == 0)
    {
LABEL_20:
      if ((v1 & 0x40000) == 0) {
        goto LABEL_21;
      }
      goto LABEL_55;
    }
LABEL_54:
    [v3 addObject:@"chromeFilter"];
    if ((v1 & 0x40000) == 0)
    {
LABEL_21:
      if ((v1 & 0x80000) == 0) {
        goto LABEL_22;
      }
      goto LABEL_56;
    }
LABEL_55:
    [v3 addObject:@"instantFilter"];
    if ((v1 & 0x80000) == 0)
    {
LABEL_22:
      if ((v1 & 0x100000) == 0) {
        goto LABEL_23;
      }
      goto LABEL_57;
    }
LABEL_56:
    [v3 addObject:@"tonalFilter"];
    if ((v1 & 0x100000) == 0)
    {
LABEL_23:
      if ((v1 & 0x200000) == 0) {
        goto LABEL_24;
      }
      goto LABEL_58;
    }
LABEL_57:
    [v3 addObject:@"transferFilter"];
    if ((v1 & 0x200000) == 0)
    {
LABEL_24:
      if ((v1 & 0x400000) == 0) {
        goto LABEL_25;
      }
      goto LABEL_59;
    }
LABEL_58:
    [v3 addObject:@"monoFilter"];
    if ((v1 & 0x400000) == 0)
    {
LABEL_25:
      if ((v1 & 0x800000) == 0) {
        goto LABEL_26;
      }
      goto LABEL_60;
    }
LABEL_59:
    [v3 addObject:@"fadeFilter"];
    if ((v1 & 0x800000) == 0)
    {
LABEL_26:
      if ((v1 & 0x1000000) == 0) {
        goto LABEL_27;
      }
      goto LABEL_61;
    }
LABEL_60:
    [v3 addObject:@"processFilter"];
    if ((v1 & 0x1000000) == 0)
    {
LABEL_27:
      if ((v1 & 0x2000000) == 0) {
        goto LABEL_28;
      }
      goto LABEL_62;
    }
LABEL_61:
    [v3 addObject:@"portraitPhoto"];
    if ((v1 & 0x2000000) == 0)
    {
LABEL_28:
      if ((v1 & 0x4000000) == 0) {
        goto LABEL_29;
      }
      goto LABEL_63;
    }
LABEL_62:
    [v3 addObject:@"livePhoto"];
    if ((v1 & 0x4000000) == 0)
    {
LABEL_29:
      if ((v1 & 0x8000000) == 0) {
        goto LABEL_30;
      }
      goto LABEL_64;
    }
LABEL_63:
    [v3 addObject:@"loopPhoto"];
    if ((v1 & 0x8000000) == 0)
    {
LABEL_30:
      if ((v1 & 0x10000000) == 0)
      {
LABEL_32:
        int v4 = (void *)[v3 copy];

        goto LABEL_34;
      }
LABEL_31:
      [v3 addObject:@"longExposurePhoto"];
      goto LABEL_32;
    }
LABEL_64:
    [v3 addObject:@"bouncePhoto"];
    if ((v1 & 0x10000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_31;
  }
  int v4 = (void *)MEMORY[0x1E4F1CBF0];
LABEL_34:

  return v4;
}

void __INThisProcessIsDonatingBySiri_block_invoke()
{
  id v2 = [MEMORY[0x1E4F223F0] bundleProxyForCurrentProcess];
  uint64_t v0 = [v2 bundleIdentifier];
  int v1 = (void *)INThisProcessIsDonatingBySiri_bundleIdentifier;
  INThisProcessIsDonatingBySiri_bundleIdentifier = v0;
}

uint64_t INCodablePersonAttributeMetadataTypeWithString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"Contact"])
  {
    uint64_t v2 = 0;
  }
  else if ([v1 isEqualToString:@"Email"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"Phone"])
  {
    uint64_t v2 = 2;
  }
  else if ([v1 isEqualToString:@"EmailORPhone"])
  {
    uint64_t v2 = 3;
  }
  else if ([v1 isEqualToString:@"Username"])
  {
    uint64_t v2 = 4;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

void __INImageProxyInjectionQueue_block_invoke()
{
  uint64_t v2 = dispatch_queue_attr_make_with_qos_class(0, QOS_CLASS_USER_INITIATED, 0);
  dispatch_queue_t v0 = dispatch_queue_create("com.apple.intents.INImageProxyInjectionUtilities.injection-queue", v2);
  id v1 = (void *)INImageProxyInjectionQueue_injectionQueue;
  INImageProxyInjectionQueue_injectionQueue = (uint64_t)v0;
}

id __INGEOPDPlaceCreateFromCoordinate(void *a1, double a2, double a3)
{
  uint64_t v34 = *MEMORY[0x1E4F143B8];
  id v26 = a1;
  id v27 = objc_alloc_init(MEMORY[0x1E4F647E0]);
  uint64_t v25 = objc_msgSend(objc_alloc(MEMORY[0x1E4F64638]), "initWithCoordinate:", a2, a3);
  id v5 = objc_alloc_init(NSClassFromString((NSString *)@"GEOPDPlaceInfo"));
  int v6 = objc_opt_respondsToSelector() & (v25 != 0);
  if (v6 == 1)
  {
    objc_msgSend(v5, "setCenter:");
  }
  else
  {
    uint64_t v7 = INSiriLogContextIntents;
    if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315651;
      uint64_t v29 = "__INGEOPDPlaceCreateFromCoordinate";
      __int16 v30 = 2113;
      id v31 = v5;
      __int16 v32 = 2113;
      id v33 = v25;
      _os_log_error_impl(&dword_18CB2F000, v7, OS_LOG_TYPE_ERROR, "%s Failed to prepare place info. (placeInfo = %{private}@, latLng = %{private}@)", buf, 0x20u);
    }
  }
  id v8 = objc_alloc_init(NSClassFromString((NSString *)@"GEOPDComponentValue"));
  if ((objc_opt_respondsToSelector() & (v5 != 0)) == 1)
  {
    [v8 setPlaceInfo:v5];
  }
  else
  {
    unsigned int v9 = INSiriLogContextIntents;
    if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315651;
      uint64_t v29 = "__INGEOPDPlaceCreateFromCoordinate";
      __int16 v30 = 2113;
      id v31 = v8;
      __int16 v32 = 2113;
      id v33 = v5;
      _os_log_error_impl(&dword_18CB2F000, v9, OS_LOG_TYPE_ERROR, "%s Failed to prepare component value. (componentValue = %{private}@, placeInfo = %{private}@)", buf, 0x20u);
    }
    int v6 = 0;
  }
  id v10 = objc_alloc_init(NSClassFromString((NSString *)@"GEOPDComponent"));
  if ((objc_opt_respondsToSelector() & (v8 != 0)) == 1)
  {
    [v10 addValue:v8];
  }
  else
  {
    uint64_t v11 = INSiriLogContextIntents;
    if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315651;
      uint64_t v29 = "__INGEOPDPlaceCreateFromCoordinate";
      __int16 v30 = 2113;
      id v31 = v10;
      __int16 v32 = 2113;
      id v33 = v8;
      _os_log_error_impl(&dword_18CB2F000, v11, OS_LOG_TYPE_ERROR, "%s Failed to prepare component. (component = %{private}@, componentValue = %{private}@)", buf, 0x20u);
    }
    int v6 = 0;
  }
  if (objc_opt_respondsToSelector())
  {
    [v10 setType:2];
  }
  else
  {
    unint64_t v12 = INSiriLogContextIntents;
    if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315395;
      uint64_t v29 = "__INGEOPDPlaceCreateFromCoordinate";
      __int16 v30 = 2113;
      id v31 = v10;
      _os_log_error_impl(&dword_18CB2F000, v12, OS_LOG_TYPE_ERROR, "%s Failed to set type on component. (component = %{private}@)", buf, 0x16u);
    }
    int v6 = 0;
  }
  if (objc_opt_respondsToSelector()) {
    [v10 setStatus:v6 ^ 1u];
  }
  if (v10)
  {
    [v27 addComponent:v10];
    uint64_t v13 = 0;
  }
  else
  {
    uint64_t v13 = 1;
  }
  objc_msgSend(v27, "setStatus:", v13, sel_setStatus_);
  if (v26)
  {
    id v14 = objc_alloc_init(NSClassFromString((NSString *)@"GEOLocalizedString"));
    char v15 = objc_opt_respondsToSelector();
    if (v15)
    {
      [v14 setStringValue:v26];
    }
    else
    {
      uint64_t v16 = INSiriLogContextIntents;
      if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136315651;
        uint64_t v29 = "__INGEOPDPlaceCreateFromCoordinate";
        __int16 v30 = 2113;
        id v31 = v14;
        __int16 v32 = 2113;
        id v33 = v26;
        _os_log_error_impl(&dword_18CB2F000, v16, OS_LOG_TYPE_ERROR, "%s Failed to set string value on entity name (entity name = %{private}@, name = %{private}@)", buf, 0x20u);
      }
    }
    id v17 = objc_alloc_init(NSClassFromString((NSString *)@"GEOPDEntity"));
    if ((objc_opt_respondsToSelector() & (v14 != 0)) == 1)
    {
      [v17 addName:v14];
    }
    else
    {
      int v18 = INSiriLogContextIntents;
      if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136315651;
        uint64_t v29 = "__INGEOPDPlaceCreateFromCoordinate";
        __int16 v30 = 2113;
        id v31 = v14;
        __int16 v32 = 2113;
        id v33 = v17;
        _os_log_error_impl(&dword_18CB2F000, v18, OS_LOG_TYPE_ERROR, "%s Failed to set name on entity. (name = %{private}@, entity = %{private}@)", buf, 0x20u);
      }
      char v15 = 0;
    }
    id v19 = objc_alloc_init(NSClassFromString((NSString *)@"GEOPDComponentValue"));
    if ((objc_opt_respondsToSelector() & (v17 != 0)) == 1)
    {
      [v19 setEntity:v17];
    }
    else
    {
      unsigned int v20 = INSiriLogContextIntents;
      if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136315651;
        uint64_t v29 = "__INGEOPDPlaceCreateFromCoordinate";
        __int16 v30 = 2113;
        id v31 = v19;
        __int16 v32 = 2113;
        id v33 = v17;
        _os_log_error_impl(&dword_18CB2F000, v20, OS_LOG_TYPE_ERROR, "%s Failed to prepare component value. (componentValue = %{private}@, entity = %{private}@)", buf, 0x20u);
      }
      char v15 = 0;
    }
    id v21 = objc_alloc_init(NSClassFromString((NSString *)@"GEOPDComponent"));
    if ((objc_opt_respondsToSelector() & (v19 != 0)) == 1)
    {
      [v21 addValue:v19];
    }
    else
    {
      uint64_t v22 = INSiriLogContextIntents;
      if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136315651;
        uint64_t v29 = "__INGEOPDPlaceCreateFromCoordinate";
        __int16 v30 = 2113;
        id v31 = v21;
        __int16 v32 = 2113;
        id v33 = v19;
        _os_log_error_impl(&dword_18CB2F000, v22, OS_LOG_TYPE_ERROR, "%s Failed to prepare component. (component = %{private}@, componentValue = %{private}@)", buf, 0x20u);
      }
      char v15 = 0;
    }
    if (objc_opt_respondsToSelector())
    {
      [v21 setType:1];
    }
    else
    {
      unint64_t v23 = INSiriLogContextIntents;
      if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136315395;
        uint64_t v29 = "__INGEOPDPlaceCreateFromCoordinate";
        __int16 v30 = 2113;
        id v31 = v21;
        _os_log_error_impl(&dword_18CB2F000, v23, OS_LOG_TYPE_ERROR, "%s Failed to set type on component. (component = %{private}@)", buf, 0x16u);
      }
      char v15 = 0;
    }
    if (objc_opt_respondsToSelector()) {
      [v21 setStatus:(v15 & 1) == 0];
    }
    if (v21) {
      [v27 addComponent:v21];
    }
  }

  return v27;
}

void sub_18CB69B38(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, long long buf)
{
  if (a2 == 1)
  {
    id v13 = objc_begin_catch(a1);
    id v14 = INSiriLogContextIntents;
    if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_ERROR))
    {
      LODWORD(buf) = 136315394;
      *(void *)((char *)&buf + 4) = "__INGEOPDPlaceCreateFromCoordinate";
      WORD6(buf) = 2114;
      *(void *)((char *)&buf + 14) = v13;
      _os_log_error_impl(&dword_18CB2F000, v14, OS_LOG_TYPE_ERROR, "%s Caught exception: %{public}@", (uint8_t *)&buf, 0x16u);
    }

    objc_end_catch();
    JUMPOUT(0x18CB697F0);
  }
  _Unwind_Resume(a1);
}

_INPBTaskList *INIntentSlotValueTransformToTaskList(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    uint64_t v2 = objc_alloc_init(_INPBTaskList);
    id v3 = [v1 title];
    int v4 = INIntentSlotValueTransformToDataString(v3);
    [(_INPBTaskList *)v2 setTitle:v4];

    id v5 = [v1 tasks];
    int v6 = INIntentSlotValueTransformToTasks(v5);
    [(_INPBTaskList *)v2 setTasks:v6];

    uint64_t v7 = [v1 groupName];
    id v8 = INIntentSlotValueTransformToDataString(v7);
    [(_INPBTaskList *)v2 setGroupName:v8];

    unsigned int v9 = [v1 createdDateComponents];
    id v10 = INIntentSlotValueTransformToDateTime(v9);
    [(_INPBTaskList *)v2 setCreatedDateTime:v10];

    uint64_t v11 = [v1 modifiedDateComponents];
    unint64_t v12 = INIntentSlotValueTransformToDateTime(v11);
    [(_INPBTaskList *)v2 setModifiedDateTime:v12];

    id v13 = [v1 identifier];

    [(_INPBTaskList *)v2 setIdentifier:v13];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

_INPBHomeFilter *INIntentSlotValueTransformToHomeFilter(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    uint64_t v2 = objc_alloc_init(_INPBHomeFilter);
    id v3 = [v1 entityIdentifiers];
    [(_INPBHomeFilter *)v2 setEntityIdentifiers:v3];

    int v4 = [v1 entityName];
    id v5 = INIntentSlotValueTransformToDataString(v4);
    [(_INPBHomeFilter *)v2 setEntityName:v5];

    unint64_t v6 = [v1 entityType] - 1;
    if (v6 > 9) {
      uint64_t v7 = 0x7FFFFFFFLL;
    }
    else {
      uint64_t v7 = dword_18CFC4438[v6];
    }
    [(_INPBHomeFilter *)v2 setEntityType:v7];
    unint64_t v8 = [v1 outerDeviceType] - 1;
    if (v8 > 0x2C) {
      uint64_t v9 = 0x7FFFFFFFLL;
    }
    else {
      uint64_t v9 = dword_18CFC4668[v8];
    }
    [(_INPBHomeFilter *)v2 setOuterDeviceType:v9];
    id v10 = [v1 outerDeviceName];
    uint64_t v11 = INIntentSlotValueTransformToDataString(v10);
    [(_INPBHomeFilter *)v2 setOuterDeviceName:v11];

    unint64_t v12 = [v1 deviceType] - 1;
    if (v12 > 0x2C) {
      uint64_t v13 = 0x7FFFFFFFLL;
    }
    else {
      uint64_t v13 = dword_18CFC4668[v12];
    }
    [(_INPBHomeFilter *)v2 setDeviceType:v13];
    id v14 = [v1 home];
    char v15 = INIntentSlotValueTransformToDataString(v14);
    [(_INPBHomeFilter *)v2 setHome:v15];

    uint64_t v16 = [v1 zone];
    id v17 = INIntentSlotValueTransformToDataString(v16);
    [(_INPBHomeFilter *)v2 setZone:v17];

    int v18 = [v1 group];
    id v19 = INIntentSlotValueTransformToDataString(v18);
    [(_INPBHomeFilter *)v2 setGroup:v19];

    unsigned int v20 = [v1 room];
    id v21 = INIntentSlotValueTransformToDataString(v20);
    [(_INPBHomeFilter *)v2 setRoom:v21];

    -[_INPBHomeFilter setIsExcludeFilter:](v2, "setIsExcludeFilter:", [v1 isExcludeFilter]);
    uint64_t v22 = [v1 hasAllQuantifier];

    [(_INPBHomeFilter *)v2 setHasAllQuantifier:v22];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

_INPBPrivateMediaIntentData *INIntentSlotValueTransformToPrivateMediaIntentData(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    uint64_t v2 = objc_alloc_init(_INPBPrivateMediaIntentData);
    id v3 = [v1 speakerIDInfo];
    int v4 = INIntentSlotValueTransformToSpeakerIDInfo(v3);
    [(_INPBPrivateMediaIntentData *)v2 setSpeakerIDInfo:v4];

    id v5 = [v1 proxiedThirdPartyAppInfo];
    unint64_t v6 = INIntentSlotValueTransformToAppIdentifier(v5);
    [(_INPBPrivateMediaIntentData *)v2 setProxiedThirdPartyAppInfo:v6];

    uint64_t v7 = [v1 isAppAttributionRequired];
    -[_INPBPrivateMediaIntentData setIsAppAttributionRequired:](v2, "setIsAppAttributionRequired:", [v7 BOOLValue]);

    unint64_t v8 = [v1 useDialogMemoryForAttribution];
    -[_INPBPrivateMediaIntentData setUseDialogMemoryForAttribution:](v2, "setUseDialogMemoryForAttribution:", [v8 BOOLValue]);

    uint64_t v9 = [v1 isAppCorrection];
    -[_INPBPrivateMediaIntentData setIsAppCorrection:](v2, "setIsAppCorrection:", [v9 BOOLValue]);

    id v10 = [v1 fallbackUsername];
    uint64_t v11 = INIntentSlotValueTransformToString(v10);
    [(_INPBPrivateMediaIntentData *)v2 setFallbackUsername:v11];

    unint64_t v12 = [v1 wholeHouseAudioMetadata];
    uint64_t v13 = INIntentSlotValueTransformToWholeHouseAudioMetadata(v12);
    [(_INPBPrivateMediaIntentData *)v2 setWholeHouseAudioMetadata:v13];

    id v14 = [v1 nlConfidenceScore];
    [v14 floatValue];
    -[_INPBPrivateMediaIntentData setNlConfidenceScore:](v2, "setNlConfidenceScore:");

    unint64_t v15 = [v1 nlConfidenceLevel];
    if (v15 >= 4) {
      uint64_t v16 = 0x7FFFFFFFLL;
    }
    else {
      uint64_t v16 = (10 * v15);
    }
    [(_INPBPrivateMediaIntentData *)v2 setNlConfidenceLevel:v16];
    id v17 = [v1 asrConfidenceScore];
    [v17 floatValue];
    -[_INPBPrivateMediaIntentData setAsrConfidenceScore:](v2, "setAsrConfidenceScore:");

    unint64_t v18 = [v1 asrConfidenceLevel];
    if (v18 >= 4) {
      uint64_t v19 = 0x7FFFFFFFLL;
    }
    else {
      uint64_t v19 = (10 * v18);
    }
    [(_INPBPrivateMediaIntentData *)v2 setAsrConfidenceLevel:v19];
    unsigned int v20 = [v1 resolvedSharedUserID];
    id v21 = INIntentSlotValueTransformToString(v20);
    [(_INPBPrivateMediaIntentData *)v2 setResolvedSharedUserID:v21];

    uint64_t v22 = [v1 homeAutomationEntityProvider];

    unint64_t v23 = INIntentSlotValueTransformToHomeAutomationEntityProvider(v22);
    [(_INPBPrivateMediaIntentData *)v2 setHomeAutomationEntityProvider:v23];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

uint64_t _INPBDeleteParkingLocationIntentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  int v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        id v17 = objc_alloc_init(_INPBIntentMetadata);
        if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntentMetadata:", v17, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

id INIntentSlotValueTransformFromPrivateSearchForMediaIntentDatas(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          char v8 = INIntentSlotValueTransformFromPrivateSearchForMediaIntentData(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    unsigned int v9 = (void *)[v2 copy];
  }
  else
  {
    unsigned int v9 = 0;
  }

  return v9;
}

id INIntentSlotValueTransformFromLocation(void *a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v1 = objc_msgSend(a1, "values", 0);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v10;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v10 != v4) {
          objc_enumerationMutation(v1);
        }
        uint64_t v6 = INIntentSlotValueTransformFromLocationValue(*(void **)(*((void *)&v9 + 1) + 8 * i));
        if (v6)
        {
          uint64_t v7 = (void *)v6;
          goto LABEL_11;
        }
      }
      uint64_t v3 = [v1 countByEnumeratingWithState:&v9 objects:v13 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
  uint64_t v7 = 0;
LABEL_11:

  return v7;
}

id INIntentSlotValueTransformFromCurrencyAmountValues(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        char v8 = INIntentSlotValueTransformFromCurrencyAmountValue(*(void **)(*((void *)&v11 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  long long v9 = (void *)[v2 copy];

  return v9;
}

BOOL _INPBDoubleListReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 1) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        id v17 = objc_alloc_init(_INPBCondition);
        if (!PBReaderPlaceMark() || (_INPBConditionReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_32;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setConditionType:", v17, 0, 0);
LABEL_27:

        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_29:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    id v17 = objc_alloc_init(_INPBDouble);
    if (!PBReaderPlaceMark() || !_INPBDoubleReadFrom(v17, a2))
    {
LABEL_32:

      return 0;
    }
    PBReaderRecallMark();
    if (v17) {
      objc_msgSend(a1, "addDataString:", v17, 0, 0);
    }
    goto LABEL_27;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t INMediaSortOrderWithString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"newest"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"oldest"])
  {
    uint64_t v2 = 2;
  }
  else if ([v1 isEqualToString:@"best"])
  {
    uint64_t v2 = 3;
  }
  else if ([v1 isEqualToString:@"worst"])
  {
    uint64_t v2 = 4;
  }
  else if ([v1 isEqualToString:@"popular"])
  {
    uint64_t v2 = 5;
  }
  else if ([v1 isEqualToString:@"unpopular"])
  {
    uint64_t v2 = 6;
  }
  else if ([v1 isEqualToString:@"trending"])
  {
    uint64_t v2 = 7;
  }
  else if ([v1 isEqualToString:@"recommended"])
  {
    uint64_t v2 = 8;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

uint64_t INIsReservationInteraction(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 intent];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v3 = [v1 intentResponse];
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();
  }
  else
  {
    char isKindOfClass = 0;
  }

  return isKindOfClass & 1;
}

id INIntentSlotValueTransformToTaskLists(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          char v8 = INIntentSlotValueTransformToTaskList(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    unsigned int v9 = (void *)[v2 copy];
  }
  else
  {
    unsigned int v9 = 0;
  }

  return v9;
}

_INPBSettingMetadata *INIntentSlotValueTransformToSettingMetadata(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    uint64_t v2 = objc_alloc_init(_INPBSettingMetadata);
    id v3 = [v1 settingId];
    [(_INPBSettingMetadata *)v2 setSettingId:v3];

    uint64_t v4 = [v1 targetDevice];
    uint64_t v5 = INIntentSlotValueTransformToDevice(v4);
    [(_INPBSettingMetadata *)v2 setTargetDevice:v5];

    uint64_t v6 = [v1 targetApp];

    uint64_t v7 = INIntentSlotValueTransformToAppIdentifier(v6);
    [(_INPBSettingMetadata *)v2 setTargetApp:v7];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INIntentSlotValueTransformToActivities(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          char v8 = INIntentSlotValueTransformToActivity(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    unsigned int v9 = (void *)[v2 copy];
  }
  else
  {
    unsigned int v9 = 0;
  }

  return v9;
}

id INIntentSlotValueTransformFromTaskLists(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          char v8 = INIntentSlotValueTransformFromTaskList(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    unsigned int v9 = (void *)[v2 copy];
  }
  else
  {
    unsigned int v9 = 0;
  }

  return v9;
}

id INIntentSlotValueTransformFromPrivateAddMediaIntentDatas(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          char v8 = INIntentSlotValueTransformFromPrivateAddMediaIntentData(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    unsigned int v9 = (void *)[v2 copy];
  }
  else
  {
    unsigned int v9 = 0;
  }

  return v9;
}

id INIntentSlotValueTransformFromGeographicalFeatures(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          char v8 = INIntentSlotValueTransformFromGeographicalFeature(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    unsigned int v9 = (void *)[v2 copy];
  }
  else
  {
    unsigned int v9 = 0;
  }

  return v9;
}

id INIntentSlotValueTransformFromFiles(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          char v8 = INIntentSlotValueTransformFromFile(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    unsigned int v9 = (void *)[v2 copy];
  }
  else
  {
    unsigned int v9 = 0;
  }

  return v9;
}

__CFString *INStartPhotoPlaybackIntentResponseCodeGetName(unint64_t a1)
{
  if (a1 > 5) {
    return 0;
  }
  else {
    return off_1E5515D30[a1];
  }
}

BOOL _INPBBillPayeeValueReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        id v17 = objc_alloc_init(_INPBValueMetadata);
        if (!PBReaderPlaceMark() || (_INPBValueMetadataReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_35;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setValueMetadata:", v17, 0, 0);
        goto LABEL_31;
      case 3u:
        id v17 = objc_alloc_init(_INPBDataString);
        if (!PBReaderPlaceMark() || !_INPBDataStringReadFrom(v17, a2)) {
          goto LABEL_35;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setNickname:", v17, 0, 0);
        goto LABEL_31;
      case 4u:
        PBReaderReadString();
        id v17 = (_INPBValueMetadata *)objc_claimAutoreleasedReturnValue();
        [a1 setAccountNumber:v17];
        goto LABEL_31;
      case 6u:
        id v17 = objc_alloc_init(_INPBDataString);
        if (PBReaderPlaceMark() && _INPBDataStringReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setOrganizationName:", v17, 0, 0);
LABEL_31:

LABEL_32:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_35:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_32;
    }
  }
}

__CFString *INQueryHomeIntentResponseCodeGetName(unint64_t a1)
{
  if (a1 > 5) {
    return 0;
  }
  else {
    return off_1E5515D60[a1];
  }
}

uint64_t _INPBSetTaskAttributeIntentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        id v17 = objc_alloc_init(_INPBIntentMetadata);
        if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_67;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntentMetadata:", v17, 0, 0);
        goto LABEL_53;
      case 2u:
        id v17 = objc_alloc_init(_INPBTask);
        if (!PBReaderPlaceMark() || (_INPBTaskReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_67;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTargetTask:", v17, 0, 0);
        goto LABEL_53;
      case 3u:
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (2)
        {
          uint64_t v21 = *v3;
          unint64_t v22 = *(void *)(a2 + v21);
          if (v22 == -1 || v22 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
            *(void *)(a2 + v21) = v22 + 1;
            v20 |= (unint64_t)(v23 & 0x7F) << v18;
            if (v23 < 0)
            {
              v18 += 7;
              BOOL v14 = v19++ >= 9;
              if (v14)
              {
                uint64_t v24 = 0;
                goto LABEL_60;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v24 = 0;
        }
        else {
          uint64_t v24 = v20;
        }
LABEL_60:
        [a1 setStatus:v24];
        goto LABEL_54;
      case 5u:
        id v17 = objc_alloc_init(_INPBSpatialEventTrigger);
        if (!PBReaderPlaceMark() || (_INPBSpatialEventTriggerReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_67;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSpatialEventTrigger:", v17, 0, 0);
        goto LABEL_53;
      case 6u:
        id v17 = objc_alloc_init(_INPBTemporalEventTrigger);
        if (!PBReaderPlaceMark() || (_INPBTemporalEventTriggerReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_67;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTemporalEventTrigger:", v17, 0, 0);
        goto LABEL_53;
      case 7u:
        id v17 = objc_alloc_init(_INPBContactEventTrigger);
        if (!PBReaderPlaceMark() || (_INPBContactEventTriggerReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_67;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setContactEventTrigger:", v17, 0, 0);
        goto LABEL_53;
      case 8u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                uint64_t v32 = 0;
                goto LABEL_65;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v32 = 0;
        }
        else {
          uint64_t v32 = v28;
        }
LABEL_65:
        [a1 setPriority:v32];
        goto LABEL_54;
      case 9u:
        id v17 = objc_alloc_init(_INPBDataString);
        if (PBReaderPlaceMark() && _INPBDataStringReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setTaskTitle:", v17, 0, 0);
LABEL_53:

LABEL_54:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_67:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_54;
    }
  }
}

void INImageProxyInjectionUtilitiesInjectProxiesIntoSlotComposer(void *a1, void *a2, void *a3)
{
  uint64_t v30 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v18 = a2;
  id v16 = a3;
  id v17 = (void *)[v5 copyWithZone:0];
  uint64_t v6 = dispatch_group_create();
  int v15 = dispatch_queue_create("com.apple.intents.slot-composer-queue", MEMORY[0x1E4F14430]);
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  uint64_t v7 = [v5 intentSlotDescriptions];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v25 objects:v29 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v26;
    do
    {
      for (uint64_t i = 0; i != v9; ++i)
      {
        if (*(void *)v26 != v10) {
          objc_enumerationMutation(v7);
        }
        unint64_t v12 = *(void **)(*((void *)&v25 + 1) + 8 * i);
        char v13 = [v12 valueForSlotComposer:v5];
        BOOL v14 = v13;
        if (v13 && [v13 conformsToProtocol:&unk_1EDBB20D0])
        {
          dispatch_group_enter(v6);
          v22[0] = MEMORY[0x1E4F143A8];
          v22[1] = 3221225472;
          v22[2] = __INImageProxyInjectionUtilitiesInjectProxiesIntoSlotComposer_block_invoke;
          v22[3] = &unk_1E5515E50;
          v22[4] = v12;
          id v23 = v17;
          uint64_t v24 = v6;
          [v14 _injectProxiesForImages:v18 completion:v22];
        }
      }
      uint64_t v9 = [v7 countByEnumeratingWithState:&v25 objects:v29 count:16];
    }
    while (v9);
  }

  if (v16)
  {
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = __INImageProxyInjectionUtilitiesInjectProxiesIntoSlotComposer_block_invoke_2;
    block[3] = &unk_1E551F740;
    id v21 = v16;
    id v20 = v17;
    dispatch_group_notify(v6, v15, block);
  }
}

void __INImageProxyInjectionUtilitiesInjectProxiesIntoSlotComposer_block_invoke(uint64_t a1, uint64_t a2)
{
  [*(id *)(a1 + 32) setValue:a2 forSlotComposer:*(void *)(a1 + 40)];
  id v3 = *(NSObject **)(a1 + 48);

  dispatch_group_leave(v3);
}

uint64_t __INImageProxyInjectionUtilitiesInjectProxiesIntoSlotComposer_block_invoke_2(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void INImageProxyInjectionUtilitiesInjectProxiesIntoObject(void *a1, void *a2, double a3, double a4)
{
}

void __Block_byref_object_dispose_(uint64_t a1)
{
}

void __INImageProxyInjectionUtilitiesInjectProxiesIntoObjectWithContinuationHandler_block_invoke(uint64_t a1)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = NSString;
  id v3 = [NSNumber numberWithDouble:*(double *)(a1 + 48)];
  uint64_t v4 = [v2 stringWithFormat:@"Timing out after %@ seconds during proxy injection to %@", v3, *(void *)(a1 + 32)];

  id v5 = INSiriLogContextIntents;
  if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 136315394;
    BOOL v14 = "INImageProxyInjectionUtilitiesInjectProxiesIntoObjectWithContinuationHandler_block_invoke";
    __int16 v15 = 2112;
    id v16 = v4;
    _os_log_error_impl(&dword_18CB2F000, v5, OS_LOG_TYPE_ERROR, "%s %@", buf, 0x16u);
  }
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v8 = (void *)MEMORY[0x1E4F28C58];
  uint64_t v11 = *MEMORY[0x1E4F28228];
  unint64_t v12 = v4;
  uint64_t v9 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v12 forKeys:&v11 count:1];
  uint64_t v10 = [v8 errorWithDomain:@"IntentsErrorDomain" code:6007 userInfo:v9];
  (*(void (**)(uint64_t, uint64_t, void *))(v6 + 16))(v6, v7, v10);

  os_activity_scope_leave((os_activity_scope_state_t)(a1 + 56));
}

void __INImageProxyInjectionUtilitiesInjectProxiesIntoObjectWithContinuationHandler_block_invoke_13(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  dispatch_qos_class_t v7 = *(_DWORD *)(a1 + 88);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __INImageProxyInjectionUtilitiesInjectProxiesIntoObjectWithContinuationHandler_block_invoke_2;
  block[3] = &unk_1E5515EC8;
  char v23 = *(unsigned char *)(a1 + 92);
  id v15 = v5;
  uint64_t v8 = *(NSObject **)(a1 + 32);
  id v16 = *(id *)(a1 + 40);
  id v18 = v6;
  id v17 = *(id *)(a1 + 48);
  id v9 = *(id *)(a1 + 56);
  long long v21 = *(_OWORD *)(a1 + 72);
  int v22 = *(_DWORD *)(a1 + 88);
  char v24 = *(unsigned char *)(a1 + 93);
  uint64_t v10 = *(void *)(a1 + 64);
  id v19 = v9;
  uint64_t v20 = v10;
  id v11 = v6;
  id v12 = v5;
  dispatch_block_t v13 = dispatch_block_create_with_qos_class((dispatch_block_flags_t)0, v7, 0, block);
  dispatch_async(v8, v13);
}

void __INImageProxyInjectionUtilitiesInjectProxiesIntoObjectWithContinuationHandler_block_invoke_21(uint64_t a1, void *a2)
{
  id v3 = a2;
  dispatch_qos_class_t v4 = *(_DWORD *)(a1 + 88);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __INImageProxyInjectionUtilitiesInjectProxiesIntoObjectWithContinuationHandler_block_invoke_2_22;
  block[3] = &unk_1E5515F18;
  id v5 = *(NSObject **)(a1 + 32);
  id v10 = *(id *)(a1 + 40);
  id v11 = *(id *)(a1 + 48);
  id v6 = *(id *)(a1 + 56);
  id v12 = v3;
  id v13 = v6;
  uint64_t v14 = *(void *)(a1 + 64);
  long long v15 = *(_OWORD *)(a1 + 72);
  id v7 = v3;
  dispatch_block_t v8 = dispatch_block_create_with_qos_class((dispatch_block_flags_t)0, v4, 0, block);
  dispatch_async(v5, v8);
}

void __INImageProxyInjectionUtilitiesInjectProxiesIntoObjectWithContinuationHandler_block_invoke_2_22(uint64_t a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  if ([*(id *)(a1 + 32) cancelIfNotAlreadyCanceled])
  {
    uint64_t v2 = (void *)INSiriLogContextIntents;
    if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_INFO))
    {
      id v3 = v2;
      dispatch_qos_class_t v4 = (objc_class *)objc_opt_class();
      id v5 = NSStringFromClass(v4);
      int v6 = 136315394;
      id v7 = "INImageProxyInjectionUtilitiesInjectProxiesIntoObjectWithContinuationHandler_block_invoke_2";
      __int16 v8 = 2112;
      id v9 = v5;
      _os_log_impl(&dword_18CB2F000, v3, OS_LOG_TYPE_INFO, "%s Finished image proxy injection into %@", (uint8_t *)&v6, 0x16u);
    }
    (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
    os_activity_scope_leave((os_activity_scope_state_t)(a1 + 72));
  }
}

void __INImageProxyInjectionUtilitiesInjectProxiesIntoObjectWithContinuationHandler_block_invoke_2(uint64_t a1)
{
  uint64_t v35 = *MEMORY[0x1E4F143B8];
  if (!*(unsigned char *)(a1 + 100) && ([*(id *)(a1 + 32) _isSupportedForDonation] & 1) == 0)
  {
    id v18 = INSiriLogContextIntents;
    if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_INFO))
    {
      uint64_t v19 = *(void *)(a1 + 32);
      uint64_t v20 = *(void **)(a1 + 40);
      *(_DWORD *)buf = 136315650;
      uint64_t v30 = "INImageProxyInjectionUtilitiesInjectProxiesIntoObjectWithContinuationHandler_block_invoke_2";
      __int16 v31 = 2112;
      uint64_t v32 = v19;
      __int16 v33 = 2112;
      uint64_t v34 = v20;
      _os_log_impl(&dword_18CB2F000, v18, OS_LOG_TYPE_INFO, "%s Image %@ is being provided outside of SiriKit and is not supported for donation. Removing from the injection target %@", buf, 0x20u);
    }
    long long v21 = *(void (**)(void))(*(void *)(a1 + 56) + 16);
    goto LABEL_19;
  }
  if (([*(id *)(a1 + 48) isCanceled] & 1) != 0
    || (uint64_t v2 = *(void *)(a1 + 64)) != 0
    && !(*(unsigned int (**)(uint64_t, void))(v2 + 16))(v2, *(void *)(a1 + 32)))
  {
    dispatch_qos_class_t v4 = INSiriLogContextIntents;
    if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_INFO))
    {
      uint64_t v15 = *(void *)(a1 + 32);
      id v16 = *(void **)(a1 + 40);
      *(_DWORD *)buf = 136315650;
      uint64_t v30 = "INImageProxyInjectionUtilitiesInjectProxiesIntoObjectWithContinuationHandler_block_invoke";
      __int16 v31 = 2112;
      uint64_t v32 = v15;
      __int16 v33 = 2112;
      uint64_t v34 = v16;
      id v17 = "%s Proxy injection rejected for image %@ into %@, skipping";
LABEL_17:
      _os_log_impl(&dword_18CB2F000, v4, OS_LOG_TYPE_INFO, v17, buf, 0x20u);
    }
LABEL_18:
    long long v21 = *(void (**)(void))(*(void *)(a1 + 56) + 16);
LABEL_19:
    v21();
    return;
  }
  int v3 = [*(id *)(a1 + 32) _isEligibleForProxying];
  dispatch_qos_class_t v4 = INSiriLogContextIntents;
  BOOL v5 = os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_INFO);
  if (!v3)
  {
    if (v5)
    {
      uint64_t v22 = *(void *)(a1 + 32);
      char v23 = *(void **)(a1 + 40);
      *(_DWORD *)buf = 136315650;
      uint64_t v30 = "INImageProxyInjectionUtilitiesInjectProxiesIntoObjectWithContinuationHandler_block_invoke";
      __int16 v31 = 2112;
      uint64_t v32 = v22;
      __int16 v33 = 2112;
      uint64_t v34 = v23;
      id v17 = "%s Image %@ is not eligible for proxying into %@, returning original image";
      goto LABEL_17;
    }
    goto LABEL_18;
  }
  if (v5)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    id v7 = v4;
    __int16 v8 = (objc_class *)objc_opt_class();
    id v9 = NSStringFromClass(v8);
    *(_DWORD *)buf = 136315650;
    uint64_t v30 = "INImageProxyInjectionUtilitiesInjectProxiesIntoObjectWithContinuationHandler_block_invoke";
    __int16 v31 = 2112;
    uint64_t v32 = v6;
    __int16 v33 = 2112;
    uint64_t v34 = v9;
    _os_log_impl(&dword_18CB2F000, v7, OS_LOG_TYPE_INFO, "%s Proxying image %@ for injection into %@", buf, 0x20u);
  }
  objc_msgSend(*(id *)(a1 + 32), "_setPreferredScaledSize:", *(double *)(a1 + 80), *(double *)(a1 + 88));
  uint64_t v10 = *(unsigned int *)(a1 + 96);
  uint64_t v11 = *(unsigned __int8 *)(a1 + 101);
  v24[0] = MEMORY[0x1E4F143A8];
  v24[1] = 3221225472;
  v24[2] = __INImageProxyInjectionUtilitiesInjectProxiesIntoObjectWithContinuationHandler_block_invoke_15;
  v24[3] = &unk_1E5515EA0;
  uint64_t v12 = *(void *)(a1 + 32);
  id v25 = *(id *)(a1 + 40);
  id v26 = *(id *)(a1 + 32);
  id v13 = *(id *)(a1 + 56);
  uint64_t v14 = *(void *)(a1 + 72);
  id v27 = v13;
  uint64_t v28 = v14;
  +[INRemoteImageProxy requestProxyByStoringImage:v12 qualityOfService:v10 scaled:v11 storeType:0 completion:v24];
}

void __INImageProxyInjectionUtilitiesInjectProxiesIntoObjectWithContinuationHandler_block_invoke_15(void *a1, void *a2, void *a3)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    id v7 = INSiriLogContextIntents;
    if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_ERROR))
    {
      uint64_t v18 = a1[4];
      uint64_t v19 = a1[5];
      *(_DWORD *)buf = 136315906;
      id v25 = "INImageProxyInjectionUtilitiesInjectProxiesIntoObjectWithContinuationHandler_block_invoke";
      __int16 v26 = 2114;
      uint64_t v27 = v18;
      __int16 v28 = 2114;
      uint64_t v29 = v19;
      __int16 v30 = 2114;
      id v31 = v6;
      _os_log_error_impl(&dword_18CB2F000, v7, OS_LOG_TYPE_ERROR, "%s Error requesting image proxy during injection to object: %{public}@ image: %{public}@ error: %{public}@", buf, 0x2Au);
    }
    (*(void (**)(void))(a1[6] + 16))();
    objc_storeStrong((id *)(*(void *)(a1[7] + 8) + 40), a3);
  }
  else
  {
    int v8 = [v5 isEqual:a1[5]];
    id v9 = INSiriLogContextIntents;
    if (v8)
    {
      if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_ERROR))
      {
        uint64_t v21 = a1[4];
        uint64_t v20 = a1[5];
        *(_DWORD *)buf = 136315650;
        id v25 = "INImageProxyInjectionUtilitiesInjectProxiesIntoObjectWithContinuationHandler_block_invoke";
        __int16 v26 = 2112;
        uint64_t v27 = v20;
        __int16 v28 = 2112;
        uint64_t v29 = v21;
        _os_log_error_impl(&dword_18CB2F000, v9, OS_LOG_TYPE_ERROR, "%s Failed to proxy image %@ for injection to %@ due to proxy loop, skipping", buf, 0x20u);
      }
      [v5 purgeStoredImageWithCompletion:0];
      (*(void (**)(void))(a1[6] + 16))();
      uint64_t v10 = (void *)MEMORY[0x1E4F28C58];
      uint64_t v11 = [NSString stringWithFormat:@"Attempted to proxy-loop the image %@ in %@", a1[5], a1[4], *MEMORY[0x1E4F28228]];
      char v23 = v11;
      uint64_t v12 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v23 forKeys:&v22 count:1];
      uint64_t v13 = [v10 errorWithDomain:@"IntentsErrorDomain" code:6005 userInfo:v12];
      uint64_t v14 = *(void *)(a1[7] + 8);
      uint64_t v15 = *(void **)(v14 + 40);
      *(void *)(v14 + 40) = v13;
    }
    else
    {
      if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_INFO))
      {
        uint64_t v17 = a1[4];
        uint64_t v16 = a1[5];
        *(_DWORD *)buf = 136315650;
        id v25 = "INImageProxyInjectionUtilitiesInjectProxiesIntoObjectWithContinuationHandler_block_invoke";
        __int16 v26 = 2112;
        uint64_t v27 = v16;
        __int16 v28 = 2112;
        uint64_t v29 = v17;
        _os_log_impl(&dword_18CB2F000, v9, OS_LOG_TYPE_INFO, "%s Successfully proxied image %@, injecting into %@", buf, 0x20u);
      }
      (*(void (**)(void))(a1[6] + 16))();
    }
  }
}

id INTrimToKeyImage(void *a1)
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  dispatch_semaphore_t v2 = dispatch_semaphore_create(0);
  uint64_t v16 = 0;
  uint64_t v17 = &v16;
  uint64_t v18 = 0x3032000000;
  uint64_t v19 = __Block_byref_object_copy_;
  uint64_t v20 = __Block_byref_object_dispose_;
  id v21 = 0;
  int v3 = [v1 _keyImage];
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 3221225472;
  void v13[2] = __INTrimToKeyImage_block_invoke;
  v13[3] = &unk_1E5515F68;
  id v4 = v3;
  id v14 = v4;
  id v15 = 0;
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  void v10[2] = __INTrimToKeyImage_block_invoke_2;
  v10[3] = &unk_1E5515F90;
  uint64_t v12 = &v16;
  id v5 = v2;
  uint64_t v11 = v5;
  [v1 _injectProxiesForImages:v13 completion:v10];
  dispatch_time_t v6 = dispatch_time(0, 1000000000);
  if (dispatch_semaphore_wait(v5, v6))
  {
    id v7 = INSiriLogContextIntents;
    if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315650;
      char v23 = "INTrimToKeyImage";
      __int16 v24 = 2112;
      id v25 = &unk_1EDBA79C0;
      __int16 v26 = 2112;
      id v27 = v1;
      _os_log_error_impl(&dword_18CB2F000, v7, OS_LOG_TYPE_ERROR, "%s Timing out after %@ seconds during trimming to key image of %@", buf, 0x20u);
    }
  }
  id v8 = (id)v17[5];

  _Block_object_dispose(&v16, 8);

  return v8;
}

void sub_18CB8D050(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __INTrimToKeyImage_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v7 = a2;
  id v5 = a3;
  if (([v7 isEqual:*(void *)(a1 + 32)] & 1) != 0
    || [v7 isEqual:*(void *)(a1 + 40)])
  {
    id v6 = v7;
  }
  else
  {
    id v6 = 0;
  }
  ((void (**)(id, id))v5)[2](v5, v6);
}

void __INTrimToKeyImage_block_invoke_2(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  id v4 = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

id INExtractKeyImage(void *a1, void *a2)
{
  uint64_t v37 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  dispatch_semaphore_t v4 = dispatch_semaphore_create(0);
  uint64_t v25 = 0;
  __int16 v26 = &v25;
  uint64_t v27 = 0x3032000000;
  uint64_t v28 = __Block_byref_object_copy_;
  uint64_t v29 = __Block_byref_object_dispose_;
  id v30 = 0;
  id v5 = [v3 _keyImage];
  uint64_t v19 = 0;
  uint64_t v20 = &v19;
  uint64_t v21 = 0x3032000000;
  uint64_t v22 = __Block_byref_object_copy_;
  char v23 = __Block_byref_object_dispose_;
  id v24 = 0;
  v15[0] = MEMORY[0x1E4F143A8];
  v15[1] = 3221225472;
  v15[2] = __INExtractKeyImage_block_invoke;
  v15[3] = &unk_1E5515FB8;
  id v6 = v5;
  id v16 = v6;
  id v17 = 0;
  uint64_t v18 = &v19;
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 3221225472;
  void v12[2] = __INExtractKeyImage_block_invoke_2;
  v12[3] = &unk_1E5515F90;
  id v14 = &v25;
  id v7 = v4;
  uint64_t v13 = v7;
  [v3 _injectProxiesForImages:v15 completion:v12];
  dispatch_time_t v8 = dispatch_time(0, 1000000000);
  if (dispatch_semaphore_wait(v7, v8))
  {
    id v9 = INSiriLogContextIntents;
    if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315650;
      uint64_t v32 = "INExtractKeyImage";
      __int16 v33 = 2112;
      uint64_t v34 = &unk_1EDBA79C0;
      __int16 v35 = 2112;
      id v36 = v3;
      _os_log_error_impl(&dword_18CB2F000, v9, OS_LOG_TYPE_ERROR, "%s Timing out after %@ seconds during key image extraction from %@", buf, 0x20u);
    }
  }
  *a2 = (id) v20[5];
  id v10 = (id)v26[5];

  _Block_object_dispose(&v19, 8);
  _Block_object_dispose(&v25, 8);

  return v10;
}

void sub_18CB8D430(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

void __INExtractKeyImage_block_invoke(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (([v5 isEqual:a1[4]] & 1) == 0 && !objc_msgSend(v5, "isEqual:", a1[5]))
  {
    v6[2](v6, v5);
    goto LABEL_15;
  }
  if (!*(void *)(*(void *)(a1[6] + 8) + 40))
  {
    id v7 = objc_alloc_init(INKeyImageExtraction);
    uint64_t v8 = *(void *)(a1[6] + 8);
    id v9 = *(void **)(v8 + 40);
    *(void *)(v8 + 40) = v7;
  }
  if ([v5 isEqual:a1[4]])
  {
    uint64_t v10 = 0;
LABEL_9:
    [*(id *)(*(void *)(a1[6] + 8) + 40) _setImageTypeToStore:v10];
    goto LABEL_10;
  }
  if ([v5 isEqual:a1[5]])
  {
    uint64_t v10 = 1;
    goto LABEL_9;
  }
LABEL_10:
  uint64_t v11 = *(void *)(*(void *)(a1[6] + 8) + 40);
  uint64_t v15 = 0;
  uint64_t v12 = +[INRemoteImageProxy proxyImageSynchronously:v5 usingService:v11 error:&v15];
  uint64_t v13 = (void *)v12;
  if (v15) {
    id v14 = v5;
  }
  else {
    id v14 = (id)v12;
  }
  v6[2](v6, v14);

LABEL_15:
}

void __INExtractKeyImage_block_invoke_2(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  id v4 = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

id INInsertKeyImageExtraction(void *a1, void *a2)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  uint64_t v17 = 0;
  uint64_t v18 = &v17;
  uint64_t v19 = 0x3032000000;
  uint64_t v20 = __Block_byref_object_copy_;
  uint64_t v21 = __Block_byref_object_dispose_;
  id v22 = 0;
  dispatch_semaphore_t v5 = dispatch_semaphore_create(0);
  v15[0] = MEMORY[0x1E4F143A8];
  v15[1] = 3221225472;
  v15[2] = __INInsertKeyImageExtraction_block_invoke;
  v15[3] = &unk_1E5515FE0;
  id v6 = v4;
  id v16 = v6;
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 3221225472;
  void v12[2] = __INInsertKeyImageExtraction_block_invoke_2;
  v12[3] = &unk_1E5515F90;
  id v14 = &v17;
  id v7 = v5;
  uint64_t v13 = v7;
  [v3 _injectProxiesForImages:v15 completion:v12];
  dispatch_time_t v8 = dispatch_time(0, 1000000000);
  if (dispatch_semaphore_wait(v7, v8))
  {
    id v9 = INSiriLogContextIntents;
    if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315906;
      id v24 = "INInsertKeyImageExtraction";
      __int16 v25 = 2112;
      __int16 v26 = &unk_1EDBA79C0;
      __int16 v27 = 2112;
      id v28 = v6;
      __int16 v29 = 2112;
      id v30 = v3;
      _os_log_error_impl(&dword_18CB2F000, v9, OS_LOG_TYPE_ERROR, "%s Timing out after %@ seconds during insertion of key image extraction %@ to %@", buf, 0x2Au);
    }
  }
  id v10 = (id)v18[5];

  _Block_object_dispose(&v17, 8);

  return v10;
}

void sub_18CB8D864(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __INInsertKeyImageExtraction_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v11 = a2;
  dispatch_semaphore_t v5 = a3;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0
    && ([v11 _storageServiceIdentifier],
        id v6 = objc_claimAutoreleasedReturnValue(),
        [*(id *)(a1 + 32) serviceIdentifier],
        id v7 = objc_claimAutoreleasedReturnValue(),
        int v8 = [v6 isEqualToString:v7],
        v7,
        v6,
        v8))
  {
    id v9 = [v11 retrieveProxiedImageSynchronouslyUsingService:*(void *)(a1 + 32) error:0];
    if (v9) {
      id v10 = v9;
    }
    else {
      id v10 = v11;
    }
    ((void (**)(id, id))v5)[2](v5, v10);
  }
  else
  {
    ((void (**)(id, id))v5)[2](v5, v11);
  }
}

void __INInsertKeyImageExtraction_block_invoke_2(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  id v4 = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

BOOL _INPBConfigureHomeIntentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  dispatch_semaphore_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 1) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        uint64_t v17 = objc_alloc_init(_INPBHomeEntity);
        if (!PBReaderPlaceMark() || !_INPBHomeEntityReadFrom(v17, a2)) {
          goto LABEL_32;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addEntities:", v17, 0, 0);
        }
LABEL_27:

        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_29:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    uint64_t v17 = objc_alloc_init(_INPBIntentMetadata);
    if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v17, a2) & 1) == 0)
    {
LABEL_32:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setIntentMetadata:", v17, 0, 0);
    goto LABEL_27;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _INPBPayloadNeedsValueReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  dispatch_semaphore_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = objc_alloc_init(_INPBSelectionItem);
        if (!PBReaderPlaceMark() || !_INPBSelectionItemReadFrom(v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addPromptItems:", v17, 0, 0);
        }
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

INPaymentAccount *INIntentSlotValueTransformFromFinancialAccountValue(void *a1)
{
  id v1 = a1;
  dispatch_semaphore_t v2 = v1;
  if (v1)
  {
    id v3 = [v1 valueMetadata];
    INPrivacyEntitlementValidateValueMetadata(v3);

    uint64_t v19 = [INPaymentAccount alloc];
    uint64_t v20 = [v2 accountNickname];
    uint64_t v4 = INIntentSlotValueTransformFromDataString(v20);
    uint64_t v18 = (void *)v4;
    dispatch_semaphore_t v5 = [v2 accountNumber];
    int v6 = [v2 hasAccountType];
    uint64_t v7 = [v2 accountType] - 1;
    if (v7 <= 6) {
      uint64_t v8 = v7 + 1;
    }
    else {
      uint64_t v8 = 0;
    }
    if (v6) {
      uint64_t v9 = v8;
    }
    else {
      uint64_t v9 = 0;
    }
    unint64_t v10 = [v2 organizationName];
    uint64_t v11 = INIntentSlotValueTransformFromDataString(v10);
    unint64_t v12 = [v2 balance];
    char v13 = INIntentSlotValueTransformFromBalanceAmountValue(v12);
    id v14 = [v2 secondaryBalance];
    int v15 = INIntentSlotValueTransformFromBalanceAmountValue(v14);
    id v16 = [(INPaymentAccount *)v19 initWithNickname:v4 number:v5 accountType:v9 organizationName:v11 balance:v13 secondaryBalance:v15];
  }
  else
  {
    id v16 = 0;
  }

  return v16;
}

_INPBFinancialAccountValue *INIntentSlotValueTransformToFinancialAccountValue(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    dispatch_semaphore_t v2 = objc_alloc_init(_INPBFinancialAccountValue);
    id v3 = [v1 nickname];
    uint64_t v4 = INIntentSlotValueTransformToDataString(v3);
    [(_INPBFinancialAccountValue *)v2 setAccountNickname:v4];

    dispatch_semaphore_t v5 = [v1 accountNumber];
    [(_INPBFinancialAccountValue *)v2 setAccountNumber:v5];

    unint64_t v6 = [v1 accountType] - 1;
    if (v6 < 7) {
      uint64_t v7 = (v6 + 1);
    }
    else {
      uint64_t v7 = 0x7FFFFFFFLL;
    }
    [(_INPBFinancialAccountValue *)v2 setAccountType:v7];
    uint64_t v8 = [v1 organizationName];
    uint64_t v9 = INIntentSlotValueTransformToDataString(v8);
    [(_INPBFinancialAccountValue *)v2 setOrganizationName:v9];

    unint64_t v10 = [v1 balance];
    uint64_t v11 = INIntentSlotValueTransformToBalanceAmountValue(v10);
    [(_INPBFinancialAccountValue *)v2 setBalance:v11];

    unint64_t v12 = [v1 secondaryBalance];

    char v13 = INIntentSlotValueTransformToBalanceAmountValue(v12);
    [(_INPBFinancialAccountValue *)v2 setSecondaryBalance:v13];
  }
  else
  {
    dispatch_semaphore_t v2 = 0;
  }

  return v2;
}

id INIntentSlotValueTransformFromFinancialAccountValues(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    dispatch_semaphore_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          uint64_t v8 = INIntentSlotValueTransformFromFinancialAccountValue(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    uint64_t v9 = (void *)[v2 copy];
  }
  else
  {
    uint64_t v9 = 0;
  }

  return v9;
}

id INIntentSlotValueTransformToFinancialAccountValues(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    dispatch_semaphore_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          uint64_t v8 = INIntentSlotValueTransformToFinancialAccountValue(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    uint64_t v9 = (void *)[v2 copy];
  }
  else
  {
    uint64_t v9 = 0;
  }

  return v9;
}

_INPBFinancialAccountValue *INIntentSlotValueRedactedFinancialAccountValueFromFinancialAccountValue(void *a1, uint64_t a2, void *a3)
{
  id v5 = a1;
  id v6 = a3;
  uint64_t v7 = [v5 valueMetadata];
  uint64_t v8 = INPrivacyEntitlementOptionsForValueMetadata(v7);

  if ((v8 & a2) != 0)
  {
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v9 = objc_alloc_init(_INPBFinancialAccountValue);
    unint64_t v10 = [v5 accountNickname];
    [(_INPBFinancialAccountValue *)v9 setAccountNickname:v10];

    long long v11 = [v5 accountNumber];
    [(_INPBFinancialAccountValue *)v9 setAccountNumber:v11];

    -[_INPBFinancialAccountValue setAccountType:](v9, "setAccountType:", [v5 accountType]);
    long long v12 = [v5 organizationName];
    [(_INPBFinancialAccountValue *)v9 setOrganizationName:v12];

    long long v13 = [v5 balance];
    long long v14 = INIntentSlotValueRedactedBalanceAmountValueFromBalanceAmountValue(v13, a2, v6);
    [(_INPBFinancialAccountValue *)v9 setBalance:v14];

    int v15 = [v5 secondaryBalance];
    uint64_t v16 = INIntentSlotValueRedactedBalanceAmountValueFromBalanceAmountValue(v15, a2, v6);
    [(_INPBFinancialAccountValue *)v9 setSecondaryBalance:v16];
  }

  return v9;
}

__CFString *INActivateCarSignalIntentResponseCodeGetName(unint64_t a1)
{
  if (a1 > 5) {
    return 0;
  }
  else {
    return off_1E5516000[a1];
  }
}

BOOL _INPBPaymentMethodListReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 1) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        uint64_t v17 = objc_alloc_init(_INPBCondition);
        if (!PBReaderPlaceMark() || (_INPBConditionReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_32;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCondition:", v17, 0, 0);
LABEL_27:

        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_29:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    uint64_t v17 = objc_alloc_init(_INPBPaymentMethod);
    if (!PBReaderPlaceMark() || !_INPBPaymentMethodReadFrom(v17, a2))
    {
LABEL_32:

      return 0;
    }
    PBReaderRecallMark();
    if (v17) {
      objc_msgSend(a1, "addPaymentMethods:", v17, 0, 0);
    }
    goto LABEL_27;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

__CFString *INSetMessageAttributeIntentResponseCodeGetName(unint64_t a1)
{
  if (a1 > 7) {
    return 0;
  }
  else {
    return off_1E5516030[a1];
  }
}

BOOL _INPBHomeContentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 1) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        uint64_t v17 = objc_alloc_init(_INPBHomeAttribute);
        if (!PBReaderPlaceMark() || !_INPBHomeAttributeReadFrom(v17, a2)) {
          goto LABEL_32;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addActions:", v17, 0, 0);
        }
LABEL_27:

        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_29:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    uint64_t v17 = objc_alloc_init(_INPBHomeFilter);
    if (!PBReaderPlaceMark() || (_INPBHomeFilterReadFrom(v17, a2) & 1) == 0)
    {
LABEL_32:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setFilter:", v17, 0, 0);
    goto LABEL_27;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _INPBHomeFilterReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        uint64_t v17 = (_INPBDataString *)objc_claimAutoreleasedReturnValue();
        if (v17) {
          [a1 addEntityIdentifiers:v17];
        }
        goto LABEL_78;
      case 2u:
        uint64_t v17 = objc_alloc_init(_INPBDataString);
        if (!PBReaderPlaceMark() || !_INPBDataStringReadFrom(v17, a2)) {
          goto LABEL_136;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setHome:", v17, 0, 0);
        goto LABEL_78;
      case 3u:
        uint64_t v17 = objc_alloc_init(_INPBDataString);
        if (!PBReaderPlaceMark() || !_INPBDataStringReadFrom(v17, a2)) {
          goto LABEL_136;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setScene:", v17, 0, 0);
        goto LABEL_78;
      case 4u:
        uint64_t v17 = objc_alloc_init(_INPBDataString);
        if (!PBReaderPlaceMark() || !_INPBDataStringReadFrom(v17, a2)) {
          goto LABEL_136;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setZone:", v17, 0, 0);
        goto LABEL_78;
      case 5u:
        uint64_t v17 = objc_alloc_init(_INPBDataString);
        if (!PBReaderPlaceMark() || !_INPBDataStringReadFrom(v17, a2)) {
          goto LABEL_136;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setGroup:", v17, 0, 0);
        goto LABEL_78;
      case 6u:
        uint64_t v17 = objc_alloc_init(_INPBDataString);
        if (!PBReaderPlaceMark() || !_INPBDataStringReadFrom(v17, a2)) {
          goto LABEL_136;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRoom:", v17, 0, 0);
        goto LABEL_78;
      case 7u:
        uint64_t v17 = objc_alloc_init(_INPBDataString);
        if (!PBReaderPlaceMark() || !_INPBDataStringReadFrom(v17, a2)) {
          goto LABEL_136;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAccessory:", v17, 0, 0);
        goto LABEL_78;
      case 8u:
        uint64_t v17 = objc_alloc_init(_INPBDataString);
        if (!PBReaderPlaceMark() || !_INPBDataStringReadFrom(v17, a2)) {
          goto LABEL_136;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setService:", v17, 0, 0);
        goto LABEL_78;
      case 9u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_106;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v21;
        }
LABEL_106:
        [a1 setEntityType:v25];
        goto LABEL_79;
      case 0xAu:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                uint64_t v32 = 0;
                goto LABEL_111;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v32 = 0;
        }
        else {
          uint64_t v32 = v28;
        }
LABEL_111:
        [a1 setServiceType:v32];
        goto LABEL_79;
      case 0xBu:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        while (2)
        {
          uint64_t v36 = *v3;
          unint64_t v37 = *(void *)(a2 + v36);
          if (v37 == -1 || v37 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v38 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
            *(void *)(a2 + v36) = v37 + 1;
            v35 |= (unint64_t)(v38 & 0x7F) << v33;
            if (v38 < 0)
            {
              v33 += 7;
              BOOL v14 = v34++ >= 9;
              if (v14)
              {
                uint64_t v39 = 0;
                goto LABEL_116;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v39 = 0;
        }
        else {
          uint64_t v39 = v35;
        }
LABEL_116:
        [a1 setSubServiceType:v39];
        goto LABEL_79;
      case 0xCu:
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        while (2)
        {
          uint64_t v43 = *v3;
          unint64_t v44 = *(void *)(a2 + v43);
          if (v44 == -1 || v44 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v45 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
            *(void *)(a2 + v43) = v44 + 1;
            v42 |= (unint64_t)(v45 & 0x7F) << v40;
            if (v45 < 0)
            {
              v40 += 7;
              BOOL v14 = v41++ >= 9;
              if (v14)
              {
                uint64_t v42 = 0;
                goto LABEL_120;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v42 = 0;
        }
LABEL_120:
        [a1 setIsExcludeFilter:v42 != 0];
        goto LABEL_79;
      case 0xDu:
        uint64_t v17 = objc_alloc_init(_INPBDataString);
        if (!PBReaderPlaceMark() || !_INPBDataStringReadFrom(v17, a2)) {
          goto LABEL_136;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEntityName:", v17, 0, 0);
        goto LABEL_78;
      case 0xEu:
        uint64_t v17 = objc_alloc_init(_INPBDataString);
        if (PBReaderPlaceMark() && _INPBDataStringReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setOuterDeviceName:", v17, 0, 0);
LABEL_78:

LABEL_79:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_136:

        return 0;
      case 0xFu:
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v48 = 0;
        while (2)
        {
          uint64_t v49 = *v3;
          unint64_t v50 = *(void *)(a2 + v49);
          if (v50 == -1 || v50 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(a2 + *v7) + v50);
            *(void *)(a2 + v49) = v50 + 1;
            v48 |= (unint64_t)(v51 & 0x7F) << v46;
            if (v51 < 0)
            {
              v46 += 7;
              BOOL v14 = v47++ >= 9;
              if (v14)
              {
                uint64_t v52 = 0;
                goto LABEL_125;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v52 = 0;
        }
        else {
          uint64_t v52 = v48;
        }
LABEL_125:
        [a1 setOuterDeviceType:v52];
        goto LABEL_79;
      case 0x10u:
        char v53 = 0;
        unsigned int v54 = 0;
        uint64_t v55 = 0;
        while (2)
        {
          uint64_t v56 = *v3;
          unint64_t v57 = *(void *)(a2 + v56);
          if (v57 == -1 || v57 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v58 = *(unsigned char *)(*(void *)(a2 + *v7) + v57);
            *(void *)(a2 + v56) = v57 + 1;
            v55 |= (unint64_t)(v58 & 0x7F) << v53;
            if (v58 < 0)
            {
              v53 += 7;
              BOOL v14 = v54++ >= 9;
              if (v14)
              {
                uint64_t v59 = 0;
                goto LABEL_130;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v59 = 0;
        }
        else {
          uint64_t v59 = v55;
        }
LABEL_130:
        [a1 setDeviceType:v59];
        goto LABEL_79;
      case 0x11u:
        char v60 = 0;
        unsigned int v61 = 0;
        uint64_t v62 = 0;
        while (2)
        {
          uint64_t v63 = *v3;
          unint64_t v64 = *(void *)(a2 + v63);
          if (v64 == -1 || v64 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v65 = *(unsigned char *)(*(void *)(a2 + *v7) + v64);
            *(void *)(a2 + v63) = v64 + 1;
            v62 |= (unint64_t)(v65 & 0x7F) << v60;
            if (v65 < 0)
            {
              v60 += 7;
              BOOL v14 = v61++ >= 9;
              if (v14)
              {
                uint64_t v62 = 0;
                goto LABEL_134;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v62 = 0;
        }
LABEL_134:
        [a1 setHasAllQuantifier:v62 != 0];
        goto LABEL_79;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_79;
    }
  }
}

BOOL _INPBRunWorkflowIntentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = objc_alloc_init(_INPBIntentMetadata);
        if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntentMetadata:", v17, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    uint64_t v17 = objc_alloc_init(_INPBDataString);
    if (!PBReaderPlaceMark() || !_INPBDataStringReadFrom(v17, a2))
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setWorkflow:", v17, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

id INCounterpartIdentifiersForApplicationRecord(void *a1)
{
  id v1 = (objc_class *)MEMORY[0x1E4F1CA80];
  id v2 = a1;
  id v3 = [v1 alloc];
  uint64_t v4 = [v2 counterpartIdentifiers];

  if (v4) {
    id v5 = v4;
  }
  else {
    id v5 = (void *)MEMORY[0x1E4F1CBF0];
  }
  id v6 = (void *)[v3 initWithArray:v5];

  return v6;
}

void sub_18CB9A3E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
}

void sub_18CB9A4FC(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(v1 + 16))(v1);
  _Unwind_Resume(a1);
}

uint64_t INCancelRideIntentResponseCodeGetName(unint64_t a1)
{
  if (a1 > 3) {
    return 0;
  }
  else {
    return (uint64_t)*(&off_1E55163B8 + a1);
  }
}

BOOL INMenstruationValueTypeHasBackingType(unint64_t a1)
{
  return a1 < 4;
}

unint64_t INMenstruationValueTypeGetBackingType(unint64_t result)
{
  if (result >= 4) {
    return 0x7FFFFFFFLL;
  }
  else {
    return result;
  }
}

uint64_t INMenstruationValueTypeGetFacadeType(int a1, int a2)
{
  uint64_t v2 = (a2 - 1);
  if (v2 <= 2) {
    uint64_t v3 = v2 + 1;
  }
  else {
    uint64_t v3 = 0;
  }
  if (a1) {
    return v3;
  }
  else {
    return 0;
  }
}

__CFString *INMenstruationValueTypeGetName(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2) {
    return @"unknown";
  }
  else {
    return *(&off_1E55163D8 + a1 - 1);
  }
}

uint64_t INMenstruationValueTypeWithString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"light"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"medium"])
  {
    uint64_t v2 = 2;
  }
  else if ([v1 isEqualToString:@"heavy"])
  {
    uint64_t v2 = 3;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INMenstruationValueTypeGetLocalizedName(uint64_t a1, void *a2)
{
  id v3 = a2;
  switch(a1)
  {
    case 3:
      uint64_t v4 = @"heavy";
      goto LABEL_7;
    case 2:
      uint64_t v4 = @"medium";
      goto LABEL_7;
    case 1:
      uint64_t v4 = @"light";
LABEL_7:
      id v5 = INLocalizedStringWithLocalizer(v4, v4, v3);
      goto LABEL_9;
  }
  id v5 = 0;
LABEL_9:

  return v5;
}

uint64_t _INPBShareFileIntentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t v17 = objc_alloc_init(_INPBIntentMetadata);
        if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_47;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntentMetadata:", v17, 0, 0);
        goto LABEL_39;
      case 2u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_44;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v21;
        }
LABEL_44:
        objc_msgSend(a1, "setShareMode:", v25, v26, v27);
        goto LABEL_45;
      case 3u:
        uint64_t v17 = objc_alloc_init(_INPBString);
        uint64_t v26 = 0;
        uint64_t v27 = 0;
        if (!PBReaderPlaceMark() || !_INPBStringReadFrom(v17, a2)) {
          goto LABEL_47;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addEntityName:", v17, 0, 0);
        }
        goto LABEL_39;
      case 4u:
        uint64_t v17 = objc_alloc_init(_INPBShareDestination);
        uint64_t v26 = 0;
        uint64_t v27 = 0;
        if (PBReaderPlaceMark() && _INPBShareDestinationReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          if (v17) {
            objc_msgSend(a1, "addRecipients:", v17, 0, 0);
          }
LABEL_39:

LABEL_45:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_47:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_45;
    }
  }
}

BOOL _INPBAppBuildReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = objc_alloc_init(_INPBAppId);
        if (!PBReaderPlaceMark() || (_INPBAppIdReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAppId:", v17, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    uint64_t v17 = objc_alloc_init(_INPBBuildId);
    if (!PBReaderPlaceMark() || !_INPBBuildIdReadFrom(v17, a2))
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setBuildId:", v17, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

id _INImageSizeProviderClass()
{
  uint64_t v5 = 0;
  id v6 = &v5;
  uint64_t v7 = 0x2050000000;
  dispatch_queue_t v0 = (void *)getINUIImageSizeProviderClass_softClass;
  uint64_t v8 = getINUIImageSizeProviderClass_softClass;
  if (!getINUIImageSizeProviderClass_softClass)
  {
    v4[0] = MEMORY[0x1E4F143A8];
    v4[1] = 3221225472;
    v4[2] = __getINUIImageSizeProviderClass_block_invoke;
    v4[3] = &unk_1E5520EB8;
    v4[4] = &v5;
    __getINUIImageSizeProviderClass_block_invoke((uint64_t)v4);
    dispatch_queue_t v0 = (void *)v6[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v5, 8);
  if ([v1 conformsToProtocol:&unk_1EDC31358]) {
    id v2 = v1;
  }
  else {
    id v2 = 0;
  }

  return v2;
}

void sub_18CB9DFB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getINUIImageSizeProviderClass_block_invoke(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!IntentsUILibraryCore_frameworkLibrary)
  {
    v4[1] = MEMORY[0x1E4F143A8];
    v4[2] = 3221225472;
    v4[3] = __IntentsUILibraryCore_block_invoke;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    void v4[5] = v4;
    long long v5 = xmmword_1E5516408;
    uint64_t v6 = 0;
    IntentsUILibraryCore_frameworkLibrary = _sl_dlopen();
    id v2 = (void *)v4[0];
    if (!IntentsUILibraryCore_frameworkLibrary)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("INUIImageSizeProvider");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    id v2 = (void *)abort_report_np();
LABEL_8:
    free(v2);
  }
  getINUIImageSizeProviderClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __IntentsUILibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  IntentsUILibraryCore_frameworkLibrary = result;
  return result;
}

void sub_18CB9E414(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getWFOnScreenContentNodeClass_block_invoke(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!VoiceShortcutClientLibraryCore_frameworkLibrary)
  {
    v4[1] = MEMORY[0x1E4F143A8];
    v4[2] = 3221225472;
    v4[3] = __VoiceShortcutClientLibraryCore_block_invoke;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    void v4[5] = v4;
    long long v5 = xmmword_1E5516420;
    uint64_t v6 = 0;
    VoiceShortcutClientLibraryCore_frameworkLibrary = _sl_dlopen();
    id v2 = (void *)v4[0];
    if (!VoiceShortcutClientLibraryCore_frameworkLibrary)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("WFOnScreenContentNode");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    id v2 = (void *)abort_report_np();
LABEL_8:
    free(v2);
  }
  getWFOnScreenContentNodeClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __VoiceShortcutClientLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  VoiceShortcutClientLibraryCore_frameworkLibrary = result;
  return result;
}

BOOL _INPBDataStringListReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  long long v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 1) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        uint64_t v17 = objc_alloc_init(_INPBCondition);
        if (!PBReaderPlaceMark() || (_INPBConditionReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_32;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setConditionType:", v17, 0, 0);
LABEL_27:

        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_29:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    uint64_t v17 = objc_alloc_init(_INPBDataString);
    if (!PBReaderPlaceMark() || !_INPBDataStringReadFrom(v17, a2))
    {
LABEL_32:

      return 0;
    }
    PBReaderRecallMark();
    if (v17) {
      objc_msgSend(a1, "addDataString:", v17, 0, 0);
    }
    goto LABEL_27;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _INPBDoubleReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  long long v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = objc_alloc_init(_INPBDoubleValue);
        if (!PBReaderPlaceMark() || !_INPBDoubleValueReadFrom(v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addValue:", v17, 0, 0);
        }
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void INIssueSandboxExtensionToProcess(void *a1, long long *a2)
{
  v3[0] = MEMORY[0x1E4F143A8];
  v3[1] = 3221225472;
  v3[2] = __INIssueSandboxExtensionToProcess_block_invoke;
  v3[3] = &__block_descriptor_64_e15__16__0__NSURL_8l;
  long long v2 = a2[1];
  long long v4 = *a2;
  long long v5 = v2;
  _INIssueSandboxExtensionWithTokenGeneratorBlock(a1, v3);
}

uint64_t __INIssueSandboxExtensionToProcess_block_invoke(uint64_t a1, void *a2)
{
  id v2 = [a2 path];
  [v2 fileSystemRepresentation];
  uint64_t v3 = sandbox_extension_issue_file_to_process();

  return v3;
}

void _INIssueSandboxExtensionWithTokenGeneratorBlock(void *a1, void *a2)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  long long v4 = a2;
  if ([v3 isFileURL])
  {
    long long v5 = (const char *)v4[2](v4, v3);
    if (v5)
    {
      uint64_t v6 = [MEMORY[0x1E4F1C9B8] dataWithBytesNoCopy:v5 length:strlen(v5) + 1];
      MEMORY[0x192F97DE0](v3, v6);
    }
    else
    {
      uint64_t v7 = (void *)INSiriLogContextIntents;
      if (!os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_ERROR)) {
        goto LABEL_6;
      }
      uint64_t v6 = v7;
      char v8 = __error();
      unsigned int v9 = strerror(*v8);
      int v10 = 136315650;
      uint64_t v11 = "_INIssueSandboxExtensionWithTokenGeneratorBlock";
      __int16 v12 = 2112;
      id v13 = v3;
      __int16 v14 = 2080;
      int v15 = v9;
      _os_log_error_impl(&dword_18CB2F000, v6, OS_LOG_TYPE_ERROR, "%s Could not create sandbox read extension for file URL %@, error: %s", (uint8_t *)&v10, 0x20u);
    }
  }
LABEL_6:
}

void INIssueSandboxExtensionsForFileURLEnumerableToProcess(void *a1, long long *a2)
{
  id v3 = a1;
  uint64_t v4 = objc_opt_class();
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 3221225472;
  v6[2] = __INIssueSandboxExtensionsForFileURLEnumerableToProcess_block_invoke;
  v6[3] = &__block_descriptor_64_e15_B16__0__NSURL_8l;
  long long v5 = a2[1];
  long long v7 = *a2;
  long long v8 = v5;
  objc_msgSend(v3, "_intents_enumerateObjectsOfClass:withBlock:", v4, v6);
}

uint64_t __INIssueSandboxExtensionsForFileURLEnumerableToProcess_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [v3 isFileURL];
  if (v4)
  {
    long long v5 = *(_OWORD *)(a1 + 48);
    long long v8 = *(_OWORD *)(a1 + 32);
    long long v9 = v5;
    v7[0] = MEMORY[0x1E4F143A8];
    v7[1] = 3221225472;
    v7[2] = __INIssueSandboxExtensionToProcess_block_invoke;
    v7[3] = &__block_descriptor_64_e15__16__0__NSURL_8l;
    _INIssueSandboxExtensionWithTokenGeneratorBlock(v3, v7);
  }

  return v4;
}

void INIssueSandboxExtensionsForFileURLEnumerable(void *a1)
{
  id v1 = a1;
  objc_msgSend(v1, "_intents_enumerateObjectsOfClass:withBlock:", objc_opt_class(), &__block_literal_global_3516);
}

uint64_t __INIssueSandboxExtensionsForFileURLEnumerable_block_invoke(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = [v2 isFileURL];
  if (v3) {
    _INIssueSandboxExtensionWithTokenGeneratorBlock(v2, &__block_literal_global_5);
  }

  return v3;
}

BOOL INNotebookItemTypeHasBackingType(unint64_t a1)
{
  return a1 < 4;
}

uint64_t INNotebookItemTypeGetBackingType(unint64_t a1)
{
  if (a1 >= 4) {
    return 0x7FFFFFFFLL;
  }
  else {
    return (10 * a1);
  }
}

uint64_t INNotebookItemTypeGetFacadeType(int a1, int a2)
{
  uint64_t v2 = 3;
  uint64_t v3 = 2;
  if (a2 != 20) {
    uint64_t v3 = a2 == 10;
  }
  if (a2 != 30) {
    uint64_t v2 = v3;
  }
  if (a1) {
    return v2;
  }
  else {
    return 0;
  }
}

__CFString *INNotebookItemTypeGetName(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2) {
    return @"unknown";
  }
  else {
    return off_1E5516478[a1 - 1];
  }
}

uint64_t INNotebookItemTypeWithString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"note"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"taskList"])
  {
    uint64_t v2 = 2;
  }
  else if ([v1 isEqualToString:@"task"])
  {
    uint64_t v2 = 3;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INNotebookItemTypeGetLocalizedName(uint64_t a1, void *a2)
{
  id v3 = a2;
  switch(a1)
  {
    case 3:
      uint64_t v4 = @"task";
      goto LABEL_7;
    case 2:
      uint64_t v4 = @"task list";
      goto LABEL_7;
    case 1:
      uint64_t v4 = @"note";
LABEL_7:
      long long v5 = INLocalizedStringWithLocalizer(v4, v4, v3);
      goto LABEL_9;
  }
  long long v5 = 0;
LABEL_9:

  return v5;
}

id INIntentSchemaGetIntentNames()
{
  if (INIntentSchemaGetIntentNames_onceToken != -1) {
    dispatch_once(&INIntentSchemaGetIntentNames_onceToken, &__block_literal_global_3706);
  }
  dispatch_queue_t v0 = (void *)INIntentSchemaGetIntentNames_list;

  return v0;
}

void __INIntentSchemaGetIntentNames_block_invoke()
{
  dispatch_queue_t v0 = (void *)INIntentSchemaGetIntentNames_list;
  INIntentSchemaGetIntentNames_list = (uint64_t)&unk_1EDBA79E0;
}

id INIntentSchemaGetIntentTypes()
{
  if (INIntentSchemaGetIntentTypes_onceToken != -1) {
    dispatch_once(&INIntentSchemaGetIntentTypes_onceToken, &__block_literal_global_336);
  }
  dispatch_queue_t v0 = (void *)INIntentSchemaGetIntentTypes_list;

  return v0;
}

void __INIntentSchemaGetIntentTypes_block_invoke()
{
  dispatch_queue_t v0 = (void *)INIntentSchemaGetIntentTypes_list;
  INIntentSchemaGetIntentTypes_list = (uint64_t)&unk_1EDBA79F8;
}

id INAlarmDomainGetIntentDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INAlarmDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INAlarmDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_1437);
    }
    uint64_t v2 = [(id)sAlarmDomain_intentDescsByName objectForKey:v1];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INCalendarEventDomainGetIntentDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INCalendarEventDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INCalendarEventDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_1847);
    }
    uint64_t v2 = [(id)sCalendarEventDomain_intentDescsByName objectForKey:v1];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INCallsDomainGetIntentDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INCallsDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INCallsDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_2423);
    }
    uint64_t v2 = [(id)sCallsDomain_intentDescsByName objectForKey:v1];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INCarPlayDomainGetIntentDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INCarPlayDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INCarPlayDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_2994);
    }
    uint64_t v2 = [(id)sCarPlayDomain_intentDescsByName objectForKey:v1];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INContactDomainGetIntentDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INContactDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INContactDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_4109);
    }
    uint64_t v2 = [(id)sContactDomain_intentDescsByName objectForKey:v1];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INFilesDomainGetIntentDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INFilesDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INFilesDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_4262);
    }
    uint64_t v2 = [(id)sFilesDomain_intentDescsByName objectForKey:v1];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INFindDeviceDomainGetIntentDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INFindDeviceDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INFindDeviceDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_4266);
    }
    uint64_t v2 = [(id)sFindDeviceDomain_intentDescsByName objectForKey:v1];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INFocusStatusDomainGetIntentDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INFocusStatusDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INFocusStatusDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_4319);
    }
    uint64_t v2 = [(id)sFocusStatusDomain_intentDescsByName objectForKey:v1];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INGeoDomainGetIntentDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INGeoDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INGeoDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_4334);
    }
    uint64_t v2 = [(id)sGeoDomain_intentDescsByName objectForKey:v1];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INHomeCommunicationDomainGetIntentDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INHomeCommunicationDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INHomeCommunicationDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_4656);
    }
    uint64_t v2 = [(id)sHomeCommunicationDomain_intentDescsByName objectForKey:v1];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INHomeKitDomainGetIntentDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INHomeKitDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INHomeKitDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_4782);
    }
    uint64_t v2 = [(id)sHomeKitDomain_intentDescsByName objectForKey:v1];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INMediaDomainGetIntentDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INMediaDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INMediaDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_5008);
    }
    uint64_t v2 = [(id)sMediaDomain_intentDescsByName objectForKey:v1];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INMessagesDomainGetIntentDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INMessagesDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INMessagesDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_5400);
    }
    uint64_t v2 = [(id)sMessagesDomain_intentDescsByName objectForKey:v1];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INNotebookDomainGetIntentDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INNotebookDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INNotebookDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_5867);
    }
    uint64_t v2 = [(id)sNotebookDomain_intentDescsByName objectForKey:v1];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INPaymentsDomainGetIntentDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INPaymentsDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INPaymentsDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_7022);
    }
    uint64_t v2 = [(id)sPaymentsDomain_intentDescsByName objectForKey:v1];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INPhotosDomainGetIntentDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INPhotosDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INPhotosDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_7826);
    }
    uint64_t v2 = [(id)sPhotosDomain_intentDescsByName objectForKey:v1];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INRRaaSDomainGetIntentDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INRRaaSDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INRRaaSDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_8107);
    }
    uint64_t v2 = [(id)sRRaaSDomain_intentDescsByName objectForKey:v1];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INRadioDomainGetIntentDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INRadioDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INRadioDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_8150);
    }
    uint64_t v2 = [(id)sRadioDomain_intentDescsByName objectForKey:v1];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INReservationsDomainGetIntentDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INReservationsDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INReservationsDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_8303);
    }
    uint64_t v2 = [(id)sReservationsDomain_intentDescsByName objectForKey:v1];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INRidesharingDomainGetIntentDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INRidesharingDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INRidesharingDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_8362);
    }
    uint64_t v2 = [(id)sRidesharingDomain_intentDescsByName objectForKey:v1];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INSettingsDomainGetIntentDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INSettingsDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INSettingsDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_8592);
    }
    uint64_t v2 = [(id)sSettingsDomain_intentDescsByName objectForKey:v1];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INTimersDomainGetIntentDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INTimersDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INTimersDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_9173);
    }
    uint64_t v2 = [(id)sTimersDomain_intentDescsByName objectForKey:v1];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INVisualCodeDomainGetIntentDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INVisualCodeDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INVisualCodeDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_9743);
    }
    uint64_t v2 = [(id)sVisualCodeDomain_intentDescsByName objectForKey:v1];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INVoiceCommandsDomainGetIntentDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INVoiceCommandsDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INVoiceCommandsDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_9795);
    }
    uint64_t v2 = [(id)sVoiceCommandsDomain_intentDescsByName objectForKey:v1];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INWellnessDomainGetIntentDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INWellnessDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INWellnessDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_9961);
    }
    uint64_t v2 = [(id)sWellnessDomain_intentDescsByName objectForKey:v1];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INWorkflowDomainGetIntentDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INWorkflowDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INWorkflowDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_10350);
    }
    uint64_t v2 = [(id)sWorkflowDomain_intentDescsByName objectForKey:v1];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INWorkoutsDomainGetIntentDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INWorkoutsDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INWorkoutsDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_10400);
    }
    uint64_t v2 = [(id)sWorkoutsDomain_intentDescsByName objectForKey:v1];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INGenericDomainGetIntentDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INGenericDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INGenericDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_10701);
    }
    uint64_t v2 = [(id)sGenericDomain_intentDescsByName objectForKey:v1];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id _INIntentSchemaBuildIntentSlotDescriptionMap(void *a1)
{
  id v1 = (objc_class *)MEMORY[0x1E4F1CA60];
  id v2 = a1;
  id v3 = objc_msgSend([v1 alloc], "initWithCapacity:", objc_msgSend(v2, "count"));
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = ___INIntentSchemaBuildIntentSlotDescriptionMap_block_invoke;
  v7[3] = &unk_1E5516498;
  id v8 = v3;
  id v4 = v3;
  [v2 enumerateObjectsUsingBlock:v7];

  long long v5 = (void *)[v4 copy];

  return v5;
}

id INIntentSchemaGetIntentDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (INIntentSchemaGetIntentDescriptionWithType_onceToken != -1) {
      dispatch_once(&INIntentSchemaGetIntentDescriptionWithType_onceToken, &__block_literal_global_734);
    }
    id v2 = [(id)INIntentSchemaGetIntentDescriptionWithType_map objectForKey:v1];
    uint64_t v3 = [v2 integerValue];

    switch(v3)
    {
      case 1:
        uint64_t v4 = INAlarmDomainGetIntentDescriptionWithType(v1);
        break;
      case 2:
        uint64_t v4 = INCalendarEventDomainGetIntentDescriptionWithType(v1);
        break;
      case 3:
        uint64_t v4 = INCallsDomainGetIntentDescriptionWithType(v1);
        break;
      case 4:
        uint64_t v4 = INCarPlayDomainGetIntentDescriptionWithType(v1);
        break;
      case 5:
        uint64_t v4 = INContactDomainGetIntentDescriptionWithType(v1);
        break;
      case 6:
        uint64_t v4 = INFilesDomainGetIntentDescriptionWithType(v1);
        break;
      case 7:
        uint64_t v4 = INFindDeviceDomainGetIntentDescriptionWithType(v1);
        break;
      case 8:
        uint64_t v4 = INFocusStatusDomainGetIntentDescriptionWithType(v1);
        break;
      case 9:
        uint64_t v4 = INGeoDomainGetIntentDescriptionWithType(v1);
        break;
      case 10:
        uint64_t v4 = INHomeCommunicationDomainGetIntentDescriptionWithType(v1);
        break;
      case 11:
        uint64_t v4 = INHomeKitDomainGetIntentDescriptionWithType(v1);
        break;
      case 12:
        uint64_t v4 = INMediaDomainGetIntentDescriptionWithType(v1);
        break;
      case 13:
        uint64_t v4 = INMessagesDomainGetIntentDescriptionWithType(v1);
        break;
      case 14:
        uint64_t v4 = INNotebookDomainGetIntentDescriptionWithType(v1);
        break;
      case 15:
        uint64_t v4 = INPaymentsDomainGetIntentDescriptionWithType(v1);
        break;
      case 16:
        uint64_t v4 = INPhotosDomainGetIntentDescriptionWithType(v1);
        break;
      case 17:
        uint64_t v4 = INRRaaSDomainGetIntentDescriptionWithType(v1);
        break;
      case 18:
        uint64_t v4 = INRadioDomainGetIntentDescriptionWithType(v1);
        break;
      case 19:
        uint64_t v4 = INReservationsDomainGetIntentDescriptionWithType(v1);
        break;
      case 20:
        uint64_t v4 = INRidesharingDomainGetIntentDescriptionWithType(v1);
        break;
      case 21:
        uint64_t v4 = INSettingsDomainGetIntentDescriptionWithType(v1);
        break;
      case 22:
        uint64_t v4 = INTimersDomainGetIntentDescriptionWithType(v1);
        break;
      case 23:
        uint64_t v4 = INVisualCodeDomainGetIntentDescriptionWithType(v1);
        break;
      case 24:
        uint64_t v4 = INVoiceCommandsDomainGetIntentDescriptionWithType(v1);
        break;
      case 25:
        uint64_t v4 = INWellnessDomainGetIntentDescriptionWithType(v1);
        break;
      case 26:
        uint64_t v4 = INWorkflowDomainGetIntentDescriptionWithType(v1);
        break;
      case 27:
        uint64_t v4 = INWorkoutsDomainGetIntentDescriptionWithType(v1);
        break;
      case 28:
        uint64_t v4 = INGenericDomainGetIntentDescriptionWithType(v1);
        break;
      default:
        goto LABEL_6;
    }
    long long v5 = (void *)v4;
  }
  else
  {
LABEL_6:
    long long v5 = 0;
  }

  return v5;
}

id INAlarmDomainGetIntentDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INAlarmDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INAlarmDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_1437);
    }
    id v2 = [(id)sAlarmDomain_intentDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INCalendarEventDomainGetIntentDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INCalendarEventDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INCalendarEventDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_1847);
    }
    id v2 = [(id)sCalendarEventDomain_intentDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INCallsDomainGetIntentDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INCallsDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INCallsDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_2423);
    }
    id v2 = [(id)sCallsDomain_intentDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INCarPlayDomainGetIntentDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INCarPlayDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INCarPlayDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_2994);
    }
    id v2 = [(id)sCarPlayDomain_intentDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INContactDomainGetIntentDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INContactDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INContactDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_4109);
    }
    id v2 = [(id)sContactDomain_intentDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INFilesDomainGetIntentDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INFilesDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INFilesDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_4262);
    }
    id v2 = [(id)sFilesDomain_intentDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INFindDeviceDomainGetIntentDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INFindDeviceDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INFindDeviceDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_4266);
    }
    id v2 = [(id)sFindDeviceDomain_intentDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INFocusStatusDomainGetIntentDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INFocusStatusDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INFocusStatusDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_4319);
    }
    id v2 = [(id)sFocusStatusDomain_intentDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INGeoDomainGetIntentDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INGeoDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INGeoDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_4334);
    }
    id v2 = [(id)sGeoDomain_intentDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INHomeCommunicationDomainGetIntentDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INHomeCommunicationDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INHomeCommunicationDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_4656);
    }
    id v2 = [(id)sHomeCommunicationDomain_intentDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INHomeKitDomainGetIntentDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INHomeKitDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INHomeKitDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_4782);
    }
    id v2 = [(id)sHomeKitDomain_intentDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INMediaDomainGetIntentDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INMediaDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INMediaDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_5008);
    }
    id v2 = [(id)sMediaDomain_intentDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INMessagesDomainGetIntentDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INMessagesDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INMessagesDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_5400);
    }
    id v2 = [(id)sMessagesDomain_intentDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INNotebookDomainGetIntentDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INNotebookDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INNotebookDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_5867);
    }
    id v2 = [(id)sNotebookDomain_intentDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INPaymentsDomainGetIntentDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INPaymentsDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INPaymentsDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_7022);
    }
    id v2 = [(id)sPaymentsDomain_intentDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INPhotosDomainGetIntentDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INPhotosDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INPhotosDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_7826);
    }
    id v2 = [(id)sPhotosDomain_intentDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INRRaaSDomainGetIntentDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INRRaaSDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INRRaaSDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_8107);
    }
    id v2 = [(id)sRRaaSDomain_intentDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INRadioDomainGetIntentDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INRadioDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INRadioDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_8150);
    }
    id v2 = [(id)sRadioDomain_intentDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INReservationsDomainGetIntentDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INReservationsDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INReservationsDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_8303);
    }
    id v2 = [(id)sReservationsDomain_intentDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INRidesharingDomainGetIntentDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INRidesharingDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INRidesharingDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_8362);
    }
    id v2 = [(id)sRidesharingDomain_intentDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INSettingsDomainGetIntentDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INSettingsDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INSettingsDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_8592);
    }
    id v2 = [(id)sSettingsDomain_intentDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INTimersDomainGetIntentDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INTimersDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INTimersDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_9173);
    }
    id v2 = [(id)sTimersDomain_intentDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INVisualCodeDomainGetIntentDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INVisualCodeDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INVisualCodeDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_9743);
    }
    id v2 = [(id)sVisualCodeDomain_intentDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INVoiceCommandsDomainGetIntentDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INVoiceCommandsDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INVoiceCommandsDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_9795);
    }
    id v2 = [(id)sVoiceCommandsDomain_intentDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INWellnessDomainGetIntentDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INWellnessDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INWellnessDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_9961);
    }
    id v2 = [(id)sWellnessDomain_intentDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INWorkflowDomainGetIntentDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INWorkflowDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INWorkflowDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_10350);
    }
    id v2 = [(id)sWorkflowDomain_intentDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INWorkoutsDomainGetIntentDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INWorkoutsDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INWorkoutsDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_10400);
    }
    id v2 = [(id)sWorkoutsDomain_intentDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INGenericDomainGetIntentDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INGenericDomainLoadIntentDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INGenericDomainLoadIntentDescriptionIfNeeded_onceToken, &__block_literal_global_10701);
    }
    id v2 = [(id)sGenericDomain_intentDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

void __INIntentSchemaGetIntentDescriptionWithType_block_invoke()
{
  dispatch_queue_t v0 = (void *)INIntentSchemaGetIntentDescriptionWithType_map;
  INIntentSchemaGetIntentDescriptionWithType_map = (uint64_t)&unk_1EDBAC700;
}

id INIntentSchemaGetIntentDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INIntentSchemaGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INIntentSchemaGetIntentResponseNames()
{
  if (INIntentSchemaGetIntentResponseNames_onceToken != -1) {
    dispatch_once(&INIntentSchemaGetIntentResponseNames_onceToken, &__block_literal_global_743);
  }
  dispatch_queue_t v0 = (void *)INIntentSchemaGetIntentResponseNames_list;

  return v0;
}

void __INIntentSchemaGetIntentResponseNames_block_invoke()
{
  dispatch_queue_t v0 = (void *)INIntentSchemaGetIntentResponseNames_list;
  INIntentSchemaGetIntentResponseNames_list = (uint64_t)&unk_1EDBA7A10;
}

id INIntentSchemaGetIntentResponseTypes()
{
  if (INIntentSchemaGetIntentResponseTypes_onceToken != -1) {
    dispatch_once(&INIntentSchemaGetIntentResponseTypes_onceToken, &__block_literal_global_1084);
  }
  dispatch_queue_t v0 = (void *)INIntentSchemaGetIntentResponseTypes_list;

  return v0;
}

void __INIntentSchemaGetIntentResponseTypes_block_invoke()
{
  dispatch_queue_t v0 = (void *)INIntentSchemaGetIntentResponseTypes_list;
  INIntentSchemaGetIntentResponseTypes_list = (uint64_t)&unk_1EDBA7A28;
}

id INIntentSchemaGetIntentResponseDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (INIntentSchemaGetIntentResponseDescriptionWithName_onceToken != -1) {
      dispatch_once(&INIntentSchemaGetIntentResponseDescriptionWithName_onceToken, &__block_literal_global_1425);
    }
    id v2 = [(id)INIntentSchemaGetIntentResponseDescriptionWithName_map objectForKey:v1];
    uint64_t v3 = [v2 integerValue];

    switch(v3)
    {
      case 1:
        uint64_t v4 = INAlarmDomainGetIntentResponseDescriptionWithName(v1);
        break;
      case 2:
        uint64_t v4 = INCalendarEventDomainGetIntentResponseDescriptionWithName(v1);
        break;
      case 3:
        uint64_t v4 = INCallsDomainGetIntentResponseDescriptionWithName(v1);
        break;
      case 4:
        uint64_t v4 = INCarPlayDomainGetIntentResponseDescriptionWithName(v1);
        break;
      case 5:
        uint64_t v4 = INContactDomainGetIntentResponseDescriptionWithName(v1);
        break;
      case 6:
        uint64_t v4 = INFilesDomainGetIntentResponseDescriptionWithName(v1);
        break;
      case 7:
        uint64_t v4 = INFindDeviceDomainGetIntentResponseDescriptionWithName(v1);
        break;
      case 8:
        uint64_t v4 = INFocusStatusDomainGetIntentResponseDescriptionWithName(v1);
        break;
      case 9:
        uint64_t v4 = INGeoDomainGetIntentResponseDescriptionWithName(v1);
        break;
      case 10:
        uint64_t v4 = INHomeCommunicationDomainGetIntentResponseDescriptionWithName(v1);
        break;
      case 11:
        uint64_t v4 = INHomeKitDomainGetIntentResponseDescriptionWithName(v1);
        break;
      case 12:
        uint64_t v4 = INMediaDomainGetIntentResponseDescriptionWithName(v1);
        break;
      case 13:
        uint64_t v4 = INMessagesDomainGetIntentResponseDescriptionWithName(v1);
        break;
      case 14:
        uint64_t v4 = INNotebookDomainGetIntentResponseDescriptionWithName(v1);
        break;
      case 15:
        uint64_t v4 = INPaymentsDomainGetIntentResponseDescriptionWithName(v1);
        break;
      case 16:
        uint64_t v4 = INPhotosDomainGetIntentResponseDescriptionWithName(v1);
        break;
      case 17:
        uint64_t v4 = INRRaaSDomainGetIntentResponseDescriptionWithName(v1);
        break;
      case 18:
        uint64_t v4 = INRadioDomainGetIntentResponseDescriptionWithName(v1);
        break;
      case 19:
        uint64_t v4 = INReservationsDomainGetIntentResponseDescriptionWithName(v1);
        break;
      case 20:
        uint64_t v4 = INRidesharingDomainGetIntentResponseDescriptionWithName(v1);
        break;
      case 21:
        uint64_t v4 = INSettingsDomainGetIntentResponseDescriptionWithName(v1);
        break;
      case 22:
        uint64_t v4 = INTimersDomainGetIntentResponseDescriptionWithName(v1);
        break;
      case 23:
        uint64_t v4 = INVisualCodeDomainGetIntentResponseDescriptionWithName(v1);
        break;
      case 24:
        uint64_t v4 = INVoiceCommandsDomainGetIntentResponseDescriptionWithName(v1);
        break;
      case 25:
        uint64_t v4 = INWellnessDomainGetIntentResponseDescriptionWithName(v1);
        break;
      case 26:
        uint64_t v4 = INWorkflowDomainGetIntentResponseDescriptionWithName(v1);
        break;
      case 27:
        uint64_t v4 = INWorkoutsDomainGetIntentResponseDescriptionWithName(v1);
        break;
      case 28:
        uint64_t v4 = INGenericDomainGetIntentResponseDescriptionWithName(v1);
        break;
      default:
        goto LABEL_6;
    }
    long long v5 = (void *)v4;
  }
  else
  {
LABEL_6:
    long long v5 = 0;
  }

  return v5;
}

id INAlarmDomainGetIntentResponseDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INAlarmDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INAlarmDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_1817);
    }
    id v2 = [(id)sAlarmDomain_intentResponseDescsByName objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INCalendarEventDomainGetIntentResponseDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INCalendarEventDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INCalendarEventDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_2398);
    }
    id v2 = [(id)sCalendarEventDomain_intentResponseDescsByName objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INCallsDomainGetIntentResponseDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INCallsDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INCallsDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_2942);
    }
    id v2 = [(id)sCallsDomain_intentResponseDescsByName objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INCarPlayDomainGetIntentResponseDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INCarPlayDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INCarPlayDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_4028);
    }
    id v2 = [(id)sCarPlayDomain_intentResponseDescsByName objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INContactDomainGetIntentResponseDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INContactDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INContactDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_4246);
    }
    id v2 = [(id)sContactDomain_intentResponseDescsByName objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INFilesDomainGetIntentResponseDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INFilesDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INFilesDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_4264);
    }
    id v2 = [(id)sFilesDomain_intentResponseDescsByName objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INFindDeviceDomainGetIntentResponseDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INFindDeviceDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INFindDeviceDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_4309);
    }
    id v2 = [(id)sFindDeviceDomain_intentResponseDescsByName objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INFocusStatusDomainGetIntentResponseDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INFocusStatusDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INFocusStatusDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_4330);
    }
    id v2 = [(id)sFocusStatusDomain_intentResponseDescsByName objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INGeoDomainGetIntentResponseDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INGeoDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INGeoDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_4624);
    }
    id v2 = [(id)sGeoDomain_intentResponseDescsByName objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INHomeCommunicationDomainGetIntentResponseDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INHomeCommunicationDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INHomeCommunicationDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_4761);
    }
    id v2 = [(id)sHomeCommunicationDomain_intentResponseDescsByName objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INHomeKitDomainGetIntentResponseDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INHomeKitDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INHomeKitDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_4995);
    }
    id v2 = [(id)sHomeKitDomain_intentResponseDescsByName objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INMediaDomainGetIntentResponseDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INMediaDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INMediaDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_5387);
    }
    id v2 = [(id)sMediaDomain_intentResponseDescsByName objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INMessagesDomainGetIntentResponseDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INMessagesDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INMessagesDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_5845);
    }
    id v2 = [(id)sMessagesDomain_intentResponseDescsByName objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INNotebookDomainGetIntentResponseDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INNotebookDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INNotebookDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_6968);
    }
    id v2 = [(id)sNotebookDomain_intentResponseDescsByName objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INPaymentsDomainGetIntentResponseDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INPaymentsDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INPaymentsDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_7797);
    }
    id v2 = [(id)sPaymentsDomain_intentResponseDescsByName objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INPhotosDomainGetIntentResponseDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INPhotosDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INPhotosDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_8098);
    }
    id v2 = [(id)sPhotosDomain_intentResponseDescsByName objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INRRaaSDomainGetIntentResponseDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INRRaaSDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INRRaaSDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_8143);
    }
    id v2 = [(id)sRRaaSDomain_intentResponseDescsByName objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INRadioDomainGetIntentResponseDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INRadioDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INRadioDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_8299);
    }
    id v2 = [(id)sRadioDomain_intentResponseDescsByName objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INReservationsDomainGetIntentResponseDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INReservationsDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INReservationsDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_8355);
    }
    id v2 = [(id)sReservationsDomain_intentResponseDescsByName objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INRidesharingDomainGetIntentResponseDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INRidesharingDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INRidesharingDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_8575);
    }
    id v2 = [(id)sRidesharingDomain_intentResponseDescsByName objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INSettingsDomainGetIntentResponseDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INSettingsDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INSettingsDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_9135);
    }
    id v2 = [(id)sSettingsDomain_intentResponseDescsByName objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INTimersDomainGetIntentResponseDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INTimersDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INTimersDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_9703);
    }
    id v2 = [(id)sTimersDomain_intentResponseDescsByName objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INVisualCodeDomainGetIntentResponseDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INVisualCodeDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INVisualCodeDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_9786);
    }
    id v2 = [(id)sVisualCodeDomain_intentResponseDescsByName objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INVoiceCommandsDomainGetIntentResponseDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INVoiceCommandsDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INVoiceCommandsDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_9904);
    }
    id v2 = [(id)sVoiceCommandsDomain_intentResponseDescsByName objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INWellnessDomainGetIntentResponseDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INWellnessDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INWellnessDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_10321);
    }
    id v2 = [(id)sWellnessDomain_intentResponseDescsByName objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INWorkflowDomainGetIntentResponseDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INWorkflowDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INWorkflowDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_10387);
    }
    id v2 = [(id)sWorkflowDomain_intentResponseDescsByName objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INWorkoutsDomainGetIntentResponseDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INWorkoutsDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INWorkoutsDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_10689);
    }
    id v2 = [(id)sWorkoutsDomain_intentResponseDescsByName objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INGenericDomainGetIntentResponseDescriptionWithName(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INGenericDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INGenericDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_10705);
    }
    id v2 = [(id)sGenericDomain_intentResponseDescsByName objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

void __INIntentSchemaGetIntentResponseDescriptionWithName_block_invoke()
{
  dispatch_queue_t v0 = (void *)INIntentSchemaGetIntentResponseDescriptionWithName_map;
  INIntentSchemaGetIntentResponseDescriptionWithName_map = (uint64_t)&unk_1EDBAC728;
}

id INIntentSchemaGetIntentResponseDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (INIntentSchemaGetIntentResponseDescriptionWithType_onceToken != -1) {
      dispatch_once(&INIntentSchemaGetIntentResponseDescriptionWithType_onceToken, &__block_literal_global_1431);
    }
    id v2 = [(id)INIntentSchemaGetIntentResponseDescriptionWithType_map objectForKey:v1];
    uint64_t v3 = [v2 integerValue];

    switch(v3)
    {
      case 1:
        uint64_t v4 = INAlarmDomainGetIntentResponseDescriptionWithType(v1);
        break;
      case 2:
        uint64_t v4 = INCalendarEventDomainGetIntentResponseDescriptionWithType(v1);
        break;
      case 3:
        uint64_t v4 = INCallsDomainGetIntentResponseDescriptionWithType(v1);
        break;
      case 4:
        uint64_t v4 = INCarPlayDomainGetIntentResponseDescriptionWithType(v1);
        break;
      case 5:
        uint64_t v4 = INContactDomainGetIntentResponseDescriptionWithType(v1);
        break;
      case 6:
        uint64_t v4 = INFilesDomainGetIntentResponseDescriptionWithType(v1);
        break;
      case 7:
        uint64_t v4 = INFindDeviceDomainGetIntentResponseDescriptionWithType(v1);
        break;
      case 8:
        uint64_t v4 = INFocusStatusDomainGetIntentResponseDescriptionWithType(v1);
        break;
      case 9:
        uint64_t v4 = INGeoDomainGetIntentResponseDescriptionWithType(v1);
        break;
      case 10:
        uint64_t v4 = INHomeCommunicationDomainGetIntentResponseDescriptionWithType(v1);
        break;
      case 11:
        uint64_t v4 = INHomeKitDomainGetIntentResponseDescriptionWithType(v1);
        break;
      case 12:
        uint64_t v4 = INMediaDomainGetIntentResponseDescriptionWithType(v1);
        break;
      case 13:
        uint64_t v4 = INMessagesDomainGetIntentResponseDescriptionWithType(v1);
        break;
      case 14:
        uint64_t v4 = INNotebookDomainGetIntentResponseDescriptionWithType(v1);
        break;
      case 15:
        uint64_t v4 = INPaymentsDomainGetIntentResponseDescriptionWithType(v1);
        break;
      case 16:
        uint64_t v4 = INPhotosDomainGetIntentResponseDescriptionWithType(v1);
        break;
      case 17:
        uint64_t v4 = INRRaaSDomainGetIntentResponseDescriptionWithType(v1);
        break;
      case 18:
        uint64_t v4 = INRadioDomainGetIntentResponseDescriptionWithType(v1);
        break;
      case 19:
        uint64_t v4 = INReservationsDomainGetIntentResponseDescriptionWithType(v1);
        break;
      case 20:
        uint64_t v4 = INRidesharingDomainGetIntentResponseDescriptionWithType(v1);
        break;
      case 21:
        uint64_t v4 = INSettingsDomainGetIntentResponseDescriptionWithType(v1);
        break;
      case 22:
        uint64_t v4 = INTimersDomainGetIntentResponseDescriptionWithType(v1);
        break;
      case 23:
        uint64_t v4 = INVisualCodeDomainGetIntentResponseDescriptionWithType(v1);
        break;
      case 24:
        uint64_t v4 = INVoiceCommandsDomainGetIntentResponseDescriptionWithType(v1);
        break;
      case 25:
        uint64_t v4 = INWellnessDomainGetIntentResponseDescriptionWithType(v1);
        break;
      case 26:
        uint64_t v4 = INWorkflowDomainGetIntentResponseDescriptionWithType(v1);
        break;
      case 27:
        uint64_t v4 = INWorkoutsDomainGetIntentResponseDescriptionWithType(v1);
        break;
      case 28:
        uint64_t v4 = INGenericDomainGetIntentResponseDescriptionWithType(v1);
        break;
      default:
        goto LABEL_6;
    }
    long long v5 = (void *)v4;
  }
  else
  {
LABEL_6:
    long long v5 = 0;
  }

  return v5;
}

id INAlarmDomainGetIntentResponseDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INAlarmDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INAlarmDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_1817);
    }
    id v2 = [(id)sAlarmDomain_intentResponseDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INCalendarEventDomainGetIntentResponseDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INCalendarEventDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INCalendarEventDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_2398);
    }
    id v2 = [(id)sCalendarEventDomain_intentResponseDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INCallsDomainGetIntentResponseDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INCallsDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INCallsDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_2942);
    }
    id v2 = [(id)sCallsDomain_intentResponseDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INCarPlayDomainGetIntentResponseDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INCarPlayDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INCarPlayDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_4028);
    }
    id v2 = [(id)sCarPlayDomain_intentResponseDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INContactDomainGetIntentResponseDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INContactDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INContactDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_4246);
    }
    id v2 = [(id)sContactDomain_intentResponseDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INFilesDomainGetIntentResponseDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INFilesDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INFilesDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_4264);
    }
    id v2 = [(id)sFilesDomain_intentResponseDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INFindDeviceDomainGetIntentResponseDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INFindDeviceDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INFindDeviceDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_4309);
    }
    id v2 = [(id)sFindDeviceDomain_intentResponseDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INFocusStatusDomainGetIntentResponseDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INFocusStatusDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INFocusStatusDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_4330);
    }
    id v2 = [(id)sFocusStatusDomain_intentResponseDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INGeoDomainGetIntentResponseDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INGeoDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INGeoDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_4624);
    }
    id v2 = [(id)sGeoDomain_intentResponseDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INHomeCommunicationDomainGetIntentResponseDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INHomeCommunicationDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INHomeCommunicationDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_4761);
    }
    id v2 = [(id)sHomeCommunicationDomain_intentResponseDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INHomeKitDomainGetIntentResponseDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INHomeKitDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INHomeKitDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_4995);
    }
    id v2 = [(id)sHomeKitDomain_intentResponseDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INMediaDomainGetIntentResponseDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INMediaDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INMediaDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_5387);
    }
    id v2 = [(id)sMediaDomain_intentResponseDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INMessagesDomainGetIntentResponseDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INMessagesDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INMessagesDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_5845);
    }
    id v2 = [(id)sMessagesDomain_intentResponseDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INNotebookDomainGetIntentResponseDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INNotebookDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INNotebookDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_6968);
    }
    id v2 = [(id)sNotebookDomain_intentResponseDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INPaymentsDomainGetIntentResponseDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INPaymentsDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INPaymentsDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_7797);
    }
    id v2 = [(id)sPaymentsDomain_intentResponseDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INPhotosDomainGetIntentResponseDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INPhotosDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INPhotosDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_8098);
    }
    id v2 = [(id)sPhotosDomain_intentResponseDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INRRaaSDomainGetIntentResponseDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INRRaaSDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INRRaaSDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_8143);
    }
    id v2 = [(id)sRRaaSDomain_intentResponseDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INRadioDomainGetIntentResponseDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INRadioDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INRadioDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_8299);
    }
    id v2 = [(id)sRadioDomain_intentResponseDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INReservationsDomainGetIntentResponseDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INReservationsDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INReservationsDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_8355);
    }
    id v2 = [(id)sReservationsDomain_intentResponseDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INRidesharingDomainGetIntentResponseDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INRidesharingDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INRidesharingDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_8575);
    }
    id v2 = [(id)sRidesharingDomain_intentResponseDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INSettingsDomainGetIntentResponseDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INSettingsDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INSettingsDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_9135);
    }
    id v2 = [(id)sSettingsDomain_intentResponseDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INTimersDomainGetIntentResponseDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INTimersDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INTimersDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_9703);
    }
    id v2 = [(id)sTimersDomain_intentResponseDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INVisualCodeDomainGetIntentResponseDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INVisualCodeDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INVisualCodeDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_9786);
    }
    id v2 = [(id)sVisualCodeDomain_intentResponseDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INVoiceCommandsDomainGetIntentResponseDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INVoiceCommandsDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INVoiceCommandsDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_9904);
    }
    id v2 = [(id)sVoiceCommandsDomain_intentResponseDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INWellnessDomainGetIntentResponseDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INWellnessDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INWellnessDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_10321);
    }
    id v2 = [(id)sWellnessDomain_intentResponseDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INWorkflowDomainGetIntentResponseDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INWorkflowDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INWorkflowDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_10387);
    }
    id v2 = [(id)sWorkflowDomain_intentResponseDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INWorkoutsDomainGetIntentResponseDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INWorkoutsDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INWorkoutsDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_10689);
    }
    id v2 = [(id)sWorkoutsDomain_intentResponseDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INGenericDomainGetIntentResponseDescriptionWithType(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (_INGenericDomainLoadIntentResponseDescriptionIfNeeded_onceToken != -1) {
      dispatch_once(&_INGenericDomainLoadIntentResponseDescriptionIfNeeded_onceToken, &__block_literal_global_10705);
    }
    id v2 = [(id)sGenericDomain_intentResponseDescsByType objectForKey:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

void __INIntentSchemaGetIntentResponseDescriptionWithType_block_invoke()
{
  dispatch_queue_t v0 = (void *)INIntentSchemaGetIntentResponseDescriptionWithType_map;
  INIntentSchemaGetIntentResponseDescriptionWithType_map = (uint64_t)&unk_1EDBAC750;
}

id INIntentSchemaGetIntentResponseDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    if ([v1 hasPrefix:@"IN"])
    {
      id v2 = [v1 substringFromIndex:2];
      uint64_t v3 = INIntentSchemaGetIntentResponseDescriptionWithName(v2);
    }
    else
    {
      uint64_t v3 = 0;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INIntentSchemaGetIntentResponseDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INIntentSchemaGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INAlarmDomainGetIntentDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INAlarmDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INAlarmDomainGetIntentDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INAlarmDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INAlarmDomainGetIntentResponseDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INAlarmDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INAlarmDomainGetIntentResponseDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INAlarmDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INCalendarEventDomainGetIntentDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INCalendarEventDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INCalendarEventDomainGetIntentDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INCalendarEventDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INCalendarEventDomainGetIntentResponseDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INCalendarEventDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INCalendarEventDomainGetIntentResponseDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INCalendarEventDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INCallsDomainGetIntentDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INCallsDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INCallsDomainGetIntentDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INCallsDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INCallsDomainGetIntentResponseDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INCallsDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INCallsDomainGetIntentResponseDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INCallsDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INCarPlayDomainGetIntentDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INCarPlayDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INCarPlayDomainGetIntentDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INCarPlayDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INCarPlayDomainGetIntentResponseDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INCarPlayDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INCarPlayDomainGetIntentResponseDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INCarPlayDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INContactDomainGetIntentDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INContactDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INContactDomainGetIntentDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INContactDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INContactDomainGetIntentResponseDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INContactDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INContactDomainGetIntentResponseDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INContactDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INFilesDomainGetIntentDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INFilesDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INFilesDomainGetIntentDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INFilesDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INFilesDomainGetIntentResponseDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INFilesDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INFilesDomainGetIntentResponseDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INFilesDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INFindDeviceDomainGetIntentDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INFindDeviceDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INFindDeviceDomainGetIntentDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INFindDeviceDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INFindDeviceDomainGetIntentResponseDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INFindDeviceDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INFindDeviceDomainGetIntentResponseDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INFindDeviceDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INFocusStatusDomainGetIntentDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INFocusStatusDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INFocusStatusDomainGetIntentDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INFocusStatusDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INFocusStatusDomainGetIntentResponseDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INFocusStatusDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INFocusStatusDomainGetIntentResponseDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INFocusStatusDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INGeoDomainGetIntentDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INGeoDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INGeoDomainGetIntentDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INGeoDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INGeoDomainGetIntentResponseDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INGeoDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INGeoDomainGetIntentResponseDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INGeoDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INHomeCommunicationDomainGetIntentDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INHomeCommunicationDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INHomeCommunicationDomainGetIntentDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INHomeCommunicationDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INHomeCommunicationDomainGetIntentResponseDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INHomeCommunicationDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INHomeCommunicationDomainGetIntentResponseDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INHomeCommunicationDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INHomeKitDomainGetIntentDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INHomeKitDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INHomeKitDomainGetIntentDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INHomeKitDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INHomeKitDomainGetIntentResponseDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INHomeKitDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INHomeKitDomainGetIntentResponseDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INHomeKitDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INMediaDomainGetIntentDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INMediaDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INMediaDomainGetIntentDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INMediaDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INMediaDomainGetIntentResponseDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INMediaDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INMediaDomainGetIntentResponseDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INMediaDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INMessagesDomainGetIntentDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INMessagesDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INMessagesDomainGetIntentDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INMessagesDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INMessagesDomainGetIntentResponseDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INMessagesDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INMessagesDomainGetIntentResponseDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INMessagesDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INNotebookDomainGetIntentDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INNotebookDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INNotebookDomainGetIntentDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INNotebookDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INNotebookDomainGetIntentResponseDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INNotebookDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INNotebookDomainGetIntentResponseDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INNotebookDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INPaymentsDomainGetIntentDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INPaymentsDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INPaymentsDomainGetIntentDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INPaymentsDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INPaymentsDomainGetIntentResponseDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INPaymentsDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INPaymentsDomainGetIntentResponseDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INPaymentsDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INPhotosDomainGetIntentDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INPhotosDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INPhotosDomainGetIntentDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INPhotosDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INPhotosDomainGetIntentResponseDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INPhotosDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INPhotosDomainGetIntentResponseDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INPhotosDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INRRaaSDomainGetIntentDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INRRaaSDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INRRaaSDomainGetIntentDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INRRaaSDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INRRaaSDomainGetIntentResponseDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INRRaaSDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INRRaaSDomainGetIntentResponseDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INRRaaSDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INRadioDomainGetIntentDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INRadioDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INRadioDomainGetIntentDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INRadioDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INRadioDomainGetIntentResponseDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INRadioDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INRadioDomainGetIntentResponseDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INRadioDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INReservationsDomainGetIntentDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INReservationsDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INReservationsDomainGetIntentDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INReservationsDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INReservationsDomainGetIntentResponseDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INReservationsDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INReservationsDomainGetIntentResponseDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INReservationsDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INRidesharingDomainGetIntentDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INRidesharingDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INRidesharingDomainGetIntentDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INRidesharingDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INRidesharingDomainGetIntentResponseDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INRidesharingDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INRidesharingDomainGetIntentResponseDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INRidesharingDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INSettingsDomainGetIntentDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INSettingsDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INSettingsDomainGetIntentDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INSettingsDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INSettingsDomainGetIntentResponseDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INSettingsDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INSettingsDomainGetIntentResponseDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INSettingsDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INTimersDomainGetIntentDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INTimersDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INTimersDomainGetIntentDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INTimersDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INTimersDomainGetIntentResponseDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INTimersDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INTimersDomainGetIntentResponseDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INTimersDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INVisualCodeDomainGetIntentDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INVisualCodeDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INVisualCodeDomainGetIntentDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INVisualCodeDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INVisualCodeDomainGetIntentResponseDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INVisualCodeDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INVisualCodeDomainGetIntentResponseDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INVisualCodeDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INVoiceCommandsDomainGetIntentDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INVoiceCommandsDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INVoiceCommandsDomainGetIntentDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INVoiceCommandsDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INVoiceCommandsDomainGetIntentResponseDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INVoiceCommandsDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INVoiceCommandsDomainGetIntentResponseDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INVoiceCommandsDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INWellnessDomainGetIntentDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INWellnessDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INWellnessDomainGetIntentDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INWellnessDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INWellnessDomainGetIntentResponseDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INWellnessDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INWellnessDomainGetIntentResponseDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INWellnessDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INWorkflowDomainGetIntentDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INWorkflowDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INWorkflowDomainGetIntentDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INWorkflowDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INWorkflowDomainGetIntentResponseDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INWorkflowDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INWorkflowDomainGetIntentResponseDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INWorkflowDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INWorkoutsDomainGetIntentDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INWorkoutsDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INWorkoutsDomainGetIntentDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INWorkoutsDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INWorkoutsDomainGetIntentResponseDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INWorkoutsDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INWorkoutsDomainGetIntentResponseDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INWorkoutsDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INGenericDomainGetIntentDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INGenericDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INGenericDomainGetIntentDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INGenericDomainGetIntentDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INGenericDomainGetIntentResponseDescriptionWithFacadeClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:2];
    uint64_t v3 = INGenericDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INGenericDomainGetIntentResponseDescriptionWithDataClass(objc_class *a1)
{
  if (a1)
  {
    id v1 = NSStringFromClass(a1);
    id v2 = [v1 substringFromIndex:5];
    uint64_t v3 = INGenericDomainGetIntentResponseDescriptionWithName(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

Class __getPDCPreflightManagerClass_block_invoke(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!PrivacyDisclosureCoreLibraryCore_frameworkLibrary)
  {
    v4[1] = MEMORY[0x1E4F143A8];
    v4[2] = 3221225472;
    v4[3] = __PrivacyDisclosureCoreLibraryCore_block_invoke;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    void v4[5] = v4;
    long long v5 = xmmword_1E5516588;
    uint64_t v6 = 0;
    PrivacyDisclosureCoreLibraryCore_frameworkLibrary = _sl_dlopen();
    id v2 = (void *)v4[0];
    if (!PrivacyDisclosureCoreLibraryCore_frameworkLibrary)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("PDCPreflightManager");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    id v2 = (void *)abort_report_np();
LABEL_8:
    free(v2);
  }
  getPDCPreflightManagerClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __PrivacyDisclosureCoreLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  PrivacyDisclosureCoreLibraryCore_frameworkLibrary = result;
  return result;
}

uint64_t _INPBVoiceCommandDeviceInformationReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  long long v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v23 = 0;
        unsigned int v24 = 0;
        uint64_t v25 = 0;
        while (1)
        {
          uint64_t v26 = *v3;
          unint64_t v27 = *(void *)(a2 + v26);
          if (v27 == -1 || v27 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v28 = *(unsigned char *)(*(void *)(a2 + *v7) + v27);
          *(void *)(a2 + v26) = v27 + 1;
          v25 |= (unint64_t)(v28 & 0x7F) << v23;
          if ((v28 & 0x80) == 0) {
            goto LABEL_41;
          }
          v23 += 7;
          BOOL v14 = v24++ >= 9;
          if (v14)
          {
            uint64_t v29 = 0;
            goto LABEL_44;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_41:
        uint64_t v29 = *(unsigned char *)(a2 + *v5) ? 0 : v25;
LABEL_44:
        [a1 setDeviceIdiom:v29];
      }
      else if ((v10 >> 3) == 2)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_37;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_39;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_37:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_39:
        [a1 setIsHomePodInUltimateMode:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void sub_18CBC7C90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getCSSearchableItemAttributeSetClass_block_invoke(uint64_t a1)
{
  CoreSpotlightLibrary();
  Class result = objc_getClass("CSSearchableItemAttributeSet");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getCSSearchableItemAttributeSetClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = abort_report_np();
    return (Class)__getCSSearchableItemClass_block_invoke(v3);
  }
  return result;
}

Class __getCSSearchableItemClass_block_invoke(uint64_t a1)
{
  CoreSpotlightLibrary();
  Class result = objc_getClass("CSSearchableItem");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getCSSearchableItemClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    abort_report_np();
    return (Class)__CoreSpotlightLibraryCore_block_invoke();
  }
  return result;
}

uint64_t __CoreSpotlightLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  CoreSpotlightLibraryCore_frameworkLibrary = result;
  return result;
}

Class __getSAUISnippetClass_block_invoke(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!SAObjectsLibraryCore_frameworkLibrary)
  {
    v4[1] = MEMORY[0x1E4F143A8];
    v4[2] = 3221225472;
    v4[3] = __SAObjectsLibraryCore_block_invoke;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    void v4[5] = v4;
    long long v5 = xmmword_1E5516670;
    uint64_t v6 = 0;
    SAObjectsLibraryCore_frameworkLibrary = _sl_dlopen();
    id v2 = (void *)v4[0];
    if (!SAObjectsLibraryCore_frameworkLibrary)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("SAUISnippet");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    id v2 = (void *)abort_report_np();
LABEL_8:
    free(v2);
  }
  getSAUISnippetClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __SAObjectsLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  SAObjectsLibraryCore_frameworkLibrary = result;
  return result;
}

__CFString *INAppendToNoteIntentResponseCodeGetName(unint64_t a1)
{
  if (a1 > 6) {
    return 0;
  }
  else {
    return off_1E5516710[a1];
  }
}

id INIntentSlotValueTransformFromInteger(void *a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v1 = objc_msgSend(a1, "values", 0);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v10;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v10 != v4) {
          objc_enumerationMutation(v1);
        }
        uint64_t v6 = INIntentSlotValueTransformFromIntegerValue(*(void **)(*((void *)&v9 + 1) + 8 * i));
        if (v6)
        {
          uint64_t v7 = (void *)v6;
          goto LABEL_11;
        }
      }
      uint64_t v3 = [v1 countByEnumeratingWithState:&v9 objects:v13 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
  uint64_t v7 = 0;
LABEL_11:

  return v7;
}

id INIntentSlotValueTransformFromIntegerValue(void *a1)
{
  id v1 = a1;
  uint64_t v2 = v1;
  if (v1
    && ([v1 valueMetadata],
        uint64_t v3 = objc_claimAutoreleasedReturnValue(),
        INPrivacyEntitlementValidateValueMetadata(v3),
        v3,
        [v2 hasValue]))
  {
    uint64_t v4 = objc_msgSend(NSNumber, "numberWithInt:", objc_msgSend(v2, "value"));
  }
  else
  {
    uint64_t v4 = 0;
  }

  return v4;
}

_INPBInteger *INIntentSlotValueTransformToInteger(void *a1)
{
  id v1 = INIntentSlotValueTransformToIntegerValue(a1);
  if (v1)
  {
    uint64_t v2 = objc_alloc_init(_INPBInteger);
    [(_INPBInteger *)v2 addValue:v1];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

_INPBIntegerValue *INIntentSlotValueTransformToIntegerValue(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    uint64_t v2 = objc_alloc_init(_INPBIntegerValue);
    uint64_t v3 = [v1 intValue];

    [(_INPBIntegerValue *)v2 setValue:v3];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INIntentSlotValueTransformFromLong(void *a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v1 = objc_msgSend(a1, "values", 0);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v10;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v10 != v4) {
          objc_enumerationMutation(v1);
        }
        uint64_t v6 = INIntentSlotValueTransformFromLongValue(*(void **)(*((void *)&v9 + 1) + 8 * i));
        if (v6)
        {
          uint64_t v7 = (void *)v6;
          goto LABEL_11;
        }
      }
      uint64_t v3 = [v1 countByEnumeratingWithState:&v9 objects:v13 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
  uint64_t v7 = 0;
LABEL_11:

  return v7;
}

id INIntentSlotValueTransformFromLongValue(void *a1)
{
  id v1 = a1;
  uint64_t v2 = v1;
  if (v1
    && ([v1 valueMetadata],
        uint64_t v3 = objc_claimAutoreleasedReturnValue(),
        INPrivacyEntitlementValidateValueMetadata(v3),
        v3,
        [v2 hasValue]))
  {
    uint64_t v4 = objc_msgSend(NSNumber, "numberWithLongLong:", objc_msgSend(v2, "value"));
  }
  else
  {
    uint64_t v4 = 0;
  }

  return v4;
}

_INPBLong *INIntentSlotValueTransformToLong(void *a1)
{
  id v1 = INIntentSlotValueTransformToLongValue(a1);
  if (v1)
  {
    uint64_t v2 = objc_alloc_init(_INPBLong);
    [(_INPBLong *)v2 addValue:v1];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

_INPBLongValue *INIntentSlotValueTransformToLongValue(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    uint64_t v2 = objc_alloc_init(_INPBLongValue);
    int v3 = [v1 intValue];

    [(_INPBLongValue *)v2 setValue:v3];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INIntentSlotValueTransformFromIntegers(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        char v8 = INIntentSlotValueTransformFromInteger(*(void **)(*((void *)&v11 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  long long v9 = (void *)[v2 copy];

  return v9;
}

id INIntentSlotValueTransformFromLongs(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        char v8 = INIntentSlotValueTransformFromLong(*(void **)(*((void *)&v11 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  long long v9 = (void *)[v2 copy];

  return v9;
}

id INIntentSlotValueTransformToIntegers(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        char v8 = INIntentSlotValueTransformToInteger(*(void **)(*((void *)&v11 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  long long v9 = (void *)[v2 copy];

  return v9;
}

id INIntentSlotValueTransformToLongs(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        char v8 = INIntentSlotValueTransformToLong(*(void **)(*((void *)&v11 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  long long v9 = (void *)[v2 copy];

  return v9;
}

id INIntentSlotValueTransformFromIntegerValues(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        char v8 = INIntentSlotValueTransformFromIntegerValue(*(void **)(*((void *)&v11 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  long long v9 = (void *)[v2 copy];

  return v9;
}

id INIntentSlotValueTransformToIntegerValues(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        char v8 = INIntentSlotValueTransformToIntegerValue(*(void **)(*((void *)&v11 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  long long v9 = (void *)[v2 copy];

  return v9;
}

id INIntentSlotValueTransformFromLongValues(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        char v8 = INIntentSlotValueTransformFromLongValue(*(void **)(*((void *)&v11 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  long long v9 = (void *)[v2 copy];

  return v9;
}

id INIntentSlotValueTransformToLongValues(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        char v8 = INIntentSlotValueTransformToLongValue(*(void **)(*((void *)&v11 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  long long v9 = (void *)[v2 copy];

  return v9;
}

_INPBInteger *INIntentSlotValueRedactedIntegerFromInteger(void *a1, uint64_t a2)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  if (v3)
  {
    uint64_t v4 = objc_alloc_init(_INPBInteger);
    long long v14 = 0u;
    long long v15 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
    uint64_t v5 = objc_msgSend(v3, "values", 0);
    uint64_t v6 = [v5 countByEnumeratingWithState:&v14 objects:v18 count:16];
    if (!v6) {
      goto LABEL_13;
    }
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)v15;
    while (1)
    {
      for (uint64_t i = 0; i != v7; ++i)
      {
        if (*(void *)v15 != v8) {
          objc_enumerationMutation(v5);
        }
        id v10 = *(id *)(*((void *)&v14 + 1) + 8 * i);
        long long v11 = [v10 valueMetadata];
        uint64_t v12 = INPrivacyEntitlementOptionsForValueMetadata(v11);

        if ((v12 & a2) == 0)
        {
          if (!v10) {
            continue;
          }
          [(_INPBInteger *)v4 addValue:v10];
        }
      }
      uint64_t v7 = [v5 countByEnumeratingWithState:&v14 objects:v18 count:16];
      if (!v7)
      {
LABEL_13:

        goto LABEL_15;
      }
    }
  }
  uint64_t v4 = 0;
LABEL_15:

  return v4;
}

id INIntentSlotValueRedactedIntegersFromIntegers(void *a1, uint64_t a2, void *a3)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a3;
  uint64_t v7 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v5, "count"));
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v8 = v5;
  uint64_t v9 = [v8 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)v17;
    do
    {
      for (uint64_t i = 0; i != v10; ++i)
      {
        if (*(void *)v17 != v11) {
          objc_enumerationMutation(v8);
        }
        long long v13 = INIntentSlotValueRedactedIntegerFromInteger(*(void **)(*((void *)&v16 + 1) + 8 * i), a2);
        objc_msgSend(v7, "addObject:", v13, (void)v16);
      }
      uint64_t v10 = [v8 countByEnumeratingWithState:&v16 objects:v20 count:16];
    }
    while (v10);
  }

  long long v14 = (void *)[v7 copy];

  return v14;
}

_INPBLong *INIntentSlotValueRedactedLongFromLong(void *a1, uint64_t a2)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  if (v3)
  {
    uint64_t v4 = objc_alloc_init(_INPBLong);
    long long v14 = 0u;
    long long v15 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
    id v5 = objc_msgSend(v3, "values", 0);
    uint64_t v6 = [v5 countByEnumeratingWithState:&v14 objects:v18 count:16];
    if (!v6) {
      goto LABEL_13;
    }
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)v15;
    while (1)
    {
      for (uint64_t i = 0; i != v7; ++i)
      {
        if (*(void *)v15 != v8) {
          objc_enumerationMutation(v5);
        }
        id v10 = *(id *)(*((void *)&v14 + 1) + 8 * i);
        uint64_t v11 = [v10 valueMetadata];
        uint64_t v12 = INPrivacyEntitlementOptionsForValueMetadata(v11);

        if ((v12 & a2) == 0)
        {
          if (!v10) {
            continue;
          }
          [(_INPBLong *)v4 addValue:v10];
        }
      }
      uint64_t v7 = [v5 countByEnumeratingWithState:&v14 objects:v18 count:16];
      if (!v7)
      {
LABEL_13:

        goto LABEL_15;
      }
    }
  }
  uint64_t v4 = 0;
LABEL_15:

  return v4;
}

id INIntentSlotValueRedactedLongssFromLongs(void *a1, uint64_t a2, void *a3)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a3;
  uint64_t v7 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v5, "count"));
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v8 = v5;
  uint64_t v9 = [v8 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)v17;
    do
    {
      for (uint64_t i = 0; i != v10; ++i)
      {
        if (*(void *)v17 != v11) {
          objc_enumerationMutation(v8);
        }
        long long v13 = INIntentSlotValueRedactedLongFromLong(*(void **)(*((void *)&v16 + 1) + 8 * i), a2);
        objc_msgSend(v7, "addObject:", v13, (void)v16);
      }
      uint64_t v10 = [v8 countByEnumeratingWithState:&v16 objects:v20 count:16];
    }
    while (v10);
  }

  long long v14 = (void *)[v7 copy];

  return v14;
}

__CFString *INStartWorkoutIntentResponseCodeGetName(unint64_t a1)
{
  if (a1 > 8) {
    return 0;
  }
  else {
    return off_1E5516748[a1];
  }
}

__CFString *INAddTasksIntentResponseCodeGetName(unint64_t a1)
{
  if (a1 > 5) {
    return 0;
  }
  else {
    return off_1E5516790[a1];
  }
}

void INPrivacyEntitlementOptionsEnumerateBackingTypes(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1 && v3)
  {
    id v4 = v3;
    if (a1)
    {
      (*((void (**)(id, uint64_t))v3 + 2))(v3, 1);
      id v3 = v4;
    }
    if ((a1 & 2) != 0)
    {
      (*((void (**)(id, uint64_t))v3 + 2))(v4, 2);
      id v3 = v4;
    }
  }
}

uint64_t INPrivacyEntitlementOptionsContainsBackingType(unint64_t a1, int a2)
{
  uint64_t v2 = (a1 >> 1) & 1;
  int v3 = a1 & 1;
  if (a2 != 1) {
    int v3 = 0;
  }
  if (a2 != 2) {
    LODWORD(v2) = v3;
  }
  if (a1) {
    return v2;
  }
  else {
    return 0;
  }
}

uint64_t *INPrivacyEntitlementOptionsAddBackingType(uint64_t *result, int a2)
{
  if (result)
  {
    uint64_t v2 = *result;
    if (a2 == 1) {
      uint64_t v2 = *result | 1;
    }
    if (a2 == 2) {
      uint64_t v2 = *result | 2;
    }
    *uint64_t result = v2;
  }
  return result;
}

unint64_t *INPrivacyEntitlementOptionsRemoveBackingType(unint64_t *result, int a2)
{
  if (result)
  {
    unint64_t v2 = *result;
    if (a2 == 1) {
      unint64_t v2 = *result & 0xFFFFFFFFFFFFFFFELL;
    }
    if (a2 == 2) {
      unint64_t v2 = *result & 0xFFFFFFFFFFFFFFFDLL;
    }
    *uint64_t result = v2;
  }
  return result;
}

id INPrivacyEntitlementOptionsGetNames(uint64_t a1)
{
  if (a1)
  {
    char v1 = a1;
    id v2 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
    int v3 = v2;
    if (v1) {
      [v2 addObject:@"contacts"];
    }
    if ((v1 & 2) != 0) {
      [v3 addObject:@"location"];
    }
    id v4 = (void *)[v3 copy];
  }
  else
  {
    id v4 = (void *)MEMORY[0x1E4F1CBF0];
  }

  return v4;
}

uint64_t INPrivacyEntitlementOptionsWithNames(void *a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  uint64_t v2 = [v1 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = 0;
    uint64_t v5 = *(void *)v10;
    do
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v10 != v5) {
          objc_enumerationMutation(v1);
        }
        uint64_t v7 = *(void **)(*((void *)&v9 + 1) + 8 * i);
        v4 |= [v7 isEqualToString:@"contacts"];
        if ([v7 isEqualToString:@"location"]) {
          v4 |= 2uLL;
        }
      }
      uint64_t v3 = [v1 countByEnumeratingWithState:&v9 objects:v13 count:16];
    }
    while (v3);
  }
  else
  {
    uint64_t v4 = 0;
  }

  return v4;
}

id INPrivacyEntitlementOptionsGetLocalizedNames(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v4 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
    if (a1)
    {
      uint64_t v5 = INLocalizedStringWithLocalizer(@"contacts", @"contacts", v3);
      [v4 addObject:v5];
    }
    if ((a1 & 2) != 0)
    {
      id v6 = INLocalizedStringWithLocalizer(@"location", @"location", v3);
      [v4 addObject:v6];
    }
    uint64_t v7 = (void *)[v4 copy];
  }
  else
  {
    uint64_t v7 = (void *)MEMORY[0x1E4F1CBF0];
  }

  return v7;
}

__CFString *INRunVoiceCommandIntentResponseCodeGetName(unint64_t a1)
{
  if (a1 > 0x15) {
    return 0;
  }
  else {
    return off_1E55167C0[a1];
  }
}

__CFString *INSetRadioStationIntentResponseCodeGetName(unint64_t a1)
{
  if (a1 > 6) {
    return 0;
  }
  else {
    return off_1E5516870[a1];
  }
}

id INIntentSlotValueTransformFromBool(void *a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v1 = objc_msgSend(a1, "values", 0);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v10;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v10 != v4) {
          objc_enumerationMutation(v1);
        }
        uint64_t v6 = INIntentSlotValueTransformFromBoolValue(*(void **)(*((void *)&v9 + 1) + 8 * i));
        if (v6)
        {
          uint64_t v7 = (void *)v6;
          goto LABEL_11;
        }
      }
      uint64_t v3 = [v1 countByEnumeratingWithState:&v9 objects:v13 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
  uint64_t v7 = 0;
LABEL_11:

  return v7;
}

id INIntentSlotValueTransformFromBoolValue(void *a1)
{
  id v1 = a1;
  uint64_t v2 = v1;
  if (v1
    && ([v1 valueMetadata],
        uint64_t v3 = objc_claimAutoreleasedReturnValue(),
        INPrivacyEntitlementValidateValueMetadata(v3),
        v3,
        [v2 hasValue]))
  {
    uint64_t v4 = objc_msgSend(NSNumber, "numberWithBool:", objc_msgSend(v2, "value"));
  }
  else
  {
    uint64_t v4 = 0;
  }

  return v4;
}

_INPBBool *INIntentSlotValueTransformToBool(void *a1)
{
  id v1 = INIntentSlotValueTransformToBoolValue(a1);
  if (v1)
  {
    uint64_t v2 = objc_alloc_init(_INPBBool);
    [(_INPBBool *)v2 addValue:v1];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

_INPBBoolValue *INIntentSlotValueTransformToBoolValue(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    uint64_t v2 = objc_alloc_init(_INPBBoolValue);
    uint64_t v3 = [v1 BOOLValue];

    [(_INPBBoolValue *)v2 setValue:v3];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INIntentSlotValueTransformFromBools(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        id v8 = INIntentSlotValueTransformFromBool(*(void **)(*((void *)&v11 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  long long v9 = (void *)[v2 copy];

  return v9;
}

id INIntentSlotValueTransformToBools(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        id v8 = INIntentSlotValueTransformToBool(*(void **)(*((void *)&v11 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  long long v9 = (void *)[v2 copy];

  return v9;
}

id INIntentSlotValueTransformFromBoolValues(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        id v8 = INIntentSlotValueTransformFromBoolValue(*(void **)(*((void *)&v11 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  long long v9 = (void *)[v2 copy];

  return v9;
}

id INIntentSlotValueTransformToBoolValues(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        id v8 = INIntentSlotValueTransformToBoolValue(*(void **)(*((void *)&v11 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  long long v9 = (void *)[v2 copy];

  return v9;
}

_INPBBool *INIntentSlotValueRedactedBoolFromBool(void *a1, uint64_t a2)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  if (v3)
  {
    uint64_t v4 = objc_alloc_init(_INPBBool);
    long long v14 = 0u;
    long long v15 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
    uint64_t v5 = objc_msgSend(v3, "values", 0);
    uint64_t v6 = [v5 countByEnumeratingWithState:&v14 objects:v18 count:16];
    if (!v6) {
      goto LABEL_13;
    }
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)v15;
    while (1)
    {
      for (uint64_t i = 0; i != v7; ++i)
      {
        if (*(void *)v15 != v8) {
          objc_enumerationMutation(v5);
        }
        id v10 = *(id *)(*((void *)&v14 + 1) + 8 * i);
        long long v11 = [v10 valueMetadata];
        uint64_t v12 = INPrivacyEntitlementOptionsForValueMetadata(v11);

        if ((v12 & a2) == 0)
        {
          if (!v10) {
            continue;
          }
          [(_INPBBool *)v4 addValue:v10];
        }
      }
      uint64_t v7 = [v5 countByEnumeratingWithState:&v14 objects:v18 count:16];
      if (!v7)
      {
LABEL_13:

        goto LABEL_15;
      }
    }
  }
  uint64_t v4 = 0;
LABEL_15:

  return v4;
}

id INIntentSlotValueRedactedBoolsFromBools(void *a1, uint64_t a2, void *a3)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a3;
  uint64_t v7 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v5, "count"));
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v8 = v5;
  uint64_t v9 = [v8 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)v17;
    do
    {
      for (uint64_t i = 0; i != v10; ++i)
      {
        if (*(void *)v17 != v11) {
          objc_enumerationMutation(v8);
        }
        long long v13 = INIntentSlotValueRedactedBoolFromBool(*(void **)(*((void *)&v16 + 1) + 8 * i), a2);
        objc_msgSend(v7, "addObject:", v13, (void)v16);
      }
      uint64_t v10 = [v8 countByEnumeratingWithState:&v16 objects:v20 count:16];
    }
    while (v10);
  }

  long long v14 = (void *)[v7 copy];

  return v14;
}

BOOL _INPBIntentVocabularyReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 1) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        long long v17 = objc_alloc_init(_INPBIntentSlotVocabularyPolicy);
        if (!PBReaderPlaceMark() || !_INPBIntentSlotVocabularyPolicyReadFrom(v17, a2)) {
          goto LABEL_33;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addIntentSlotVocabularyPolicies:", v17, 0, 0);
        }
LABEL_28:

        goto LABEL_30;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_30:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    long long v17 = objc_alloc_init(_INPBIntentTypePhrases);
    if (!PBReaderPlaceMark() || !_INPBIntentTypePhrasesReadFrom(v17, a2))
    {
LABEL_33:

      return 0;
    }
    PBReaderRecallMark();
    if (v17) {
      objc_msgSend(a1, "addIntentTypePhrases:", v17, 0, 0);
    }
    goto LABEL_28;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void sub_18CBD14A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getCSSearchableIndexClass_block_invoke_5744(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!CoreSpotlightLibraryCore_frameworkLibrary_5746)
  {
    v4[1] = MEMORY[0x1E4F143A8];
    v4[2] = 3221225472;
    v4[3] = __CoreSpotlightLibraryCore_block_invoke_5747;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    void v4[5] = v4;
    long long v5 = xmmword_1E5516920;
    uint64_t v6 = 0;
    CoreSpotlightLibraryCore_frameworkLibrary_5746 = _sl_dlopen();
    uint64_t v2 = (void *)v4[0];
    if (!CoreSpotlightLibraryCore_frameworkLibrary_5746)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("CSSearchableIndex");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    uint64_t v2 = (void *)abort_report_np();
LABEL_8:
    free(v2);
  }
  getCSSearchableIndexClass_softClass_5743 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __CoreSpotlightLibraryCore_block_invoke_5747()
{
  uint64_t result = _sl_dlopen();
  CoreSpotlightLibraryCore_frameworkLibrary_5746 = result;
  return result;
}

uint64_t _INPBDateTimeRangeReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  long long v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        long long v17 = objc_alloc_init(_INPBDateTimeRangeValue);
        if (!PBReaderPlaceMark() || !_INPBDateTimeRangeValueReadFrom(v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addValue:", v17, 0, 0);
        }
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _INPBBoolReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  long long v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        long long v17 = objc_alloc_init(_INPBBoolValue);
        if (!PBReaderPlaceMark() || !_INPBBoolValueReadFrom(v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addValue:", v17, 0, 0);
        }
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _INPBRunWorkflowIntentResponseReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  long long v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        long long v17 = objc_alloc_init(_INPBArchivedObject);
        if (!PBReaderPlaceMark() || !_INPBArchivedObjectReadFrom(v17, a2)) {
          goto LABEL_68;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setUnderlyingIntent:", v17, 0, 0);
        goto LABEL_46;
      case 2u:
        long long v17 = objc_alloc_init(_INPBArchivedObject);
        if (!PBReaderPlaceMark() || !_INPBArchivedObjectReadFrom(v17, a2)) {
          goto LABEL_68;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setUnderlyingIntentResponse:", v17, 0, 0);
        goto LABEL_46;
      case 3u:
        PBReaderReadString();
        long long v17 = (_INPBArchivedObject *)objc_claimAutoreleasedReturnValue();
        [a1 setUtterance:v17];
        goto LABEL_46;
      case 4u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v21 = 0;
                goto LABEL_57;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v21 = 0;
        }
LABEL_57:
        [a1 setWaitingForResume:v21 != 0];
        goto LABEL_66;
      case 5u:
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v27 = 0;
        while (2)
        {
          uint64_t v28 = *v3;
          unint64_t v29 = *(void *)(a2 + v28);
          if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
            *(void *)(a2 + v28) = v29 + 1;
            v27 |= (unint64_t)(v30 & 0x7F) << v25;
            if (v30 < 0)
            {
              v25 += 7;
              BOOL v14 = v26++ >= 9;
              if (v14)
              {
                uint64_t v27 = 0;
                goto LABEL_61;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v27 = 0;
        }
LABEL_61:
        [a1 setContinueRunning:v27 != 0];
        goto LABEL_66;
      case 6u:
        long long v17 = objc_alloc_init(_INPBVoiceCommandStepInfo);
        if (PBReaderPlaceMark() && _INPBVoiceCommandStepInfoReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          if (v17) {
            objc_msgSend(a1, "addStep:", v17, 0, 0);
          }
LABEL_46:

LABEL_66:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_68:

        return 0;
      case 7u:
        char v31 = 0;
        unsigned int v32 = 0;
        uint64_t v33 = 0;
        while (2)
        {
          uint64_t v34 = *v3;
          unint64_t v35 = *(void *)(a2 + v34);
          if (v35 == -1 || v35 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v36 = *(unsigned char *)(*(void *)(a2 + *v7) + v35);
            *(void *)(a2 + v34) = v35 + 1;
            v33 |= (unint64_t)(v36 & 0x7F) << v31;
            if (v36 < 0)
            {
              v31 += 7;
              BOOL v14 = v32++ >= 9;
              if (v14)
              {
                uint64_t v33 = 0;
                goto LABEL_65;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v33 = 0;
        }
LABEL_65:
        [a1 setRequestsIntentExecution:v33 != 0];
        goto LABEL_66;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_66;
    }
  }
}

uint64_t _INPBSendMessageAttachmentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  long long v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        long long v17 = objc_alloc_init(_INPBFileDataAttachment);
        if (!PBReaderPlaceMark() || !_INPBFileDataAttachmentReadFrom(v17, a2)) {
          goto LABEL_56;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setFile:", v17, 0, 0);
        goto LABEL_48;
      case 2u:
        long long v17 = objc_alloc_init(_INPBURLValue);
        if (!PBReaderPlaceMark() || !_INPBURLValueReadFrom(v17, a2)) {
          goto LABEL_56;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setFileURL:", v17, 0, 0);
        goto LABEL_48;
      case 3u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v21 = 0;
                goto LABEL_54;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v21 = 0;
        }
LABEL_54:
        [a1 setCurrentLocation:v21 != 0];
        goto LABEL_49;
      case 4u:
        long long v17 = objc_alloc_init(_INPBURLValue);
        if (!PBReaderPlaceMark() || !_INPBURLValueReadFrom(v17, a2)) {
          goto LABEL_56;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSpeechDataURL:", v17, 0, 0);
        goto LABEL_48;
      case 5u:
        long long v17 = objc_alloc_init(_INPBFileDataAttachment);
        if (!PBReaderPlaceMark() || !_INPBFileDataAttachmentReadFrom(v17, a2)) {
          goto LABEL_56;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAudioMessageFile:", v17, 0, 0);
        goto LABEL_48;
      case 6u:
        long long v17 = objc_alloc_init(_INPBURLValue);
        if (!PBReaderPlaceMark() || !_INPBURLValueReadFrom(v17, a2)) {
          goto LABEL_56;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAudioMessageFileURL:", v17, 0, 0);
        goto LABEL_48;
      case 7u:
        long long v17 = objc_alloc_init(_INPBURLValue);
        if (PBReaderPlaceMark() && _INPBURLValueReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setSharedLink:", v17, 0, 0);
LABEL_48:

LABEL_49:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_56:

        return 0;
      case 8u:
        PBReaderReadString();
        long long v17 = (_INPBFileDataAttachment *)objc_claimAutoreleasedReturnValue();
        [a1 setTypeIdentifier:v17];
        goto LABEL_48;
      case 9u:
        PBReaderReadString();
        long long v17 = (_INPBFileDataAttachment *)objc_claimAutoreleasedReturnValue();
        [a1 setPhAssetId:v17];
        goto LABEL_48;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_49;
    }
  }
}

INPaymentAmount *INIntentSlotValueTransformFromPaymentAmountValue(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    uint64_t v2 = [INPaymentAmount alloc];
    int v3 = [v1 hasAmountType];
    uint64_t v4 = [v1 amountType] - 1;
    if (v4 <= 5) {
      uint64_t v5 = v4 + 1;
    }
    else {
      uint64_t v5 = 0;
    }
    if (v3) {
      uint64_t v6 = v5;
    }
    else {
      uint64_t v6 = 0;
    }
    uint64_t v7 = [v1 value];

    char v8 = INIntentSlotValueTransformFromCurrencyAmountValue(v7);
    unsigned int v9 = [(INPaymentAmount *)v2 initWithAmountType:v6 amount:v8];
  }
  else
  {
    unsigned int v9 = 0;
  }

  return v9;
}

_INPBPaymentAmountValue *INIntentSlotValueTransformToPaymentAmountValue(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    uint64_t v2 = objc_alloc_init(_INPBPaymentAmountValue);
    int v3 = [v1 amount];
    uint64_t v4 = INIntentSlotValueTransformToCurrencyAmountValue(v3);
    [(_INPBPaymentAmountValue *)v2 setValue:v4];

    uint64_t v5 = [v1 amountType];
    if ((unint64_t)(v5 - 1) < 6) {
      uint64_t v6 = v5;
    }
    else {
      uint64_t v6 = 0x7FFFFFFFLL;
    }
    [(_INPBPaymentAmountValue *)v2 setAmountType:v6];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INIntentSlotValueTransformFromPaymentAmountValues(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          char v8 = INIntentSlotValueTransformFromPaymentAmountValue(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    unsigned int v9 = (void *)[v2 copy];
  }
  else
  {
    unsigned int v9 = 0;
  }

  return v9;
}

id INIntentSlotValueTransformToPaymentAmountValues(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          char v8 = INIntentSlotValueTransformToPaymentAmountValue(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    unsigned int v9 = (void *)[v2 copy];
  }
  else
  {
    unsigned int v9 = 0;
  }

  return v9;
}

id INIntentSlotValueRedactedPaymentAmountValueFromPaymentAmountValue(void *a1)
{
  id v1 = a1;

  return v1;
}

INModifyNickname *INIntentSlotValueTransformFromModifyNickname(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    uint64_t v2 = [INModifyNickname alloc];
    id v3 = [v1 targetNickname];
    uint64_t v4 = INIntentSlotValueTransformFromString(v3);
    uint64_t v5 = NSNumber;
    uint64_t v6 = [v1 isRemoval];

    uint64_t v7 = [v5 numberWithBool:v6];
    char v8 = [(INModifyNickname *)v2 initWithTargetNickname:v4 isRemoval:v7];
  }
  else
  {
    char v8 = 0;
  }

  return v8;
}

_INPBModifyNickname *INIntentSlotValueTransformToModifyNickname(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    uint64_t v2 = objc_alloc_init(_INPBModifyNickname);
    id v3 = [v1 targetNickname];
    uint64_t v4 = INIntentSlotValueTransformToString(v3);
    [(_INPBModifyNickname *)v2 setTargetNickname:v4];

    uint64_t v5 = [v1 isRemoval];

    -[_INPBModifyNickname setIsRemoval:](v2, "setIsRemoval:", [v5 BOOLValue]);
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INIntentSlotValueTransformFromModifyNicknames(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          char v8 = INIntentSlotValueTransformFromModifyNickname(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    unsigned int v9 = (void *)[v2 copy];
  }
  else
  {
    unsigned int v9 = 0;
  }

  return v9;
}

id INIntentSlotValueTransformToModifyNicknames(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          char v8 = INIntentSlotValueTransformToModifyNickname(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    unsigned int v9 = (void *)[v2 copy];
  }
  else
  {
    unsigned int v9 = 0;
  }

  return v9;
}

id INIntentSlotValueRedactedModifyNicknameFromModifyNickname(void *a1)
{
  id v1 = a1;

  return v1;
}

INCallGroup *INIntentSlotValueTransformFromCallGroup(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    uint64_t v2 = [INCallGroup alloc];
    id v3 = [v1 groupName];
    uint64_t v4 = INIntentSlotValueTransformFromString(v3);
    uint64_t v5 = [v1 groupId];

    uint64_t v6 = INIntentSlotValueTransformFromString(v5);
    uint64_t v7 = [(INCallGroup *)v2 initWithGroupName:v4 groupId:v6];
  }
  else
  {
    uint64_t v7 = 0;
  }

  return v7;
}

_INPBCallGroup *INIntentSlotValueTransformToCallGroup(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    uint64_t v2 = objc_alloc_init(_INPBCallGroup);
    id v3 = [v1 groupName];
    uint64_t v4 = INIntentSlotValueTransformToString(v3);
    [(_INPBCallGroup *)v2 setGroupName:v4];

    uint64_t v5 = [v1 groupId];

    uint64_t v6 = INIntentSlotValueTransformToString(v5);
    [(_INPBCallGroup *)v2 setGroupId:v6];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INIntentSlotValueTransformFromCallGroups(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          char v8 = INIntentSlotValueTransformFromCallGroup(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    unsigned int v9 = (void *)[v2 copy];
  }
  else
  {
    unsigned int v9 = 0;
  }

  return v9;
}

id INIntentSlotValueTransformToCallGroups(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          char v8 = INIntentSlotValueTransformToCallGroup(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    unsigned int v9 = (void *)[v2 copy];
  }
  else
  {
    unsigned int v9 = 0;
  }

  return v9;
}

id INIntentSlotValueRedactedCallGroupFromCallGroup(void *a1)
{
  id v1 = a1;

  return v1;
}

uint64_t INCarAudioSourceHasBackingType(unint64_t a1)
{
  return (a1 < 0xA) & (0x3FEu >> a1);
}

uint64_t INCarAudioSourceGetBackingType(uint64_t result)
{
  if ((unint64_t)(result - 1) < 9) {
    return result;
  }
  else {
    return 0x7FFFFFFFLL;
  }
}

uint64_t INCarAudioSourceGetFacadeType(int a1, int a2)
{
  uint64_t v2 = (a2 - 1);
  if (v2 <= 8) {
    uint64_t v3 = v2 + 1;
  }
  else {
    uint64_t v3 = 0;
  }
  if (a1) {
    return v3;
  }
  else {
    return 0;
  }
}

__CFString *INCarAudioSourceGetName(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 8) {
    return @"unknown";
  }
  else {
    return *(&off_1E5516AF0 + a1 - 1);
  }
}

uint64_t INCarAudioSourceWithString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"CarPlay"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"iPod"])
  {
    uint64_t v2 = 2;
  }
  else if ([v1 isEqualToString:@"radio"])
  {
    uint64_t v2 = 3;
  }
  else if ([v1 isEqualToString:@"bluetooth"])
  {
    uint64_t v2 = 4;
  }
  else if ([v1 isEqualToString:@"AUX"])
  {
    uint64_t v2 = 5;
  }
  else if ([v1 isEqualToString:@"USB"])
  {
    uint64_t v2 = 6;
  }
  else if ([v1 isEqualToString:@"memoryCard"])
  {
    uint64_t v2 = 7;
  }
  else if ([v1 isEqualToString:@"opticalDrive"])
  {
    uint64_t v2 = 8;
  }
  else if ([v1 isEqualToString:@"hardDrive"])
  {
    uint64_t v2 = 9;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INCarAudioSourceGetLocalizedName(uint64_t a1, void *a2)
{
  id v3 = a2;
  switch(a1)
  {
    case 1:
      uint64_t v4 = @"CarPlay";
      goto LABEL_12;
    case 2:
      uint64_t v4 = @"iPod";
      goto LABEL_12;
    case 3:
      uint64_t v4 = @"radio";
      goto LABEL_12;
    case 4:
      uint64_t v4 = @"bluetooth";
      goto LABEL_12;
    case 5:
      uint64_t v4 = @"AUX";
      goto LABEL_12;
    case 6:
      uint64_t v4 = @"USB";
      goto LABEL_12;
    case 7:
      uint64_t v4 = @"memory card";
      goto LABEL_12;
    case 8:
      uint64_t v4 = @"optical drive";
      goto LABEL_12;
    case 9:
      uint64_t v4 = @"hard drive";
LABEL_12:
      uint64_t v5 = INLocalizedStringWithLocalizer(v4, v4, v3);
      break;
    default:
      uint64_t v5 = 0;
      break;
  }

  return v5;
}

id __INExtensionGetDefaultIntentHandler(void *a1, void *a2)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = 0;
  if (v3 && a2)
  {
    uint64_t v5 = [a2 _className];
    uint64_t v6 = [v5 stringByAppendingString:@"Handling"];

    uint64_t v7 = NSProtocolFromString(v6);
    if (v7 && [v3 conformsToProtocol:v7])
    {
      id v4 = v3;
    }
    else
    {
      char v8 = (void *)INSiriLogContextIntents;
      if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_ERROR))
      {
        unint64_t v10 = v8;
        long long v11 = (objc_class *)objc_opt_class();
        long long v12 = NSStringFromClass(v11);
        int v13 = 136315906;
        long long v14 = "__INExtensionGetDefaultIntentHandler";
        __int16 v15 = 2114;
        uint64_t v16 = v12;
        __int16 v17 = 2082;
        long long v18 = "__INExtensionGetDefaultIntentHandler";
        __int16 v19 = 2114;
        unsigned int v20 = v6;
        _os_log_error_impl(&dword_18CB2F000, v10, OS_LOG_TYPE_ERROR, "%s Class %{public}@ must either implement the method %{public}s or must itself conform to protocol %{public}@", (uint8_t *)&v13, 0x2Au);
      }
      id v4 = 0;
    }
  }

  return v4;
}

id _INExtensionContextWithContext(void *a1)
{
  uint64_t v30 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      uint64_t v2 = v1;
    }
    else {
      uint64_t v2 = 0;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  id v3 = v2;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  id v4 = [v3 inputItems];
  uint64_t v5 = [v4 countByEnumeratingWithState:&v21 objects:v29 count:16];
  if (v5)
  {
    uint64_t v6 = v5;
    id v18 = v3;
    id v19 = v1;
    uint64_t v7 = *(void *)v22;
    while (2)
    {
      for (uint64_t i = 0; i != v6; ++i)
      {
        if (*(void *)v22 != v7) {
          objc_enumerationMutation(v4);
        }
        unsigned int v9 = objc_msgSend(*(id *)(*((void *)&v21 + 1) + 8 * i), "userInfo", v18, v19);
        unint64_t v10 = [v9 objectForKey:@"_INExtensionItemExtensionContextData"];

        if (v10)
        {
          objc_opt_class();
          if (objc_opt_isKindOfClass())
          {
            long long v11 = (void *)MEMORY[0x1E4F28DC0];
            uint64_t v12 = objc_opt_class();
            id v20 = 0;
            int v13 = [v11 unarchivedObjectOfClass:v12 fromData:v10 error:&v20];
            id v14 = v20;
            __int16 v15 = v14;
            if (v13)
            {

              goto LABEL_22;
            }
            if (v14)
            {
              uint64_t v16 = INSiriLogContextIntents;
              if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_ERROR))
              {
                *(_DWORD *)buf = 136315394;
                unsigned int v26 = "_INExtensionContextWithContext";
                __int16 v27 = 2112;
                uint64_t v28 = v15;
                _os_log_error_impl(&dword_18CB2F000, v16, OS_LOG_TYPE_ERROR, "%s Error decoding extension context: %@", buf, 0x16u);
              }
            }
          }
        }
      }
      uint64_t v6 = [v4 countByEnumeratingWithState:&v21 objects:v29 count:16];
      if (v6) {
        continue;
      }
      break;
    }
    int v13 = 0;
LABEL_22:
    id v3 = v18;
    id v1 = v19;
  }
  else
  {
    int v13 = 0;
  }

  return v13;
}

void __INExtensionInitialize(void *a1, void *a2)
{
  if (a1 != a2)
  {
    uint64_t v4 = [a1 instanceMethodForSelector:sel_beginRequestWithExtensionContext_];
    if (v4 != [a2 instanceMethodForSelector:sel_beginRequestWithExtensionContext_])
    {
      uint64_t v5 = NSString;
      uint64_t v6 = NSStringFromClass((Class)a1);
      uint64_t v7 = NSStringFromSelector(sel_beginRequestWithExtensionContext_);
      id v9 = [v5 stringWithFormat:@"%@ is not allowed to override %@", v6, v7];

      char v8 = [MEMORY[0x1E4F1CA00] exceptionWithName:*MEMORY[0x1E4F1C4A8] reason:v9 userInfo:0];
      [v8 raise];
    }
  }
}

uint64_t _INExtensionValidateClass(void *a1)
{
  id v1 = a1;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    char isKindOfClass = 1;
  }
  else
  {
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();
  }

  return isKindOfClass & 1;
}

BOOL _INPBCreateEventIntentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        __int16 v17 = objc_alloc_init(_INPBIntentMetadata);
        if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_39;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntentMetadata:", v17, 0, 0);
        goto LABEL_35;
      case 2u:
        PBReaderReadString();
        __int16 v17 = (_INPBIntentMetadata *)objc_claimAutoreleasedReturnValue();
        [a1 setTitle:v17];
        goto LABEL_35;
      case 3u:
        __int16 v17 = objc_alloc_init(_INPBDateTimeRangeValue);
        if (!PBReaderPlaceMark() || (_INPBDateTimeRangeValueReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_39;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setDateTimeRange:", v17, 0, 0);
        goto LABEL_35;
      case 4u:
        __int16 v17 = objc_alloc_init(_INPBContact);
        if (!PBReaderPlaceMark() || !_INPBContactReadFrom(v17, a2)) {
          goto LABEL_39;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addParticipants:", v17, 0, 0);
        }
        goto LABEL_35;
      case 5u:
        __int16 v17 = objc_alloc_init(_INPBLocation);
        if PBReaderPlaceMark() && (_INPBLocationReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setLocation:", v17, 0, 0);
LABEL_35:

LABEL_36:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_39:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_36;
    }
  }
}

uint64_t INAudioCallTTYTypeHasBackingType(unint64_t a1)
{
  return (a1 < 4) & (0xEu >> (a1 & 0xF));
}

uint64_t INAudioCallTTYTypeGetBackingType(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) >= 3) {
    return 0x7FFFFFFFLL;
  }
  else {
    return (a1 - 1);
  }
}

uint64_t INAudioCallTTYTypeGetFacadeType(unsigned __int8 a1, unsigned int a2)
{
  if (((a2 < 3) & a1) != 0) {
    return a2 + 1;
  }
  else {
    return 0;
  }
}

__CFString *INAudioCallTTYTypeGetName(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2) {
    return @"unknown";
  }
  else {
    return *(&off_1E5516B38 + a1 - 1);
  }
}

uint64_t INAudioCallTTYTypeWithString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"none"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"direct"])
  {
    uint64_t v2 = 2;
  }
  else if ([v1 isEqualToString:@"relay"])
  {
    uint64_t v2 = 3;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INAudioCallTTYTypeGetLocalizedName(uint64_t a1, void *a2)
{
  id v3 = a2;
  switch(a1)
  {
    case 3:
      uint64_t v4 = @"relay";
      goto LABEL_7;
    case 2:
      uint64_t v4 = @"direct";
      goto LABEL_7;
    case 1:
      uint64_t v4 = @"none";
LABEL_7:
      uint64_t v5 = INLocalizedStringWithLocalizer(v4, v4, v3);
      goto LABEL_9;
  }
  uint64_t v5 = 0;
LABEL_9:

  return v5;
}

uint64_t _INPBHomeEntityReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    int v16 = v10 & 7;
    if (v15 || v16 == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        id v18 = objc_alloc_init(_INPBString);
        if (!PBReaderPlaceMark() || (_INPBStringReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_108;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setName:", v18, 0, 0);
        goto LABEL_78;
      case 2u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_85;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v21;
        }
LABEL_85:
        objc_msgSend(a1, "setEntityType:", v25, v53, v54);
        goto LABEL_79;
      case 3u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                uint64_t v32 = 0;
                goto LABEL_90;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v32 = 0;
        }
        else {
          uint64_t v32 = v28;
        }
LABEL_90:
        objc_msgSend(a1, "setDeviceType:", v32, v53, v54);
        goto LABEL_79;
      case 4u:
        if (v16 == 2)
        {
          uint64_t v53 = 0;
          uint64_t v54 = 0;
          uint64_t result = PBReaderPlaceMark();
          if (!result) {
            return result;
          }
          while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4) && !*(unsigned char *)(a2 + *v5))
          {
            char v34 = 0;
            unsigned int v35 = 0;
            uint64_t v36 = 0;
            while (1)
            {
              uint64_t v37 = *v3;
              unint64_t v38 = *(void *)(a2 + v37);
              if (v38 == -1 || v38 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v39 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
              *(void *)(a2 + v37) = v38 + 1;
              v36 |= (unint64_t)(v39 & 0x7F) << v34;
              if (v39 < 0)
              {
                v34 += 7;
                BOOL v14 = v35++ >= 9;
                if (!v14) {
                  continue;
                }
              }
              goto LABEL_50;
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_50:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          char v47 = 0;
          unsigned int v48 = 0;
          uint64_t v49 = 0;
          while (1)
          {
            uint64_t v50 = *v3;
            unint64_t v51 = *(void *)(a2 + v50);
            if (v51 == -1 || v51 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v52 = *(unsigned char *)(*(void *)(a2 + *v7) + v51);
            *(void *)(a2 + v50) = v51 + 1;
            v49 |= (unint64_t)(v52 & 0x7F) << v47;
            if (v52 < 0)
            {
              v47 += 7;
              BOOL v14 = v48++ >= 9;
              if (!v14) {
                continue;
              }
            }
            goto LABEL_105;
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_105:
          PBRepeatedInt32Add();
        }
        goto LABEL_79;
      case 5u:
        PBReaderReadString();
        id v18 = (_INPBString *)objc_claimAutoreleasedReturnValue();
        [a1 setEntityIdentifier:v18];
        goto LABEL_78;
      case 6u:
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        while (2)
        {
          uint64_t v43 = *v3;
          unint64_t v44 = *(void *)(a2 + v43);
          if (v44 == -1 || v44 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v45 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
            *(void *)(a2 + v43) = v44 + 1;
            v42 |= (unint64_t)(v45 & 0x7F) << v40;
            if (v45 < 0)
            {
              v40 += 7;
              BOOL v14 = v41++ >= 9;
              if (v14)
              {
                uint64_t v46 = 0;
                goto LABEL_95;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v46 = 0;
        }
        else {
          uint64_t v46 = v42;
        }
LABEL_95:
        objc_msgSend(a1, "setSceneType:", v46, v53, v54);
        goto LABEL_79;
      case 7u:
        id v18 = objc_alloc_init(_INPBDataString);
        if (!PBReaderPlaceMark() || !_INPBDataStringReadFrom(v18, a2)) {
          goto LABEL_108;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRoom:", v18, 0, 0);
        goto LABEL_78;
      case 8u:
        id v18 = objc_alloc_init(_INPBDataString);
        if (!PBReaderPlaceMark() || !_INPBDataStringReadFrom(v18, a2)) {
          goto LABEL_108;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setZone:", v18, 0, 0);
        goto LABEL_78;
      case 9u:
        id v18 = objc_alloc_init(_INPBDataString);
        if (!PBReaderPlaceMark() || !_INPBDataStringReadFrom(v18, a2)) {
          goto LABEL_108;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setHome:", v18, 0, 0);
        goto LABEL_78;
      case 0xAu:
        id v18 = objc_alloc_init(_INPBDataString);
        if (!PBReaderPlaceMark() || !_INPBDataStringReadFrom(v18, a2)) {
          goto LABEL_108;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEntityName:", v18, 0, 0);
        goto LABEL_78;
      case 0xBu:
        id v18 = objc_alloc_init(_INPBDataString);
        if (!PBReaderPlaceMark() || !_INPBDataStringReadFrom(v18, a2)) {
          goto LABEL_108;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setGroup:", v18, 0, 0);
        goto LABEL_78;
      case 0xCu:
        id v18 = objc_alloc_init(_INPBDataString);
        uint64_t v53 = 0;
        uint64_t v54 = 0;
        if (PBReaderPlaceMark() && _INPBDataStringReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          if (v18) {
            objc_msgSend(a1, "addZones:", v18, 0, 0);
          }
LABEL_78:

LABEL_79:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_108:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_79;
    }
  }
}

BOOL INUpdateEventConfirmationReasonHasBackingType(uint64_t a1)
{
  return (unint64_t)(a1 - 1) < 2;
}

uint64_t INUpdateEventConfirmationReasonGetBackingType(uint64_t a1)
{
  if (a1 == 1) {
    unsigned int v1 = 1;
  }
  else {
    unsigned int v1 = 0x7FFFFFFF;
  }
  if (a1 == 2) {
    return 2;
  }
  else {
    return v1;
  }
}

uint64_t INUpdateEventConfirmationReasonGetFacadeType(int a1, int a2)
{
  uint64_t v2 = 2 * (a2 == 2);
  if (a2 == 1) {
    uint64_t v2 = 1;
  }
  if (a1) {
    return v2;
  }
  else {
    return 0;
  }
}

__CFString *INUpdateEventConfirmationReasonGetName(uint64_t a1)
{
  unsigned int v1 = @"unknown";
  if (a1 == 2) {
    unsigned int v1 = @"updateAllRecurrences";
  }
  if (a1 == 1) {
    return @"scheduleConflict";
  }
  else {
    return v1;
  }
}

uint64_t INUpdateEventConfirmationReasonWithString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"scheduleConflict"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"updateAllRecurrences"])
  {
    uint64_t v2 = 2;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INUpdateEventConfirmationReasonGetLocalizedName(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1 == 2)
  {
    uint64_t v4 = @"update all recurrences";
    goto LABEL_5;
  }
  if (a1 == 1)
  {
    uint64_t v4 = @"schedule conflict";
LABEL_5:
    uint64_t v5 = INLocalizedStringWithLocalizer(v4, v4, v3);
    goto LABEL_7;
  }
  uint64_t v5 = 0;
LABEL_7:

  return v5;
}

uint64_t INSaveHealthSampleIntentResponseCodeGetName(unint64_t a1)
{
  if (a1 > 8) {
    return 0;
  }
  else {
    return (uint64_t)*(&off_1E5516D40 + a1);
  }
}

uint64_t _INPBActivateCarSignalIntentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      int v16 = v10 & 7;
      if (v15 || v16 == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((v10 >> 3) == 1) {
        break;
      }
      if (v18 == 3)
      {
        if (v16 == 2)
        {
          uint64_t result = PBReaderPlaceMark();
          if (!result) {
            return result;
          }
          while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4) && !*(unsigned char *)(a2 + *v5))
          {
            char v21 = 0;
            unsigned int v22 = 0;
            uint64_t v23 = 0;
            while (1)
            {
              uint64_t v24 = *v3;
              unint64_t v25 = *(void *)(a2 + v24);
              if (v25 == -1 || v25 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v25);
              *(void *)(a2 + v24) = v25 + 1;
              v23 |= (unint64_t)(v26 & 0x7F) << v21;
              if (v26 < 0)
              {
                v21 += 7;
                BOOL v14 = v22++ >= 9;
                if (!v14) {
                  continue;
                }
              }
              goto LABEL_40;
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_40:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v29 = 0;
          while (1)
          {
            uint64_t v30 = *v3;
            unint64_t v31 = *(void *)(a2 + v30);
            if (v31 == -1 || v31 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
            *(void *)(a2 + v30) = v31 + 1;
            v29 |= (unint64_t)(v32 & 0x7F) << v27;
            if (v32 < 0)
            {
              v27 += 7;
              BOOL v14 = v28++ >= 9;
              if (!v14) {
                continue;
              }
            }
            goto LABEL_52;
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_52:
          PBRepeatedInt32Add();
        }
        goto LABEL_53;
      }
      if (v18 == 2)
      {
        char v19 = objc_alloc_init(_INPBDataString);
        if (!PBReaderPlaceMark() || !_INPBDataStringReadFrom(v19, a2)) {
          goto LABEL_56;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCarName:", v19, 0, 0);
LABEL_27:

        goto LABEL_53;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_53:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v19 = objc_alloc_init(_INPBIntentMetadata);
    if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v19, a2) & 1) == 0)
    {
LABEL_56:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setIntentMetadata:", v19, 0, 0);
    goto LABEL_27;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

INLodgingReservation *INIntentSlotValueTransformFromLodgingReservation(INLodgingReservation *a1)
{
  if (a1)
  {
    uint64_t v2 = a1;
    id v3 = [(INLodgingReservation *)v2 reservation];
    char v21 = [INLodgingReservation alloc];
    char v26 = [v3 itemReference];
    unsigned int v28 = INIntentSlotValueTransformFromDataString(v26);
    char v27 = [v3 reservationNumber];
    unint64_t v25 = [v3 bookingTime];
    unint64_t v18 = INIntentSlotValueTransformFromTimestamp(v25);
    int v4 = [v3 hasReservationStatus];
    uint64_t v5 = [v3 reservationStatus] - 2;
    if (v5 <= 3) {
      uint64_t v6 = v5 + 1;
    }
    else {
      uint64_t v6 = 0;
    }
    if (!v4) {
      uint64_t v6 = 0;
    }
    uint64_t v19 = v6;
    __int16 v17 = [v3 reservationHolderName];
    uint64_t v24 = [v3 actions];
    int v16 = INIntentSlotValueTransformFromReservationActions(v24);
    uint64_t v23 = [v3 url];
    int v15 = INIntentSlotValueTransformFromURLValue(v23);
    unsigned int v20 = [(INLodgingReservation *)v2 lodgingBusinessLocation];
    BOOL v14 = INIntentSlotValueTransformFromLocation(v20);
    uint64_t v7 = [(INLodgingReservation *)v2 reservationDuration];
    char v8 = INIntentSlotValueTransformFromDateTimeRange(v7);
    unsigned int v9 = [(INLodgingReservation *)v2 numberOfAdults];
    unint64_t v10 = INIntentSlotValueTransformFromInteger(v9);
    uint64_t v11 = [(INLodgingReservation *)v2 numberOfChildren];

    unint64_t v12 = INIntentSlotValueTransformFromInteger(v11);
    unsigned int v22 = [(INLodgingReservation *)v21 initWithItemReference:v28 reservationNumber:v27 bookingTime:v18 reservationStatus:v19 reservationHolderName:v17 actions:v16 URL:v15 lodgingBusinessLocation:v14 reservationDuration:v8 numberOfAdults:v10 numberOfChildren:v12];

    a1 = v22;
    uint64_t v1 = vars8;
  }
  return a1;
}

_INPBLodgingReservation *INIntentSlotValueTransformToLodgingReservation(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    uint64_t v2 = objc_alloc_init(_INPBReservation);
    id v3 = [v1 itemReference];
    int v4 = INIntentSlotValueTransformToDataString(v3);
    [(_INPBReservation *)v2 setItemReference:v4];

    uint64_t v5 = [v1 reservationNumber];
    [(_INPBReservation *)v2 setReservationNumber:v5];

    uint64_t v6 = [v1 bookingTime];
    uint64_t v7 = INIntentSlotValueTransformToTimestamp(v6);
    [(_INPBReservation *)v2 setBookingTime:v7];

    unint64_t v8 = [v1 reservationStatus];
    if (v8 < 5) {
      uint64_t v9 = (v8 + 1);
    }
    else {
      uint64_t v9 = 0x7FFFFFFFLL;
    }
    [(_INPBReservation *)v2 setReservationStatus:v9];
    unint64_t v10 = [v1 reservationHolderName];
    [(_INPBReservation *)v2 setReservationHolderName:v10];

    uint64_t v11 = [v1 actions];
    unint64_t v12 = INIntentSlotValueTransformToReservationActions(v11);
    [(_INPBReservation *)v2 setActions:v12];

    char v13 = [v1 URL];
    BOOL v14 = INIntentSlotValueTransformToURLValue(v13);
    [(_INPBReservation *)v2 setUrl:v14];

    int v15 = objc_alloc_init(_INPBLodgingReservation);
    [(_INPBLodgingReservation *)v15 setReservation:v2];
    int v16 = [v1 lodgingBusinessLocation];
    __int16 v17 = INIntentSlotValueTransformToLocation(v16);
    [(_INPBLodgingReservation *)v15 setLodgingBusinessLocation:v17];

    unint64_t v18 = [v1 reservationDuration];
    uint64_t v19 = INIntentSlotValueTransformToDateTimeRange(v18);
    [(_INPBLodgingReservation *)v15 setReservationDuration:v19];

    unsigned int v20 = [v1 numberOfAdults];
    char v21 = INIntentSlotValueTransformToInteger(v20);
    [(_INPBLodgingReservation *)v15 setNumberOfAdults:v21];

    unsigned int v22 = [v1 numberOfChildren];

    uint64_t v23 = INIntentSlotValueTransformToInteger(v22);
    [(_INPBLodgingReservation *)v15 setNumberOfChildren:v23];
  }
  else
  {
    int v15 = 0;
  }

  return v15;
}

id INIntentSlotValueTransformFromLodgingReservations(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          unint64_t v8 = INIntentSlotValueTransformFromLodgingReservation(*(INLodgingReservation **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    uint64_t v9 = (void *)[v2 copy];
  }
  else
  {
    uint64_t v9 = 0;
  }

  return v9;
}

id INIntentSlotValueTransformToLodgingReservations(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          unint64_t v8 = INIntentSlotValueTransformToLodgingReservation(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    uint64_t v9 = (void *)[v2 copy];
  }
  else
  {
    uint64_t v9 = 0;
  }

  return v9;
}

id INIntentSlotValueRedactedLodgingReservationFromLodgingReservation(void *a1)
{
  id v1 = a1;

  return v1;
}

id INIntentSlotValueTransformFromString(void *a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v1 = objc_msgSend(a1, "values", 0);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v10;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v10 != v4) {
          objc_enumerationMutation(v1);
        }
        uint64_t v6 = INIntentSlotValueTransformFromStringValue(*(void **)(*((void *)&v9 + 1) + 8 * i));
        if (v6)
        {
          uint64_t v7 = (void *)v6;
          goto LABEL_11;
        }
      }
      uint64_t v3 = [v1 countByEnumeratingWithState:&v9 objects:v13 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
  uint64_t v7 = 0;
LABEL_11:

  return v7;
}

id INIntentSlotValueTransformFromStringValue(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 valueMetadata];
  INPrivacyEntitlementValidateValueMetadata(v2);

  uint64_t v3 = [v1 value];
  uint64_t v4 = (void *)[v3 copy];

  return v4;
}

_INPBString *INIntentSlotValueTransformToString(void *a1)
{
  id v1 = INIntentSlotValueTransformToStringValue(a1);
  if (v1)
  {
    uint64_t v2 = objc_alloc_init(_INPBString);
    [(_INPBString *)v2 addValue:v1];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

_INPBStringValue *INIntentSlotValueTransformToStringValue(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    uint64_t v2 = objc_alloc_init(_INPBStringValue);
    [(_INPBStringValue *)v2 setValue:v1];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INIntentSlotValueTransformFromStringValues(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        unint64_t v8 = INIntentSlotValueTransformFromStringValue(*(void **)(*((void *)&v11 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  long long v9 = (void *)[v2 copy];

  return v9;
}

id INIntentSlotValueTransformFromStrings(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        unint64_t v8 = INIntentSlotValueTransformFromString(*(void **)(*((void *)&v11 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  long long v9 = (void *)[v2 copy];

  return v9;
}

id INIntentSlotValueTransformToStringValues(void *a1)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v11;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v11 != v6) {
          objc_enumerationMutation(v3);
        }
        unint64_t v8 = INIntentSlotValueTransformToStringValue(*(void **)(*((void *)&v10 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v10);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v5);
  }

  return v2;
}

id INIntentSlotValueRedactedValueFromStringValue(void *a1, uint64_t a2)
{
  id v3 = a1;
  uint64_t v4 = [v3 valueMetadata];
  uint64_t v5 = INPrivacyEntitlementOptionsForValueMetadata(v4);

  if ((v5 & a2) != 0) {
    id v6 = 0;
  }
  else {
    id v6 = v3;
  }

  return v6;
}

_INPBString *INIntentSlotValueRedactedStringFromString(void *a1, uint64_t a2, void *a3)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a3;
  if (v5)
  {
    uint64_t v7 = objc_alloc_init(_INPBString);
    long long v15 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
    long long v18 = 0u;
    unint64_t v8 = objc_msgSend(v5, "values", 0);
    uint64_t v9 = [v8 countByEnumeratingWithState:&v15 objects:v19 count:16];
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = *(void *)v16;
      do
      {
        for (uint64_t i = 0; i != v10; ++i)
        {
          if (*(void *)v16 != v11) {
            objc_enumerationMutation(v8);
          }
          long long v13 = INIntentSlotValueRedactedValueFromStringValue(*(void **)(*((void *)&v15 + 1) + 8 * i), a2);
          if (v13) {
            [(_INPBString *)v7 addValue:v13];
          }
        }
        uint64_t v10 = [v8 countByEnumeratingWithState:&v15 objects:v19 count:16];
      }
      while (v10);
    }
  }
  else
  {
    uint64_t v7 = 0;
  }

  return v7;
}

id INIntentSlotValueRedactedStringsFromStrings(void *a1, uint64_t a2, void *a3)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a3;
  uint64_t v7 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v5, "count"));
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v8 = v5;
  uint64_t v9 = [v8 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)v17;
    do
    {
      for (uint64_t i = 0; i != v10; ++i)
      {
        if (*(void *)v17 != v11) {
          objc_enumerationMutation(v8);
        }
        long long v13 = INIntentSlotValueRedactedStringFromString(*(void **)(*((void *)&v16 + 1) + 8 * i), a2, v6);
        objc_msgSend(v7, "addObject:", v13, (void)v16);
      }
      uint64_t v10 = [v8 countByEnumeratingWithState:&v16 objects:v20 count:16];
    }
    while (v10);
  }

  long long v14 = (void *)[v7 copy];

  return v14;
}

uint64_t _INPBIntentResponsePayloadSuccessReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        uint64_t v24 = PBReaderReadData();
        [a1 setResponseMessageData:v24];
      }
      else
      {
        if (v17 != 2)
        {
          if (v17 == 3)
          {
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            while (1)
            {
              uint64_t v21 = *v3;
              unint64_t v22 = *(void *)(a2 + v21);
              if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
              *(void *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0) {
                goto LABEL_34;
              }
              v18 += 7;
              BOOL v14 = v19++ >= 9;
              if (v14)
              {
                uint64_t v20 = 0;
                goto LABEL_36;
              }
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_34:
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v20 = 0;
            }
LABEL_36:
            [a1 setShouldOpenContainingApplication:v20 != 0];
          }
          else
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
          }
          continue;
        }
        uint64_t v24 = PBReaderReadString();
        [a1 setResponseTypeName:v24];
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _INPBValueMetadataReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    int v16 = v10 & 7;
    if (v15 || v16 == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        char v18 = (_INPBConfidenceScore *)objc_claimAutoreleasedReturnValue();
        [a1 setCanonicalValue:v18];
        goto LABEL_48;
      case 2u:
        PBReaderReadString();
        char v18 = (_INPBConfidenceScore *)objc_claimAutoreleasedReturnValue();
        [a1 setUuid:v18];
        goto LABEL_48;
      case 3u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                uint64_t v28 = 0;
                goto LABEL_56;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_56:
        objc_msgSend(a1, "setConfirmed:", v28 != 0, v39, v40);
        goto LABEL_49;
      case 4u:
        PBReaderReadString();
        char v18 = (_INPBConfidenceScore *)objc_claimAutoreleasedReturnValue();
        [a1 setInput:v18];
        goto LABEL_48;
      case 5u:
        PBReaderReadString();
        char v18 = (_INPBConfidenceScore *)objc_claimAutoreleasedReturnValue();
        [a1 setSource:v18];
        goto LABEL_48;
      case 6u:
        PBReaderReadString();
        char v18 = (_INPBConfidenceScore *)objc_claimAutoreleasedReturnValue();
        [a1 setSourceAppBundleIdentifier:v18];
        goto LABEL_48;
      case 7u:
        char v18 = objc_alloc_init(_INPBConfidenceScore);
        if PBReaderPlaceMark() && (_INPBConfidenceScoreReadFrom(v18, a2, v32))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setConfidenceScore:", v18, 0, 0);
LABEL_48:

LABEL_49:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }

        return 0;
      default:
        if ((v10 >> 3) == 9999)
        {
          if (v16 == 2)
          {
            uint64_t v39 = 0;
            uint64_t v40 = 0;
            uint64_t result = PBReaderPlaceMark();
            if (!result) {
              return result;
            }
            while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4) && !*(unsigned char *)(a2 + *v5))
            {
              char v20 = 0;
              unsigned int v21 = 0;
              uint64_t v22 = 0;
              while (1)
              {
                uint64_t v23 = *v3;
                unint64_t v24 = *(void *)(a2 + v23);
                if (v24 == -1 || v24 >= *(void *)(a2 + *v4)) {
                  break;
                }
                char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
                *(void *)(a2 + v23) = v24 + 1;
                v22 |= (unint64_t)(v25 & 0x7F) << v20;
                if (v25 < 0)
                {
                  v20 += 7;
                  BOOL v14 = v21++ >= 9;
                  if (!v14) {
                    continue;
                  }
                }
                goto LABEL_33;
              }
              *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
              PBRepeatedInt32Add();
            }
            PBReaderRecallMark();
          }
          else
          {
            char v33 = 0;
            unsigned int v34 = 0;
            uint64_t v35 = 0;
            while (1)
            {
              uint64_t v36 = *v3;
              unint64_t v37 = *(void *)(a2 + v36);
              if (v37 == -1 || v37 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v38 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
              *(void *)(a2 + v36) = v37 + 1;
              v35 |= (unint64_t)(v38 & 0x7F) << v33;
              if (v38 < 0)
              {
                v33 += 7;
                BOOL v14 = v34++ >= 9;
                if (!v14) {
                  continue;
                }
              }
              goto LABEL_66;
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_66:
            PBRepeatedInt32Add();
          }
        }
        else if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
          return 0;
        }
        goto LABEL_49;
    }
  }
}

BOOL _INPBGeographicalFeatureReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 1) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        unint64_t v17 = objc_alloc_init(_INPBString);
        if (!PBReaderPlaceMark() || !_INPBStringReadFrom(v17, a2)) {
          goto LABEL_32;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addGeographicalFeatureDescriptors:", v17, 0, 0);
        }
LABEL_27:

        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_29:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unint64_t v17 = objc_alloc_init(_INPBString);
    if (!PBReaderPlaceMark() || (_INPBStringReadFrom(v17, a2) & 1) == 0)
    {
LABEL_32:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setGeographicalFeatureType:", v17, 0, 0);
    goto LABEL_27;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _INPBGetVisualCodeIntentResponseReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = objc_alloc_init(_INPBImageValue);
        if (!PBReaderPlaceMark() || (_INPBImageValueReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setVisualCodeImage:", v17, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t INPaymentStatusHasBackingType(unint64_t a1)
{
  return (a1 < 6) & (0x3Eu >> a1);
}

uint64_t INPaymentStatusGetBackingType(uint64_t result)
{
  if ((unint64_t)(result - 1) < 5) {
    return result;
  }
  else {
    return 0x7FFFFFFFLL;
  }
}

uint64_t INPaymentStatusGetFacadeType(int a1, int a2)
{
  uint64_t v2 = (a2 - 1);
  if (v2 <= 4) {
    uint64_t v3 = v2 + 1;
  }
  else {
    uint64_t v3 = 0;
  }
  if (a1) {
    return v3;
  }
  else {
    return 0;
  }
}

__CFString *INPaymentStatusGetName(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 4) {
    return @"unknown";
  }
  else {
    return *(&off_1E5516D88 + a1 - 1);
  }
}

uint64_t INPaymentStatusWithString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"pending"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"completed"])
  {
    uint64_t v2 = 2;
  }
  else if ([v1 isEqualToString:@"canceled"])
  {
    uint64_t v2 = 3;
  }
  else if ([v1 isEqualToString:@"failed"])
  {
    uint64_t v2 = 4;
  }
  else if ([v1 isEqualToString:@"unpaid"])
  {
    uint64_t v2 = 5;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INPaymentStatusGetLocalizedName(uint64_t a1, void *a2)
{
  id v3 = a2;
  switch(a1)
  {
    case 1:
      uint64_t v4 = @"pending";
      goto LABEL_8;
    case 2:
      uint64_t v4 = @"completed";
      goto LABEL_8;
    case 3:
      uint64_t v4 = @"canceled";
      goto LABEL_8;
    case 4:
      uint64_t v4 = @"failed";
      goto LABEL_8;
    case 5:
      uint64_t v4 = @"unpaid";
LABEL_8:
      id v5 = INLocalizedStringWithLocalizer(v4, v4, v3);
      break;
    default:
      id v5 = 0;
      break;
  }

  return v5;
}

uint64_t _INPBAppIdReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = PBReaderReadString();
        [a1 setBundleId:v17];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _INPBGetCarLockStatusIntentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 1) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        unint64_t v17 = objc_alloc_init(_INPBDataString);
        if (!PBReaderPlaceMark() || !_INPBDataStringReadFrom(v17, a2)) {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCarName:", v17, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unint64_t v17 = objc_alloc_init(_INPBIntentMetadata);
    if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v17, a2) & 1) == 0)
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setIntentMetadata:", v17, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

id getCNPostalAddressFormatterClass()
{
  uint64_t v4 = 0;
  id v5 = &v4;
  uint64_t v6 = 0x2050000000;
  dispatch_queue_t v0 = (void *)getCNPostalAddressFormatterClass_softClass;
  uint64_t v7 = getCNPostalAddressFormatterClass_softClass;
  if (!getCNPostalAddressFormatterClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getCNPostalAddressFormatterClass_block_invoke;
    v3[3] = &unk_1E5520EB8;
    void v3[4] = &v4;
    __getCNPostalAddressFormatterClass_block_invoke((uint64_t)v3);
    dispatch_queue_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_18CBF03D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getCNPostalAddressFormatterClass_block_invoke(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!ContactsLibraryCore_frameworkLibrary)
  {
    v4[1] = MEMORY[0x1E4F143A8];
    v4[2] = 3221225472;
    v4[3] = __ContactsLibraryCore_block_invoke;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    void v4[5] = v4;
    long long v5 = xmmword_1E5516DB0;
    uint64_t v6 = 0;
    ContactsLibraryCore_frameworkLibrary = _sl_dlopen();
    uint64_t v2 = (void *)v4[0];
    if (!ContactsLibraryCore_frameworkLibrary)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("CNPostalAddressFormatter");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    uint64_t v2 = (void *)abort_report_np();
LABEL_8:
    free(v2);
  }
  getCNPostalAddressFormatterClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __ContactsLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  ContactsLibraryCore_frameworkLibrary = result;
  return result;
}

BOOL INWorkoutLocationTypeHasBackingType(uint64_t a1)
{
  return (unint64_t)(a1 - 1) < 2;
}

uint64_t INWorkoutLocationTypeGetBackingType(uint64_t a1)
{
  if (a1 == 1) {
    unsigned int v1 = 0;
  }
  else {
    unsigned int v1 = 0x7FFFFFFF;
  }
  if (a1 == 2) {
    return 1;
  }
  else {
    return v1;
  }
}

uint64_t INWorkoutLocationTypeGetFacadeType(int a1, int a2)
{
  uint64_t v2 = 2 * (a2 == 1);
  if (!a2) {
    uint64_t v2 = 1;
  }
  if (a1) {
    return v2;
  }
  else {
    return 0;
  }
}

__CFString *INWorkoutLocationTypeGetName(uint64_t a1)
{
  unsigned int v1 = @"unknown";
  if (a1 == 2) {
    unsigned int v1 = @"indoor";
  }
  if (a1 == 1) {
    return @"outdoor";
  }
  else {
    return v1;
  }
}

uint64_t INWorkoutLocationTypeWithString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"outdoor"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"indoor"])
  {
    uint64_t v2 = 2;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INWorkoutLocationTypeGetLocalizedName(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1 == 2)
  {
    uint64_t v4 = @"indoor";
    goto LABEL_5;
  }
  if (a1 == 1)
  {
    uint64_t v4 = @"outdoor";
LABEL_5:
    long long v5 = INLocalizedStringWithLocalizer(v4, v4, v3);
    goto LABEL_7;
  }
  long long v5 = 0;
LABEL_7:

  return v5;
}

uint64_t _INPBGetVisualCodeIntentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  long long v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v24 = objc_alloc_init(_INPBIntentMetadata);
        if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v24, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntentMetadata:", v24, 0, 0);
      }
      else if ((v10 >> 3) == 2)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_33;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_36;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v23 = 0;
        }
        else {
          uint64_t v23 = v19;
        }
LABEL_36:
        [a1 setVisualCodeType:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _INPBMessageReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  long long v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    int v16 = v10 & 7;
    if (v15 || v16 == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unsigned int v18 = objc_alloc_init(_INPBContact);
        uint64_t v46 = 0;
        uint64_t v47 = 0;
        if (!PBReaderPlaceMark() || !_INPBContactReadFrom(v18, a2)) {
          goto LABEL_124;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addRecipient:", v18, 0, 0);
        }
        goto LABEL_99;
      case 2u:
        unsigned int v18 = objc_alloc_init(_INPBContact);
        uint64_t v46 = 0;
        uint64_t v47 = 0;
        if (!PBReaderPlaceMark() || (_INPBContactReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_124;
        }
        PBReaderRecallMark();
        [a1 setSender:v18];
        goto LABEL_99;
      case 3u:
        PBReaderReadString();
        unsigned int v18 = (_INPBContact *)objc_claimAutoreleasedReturnValue();
        [a1 setContent:v18];
        goto LABEL_99;
      case 4u:
        if (v16 == 2)
        {
          uint64_t v46 = 0;
          uint64_t v47 = 0;
          uint64_t result = PBReaderPlaceMark();
          if (!result) {
            return result;
          }
          while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4) && !*(unsigned char *)(a2 + *v5))
          {
            char v20 = 0;
            unsigned int v21 = 0;
            uint64_t v22 = 0;
            while (1)
            {
              uint64_t v23 = *v3;
              unint64_t v24 = *(void *)(a2 + v23);
              if (v24 == -1 || v24 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
              *(void *)(a2 + v23) = v24 + 1;
              v22 |= (unint64_t)(v25 & 0x7F) << v20;
              if (v25 < 0)
              {
                v20 += 7;
                BOOL v14 = v21++ >= 9;
                if (!v14) {
                  continue;
                }
              }
              goto LABEL_39;
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_39:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          char v40 = 0;
          unsigned int v41 = 0;
          uint64_t v42 = 0;
          while (1)
          {
            uint64_t v43 = *v3;
            unint64_t v44 = *(void *)(a2 + v43);
            if (v44 == -1 || v44 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v45 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
            *(void *)(a2 + v43) = v44 + 1;
            v42 |= (unint64_t)(v45 & 0x7F) << v40;
            if (v45 < 0)
            {
              v40 += 7;
              BOOL v14 = v41++ >= 9;
              if (!v14) {
                continue;
              }
            }
            goto LABEL_121;
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_121:
          PBRepeatedInt32Add();
        }
        goto LABEL_100;
      case 5u:
        unsigned int v18 = objc_alloc_init(_INPBDateTime);
        uint64_t v46 = 0;
        uint64_t v47 = 0;
        if (!PBReaderPlaceMark() || (_INPBDateTimeReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_124;
        }
        PBReaderRecallMark();
        [a1 setDateSent:v18];
        goto LABEL_99;
      case 6u:
        PBReaderReadString();
        unsigned int v18 = (_INPBContact *)objc_claimAutoreleasedReturnValue();
        [a1 setIdentifier:v18];
        goto LABEL_99;
      case 7u:
        PBReaderReadString();
        unsigned int v18 = (_INPBContact *)objc_claimAutoreleasedReturnValue();
        [a1 setGroupName:v18];
        goto LABEL_99;
      case 8u:
        PBReaderReadString();
        unsigned int v18 = (_INPBContact *)objc_claimAutoreleasedReturnValue();
        [a1 setConversationIdentifier:v18];
        goto LABEL_99;
      case 9u:
        unsigned int v18 = objc_alloc_init(_INPBDataString);
        uint64_t v46 = 0;
        uint64_t v47 = 0;
        if (!PBReaderPlaceMark() || !_INPBDataStringReadFrom(v18, a2)) {
          goto LABEL_124;
        }
        PBReaderRecallMark();
        [a1 setSpeakableGroupName:v18];
        goto LABEL_99;
      case 0xAu:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                uint64_t v32 = 0;
                goto LABEL_106;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v32 = 0;
        }
        else {
          uint64_t v32 = v28;
        }
LABEL_106:
        objc_msgSend(a1, "setType:", v32, v46, v47);
        goto LABEL_100;
      case 0xBu:
        unsigned int v18 = objc_alloc_init(_INPBMessage);
        uint64_t v46 = 0;
        uint64_t v47 = 0;
        if (!PBReaderPlaceMark() || (_INPBMessageReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_124;
        }
        PBReaderRecallMark();
        [a1 setReferencedMessage:v18];
        goto LABEL_99;
      case 0xCu:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        while (2)
        {
          uint64_t v36 = *v3;
          unint64_t v37 = *(void *)(a2 + v36);
          if (v37 == -1 || v37 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v38 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
            *(void *)(a2 + v36) = v37 + 1;
            v35 |= (unint64_t)(v38 & 0x7F) << v33;
            if (v38 < 0)
            {
              v33 += 7;
              BOOL v14 = v34++ >= 9;
              if (v14)
              {
                uint64_t v39 = 0;
                goto LABEL_111;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v39 = 0;
        }
        else {
          uint64_t v39 = v35;
        }
LABEL_111:
        objc_msgSend(a1, "setEffect:", v39, v46, v47);
        goto LABEL_100;
      case 0xDu:
        unsigned int v18 = objc_alloc_init(_INPBInteger);
        if (!PBReaderPlaceMark() || (_INPBIntegerReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_124;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setNumberOfAttachments:", v18, 0, 0);
        goto LABEL_99;
      case 0xEu:
        unsigned int v18 = objc_alloc_init(_INPBDateTime);
        if (!PBReaderPlaceMark() || (_INPBDateTimeReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_124;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setDateLastMessageRead:", v18, 0, 0);
        goto LABEL_99;
      case 0xFu:
        unsigned int v18 = objc_alloc_init(_INPBMessageLinkMetadata);
        if (!PBReaderPlaceMark() || (_INPBMessageLinkMetadataReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_124;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLinkMetadata:", v18, 0, 0);
        goto LABEL_99;
      case 0x10u:
        unsigned int v18 = objc_alloc_init(_INPBCurrencyAmountValue);
        if (!PBReaderPlaceMark() || !_INPBCurrencyAmountValueReadFrom(v18, a2)) {
          goto LABEL_124;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPaymentAmount:", v18, 0, 0);
        goto LABEL_99;
      case 0x11u:
        PBReaderReadString();
        unsigned int v18 = (_INPBContact *)objc_claimAutoreleasedReturnValue();
        [a1 setLocationName:v18];
        goto LABEL_99;
      case 0x12u:
        PBReaderReadString();
        unsigned int v18 = (_INPBContact *)objc_claimAutoreleasedReturnValue();
        [a1 setFileExtension:v18];
        goto LABEL_99;
      case 0x16u:
        PBReaderReadString();
        unsigned int v18 = (_INPBContact *)objc_claimAutoreleasedReturnValue();
        [a1 setServiceName:v18];
        goto LABEL_99;
      case 0x17u:
        unsigned int v18 = objc_alloc_init(_INPBFile);
        if (!PBReaderPlaceMark() || (_INPBFileReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_124;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAudioMessageFile:", v18, 0, 0);
        goto LABEL_99;
      case 0x18u:
        unsigned int v18 = objc_alloc_init(_INPBFile);
        uint64_t v46 = 0;
        uint64_t v47 = 0;
        if (!PBReaderPlaceMark() || !_INPBFileReadFrom(v18, a2)) {
          goto LABEL_124;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addAttachmentFile:", v18, 0, 0);
        }
        goto LABEL_99;
      case 0x19u:
        unsigned int v18 = objc_alloc_init(_INPBMessageReaction);
        if (!PBReaderPlaceMark() || (_INPBMessageReactionReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_124;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setReaction:", v18, 0, 0);
        goto LABEL_99;
      case 0x1Au:
        unsigned int v18 = objc_alloc_init(_INPBLocation);
        if (!PBReaderPlaceMark() || (_INPBLocationReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_124;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLocation:", v18, 0, 0);
        goto LABEL_99;
      case 0x1Bu:
        unsigned int v18 = objc_alloc_init(_INPBSticker);
        if PBReaderPlaceMark() && (_INPBStickerReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setSticker:", v18, 0, 0);
LABEL_99:

LABEL_100:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_124:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_100;
    }
  }
}

INHomeEntity *INIntentSlotValueTransformFromHomeEntity(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = [MEMORY[0x1E4F1CA48] array];
    if ([v1 deviceTypesCount])
    {
      unint64_t v3 = 0;
      do
      {
        uint64_t v4 = NSNumber;
        unsigned int v5 = [v1 deviceTypesAtIndex:v3];
        if (v5 > 0x31) {
          uint64_t v6 = 0;
        }
        else {
          uint64_t v6 = qword_18CFC4720[v5];
        }
        uint64_t v7 = [v4 numberWithInteger:v6];
        [v2 addObject:v7];

        ++v3;
      }
      while (v3 < [v1 deviceTypesCount]);
    }
    char v8 = [INHomeEntity alloc];
    uint64_t v28 = [v1 entityName];
    unsigned int v27 = INIntentSlotValueTransformFromDataString(v28);
    int v9 = [v1 hasEntityType];
    unsigned int v10 = [v1 entityType];
    uint64_t v11 = 0;
    if (v10 <= 6 && v9) {
      uint64_t v11 = qword_18CFC4460[v10];
    }
    char v25 = [v1 entityIdentifier];
    unsigned __int8 v12 = [v1 hasSceneType];
    unsigned int v13 = [v1 sceneType];
    if (((v13 < 5) & v12) != 0) {
      uint64_t v14 = v13 + 1;
    }
    else {
      uint64_t v14 = 0;
    }
    uint64_t v23 = v14;
    char v26 = [v1 room];
    uint64_t v22 = INIntentSlotValueTransformFromDataString(v26);
    unint64_t v24 = [v1 home];
    int v15 = INIntentSlotValueTransformFromDataString(v24);
    int v16 = [v1 group];
    char v17 = INIntentSlotValueTransformFromDataString(v16);
    unsigned int v18 = [v1 zones];
    uint64_t v19 = INIntentSlotValueTransformFromDataStrings(v18);
    char v20 = [(INHomeEntity *)v8 initWithEntityName:v27 type:v11 entityIdentifier:v25 deviceTypes:v2 sceneType:v23 room:v22 home:v15 group:v17 zones:v19];
  }
  else
  {
    char v20 = 0;
  }

  return v20;
}

_INPBHomeEntity *INIntentSlotValueTransformToHomeEntity(void *a1)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_alloc_init(_INPBHomeEntity);
    unint64_t v3 = [v1 entityName];
    uint64_t v4 = INIntentSlotValueTransformToDataString(v3);
    [(_INPBHomeEntity *)v2 setEntityName:v4];

    unint64_t v5 = [v1 type] - 1;
    if (v5 > 9) {
      uint64_t v6 = 0x7FFFFFFFLL;
    }
    else {
      uint64_t v6 = dword_18CFC4438[v5];
    }
    [(_INPBHomeEntity *)v2 setEntityType:v6];
    uint64_t v7 = [v1 entityIdentifier];
    [(_INPBHomeEntity *)v2 setEntityIdentifier:v7];

    long long v28 = 0u;
    long long v29 = 0u;
    long long v26 = 0u;
    long long v27 = 0u;
    char v8 = objc_msgSend(v1, "deviceTypes", 0);
    uint64_t v9 = [v8 countByEnumeratingWithState:&v26 objects:v30 count:16];
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = *(void *)v27;
      do
      {
        for (uint64_t i = 0; i != v10; ++i)
        {
          if (*(void *)v27 != v11) {
            objc_enumerationMutation(v8);
          }
          unint64_t v13 = [*(id *)(*((void *)&v26 + 1) + 8 * i) integerValue] - 1;
          if (v13 > 0x2C) {
            uint64_t v14 = 0x7FFFFFFFLL;
          }
          else {
            uint64_t v14 = dword_18CFC4668[v13];
          }
          [(_INPBHomeEntity *)v2 addDeviceTypes:v14];
        }
        uint64_t v10 = [v8 countByEnumeratingWithState:&v26 objects:v30 count:16];
      }
      while (v10);
    }

    unint64_t v15 = [v1 sceneType] - 1;
    if (v15 >= 5) {
      uint64_t v16 = 0x7FFFFFFFLL;
    }
    else {
      uint64_t v16 = v15;
    }
    [(_INPBHomeEntity *)v2 setSceneType:v16];
    char v17 = [v1 room];
    unsigned int v18 = INIntentSlotValueTransformToDataString(v17);
    [(_INPBHomeEntity *)v2 setRoom:v18];

    uint64_t v19 = [v1 home];
    char v20 = INIntentSlotValueTransformToDataString(v19);
    [(_INPBHomeEntity *)v2 setHome:v20];

    unsigned int v21 = [v1 group];
    uint64_t v22 = INIntentSlotValueTransformToDataString(v21);
    [(_INPBHomeEntity *)v2 setGroup:v22];

    uint64_t v23 = [v1 zones];
    unint64_t v24 = INIntentSlotValueTransformToDataStrings(v23);
    [(_INPBHomeEntity *)v2 setZones:v24];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INIntentSlotValueTransformFromHomeEntities(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          char v8 = INIntentSlotValueTransformFromHomeEntity(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    uint64_t v9 = (void *)[v2 copy];
  }
  else
  {
    uint64_t v9 = 0;
  }

  return v9;
}

id INIntentSlotValueTransformToHomeEntities(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          char v8 = INIntentSlotValueTransformToHomeEntity(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    uint64_t v9 = (void *)[v2 copy];
  }
  else
  {
    uint64_t v9 = 0;
  }

  return v9;
}

id INIntentSlotValueRedactedHomeEntityFromHomeEntity(void *a1)
{
  id v1 = a1;

  return v1;
}

uint64_t INPlayAudioMessageIntentResponseCodeGetName(unint64_t a1)
{
  if (a1 > 7) {
    return 0;
  }
  else {
    return (uint64_t)*(&off_1E5516FA0 + a1);
  }
}

BOOL _INPBRideFareLineItemReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 1) {
        break;
      }
      if (v17 == 2)
      {
        unsigned int v18 = objc_alloc_init(_INPBDecimalNumberValue);
        if (!PBReaderPlaceMark() || (_INPBDecimalNumberValueReadFrom(v18, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPrice:", v18, 0, 0);
        goto LABEL_26;
      }
      if (v17 == 3)
      {
        PBReaderReadString();
        unsigned int v18 = (_INPBDecimalNumberValue *)objc_claimAutoreleasedReturnValue();
        [a1 setCurrencyCode:v18];
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    PBReaderReadString();
    unsigned int v18 = (_INPBDecimalNumberValue *)objc_claimAutoreleasedReturnValue();
    [a1 setTitle:v18];
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

id getAVSystemControllerClass()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  dispatch_queue_t v0 = (void *)getAVSystemControllerClass_softClass;
  uint64_t v7 = getAVSystemControllerClass_softClass;
  if (!getAVSystemControllerClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getAVSystemControllerClass_block_invoke;
    v3[3] = &unk_1E5520EB8;
    void v3[4] = &v4;
    __getAVSystemControllerClass_block_invoke((uint64_t)v3);
    dispatch_queue_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_18CBF8A14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getAVSystemController_AllowAppToInitiatePlaybackTemporarilyAttribute()
{
  uint64_t v5 = 0;
  uint64_t v6 = &v5;
  uint64_t v7 = 0x2020000000;
  dispatch_queue_t v0 = (void **)getAVSystemController_AllowAppToInitiatePlaybackTemporarilyAttributeSymbolLoc_ptr;
  uint64_t v8 = getAVSystemController_AllowAppToInitiatePlaybackTemporarilyAttributeSymbolLoc_ptr;
  if (!getAVSystemController_AllowAppToInitiatePlaybackTemporarilyAttributeSymbolLoc_ptr)
  {
    id v1 = (void *)MediaExperienceLibrary();
    v6[3] = (uint64_t)dlsym(v1, "AVSystemController_AllowAppToInitiatePlaybackTemporarilyAttribute");
    getAVSystemController_AllowAppToInitiatePlaybackTemporarilyAttributeSymbolLoc_ptr = v6[3];
    dispatch_queue_t v0 = (void **)v6[3];
  }
  _Block_object_dispose(&v5, 8);
  if (!v0)
  {
    dlerror();
    uint64_t v4 = (_Unwind_Exception *)abort_report_np();
    _Block_object_dispose(&v5, 8);
    _Unwind_Resume(v4);
  }
  uint64_t v2 = *v0;

  return v2;
}

uint64_t MediaExperienceLibrary()
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  v3[0] = 0;
  if (!MediaExperienceLibraryCore_frameworkLibrary)
  {
    v3[1] = MEMORY[0x1E4F143A8];
    v3[2] = 3221225472;
    v3[3] = __MediaExperienceLibraryCore_block_invoke;
    void v3[4] = &__block_descriptor_40_e5_v8__0l;
    void v3[5] = v3;
    long long v4 = xmmword_1E5516FE0;
    uint64_t v5 = 0;
    MediaExperienceLibraryCore_frameworkLibrary = _sl_dlopen();
    id v1 = (void *)v3[0];
    uint64_t v0 = MediaExperienceLibraryCore_frameworkLibrary;
    if (MediaExperienceLibraryCore_frameworkLibrary)
    {
      if (!v3[0]) {
        return v0;
      }
    }
    else
    {
      id v1 = (void *)abort_report_np();
    }
    free(v1);
    return v0;
  }
  return MediaExperienceLibraryCore_frameworkLibrary;
}

uint64_t __MediaExperienceLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  MediaExperienceLibraryCore_frameworkLibrary = result;
  return result;
}

Class __getAVSystemControllerClass_block_invoke(uint64_t a1)
{
  MediaExperienceLibrary();
  Class result = objc_getClass("AVSystemController");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getAVSystemControllerClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    id v3 = (INShareFocusStatusIntent *)abort_report_np();
    return (Class)[(INShareFocusStatusIntent *)v3 _intents_backgroundHandlingAssertionForBundleIdentifier:v5 context:v6 error:v7];
  }
  return result;
}

uint64_t INConfigureHomeIntentResponseCodeGetName(unint64_t a1)
{
  if (a1 > 5) {
    return 0;
  }
  else {
    return (uint64_t)*(&off_1E5516FF8 + a1);
  }
}

uint64_t _INPBStartPhotoPlaybackIntentResponseReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  SEL v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 2)
      {
        char v25 = objc_alloc_init(_INPBLocation);
        if (!PBReaderPlaceMark() || (_INPBLocationReadFrom(v25, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLocationCreated:", v25, 0, 0);
      }
      else
      {
        if (v17 != 4)
        {
          if (v17 == 7)
          {
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            while (1)
            {
              uint64_t v21 = *v3;
              unint64_t v22 = *(void *)(a2 + v21);
              if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
              *(void *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0) {
                goto LABEL_36;
              }
              v18 += 7;
              BOOL v14 = v19++ >= 9;
              if (v14)
              {
                uint64_t v24 = 0;
                goto LABEL_39;
              }
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_36:
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v24 = 0;
            }
            else {
              uint64_t v24 = v20;
            }
LABEL_39:
            [a1 setSearchResultsCount:v24];
          }
          else
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
          }
          continue;
        }
        PBReaderReadString();
        char v25 = (_INPBLocation *)objc_claimAutoreleasedReturnValue();
        [a1 setAlbumName:v25];
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

id INIntentSlotValueTransformFromTemperature(void *a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v1 = objc_msgSend(a1, "values", 0);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v10;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v10 != v4) {
          objc_enumerationMutation(v1);
        }
        uint64_t v6 = INIntentSlotValueTransformFromTemperatureValue(*(void **)(*((void *)&v9 + 1) + 8 * i));
        if (v6)
        {
          uint64_t v7 = (void *)v6;
          goto LABEL_11;
        }
      }
      uint64_t v3 = [v1 countByEnumeratingWithState:&v9 objects:v13 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
  uint64_t v7 = 0;
LABEL_11:

  return v7;
}

id INIntentSlotValueTransformFromTemperatureValue(void *a1)
{
  id v1 = a1;
  uint64_t v2 = v1;
  if (!v1)
  {
    uint64_t v6 = 0;
    goto LABEL_22;
  }
  uint64_t v3 = [v1 valueMetadata];
  INPrivacyEntitlementValidateValueMetadata(v3);

  if (![v2 hasUnit]) {
    goto LABEL_11;
  }
  int v4 = [v2 unit];
  switch(v4)
  {
    case 3:
      uint64_t v5 = [MEMORY[0x1E4F29218] kelvin];
      break;
    case 2:
      uint64_t v5 = [MEMORY[0x1E4F29218] fahrenheit];
      break;
    case 1:
      uint64_t v5 = [MEMORY[0x1E4F29218] celsius];
      break;
    default:
      goto LABEL_11;
  }
  uint64_t v7 = (void *)v5;
  if (!v5)
  {
LABEL_11:
    char v8 = [MEMORY[0x1E4F1CA20] currentLocale];
    long long v9 = [v8 objectForKey:*MEMORY[0x1E4F1C478]];
    if ([v9 isEqualToString:*MEMORY[0x1E4F1C480]])
    {
      uint64_t v10 = [MEMORY[0x1E4F29218] celsius];
    }
    else
    {
      if (![v9 isEqualToString:*MEMORY[0x1E4F1C488]]) {
        goto LABEL_16;
      }
      uint64_t v10 = [MEMORY[0x1E4F29218] fahrenheit];
    }
    uint64_t v7 = (void *)v10;
    if (v10)
    {
LABEL_20:

      goto LABEL_21;
    }
LABEL_16:
    long long v11 = [v8 objectForKey:*MEMORY[0x1E4F1C490]];
    int v12 = [v11 BOOLValue];

    if (v12) {
      [MEMORY[0x1E4F29218] celsius];
    }
    else {
    uint64_t v7 = [MEMORY[0x1E4F29218] fahrenheit];
    }
    goto LABEL_20;
  }
LABEL_21:
  id v13 = objc_alloc(MEMORY[0x1E4F28E28]);
  [v2 magnitude];
  uint64_t v6 = objc_msgSend(v13, "initWithDoubleValue:unit:", v7);

LABEL_22:

  return v6;
}

_INPBTemperature *INIntentSlotValueTransformToTemperature(void *a1)
{
  id v1 = INIntentSlotValueTransformToTemperatureValue(a1);
  if (v1)
  {
    uint64_t v2 = objc_alloc_init(_INPBTemperature);
    [(_INPBTemperature *)v2 addValue:v1];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

_INPBTemperatureValue *INIntentSlotValueTransformToTemperatureValue(void *a1)
{
  id v1 = a1;
  if (!v1)
  {
    uint64_t v2 = 0;
    goto LABEL_18;
  }
  uint64_t v2 = objc_alloc_init(_INPBTemperatureValue);
  uint64_t v3 = [v1 unit];
  [v1 doubleValue];
  if (!v3) {
    goto LABEL_11;
  }
  double v5 = v4;
  uint64_t v6 = [MEMORY[0x1E4F29218] kelvin];
  int v7 = [v3 isEqual:v6];

  if (!v7)
  {
    uint64_t v10 = [v3 symbol];
    int v11 = [v10 isEqualToString:@"°C"];

    if (v11)
    {
      char v8 = v2;
      uint64_t v9 = 1;
      goto LABEL_10;
    }
    int v12 = [v3 symbol];
    int v13 = [v12 isEqualToString:@"°F"];

    if (v13)
    {
      char v8 = v2;
      uint64_t v9 = 2;
      goto LABEL_10;
    }
LABEL_11:
    uint64_t v14 = [MEMORY[0x1E4F1CA20] currentLocale];
    int v15 = [v14 objectForKey:*MEMORY[0x1E4F1C478]];
    if ([v15 isEqualToString:*MEMORY[0x1E4F1C480]]
      || ![v15 isEqualToString:*MEMORY[0x1E4F1C488]]
      && ([v14 objectForKey:*MEMORY[0x1E4F1C490]],
          unint64_t v17 = objc_claimAutoreleasedReturnValue(),
          int v18 = [v17 BOOLValue],
          v17,
          v18))
    {
      [(_INPBTemperatureValue *)v2 setUnit:1];
      uint64_t v16 = [MEMORY[0x1E4F29218] celsius];
    }
    else
    {
      [(_INPBTemperatureValue *)v2 setUnit:2];
      uint64_t v16 = [MEMORY[0x1E4F29218] fahrenheit];
    }
    unsigned int v19 = (void *)v16;
    uint64_t v20 = [v1 measurementByConvertingToUnit:v16];
    [v20 doubleValue];
    -[_INPBTemperatureValue setMagnitude:](v2, "setMagnitude:");

    goto LABEL_17;
  }
  char v8 = v2;
  uint64_t v9 = 3;
LABEL_10:
  [(_INPBTemperatureValue *)v8 setUnit:v9];
  [(_INPBTemperatureValue *)v2 setMagnitude:v5];
LABEL_17:

LABEL_18:

  return v2;
}

id INIntentSlotValueTransformFromTemperatureValues(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        char v8 = INIntentSlotValueTransformFromTemperatureValue(*(void **)(*((void *)&v11 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  uint64_t v9 = (void *)[v2 copy];

  return v9;
}

id INIntentSlotValueTransformFromTemperatures(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        char v8 = INIntentSlotValueTransformFromTemperature(*(void **)(*((void *)&v11 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  uint64_t v9 = (void *)[v2 copy];

  return v9;
}

id INIntentSlotValueTransformToTemperatureValues(void *a1)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v11;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v11 != v6) {
          objc_enumerationMutation(v3);
        }
        char v8 = INIntentSlotValueTransformToTemperatureValue(*(void **)(*((void *)&v10 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v10);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v5);
  }

  return v2;
}

id INIntentSlotValueTransformToTemperatures(void *a1)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v11;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v11 != v6) {
          objc_enumerationMutation(v3);
        }
        char v8 = INIntentSlotValueTransformToTemperature(*(void **)(*((void *)&v10 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v10);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v5);
  }

  return v2;
}

id INIntentSlotValueRedactedValueFromTemperatureValue(void *a1, uint64_t a2)
{
  id v3 = a1;
  uint64_t v4 = [v3 valueMetadata];
  uint64_t v5 = INPrivacyEntitlementOptionsForValueMetadata(v4);

  if ((v5 & a2) != 0) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = (void *)[v3 copy];
  }

  return v6;
}

_INPBTemperature *INIntentSlotValueRedactedTemperatureFromTemperature(void *a1, uint64_t a2, void *a3)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a3;
  if (v5)
  {
    int v7 = objc_alloc_init(_INPBTemperature);
    long long v15 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
    long long v18 = 0u;
    char v8 = objc_msgSend(v5, "values", 0);
    uint64_t v9 = [v8 countByEnumeratingWithState:&v15 objects:v19 count:16];
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = *(void *)v16;
      do
      {
        for (uint64_t i = 0; i != v10; ++i)
        {
          if (*(void *)v16 != v11) {
            objc_enumerationMutation(v8);
          }
          long long v13 = INIntentSlotValueRedactedValueFromTemperatureValue(*(void **)(*((void *)&v15 + 1) + 8 * i), a2);
          if (v13) {
            [(_INPBTemperature *)v7 addValue:v13];
          }
        }
        uint64_t v10 = [v8 countByEnumeratingWithState:&v15 objects:v19 count:16];
      }
      while (v10);
    }
  }
  else
  {
    int v7 = 0;
  }

  return v7;
}

id INIntentSlotValueRedactedTemperaturesFromTemperatures(void *a1, uint64_t a2, void *a3)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a3;
  int v7 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v5, "count"));
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v8 = v5;
  uint64_t v9 = [v8 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)v17;
    do
    {
      for (uint64_t i = 0; i != v10; ++i)
      {
        if (*(void *)v17 != v11) {
          objc_enumerationMutation(v8);
        }
        long long v13 = INIntentSlotValueRedactedTemperatureFromTemperature(*(void **)(*((void *)&v16 + 1) + 8 * i), a2, v6);
        objc_msgSend(v7, "addObject:", v13, (void)v16);
      }
      uint64_t v10 = [v8 countByEnumeratingWithState:&v16 objects:v20 count:16];
    }
    while (v10);
  }

  long long v14 = (void *)[v7 copy];

  return v14;
}

void sub_18CBFB588(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getPHAssetClass_block_invoke(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!PhotosLibraryCore_frameworkLibrary)
  {
    v4[1] = MEMORY[0x1E4F143A8];
    v4[2] = 3221225472;
    v4[3] = __PhotosLibraryCore_block_invoke;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    void v4[5] = v4;
    long long v5 = xmmword_1E5517028;
    uint64_t v6 = 0;
    PhotosLibraryCore_frameworkLibrary = _sl_dlopen();
    uint64_t v2 = (void *)v4[0];
    if (!PhotosLibraryCore_frameworkLibrary)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("PHAsset");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    uint64_t v2 = (void *)abort_report_np();
LABEL_8:
    free(v2);
  }
  getPHAssetClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __PhotosLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  PhotosLibraryCore_frameworkLibrary = result;
  return result;
}

void sub_18CBFD24C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__11882(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__11883(uint64_t a1)
{
}

id INSyncedSchemaWithBundleID(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [_INVCIntentDefinitionManagerClass() intentDefinitionURLsForBundleID:v1];
  if ([v2 count]) {
    id v3 = [[INSchema alloc] _initWithContentsOfURLs:v2 bundleIdentifier:v1 mainBundleIdentifier:v1];
  }
  else {
    id v3 = 0;
  }

  return v3;
}

uint64_t INCustomIntentTypeName(uint64_t a1, uint64_t a2)
{
  return [NSString stringWithFormat:@"%@%@.%@", @"sirikit.intents.custom.", a1, a2];
}

uint64_t INParseCustomIntentTypeName(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  uint64_t v6 = [v5 hasPrefix:@"sirikit.intents.custom."];
  if (v6)
  {
    uint64_t v7 = [v5 substringFromIndex:objc_msgSend(@"sirikit.intents.custom.", "length")];
    id v8 = objc_alloc(MEMORY[0x1E4F1CA48]);
    uint64_t v9 = [v7 componentsSeparatedByString:@"."];
    uint64_t v10 = (void *)[v8 initWithArray:v9];

    uint64_t v11 = [v10 lastObject];
    [v10 removeLastObject];
    long long v12 = [v10 componentsJoinedByString:@"."];
    if (a2) {
      *a2 = v11;
    }
    if (a3) {
      *a3 = v12;
    }
  }
  return v6;
}

id INSchemaWithTypeName(void *a1, void *a2, void *a3)
{
  uint64_t v57 = *MEMORY[0x1E4F143B8];
  id v49 = 0;
  id v50 = 0;
  int v5 = INParseCustomIntentTypeName(a1, &v50, &v49);
  uint64_t v6 = (NSString *)v50;
  id v7 = v49;
  id v8 = 0;
  if (v5)
  {
    if (a2) {
      *a2 = v6;
    }
    if (a3) {
      *a3 = v7;
    }
    Class v9 = NSClassFromString(v6);
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = [MEMORY[0x1E4F28B50] bundleForClass:v9];
      uint64_t v12 = INIntentSchemaGetIntentDescriptionWithFacadeClass(v10);
      if (v12
        && (long long v13 = (void *)v12,
            char v14 = [v7 isEqualToString:@"com.apple.Intents"],
            v13,
            (v14 & 1) == 0))
      {
      }
      else if (v11)
      {
        uint64_t v15 = +[INSchema _defaultSchemaForBundle:v11];
        if (!v15)
        {
          unsigned int v41 = (void *)INSiriLogContextIntents;
          if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_ERROR))
          {
            char v45 = v41;
            uint64_t v46 = [v11 bundleURL];
            *(_DWORD *)buf = 136315394;
            char v52 = "INSchemaWithTypeName";
            __int16 v53 = 2112;
            id v54 = v46;
            _os_log_error_impl(&dword_18CB2F000, v45, OS_LOG_TYPE_ERROR, "%s Did not find schema inside of bundle URL: \"%@\"", buf, 0x16u);
          }
          id v16 = 0;
          goto LABEL_45;
        }
        id v16 = (id)v15;
LABEL_44:
        id v16 = v16;
LABEL_45:

        id v8 = v16;
        goto LABEL_46;
      }
    }
    long long v17 = [MEMORY[0x1E4F223F8] bundleRecordForCurrentProcess];
    long long v18 = [v17 bundleIdentifier];
    if ([v18 isEqualToString:v7])
    {
    }
    else
    {
      char CanMapLSDatabase = INThisProcessCanMapLSDatabase(0);

      if (CanMapLSDatabase)
      {
        id v48 = 0;
        uint64_t v20 = [MEMORY[0x1E4F223F8] bundleRecordWithBundleIdentifier:v7 allowPlaceholder:0 error:&v48];
        id v21 = v48;

        if (v21)
        {
          unint64_t v22 = INSiriLogContextIntents;
          if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 136315650;
            char v52 = "INSchemaWithTypeName";
            __int16 v53 = 2112;
            id v54 = v7;
            __int16 v55 = 2112;
            id v56 = v21;
            _os_log_error_impl(&dword_18CB2F000, v22, OS_LOG_TYPE_ERROR, "%s Unable to create bundle record for bundle identifier: \"%@\", %@", buf, 0x20u);
          }
        }
        long long v17 = (void *)v20;
LABEL_21:
        char v23 = [v17 URL];
        if (!v23)
        {
          long long v26 = INSiriLogContextIntents;
          if (!os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_ERROR))
          {
LABEL_33:
            id v16 = 0;
            id v8 = 0;
            goto LABEL_34;
          }
          *(_DWORD *)buf = 136315394;
          char v52 = "INSchemaWithTypeName";
          __int16 v53 = 2112;
          id v54 = v7;
          long long v27 = "%s Unable to find bundle URL for bundle identifier: \"%@\"";
LABEL_53:
          _os_log_error_impl(&dword_18CB2F000, v26, OS_LOG_TYPE_ERROR, v27, buf, 0x16u);
          goto LABEL_33;
        }
        id v24 = [MEMORY[0x1E4F28CB8] defaultManager];
        char v25 = [v23 path];
        if (([v24 isReadableFileAtPath:v25] & 1) == 0)
        {
          int HasEntitlement = INThisProcessHasEntitlement(@"com.apple.intents.extension.discovery", 0);

          if (!HasEntitlement) {
            goto LABEL_29;
          }
          long long v29 = +[INImageServiceConnection sharedConnection];
          unint64_t v30 = [MEMORY[0x1E4F1CAD0] setWithObject:v7];
          id v47 = 0;
          char v25 = [v29 loadSchemasForBundleIdentifiers:v30 error:&v47];
          id v24 = v47;

          if ([v25 count])
          {
            uint64_t v31 = [v25 allValues];
            id v8 = [v31 firstObject];

            id v16 = 0;
LABEL_34:
            int v40 = 1;
LABEL_42:

            if (v40)
            {
LABEL_46:

              goto LABEL_47;
            }
            uint64_t v11 = 0;
            goto LABEL_44;
          }
          unint64_t v44 = INSiriLogContextIntents;
          if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 136315394;
            char v52 = "INSchemaWithTypeName";
            __int16 v53 = 2114;
            id v54 = v24;
            _os_log_error_impl(&dword_18CB2F000, v44, OS_LOG_TYPE_ERROR, "%s Unable to load schema using intents helper: %{public}@", buf, 0x16u);
          }
        }

LABEL_29:
        uint64_t v32 = [v17 intentDefinitionURLs];
        uint64_t v33 = [v32 count];

        if (v33)
        {
          unsigned int v34 = (void *)MEMORY[0x1E4F1CAA0];
          uint64_t v35 = [v17 intentDefinitionURLs];
          uint64_t v36 = [v35 allValues];
          unint64_t v37 = [v34 orderedSetWithArray:v36];

          char v38 = [v37 array];
          uint64_t v39 = INApplicationBundleIdentifierFromBundleIdentifier(v7);
          id v16 = +[INSchema _schemaWithIntentDefinitionURLs:v38 bundleIdentifier:v7 mainBundleIdentifier:v39 contentOptions:31];

          if (v16)
          {
            int v40 = 0;
          }
          else
          {
            uint64_t v42 = INSiriLogContextIntents;
            if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)buf = 136315394;
              char v52 = "INSchemaWithTypeName";
              __int16 v53 = 2112;
              id v54 = v23;
              _os_log_error_impl(&dword_18CB2F000, v42, OS_LOG_TYPE_ERROR, "%s Did not find schema inside of bundle URL: \"%@\"", buf, 0x16u);
            }
            int v40 = 1;
          }

          id v8 = 0;
          goto LABEL_42;
        }
        long long v26 = INSiriLogContextIntents;
        if (!os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_ERROR)) {
          goto LABEL_33;
        }
        *(_DWORD *)buf = 136315394;
        char v52 = "INSchemaWithTypeName";
        __int16 v53 = 2112;
        id v54 = v7;
        long long v27 = "%s Intent Definition URLs count == 0 for \"%@\"";
        goto LABEL_53;
      }
    }
    id v21 = 0;
    goto LABEL_21;
  }
LABEL_47:

  return v8;
}

id INSchemaWithApplicationProxy(void *a1, int a2)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  id v2 = a1;
  id v3 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  uint64_t v4 = [v2 siriActionDefinitionURLs];
  int v5 = [v4 allValues];

  uint64_t v6 = [v5 countByEnumeratingWithState:&v20 objects:v24 count:16];
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)v21;
    do
    {
      for (uint64_t i = 0; i != v7; ++i)
      {
        if (*(void *)v21 != v8) {
          objc_enumerationMutation(v5);
        }
        uint64_t v10 = *(void **)(*((void *)&v20 + 1) + 8 * i);
        uint64_t v11 = INSchemaFileExtensions();
        uint64_t v12 = [v10 pathExtension];
        int v13 = [v11 containsObject:v12];

        if (v13) {
          [v3 addObject:v10];
        }
      }
      uint64_t v7 = [v5 countByEnumeratingWithState:&v20 objects:v24 count:16];
    }
    while (v7);
  }

  if ([v3 count])
  {
    char v14 = [INSchema alloc];
    uint64_t v15 = [v2 bundleIdentifier];
    id v16 = [v2 bundleIdentifier];
    id v17 = [(INSchema *)v14 _initWithContentsOfURLs:v3 bundleIdentifier:v15 mainBundleIdentifier:v16];

    if (v17) {
      goto LABEL_16;
    }
  }
  else
  {
    id v17 = 0;
  }
  if (a2)
  {
    id v17 = +[INSchema systemSchema];
  }
LABEL_16:

  return v17;
}

id INSchemaURLsWithBundleURL(void *a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  Unique = (__CFBundle *)_CFBundleCreateUnique();
  if (Unique)
  {
    id v3 = Unique;
    uint64_t v4 = INSchemaURLsWithCFBundle(Unique);
    CFRelease(v3);
  }
  else
  {
    int v5 = INSiriLogContextIntents;
    if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_ERROR))
    {
      int v7 = 136315394;
      uint64_t v8 = "INSchemaURLsWithBundleURL";
      __int16 v9 = 2114;
      id v10 = v1;
      _os_log_error_impl(&dword_18CB2F000, v5, OS_LOG_TYPE_ERROR, "%s Unable to create bundle with URL %{public}@", (uint8_t *)&v7, 0x16u);
    }
    uint64_t v4 = (void *)MEMORY[0x1E4F1CBF0];
  }

  return v4;
}

id INSchemaURLsWithCFBundle(__CFBundle *a1)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  if (a1)
  {
    id v2 = [MEMORY[0x1E4F1CA48] array];
    long long v10 = 0u;
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    id v3 = INSchemaFileExtensions();
    uint64_t v4 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v11;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v11 != v6) {
            objc_enumerationMutation(v3);
          }
          CFArrayRef v8 = CFBundleCopyResourceURLsOfType(a1, *(CFStringRef *)(*((void *)&v10 + 1) + 8 * i), 0);
          objc_msgSend(v2, "addObjectsFromArray:", v8, (void)v10);
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
      }
      while (v5);
    }
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

__CFString *INTransferMoneyIntentResponseCodeGetName(unint64_t a1)
{
  if (a1 > 7) {
    return 0;
  }
  else {
    return off_1E55170B0[a1];
  }
}

uint64_t _INPBQueryHealthSampleIntentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        id v17 = objc_alloc_init(_INPBIntentMetadata);
        if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_74;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntentMetadata:", v17, 0, 0);
        goto LABEL_49;
      case 2u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_61;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v21;
        }
LABEL_61:
        objc_msgSend(a1, "setObjectType:", v25, v40, v41);
        goto LABEL_72;
      case 3u:
        id v17 = objc_alloc_init(_INPBDateTimeRange);
        uint64_t v40 = 0;
        uint64_t v41 = 0;
        if (!PBReaderPlaceMark() || !_INPBDateTimeRangeReadFrom(v17, a2)) {
          goto LABEL_74;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addRecordDate:", v17, 0, 0);
        }
        goto LABEL_49;
      case 4u:
        id v17 = objc_alloc_init(_INPBWellnessUnitType);
        if (!PBReaderPlaceMark() || (_INPBWellnessUnitTypeReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_74;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setUnit:", v17, 0, 0);
        goto LABEL_49;
      case 5u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                uint64_t v32 = 0;
                goto LABEL_66;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v32 = 0;
        }
        else {
          uint64_t v32 = v28;
        }
LABEL_66:
        objc_msgSend(a1, "setQuestionType:", v32, v40, v41);
        goto LABEL_72;
      case 6u:
        id v17 = objc_alloc_init(_INPBWellnessValue);
        uint64_t v40 = 0;
        uint64_t v41 = 0;
        if (PBReaderPlaceMark() && _INPBWellnessValueReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          if (v17) {
            objc_msgSend(a1, "addThresholdValues:", v17, 0, 0);
          }
LABEL_49:

LABEL_72:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_74:

        return 0;
      case 7u:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        while (2)
        {
          uint64_t v36 = *v3;
          unint64_t v37 = *(void *)(a2 + v36);
          if (v37 == -1 || v37 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v38 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
            *(void *)(a2 + v36) = v37 + 1;
            v35 |= (unint64_t)(v38 & 0x7F) << v33;
            if (v38 < 0)
            {
              v33 += 7;
              BOOL v14 = v34++ >= 9;
              if (v14)
              {
                uint64_t v39 = 0;
                goto LABEL_71;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v39 = 0;
        }
        else {
          uint64_t v39 = v35;
        }
LABEL_71:
        objc_msgSend(a1, "setExpectedResultType:", v39, v40, v41);
        goto LABEL_72;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_72;
    }
  }
}

BOOL INCallCapabilityHasBackingType(uint64_t a1)
{
  return (unint64_t)(a1 - 1) < 2;
}

uint64_t INCallCapabilityGetBackingType(uint64_t a1)
{
  if (a1 == 1) {
    unsigned int v1 = 1;
  }
  else {
    unsigned int v1 = 0x7FFFFFFF;
  }
  if (a1 == 2) {
    return 2;
  }
  else {
    return v1;
  }
}

uint64_t INCallCapabilityGetFacadeType(int a1, int a2)
{
  uint64_t v2 = 2 * (a2 == 2);
  if (a2 == 1) {
    uint64_t v2 = 1;
  }
  if (a1) {
    return v2;
  }
  else {
    return 0;
  }
}

__CFString *INCallCapabilityGetName(uint64_t a1)
{
  unsigned int v1 = @"unknown";
  if (a1 == 2) {
    unsigned int v1 = @"videoCall";
  }
  if (a1 == 1) {
    return @"audioCall";
  }
  else {
    return v1;
  }
}

uint64_t INCallCapabilityWithString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"audioCall"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"videoCall"])
  {
    uint64_t v2 = 2;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INCallCapabilityGetLocalizedName(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1 == 2)
  {
    uint64_t v4 = @"video call";
    goto LABEL_5;
  }
  if (a1 == 1)
  {
    uint64_t v4 = @"audio call";
LABEL_5:
    uint64_t v5 = INLocalizedStringWithLocalizer(v4, v4, v3);
    goto LABEL_7;
  }
  uint64_t v5 = 0;
LABEL_7:

  return v5;
}

uint64_t _INPBGetCarPowerLevelStatusIntentResponseReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        id v17 = objc_alloc_init(_INPBDouble);
        if (!PBReaderPlaceMark() || (_INPBDoubleReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_94;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setFuelPercentRemaining:", v17, 0, 0);
        goto LABEL_81;
      case 2u:
        id v17 = objc_alloc_init(_INPBDouble);
        if (!PBReaderPlaceMark() || (_INPBDoubleReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_94;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setChargePercentRemaining:", v17, 0, 0);
        goto LABEL_81;
      case 3u:
        id v17 = objc_alloc_init(_INPBDistance);
        if (!PBReaderPlaceMark() || (_INPBDistanceReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_94;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setDistanceRemaining:", v17, 0, 0);
        goto LABEL_81;
      case 4u:
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (2)
        {
          uint64_t v21 = *v3;
          unint64_t v22 = *(void *)(a2 + v21);
          if (v22 == -1 || v22 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
            *(void *)(a2 + v21) = v22 + 1;
            v20 |= (unint64_t)(v23 & 0x7F) << v18;
            if (v23 < 0)
            {
              v18 += 7;
              BOOL v14 = v19++ >= 9;
              if (v14)
              {
                uint64_t v20 = 0;
                goto LABEL_87;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v20 = 0;
        }
LABEL_87:
        [a1 setCharging:v20 != 0];
        goto LABEL_82;
      case 5u:
        id v17 = objc_alloc_init(_INPBInteger);
        if (!PBReaderPlaceMark() || (_INPBIntegerReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_94;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setMinutesToFull:", v17, 0, 0);
        goto LABEL_81;
      case 6u:
        id v17 = objc_alloc_init(_INPBDistance);
        if (!PBReaderPlaceMark() || (_INPBDistanceReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_94;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setMaximumDistance:", v17, 0, 0);
        goto LABEL_81;
      case 7u:
        id v17 = objc_alloc_init(_INPBDistance);
        if (!PBReaderPlaceMark() || (_INPBDistanceReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_94;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setDistanceRemainingElectric:", v17, 0, 0);
        goto LABEL_81;
      case 8u:
        id v17 = objc_alloc_init(_INPBDistance);
        if (!PBReaderPlaceMark() || (_INPBDistanceReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_94;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setMaximumDistanceElectric:", v17, 0, 0);
        goto LABEL_81;
      case 9u:
        id v17 = objc_alloc_init(_INPBDistance);
        if (!PBReaderPlaceMark() || (_INPBDistanceReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_94;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setDistanceRemainingFuel:", v17, 0, 0);
        goto LABEL_81;
      case 0xAu:
        id v17 = objc_alloc_init(_INPBDistance);
        if (!PBReaderPlaceMark() || (_INPBDistanceReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_94;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setMaximumDistanceFuel:", v17, 0, 0);
        goto LABEL_81;
      case 0xFu:
        id v17 = objc_alloc_init(_INPBJSONDictionary);
        if (!PBReaderPlaceMark() || (_INPBJSONDictionaryReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_94;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setConsumptionFormulaArguments:", v17, 0, 0);
        goto LABEL_81;
      case 0x10u:
        id v17 = objc_alloc_init(_INPBJSONDictionary);
        if (!PBReaderPlaceMark() || (_INPBJSONDictionaryReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_94;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setChargingFormulaArguments:", v17, 0, 0);
        goto LABEL_81;
      case 0x11u:
        PBReaderReadString();
        id v17 = (_INPBDouble *)objc_claimAutoreleasedReturnValue();
        [a1 setCarIdentifier:v17];
        goto LABEL_81;
      case 0x12u:
        id v17 = objc_alloc_init(_INPBDateTime);
        if (!PBReaderPlaceMark() || (_INPBDateTimeReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_94;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setDateOfLastStateUpdate:", v17, 0, 0);
        goto LABEL_81;
      case 0x13u:
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v27 = 0;
        while (2)
        {
          uint64_t v28 = *v3;
          unint64_t v29 = *(void *)(a2 + v28);
          if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
            *(void *)(a2 + v28) = v29 + 1;
            v27 |= (unint64_t)(v30 & 0x7F) << v25;
            if (v30 < 0)
            {
              v25 += 7;
              BOOL v14 = v26++ >= 9;
              if (v14)
              {
                uint64_t v31 = 0;
                goto LABEL_92;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v31 = 0;
        }
        else {
          uint64_t v31 = v27;
        }
LABEL_92:
        [a1 setActiveConnector:v31];
        goto LABEL_82;
      case 0x14u:
        id v17 = objc_alloc_init(_INPBEnergy);
        if (!PBReaderPlaceMark() || (_INPBEnergyReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_94;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setMaximumBatteryCapacity:", v17, 0, 0);
        goto LABEL_81;
      case 0x15u:
        id v17 = objc_alloc_init(_INPBEnergy);
        if (!PBReaderPlaceMark() || (_INPBEnergyReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_94;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCurrentBatteryCapacity:", v17, 0, 0);
        goto LABEL_81;
      case 0x16u:
        id v17 = objc_alloc_init(_INPBEnergy);
        if PBReaderPlaceMark() && (_INPBEnergyReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setMinimumBatteryCapacity:", v17, 0, 0);
LABEL_81:

LABEL_82:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_94:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_82;
    }
  }
}

id INIntentSlotValueTransformFromDecimalNumberValue(void *a1)
{
  if (a1)
  {
    uint64_t v2 = (objc_class *)MEMORY[0x1E4F28C28];
    id v3 = a1;
    id v4 = [v2 alloc];
    uint64_t v5 = [v3 mantissa];
    __int16 v6 = [v3 exponent];
    uint64_t v7 = [v3 isNegative];

    a1 = (void *)[v4 initWithMantissa:v5 exponent:v6 isNegative:v7];
    uint64_t v1 = vars8;
  }
  return a1;
}

_INPBDecimalNumberValue *INIntentSlotValueTransformToDecimalNumberValue(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_alloc_init(_INPBDecimalNumberValue);
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    int v6 = 0;
    [v1 decimalValue];
    [(_INPBDecimalNumberValue *)v2 setMantissa:0];
    [(_INPBDecimalNumberValue *)v2 setExponent:0];
    [(_INPBDecimalNumberValue *)v2 setIsNegative:0];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INIntentSlotValueRedactedValueFromDecimalNumberValue(void *a1, uint64_t a2)
{
  id v3 = a1;
  uint64_t v4 = [v3 valueMetadata];
  uint64_t v5 = INPrivacyEntitlementOptionsForValueMetadata(v4);

  if ((v5 & a2) != 0) {
    id v6 = 0;
  }
  else {
    id v6 = v3;
  }

  return v6;
}

void sub_18CC05294(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(v1 + 16))(v1);
  _Unwind_Resume(a1);
}

void sub_18CC05618(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va1, a11);
  va_start(va, a11);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__13104(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__13105(uint64_t a1)
{
}

void sub_18CC05A08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18CC06110(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

id INCodableDescriptionClassFromType(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  if ((unint64_t)(a1 - 1) >= 5)
  {
    uint64_t v2 = (void *)INSiriLogContextIntents;
    if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_FAULT))
    {
      uint64_t v5 = NSNumber;
      id v6 = v2;
      uint64_t v7 = [v5 numberWithInteger:a1];
      int v8 = 136315394;
      unsigned int v9 = "INCodableDescriptionClassFromType";
      __int16 v10 = 2112;
      uint64_t v11 = v7;
      _os_log_fault_impl(&dword_18CB2F000, v6, OS_LOG_TYPE_FAULT, "%s Unknown type for codable description of type: %@", (uint8_t *)&v8, 0x16u);
    }
  }
  id v3 = objc_opt_class();

  return v3;
}

BOOL _INPBTaskListReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t v17 = objc_alloc_init(_INPBDataString);
        if (!PBReaderPlaceMark() || !_INPBDataStringReadFrom(v17, a2)) {
          goto LABEL_42;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTitle:", v17, 0, 0);
        goto LABEL_38;
      case 2u:
        uint64_t v17 = objc_alloc_init(_INPBTask);
        if (!PBReaderPlaceMark() || !_INPBTaskReadFrom(v17, a2)) {
          goto LABEL_42;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addTasks:", v17, 0, 0);
        }
        goto LABEL_38;
      case 3u:
        uint64_t v17 = objc_alloc_init(_INPBDataString);
        if (!PBReaderPlaceMark() || !_INPBDataStringReadFrom(v17, a2)) {
          goto LABEL_42;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setGroupName:", v17, 0, 0);
        goto LABEL_38;
      case 5u:
        uint64_t v17 = objc_alloc_init(_INPBDateTime);
        if (!PBReaderPlaceMark() || (_INPBDateTimeReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_42;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCreatedDateTime:", v17, 0, 0);
        goto LABEL_38;
      case 6u:
        uint64_t v17 = objc_alloc_init(_INPBDateTime);
        if PBReaderPlaceMark() && (_INPBDateTimeReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setModifiedDateTime:", v17, 0, 0);
LABEL_38:

LABEL_39:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_42:

        return 0;
      case 7u:
        PBReaderReadString();
        uint64_t v17 = (_INPBDataString *)objc_claimAutoreleasedReturnValue();
        [a1 setIdentifier:v17];
        goto LABEL_38;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_39;
    }
  }
}

__CFString *INEndWorkoutIntentResponseCodeGetName(unint64_t a1)
{
  if (a1 > 7) {
    return 0;
  }
  else {
    return off_1E55174F0[a1];
  }
}

uint64_t _INPBContactReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = objc_alloc_init(_INPBContactValue);
        if (!PBReaderPlaceMark() || !_INPBContactValueReadFrom(v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addValue:", v17, 0, 0);
        }
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _INPBSearchForMessagesIntentResponseReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 1) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        uint64_t v17 = objc_alloc_init(_INPBMessage);
        if (!PBReaderPlaceMark() || !_INPBMessageReadFrom(v17, a2)) {
          goto LABEL_33;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addMessages:", v17, 0, 0);
        }
LABEL_28:

        goto LABEL_30;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_30:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    uint64_t v17 = objc_alloc_init(_INPBMessage);
    if (!PBReaderPlaceMark() || !_INPBMessageReadFrom(v17, a2))
    {
LABEL_33:

      return 0;
    }
    PBReaderRecallMark();
    if (v17) {
      objc_msgSend(a1, "addSearchResults:", v17, 0, 0);
    }
    goto LABEL_28;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _INPBCreateNoteIntentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t v17 = objc_alloc_init(_INPBIntentMetadata);
        if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntentMetadata:", v17, 0, 0);
        goto LABEL_33;
      case 2u:
        uint64_t v17 = objc_alloc_init(_INPBDataString);
        if (!PBReaderPlaceMark() || !_INPBDataStringReadFrom(v17, a2)) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTitle:", v17, 0, 0);
        goto LABEL_33;
      case 3u:
        uint64_t v17 = objc_alloc_init(_INPBNoteContent);
        if (!PBReaderPlaceMark() || (_INPBNoteContentReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setContent:", v17, 0, 0);
        goto LABEL_33;
      case 4u:
        uint64_t v17 = objc_alloc_init(_INPBDataString);
        if (PBReaderPlaceMark() && _INPBDataStringReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setGroupName:", v17, 0, 0);
LABEL_33:

LABEL_34:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_36:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_34;
    }
  }
}

__CFString *INControlHomeIntentResponseCodeGetName(unint64_t a1)
{
  if (a1 > 0x12) {
    return 0;
  }
  else {
    return off_1E5517530[a1];
  }
}

BOOL INRecurrenceFrequencyHasBackingType(unint64_t a1)
{
  return a1 < 7;
}

uint64_t INRecurrenceFrequencyGetBackingType(unint64_t a1)
{
  if (a1 > 6) {
    return 0x7FFFFFFFLL;
  }
  else {
    return dword_18CFC41A0[a1];
  }
}

uint64_t INRecurrenceFrequencyGetFacadeType(int a1, int a2)
{
  uint64_t v2 = 4;
  uint64_t v3 = 5;
  uint64_t v4 = 6;
  if (a2 != 110) {
    uint64_t v4 = 0;
  }
  if (a2 != 80) {
    uint64_t v3 = v4;
  }
  if (a2 != 60) {
    uint64_t v2 = v3;
  }
  uint64_t v5 = 1;
  uint64_t v6 = 2;
  uint64_t v7 = 3;
  if (a2 != 50) {
    uint64_t v7 = 0;
  }
  if (a2 != 40) {
    uint64_t v6 = v7;
  }
  if (a2 != 30) {
    uint64_t v5 = v6;
  }
  if (a2 <= 59) {
    uint64_t v2 = v5;
  }
  if (a1) {
    return v2;
  }
  else {
    return 0;
  }
}

__CFString *INRecurrenceFrequencyGetName(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 5) {
    return @"unknown";
  }
  else {
    return off_1E55175C8[a1 - 1];
  }
}

uint64_t INRecurrenceFrequencyWithString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"minute"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"hourly"])
  {
    uint64_t v2 = 2;
  }
  else if ([v1 isEqualToString:@"daily"])
  {
    uint64_t v2 = 3;
  }
  else if ([v1 isEqualToString:@"weekly"])
  {
    uint64_t v2 = 4;
  }
  else if ([v1 isEqualToString:@"monthly"])
  {
    uint64_t v2 = 5;
  }
  else if ([v1 isEqualToString:@"yearly"])
  {
    uint64_t v2 = 6;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INRecurrenceFrequencyGetLocalizedName(uint64_t a1, void *a2)
{
  id v3 = a2;
  switch(a1)
  {
    case 1:
      uint64_t v4 = @"minute";
      goto LABEL_9;
    case 2:
      uint64_t v4 = @"hourly";
      goto LABEL_9;
    case 3:
      uint64_t v4 = @"daily";
      goto LABEL_9;
    case 4:
      uint64_t v4 = @"weekly";
      goto LABEL_9;
    case 5:
      uint64_t v4 = @"monthly";
      goto LABEL_9;
    case 6:
      uint64_t v4 = @"yearly";
LABEL_9:
      uint64_t v5 = INLocalizedStringWithLocalizer(v4, v4, v3);
      break;
    default:
      uint64_t v5 = 0;
      break;
  }

  return v5;
}

uint64_t _INPBGetRideStatusIntentResponseReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = objc_alloc_init(_INPBRideStatus);
        if (!PBReaderPlaceMark() || (_INPBRideStatusReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRideStatus:", v17, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _INPBIntentSlotVocabularyConceptReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        char v24 = (_INPBIntentSlotVocabularyValue *)objc_claimAutoreleasedReturnValue();
        [a1 setIdentifier:v24];
      }
      else
      {
        if (v17 != 2)
        {
          if (v17 == 3)
          {
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            while (1)
            {
              uint64_t v21 = *v3;
              unint64_t v22 = *(void *)(a2 + v21);
              if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
              *(void *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0) {
                goto LABEL_37;
              }
              v18 += 7;
              BOOL v14 = v19++ >= 9;
              if (v14)
              {
                uint64_t v20 = 0;
                goto LABEL_39;
              }
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_37:
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v20 = 0;
            }
LABEL_39:
            [a1 setRequiresUserIdentification:v20 != 0];
          }
          else
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
          }
          continue;
        }
        char v24 = objc_alloc_init(_INPBIntentSlotVocabularyValue);
        if (!PBReaderPlaceMark() || !_INPBIntentSlotVocabularyValueReadFrom(v24, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v24) {
          objc_msgSend(a1, "addSynonyms:", v24, 0, 0);
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _INPBSearchCallHistoryIntentResponseReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 2u:
        PBReaderReadString();
        unint64_t v17 = (_INPBCallRecordValue *)objc_claimAutoreleasedReturnValue();
        [a1 setTargetContact:v17];
        goto LABEL_28;
      case 4u:
        PBReaderReadString();
        unint64_t v17 = (_INPBCallRecordValue *)objc_claimAutoreleasedReturnValue();
        [a1 setDateCreated:v17];
        goto LABEL_28;
      case 5u:
        PBReaderReadString();
        unint64_t v17 = (_INPBCallRecordValue *)objc_claimAutoreleasedReturnValue();
        [a1 setStatus:v17];
        goto LABEL_28;
      case 6u:
        unint64_t v17 = objc_alloc_init(_INPBCallRecordValue);
        if (PBReaderPlaceMark() && _INPBCallRecordValueReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          if (v17) {
            objc_msgSend(a1, "addCallRecords:", v17, 0, 0);
          }
LABEL_28:

LABEL_29:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_29;
    }
  }
}

uint64_t _INPBSearchForFilesIntentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v17 = objc_alloc_init(_INPBIntentMetadata);
        if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_65;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntentMetadata:", v17, 0, 0);
        goto LABEL_51;
      case 2u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_58;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v21;
        }
LABEL_58:
        objc_msgSend(a1, "setEntityType:", v25, v33, v34);
        goto LABEL_52;
      case 3u:
        unint64_t v17 = objc_alloc_init(_INPBString);
        if (!PBReaderPlaceMark() || (_INPBStringReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_65;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEntityName:", v17, 0, 0);
        goto LABEL_51;
      case 4u:
        unint64_t v17 = objc_alloc_init(_INPBString);
        if (!PBReaderPlaceMark() || (_INPBStringReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_65;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAppId:", v17, 0, 0);
        goto LABEL_51;
      case 5u:
        unint64_t v17 = objc_alloc_init(_INPBFileProperty);
        uint64_t v33 = 0;
        uint64_t v34 = 0;
        if (!PBReaderPlaceMark() || !_INPBFilePropertyReadFrom(v17, a2)) {
          goto LABEL_65;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addProperties:", v17, 0, 0);
        }
        goto LABEL_51;
      case 6u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                uint64_t v32 = 0;
                goto LABEL_63;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v32 = 0;
        }
        else {
          uint64_t v32 = v28;
        }
LABEL_63:
        objc_msgSend(a1, "setScope:", v32, v33, v34);
        goto LABEL_52;
      case 7u:
        unint64_t v17 = objc_alloc_init(_INPBString);
        if PBReaderPlaceMark() && (_INPBStringReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setScopeEntityName:", v17, 0, 0);
LABEL_51:

LABEL_52:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_65:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_52;
    }
  }
}

uint64_t INCarSeatHasBackingType(unint64_t a1)
{
  return (a1 < 0xD) & (0x1FFEu >> a1);
}

uint64_t INCarSeatGetBackingType(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 0xB) {
    return 0x7FFFFFFFLL;
  }
  else {
    return dword_18CFC41BC[a1 - 1];
  }
}

uint64_t INCarSeatGetFacadeType(int a1, int a2)
{
  if (a1 && (a2 - 1) <= 0x15) {
    return qword_18CFC41F0[a2 - 1];
  }
  else {
    return 0;
  }
}

__CFString *INCarSeatGetName(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 0xB) {
    return @"unknown";
  }
  else {
    return off_1E5517630[a1 - 1];
  }
}

uint64_t INCarSeatWithString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"driver"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"passenger"])
  {
    uint64_t v2 = 2;
  }
  else if ([v1 isEqualToString:@"frontLeft"])
  {
    uint64_t v2 = 3;
  }
  else if ([v1 isEqualToString:@"frontRight"])
  {
    uint64_t v2 = 4;
  }
  else if ([v1 isEqualToString:@"front"])
  {
    uint64_t v2 = 5;
  }
  else if ([v1 isEqualToString:@"rearLeft"])
  {
    uint64_t v2 = 6;
  }
  else if ([v1 isEqualToString:@"rearRight"])
  {
    uint64_t v2 = 7;
  }
  else if ([v1 isEqualToString:@"rear"])
  {
    uint64_t v2 = 8;
  }
  else if ([v1 isEqualToString:@"thirdRowLeft"])
  {
    uint64_t v2 = 9;
  }
  else if ([v1 isEqualToString:@"thirdRowRight"])
  {
    uint64_t v2 = 10;
  }
  else if ([v1 isEqualToString:@"thirdRow"])
  {
    uint64_t v2 = 11;
  }
  else if ([v1 isEqualToString:@"all"])
  {
    uint64_t v2 = 12;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INCarSeatGetLocalizedName(uint64_t a1, void *a2)
{
  id v3 = a2;
  switch(a1)
  {
    case 1:
      uint64_t v4 = @"driver";
      goto LABEL_14;
    case 2:
      uint64_t v4 = @"passenger";
      goto LABEL_14;
    case 3:
      uint64_t v4 = @"front left";
      goto LABEL_14;
    case 4:
      uint64_t v4 = @"front right";
      goto LABEL_14;
    case 5:
      uint64_t v4 = @"front";
      goto LABEL_14;
    case 6:
      uint64_t v4 = @"rear left";
      goto LABEL_14;
    case 7:
      uint64_t v4 = @"rear right";
      goto LABEL_14;
    case 8:
      uint64_t v4 = @"rear";
      goto LABEL_14;
    case 9:
      uint64_t v4 = @"third row left";
      goto LABEL_14;
    case 10:
      uint64_t v4 = @"third row right";
      goto LABEL_14;
    case 11:
      uint64_t v4 = @"third row";
      goto LABEL_14;
    case 12:
      uint64_t v4 = @"all";
LABEL_14:
      uint64_t v5 = INLocalizedStringWithLocalizer(v4, v4, v3);
      break;
    default:
      uint64_t v5 = 0;
      break;
  }

  return v5;
}

__CFString *INResumeWorkoutIntentResponseCodeGetName(unint64_t a1)
{
  if (a1 > 7) {
    return 0;
  }
  else {
    return off_1E5517690[a1];
  }
}

uint64_t INHomeAttributeTypeHasBackingType(uint64_t a1)
{
  switch(a1)
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
      uint64_t result = 1;
      break;
    default:
      uint64_t result = 0;
      break;
  }
  return result;
}

uint64_t INHomeAttributeTypeGetBackingType(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) >= 0x42) {
    return 0x7FFFFFFFLL;
  }
  else {
    return (a1 - 1);
  }
}

uint64_t INHomeAttributeTypeGetFacadeType(unsigned __int8 a1, unsigned int a2)
{
  if (((a2 < 0x42) & a1) != 0) {
    return a2 + 1;
  }
  else {
    return 0;
  }
}

__CFString *INHomeAttributeTypeGetName(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 0x41) {
    return @"unknown";
  }
  else {
    return off_1E55176D0[a1 - 1];
  }
}

uint64_t INHomeAttributeTypeWithString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"enabled"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"brightness"])
  {
    uint64_t v2 = 2;
  }
  else if ([v1 isEqualToString:@"hue"])
  {
    uint64_t v2 = 3;
  }
  else if ([v1 isEqualToString:@"saturation"])
  {
    uint64_t v2 = 4;
  }
  else if ([v1 isEqualToString:@"colorValue"])
  {
    uint64_t v2 = 5;
  }
  else if ([v1 isEqualToString:@"temperature"])
  {
    uint64_t v2 = 6;
  }
  else if ([v1 isEqualToString:@"humidity"])
  {
    uint64_t v2 = 7;
  }
  else if ([v1 isEqualToString:@"lock"])
  {
    uint64_t v2 = 8;
  }
  else if ([v1 isEqualToString:@"position"])
  {
    uint64_t v2 = 9;
  }
  else if ([v1 isEqualToString:@"raise"])
  {
    uint64_t v2 = 10;
  }
  else if ([v1 isEqualToString:@"rotationSpeed"])
  {
    uint64_t v2 = 11;
  }
  else if ([v1 isEqualToString:@"rotationDirection"])
  {
    uint64_t v2 = 12;
  }
  else if ([v1 isEqualToString:@"securitySystemState"])
  {
    uint64_t v2 = 13;
  }
  else if ([v1 isEqualToString:@"heatingCoolingMode"])
  {
    uint64_t v2 = 14;
  }
  else if ([v1 isEqualToString:@"heaterCoolerMode"])
  {
    uint64_t v2 = 15;
  }
  else if ([v1 isEqualToString:@"controlLock"])
  {
    uint64_t v2 = 16;
  }
  else if ([v1 isEqualToString:@"coolingThreshold"])
  {
    uint64_t v2 = 17;
  }
  else if ([v1 isEqualToString:@"fanOperatingMode"])
  {
    uint64_t v2 = 18;
  }
  else if ([v1 isEqualToString:@"heatingThreshold"])
  {
    uint64_t v2 = 19;
  }
  else if ([v1 isEqualToString:@"humidifierDehumidifierMode"])
  {
    uint64_t v2 = 20;
  }
  else if ([v1 isEqualToString:@"slatOperatingMode"])
  {
    uint64_t v2 = 21;
  }
  else if ([v1 isEqualToString:@"swingMode"])
  {
    uint64_t v2 = 22;
  }
  else if ([v1 isEqualToString:@"humidifierThreshold"])
  {
    uint64_t v2 = 23;
  }
  else if ([v1 isEqualToString:@"dehumidifierThreshold"])
  {
    uint64_t v2 = 24;
  }
  else if ([v1 isEqualToString:@"programMode"])
  {
    uint64_t v2 = 25;
  }
  else if ([v1 isEqualToString:@"duration"])
  {
    uint64_t v2 = 26;
  }
  else if ([v1 isEqualToString:@"power"])
  {
    uint64_t v2 = 27;
  }
  else if ([v1 isEqualToString:@"airQualityRating"])
  {
    uint64_t v2 = 28;
  }
  else if ([v1 isEqualToString:@"airParticulateDensity"])
  {
    uint64_t v2 = 29;
  }
  else if ([v1 isEqualToString:@"airParticulateSize"])
  {
    uint64_t v2 = 30;
  }
  else if ([v1 isEqualToString:@"smokeDetected"])
  {
    uint64_t v2 = 31;
  }
  else if ([v1 isEqualToString:@"carbonMonoxideDetected"])
  {
    uint64_t v2 = 32;
  }
  else if ([v1 isEqualToString:@"carbonMonoxideLevel"])
  {
    uint64_t v2 = 33;
  }
  else if ([v1 isEqualToString:@"carbonMonoxidePeakLevel"])
  {
    uint64_t v2 = 34;
  }
  else if ([v1 isEqualToString:@"carbonDioxideDetected"])
  {
    uint64_t v2 = 35;
  }
  else if ([v1 isEqualToString:@"carbonDioxideLevel"])
  {
    uint64_t v2 = 36;
  }
  else if ([v1 isEqualToString:@"carbonDioxidePeakLevel"])
  {
    uint64_t v2 = 37;
  }
  else if ([v1 isEqualToString:@"contactDetected"])
  {
    uint64_t v2 = 38;
  }
  else if ([v1 isEqualToString:@"occupancyDetected"])
  {
    uint64_t v2 = 39;
  }
  else if ([v1 isEqualToString:@"leakDetected"])
  {
    uint64_t v2 = 40;
  }
  else if ([v1 isEqualToString:@"motionDetected"])
  {
    uint64_t v2 = 41;
  }
  else if ([v1 isEqualToString:@"ambientLightLevel"])
  {
    uint64_t v2 = 42;
  }
  else if ([v1 isEqualToString:@"batteryLevel"])
  {
    uint64_t v2 = 43;
  }
  else if ([v1 isEqualToString:@"chargingState"])
  {
    uint64_t v2 = 44;
  }
  else if ([v1 isEqualToString:@"lowBattery"])
  {
    uint64_t v2 = 45;
  }
  else if ([v1 isEqualToString:@"inUse"])
  {
    uint64_t v2 = 46;
  }
  else if ([v1 isEqualToString:@"airPurifierOperatingMode"])
  {
    uint64_t v2 = 47;
  }
  else if ([v1 isEqualToString:@"filterChange"])
  {
    uint64_t v2 = 48;
  }
  else if ([v1 isEqualToString:@"filterLife"])
  {
    uint64_t v2 = 49;
  }
  else if ([v1 isEqualToString:@"waterLevel"])
  {
    uint64_t v2 = 50;
  }
  else if ([v1 isEqualToString:@"remainingDuration"])
  {
    uint64_t v2 = 51;
  }
  else if ([v1 isEqualToString:@"statusFault"])
  {
    uint64_t v2 = 52;
  }
  else if ([v1 isEqualToString:@"sulphurDioxideDensity"])
  {
    uint64_t v2 = 53;
  }
  else if ([v1 isEqualToString:@"nitrogenDioxideDensity"])
  {
    uint64_t v2 = 54;
  }
  else if ([v1 isEqualToString:@"particulateMatter25Density"])
  {
    uint64_t v2 = 55;
  }
  else if ([v1 isEqualToString:@"particulateMatter10Density"])
  {
    uint64_t v2 = 56;
  }
  else if ([v1 isEqualToString:@"volatileOrganicCompoundDensity"])
  {
    uint64_t v2 = 57;
  }
  else if ([v1 isEqualToString:@"ozoneDensity"])
  {
    uint64_t v2 = 58;
  }
  else if ([v1 isEqualToString:@"colorTemperature"])
  {
    uint64_t v2 = 59;
  }
  else if ([v1 isEqualToString:@"count"])
  {
    uint64_t v2 = 60;
  }
  else if ([v1 isEqualToString:@"location"])
  {
    uint64_t v2 = 61;
  }
  else if ([v1 isEqualToString:@"inventory"])
  {
    uint64_t v2 = 62;
  }
  else if ([v1 isEqualToString:@"capabilities"])
  {
    uint64_t v2 = 63;
  }
  else if ([v1 isEqualToString:@"open"])
  {
    uint64_t v2 = 64;
  }
  else if ([v1 isEqualToString:@"media"])
  {
    uint64_t v2 = 65;
  }
  else if ([v1 isEqualToString:@"adaptiveLighting"])
  {
    uint64_t v2 = 66;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INHomeAttributeTypeGetLocalizedName(uint64_t a1, void *a2)
{
  id v3 = a2;
  switch(a1)
  {
    case 1:
      uint64_t v4 = @"enabled";
      goto LABEL_69;
    case 2:
      uint64_t v4 = @"brightness";
      goto LABEL_69;
    case 3:
      uint64_t v4 = @"hue";
      goto LABEL_69;
    case 4:
      uint64_t v4 = @"saturation";
      goto LABEL_69;
    case 5:
      uint64_t v4 = @"color value";
      goto LABEL_69;
    case 6:
      uint64_t v4 = @"temperature";
      goto LABEL_69;
    case 7:
      uint64_t v4 = @"humidity";
      goto LABEL_69;
    case 8:
      uint64_t v4 = @"lock";
      goto LABEL_69;
    case 9:
      uint64_t v4 = @"position";
      goto LABEL_69;
    case 10:
      uint64_t v4 = @"raise";
      goto LABEL_69;
    case 11:
      uint64_t v4 = @"rotation speed";
      goto LABEL_69;
    case 12:
      uint64_t v4 = @"rotation direction";
      goto LABEL_69;
    case 13:
      uint64_t v4 = @"security system state";
      goto LABEL_69;
    case 14:
      uint64_t v4 = @"heating cooling mode";
      goto LABEL_69;
    case 15:
      uint64_t v4 = @"heater cooler mode";
      goto LABEL_69;
    case 16:
      uint64_t v4 = @"control lock";
      goto LABEL_69;
    case 17:
      uint64_t v4 = @"cooling threshold";
      goto LABEL_69;
    case 18:
      uint64_t v4 = @"fan operating mode";
      goto LABEL_69;
    case 19:
      uint64_t v4 = @"heating threshold";
      goto LABEL_69;
    case 20:
      uint64_t v4 = @"humidifier dehumidifier mode";
      goto LABEL_69;
    case 21:
      uint64_t v4 = @"slat operating mode";
      goto LABEL_69;
    case 22:
      uint64_t v4 = @"swing mode";
      goto LABEL_69;
    case 23:
      uint64_t v4 = @"humidifier threshold";
      goto LABEL_69;
    case 24:
      uint64_t v4 = @"dehumidifier threshold";
      goto LABEL_69;
    case 25:
      uint64_t v4 = @"program mode";
      goto LABEL_69;
    case 26:
      uint64_t v4 = @"duration";
      goto LABEL_69;
    case 27:
      uint64_t v4 = @"power";
      goto LABEL_69;
    case 28:
      uint64_t v4 = @"air quality rating";
      goto LABEL_69;
    case 29:
      uint64_t v4 = @"air particulate density";
      goto LABEL_69;
    case 30:
      uint64_t v4 = @"air particulate size";
      goto LABEL_69;
    case 31:
      uint64_t v4 = @"smoke detected";
      goto LABEL_69;
    case 32:
      uint64_t v4 = @"carbon monoxide detected";
      goto LABEL_69;
    case 33:
      uint64_t v4 = @"carbon monoxide level";
      goto LABEL_69;
    case 34:
      uint64_t v4 = @"carbon monoxide peak level";
      goto LABEL_69;
    case 35:
      uint64_t v4 = @"carbon dioxide detected";
      goto LABEL_69;
    case 36:
      uint64_t v4 = @"carbon dioxide level";
      goto LABEL_69;
    case 37:
      uint64_t v4 = @"carbon dioxide peak level";
      goto LABEL_69;
    case 38:
      uint64_t v4 = @"contact detected";
      goto LABEL_69;
    case 39:
      uint64_t v4 = @"occupancy detected";
      goto LABEL_69;
    case 40:
      uint64_t v4 = @"leak detected";
      goto LABEL_69;
    case 41:
      uint64_t v4 = @"motion detected";
      goto LABEL_69;
    case 42:
      uint64_t v4 = @"ambient light level";
      goto LABEL_69;
    case 43:
      uint64_t v4 = @"battery level";
      goto LABEL_69;
    case 44:
      uint64_t v4 = @"charging state";
      goto LABEL_69;
    case 45:
      uint64_t v4 = @"low battery";
      goto LABEL_69;
    case 46:
      uint64_t v4 = @"in use";
      goto LABEL_69;
    case 47:
      uint64_t v4 = @"air purifier operating mode";
      goto LABEL_69;
    case 48:
      uint64_t v4 = @"filter change";
      goto LABEL_69;
    case 49:
      uint64_t v4 = @"filter life";
      goto LABEL_69;
    case 50:
      uint64_t v4 = @"water level";
      goto LABEL_69;
    case 51:
      uint64_t v4 = @"remaining duration";
      goto LABEL_69;
    case 52:
      uint64_t v4 = @"status fault";
      goto LABEL_69;
    case 53:
      uint64_t v4 = @"sulphur dioxide density";
      goto LABEL_69;
    case 54:
      uint64_t v4 = @"nitrogen dioxide density";
      goto LABEL_69;
    case 55:
      uint64_t v4 = @"particulate matter25 density";
      goto LABEL_69;
    case 56:
      uint64_t v4 = @"particulate matter10 density";
      goto LABEL_69;
    case 57:
      uint64_t v4 = @"volatile organic compound density";
      goto LABEL_69;
    case 58:
      uint64_t v4 = @"ozone density";
      goto LABEL_69;
    case 59:
      uint64_t v4 = @"color temperature";
      goto LABEL_69;
    case 60:
      uint64_t v4 = @"count";
      goto LABEL_69;
    case 61:
      uint64_t v4 = @"location";
      goto LABEL_69;
    case 62:
      uint64_t v4 = @"inventory";
      goto LABEL_69;
    case 63:
      uint64_t v4 = @"capabilities";
      goto LABEL_69;
    case 64:
      uint64_t v4 = @"open";
      goto LABEL_69;
    case 65:
      uint64_t v4 = @"media";
      goto LABEL_69;
    case 66:
      uint64_t v4 = @"adaptive lighting";
LABEL_69:
      uint64_t v5 = INLocalizedStringWithLocalizer(v4, v4, v3);
      break;
    default:
      uint64_t v5 = 0;
      break;
  }

  return v5;
}

BOOL _INPBLocalizedProjectReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        char v18 = objc_alloc_init(_INPBLanguageTag);
        if (!PBReaderPlaceMark() || (_INPBLanguageTagReadFrom(v18, a2) & 1) == 0)
        {
LABEL_35:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLanguage:", v18, 0, 0);
        goto LABEL_30;
      }
      if (v17 == 3) {
        break;
      }
      if (v17 == 2)
      {
        char v18 = objc_alloc_init(_INPBAppNames);
        if (!PBReaderPlaceMark() || !_INPBAppNamesReadFrom(v18, a2)) {
          goto LABEL_35;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAppNames:", v18, 0, 0);
LABEL_30:

        goto LABEL_32;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_32:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v18 = objc_alloc_init(_INPBIntentVocabulary);
    if (!PBReaderPlaceMark() || !_INPBIntentVocabularyReadFrom(v18, a2)) {
      goto LABEL_35;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setIntentVocabulary:", v18, 0, 0);
    goto LABEL_30;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _INPBIntentSlotResolutionMulticardinalResultReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = objc_alloc_init(_INPBIntentSlotResolutionResult);
        if (!PBReaderPlaceMark() || !_INPBIntentSlotResolutionResultReadFrom(v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addResolutionResults:", v17, 0, 0);
        }
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

INHomeAttribute *INIntentSlotValueTransformFromHomeAttribute(void *a1)
{
  id v1 = a1;
  uint64_t v2 = v1;
  if (v1)
  {
    unsigned __int8 v3 = [v1 hasAttributeType];
    unsigned int v4 = [v2 attributeType];
    if (((v4 < 0x42) & v3) != 0) {
      uint64_t v5 = v4 + 1;
    }
    else {
      uint64_t v5 = 0;
    }
    if ([v2 hasAttributeValue])
    {
      uint64_t v6 = [v2 attributeValue];
      unsigned __int8 v7 = [v6 hasValueType];
      unsigned int v8 = [v6 valueType];
      if (((v8 < 6) & v7) != 0) {
        uint64_t v9 = v8 + 1;
      }
      else {
        uint64_t v9 = 0;
      }
      if ([v6 hasBooleanValue]) {
        uint64_t v10 = [v6 BOOLeanValue];
      }
      else {
        uint64_t v10 = 0;
      }
      double v13 = 0.0;
      if ([v6 hasDoubleValue])
      {
        [v6 doubleValue];
        double v13 = v14;
      }
      if ([v6 hasStringValue])
      {
        unint64_t v12 = [v6 stringValue];
      }
      else
      {
        unint64_t v12 = 0;
      }
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      unint64_t v12 = 0;
      double v13 = 0.0;
    }
    uint64_t v11 = [[INHomeAttribute alloc] initWithType:v5 valueType:v9 BOOLValue:v10 doubleValue:v12 stringValue:v13];
  }
  else
  {
    uint64_t v11 = 0;
  }

  return v11;
}

_INPBHomeAttribute *INIntentSlotValueTransformToHomeAttribute(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_alloc_init(_INPBHomeAttribute);
    if (INHomeAttributeTypeHasBackingType([v1 type]))
    {
      unint64_t v3 = [v1 type] - 1;
      if (v3 >= 0x42) {
        uint64_t v4 = 0x7FFFFFFFLL;
      }
      else {
        uint64_t v4 = v3;
      }
      [(_INPBHomeAttribute *)v2 setAttributeType:v4];
    }
    uint64_t v5 = objc_alloc_init(_INPBHomeAttributeValue);
    unint64_t v6 = [v1 valueType];
    if (v6 <= 6 && ((0x7Eu >> v6) & 1) != 0)
    {
      unint64_t v7 = [v1 valueType] - 1;
      if (v7 >= 6) {
        uint64_t v8 = 0x7FFFFFFFLL;
      }
      else {
        uint64_t v8 = v7;
      }
      [(_INPBHomeAttributeValue *)v5 setValueType:v8];
    }
    uint64_t v9 = [v1 valueType];
    switch(v9)
    {
      case 3:
        uint64_t v10 = [v1 stringValue];
        [(_INPBHomeAttributeValue *)v5 setStringValue:v10];

        break;
      case 2:
        [v1 doubleValue];
        -[_INPBHomeAttributeValue setDoubleValue:](v5, "setDoubleValue:");
        break;
      case 1:
        -[_INPBHomeAttributeValue setBooleanValue:](v5, "setBooleanValue:", [v1 BOOLValue]);
        break;
    }
    [(_INPBHomeAttribute *)v2 setAttributeValue:v5];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INIntentSlotValueTransformFromHomeAttributes(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          uint64_t v8 = INIntentSlotValueTransformFromHomeAttribute(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    uint64_t v9 = (void *)[v2 copy];
  }
  else
  {
    uint64_t v9 = 0;
  }

  return v9;
}

id INIntentSlotValueTransformToHomeAttributes(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          uint64_t v8 = INIntentSlotValueTransformToHomeAttribute(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    uint64_t v9 = (void *)[v2 copy];
  }
  else
  {
    uint64_t v9 = 0;
  }

  return v9;
}

BOOL _INPBGenericIntentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  unint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v17 = objc_alloc_init(_INPBIntentMetadata);
        if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_34;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setMetadata:", v17, 0, 0);
        goto LABEL_30;
      case 2u:
        PBReaderReadString();
        unint64_t v17 = (_INPBIntentMetadata *)objc_claimAutoreleasedReturnValue();
        [a1 setDomain:v17];
        goto LABEL_30;
      case 3u:
        PBReaderReadString();
        unint64_t v17 = (_INPBIntentMetadata *)objc_claimAutoreleasedReturnValue();
        [a1 setVerb:v17];
        goto LABEL_30;
      case 4u:
        unint64_t v17 = objc_alloc_init(_INPBProperty);
        if (PBReaderPlaceMark() && _INPBPropertyReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          if (v17) {
            objc_msgSend(a1, "addParameters:", v17, 0, 0);
          }
LABEL_30:

LABEL_31:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_34:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_31;
    }
  }
}

BOOL _INPBCustomObjectReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  unint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        unint64_t v17 = (_INPBDataString *)objc_claimAutoreleasedReturnValue();
        [a1 setIdentifier:v17];
        goto LABEL_32;
      case 2u:
        PBReaderReadString();
        unint64_t v17 = (_INPBDataString *)objc_claimAutoreleasedReturnValue();
        [a1 setDisplayString:v17];
        goto LABEL_32;
      case 3u:
        PBReaderReadString();
        unint64_t v17 = (_INPBDataString *)objc_claimAutoreleasedReturnValue();
        [a1 setPronunciationHint:v17];
        goto LABEL_32;
      case 4u:
        unint64_t v17 = objc_alloc_init(_INPBDataString);
        if (!PBReaderPlaceMark() || !_INPBDataStringReadFrom(v17, a2)) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addAlternative:", v17, 0, 0);
        }
        goto LABEL_32;
      case 5u:
        PBReaderReadString();
        unint64_t v17 = (_INPBDataString *)objc_claimAutoreleasedReturnValue();
        [a1 setSubtitleString:v17];
        goto LABEL_32;
      case 6u:
        unint64_t v17 = objc_alloc_init(_INPBImageValue);
        if PBReaderPlaceMark() && (_INPBImageValueReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setDisplayImage:", v17, 0, 0);
LABEL_32:

LABEL_33:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_36:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_33;
    }
  }
}

void INRideFeedbackTypeOptionsEnumerateBackingTypes(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1 && v3)
  {
    id v4 = v3;
    if (a1)
    {
      (*((void (**)(id, uint64_t))v3 + 2))(v3, 1);
      id v3 = v4;
    }
    if ((a1 & 2) != 0)
    {
      (*((void (**)(id, uint64_t))v3 + 2))(v4, 2);
      id v3 = v4;
    }
  }
}

uint64_t INRideFeedbackTypeOptionsContainsBackingType(unint64_t a1, int a2)
{
  uint64_t v2 = (a1 >> 1) & 1;
  int v3 = a1 & 1;
  if (a2 != 1) {
    int v3 = 0;
  }
  if (a2 != 2) {
    LODWORD(v2) = v3;
  }
  if (a1) {
    return v2;
  }
  else {
    return 0;
  }
}

uint64_t *INRideFeedbackTypeOptionsAddBackingType(uint64_t *result, int a2)
{
  if (result)
  {
    uint64_t v2 = *result;
    if (a2 == 1) {
      uint64_t v2 = *result | 1;
    }
    if (a2 == 2) {
      uint64_t v2 = *result | 2;
    }
    *uint64_t result = v2;
  }
  return result;
}

unint64_t *INRideFeedbackTypeOptionsRemoveBackingType(unint64_t *result, int a2)
{
  if (result)
  {
    unint64_t v2 = *result;
    if (a2 == 1) {
      unint64_t v2 = *result & 0xFFFFFFFFFFFFFFFELL;
    }
    if (a2 == 2) {
      unint64_t v2 = *result & 0xFFFFFFFFFFFFFFFDLL;
    }
    *uint64_t result = v2;
  }
  return result;
}

id INRideFeedbackTypeOptionsGetNames(uint64_t a1)
{
  if (a1)
  {
    char v1 = a1;
    id v2 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
    int v3 = v2;
    if (v1) {
      [v2 addObject:@"rate"];
    }
    if ((v1 & 2) != 0) {
      [v3 addObject:@"tip"];
    }
    id v4 = (void *)[v3 copy];
  }
  else
  {
    id v4 = (void *)MEMORY[0x1E4F1CBF0];
  }

  return v4;
}

uint64_t INRideFeedbackTypeOptionsWithNames(void *a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  uint64_t v2 = [v1 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = 0;
    uint64_t v5 = *(void *)v10;
    do
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v10 != v5) {
          objc_enumerationMutation(v1);
        }
        unint64_t v7 = *(void **)(*((void *)&v9 + 1) + 8 * i);
        v4 |= [v7 isEqualToString:@"rate"];
        if ([v7 isEqualToString:@"tip"]) {
          v4 |= 2uLL;
        }
      }
      uint64_t v3 = [v1 countByEnumeratingWithState:&v9 objects:v13 count:16];
    }
    while (v3);
  }
  else
  {
    uint64_t v4 = 0;
  }

  return v4;
}

id INRideFeedbackTypeOptionsGetLocalizedNames(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v4 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
    if (a1)
    {
      uint64_t v5 = INLocalizedStringWithLocalizer(@"rate", @"rate", v3);
      [v4 addObject:v5];
    }
    if ((a1 & 2) != 0)
    {
      uint64_t v6 = INLocalizedStringWithLocalizer(@"tip", @"tip", v3);
      [v4 addObject:v6];
    }
    unint64_t v7 = (void *)[v4 copy];
  }
  else
  {
    unint64_t v7 = (void *)MEMORY[0x1E4F1CBF0];
  }

  return v7;
}

uint64_t _INPBDeleteTimerIntentResponseReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    unint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = objc_alloc_init(_INPBTimer);
        if (!PBReaderPlaceMark() || !_INPBTimerReadFrom(v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addDeletedTimers:", v17, 0, 0);
        }
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _INPBGetCarLockStatusIntentResponseReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    unint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setLocked:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _INPBLongValueReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    unint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v24 = objc_alloc_init(_INPBValueMetadata);
        if (!PBReaderPlaceMark() || (_INPBValueMetadataReadFrom(v24, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setValueMetadata:", v24, 0, 0);
      }
      else if ((v10 >> 3) == 2)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_33;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_36;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v23 = 0;
        }
        else {
          uint64_t v23 = v19;
        }
LABEL_36:
        [a1 setValue:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _INPBDataStringReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  unint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        char v17 = (_INPBDataString *)objc_claimAutoreleasedReturnValue();
        [a1 setLocalizedValue:v17];
        goto LABEL_28;
      case 2u:
        PBReaderReadString();
        char v17 = (_INPBDataString *)objc_claimAutoreleasedReturnValue();
        [a1 setVocabularyIdentifier:v17];
        goto LABEL_28;
      case 3u:
        char v17 = objc_alloc_init(_INPBDataString);
        if (PBReaderPlaceMark() && _INPBDataStringReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          if (v17) {
            objc_msgSend(a1, "addAlternatives:", v17, 0, 0);
          }
LABEL_28:

LABEL_29:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }

        return 0;
      case 4u:
        PBReaderReadString();
        char v17 = (_INPBDataString *)objc_claimAutoreleasedReturnValue();
        [a1 setPronunciationHint:v17];
        goto LABEL_28;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_29;
    }
  }
}

uint64_t _INPBIntegerValueReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    unint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v24 = objc_alloc_init(_INPBValueMetadata);
        if (!PBReaderPlaceMark() || (_INPBValueMetadataReadFrom(v24, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setValueMetadata:", v24, 0, 0);
      }
      else if ((v10 >> 3) == 2)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_33;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_36;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v23 = 0;
        }
        else {
          uint64_t v23 = v19;
        }
LABEL_36:
        [a1 setValue:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL INTriggerMethodHasBackingType(uint64_t a1)
{
  return (unint64_t)(a1 - 1) < 4;
}

uint64_t INTriggerMethodGetBackingType(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) >= 4) {
    return 0x7FFFFFFFLL;
  }
  else {
    return (10 * (a1 - 1));
  }
}

uint64_t INTriggerMethodGetFacadeType(int a1, int a2)
{
  uint64_t v2 = 3;
  uint64_t v3 = 4;
  if (a2 != 30) {
    uint64_t v3 = 0;
  }
  if (a2 != 20) {
    uint64_t v2 = v3;
  }
  uint64_t v4 = 1;
  uint64_t v5 = 2;
  if (a2 != 10) {
    uint64_t v5 = 0;
  }
  if (a2) {
    uint64_t v4 = v5;
  }
  if (a2 <= 19) {
    uint64_t v2 = v4;
  }
  if (a1) {
    return v2;
  }
  else {
    return 0;
  }
}

__CFString *INTriggerMethodGetName(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 3) {
    return @"unknown";
  }
  else {
    return *(&off_1E5517928 + a1 - 1);
  }
}

uint64_t INTriggerMethodWithString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"other"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"homeButton"])
  {
    uint64_t v2 = 2;
  }
  else if ([v1 isEqualToString:@"remoteButton"])
  {
    uint64_t v2 = 3;
  }
  else if ([v1 isEqualToString:@"voiceTrigger"])
  {
    uint64_t v2 = 4;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INTriggerMethodGetLocalizedName(uint64_t a1, void *a2)
{
  id v3 = a2;
  switch(a1)
  {
    case 1:
      uint64_t v4 = @"other";
      goto LABEL_7;
    case 2:
      uint64_t v4 = @"home button";
      goto LABEL_7;
    case 3:
      uint64_t v4 = @"remote button";
      goto LABEL_7;
    case 4:
      uint64_t v4 = @"voice trigger";
LABEL_7:
      uint64_t v5 = INLocalizedStringWithLocalizer(v4, v4, v3);
      break;
    default:
      uint64_t v5 = 0;
      break;
  }

  return v5;
}

BOOL _INPBSendPaymentIntentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  unint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = objc_alloc_init(_INPBIntentMetadata);
        if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntentMetadata:", v17, 0, 0);
        goto LABEL_33;
      case 2u:
        char v17 = objc_alloc_init(_INPBContact);
        if (!PBReaderPlaceMark() || (_INPBContactReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPayee:", v17, 0, 0);
        goto LABEL_33;
      case 3u:
        char v17 = objc_alloc_init(_INPBCurrencyAmount);
        if (!PBReaderPlaceMark() || (_INPBCurrencyAmountReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCurrencyAmount:", v17, 0, 0);
        goto LABEL_33;
      case 5u:
        char v17 = objc_alloc_init(_INPBString);
        if PBReaderPlaceMark() && (_INPBStringReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setNote:", v17, 0, 0);
LABEL_33:

LABEL_34:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_36:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_34;
    }
  }
}

BOOL _INPBCallGroupReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    unint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 1) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        char v17 = objc_alloc_init(_INPBString);
        if (!PBReaderPlaceMark() || (_INPBStringReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setGroupId:", v17, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v17 = objc_alloc_init(_INPBString);
    if (!PBReaderPlaceMark() || (_INPBStringReadFrom(v17, a2) & 1) == 0)
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setGroupName:", v17, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

id INIntentSlotValueTransformFromPower(void *a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v1 = objc_msgSend(a1, "values", 0);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v10;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v10 != v4) {
          objc_enumerationMutation(v1);
        }
        uint64_t v6 = INIntentSlotValueTransformFromPowerValue(*(void **)(*((void *)&v9 + 1) + 8 * i));
        if (v6)
        {
          unint64_t v7 = (void *)v6;
          goto LABEL_11;
        }
      }
      uint64_t v3 = [v1 countByEnumeratingWithState:&v9 objects:v13 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
  unint64_t v7 = 0;
LABEL_11:

  return v7;
}

id INIntentSlotValueTransformFromPowerValue(void *a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = v1;
  if (v1)
  {
    if ([v1 hasUnit])
    {
      switch([v2 unit])
      {
        case 1u:
          uint64_t v3 = [MEMORY[0x1E4F291F0] terawatts];
          goto LABEL_16;
        case 2u:
          uint64_t v3 = [MEMORY[0x1E4F291F0] gigawatts];
          goto LABEL_16;
        case 3u:
          uint64_t v3 = [MEMORY[0x1E4F291F0] megawatts];
          goto LABEL_16;
        case 4u:
          uint64_t v3 = [MEMORY[0x1E4F291F0] kilowatts];
          goto LABEL_16;
        case 5u:
          uint64_t v3 = [MEMORY[0x1E4F291F0] watts];
          goto LABEL_16;
        case 6u:
          uint64_t v3 = [MEMORY[0x1E4F291F0] milliwatts];
          goto LABEL_16;
        case 7u:
          uint64_t v3 = [MEMORY[0x1E4F291F0] microwatts];
          goto LABEL_16;
        case 8u:
          uint64_t v3 = [MEMORY[0x1E4F291F0] nanowatts];
          goto LABEL_16;
        case 9u:
          uint64_t v3 = [MEMORY[0x1E4F291F0] picowatts];
          goto LABEL_16;
        case 0xAu:
          uint64_t v3 = [MEMORY[0x1E4F291F0] femtowatts];
          goto LABEL_16;
        case 0xBu:
          uint64_t v3 = [MEMORY[0x1E4F291F0] horsepower];
LABEL_16:
          uint64_t v5 = (void *)v3;
          if (!v3) {
            goto LABEL_19;
          }
          id v6 = objc_alloc(MEMORY[0x1E4F28E28]);
          [v2 magnitude];
          uint64_t v4 = objc_msgSend(v6, "initWithDoubleValue:unit:", v5);
          goto LABEL_18;
        default:
LABEL_19:
          char v8 = INSiriLogContextIntents;
          if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_ERROR))
          {
            int v10 = 136315138;
            long long v11 = "INIntentSlotValueTransformFromPowerValue";
            _os_log_error_impl(&dword_18CB2F000, v8, OS_LOG_TYPE_ERROR, "%s _INPBPowerValue must contain a unit. Otherwise ambiguous magnitude for NSMeasurement", (uint8_t *)&v10, 0xCu);
          }
          goto LABEL_21;
      }
    }
    uint64_t v4 = 0;
    uint64_t v5 = 0;
LABEL_18:
    id v7 = v4;
  }
  else
  {
LABEL_21:
    id v7 = 0;
  }

  return v7;
}

_INPBPower *INIntentSlotValueTransformToPower(void *a1)
{
  id v1 = INIntentSlotValueTransformToPowerValue(a1);
  if (v1)
  {
    uint64_t v2 = objc_alloc_init(_INPBPower);
    [(_INPBPower *)v2 addValue:v1];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

_INPBPowerValue *INIntentSlotValueTransformToPowerValue(void *a1)
{
  if (!a1)
  {
    uint64_t v3 = 0;
    goto LABEL_27;
  }
  id v1 = a1;
  uint64_t v2 = [v1 unit];
  uint64_t v3 = objc_alloc_init(_INPBPowerValue);
  [v1 doubleValue];
  double v5 = v4;

  [(_INPBPowerValue *)v3 setMagnitude:v5];
  id v6 = [MEMORY[0x1E4F291F0] terawatts];
  char v7 = [v2 isEqual:v6];

  if (v7)
  {
    uint64_t v8 = 1;
LABEL_25:
    [(_INPBPowerValue *)v3 setUnit:v8];
    goto LABEL_26;
  }
  long long v9 = [MEMORY[0x1E4F291F0] gigawatts];
  char v10 = [v2 isEqual:v9];

  if (v10)
  {
    uint64_t v8 = 2;
    goto LABEL_25;
  }
  long long v11 = [MEMORY[0x1E4F291F0] megawatts];
  char v12 = [v2 isEqual:v11];

  if (v12)
  {
    uint64_t v8 = 3;
    goto LABEL_25;
  }
  char v13 = [MEMORY[0x1E4F291F0] kilowatts];
  char v14 = [v2 isEqual:v13];

  if (v14)
  {
    uint64_t v8 = 4;
    goto LABEL_25;
  }
  int v15 = [MEMORY[0x1E4F291F0] watts];
  char v16 = [v2 isEqual:v15];

  if (v16)
  {
    uint64_t v8 = 5;
    goto LABEL_25;
  }
  char v17 = [MEMORY[0x1E4F291F0] milliwatts];
  char v18 = [v2 isEqual:v17];

  if (v18)
  {
    uint64_t v8 = 6;
    goto LABEL_25;
  }
  uint64_t v19 = [MEMORY[0x1E4F291F0] microwatts];
  char v20 = [v2 isEqual:v19];

  if (v20)
  {
    uint64_t v8 = 7;
    goto LABEL_25;
  }
  unint64_t v21 = [MEMORY[0x1E4F291F0] nanowatts];
  char v22 = [v2 isEqual:v21];

  if (v22)
  {
    uint64_t v8 = 8;
    goto LABEL_25;
  }
  uint64_t v23 = [MEMORY[0x1E4F291F0] picowatts];
  char v24 = [v2 isEqual:v23];

  if (v24)
  {
    uint64_t v8 = 9;
    goto LABEL_25;
  }
  uint64_t v25 = [MEMORY[0x1E4F291F0] femtowatts];
  char v26 = [v2 isEqual:v25];

  if (v26)
  {
    uint64_t v8 = 10;
    goto LABEL_25;
  }
  unsigned int v27 = [MEMORY[0x1E4F291F0] horsepower];
  int v28 = [v2 isEqual:v27];

  if (v28)
  {
    uint64_t v8 = 11;
    goto LABEL_25;
  }
LABEL_26:

LABEL_27:

  return v3;
}

id INIntentSlotValueTransformFromPowerValues(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = INIntentSlotValueTransformFromPowerValue(*(void **)(*((void *)&v11 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  long long v9 = (void *)[v2 copy];

  return v9;
}

id INIntentSlotValueTransformFromPowers(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = INIntentSlotValueTransformFromPower(*(void **)(*((void *)&v11 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  long long v9 = (void *)[v2 copy];

  return v9;
}

id INIntentSlotValueTransformToPowerValues(void *a1)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v11;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v11 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = INIntentSlotValueTransformToPowerValue(*(void **)(*((void *)&v10 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v10);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v5);
  }

  return v2;
}

id INIntentSlotValueTransformToPowers(void *a1)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v11;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v11 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = INIntentSlotValueTransformToPower(*(void **)(*((void *)&v10 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v10);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v5);
  }

  return v2;
}

uint64_t _INPBQueryHealthSampleIntentResponseReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    char v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(_INPBWellnessObjectResultValue);
        if (!PBReaderPlaceMark() || !_INPBWellnessObjectResultValueReadFrom(v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addResultValues:", v17, 0, 0);
        }
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _INPBTransferMoneyIntentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  char v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = objc_alloc_init(_INPBIntentMetadata);
        if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_41;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntentMetadata:", v17, 0, 0);
        goto LABEL_37;
      case 4u:
        char v17 = objc_alloc_init(_INPBFinancialAccountValue);
        if (!PBReaderPlaceMark() || (_INPBFinancialAccountValueReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_41;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setFromAccount:", v17, 0, 0);
        goto LABEL_37;
      case 5u:
        char v17 = objc_alloc_init(_INPBFinancialAccountValue);
        if (!PBReaderPlaceMark() || (_INPBFinancialAccountValueReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_41;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setToAccount:", v17, 0, 0);
        goto LABEL_37;
      case 6u:
        char v17 = objc_alloc_init(_INPBPaymentAmountValue);
        if (!PBReaderPlaceMark() || (_INPBPaymentAmountValueReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_41;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTransactionAmount:", v17, 0, 0);
        goto LABEL_37;
      case 7u:
        char v17 = objc_alloc_init(_INPBDateTimeRange);
        if PBReaderPlaceMark() && (_INPBDateTimeRangeReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setTransactionScheduledDate:", v17, 0, 0);
LABEL_37:

LABEL_38:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_41:

        return 0;
      case 8u:
        PBReaderReadString();
        char v17 = (_INPBIntentMetadata *)objc_claimAutoreleasedReturnValue();
        [a1 setTransactionNote:v17];
        goto LABEL_37;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_38;
    }
  }
}

id INPersonToCSPerson(void *a1)
{
  uint64_t v49 = *MEMORY[0x1E4F143B8];
  id v34 = a1;
  id v1 = [v34 personHandle];
  uint64_t v2 = [v1 value];
  if (![v2 length])
  {
    uint64_t v3 = [v34 customIdentifier];

    uint64_t v2 = (void *)v3;
  }
  if (![v2 length])
  {
    char v18 = 0;
    goto LABEL_41;
  }
  uint64_t v4 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithObjects:", v2, 0);
  long long v35 = 0u;
  long long v36 = 0u;
  long long v37 = 0u;
  long long v38 = 0u;
  uint64_t v5 = [v34 aliases];
  uint64_t v6 = [v5 countByEnumeratingWithState:&v35 objects:v48 count:16];
  if (v6)
  {
    uint64_t v7 = *(void *)v36;
    do
    {
      for (uint64_t i = 0; i != v6; ++i)
      {
        if (*(void *)v36 != v7) {
          objc_enumerationMutation(v5);
        }
        unsigned int v9 = *(void **)(*((void *)&v35 + 1) + 8 * i);
        uint64_t v10 = [v9 type];
        if (v10 == [v1 type])
        {
          uint64_t v11 = [v9 value];
          BOOL v12 = [v11 length] == 0;

          if (!v12)
          {
            char v13 = [v9 value];
            [v4 addObject:v13];
          }
        }
      }
      uint64_t v6 = [v5 countByEnumeratingWithState:&v35 objects:v48 count:16];
    }
    while (v6);
  }

  uint64_t v14 = [v1 type];
  switch(v14)
  {
    case 0:
      getCNContactInstantMessageAddressesKey();
      id v21 = (id)objc_claimAutoreleasedReturnValue();
      goto LABEL_27;
    case 2:
      uint64_t v44 = 0;
      char v45 = &v44;
      uint64_t v46 = 0x2020000000;
      int v15 = (id *)getCNContactPhoneNumbersKeySymbolLoc_ptr;
      uint64_t v47 = getCNContactPhoneNumbersKeySymbolLoc_ptr;
      if (!getCNContactPhoneNumbersKeySymbolLoc_ptr)
      {
        uint64_t v39 = MEMORY[0x1E4F143A8];
        uint64_t v40 = 3221225472;
        uint64_t v41 = __getCNContactPhoneNumbersKeySymbolLoc_block_invoke;
        uint64_t v42 = &unk_1E5520EB8;
        uint64_t v43 = &v44;
        uint64_t v19 = (void *)ContactsLibrary();
        char v20 = dlsym(v19, "CNContactPhoneNumbersKey");
        *(void *)(v43[1] + 24) = v20;
        getCNContactPhoneNumbersKeySymbolLoc_ptr = *(void *)(v43[1] + 24);
        int v15 = (id *)v45[3];
      }
      _Block_object_dispose(&v44, 8);
      if (!v15)
      {
LABEL_44:
        dlerror();
        abort_report_np();
        __break(1u);
      }
      goto LABEL_25;
    case 1:
      uint64_t v44 = 0;
      char v45 = &v44;
      uint64_t v46 = 0x2020000000;
      int v15 = (id *)getCNContactEmailAddressesKeySymbolLoc_ptr;
      uint64_t v47 = getCNContactEmailAddressesKeySymbolLoc_ptr;
      if (!getCNContactEmailAddressesKeySymbolLoc_ptr)
      {
        uint64_t v39 = MEMORY[0x1E4F143A8];
        uint64_t v40 = 3221225472;
        uint64_t v41 = __getCNContactEmailAddressesKeySymbolLoc_block_invoke;
        uint64_t v42 = &unk_1E5520EB8;
        uint64_t v43 = &v44;
        uint64_t v16 = (void *)ContactsLibrary();
        char v17 = dlsym(v16, "CNContactEmailAddressesKey");
        *(void *)(v43[1] + 24) = v17;
        getCNContactEmailAddressesKeySymbolLoc_ptr = *(void *)(v43[1] + 24);
        int v15 = (id *)v45[3];
      }
      _Block_object_dispose(&v44, 8);
      if (!v15) {
        goto LABEL_44;
      }
LABEL_25:
      id v21 = *v15;
LABEL_27:
      char v22 = v21;
      goto LABEL_29;
  }
  char v22 = 0;
LABEL_29:
  if ([v1 type] == 104)
  {
    getCNContactInstantMessageAddressesKey();
    id v23 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    if ([v1 type] != 103)
    {
      unsigned int v27 = v22;
      goto LABEL_38;
    }
    uint64_t v44 = 0;
    char v45 = &v44;
    uint64_t v46 = 0x2020000000;
    char v24 = (id *)getCNContactUrlAddressesKeySymbolLoc_ptr;
    uint64_t v47 = getCNContactUrlAddressesKeySymbolLoc_ptr;
    if (!getCNContactUrlAddressesKeySymbolLoc_ptr)
    {
      uint64_t v39 = MEMORY[0x1E4F143A8];
      uint64_t v40 = 3221225472;
      uint64_t v41 = __getCNContactUrlAddressesKeySymbolLoc_block_invoke;
      uint64_t v42 = &unk_1E5520EB8;
      uint64_t v43 = &v44;
      uint64_t v25 = (void *)ContactsLibrary();
      char v26 = dlsym(v25, "CNContactUrlAddressesKey");
      *(void *)(v43[1] + 24) = v26;
      getCNContactUrlAddressesKeySymbolLoc_ptr = *(void *)(v43[1] + 24);
      char v24 = (id *)v45[3];
    }
    _Block_object_dispose(&v44, 8);
    if (!v24) {
      goto LABEL_44;
    }
    id v23 = *v24;
  }
  unsigned int v27 = v23;

LABEL_38:
  uint64_t v44 = 0;
  char v45 = &v44;
  uint64_t v46 = 0x2050000000;
  int v28 = (void *)getCSPersonClass_softClass;
  uint64_t v47 = getCSPersonClass_softClass;
  if (!getCSPersonClass_softClass)
  {
    uint64_t v39 = MEMORY[0x1E4F143A8];
    uint64_t v40 = 3221225472;
    uint64_t v41 = __getCSPersonClass_block_invoke;
    uint64_t v42 = &unk_1E5520EB8;
    uint64_t v43 = &v44;
    __getCSPersonClass_block_invoke((uint64_t)&v39);
    int v28 = (void *)v45[3];
  }
  uint64_t v29 = v28;
  _Block_object_dispose(&v44, 8);
  id v30 = [v29 alloc];
  char v31 = [v34 displayName];
  char v18 = (void *)[v30 initWithDisplayName:v31 handles:v4 handleIdentifier:v27];

  uint64_t v32 = [v34 contactIdentifier];
  [v18 setContactIdentifier:v32];

LABEL_41:

  return v18;
}

void sub_18CC263E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__getCNContactEmailAddressesKeySymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)ContactsLibrary();
  uint64_t result = dlsym(v2, "CNContactEmailAddressesKey");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCNContactEmailAddressesKeySymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t ContactsLibrary()
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  v3[0] = 0;
  if (!ContactsLibraryCore_frameworkLibrary_19389)
  {
    v3[1] = MEMORY[0x1E4F143A8];
    v3[2] = 3221225472;
    v3[3] = __ContactsLibraryCore_block_invoke_19390;
    void v3[4] = &__block_descriptor_40_e5_v8__0l;
    void v3[5] = v3;
    long long v4 = xmmword_1E5517968;
    uint64_t v5 = 0;
    ContactsLibraryCore_frameworkLibrary_19389 = _sl_dlopen();
    id v1 = (void *)v3[0];
    uint64_t v0 = ContactsLibraryCore_frameworkLibrary_19389;
    if (ContactsLibraryCore_frameworkLibrary_19389)
    {
      if (!v3[0]) {
        return v0;
      }
    }
    else
    {
      id v1 = (void *)abort_report_np();
    }
    free(v1);
    return v0;
  }
  return ContactsLibraryCore_frameworkLibrary_19389;
}

void *__getCNContactPhoneNumbersKeySymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)ContactsLibrary();
  uint64_t result = dlsym(v2, "CNContactPhoneNumbersKey");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCNContactPhoneNumbersKeySymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

id getCNContactInstantMessageAddressesKey()
{
  uint64_t v5 = 0;
  uint64_t v6 = &v5;
  uint64_t v7 = 0x2020000000;
  uint64_t v0 = (void **)getCNContactInstantMessageAddressesKeySymbolLoc_ptr;
  uint64_t v8 = getCNContactInstantMessageAddressesKeySymbolLoc_ptr;
  if (!getCNContactInstantMessageAddressesKeySymbolLoc_ptr)
  {
    id v1 = (void *)ContactsLibrary();
    v6[3] = (uint64_t)dlsym(v1, "CNContactInstantMessageAddressesKey");
    getCNContactInstantMessageAddressesKeySymbolLoc_ptr = v6[3];
    uint64_t v0 = (void **)v6[3];
  }
  _Block_object_dispose(&v5, 8);
  if (!v0)
  {
    dlerror();
    long long v4 = (_Unwind_Exception *)abort_report_np();
    _Block_object_dispose(&v5, 8);
    _Unwind_Resume(v4);
  }
  uint64_t v2 = *v0;

  return v2;
}

void *__getCNContactUrlAddressesKeySymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)ContactsLibrary();
  uint64_t result = dlsym(v2, "CNContactUrlAddressesKey");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCNContactUrlAddressesKeySymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void __getCSPersonClass_block_invoke(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("CSPerson");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getCSPersonClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    abort_report_np();
    CoreSpotlightLibrary_19382();
  }
}

void CoreSpotlightLibrary_19382()
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  v1[0] = 0;
  if (!CoreSpotlightLibraryCore_frameworkLibrary_19385)
  {
    v1[1] = MEMORY[0x1E4F143A8];
    v1[2] = 3221225472;
    v1[3] = __CoreSpotlightLibraryCore_block_invoke_19386;
    v1[4] = &__block_descriptor_40_e5_v8__0l;
    v1[5] = v1;
    long long v2 = xmmword_1E5517980;
    uint64_t v3 = 0;
    CoreSpotlightLibraryCore_frameworkLibrary_19385 = _sl_dlopen();
    uint64_t v0 = (void *)v1[0];
    if (CoreSpotlightLibraryCore_frameworkLibrary_19385)
    {
      if (!v1[0]) {
        return;
      }
    }
    else
    {
      uint64_t v0 = (void *)abort_report_np();
    }
    free(v0);
  }
}

uint64_t __CoreSpotlightLibraryCore_block_invoke_19386()
{
  uint64_t result = _sl_dlopen();
  CoreSpotlightLibraryCore_frameworkLibrary_19385 = result;
  return result;
}

void *__getCNContactInstantMessageAddressesKeySymbolLoc_block_invoke(uint64_t a1)
{
  long long v2 = (void *)ContactsLibrary();
  uint64_t result = dlsym(v2, "CNContactInstantMessageAddressesKey");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCNContactInstantMessageAddressesKeySymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __ContactsLibraryCore_block_invoke_19390()
{
  uint64_t result = _sl_dlopen();
  ContactsLibraryCore_frameworkLibrary_19389 = result;
  return result;
}

id INCSLocalizedString(void *a1, void *a2)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  uint64_t v5 = [MEMORY[0x1E4F28B50] bundleForClass:objc_opt_class()];
  uint64_t v6 = objc_opt_new();
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  uint64_t v7 = objc_msgSend(v5, "localizations", 0);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v21 objects:v30 count:16];
  if (v8)
  {
    uint64_t v9 = *(void *)v22;
    do
    {
      for (uint64_t i = 0; i != v8; ++i)
      {
        if (*(void *)v22 != v9) {
          objc_enumerationMutation(v7);
        }
        uint64_t v11 = *(void *)(*((void *)&v21 + 1) + 8 * i);
        CFBundleGetBundleWithIdentifier((CFStringRef)[v5 bundleIdentifier]);
        BOOL v12 = (void *)CFBundleCopyLocalizedStringForLocalization();
        if ([v4 length]) {
          [v6 setObject:v12 forKeyedSubscript:v11];
        }
      }
      uint64_t v8 = [v7 countByEnumeratingWithState:&v21 objects:v30 count:16];
    }
    while (v8);
  }

  char v13 = [MEMORY[0x1E4F1CA20] currentLocale];
  uint64_t v14 = [v13 languageCode];

  if ([v4 length])
  {
    int v15 = [v6 objectForKey:v14];
    BOOL v16 = v15 == 0;

    if (v16) {
      [v6 setObject:v4 forKeyedSubscript:v14];
    }
  }
  if ([v6 count])
  {
    uint64_t v26 = 0;
    unsigned int v27 = &v26;
    uint64_t v28 = 0x2050000000;
    char v17 = (void *)getCSLocalizedStringClass_softClass;
    uint64_t v29 = getCSLocalizedStringClass_softClass;
    if (!getCSLocalizedStringClass_softClass)
    {
      v25[0] = MEMORY[0x1E4F143A8];
      v25[1] = 3221225472;
      v25[2] = __getCSLocalizedStringClass_block_invoke;
      v25[3] = &unk_1E5520EB8;
      v25[4] = &v26;
      __getCSLocalizedStringClass_block_invoke((uint64_t)v25);
      char v17 = (void *)v27[3];
    }
    char v18 = v17;
    _Block_object_dispose(&v26, 8);
    uint64_t v19 = (void *)[[v18 alloc] initWithLocalizedStrings:v6];
  }
  else
  {
    uint64_t v19 = 0;
  }

  return v19;
}

void sub_18CC26CA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getCSLocalizedStringClass_block_invoke(uint64_t a1)
{
  CoreSpotlightLibrary_19382();
  Class result = objc_getClass("CSLocalizedString");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getCSLocalizedStringClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    id v3 = (void *)abort_report_np();
    return (Class)INPersonHandleLabelForCNLabeledValueWithLanguages(v3, v4);
  }
  return result;
}

id INPersonHandleLabelForCNLabeledValueWithLanguages(void *a1, void *a2)
{
  v75[10] = *MEMORY[0x1E4F143B8];
  id v47 = a1;
  id v48 = a2;
  __int16 v53 = [v47 label];
  if (v53)
  {
    uint64_t v67 = 0;
    uint64_t v68 = &v67;
    uint64_t v69 = 0x2020000000;
    id v3 = (id *)getCNLabelHomeSymbolLoc_ptr;
    uint64_t v70 = getCNLabelHomeSymbolLoc_ptr;
    if (!getCNLabelHomeSymbolLoc_ptr)
    {
      uint64_t v62 = MEMORY[0x1E4F143A8];
      uint64_t v63 = 3221225472;
      unint64_t v64 = __getCNLabelHomeSymbolLoc_block_invoke;
      char v65 = &unk_1E5520EB8;
      unsigned int v66 = &v67;
      id v4 = (void *)ContactsLibrary_19401();
      v68[3] = (uint64_t)dlsym(v4, "CNLabelHome");
      getCNLabelHomeSymbolLoc_ptr = *(void *)(v66[1] + 24);
      id v3 = (id *)v68[3];
    }
    _Block_object_dispose(&v67, 8);
    if (!v3) {
      goto LABEL_59;
    }
    id v5 = *v3;
    v73[0] = v5;
    v75[0] = @"com.apple.intents.PersonHandleLabel.Home";
    uint64_t v67 = 0;
    uint64_t v68 = &v67;
    uint64_t v69 = 0x2020000000;
    uint64_t v6 = (id *)getCNLabelWorkSymbolLoc_ptr;
    uint64_t v70 = getCNLabelWorkSymbolLoc_ptr;
    if (!getCNLabelWorkSymbolLoc_ptr)
    {
      uint64_t v62 = MEMORY[0x1E4F143A8];
      uint64_t v63 = 3221225472;
      unint64_t v64 = __getCNLabelWorkSymbolLoc_block_invoke;
      char v65 = &unk_1E5520EB8;
      unsigned int v66 = &v67;
      uint64_t v7 = (void *)ContactsLibrary_19401();
      v68[3] = (uint64_t)dlsym(v7, "CNLabelWork");
      getCNLabelWorkSymbolLoc_ptr = *(void *)(v66[1] + 24);
      uint64_t v6 = (id *)v68[3];
    }
    _Block_object_dispose(&v67, 8);
    if (!v6) {
      goto LABEL_59;
    }
    id v8 = *v6;
    v73[1] = v8;
    v75[1] = @"com.apple.intents.PersonHandleLabel.Work";
    uint64_t v67 = 0;
    uint64_t v68 = &v67;
    uint64_t v69 = 0x2020000000;
    uint64_t v9 = (id *)getCNLabelOtherSymbolLoc_ptr;
    uint64_t v70 = getCNLabelOtherSymbolLoc_ptr;
    if (!getCNLabelOtherSymbolLoc_ptr)
    {
      uint64_t v62 = MEMORY[0x1E4F143A8];
      uint64_t v63 = 3221225472;
      unint64_t v64 = __getCNLabelOtherSymbolLoc_block_invoke;
      char v65 = &unk_1E5520EB8;
      unsigned int v66 = &v67;
      uint64_t v10 = (void *)ContactsLibrary_19401();
      v68[3] = (uint64_t)dlsym(v10, "CNLabelOther");
      getCNLabelOtherSymbolLoc_ptr = *(void *)(v66[1] + 24);
      uint64_t v9 = (id *)v68[3];
    }
    _Block_object_dispose(&v67, 8);
    if (!v9) {
      goto LABEL_59;
    }
    id v11 = *v9;
    v73[2] = v11;
    v75[2] = @"com.apple.intents.PersonHandleLabel.Other";
    uint64_t v67 = 0;
    uint64_t v68 = &v67;
    uint64_t v69 = 0x2020000000;
    BOOL v12 = (id *)getCNLabelSchoolSymbolLoc_ptr;
    uint64_t v70 = getCNLabelSchoolSymbolLoc_ptr;
    if (!getCNLabelSchoolSymbolLoc_ptr)
    {
      uint64_t v62 = MEMORY[0x1E4F143A8];
      uint64_t v63 = 3221225472;
      unint64_t v64 = __getCNLabelSchoolSymbolLoc_block_invoke;
      char v65 = &unk_1E5520EB8;
      unsigned int v66 = &v67;
      char v13 = (void *)ContactsLibrary_19401();
      v68[3] = (uint64_t)dlsym(v13, "CNLabelSchool");
      getCNLabelSchoolSymbolLoc_ptr = *(void *)(v66[1] + 24);
      BOOL v12 = (id *)v68[3];
    }
    _Block_object_dispose(&v67, 8);
    if (!v12) {
      goto LABEL_59;
    }
    id v14 = *v12;
    v73[3] = v14;
    v75[3] = @"com.apple.intents.PersonHandleLabel.School";
    uint64_t v67 = 0;
    uint64_t v68 = &v67;
    uint64_t v69 = 0x2020000000;
    int v15 = (id *)getCNLabelPhoneNumberiPhoneSymbolLoc_ptr;
    uint64_t v70 = getCNLabelPhoneNumberiPhoneSymbolLoc_ptr;
    if (!getCNLabelPhoneNumberiPhoneSymbolLoc_ptr)
    {
      uint64_t v62 = MEMORY[0x1E4F143A8];
      uint64_t v63 = 3221225472;
      unint64_t v64 = __getCNLabelPhoneNumberiPhoneSymbolLoc_block_invoke;
      char v65 = &unk_1E5520EB8;
      unsigned int v66 = &v67;
      BOOL v16 = (void *)ContactsLibrary_19401();
      v68[3] = (uint64_t)dlsym(v16, "CNLabelPhoneNumberiPhone");
      getCNLabelPhoneNumberiPhoneSymbolLoc_ptr = *(void *)(v66[1] + 24);
      int v15 = (id *)v68[3];
    }
    _Block_object_dispose(&v67, 8);
    if (!v15) {
      goto LABEL_59;
    }
    id v17 = *v15;
    v73[4] = v17;
    v75[4] = @"com.apple.intents.PersonHandleLabel.iPhone";
    uint64_t v67 = 0;
    uint64_t v68 = &v67;
    uint64_t v69 = 0x2020000000;
    char v18 = (id *)getCNLabelPhoneNumberMobileSymbolLoc_ptr;
    uint64_t v70 = getCNLabelPhoneNumberMobileSymbolLoc_ptr;
    if (!getCNLabelPhoneNumberMobileSymbolLoc_ptr)
    {
      uint64_t v62 = MEMORY[0x1E4F143A8];
      uint64_t v63 = 3221225472;
      unint64_t v64 = __getCNLabelPhoneNumberMobileSymbolLoc_block_invoke;
      char v65 = &unk_1E5520EB8;
      unsigned int v66 = &v67;
      uint64_t v19 = (void *)ContactsLibrary_19401();
      v68[3] = (uint64_t)dlsym(v19, "CNLabelPhoneNumberMobile");
      getCNLabelPhoneNumberMobileSymbolLoc_ptr = *(void *)(v66[1] + 24);
      char v18 = (id *)v68[3];
    }
    _Block_object_dispose(&v67, 8);
    if (!v18) {
      goto LABEL_59;
    }
    id v20 = *v18;
    v73[5] = v20;
    v75[5] = @"com.apple.intents.PersonHandleLabel.Mobile";
    uint64_t v67 = 0;
    uint64_t v68 = &v67;
    uint64_t v69 = 0x2020000000;
    long long v21 = (id *)getCNLabelPhoneNumberMainSymbolLoc_ptr;
    uint64_t v70 = getCNLabelPhoneNumberMainSymbolLoc_ptr;
    if (!getCNLabelPhoneNumberMainSymbolLoc_ptr)
    {
      uint64_t v62 = MEMORY[0x1E4F143A8];
      uint64_t v63 = 3221225472;
      unint64_t v64 = __getCNLabelPhoneNumberMainSymbolLoc_block_invoke;
      char v65 = &unk_1E5520EB8;
      unsigned int v66 = &v67;
      long long v22 = (void *)ContactsLibrary_19401();
      v68[3] = (uint64_t)dlsym(v22, "CNLabelPhoneNumberMain");
      getCNLabelPhoneNumberMainSymbolLoc_ptr = *(void *)(v66[1] + 24);
      long long v21 = (id *)v68[3];
    }
    _Block_object_dispose(&v67, 8);
    if (!v21) {
      goto LABEL_59;
    }
    id v50 = v8;
    id v23 = *v21;
    v73[6] = v23;
    v75[6] = @"com.apple.intents.PersonHandleLabel.Main";
    uint64_t v67 = 0;
    uint64_t v68 = &v67;
    uint64_t v69 = 0x2020000000;
    long long v24 = (id *)getCNLabelPhoneNumberHomeFaxSymbolLoc_ptr;
    uint64_t v70 = getCNLabelPhoneNumberHomeFaxSymbolLoc_ptr;
    if (!getCNLabelPhoneNumberHomeFaxSymbolLoc_ptr)
    {
      uint64_t v62 = MEMORY[0x1E4F143A8];
      uint64_t v63 = 3221225472;
      unint64_t v64 = __getCNLabelPhoneNumberHomeFaxSymbolLoc_block_invoke;
      char v65 = &unk_1E5520EB8;
      unsigned int v66 = &v67;
      uint64_t v25 = (void *)ContactsLibrary_19401();
      v68[3] = (uint64_t)dlsym(v25, "CNLabelPhoneNumberHomeFax");
      getCNLabelPhoneNumberHomeFaxSymbolLoc_ptr = *(void *)(v66[1] + 24);
      long long v24 = (id *)v68[3];
    }
    _Block_object_dispose(&v67, 8);
    if (!v24) {
      goto LABEL_59;
    }
    id v26 = *v24;
    v73[7] = v26;
    v75[7] = @"com.apple.intents.PersonHandleLabel.Home_Fax";
    uint64_t v67 = 0;
    uint64_t v68 = &v67;
    uint64_t v69 = 0x2020000000;
    unsigned int v27 = (id *)getCNLabelPhoneNumberWorkFaxSymbolLoc_ptr;
    uint64_t v70 = getCNLabelPhoneNumberWorkFaxSymbolLoc_ptr;
    if (!getCNLabelPhoneNumberWorkFaxSymbolLoc_ptr)
    {
      uint64_t v62 = MEMORY[0x1E4F143A8];
      uint64_t v63 = 3221225472;
      unint64_t v64 = __getCNLabelPhoneNumberWorkFaxSymbolLoc_block_invoke;
      char v65 = &unk_1E5520EB8;
      unsigned int v66 = &v67;
      uint64_t v28 = (void *)ContactsLibrary_19401();
      v68[3] = (uint64_t)dlsym(v28, "CNLabelPhoneNumberWorkFax");
      getCNLabelPhoneNumberWorkFaxSymbolLoc_ptr = *(void *)(v66[1] + 24);
      unsigned int v27 = (id *)v68[3];
    }
    _Block_object_dispose(&v67, 8);
    if (!v27) {
      goto LABEL_59;
    }
    id v29 = *v27;
    v73[8] = v29;
    v75[8] = @"com.apple.intents.PersonHandleLabel.Work_Fax";
    uint64_t v67 = 0;
    uint64_t v68 = &v67;
    uint64_t v69 = 0x2020000000;
    id v30 = (id *)getCNLabelPhoneNumberPagerSymbolLoc_ptr;
    uint64_t v70 = getCNLabelPhoneNumberPagerSymbolLoc_ptr;
    if (!getCNLabelPhoneNumberPagerSymbolLoc_ptr)
    {
      uint64_t v62 = MEMORY[0x1E4F143A8];
      uint64_t v63 = 3221225472;
      unint64_t v64 = __getCNLabelPhoneNumberPagerSymbolLoc_block_invoke;
      char v65 = &unk_1E5520EB8;
      unsigned int v66 = &v67;
      uint64_t v31 = (void *)ContactsLibrary_19401();
      v68[3] = (uint64_t)dlsym(v31, "CNLabelPhoneNumberPager");
      getCNLabelPhoneNumberPagerSymbolLoc_ptr = *(void *)(v66[1] + 24);
      id v30 = (id *)v68[3];
    }
    _Block_object_dispose(&v67, 8);
    if (!v30)
    {
LABEL_59:
      dlerror();
      abort_report_np();
      __break(1u);
    }
    uint64_t v32 = v5;
    id v74 = *v30;
    v75[9] = @"com.apple.intents.PersonHandleLabel.Pager";
    uint64_t v33 = (void *)MEMORY[0x1E4F1C9E8];
    id v34 = v74;
    char v52 = [v33 dictionaryWithObjects:v75 forKeys:v73 count:10];

    long long v35 = [v52 objectForKey:v53];
    if (!v35)
    {
      long long v60 = 0u;
      long long v61 = 0u;
      long long v58 = 0u;
      long long v59 = 0u;
      id obj = v48;
      uint64_t v36 = [obj countByEnumeratingWithState:&v58 objects:v72 count:16];
      if (v36)
      {
        uint64_t v51 = *(void *)v59;
        do
        {
          for (uint64_t i = 0; i != v36; ++i)
          {
            if (*(void *)v59 != v51) {
              objc_enumerationMutation(obj);
            }
            long long v38 = *(void **)(*((void *)&v58 + 1) + 8 * i);
            uint64_t v39 = INLocalizedStringForContactLabelAndLanguage(v53, v38);
            long long v56 = 0u;
            long long v57 = 0u;
            long long v54 = 0u;
            long long v55 = 0u;
            id v40 = v52;
            uint64_t v41 = [v40 countByEnumeratingWithState:&v54 objects:v71 count:16];
            if (v41)
            {
              uint64_t v42 = *(void *)v55;
LABEL_40:
              uint64_t v43 = 0;
              while (1)
              {
                if (*(void *)v55 != v42) {
                  objc_enumerationMutation(v40);
                }
                uint64_t v44 = *(void **)(*((void *)&v54 + 1) + 8 * v43);
                char v45 = INLocalizedStringForContactLabelAndLanguage(v44, v38);
                if (![v39 caseInsensitiveCompare:v45]) {
                  break;
                }

                if (v41 == ++v43)
                {
                  uint64_t v41 = [v40 countByEnumeratingWithState:&v54 objects:v71 count:16];
                  if (v41) {
                    goto LABEL_40;
                  }
                  goto LABEL_46;
                }
              }
              long long v35 = [v40 objectForKey:v44];

              if (v35) {
                goto LABEL_52;
              }
            }
            else
            {
LABEL_46:
            }
          }
          uint64_t v36 = [obj countByEnumeratingWithState:&v58 objects:v72 count:16];
        }
        while (v36);
      }

      if ([obj count])
      {
        id obj = [obj firstObject];
        long long v35 = INLocalizedStringForContactLabelAndLanguage(v53, obj);
LABEL_52:
      }
      else
      {
        long long v35 = 0;
      }
    }
  }
  else
  {
    long long v35 = 0;
  }

  return v35;
}

void sub_18CC2793C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
}

void *__getCNLabelHomeSymbolLoc_block_invoke(uint64_t a1)
{
  long long v2 = (void *)ContactsLibrary_19401();
  Class result = dlsym(v2, "CNLabelHome");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCNLabelHomeSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t ContactsLibrary_19401()
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  v3[0] = 0;
  if (!ContactsLibraryCore_frameworkLibrary_19415)
  {
    v3[1] = MEMORY[0x1E4F143A8];
    v3[2] = 3221225472;
    v3[3] = __ContactsLibraryCore_block_invoke_19416;
    void v3[4] = &__block_descriptor_40_e5_v8__0l;
    void v3[5] = v3;
    long long v4 = xmmword_1E5517998;
    uint64_t v5 = 0;
    ContactsLibraryCore_frameworkLibrary_19415 = _sl_dlopen();
    id v1 = (void *)v3[0];
    uint64_t v0 = ContactsLibraryCore_frameworkLibrary_19415;
    if (ContactsLibraryCore_frameworkLibrary_19415)
    {
      if (!v3[0]) {
        return v0;
      }
    }
    else
    {
      id v1 = (void *)abort_report_np();
    }
    free(v1);
    return v0;
  }
  return ContactsLibraryCore_frameworkLibrary_19415;
}

void *__getCNLabelWorkSymbolLoc_block_invoke(uint64_t a1)
{
  long long v2 = (void *)ContactsLibrary_19401();
  Class result = dlsym(v2, "CNLabelWork");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCNLabelWorkSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getCNLabelOtherSymbolLoc_block_invoke(uint64_t a1)
{
  long long v2 = (void *)ContactsLibrary_19401();
  Class result = dlsym(v2, "CNLabelOther");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCNLabelOtherSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getCNLabelSchoolSymbolLoc_block_invoke(uint64_t a1)
{
  long long v2 = (void *)ContactsLibrary_19401();
  Class result = dlsym(v2, "CNLabelSchool");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCNLabelSchoolSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getCNLabelPhoneNumberiPhoneSymbolLoc_block_invoke(uint64_t a1)
{
  long long v2 = (void *)ContactsLibrary_19401();
  Class result = dlsym(v2, "CNLabelPhoneNumberiPhone");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCNLabelPhoneNumberiPhoneSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getCNLabelPhoneNumberMobileSymbolLoc_block_invoke(uint64_t a1)
{
  long long v2 = (void *)ContactsLibrary_19401();
  Class result = dlsym(v2, "CNLabelPhoneNumberMobile");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCNLabelPhoneNumberMobileSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getCNLabelPhoneNumberMainSymbolLoc_block_invoke(uint64_t a1)
{
  long long v2 = (void *)ContactsLibrary_19401();
  Class result = dlsym(v2, "CNLabelPhoneNumberMain");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCNLabelPhoneNumberMainSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getCNLabelPhoneNumberHomeFaxSymbolLoc_block_invoke(uint64_t a1)
{
  long long v2 = (void *)ContactsLibrary_19401();
  Class result = dlsym(v2, "CNLabelPhoneNumberHomeFax");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCNLabelPhoneNumberHomeFaxSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getCNLabelPhoneNumberWorkFaxSymbolLoc_block_invoke(uint64_t a1)
{
  long long v2 = (void *)ContactsLibrary_19401();
  Class result = dlsym(v2, "CNLabelPhoneNumberWorkFax");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCNLabelPhoneNumberWorkFaxSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getCNLabelPhoneNumberPagerSymbolLoc_block_invoke(uint64_t a1)
{
  long long v2 = (void *)ContactsLibrary_19401();
  Class result = dlsym(v2, "CNLabelPhoneNumberPager");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCNLabelPhoneNumberPagerSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

id INLocalizedStringForContactLabelAndLanguage(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  CNLabeledValueClass = (objc_class *)getCNLabeledValueClass();
  uint64_t v6 = NSStringFromClass(CNLabeledValueClass);
  uint64_t v7 = [MEMORY[0x1E4F28B50] bundleForClass:getCNLabeledValueClass()];
  uint64_t v8 = [v7 _cfBundle];

  uint64_t v9 = +[INStringLocalizer localizerForLanguage:v3];

  uint64_t v10 = INLocalizedStringFromBundle(v4, 0, v6, v9, v8, 0);

  if (v10) {
    id v11 = v10;
  }
  else {
    id v11 = v4;
  }
  id v12 = v11;

  return v12;
}

id getCNLabeledValueClass()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)getCNLabeledValueClass_softClass;
  uint64_t v7 = getCNLabeledValueClass_softClass;
  if (!getCNLabeledValueClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getCNLabeledValueClass_block_invoke;
    v3[3] = &unk_1E5520EB8;
    void v3[4] = &v4;
    __getCNLabeledValueClass_block_invoke((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_18CC27F5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getCNLabeledValueClass_block_invoke(uint64_t a1)
{
  ContactsLibrary_19401();
  Class result = objc_getClass("CNLabeledValue");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getCNLabeledValueClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    abort_report_np();
    return (Class)__ContactsLibraryCore_block_invoke_19416();
  }
  return result;
}

uint64_t __ContactsLibraryCore_block_invoke_19416()
{
  uint64_t result = _sl_dlopen();
  ContactsLibraryCore_frameworkLibrary_19415 = result;
  return result;
}

id INPersonHandleLabelForCNLabeledValue(void *a1)
{
  id v1 = a1;
  long long v2 = INPersonHandleLabelUtilsLanguageCodes();
  id v3 = INPersonHandleLabelForCNLabeledValueWithLanguages(v1, v2);

  return v3;
}

id INPersonHandleLabelUtilsLanguageCodes()
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  id v0 = objc_alloc_init(MEMORY[0x1E4F1CA70]);
  id v1 = +[INPreferences sharedPreferences];
  long long v2 = [v1 _cachedSiriLanguageCode];

  id v3 = INSiriLogContextIntents;
  if (v2)
  {
    if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_DEBUG))
    {
      int v12 = 136315138;
      char v13 = "INPersonHandleLabelUtilsLanguageCodes";
      _os_log_debug_impl(&dword_18CB2F000, v3, OS_LOG_TYPE_DEBUG, "%s _cachedSiriLanguageCode is set", (uint8_t *)&v12, 0xCu);
    }
    uint64_t v4 = +[INPreferences sharedPreferences];
    uint64_t v5 = [v4 _cachedSiriLanguageCode];

    if ([v5 length])
    {
      [v0 addObject:v5];
    }
    else
    {
      uint64_t v6 = INSiriLogContextIntents;
      if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_ERROR))
      {
        int v12 = 136315138;
        char v13 = "INPersonHandleLabelUtilsLanguageCodes";
        _os_log_error_impl(&dword_18CB2F000, v6, OS_LOG_TYPE_ERROR, "%s siriLanguageCode is nil", (uint8_t *)&v12, 0xCu);
      }
    }
  }
  else if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_ERROR))
  {
    int v12 = 136315138;
    char v13 = "INPersonHandleLabelUtilsLanguageCodes";
    _os_log_error_impl(&dword_18CB2F000, v3, OS_LOG_TYPE_ERROR, "%s _cachedSiriLanguageCode is not set, using deviceLocale only", (uint8_t *)&v12, 0xCu);
  }
  uint64_t v7 = (void *)_CFLocaleCopyPreferred();
  uint64_t v8 = [v7 languageIdentifier];
  if ([v8 length])
  {
    [v0 addObject:v8];
  }
  else
  {
    uint64_t v9 = INSiriLogContextIntents;
    if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_ERROR))
    {
      int v12 = 136315138;
      char v13 = "INPersonHandleLabelUtilsLanguageCodes";
      _os_log_error_impl(&dword_18CB2F000, v9, OS_LOG_TYPE_ERROR, "%s deviceLocale is nil", (uint8_t *)&v12, 0xCu);
    }
  }
  uint64_t v10 = [v0 array];

  return v10;
}

uint64_t INPersonHandleLabelEqualsCNLabeledValueWithLanguages(void *a1, void *a2, void *a3)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  uint64_t v8 = INPersonHandleLabelForCNLabeledValueWithLanguages(v6, v7);
  if ([v5 caseInsensitiveCompare:v8])
  {
    uint64_t v9 = [v6 label];
    long long v18 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    long long v21 = 0u;
    id v10 = v7;
    uint64_t v11 = [v10 countByEnumeratingWithState:&v18 objects:v22 count:16];
    if (v11)
    {
      id v17 = v8;
      uint64_t v12 = *(void *)v19;
      while (2)
      {
        for (uint64_t i = 0; i != v11; ++i)
        {
          if (*(void *)v19 != v12) {
            objc_enumerationMutation(v10);
          }
          uint64_t v14 = INLocalizedStringForContactLabelAndLanguage(v9, *(void **)(*((void *)&v18 + 1) + 8 * i));
          uint64_t v15 = [v5 caseInsensitiveCompare:v14];

          if (!v15)
          {
            uint64_t v11 = 1;
            goto LABEL_12;
          }
        }
        uint64_t v11 = [v10 countByEnumeratingWithState:&v18 objects:v22 count:16];
        if (v11) {
          continue;
        }
        break;
      }
LABEL_12:
      uint64_t v8 = v17;
    }
  }
  else
  {
    uint64_t v11 = 1;
  }

  return v11;
}

uint64_t INPersonHandleLabelEqualsCNLabeledValue(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  id v5 = INPersonHandleLabelUtilsLanguageCodes();
  uint64_t v6 = INPersonHandleLabelEqualsCNLabeledValueWithLanguages(v4, v3, v5);

  return v6;
}

uint64_t _INPBFilePropertyValueReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        id v17 = objc_alloc_init(_INPBContact);
        if (!PBReaderPlaceMark() || (_INPBContactReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_48;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPerson:", v17, 0, 0);
        goto LABEL_40;
      case 2u:
        id v17 = objc_alloc_init(_INPBDateTimeRange);
        if (!PBReaderPlaceMark() || (_INPBDateTimeRangeReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_48;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setDateTime:", v17, 0, 0);
        goto LABEL_40;
      case 3u:
        id v17 = objc_alloc_init(_INPBString);
        if (!PBReaderPlaceMark() || (_INPBStringReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_48;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setValue:", v17, 0, 0);
        goto LABEL_40;
      case 4u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_45;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v21;
        }
LABEL_45:
        [a1 setFileType:v25];
        goto LABEL_46;
      case 5u:
        id v17 = objc_alloc_init(_INPBLong);
        if PBReaderPlaceMark() && (_INPBLongReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setQuantity:", v17, 0, 0);
LABEL_40:

LABEL_46:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_48:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_46;
    }
  }
}

BOOL _INPBPlayAudioMessageIntentResponseReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v6 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
      return v7 == 0;
    }
    if (*(unsigned char *)(a2 + *v5))
    {
      int v7 = 1;
      return v7 == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    uint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v6) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        LOBYTE(v10) = 0;
        int v7 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      LOBYTE(v10) = 0;
    }
LABEL_14:
    if (v7) {
      BOOL v15 = 1;
    }
    else {
      BOOL v15 = (v10 & 7) == 4;
    }
    if (v15) {
      return v7 == 0;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      return 0;
    }
  }
}

__CFString *INRequestRideIntentResponseCodeGetName(unint64_t a1)
{
  if (a1 > 0xA) {
    return 0;
  }
  else {
    return off_1E5517A08[a1];
  }
}

uint64_t _INPBCallMetricsValueReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          uint64_t v16 = *v5;
          int v17 = *(unsigned __int8 *)(a2 + v16);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      uint64_t v16 = *v5;
      int v17 = *(unsigned __int8 *)(a2 + v16);
      if (*(unsigned char *)(a2 + v16)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v17 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v22 = *v3;
        unint64_t v23 = *(void *)(a2 + v22);
        if (v23 <= 0xFFFFFFFFFFFFFFF7 && v23 + 8 <= *(void *)(a2 + *v4))
        {
          double v24 = *(double *)(*(void *)(a2 + *v7) + v23);
          *(void *)(a2 + v22) = v23 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          double v24 = 0.0;
        }
        [a1 setTimeToEstablish:v24];
      }
      else if ((v10 >> 3) == 2)
      {
        uint64_t v19 = *v3;
        unint64_t v20 = *(void *)(a2 + v19);
        if (v20 <= 0xFFFFFFFFFFFFFFF7 && v20 + 8 <= *(void *)(a2 + *v4))
        {
          double v21 = *(double *)(*(void *)(a2 + *v7) + v20);
          *(void *)(a2 + v19) = v20 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          double v21 = 0.0;
        }
        [a1 setCallDuration:v21];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _INPBUncompressFileIntentResponseReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        unint64_t v23 = objc_alloc_init(_INPBString);
        if (!PBReaderPlaceMark() || (_INPBStringReadFrom(v23, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEntityName:", v23, 0, 0);
      }
      else if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_33;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_35;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_35:
        [a1 setSuccess:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _INPBPaymentRecordReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = objc_alloc_init(_INPBContact);
        if (!PBReaderPlaceMark() || (_INPBContactReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_55;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPayee:", v17, 0, 0);
        goto LABEL_46;
      case 3u:
        char v17 = objc_alloc_init(_INPBContact);
        if (!PBReaderPlaceMark() || (_INPBContactReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_55;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPayer:", v17, 0, 0);
        goto LABEL_46;
      case 5u:
        char v17 = objc_alloc_init(_INPBCurrencyAmount);
        if (!PBReaderPlaceMark() || (_INPBCurrencyAmountReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_55;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCurrencyAmount:", v17, 0, 0);
        goto LABEL_46;
      case 7u:
        char v17 = objc_alloc_init(_INPBString);
        if (!PBReaderPlaceMark() || (_INPBStringReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_55;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setNote:", v17, 0, 0);
        goto LABEL_46;
      case 8u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_53;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v21;
        }
LABEL_53:
        [a1 setStatus:v25];
        goto LABEL_47;
      case 9u:
        char v17 = objc_alloc_init(_INPBPaymentMethodValue);
        if (!PBReaderPlaceMark() || (_INPBPaymentMethodValueReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_55;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPaymentMethod:", v17, 0, 0);
        goto LABEL_46;
      case 0xAu:
        char v17 = objc_alloc_init(_INPBCurrencyAmount);
        if PBReaderPlaceMark() && (_INPBCurrencyAmountReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setFeeAmount:", v17, 0, 0);
LABEL_46:

LABEL_47:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_55:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_47;
    }
  }
}

void sub_18CC2F7B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53)
{
}

uint64_t __Block_byref_object_copy__20837(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__20838(uint64_t a1)
{
}

__CFString *INSearchCallHistoryIntentResponseCodeGetName(unint64_t a1)
{
  if (a1 > 7) {
    return 0;
  }
  else {
    return off_1E5517B58[a1];
  }
}

INNote *INIntentSlotValueTransformFromNote(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    char v13 = [INNote alloc];
    uint64_t v16 = [v1 title];
    long long v2 = INIntentSlotValueTransformFromDataString(v16);
    int v15 = [v1 contents];
    id v3 = INIntentSlotValueTransformFromNoteContents(v15);
    BOOL v14 = [v1 groupName];
    id v4 = INIntentSlotValueTransformFromDataString(v14);
    id v5 = [v1 createdDateTime];
    uint64_t v6 = INIntentSlotValueTransformFromDateTime(v5);
    int v7 = [v1 modifiedDateTime];
    char v8 = INIntentSlotValueTransformFromDateTime(v7);
    unsigned int v9 = [v1 identifier];
    unint64_t v10 = [v1 accountIdentifier];

    uint64_t v11 = [(INNote *)v13 initWithTitle:v2 contents:v3 groupName:v4 createdDateComponents:v6 modifiedDateComponents:v8 identifier:v9 accountIdentifier:v10];
  }
  else
  {
    uint64_t v11 = 0;
  }

  return v11;
}

_INPBNote *INIntentSlotValueTransformToNote(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    long long v2 = objc_alloc_init(_INPBNote);
    id v3 = [v1 title];
    id v4 = INIntentSlotValueTransformToDataString(v3);
    [(_INPBNote *)v2 setTitle:v4];

    id v5 = [v1 contents];
    uint64_t v6 = INIntentSlotValueTransformToNoteContents(v5);
    [(_INPBNote *)v2 setContents:v6];

    int v7 = [v1 groupName];
    char v8 = INIntentSlotValueTransformToDataString(v7);
    [(_INPBNote *)v2 setGroupName:v8];

    unsigned int v9 = [v1 createdDateComponents];
    unint64_t v10 = INIntentSlotValueTransformToDateTime(v9);
    [(_INPBNote *)v2 setCreatedDateTime:v10];

    uint64_t v11 = [v1 modifiedDateComponents];
    unint64_t v12 = INIntentSlotValueTransformToDateTime(v11);
    [(_INPBNote *)v2 setModifiedDateTime:v12];

    char v13 = [v1 identifier];
    [(_INPBNote *)v2 setIdentifier:v13];

    BOOL v14 = [v1 accountIdentifier];

    [(_INPBNote *)v2 setAccountIdentifier:v14];
  }
  else
  {
    long long v2 = 0;
  }

  return v2;
}

id INIntentSlotValueTransformFromNotes(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    long long v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          char v8 = INIntentSlotValueTransformFromNote(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    unsigned int v9 = (void *)[v2 copy];
  }
  else
  {
    unsigned int v9 = 0;
  }

  return v9;
}

id INIntentSlotValueTransformToNotes(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    long long v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          char v8 = INIntentSlotValueTransformToNote(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    unsigned int v9 = (void *)[v2 copy];
  }
  else
  {
    unsigned int v9 = 0;
  }

  return v9;
}

id INIntentSlotValueRedactedNoteFromNote(void *a1)
{
  id v1 = a1;

  return v1;
}

uint64_t _INPBOpenFileIntentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = objc_alloc_init(_INPBIntentMetadata);
        if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_65;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntentMetadata:", v17, 0, 0);
        goto LABEL_51;
      case 2u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_58;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v21;
        }
LABEL_58:
        objc_msgSend(a1, "setEntityType:", v25, v33, v34);
        goto LABEL_52;
      case 3u:
        char v17 = objc_alloc_init(_INPBString);
        if (!PBReaderPlaceMark() || (_INPBStringReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_65;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEntityName:", v17, 0, 0);
        goto LABEL_51;
      case 4u:
        char v17 = objc_alloc_init(_INPBString);
        if (!PBReaderPlaceMark() || (_INPBStringReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_65;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAppId:", v17, 0, 0);
        goto LABEL_51;
      case 5u:
        char v17 = objc_alloc_init(_INPBFileProperty);
        uint64_t v33 = 0;
        uint64_t v34 = 0;
        if (!PBReaderPlaceMark() || !_INPBFilePropertyReadFrom(v17, a2)) {
          goto LABEL_65;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addProperties:", v17, 0, 0);
        }
        goto LABEL_51;
      case 6u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                uint64_t v32 = 0;
                goto LABEL_63;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v32 = 0;
        }
        else {
          uint64_t v32 = v28;
        }
LABEL_63:
        objc_msgSend(a1, "setScope:", v32, v33, v34);
        goto LABEL_52;
      case 7u:
        char v17 = objc_alloc_init(_INPBString);
        if PBReaderPlaceMark() && (_INPBStringReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setScopeEntityName:", v17, 0, 0);
LABEL_51:

LABEL_52:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_65:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_52;
    }
  }
}

uint64_t _INPBHomeAttributeValueReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        uint64_t v16 = *v5;
        int v17 = *(unsigned __int8 *)(a2 + v16);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    uint64_t v16 = *v5;
    int v17 = *(unsigned __int8 *)(a2 + v16);
    if (*(unsigned char *)(a2 + v16)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v17 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (1)
        {
          uint64_t v22 = *v3;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v4)) {
            break;
          }
          char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
          *(void *)(a2 + v22) = v24;
          v21 |= (unint64_t)(v25 & 0x7F) << v19;
          if ((v25 & 0x80) == 0) {
            goto LABEL_65;
          }
          v19 += 7;
          BOOL v15 = v20++ >= 9;
          if (v15)
          {
            uint64_t v26 = 0;
            goto LABEL_68;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_65:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v26 = 0;
        }
        else {
          uint64_t v26 = v21;
        }
LABEL_68:
        [a1 setValueType:v26];
        goto LABEL_90;
      case 2u:
        char v28 = 0;
        unsigned int v29 = 0;
        uint64_t v30 = 0;
        while (2)
        {
          uint64_t v31 = *v3;
          uint64_t v32 = *(void *)(a2 + v31);
          unint64_t v33 = v32 + 1;
          if (v32 == -1 || v33 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v32);
            *(void *)(a2 + v31) = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if (v34 < 0)
            {
              v28 += 7;
              BOOL v15 = v29++ >= 9;
              if (v15)
              {
                uint64_t v30 = 0;
                goto LABEL_72;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v30 = 0;
        }
LABEL_72:
        [a1 setBooleanValue:v30 != 0];
        goto LABEL_90;
      case 3u:
        uint64_t v35 = *v3;
        unint64_t v36 = *(void *)(a2 + v35);
        if (v36 <= 0xFFFFFFFFFFFFFFF7 && v36 + 8 <= *(void *)(a2 + *v4))
        {
          double v37 = *(double *)(*(void *)(a2 + *v7) + v36);
          *(void *)(a2 + v35) = v36 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          double v37 = 0.0;
        }
        [a1 setDoubleValue:v37];
        goto LABEL_90;
      case 4u:
        PBReaderReadString();
        long long v38 = (_INPBHomeAttributeRange *)objc_claimAutoreleasedReturnValue();
        [a1 setStringValue:v38];
        goto LABEL_63;
      case 5u:
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        while (2)
        {
          uint64_t v42 = *v3;
          uint64_t v43 = *(void *)(a2 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v45 = *(unsigned char *)(*(void *)(a2 + *v7) + v43);
            *(void *)(a2 + v42) = v44;
            v41 |= (unint64_t)(v45 & 0x7F) << v39;
            if (v45 < 0)
            {
              v39 += 7;
              BOOL v15 = v40++ >= 9;
              if (v15)
              {
                uint64_t v46 = 0;
                goto LABEL_77;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v46 = 0;
        }
        else {
          uint64_t v46 = v41;
        }
LABEL_77:
        [a1 setIntegerValue:v46];
        goto LABEL_90;
      case 6u:
        char v47 = 0;
        unsigned int v48 = 0;
        uint64_t v49 = 0;
        while (2)
        {
          uint64_t v50 = *v3;
          uint64_t v51 = *(void *)(a2 + v50);
          unint64_t v52 = v51 + 1;
          if (v51 == -1 || v52 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v53 = *(unsigned char *)(*(void *)(a2 + *v7) + v51);
            *(void *)(a2 + v50) = v52;
            v49 |= (unint64_t)(v53 & 0x7F) << v47;
            if (v53 < 0)
            {
              v47 += 7;
              BOOL v15 = v48++ >= 9;
              if (v15)
              {
                uint64_t v54 = 0;
                goto LABEL_82;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v54 = 0;
        }
        else {
          uint64_t v54 = v49;
        }
LABEL_82:
        [a1 setLimitValue:v54];
        goto LABEL_90;
      case 7u:
        char v55 = 0;
        unsigned int v56 = 0;
        uint64_t v57 = 0;
        while (2)
        {
          uint64_t v58 = *v3;
          uint64_t v59 = *(void *)(a2 + v58);
          unint64_t v60 = v59 + 1;
          if (v59 == -1 || v60 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v61 = *(unsigned char *)(*(void *)(a2 + *v7) + v59);
            *(void *)(a2 + v5_Block_object_dispose(&STACK[0x260], 8) = v60;
            v57 |= (unint64_t)(v61 & 0x7F) << v55;
            if (v61 < 0)
            {
              v55 += 7;
              BOOL v15 = v56++ >= 9;
              if (v15)
              {
                uint64_t v62 = 0;
                goto LABEL_87;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v62 = 0;
        }
        else {
          uint64_t v62 = v57;
        }
LABEL_87:
        [a1 setUnit:v62];
        goto LABEL_90;
      case 8u:
        long long v38 = objc_alloc_init(_INPBHomeAttributeRange);
        if PBReaderPlaceMark() && (_INPBHomeAttributeRangeReadFrom(v38, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setRangeValue:", v38, 0, 0);
LABEL_63:

LABEL_90:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_90;
    }
  }
}

BOOL _INPBAppBundleInfoReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        int v17 = objc_alloc_init(_INPBIntentSupport);
        if (!PBReaderPlaceMark() || !_INPBIntentSupportReadFrom(v17, a2)) {
          goto LABEL_43;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addIntentSupport:", v17, 0, 0);
        }
        goto LABEL_39;
      case 2u:
        int v17 = objc_alloc_init(_INPBLocalizedProject);
        if (!PBReaderPlaceMark() || !_INPBLocalizedProjectReadFrom(v17, a2)) {
          goto LABEL_43;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addLocalizedProjects:", v17, 0, 0);
        }
        goto LABEL_39;
      case 3u:
        int v17 = objc_alloc_init(_INPBAppId);
        if (!PBReaderPlaceMark() || (_INPBAppIdReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_43;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAppId:", v17, 0, 0);
        goto LABEL_39;
      case 4u:
        int v17 = objc_alloc_init(_INPBBuildId);
        if (!PBReaderPlaceMark() || !_INPBBuildIdReadFrom(v17, a2)) {
          goto LABEL_43;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setBuildId:", v17, 0, 0);
        goto LABEL_39;
      case 5u:
        int v17 = objc_alloc_init(_INPBPlatformSupport);
        if (PBReaderPlaceMark() && _INPBPlatformSupportReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          if (v17) {
            objc_msgSend(a1, "addSupportedPlatforms:", v17, 0, 0);
          }
LABEL_39:

LABEL_40:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_43:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_40;
    }
  }
}

BOOL _INPBDeleteHealthSampleIntentResponseReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v6 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
      return v7 == 0;
    }
    if (*(unsigned char *)(a2 + *v5))
    {
      int v7 = 1;
      return v7 == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    uint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v6) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        LOBYTE(v10) = 0;
        int v7 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      LOBYTE(v10) = 0;
    }
LABEL_14:
    if (v7) {
      BOOL v15 = 1;
    }
    else {
      BOOL v15 = (v10 & 7) == 4;
    }
    if (v15) {
      return v7 == 0;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      return 0;
    }
  }
}

id INIntentSlotValueTransformFromWellnessValue(void *a1)
{
  id v1 = a1;
  long long v2 = v1;
  if (v1)
  {
    if ([v1 hasPbDoubleValue])
    {
      id v3 = [v2 pbDoubleValue];
      uint64_t v4 = INIntentSlotValueTransformFromDouble(v3);
LABEL_6:
      uint64_t v5 = (void *)v4;

      goto LABEL_8;
    }
    if ([v2 hasOrdinalValue])
    {
      id v3 = [v2 ordinalValue];
      uint64_t v4 = INIntentSlotValueTransformFromInteger(v3);
      goto LABEL_6;
    }
  }
  uint64_t v5 = 0;
LABEL_8:

  return v5;
}

_INPBWellnessValue *INIntentSlotValueTransformToWellnessValue(void *a1)
{
  CFNumberRef v1 = a1;
  if (v1)
  {
    long long v2 = objc_alloc_init(_INPBWellnessValue);
    CFNumberType Type = CFNumberGetType(v1);
    if ((unint64_t)Type <= kCFNumberDoubleType && ((1 << Type) & 0x3060) != 0)
    {
      uint64_t v4 = INIntentSlotValueTransformToDouble(v1);
      [(_INPBWellnessValue *)v2 setPbDoubleValue:v4];
    }
    else
    {
      uint64_t v4 = INIntentSlotValueTransformToInteger(v1);
      [(_INPBWellnessValue *)v2 setOrdinalValue:v4];
    }
  }
  else
  {
    long long v2 = 0;
  }

  return v2;
}

id INIntentSlotValueTransformFromWellnessValues(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    long long v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          char v8 = INIntentSlotValueTransformFromWellnessValue(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    unsigned int v9 = (void *)[v2 copy];
  }
  else
  {
    unsigned int v9 = 0;
  }

  return v9;
}

id INIntentSlotValueTransformToWellnessValues(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    long long v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          char v8 = INIntentSlotValueTransformToWellnessValue(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    unsigned int v9 = (void *)[v2 copy];
  }
  else
  {
    unsigned int v9 = 0;
  }

  return v9;
}

uint64_t _INPBFindEventsIntentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        int v17 = objc_alloc_init(_INPBIntentMetadata);
        if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_51;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntentMetadata:", v17, 0, 0);
        goto LABEL_35;
      case 2u:
        PBReaderReadString();
        int v17 = (_INPBIntentMetadata *)objc_claimAutoreleasedReturnValue();
        [a1 setSearchQuery:v17];
        goto LABEL_35;
      case 3u:
        int v17 = objc_alloc_init(_INPBDateTimeRangeValue);
        if (!PBReaderPlaceMark() || (_INPBDateTimeRangeValueReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_51;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setDateTimeRange:", v17, 0, 0);
        goto LABEL_35;
      case 4u:
        int v17 = objc_alloc_init(_INPBContact);
        uint64_t v26 = 0;
        uint64_t v27 = 0;
        if (!PBReaderPlaceMark() || !_INPBContactReadFrom(v17, a2)) {
          goto LABEL_51;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addParticipants:", v17, 0, 0);
        }
        goto LABEL_35;
      case 5u:
        int v17 = objc_alloc_init(_INPBLocation);
        if PBReaderPlaceMark() && (_INPBLocationReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setLocation:", v17, 0, 0);
LABEL_35:

LABEL_36:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_51:

        return 0;
      case 6u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_49;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v21;
        }
LABEL_49:
        objc_msgSend(a1, "setRequestedEventAttribute:", v25, v26, v27);
        goto LABEL_36;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_36;
    }
  }
}

uint64_t _INPBControlHomeIntentResponseReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        int v17 = objc_alloc_init(_INPBHomeEntityResponse);
        if (!PBReaderPlaceMark() || !_INPBHomeEntityResponseReadFrom(v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addEntityResponses:", v17, 0, 0);
        }
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t INActionsAndApplicationRecordMatchesRequirementsFromDescriptor(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a4;
  id v9 = a1;
  unsigned int v10 = INApplicationRecordMatchesRequirementsFromDescriptor(a3, v8, 0);
  uint64_t v11 = [v8 intentIdentifier];
  char v12 = [v9 containsObject:v11];

  if (v12)
  {
    int v13 = 0;
  }
  else
  {
    BOOL v14 = [v8 intentIdentifier];
    int v13 = [v7 containsObject:v14] ^ 1;
  }
  int v15 = [v8 intentIdentifier];
  BOOL v16 = v15 == 0;

  return (v16 | ~v13) & v10;
}

uint64_t INApplicationRecordMatchesRequirementsFromDescriptor(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  id v8 = (void *)MEMORY[0x192F98250]();
  id v9 = [v6 teamIdentifier];
  if (v9)
  {
  }
  else
  {
    unsigned int v10 = [v6 supportedIntents];
    uint64_t v11 = [v10 count];

    if (!v11)
    {
LABEL_13:
      uint64_t v16 = 1;
      goto LABEL_25;
    }
  }
  uint64_t v12 = [v6 teamIdentifier];
  if (!v12) {
    goto LABEL_6;
  }
  int v13 = (void *)v12;
  BOOL v14 = [v6 teamIdentifier];
  int v15 = [v5 teamIdentifier];
  uint64_t v16 = [v14 isEqualToString:v15];

  if (v16)
  {
LABEL_6:
    int v17 = [v6 teamIdentifier];
    int v18 = [v17 isEqualToString:@"0000000000"];

    char v19 = [v6 bundleIdentifier];
    if ([v19 hasPrefix:@"com.apple."])
    {
    }
    else
    {
      unsigned int v20 = [v6 extensionBundleIdentifier];
      int v21 = [v20 hasPrefix:@"com.apple."];

      if (((v18 | v21) & 1) == 0)
      {
        uint64_t v22 = [v5 teamIdentifier];
        char v23 = [v22 isEqualToString:@"0000000000"];

        char v24 = [v5 bundleIdentifier];
        char v25 = [v24 hasPrefix:@"com.apple."];

        uint64_t v16 = 0;
        if (v23 & 1) != 0 || (v25) {
          goto LABEL_25;
        }
      }
    }
    if (v7 && ([v7 skipSupportedIntentsCheck] & 1) != 0) {
      goto LABEL_13;
    }
    uint64_t v26 = objc_msgSend(v5, "in_supportedIntents");
    uint64_t v27 = [v5 bundleIdentifier];
    char v28 = +[INSystemAppMapper supportedIntentsOverridesForBundleIdentifier:v27];

    if ([v28 count])
    {
      unsigned int v29 = (void *)[v26 mutableCopy];
      [v29 unionSet:v28];

      uint64_t v26 = v29;
    }
    uint64_t v30 = [v5 bundleIdentifier];
    uint64_t v31 = +[INAppResolver supportedIntentsOverridesForThirdPartyBundleIdentifier:v30];

    if ([v31 count])
    {
      uint64_t v32 = (void *)[v26 mutableCopy];
      [v32 unionSet:v31];

      uint64_t v26 = v32;
    }
    if (v7 && [v7 includeUserActivityTypes])
    {
      unint64_t v33 = (void *)[v26 mutableCopy];
      char v34 = objc_msgSend(v5, "if_userActivityTypes");
      [v33 addObjectsFromArray:v34];

      uint64_t v26 = v33;
    }
    uint64_t v35 = [v6 supportedIntents];
    if ([v35 count])
    {
      unint64_t v36 = [v6 supportedIntents];
      uint64_t v16 = [v36 intersectsSet:v26];
    }
    else
    {
      uint64_t v16 = 1;
    }
  }
LABEL_25:

  return v16;
}

uint64_t INApplicationRecordMatchesRequirementsFromUserActivityDescriptor(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a1;
  uint64_t v7 = INApplicationRecordMatchesRequirementsFromDescriptor(v6, v5, a3);
  id v8 = objc_msgSend(v6, "if_userActivityTypes");

  id v9 = (void *)[v8 mutableCopy];
  [v9 addObject:*MEMORY[0x1E4F28AC0]];
  uint64_t v10 = [v5 userActivityType];
  if (v10)
  {
    uint64_t v11 = (void *)v10;
    uint64_t v12 = [v5 userActivityType];
    int v13 = [v9 containsObject:v12];

    uint64_t v7 = v13 & v7;
  }

  return v7;
}

uint64_t INApplicationRecordMatchesRequirementsFromIntentDescriptor(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  uint64_t v8 = INApplicationRecordMatchesRequirementsFromDescriptor(v5, v6, v7);
  if (!v7 || ([v7 skipSupportedIntentsCheck] & 1) == 0)
  {
    id v9 = objc_msgSend(v5, "in_supportedIntents");
    uint64_t v10 = [v5 bundleIdentifier];
    uint64_t v11 = +[INSystemAppMapper supportedIntentsOverridesForBundleIdentifier:v10];

    if ([v11 count])
    {
      uint64_t v12 = (void *)[v9 mutableCopy];
      [v12 unionSet:v11];

      id v9 = v12;
    }
    int v13 = [v5 bundleIdentifier];
    BOOL v14 = +[INAppResolver supportedIntentsOverridesForThirdPartyBundleIdentifier:v13];

    if ([v14 count])
    {
      int v15 = (void *)[v9 mutableCopy];
      [v15 unionSet:v14];

      id v9 = v15;
    }
    if (v7 && [v7 includeUserActivityTypes])
    {
      uint64_t v16 = (void *)[v9 mutableCopy];
      int v17 = objc_msgSend(v5, "if_userActivityTypes");
      [v16 addObjectsFromArray:v17];

      id v9 = v16;
    }
    uint64_t v18 = [v6 intentClassName];
    if (v18)
    {
      char v19 = (void *)v18;
      unsigned int v20 = [v6 intentClassName];
      int v21 = [v9 containsObject:v20];

      uint64_t v8 = v21 & v8;
    }
  }
  return v8;
}

id INIntentSlotValueTransformFromDateTime(void *a1)
{
  id v1 = a1;
  long long v2 = v1;
  if (!v1)
  {
    id v4 = 0;
    goto LABEL_61;
  }
  if ([v1 hasDate])
  {
    id v3 = [v2 date];
    if ([v3 hasYear])
    {
      id v4 = objc_alloc_init(MEMORY[0x1E4F1C9D8]);
      objc_msgSend(v4, "setYear:", objc_msgSend(v3, "year"));
      if (([v3 hasMonth] & 1) == 0) {
        goto LABEL_12;
      }
      if (v4)
      {
LABEL_11:
        objc_msgSend(v4, "setMonth:", objc_msgSend(v3, "month"));
LABEL_12:
        if (([v3 hasDayOfMonth] & 1) == 0) {
          goto LABEL_19;
        }
        if (v4) {
          goto LABEL_17;
        }
        goto LABEL_16;
      }
    }
    else if (([v3 hasMonth] & 1) == 0)
    {
      if (([v3 hasDayOfMonth] & 1) == 0)
      {
        id v4 = 0;
LABEL_19:
        if ([v3 hasDayOfWeek] && objc_msgSend(v3, "dayOfWeek"))
        {
          if (!v4) {
            id v4 = objc_alloc_init(MEMORY[0x1E4F1C9D8]);
          }
          if ([v3 dayOfWeek] == 7) {
            uint64_t v5 = 1;
          }
          else {
            uint64_t v5 = (int)[v3 dayOfWeek] + 1;
          }
          [v4 setWeekday:v5];
        }

        goto LABEL_28;
      }
LABEL_16:
      id v4 = objc_alloc_init(MEMORY[0x1E4F1C9D8]);
LABEL_17:
      objc_msgSend(v4, "setDay:", objc_msgSend(v3, "dayOfMonth"));
      goto LABEL_19;
    }
    id v4 = objc_alloc_init(MEMORY[0x1E4F1C9D8]);
    goto LABEL_11;
  }
  id v4 = 0;
LABEL_28:
  if ([v2 hasTime])
  {
    id v6 = [v2 time];
    if ([v6 hasHourOfDay])
    {
      if (!v4) {
        id v4 = objc_alloc_init(MEMORY[0x1E4F1C9D8]);
      }
      objc_msgSend(v4, "setHour:", objc_msgSend(v6, "hourOfDay"));
    }
    if ([v6 hasMinuteOfHour])
    {
      if (!v4) {
        id v4 = objc_alloc_init(MEMORY[0x1E4F1C9D8]);
      }
      objc_msgSend(v4, "setMinute:", objc_msgSend(v6, "minuteOfHour"));
    }
    if ([v6 hasSecondOfMinute])
    {
      if (!v4) {
        id v4 = objc_alloc_init(MEMORY[0x1E4F1C9D8]);
      }
      objc_msgSend(v4, "setSecond:", objc_msgSend(v6, "secondOfMinute"));
    }
    if ([v6 hasMillisOfSecond])
    {
      if (!v4) {
        id v4 = objc_alloc_init(MEMORY[0x1E4F1C9D8]);
      }
      objc_msgSend(v4, "setNanosecond:", 1000000 * objc_msgSend(v6, "millisOfSecond"));
    }
  }
  if ([v2 hasCalendarSystem])
  {
    unsigned int v7 = [v2 calendarSystem] - 1;
    if (v7 <= 0xB && ((0xDF7u >> v7) & 1) != 0)
    {
      id v8 = **((id **)&unk_1E5517D08 + v7);
      if (v8)
      {
        id v9 = v8;
        uint64_t v10 = [MEMORY[0x1E4F1C9A8] calendarWithIdentifier:v8];
        if (v10)
        {
          if (!v4) {
            id v4 = objc_alloc_init(MEMORY[0x1E4F1C9D8]);
          }
          [v4 setCalendar:v10];
        }
      }
    }
  }
  if ([v2 hasTimeZoneID])
  {
    uint64_t v11 = (void *)MEMORY[0x1E4F1CAF0];
    uint64_t v12 = [v2 timeZoneID];
    int v13 = [v11 timeZoneWithName:v12];

    if (v13)
    {
      if (!v4) {
        id v4 = objc_alloc_init(MEMORY[0x1E4F1C9D8]);
      }
      [v4 setTimeZone:v13];
    }
  }
LABEL_61:

  return v4;
}

_INPBDateTime *INIntentSlotValueTransformToDateTime(void *a1)
{
  id v1 = a1;
  long long v2 = v1;
  if (!v1)
  {
    id v4 = 0;
    goto LABEL_63;
  }
  if ([v1 year] == 0x7FFFFFFFFFFFFFFFLL)
  {
    if ([v2 month] == 0x7FFFFFFFFFFFFFFFLL)
    {
      if ([v2 day] == 0x7FFFFFFFFFFFFFFFLL)
      {
        if ([v2 weekday] == 0x7FFFFFFFFFFFFFFFLL)
        {
          id v3 = 0;
          goto LABEL_25;
        }
LABEL_18:
        id v3 = objc_alloc_init(_INPBLocalDate);
        goto LABEL_19;
      }
LABEL_14:
      id v3 = objc_alloc_init(_INPBLocalDate);
      goto LABEL_15;
    }
LABEL_10:
    id v3 = objc_alloc_init(_INPBLocalDate);
    goto LABEL_11;
  }
  id v3 = objc_alloc_init(_INPBLocalDate);
  -[_INPBLocalDate setYear:](v3, "setYear:", [v2 year]);
  if ([v2 month] == 0x7FFFFFFFFFFFFFFFLL) {
    goto LABEL_12;
  }
  if (!v3) {
    goto LABEL_10;
  }
LABEL_11:
  -[_INPBLocalDate setMonth:](v3, "setMonth:", [v2 month]);
LABEL_12:
  if ([v2 day] == 0x7FFFFFFFFFFFFFFFLL) {
    goto LABEL_16;
  }
  if (!v3) {
    goto LABEL_14;
  }
LABEL_15:
  -[_INPBLocalDate setDayOfMonth:](v3, "setDayOfMonth:", [v2 day]);
LABEL_16:
  if ([v2 weekday] == 0x7FFFFFFFFFFFFFFFLL) {
    goto LABEL_23;
  }
  if (!v3) {
    goto LABEL_18;
  }
LABEL_19:
  if ([v2 weekday] == 1) {
    uint64_t v5 = 7;
  }
  else {
    uint64_t v5 = [v2 weekday] - 1;
  }
  [(_INPBLocalDate *)v3 setDayOfWeek:v5];
LABEL_23:
  if (v3)
  {
    id v4 = objc_alloc_init(_INPBDateTime);
    [(_INPBDateTime *)v4 setDate:v3];
    goto LABEL_26;
  }
LABEL_25:
  id v4 = 0;
LABEL_26:
  if ([v2 hour] == 0x7FFFFFFFFFFFFFFFLL)
  {
    if ([v2 minute] == 0x7FFFFFFFFFFFFFFFLL)
    {
      if ([v2 second] == 0x7FFFFFFFFFFFFFFFLL)
      {
        if ([v2 nanosecond] == 0x7FFFFFFFFFFFFFFFLL) {
          goto LABEL_47;
        }
LABEL_41:
        id v6 = objc_alloc_init(_INPBLocalTime);
        goto LABEL_42;
      }
LABEL_37:
      id v6 = objc_alloc_init(_INPBLocalTime);
      goto LABEL_38;
    }
LABEL_33:
    id v6 = objc_alloc_init(_INPBLocalTime);
    goto LABEL_34;
  }
  id v6 = objc_alloc_init(_INPBLocalTime);
  -[_INPBLocalTime setHourOfDay:](v6, "setHourOfDay:", [v2 hour]);
  if ([v2 minute] == 0x7FFFFFFFFFFFFFFFLL) {
    goto LABEL_35;
  }
  if (!v6) {
    goto LABEL_33;
  }
LABEL_34:
  -[_INPBLocalTime setMinuteOfHour:](v6, "setMinuteOfHour:", [v2 minute]);
LABEL_35:
  if ([v2 second] == 0x7FFFFFFFFFFFFFFFLL) {
    goto LABEL_39;
  }
  if (!v6) {
    goto LABEL_37;
  }
LABEL_38:
  -[_INPBLocalTime setSecondOfMinute:](v6, "setSecondOfMinute:", [v2 second]);
LABEL_39:
  if ([v2 nanosecond] == 0x7FFFFFFFFFFFFFFFLL) {
    goto LABEL_43;
  }
  if (!v6) {
    goto LABEL_41;
  }
LABEL_42:
  -[_INPBLocalTime setMillisOfSecond:](v6, "setMillisOfSecond:", [v2 nanosecond] / 0xF4240uLL);
LABEL_43:
  if (v6)
  {
    if (!v4) {
      id v4 = objc_alloc_init(_INPBDateTime);
    }
    [(_INPBDateTime *)v4 setTime:v6];
  }
LABEL_47:
  unsigned int v7 = [v2 timeZone];
  if (v7)
  {
    if (!v4) {
      id v4 = objc_alloc_init(_INPBDateTime);
    }
    id v8 = [v7 name];
    [(_INPBDateTime *)v4 setTimeZoneID:v8];
  }
  id v9 = [v2 calendar];
  uint64_t v10 = v9;
  if (!v9) {
    goto LABEL_62;
  }
  uint64_t v11 = [v9 calendarIdentifier];
  if ([v11 isEqualToString:*MEMORY[0x1E4F1C318]])
  {
    uint64_t v12 = 8;
LABEL_58:
    if (!v4) {
      id v4 = objc_alloc_init(_INPBDateTime);
    }
    [(_INPBDateTime *)v4 setCalendarSystem:v12];
    goto LABEL_61;
  }
  if ([v11 isEqualToString:*MEMORY[0x1E4F1C2E8]])
  {
    uint64_t v12 = 1;
    goto LABEL_58;
  }
  if ([v11 isEqualToString:*MEMORY[0x1E4F1C2F0]])
  {
    uint64_t v12 = 2;
    goto LABEL_58;
  }
  if (([v11 isEqualToString:*MEMORY[0x1E4F1C2F8]] & 1) == 0
    && ([v11 isEqualToString:*MEMORY[0x1E4F1C308]] & 1) == 0
    && ([v11 isEqualToString:*MEMORY[0x1E4F1C300]] & 1) == 0)
  {
    if ([v11 isEqualToString:*MEMORY[0x1E4F1C320]])
    {
      uint64_t v12 = 3;
      goto LABEL_58;
    }
    if (([v11 isEqualToString:*MEMORY[0x1E4F1C328]] & 1) == 0)
    {
      if ([v11 isEqualToString:*MEMORY[0x1E4F1C330]])
      {
        uint64_t v12 = 5;
        goto LABEL_58;
      }
      if ([v11 isEqualToString:*MEMORY[0x1E4F1C338]])
      {
        uint64_t v12 = 7;
        goto LABEL_58;
      }
      if (([v11 isEqualToString:*MEMORY[0x1E4F1C340]] & 1) == 0)
      {
        if ([v11 isEqualToString:*MEMORY[0x1E4F1C358]])
        {
          uint64_t v12 = 9;
          goto LABEL_58;
        }
        if ([v11 isEqualToString:*MEMORY[0x1E4F1C360]])
        {
          uint64_t v12 = 11;
          goto LABEL_58;
        }
        if ([v11 isEqualToString:*MEMORY[0x1E4F1C368]])
        {
          uint64_t v12 = 12;
          goto LABEL_58;
        }
        if (([v11 isEqualToString:*MEMORY[0x1E4F1C348]] & 1) == 0
          && [v11 isEqualToString:*MEMORY[0x1E4F1C350]])
        {
          uint64_t v12 = 6;
          goto LABEL_58;
        }
      }
    }
  }
LABEL_61:

LABEL_62:
LABEL_63:

  return v4;
}

id INIntentSlotValueTransformFromDateTimes(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  long long v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        id v8 = INIntentSlotValueTransformFromDateTime(*(void **)(*((void *)&v11 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  id v9 = (void *)[v2 copy];

  return v9;
}

id INIntentSlotValueTransformToDateTimes(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  long long v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        id v8 = INIntentSlotValueTransformToDateTime(*(void **)(*((void *)&v11 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  id v9 = (void *)[v2 copy];

  return v9;
}

BOOL _INPBIntentTypePhrasesReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        int v17 = objc_alloc_init(_INPBIntentType);
        if (!PBReaderPlaceMark() || (_INPBIntentTypeReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntentType:", v17, 0, 0);
        goto LABEL_25;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_27:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    PBReaderReadString();
    int v17 = (_INPBIntentType *)objc_claimAutoreleasedReturnValue();
    if (v17) {
      [a1 addIntentVocabularyExamples:v17];
    }
LABEL_25:

    goto LABEL_27;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

__CFString *INSetAudioSourceInCarIntentResponseCodeGetName(unint64_t a1)
{
  if (a1 > 5) {
    return 0;
  }
  else {
    return off_1E5517D68[a1];
  }
}

uint64_t _INPBShareFileIntentResponseReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_48;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_50;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_48:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_50:
        [a1 setConfirm:v19 != 0];
        goto LABEL_60;
      case 2u:
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v26 = 0;
        while (2)
        {
          uint64_t v27 = *v3;
          unint64_t v28 = *(void *)(a2 + v27);
          if (v28 == -1 || v28 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
            *(void *)(a2 + v27) = v28 + 1;
            v26 |= (unint64_t)(v29 & 0x7F) << v24;
            if (v29 < 0)
            {
              v24 += 7;
              BOOL v14 = v25++ >= 9;
              if (v14)
              {
                uint64_t v26 = 0;
                goto LABEL_54;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v26 = 0;
        }
LABEL_54:
        [a1 setSuccess:v26 != 0];
        goto LABEL_60;
      case 3u:
        char v30 = 0;
        unsigned int v31 = 0;
        uint64_t v32 = 0;
        while (2)
        {
          uint64_t v33 = *v3;
          unint64_t v34 = *(void *)(a2 + v33);
          if (v34 == -1 || v34 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v35 = *(unsigned char *)(*(void *)(a2 + *v7) + v34);
            *(void *)(a2 + v33) = v34 + 1;
            v32 |= (unint64_t)(v35 & 0x7F) << v30;
            if (v35 < 0)
            {
              v30 += 7;
              BOOL v14 = v31++ >= 9;
              if (v14)
              {
                uint64_t v36 = 0;
                goto LABEL_59;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v36 = 0;
        }
        else {
          uint64_t v36 = v32;
        }
LABEL_59:
        objc_msgSend(a1, "setShareMode:", v36, v38, v39);
        goto LABEL_60;
      case 4u:
        double v37 = objc_alloc_init(_INPBShareDestination);
        uint64_t v38 = 0;
        uint64_t v39 = 0;
        if (PBReaderPlaceMark() && _INPBShareDestinationReadFrom(v37, a2))
        {
          PBReaderRecallMark();
          if (v37) {
            objc_msgSend(a1, "addRecipients:", v37, 0, 0);
          }

LABEL_60:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_60;
    }
  }
}

uint64_t _INPBOpenFileIntentResponseReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_40;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_42;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_40:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_42:
        [a1 setSuccess:v19 != 0];
        goto LABEL_43;
      case 2u:
        char v24 = objc_alloc_init(_INPBString);
        if (!PBReaderPlaceMark() || !_INPBStringReadFrom(v24, a2)) {
          goto LABEL_45;
        }
        PBReaderRecallMark();
        if (v24) {
          objc_msgSend(a1, "addEntities:", v24, 0, 0);
        }
        goto LABEL_38;
      case 3u:
        char v24 = objc_alloc_init(_INPBInteger);
        if (!PBReaderPlaceMark() || (_INPBIntegerReadFrom(v24, a2) & 1) == 0) {
          goto LABEL_45;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setNumResults:", v24, 0, 0);
        goto LABEL_38;
      case 4u:
        char v24 = objc_alloc_init(_INPBString);
        if PBReaderPlaceMark() && (_INPBStringReadFrom(v24, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setQuery:", v24, 0, 0);
LABEL_38:

LABEL_43:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_45:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_43;
    }
  }
}

BOOL _INPBStartWorkoutIntentResponseReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v6 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
      return v7 == 0;
    }
    if (*(unsigned char *)(a2 + *v5))
    {
      int v7 = 1;
      return v7 == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    uint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v6) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        LOBYTE(v10) = 0;
        int v7 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      LOBYTE(v10) = 0;
    }
LABEL_14:
    if (v7) {
      BOOL v15 = 1;
    }
    else {
      BOOL v15 = (v10 & 7) == 4;
    }
    if (v15) {
      return v7 == 0;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      return 0;
    }
  }
}

INRestaurantReservation *INIntentSlotValueTransformFromRestaurantReservation(INRestaurantReservation *a1)
{
  if (a1)
  {
    long long v2 = a1;
    id v3 = [(INRestaurantReservation *)v2 reservation];
    uint64_t v4 = [INRestaurantReservation alloc];
    unsigned int v25 = [v3 itemReference];
    uint64_t v26 = INIntentSlotValueTransformFromDataString(v25);
    uint64_t v5 = [v3 reservationNumber];
    char v24 = [v3 bookingTime];
    char v22 = INIntentSlotValueTransformFromTimestamp(v24);
    int v6 = [v3 hasReservationStatus];
    uint64_t v7 = [v3 reservationStatus] - 2;
    if (v7 <= 3) {
      char v8 = (void *)(v7 + 1);
    }
    else {
      char v8 = 0;
    }
    if (!v6) {
      char v8 = 0;
    }
    id v19 = v8;
    char v17 = [v3 reservationHolderName];
    char v23 = [v3 actions];
    uint64_t v16 = INIntentSlotValueTransformFromReservationActions(v23);
    unint64_t v21 = [v3 url];
    BOOL v15 = INIntentSlotValueTransformFromURLValue(v21);
    unsigned int v18 = [(INRestaurantReservation *)v2 reservationDuration];
    unsigned int v9 = INIntentSlotValueTransformFromDateTimeRange(v18);
    uint64_t v10 = [(INRestaurantReservation *)v2 partySize];
    uint64_t v11 = INIntentSlotValueTransformFromInteger(v10);
    unint64_t v12 = [(INRestaurantReservation *)v2 restaurantLocation];

    char v13 = INIntentSlotValueTransformFromLocation(v12);
    uint64_t v20 = [(INRestaurantReservation *)v4 initWithItemReference:v26 reservationNumber:v5 bookingTime:v22 reservationStatus:v19 reservationHolderName:v17 actions:v16 URL:v15 reservationDuration:v9 partySize:v11 restaurantLocation:v13];

    a1 = v20;
    uint64_t v1 = vars8;
  }
  return a1;
}

_INPBRestaurantReservation *INIntentSlotValueTransformToRestaurantReservation(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    long long v2 = objc_alloc_init(_INPBReservation);
    id v3 = [v1 itemReference];
    uint64_t v4 = INIntentSlotValueTransformToDataString(v3);
    [(_INPBReservation *)v2 setItemReference:v4];

    uint64_t v5 = [v1 reservationNumber];
    [(_INPBReservation *)v2 setReservationNumber:v5];

    int v6 = [v1 bookingTime];
    uint64_t v7 = INIntentSlotValueTransformToTimestamp(v6);
    [(_INPBReservation *)v2 setBookingTime:v7];

    unint64_t v8 = [v1 reservationStatus];
    if (v8 < 5) {
      uint64_t v9 = (v8 + 1);
    }
    else {
      uint64_t v9 = 0x7FFFFFFFLL;
    }
    [(_INPBReservation *)v2 setReservationStatus:v9];
    uint64_t v10 = [v1 reservationHolderName];
    [(_INPBReservation *)v2 setReservationHolderName:v10];

    uint64_t v11 = [v1 actions];
    unint64_t v12 = INIntentSlotValueTransformToReservationActions(v11);
    [(_INPBReservation *)v2 setActions:v12];

    char v13 = [v1 URL];
    BOOL v14 = INIntentSlotValueTransformToURLValue(v13);
    [(_INPBReservation *)v2 setUrl:v14];

    BOOL v15 = objc_alloc_init(_INPBRestaurantReservation);
    [(_INPBRestaurantReservation *)v15 setReservation:v2];
    uint64_t v16 = [v1 reservationDuration];
    char v17 = INIntentSlotValueTransformToDateTimeRange(v16);
    [(_INPBRestaurantReservation *)v15 setReservationDuration:v17];

    unsigned int v18 = [v1 partySize];
    id v19 = INIntentSlotValueTransformToInteger(v18);
    [(_INPBRestaurantReservation *)v15 setPartySize:v19];

    uint64_t v20 = [v1 restaurantLocation];

    unint64_t v21 = INIntentSlotValueTransformToLocation(v20);
    [(_INPBRestaurantReservation *)v15 setRestaurantLocation:v21];
  }
  else
  {
    BOOL v15 = 0;
  }

  return v15;
}

id INIntentSlotValueTransformFromRestaurantReservations(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    long long v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          unint64_t v8 = INIntentSlotValueTransformFromRestaurantReservation(*(INRestaurantReservation **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    uint64_t v9 = (void *)[v2 copy];
  }
  else
  {
    uint64_t v9 = 0;
  }

  return v9;
}

id INIntentSlotValueTransformToRestaurantReservations(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    long long v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          unint64_t v8 = INIntentSlotValueTransformToRestaurantReservation(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    uint64_t v9 = (void *)[v2 copy];
  }
  else
  {
    uint64_t v9 = 0;
  }

  return v9;
}

id INIntentSlotValueRedactedRestaurantReservationFromRestaurantReservation(void *a1)
{
  id v1 = a1;

  return v1;
}

uint64_t _INPBDecimalNumberValueReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = objc_alloc_init(_INPBValueMetadata);
          if PBReaderPlaceMark() && (_INPBValueMetadataReadFrom(v17, a2))
          {
            PBReaderRecallMark();
            objc_msgSend(a1, "setValueMetadata:", v17, 0, 0);

            continue;
          }

          return 0;
        case 2u:
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          while (1)
          {
            uint64_t v22 = *v3;
            unint64_t v23 = *(void *)(a2 + v22);
            if (v23 == -1 || v23 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if ((v24 & 0x80) == 0) {
              goto LABEL_46;
            }
            v19 += 7;
            BOOL v14 = v20++ >= 9;
            if (v14)
            {
              uint64_t v25 = 0;
              goto LABEL_49;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_46:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v25 = 0;
          }
          else {
            uint64_t v25 = v21;
          }
LABEL_49:
          [a1 setMantissa:v25];
          continue;
        case 3u:
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v28 = 0;
          while (2)
          {
            uint64_t v29 = *v3;
            unint64_t v30 = *(void *)(a2 + v29);
            if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
              *(void *)(a2 + v29) = v30 + 1;
              v28 |= (unint64_t)(v31 & 0x7F) << v26;
              if (v31 < 0)
              {
                v26 += 7;
                BOOL v14 = v27++ >= 9;
                if (v14)
                {
                  uint64_t v32 = 0;
                  goto LABEL_54;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v32 = 0;
          }
          else {
            uint64_t v32 = v28;
          }
LABEL_54:
          [a1 setExponent:v32];
          continue;
        case 4u:
          char v33 = 0;
          unsigned int v34 = 0;
          uint64_t v35 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v36 = *v3;
        unint64_t v37 = *(void *)(a2 + v36);
        if (v37 == -1 || v37 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v38 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
        *(void *)(a2 + v36) = v37 + 1;
        v35 |= (unint64_t)(v38 & 0x7F) << v33;
        if ((v38 & 0x80) == 0) {
          goto LABEL_56;
        }
        v33 += 7;
        BOOL v14 = v34++ >= 9;
        if (v14)
        {
          uint64_t v35 = 0;
          goto LABEL_58;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_56:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v35 = 0;
      }
LABEL_58:
      [a1 setIsNegative:v35 != 0];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

INRideStatus *INIntentSlotValueTransformFromRideStatus(void *a1)
{
  uint64_t v105 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    long long v2 = objc_alloc_init(INRideStatus);
    id v3 = [v1 rideIdentifier];
    [(INRideStatus *)v2 setRideIdentifier:v3];

    LODWORD(v3) = [v1 hasPhase];
    int v4 = [v1 phase];
    if (v3 && (v4 - 1) <= 6) {
      uint64_t v5 = qword_18CFC43C8[v4 - 1];
    }
    else {
      uint64_t v5 = 0;
    }
    [(INRideStatus *)v2 setPhase:v5];
    int v89 = v2;
    if ([v1 hasDriver])
    {
      uint64_t v6 = [v1 driver];
      if ([v6 hasRating])
      {
        uint64_t v85 = [v6 rating];
      }
      else
      {
        uint64_t v85 = 0;
      }
      if ([v6 hasPhoneNumber])
      {
        uint64_t v8 = [v6 phoneNumber];
      }
      else
      {
        uint64_t v8 = 0;
      }
      unsigned int v9 = [v6 person];
      unint64_t v10 = v9;
      uint64_t v86 = v6;
      int v83 = v9;
      char v84 = (void *)v8;
      id v82 = v1;
      if (v9)
      {
        uint64_t v11 = [v9 valueMetadata];
        INPrivacyEntitlementValidateValueMetadata(v11);

        if (([v10 hasFirstName] & 1) != 0 || objc_msgSend(v10, "hasLastName"))
        {
          id v12 = objc_alloc_init(MEMORY[0x1E4F28F30]);
          if ([v10 hasFirstName])
          {
            char v13 = [v10 firstName];
            [v12 setGivenName:v13];
          }
          if ([v10 hasLastName])
          {
            BOOL v14 = [v10 lastName];
            [v12 setFamilyName:v14];
          }
        }
        else
        {
          id v12 = 0;
        }
        if ([v10 hasFullName])
        {
          uint64_t v22 = [v10 fullName];
        }
        else
        {
          uint64_t v22 = 0;
        }
        int v81 = (void *)v22;
        if ([v10 hasContactHandle])
        {
          unint64_t v23 = [v10 contactHandle];
          INIntentSlotValueTransformFromContactHandle(v23);
          unsigned int v20 = (INPersonHandle *)objc_claimAutoreleasedReturnValue();
        }
        else if (v8)
        {
          unsigned int v20 = [[INPersonHandle alloc] initWithValue:v8 type:2];
        }
        else
        {
          unsigned int v20 = 0;
        }
        if ([v10 hasImage])
        {
          char v24 = [v10 image];
          uint64_t v80 = INIntentSlotValueTransformFromImageValue(v24);
        }
        else
        {
          uint64_t v80 = 0;
        }
        uint64_t v25 = v20;
        if ([v10 hasValueMetadata])
        {
          char v26 = [v10 valueMetadata];
          if ([v26 hasInput])
          {
            uint64_t v79 = [v26 input];
          }
          else
          {
            uint64_t v79 = 0;
          }
          if ([v26 hasUuid])
          {
            uint64_t v78 = [v26 uuid];
          }
          else
          {
            uint64_t v78 = 0;
          }
        }
        else
        {
          uint64_t v78 = 0;
          uint64_t v79 = 0;
        }
        if ([v10 aliasesCount])
        {
          id v87 = v12;
          id v15 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
          long long v98 = 0u;
          long long v99 = 0u;
          long long v100 = 0u;
          long long v101 = 0u;
          unsigned int v27 = [v10 aliases];
          uint64_t v28 = [v27 countByEnumeratingWithState:&v98 objects:v104 count:16];
          if (v28)
          {
            uint64_t v29 = v28;
            uint64_t v30 = *(void *)v99;
            do
            {
              for (uint64_t i = 0; i != v29; ++i)
              {
                if (*(void *)v99 != v30) {
                  objc_enumerationMutation(v27);
                }
                uint64_t v32 = INIntentSlotValueTransformFromContactHandle(*(void **)(*((void *)&v98 + 1) + 8 * i));
                [v15 addObject:v32];
              }
              uint64_t v29 = [v27 countByEnumeratingWithState:&v98 objects:v104 count:16];
            }
            while (v29);
          }

          id v12 = v87;
          uint64_t v16 = v89;
          uint64_t v21 = (void *)v85;
          unint64_t v10 = (void *)v80;
          char v19 = v81;
          unsigned int v20 = v25;
        }
        else
        {
          id v15 = 0;
          uint64_t v21 = (void *)v85;
          unint64_t v10 = (void *)v80;
          char v19 = v81;
          uint64_t v16 = v2;
        }
        unsigned int v18 = (void *)v78;
        char v17 = (void *)v79;
      }
      else
      {
        id v15 = 0;
        uint64_t v16 = v2;
        char v17 = 0;
        unsigned int v18 = 0;
        char v19 = 0;
        id v12 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = (void *)v85;
      }
      unint64_t v88 = v12;
      id v33 = [[INRideDriver alloc] _initWithUserInput:v17 personHandle:v20 nameComponents:v12 displayName:v19 image:v10 contactIdentifier:v18 rating:v21 aliases:v15];
      [(INRideStatus *)v16 setDriver:v33];

      long long v2 = v16;
      id v1 = v82;
    }
    if ([v1 hasVehicle])
    {
      unsigned int v34 = [v1 vehicle];
      uint64_t v35 = objc_alloc_init(INRideVehicle);
      uint64_t v36 = [v34 location];
      unint64_t v37 = INIntentSlotValueTransformFromGEOLocation(v36);
      [(INRideVehicle *)v35 setLocation:v37];

      char v38 = [v34 registrationPlate];
      [(INRideVehicle *)v35 setRegistrationPlate:v38];

      uint64_t v39 = [v34 manufacturer];
      [(INRideVehicle *)v35 setManufacturer:v39];

      unsigned int v40 = [v34 model];
      [(INRideVehicle *)v35 setModel:v40];

      uint64_t v41 = [v34 mapAnnotationImage];
      uint64_t v42 = INIntentSlotValueTransformFromImageValue(v41);
      [(INRideVehicle *)v35 setMapAnnotationImage:v42];

      [(INRideStatus *)v2 setVehicle:v35];
    }
    uint64_t v43 = [v1 estimatedPickupDate];
    unint64_t v44 = INIntentSlotValueTransformFromTimestamp(v43);
    [(INRideStatus *)v2 setEstimatedPickupDate:v44];

    char v45 = [v1 estimatedDropOffDate];
    uint64_t v46 = INIntentSlotValueTransformFromTimestamp(v45);
    [(INRideStatus *)v2 setEstimatedDropOffDate:v46];

    char v47 = [v1 estimatedPickupEndDate];
    unsigned int v48 = INIntentSlotValueTransformFromTimestamp(v47);
    [(INRideStatus *)v2 setEstimatedPickupEndDate:v48];

    uint64_t v49 = [v1 scheduledPickupTime];
    uint64_t v50 = INIntentSlotValueTransformFromDateTimeRangeValue(v49);
    [(INRideStatus *)v2 setScheduledPickupTime:v50];

    uint64_t v51 = [v1 pickupLocation];
    unint64_t v52 = INIntentSlotValueTransformFromLocationValue(v51);
    [(INRideStatus *)v2 setPickupLocation:v52];

    char v53 = [v1 waypoints];
    uint64_t v54 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v53, "count"));
    long long v94 = 0u;
    long long v95 = 0u;
    long long v96 = 0u;
    long long v97 = 0u;
    id v55 = v53;
    uint64_t v56 = [v55 countByEnumeratingWithState:&v94 objects:v103 count:16];
    if (v56)
    {
      uint64_t v57 = v56;
      uint64_t v58 = *(void *)v95;
      do
      {
        for (uint64_t j = 0; j != v57; ++j)
        {
          if (*(void *)v95 != v58) {
            objc_enumerationMutation(v55);
          }
          unint64_t v60 = INIntentSlotValueTransformFromLocationValue(*(void **)(*((void *)&v94 + 1) + 8 * j));
          if (v60) {
            [v54 addObject:v60];
          }
        }
        uint64_t v57 = [v55 countByEnumeratingWithState:&v94 objects:v103 count:16];
      }
      while (v57);
    }

    [(INRideStatus *)v2 setWaypoints:v54];
    char v61 = [v1 dropOffLocation];
    uint64_t v62 = INIntentSlotValueTransformFromLocationValue(v61);
    [(INRideStatus *)v2 setDropOffLocation:v62];

    uint64_t v63 = [v1 rideOption];
    unint64_t v64 = INIntentSlotValueTransformFromRideOption(v63);
    [(INRideStatus *)v2 setRideOption:v64];

    char v65 = [v1 userActivityForCancelingInApplication];
    unsigned int v66 = INUserActivityDeserializeFromBackingStore(v65);
    [(INRideStatus *)v2 setUserActivityForCancelingInApplication:v66];

    if ([v1 hasCompletionStatus])
    {
      uint64_t v67 = [INRideCompletionStatus alloc];
      uint64_t v68 = [v1 completionStatus];
      id v69 = [(INRideCompletionStatus *)v67 _initWithValue:v68];
      [(INRideStatus *)v2 setCompletionStatus:v69];
    }
    long long v92 = 0u;
    long long v93 = 0u;
    long long v90 = 0u;
    long long v91 = 0u;
    uint64_t v70 = [v1 additionalActionItems];
    uint64_t v71 = [v70 countByEnumeratingWithState:&v90 objects:v102 count:16];
    if (v71)
    {
      uint64_t v72 = v71;
      id v73 = 0;
      uint64_t v74 = *(void *)v91;
      do
      {
        for (uint64_t k = 0; k != v72; ++k)
        {
          if (*(void *)v91 != v74) {
            objc_enumerationMutation(v70);
          }
          char v76 = INUserActivityDeserializeFromBackingStore(*(void **)(*((void *)&v90 + 1) + 8 * k));
          if (v76)
          {
            if (!v73) {
              id v73 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
            }
            [v73 addObject:v76];
          }
        }
        uint64_t v72 = [v70 countByEnumeratingWithState:&v90 objects:v102 count:16];
      }
      while (v72);
    }
    else
    {
      id v73 = 0;
    }

    uint64_t v7 = v89;
  }
  else
  {
    uint64_t v7 = 0;
  }

  return v7;
}

_INPBRideStatus *INIntentSlotValueTransformToRideStatus(void *a1)
{
  uint64_t v62 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    long long v2 = objc_alloc_init(_INPBRideStatus);
    id v3 = [v1 rideIdentifier];
    [(_INPBRideStatus *)v2 setRideIdentifier:v3];

    unint64_t v4 = [v1 phase];
    if (v4 <= 6 && ((0x7Eu >> v4) & 1) != 0)
    {
      unint64_t v5 = [v1 phase] - 1;
      if (v5 > 5) {
        uint64_t v6 = 0x7FFFFFFFLL;
      }
      else {
        uint64_t v6 = dword_18CFC43B0[v5];
      }
      [(_INPBRideStatus *)v2 setPhase:v6];
    }
    uint64_t v7 = [v1 driver];
    if (v7)
    {
      uint64_t v8 = objc_alloc_init(_INPBRideDriver);
      unsigned int v9 = INIntentSlotValueTransformToContactValue(v7);
      [(_INPBRideDriver *)v8 setPerson:v9];

      unint64_t v10 = [v7 rating];
      [(_INPBRideDriver *)v8 setRating:v10];

      uint64_t v11 = [v7 phoneNumber];
      [(_INPBRideDriver *)v8 setPhoneNumber:v11];

      [(_INPBRideStatus *)v2 setDriver:v8];
    }
    id v12 = [v1 vehicle];
    if (v12)
    {
      char v13 = objc_alloc_init(_INPBRideVehicle);
      BOOL v14 = [v12 location];
      id v15 = INIntentSlotValueTransformToGEOLocation(v14);
      [(_INPBRideVehicle *)v13 setLocation:v15];

      uint64_t v16 = [v12 registrationPlate];
      [(_INPBRideVehicle *)v13 setRegistrationPlate:v16];

      char v17 = [v12 manufacturer];
      [(_INPBRideVehicle *)v13 setManufacturer:v17];

      unsigned int v18 = [v12 model];
      [(_INPBRideVehicle *)v13 setModel:v18];

      char v19 = [v12 mapAnnotationImage];
      unsigned int v20 = INIntentSlotValueTransformToImageValue(v19);
      [(_INPBRideVehicle *)v13 setMapAnnotationImage:v20];

      [(_INPBRideStatus *)v2 setVehicle:v13];
    }
    uint64_t v21 = [v1 estimatedPickupDate];
    uint64_t v22 = INIntentSlotValueTransformToTimestamp(v21);
    [(_INPBRideStatus *)v2 setEstimatedPickupDate:v22];

    unint64_t v23 = [v1 estimatedDropOffDate];
    char v24 = INIntentSlotValueTransformToTimestamp(v23);
    [(_INPBRideStatus *)v2 setEstimatedDropOffDate:v24];

    uint64_t v25 = [v1 estimatedPickupEndDate];
    char v26 = INIntentSlotValueTransformToTimestamp(v25);
    [(_INPBRideStatus *)v2 setEstimatedPickupEndDate:v26];

    unsigned int v27 = [v1 scheduledPickupTime];
    uint64_t v28 = INIntentSlotValueTransformToDateTimeRangeValue(v27);
    [(_INPBRideStatus *)v2 setScheduledPickupTime:v28];

    uint64_t v29 = [v1 pickupLocation];
    uint64_t v30 = INIntentSlotValueTransformToLocationValue(v29);
    [(_INPBRideStatus *)v2 setPickupLocation:v30];

    long long v58 = 0u;
    long long v59 = 0u;
    long long v56 = 0u;
    long long v57 = 0u;
    char v31 = [v1 waypoints];
    uint64_t v32 = [v31 countByEnumeratingWithState:&v56 objects:v61 count:16];
    if (v32)
    {
      uint64_t v33 = v32;
      uint64_t v34 = *(void *)v57;
      do
      {
        for (uint64_t i = 0; i != v33; ++i)
        {
          if (*(void *)v57 != v34) {
            objc_enumerationMutation(v31);
          }
          uint64_t v36 = INIntentSlotValueTransformToLocationValue(*(void **)(*((void *)&v56 + 1) + 8 * i));
          if (v36) {
            [(_INPBRideStatus *)v2 addWaypoints:v36];
          }
        }
        uint64_t v33 = [v31 countByEnumeratingWithState:&v56 objects:v61 count:16];
      }
      while (v33);
    }

    unint64_t v37 = [v1 dropOffLocation];
    char v38 = INIntentSlotValueTransformToLocationValue(v37);
    [(_INPBRideStatus *)v2 setDropOffLocation:v38];

    uint64_t v39 = [v1 rideOption];
    unsigned int v40 = INIntentSlotValueTransformToRideOption(v39);
    [(_INPBRideStatus *)v2 setRideOption:v40];

    uint64_t v41 = [v1 userActivityForCancelingInApplication];
    uint64_t v42 = INUserActivitySerializeToBackingStore(v41);
    [(_INPBRideStatus *)v2 setUserActivityForCancelingInApplication:v42];

    uint64_t v43 = [v1 completionStatus];
    unint64_t v44 = (void *)[v43 _newValue];
    [(_INPBRideStatus *)v2 setCompletionStatus:v44];

    long long v54 = 0u;
    long long v55 = 0u;
    long long v52 = 0u;
    long long v53 = 0u;
    char v45 = objc_msgSend(v1, "additionalActionActivities", 0);
    uint64_t v46 = [v45 countByEnumeratingWithState:&v52 objects:v60 count:16];
    if (v46)
    {
      uint64_t v47 = v46;
      uint64_t v48 = *(void *)v53;
      do
      {
        for (uint64_t j = 0; j != v47; ++j)
        {
          if (*(void *)v53 != v48) {
            objc_enumerationMutation(v45);
          }
          uint64_t v50 = INUserActivitySerializeToBackingStore(*(void **)(*((void *)&v52 + 1) + 8 * j));
          if (v50) {
            [(_INPBRideStatus *)v2 addAdditionalActionItems:v50];
          }
        }
        uint64_t v47 = [v45 countByEnumeratingWithState:&v52 objects:v60 count:16];
      }
      while (v47);
    }
  }
  else
  {
    long long v2 = 0;
  }

  return v2;
}

uint64_t _INPBSetProfileInCarIntentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  unint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = objc_alloc_init(_INPBIntentMetadata);
        if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_47;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntentMetadata:", v17, 0, 0);
        goto LABEL_40;
      case 2u:
        char v17 = objc_alloc_init(_INPBInteger);
        if (!PBReaderPlaceMark() || (_INPBIntegerReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_47;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setProfileNumber:", v17, 0, 0);
        goto LABEL_40;
      case 3u:
        char v17 = objc_alloc_init(_INPBString);
        if (!PBReaderPlaceMark() || (_INPBStringReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_47;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setProfileName:", v17, 0, 0);
        goto LABEL_40;
      case 4u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v21 = 0;
                goto LABEL_44;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v21 = 0;
        }
LABEL_44:
        [a1 setDefaultProfile:v21 != 0];
        goto LABEL_45;
      case 5u:
        char v17 = objc_alloc_init(_INPBDataString);
        if (PBReaderPlaceMark() && _INPBDataStringReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setCarName:", v17, 0, 0);
LABEL_40:

LABEL_45:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_47:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_45;
    }
  }
}

uint64_t _INPBContactHandleReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  unint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = PBReaderReadString();
          [a1 setValue:v17];
          goto LABEL_30;
        case 2u:
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          while (2)
          {
            uint64_t v22 = *v3;
            unint64_t v23 = *(void *)(a2 + v22);
            if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
              *(void *)(a2 + v22) = v23 + 1;
              v21 |= (unint64_t)(v24 & 0x7F) << v19;
              if (v24 < 0)
              {
                v19 += 7;
                BOOL v14 = v20++ >= 9;
                if (v14)
                {
                  uint64_t v25 = 0;
                  goto LABEL_56;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v25 = 0;
          }
          else {
            uint64_t v25 = v21;
          }
LABEL_56:
          [a1 setType:v25];
          continue;
        case 3u:
          char v17 = PBReaderReadString();
          [a1 setLabel:v17];
LABEL_30:

          continue;
        case 4u:
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v28 = 0;
          while (2)
          {
            uint64_t v29 = *v3;
            unint64_t v30 = *(void *)(a2 + v29);
            if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
              *(void *)(a2 + v29) = v30 + 1;
              v28 |= (unint64_t)(v31 & 0x7F) << v26;
              if (v31 < 0)
              {
                v26 += 7;
                BOOL v14 = v27++ >= 9;
                if (v14)
                {
                  uint64_t v32 = 0;
                  goto LABEL_61;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v32 = 0;
          }
          else {
            uint64_t v32 = v28;
          }
LABEL_61:
          [a1 setEmergencyType:v32];
          continue;
        case 5u:
          char v33 = 0;
          unsigned int v34 = 0;
          uint64_t v35 = 0;
          while (2)
          {
            uint64_t v36 = *v3;
            unint64_t v37 = *(void *)(a2 + v36);
            if (v37 == -1 || v37 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v38 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
              *(void *)(a2 + v36) = v37 + 1;
              v35 |= (unint64_t)(v38 & 0x7F) << v33;
              if (v38 < 0)
              {
                v33 += 7;
                BOOL v14 = v34++ >= 9;
                if (v14)
                {
                  uint64_t v35 = 0;
                  goto LABEL_65;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v35 = 0;
          }
LABEL_65:
          [a1 setSuggested:v35 != 0];
          continue;
        case 6u:
          char v39 = 0;
          unsigned int v40 = 0;
          uint64_t v41 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v42 = *v3;
        unint64_t v43 = *(void *)(a2 + v42);
        if (v43 == -1 || v43 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v44 = *(unsigned char *)(*(void *)(a2 + *v7) + v43);
        *(void *)(a2 + v42) = v43 + 1;
        v41 |= (unint64_t)(v44 & 0x7F) << v39;
        if ((v44 & 0x80) == 0) {
          goto LABEL_67;
        }
        v39 += 7;
        BOOL v14 = v40++ >= 9;
        if (v14)
        {
          uint64_t v45 = 0;
          goto LABEL_70;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_67:
      uint64_t v45 = *(unsigned char *)(a2 + *v5) ? 0 : v41;
LABEL_70:
      [a1 setFaceTimeType:v45];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _INPBStringReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  unint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(_INPBStringValue);
        if (!PBReaderPlaceMark() || !_INPBStringValueReadFrom(v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addValue:", v17, 0, 0);
        }
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _INPBStartVideoCallIntentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  unint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = objc_alloc_init(_INPBIntentMetadata);
        if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_50;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntentMetadata:", v17, 0, 0);
        goto LABEL_42;
      case 2u:
        char v17 = objc_alloc_init(_INPBDialingContact);
        uint64_t v26 = 0;
        uint64_t v27 = 0;
        if (!PBReaderPlaceMark() || !_INPBDialingContactReadFrom(v17, a2)) {
          goto LABEL_50;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addTargetContacts:", v17, 0, 0);
        }
        goto LABEL_42;
      case 3u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_47;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v21;
        }
LABEL_47:
        objc_msgSend(a1, "setAudioRoute:", v25, v26, v27);
        goto LABEL_48;
      case 4u:
        char v17 = objc_alloc_init(_INPBDialingContact);
        uint64_t v26 = 0;
        uint64_t v27 = 0;
        if (!PBReaderPlaceMark() || !_INPBDialingContactReadFrom(v17, a2)) {
          goto LABEL_50;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addContact:", v17, 0, 0);
        }
        goto LABEL_42;
      case 5u:
        char v17 = objc_alloc_init(_INPBStartCallRequestMetadata);
        if PBReaderPlaceMark() && (_INPBStartCallRequestMetadataReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setCallRequestMetadata:", v17, 0, 0);
LABEL_42:

LABEL_48:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_50:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_48;
    }
  }
}

BOOL _INPBWellnessMetadataValueReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  unint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        unsigned int v18 = objc_alloc_init(_INPBString);
        if (!PBReaderPlaceMark() || (_INPBStringReadFrom(v18, a2) & 1) == 0)
        {
LABEL_35:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPbStringValue:", v18, 0, 0);
        goto LABEL_30;
      }
      if (v17 == 2) {
        break;
      }
      if (v17 == 1)
      {
        unsigned int v18 = objc_alloc_init(_INPBDouble);
        if (!PBReaderPlaceMark() || (_INPBDoubleReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_35;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPbDoubleValue:", v18, 0, 0);
LABEL_30:

        goto LABEL_32;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_32:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unsigned int v18 = objc_alloc_init(_INPBInteger);
    if (!PBReaderPlaceMark() || (_INPBIntegerReadFrom(v18, a2) & 1) == 0) {
      goto LABEL_35;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setOrdinalValue:", v18, 0, 0);
    goto LABEL_30;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _INPBContactValueReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  unint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v17 = objc_alloc_init(_INPBValueMetadata);
        if (!PBReaderPlaceMark() || (_INPBValueMetadataReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_100;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setValueMetadata:", v17, 0, 0);
        goto LABEL_64;
      case 2u:
        PBReaderReadString();
        unint64_t v17 = (_INPBValueMetadata *)objc_claimAutoreleasedReturnValue();
        [a1 setFirstName:v17];
        goto LABEL_64;
      case 3u:
        PBReaderReadString();
        unint64_t v17 = (_INPBValueMetadata *)objc_claimAutoreleasedReturnValue();
        [a1 setLastName:v17];
        goto LABEL_64;
      case 4u:
        PBReaderReadString();
        unint64_t v17 = (_INPBValueMetadata *)objc_claimAutoreleasedReturnValue();
        [a1 setFullName:v17];
        goto LABEL_64;
      case 5u:
        PBReaderReadString();
        unint64_t v17 = (_INPBValueMetadata *)objc_claimAutoreleasedReturnValue();
        [a1 setHandle:v17];
        goto LABEL_64;
      case 6u:
        unint64_t v17 = objc_alloc_init(_INPBImageValue);
        if (!PBReaderPlaceMark() || (_INPBImageValueReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_100;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setImage:", v17, 0, 0);
        goto LABEL_64;
      case 7u:
        unint64_t v17 = objc_alloc_init(_INPBContactHandle);
        if (!PBReaderPlaceMark() || (_INPBContactHandleReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_100;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setContactHandle:", v17, 0, 0);
        goto LABEL_64;
      case 8u:
        PBReaderReadString();
        unint64_t v17 = (_INPBValueMetadata *)objc_claimAutoreleasedReturnValue();
        [a1 setCustomIdentifier:v17];
        goto LABEL_64;
      case 9u:
        PBReaderReadString();
        unint64_t v17 = (_INPBValueMetadata *)objc_claimAutoreleasedReturnValue();
        [a1 setRelationship:v17];
        goto LABEL_64;
      case 0xAu:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v21 = 0;
                goto LABEL_84;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v21 = 0;
        }
LABEL_84:
        [a1 setIsMe:v21 != 0];
        goto LABEL_65;
      case 0xBu:
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v27 = 0;
        while (2)
        {
          uint64_t v28 = *v3;
          unint64_t v29 = *(void *)(a2 + v28);
          if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
            *(void *)(a2 + v2_Block_object_dispose(&STACK[0x260], 8) = v29 + 1;
            v27 |= (unint64_t)(v30 & 0x7F) << v25;
            if (v30 < 0)
            {
              v25 += 7;
              BOOL v14 = v26++ >= 9;
              if (v14)
              {
                uint64_t v31 = 0;
                goto LABEL_89;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v31 = 0;
        }
        else {
          uint64_t v31 = v27;
        }
LABEL_89:
        objc_msgSend(a1, "setSuggestionType:", v31, v45, v46);
        goto LABEL_65;
      case 0xCu:
        unint64_t v17 = objc_alloc_init(_INPBContactHandle);
        uint64_t v45 = 0;
        uint64_t v46 = 0;
        if (PBReaderPlaceMark() && _INPBContactHandleReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          if (v17) {
            objc_msgSend(a1, "addAliases:", v17, 0, 0);
          }
LABEL_64:

LABEL_65:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_100:

        return 0;
      case 0xDu:
        PBReaderReadString();
        unint64_t v17 = (_INPBValueMetadata *)objc_claimAutoreleasedReturnValue();
        [a1 setNickName:v17];
        goto LABEL_64;
      case 0xEu:
        PBReaderReadString();
        unint64_t v17 = (_INPBValueMetadata *)objc_claimAutoreleasedReturnValue();
        [a1 setNamePrefix:v17];
        goto LABEL_64;
      case 0xFu:
        PBReaderReadString();
        unint64_t v17 = (_INPBValueMetadata *)objc_claimAutoreleasedReturnValue();
        [a1 setMiddleName:v17];
        goto LABEL_64;
      case 0x10u:
        PBReaderReadString();
        unint64_t v17 = (_INPBValueMetadata *)objc_claimAutoreleasedReturnValue();
        [a1 setNameSuffix:v17];
        goto LABEL_64;
      case 0x11u:
        PBReaderReadString();
        unint64_t v17 = (_INPBValueMetadata *)objc_claimAutoreleasedReturnValue();
        [a1 setPhoneticNamePrefix:v17];
        goto LABEL_64;
      case 0x12u:
        PBReaderReadString();
        unint64_t v17 = (_INPBValueMetadata *)objc_claimAutoreleasedReturnValue();
        [a1 setPhoneticFirstName:v17];
        goto LABEL_64;
      case 0x13u:
        PBReaderReadString();
        unint64_t v17 = (_INPBValueMetadata *)objc_claimAutoreleasedReturnValue();
        [a1 setPhoneticMiddleName:v17];
        goto LABEL_64;
      case 0x14u:
        PBReaderReadString();
        unint64_t v17 = (_INPBValueMetadata *)objc_claimAutoreleasedReturnValue();
        [a1 setPhoneticLastName:v17];
        goto LABEL_64;
      case 0x15u:
        PBReaderReadString();
        unint64_t v17 = (_INPBValueMetadata *)objc_claimAutoreleasedReturnValue();
        [a1 setPhoneticNameSuffix:v17];
        goto LABEL_64;
      case 0x16u:
        PBReaderReadString();
        unint64_t v17 = (_INPBValueMetadata *)objc_claimAutoreleasedReturnValue();
        [a1 setPhonemeData:v17];
        goto LABEL_64;
      case 0x17u:
        char v32 = 0;
        unsigned int v33 = 0;
        uint64_t v34 = 0;
        while (2)
        {
          uint64_t v35 = *v3;
          unint64_t v36 = *(void *)(a2 + v35);
          if (v36 == -1 || v36 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
            *(void *)(a2 + v35) = v36 + 1;
            v34 |= (unint64_t)(v37 & 0x7F) << v32;
            if (v37 < 0)
            {
              v32 += 7;
              BOOL v14 = v33++ >= 9;
              if (v14)
              {
                uint64_t v34 = 0;
                goto LABEL_93;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v34 = 0;
        }
LABEL_93:
        [a1 setIsContactSuggestion:v34 != 0];
        goto LABEL_65;
      case 0x18u:
        char v38 = 0;
        unsigned int v39 = 0;
        uint64_t v40 = 0;
        while (2)
        {
          uint64_t v41 = *v3;
          unint64_t v42 = *(void *)(a2 + v41);
          if (v42 == -1 || v42 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v43 = *(unsigned char *)(*(void *)(a2 + *v7) + v42);
            *(void *)(a2 + v41) = v42 + 1;
            v40 |= (unint64_t)(v43 & 0x7F) << v38;
            if (v43 < 0)
            {
              v38 += 7;
              BOOL v14 = v39++ >= 9;
              if (v14)
              {
                uint64_t v44 = 0;
                goto LABEL_98;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v44 = 0;
        }
        else {
          uint64_t v44 = v40;
        }
LABEL_98:
        objc_msgSend(a1, "setSearchProvider:", v44, v45, v46);
        goto LABEL_65;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_65;
    }
  }
}

BOOL _INPBRideVehicleReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  unint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v17 = (_INPBImageValue *)objc_alloc_init(MEMORY[0x1E4F64660]);
        if (!PBReaderPlaceMark() || (GEOLocationReadAllFrom() & 1) == 0) {
          goto LABEL_34;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLocation:", v17, 0, 0);
        goto LABEL_30;
      case 2u:
        PBReaderReadString();
        unint64_t v17 = (_INPBImageValue *)objc_claimAutoreleasedReturnValue();
        [a1 setRegistrationPlate:v17];
        goto LABEL_30;
      case 3u:
        PBReaderReadString();
        unint64_t v17 = (_INPBImageValue *)objc_claimAutoreleasedReturnValue();
        [a1 setManufacturer:v17];
        goto LABEL_30;
      case 4u:
        PBReaderReadString();
        unint64_t v17 = (_INPBImageValue *)objc_claimAutoreleasedReturnValue();
        [a1 setModel:v17];
        goto LABEL_30;
      case 5u:
        unint64_t v17 = objc_alloc_init(_INPBImageValue);
        if PBReaderPlaceMark() && (_INPBImageValueReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setMapAnnotationImage:", v17, 0, 0);
LABEL_30:

LABEL_31:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_34:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_31;
    }
  }
}

uint64_t _INPBSetTaskAttributeIntentResponseReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  unint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      int v16 = v10 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        if (v16 == 2)
        {
          uint64_t result = PBReaderPlaceMark();
          if (!result) {
            return result;
          }
          while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4) && !*(unsigned char *)(a2 + *v5))
          {
            char v20 = 0;
            unsigned int v21 = 0;
            uint64_t v22 = 0;
            while (1)
            {
              uint64_t v23 = *v3;
              unint64_t v24 = *(void *)(a2 + v23);
              if (v24 == -1 || v24 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
              *(void *)(a2 + v23) = v24 + 1;
              v22 |= (unint64_t)(v25 & 0x7F) << v20;
              if (v25 < 0)
              {
                v20 += 7;
                BOOL v14 = v21++ >= 9;
                if (!v14) {
                  continue;
                }
              }
              goto LABEL_35;
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_35:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v28 = 0;
          while (1)
          {
            uint64_t v29 = *v3;
            unint64_t v30 = *(void *)(a2 + v29);
            if (v30 == -1 || v30 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (!v14) {
                continue;
              }
            }
            goto LABEL_47;
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_47:
          PBRepeatedInt32Add();
        }
      }
      else if ((v10 >> 3) == 1)
      {
        unsigned int v18 = objc_alloc_init(_INPBTask);
        if (!PBReaderPlaceMark() || (_INPBTaskReadFrom(v18, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setModifiedTask:", v18, 0, 0);
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        return 0;
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

id INLocalizedDeferredString(void *a1, id *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  id v15 = a1;
  id v16 = a3;
  id v17 = a4;
  id v18 = a5;
  id v19 = a6;
  id v20 = a7;
  id v21 = a8;
  char v43 = v15;
  id v44 = 0;
  uint64_t v41 = v17;
  unint64_t v42 = v16;
  uint64_t v40 = v20;
  uint64_t v22 = INLocalizedFormat(v15, v16, v17, v18, v20, v19, v21, &v44);
  id v23 = v44;
  id v24 = v22;
  id v25 = v23;
  id v26 = *a2;
  if ([v26 count])
  {
    id v38 = v19;
    id v39 = v18;
    unsigned int v27 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v26, "count"));
    v54[0] = 0;
    v54[1] = v54;
    v54[2] = 0x2020000000;
    v54[3] = 0;
    v53[0] = 0;
    v53[1] = v53;
    v53[2] = 0x2020000000;
    v53[3] = 0;
    uint64_t v28 = (void *)[v24 mutableCopy];
    v45[0] = MEMORY[0x1E4F143A8];
    v45[1] = 3221225472;
    v45[2] = __INPopulateFormatStringWithArguments_block_invoke;
    v45[3] = &unk_1E5517EB0;
    uint64_t v51 = v54;
    id v29 = v24;
    id v46 = v29;
    id v47 = v26;
    id v48 = v25;
    id v30 = v28;
    id v49 = v30;
    long long v52 = v53;
    id v31 = v27;
    id v50 = v31;
    char v32 = (void *)MEMORY[0x192F984C0](v45);
    unsigned int v33 = INSharedFormatRegularExpression();
    objc_msgSend(v33, "enumerateMatchesInString:options:range:usingBlock:", v29, 0, 0, objc_msgSend(v29, "length"), v32);

    objc_msgSend(v30, "replaceOccurrencesOfString:withString:options:range:", @"%%", @"%", 0, 0, objc_msgSend(v30, "length"));
    id v34 = *a2;
    *a2 = v31;
    id v35 = v31;

    id v36 = v30;
    _Block_object_dispose(v53, 8);
    _Block_object_dispose(v54, 8);
    id v19 = v38;
    id v18 = v39;
  }
  else
  {
    id v36 = v24;
  }

  return v36;
}

void sub_18CC54938(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  _Block_object_dispose(&a28, 8);
  _Block_object_dispose((const void *)(v28 - 120), 8);
  _Unwind_Resume(a1);
}

id INLocalizedFormat(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  uint64_t v61 = *MEMORY[0x1E4F143B8];
  id v15 = a1;
  id v16 = a2;
  id v17 = a3;
  id v18 = a4;
  id v19 = a5;
  id v20 = a6;
  id v21 = a7;
  uint64_t v22 = (__CFBundle *)INCreateUniqueBundle(v17, v18);
  if (v22)
  {
    id v23 = v22;
    INLocalizedFormatForBundle(v22, v15, v16, v19, a8);
    id v24 = (id)objc_claimAutoreleasedReturnValue();
    CFRelease(v23);
  }
  else
  {
    if (!v17 || !v21) {
      goto LABEL_14;
    }
    uint64_t v47 = 0;
    id v48 = &v47;
    uint64_t v49 = 0x3032000000;
    id v50 = __Block_byref_object_copy__26699;
    uint64_t v51 = __Block_byref_object_dispose__26700;
    id v52 = 0;
    uint64_t v41 = 0;
    unint64_t v42 = &v41;
    uint64_t v43 = 0x3032000000;
    id v44 = __Block_byref_object_copy__26699;
    uint64_t v45 = __Block_byref_object_dispose__26700;
    id v46 = 0;
    id v24 = [MEMORY[0x1E4F1CAD0] setWithObject:v17];
    v33[0] = MEMORY[0x1E4F143A8];
    v33[1] = 3221225472;
    v33[2] = __INLocalizedFormat_block_invoke;
    v33[3] = &unk_1E5517E88;
    id v30 = v17;
    id v34 = v30;
    id v35 = v18;
    id v39 = &v47;
    id v29 = v15;
    id v36 = v29;
    id v37 = v16;
    id v38 = v19;
    uint64_t v40 = &v41;
    id v32 = 0;
    [v21 accessBundleContentForBundleIdentifiers:v24 withBlock:v33 error:&v32];
    id v31 = v32;

    uint64_t v25 = v48[5];
    if (v25)
    {
      if (a8) {
        *a8 = (id) v42[5];
      }
      id v24 = (id)v48[5];
    }
    else if (v31)
    {
      uint64_t v28 = INSiriLogContextIntents;
      if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136315906;
        long long v54 = "INLocalizedFormat";
        __int16 v55 = 2114;
        id v56 = v30;
        __int16 v57 = 2114;
        id v58 = v29;
        __int16 v59 = 2114;
        id v60 = v31;
        _os_log_error_impl(&dword_18CB2F000, v28, OS_LOG_TYPE_ERROR, "%s Failed to access bundle %{public}@ to localize \"%{public}@\": %{public}@", buf, 0x2Au);
      }
    }

    _Block_object_dispose(&v41, 8);
    _Block_object_dispose(&v47, 8);

    if (!v25)
    {
LABEL_14:
      if (v20)
      {
        id v26 = v20;
      }
      else
      {
        if (a8)
        {
          *a8 = [MEMORY[0x1E4F1CA20] currentLocale];
        }
        id v26 = v15;
      }
      id v24 = v26;
    }
  }

  return v24;
}

void sub_18CC54D20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
}

void __INPopulateFormatStringWithArguments_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  unint64_t v4 = *(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 24);
  id v15 = v3;
  uint64_t v5 = [v3 rangeAtIndex:1];
  if (v5 != 0x7FFFFFFFFFFFFFFFLL)
  {
    uint64_t v7 = objc_msgSend(*(id *)(a1 + 32), "substringWithRange:", v5, v6 - 1);
    unint64_t v4 = [v7 integerValue] - 1;
  }
  if (v4 < [*(id *)(a1 + 40) count])
  {
    char v8 = [*(id *)(a1 + 40) objectAtIndex:v4];
    if (objc_opt_respondsToSelector()) {
      [v8 descriptionWithLocale:*(void *)(a1 + 48)];
    }
    else {
    unsigned int v9 = [v8 description];
    }
    uint64_t v10 = [v15 range];
    uint64_t v12 = v11;
    objc_msgSend(*(id *)(a1 + 56), "replaceCharactersInRange:withString:", *(void *)(*(void *)(*(void *)(a1 + 80) + 8) + 24) + v10, v11, v9);
    char v13 = *(void **)(a1 + 64);
    BOOL v14 = (void *)[v9 copy];
    [v13 addObject:v14];

    *(void *)(*(void *)(*(void *)(a1 + 80) + 8) + 24) += [v9 length] - v12;
    ++*(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 24);
  }
}

id INSharedFormatRegularExpression()
{
  if (INSharedFormatRegularExpression_onceToken != -1) {
    dispatch_once(&INSharedFormatRegularExpression_onceToken, &__block_literal_global_26691);
  }
  id v0 = (void *)INSharedFormatRegularExpression_regularExpression;

  return v0;
}

uint64_t __INSharedFormatRegularExpression_block_invoke()
{
  INSharedFormatRegularExpression_regularExpression = [MEMORY[0x1E4F28FD8] regularExpressionWithPattern:@"(?<!%)%([0-9]+\\$)?@" options:0 error:0];

  return MEMORY[0x1F41817F8]();
}

uint64_t INCreateUniqueBundle(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (v3)
  {
    uint64_t v5 = [MEMORY[0x1E4F223F0] bundleProxyForCurrentProcess];
    uint64_t v6 = [v5 bundleIdentifier];
    char v7 = [v6 isEqualToString:v3];

    if ((v7 & 1) == 0)
    {
      uint64_t v8 = [MEMORY[0x1E4F223F0] bundleProxyForIdentifier:v3];

      uint64_t v5 = (void *)v8;
    }
    unsigned int v9 = [v5 bundleURL];
    if ([v9 isFileURL]
      && ([MEMORY[0x1E4F28CB8] defaultManager],
          uint64_t v10 = objc_claimAutoreleasedReturnValue(),
          [v9 path],
          uint64_t v11 = objc_claimAutoreleasedReturnValue(),
          char v12 = [v10 isReadableFileAtPath:v11],
          v11,
          v10,
          (v12 & 1) != 0))
    {
      uint64_t Unique = _CFBundleCreateUnique();

      if (Unique) {
        goto LABEL_13;
      }
    }
    else
    {
    }
  }
  if ([v4 isFileURL]
    && ([MEMORY[0x1E4F28CB8] defaultManager],
        BOOL v14 = objc_claimAutoreleasedReturnValue(),
        [v4 path],
        id v15 = objc_claimAutoreleasedReturnValue(),
        int v16 = [v14 isReadableFileAtPath:v15],
        v15,
        v14,
        v16))
  {
    uint64_t Unique = _CFBundleCreateUnique();
  }
  else
  {
    uint64_t Unique = 0;
  }
LABEL_13:

  return Unique;
}

__CFString *INLocalizedFormatForBundle(__CFBundle *a1, void *a2, void *a3, void *a4, void *a5)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  unsigned int v9 = a2;
  uint64_t v10 = a3;
  id v11 = a4;
  if (v11)
  {
    uint64_t v25 = a5;
    char v12 = [MEMORY[0x1E4F1CA20] preferredLanguages];
    char v13 = (void *)[v12 mutableCopy];

    [v13 insertObject:v11 atIndex:0];
    CFArrayRef v14 = CFBundleCopyBundleLocalizations(a1);
    id v26 = v13;
    CFArrayRef v15 = CFBundleCopyLocalizationsForPreferences(v14, (CFArrayRef)v13);
    CFRelease(v14);
    long long v29 = 0u;
    long long v30 = 0u;
    long long v27 = 0u;
    long long v28 = 0u;
    CFArrayRef v16 = v15;
    uint64_t v17 = [(__CFArray *)v16 countByEnumeratingWithState:&v27 objects:v31 count:16];
    if (v17)
    {
      uint64_t v18 = v17;
      uint64_t v19 = *(void *)v28;
      while (2)
      {
        for (uint64_t i = 0; i != v18; ++i)
        {
          if (*(void *)v28 != v19) {
            objc_enumerationMutation(v16);
          }
          uint64_t v21 = *(void *)(*((void *)&v27 + 1) + 8 * i);
          uint64_t v22 = CFBundleCopyLocalizedStringForLocalization();
          if (v22)
          {
            id v23 = (__CFString *)v22;
            if (v25)
            {
              *uint64_t v25 = [MEMORY[0x1E4F1CA20] localeWithLocaleIdentifier:v21];
            }

            goto LABEL_14;
          }
        }
        uint64_t v18 = [(__CFArray *)v16 countByEnumeratingWithState:&v27 objects:v31 count:16];
        if (v18) {
          continue;
        }
        break;
      }
    }

    id v23 = v9;
LABEL_14:
  }
  else
  {
    if (a5)
    {
      *a5 = [MEMORY[0x1E4F1CA20] currentLocale];
    }
    id v23 = (__CFString *)CFBundleCopyLocalizedString(a1, v9, v9, v10);
  }

  return v23;
}

uint64_t __Block_byref_object_copy__26699(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__26700(uint64_t a1)
{
}

void __INLocalizedFormat_block_invoke(uint64_t a1)
{
  long long v2 = (__CFBundle *)INCreateUniqueBundle(*(void **)(a1 + 32), *(void **)(a1 + 40));
  if (v2)
  {
    id v3 = v2;
    id v4 = *(void **)(a1 + 48);
    uint64_t v5 = *(void **)(a1 + 56);
    uint64_t v6 = *(void **)(a1 + 64);
    id v13 = 0;
    uint64_t v7 = INLocalizedFormatForBundle(v2, v4, v5, v6, &v13);
    id v8 = v13;
    uint64_t v9 = *(void *)(*(void *)(a1 + 72) + 8);
    uint64_t v10 = *(void **)(v9 + 40);
    *(void *)(v9 + 40) = v7;

    uint64_t v11 = *(void *)(*(void *)(a1 + 80) + 8);
    char v12 = *(void **)(v11 + 40);
    *(void *)(v11 + 40) = v8;

    CFRelease(v3);
  }
}

void sub_18CC57494(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__26978(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__26979(uint64_t a1)
{
}

uint64_t _INPBSearchForMessagesIntentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    int v16 = v10 & 7;
    if (v15 || v16 == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t v18 = objc_alloc_init(_INPBIntentMetadata);
        if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_82;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntentMetadata:", v18, 0, 0);
        goto LABEL_67;
      case 2u:
        uint64_t v18 = objc_alloc_init(_INPBContactList);
        if (!PBReaderPlaceMark() || !_INPBContactListReadFrom(v18, a2)) {
          goto LABEL_82;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRecipient:", v18, 0, 0);
        goto LABEL_67;
      case 3u:
        uint64_t v18 = objc_alloc_init(_INPBContactList);
        if (!PBReaderPlaceMark() || !_INPBContactListReadFrom(v18, a2)) {
          goto LABEL_82;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSender:", v18, 0, 0);
        goto LABEL_67;
      case 4u:
        uint64_t v18 = objc_alloc_init(_INPBStringList);
        if (!PBReaderPlaceMark() || !_INPBStringListReadFrom(v18, a2)) {
          goto LABEL_82;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setContent:", v18, 0, 0);
        goto LABEL_67;
      case 5u:
        if (v16 == 2)
        {
          uint64_t result = PBReaderPlaceMark();
          if (!result) {
            return result;
          }
          while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4) && !*(unsigned char *)(a2 + *v5))
          {
            char v20 = 0;
            unsigned int v21 = 0;
            uint64_t v22 = 0;
            while (1)
            {
              uint64_t v23 = *v3;
              unint64_t v24 = *(void *)(a2 + v23);
              if (v24 == -1 || v24 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
              *(void *)(a2 + v23) = v24 + 1;
              v22 |= (unint64_t)(v25 & 0x7F) << v20;
              if (v25 < 0)
              {
                v20 += 7;
                BOOL v14 = v21++ >= 9;
                if (!v14) {
                  continue;
                }
              }
              goto LABEL_45;
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_45:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v28 = 0;
          while (1)
          {
            uint64_t v29 = *v3;
            unint64_t v30 = *(void *)(a2 + v29);
            if (v30 == -1 || v30 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (!v14) {
                continue;
              }
            }
            goto LABEL_79;
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_79:
          PBRepeatedInt32Add();
        }
        goto LABEL_68;
      case 6u:
        uint64_t v18 = objc_alloc_init(_INPBDateTimeRange);
        if (!PBReaderPlaceMark() || (_INPBDateTimeRangeReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_82;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setDateTimeRange:", v18, 0, 0);
        goto LABEL_67;
      case 7u:
        uint64_t v18 = objc_alloc_init(_INPBStringList);
        if (!PBReaderPlaceMark() || !_INPBStringListReadFrom(v18, a2)) {
          goto LABEL_82;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIdentifier:", v18, 0, 0);
        goto LABEL_67;
      case 8u:
        uint64_t v18 = objc_alloc_init(_INPBStringList);
        if (!PBReaderPlaceMark() || !_INPBStringListReadFrom(v18, a2)) {
          goto LABEL_82;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setNotificationIdentifier:", v18, 0, 0);
        goto LABEL_67;
      case 9u:
        uint64_t v18 = objc_alloc_init(_INPBStringList);
        if (!PBReaderPlaceMark() || !_INPBStringListReadFrom(v18, a2)) {
          goto LABEL_82;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSearchTerm:", v18, 0, 0);
        goto LABEL_67;
      case 0xAu:
        uint64_t v18 = objc_alloc_init(_INPBStringList);
        if (!PBReaderPlaceMark() || !_INPBStringListReadFrom(v18, a2)) {
          goto LABEL_82;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setGroupName:", v18, 0, 0);
        goto LABEL_67;
      case 0xBu:
        uint64_t v18 = objc_alloc_init(_INPBDataStringList);
        if (!PBReaderPlaceMark() || !_INPBDataStringListReadFrom(v18, a2)) {
          goto LABEL_82;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSpeakableGroupName:", v18, 0, 0);
        goto LABEL_67;
      case 0xCu:
        uint64_t v18 = objc_alloc_init(_INPBStringList);
        if (PBReaderPlaceMark() && _INPBStringListReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setConversationIdentifier:", v18, 0, 0);
LABEL_67:

LABEL_68:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_82:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_68;
    }
  }
}

uint64_t _INPBTextNoteContentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadString();
        [a1 setText:v17];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _INPBTemperatureValueReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          uint64_t v16 = *v5;
          int v17 = *(unsigned __int8 *)(a2 + v16);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      uint64_t v16 = *v5;
      int v17 = *(unsigned __int8 *)(a2 + v16);
      if (*(unsigned char *)(a2 + v16)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v17 || (v10 & 7) == 4) {
        break;
      }
      unint64_t v19 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        uint64_t v28 = objc_alloc_init(_INPBValueMetadata);
        if (!PBReaderPlaceMark() || (_INPBValueMetadataReadFrom(v28, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setValueMetadata:", v28, 0, 0);
      }
      else if (v19 == 2)
      {
        uint64_t v29 = *v3;
        unint64_t v30 = *(void *)(a2 + v29);
        if (v30 <= 0xFFFFFFFFFFFFFFF7 && v30 + 8 <= *(void *)(a2 + *v4))
        {
          double v31 = *(double *)(*(void *)(a2 + *v7) + v30);
          *(void *)(a2 + v29) = v30 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          double v31 = 0.0;
        }
        [a1 setMagnitude:v31];
      }
      else if (v19 == 3)
      {
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (1)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4)) {
            break;
          }
          char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
          *(void *)(a2 + v23) = v25;
          v22 |= (unint64_t)(v26 & 0x7F) << v20;
          if ((v26 & 0x80) == 0) {
            goto LABEL_37;
          }
          v20 += 7;
          BOOL v15 = v21++ >= 9;
          if (v15)
          {
            uint64_t v27 = 0;
            goto LABEL_40;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_37:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v27 = 0;
        }
        else {
          uint64_t v27 = v22;
        }
LABEL_40:
        [a1 setUnit:v27];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

id _INVCIntentDefinitionManagerClass()
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = 0;
  uint64_t v6 = &v5;
  uint64_t v7 = 0x2050000000;
  id v0 = (void *)getVCIntentDefinitionManagerClass_softClass;
  uint64_t v8 = getVCIntentDefinitionManagerClass_softClass;
  if (!getVCIntentDefinitionManagerClass_softClass)
  {
    *(void *)&long long buf = MEMORY[0x1E4F143A8];
    *((void *)&buf + 1) = 3221225472;
    unint64_t v10 = __getVCIntentDefinitionManagerClass_block_invoke;
    uint64_t v11 = &unk_1E5520EB8;
    uint64_t v12 = &v5;
    __getVCIntentDefinitionManagerClass_block_invoke((uint64_t)&buf);
    id v0 = (void *)v6[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v5, 8);
  if (objc_msgSend(v1, "conformsToProtocol:", &unk_1EDC313B8, v5))
  {
    id v2 = v1;
  }
  else
  {
    id v3 = INSiriLogContextIntents;
    if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_FAULT))
    {
      LODWORD(buf) = 136315138;
      *(void *)((char *)&buf + 4) = "_INVCIntentDefinitionManagerClass";
      _os_log_fault_impl(&dword_18CB2F000, v3, OS_LOG_TYPE_FAULT, "%s VCIntentDefinitionManager doesn't conform to the INVCIntentDefinitionManager protocol.", (uint8_t *)&buf, 0xCu);
    }
    id v2 = 0;
  }

  return v2;
}

void sub_18CC5BF0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

Class __getVCIntentDefinitionManagerClass_block_invoke(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!VoiceShortcutsLibraryCore_frameworkLibrary)
  {
    v4[1] = MEMORY[0x1E4F143A8];
    v4[2] = 3221225472;
    v4[3] = __VoiceShortcutsLibraryCore_block_invoke;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    void v4[5] = v4;
    long long v5 = xmmword_1E5517F38;
    uint64_t v6 = 0;
    VoiceShortcutsLibraryCore_frameworkLibrary = _sl_dlopen();
    id v2 = (void *)v4[0];
    if (!VoiceShortcutsLibraryCore_frameworkLibrary)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("VCIntentDefinitionManager");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    id v2 = (void *)abort_report_np();
LABEL_8:
    free(v2);
  }
  getVCIntentDefinitionManagerClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __VoiceShortcutsLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  VoiceShortcutsLibraryCore_frameworkLibrary = result;
  return result;
}

id _INVCVoiceShortcutClient()
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  SEL v0 = NSSelectorFromString((NSString *)@"standardClient");
  uint64_t v8 = 0;
  unsigned int v9 = &v8;
  uint64_t v10 = 0x2050000000;
  id v1 = (void *)getVCVoiceShortcutClientClass_softClass;
  uint64_t v11 = getVCVoiceShortcutClientClass_softClass;
  if (!getVCVoiceShortcutClientClass_softClass)
  {
    *(void *)&long long buf = MEMORY[0x1E4F143A8];
    *((void *)&buf + 1) = 3221225472;
    uint64_t v13 = __getVCVoiceShortcutClientClass_block_invoke;
    char v14 = &unk_1E5520EB8;
    BOOL v15 = &v8;
    __getVCVoiceShortcutClientClass_block_invoke((uint64_t)&buf);
    id v1 = (void *)v9[3];
  }
  id v2 = v1;
  _Block_object_dispose(&v8, 8);
  if (objc_opt_respondsToSelector())
  {
    id v3 = objc_msgSend(v2, "performSelector:", v0, v8);
    if ([v3 conformsToProtocol:&unk_1EDC31418])
    {
      id v4 = v3;
    }
    else
    {
      uint64_t v6 = INSiriLogContextIntents;
      if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_FAULT))
      {
        LODWORD(buf) = 136315138;
        *(void *)((char *)&buf + 4) = "_INVCVoiceShortcutClient";
        _os_log_fault_impl(&dword_18CB2F000, v6, OS_LOG_TYPE_FAULT, "%s VCVoiceShortcutClient doesn't conform to the INVCVoiceShortcutClient protocol.", (uint8_t *)&buf, 0xCu);
      }
      id v4 = 0;
    }
  }
  else
  {
    long long v5 = INSiriLogContextIntents;
    if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_FAULT))
    {
      LODWORD(buf) = 136315138;
      *(void *)((char *)&buf + 4) = "_INVCVoiceShortcutClient";
      _os_log_fault_impl(&dword_18CB2F000, v5, OS_LOG_TYPE_FAULT, "%s VCVoiceShortcutClient doesn't have a standardClient class method", (uint8_t *)&buf, 0xCu);
    }
    id v4 = 0;
  }

  return v4;
}

void sub_18CC5C308(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

Class __getVCVoiceShortcutClientClass_block_invoke(uint64_t a1)
{
  VoiceShortcutClientLibrary();
  Class result = objc_getClass("VCVoiceShortcutClient");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getVCVoiceShortcutClientClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    abort_report_np();
    return (Class)VoiceShortcutClientLibrary();
  }
  return result;
}

uint64_t VoiceShortcutClientLibrary()
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  v3[0] = 0;
  if (!VoiceShortcutClientLibraryCore_frameworkLibrary_27937)
  {
    v3[1] = MEMORY[0x1E4F143A8];
    v3[2] = 3221225472;
    v3[3] = __VoiceShortcutClientLibraryCore_block_invoke_27938;
    void v3[4] = &__block_descriptor_40_e5_v8__0l;
    void v3[5] = v3;
    long long v4 = xmmword_1E5517F50;
    uint64_t v5 = 0;
    VoiceShortcutClientLibraryCore_frameworkLibrary_27937 = _sl_dlopen();
    id v1 = (void *)v3[0];
    uint64_t v0 = VoiceShortcutClientLibraryCore_frameworkLibrary_27937;
    if (VoiceShortcutClientLibraryCore_frameworkLibrary_27937)
    {
      if (!v3[0]) {
        return v0;
      }
    }
    else
    {
      id v1 = (void *)abort_report_np();
    }
    free(v1);
    return v0;
  }
  return VoiceShortcutClientLibraryCore_frameworkLibrary_27937;
}

uint64_t __VoiceShortcutClientLibraryCore_block_invoke_27938()
{
  uint64_t result = _sl_dlopen();
  VoiceShortcutClientLibraryCore_frameworkLibrary_27937 = result;
  return result;
}

id _INVCVoiceShortcutErrorDomain()
{
  uint64_t v5 = 0;
  uint64_t v6 = &v5;
  uint64_t v7 = 0x2020000000;
  uint64_t v0 = (void **)getVCVoiceShortcutsErrorDomainSymbolLoc_ptr;
  uint64_t v8 = getVCVoiceShortcutsErrorDomainSymbolLoc_ptr;
  if (!getVCVoiceShortcutsErrorDomainSymbolLoc_ptr)
  {
    id v1 = (void *)VoiceShortcutClientLibrary();
    v6[3] = (uint64_t)dlsym(v1, "VCVoiceShortcutsErrorDomain");
    getVCVoiceShortcutsErrorDomainSymbolLoc_ptr = v6[3];
    uint64_t v0 = (void **)v6[3];
  }
  _Block_object_dispose(&v5, 8);
  if (!v0)
  {
    dlerror();
    long long v4 = (_Unwind_Exception *)abort_report_np();
    _Block_object_dispose(&v5, 8);
    _Unwind_Resume(v4);
  }
  id v2 = *v0;

  return v2;
}

void *__getVCVoiceShortcutsErrorDomainSymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = (void *)VoiceShortcutClientLibrary();
  uint64_t result = dlsym(v2, "VCVoiceShortcutsErrorDomain");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getVCVoiceShortcutsErrorDomainSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

id _INItemProviderMetadataFromData(void *a1)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v10 = 0;
  uint64_t v11 = &v10;
  uint64_t v12 = 0x2050000000;
  id v2 = (void *)getWFItemProviderRequestMetadataClass_softClass;
  uint64_t v13 = getWFItemProviderRequestMetadataClass_softClass;
  if (!getWFItemProviderRequestMetadataClass_softClass)
  {
    *(void *)long long buf = MEMORY[0x1E4F143A8];
    *(void *)&buf[8] = 3221225472;
    *(void *)&buf[16] = __getWFItemProviderRequestMetadataClass_block_invoke;
    BOOL v15 = &unk_1E5520EB8;
    uint64_t v16 = &v10;
    __getWFItemProviderRequestMetadataClass_block_invoke((uint64_t)buf);
    id v2 = (void *)v11[3];
  }
  id v3 = v2;
  _Block_object_dispose(&v10, 8);
  id v9 = 0;
  long long v4 = [MEMORY[0x1E4F28DC0] unarchivedObjectOfClass:v3 fromData:v1 error:&v9];
  id v5 = v9;
  if (v4)
  {
    id v6 = v4;
  }
  else
  {
    uint64_t v7 = INSiriLogContextIntents;
    if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 136315650;
      *(void *)&uint8_t buf[4] = "_INItemProviderMetadataFromData";
      *(_WORD *)&buf[12] = 2112;
      *(void *)&buf[14] = v1;
      *(_WORD *)&unsigned char buf[22] = 2112;
      BOOL v15 = v5;
      _os_log_error_impl(&dword_18CB2F000, v7, OS_LOG_TYPE_ERROR, "%s Could not unarchive data %@ with error: %@", buf, 0x20u);
    }
  }

  return v4;
}

void sub_18CC5C840(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getWFItemProviderRequestMetadataClass_block_invoke(uint64_t a1)
{
  VoiceShortcutClientLibrary();
  Class result = objc_getClass("WFItemProviderRequestMetadata");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getWFItemProviderRequestMetadataClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    id v3 = (_INPBSetDefrosterSettingsInCarIntentResponse *)abort_report_np();
    return (Class)[(_INPBSetDefrosterSettingsInCarIntentResponse *)v3 dictionaryRepresentation];
  }
  return result;
}

BOOL _INPBSetDefrosterSettingsInCarIntentResponseReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  SEL v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  id v6 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
      return v7 == 0;
    }
    if (*(unsigned char *)(a2 + *v5))
    {
      int v7 = 1;
      return v7 == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    uint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v6) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        LOBYTE(v10) = 0;
        int v7 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      LOBYTE(v10) = 0;
    }
LABEL_14:
    if (v7) {
      BOOL v15 = 1;
    }
    else {
      BOOL v15 = (v10 & 7) == 4;
    }
    if (v15) {
      return v7 == 0;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      return 0;
    }
  }
}

BOOL _INPBControlHomeIntentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  SEL v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t v17 = objc_alloc_init(_INPBIntentMetadata);
        if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_42;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntentMetadata:", v17, 0, 0);
        goto LABEL_38;
      case 4u:
        uint64_t v17 = objc_alloc_init(_INPBHomeContent);
        if (!PBReaderPlaceMark() || !_INPBHomeContentReadFrom(v17, a2)) {
          goto LABEL_42;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addContents:", v17, 0, 0);
        }
        goto LABEL_38;
      case 5u:
        uint64_t v17 = objc_alloc_init(_INPBHomeUserTask);
        if (!PBReaderPlaceMark() || (_INPBHomeUserTaskReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_42;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setUserTask:", v17, 0, 0);
        goto LABEL_38;
      case 6u:
        uint64_t v17 = objc_alloc_init(_INPBHomeFilter);
        if (!PBReaderPlaceMark() || !_INPBHomeFilterReadFrom(v17, a2)) {
          goto LABEL_42;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addFilters:", v17, 0, 0);
        }
        goto LABEL_38;
      case 7u:
        uint64_t v17 = objc_alloc_init(_INPBDateTimeRange);
        if PBReaderPlaceMark() && (_INPBDateTimeRangeReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setTime:", v17, 0, 0);
LABEL_38:

LABEL_39:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_42:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_39;
    }
  }
}

BOOL _INPBIntentSupportReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  SEL v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        uint64_t v18 = objc_alloc_init(_INPBIntentType);
        if (!PBReaderPlaceMark() || !_INPBIntentTypeReadFrom(v18, a2))
        {
LABEL_36:

          return 0;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addIntentsSupported:", v18, 0, 0);
        }
        goto LABEL_31;
      }
      if (v17 == 3) {
        break;
      }
      if (v17 == 2)
      {
        uint64_t v18 = objc_alloc_init(_INPBIntentType);
        if (!PBReaderPlaceMark() || !_INPBIntentTypeReadFrom(v18, a2)) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addIntentsRestrictedWhileLocked:", v18, 0, 0);
        }
        goto LABEL_31;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_33:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    PBReaderReadString();
    uint64_t v18 = (_INPBIntentType *)objc_claimAutoreleasedReturnValue();
    if (v18) {
      [a1 addSupportedMediaCategories:v18];
    }
LABEL_31:

    goto LABEL_33;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _INPBGetRideStatusIntentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  SEL v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = objc_alloc_init(_INPBIntentMetadata);
        if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntentMetadata:", v17, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t INBalanceTypeHasBackingType(unint64_t a1)
{
  return (a1 < 4) & (0xEu >> (a1 & 0xF));
}

uint64_t INBalanceTypeGetBackingType(uint64_t result)
{
  if ((unint64_t)(result - 1) < 3) {
    return result;
  }
  else {
    return 0x7FFFFFFFLL;
  }
}

uint64_t INBalanceTypeGetFacadeType(int a1, int a2)
{
  uint64_t v2 = (a2 - 1);
  if (v2 <= 2) {
    uint64_t v3 = v2 + 1;
  }
  else {
    uint64_t v3 = 0;
  }
  if (a1) {
    return v3;
  }
  else {
    return 0;
  }
}

__CFString *INBalanceTypeGetName(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2) {
    return @"unknown";
  }
  else {
    return off_1E5517F68[a1 - 1];
  }
}

uint64_t INBalanceTypeWithString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"money"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"points"])
  {
    uint64_t v2 = 2;
  }
  else if ([v1 isEqualToString:@"miles"])
  {
    uint64_t v2 = 3;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INBalanceTypeGetLocalizedName(uint64_t a1, void *a2)
{
  id v3 = a2;
  switch(a1)
  {
    case 3:
      SEL v4 = @"miles";
      goto LABEL_7;
    case 2:
      SEL v4 = @"points";
      goto LABEL_7;
    case 1:
      SEL v4 = @"money";
LABEL_7:
      id v5 = INLocalizedStringWithLocalizer(v4, v4, v3);
      goto LABEL_9;
  }
  id v5 = 0;
LABEL_9:

  return v5;
}

uint64_t _INPBImageNoteContentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  SEL v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = objc_alloc_init(_INPBImageValue);
        if (!PBReaderPlaceMark() || (_INPBImageValueReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setImage:", v17, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t INRidePhaseHasBackingType(unint64_t a1)
{
  return (a1 < 7) & (0x7Eu >> a1);
}

uint64_t INRidePhaseGetBackingType(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 5) {
    return 0x7FFFFFFFLL;
  }
  else {
    return dword_18CFC43B0[a1 - 1];
  }
}

uint64_t INRidePhaseGetFacadeType(int a1, int a2)
{
  if (a1 && (a2 - 1) <= 6) {
    return qword_18CFC43C8[a2 - 1];
  }
  else {
    return 0;
  }
}

__CFString *INRidePhaseGetName(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 5) {
    return @"unknown";
  }
  else {
    return off_1E5517F80[a1 - 1];
  }
}

uint64_t INRidePhaseWithString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"received"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"confirmed"])
  {
    uint64_t v2 = 2;
  }
  else if ([v1 isEqualToString:@"ongoing"])
  {
    uint64_t v2 = 3;
  }
  else if ([v1 isEqualToString:@"completed"])
  {
    uint64_t v2 = 4;
  }
  else if ([v1 isEqualToString:@"approachingPickup"])
  {
    uint64_t v2 = 5;
  }
  else if ([v1 isEqualToString:@"pickup"])
  {
    uint64_t v2 = 6;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INRidePhaseGetLocalizedName(uint64_t a1, void *a2)
{
  id v3 = a2;
  switch(a1)
  {
    case 1:
      SEL v4 = @"received";
      goto LABEL_9;
    case 2:
      SEL v4 = @"confirmed";
      goto LABEL_9;
    case 3:
      SEL v4 = @"ongoing";
      goto LABEL_9;
    case 4:
      SEL v4 = @"completed";
      goto LABEL_9;
    case 5:
      SEL v4 = @"approaching pickup";
      goto LABEL_9;
    case 6:
      SEL v4 = @"pickup";
LABEL_9:
      id v5 = INLocalizedStringWithLocalizer(v4, v4, v3);
      break;
    default:
      id v5 = 0;
      break;
  }

  return v5;
}

uint64_t _INPBDeleteTimerIntentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  SEL v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        uint64_t v24 = objc_alloc_init(_INPBIntentMetadata);
        if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v24, a2) & 1) == 0)
        {
LABEL_43:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntentMetadata:", v24, 0, 0);
      }
      else
      {
        if (v17 != 3)
        {
          if (v17 == 2)
          {
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            while (1)
            {
              uint64_t v21 = *v3;
              unint64_t v22 = *(void *)(a2 + v21);
              if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
              *(void *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0) {
                goto LABEL_38;
              }
              v18 += 7;
              BOOL v14 = v19++ >= 9;
              if (v14)
              {
                uint64_t v20 = 0;
                goto LABEL_40;
              }
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_38:
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v20 = 0;
            }
LABEL_40:
            [a1 setDeleteMultiple:v20 != 0];
          }
          else
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
          }
          continue;
        }
        uint64_t v24 = objc_alloc_init(_INPBTimer);
        if (!PBReaderPlaceMark() || (_INPBTimerReadFrom(v24, a2) & 1) == 0) {
          goto LABEL_43;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTargetTimer:", v24, 0, 0);
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

id INIntentResponseObserverXPCInterface()
{
  uint64_t v0 = [MEMORY[0x1E4F29280] interfaceWithProtocol:&unk_1EDC31508];
  [v0 setClass:objc_opt_class() forSelector:sel_intentResponseDidUpdate_withSerializedCacheItems_ argumentIndex:0 ofReply:0];
  id v1 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v2 = objc_opt_class();
  id v3 = objc_msgSend(v1, "setWithObjects:", v2, objc_opt_class(), 0);
  [v0 setClasses:v3 forSelector:sel_intentResponseDidUpdate_withSerializedCacheItems_ argumentIndex:1 ofReply:0];

  return v0;
}

__CFString *INSetProfileInCarIntentResponseCodeGetName(unint64_t a1)
{
  if (a1 > 5) {
    return 0;
  }
  else {
    return off_1E5517FD0[a1];
  }
}

BOOL _INPBPlayVoicemailIntentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  SEL v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 1) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        PBReaderReadString();
        unint64_t v17 = (_INPBIntentMetadata *)objc_claimAutoreleasedReturnValue();
        [a1 setCallRecordIdentifier:v17];
LABEL_24:

        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_26:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unint64_t v17 = objc_alloc_init(_INPBIntentMetadata);
    if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v17, a2) & 1) == 0)
    {

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setIntentMetadata:", v17, 0, 0);
    goto LABEL_24;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void sub_18CC65ECC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose((const void *)(v8 - 64), 8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__29633(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__29634(uint64_t a1)
{
}

Class __getAFPreferencesClass_block_invoke(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!AssistantServicesLibraryCore_frameworkLibrary)
  {
    v4[1] = MEMORY[0x1E4F143A8];
    v4[2] = 3221225472;
    v4[3] = __AssistantServicesLibraryCore_block_invoke;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    void v4[5] = v4;
    long long v5 = xmmword_1E55180C8;
    uint64_t v6 = 0;
    AssistantServicesLibraryCore_frameworkLibrary = _sl_dlopen();
    uint64_t v2 = (void *)v4[0];
    if (!AssistantServicesLibraryCore_frameworkLibrary)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("AFPreferences");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    uint64_t v2 = (void *)abort_report_np();
LABEL_8:
    free(v2);
  }
  getAFPreferencesClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __AssistantServicesLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  AssistantServicesLibraryCore_frameworkLibrary = result;
  return result;
}

void sub_18CC66278(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _INPBModifyRelationshipReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  SEL v4 = (int *)MEMORY[0x1E4F940E0];
  long long v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v23 = objc_alloc_init(_INPBString);
        if (!PBReaderPlaceMark() || (_INPBStringReadFrom(v23, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTargetRelationship:", v23, 0, 0);
      }
      else if ((v10 >> 3) == 2)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_33;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_35;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_35:
        [a1 setIsRemoval:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _INPBStartPhotoPlaybackIntentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  SEL v4 = (int *)MEMORY[0x1E4F940E0];
  long long v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    int v16 = v10 & 7;
    if (v15 || v16 == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unsigned int v18 = objc_alloc_init(_INPBIntentMetadata);
        if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_87;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntentMetadata:", v18, 0, 0);
        goto LABEL_65;
      case 2u:
        unsigned int v18 = objc_alloc_init(_INPBDateTimeRange);
        if (!PBReaderPlaceMark() || (_INPBDateTimeRangeReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_87;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setDateCreated:", v18, 0, 0);
        goto LABEL_65;
      case 3u:
        unsigned int v18 = objc_alloc_init(_INPBLocation);
        if (!PBReaderPlaceMark() || (_INPBLocationReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_87;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLocationCreated:", v18, 0, 0);
        goto LABEL_65;
      case 5u:
        unsigned int v18 = objc_alloc_init(_INPBString);
        if (!PBReaderPlaceMark() || (_INPBStringReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_87;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAlbumName:", v18, 0, 0);
        goto LABEL_65;
      case 7u:
        unsigned int v18 = objc_alloc_init(_INPBStringList);
        if (!PBReaderPlaceMark() || !_INPBStringListReadFrom(v18, a2)) {
          goto LABEL_87;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSearchTerm:", v18, 0, 0);
        goto LABEL_65;
      case 8u:
        if (v16 != 2)
        {
          char v32 = 0;
          unsigned int v33 = 0;
          uint64_t v34 = 0;
          while (1)
          {
            uint64_t v35 = *v3;
            unint64_t v36 = *(void *)(a2 + v35);
            if (v36 == -1 || v36 >= *(void *)(a2 + *v4)) {
              goto LABEL_83;
            }
            char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
            *(void *)(a2 + v35) = v36 + 1;
            v34 |= (unint64_t)(v37 & 0x7F) << v32;
            if (v37 < 0)
            {
              v32 += 7;
              BOOL v14 = v33++ >= 9;
              if (!v14) {
                continue;
              }
            }
            goto LABEL_84;
          }
        }
        uint64_t result = PBReaderPlaceMark();
        if (!result) {
          return result;
        }
        while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4) && !*(unsigned char *)(a2 + *v5))
        {
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          while (1)
          {
            uint64_t v23 = *v3;
            unint64_t v24 = *(void *)(a2 + v23);
            if (v24 == -1 || v24 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v24 + 1;
            v22 |= (unint64_t)(v25 & 0x7F) << v20;
            if (v25 < 0)
            {
              v20 += 7;
              BOOL v14 = v21++ >= 9;
              if (!v14) {
                continue;
              }
            }
            goto LABEL_48;
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_48:
          PBRepeatedInt32Add();
        }
        goto LABEL_68;
      case 9u:
        if (v16 == 2)
        {
          uint64_t result = PBReaderPlaceMark();
          if (!result) {
            return result;
          }
          while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4) && !*(unsigned char *)(a2 + *v5))
          {
            char v26 = 0;
            unsigned int v27 = 0;
            uint64_t v28 = 0;
            while (1)
            {
              uint64_t v29 = *v3;
              unint64_t v30 = *(void *)(a2 + v29);
              if (v30 == -1 || v30 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
              *(void *)(a2 + v29) = v30 + 1;
              v28 |= (unint64_t)(v31 & 0x7F) << v26;
              if (v31 < 0)
              {
                v26 += 7;
                BOOL v14 = v27++ >= 9;
                if (!v14) {
                  continue;
                }
              }
              goto LABEL_61;
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_61:
            PBRepeatedInt32Add();
          }
LABEL_68:
          PBReaderRecallMark();
        }
        else
        {
          char v38 = 0;
          unsigned int v39 = 0;
          uint64_t v40 = 0;
          while (1)
          {
            uint64_t v41 = *v3;
            unint64_t v42 = *(void *)(a2 + v41);
            if (v42 == -1 || v42 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v43 = *(unsigned char *)(*(void *)(a2 + *v7) + v42);
            *(void *)(a2 + v41) = v42 + 1;
            v40 |= (unint64_t)(v43 & 0x7F) << v38;
            if (v43 < 0)
            {
              v38 += 7;
              BOOL v14 = v39++ >= 9;
              if (!v14) {
                continue;
              }
            }
            goto LABEL_84;
          }
LABEL_83:
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_84:
          PBRepeatedInt32Add();
        }
        goto LABEL_66;
      case 0xAu:
        unsigned int v18 = objc_alloc_init(_INPBContactList);
        if (PBReaderPlaceMark() && _INPBContactListReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setPeopleInPhoto:", v18, 0, 0);
LABEL_65:

LABEL_66:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_87:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_66;
    }
  }
}

INFlightReservation *INIntentSlotValueTransformFromFlightReservation(INFlightReservation *a1)
{
  if (a1)
  {
    uint64_t v2 = a1;
    id v3 = [(INFlightReservation *)v2 reservation];
    SEL v4 = [INFlightReservation alloc];
    uint64_t v23 = [v3 itemReference];
    unint64_t v24 = INIntentSlotValueTransformFromDataString(v23);
    long long v5 = [v3 reservationNumber];
    uint64_t v22 = [v3 bookingTime];
    char v20 = INIntentSlotValueTransformFromTimestamp(v22);
    int v6 = [v3 hasReservationStatus];
    uint64_t v7 = [v3 reservationStatus] - 2;
    if (v7 <= 3) {
      char v8 = (void *)(v7 + 1);
    }
    else {
      char v8 = 0;
    }
    if (!v6) {
      char v8 = 0;
    }
    id v17 = v8;
    int v16 = [v3 reservationHolderName];
    unsigned int v21 = [v3 actions];
    int v15 = INIntentSlotValueTransformFromReservationActions(v21);
    uint64_t v19 = [v3 url];
    unsigned int v9 = INIntentSlotValueTransformFromURLValue(v19);
    unint64_t v10 = [(INFlightReservation *)v2 reservedSeat];
    uint64_t v11 = INIntentSlotValueTransformFromSeat(v10);
    unint64_t v12 = [(INFlightReservation *)v2 flight];

    char v13 = INIntentSlotValueTransformFromFlight(v12);
    unsigned int v18 = [(INFlightReservation *)v4 initWithItemReference:v24 reservationNumber:v5 bookingTime:v20 reservationStatus:v17 reservationHolderName:v16 actions:v15 URL:v9 reservedSeat:v11 flight:v13];

    a1 = v18;
    uint64_t v1 = vars8;
  }
  return a1;
}

_INPBFlightReservation *INIntentSlotValueTransformToFlightReservation(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    uint64_t v2 = objc_alloc_init(_INPBReservation);
    id v3 = [v1 itemReference];
    SEL v4 = INIntentSlotValueTransformToDataString(v3);
    [(_INPBReservation *)v2 setItemReference:v4];

    long long v5 = [v1 reservationNumber];
    [(_INPBReservation *)v2 setReservationNumber:v5];

    int v6 = [v1 bookingTime];
    uint64_t v7 = INIntentSlotValueTransformToTimestamp(v6);
    [(_INPBReservation *)v2 setBookingTime:v7];

    unint64_t v8 = [v1 reservationStatus];
    if (v8 < 5) {
      uint64_t v9 = (v8 + 1);
    }
    else {
      uint64_t v9 = 0x7FFFFFFFLL;
    }
    [(_INPBReservation *)v2 setReservationStatus:v9];
    unint64_t v10 = [v1 reservationHolderName];
    [(_INPBReservation *)v2 setReservationHolderName:v10];

    uint64_t v11 = [v1 actions];
    unint64_t v12 = INIntentSlotValueTransformToReservationActions(v11);
    [(_INPBReservation *)v2 setActions:v12];

    char v13 = [v1 URL];
    BOOL v14 = INIntentSlotValueTransformToURLValue(v13);
    [(_INPBReservation *)v2 setUrl:v14];

    int v15 = objc_alloc_init(_INPBFlightReservation);
    [(_INPBFlightReservation *)v15 setReservation:v2];
    int v16 = [v1 reservedSeat];
    id v17 = INIntentSlotValueTransformToSeat(v16);
    [(_INPBFlightReservation *)v15 setReservedSeat:v17];

    unsigned int v18 = [v1 flight];

    uint64_t v19 = INIntentSlotValueTransformToFlight(v18);
    [(_INPBFlightReservation *)v15 setFlight:v19];
  }
  else
  {
    int v15 = 0;
  }

  return v15;
}

id INIntentSlotValueTransformFromFlightReservations(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          unint64_t v8 = INIntentSlotValueTransformFromFlightReservation(*(INFlightReservation **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    uint64_t v9 = (void *)[v2 copy];
  }
  else
  {
    uint64_t v9 = 0;
  }

  return v9;
}

id INIntentSlotValueTransformToFlightReservations(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          unint64_t v8 = INIntentSlotValueTransformToFlightReservation(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    uint64_t v9 = (void *)[v2 copy];
  }
  else
  {
    uint64_t v9 = 0;
  }

  return v9;
}

id INIntentSlotValueRedactedFlightReservationFromFlightReservation(void *a1)
{
  id v1 = a1;

  return v1;
}

uint64_t INWellnessObjectTypeHasBackingType(uint64_t a1)
{
  switch(a1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
      uint64_t result = 1;
      break;
    default:
      uint64_t result = 0;
      break;
  }
  return result;
}

unint64_t INWellnessObjectTypeGetBackingType(unint64_t result)
{
  if (result >= 0x4B) {
    return 0x7FFFFFFFLL;
  }
  else {
    return result;
  }
}

uint64_t INWellnessObjectTypeGetFacadeType(int a1, int a2)
{
  uint64_t v2 = (a2 - 1);
  if (v2 <= 0x49) {
    uint64_t v3 = v2 + 1;
  }
  else {
    uint64_t v3 = 0;
  }
  if (a1) {
    return v3;
  }
  else {
    return 0;
  }
}

__CFString *INWellnessObjectTypeGetName(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 0x49) {
    return @"unknown";
  }
  else {
    return off_1E55180E0[a1 - 1];
  }
}

uint64_t INWellnessObjectTypeWithString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"basalBodyTemperature"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"biotin"])
  {
    uint64_t v2 = 2;
  }
  else if ([v1 isEqualToString:@"bloodAlcoholContent"])
  {
    uint64_t v2 = 3;
  }
  else if ([v1 isEqualToString:@"bloodGlucose"])
  {
    uint64_t v2 = 4;
  }
  else if ([v1 isEqualToString:@"bloodPressure"])
  {
    uint64_t v2 = 5;
  }
  else if ([v1 isEqualToString:@"bloodPressureDiastolic"])
  {
    uint64_t v2 = 6;
  }
  else if ([v1 isEqualToString:@"bloodPressureSystolic"])
  {
    uint64_t v2 = 7;
  }
  else if ([v1 isEqualToString:@"bloodType"])
  {
    uint64_t v2 = 8;
  }
  else if ([v1 isEqualToString:@"bodyFatPercentage"])
  {
    uint64_t v2 = 9;
  }
  else if ([v1 isEqualToString:@"bodyMassIndex"])
  {
    uint64_t v2 = 10;
  }
  else if ([v1 isEqualToString:@"bodyTemperature"])
  {
    uint64_t v2 = 11;
  }
  else if ([v1 isEqualToString:@"caffeine"])
  {
    uint64_t v2 = 12;
  }
  else if ([v1 isEqualToString:@"calcium"])
  {
    uint64_t v2 = 13;
  }
  else if ([v1 isEqualToString:@"carbohydrates"])
  {
    uint64_t v2 = 14;
  }
  else if ([v1 isEqualToString:@"chloride"])
  {
    uint64_t v2 = 15;
  }
  else if ([v1 isEqualToString:@"chromium"])
  {
    uint64_t v2 = 16;
  }
  else if ([v1 isEqualToString:@"copper"])
  {
    uint64_t v2 = 17;
  }
  else if ([v1 isEqualToString:@"dietaryCholesterol"])
  {
    uint64_t v2 = 18;
  }
  else if ([v1 isEqualToString:@"dietarySugar"])
  {
    uint64_t v2 = 19;
  }
  else if ([v1 isEqualToString:@"electrodermalActivity"])
  {
    uint64_t v2 = 20;
  }
  else if ([v1 isEqualToString:@"energyConsumed"])
  {
    uint64_t v2 = 21;
  }
  else if ([v1 isEqualToString:@"fatMonounSaturated"])
  {
    uint64_t v2 = 22;
  }
  else if ([v1 isEqualToString:@"fatPolyunSaturated"])
  {
    uint64_t v2 = 23;
  }
  else if ([v1 isEqualToString:@"fatSaturated"])
  {
    uint64_t v2 = 24;
  }
  else if ([v1 isEqualToString:@"fatTotal"])
  {
    uint64_t v2 = 25;
  }
  else if ([v1 isEqualToString:@"fiber"])
  {
    uint64_t v2 = 26;
  }
  else if ([v1 isEqualToString:@"folate"])
  {
    uint64_t v2 = 27;
  }
  else if ([v1 isEqualToString:@"forcedExpiratoryVolume"])
  {
    uint64_t v2 = 28;
  }
  else if ([v1 isEqualToString:@"forcedVitalCapacity"])
  {
    uint64_t v2 = 29;
  }
  else if ([v1 isEqualToString:@"heartRate"])
  {
    uint64_t v2 = 30;
  }
  else if ([v1 isEqualToString:@"heartRateVariabilitySdnn"])
  {
    uint64_t v2 = 31;
  }
  else if ([v1 isEqualToString:@"height"])
  {
    uint64_t v2 = 32;
  }
  else if ([v1 isEqualToString:@"inhalerUsage"])
  {
    uint64_t v2 = 33;
  }
  else if ([v1 isEqualToString:@"insulinDelivery"])
  {
    uint64_t v2 = 34;
  }
  else if ([v1 isEqualToString:@"iodine"])
  {
    uint64_t v2 = 35;
  }
  else if ([v1 isEqualToString:@"iron"])
  {
    uint64_t v2 = 36;
  }
  else if ([v1 isEqualToString:@"leanBodyMass"])
  {
    uint64_t v2 = 37;
  }
  else if ([v1 isEqualToString:@"magnesium"])
  {
    uint64_t v2 = 38;
  }
  else if ([v1 isEqualToString:@"manganese"])
  {
    uint64_t v2 = 39;
  }
  else if ([v1 isEqualToString:@"molybdenum"])
  {
    uint64_t v2 = 40;
  }
  else if ([v1 isEqualToString:@"niacin"])
  {
    uint64_t v2 = 41;
  }
  else if ([v1 isEqualToString:@"numberOfTimesFallen"])
  {
    uint64_t v2 = 42;
  }
  else if ([v1 isEqualToString:@"oxygenSaturation"])
  {
    uint64_t v2 = 43;
  }
  else if ([v1 isEqualToString:@"pantothenicAcid"])
  {
    uint64_t v2 = 44;
  }
  else if ([v1 isEqualToString:@"peakExpiratoryFlowRate"])
  {
    uint64_t v2 = 45;
  }
  else if ([v1 isEqualToString:@"peripheralPerfusionIndex"])
  {
    uint64_t v2 = 46;
  }
  else if ([v1 isEqualToString:@"phosphorus"])
  {
    uint64_t v2 = 47;
  }
  else if ([v1 isEqualToString:@"potassium"])
  {
    uint64_t v2 = 48;
  }
  else if ([v1 isEqualToString:@"protein"])
  {
    uint64_t v2 = 49;
  }
  else if ([v1 isEqualToString:@"respiratoryRate"])
  {
    uint64_t v2 = 50;
  }
  else if ([v1 isEqualToString:@"restingheartRate"])
  {
    uint64_t v2 = 51;
  }
  else if ([v1 isEqualToString:@"riboflavin"])
  {
    uint64_t v2 = 52;
  }
  else if ([v1 isEqualToString:@"selenium"])
  {
    uint64_t v2 = 53;
  }
  else if ([v1 isEqualToString:@"sodium"])
  {
    uint64_t v2 = 54;
  }
  else if ([v1 isEqualToString:@"thiamin"])
  {
    uint64_t v2 = 55;
  }
  else if ([v1 isEqualToString:@"uvIndex"])
  {
    uint64_t v2 = 56;
  }
  else if ([v1 isEqualToString:@"vitaminA"])
  {
    uint64_t v2 = 57;
  }
  else if ([v1 isEqualToString:@"vitaminB12"])
  {
    uint64_t v2 = 58;
  }
  else if ([v1 isEqualToString:@"vitaminB6"])
  {
    uint64_t v2 = 59;
  }
  else if ([v1 isEqualToString:@"vitaminC"])
  {
    uint64_t v2 = 60;
  }
  else if ([v1 isEqualToString:@"vitaminD"])
  {
    uint64_t v2 = 61;
  }
  else if ([v1 isEqualToString:@"vitaminE"])
  {
    uint64_t v2 = 62;
  }
  else if ([v1 isEqualToString:@"vitaminK"])
  {
    uint64_t v2 = 63;
  }
  else if ([v1 isEqualToString:@"waistCircumference"])
  {
    uint64_t v2 = 64;
  }
  else if ([v1 isEqualToString:@"walkingHeartRateAverage"])
  {
    uint64_t v2 = 65;
  }
  else if ([v1 isEqualToString:@"water"])
  {
    uint64_t v2 = 66;
  }
  else if ([v1 isEqualToString:@"weight"])
  {
    uint64_t v2 = 67;
  }
  else if ([v1 isEqualToString:@"zinc"])
  {
    uint64_t v2 = 68;
  }
  else if ([v1 isEqualToString:@"cervicalMucusQuality"])
  {
    uint64_t v2 = 69;
  }
  else if ([v1 isEqualToString:@"ovulationTestResult"])
  {
    uint64_t v2 = 70;
  }
  else if ([v1 isEqualToString:@"menstrualFlow"])
  {
    uint64_t v2 = 71;
  }
  else if ([v1 isEqualToString:@"intermenstrualBleeding"])
  {
    uint64_t v2 = 72;
  }
  else if ([v1 isEqualToString:@"sexualActivity"])
  {
    uint64_t v2 = 73;
  }
  else if ([v1 isEqualToString:@"mindfulSession"])
  {
    uint64_t v2 = 74;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INWellnessObjectTypeGetLocalizedName(uint64_t a1, void *a2)
{
  id v3 = a2;
  switch(a1)
  {
    case 1:
      uint64_t v4 = @"basal body temperature";
      goto LABEL_77;
    case 2:
      uint64_t v4 = @"biotin";
      goto LABEL_77;
    case 3:
      uint64_t v4 = @"blood alcohol content";
      goto LABEL_77;
    case 4:
      uint64_t v4 = @"blood glucose";
      goto LABEL_77;
    case 5:
      uint64_t v4 = @"blood pressure";
      goto LABEL_77;
    case 6:
      uint64_t v4 = @"blood pressure diastolic";
      goto LABEL_77;
    case 7:
      uint64_t v4 = @"blood pressure systolic";
      goto LABEL_77;
    case 8:
      uint64_t v4 = @"blood type";
      goto LABEL_77;
    case 9:
      uint64_t v4 = @"body fat percentage";
      goto LABEL_77;
    case 10:
      uint64_t v4 = @"body mass index";
      goto LABEL_77;
    case 11:
      uint64_t v4 = @"body temperature";
      goto LABEL_77;
    case 12:
      uint64_t v4 = @"caffeine";
      goto LABEL_77;
    case 13:
      uint64_t v4 = @"calcium";
      goto LABEL_77;
    case 14:
      uint64_t v4 = @"carbohydrates";
      goto LABEL_77;
    case 15:
      uint64_t v4 = @"chloride";
      goto LABEL_77;
    case 16:
      uint64_t v4 = @"chromium";
      goto LABEL_77;
    case 17:
      uint64_t v4 = @"copper";
      goto LABEL_77;
    case 18:
      uint64_t v4 = @"dietary cholesterol";
      goto LABEL_77;
    case 19:
      uint64_t v4 = @"dietary sugar";
      goto LABEL_77;
    case 20:
      uint64_t v4 = @"electrodermal activity";
      goto LABEL_77;
    case 21:
      uint64_t v4 = @"energy consumed";
      goto LABEL_77;
    case 22:
      uint64_t v4 = @"fat monoun saturated";
      goto LABEL_77;
    case 23:
      uint64_t v4 = @"fat polyun saturated";
      goto LABEL_77;
    case 24:
      uint64_t v4 = @"fat saturated";
      goto LABEL_77;
    case 25:
      uint64_t v4 = @"fat total";
      goto LABEL_77;
    case 26:
      uint64_t v4 = @"fiber";
      goto LABEL_77;
    case 27:
      uint64_t v4 = @"folate";
      goto LABEL_77;
    case 28:
      uint64_t v4 = @"forced expiratory volume";
      goto LABEL_77;
    case 29:
      uint64_t v4 = @"forced vital capacity";
      goto LABEL_77;
    case 30:
      uint64_t v4 = @"heart rate";
      goto LABEL_77;
    case 31:
      uint64_t v4 = @"heart rate variability sdnn";
      goto LABEL_77;
    case 32:
      uint64_t v4 = @"height";
      goto LABEL_77;
    case 33:
      uint64_t v4 = @"inhaler usage";
      goto LABEL_77;
    case 34:
      uint64_t v4 = @"insulin delivery";
      goto LABEL_77;
    case 35:
      uint64_t v4 = @"iodine";
      goto LABEL_77;
    case 36:
      uint64_t v4 = @"iron";
      goto LABEL_77;
    case 37:
      uint64_t v4 = @"lean body mass";
      goto LABEL_77;
    case 38:
      uint64_t v4 = @"magnesium";
      goto LABEL_77;
    case 39:
      uint64_t v4 = @"manganese";
      goto LABEL_77;
    case 40:
      uint64_t v4 = @"molybdenum";
      goto LABEL_77;
    case 41:
      uint64_t v4 = @"niacin";
      goto LABEL_77;
    case 42:
      uint64_t v4 = @"number of times fallen";
      goto LABEL_77;
    case 43:
      uint64_t v4 = @"oxygen saturation";
      goto LABEL_77;
    case 44:
      uint64_t v4 = @"pantothenic acid";
      goto LABEL_77;
    case 45:
      uint64_t v4 = @"peak expiratory flow rate";
      goto LABEL_77;
    case 46:
      uint64_t v4 = @"peripheral perfusion index";
      goto LABEL_77;
    case 47:
      uint64_t v4 = @"phosphorus";
      goto LABEL_77;
    case 48:
      uint64_t v4 = @"potassium";
      goto LABEL_77;
    case 49:
      uint64_t v4 = @"protein";
      goto LABEL_77;
    case 50:
      uint64_t v4 = @"respiratory rate";
      goto LABEL_77;
    case 51:
      uint64_t v4 = @"restingheart rate";
      goto LABEL_77;
    case 52:
      uint64_t v4 = @"riboflavin";
      goto LABEL_77;
    case 53:
      uint64_t v4 = @"selenium";
      goto LABEL_77;
    case 54:
      uint64_t v4 = @"sodium";
      goto LABEL_77;
    case 55:
      uint64_t v4 = @"thiamin";
      goto LABEL_77;
    case 56:
      uint64_t v4 = @"uv index";
      goto LABEL_77;
    case 57:
      uint64_t v4 = @"vitamin a";
      goto LABEL_77;
    case 58:
      uint64_t v4 = @"vitamin b12";
      goto LABEL_77;
    case 59:
      uint64_t v4 = @"vitamin b6";
      goto LABEL_77;
    case 60:
      uint64_t v4 = @"vitamin c";
      goto LABEL_77;
    case 61:
      uint64_t v4 = @"vitamin d";
      goto LABEL_77;
    case 62:
      uint64_t v4 = @"vitamin e";
      goto LABEL_77;
    case 63:
      uint64_t v4 = @"vitamin k";
      goto LABEL_77;
    case 64:
      uint64_t v4 = @"waist circumference";
      goto LABEL_77;
    case 65:
      uint64_t v4 = @"walking heart rate average";
      goto LABEL_77;
    case 66:
      uint64_t v4 = @"water";
      goto LABEL_77;
    case 67:
      uint64_t v4 = @"weight";
      goto LABEL_77;
    case 68:
      uint64_t v4 = @"zinc";
      goto LABEL_77;
    case 69:
      uint64_t v4 = @"cervical mucus quality";
      goto LABEL_77;
    case 70:
      uint64_t v4 = @"ovulation test result";
      goto LABEL_77;
    case 71:
      uint64_t v4 = @"menstrual flow";
      goto LABEL_77;
    case 72:
      uint64_t v4 = @"intermenstrual bleeding";
      goto LABEL_77;
    case 73:
      uint64_t v4 = @"sexual activity";
      goto LABEL_77;
    case 74:
      uint64_t v4 = @"mindful session";
LABEL_77:
      uint64_t v5 = INLocalizedStringWithLocalizer(v4, v4, v3);
      break;
    default:
      uint64_t v5 = 0;
      break;
  }

  return v5;
}

INSpatialEventTrigger *INIntentSlotValueTransformFromSpatialEventTrigger(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    uint64_t v2 = [INSpatialEventTrigger alloc];
    id v3 = [v1 location];
    uint64_t v4 = INIntentSlotValueTransformFromLocationValue(v3);
    int v5 = [v1 hasEvent];
    int v6 = [v1 event];
    uint64_t v7 = v6 == 10;
    if (v6 == 20) {
      uint64_t v7 = 2;
    }
    if (v5) {
      uint64_t v8 = v7;
    }
    else {
      uint64_t v8 = 0;
    }
    uint64_t v9 = [v1 suggestedValues];
    unint64_t v10 = INIntentSlotValueTransformFromLocationValues(v9);
    unsigned int v11 = [v1 hasMobileSpace];
    int v12 = [v1 mobileSpace];

    if (v12 == 1) {
      uint64_t v13 = v11;
    }
    else {
      uint64_t v13 = 0;
    }
    long long v14 = [(INSpatialEventTrigger *)v2 initWithPlacemark:v4 event:v8 suggestedValues:v10 mobileSpace:v13];
  }
  else
  {
    long long v14 = 0;
  }

  return v14;
}

_INPBSpatialEventTrigger *INIntentSlotValueTransformToSpatialEventTrigger(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    uint64_t v2 = objc_alloc_init(_INPBSpatialEventTrigger);
    id v3 = [v1 placemark];
    uint64_t v4 = INIntentSlotValueTransformToLocationValue(v3);
    [(_INPBSpatialEventTrigger *)v2 setLocation:v4];

    unint64_t v5 = [v1 event];
    if (v5 >= 3) {
      uint64_t v6 = 0x7FFFFFFFLL;
    }
    else {
      uint64_t v6 = (10 * v5);
    }
    [(_INPBSpatialEventTrigger *)v2 setEvent:v6];
    uint64_t v7 = [v1 suggestedValues];
    uint64_t v8 = INIntentSlotValueTransformToLocationValues(v7);
    [(_INPBSpatialEventTrigger *)v2 setSuggestedValues:v8];

    uint64_t v9 = [v1 mobileSpace];
    if (v9 == 1) {
      unsigned int v10 = 1;
    }
    else {
      unsigned int v10 = 0x7FFFFFFF;
    }
    if (v9) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = 0;
    }
    [(_INPBSpatialEventTrigger *)v2 setMobileSpace:v11];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INIntentSlotValueTransformFromSpatialEventTriggers(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          uint64_t v8 = INIntentSlotValueTransformFromSpatialEventTrigger(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    uint64_t v9 = (void *)[v2 copy];
  }
  else
  {
    uint64_t v9 = 0;
  }

  return v9;
}

id INIntentSlotValueTransformToSpatialEventTriggers(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          uint64_t v8 = INIntentSlotValueTransformToSpatialEventTrigger(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    uint64_t v9 = (void *)[v2 copy];
  }
  else
  {
    uint64_t v9 = 0;
  }

  return v9;
}

id INIntentSlotValueRedactedSpatialEventTriggerFromSpatialEventTrigger(void *a1)
{
  id v1 = a1;

  return v1;
}

id INIntentSlotValueTransformFromVolume(void *a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v1 = objc_msgSend(a1, "values", 0);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v10;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v10 != v4) {
          objc_enumerationMutation(v1);
        }
        uint64_t v6 = INIntentSlotValueTransformFromVolumeValue(*(void **)(*((void *)&v9 + 1) + 8 * i));
        if (v6)
        {
          uint64_t v7 = (void *)v6;
          goto LABEL_11;
        }
      }
      uint64_t v3 = [v1 countByEnumeratingWithState:&v9 objects:v13 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
  uint64_t v7 = 0;
LABEL_11:

  return v7;
}

id INIntentSlotValueTransformFromVolumeValue(void *a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = v1;
  if (v1)
  {
    uint64_t v3 = [v1 valueMetadata];
    INPrivacyEntitlementValidateValueMetadata(v3);

    if ([v2 hasUnit])
    {
      switch([v2 unit])
      {
        case 1u:
          uint64_t v4 = [MEMORY[0x1E4F29228] megaliters];
          break;
        case 2u:
          uint64_t v4 = [MEMORY[0x1E4F29228] kiloliters];
          break;
        case 3u:
          uint64_t v4 = [MEMORY[0x1E4F29228] liters];
          break;
        case 4u:
          uint64_t v4 = [MEMORY[0x1E4F29228] deciliters];
          break;
        case 5u:
          uint64_t v4 = [MEMORY[0x1E4F29228] centiliters];
          break;
        case 6u:
          uint64_t v4 = [MEMORY[0x1E4F29228] milliliters];
          break;
        case 7u:
          uint64_t v4 = [MEMORY[0x1E4F29228] cubicKilometers];
          break;
        case 8u:
          uint64_t v4 = [MEMORY[0x1E4F29228] cubicDecimeters];
          break;
        case 9u:
          uint64_t v4 = [MEMORY[0x1E4F29228] cubicMillimeters];
          break;
        case 0xAu:
          uint64_t v4 = [MEMORY[0x1E4F29228] cubicInches];
          break;
        case 0xBu:
          uint64_t v4 = [MEMORY[0x1E4F29228] cubicFeet];
          break;
        case 0xCu:
          uint64_t v4 = [MEMORY[0x1E4F29228] cubicYards];
          break;
        case 0xDu:
          uint64_t v4 = [MEMORY[0x1E4F29228] cubicMiles];
          break;
        case 0xEu:
          uint64_t v4 = [MEMORY[0x1E4F29228] acreFeet];
          break;
        case 0xFu:
          uint64_t v4 = [MEMORY[0x1E4F29228] bushels];
          break;
        case 0x10u:
          uint64_t v4 = [MEMORY[0x1E4F29228] teaspoons];
          break;
        case 0x11u:
          uint64_t v4 = [MEMORY[0x1E4F29228] tablespoons];
          break;
        case 0x12u:
          uint64_t v4 = [MEMORY[0x1E4F29228] fluidOunces];
          break;
        case 0x13u:
          uint64_t v4 = [MEMORY[0x1E4F29228] cups];
          break;
        case 0x14u:
          uint64_t v4 = [MEMORY[0x1E4F29228] pints];
          break;
        case 0x15u:
          uint64_t v4 = [MEMORY[0x1E4F29228] quarts];
          break;
        case 0x16u:
          uint64_t v4 = [MEMORY[0x1E4F29228] gallons];
          break;
        case 0x17u:
          uint64_t v4 = [MEMORY[0x1E4F29228] imperialTeaspoons];
          break;
        case 0x18u:
          uint64_t v4 = [MEMORY[0x1E4F29228] imperialQuarts];
          break;
        case 0x19u:
          uint64_t v4 = [MEMORY[0x1E4F29228] imperialGallons];
          break;
        case 0x1Au:
          uint64_t v4 = [MEMORY[0x1E4F29228] metricCups];
          break;
        case 0x1Bu:
          uint64_t v4 = [MEMORY[0x1E4F29228] cubicCentimeters];
          break;
        case 0x1Cu:
          uint64_t v4 = [MEMORY[0x1E4F29228] cubicMeters];
          break;
        default:
          goto LABEL_34;
      }
      uint64_t v5 = (void *)v4;
      if (v4)
      {
        id v6 = objc_alloc(MEMORY[0x1E4F28E28]);
        [v2 magnitude];
        uint64_t v7 = objc_msgSend(v6, "initWithDoubleValue:unit:", v5);

        goto LABEL_37;
      }
    }
LABEL_34:
    uint64_t v8 = INSiriLogContextIntents;
    if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_ERROR))
    {
      int v10 = 136315138;
      long long v11 = "INIntentSlotValueTransformFromVolumeValue";
      _os_log_error_impl(&dword_18CB2F000, v8, OS_LOG_TYPE_ERROR, "%s _INPBVolumeValue must contain a unit. Otherwise ambiguous magnitude for NSMeasurement", (uint8_t *)&v10, 0xCu);
    }
  }
  uint64_t v7 = 0;
LABEL_37:

  return v7;
}

_INPBVolume *INIntentSlotValueTransformToVolume(void *a1)
{
  id v1 = INIntentSlotValueTransformToVolumeValue(a1);
  if (v1)
  {
    uint64_t v2 = objc_alloc_init(_INPBVolume);
    [(_INPBVolume *)v2 addValue:v1];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

_INPBVolumeValue *INIntentSlotValueTransformToVolumeValue(void *a1)
{
  if (!a1)
  {
    uint64_t v2 = 0;
    goto LABEL_61;
  }
  id v1 = a1;
  uint64_t v2 = objc_alloc_init(_INPBVolumeValue);
  uint64_t v3 = [v1 unit];
  [v1 doubleValue];
  double v5 = v4;

  [(_INPBVolumeValue *)v2 setMagnitude:v5];
  id v6 = [MEMORY[0x1E4F29228] megaliters];
  char v7 = [v3 isEqual:v6];

  if (v7)
  {
    uint64_t v8 = 1;
LABEL_59:
    [(_INPBVolumeValue *)v2 setUnit:v8];
    goto LABEL_60;
  }
  long long v9 = [MEMORY[0x1E4F29228] kiloliters];
  char v10 = [v3 isEqual:v9];

  if (v10)
  {
    uint64_t v8 = 2;
    goto LABEL_59;
  }
  long long v11 = [MEMORY[0x1E4F29228] liters];
  char v12 = [v3 isEqual:v11];

  if (v12)
  {
    uint64_t v8 = 3;
    goto LABEL_59;
  }
  long long v13 = [MEMORY[0x1E4F29228] deciliters];
  char v14 = [v3 isEqual:v13];

  if (v14)
  {
    uint64_t v8 = 4;
    goto LABEL_59;
  }
  int v15 = [MEMORY[0x1E4F29228] centiliters];
  char v16 = [v3 isEqual:v15];

  if (v16)
  {
    uint64_t v8 = 5;
    goto LABEL_59;
  }
  id v17 = [MEMORY[0x1E4F29228] milliliters];
  char v18 = [v3 isEqual:v17];

  if (v18)
  {
    uint64_t v8 = 6;
    goto LABEL_59;
  }
  uint64_t v19 = [MEMORY[0x1E4F29228] cubicCentimeters];
  char v20 = [v3 isEqual:v19];

  if (v20)
  {
    uint64_t v8 = 27;
    goto LABEL_59;
  }
  unsigned int v21 = [MEMORY[0x1E4F29228] cubicMeters];
  char v22 = [v3 isEqual:v21];

  if (v22)
  {
    uint64_t v8 = 28;
    goto LABEL_59;
  }
  uint64_t v23 = [MEMORY[0x1E4F29228] cubicKilometers];
  char v24 = [v3 isEqual:v23];

  if (v24)
  {
    uint64_t v8 = 7;
    goto LABEL_59;
  }
  char v25 = [MEMORY[0x1E4F29228] cubicDecimeters];
  char v26 = [v3 isEqual:v25];

  if (v26)
  {
    uint64_t v8 = 8;
    goto LABEL_59;
  }
  unsigned int v27 = [MEMORY[0x1E4F29228] cubicMillimeters];
  char v28 = [v3 isEqual:v27];

  if (v28)
  {
    uint64_t v8 = 9;
    goto LABEL_59;
  }
  uint64_t v29 = [MEMORY[0x1E4F29228] cubicInches];
  char v30 = [v3 isEqual:v29];

  if (v30)
  {
    uint64_t v8 = 10;
    goto LABEL_59;
  }
  char v31 = [MEMORY[0x1E4F29228] cubicFeet];
  char v32 = [v3 isEqual:v31];

  if (v32)
  {
    uint64_t v8 = 11;
    goto LABEL_59;
  }
  unsigned int v33 = [MEMORY[0x1E4F29228] cubicYards];
  char v34 = [v3 isEqual:v33];

  if (v34)
  {
    uint64_t v8 = 12;
    goto LABEL_59;
  }
  uint64_t v35 = [MEMORY[0x1E4F29228] cubicMiles];
  char v36 = [v3 isEqual:v35];

  if (v36)
  {
    uint64_t v8 = 13;
    goto LABEL_59;
  }
  char v37 = [MEMORY[0x1E4F29228] acreFeet];
  char v38 = [v3 isEqual:v37];

  if (v38)
  {
    uint64_t v8 = 14;
    goto LABEL_59;
  }
  unsigned int v39 = [MEMORY[0x1E4F29228] bushels];
  char v40 = [v3 isEqual:v39];

  if (v40)
  {
    uint64_t v8 = 15;
    goto LABEL_59;
  }
  uint64_t v41 = [MEMORY[0x1E4F29228] teaspoons];
  char v42 = [v3 isEqual:v41];

  if (v42)
  {
    uint64_t v8 = 16;
    goto LABEL_59;
  }
  char v43 = [MEMORY[0x1E4F29228] tablespoons];
  char v44 = [v3 isEqual:v43];

  if (v44)
  {
    uint64_t v8 = 17;
    goto LABEL_59;
  }
  uint64_t v45 = [MEMORY[0x1E4F29228] fluidOunces];
  char v46 = [v3 isEqual:v45];

  if (v46)
  {
    uint64_t v8 = 18;
    goto LABEL_59;
  }
  uint64_t v47 = [MEMORY[0x1E4F29228] cups];
  char v48 = [v3 isEqual:v47];

  if (v48)
  {
    uint64_t v8 = 19;
    goto LABEL_59;
  }
  uint64_t v49 = [MEMORY[0x1E4F29228] pints];
  char v50 = [v3 isEqual:v49];

  if (v50)
  {
    uint64_t v8 = 20;
    goto LABEL_59;
  }
  uint64_t v51 = [MEMORY[0x1E4F29228] quarts];
  char v52 = [v3 isEqual:v51];

  if (v52)
  {
    uint64_t v8 = 21;
    goto LABEL_59;
  }
  long long v53 = [MEMORY[0x1E4F29228] gallons];
  char v54 = [v3 isEqual:v53];

  if (v54)
  {
    uint64_t v8 = 22;
    goto LABEL_59;
  }
  __int16 v55 = [MEMORY[0x1E4F29228] imperialTeaspoons];
  char v56 = [v3 isEqual:v55];

  if (v56)
  {
    uint64_t v8 = 23;
    goto LABEL_59;
  }
  __int16 v57 = [MEMORY[0x1E4F29228] imperialQuarts];
  char v58 = [v3 isEqual:v57];

  if (v58)
  {
    uint64_t v8 = 24;
    goto LABEL_59;
  }
  __int16 v59 = [MEMORY[0x1E4F29228] imperialGallons];
  char v60 = [v3 isEqual:v59];

  if (v60)
  {
    uint64_t v8 = 25;
    goto LABEL_59;
  }
  uint64_t v61 = [MEMORY[0x1E4F29228] metricCups];
  int v62 = [v3 isEqual:v61];

  if (v62)
  {
    uint64_t v8 = 26;
    goto LABEL_59;
  }
LABEL_60:

LABEL_61:

  return v2;
}

id INIntentSlotValueTransformFromVolumeValues(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = INIntentSlotValueTransformFromVolumeValue(*(void **)(*((void *)&v11 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  long long v9 = (void *)[v2 copy];

  return v9;
}

id INIntentSlotValueTransformFromVolumes(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = INIntentSlotValueTransformFromVolume(*(void **)(*((void *)&v11 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  long long v9 = (void *)[v2 copy];

  return v9;
}

id INIntentSlotValueTransformToVolumeValues(void *a1)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v11;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v11 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = INIntentSlotValueTransformToVolumeValue(*(void **)(*((void *)&v10 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v10);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v5);
  }

  return v2;
}

id INIntentSlotValueTransformToVolumes(void *a1)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v11;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v11 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = INIntentSlotValueTransformToVolume(*(void **)(*((void *)&v10 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v10);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v5);
  }

  return v2;
}

id INIntentSlotValueRedactedValueFromVolumeValue(void *a1, uint64_t a2)
{
  id v3 = a1;
  uint64_t v4 = [v3 valueMetadata];
  uint64_t v5 = INPrivacyEntitlementOptionsForValueMetadata(v4);

  if ((v5 & a2) != 0) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = (void *)[v3 copy];
  }

  return v6;
}

_INPBVolume *INIntentSlotValueRedactedVolumeFromVolume(void *a1, uint64_t a2, void *a3)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a3;
  if (v5)
  {
    char v7 = objc_alloc_init(_INPBVolume);
    long long v15 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
    long long v18 = 0u;
    uint64_t v8 = objc_msgSend(v5, "values", 0);
    uint64_t v9 = [v8 countByEnumeratingWithState:&v15 objects:v19 count:16];
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = *(void *)v16;
      do
      {
        for (uint64_t i = 0; i != v10; ++i)
        {
          if (*(void *)v16 != v11) {
            objc_enumerationMutation(v8);
          }
          long long v13 = INIntentSlotValueRedactedValueFromVolumeValue(*(void **)(*((void *)&v15 + 1) + 8 * i), a2);
          if (v13) {
            [(_INPBVolume *)v7 addValue:v13];
          }
        }
        uint64_t v10 = [v8 countByEnumeratingWithState:&v15 objects:v19 count:16];
      }
      while (v10);
    }
  }
  else
  {
    char v7 = 0;
  }

  return v7;
}

id INIntentSlotValueRedactedVolumesFromVolumes(void *a1, uint64_t a2, void *a3)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a3;
  char v7 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v5, "count"));
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v8 = v5;
  uint64_t v9 = [v8 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)v17;
    do
    {
      for (uint64_t i = 0; i != v10; ++i)
      {
        if (*(void *)v17 != v11) {
          objc_enumerationMutation(v8);
        }
        long long v13 = INIntentSlotValueRedactedVolumeFromVolume(*(void **)(*((void *)&v16 + 1) + 8 * i), a2, v6);
        objc_msgSend(v7, "addObject:", v13, (void)v16);
      }
      uint64_t v10 = [v8 countByEnumeratingWithState:&v16 objects:v20 count:16];
    }
    while (v10);
  }

  long long v14 = (void *)[v7 copy];

  return v14;
}

INPaymentMethod *INIntentSlotValueTransformFromPaymentMethodValue(void *a1)
{
  id v1 = a1;
  uint64_t v2 = v1;
  if (v1)
  {
    id v3 = [v1 valueMetadata];
    INPrivacyEntitlementValidateValueMetadata(v3);

    uint64_t v4 = [INPaymentMethod alloc];
    int v5 = [v2 hasType];
    uint64_t v6 = [v2 type] - 1;
    if (v6 <= 7) {
      uint64_t v7 = v6 + 1;
    }
    else {
      uint64_t v7 = 0;
    }
    if (v5) {
      uint64_t v8 = v7;
    }
    else {
      uint64_t v8 = 0;
    }
    uint64_t v9 = [v2 name];
    uint64_t v10 = [v2 identificationHint];
    uint64_t v11 = [v2 icon];
    long long v12 = INIntentSlotValueTransformFromImageValue(v11);
    long long v13 = [(INPaymentMethod *)v4 initWithType:v8 name:v9 identificationHint:v10 icon:v12];
  }
  else
  {
    long long v13 = 0;
  }

  return v13;
}

_INPBPaymentMethodValue *INIntentSlotValueTransformToPaymentMethodValue(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    uint64_t v2 = objc_alloc_init(_INPBPaymentMethodValue);
    unint64_t v3 = [v1 type] - 1;
    if (v3 < 8) {
      uint64_t v4 = (v3 + 1);
    }
    else {
      uint64_t v4 = 0x7FFFFFFFLL;
    }
    [(_INPBPaymentMethodValue *)v2 setType:v4];
    int v5 = [v1 name];
    [(_INPBPaymentMethodValue *)v2 setName:v5];

    uint64_t v6 = [v1 icon];
    uint64_t v7 = INIntentSlotValueTransformToImageValue(v6);
    [(_INPBPaymentMethodValue *)v2 setIcon:v7];

    uint64_t v8 = [v1 identificationHint];

    [(_INPBPaymentMethodValue *)v2 setIdentificationHint:v8];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INIntentSlotValueTransformFromPaymentMethodValues(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          uint64_t v8 = INIntentSlotValueTransformFromPaymentMethodValue(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    uint64_t v9 = (void *)[v2 copy];
  }
  else
  {
    uint64_t v9 = 0;
  }

  return v9;
}

id INIntentSlotValueTransformFromPaymentMethod(void *a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  if (a1)
  {
    long long v11 = 0u;
    long long v12 = 0u;
    long long v9 = 0u;
    long long v10 = 0u;
    id v1 = objc_msgSend(a1, "values", 0);
    uint64_t v2 = [v1 countByEnumeratingWithState:&v9 objects:v13 count:16];
    if (v2)
    {
      uint64_t v3 = v2;
      uint64_t v4 = *(void *)v10;
      while (2)
      {
        for (uint64_t i = 0; i != v3; ++i)
        {
          if (*(void *)v10 != v4) {
            objc_enumerationMutation(v1);
          }
          uint64_t v6 = INIntentSlotValueTransformFromPaymentMethodValue(*(void **)(*((void *)&v9 + 1) + 8 * i));
          if (v6)
          {
            uint64_t v7 = (void *)v6;
            goto LABEL_12;
          }
        }
        uint64_t v3 = [v1 countByEnumeratingWithState:&v9 objects:v13 count:16];
        if (v3) {
          continue;
        }
        break;
      }
    }
    uint64_t v7 = 0;
LABEL_12:
  }
  else
  {
    uint64_t v7 = 0;
  }

  return v7;
}

id INIntentSlotValueTransformFromPaymentMethods(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = INIntentSlotValueTransformFromPaymentMethod(*(void **)(*((void *)&v11 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  long long v9 = (void *)[v2 copy];

  return v9;
}

id INIntentSlotValueTransformToPaymentMethodValues(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          uint64_t v8 = INIntentSlotValueTransformToPaymentMethodValue(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    long long v9 = (void *)[v2 copy];
  }
  else
  {
    long long v9 = 0;
  }

  return v9;
}

_INPBPaymentMethod *INIntentSlotValueTransformToPaymentMethod(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    uint64_t v2 = objc_alloc_init(_INPBPaymentMethod);
    id v3 = INIntentSlotValueTransformToPaymentMethodValue(v1);

    if (v3) {
      [(_INPBPaymentMethod *)v2 addValue:v3];
    }
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INIntentSlotValueTransformToPaymentMethods(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = INIntentSlotValueTransformToPaymentMethod(*(void **)(*((void *)&v11 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  long long v9 = (void *)[v2 copy];

  return v9;
}

_INPBPaymentMethodValue *INIntentSlotValueRedactedPaymentMethodValueFromPaymentMethodValue(void *a1, uint64_t a2, void *a3)
{
  id v5 = a1;
  id v6 = a3;
  uint64_t v7 = [v5 valueMetadata];
  uint64_t v8 = INPrivacyEntitlementOptionsForValueMetadata(v7);

  if ((v8 & a2) != 0)
  {
    long long v9 = 0;
  }
  else
  {
    long long v9 = objc_alloc_init(_INPBPaymentMethodValue);
    -[_INPBPaymentMethodValue setType:](v9, "setType:", [v5 type]);
    long long v10 = [v5 name];
    [(_INPBPaymentMethodValue *)v9 setName:v10];

    long long v11 = [v5 icon];
    long long v12 = INIntentSlotValueRedactedImageValueFromImageValue(v11, a2);
    [(_INPBPaymentMethodValue *)v9 setIcon:v12];

    long long v13 = [v5 identificationHint];
    [(_INPBPaymentMethodValue *)v9 setIdentificationHint:v13];
  }

  return v9;
}

_INPBPaymentMethod *INIntentSlotValueRedactedPaymentMethodFromPaymentMethod(void *a1, uint64_t a2, void *a3)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a3;
  if (v5)
  {
    uint64_t v7 = objc_alloc_init(_INPBPaymentMethod);
    long long v15 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
    long long v18 = 0u;
    uint64_t v8 = objc_msgSend(v5, "values", 0);
    uint64_t v9 = [v8 countByEnumeratingWithState:&v15 objects:v19 count:16];
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = *(void *)v16;
      do
      {
        for (uint64_t i = 0; i != v10; ++i)
        {
          if (*(void *)v16 != v11) {
            objc_enumerationMutation(v8);
          }
          long long v13 = INIntentSlotValueRedactedPaymentMethodValueFromPaymentMethodValue(*(void **)(*((void *)&v15 + 1) + 8 * i), a2, v6);
          if (v13) {
            [(_INPBPaymentMethod *)v7 addValue:v13];
          }
        }
        uint64_t v10 = [v8 countByEnumeratingWithState:&v15 objects:v19 count:16];
      }
      while (v10);
    }
  }
  else
  {
    uint64_t v7 = 0;
  }

  return v7;
}

uint64_t _INPBTimestampReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v26 = 0;
        while (1)
        {
          uint64_t v27 = *v3;
          unint64_t v28 = *(void *)(a2 + v27);
          if (v28 == -1 || v28 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
          *(void *)(a2 + v27) = v28 + 1;
          v26 |= (unint64_t)(v29 & 0x7F) << v24;
          if ((v29 & 0x80) == 0) {
            goto LABEL_42;
          }
          v24 += 7;
          BOOL v14 = v25++ >= 9;
          if (v14)
          {
            uint64_t v30 = 0;
            goto LABEL_45;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_42:
        uint64_t v30 = *(unsigned char *)(a2 + *v5) ? 0 : v26;
LABEL_45:
        [a1 setNanos:v30];
      }
      else if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_37;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_40;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_37:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_40:
        [a1 setSeconds:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _INPBMoveFileIntentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    int v16 = v10 & 7;
    if (v15 || v16 == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unsigned int v18 = objc_alloc_init(_INPBIntentMetadata);
        if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_90;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntentMetadata:", v18, 0, 0);
        goto LABEL_65;
      case 2u:
        if (v16 == 2)
        {
          uint64_t v46 = 0;
          uint64_t v47 = 0;
          uint64_t result = PBReaderPlaceMark();
          if (!result) {
            return result;
          }
          while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4) && !*(unsigned char *)(a2 + *v5))
          {
            char v20 = 0;
            unsigned int v21 = 0;
            uint64_t v22 = 0;
            while (1)
            {
              uint64_t v23 = *v3;
              unint64_t v24 = *(void *)(a2 + v23);
              if (v24 == -1 || v24 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
              *(void *)(a2 + v23) = v24 + 1;
              v22 |= (unint64_t)(v25 & 0x7F) << v20;
              if (v25 < 0)
              {
                v20 += 7;
                BOOL v14 = v21++ >= 9;
                if (!v14) {
                  continue;
                }
              }
              goto LABEL_36;
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_36:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          char v40 = 0;
          unsigned int v41 = 0;
          uint64_t v42 = 0;
          while (1)
          {
            uint64_t v43 = *v3;
            unint64_t v44 = *(void *)(a2 + v43);
            if (v44 == -1 || v44 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v45 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
            *(void *)(a2 + v43) = v44 + 1;
            v42 |= (unint64_t)(v45 & 0x7F) << v40;
            if (v45 < 0)
            {
              v40 += 7;
              BOOL v14 = v41++ >= 9;
              if (!v14) {
                continue;
              }
            }
            goto LABEL_87;
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_87:
          PBRepeatedInt32Add();
        }
        goto LABEL_66;
      case 3u:
        unsigned int v18 = objc_alloc_init(_INPBString);
        uint64_t v46 = 0;
        uint64_t v47 = 0;
        if (!PBReaderPlaceMark() || !_INPBStringReadFrom(v18, a2)) {
          goto LABEL_90;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addEntityName:", v18, 0, 0);
        }
        goto LABEL_65;
      case 4u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                uint64_t v32 = 0;
                goto LABEL_72;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v32 = 0;
        }
        else {
          uint64_t v32 = v28;
        }
LABEL_72:
        objc_msgSend(a1, "setSourceType:", v32, v46, v47);
        goto LABEL_66;
      case 5u:
        unsigned int v18 = objc_alloc_init(_INPBString);
        if (!PBReaderPlaceMark() || (_INPBStringReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_90;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSourceName:", v18, 0, 0);
        goto LABEL_65;
      case 6u:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        while (2)
        {
          uint64_t v36 = *v3;
          unint64_t v37 = *(void *)(a2 + v36);
          if (v37 == -1 || v37 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v38 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
            *(void *)(a2 + v36) = v37 + 1;
            v35 |= (unint64_t)(v38 & 0x7F) << v33;
            if (v38 < 0)
            {
              v33 += 7;
              BOOL v14 = v34++ >= 9;
              if (v14)
              {
                uint64_t v39 = 0;
                goto LABEL_77;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v39 = 0;
        }
        else {
          uint64_t v39 = v35;
        }
LABEL_77:
        objc_msgSend(a1, "setDestinationType:", v39, v46, v47);
        goto LABEL_66;
      case 7u:
        unsigned int v18 = objc_alloc_init(_INPBString);
        if (!PBReaderPlaceMark() || (_INPBStringReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_90;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setDestinationName:", v18, 0, 0);
        goto LABEL_65;
      case 8u:
        unsigned int v18 = objc_alloc_init(_INPBFileProperty);
        uint64_t v46 = 0;
        uint64_t v47 = 0;
        if (PBReaderPlaceMark() && _INPBFilePropertyReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          if (v18) {
            objc_msgSend(a1, "addProperties:", v18, 0, 0);
          }
LABEL_65:

LABEL_66:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_90:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_66;
    }
  }
}

BOOL _INPBPriceRangeValueReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = objc_alloc_init(_INPBValueMetadata);
        if (!PBReaderPlaceMark() || (_INPBValueMetadataReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_35;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setValueMetadata:", v17, 0, 0);
        goto LABEL_31;
      case 2u:
        char v17 = objc_alloc_init(_INPBDecimalNumberValue);
        if (!PBReaderPlaceMark() || (_INPBDecimalNumberValueReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_35;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setMinimumPrice:", v17, 0, 0);
        goto LABEL_31;
      case 3u:
        char v17 = objc_alloc_init(_INPBDecimalNumberValue);
        if PBReaderPlaceMark() && (_INPBDecimalNumberValueReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setMaximumPrice:", v17, 0, 0);
LABEL_31:

LABEL_32:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_35:

        return 0;
      case 4u:
        PBReaderReadString();
        char v17 = (_INPBValueMetadata *)objc_claimAutoreleasedReturnValue();
        [a1 setCurrencyCode:v17];
        goto LABEL_31;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_32;
    }
  }
}

uint64_t _INPBDurationReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v26 = 0;
        while (1)
        {
          uint64_t v27 = *v3;
          unint64_t v28 = *(void *)(a2 + v27);
          if (v28 == -1 || v28 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
          *(void *)(a2 + v27) = v28 + 1;
          v26 |= (unint64_t)(v29 & 0x7F) << v24;
          if ((v29 & 0x80) == 0) {
            goto LABEL_42;
          }
          v24 += 7;
          BOOL v14 = v25++ >= 9;
          if (v14)
          {
            uint64_t v30 = 0;
            goto LABEL_45;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_42:
        uint64_t v30 = *(unsigned char *)(a2 + *v5) ? 0 : v26;
LABEL_45:
        [a1 setNanos:v30];
      }
      else if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_37;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_40;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_37:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_40:
        [a1 setSeconds:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _INPBSetTimerAttributeIntentResponseReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(_INPBTimer);
        if (!PBReaderPlaceMark() || (_INPBTimerReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setUpdatedTimer:", v17, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _INPBGetFileInformationIntentResponseReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        char v24 = objc_alloc_init(_INPBFileProperty);
        if (!PBReaderPlaceMark() || (_INPBFilePropertyReadFrom(v24, a2) & 1) == 0)
        {
LABEL_43:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setProperty:", v24, 0, 0);
      }
      else
      {
        if (v17 != 2)
        {
          if (v17 == 1)
          {
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            while (1)
            {
              uint64_t v21 = *v3;
              unint64_t v22 = *(void *)(a2 + v21);
              if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
              *(void *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0) {
                goto LABEL_38;
              }
              v18 += 7;
              BOOL v14 = v19++ >= 9;
              if (v14)
              {
                uint64_t v20 = 0;
                goto LABEL_40;
              }
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_38:
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v20 = 0;
            }
LABEL_40:
            [a1 setSuccess:v20 != 0];
          }
          else
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
          }
          continue;
        }
        char v24 = objc_alloc_init(_INPBString);
        if (!PBReaderPlaceMark() || (_INPBStringReadFrom(v24, a2) & 1) == 0) {
          goto LABEL_43;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEntityName:", v24, 0, 0);
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _INPBDeleteHealthSampleIntentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = objc_alloc_init(_INPBIntentMetadata);
        if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_32;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntentMetadata:", v17, 0, 0);
LABEL_27:

        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_29:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unint64_t v17 = objc_alloc_init(_INPBString);
    if (!PBReaderPlaceMark() || !_INPBStringReadFrom(v17, a2))
    {
LABEL_32:

      return 0;
    }
    PBReaderRecallMark();
    if (v17) {
      objc_msgSend(a1, "addSampleUuids:", v17, 0, 0);
    }
    goto LABEL_27;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

__CFString *INSetDefrosterSettingsInCarIntentResponseCodeGetName(unint64_t a1)
{
  if (a1 > 5) {
    return 0;
  }
  else {
    return off_1E55183E8[a1];
  }
}

BOOL _INPBPlayAudioMessageIntentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = objc_alloc_init(_INPBIntentMetadata);
        if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntentMetadata:", v17, 0, 0);
        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_26:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    PBReaderReadString();
    unint64_t v17 = (_INPBIntentMetadata *)objc_claimAutoreleasedReturnValue();
    [a1 setMessageIdentifier:v17];
LABEL_24:

    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _INPBSpatialEventTriggerReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v17 = objc_alloc_init(_INPBLocationValue);
        if (!PBReaderPlaceMark() || !_INPBLocationValueReadFrom(v17, a2)) {
          goto LABEL_55;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLocation:", v17, 0, 0);
        goto LABEL_35;
      case 2u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_47;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v21;
        }
LABEL_47:
        objc_msgSend(a1, "setEvent:", v25, v33, v34);
        goto LABEL_53;
      case 3u:
        unint64_t v17 = objc_alloc_init(_INPBLocationValue);
        uint64_t v33 = 0;
        uint64_t v34 = 0;
        if (PBReaderPlaceMark() && _INPBLocationValueReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          if (v17) {
            objc_msgSend(a1, "addSuggestedValues:", v17, 0, 0);
          }
LABEL_35:

LABEL_53:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_55:

        return 0;
      case 4u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                uint64_t v32 = 0;
                goto LABEL_52;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v32 = 0;
        }
        else {
          uint64_t v32 = v28;
        }
LABEL_52:
        objc_msgSend(a1, "setMobileSpace:", v32, v33, v34);
        goto LABEL_53;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_53;
    }
  }
}

BOOL _INPBCancelWorkoutIntentResponseReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  id v6 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
      return v7 == 0;
    }
    if (*(unsigned char *)(a2 + *v5))
    {
      int v7 = 1;
      return v7 == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    uint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v6) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        LOBYTE(v10) = 0;
        int v7 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      LOBYTE(v10) = 0;
    }
LABEL_14:
    if (v7) {
      BOOL v15 = 1;
    }
    else {
      BOOL v15 = (v10 & 7) == 4;
    }
    if (v15) {
      return v7 == 0;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      return 0;
    }
  }
}

uint64_t _INPBTemperatureReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = objc_alloc_init(_INPBTemperatureValue);
        if (!PBReaderPlaceMark() || !_INPBTemperatureValueReadFrom(v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addValue:", v17, 0, 0);
        }
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t INRadioTypeHasBackingType(unint64_t a1)
{
  return (a1 < 6) & (0x3Eu >> a1);
}

uint64_t INRadioTypeGetBackingType(uint64_t result)
{
  if ((unint64_t)(result - 1) < 5) {
    return result;
  }
  else {
    return 0x7FFFFFFFLL;
  }
}

uint64_t INRadioTypeGetFacadeType(int a1, int a2)
{
  uint64_t v2 = (a2 - 1);
  if (v2 <= 4) {
    uint64_t v3 = v2 + 1;
  }
  else {
    uint64_t v3 = 0;
  }
  if (a1) {
    return v3;
  }
  else {
    return 0;
  }
}

__CFString *INRadioTypeGetName(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 4) {
    return @"unknown";
  }
  else {
    return off_1E5518420[a1 - 1];
  }
}

uint64_t INRadioTypeWithString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"AM"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"FM"])
  {
    uint64_t v2 = 2;
  }
  else if ([v1 isEqualToString:@"HD"])
  {
    uint64_t v2 = 3;
  }
  else if ([v1 isEqualToString:@"satellite"])
  {
    uint64_t v2 = 4;
  }
  else if ([v1 isEqualToString:@"DAB"])
  {
    uint64_t v2 = 5;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INRadioTypeGetLocalizedName(uint64_t a1, void *a2)
{
  id v3 = a2;
  switch(a1)
  {
    case 1:
      uint64_t v4 = @"AM";
      goto LABEL_8;
    case 2:
      uint64_t v4 = @"FM";
      goto LABEL_8;
    case 3:
      uint64_t v4 = @"HD";
      goto LABEL_8;
    case 4:
      uint64_t v4 = @"satellite";
      goto LABEL_8;
    case 5:
      uint64_t v4 = @"DAB";
LABEL_8:
      id v5 = INLocalizedStringWithLocalizer(v4, v4, v3);
      break;
    default:
      id v5 = 0;
      break;
  }

  return v5;
}

BOOL INEnumerateObjectsInCodable(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  id v5 = [v4 _objectDescription];
  id v6 = [v5 attributes];
  int v7 = [v6 allValues];
  BOOL v8 = _INEnumerateObjectAttributes(v4, v7, v3);

  return v8;
}

BOOL _INEnumerateObjectAttributes(void *a1, void *a2, void *a3)
{
  uint64_t v68 = *MEMORY[0x1E4F143B8];
  id v40 = a1;
  id v5 = a2;
  id v6 = a3;
  uint64_t v61 = 0;
  int v62 = &v61;
  uint64_t v63 = 0x2020000000;
  char v64 = 0;
  v58[0] = MEMORY[0x1E4F143A8];
  v58[1] = 3221225472;
  v58[2] = ___INEnumerateObjectAttributes_block_invoke;
  v58[3] = &unk_1E5518450;
  id v45 = v6;
  id v59 = v45;
  char v60 = &v61;
  unint64_t v44 = (void (**)(void, void))MEMORY[0x192F984C0](v58);
  long long v56 = 0u;
  long long v57 = 0u;
  long long v54 = 0u;
  long long v55 = 0u;
  id obj = v5;
  uint64_t v7 = [obj countByEnumeratingWithState:&v54 objects:v67 count:16];
  if (v7)
  {
    uint64_t v41 = *(void *)v55;
    do
    {
      uint64_t v42 = v7;
      for (uint64_t i = 0; i != v42; ++i)
      {
        if (*(void *)v55 != v41) {
          objc_enumerationMutation(obj);
        }
        BOOL v8 = *(void **)(*((void *)&v54 + 1) + 8 * i);
        unsigned int v9 = [v8 propertyName];
        char v10 = [v9 hasPrefix:@"_"];

        if ((v10 & 1) == 0)
        {
          objc_opt_class();
          if (objc_opt_isKindOfClass())
          {
            objc_opt_class();
            if (objc_opt_isKindOfClass())
            {
              uint64_t v11 = [v8 propertyName];
              [v40 valueForPropertyNamed:v11];
            }
            else
            {
              uint64_t v11 = [v8 propertyName];
              [v40 valueForKey:v11];
            }
            id v13 = (id)objc_claimAutoreleasedReturnValue();

            objc_opt_class();
            if (objc_opt_isKindOfClass())
            {
              id v14 = v13;
              long long v50 = 0u;
              long long v51 = 0u;
              long long v52 = 0u;
              long long v53 = 0u;
              id v13 = v14;
              uint64_t v15 = [v13 countByEnumeratingWithState:&v50 objects:v66 count:16];
              if (v15)
              {
                uint64_t v16 = *(void *)v51;
                do
                {
                  for (uint64_t j = 0; j != v15; ++j)
                  {
                    if (*(void *)v51 != v16) {
                      objc_enumerationMutation(v13);
                    }
                    uint64_t v18 = *(void *)(*((void *)&v50 + 1) + 8 * j);
                    id v19 = v8;
                    if (v8)
                    {
                      objc_opt_class();
                      if (objc_opt_isKindOfClass()) {
                        unsigned int v20 = v19;
                      }
                      else {
                        unsigned int v20 = 0;
                      }
                    }
                    else
                    {
                      unsigned int v20 = 0;
                    }
                    id v21 = v20;

                    uint64_t v22 = [v21 codableDescription];
                    unint64_t v23 = [v22 attributes];
                    char v24 = [v23 allValues];
                    int v25 = _INEnumerateObjectAttributes(v18, v24, v45);

                    if (v25) {
                      *((unsigned char *)v62 + 24) = 1;
                    }
                  }
                  uint64_t v15 = [v13 countByEnumeratingWithState:&v50 objects:v66 count:16];
                }
                while (v15);
              }
              goto LABEL_29;
            }
            if (v13)
            {
              id v26 = v8;
              if (v26)
              {
                objc_opt_class();
                id v27 = (objc_opt_isKindOfClass() & 1) != 0 ? v26 : 0;
              }
              else
              {
                id v27 = 0;
              }
              id v32 = v27;

              uint64_t v33 = [v32 codableDescription];
              uint64_t v34 = [v33 attributes];
              uint64_t v35 = [v34 allValues];
              int v36 = _INEnumerateObjectAttributes(v13, v35, v45);

              if (v36) {
                *((unsigned char *)v62 + 24) = 1;
              }
            }
          }
          else
          {
            objc_opt_class();
            if ((objc_opt_isKindOfClass() & 1) == 0) {
              continue;
            }
            objc_opt_class();
            if (objc_opt_isKindOfClass())
            {
              unint64_t v12 = [v8 propertyName];
              [v40 valueForPropertyNamed:v12];
            }
            else
            {
              unint64_t v12 = [v8 propertyName];
              [v40 valueForKey:v12];
            }
            id v13 = (id)objc_claimAutoreleasedReturnValue();

            objc_opt_class();
            if (objc_opt_isKindOfClass())
            {
              id v28 = v13;
              long long v46 = 0u;
              long long v47 = 0u;
              long long v48 = 0u;
              long long v49 = 0u;
              id v13 = v28;
              uint64_t v29 = [v13 countByEnumeratingWithState:&v46 objects:v65 count:16];
              if (v29)
              {
                uint64_t v30 = *(void *)v47;
                do
                {
                  for (uint64_t k = 0; k != v29; ++k)
                  {
                    if (*(void *)v47 != v30) {
                      objc_enumerationMutation(v13);
                    }
                    v44[2](v44, *(void *)(*((void *)&v46 + 1) + 8 * k));
                  }
                  uint64_t v29 = [v13 countByEnumeratingWithState:&v46 objects:v65 count:16];
                }
                while (v29);
              }
LABEL_29:
            }
            else
            {
              ((void (**)(void, id))v44)[2](v44, v13);
            }
          }

          continue;
        }
      }
      uint64_t v7 = [obj countByEnumeratingWithState:&v54 objects:v67 count:16];
    }
    while (v7);
  }

  BOOL v37 = *((unsigned char *)v62 + 24) != 0;
  _Block_object_dispose(&v61, 8);

  return v37;
}

void sub_18CC7BA98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47)
{
}

uint64_t INEnumerateObjectsInIntentSlotComposing(void *a1, void *a2)
{
  uint64_t v40 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  long long v34 = 0u;
  long long v35 = 0u;
  long long v36 = 0u;
  long long v37 = 0u;
  id obj = [v3 intentSlotDescriptions];
  uint64_t v5 = [obj countByEnumeratingWithState:&v34 objects:v39 count:16];
  if (v5)
  {
    char v22 = 0;
    uint64_t v6 = *(void *)v35;
    uint64_t v18 = *(void *)v35;
    id v19 = v3;
    id v17 = v4;
    do
    {
      uint64_t v7 = 0;
      uint64_t v20 = v5;
      do
      {
        if (*(void *)v35 != v6) {
          objc_enumerationMutation(obj);
        }
        BOOL v8 = [*(id *)(*((void *)&v34 + 1) + 8 * v7) facadePropertyName];
        uint64_t v30 = 0;
        char v31 = &v30;
        uint64_t v32 = 0x2020000000;
        char v33 = 0;
        v27[0] = MEMORY[0x1E4F143A8];
        v27[1] = 3221225472;
        v27[2] = __INEnumerateObjectsInIntentSlotComposing_block_invoke;
        v27[3] = &unk_1E5518450;
        uint64_t v29 = &v30;
        id v28 = v4;
        unsigned int v9 = (void (**)(void, void))MEMORY[0x192F984C0](v27);
        char v10 = [v3 valueForKey:v8];
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          id v11 = v10;
          long long v23 = 0u;
          long long v24 = 0u;
          long long v25 = 0u;
          long long v26 = 0u;
          id v12 = v11;
          uint64_t v13 = [v12 countByEnumeratingWithState:&v23 objects:v38 count:16];
          if (v13)
          {
            uint64_t v14 = *(void *)v24;
            do
            {
              for (uint64_t i = 0; i != v13; ++i)
              {
                if (*(void *)v24 != v14) {
                  objc_enumerationMutation(v12);
                }
                v9[2](v9, *(void *)(*((void *)&v23 + 1) + 8 * i));
              }
              uint64_t v13 = [v12 countByEnumeratingWithState:&v23 objects:v38 count:16];
            }
            while (v13);
          }

          id v4 = v17;
          uint64_t v6 = v18;
          id v3 = v19;
          uint64_t v5 = v20;
        }
        else
        {
          ((void (**)(void, void *))v9)[2](v9, v10);
        }
        if (*((unsigned char *)v31 + 24))
        {
          [v3 setValue:v10 forKey:v8];
          char v22 = 1;
        }

        _Block_object_dispose(&v30, 8);
        ++v7;
      }
      while (v7 != v5);
      uint64_t v5 = [obj countByEnumeratingWithState:&v34 objects:v39 count:16];
    }
    while (v5);
  }
  else
  {
    char v22 = 0;
  }

  return v22 & 1;
}

void sub_18CC7BE90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
}

uint64_t __INEnumerateObjectsInIntentSlotComposing_block_invoke(uint64_t a1)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = result;
  return result;
}

void sub_18CC7C8E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
}

id getCNContactPhoneNumbersKey()
{
  uint64_t v5 = 0;
  uint64_t v6 = &v5;
  uint64_t v7 = 0x2020000000;
  uint64_t v0 = (void **)getCNContactPhoneNumbersKeySymbolLoc_ptr_33515;
  uint64_t v8 = getCNContactPhoneNumbersKeySymbolLoc_ptr_33515;
  if (!getCNContactPhoneNumbersKeySymbolLoc_ptr_33515)
  {
    id v1 = (void *)ContactsLibrary_33503();
    v6[3] = (uint64_t)dlsym(v1, "CNContactPhoneNumbersKey");
    getCNContactPhoneNumbersKeySymbolLoc_ptr_33515 = v6[3];
    uint64_t v0 = (void **)v6[3];
  }
  _Block_object_dispose(&v5, 8);
  if (!v0)
  {
    dlerror();
    id v4 = (_Unwind_Exception *)abort_report_np();
    _Block_object_dispose(&v5, 8);
    _Unwind_Resume(v4);
  }
  uint64_t v2 = *v0;

  return v2;
}

id getCNContactEmailAddressesKey()
{
  uint64_t v5 = 0;
  uint64_t v6 = &v5;
  uint64_t v7 = 0x2020000000;
  uint64_t v0 = (void **)getCNContactEmailAddressesKeySymbolLoc_ptr_33512;
  uint64_t v8 = getCNContactEmailAddressesKeySymbolLoc_ptr_33512;
  if (!getCNContactEmailAddressesKeySymbolLoc_ptr_33512)
  {
    id v1 = (void *)ContactsLibrary_33503();
    v6[3] = (uint64_t)dlsym(v1, "CNContactEmailAddressesKey");
    getCNContactEmailAddressesKeySymbolLoc_ptr_33512 = v6[3];
    uint64_t v0 = (void **)v6[3];
  }
  _Block_object_dispose(&v5, 8);
  if (!v0)
  {
    dlerror();
    id v4 = (_Unwind_Exception *)abort_report_np();
    _Block_object_dispose(&v5, 8);
    _Unwind_Resume(v4);
  }
  uint64_t v2 = *v0;

  return v2;
}

id getCNContactIdentifierKey()
{
  uint64_t v5 = 0;
  uint64_t v6 = &v5;
  uint64_t v7 = 0x2020000000;
  uint64_t v0 = (void **)getCNContactIdentifierKeySymbolLoc_ptr;
  uint64_t v8 = getCNContactIdentifierKeySymbolLoc_ptr;
  if (!getCNContactIdentifierKeySymbolLoc_ptr)
  {
    id v1 = (void *)ContactsLibrary_33503();
    v6[3] = (uint64_t)dlsym(v1, "CNContactIdentifierKey");
    getCNContactIdentifierKeySymbolLoc_ptr = v6[3];
    uint64_t v0 = (void **)v6[3];
  }
  _Block_object_dispose(&v5, 8);
  if (!v0)
  {
    dlerror();
    id v4 = (_Unwind_Exception *)abort_report_np();
    _Block_object_dispose(&v5, 8);
    _Unwind_Resume(v4);
  }
  uint64_t v2 = *v0;

  return v2;
}

void *__getCNContactImageDataAvailableKeySymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)ContactsLibrary_33503();
  uint64_t result = dlsym(v2, "CNContactImageDataAvailableKey");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCNContactImageDataAvailableKeySymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t ContactsLibrary_33503()
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  v3[0] = 0;
  if (!ContactsLibraryCore_frameworkLibrary_33508)
  {
    v3[1] = MEMORY[0x1E4F143A8];
    v3[2] = 3221225472;
    v3[3] = __ContactsLibraryCore_block_invoke_33509;
    void v3[4] = &__block_descriptor_40_e5_v8__0l;
    void v3[5] = v3;
    long long v4 = xmmword_1E5518470;
    uint64_t v5 = 0;
    ContactsLibraryCore_frameworkLibrary_33508 = _sl_dlopen();
    id v1 = (void *)v3[0];
    uint64_t v0 = ContactsLibraryCore_frameworkLibrary_33508;
    if (ContactsLibraryCore_frameworkLibrary_33508)
    {
      if (!v3[0]) {
        return v0;
      }
    }
    else
    {
      id v1 = (void *)abort_report_np();
    }
    free(v1);
    return v0;
  }
  return ContactsLibraryCore_frameworkLibrary_33508;
}

void *__getCNContactImageDataKeySymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)ContactsLibrary_33503();
  uint64_t result = dlsym(v2, "CNContactImageDataKey");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCNContactImageDataKeySymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __ContactsLibraryCore_block_invoke_33509()
{
  uint64_t result = _sl_dlopen();
  ContactsLibraryCore_frameworkLibrary_33508 = result;
  return result;
}

void *__getCNContactIdentifierKeySymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)ContactsLibrary_33503();
  uint64_t result = dlsym(v2, "CNContactIdentifierKey");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCNContactIdentifierKeySymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getCNContactEmailAddressesKeySymbolLoc_block_invoke_33513(uint64_t a1)
{
  uint64_t v2 = (void *)ContactsLibrary_33503();
  uint64_t result = dlsym(v2, "CNContactEmailAddressesKey");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCNContactEmailAddressesKeySymbolLoc_ptr_33512 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getCNContactPhoneNumbersKeySymbolLoc_block_invoke_33516(uint64_t a1)
{
  uint64_t v2 = (void *)ContactsLibrary_33503();
  uint64_t result = dlsym(v2, "CNContactPhoneNumbersKey");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCNContactPhoneNumbersKeySymbolLoc_ptr_33515 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_18CC7EDEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__getCNContactNamePrefixKeySymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)ContactsLibrary_33503();
  uint64_t result = dlsym(v2, "CNContactNamePrefixKey");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCNContactNamePrefixKeySymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getCNContactGivenNameKeySymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)ContactsLibrary_33503();
  uint64_t result = dlsym(v2, "CNContactGivenNameKey");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCNContactGivenNameKeySymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getCNContactMiddleNameKeySymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)ContactsLibrary_33503();
  uint64_t result = dlsym(v2, "CNContactMiddleNameKey");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCNContactMiddleNameKeySymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getCNContactFamilyNameKeySymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)ContactsLibrary_33503();
  uint64_t result = dlsym(v2, "CNContactFamilyNameKey");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCNContactFamilyNameKeySymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getCNContactNameSuffixKeySymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)ContactsLibrary_33503();
  uint64_t result = dlsym(v2, "CNContactNameSuffixKey");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCNContactNameSuffixKeySymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getCNContactNicknameKeySymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)ContactsLibrary_33503();
  uint64_t result = dlsym(v2, "CNContactNicknameKey");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCNContactNicknameKeySymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getCNContactPhoneticGivenNameKeySymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)ContactsLibrary_33503();
  uint64_t result = dlsym(v2, "CNContactPhoneticGivenNameKey");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCNContactPhoneticGivenNameKeySymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getCNContactPhoneticMiddleNameKeySymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)ContactsLibrary_33503();
  uint64_t result = dlsym(v2, "CNContactPhoneticMiddleNameKey");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCNContactPhoneticMiddleNameKeySymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getCNContactPhoneticFamilyNameKeySymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)ContactsLibrary_33503();
  uint64_t result = dlsym(v2, "CNContactPhoneticFamilyNameKey");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCNContactPhoneticFamilyNameKeySymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t _INPBSetDefrosterSettingsInCarIntentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  long long v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        id v17 = objc_alloc_init(_INPBIntentMetadata);
        if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_53;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntentMetadata:", v17, 0, 0);
        goto LABEL_41;
      case 2u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v21 = 0;
                goto LABEL_45;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v21 = 0;
        }
LABEL_45:
        [a1 setEnable:v21 != 0];
        goto LABEL_51;
      case 3u:
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v27 = 0;
        while (2)
        {
          uint64_t v28 = *v3;
          unint64_t v29 = *(void *)(a2 + v28);
          if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
            *(void *)(a2 + v2_Block_object_dispose(&a9, 8) = v29 + 1;
            v27 |= (unint64_t)(v30 & 0x7F) << v25;
            if (v30 < 0)
            {
              v25 += 7;
              BOOL v14 = v26++ >= 9;
              if (v14)
              {
                uint64_t v31 = 0;
                goto LABEL_50;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v31 = 0;
        }
        else {
          uint64_t v31 = v27;
        }
LABEL_50:
        [a1 setDefroster:v31];
        goto LABEL_51;
      case 4u:
        id v17 = objc_alloc_init(_INPBDataString);
        if (PBReaderPlaceMark() && _INPBDataStringReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setCarName:", v17, 0, 0);
LABEL_41:

LABEL_51:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_53:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_51;
    }
  }
}

BOOL _INPBRefinementItemReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  long long v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 1) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        id v17 = objc_alloc_init(_INPBSelectionItem);
        if (!PBReaderPlaceMark() || !_INPBSelectionItemReadFrom(v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setItem:", v17, 0, 0);
        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_26:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    PBReaderReadString();
    id v17 = (_INPBSelectionItem *)objc_claimAutoreleasedReturnValue();
    [a1 setSubKeyPath:v17];
LABEL_24:

    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _INPBStringValueReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  long long v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 1) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        PBReaderReadString();
        id v17 = (_INPBValueMetadata *)objc_claimAutoreleasedReturnValue();
        [a1 setValue:v17];
LABEL_24:

        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_26:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    id v17 = objc_alloc_init(_INPBValueMetadata);
    if (!PBReaderPlaceMark() || (_INPBValueMetadataReadFrom(v17, a2) & 1) == 0)
    {

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setValueMetadata:", v17, 0, 0);
    goto LABEL_24;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

INBalanceAmount *INIntentSlotValueTransformFromBalanceAmountValue(void *a1)
{
  id v1 = a1;
  uint64_t v2 = v1;
  if (v1)
  {
    id v3 = [v1 customAmount];
    long long v4 = [v3 valueMetadata];
    INPrivacyEntitlementValidateValueMetadata(v4);
    uint64_t v5 = [v2 currencyAmount];
    uint64_t v6 = [v5 valueMetadata];
    INPrivacyEntitlementValidateValueMetadata(v6);

    if ([v2 hasCurrencyAmount])
    {
      uint64_t v7 = [v2 currencyAmount];
      char v8 = [INBalanceAmount alloc];
      unsigned int v9 = [v7 amount];
      unint64_t v10 = INIntentSlotValueTransformFromDecimalNumberValue(v9);
      uint64_t v11 = [v7 currencyCode];
      unint64_t v12 = [(INBalanceAmount *)v8 initWithAmount:v10 currencyCode:v11];
    }
    else
    {
      char v13 = [INBalanceAmount alloc];
      uint64_t v7 = [v2 customAmount];
      unsigned int v9 = INIntentSlotValueTransformFromDecimalNumberValue(v7);
      int v14 = [v2 hasType];
      uint64_t v15 = [v2 type] - 1;
      if (v15 <= 2) {
        uint64_t v16 = v15 + 1;
      }
      else {
        uint64_t v16 = 0;
      }
      if (v14) {
        uint64_t v17 = v16;
      }
      else {
        uint64_t v17 = 0;
      }
      unint64_t v12 = [(INBalanceAmount *)v13 initWithAmount:v9 balanceType:v17];
    }
  }
  else
  {
    unint64_t v12 = 0;
  }

  return v12;
}

_INPBBalanceAmountValue *INIntentSlotValueTransformToBalanceAmountValue(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_alloc_init(_INPBBalanceAmountValue);
    unint64_t v3 = [v1 balanceType] - 1;
    if (v3 < 3) {
      uint64_t v4 = (v3 + 1);
    }
    else {
      uint64_t v4 = 0x7FFFFFFFLL;
    }
    [(_INPBBalanceAmountValue *)v2 setType:v4];
    if ([v1 balanceType] == 1
      && ([v1 amount], (uint64_t v5 = objc_claimAutoreleasedReturnValue()) != 0)
      && (uint64_t v6 = (void *)v5,
          [v1 currencyCode],
          uint64_t v7 = objc_claimAutoreleasedReturnValue(),
          v7,
          v6,
          v7))
    {
      char v8 = [INCurrencyAmount alloc];
      unsigned int v9 = [v1 amount];
      unint64_t v10 = [v1 currencyCode];
      uint64_t v11 = [(INCurrencyAmount *)v8 initWithAmount:v9 currencyCode:v10];

      unint64_t v12 = INIntentSlotValueTransformToCurrencyAmountValue(v11);
      [(_INPBBalanceAmountValue *)v2 setCurrencyAmount:v12];
    }
    else
    {
      uint64_t v11 = [v1 amount];
      unint64_t v12 = INIntentSlotValueTransformToDecimalNumberValue(v11);
      [(_INPBBalanceAmountValue *)v2 setCustomAmount:v12];
    }
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

_INPBBalanceAmountValue *INIntentSlotValueRedactedBalanceAmountValueFromBalanceAmountValue(void *a1, uint64_t a2, void *a3)
{
  id v5 = a1;
  id v6 = a3;
  uint64_t v7 = [v5 currencyAmount];
  char v8 = [v7 valueMetadata];
  uint64_t v9 = INPrivacyEntitlementOptionsForValueMetadata(v8);

  unint64_t v10 = [v5 customAmount];
  uint64_t v11 = [v10 valueMetadata];
  uint64_t v12 = INPrivacyEntitlementOptionsForValueMetadata(v11) | v9;

  if ((v12 & a2) != 0)
  {
    char v13 = 0;
  }
  else
  {
    char v13 = objc_alloc_init(_INPBBalanceAmountValue);
    int v14 = [v5 currencyAmount];
    uint64_t v15 = INIntentSlotValueRedactedCurrencyAmountValueFromCurrencyAmountValue(v14, a2, v6);
    [(_INPBBalanceAmountValue *)v13 setCurrencyAmount:v15];

    uint64_t v16 = [v5 customAmount];
    uint64_t v17 = INIntentSlotValueRedactedValueFromDecimalNumberValue(v16, a2);
    [(_INPBBalanceAmountValue *)v13 setCustomAmount:v17];

    -[_INPBBalanceAmountValue setType:](v13, "setType:", [v5 type]);
  }

  return v13;
}

__CFString *INSetSeatSettingsInCarIntentResponseCodeGetName(unint64_t a1)
{
  if (a1 > 5) {
    return 0;
  }
  else {
    return off_1E55184A0[a1];
  }
}

id INIntentSlotValueTransformFromDateTimeRange(void *a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v1 = objc_msgSend(a1, "values", 0);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v10;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v10 != v4) {
          objc_enumerationMutation(v1);
        }
        uint64_t v6 = INIntentSlotValueTransformFromDateTimeRangeValue(*(void **)(*((void *)&v9 + 1) + 8 * i));
        if (v6)
        {
          uint64_t v7 = (void *)v6;
          goto LABEL_11;
        }
      }
      uint64_t v3 = [v1 countByEnumeratingWithState:&v9 objects:v13 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
  uint64_t v7 = 0;
LABEL_11:

  return v7;
}

INDateComponentsRange *INIntentSlotValueTransformFromDateTimeRangeValue(void *a1)
{
  id v1 = a1;
  uint64_t v2 = v1;
  if (v1)
  {
    uint64_t v3 = [v1 valueMetadata];
    INPrivacyEntitlementValidateValueMetadata(v3);

    if ([v2 hasValueMetadata])
    {
      uint64_t v4 = [v2 valueMetadata];
      if ([v4 hasInput])
      {
        id v5 = [v4 input];
      }
      else
      {
        id v5 = 0;
      }
    }
    else
    {
      id v5 = 0;
    }
    uint64_t v7 = [v2 startDateTime];
    char v8 = INIntentSlotValueTransformFromDateTime(v7);

    long long v9 = [v2 endDateTime];
    long long v10 = INIntentSlotValueTransformFromDateTime(v9);

    if ([v2 hasRecurrence])
    {
      char v30 = v5;
      long long v11 = [v2 recurrence];
      uint64_t v12 = [v11 weeklyRecurrenceDaysCount];

      if (v12)
      {
        unint64_t v13 = 0;
        uint64_t v14 = 0;
        do
        {
          uint64_t v15 = [v2 recurrence];
          int v16 = *(_DWORD *)([v15 weeklyRecurrenceDays] + 4 * v13);

          v14 |= 1 << (v16 - 1);
          ++v13;
          uint64_t v17 = [v2 recurrence];
          unint64_t v18 = [v17 weeklyRecurrenceDaysCount];
        }
        while (v13 < v18);
      }
      else
      {
        uint64_t v14 = 0;
      }
      unsigned int v20 = [INRecurrenceRule alloc];
      uint64_t v21 = [v2 recurrence];
      uint64_t v22 = [v21 interval];
      unint64_t v23 = [v2 recurrence];
      int v24 = [v23 hasFrequency];
      char v25 = [v2 recurrence];
      char v19 = -[INRecurrenceRule initWithInterval:frequency:weeklyRecurrenceDays:](v20, "initWithInterval:frequency:weeklyRecurrenceDays:", v22, INRecurrenceFrequencyGetFacadeType(v24, [v25 frequency]), v14);

      unsigned int v26 = [v2 recurrence];
      LOBYTE(v20) = [v26 hasOrdinal];

      if (v20)
      {
        uint64_t v27 = [v2 recurrence];
        objc_msgSend(v8, "setWeekdayOrdinal:", objc_msgSend(v27, "ordinal"));
      }
      id v5 = v30;
    }
    else
    {
      char v19 = 0;
    }
    if ([v2 hasAllDay])
    {
      uint64_t v28 = objc_msgSend(NSNumber, "numberWithBool:", objc_msgSend(v2, "allDay"));
    }
    else
    {
      uint64_t v28 = 0;
    }
    uint64_t v6 = [[INDateComponentsRange alloc] initWithStartDateComponents:v8 endDateComponents:v10 recurrenceRule:v19 userInput:v5 allDay:v28];
  }
  else
  {
    uint64_t v6 = 0;
  }

  return v6;
}

id INIntentSlotValueTransformFromDateTimeRanges(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        char v8 = INIntentSlotValueTransformFromDateTimeRange(*(void **)(*((void *)&v11 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  long long v9 = (void *)[v2 copy];

  return v9;
}

id INIntentSlotValueTransformFromDateTimeRangeValues(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        char v8 = INIntentSlotValueTransformFromDateTimeRangeValue(*(void **)(*((void *)&v11 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  long long v9 = (void *)[v2 copy];

  return v9;
}

id INIntentSlotValueTransformToDateTimeRanges(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        char v8 = INIntentSlotValueTransformToDateTimeRange(*(void **)(*((void *)&v11 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  long long v9 = (void *)[v2 copy];

  return v9;
}

id INIntentSlotValueTransformToDateTimeRangeValues(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        char v8 = INIntentSlotValueTransformToDateTimeRangeValue(*(void **)(*((void *)&v11 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  long long v9 = (void *)[v2 copy];

  return v9;
}

_INPBDateTimeRange *INIntentSlotValueRedactedDateTimeRangeFromDateTimeRange(void *a1, uint64_t a2)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  if (v3)
  {
    uint64_t v4 = objc_alloc_init(_INPBDateTimeRange);
    long long v14 = 0u;
    long long v15 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
    uint64_t v5 = objc_msgSend(v3, "values", 0);
    uint64_t v6 = [v5 countByEnumeratingWithState:&v14 objects:v18 count:16];
    if (!v6) {
      goto LABEL_13;
    }
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)v15;
    while (1)
    {
      for (uint64_t i = 0; i != v7; ++i)
      {
        if (*(void *)v15 != v8) {
          objc_enumerationMutation(v5);
        }
        id v10 = *(id *)(*((void *)&v14 + 1) + 8 * i);
        long long v11 = [v10 valueMetadata];
        uint64_t v12 = INPrivacyEntitlementOptionsForValueMetadata(v11);

        if ((v12 & a2) == 0)
        {
          if (!v10) {
            continue;
          }
          [(_INPBDateTimeRange *)v4 addValue:v10];
        }
      }
      uint64_t v7 = [v5 countByEnumeratingWithState:&v14 objects:v18 count:16];
      if (!v7)
      {
LABEL_13:

        goto LABEL_15;
      }
    }
  }
  uint64_t v4 = 0;
LABEL_15:

  return v4;
}

id INIntentSlotValueRedactedDateTimeRangesFromDateTimeRanges(void *a1, uint64_t a2, void *a3)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a3;
  uint64_t v7 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v5, "count"));
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v8 = v5;
  uint64_t v9 = [v8 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)v17;
    do
    {
      for (uint64_t i = 0; i != v10; ++i)
      {
        if (*(void *)v17 != v11) {
          objc_enumerationMutation(v8);
        }
        long long v13 = INIntentSlotValueRedactedDateTimeRangeFromDateTimeRange(*(void **)(*((void *)&v16 + 1) + 8 * i), a2);
        objc_msgSend(v7, "addObject:", v13, (void)v16);
      }
      uint64_t v10 = [v8 countByEnumeratingWithState:&v16 objects:v20 count:16];
    }
    while (v10);
  }

  long long v14 = (void *)[v7 copy];

  return v14;
}

uint64_t _INPBUpdateEventIntentResponseReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        char v25 = objc_alloc_init(_INPBCalendarEvent);
        if (!PBReaderPlaceMark() || (_INPBCalendarEventReadFrom(v25, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setUpdatedEvent:", v25, 0, 0);
      }
      else
      {
        if (v17 != 2)
        {
          if (v17 == 3)
          {
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            while (1)
            {
              uint64_t v21 = *v3;
              unint64_t v22 = *(void *)(a2 + v21);
              if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
              *(void *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0) {
                goto LABEL_37;
              }
              v18 += 7;
              BOOL v14 = v19++ >= 9;
              if (v14)
              {
                uint64_t v24 = 0;
                goto LABEL_40;
              }
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_37:
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v24 = 0;
            }
            else {
              uint64_t v24 = v20;
            }
LABEL_40:
            [a1 setConfirmationReason:v24];
          }
          else
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
          }
          continue;
        }
        PBReaderReadString();
        char v25 = (_INPBCalendarEvent *)objc_claimAutoreleasedReturnValue();
        if (v25) {
          [a1 addConflictingEventIdentifiers:v25];
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _INPBFilePropertyReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v27 = 0;
        while (1)
        {
          uint64_t v28 = *v3;
          unint64_t v29 = *(void *)(a2 + v28);
          if (v29 == -1 || v29 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
          *(void *)(a2 + v2_Block_object_dispose(&a9, 8) = v29 + 1;
          v27 |= (unint64_t)(v30 & 0x7F) << v25;
          if ((v30 & 0x80) == 0) {
            goto LABEL_46;
          }
          v25 += 7;
          BOOL v14 = v26++ >= 9;
          if (v14)
          {
            uint64_t v31 = 0;
            goto LABEL_49;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_46:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v31 = 0;
        }
        else {
          uint64_t v31 = v27;
        }
LABEL_49:
        [a1 setName:v31];
      }
      else if (v17 == 3)
      {
        uint64_t v32 = objc_alloc_init(_INPBFilePropertyValue);
        if (!PBReaderPlaceMark() || (_INPBFilePropertyValueReadFrom(v32, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setValue:", v32, 0, 0);
      }
      else if (v17 == 2)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          unint64_t v22 = *(void *)(a2 + v21);
          if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0) {
            goto LABEL_41;
          }
          v18 += 7;
          BOOL v14 = v19++ >= 9;
          if (v14)
          {
            uint64_t v24 = 0;
            goto LABEL_44;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_41:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v24 = 0;
        }
        else {
          uint64_t v24 = v20;
        }
LABEL_44:
        [a1 setQualifier:v24];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t INCallDestinationTypeHasBackingType(unint64_t a1)
{
  return (a1 < 6) & (0x3Eu >> a1);
}

uint64_t INCallDestinationTypeGetBackingType(uint64_t result)
{
  if ((unint64_t)(result - 1) < 5) {
    return result;
  }
  else {
    return 0x7FFFFFFFLL;
  }
}

uint64_t INCallDestinationTypeGetFacadeType(int a1, int a2)
{
  uint64_t v2 = (a2 - 1);
  if (v2 <= 4) {
    uint64_t v3 = v2 + 1;
  }
  else {
    uint64_t v3 = 0;
  }
  if (a1) {
    return v3;
  }
  else {
    return 0;
  }
}

__CFString *INCallDestinationTypeGetName(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 4) {
    return @"unknown";
  }
  else {
    return off_1E5518558[a1 - 1];
  }
}

uint64_t INCallDestinationTypeWithString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"normal"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"emergency"])
  {
    uint64_t v2 = 2;
  }
  else if ([v1 isEqualToString:@"voicemail"])
  {
    uint64_t v2 = 3;
  }
  else if ([v1 isEqualToString:@"redial"])
  {
    uint64_t v2 = 4;
  }
  else if ([v1 isEqualToString:@"callBack"])
  {
    uint64_t v2 = 5;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INCallDestinationTypeGetLocalizedName(uint64_t a1, void *a2)
{
  id v3 = a2;
  switch(a1)
  {
    case 1:
      uint64_t v4 = @"normal";
      goto LABEL_8;
    case 2:
      uint64_t v4 = @"emergency";
      goto LABEL_8;
    case 3:
      uint64_t v4 = @"voicemail";
      goto LABEL_8;
    case 4:
      uint64_t v4 = @"redial";
      goto LABEL_8;
    case 5:
      uint64_t v4 = @"call back";
LABEL_8:
      id v5 = INLocalizedStringWithLocalizer(v4, v4, v3);
      break;
    default:
      id v5 = 0;
      break;
  }

  return v5;
}

id INIntentSlotValueTransformFromUUIDValue(void *a1)
{
  if (a1)
  {
    id v1 = (objc_class *)MEMORY[0x1E4F29128];
    id v2 = a1;
    id v3 = [v1 alloc];
    uint64_t v4 = [v2 uuidString];

    id v5 = (void *)[v3 initWithUUIDString:v4];
  }
  else
  {
    id v5 = 0;
  }

  return v5;
}

_INPBUUIDValue *INIntentSlotValueTransformToUUIDValue(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    id v2 = objc_alloc_init(_INPBUUIDValue);
    id v3 = [v1 UUIDString];

    [(_INPBUUIDValue *)v2 setUuidString:v3];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INIntentSlotValueRedactedValueFromUUIDValue(void *a1, uint64_t a2)
{
  id v3 = a1;
  uint64_t v4 = [v3 valueMetadata];
  uint64_t v5 = INPrivacyEntitlementOptionsForValueMetadata(v4);

  if ((v5 & a2) != 0) {
    id v6 = 0;
  }
  else {
    id v6 = v3;
  }

  return v6;
}

__CFString *INCreateEventIntentResponseCodeGetName(unint64_t a1)
{
  if (a1 > 5) {
    return 0;
  }
  else {
    return off_1E5518580[a1];
  }
}

__CFString *INPersonRelationshipGetFacadeObject(int a1, unsigned int a2)
{
  uint64_t result = 0;
  if (a2 <= 0xC)
  {
    if (a1) {
      return off_1E5518618[a2];
    }
  }
  return result;
}

uint64_t INPersonRelationshipGetBackingType(void *a1)
{
  id v1 = a1;
  id v2 = v1;
  if (v1)
  {
    if ([v1 isEqualToString:@"com.apple.intents.PersonRelationship.Father"])
    {
      uint64_t v3 = 0;
    }
    else if ([v2 isEqualToString:@"com.apple.intents.PersonRelationship.Mother"])
    {
      uint64_t v3 = 1;
    }
    else if ([v2 isEqualToString:@"com.apple.intents.PersonRelationship.Parent"])
    {
      uint64_t v3 = 2;
    }
    else if ([v2 isEqualToString:@"com.apple.intents.PersonRelationship.Brother"])
    {
      uint64_t v3 = 3;
    }
    else if ([v2 isEqualToString:@"com.apple.intents.PersonRelationship.Sister"])
    {
      uint64_t v3 = 4;
    }
    else if ([v2 isEqualToString:@"com.apple.intents.PersonRelationship.Child"])
    {
      uint64_t v3 = 5;
    }
    else if ([v2 isEqualToString:@"com.apple.intents.PersonRelationship.Friend"])
    {
      uint64_t v3 = 6;
    }
    else if ([v2 isEqualToString:@"com.apple.intents.PersonRelationship.Spouse"])
    {
      uint64_t v3 = 7;
    }
    else if ([v2 isEqualToString:@"com.apple.intents.PersonRelationship.Partner"])
    {
      uint64_t v3 = 8;
    }
    else if ([v2 isEqualToString:@"com.apple.intents.PersonRelationship.Assistant"])
    {
      uint64_t v3 = 9;
    }
    else if ([v2 isEqualToString:@"com.apple.intents.PersonRelationship.Manager"])
    {
      uint64_t v3 = 10;
    }
    else if ([v2 isEqualToString:@"com.apple.intents.PersonRelationship.Son"])
    {
      uint64_t v3 = 11;
    }
    else if ([v2 isEqualToString:@"com.apple.intents.PersonRelationship.Daughter"])
    {
      uint64_t v3 = 12;
    }
    else
    {
      uint64_t v3 = 0x7FFFFFFFLL;
    }
  }
  else
  {
    uint64_t v3 = 0x7FFFFFFFLL;
  }

  return v3;
}

__CFString *INPersonRelationshipValueAsString(__CFString *a1)
{
  if (a1)
  {
    BackingCFNumberType Type = INPersonRelationshipGetBackingType(a1);
    if (BackingType >= 0xD)
    {
      objc_msgSend(NSString, "stringWithFormat:", @"(unknown: %i)", BackingType);
      a1 = (__CFString *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      a1 = off_1E5518680[BackingType];
    }
    uint64_t v1 = vars8;
  }
  return a1;
}

__CFString *INGetVisualCodeIntentResponseCodeGetName(unint64_t a1)
{
  if (a1 > 7) {
    return 0;
  }
  else {
    return off_1E55186E8[a1];
  }
}

id INIntentSlotValueTransformFromDataValue(void *a1)
{
  id v1 = a1;
  id v2 = [v1 valueMetadata];
  INPrivacyEntitlementValidateValueMetadata(v2);

  uint64_t v3 = [v1 value];
  uint64_t v4 = (void *)[v3 copy];

  return v4;
}

id INIntentSlotValueTransformFromDataValues(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  id v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        char v8 = INIntentSlotValueTransformFromDataValue(*(void **)(*((void *)&v11 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  unsigned int v9 = (void *)[v2 copy];

  return v9;
}

_INPBDataValue *INIntentSlotValueTransformToDataValue(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    id v2 = objc_alloc_init(_INPBDataValue);
    [(_INPBDataValue *)v2 setValue:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INIntentSlotValueTransformToDataValues(void *a1)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  id v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v11;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v11 != v6) {
          objc_enumerationMutation(v3);
        }
        char v8 = INIntentSlotValueTransformToDataValue(*(void **)(*((void *)&v10 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v10);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v5);
  }

  return v2;
}

id INIntentSlotValueTransformFromURLValue(void *a1)
{
  id v1 = a1;
  id v2 = v1;
  if (v1)
  {
    id v3 = (void *)MEMORY[0x1E4F1CB10];
    uint64_t v4 = [v1 absoluteString];
    uint64_t v5 = [v3 URLWithString:v4];

    if ([v5 isFileURL] && objc_msgSend(v2, "hasScope")) {
      MEMORY[0x192F97DE0](v5, [v2 scope]);
    }
  }
  else
  {
    uint64_t v5 = 0;
  }

  return v5;
}

_INPBURLValue *INIntentSlotValueTransformToURLValue(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    id v2 = objc_alloc_init(_INPBURLValue);
    id v3 = [v1 absoluteString];
    [(_INPBURLValue *)v2 setAbsoluteString:v3];

    if ([v1 isFileURL])
    {
      uint64_t v4 = (void *)MEMORY[0x192F97DF0](v1);
      [(_INPBURLValue *)v2 setScope:v4];
    }
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id INIntentSlotValueTransformFromURLValues(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  id v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        char v8 = INIntentSlotValueTransformFromURLValue(*(void **)(*((void *)&v11 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  unsigned int v9 = (void *)[v2 copy];

  return v9;
}

id INIntentSlotValueTransformToURLValues(void *a1)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  id v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v11;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v11 != v6) {
          objc_enumerationMutation(v3);
        }
        char v8 = INIntentSlotValueTransformToURLValue(*(void **)(*((void *)&v10 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v10);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v5);
  }

  return v2;
}

id INIntentSlotValueRedactedValueFromURLValue(void *a1, uint64_t a2)
{
  id v3 = a1;
  uint64_t v4 = [v3 valueMetadata];
  uint64_t v5 = INPrivacyEntitlementOptionsForValueMetadata(v4);

  if ((v5 & a2) != 0) {
    id v6 = 0;
  }
  else {
    id v6 = v3;
  }

  return v6;
}

uint64_t INHomeEntityTypeHasBackingType(unint64_t a1)
{
  return (a1 < 0xB) & (0x7FEu >> a1);
}

uint64_t INHomeEntityTypeGetBackingType(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 9) {
    return 0x7FFFFFFFLL;
  }
  else {
    return dword_18CFC4438[a1 - 1];
  }
}

uint64_t INHomeEntityTypeGetFacadeType(int a1, unsigned int a2)
{
  uint64_t result = 0;
  if (a2 <= 6)
  {
    if (a1) {
      return qword_18CFC4460[a2];
    }
  }
  return result;
}

__CFString *INHomeEntityTypeGetName(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 9) {
    return @"unknown";
  }
  else {
    return off_1E5518728[a1 - 1];
  }
}

uint64_t INHomeEntityTypeWithString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"home"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"zone"])
  {
    uint64_t v2 = 2;
  }
  else if ([v1 isEqualToString:@"room"])
  {
    uint64_t v2 = 3;
  }
  else if ([v1 isEqualToString:@"group"])
  {
    uint64_t v2 = 4;
  }
  else if ([v1 isEqualToString:@"scene"])
  {
    uint64_t v2 = 5;
  }
  else if ([v1 isEqualToString:@"trigger"])
  {
    uint64_t v2 = 6;
  }
  else if ([v1 isEqualToString:@"device"])
  {
    uint64_t v2 = 7;
  }
  else if ([v1 isEqualToString:@"serviceGroup"])
  {
    uint64_t v2 = 8;
  }
  else if ([v1 isEqualToString:@"accessory"])
  {
    uint64_t v2 = 9;
  }
  else if ([v1 isEqualToString:@"service"])
  {
    uint64_t v2 = 10;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INHomeEntityTypeGetLocalizedName(uint64_t a1, void *a2)
{
  id v3 = a2;
  switch(a1)
  {
    case 1:
      uint64_t v4 = @"home";
      goto LABEL_13;
    case 2:
      uint64_t v4 = @"zone";
      goto LABEL_13;
    case 3:
      uint64_t v4 = @"room";
      goto LABEL_13;
    case 4:
      uint64_t v4 = @"group";
      goto LABEL_13;
    case 5:
      uint64_t v4 = @"scene";
      goto LABEL_13;
    case 6:
      uint64_t v4 = @"trigger";
      goto LABEL_13;
    case 7:
      uint64_t v4 = @"device";
      goto LABEL_13;
    case 8:
      uint64_t v4 = @"service group";
      goto LABEL_13;
    case 9:
      uint64_t v4 = @"accessory";
      goto LABEL_13;
    case 10:
      uint64_t v4 = @"service";
LABEL_13:
      uint64_t v5 = INLocalizedStringWithLocalizer(v4, v4, v3);
      break;
    default:
      uint64_t v5 = 0;
      break;
  }

  return v5;
}

uint64_t _INPBStartVideoCallIntentResponseReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((int)(v10 >> 3) <= 2) {
        break;
      }
      if (v17 == 1000)
      {
        char v18 = objc_alloc_init(_INPBCallMetrics);
        if (!PBReaderPlaceMark() || (_INPBCallMetricsReadFrom(v18, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setMetrics:", v18, 0, 0);
LABEL_36:

        goto LABEL_44;
      }
      if (v17 != 3)
      {
LABEL_37:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_44;
      }
      char v19 = 0;
      unsigned int v20 = 0;
      uint64_t v21 = 0;
      while (1)
      {
        uint64_t v22 = *v3;
        unint64_t v23 = *(void *)(a2 + v22);
        if (v23 == -1 || v23 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
        *(void *)(a2 + v22) = v23 + 1;
        v21 |= (unint64_t)(v24 & 0x7F) << v19;
        if ((v24 & 0x80) == 0) {
          goto LABEL_40;
        }
        v19 += 7;
        BOOL v14 = v20++ >= 9;
        if (v14)
        {
          uint64_t v25 = 0;
          goto LABEL_43;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_40:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v25 = 0;
      }
      else {
        uint64_t v25 = v21;
      }
LABEL_43:
      [a1 setAudioRoute:v25];
LABEL_44:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    if (v17 == 1)
    {
      PBReaderReadString();
      char v18 = (_INPBCallMetrics *)objc_claimAutoreleasedReturnValue();
      [a1 setStatus:v18];
    }
    else
    {
      if (v17 != 2) {
        goto LABEL_37;
      }
      PBReaderReadString();
      char v18 = (_INPBCallMetrics *)objc_claimAutoreleasedReturnValue();
      if (v18) {
        [a1 addTargetContacts:v18];
      }
    }
    goto LABEL_36;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _INPBConflictingParameterReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 1) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        unint64_t v17 = objc_alloc_init(_INPBSelectionItem);
        if (!PBReaderPlaceMark() || !_INPBSelectionItemReadFrom(v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addAlternateItems:", v17, 0, 0);
        }
        goto LABEL_25;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_27:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    PBReaderReadString();
    unint64_t v17 = (_INPBSelectionItem *)objc_claimAutoreleasedReturnValue();
    [a1 setKeyPath:v17];
LABEL_25:

    goto LABEL_27;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _INPBUUIDValueReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 1) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        PBReaderReadString();
        unint64_t v17 = (_INPBValueMetadata *)objc_claimAutoreleasedReturnValue();
        [a1 setUuidString:v17];
LABEL_24:

        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_26:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unint64_t v17 = objc_alloc_init(_INPBValueMetadata);
    if (!PBReaderPlaceMark() || (_INPBValueMetadataReadFrom(v17, a2) & 1) == 0)
    {

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setValueMetadata:", v17, 0, 0);
    goto LABEL_24;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _INPBWellnessMetadataPairReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        char v18 = objc_alloc_init(_INPBValueMetadata);
        if (!PBReaderPlaceMark() || (_INPBValueMetadataReadFrom(v18, a2) & 1) == 0)
        {
LABEL_35:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setValueMetadata:", v18, 0, 0);
        goto LABEL_30;
      }
      if (v17 == 3) {
        break;
      }
      if (v17 == 2)
      {
        char v18 = objc_alloc_init(_INPBString);
        if (!PBReaderPlaceMark() || (_INPBStringReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_35;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setKey:", v18, 0, 0);
LABEL_30:

        goto LABEL_32;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_32:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v18 = objc_alloc_init(_INPBWellnessMetadataValue);
    if (!PBReaderPlaceMark() || !_INPBWellnessMetadataValueReadFrom(v18, a2)) {
      goto LABEL_35;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setValue:", v18, 0, 0);
    goto LABEL_30;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t INIntentSlotValueTransformFromCondition(void *a1)
{
  id v1 = a1;
  uint64_t v2 = v1;
  if (v1
    && [v1 hasConditionalOperator]
    && (unsigned int v3 = [v2 conditionalOperator] - 2, v3 <= 2))
  {
    uint64_t v4 = qword_18CFC4498[v3];
  }
  else
  {
    uint64_t v4 = 0;
  }

  return v4;
}

__CFString *INSearchForPhotosIntentResponseCodeGetName(unint64_t a1)
{
  if (a1 > 5) {
    return 0;
  }
  else {
    return off_1E55187B8[a1];
  }
}

id INIntentSlotValueTransformFromProperty(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 payload];
  if (![v2 hasType])
  {
    uint64_t v7 = 0;
    goto LABEL_21;
  }
  int v3 = [v2 type];
  if (v3 <= 49)
  {
    switch(v3)
    {
      case 1:
        uint64_t v4 = [v2 payloadStringValues];
        uint64_t v5 = [v4 firstObject];
        uint64_t v6 = INIntentSlotValueTransformFromStringValue(v5);
        goto LABEL_16;
      case 2:
        uint64_t v4 = [v2 payloadDoubleValues];
        uint64_t v5 = [v4 firstObject];
        uint64_t v6 = INIntentSlotValueTransformFromDoubleValue(v5);
        goto LABEL_16;
      case 4:
        uint64_t v4 = [v2 payloadContactValues];
        uint64_t v5 = [v4 firstObject];
        uint64_t v6 = INIntentSlotValueTransformFromContactValueWithAlternatives(v5, 0);
        goto LABEL_16;
      case 6:
        uint64_t v4 = [v2 payloadLocations];
        uint64_t v5 = [v4 firstObject];
        uint64_t v6 = INIntentSlotValueTransformFromLocationValue(v5);
        goto LABEL_16;
      default:
        goto LABEL_24;
    }
  }
  if (v3 > 52)
  {
    if (v3 == 53)
    {
      uint64_t v4 = [v2 payloadContactLists];
      uint64_t v5 = [v4 firstObject];
      char v8 = [v5 contacts];
      uint64_t v9 = INIntentSlotValueTransformFromContacts(v8);
      goto LABEL_19;
    }
    if (v3 == 105)
    {
      uint64_t v4 = [v2 payloadDateTimeValues];
      uint64_t v5 = [v4 firstObject];
      uint64_t v6 = INIntentSlotValueTransformFromDateTime(v5);
LABEL_16:
      uint64_t v7 = (void *)v6;
      goto LABEL_20;
    }
    goto LABEL_24;
  }
  if (v3 == 50)
  {
    uint64_t v4 = [v2 payloadStringLists];
    uint64_t v5 = [v4 firstObject];
    char v8 = [v5 dataStrings];
    uint64_t v9 = INIntentSlotValueTransformFromStrings(v8);
    goto LABEL_19;
  }
  if (v3 != 51)
  {
LABEL_24:
    uint64_t v11 = NSString;
    uint64_t v12 = [v2 type];
    char v13 = @"String";
    switch((int)v12)
    {
      case 1:
        break;
      case 2:
        char v13 = @"Double";
        break;
      case 3:
        char v13 = @"Integer";
        break;
      case 4:
        char v13 = @"Contact";
        break;
      case 5:
        char v13 = @"DateTimeRange";
        break;
      case 6:
        char v13 = @"Location";
        break;
      case 7:
        char v13 = @"DataString";
        break;
      case 8:
        char v13 = @"Long";
        break;
      case 9:
        char v13 = @"PaymentMethod";
        break;
      case 10:
        char v13 = @"Temperature";
        break;
      case 11:
        char v13 = @"Distance";
        break;
      case 12:
        char v13 = @"FinancialAccount";
        break;
      case 13:
        char v13 = @"BillType";
        break;
      case 14:
        char v13 = @"Mass";
        break;
      case 15:
        char v13 = @"Volume";
        break;
      case 16:
        char v13 = @"Speed";
        break;
      case 17:
        char v13 = @"Energy";
        break;
      case 18:
      case 19:
      case 20:
      case 21:
      case 22:
      case 23:
      case 24:
      case 25:
      case 26:
      case 27:
      case 28:
      case 29:
      case 30:
      case 31:
      case 32:
      case 33:
      case 34:
      case 35:
      case 36:
      case 37:
      case 38:
      case 39:
      case 40:
      case 41:
      case 42:
      case 43:
      case 44:
      case 45:
      case 46:
      case 47:
      case 48:
      case 49:
LABEL_30:
        objc_msgSend(NSString, "stringWithFormat:", @"(unknown: %i)", v12);
        char v13 = (__CFString *)objc_claimAutoreleasedReturnValue();
        break;
      case 50:
        char v13 = @"StringList";
        break;
      case 51:
        char v13 = @"DoubleList";
        break;
      case 52:
        char v13 = @"IntegerList";
        break;
      case 53:
        char v13 = @"ContactList";
        break;
      case 54:
        char v13 = @"DateTimeRangeList";
        break;
      case 55:
        char v13 = @"LocationList";
        break;
      case 56:
        char v13 = @"DataStringList";
        break;
      case 57:
        char v13 = @"LongList";
        break;
      case 58:
        char v13 = @"PaymentMethodList";
        break;
      case 59:
        char v13 = @"TemperatureList";
        break;
      case 60:
        char v13 = @"DistanceList";
        break;
      default:
        switch((int)v12)
        {
          case 'd':
            char v13 = @"PrimitiveBool";
            goto LABEL_68;
          case 'e':
            char v13 = @"PrimitiveInt";
            goto LABEL_68;
          case 'f':
            char v13 = @"PrimitiveLong";
            goto LABEL_68;
          case 'g':
            char v13 = @"PrimitiveDouble";
            goto LABEL_68;
          case 'h':
            char v13 = @"PrimitiveString";
            goto LABEL_68;
          case 'i':
            char v13 = @"DateTime";
            goto LABEL_68;
          case 'j':
            goto LABEL_30;
          case 'k':
            char v13 = @"Intent";
            goto LABEL_68;
          case 'l':
            char v13 = @"ModifyRelationship";
            goto LABEL_68;
          case 'm':
            char v13 = @"ModifyNickname";
            goto LABEL_68;
          case 'n':
            char v13 = @"CalendarEvent";
            goto LABEL_68;
          case 'o':
            char v13 = @"EventParticipant";
            goto LABEL_68;
          case 'p':
            char v13 = @"EventAttribute";
            goto LABEL_68;
          default:
            if (v12 != 1000) {
              goto LABEL_30;
            }
            char v13 = @"Extension";
            break;
        }
        break;
    }
LABEL_68:
    uint64_t v14 = [v11 stringWithFormat:@"Unsupported Property of type %@ is not yet supported.", v13];

    id v15 = [MEMORY[0x1E4F1CA00] exceptionWithName:*MEMORY[0x1E4F1C3B8] reason:v14 userInfo:0];
    objc_exception_throw(v15);
  }
  uint64_t v4 = [v2 payloadDoubleLists];
  uint64_t v5 = [v4 firstObject];
  char v8 = [v5 dataStrings];
  uint64_t v9 = INIntentSlotValueTransformFromDoubles(v8);
LABEL_19:
  uint64_t v7 = (void *)v9;

LABEL_20:
LABEL_21:

  return v7;
}

_INPBProperty *INIntentSlotValueTransformToProperty(void *a1, void *a2)
{
  uint64_t v42 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  uint64_t v5 = objc_alloc_init(_INPBProperty);
  id v6 = v3;
  uint64_t v7 = objc_alloc_init(_INPBIntentSlotValue);
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    char v8 = [v6 firstObject];
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();

    if (isKindOfClass)
    {
      [(_INPBIntentSlotValue *)v7 setType:53];
      id v10 = v6;
      uint64_t v11 = objc_alloc_init(_INPBContactList);
      long long v37 = 0u;
      long long v38 = 0u;
      long long v39 = 0u;
      long long v40 = 0u;
      id v12 = v10;
      uint64_t v13 = [v12 countByEnumeratingWithState:&v37 objects:v41 count:16];
      if (v13)
      {
        uint64_t v14 = v13;
        uint64_t v15 = *(void *)v38;
        do
        {
          for (uint64_t i = 0; i != v14; ++i)
          {
            if (*(void *)v38 != v15) {
              objc_enumerationMutation(v12);
            }
            unint64_t v17 = INIntentSlotValueTransformToContact(*(void **)(*((void *)&v37 + 1) + 8 * i));
            [(_INPBContactList *)v11 addContact:v17];
          }
          uint64_t v14 = [v12 countByEnumeratingWithState:&v37 objects:v41 count:16];
        }
        while (v14);
      }

      [(_INPBIntentSlotValue *)v7 addPayloadContactList:v11];
LABEL_11:

      goto LABEL_43;
    }
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    [(_INPBIntentSlotValue *)v7 setType:4];
    char v18 = INIntentSlotValueTransformToContactValue(v6);
    [(_INPBIntentSlotValue *)v7 addPayloadContactValue:v18];
  }
  else
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      [(_INPBIntentSlotValue *)v7 setType:1];
      char v18 = INIntentSlotValueTransformToStringValue(v6);
      [(_INPBIntentSlotValue *)v7 addPayloadStringValue:v18];
    }
    else
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        char v19 = [v6 firstObject];
        objc_opt_class();
        char v20 = objc_opt_isKindOfClass();

        if (v20)
        {
          [(_INPBIntentSlotValue *)v7 setType:50];
          id v21 = v6;
          uint64_t v11 = objc_alloc_init(_INPBStringList);
          long long v37 = 0u;
          long long v38 = 0u;
          long long v39 = 0u;
          long long v40 = 0u;
          id v12 = v21;
          uint64_t v22 = [v12 countByEnumeratingWithState:&v37 objects:v41 count:16];
          if (v22)
          {
            uint64_t v23 = v22;
            uint64_t v24 = *(void *)v38;
            do
            {
              for (uint64_t j = 0; j != v23; ++j)
              {
                if (*(void *)v38 != v24) {
                  objc_enumerationMutation(v12);
                }
                unsigned int v26 = INIntentSlotValueTransformToString(*(void **)(*((void *)&v37 + 1) + 8 * j));
                [(_INPBContactList *)v11 addDataString:v26];
              }
              uint64_t v23 = [v12 countByEnumeratingWithState:&v37 objects:v41 count:16];
            }
            while (v23);
          }

          [(_INPBIntentSlotValue *)v7 addPayloadStringList:v11];
          goto LABEL_11;
        }
      }
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        [(_INPBIntentSlotValue *)v7 setType:2];
        char v18 = INIntentSlotValueTransformToDoubleValue(v6);
        [(_INPBIntentSlotValue *)v7 addPayloadDoubleValue:v18];
      }
      else
      {
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          uint64_t v27 = [v6 firstObject];
          objc_opt_class();
          char v28 = objc_opt_isKindOfClass();

          if (v28)
          {
            [(_INPBIntentSlotValue *)v7 setType:51];
            id v29 = v6;
            uint64_t v11 = objc_alloc_init(_INPBDoubleList);
            long long v37 = 0u;
            long long v38 = 0u;
            long long v39 = 0u;
            long long v40 = 0u;
            id v12 = v29;
            uint64_t v30 = [v12 countByEnumeratingWithState:&v37 objects:v41 count:16];
            if (v30)
            {
              uint64_t v31 = v30;
              uint64_t v32 = *(void *)v38;
              do
              {
                for (uint64_t k = 0; k != v31; ++k)
                {
                  if (*(void *)v38 != v32) {
                    objc_enumerationMutation(v12);
                  }
                  long long v34 = INIntentSlotValueTransformToDouble(*(void **)(*((void *)&v37 + 1) + 8 * k));
                  [(_INPBContactList *)v11 addDataString:v34];
                }
                uint64_t v31 = [v12 countByEnumeratingWithState:&v37 objects:v41 count:16];
              }
              while (v31);
            }

            [(_INPBIntentSlotValue *)v7 addPayloadDoubleList:v11];
            goto LABEL_11;
          }
        }
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          [(_INPBIntentSlotValue *)v7 setType:105];
          char v18 = INIntentSlotValueTransformToDateTime(v6);
          [(_INPBIntentSlotValue *)v7 addPayloadDateTimeValue:v18];
        }
        else
        {
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) == 0)
          {
            [NSString stringWithFormat:@"Property of the type of object %@ is not yet supported.", v6];
            id v36 = [MEMORY[0x1E4F1CA00] exceptionWithName:*MEMORY[0x1E4F1C3B8] reason:objc_claimAutoreleasedReturnValue() userInfo:0];
            objc_exception_throw(v36);
          }
          [(_INPBIntentSlotValue *)v7 setType:6];
          char v18 = INIntentSlotValueTransformToLocationValue(v6);
          [(_INPBIntentSlotValue *)v7 addPayloadLocation:v18];
        }
      }
    }
  }

LABEL_43:
  [(_INPBProperty *)v5 setPayload:v7];
  [(_INPBProperty *)v5 setRole:v4];

  return v5;
}

uint64_t _INPBUncompressFileIntentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        uint64_t v25 = objc_alloc_init(_INPBIntentMetadata);
        if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v25, a2) & 1) == 0)
        {
LABEL_44:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntentMetadata:", v25, 0, 0);
      }
      else
      {
        if (v17 != 3)
        {
          if (v17 == 2)
          {
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            while (1)
            {
              uint64_t v21 = *v3;
              unint64_t v22 = *(void *)(a2 + v21);
              if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
              *(void *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0) {
                goto LABEL_38;
              }
              v18 += 7;
              BOOL v14 = v19++ >= 9;
              if (v14)
              {
                uint64_t v24 = 0;
                goto LABEL_41;
              }
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_38:
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v24 = 0;
            }
            else {
              uint64_t v24 = v20;
            }
LABEL_41:
            [a1 setEntityType:v24];
          }
          else
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
          }
          continue;
        }
        uint64_t v25 = objc_alloc_init(_INPBString);
        if (!PBReaderPlaceMark() || (_INPBStringReadFrom(v25, a2) & 1) == 0) {
          goto LABEL_44;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEntityName:", v25, 0, 0);
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

__CFString *INListRideOptionsIntentResponseCodeGetName(unint64_t a1)
{
  if (a1 > 0xA) {
    return 0;
  }
  else {
    return off_1E5518808[a1];
  }
}

__CFString *INGetRideStatusIntentResponseCodeGetName(unint64_t a1)
{
  if (a1 > 7) {
    return 0;
  }
  else {
    return off_1E5518860[a1];
  }
}

void sub_18CC8F830(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__37058(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__37059(uint64_t a1)
{
}

BOOL _INPBRequestPaymentIntentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v17 = objc_alloc_init(_INPBIntentMetadata);
        if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntentMetadata:", v17, 0, 0);
        goto LABEL_33;
      case 2u:
        unint64_t v17 = objc_alloc_init(_INPBContact);
        if (!PBReaderPlaceMark() || (_INPBContactReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPayer:", v17, 0, 0);
        goto LABEL_33;
      case 3u:
        unint64_t v17 = objc_alloc_init(_INPBCurrencyAmount);
        if (!PBReaderPlaceMark() || (_INPBCurrencyAmountReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCurrencyAmount:", v17, 0, 0);
        goto LABEL_33;
      case 5u:
        unint64_t v17 = objc_alloc_init(_INPBString);
        if PBReaderPlaceMark() && (_INPBStringReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setNote:", v17, 0, 0);
LABEL_33:

LABEL_34:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_36:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_34;
    }
  }
}

void sub_18CC9167C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _INPBIntegerReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = objc_alloc_init(_INPBIntegerValue);
        if (!PBReaderPlaceMark() || !_INPBIntegerValueReadFrom(v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addValue:", v17, 0, 0);
        }
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

INModifyRelationship *INIntentSlotValueTransformFromModifyRelationship(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    uint64_t v2 = [INModifyRelationship alloc];
    id v3 = [v1 targetRelationship];
    id v4 = INIntentSlotValueTransformFromString(v3);
    uint64_t v5 = NSNumber;
    uint64_t v6 = [v1 isRemoval];

    uint64_t v7 = [v5 numberWithBool:v6];
    char v8 = [(INModifyRelationship *)v2 initWithTargetRelationship:v4 isRemoval:v7];
  }
  else
  {
    char v8 = 0;
  }

  return v8;
}

_INPBModifyRelationship *INIntentSlotValueTransformToModifyRelationship(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    uint64_t v2 = objc_alloc_init(_INPBModifyRelationship);
    id v3 = [v1 targetRelationship];
    id v4 = INIntentSlotValueTransformToString(v3);
    [(_INPBModifyRelationship *)v2 setTargetRelationship:v4];

    uint64_t v5 = [v1 isRemoval];

    -[_INPBModifyRelationship setIsRemoval:](v2, "setIsRemoval:", [v5 BOOLValue]);
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INIntentSlotValueTransformFromModifyRelationships(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          char v8 = INIntentSlotValueTransformFromModifyRelationship(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    unsigned int v9 = (void *)[v2 copy];
  }
  else
  {
    unsigned int v9 = 0;
  }

  return v9;
}

id INIntentSlotValueTransformToModifyRelationships(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          char v8 = INIntentSlotValueTransformToModifyRelationship(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    unsigned int v9 = (void *)[v2 copy];
  }
  else
  {
    unsigned int v9 = 0;
  }

  return v9;
}

id INIntentSlotValueRedactedModifyRelationshipFromModifyRelationship(void *a1)
{
  id v1 = a1;

  return v1;
}

uint64_t _INPBDeleteFilePermanentlyIntentResponseReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v23 = 0;
        unsigned int v24 = 0;
        uint64_t v25 = 0;
        while (1)
        {
          uint64_t v26 = *v3;
          unint64_t v27 = *(void *)(a2 + v26);
          if (v27 == -1 || v27 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v28 = *(unsigned char *)(*(void *)(a2 + *v7) + v27);
          *(void *)(a2 + v26) = v27 + 1;
          v25 |= (unint64_t)(v28 & 0x7F) << v23;
          if ((v28 & 0x80) == 0) {
            goto LABEL_41;
          }
          v23 += 7;
          BOOL v14 = v24++ >= 9;
          if (v14)
          {
            uint64_t v25 = 0;
            goto LABEL_43;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_41:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
LABEL_43:
        [a1 setConfirm:v25 != 0];
      }
      else if ((v10 >> 3) == 2)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_37;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_39;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_37:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_39:
        [a1 setSuccess:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _INPBSearchForPhotosIntentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    int v16 = v10 & 7;
    if (v15 || v16 == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unsigned int v18 = objc_alloc_init(_INPBIntentMetadata);
        if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_102;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntentMetadata:", v18, 0, 0);
        goto LABEL_80;
      case 2u:
        unsigned int v18 = objc_alloc_init(_INPBDateTimeRange);
        if (!PBReaderPlaceMark() || (_INPBDateTimeRangeReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_102;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setDateCreated:", v18, 0, 0);
        goto LABEL_80;
      case 3u:
        unsigned int v18 = objc_alloc_init(_INPBLocation);
        if (!PBReaderPlaceMark() || (_INPBLocationReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_102;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLocationCreated:", v18, 0, 0);
        goto LABEL_80;
      case 5u:
        unsigned int v18 = objc_alloc_init(_INPBString);
        if (!PBReaderPlaceMark() || (_INPBStringReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_102;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAlbumName:", v18, 0, 0);
        goto LABEL_80;
      case 8u:
        unsigned int v18 = objc_alloc_init(_INPBStringList);
        if (!PBReaderPlaceMark() || !_INPBStringListReadFrom(v18, a2)) {
          goto LABEL_102;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSearchTerm:", v18, 0, 0);
        goto LABEL_80;
      case 9u:
        if (v16 != 2)
        {
          char v32 = 0;
          unsigned int v33 = 0;
          uint64_t v34 = 0;
          while (1)
          {
            uint64_t v35 = *v3;
            unint64_t v36 = *(void *)(a2 + v35);
            if (v36 == -1 || v36 >= *(void *)(a2 + *v4)) {
              goto LABEL_98;
            }
            char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
            *(void *)(a2 + v35) = v36 + 1;
            v34 |= (unint64_t)(v37 & 0x7F) << v32;
            if (v37 < 0)
            {
              v32 += 7;
              BOOL v14 = v33++ >= 9;
              if (!v14) {
                continue;
              }
            }
            goto LABEL_99;
          }
        }
        uint64_t result = PBReaderPlaceMark();
        if (!result) {
          return result;
        }
        while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4) && !*(unsigned char *)(a2 + *v5))
        {
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          while (1)
          {
            uint64_t v23 = *v3;
            unint64_t v24 = *(void *)(a2 + v23);
            if (v24 == -1 || v24 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v24 + 1;
            v22 |= (unint64_t)(v25 & 0x7F) << v20;
            if (v25 < 0)
            {
              v20 += 7;
              BOOL v14 = v21++ >= 9;
              if (!v14) {
                continue;
              }
            }
            goto LABEL_48;
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_48:
          PBRepeatedInt32Add();
        }
        goto LABEL_83;
      case 0xAu:
        if (v16 == 2)
        {
          uint64_t result = PBReaderPlaceMark();
          if (!result) {
            return result;
          }
          while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4) && !*(unsigned char *)(a2 + *v5))
          {
            char v26 = 0;
            unsigned int v27 = 0;
            uint64_t v28 = 0;
            while (1)
            {
              uint64_t v29 = *v3;
              unint64_t v30 = *(void *)(a2 + v29);
              if (v30 == -1 || v30 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
              *(void *)(a2 + v29) = v30 + 1;
              v28 |= (unint64_t)(v31 & 0x7F) << v26;
              if (v31 < 0)
              {
                v26 += 7;
                BOOL v14 = v27++ >= 9;
                if (!v14) {
                  continue;
                }
              }
              goto LABEL_61;
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_61:
            PBRepeatedInt32Add();
          }
LABEL_83:
          PBReaderRecallMark();
        }
        else
        {
          char v38 = 0;
          unsigned int v39 = 0;
          uint64_t v40 = 0;
          while (1)
          {
            uint64_t v41 = *v3;
            unint64_t v42 = *(void *)(a2 + v41);
            if (v42 == -1 || v42 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v43 = *(unsigned char *)(*(void *)(a2 + *v7) + v42);
            *(void *)(a2 + v41) = v42 + 1;
            v40 |= (unint64_t)(v43 & 0x7F) << v38;
            if (v43 < 0)
            {
              v38 += 7;
              BOOL v14 = v39++ >= 9;
              if (!v14) {
                continue;
              }
            }
            goto LABEL_99;
          }
LABEL_98:
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_99:
          PBRepeatedInt32Add();
        }
        goto LABEL_81;
      case 0xBu:
        unsigned int v18 = objc_alloc_init(_INPBContactList);
        if (!PBReaderPlaceMark() || !_INPBContactListReadFrom(v18, a2)) {
          goto LABEL_102;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPeopleInPhoto:", v18, 0, 0);
        goto LABEL_80;
      case 0xCu:
        unsigned int v18 = objc_alloc_init(_INPBEventList);
        if (!PBReaderPlaceMark() || !_INPBEventListReadFrom(v18, a2)) {
          goto LABEL_102;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEvents:", v18, 0, 0);
        goto LABEL_80;
      case 0xDu:
        unsigned int v18 = objc_alloc_init(_INPBPlaceList);
        if (!PBReaderPlaceMark() || !_INPBPlaceListReadFrom(v18, a2)) {
          goto LABEL_102;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPlaces:", v18, 0, 0);
        goto LABEL_80;
      case 0xEu:
        unsigned int v18 = objc_alloc_init(_INPBActivityList);
        if (!PBReaderPlaceMark() || !_INPBActivityListReadFrom(v18, a2)) {
          goto LABEL_102;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setActivities:", v18, 0, 0);
        goto LABEL_80;
      case 0xFu:
        unsigned int v18 = objc_alloc_init(_INPBGeographicalFeatureList);
        if (!PBReaderPlaceMark() || !_INPBGeographicalFeatureListReadFrom(v18, a2)) {
          goto LABEL_102;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setGeographicalFeatures:", v18, 0, 0);
        goto LABEL_80;
      case 0x10u:
        unsigned int v18 = objc_alloc_init(_INPBString);
        if PBReaderPlaceMark() && (_INPBStringReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setMemoryName:", v18, 0, 0);
LABEL_80:

LABEL_81:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_102:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_81;
    }
  }
}

BOOL _INPBSetClimateSettingsInCarIntentResponseReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v6 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
      return v7 == 0;
    }
    if (*(unsigned char *)(a2 + *v5))
    {
      int v7 = 1;
      return v7 == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    uint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v6) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        LOBYTE(v10) = 0;
        int v7 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      LOBYTE(v10) = 0;
    }
LABEL_14:
    if (v7) {
      BOOL v15 = 1;
    }
    else {
      BOOL v15 = (v10 & 7) == 4;
    }
    if (v15) {
      return v7 == 0;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      return 0;
    }
  }
}

BOOL _INPBSendMessageIntentResponseReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(_INPBMessage);
        if (!PBReaderPlaceMark() || (_INPBMessageReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_32;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSentMessage:", v17, 0, 0);
LABEL_27:

        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_29:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v17 = objc_alloc_init(_INPBMessage);
    if (!PBReaderPlaceMark() || !_INPBMessageReadFrom(v17, a2))
    {
LABEL_32:

      return 0;
    }
    PBReaderRecallMark();
    if (v17) {
      objc_msgSend(a1, "addSentMessages:", v17, 0, 0);
    }
    goto LABEL_27;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _INPBEventListReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 1) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        char v17 = objc_alloc_init(_INPBCondition);
        if (!PBReaderPlaceMark() || (_INPBConditionReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_32;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCondition:", v17, 0, 0);
LABEL_27:

        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_29:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v17 = objc_alloc_init(_INPBEvent);
    if (!PBReaderPlaceMark() || !_INPBEventReadFrom(v17, a2))
    {
LABEL_32:

      return 0;
    }
    PBReaderRecallMark();
    if (v17) {
      objc_msgSend(a1, "addEvent:", v17, 0, 0);
    }
    goto LABEL_27;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _INPBSearchForAccountsIntentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = objc_alloc_init(_INPBIntentMetadata);
        if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_57;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntentMetadata:", v17, 0, 0);
        goto LABEL_37;
      case 2u:
        char v17 = objc_alloc_init(_INPBDataString);
        if (!PBReaderPlaceMark() || !_INPBDataStringReadFrom(v17, a2)) {
          goto LABEL_57;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAccountNickname:", v17, 0, 0);
        goto LABEL_37;
      case 4u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_49;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v21;
        }
LABEL_49:
        [a1 setAccountType:v25];
        goto LABEL_55;
      case 5u:
        char v17 = objc_alloc_init(_INPBDataString);
        if (PBReaderPlaceMark() && _INPBDataStringReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setOrganizationName:", v17, 0, 0);
LABEL_37:

LABEL_55:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_57:

        return 0;
      case 6u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                uint64_t v32 = 0;
                goto LABEL_54;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v32 = 0;
        }
        else {
          uint64_t v32 = v28;
        }
LABEL_54:
        [a1 setRequestedBalanceType:v32];
        goto LABEL_55;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_55;
    }
  }
}

id INIntentSlotValueTransformFromCallRecordValue(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    uint64_t v32 = [INCallRecord alloc];
    uint64_t v2 = [v1 identifier];
    uint64_t v34 = [v1 dateCreated];
    if (v34)
    {
      id v3 = [MEMORY[0x1E4F1C9A8] currentCalendar];
      unint64_t v23 = [v1 dateCreated];
      INIntentSlotValueTransformFromDateTime(v23);
      uint64_t v22 = v24 = v3;
      uint64_t v4 = objc_msgSend(v3, "dateFromComponents:");
    }
    else
    {
      uint64_t v4 = 0;
    }
    int v6 = [v1 hasCallType];
    int v7 = [v1 callType];
    uint64_t v35 = (void *)v2;
    if (v6 && (v7 - 2) <= 8) {
      uint64_t v29 = qword_18CFC4620[v7 - 2];
    }
    else {
      uint64_t v29 = 0;
    }
    int v8 = [v1 hasCallCapability];
    int v9 = [v1 callCapability];
    uint64_t v10 = 2 * (v9 == 2);
    if (v9 == 1) {
      uint64_t v10 = 1;
    }
    if (!v8) {
      uint64_t v10 = 0;
    }
    uint64_t v27 = v10;
    uint64_t v11 = NSNumber;
    char v31 = [v1 callMetrics];
    unint64_t v30 = [v31 value];
    [v30 callDuration];
    uint64_t v28 = objc_msgSend(v11, "numberWithDouble:");
    char v26 = objc_msgSend(NSNumber, "numberWithBool:", objc_msgSend(v1, "unseen"));
    LODWORD(v11) = [v1 hasPreferredCallProvider];
    int v12 = [v1 preferredCallProvider];
    uint64_t v13 = 0;
    if (v11)
    {
      uint64_t v14 = (v12 - 2);
      if (v14 > 2) {
        uint64_t v13 = 0;
      }
      else {
        uint64_t v13 = v14 + 1;
      }
    }
    uint64_t v25 = [v1 participants];
    int v15 = INIntentSlotValueTransformFromContactValues(v25);
    int v16 = [v1 numberOfCalls];
    char v17 = INIntentSlotValueTransformFromInteger(v16);
    unsigned int v18 = [v1 providerId];
    char v19 = [v1 providerBundleId];
    unsigned int v20 = objc_msgSend(NSNumber, "numberWithBool:", objc_msgSend(v1, "isCallerIdBlocked"));
    uint64_t v33 = [(INCallRecord *)v32 initWithIdentifier:v35 dateCreated:v4 callRecordType:v29 callCapability:v27 callDuration:v28 unseen:v26 preferredCallProvider:v13 participants:v15 numberOfCalls:v17 providerId:v18 providerBundleId:v19 isCallerIdBlocked:v20];

    if (v34)
    {
    }
    uint64_t v5 = (void *)v33;
  }
  else
  {
    uint64_t v5 = 0;
  }

  return v5;
}

_INPBCallRecordValue *INIntentSlotValueTransformToCallRecordValue(void *a1)
{
  id v3 = a1;
  if (v3)
  {
    uint64_t v4 = objc_alloc_init(_INPBCallRecordValue);
    uint64_t v5 = [v3 identifier];
    [(_INPBCallRecordValue *)v4 setIdentifier:v5];

    int v6 = [v3 dateCreated];

    if (v6)
    {
      int v7 = [v3 dateCreated];
      if (v7)
      {
        id v1 = [MEMORY[0x1E4F1C9A8] currentCalendar];
        uint64_t v2 = [v3 dateCreated];
        int v8 = [v1 components:3178748 fromDate:v2];
      }
      else
      {
        int v8 = 0;
      }
      int v9 = INIntentSlotValueTransformToDateTime(v8);
      [(_INPBCallRecordValue *)v4 setDateCreated:v9];

      if (v7)
      {
      }
    }
    unint64_t v10 = [v3 callRecordType] - 1;
    if (v10 > 7) {
      uint64_t v11 = 0x7FFFFFFFLL;
    }
    else {
      uint64_t v11 = dword_18CFC4600[v10];
    }
    [(_INPBCallRecordValue *)v4 setCallType:v11];
    int v12 = [v3 callDuration];

    if (v12)
    {
      uint64_t v13 = objc_alloc_init(_INPBCallMetricsValue);
      uint64_t v14 = [v3 callDuration];
      [v14 floatValue];
      [(_INPBCallMetricsValue *)v13 setCallDuration:v15];

      int v16 = objc_alloc_init(_INPBCallMetrics);
      [(_INPBCallMetrics *)v16 setValue:v13];
      [(_INPBCallRecordValue *)v4 setCallMetrics:v16];
    }
    char v17 = [v3 unseen];
    -[_INPBCallRecordValue setUnseen:](v4, "setUnseen:", [v17 BOOLValue]);

    uint64_t v18 = [v3 callCapability];
    if (v18 == 1) {
      unsigned int v19 = 1;
    }
    else {
      unsigned int v19 = 0x7FFFFFFF;
    }
    if (v18 == 2) {
      uint64_t v20 = 2;
    }
    else {
      uint64_t v20 = v19;
    }
    [(_INPBCallRecordValue *)v4 setCallCapability:v20];
    uint64_t v21 = [v3 numberOfCalls];
    uint64_t v22 = INIntentSlotValueTransformToInteger(v21);
    [(_INPBCallRecordValue *)v4 setNumberOfCalls:v22];

    uint64_t v23 = [v3 preferredCallProvider];
    if ((unint64_t)(v23 - 1) >= 3) {
      uint64_t v24 = 0x7FFFFFFFLL;
    }
    else {
      uint64_t v24 = (v23 + 1);
    }
    [(_INPBCallRecordValue *)v4 setPreferredCallProvider:v24];
    uint64_t v25 = [v3 providerId];
    [(_INPBCallRecordValue *)v4 setProviderId:v25];

    char v26 = [v3 providerBundleId];
    [(_INPBCallRecordValue *)v4 setProviderBundleId:v26];

    uint64_t v27 = [v3 isCallerIdBlocked];
    -[_INPBCallRecordValue setIsCallerIdBlocked:](v4, "setIsCallerIdBlocked:", [v27 BOOLValue]);

    uint64_t v28 = [v3 participants];
    uint64_t v29 = INIntentSlotValueTransformToContactValues(v28);
    [(_INPBCallRecordValue *)v4 setParticipants:v29];
  }
  else
  {
    uint64_t v4 = 0;
  }

  return v4;
}

id INIntentSlotValueTransformFromCallRecordValues(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          int v8 = INIntentSlotValueTransformFromCallRecordValue(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    int v9 = (void *)[v2 copy];
  }
  else
  {
    int v9 = 0;
  }

  return v9;
}

id INIntentSlotValueTransformToCallRecordValues(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          int v8 = INIntentSlotValueTransformToCallRecordValue(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    int v9 = (void *)[v2 copy];
  }
  else
  {
    int v9 = 0;
  }

  return v9;
}

id INIntentSlotValueRedactedCallRecordValueFromCallRecordValue(void *a1)
{
  id v1 = a1;

  return v1;
}

uint64_t INWorkoutGoalUnitTypeHasBackingType(unint64_t a1)
{
  return (a1 < 0xB) & (0x7FEu >> a1);
}

uint64_t INWorkoutGoalUnitTypeGetBackingType(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) >= 0xA) {
    return 0x7FFFFFFFLL;
  }
  else {
    return (a1 - 1);
  }
}

uint64_t INWorkoutGoalUnitTypeGetFacadeType(unsigned __int8 a1, unsigned int a2)
{
  if (((a2 < 0xA) & a1) != 0) {
    return a2 + 1;
  }
  else {
    return 0;
  }
}

__CFString *INWorkoutGoalUnitTypeGetName(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 9) {
    return @"unknown";
  }
  else {
    return off_1E5518978[a1 - 1];
  }
}

uint64_t INWorkoutGoalUnitTypeWithString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"inch"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"meter"])
  {
    uint64_t v2 = 2;
  }
  else if ([v1 isEqualToString:@"foot"])
  {
    uint64_t v2 = 3;
  }
  else if ([v1 isEqualToString:@"mile"])
  {
    uint64_t v2 = 4;
  }
  else if ([v1 isEqualToString:@"yard"])
  {
    uint64_t v2 = 5;
  }
  else if ([v1 isEqualToString:@"second"])
  {
    uint64_t v2 = 6;
  }
  else if ([v1 isEqualToString:@"minute"])
  {
    uint64_t v2 = 7;
  }
  else if ([v1 isEqualToString:@"hour"])
  {
    uint64_t v2 = 8;
  }
  else if ([v1 isEqualToString:@"joule"])
  {
    uint64_t v2 = 9;
  }
  else if ([v1 isEqualToString:@"kiloCalorie"])
  {
    uint64_t v2 = 10;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INWorkoutGoalUnitTypeGetLocalizedName(uint64_t a1, void *a2)
{
  id v3 = a2;
  switch(a1)
  {
    case 1:
      uint64_t v4 = @"inch";
      goto LABEL_13;
    case 2:
      uint64_t v4 = @"meter";
      goto LABEL_13;
    case 3:
      uint64_t v4 = @"foot";
      goto LABEL_13;
    case 4:
      uint64_t v4 = @"mile";
      goto LABEL_13;
    case 5:
      uint64_t v4 = @"yard";
      goto LABEL_13;
    case 6:
      uint64_t v4 = @"second";
      goto LABEL_13;
    case 7:
      uint64_t v4 = @"minute";
      goto LABEL_13;
    case 8:
      uint64_t v4 = @"hour";
      goto LABEL_13;
    case 9:
      uint64_t v4 = @"joule";
      goto LABEL_13;
    case 10:
      uint64_t v4 = @"kilo calorie";
LABEL_13:
      uint64_t v5 = INLocalizedStringWithLocalizer(v4, v4, v3);
      break;
    default:
      uint64_t v5 = 0;
      break;
  }

  return v5;
}

id INIntentSlotValueTransformFromDouble(void *a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v1 = objc_msgSend(a1, "values", 0);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v10;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v10 != v4) {
          objc_enumerationMutation(v1);
        }
        uint64_t v6 = INIntentSlotValueTransformFromDoubleValue(*(void **)(*((void *)&v9 + 1) + 8 * i));
        if (v6)
        {
          int v7 = (void *)v6;
          goto LABEL_11;
        }
      }
      uint64_t v3 = [v1 countByEnumeratingWithState:&v9 objects:v13 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
  int v7 = 0;
LABEL_11:

  return v7;
}

id INIntentSlotValueTransformFromDoubleValue(void *a1)
{
  id v1 = a1;
  uint64_t v2 = v1;
  if (v1
    && ([v1 valueMetadata],
        uint64_t v3 = objc_claimAutoreleasedReturnValue(),
        INPrivacyEntitlementValidateValueMetadata(v3),
        v3,
        [v2 hasValue]))
  {
    uint64_t v4 = NSNumber;
    [v2 value];
    uint64_t v5 = objc_msgSend(v4, "numberWithDouble:");
  }
  else
  {
    uint64_t v5 = 0;
  }

  return v5;
}

_INPBDouble *INIntentSlotValueTransformToDouble(void *a1)
{
  id v1 = INIntentSlotValueTransformToDoubleValue(a1);
  if (v1)
  {
    uint64_t v2 = objc_alloc_init(_INPBDouble);
    [(_INPBDouble *)v2 addValue:v1];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

_INPBDoubleValue *INIntentSlotValueTransformToDoubleValue(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    uint64_t v2 = objc_alloc_init(_INPBDoubleValue);
    [v1 doubleValue];
    double v4 = v3;

    [(_INPBDoubleValue *)v2 setValue:v4];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INIntentSlotValueTransformFromDoubles(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        int v8 = INIntentSlotValueTransformFromDouble(*(void **)(*((void *)&v11 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  long long v9 = (void *)[v2 copy];

  return v9;
}

id INIntentSlotValueTransformToDoubles(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        int v8 = INIntentSlotValueTransformToDouble(*(void **)(*((void *)&v11 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  long long v9 = (void *)[v2 copy];

  return v9;
}

id INIntentSlotValueTransformFromDoubleValues(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        int v8 = INIntentSlotValueTransformFromDoubleValue(*(void **)(*((void *)&v11 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  long long v9 = (void *)[v2 copy];

  return v9;
}

id INIntentSlotValueTransformToDoubleValues(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        int v8 = INIntentSlotValueTransformToDoubleValue(*(void **)(*((void *)&v11 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  long long v9 = (void *)[v2 copy];

  return v9;
}

_INPBDouble *INIntentSlotValueRedactedDoubleFromDouble(void *a1, uint64_t a2)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  if (v3)
  {
    uint64_t v4 = objc_alloc_init(_INPBDouble);
    long long v14 = 0u;
    long long v15 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
    uint64_t v5 = objc_msgSend(v3, "values", 0);
    uint64_t v6 = [v5 countByEnumeratingWithState:&v14 objects:v18 count:16];
    if (!v6) {
      goto LABEL_13;
    }
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)v15;
    while (1)
    {
      for (uint64_t i = 0; i != v7; ++i)
      {
        if (*(void *)v15 != v8) {
          objc_enumerationMutation(v5);
        }
        id v10 = *(id *)(*((void *)&v14 + 1) + 8 * i);
        long long v11 = [v10 valueMetadata];
        uint64_t v12 = INPrivacyEntitlementOptionsForValueMetadata(v11);

        if ((v12 & a2) == 0)
        {
          if (!v10) {
            continue;
          }
          [(_INPBDouble *)v4 addValue:v10];
        }
      }
      uint64_t v7 = [v5 countByEnumeratingWithState:&v14 objects:v18 count:16];
      if (!v7)
      {
LABEL_13:

        goto LABEL_15;
      }
    }
  }
  uint64_t v4 = 0;
LABEL_15:

  return v4;
}

id INIntentSlotValueRedactedDoublesFromDoubles(void *a1, uint64_t a2, void *a3)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a3;
  uint64_t v7 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v5, "count"));
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v8 = v5;
  uint64_t v9 = [v8 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)v17;
    do
    {
      for (uint64_t i = 0; i != v10; ++i)
      {
        if (*(void *)v17 != v11) {
          objc_enumerationMutation(v8);
        }
        long long v13 = INIntentSlotValueRedactedDoubleFromDouble(*(void **)(*((void *)&v16 + 1) + 8 * i), a2);
        objc_msgSend(v7, "addObject:", v13, (void)v16);
      }
      uint64_t v10 = [v8 countByEnumeratingWithState:&v16 objects:v20 count:16];
    }
    while (v10);
  }

  long long v14 = (void *)[v7 copy];

  return v14;
}

uint64_t _INPBCreateTaskListIntentResponseReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        long long v17 = objc_alloc_init(_INPBTaskList);
        if (!PBReaderPlaceMark() || !_INPBTaskListReadFrom(v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCreatedTaskList:", v17, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _INPBDictionaryReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        long long v17 = objc_alloc_init(_INPBPair);
        if (!PBReaderPlaceMark() || !_INPBPairReadFrom(v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addPair:", v17, 0, 0);
        }
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL INVoicemailPlaybackStateHasBackingType(unint64_t a1)
{
  return a1 < 4;
}

uint64_t INVoicemailPlaybackStateGetBackingType(unint64_t a1)
{
  if (a1 < 4) {
    return (a1 + 1);
  }
  else {
    return 0x7FFFFFFFLL;
  }
}

uint64_t INVoicemailPlaybackStateGetFacadeType(int a1, int a2)
{
  uint64_t v2 = (a2 - 2);
  if (v2 <= 2) {
    uint64_t v3 = v2 + 1;
  }
  else {
    uint64_t v3 = 0;
  }
  if (a1) {
    return v3;
  }
  else {
    return 0;
  }
}

__CFString *INVoicemailPlaybackStateGetName(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2) {
    return @"unknown";
  }
  else {
    return off_1E55189C8[a1 - 1];
  }
}

uint64_t INVoicemailPlaybackStateWithString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"stopped"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"playing"])
  {
    uint64_t v2 = 2;
  }
  else if ([v1 isEqualToString:@"completed"])
  {
    uint64_t v2 = 3;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INVoicemailPlaybackStateGetLocalizedName(uint64_t a1, void *a2)
{
  id v3 = a2;
  switch(a1)
  {
    case 3:
      uint64_t v4 = @"completed";
      goto LABEL_7;
    case 2:
      uint64_t v4 = @"playing";
      goto LABEL_7;
    case 1:
      uint64_t v4 = @"stopped";
LABEL_7:
      id v5 = INLocalizedStringWithLocalizer(v4, v4, v3);
      goto LABEL_9;
  }
  id v5 = 0;
LABEL_9:

  return v5;
}

__CFString *INQueryHealthSampleIntentResponseCodeGetName(unint64_t a1)
{
  if (a1 > 6) {
    return 0;
  }
  else {
    return off_1E5518A78[a1];
  }
}

uint64_t INPrivacyEntitlementOptionsMissingForExtension(char a1, _OWORD *a2, void *a3)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  if (a1)
  {
    Mutable = CFDictionaryCreateMutable(0, 1, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    CFDictionaryAddValue(Mutable, (const void *)*MEMORY[0x1E4FA99C8], (const void *)*MEMORY[0x1E4F1CFC8]);
    long long v8 = a2[1];
    *(_OWORD *)token.val = *a2;
    *(_OWORD *)&token.val[4] = v8;
    int v9 = TCCAccessCheckAuditToken();
    CFRelease(Mutable);
    uint64_t v6 = 0;
    if (v9 == 1) {
      goto LABEL_15;
    }
    long long v10 = a2[1];
    *(_OWORD *)token.val = *a2;
    *(_OWORD *)&token.val[4] = v10;
    uint64_t v11 = SecTaskCreateWithAuditToken(0, &token);
    if (!v11)
    {
      long long v17 = INSiriLogContextIntents;
      if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_ERROR))
      {
        token.val[0] = 136315138;
        *(void *)&token.val[1] = "_INPrivacyEntitlementHasContactsDBAccessEntitlement";
        _os_log_error_impl(&dword_18CB2F000, v17, OS_LOG_TYPE_ERROR, "%s SecTaskCreateWithAuditToken() failed, assuming the extension process is NOT entitled.", (uint8_t *)&token, 0xCu);
      }
      long long v14 = 0;
      goto LABEL_14;
    }
    unint64_t v12 = v11;
    CFErrorRef error = 0;
    CFTypeRef v13 = SecTaskCopyValueForEntitlement(v11, @"com.apple.Contacts.database-allow", &error);
    long long v14 = (void *)v13;
    CFErrorRef v15 = error;
    if (error)
    {
      long long v16 = INSiriLogContextIntents;
      if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_ERROR))
      {
        token.val[0] = 136315394;
        *(void *)&token.val[1] = "_INPrivacyEntitlementHasContactsDBAccessEntitlement";
        LOWORD(token.val[3]) = 2114;
        *(void *)((char *)&token.val[3] + 2) = v15;
        _os_log_error_impl(&dword_18CB2F000, v16, OS_LOG_TYPE_ERROR, "%s Failed reading entitlement with error: %{public}@", (uint8_t *)&token, 0x16u);
      }

      CFRelease(error);
    }
    else
    {
      if (!v13 || (objc_opt_respondsToSelector() & 1) != 0) {
        goto LABEL_10;
      }
      uint64_t v22 = INSiriLogContextIntents;
      if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_ERROR))
      {
        token.val[0] = 136315394;
        *(void *)&token.val[1] = "_INPrivacyEntitlementHasContactsDBAccessEntitlement";
        LOWORD(token.val[3]) = 2114;
        *(void *)((char *)&token.val[3] + 2) = @"com.apple.Contacts.database-allow";
        _os_log_error_impl(&dword_18CB2F000, v22, OS_LOG_TYPE_ERROR, "%s Expected a Boolean value for the %{public}@ entitlement, but found something else.", (uint8_t *)&token, 0x16u);
      }
    }
    long long v14 = 0;
LABEL_10:
    CFRelease(v12);
LABEL_14:
    int v18 = [v14 BOOLValue];

    uint64_t v6 = v18 ^ 1u;
    goto LABEL_15;
  }
  uint64_t v6 = 0;
LABEL_15:
  if ((a1 & 2) != 0)
  {
    long long v19 = (void *)MEMORY[0x1E4F1E600];
    uint64_t v20 = [v5 bundleIdentifier];
    LODWORD(v19) = [v19 authorizationStatusForBundleIdentifier:v20];

    if (v19 < 3) {
      v6 |= 2uLL;
    }
  }

  return v6;
}

uint64_t INPrivacyEntitlementValidateIntentMetadata(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 requiredEntitlementsCount];
  if (v2)
  {
    uint64_t v3 = v2;
    for (uint64_t i = 0; i != v3; ++i)
      [v1 requiredEntitlementAtIndex:i];
  }

  return 1;
}

uint64_t INPrivacyEntitlementValidateValueMetadata(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 requiredEntitlementsCount];
  if (v2)
  {
    uint64_t v3 = v2;
    for (uint64_t i = 0; i != v3; ++i)
      [v1 requiredEntitlementAtIndex:i];
  }

  return 1;
}

uint64_t INPrivacyEntitlementOptionsForIntentMetadata(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 requiredEntitlementsCount];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = 0;
    for (uint64_t i = 0; i != v3; ++i)
    {
      int v6 = [v1 requiredEntitlementAtIndex:i];
      uint64_t v7 = v4 | 1;
      if (v6 != 1) {
        uint64_t v7 = v4;
      }
      if (v6 == 2) {
        v4 |= 2uLL;
      }
      else {
        uint64_t v4 = v7;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
  }

  return v4;
}

uint64_t INPrivacyEntitlementOptionsForValueMetadata(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 requiredEntitlementsCount];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = 0;
    for (uint64_t i = 0; i != v3; ++i)
    {
      int v6 = [v1 requiredEntitlementAtIndex:i];
      uint64_t v7 = v4 | 1;
      if (v6 != 1) {
        uint64_t v7 = v4;
      }
      if (v6 == 2) {
        v4 |= 2uLL;
      }
      else {
        uint64_t v4 = v7;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
  }

  return v4;
}

uint64_t _INPBDialingContactReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        long long v17 = objc_alloc_init(_INPBDialingContactValue);
        if (!PBReaderPlaceMark() || !_INPBDialingContactValueReadFrom(v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addValue:", v17, 0, 0);
        }
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _INPBResumeTimerIntentResponseReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        long long v17 = objc_alloc_init(_INPBTimer);
        if (!PBReaderPlaceMark() || !_INPBTimerReadFrom(v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addResumedTimers:", v17, 0, 0);
        }
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

id INIntentSlotValueTransformFromJSONDictionary(void *a1)
{
  id v1 = a1;
  uint64_t v2 = v1;
  if (v1 && [v1 hasJsonString])
  {
    uint64_t v3 = [v2 jsonString];
    uint64_t v4 = v3;
    if (v3)
    {
      id v5 = [v3 dataUsingEncoding:4];
      uint64_t v10 = 0;
      int v6 = [MEMORY[0x1E4F28D90] JSONObjectWithData:v5 options:0 error:&v10];
      uint64_t v7 = v6;
      id v8 = 0;
      if (!v10) {
        id v8 = v6;
      }
    }
    else
    {
      id v8 = 0;
    }
  }
  else
  {
    id v8 = 0;
  }

  return v8;
}

_INPBJSONDictionary *INIntentSlotValueTransformToJSONDictionary(uint64_t a1)
{
  if (a1)
  {
    uint64_t v5 = 0;
    id v1 = [MEMORY[0x1E4F28D90] dataWithJSONObject:a1 options:0 error:&v5];
    uint64_t v2 = 0;
    if (!v5)
    {
      uint64_t v2 = objc_alloc_init(_INPBJSONDictionary);
      uint64_t v3 = (void *)[[NSString alloc] initWithData:v1 encoding:4];
      [(_INPBJSONDictionary *)v2 setJsonString:v3];
    }
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

__CFString *INStartAudioCallIntentResponseCodeGetName(unint64_t a1)
{
  if (a1 > 8) {
    return 0;
  }
  else {
    return off_1E5518B20[a1];
  }
}

uint64_t _INPBCopyFileIntentResponseReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_50;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_52;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_50:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_52:
        [a1 setOverwrite:v19 != 0];
        goto LABEL_62;
      case 2u:
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v26 = 0;
        while (2)
        {
          uint64_t v27 = *v3;
          unint64_t v28 = *(void *)(a2 + v27);
          if (v28 == -1 || v28 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
            *(void *)(a2 + v27) = v28 + 1;
            v26 |= (unint64_t)(v29 & 0x7F) << v24;
            if (v29 < 0)
            {
              v24 += 7;
              BOOL v14 = v25++ >= 9;
              if (v14)
              {
                uint64_t v26 = 0;
                goto LABEL_56;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v26 = 0;
        }
LABEL_56:
        [a1 setSuccess:v26 != 0];
        goto LABEL_62;
      case 3u:
        char v30 = 0;
        unsigned int v31 = 0;
        uint64_t v32 = 0;
        while (2)
        {
          uint64_t v33 = *v3;
          unint64_t v34 = *(void *)(a2 + v33);
          if (v34 == -1 || v34 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v35 = *(unsigned char *)(*(void *)(a2 + *v7) + v34);
            *(void *)(a2 + v33) = v34 + 1;
            v32 |= (unint64_t)(v35 & 0x7F) << v30;
            if (v35 < 0)
            {
              v30 += 7;
              BOOL v14 = v31++ >= 9;
              if (v14)
              {
                uint64_t v36 = 0;
                goto LABEL_61;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v36 = 0;
        }
        else {
          uint64_t v36 = v32;
        }
LABEL_61:
        [a1 setEntityType:v36];
        goto LABEL_62;
      case 4u:
        char v37 = objc_alloc_init(_INPBString);
        if (!PBReaderPlaceMark() || (_INPBStringReadFrom(v37, a2) & 1) == 0) {
          goto LABEL_64;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEntityName:", v37, 0, 0);
        goto LABEL_48;
      case 5u:
        char v37 = objc_alloc_init(_INPBString);
        if PBReaderPlaceMark() && (_INPBStringReadFrom(v37, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setDestinationName:", v37, 0, 0);
LABEL_48:

LABEL_62:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_64:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_62;
    }
  }
}

uint64_t _INPBPaymentMethodReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(_INPBPaymentMethodValue);
        if (!PBReaderPlaceMark() || !_INPBPaymentMethodValueReadFrom(v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addValue:", v17, 0, 0);
        }
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

INMessageReaction *INIntentSlotValueTransformFromMessageReaction(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    uint64_t v2 = [INMessageReaction alloc];
    int v3 = [v1 hasReactionType];
    int v4 = [v1 reactionType];
    if (v3 && (v4 - 1) <= 0xA) {
      uint64_t v5 = qword_18CFC4580[v4 - 1];
    }
    else {
      uint64_t v5 = 0;
    }
    int v6 = [v1 reactionDescription];
    uint64_t v7 = [v1 emoji];
    char v8 = [v1 sticker];

    unsigned int v9 = INIntentSlotValueTransformFromSticker(v8);
    unint64_t v10 = [(INMessageReaction *)v2 initWithReactionType:v5 reactionDescription:v6 emoji:v7 sticker:v9];
  }
  else
  {
    unint64_t v10 = 0;
  }

  return v10;
}

_INPBMessageReaction *INIntentSlotValueTransformToMessageReaction(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    uint64_t v2 = objc_alloc_init(_INPBMessageReaction);
    -[_INPBMessageReaction setReactionType:](v2, "setReactionType:", INMessageReactionTypeGetBackingType([v1 reactionType]));
    int v3 = [v1 reactionDescription];
    [(_INPBMessageReaction *)v2 setReactionDescription:v3];

    int v4 = [v1 emoji];
    [(_INPBMessageReaction *)v2 setEmoji:v4];

    uint64_t v5 = [v1 sticker];

    int v6 = INIntentSlotValueTransformToSticker(v5);
    [(_INPBMessageReaction *)v2 setSticker:v6];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INIntentSlotValueTransformFromMessageReactions(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          char v8 = INIntentSlotValueTransformFromMessageReaction(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    unsigned int v9 = (void *)[v2 copy];
  }
  else
  {
    unsigned int v9 = 0;
  }

  return v9;
}

id INIntentSlotValueTransformToMessageReactions(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          char v8 = INIntentSlotValueTransformToMessageReaction(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    unsigned int v9 = (void *)[v2 copy];
  }
  else
  {
    unsigned int v9 = 0;
  }

  return v9;
}

id INIntentSlotValueRedactedMessageReactionFromMessageReaction(void *a1)
{
  id v1 = a1;

  return v1;
}

BOOL _INPBResumeWorkoutIntentResponseReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v6 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
      return v7 == 0;
    }
    if (*(unsigned char *)(a2 + *v5))
    {
      int v7 = 1;
      return v7 == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    uint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v6) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        LOBYTE(v10) = 0;
        int v7 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      LOBYTE(v10) = 0;
    }
LABEL_14:
    if (v7) {
      BOOL v15 = 1;
    }
    else {
      BOOL v15 = (v10 & 7) == 4;
    }
    if (v15) {
      return v7 == 0;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      return 0;
    }
  }
}

BOOL INMessageReactionTypeHasBackingType(uint64_t a1)
{
  switch(a1)
  {
    case 1000:
    case 1001:
    case 1002:
    case 1003:
    case 1004:
    case 1005:
    case 1006:
    case 1007:
    case 1008:
      BOOL result = 1;
      break;
    default:
      BOOL result = a1 == 1 || a1 == 2;
      break;
  }
  return result;
}

uint64_t INMessageReactionTypeGetBackingType(uint64_t a1)
{
  switch(a1)
  {
    case 1000:
      uint64_t result = 1;
      break;
    case 1001:
      uint64_t result = 2;
      break;
    case 1002:
      uint64_t result = 3;
      break;
    case 1003:
      uint64_t result = 4;
      break;
    case 1004:
      uint64_t result = 5;
      break;
    case 1005:
      uint64_t result = 6;
      break;
    case 1006:
      uint64_t result = 7;
      break;
    case 1007:
      uint64_t result = 8;
      break;
    case 1008:
      uint64_t result = 9;
      break;
    default:
      if (a1 == 2) {
        unsigned int v2 = 11;
      }
      else {
        unsigned int v2 = 0x7FFFFFFF;
      }
      if (a1 == 1) {
        uint64_t result = 10;
      }
      else {
        uint64_t result = v2;
      }
      break;
  }
  return result;
}

uint64_t INMessageReactionTypeGetFacadeType(int a1, int a2)
{
  if (a1 && (a2 - 1) <= 0xA) {
    return qword_18CFC4580[a2 - 1];
  }
  else {
    return 0;
  }
}

__CFString *INMessageReactionTypeGetName(uint64_t a1)
{
  uint64_t v1 = a1 - 1000;
  uint64_t result = @"tapbackLikedReaction";
  switch(v1)
  {
    case 0:
      return result;
    case 1:
      uint64_t result = @"tapbackDislikedReaction";
      break;
    case 2:
      uint64_t result = @"tapbackEmphasizedReaction";
      break;
    case 3:
      uint64_t result = @"tapbackLovedReaction";
      break;
    case 4:
      uint64_t result = @"tapbackQuestionedReaction";
      break;
    case 5:
      uint64_t result = @"tapbackLaughedReaction";
      break;
    case 6:
      uint64_t result = @"droppedSticker";
      break;
    case 7:
      uint64_t result = @"tapbackSticker";
      break;
    case 8:
      uint64_t result = @"tapbackGeneratedEmoji";
      break;
    default:
      id v3 = @"generic";
      if (@"tapbackLikedReaction" != (__CFString *)2) {
        id v3 = @"unknown";
      }
      if (@"tapbackLikedReaction" == (__CFString *)1) {
        uint64_t result = @"emoji";
      }
      else {
        uint64_t result = v3;
      }
      break;
  }
  return result;
}

uint64_t INMessageReactionTypeWithString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"tapbackLikedReaction"])
  {
    uint64_t v2 = 1000;
  }
  else if ([v1 isEqualToString:@"tapbackDislikedReaction"])
  {
    uint64_t v2 = 1001;
  }
  else if ([v1 isEqualToString:@"tapbackEmphasizedReaction"])
  {
    uint64_t v2 = 1002;
  }
  else if ([v1 isEqualToString:@"tapbackLovedReaction"])
  {
    uint64_t v2 = 1003;
  }
  else if ([v1 isEqualToString:@"tapbackQuestionedReaction"])
  {
    uint64_t v2 = 1004;
  }
  else if ([v1 isEqualToString:@"tapbackLaughedReaction"])
  {
    uint64_t v2 = 1005;
  }
  else if ([v1 isEqualToString:@"droppedSticker"])
  {
    uint64_t v2 = 1006;
  }
  else if ([v1 isEqualToString:@"tapbackSticker"])
  {
    uint64_t v2 = 1007;
  }
  else if ([v1 isEqualToString:@"tapbackGeneratedEmoji"])
  {
    uint64_t v2 = 1008;
  }
  else if ([v1 isEqualToString:@"emoji"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"generic"])
  {
    uint64_t v2 = 2;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INMessageReactionTypeGetLocalizedName(uint64_t a1, void *a2)
{
  id v3 = a2;
  switch(a1)
  {
    case 1000:
      uint64_t v4 = @"tapback liked reaction";
      goto LABEL_15;
    case 1001:
      uint64_t v4 = @"tapback disliked reaction";
      goto LABEL_15;
    case 1002:
      uint64_t v4 = @"tapback emphasized reaction";
      goto LABEL_15;
    case 1003:
      uint64_t v4 = @"tapback loved reaction";
      goto LABEL_15;
    case 1004:
      uint64_t v4 = @"tapback questioned reaction";
      goto LABEL_15;
    case 1005:
      uint64_t v4 = @"tapback laughed reaction";
      goto LABEL_15;
    case 1006:
      uint64_t v4 = @"dropped sticker";
      goto LABEL_15;
    case 1007:
      uint64_t v4 = @"tapback sticker";
      goto LABEL_15;
    case 1008:
      uint64_t v4 = @"tapback generated emoji";
      goto LABEL_15;
    default:
      if (a1 == 1)
      {
        uint64_t v4 = @"emoji";
        goto LABEL_15;
      }
      if (a1 == 2)
      {
        uint64_t v4 = @"generic";
LABEL_15:
        uint64_t v5 = INLocalizedStringWithLocalizer(v4, v4, v3);
        goto LABEL_16;
      }
      uint64_t v5 = 0;
LABEL_16:

      return v5;
  }
}

INObject *INIntentSlotValueTransformFromCustomObject(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    uint64_t v2 = [INObject alloc];
    id v3 = [v1 identifier];
    uint64_t v4 = [v1 displayString];
    uint64_t v5 = objc_msgSend(v4, "_intents_decodeFromProto");
    uint64_t v6 = [v1 pronunciationHint];
    int v7 = [(INObject *)v2 initWithIdentifier:v3 displayString:v5 pronunciationHint:v6];

    char v8 = [v1 alternatives];
    unsigned int v9 = INIntentSlotValueTransformFromDataStrings(v8);
    [(INObject *)v7 setAlternativeSpeakableMatches:v9];

    uint64_t v10 = [v1 subtitleString];
    uint64_t v11 = objc_msgSend(v10, "_intents_decodeFromProto");
    [(INObject *)v7 setSubtitleString:v11];

    unint64_t v12 = [v1 displayImage];

    char v13 = INIntentSlotValueTransformFromImageValue(v12);
    [(INObject *)v7 setDisplayImage:v13];
  }
  else
  {
    int v7 = 0;
  }

  return v7;
}

_INPBCustomObject *INIntentSlotValueTransformToCustomObject(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_alloc_init(_INPBCustomObject);
    id v3 = [v1 identifier];
    [(_INPBCustomObject *)v2 setIdentifier:v3];

    uint64_t v4 = [v1 displayString];
    uint64_t v5 = objc_msgSend(v4, "_intents_encodeForProto");
    [(_INPBCustomObject *)v2 setDisplayString:v5];

    uint64_t v6 = [v1 pronunciationHint];
    [(_INPBCustomObject *)v2 setPronunciationHint:v6];

    int v7 = [v1 alternativeSpeakableMatches];
    if (v7)
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass()) {
        char v8 = v7;
      }
      else {
        char v8 = 0;
      }
    }
    else
    {
      char v8 = 0;
    }
    id v9 = v8;

    uint64_t v10 = INIntentSlotValueTransformToDataStrings(v9);

    [(_INPBCustomObject *)v2 setAlternatives:v10];
    uint64_t v11 = [v1 subtitleString];
    unint64_t v12 = objc_msgSend(v11, "_intents_encodeForProto");
    [(_INPBCustomObject *)v2 setSubtitleString:v12];

    char v13 = [v1 displayImage];
    long long v14 = INIntentSlotValueTransformToImageValue(v13);
    [(_INPBCustomObject *)v2 setDisplayImage:v14];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INIntentSlotValueTransformFromCustomObjects(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          char v8 = INIntentSlotValueTransformFromCustomObject(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    id v9 = (void *)[v2 copy];
  }
  else
  {
    id v9 = 0;
  }

  return v9;
}

id INIntentSlotValueTransformToCustomObjects(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          char v8 = INIntentSlotValueTransformToCustomObject(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    id v9 = (void *)[v2 copy];
  }
  else
  {
    id v9 = 0;
  }

  return v9;
}

id INIntentSlotValueRedactedCustomObjectFromCustomObject(void *a1)
{
  id v1 = a1;

  return v1;
}

id INIntentCreate(void *a1, void *a2)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  if (v4)
  {
    id v19 = 0;
    uint64_t v5 = [MEMORY[0x1E4F28D90] JSONObjectWithData:v4 options:0 error:&v19];
    id v6 = v19;
    if (v5)
    {
      INIntentCreateFromDictionary(v3, v5);
      id v7 = (id)objc_claimAutoreleasedReturnValue();
      goto LABEL_21;
    }
  }
  else
  {
    id v6 = 0;
  }
  if (!v3)
  {
    id v7 = 0;
    goto LABEL_22;
  }
  char v8 = INIntentSchemaGetIntentDescriptionWithType(v3);
  uint64_t v5 = v8;
  if (v8)
  {
    id v9 = (objc_class *)[v8 dataClass];
    BOOL v10 = v4 == 0;
    if (!v9) {
      BOOL v10 = 1;
    }
    if (v10) {
      id v11 = 0;
    }
    else {
      id v11 = (id)[[v9 alloc] initWithData:v4];
    }
    BOOL v15 = (objc_class *)[v5 facadeClass];
    id v7 = 0;
    if (v15 && v11) {
      id v7 = (id)[[v15 alloc] initWithIdentifier:0 backingStore:v11];
    }
  }
  else
  {
    id v17 = 0;
    id v18 = 0;
    long long v12 = INSchemaWithTypeName(v3, &v18, &v17);
    id v11 = v18;
    id v13 = v17;
    if (v12)
    {
      id v7 = [[INIntent alloc] _initWithIdentifier:0 schema:v12 name:v11 data:v4];
      long long v14 = [v12 _mainBundleIdentifier];
      [v7 _setLaunchId:v14];
    }
    else
    {
      id v7 = 0;
    }
  }
LABEL_21:

LABEL_22:

  return v7;
}

INAppIntent *INIntentCreateFromDictionary(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  uint64_t v5 = [v4 objectForKeyedSubscript:@"appIntentIdentifier"];

  if (v5)
  {
    id v6 = [[INAppIntent alloc] initWithJSONDictionary:v4];
LABEL_9:

    goto LABEL_10;
  }
  if (v3
    || ([v4 objectForKeyedSubscript:@"typeName"],
        (id v3 = (NSString *)objc_claimAutoreleasedReturnValue()) != 0))
  {
    id v7 = INIntentSchemaGetIntentDescriptionWithType(v3);
    char v8 = (objc_class *)[v7 facadeClass];
    if (v8 || (char v8 = NSClassFromString(v3)) != 0)
    {
      id v6 = (INAppIntent *)objc_alloc_init(v8);
    }
    else
    {
      id v14 = 0;
      id v15 = 0;
      BOOL v10 = INSchemaWithTypeName(v3, &v15, &v14);
      id v11 = v15;
      id v12 = v14;
      id v6 = [[INIntent alloc] _initWithIdentifier:0 schema:v10 name:v11 data:0];

      id v13 = [v10 _mainBundleIdentifier];
      [(INAppIntent *)v6 _setLaunchId:v13];
    }
    [(INIntent *)v6 _updateWithJSONDictionary:v4];

    goto LABEL_9;
  }
  id v6 = 0;
LABEL_10:

  return v6;
}

id INIntentResponseCreate(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (!v4)
  {
    id v6 = 0;
    uint64_t v5 = 0;
LABEL_6:
    char v7 = 1;
    if (!v3) {
      goto LABEL_18;
    }
    goto LABEL_7;
  }
  id v19 = 0;
  uint64_t v5 = [MEMORY[0x1E4F28D90] JSONObjectWithData:v4 options:0 error:&v19];
  id v6 = v19;
  if (!v5) {
    goto LABEL_6;
  }

  if (v3)
  {
    id v4 = 0;
    char v7 = 0;
    goto LABEL_7;
  }
  id v3 = [v5 objectForKeyedSubscript:@"typeName"];
  char v7 = 0;
  id v4 = 0;
  if (!v3)
  {
LABEL_18:
    id v15 = 0;
    goto LABEL_19;
  }
LABEL_7:
  char v8 = INIntentSchemaGetIntentResponseDescriptionWithType(v3);
  if ([v8 facadeClass]
    || (uint64_t v17 = 0,
        id v18 = 0,
        INSchemaWithTypeName(v3, &v18, &v17),
        id v9 = objc_claimAutoreleasedReturnValue(),
        id v10 = v18,
        v9,
        v10,
        v9))
  {
    id v11 = [[_INPBIntentResponse alloc] initWithData:v4];
    if (![(_INPBIntentResponse *)v11 hasPayloadSuccess])
    {
      id v12 = objc_alloc_init(_INPBIntentResponsePayloadSuccess);
      [(_INPBIntentResponsePayloadSuccess *)v12 setResponseTypeName:v3];
      [(_INPBIntentResponse *)v11 setPayloadSuccess:v12];
    }
    id v13 = (objc_class *)[v8 facadeClass];
    if (!v13) {
      id v13 = (objc_class *)objc_opt_class();
    }
    id v14 = (void *)[[v13 alloc] initWithBackingStore:v11];
    id v15 = v14;
    if ((v7 & 1) == 0) {
      [v14 _updateWithJSONDictionary:v5];
    }
  }
  else
  {
    id v15 = 0;
  }

LABEL_19:

  return v15;
}

uint64_t INIntentResponseIsAutoSendFailure()
{
  return 0;
}

uint64_t INIntentResponseIsFailure(void *a1)
{
  unint64_t v1 = [a1 _intentResponseCode];
  return (v1 < 7) & (0x61u >> v1);
}

__CFString *INSearchForNotebookItemsIntentResponseCodeGetName(unint64_t a1)
{
  if (a1 > 5) {
    return 0;
  }
  else {
    return off_1E5518B88[a1];
  }
}

__CFString *INSetClimateSettingsInCarIntentResponseCodeGetName(unint64_t a1)
{
  if (a1 > 5) {
    return 0;
  }
  else {
    return off_1E5518BB8[a1];
  }
}

uint64_t _INPBPaymentMethodValueReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  char v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t v17 = objc_alloc_init(_INPBValueMetadata);
        if (!PBReaderPlaceMark() || (_INPBValueMetadataReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_44;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setValueMetadata:", v17, 0, 0);
        goto LABEL_36;
      case 2u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_41;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v21;
        }
LABEL_41:
        [a1 setType:v25];
        goto LABEL_42;
      case 3u:
        PBReaderReadString();
        uint64_t v17 = (_INPBValueMetadata *)objc_claimAutoreleasedReturnValue();
        [a1 setName:v17];
        goto LABEL_36;
      case 4u:
        uint64_t v17 = objc_alloc_init(_INPBImageValue);
        if PBReaderPlaceMark() && (_INPBImageValueReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setIcon:", v17, 0, 0);
LABEL_36:

LABEL_42:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_44:

        return 0;
      case 5u:
        PBReaderReadString();
        uint64_t v17 = (_INPBValueMetadata *)objc_claimAutoreleasedReturnValue();
        [a1 setIdentificationHint:v17];
        goto LABEL_36;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_42;
    }
  }
}

id _INVoiceShortcutError(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  char v7 = objc_opt_new();
  [v7 setObject:v6 forKeyedSubscript:*MEMORY[0x1E4F28228]];

  if (v5) {
    [v7 setObject:v5 forKeyedSubscript:*MEMORY[0x1E4F28A50]];
  }
  char v8 = [MEMORY[0x1E4F28C58] errorWithDomain:@"IntentsErrorDomain" code:a1 userInfo:v7];

  return v8;
}

uint64_t _INPBSetAudioSourceInCarIntentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    char v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        uint64_t v25 = objc_alloc_init(_INPBIntentMetadata);
        if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v25, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntentMetadata:", v25, 0, 0);
      }
      else if (v17 == 2)
      {
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (1)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
          *(void *)(a2 + v29) = v30 + 1;
          v28 |= (unint64_t)(v31 & 0x7F) << v26;
          if ((v31 & 0x80) == 0) {
            goto LABEL_46;
          }
          v26 += 7;
          BOOL v14 = v27++ >= 9;
          if (v14)
          {
            uint64_t v32 = 0;
            goto LABEL_49;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_46:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v32 = 0;
        }
        else {
          uint64_t v32 = v28;
        }
LABEL_49:
        [a1 setAudioSource:v32];
      }
      else if (v17 == 3)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          unint64_t v22 = *(void *)(a2 + v21);
          if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0) {
            goto LABEL_41;
          }
          v18 += 7;
          BOOL v14 = v19++ >= 9;
          if (v14)
          {
            uint64_t v24 = 0;
            goto LABEL_44;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_41:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v24 = 0;
        }
        else {
          uint64_t v24 = v20;
        }
LABEL_44:
        [a1 setRelativeAudioSourceReference:v24];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _INPBIntentResponseReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  char v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_53;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_56;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_53:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v23 = 0;
        }
        else {
          uint64_t v23 = v19;
        }
LABEL_56:
        [a1 setType:v23];
        goto LABEL_65;
      case 2u:
        uint64_t v25 = objc_alloc_init(_INPBIntentResponsePayloadSuccess);
        if (!PBReaderPlaceMark() || (_INPBIntentResponsePayloadSuccessReadFrom(v25, a2) & 1) == 0) {
          goto LABEL_67;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPayloadSuccess:", v25, 0, 0);
        goto LABEL_37;
      case 3u:
        uint64_t v25 = objc_alloc_init(_INPBIntentResponsePayloadFailure);
        if (!PBReaderPlaceMark() || (_INPBIntentResponsePayloadFailureReadFrom(v25, a2) & 1) == 0) {
          goto LABEL_67;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPayloadFailure:", v25, 0, 0);
        goto LABEL_37;
      case 4u:
        uint64_t v25 = objc_alloc_init(_INPBUserActivity);
        if (PBReaderPlaceMark() && _INPBUserActivityReadFrom(v25, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setUserActivity:", v25, 0, 0);
LABEL_37:

LABEL_65:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_67:

        return 0;
      case 5u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                uint64_t v28 = 0;
                goto LABEL_60;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_60:
        [a1 setRequiresAuthentication:v28 != 0];
        goto LABEL_65;
      case 6u:
        char v32 = 0;
        unsigned int v33 = 0;
        uint64_t v34 = 0;
        while (2)
        {
          uint64_t v35 = *v3;
          unint64_t v36 = *(void *)(a2 + v35);
          if (v36 == -1 || v36 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
            *(void *)(a2 + v35) = v36 + 1;
            v34 |= (unint64_t)(v37 & 0x7F) << v32;
            if (v37 < 0)
            {
              v32 += 7;
              BOOL v14 = v33++ >= 9;
              if (v14)
              {
                uint64_t v34 = 0;
                goto LABEL_64;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v34 = 0;
        }
LABEL_64:
        [a1 setRequiresProtectedData:v34 != 0];
        goto LABEL_65;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_65;
    }
  }
}

__CFString *INSearchForMessagesIntentResponseCodeGetName(uint64_t a1)
{
  switch(a1)
  {
    case 0:
      uint64_t result = @"INSearchForMessagesIntentResponseCodeUnspecified";
      break;
    case 1:
      uint64_t result = @"INSearchForMessagesIntentResponseCodeReady";
      break;
    case 2:
      uint64_t result = @"INSearchForMessagesIntentResponseCodeInProgress";
      break;
    case 3:
      uint64_t result = @"INSearchForMessagesIntentResponseCodeSuccess";
      break;
    case 4:
      uint64_t result = @"INSearchForMessagesIntentResponseCodeFailure";
      break;
    case 5:
      uint64_t result = @"INSearchForMessagesIntentResponseCodeFailureRequiringAppLaunch";
      break;
    case 6:
      uint64_t result = @"INSearchForMessagesIntentResponseCodeFailureMessageServiceNotAvailable";
      break;
    case 7:
      uint64_t result = @"INSearchForMessagesIntentResponseCodeFailureMessageTooManyResults";
      break;
    case 8:
      uint64_t result = @"INSearchForMessagesIntentResponseCodeFailureRequiringInAppAuthentication";
      break;
    default:
      if (a1 == 1000) {
        uint64_t result = @"INSearchForMessagesIntentResponseCodeFailureScreenTimeRestrictionEnabled";
      }
      else {
        uint64_t result = 0;
      }
      break;
  }
  return result;
}

id INCacheableGetSerializationQueue()
{
  if (INCacheableGetSerializationQueue_onceToken != -1) {
    dispatch_once(&INCacheableGetSerializationQueue_onceToken, &__block_literal_global_43217);
  }
  uint64_t v0 = (void *)INCacheableGetSerializationQueue_queue;

  return v0;
}

uint64_t __INCacheableGetSerializationQueue_block_invoke()
{
  INCacheableGetSerializationQueue_queue = (uint64_t)dispatch_queue_create("com.apple.intents.cacheable.serialization", 0);

  return MEMORY[0x1F41817F8]();
}

uint64_t INMessageAttributeHasBackingType(unint64_t a1)
{
  return (a1 < 6) & (0x3Eu >> a1);
}

uint64_t INMessageAttributeGetBackingType(uint64_t result)
{
  if ((unint64_t)(result - 1) < 5) {
    return result;
  }
  else {
    return 0x7FFFFFFFLL;
  }
}

uint64_t INMessageAttributeGetFacadeType(int a1, int a2)
{
  uint64_t v2 = (a2 - 1);
  if (v2 <= 4) {
    uint64_t v3 = v2 + 1;
  }
  else {
    uint64_t v3 = 0;
  }
  if (a1) {
    return v3;
  }
  else {
    return 0;
  }
}

__CFString *INMessageAttributeGetName(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 4) {
    return @"unknown";
  }
  else {
    return off_1E5518CF8[a1 - 1];
  }
}

uint64_t INMessageAttributeWithString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"read"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"unread"])
  {
    uint64_t v2 = 2;
  }
  else if ([v1 isEqualToString:@"flagged"])
  {
    uint64_t v2 = 3;
  }
  else if ([v1 isEqualToString:@"unflagged"])
  {
    uint64_t v2 = 4;
  }
  else if ([v1 isEqualToString:@"played"])
  {
    uint64_t v2 = 5;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INMessageAttributeGetLocalizedName(uint64_t a1, void *a2)
{
  id v3 = a2;
  switch(a1)
  {
    case 1:
      id v4 = @"read";
      goto LABEL_8;
    case 2:
      id v4 = @"unread";
      goto LABEL_8;
    case 3:
      id v4 = @"flagged";
      goto LABEL_8;
    case 4:
      id v4 = @"unflagged";
      goto LABEL_8;
    case 5:
      id v4 = @"played";
LABEL_8:
      id v5 = INLocalizedStringWithLocalizer(v4, v4, v3);
      break;
    default:
      id v5 = 0;
      break;
  }

  return v5;
}

BOOL _INPBIntegerListReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    char v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 1) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        char v17 = objc_alloc_init(_INPBCondition);
        if (!PBReaderPlaceMark() || (_INPBConditionReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_32;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setConditionType:", v17, 0, 0);
LABEL_27:

        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_29:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v17 = objc_alloc_init(_INPBInteger);
    if (!PBReaderPlaceMark() || !_INPBIntegerReadFrom(v17, a2))
    {
LABEL_32:

      return 0;
    }
    PBReaderRecallMark();
    if (v17) {
      objc_msgSend(a1, "addDataString:", v17, 0, 0);
    }
    goto LABEL_27;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void __INSyncTransactionCheckVocabularyUpdatesEnabled_block_invoke()
{
  v5[1] = *MEMORY[0x1E4F143B8];
  id v3 = @"VoiceCommandNameType";
  id v4 = @"com.apple.VoiceShortcuts";
  uint64_t v0 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v3 count:1];
  v5[0] = v0;
  uint64_t v1 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v5 forKeys:&v4 count:1];
  uint64_t v2 = (void *)INSyncTransactionCheckVocabularyUpdatesEnabled_vocabularyUpdatesOverrides;
  INSyncTransactionCheckVocabularyUpdatesEnabled_vocabularyUpdatesOverrides = v1;
}

void sub_18CCB44F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _INPBDistanceReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    char v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(_INPBDistanceValue);
        if (!PBReaderPlaceMark() || !_INPBDistanceValueReadFrom(v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addValue:", v17, 0, 0);
        }
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL INDateSearchTypeHasBackingType(unint64_t a1)
{
  return a1 < 4;
}

uint64_t INDateSearchTypeGetBackingType(unint64_t a1)
{
  if (a1 >= 4) {
    return 0x7FFFFFFFLL;
  }
  else {
    return (10 * a1);
  }
}

uint64_t INDateSearchTypeGetFacadeType(int a1, int a2)
{
  uint64_t v2 = 3;
  uint64_t v3 = 2;
  if (a2 != 20) {
    uint64_t v3 = a2 == 10;
  }
  if (a2 != 30) {
    uint64_t v2 = v3;
  }
  if (a1) {
    return v2;
  }
  else {
    return 0;
  }
}

__CFString *INDateSearchTypeGetName(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2) {
    return @"unknown";
  }
  else {
    return off_1E5518D48[a1 - 1];
  }
}

uint64_t INDateSearchTypeWithString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"byDueDate"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"byModifiedDate"])
  {
    uint64_t v2 = 2;
  }
  else if ([v1 isEqualToString:@"byCreatedDate"])
  {
    uint64_t v2 = 3;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INDateSearchTypeGetLocalizedName(uint64_t a1, void *a2)
{
  id v3 = a2;
  switch(a1)
  {
    case 3:
      id v4 = @"by created date";
      goto LABEL_7;
    case 2:
      id v4 = @"by modified date";
      goto LABEL_7;
    case 1:
      id v4 = @"by due date";
LABEL_7:
      id v5 = INLocalizedStringWithLocalizer(v4, v4, v3);
      goto LABEL_9;
  }
  id v5 = 0;
LABEL_9:

  return v5;
}

BOOL INCallRecordTypeHasBackingType(uint64_t a1)
{
  return (unint64_t)(a1 - 1) < 8;
}

uint64_t INCallRecordTypeGetBackingType(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 7) {
    return 0x7FFFFFFFLL;
  }
  else {
    return dword_18CFC4600[a1 - 1];
  }
}

uint64_t INCallRecordTypeGetFacadeType(int a1, int a2)
{
  if (a1 && (a2 - 2) <= 8) {
    return qword_18CFC4620[a2 - 2];
  }
  else {
    return 0;
  }
}

__CFString *INCallRecordTypeGetName(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 7) {
    return @"unknown";
  }
  else {
    return off_1E5518D60[a1 - 1];
  }
}

uint64_t INCallRecordTypeWithString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"outgoing"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"missed"])
  {
    uint64_t v2 = 2;
  }
  else if ([v1 isEqualToString:@"received"])
  {
    uint64_t v2 = 3;
  }
  else if ([v1 isEqualToString:@"latest"])
  {
    uint64_t v2 = 4;
  }
  else if ([v1 isEqualToString:@"voicemail"])
  {
    uint64_t v2 = 5;
  }
  else if ([v1 isEqualToString:@"ringing"])
  {
    uint64_t v2 = 6;
  }
  else if ([v1 isEqualToString:@"inProgress"])
  {
    uint64_t v2 = 7;
  }
  else if ([v1 isEqualToString:@"onHold"])
  {
    uint64_t v2 = 8;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INCallRecordTypeGetLocalizedName(uint64_t a1, void *a2)
{
  id v3 = a2;
  switch(a1)
  {
    case 1:
      id v4 = @"outgoing";
      goto LABEL_11;
    case 2:
      id v4 = @"missed";
      goto LABEL_11;
    case 3:
      id v4 = @"received";
      goto LABEL_11;
    case 4:
      id v4 = @"latest";
      goto LABEL_11;
    case 5:
      id v4 = @"voicemail";
      goto LABEL_11;
    case 6:
      id v4 = @"ringing";
      goto LABEL_11;
    case 7:
      id v4 = @"in progress";
      goto LABEL_11;
    case 8:
      id v4 = @"on hold";
LABEL_11:
      id v5 = INLocalizedStringWithLocalizer(v4, v4, v3);
      break;
    default:
      id v5 = 0;
      break;
  }

  return v5;
}

uint64_t _INPBBillDetailsValueReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  char v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = objc_alloc_init(_INPBValueMetadata);
        if (!PBReaderPlaceMark() || (_INPBValueMetadataReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_70;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setValueMetadata:", v17, 0, 0);
        goto LABEL_42;
      case 2u:
        char v17 = objc_alloc_init(_INPBBillPayeeValue);
        if (!PBReaderPlaceMark() || !_INPBBillPayeeValueReadFrom(v17, a2)) {
          goto LABEL_70;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setBillPayee:", v17, 0, 0);
        goto LABEL_42;
      case 3u:
        char v17 = objc_alloc_init(_INPBCurrencyAmountValue);
        if (!PBReaderPlaceMark() || !_INPBCurrencyAmountValueReadFrom(v17, a2)) {
          goto LABEL_70;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAmountDue:", v17, 0, 0);
        goto LABEL_42;
      case 4u:
        char v17 = objc_alloc_init(_INPBCurrencyAmountValue);
        if (!PBReaderPlaceMark() || !_INPBCurrencyAmountValueReadFrom(v17, a2)) {
          goto LABEL_70;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setMinimumDue:", v17, 0, 0);
        goto LABEL_42;
      case 5u:
        char v17 = objc_alloc_init(_INPBCurrencyAmountValue);
        if (!PBReaderPlaceMark() || !_INPBCurrencyAmountValueReadFrom(v17, a2)) {
          goto LABEL_70;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLateFee:", v17, 0, 0);
        goto LABEL_42;
      case 6u:
        char v17 = objc_alloc_init(_INPBDateTime);
        if (!PBReaderPlaceMark() || (_INPBDateTimeReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_70;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setDueDate:", v17, 0, 0);
        goto LABEL_42;
      case 7u:
        char v17 = objc_alloc_init(_INPBDateTime);
        if PBReaderPlaceMark() && (_INPBDateTimeReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setPaymentDate:", v17, 0, 0);
LABEL_42:

LABEL_43:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_70:

        return 0;
      case 8u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_63;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v21;
        }
LABEL_63:
        [a1 setBillType:v25];
        goto LABEL_43;
      case 9u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                uint64_t v32 = 0;
                goto LABEL_68;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v32 = 0;
        }
        else {
          uint64_t v32 = v28;
        }
LABEL_68:
        [a1 setStatus:v32];
        goto LABEL_43;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_43;
    }
  }
}

INContactRelationship *INIntentSlotValueTransformFromContactRelationship(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    uint64_t v2 = [INContactRelationship alloc];
    id v3 = [v1 name];
    id v4 = [v1 relation];

    id v5 = [(INContactRelationship *)v2 initWithName:v3 relation:v4];
  }
  else
  {
    id v5 = 0;
  }

  return v5;
}

_INPBContactRelationship *INIntentSlotValueTransformToContactRelationship(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    uint64_t v2 = objc_alloc_init(_INPBContactRelationship);
    id v3 = [v1 name];
    [(_INPBContactRelationship *)v2 setName:v3];

    id v4 = [v1 relation];

    [(_INPBContactRelationship *)v2 setRelation:v4];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INIntentSlotValueTransformFromContactRelationships(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          char v8 = INIntentSlotValueTransformFromContactRelationship(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    unsigned int v9 = (void *)[v2 copy];
  }
  else
  {
    unsigned int v9 = 0;
  }

  return v9;
}

id INIntentSlotValueTransformToContactRelationships(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          char v8 = INIntentSlotValueTransformToContactRelationship(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    unsigned int v9 = (void *)[v2 copy];
  }
  else
  {
    unsigned int v9 = 0;
  }

  return v9;
}

id INIntentSlotValueRedactedContactRelationshipFromContactRelationship(void *a1)
{
  id v1 = a1;

  return v1;
}

INTemporalEventTrigger *INIntentSlotValueTransformFromTemporalEventTrigger(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    uint64_t v2 = [INTemporalEventTrigger alloc];
    id v3 = [v1 dateTime];

    uint64_t v4 = INIntentSlotValueTransformFromDateTimeRangeValue(v3);
    uint64_t v5 = [(INTemporalEventTrigger *)v2 initWithDateComponentsRange:v4];
  }
  else
  {
    uint64_t v5 = 0;
  }

  return v5;
}

_INPBTemporalEventTrigger *INIntentSlotValueTransformToTemporalEventTrigger(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    uint64_t v2 = objc_alloc_init(_INPBTemporalEventTrigger);
    id v3 = [v1 dateComponentsRange];

    uint64_t v4 = INIntentSlotValueTransformToDateTimeRangeValue(v3);
    [(_INPBTemporalEventTrigger *)v2 setDateTime:v4];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INIntentSlotValueTransformFromTemporalEventTriggers(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          char v8 = INIntentSlotValueTransformFromTemporalEventTrigger(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    unsigned int v9 = (void *)[v2 copy];
  }
  else
  {
    unsigned int v9 = 0;
  }

  return v9;
}

id INIntentSlotValueTransformToTemporalEventTriggers(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          char v8 = INIntentSlotValueTransformToTemporalEventTrigger(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    unsigned int v9 = (void *)[v2 copy];
  }
  else
  {
    unsigned int v9 = 0;
  }

  return v9;
}

id INIntentSlotValueRedactedTemporalEventTriggerFromTemporalEventTrigger(void *a1)
{
  id v1 = a1;

  return v1;
}

uint64_t INHomeDeviceTypeHasBackingType(unint64_t a1)
{
  return (a1 < 0x2E) & (0x3FFFFFFFFFFEuLL >> a1);
}

uint64_t INHomeDeviceTypeGetBackingType(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 0x2C) {
    return 0x7FFFFFFFLL;
  }
  else {
    return dword_18CFC4668[a1 - 1];
  }
}

uint64_t INHomeDeviceTypeGetFacadeType(int a1, unsigned int a2)
{
  uint64_t result = 0;
  if (a2 <= 0x31)
  {
    if (a1) {
      return qword_18CFC4720[a2];
    }
  }
  return result;
}

__CFString *INHomeDeviceTypeGetName(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 0x2C) {
    return @"unknown";
  }
  else {
    return off_1E5518E78[a1 - 1];
  }
}

uint64_t INHomeDeviceTypeWithString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"lightbulb"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"switch"])
  {
    uint64_t v2 = 2;
  }
  else if ([v1 isEqualToString:@"thermostat"])
  {
    uint64_t v2 = 3;
  }
  else if ([v1 isEqualToString:@"garageDoorOpener"])
  {
    uint64_t v2 = 4;
  }
  else if ([v1 isEqualToString:@"fan"])
  {
    uint64_t v2 = 5;
  }
  else if ([v1 isEqualToString:@"outlet"])
  {
    uint64_t v2 = 6;
  }
  else if ([v1 isEqualToString:@"doorLock"])
  {
    uint64_t v2 = 7;
  }
  else if ([v1 isEqualToString:@"airQualitySensor"])
  {
    uint64_t v2 = 8;
  }
  else if ([v1 isEqualToString:@"battery"])
  {
    uint64_t v2 = 9;
  }
  else if ([v1 isEqualToString:@"carbonDioxideSensor"])
  {
    uint64_t v2 = 10;
  }
  else if ([v1 isEqualToString:@"carbonMonoxideSensor"])
  {
    uint64_t v2 = 11;
  }
  else if ([v1 isEqualToString:@"contactSensor"])
  {
    uint64_t v2 = 12;
  }
  else if ([v1 isEqualToString:@"door"])
  {
    uint64_t v2 = 13;
  }
  else if ([v1 isEqualToString:@"humiditySensor"])
  {
    uint64_t v2 = 14;
  }
  else if ([v1 isEqualToString:@"leakSensor"])
  {
    uint64_t v2 = 15;
  }
  else if ([v1 isEqualToString:@"lightSensor"])
  {
    uint64_t v2 = 16;
  }
  else if ([v1 isEqualToString:@"motionSensor"])
  {
    uint64_t v2 = 17;
  }
  else if ([v1 isEqualToString:@"occupancySensor"])
  {
    uint64_t v2 = 18;
  }
  else if ([v1 isEqualToString:@"securitySystem"])
  {
    uint64_t v2 = 19;
  }
  else if ([v1 isEqualToString:@"smokeSensor"])
  {
    uint64_t v2 = 20;
  }
  else if ([v1 isEqualToString:@"temperatureSensor"])
  {
    uint64_t v2 = 21;
  }
  else if ([v1 isEqualToString:@"window"])
  {
    uint64_t v2 = 22;
  }
  else if ([v1 isEqualToString:@"shades"])
  {
    uint64_t v2 = 23;
  }
  else if ([v1 isEqualToString:@"ipCamera"])
  {
    uint64_t v2 = 24;
  }
  else if ([v1 isEqualToString:@"microphone"])
  {
    uint64_t v2 = 25;
  }
  else if ([v1 isEqualToString:@"speaker"])
  {
    uint64_t v2 = 26;
  }
  else if ([v1 isEqualToString:@"motorizedDoor"])
  {
    uint64_t v2 = 27;
  }
  else if ([v1 isEqualToString:@"motorizedWindow"])
  {
    uint64_t v2 = 28;
  }
  else if ([v1 isEqualToString:@"heaterCooler"])
  {
    uint64_t v2 = 29;
  }
  else if ([v1 isEqualToString:@"humidifierDehumidifier"])
  {
    uint64_t v2 = 30;
  }
  else if ([v1 isEqualToString:@"slat"])
  {
    uint64_t v2 = 31;
  }
  else if ([v1 isEqualToString:@"sprinkler"])
  {
    uint64_t v2 = 32;
  }
  else if ([v1 isEqualToString:@"valve"])
  {
    uint64_t v2 = 33;
  }
  else if ([v1 isEqualToString:@"faucet"])
  {
    uint64_t v2 = 34;
  }
  else if ([v1 isEqualToString:@"shower"])
  {
    uint64_t v2 = 35;
  }
  else if ([v1 isEqualToString:@"television"])
  {
    uint64_t v2 = 36;
  }
  else if ([v1 isEqualToString:@"custom"])
  {
    uint64_t v2 = 37;
  }
  else if ([v1 isEqualToString:@"doorBell"])
  {
    uint64_t v2 = 38;
  }
  else if ([v1 isEqualToString:@"airPurifier"])
  {
    uint64_t v2 = 39;
  }
  else if ([v1 isEqualToString:@"filter"])
  {
    uint64_t v2 = 40;
  }
  else if ([v1 isEqualToString:@"AppleTV"])
  {
    uint64_t v2 = 41;
  }
  else if ([v1 isEqualToString:@"cameraRecording"])
  {
    uint64_t v2 = 42;
  }
  else if ([v1 isEqualToString:@"sensor"])
  {
    uint64_t v2 = 43;
  }
  else if ([v1 isEqualToString:@"airportExpress"])
  {
    uint64_t v2 = 44;
  }
  else if ([v1 isEqualToString:@"sink"])
  {
    uint64_t v2 = 45;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INHomeDeviceTypeGetLocalizedName(uint64_t a1, void *a2)
{
  id v3 = a2;
  switch(a1)
  {
    case 1:
      uint64_t v4 = @"lightbulb";
      goto LABEL_48;
    case 2:
      uint64_t v4 = @"switch";
      goto LABEL_48;
    case 3:
      uint64_t v4 = @"thermostat";
      goto LABEL_48;
    case 4:
      uint64_t v4 = @"garage door opener";
      goto LABEL_48;
    case 5:
      uint64_t v4 = @"fan";
      goto LABEL_48;
    case 6:
      uint64_t v4 = @"outlet";
      goto LABEL_48;
    case 7:
      uint64_t v4 = @"door lock";
      goto LABEL_48;
    case 8:
      uint64_t v4 = @"air quality sensor";
      goto LABEL_48;
    case 9:
      uint64_t v4 = @"battery";
      goto LABEL_48;
    case 10:
      uint64_t v4 = @"carbon dioxide sensor";
      goto LABEL_48;
    case 11:
      uint64_t v4 = @"carbon monoxide sensor";
      goto LABEL_48;
    case 12:
      uint64_t v4 = @"contact sensor";
      goto LABEL_48;
    case 13:
      uint64_t v4 = @"door";
      goto LABEL_48;
    case 14:
      uint64_t v4 = @"humidity sensor";
      goto LABEL_48;
    case 15:
      uint64_t v4 = @"leak sensor";
      goto LABEL_48;
    case 16:
      uint64_t v4 = @"light sensor";
      goto LABEL_48;
    case 17:
      uint64_t v4 = @"motion sensor";
      goto LABEL_48;
    case 18:
      uint64_t v4 = @"occupancy sensor";
      goto LABEL_48;
    case 19:
      uint64_t v4 = @"security system";
      goto LABEL_48;
    case 20:
      uint64_t v4 = @"smoke sensor";
      goto LABEL_48;
    case 21:
      uint64_t v4 = @"temperature sensor";
      goto LABEL_48;
    case 22:
      uint64_t v4 = @"window";
      goto LABEL_48;
    case 23:
      uint64_t v4 = @"shades";
      goto LABEL_48;
    case 24:
      uint64_t v4 = @"ip camera";
      goto LABEL_48;
    case 25:
      uint64_t v4 = @"microphone";
      goto LABEL_48;
    case 26:
      uint64_t v4 = @"speaker";
      goto LABEL_48;
    case 27:
      uint64_t v4 = @"motorized door";
      goto LABEL_48;
    case 28:
      uint64_t v4 = @"motorized window";
      goto LABEL_48;
    case 29:
      uint64_t v4 = @"heater cooler";
      goto LABEL_48;
    case 30:
      uint64_t v4 = @"humidifier dehumidifier";
      goto LABEL_48;
    case 31:
      uint64_t v4 = @"slat";
      goto LABEL_48;
    case 32:
      uint64_t v4 = @"sprinkler";
      goto LABEL_48;
    case 33:
      uint64_t v4 = @"valve";
      goto LABEL_48;
    case 34:
      uint64_t v4 = @"faucet";
      goto LABEL_48;
    case 35:
      uint64_t v4 = @"shower";
      goto LABEL_48;
    case 36:
      uint64_t v4 = @"television";
      goto LABEL_48;
    case 37:
      uint64_t v4 = @"custom";
      goto LABEL_48;
    case 38:
      uint64_t v4 = @"door bell";
      goto LABEL_48;
    case 39:
      uint64_t v4 = @"air purifier";
      goto LABEL_48;
    case 40:
      uint64_t v4 = @"filter";
      goto LABEL_48;
    case 41:
      uint64_t v4 = @"Apple TV";
      goto LABEL_48;
    case 42:
      uint64_t v4 = @"camera recording";
      goto LABEL_48;
    case 43:
      uint64_t v4 = @"sensor";
      goto LABEL_48;
    case 44:
      uint64_t v4 = @"airport express";
      goto LABEL_48;
    case 45:
      uint64_t v4 = @"sink";
LABEL_48:
      uint64_t v5 = INLocalizedStringWithLocalizer(v4, v4, v3);
      break;
    default:
      uint64_t v5 = 0;
      break;
  }

  return v5;
}

BOOL INPaymentMethodTypeHasBackingType(uint64_t a1)
{
  return (unint64_t)(a1 - 1) < 8;
}

uint64_t INPaymentMethodTypeGetBackingType(uint64_t result)
{
  if ((unint64_t)(result - 1) < 8) {
    return result;
  }
  else {
    return 0x7FFFFFFFLL;
  }
}

uint64_t INPaymentMethodTypeGetFacadeType(int a1, int a2)
{
  uint64_t v2 = (a2 - 1);
  if (v2 <= 7) {
    uint64_t v3 = v2 + 1;
  }
  else {
    uint64_t v3 = 0;
  }
  if (a1) {
    return v3;
  }
  else {
    return 0;
  }
}

__CFString *INPaymentMethodTypeGetName(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 7) {
    return @"unknown";
  }
  else {
    return off_1E5518FE0[a1 - 1];
  }
}

uint64_t INPaymentMethodTypeWithString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"checking"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"savings"])
  {
    uint64_t v2 = 2;
  }
  else if ([v1 isEqualToString:@"brokerage"])
  {
    uint64_t v2 = 3;
  }
  else if ([v1 isEqualToString:@"debit"])
  {
    uint64_t v2 = 4;
  }
  else if ([v1 isEqualToString:@"credit"])
  {
    uint64_t v2 = 5;
  }
  else if ([v1 isEqualToString:@"prepaid"])
  {
    uint64_t v2 = 6;
  }
  else if ([v1 isEqualToString:@"store"])
  {
    uint64_t v2 = 7;
  }
  else if ([v1 isEqualToString:@"applePay"])
  {
    uint64_t v2 = 8;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INPaymentMethodTypeGetLocalizedName(uint64_t a1, void *a2)
{
  id v3 = a2;
  switch(a1)
  {
    case 1:
      uint64_t v4 = @"checking";
      goto LABEL_11;
    case 2:
      uint64_t v4 = @"savings";
      goto LABEL_11;
    case 3:
      uint64_t v4 = @"brokerage";
      goto LABEL_11;
    case 4:
      uint64_t v4 = @"debit";
      goto LABEL_11;
    case 5:
      uint64_t v4 = @"credit";
      goto LABEL_11;
    case 6:
      uint64_t v4 = @"prepaid";
      goto LABEL_11;
    case 7:
      uint64_t v4 = @"store";
      goto LABEL_11;
    case 8:
      uint64_t v4 = @"apple pay";
LABEL_11:
      uint64_t v5 = INLocalizedStringWithLocalizer(v4, v4, v3);
      break;
    default:
      uint64_t v5 = 0;
      break;
  }

  return v5;
}

INHomeAttributeValue *INIntentSlotValueTransformFromHomeAttributeValue(void *a1)
{
  id v1 = a1;
  uint64_t v2 = v1;
  if (v1)
  {
    unsigned __int8 v3 = [v1 hasValueType];
    unsigned int v4 = [v2 valueType];
    if (((v4 < 6) & v3) != 0) {
      uint64_t v5 = v4 + 1;
    }
    else {
      uint64_t v5 = 0;
    }
    if ([v2 hasBooleanValue]) {
      uint64_t v6 = [v2 BOOLeanValue];
    }
    else {
      uint64_t v6 = 0;
    }
    double v8 = 0.0;
    if ([v2 hasDoubleValue])
    {
      [v2 doubleValue];
      double v8 = v9;
    }
    if ([v2 hasIntegerValue]) {
      uint64_t v10 = [v2 integerValue];
    }
    else {
      uint64_t v10 = 0;
    }
    if ([v2 hasStringValue])
    {
      long long v11 = [v2 stringValue];
    }
    else
    {
      long long v11 = 0;
    }
    if ([v2 hasRangeValue])
    {
      long long v12 = [INHomeAttributeRange alloc];
      long long v13 = [v2 rangeValue];
      [v13 lowerValue];
      double v15 = v14;
      uint64_t v16 = [v2 rangeValue];
      [v16 upperValue];
      unsigned int v18 = [(INHomeAttributeRange *)v12 initWithRange:v15 upperValue:v17];
    }
    else
    {
      unsigned int v18 = 0;
    }
    int v19 = [v2 hasLimitValue];
    int v20 = [v2 limitValue];
    uint64_t v21 = 2 * (v20 == 2);
    if (v20 == 1) {
      uint64_t v21 = 1;
    }
    if (v19) {
      uint64_t v22 = v21;
    }
    else {
      uint64_t v22 = 0;
    }
    int v23 = [v2 hasUnit];
    uint64_t v24 = [v2 unit] - 1;
    if (v24 <= 4) {
      uint64_t v25 = v24 + 1;
    }
    else {
      uint64_t v25 = 0;
    }
    if (v23) {
      uint64_t v26 = v25;
    }
    else {
      uint64_t v26 = 0;
    }
    char v7 = [[INHomeAttributeValue alloc] initWithType:v5 BOOLValue:v6 doubleValue:v10 integerValue:v11 stringValue:v22 limitValue:v26 unit:v8 rangeValue:v18];
  }
  else
  {
    char v7 = 0;
  }

  return v7;
}

_INPBHomeAttributeValue *INIntentSlotValueTransformToHomeAttributeValue(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_alloc_init(_INPBHomeAttributeValue);
    unint64_t v3 = [v1 type];
    if (v3 <= 6 && ((0x7Eu >> v3) & 1) != 0)
    {
      unint64_t v4 = [v1 type] - 1;
      if (v4 >= 6) {
        uint64_t v5 = 0x7FFFFFFFLL;
      }
      else {
        uint64_t v5 = v4;
      }
      [(_INPBHomeAttributeValue *)v2 setValueType:v5];
    }
    unint64_t v6 = [v1 unit];
    if (v6 <= 5 && ((0x3Eu >> v6) & 1) != 0)
    {
      unint64_t v7 = [v1 unit] - 1;
      if (v7 < 5) {
        uint64_t v8 = (v7 + 1);
      }
      else {
        uint64_t v8 = 0x7FFFFFFFLL;
      }
      [(_INPBHomeAttributeValue *)v2 setUnit:v8];
    }
    switch([v1 type])
    {
      case 1:
        -[_INPBHomeAttributeValue setBooleanValue:](v2, "setBooleanValue:", [v1 BOOLValue]);
        break;
      case 2:
        [v1 doubleValue];
        -[_INPBHomeAttributeValue setDoubleValue:](v2, "setDoubleValue:");
        break;
      case 3:
        double v9 = [v1 stringValue];
        [(_INPBHomeAttributeValue *)v2 setStringValue:v9];
        goto LABEL_29;
      case 4:
        -[_INPBHomeAttributeValue setIntegerValue:](v2, "setIntegerValue:", [v1 integerValue]);
        break;
      case 5:
        if ((unint64_t)([v1 limitValue] - 1) <= 1)
        {
          uint64_t v10 = [v1 limitValue];
          if (v10 == 1) {
            unsigned int v11 = 1;
          }
          else {
            unsigned int v11 = 0x7FFFFFFF;
          }
          if (v10 == 2) {
            uint64_t v12 = 2;
          }
          else {
            uint64_t v12 = v11;
          }
          [(_INPBHomeAttributeValue *)v2 setLimitValue:v12];
        }
        break;
      case 6:
        double v9 = objc_alloc_init(_INPBHomeAttributeRange);
        long long v13 = [v1 rangeValue];
        [v13 lowerValue];
        -[_INPBHomeAttributeRange setLowerValue:](v9, "setLowerValue:");

        double v14 = [v1 rangeValue];
        [v14 upperValue];
        -[_INPBHomeAttributeRange setUpperValue:](v9, "setUpperValue:");

        [(_INPBHomeAttributeValue *)v2 setRangeValue:v9];
LABEL_29:

        break;
      default:
        break;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INIntentSlotValueTransformFromHomeAttributeValues(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          uint64_t v8 = INIntentSlotValueTransformFromHomeAttributeValue(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    double v9 = (void *)[v2 copy];
  }
  else
  {
    double v9 = 0;
  }

  return v9;
}

id INIntentSlotValueTransformToHomeAttributeValues(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          uint64_t v8 = INIntentSlotValueTransformToHomeAttributeValue(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    double v9 = (void *)[v2 copy];
  }
  else
  {
    double v9 = 0;
  }

  return v9;
}

id INKeyImageUtilitiesKeyImageBySubProducerComparison(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  char v5 = objc_opt_respondsToSelector();
  uint64_t v6 = (void *)MEMORY[0x1E4F28F60];
  v17[0] = MEMORY[0x1E4F143A8];
  v17[1] = 3221225472;
  v17[2] = __INKeyImageUtilitiesKeyImageBySubProducerComparison_block_invoke;
  v17[3] = &unk_1E5519028;
  char v19 = v5 & 1;
  id v7 = v3;
  id v18 = v7;
  uint64_t v8 = [v6 predicateWithBlock:v17];
  double v9 = [v4 filteredArrayUsingPredicate:v8];

  v15[0] = MEMORY[0x1E4F143A8];
  v15[1] = 3221225472;
  v15[2] = __INKeyImageUtilitiesKeyImageBySubProducerComparison_block_invoke_2;
  v15[3] = &unk_1E5519050;
  id v16 = v7;
  id v10 = v7;
  long long v11 = [v9 sortedArrayUsingComparator:v15];
  long long v12 = [v11 firstObject];
  long long v13 = [v12 _keyImage];

  return v13;
}

uint64_t __INKeyImageUtilitiesKeyImageBySubProducerComparison_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([v3 conformsToProtocol:&unk_1EDBB1E40])
  {
    if (*(unsigned char *)(a1 + 40)) {
      uint64_t v4 = [*(id *)(a1 + 32) _isValidSubProducer:v3];
    }
    else {
      uint64_t v4 = 1;
    }
  }
  else
  {
    uint64_t v4 = 0;
  }

  return v4;
}

uint64_t __INKeyImageUtilitiesKeyImageBySubProducerComparison_block_invoke_2(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return [*(id *)(a1 + 32) _compareSubProducerOne:a2 subProducerTwo:a3];
}

uint64_t INKeyImageUtilitiesDefaultCompareSubProducers(void *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [a1 _keyImage];
  char v5 = [v3 _keyImage];

  uint64_t v6 = 1;
  if (!v4) {
    uint64_t v6 = -1;
  }
  if ((v4 != 0) != (v5 != 0)) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }

  return v7;
}

id INKeyImageUtilitiesSortedSubProducersForSlotComposingProducer(void *a1)
{
  id v1 = a1;
  char v2 = objc_opt_respondsToSelector() & 1;
  id v3 = [v1 intentSlotDescriptions];
  uint64_t v4 = (void *)MEMORY[0x1E4F28F60];
  v15[0] = MEMORY[0x1E4F143A8];
  v15[1] = 3221225472;
  v15[2] = __INKeyImageUtilitiesSortedSubProducersForSlotComposingProducer_block_invoke;
  v15[3] = &unk_1E5519078;
  id v5 = v1;
  id v16 = v5;
  char v17 = v2;
  uint64_t v6 = [v4 predicateWithBlock:v15];
  uint64_t v7 = [v3 filteredArrayUsingPredicate:v6];

  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 3221225472;
  void v13[2] = __INKeyImageUtilitiesSortedSubProducersForSlotComposingProducer_block_invoke_2;
  v13[3] = &unk_1E55190A0;
  id v14 = v5;
  id v8 = v5;
  double v9 = [v7 sortedArrayUsingComparator:v13];
  id v10 = [v9 reverseObjectEnumerator];
  long long v11 = [v10 allObjects];

  return v11;
}

uint64_t __INKeyImageUtilitiesSortedSubProducersForSlotComposingProducer_block_invoke(uint64_t a1, void *a2)
{
  id v3 = [a2 valueForSlotComposer:*(void *)(a1 + 32)];
  if ([v3 conformsToProtocol:&unk_1EDBB1E40])
  {
    if (*(unsigned char *)(a1 + 40)) {
      uint64_t v4 = [*(id *)(a1 + 32) _isValidSubProducer:v3];
    }
    else {
      uint64_t v4 = 1;
    }
  }
  else
  {
    uint64_t v4 = 0;
  }

  return v4;
}

uint64_t __INKeyImageUtilitiesSortedSubProducersForSlotComposingProducer_block_invoke_2(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void *)(a1 + 32);
  id v6 = a3;
  uint64_t v7 = [a2 valueForSlotComposer:v5];
  id v8 = [v6 valueForSlotComposer:*(void *)(a1 + 32)];

  uint64_t v9 = [*(id *)(a1 + 32) _compareSubProducerOne:v7 subProducerTwo:v8];
  return v9;
}

BOOL INUserNotificationTypeHasBackingType(uint64_t a1)
{
  return (unint64_t)(a1 - 1) < 2;
}

uint64_t INUserNotificationTypeGetBackingType(uint64_t a1)
{
  if (a1 == 1) {
    unsigned int v1 = 1;
  }
  else {
    unsigned int v1 = 0x7FFFFFFF;
  }
  if (a1 == 2) {
    return 2;
  }
  else {
    return v1;
  }
}

uint64_t INUserNotificationTypeGetFacadeType(int a1, int a2)
{
  uint64_t v2 = 2 * (a2 == 2);
  if (a2 == 1) {
    uint64_t v2 = 1;
  }
  if (a1) {
    return v2;
  }
  else {
    return 0;
  }
}

__CFString *INUserNotificationTypeGetName(uint64_t a1)
{
  unsigned int v1 = @"unknown";
  if (a1 == 2) {
    unsigned int v1 = @"deliveryFailure";
  }
  if (a1 == 1) {
    return @"announcement";
  }
  else {
    return v1;
  }
}

uint64_t INUserNotificationTypeWithString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"announcement"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"deliveryFailure"])
  {
    uint64_t v2 = 2;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INUserNotificationTypeGetLocalizedName(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1 == 2)
  {
    uint64_t v4 = @"delivery failure";
    goto LABEL_5;
  }
  if (a1 == 1)
  {
    uint64_t v4 = @"announcement";
LABEL_5:
    uint64_t v5 = INLocalizedStringWithLocalizer(v4, v4, v3);
    goto LABEL_7;
  }
  uint64_t v5 = 0;
LABEL_7:

  return v5;
}

uint64_t _INPBCreateFileIntentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = objc_alloc_init(_INPBIntentMetadata);
        if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_57;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntentMetadata:", v17, 0, 0);
        goto LABEL_44;
      case 2u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_49;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v21;
        }
LABEL_49:
        [a1 setEntityType:v25];
        goto LABEL_55;
      case 3u:
        char v17 = objc_alloc_init(_INPBString);
        if (!PBReaderPlaceMark() || (_INPBStringReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_57;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEntityName:", v17, 0, 0);
        goto LABEL_44;
      case 4u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                uint64_t v32 = 0;
                goto LABEL_54;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v32 = 0;
        }
        else {
          uint64_t v32 = v28;
        }
LABEL_54:
        [a1 setDestinationType:v32];
        goto LABEL_55;
      case 5u:
        char v17 = objc_alloc_init(_INPBString);
        if PBReaderPlaceMark() && (_INPBStringReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setDestinationName:", v17, 0, 0);
LABEL_44:

LABEL_55:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_57:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_55;
    }
  }
}

uint64_t INEditDistanceBetweenStrings(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  uint64_t v5 = [v3 length];
  uint64_t v6 = [v4 length];
  if (v5)
  {
    uint64_t v7 = [v3 length];
    if (v6)
    {
      if (v7 || [v4 length])
      {
        uint64_t v8 = [v3 length];
        unint64_t v9 = v8 + 1;
        id v43 = v4;
        uint64_t v40 = [v4 length];
        id v10 = (id)objc_opt_new();
        uint64_t v11 = objc_opt_new();
        unint64_t v12 = 0x1E4F28000uLL;
        if (v8 != -1)
        {
          uint64_t v13 = 0;
          do
          {
            BOOL v14 = [NSNumber numberWithUnsignedInteger:v13];
            [v10 addObject:v14];

            ++v13;
          }
          while (v9 != v13);
        }
        if ((unint64_t)(v40 - 1) <= 0xFFFFFFFFFFFFFFFDLL)
        {
          uint64_t v15 = 1;
          id v16 = v11;
          unint64_t v39 = v8 + 1;
          id v42 = v3;
          do
          {
            uint64_t v11 = v10;
            uint64_t v41 = v15;
            uint64_t v17 = v15 - 1;
            id v18 = objc_msgSend(*(id *)(v12 + 3792), "numberWithUnsignedInteger:", v15 - 1, v39);
            [v16 insertObject:v18 atIndex:0];

            if (v9 >= 2)
            {
              uint64_t v19 = 0;
              uint64_t v44 = v17;
              do
              {
                uint64_t v20 = v19 + 1;
                int v21 = [v3 characterAtIndex:v19];
                int v22 = [v4 characterAtIndex:v17];
                unint64_t v23 = [v16 objectAtIndex:v19];
                uint64_t v24 = [v23 integerValue];

                uint64_t v25 = [v11 objectAtIndex:v19 + 1];
                char v26 = v16;
                uint64_t v27 = v8;
                uint64_t v28 = [v25 integerValue];

                uint64_t v29 = [v11 objectAtIndex:v19];
                uint64_t v30 = [v29 integerValue];
                BOOL v31 = v21 == v22;
                id v3 = v42;
                uint64_t v32 = v28 + 1;
                if (v31) {
                  uint64_t v33 = v30;
                }
                else {
                  uint64_t v33 = v30 + 1;
                }

                if (v32 >= v24 + 1) {
                  uint64_t v34 = v24 + 1;
                }
                else {
                  uint64_t v34 = v32;
                }
                uint64_t v8 = v27;
                id v16 = v26;
                id v4 = v43;
                if (v34 >= v33) {
                  uint64_t v35 = v33;
                }
                else {
                  uint64_t v35 = v34;
                }
                unint64_t v36 = [NSNumber numberWithInteger:v35];
                [v26 insertObject:v36 atIndex:v20];

                uint64_t v17 = v44;
                uint64_t v19 = v20;
              }
              while (v8 != v20);
            }
            id v10 = v16;

            uint64_t v15 = v41 + 1;
            id v16 = v11;
            unint64_t v9 = v39;
            unint64_t v12 = 0x1E4F28000;
          }
          while (v41 != v40);
        }
        char v37 = [v10 objectAtIndex:v8];
        uint64_t v6 = [v37 integerValue];
      }
      else
      {
        uint64_t v6 = 0;
      }
    }
    else
    {
      uint64_t v6 = v7;
    }
  }

  return v6;
}

id INIntentSlotValueTransformFromContactCard(void *a1)
{
  if (a1)
  {
    id v2 = a1;
    uint64_t v28 = NSPersonNameComponentsForPBContactCard(v2);
    uint64_t v27 = [v2 contactIdentifier];
    unsigned int v19 = [v2 isMe];
    uint64_t v24 = [v2 image];
    id v18 = INIntentSlotValueTransformFromImageValue(v24);
    uint64_t v17 = [v2 organizationName];
    uint64_t v15 = [v2 departmentName];
    char v26 = [v2 jobTitle];
    unint64_t v23 = [v2 phoneNumbers];
    uint64_t v25 = CNLabeledValueForPBContactHandle(v23);
    int v22 = [v2 emailAddresses];
    unint64_t v12 = CNLabeledValueForPBContactHandle(v22);
    uint64_t v20 = [v2 postalAddresses];
    uint64_t v11 = CNLabeledValueForPBContactHandle(v20);
    id v16 = [v2 urlAddresses];
    id v3 = CNLabeledValueForPBContactHandle(v16);
    BOOL v14 = [v2 contactRelations];
    id v4 = CNContactRelationForPBContactHandle(v14);
    uint64_t v13 = [v2 instantMessageAddresses];
    uint64_t v5 = CNLabeledValueForPBContactHandle(v13);
    uint64_t v6 = [v2 birthday];
    uint64_t v7 = NSDateComponentsForINDateComponents(v6);
    uint64_t v8 = [v2 dates];

    unint64_t v9 = NSLabeledDatesForINDateComponents(v8);
    uint64_t v21 = +[INContactCard initWithContactIdentifier:v27 nameComponents:v28 isMe:v19 image:v18 organizationName:v17 departmentName:v15 jobTitle:v26 phoneNumbers:v25 emailAddresses:v12 postalAddresses:v11 urlAddresses:v3 contactRelations:v4 instantMessageAddresses:v5 birthday:v7 dates:v9];

    a1 = (void *)v21;
    uint64_t v1 = vars8;
  }
  return a1;
}

id NSPersonNameComponentsForPBContactCard(void *a1)
{
  uint64_t v1 = (objc_class *)MEMORY[0x1E4F28F30];
  id v2 = a1;
  id v3 = objc_alloc_init(v1);
  id v4 = [v2 lastName];
  [v3 setFamilyName:v4];

  uint64_t v5 = [v2 firstName];
  [v3 setGivenName:v5];

  uint64_t v6 = [v2 middleName];
  [v3 setMiddleName:v6];

  uint64_t v7 = [v2 namePrefix];
  [v3 setNamePrefix:v7];

  uint64_t v8 = [v2 nameSuffix];
  [v3 setNameSuffix:v8];

  unint64_t v9 = [v2 nickName];
  [v3 setNickname:v9];

  id v10 = objc_opt_new();
  uint64_t v11 = [v2 phoneticLastName];
  [v10 setFamilyName:v11];

  unint64_t v12 = [v2 phoneticFirstName];
  [v10 setGivenName:v12];

  uint64_t v13 = [v2 phoneticMiddleName];
  [v10 setMiddleName:v13];

  BOOL v14 = [v2 phoneticNamePrefix];
  [v10 setNamePrefix:v14];

  uint64_t v15 = [v2 phoneticNameSuffix];
  [v10 setNameSuffix:v15];

  id v16 = [v2 phoneticNickName];

  [v10 setNickname:v16];
  [v3 setPhoneticRepresentation:v10];

  return v3;
}

id CNLabeledValueForPBContactHandle(void *a1)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  id v2 = objc_opt_new();
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v14;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v14 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = *(void **)(*((void *)&v13 + 1) + 8 * i);
        unint64_t v9 = objc_msgSend(v8, "label", (void)v13);
        id v10 = [v8 value];
        uint64_t v11 = soft_initWithPersonHandle(v9, v10);

        [v2 addObject:v11];
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }
    while (v5);
  }

  return v2;
}

id CNContactRelationForPBContactHandle(void *a1)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  id v2 = objc_opt_new();
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v14;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v14 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = *(void **)(*((void *)&v13 + 1) + 8 * i);
        unint64_t v9 = objc_msgSend(v8, "label", (void)v13);
        id v10 = [v8 value];
        uint64_t v11 = soft_initWithPersonHandle(v9, v10);

        [v2 addObject:v11];
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }
    while (v5);
  }

  return v2;
}

id NSDateComponentsForINDateComponents(void *a1)
{
  id v1 = INIntentSlotValueTransformFromDateTimeRangeValue(a1);
  id v2 = [v1 startDateComponents];
  id v3 = (void *)[MEMORY[0x1E4F1C9D8] init];
  uint64_t v4 = [v2 calendar];
  [v3 setCalendar:v4];

  objc_msgSend(v3, "setMonth:", objc_msgSend(v2, "month"));
  objc_msgSend(v3, "setDay:", objc_msgSend(v2, "day"));
  objc_msgSend(v3, "setYear:", objc_msgSend(v2, "year"));

  return v3;
}

id NSLabeledDatesForINDateComponents(void *a1)
{
  uint64_t v30 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  id v2 = objc_opt_new();
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v16 objects:v29 count:16];
  if (v4)
  {
    uint64_t v5 = *(void *)v17;
    do
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v3);
        }
        uint64_t v7 = *(void **)(*((void *)&v16 + 1) + 8 * i);
        uint64_t v8 = NSDateComponentsForINDateComponents(v7);
        id v9 = [v7 name];
        id v10 = v8;
        uint64_t v25 = 0;
        char v26 = &v25;
        uint64_t v27 = 0x2020000000;
        uint64_t v11 = (void (*)(id, id))getlabeledValueWithLabelSymbolLoc_ptr;
        uint64_t v28 = getlabeledValueWithLabelSymbolLoc_ptr;
        if (!getlabeledValueWithLabelSymbolLoc_ptr)
        {
          uint64_t v20 = MEMORY[0x1E4F143A8];
          uint64_t v21 = 3221225472;
          int v22 = __getlabeledValueWithLabelSymbolLoc_block_invoke;
          unint64_t v23 = &unk_1E5520EB8;
          uint64_t v24 = &v25;
          unint64_t v12 = (void *)ContactsLibrary_45457();
          long long v13 = dlsym(v12, "labeledValueWithLabel");
          *(void *)(v24[1] + 24) = v13;
          getlabeledValueWithLabelSymbolLoc_ptr = *(_UNKNOWN **)(v24[1] + 24);
          uint64_t v11 = (void (*)(id, id))v26[3];
        }
        _Block_object_dispose(&v25, 8);
        if (!v11)
        {
          dlerror();
          abort_report_np();
          __break(1u);
        }
        long long v14 = v11(v9, v10);

        [v2 addObject:v14];
      }
      uint64_t v4 = [v3 countByEnumeratingWithState:&v16 objects:v29 count:16];
    }
    while (v4);
  }

  return v2;
}

void sub_18CCBEE68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__getlabeledValueWithLabelSymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = (void *)ContactsLibrary_45457();
  uint64_t result = dlsym(v2, "labeledValueWithLabel");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getlabeledValueWithLabelSymbolLoc_ptr = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t ContactsLibrary_45457()
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  v3[0] = 0;
  if (!ContactsLibraryCore_frameworkLibrary_45460)
  {
    v3[1] = MEMORY[0x1E4F143A8];
    v3[2] = 3221225472;
    v3[3] = __ContactsLibraryCore_block_invoke_45461;
    void v3[4] = &__block_descriptor_40_e5_v8__0l;
    void v3[5] = v3;
    long long v4 = xmmword_1E55190E0;
    uint64_t v5 = 0;
    ContactsLibraryCore_frameworkLibrary_45460 = _sl_dlopen();
    id v1 = (void *)v3[0];
    uint64_t v0 = ContactsLibraryCore_frameworkLibrary_45460;
    if (ContactsLibraryCore_frameworkLibrary_45460)
    {
      if (!v3[0]) {
        return v0;
      }
    }
    else
    {
      id v1 = (void *)abort_report_np();
    }
    free(v1);
    return v0;
  }
  return ContactsLibraryCore_frameworkLibrary_45460;
}

uint64_t __ContactsLibraryCore_block_invoke_45461()
{
  uint64_t result = _sl_dlopen();
  ContactsLibraryCore_frameworkLibrary_45460 = result;
  return result;
}

id soft_initWithPersonHandle(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  uint64_t v10 = 0;
  uint64_t v11 = &v10;
  uint64_t v12 = 0x2020000000;
  uint64_t v5 = (void (*)(id, id))getinitWithLabelSymbolLoc_ptr;
  long long v13 = getinitWithLabelSymbolLoc_ptr;
  if (!getinitWithLabelSymbolLoc_ptr)
  {
    uint64_t v6 = (void *)ContactsLibrary_45457();
    v11[3] = (uint64_t)dlsym(v6, "initWithLabel");
    getinitWithLabelSymbolLoc_ptr = (_UNKNOWN *)v11[3];
    uint64_t v5 = (void (*)(id, id))v11[3];
  }
  _Block_object_dispose(&v10, 8);
  if (!v5)
  {
    dlerror();
    id v9 = (_Unwind_Exception *)abort_report_np();
    _Block_object_dispose(&v10, 8);
    _Unwind_Resume(v9);
  }
  uint64_t v7 = v5(v3, v4);

  return v7;
}

void *__getinitWithLabelSymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = (void *)ContactsLibrary_45457();
  uint64_t result = dlsym(v2, "initWithLabel");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getinitWithLabelSymbolLoc_ptr = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

_INPBContactCard *INIntentSlotValueTransformToContactCard(void *a1)
{
  id v1 = a1;
  id v2 = [v1 nameComponents];
  id v3 = [v2 phoneticRepresentation];
  if (v1)
  {
    id v4 = objc_alloc_init(_INPBContactCard);
    uint64_t v5 = [v1 contactIdentifier];
    [(_INPBContactCard *)v4 setContactIdentifier:v5];

    uint64_t v6 = [v2 namePrefix];
    [(_INPBContactCard *)v4 setNamePrefix:v6];

    uint64_t v7 = [v2 givenName];
    [(_INPBContactCard *)v4 setFirstName:v7];

    uint64_t v8 = [v2 middleName];
    [(_INPBContactCard *)v4 setMiddleName:v8];

    id v9 = [v2 familyName];
    [(_INPBContactCard *)v4 setLastName:v9];

    uint64_t v10 = [v2 nameSuffix];
    [(_INPBContactCard *)v4 setNameSuffix:v10];

    uint64_t v11 = [v2 nickname];
    [(_INPBContactCard *)v4 setNickName:v11];

    uint64_t v12 = [v3 namePrefix];
    [(_INPBContactCard *)v4 setPhoneticNamePrefix:v12];

    long long v13 = [v3 givenName];
    [(_INPBContactCard *)v4 setPhoneticFirstName:v13];

    long long v14 = [v3 middleName];
    [(_INPBContactCard *)v4 setPhoneticMiddleName:v14];

    long long v15 = [v3 familyName];
    [(_INPBContactCard *)v4 setPhoneticLastName:v15];

    long long v16 = [v3 nameSuffix];
    [(_INPBContactCard *)v4 setPhoneticNameSuffix:v16];

    long long v17 = [v3 nickname];
    [(_INPBContactCard *)v4 setPhoneticNickName:v17];

    -[_INPBContactCard setIsMe:](v4, "setIsMe:", [v1 isMe]);
    long long v18 = [v1 image];
    long long v19 = INIntentSlotValueTransformToImageValue(v18);
    [(_INPBContactCard *)v4 setImage:v19];

    uint64_t v20 = [v1 organizationName];
    [(_INPBContactCard *)v4 setOrganizationName:v20];

    uint64_t v21 = [v1 departmentName];
    [(_INPBContactCard *)v4 setDepartmentName:v21];

    int v22 = [v1 jobTitle];
    [(_INPBContactCard *)v4 setJobTitle:v22];

    unint64_t v23 = [v1 phoneNumbers];
    uint64_t v24 = PBContactHandleForCNLabeledValue(v23);
    [(_INPBContactCard *)v4 setPhoneNumbers:v24];

    uint64_t v25 = [v1 emailAddresses];
    char v26 = PBContactHandleForCNLabeledValue(v25);
    [(_INPBContactCard *)v4 setEmailAddresses:v26];

    uint64_t v27 = [v1 postalAddresses];
    uint64_t v28 = PBContactHandleForCNLabeledValue(v27);
    [(_INPBContactCard *)v4 setPostalAddresses:v28];

    uint64_t v29 = [v1 urlAddresses];
    uint64_t v30 = PBContactHandleForCNLabeledValue(v29);
    [(_INPBContactCard *)v4 setUrlAddresses:v30];

    BOOL v31 = [v1 contactRelations];
    uint64_t v32 = PBContactRelationshipForCNContactRelation(v31);
    [(_INPBContactCard *)v4 setContactRelations:v32];

    uint64_t v33 = [v1 instantMessageAddresses];
    uint64_t v34 = PBContactHandleForCNLabeledValue(v33);
    [(_INPBContactCard *)v4 setInstantMessageAddresses:v34];

    uint64_t v35 = [v1 birthday];
    unint64_t v36 = INDateComponentsForNSDateComponents(v35);
    [(_INPBContactCard *)v4 setBirthday:v36];

    char v37 = [v1 dates];
    char v38 = INDateComponentsForNSLabeledDates(v37);
    [(_INPBContactCard *)v4 setDates:v38];
  }
  else
  {
    id v4 = 0;
  }

  return v4;
}

id PBContactHandleForCNLabeledValue(void *a1)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  id v2 = objc_opt_new();
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v14;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v14 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = *(void **)(*((void *)&v13 + 1) + 8 * i);
        id v9 = objc_alloc_init(_INPBContactHandle);
        uint64_t v10 = objc_msgSend(v8, "label", (void)v13);
        [(_INPBContactHandle *)v9 setLabel:v10];

        uint64_t v11 = [v8 value];
        [(_INPBContactHandle *)v9 setValue:v11];

        [v2 addObject:v9];
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }
    while (v5);
  }

  return v2;
}

id PBContactRelationshipForCNContactRelation(void *a1)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  id v2 = objc_opt_new();
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v14;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v14 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = *(void **)(*((void *)&v13 + 1) + 8 * i);
        id v9 = objc_alloc_init(_INPBContactRelationship);
        uint64_t v10 = objc_msgSend(v8, "label", (void)v13);
        [(_INPBContactRelationship *)v9 setRelation:v10];

        uint64_t v11 = [v8 value];
        [(_INPBContactRelationship *)v9 setName:v11];

        [v2 addObject:v9];
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }
    while (v5);
  }

  return v2;
}

id INDateComponentsForNSDateComponents(void *a1)
{
  id v1 = a1;
  id v2 = [[INDateComponentsRange alloc] initWithStartDateComponents:v1 endDateComponents:v1];

  id v3 = INIntentSlotValueTransformToDateTimeRangeValue(v2);

  return v3;
}

id INDateComponentsForNSLabeledDates(void *a1)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  id v2 = objc_opt_new();
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v14;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v14 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = *(void **)(*((void *)&v13 + 1) + 8 * i);
        id v9 = objc_msgSend(v8, "value", (void)v13);
        uint64_t v10 = INDateComponentsForNSDateComponents(v9);

        uint64_t v11 = [v8 label];
        [v10 setName:v11];

        [v2 addObject:v10];
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }
    while (v5);
  }

  return v2;
}

id INIntentSlotValueTransformFromContactCards(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    id v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          uint64_t v8 = INIntentSlotValueTransformFromContactCard(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    id v9 = (void *)[v2 copy];
  }
  else
  {
    id v9 = 0;
  }

  return v9;
}

id INIntentSlotValueTransformToContactCards(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    id v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          uint64_t v8 = INIntentSlotValueTransformToContactCard(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    id v9 = (void *)[v2 copy];
  }
  else
  {
    id v9 = 0;
  }

  return v9;
}

id INIntentSlotValueRedactedContactCardFromContactCard(void *a1)
{
  id v1 = a1;

  return v1;
}

uint64_t _INPBScanVisualCodeIntentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        long long v17 = objc_alloc_init(_INPBIntentMetadata);
        if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntentMetadata:", v17, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL INSexualActivityValueTypeHasBackingType(unint64_t a1)
{
  return a1 < 3;
}

unint64_t INSexualActivityValueTypeGetBackingType(unint64_t result)
{
  if (result >= 3) {
    return 0x7FFFFFFFLL;
  }
  else {
    return result;
  }
}

uint64_t INSexualActivityValueTypeGetFacadeType(int a1, int a2)
{
  uint64_t v2 = a2 == 1;
  if (a2 == 2) {
    uint64_t v2 = 2;
  }
  if (a1) {
    return v2;
  }
  else {
    return 0;
  }
}

__CFString *INSexualActivityValueTypeGetName(uint64_t a1)
{
  id v1 = @"unknown";
  if (a1 == 2) {
    id v1 = @"unprotected";
  }
  if (a1 == 1) {
    return @"protected";
  }
  else {
    return v1;
  }
}

uint64_t INSexualActivityValueTypeWithString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"protected"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"unprotected"])
  {
    uint64_t v2 = 2;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INSexualActivityValueTypeGetLocalizedName(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1 == 2)
  {
    uint64_t v4 = @"unprotected";
    goto LABEL_5;
  }
  if (a1 == 1)
  {
    uint64_t v4 = @"protected";
LABEL_5:
    uint64_t v5 = INLocalizedStringWithLocalizer(v4, v4, v3);
    goto LABEL_7;
  }
  uint64_t v5 = 0;
LABEL_7:

  return v5;
}

uint64_t _INPBSetClimateSettingsInCarIntentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        long long v17 = objc_alloc_init(_INPBIntentMetadata);
        if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_132;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntentMetadata:", v17, 0, 0);
        goto LABEL_92;
      case 2u:
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (2)
        {
          uint64_t v21 = *v3;
          unint64_t v22 = *(void *)(a2 + v21);
          if (v22 == -1 || v22 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
            *(void *)(a2 + v21) = v22 + 1;
            v20 |= (unint64_t)(v23 & 0x7F) << v18;
            if (v23 < 0)
            {
              v18 += 7;
              BOOL v14 = v19++ >= 9;
              if (v14)
              {
                uint64_t v20 = 0;
                goto LABEL_98;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v20 = 0;
        }
LABEL_98:
        [a1 setEnableFan:v20 != 0];
        goto LABEL_93;
      case 3u:
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v26 = 0;
        while (2)
        {
          uint64_t v27 = *v3;
          unint64_t v28 = *(void *)(a2 + v27);
          if (v28 == -1 || v28 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
            *(void *)(a2 + v27) = v28 + 1;
            v26 |= (unint64_t)(v29 & 0x7F) << v24;
            if (v29 < 0)
            {
              v24 += 7;
              BOOL v14 = v25++ >= 9;
              if (v14)
              {
                uint64_t v26 = 0;
                goto LABEL_102;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v26 = 0;
        }
LABEL_102:
        [a1 setEnableAirConditioner:v26 != 0];
        goto LABEL_93;
      case 4u:
        char v30 = 0;
        unsigned int v31 = 0;
        uint64_t v32 = 0;
        while (2)
        {
          uint64_t v33 = *v3;
          unint64_t v34 = *(void *)(a2 + v33);
          if (v34 == -1 || v34 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v35 = *(unsigned char *)(*(void *)(a2 + *v7) + v34);
            *(void *)(a2 + v33) = v34 + 1;
            v32 |= (unint64_t)(v35 & 0x7F) << v30;
            if (v35 < 0)
            {
              v30 += 7;
              BOOL v14 = v31++ >= 9;
              if (v14)
              {
                uint64_t v32 = 0;
                goto LABEL_106;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v32 = 0;
        }
LABEL_106:
        [a1 setEnableClimateControl:v32 != 0];
        goto LABEL_93;
      case 5u:
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        while (2)
        {
          uint64_t v39 = *v3;
          unint64_t v40 = *(void *)(a2 + v39);
          if (v40 == -1 || v40 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v41 = *(unsigned char *)(*(void *)(a2 + *v7) + v40);
            *(void *)(a2 + v39) = v40 + 1;
            v38 |= (unint64_t)(v41 & 0x7F) << v36;
            if (v41 < 0)
            {
              v36 += 7;
              BOOL v14 = v37++ >= 9;
              if (v14)
              {
                uint64_t v38 = 0;
                goto LABEL_110;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v38 = 0;
        }
LABEL_110:
        [a1 setEnableAutoMode:v38 != 0];
        goto LABEL_93;
      case 6u:
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v44 = 0;
        while (2)
        {
          uint64_t v45 = *v3;
          unint64_t v46 = *(void *)(a2 + v45);
          if (v46 == -1 || v46 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v47 = *(unsigned char *)(*(void *)(a2 + *v7) + v46);
            *(void *)(a2 + v45) = v46 + 1;
            v44 |= (unint64_t)(v47 & 0x7F) << v42;
            if (v47 < 0)
            {
              v42 += 7;
              BOOL v14 = v43++ >= 9;
              if (v14)
              {
                uint64_t v48 = 0;
                goto LABEL_115;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v48 = 0;
        }
        else {
          uint64_t v48 = v44;
        }
LABEL_115:
        [a1 setAirCirculationMode:v48];
        goto LABEL_93;
      case 7u:
        long long v17 = objc_alloc_init(_INPBInteger);
        if (!PBReaderPlaceMark() || (_INPBIntegerReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_132;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setFanSpeedIndex:", v17, 0, 0);
        goto LABEL_92;
      case 8u:
        long long v17 = objc_alloc_init(_INPBDouble);
        if (!PBReaderPlaceMark() || (_INPBDoubleReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_132;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setFanSpeedPercentage:", v17, 0, 0);
        goto LABEL_92;
      case 9u:
        char v49 = 0;
        unsigned int v50 = 0;
        uint64_t v51 = 0;
        while (2)
        {
          uint64_t v52 = *v3;
          unint64_t v53 = *(void *)(a2 + v52);
          if (v53 == -1 || v53 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v54 = *(unsigned char *)(*(void *)(a2 + *v7) + v53);
            *(void *)(a2 + v52) = v53 + 1;
            v51 |= (unint64_t)(v54 & 0x7F) << v49;
            if (v54 < 0)
            {
              v49 += 7;
              BOOL v14 = v50++ >= 9;
              if (v14)
              {
                uint64_t v55 = 0;
                goto LABEL_120;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v55 = 0;
        }
        else {
          uint64_t v55 = v51;
        }
LABEL_120:
        [a1 setRelativeFanSpeedSetting:v55];
        goto LABEL_93;
      case 0xBu:
        long long v17 = objc_alloc_init(_INPBTemperature);
        if (!PBReaderPlaceMark() || (_INPBTemperatureReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_132;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTemperature:", v17, 0, 0);
        goto LABEL_92;
      case 0xCu:
        char v57 = 0;
        unsigned int v58 = 0;
        uint64_t v59 = 0;
        while (2)
        {
          uint64_t v60 = *v3;
          unint64_t v61 = *(void *)(a2 + v60);
          if (v61 == -1 || v61 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v62 = *(unsigned char *)(*(void *)(a2 + *v7) + v61);
            *(void *)(a2 + v60) = v61 + 1;
            v59 |= (unint64_t)(v62 & 0x7F) << v57;
            if (v62 < 0)
            {
              v57 += 7;
              BOOL v14 = v58++ >= 9;
              if (v14)
              {
                uint64_t v63 = 0;
                goto LABEL_125;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v63 = 0;
        }
        else {
          uint64_t v63 = v59;
        }
LABEL_125:
        [a1 setRelativeTemperatureSetting:v63];
        goto LABEL_93;
      case 0xDu:
        char v64 = 0;
        unsigned int v65 = 0;
        uint64_t v66 = 0;
        while (2)
        {
          uint64_t v67 = *v3;
          unint64_t v68 = *(void *)(a2 + v67);
          if (v68 == -1 || v68 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v69 = *(unsigned char *)(*(void *)(a2 + *v7) + v68);
            *(void *)(a2 + v67) = v68 + 1;
            v66 |= (unint64_t)(v69 & 0x7F) << v64;
            if (v69 < 0)
            {
              v64 += 7;
              BOOL v14 = v65++ >= 9;
              if (v14)
              {
                uint64_t v70 = 0;
                goto LABEL_130;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v70 = 0;
        }
        else {
          uint64_t v70 = v66;
        }
LABEL_130:
        [a1 setClimateZone:v70];
        goto LABEL_93;
      case 0xEu:
        long long v17 = objc_alloc_init(_INPBDataString);
        if (PBReaderPlaceMark() && _INPBDataStringReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setCarName:", v17, 0, 0);
LABEL_92:

LABEL_93:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_132:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_93;
    }
  }
}

uint64_t _INPBRequestRideIntentResponseReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        long long v17 = objc_alloc_init(_INPBRideStatus);
        if (!PBReaderPlaceMark() || (_INPBRideStatusReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRideStatus:", v17, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _INPBListRideOptionsIntentResponseReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        long long v17 = objc_alloc_init(_INPBRideOption);
        uint64_t v25 = 0;
        uint64_t v26 = 0;
        if (!PBReaderPlaceMark() || !_INPBRideOptionReadFrom(v17, a2)) {
          goto LABEL_46;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addRideOptions:", v17, 0, 0);
        }
        goto LABEL_39;
      case 2u:
        long long v17 = objc_alloc_init(_INPBPaymentMethodValue);
        uint64_t v25 = 0;
        uint64_t v26 = 0;
        if (!PBReaderPlaceMark() || !_INPBPaymentMethodValueReadFrom(v17, a2)) {
          goto LABEL_46;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addPaymentMethods:", v17, 0, 0);
        }
        goto LABEL_39;
      case 3u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v21 = 0;
                goto LABEL_43;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v21 = 0;
        }
LABEL_43:
        objc_msgSend(a1, "setSupportsApplePayForPayment:", v21 != 0, v25, v26);
        goto LABEL_44;
      case 4u:
        long long v17 = objc_alloc_init(_INPBTimestamp);
        if PBReaderPlaceMark() && (_INPBTimestampReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setExpirationDate:", v17, 0, 0);
LABEL_39:

LABEL_44:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_46:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_44;
    }
  }
}

void sub_18CCC8FC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,id location,char a30)
{
  objc_destroyWeak(v30);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

Class __getUISIntentForwardingActionClass_block_invoke(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!UIKitServicesLibraryCore_frameworkLibrary)
  {
    v4[1] = MEMORY[0x1E4F143A8];
    v4[2] = 3221225472;
    v4[3] = __UIKitServicesLibraryCore_block_invoke;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    void v4[5] = v4;
    long long v5 = xmmword_1E55193B8;
    uint64_t v6 = 0;
    UIKitServicesLibraryCore_frameworkLibrary = _sl_dlopen();
    uint64_t v2 = (void *)v4[0];
    if (!UIKitServicesLibraryCore_frameworkLibrary)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("UISIntentForwardingAction");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    uint64_t v2 = (void *)abort_report_np();
LABEL_8:
    free(v2);
  }
  getUISIntentForwardingActionClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __UIKitServicesLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  UIKitServicesLibraryCore_frameworkLibrary = result;
  return result;
}

uint64_t INAccountTypeHasBackingType(unint64_t a1)
{
  return (a1 < 8) & (0xFEu >> a1);
}

uint64_t INAccountTypeGetBackingType(uint64_t result)
{
  if ((unint64_t)(result - 1) < 7) {
    return result;
  }
  else {
    return 0x7FFFFFFFLL;
  }
}

uint64_t INAccountTypeGetFacadeType(int a1, int a2)
{
  uint64_t v2 = (a2 - 1);
  if (v2 <= 6) {
    uint64_t v3 = v2 + 1;
  }
  else {
    uint64_t v3 = 0;
  }
  if (a1) {
    return v3;
  }
  else {
    return 0;
  }
}

__CFString *INAccountTypeGetName(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 6) {
    return @"unknown";
  }
  else {
    return off_1E55193D0[a1 - 1];
  }
}

uint64_t INAccountTypeWithString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"checking"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"credit"])
  {
    uint64_t v2 = 2;
  }
  else if ([v1 isEqualToString:@"debit"])
  {
    uint64_t v2 = 3;
  }
  else if ([v1 isEqualToString:@"investment"])
  {
    uint64_t v2 = 4;
  }
  else if ([v1 isEqualToString:@"mortgage"])
  {
    uint64_t v2 = 5;
  }
  else if ([v1 isEqualToString:@"prepaid"])
  {
    uint64_t v2 = 6;
  }
  else if ([v1 isEqualToString:@"saving"])
  {
    uint64_t v2 = 7;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INAccountTypeGetLocalizedName(uint64_t a1, void *a2)
{
  id v3 = a2;
  switch(a1)
  {
    case 1:
      uint64_t v4 = @"checking";
      goto LABEL_10;
    case 2:
      uint64_t v4 = @"credit";
      goto LABEL_10;
    case 3:
      uint64_t v4 = @"debit";
      goto LABEL_10;
    case 4:
      uint64_t v4 = @"investment";
      goto LABEL_10;
    case 5:
      uint64_t v4 = @"mortgage";
      goto LABEL_10;
    case 6:
      uint64_t v4 = @"prepaid";
      goto LABEL_10;
    case 7:
      uint64_t v4 = @"saving";
LABEL_10:
      long long v5 = INLocalizedStringWithLocalizer(v4, v4, v3);
      break;
    default:
      long long v5 = 0;
      break;
  }

  return v5;
}

BOOL _INPBRideDriverReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  long long v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        long long v17 = objc_alloc_init(_INPBContactValue);
        if (!PBReaderPlaceMark() || (_INPBContactValueReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_33;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPerson:", v17, 0, 0);
        goto LABEL_29;
      case 2u:
        long long v17 = objc_alloc_init(_INPBImageValue);
        if PBReaderPlaceMark() && (_INPBImageValueReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setImage:", v17, 0, 0);
LABEL_29:

LABEL_30:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_33:

        return 0;
      case 3u:
        PBReaderReadString();
        long long v17 = (_INPBContactValue *)objc_claimAutoreleasedReturnValue();
        [a1 setRating:v17];
        goto LABEL_29;
      case 4u:
        PBReaderReadString();
        long long v17 = (_INPBContactValue *)objc_claimAutoreleasedReturnValue();
        [a1 setPhoneNumber:v17];
        goto LABEL_29;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_30;
    }
  }
}

INRideOption *INIntentSlotValueTransformFromRideOption(void *a1)
{
  uint64_t v59 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = [INRideOption alloc];
    id v3 = [v1 name];
    uint64_t v4 = [v1 estimatedPickupDate];
    long long v5 = INIntentSlotValueTransformFromTimestamp(v4);
    uint64_t v6 = [(INRideOption *)v2 initWithName:v3 estimatedPickupDate:v5];

    if ([v1 hasPriceRange])
    {
      uint64_t v7 = [v1 priceRange];
      char v8 = +[INPriceRange _priceWithPriceRangeValue:v7];
      [(INRideOption *)v6 setPriceRange:v8];
    }
    unsigned int v9 = [v1 disclaimerMessage];
    uint64_t v44 = v6;
    [(INRideOption *)v6 setDisclaimerMessage:v9];

    uint64_t v48 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "availablePartySizeOptionsCount"));
    long long v53 = 0u;
    long long v54 = 0u;
    long long v55 = 0u;
    long long v56 = 0u;
    uint64_t v45 = v1;
    id obj = [v1 availablePartySizeOptions];
    uint64_t v10 = [obj countByEnumeratingWithState:&v53 objects:v58 count:16];
    if (v10)
    {
      uint64_t v11 = v10;
      uint64_t v12 = *(void *)v54;
      do
      {
        for (uint64_t i = 0; i != v11; ++i)
        {
          if (*(void *)v54 != v12) {
            objc_enumerationMutation(obj);
          }
          BOOL v14 = *(void **)(*((void *)&v53 + 1) + 8 * i);
          int v15 = [v14 partySizeRange];
          uint64_t v16 = [v14 priceRange];
          long long v17 = +[INPriceRange _priceWithPriceRangeValue:v16];
          char v18 = [INRidePartySizeOption alloc];
          if (v15)
          {
            uint64_t v19 = [v15 location];
            uint64_t v20 = [v15 length];
          }
          else
          {
            uint64_t v19 = 0x7FFFFFFFFFFFFFFFLL;
            uint64_t v20 = 0x7FFFFFFFFFFFFFFFLL;
          }
          uint64_t v21 = [v14 sizeDescription];
          uint64_t v22 = -[INRidePartySizeOption initWithPartySizeRange:sizeDescription:priceRange:](v18, "initWithPartySizeRange:sizeDescription:priceRange:", v19, v20, v21, v17);

          [v48 addObject:v22];
        }
        uint64_t v11 = [obj countByEnumeratingWithState:&v53 objects:v58 count:16];
      }
      while (v11);
    }

    [(INRideOption *)v44 setAvailablePartySizeOptions:v48];
    unint64_t v23 = [v45 availablePartySizeOptionsSelectionPrompt];
    [(INRideOption *)v44 setAvailablePartySizeOptionsSelectionPrompt:v23];

    char v24 = [v45 specialPricing];
    [(INRideOption *)v44 setSpecialPricing:v24];

    uint64_t v25 = [v45 specialPricingBadgeImage];
    uint64_t v26 = INIntentSlotValueTransformFromImageValue(v25);
    [(INRideOption *)v44 setSpecialPricingBadgeImage:v26];

    uint64_t v27 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v45, "fareLineItemsCount"));
    long long v49 = 0u;
    long long v50 = 0u;
    long long v51 = 0u;
    long long v52 = 0u;
    id obja = [v45 fareLineItems];
    uint64_t v28 = [obja countByEnumeratingWithState:&v49 objects:v57 count:16];
    if (v28)
    {
      uint64_t v29 = v28;
      uint64_t v30 = *(void *)v50;
      do
      {
        for (uint64_t j = 0; j != v29; ++j)
        {
          if (*(void *)v50 != v30) {
            objc_enumerationMutation(obja);
          }
          uint64_t v32 = *(void **)(*((void *)&v49 + 1) + 8 * j);
          uint64_t v33 = [INRideFareLineItem alloc];
          unint64_t v34 = [v32 title];
          char v35 = [v32 price];
          char v36 = INIntentSlotValueTransformFromDecimalNumberValue(v35);
          unsigned int v37 = [v32 currencyCode];
          uint64_t v38 = [(INRideFareLineItem *)v33 initWithTitle:v34 price:v36 currencyCode:v37];

          [v27 addObject:v38];
        }
        uint64_t v29 = [obja countByEnumeratingWithState:&v49 objects:v57 count:16];
      }
      while (v29);
    }

    uint64_t v39 = v44;
    [(INRideOption *)v44 setFareLineItems:v27];
    id v1 = v45;
    if ([v45 hasUsesMeteredFare])
    {
      unint64_t v40 = objc_msgSend(NSNumber, "numberWithBool:", objc_msgSend(v45, "usesMeteredFare"));
      [(INRideOption *)v44 setUsesMeteredFare:v40];
    }
    else
    {
      [(INRideOption *)v44 setUsesMeteredFare:0];
    }
    char v41 = [v45 userActivityForBookingInApplication];
    char v42 = INUserActivityDeserializeFromBackingStore(v41);
    [(INRideOption *)v44 setUserActivityForBookingInApplication:v42];
  }
  else
  {
    uint64_t v39 = 0;
  }

  return v39;
}

_INPBRideOption *INIntentSlotValueTransformToRideOption(void *a1)
{
  uint64_t v68 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_alloc_init(_INPBRideOption);
    id v3 = [v1 name];
    [(_INPBRideOption *)v2 setName:v3];

    uint64_t v4 = [v1 estimatedPickupDate];
    long long v5 = INIntentSlotValueTransformToTimestamp(v4);
    [(_INPBRideOption *)v2 setEstimatedPickupDate:v5];

    uint64_t v6 = [v1 priceRange];
    if (v6)
    {
      uint64_t v7 = objc_alloc_init(_INPBPriceRangeValue);
      char v8 = [v6 minimumPrice];
      unsigned int v9 = INIntentSlotValueTransformToDecimalNumberValue(v8);
      [(_INPBPriceRangeValue *)v7 setMinimumPrice:v9];

      uint64_t v10 = [v6 maximumPrice];
      uint64_t v11 = INIntentSlotValueTransformToDecimalNumberValue(v10);
      [(_INPBPriceRangeValue *)v7 setMaximumPrice:v11];

      uint64_t v12 = [v6 currencyCode];
      [(_INPBPriceRangeValue *)v7 setCurrencyCode:v12];

      [(_INPBRideOption *)v2 setPriceRange:v7];
    }
    char v13 = objc_msgSend(v1, "disclaimerMessage", v6);
    [(_INPBRideOption *)v2 setDisclaimerMessage:v13];

    long long v64 = 0u;
    long long v65 = 0u;
    long long v62 = 0u;
    long long v63 = 0u;
    long long v55 = v1;
    id obj = [v1 availablePartySizeOptions];
    uint64_t v14 = [obj countByEnumeratingWithState:&v62 objects:v67 count:16];
    if (v14)
    {
      uint64_t v15 = v14;
      uint64_t v57 = *(void *)v63;
      uint64_t v16 = v2;
      do
      {
        for (uint64_t i = 0; i != v15; ++i)
        {
          if (*(void *)v63 != v57) {
            objc_enumerationMutation(obj);
          }
          char v18 = *(void **)(*((void *)&v62 + 1) + 8 * i);
          uint64_t v19 = objc_alloc_init(_INPBRidePartySizeOption);
          uint64_t v20 = [v18 partySizeRange];
          if (v20 != 0x7FFFFFFFFFFFFFFFLL && v21 != 0x7FFFFFFFFFFFFFFFLL)
          {
            uint64_t v23 = v20;
            uint64_t v24 = v21;
            uint64_t v25 = objc_alloc_init(_INPBRangeValue);
            [(_INPBRangeValue *)v25 setLocation:v23];
            [(_INPBRangeValue *)v25 setLength:v24];
            [(_INPBRidePartySizeOption *)v19 setPartySizeRange:v25];

            uint64_t v2 = v16;
          }
          uint64_t v26 = [v18 priceRange];
          if (v26)
          {
            uint64_t v27 = objc_alloc_init(_INPBPriceRangeValue);
            uint64_t v28 = [v26 minimumPrice];
            uint64_t v29 = INIntentSlotValueTransformToDecimalNumberValue(v28);
            [(_INPBPriceRangeValue *)v27 setMinimumPrice:v29];

            uint64_t v30 = [v26 maximumPrice];
            unsigned int v31 = INIntentSlotValueTransformToDecimalNumberValue(v30);
            [(_INPBPriceRangeValue *)v27 setMaximumPrice:v31];

            uint64_t v2 = v16;
            uint64_t v32 = [v26 currencyCode];
            [(_INPBPriceRangeValue *)v27 setCurrencyCode:v32];

            [(_INPBRidePartySizeOption *)v19 setPriceRange:v27];
          }
          uint64_t v33 = [v18 sizeDescription];
          [(_INPBRidePartySizeOption *)v19 setSizeDescription:v33];

          [(_INPBRideOption *)v2 addAvailablePartySizeOptions:v19];
        }
        uint64_t v15 = [obj countByEnumeratingWithState:&v62 objects:v67 count:16];
      }
      while (v15);
    }

    unint64_t v34 = [v55 availablePartySizeOptionsSelectionPrompt];
    [(_INPBRideOption *)v2 setAvailablePartySizeOptionsSelectionPrompt:v34];

    char v35 = [v55 specialPricing];
    [(_INPBRideOption *)v2 setSpecialPricing:v35];

    char v36 = [v55 specialPricingBadgeImage];
    unsigned int v37 = INIntentSlotValueTransformToImageValue(v36);
    [(_INPBRideOption *)v2 setSpecialPricingBadgeImage:v37];

    long long v60 = 0u;
    long long v61 = 0u;
    long long v58 = 0u;
    long long v59 = 0u;
    uint64_t v38 = [v55 fareLineItems];
    uint64_t v39 = [v38 countByEnumeratingWithState:&v58 objects:v66 count:16];
    if (v39)
    {
      uint64_t v40 = v39;
      uint64_t v41 = *(void *)v59;
      do
      {
        for (uint64_t j = 0; j != v40; ++j)
        {
          if (*(void *)v59 != v41) {
            objc_enumerationMutation(v38);
          }
          unsigned int v43 = *(void **)(*((void *)&v58 + 1) + 8 * j);
          uint64_t v44 = objc_alloc_init(_INPBRideFareLineItem);
          uint64_t v45 = [v43 title];
          [(_INPBRideFareLineItem *)v44 setTitle:v45];

          unint64_t v46 = [v43 price];
          char v47 = INIntentSlotValueTransformToDecimalNumberValue(v46);
          [(_INPBRideFareLineItem *)v44 setPrice:v47];

          uint64_t v48 = [v43 currencyCode];
          [(_INPBRideFareLineItem *)v44 setCurrencyCode:v48];

          [(_INPBRideOption *)v2 addFareLineItems:v44];
        }
        uint64_t v40 = [v38 countByEnumeratingWithState:&v58 objects:v66 count:16];
      }
      while (v40);
    }

    id v1 = v55;
    long long v49 = [v55 usesMeteredFare];

    if (v49)
    {
      long long v50 = [v55 usesMeteredFare];
      -[_INPBRideOption setUsesMeteredFare:](v2, "setUsesMeteredFare:", [v50 BOOLValue]);
    }
    else
    {
      [(_INPBRideOption *)v2 setHasUsesMeteredFare:0];
    }
    long long v51 = [v55 userActivityForBookingInApplication];
    long long v52 = INUserActivitySerializeToBackingStore(v51);
    [(_INPBRideOption *)v2 setUserActivityForBookingInApplication:v52];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INIntentSlotValueTransformFromRideOptions(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        char v8 = INIntentSlotValueTransformFromRideOption(*(void **)(*((void *)&v11 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  unsigned int v9 = (void *)[v2 copy];

  return v9;
}

id INIntentSlotValueTransformToRideOptions(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        char v8 = INIntentSlotValueTransformToRideOption(*(void **)(*((void *)&v11 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  unsigned int v9 = (void *)[v2 copy];

  return v9;
}

uint64_t INBillTypeHasBackingType(unint64_t a1)
{
  return (a1 < 0x17) & (0x7FFFFEu >> a1);
}

uint64_t INBillTypeGetBackingType(uint64_t result)
{
  if ((unint64_t)(result - 1) < 0x16) {
    return result;
  }
  else {
    return 0x7FFFFFFFLL;
  }
}

uint64_t INBillTypeGetFacadeType(int a1, int a2)
{
  uint64_t v2 = (a2 - 1);
  if (v2 <= 0x15) {
    uint64_t v3 = v2 + 1;
  }
  else {
    uint64_t v3 = 0;
  }
  if (a1) {
    return v3;
  }
  else {
    return 0;
  }
}

__CFString *INBillTypeGetName(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 0x15) {
    return @"unknown";
  }
  else {
    return off_1E5519408[a1 - 1];
  }
}

uint64_t INBillTypeWithString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"autoInsurance"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"cable"])
  {
    uint64_t v2 = 2;
  }
  else if ([v1 isEqualToString:@"carLease"])
  {
    uint64_t v2 = 3;
  }
  else if ([v1 isEqualToString:@"carLoan"])
  {
    uint64_t v2 = 4;
  }
  else if ([v1 isEqualToString:@"creditCard"])
  {
    uint64_t v2 = 5;
  }
  else if ([v1 isEqualToString:@"electricity"])
  {
    uint64_t v2 = 6;
  }
  else if ([v1 isEqualToString:@"gas"])
  {
    uint64_t v2 = 7;
  }
  else if ([v1 isEqualToString:@"garbageAndRecycling"])
  {
    uint64_t v2 = 8;
  }
  else if ([v1 isEqualToString:@"healthInsurance"])
  {
    uint64_t v2 = 9;
  }
  else if ([v1 isEqualToString:@"homeInsurance"])
  {
    uint64_t v2 = 10;
  }
  else if ([v1 isEqualToString:@"internet"])
  {
    uint64_t v2 = 11;
  }
  else if ([v1 isEqualToString:@"lifeInsurance"])
  {
    uint64_t v2 = 12;
  }
  else if ([v1 isEqualToString:@"mortgage"])
  {
    uint64_t v2 = 13;
  }
  else if ([v1 isEqualToString:@"musicStreaming"])
  {
    uint64_t v2 = 14;
  }
  else if ([v1 isEqualToString:@"phone"])
  {
    uint64_t v2 = 15;
  }
  else if ([v1 isEqualToString:@"rent"])
  {
    uint64_t v2 = 16;
  }
  else if ([v1 isEqualToString:@"sewer"])
  {
    uint64_t v2 = 17;
  }
  else if ([v1 isEqualToString:@"studentLoan"])
  {
    uint64_t v2 = 18;
  }
  else if ([v1 isEqualToString:@"trafficTicket"])
  {
    uint64_t v2 = 19;
  }
  else if ([v1 isEqualToString:@"tuition"])
  {
    uint64_t v2 = 20;
  }
  else if ([v1 isEqualToString:@"utilities"])
  {
    uint64_t v2 = 21;
  }
  else if ([v1 isEqualToString:@"water"])
  {
    uint64_t v2 = 22;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INBillTypeGetLocalizedName(uint64_t a1, void *a2)
{
  id v3 = a2;
  switch(a1)
  {
    case 1:
      uint64_t v4 = @"auto insurance";
      goto LABEL_25;
    case 2:
      uint64_t v4 = @"cable";
      goto LABEL_25;
    case 3:
      uint64_t v4 = @"car lease";
      goto LABEL_25;
    case 4:
      uint64_t v4 = @"car loan";
      goto LABEL_25;
    case 5:
      uint64_t v4 = @"credit card";
      goto LABEL_25;
    case 6:
      uint64_t v4 = @"electricity";
      goto LABEL_25;
    case 7:
      uint64_t v4 = @"gas";
      goto LABEL_25;
    case 8:
      uint64_t v4 = @"garbage and recycling";
      goto LABEL_25;
    case 9:
      uint64_t v4 = @"health insurance";
      goto LABEL_25;
    case 10:
      uint64_t v4 = @"home insurance";
      goto LABEL_25;
    case 11:
      uint64_t v4 = @"internet";
      goto LABEL_25;
    case 12:
      uint64_t v4 = @"life insurance";
      goto LABEL_25;
    case 13:
      uint64_t v4 = @"mortgage";
      goto LABEL_25;
    case 14:
      uint64_t v4 = @"music streaming";
      goto LABEL_25;
    case 15:
      uint64_t v4 = @"phone";
      goto LABEL_25;
    case 16:
      uint64_t v4 = @"rent";
      goto LABEL_25;
    case 17:
      uint64_t v4 = @"sewer";
      goto LABEL_25;
    case 18:
      uint64_t v4 = @"student loan";
      goto LABEL_25;
    case 19:
      uint64_t v4 = @"traffic ticket";
      goto LABEL_25;
    case 20:
      uint64_t v4 = @"tuition";
      goto LABEL_25;
    case 21:
      uint64_t v4 = @"utilities";
      goto LABEL_25;
    case 22:
      uint64_t v4 = @"water";
LABEL_25:
      uint64_t v5 = INLocalizedStringWithLocalizer(v4, v4, v3);
      break;
    default:
      uint64_t v5 = 0;
      break;
  }

  return v5;
}

BOOL _INPBPlayVoicemailIntentResponseReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v6 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
      return v7 == 0;
    }
    if (*(unsigned char *)(a2 + *v5))
    {
      int v7 = 1;
      return v7 == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    uint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v6) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        LOBYTE(v10) = 0;
        int v7 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      LOBYTE(v10) = 0;
    }
LABEL_14:
    if (v7) {
      BOOL v15 = 1;
    }
    else {
      BOOL v15 = (v10 & 7) == 4;
    }
    if (v15) {
      return v7 == 0;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      return 0;
    }
  }
}

void __INCodableAttributeAvailableArraySizeClasses_block_invoke()
{
  v4[8] = *MEMORY[0x1E4F143B8];
  uint64_t v0 = (void *)MEMORY[0x1E4F1CAD0];
  v4[0] = @"Small";
  v4[1] = @"Medium";
  v4[2] = @"Large";
  v4[3] = @"ExtraLarge";
  v4[4] = @"AccessoryCorner";
  void v4[5] = @"AccessoryCircular";
  void v4[6] = @"AccessoryRectangular";
  v4[7] = @"AccessoryInline";
  id v1 = [MEMORY[0x1E4F1C978] arrayWithObjects:v4 count:8];
  uint64_t v2 = [v0 setWithArray:v1];
  id v3 = (void *)INCodableAttributeAvailableArraySizeClasses_codableAvailableArraySizeClasses;
  INCodableAttributeAvailableArraySizeClasses_codableAvailableArraySizeClasses = v2;
}

id INCodableAttributeClassFromType(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  if ((unint64_t)(a1 - 1) >= 5)
  {
    uint64_t v2 = (void *)INSiriLogContextIntents;
    if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_FAULT))
    {
      uint64_t v5 = NSNumber;
      uint64_t v6 = v2;
      int v7 = [v5 numberWithInteger:a1];
      int v8 = 136315394;
      unsigned int v9 = "INCodableAttributeClassFromType";
      __int16 v10 = 2112;
      uint64_t v11 = v7;
      _os_log_fault_impl(&dword_18CB2F000, v6, OS_LOG_TYPE_FAULT, "%s Unknown type for codable attribute of type: %@", (uint8_t *)&v8, 0x16u);
    }
  }
  id v3 = objc_opt_class();

  return v3;
}

id INIntentSlotValueTransformFromContact(void *a1)
{
  uint64_t v30 = *MEMORY[0x1E4F143B8];
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  id v22 = a1;
  id v1 = [v22 values];
  uint64_t v2 = [v1 countByEnumeratingWithState:&v25 objects:v29 count:16];
  if (!v2)
  {
    id v4 = 0;
    id v5 = 0;
    goto LABEL_26;
  }
  uint64_t v3 = v2;
  id v4 = 0;
  id v5 = 0;
  uint64_t v6 = *(void *)v26;
  uint64_t v23 = *(void *)v26;
  uint64_t v24 = v1;
  do
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      if (*(void *)v26 != v6) {
        objc_enumerationMutation(v1);
      }
      int v8 = *(void **)(*((void *)&v25 + 1) + 8 * i);
      if (!v5)
      {
        unsigned int v9 = [*(id *)(*((void *)&v25 + 1) + 8 * i) valueMetadata];
        uint64_t v10 = INPrivacyEntitlementOptionsForValueMetadata(v9);

        if (!v10)
        {
          id v5 = v8;
          continue;
        }
      }
      uint64_t v11 = INIntentSlotValueTransformFromContactValueWithAlternatives(v8, 0);
      if (v11)
      {
        if (!v4) {
          id v4 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
        }
        if ([v8 hasValueMetadata])
        {
          uint64_t v12 = [v8 valueMetadata];
          if ([v12 hasConfidenceScore])
          {
            char v13 = [v8 valueMetadata];
            long long v14 = [v13 confidenceScore];
            int v15 = [v14 hasAggregateScore];

            if (v15)
            {
              uint64_t v16 = NSNumber;
              uint64_t v12 = [v8 valueMetadata];
              long long v17 = [v12 confidenceScore];
              [v17 aggregateScore];
              char v18 = objc_msgSend(v16, "numberWithFloat:");

              uint64_t v6 = v23;
              id v1 = v24;
              goto LABEL_18;
            }
            char v18 = 0;
            uint64_t v6 = v23;
            id v1 = v24;
          }
          else
          {
            char v18 = 0;
LABEL_18:
          }
        }
        else
        {
          char v18 = 0;
        }
        uint64_t v19 = [[INScoredPerson alloc] initWithPerson:v11 score:v18];
        [v4 addObject:v19];
      }
    }
    uint64_t v3 = [v1 countByEnumeratingWithState:&v25 objects:v29 count:16];
  }
  while (v3);
LABEL_26:

  uint64_t v20 = INIntentSlotValueTransformFromContactValueWithScoredAlternatives(v5, v4);

  return v20;
}

id INIntentSlotValueTransformFromContactValueWithAlternatives(void *a1, void *a2)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  if (v4)
  {
    id v5 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v4, "count"));
    long long v17 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    id v6 = v4;
    uint64_t v7 = [v6 countByEnumeratingWithState:&v17 objects:v21 count:16];
    if (v7)
    {
      uint64_t v8 = v7;
      uint64_t v9 = *(void *)v18;
      do
      {
        for (uint64_t i = 0; i != v8; ++i)
        {
          if (*(void *)v18 != v9) {
            objc_enumerationMutation(v6);
          }
          uint64_t v11 = *(void *)(*((void *)&v17 + 1) + 8 * i);
          uint64_t v12 = [INScoredPerson alloc];
          char v13 = -[INScoredPerson initWithPerson:score:](v12, "initWithPerson:score:", v11, 0, (void)v17);
          [v5 addObject:v13];
        }
        uint64_t v8 = [v6 countByEnumeratingWithState:&v17 objects:v21 count:16];
      }
      while (v8);
    }
  }
  else
  {
    id v5 = 0;
  }
  long long v14 = objc_msgSend(v5, "copy", (void)v17);
  int v15 = INIntentSlotValueTransformFromContactValueWithScoredAlternatives(v3, v14);

  return v15;
}

id INIntentSlotValueTransformFromContactValueWithScoredAlternatives(void *a1, void *a2)
{
  uint64_t v60 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  if (v3)
  {
    id v5 = [v3 valueMetadata];
    INPrivacyEntitlementValidateValueMetadata(v5);

    if ([v3 hasValueMetadata])
    {
      id v6 = [v3 valueMetadata];
      if ([v6 hasInput])
      {
        long long v54 = [v6 input];
      }
      else
      {
        long long v54 = 0;
      }
      if ([v6 hasUuid])
      {
        long long v53 = [v6 uuid];
      }
      else
      {
        long long v53 = 0;
      }
    }
    else
    {
      long long v53 = 0;
      long long v54 = 0;
    }
    if (([v3 hasNamePrefix] & 1) != 0
      || ([v3 hasFirstName] & 1) != 0
      || ([v3 hasMiddleName] & 1) != 0
      || ([v3 hasLastName] & 1) != 0
      || ([v3 hasNameSuffix] & 1) != 0
      || ([v3 hasNickName] & 1) != 0
      || ([v3 hasPhoneticNamePrefix] & 1) != 0
      || ([v3 hasPhoneticFirstName] & 1) != 0
      || ([v3 hasPhoneticMiddleName] & 1) != 0
      || ([v3 hasPhoneticLastName] & 1) != 0
      || [v3 hasPhoneticNameSuffix])
    {
      id v8 = objc_alloc_init(MEMORY[0x1E4F28F30]);
      if ([v3 hasNamePrefix])
      {
        uint64_t v9 = [v3 namePrefix];
        [v8 setNamePrefix:v9];
      }
      if ([v3 hasFirstName])
      {
        uint64_t v10 = [v3 firstName];
        [v8 setGivenName:v10];
      }
      if ([v3 hasMiddleName])
      {
        uint64_t v11 = [v3 middleName];
        [v8 setMiddleName:v11];
      }
      if ([v3 hasLastName])
      {
        uint64_t v12 = [v3 lastName];
        [v8 setFamilyName:v12];
      }
      if ([v3 hasNameSuffix])
      {
        char v13 = [v3 nameSuffix];
        [v8 setNameSuffix:v13];
      }
      if ([v3 hasNickName])
      {
        long long v14 = [v3 nickName];
        [v8 setNickname:v14];
      }
      if (([v3 hasPhoneticNamePrefix] & 1) != 0
        || ([v3 hasPhoneticFirstName] & 1) != 0
        || ([v3 hasPhoneticMiddleName] & 1) != 0
        || ([v3 hasPhoneticLastName] & 1) != 0
        || [v3 hasPhoneticNameSuffix])
      {
        id v15 = objc_alloc_init(MEMORY[0x1E4F28F30]);
        if ([v3 hasPhoneticNamePrefix])
        {
          uint64_t v16 = [v3 phoneticNamePrefix];
          [v15 setNamePrefix:v16];
        }
        if ([v3 hasPhoneticFirstName])
        {
          long long v17 = [v3 phoneticFirstName];
          [v15 setGivenName:v17];
        }
        if ([v3 hasPhoneticMiddleName])
        {
          long long v18 = [v3 phoneticMiddleName];
          [v15 setMiddleName:v18];
        }
        if ([v3 hasPhoneticLastName])
        {
          long long v19 = [v3 phoneticLastName];
          [v15 setFamilyName:v19];
        }
        if ([v3 hasPhoneticNameSuffix])
        {
          long long v20 = [v3 phoneticNameSuffix];
          [v15 setNameSuffix:v20];
        }
        [v8 setPhoneticRepresentation:v15];
      }
    }
    else
    {
      id v8 = 0;
    }
    if ([v3 hasFullName])
    {
      long long v51 = [v3 fullName];
    }
    else
    {
      long long v51 = 0;
    }
    if ([v3 hasContactHandle])
    {
      uint64_t v21 = [v3 contactHandle];
      long long v49 = INIntentSlotValueTransformFromContactHandle(v21);
    }
    else
    {
      long long v49 = 0;
    }
    if ([v3 hasImage])
    {
      uint64_t v22 = [v3 image];
      uint64_t v48 = INIntentSlotValueTransformFromImageValue(v22);
    }
    else
    {
      uint64_t v48 = 0;
    }
    if ([v3 hasCustomIdentifier])
    {
      char v47 = [v3 customIdentifier];
    }
    else
    {
      char v47 = 0;
    }
    if ([v3 hasPhonemeData])
    {
      unint64_t v46 = [v3 phonemeData];
    }
    else
    {
      unint64_t v46 = 0;
    }
    uint64_t v23 = [v3 aliases];
    id v50 = v4;
    long long v52 = v8;
    if ([v23 count]) {
      uint64_t v24 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v23, "count"));
    }
    else {
      uint64_t v24 = 0;
    }
    long long v57 = 0u;
    long long v58 = 0u;
    long long v55 = 0u;
    long long v56 = 0u;
    id v25 = v23;
    uint64_t v26 = [v25 countByEnumeratingWithState:&v55 objects:v59 count:16];
    if (v26)
    {
      uint64_t v27 = v26;
      uint64_t v28 = *(void *)v56;
      do
      {
        for (uint64_t i = 0; i != v27; ++i)
        {
          if (*(void *)v56 != v28) {
            objc_enumerationMutation(v25);
          }
          uint64_t v30 = INIntentSlotValueTransformFromContactHandle(*(void **)(*((void *)&v55 + 1) + 8 * i));
          if (v30) {
            [v24 addObject:v30];
          }
        }
        uint64_t v27 = [v25 countByEnumeratingWithState:&v55 objects:v59 count:16];
      }
      while (v27);
    }

    if ([v3 hasRelationship])
    {
      uint64_t v45 = [v3 relationship];
    }
    else
    {
      uint64_t v45 = 0;
    }
    if ([v3 hasIsMe]) {
      char v31 = [v3 isMe];
    }
    else {
      char v31 = 0;
    }
    if ([v3 hasIsContactSuggestion]) {
      char v32 = [v3 isContactSuggestion];
    }
    else {
      char v32 = 0;
    }
    uint64_t v33 = [INPerson alloc];
    int v34 = [v3 suggestionType];
    if (v34 == 2) {
      uint64_t v35 = 2;
    }
    else {
      uint64_t v35 = v34 == 1;
    }
    unsigned int v43 = [v3 valueMetadata];
    char v36 = [v43 sourceAppBundleIdentifier];
    uint64_t v37 = [v3 searchProvider] - 1;
    if (v37 < 3) {
      uint64_t v38 = v37 + 1;
    }
    else {
      uint64_t v38 = 0;
    }
    LOBYTE(v42) = v32;
    id v4 = v50;
    LOBYTE(v41) = v31;
    id v44 = -[INPerson _initWithUserInput:personHandle:nameComponents:displayName:image:contactIdentifier:customIdentifier:relationship:aliases:suggestionType:isMe:scoredAlternatives:sourceAppBundleIdentifier:phonemeData:isContactSuggestion:searchProvider:](v33, "_initWithUserInput:personHandle:nameComponents:displayName:image:contactIdentifier:customIdentifier:relationship:aliases:suggestionType:isMe:scoredAlternatives:sourceAppBundleIdentifier:phonemeData:isContactSuggestion:searchProvider:", v54, v49, v52, v51, v48, v53, v47, v45, v24, v35, v41, v50, v36, v46, v42,
            v38);

    uint64_t v7 = v44;
  }
  else
  {
    uint64_t v7 = 0;
  }
  id v39 = v7;

  return v39;
}

INPersonHandle *INIntentSlotValueTransformFromContactHandle(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = [INPersonHandle alloc];
    id v3 = [v1 value];
    unsigned int v4 = [v1 type] - 1;
    if (v4 > 3) {
      uint64_t v5 = 0;
    }
    else {
      uint64_t v5 = qword_18CFC48F0[v4];
    }
    uint64_t v7 = [v1 label];
    int v8 = [v1 emergencyType];
    uint64_t v9 = 2;
    if (v8 == 2) {
      uint64_t v10 = 2;
    }
    else {
      uint64_t v10 = v8 == 1;
    }
    int v11 = [v1 faceTimeType];
    if (v11 != 2) {
      uint64_t v9 = v11 == 1;
    }
    id v6 = -[INPersonHandle initWithValue:type:label:emergencyType:faceTimeType:suggested:](v2, "initWithValue:type:label:emergencyType:faceTimeType:suggested:", v3, v5, v7, v10, v9, [v1 suggested]);
  }
  else
  {
    id v6 = 0;
  }

  return v6;
}

_INPBContact *INIntentSlotValueTransformToContact(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = INIntentSlotValueTransformToContactValue(v1);
  if (v2)
  {
    id v3 = objc_alloc_init(_INPBContact);
    [(_INPBContact *)v3 addValue:v2];
  }
  else
  {
    id v3 = 0;
  }
  long long v13 = 0u;
  long long v14 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  unsigned int v4 = objc_msgSend(v1, "scoredAlternatives", 0);
  uint64_t v5 = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)v12;
    do
    {
      uint64_t v8 = 0;
      uint64_t v9 = v2;
      do
      {
        if (*(void *)v12 != v7) {
          objc_enumerationMutation(v4);
        }
        uint64_t v2 = INIntentSlotValueTransformToScoredContactValue(*(void **)(*((void *)&v11 + 1) + 8 * v8));

        if (v2) {
          [(_INPBContact *)v3 addValue:v2];
        }
        ++v8;
        uint64_t v9 = v2;
      }
      while (v6 != v8);
      uint64_t v6 = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v6);
  }

  return v3;
}

_INPBContactValue *INIntentSlotValueTransformToContactValue(void *a1)
{
  uint64_t v51 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_alloc_init(_INPBContactValue);
    id v3 = [v1 nameComponents];
    unsigned int v4 = [v3 namePrefix];
    [(_INPBContactValue *)v2 setNamePrefix:v4];

    uint64_t v5 = [v3 phoneticRepresentation];
    uint64_t v6 = [v5 namePrefix];
    [(_INPBContactValue *)v2 setPhoneticNamePrefix:v6];

    uint64_t v7 = [v3 givenName];
    [(_INPBContactValue *)v2 setFirstName:v7];

    uint64_t v8 = [v3 phoneticRepresentation];
    uint64_t v9 = [v8 givenName];
    [(_INPBContactValue *)v2 setPhoneticFirstName:v9];

    uint64_t v10 = [v3 middleName];
    [(_INPBContactValue *)v2 setMiddleName:v10];

    long long v11 = [v3 phoneticRepresentation];
    long long v12 = [v11 middleName];
    [(_INPBContactValue *)v2 setPhoneticMiddleName:v12];

    long long v13 = [v3 familyName];
    [(_INPBContactValue *)v2 setLastName:v13];

    long long v14 = [v3 phoneticRepresentation];
    id v15 = [v14 familyName];
    [(_INPBContactValue *)v2 setPhoneticLastName:v15];

    uint64_t v16 = [v3 nameSuffix];
    [(_INPBContactValue *)v2 setNameSuffix:v16];

    long long v17 = [v3 phoneticRepresentation];
    long long v18 = [v17 nameSuffix];
    [(_INPBContactValue *)v2 setPhoneticNameSuffix:v18];

    long long v19 = [v3 nickname];
    [(_INPBContactValue *)v2 setNickName:v19];

    long long v20 = [v1 displayName];
    [(_INPBContactValue *)v2 setFullName:v20];

    uint64_t v21 = [v1 personHandle];
    uint64_t v22 = INIntentSlotValueTransformToContactHandle(v21);
    [(_INPBContactValue *)v2 setContactHandle:v22];

    uint64_t v23 = [v1 image];
    uint64_t v24 = INIntentSlotValueTransformToImageValue(v23);
    [(_INPBContactValue *)v2 setImage:v24];

    uint64_t v25 = [v1 suggestionType];
    if (v25 == 2) {
      uint64_t v26 = 2;
    }
    else {
      uint64_t v26 = v25 == 1;
    }
    [(_INPBContactValue *)v2 setSuggestionType:v26];
    long long v48 = 0u;
    long long v49 = 0u;
    long long v46 = 0u;
    long long v47 = 0u;
    uint64_t v27 = objc_msgSend(v1, "aliases", 0);
    uint64_t v28 = [v27 countByEnumeratingWithState:&v46 objects:v50 count:16];
    if (v28)
    {
      uint64_t v29 = v28;
      uint64_t v30 = *(void *)v47;
      do
      {
        for (uint64_t i = 0; i != v29; ++i)
        {
          if (*(void *)v47 != v30) {
            objc_enumerationMutation(v27);
          }
          char v32 = INIntentSlotValueTransformToContactHandle(*(void **)(*((void *)&v46 + 1) + 8 * i));
          if (v32) {
            [(_INPBContactValue *)v2 addAliases:v32];
          }
        }
        uint64_t v29 = [v27 countByEnumeratingWithState:&v46 objects:v50 count:16];
      }
      while (v29);
    }

    uint64_t v33 = [v1 _userInput];
    int v34 = [v1 contactIdentifier];
    uint64_t v35 = [v1 sourceAppBundleIdentifier];
    char v36 = (__CFString *)v35;
    if (!v33 && !v34 && !v35) {
      goto LABEL_28;
    }
    uint64_t v37 = objc_alloc_init(_INPBValueMetadata);
    uint64_t v38 = v37;
    if (v33) {
      [(_INPBValueMetadata *)v37 setInput:v33];
    }
    if (v34) {
      [(_INPBValueMetadata *)v38 setUuid:v34];
    }
    if ([(__CFString *)v36 isEqualToString:@"com.apple.MobileAddressBook"])
    {
      [(_INPBValueMetadata *)v38 addRequiredEntitlement:1];
      id v39 = @"device";
    }
    else
    {
      if (!v36)
      {
LABEL_27:
        [(_INPBContactValue *)v2 setValueMetadata:v38];

LABEL_28:
        uint64_t v40 = [v1 customIdentifier];
        [(_INPBContactValue *)v2 setCustomIdentifier:v40];

        uint64_t v41 = [v1 relationship];
        [(_INPBContactValue *)v2 setRelationship:v41];

        -[_INPBContactValue setIsMe:](v2, "setIsMe:", [v1 isMe]);
        uint64_t v42 = [v1 phonemeData];
        [(_INPBContactValue *)v2 setPhonemeData:v42];

        -[_INPBContactValue setIsContactSuggestion:](v2, "setIsContactSuggestion:", [v1 isContactSuggestion]);
        unint64_t v43 = [v1 searchProvider] - 1;
        if (v43 < 3) {
          uint64_t v44 = (v43 + 1);
        }
        else {
          uint64_t v44 = 0;
        }
        [(_INPBContactValue *)v2 setSearchProvider:v44];

        goto LABEL_32;
      }
      [(_INPBValueMetadata *)v38 setSourceAppBundleIdentifier:v36];
      id v39 = v36;
    }
    [(_INPBValueMetadata *)v38 setSource:v39];
    goto LABEL_27;
  }
  uint64_t v2 = 0;
LABEL_32:

  return v2;
}

id INIntentSlotValueTransformToScoredContactValue(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 person];
  id v3 = INIntentSlotValueTransformToContactValue(v2);

  unsigned int v4 = [v1 score];

  if (v4)
  {
    uint64_t v5 = objc_alloc_init(_INPBConfidenceScore);
    uint64_t v6 = [v1 score];
    [v6 floatValue];
    -[_INPBConfidenceScore setAggregateScore:](v5, "setAggregateScore:");

    if ([v3 hasValueMetadata])
    {
      uint64_t v7 = [v3 valueMetadata];
      [(_INPBValueMetadata *)v7 setConfidenceScore:v5];
    }
    else
    {
      uint64_t v7 = objc_alloc_init(_INPBValueMetadata);
      [(_INPBValueMetadata *)v7 setConfidenceScore:v5];
      [v3 setValueMetadata:v7];
    }
  }

  return v3;
}

_INPBContactHandle *INIntentSlotValueTransformToContactHandle(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_alloc_init(_INPBContactHandle);
    if (v2)
    {
      id v3 = [v1 value];
      [(_INPBContactHandle *)v2 setValue:v3];

      uint64_t v4 = [v1 type];
      unsigned int v5 = 2 * (v4 == 2);
      if (v4 == 1) {
        unsigned int v5 = 1;
      }
      if (v4 == 104) {
        unsigned int v5 = 4;
      }
      if (v4 == 103) {
        uint64_t v6 = 3;
      }
      else {
        uint64_t v6 = v5;
      }
      [(_INPBContactHandle *)v2 setType:v6];
      uint64_t v7 = [v1 label];
      [(_INPBContactHandle *)v2 setLabel:v7];

      uint64_t v8 = [v1 emergencyType];
      if (v8 == 2) {
        uint64_t v9 = 2;
      }
      else {
        uint64_t v9 = v8 == 1;
      }
      [(_INPBContactHandle *)v2 setEmergencyType:v9];
      uint64_t v10 = [v1 faceTimeType];
      if (v10 == 2) {
        uint64_t v11 = 2;
      }
      else {
        uint64_t v11 = v10 == 1;
      }
      [(_INPBContactHandle *)v2 setFaceTimeType:v11];
      -[_INPBContactHandle setSuggested:](v2, "setSuggested:", [v1 isSuggested]);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INIntentSlotValueTransformFromContactValue(void *a1)
{
  return INIntentSlotValueTransformFromContactValueWithAlternatives(a1, 0);
}

id INIntentSlotValueTransformFromContactValues(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          uint64_t v8 = INIntentSlotValueTransformFromContactValueWithAlternatives(*(void **)(*((void *)&v11 + 1) + 8 * i), 0);
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    uint64_t v9 = (void *)[v2 copy];
  }
  else
  {
    uint64_t v9 = 0;
  }

  return v9;
}

id INIntentSlotValueTransformFromContacts(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          uint64_t v8 = INIntentSlotValueTransformFromContact(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    uint64_t v9 = (void *)[v2 copy];
  }
  else
  {
    uint64_t v9 = 0;
  }

  return v9;
}

id INIntentSlotValueTransformToContactValues(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          uint64_t v8 = INIntentSlotValueTransformToContactValue(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    uint64_t v9 = (void *)[v2 copy];
  }
  else
  {
    uint64_t v9 = 0;
  }

  return v9;
}

id INIntentSlotValueTransformToContacts(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          uint64_t v8 = INIntentSlotValueTransformToContact(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    uint64_t v9 = (void *)[v2 copy];
  }
  else
  {
    uint64_t v9 = 0;
  }

  return v9;
}

_INPBContactValue *INIntentSlotValueRedactedValueFromContactValue(void *a1, uint64_t a2, void *a3)
{
  id v5 = a1;
  id v6 = a3;
  uint64_t v7 = [v5 valueMetadata];
  uint64_t v8 = INPrivacyEntitlementOptionsForValueMetadata(v7);

  if ((v8 & a2) != 0) {
    goto LABEL_2;
  }
  uint64_t v10 = [v5 valueMetadata];
  uint64_t v11 = [v10 sourceAppBundleIdentifier];
  if (v11)
  {
    long long v12 = (void *)v11;
    long long v13 = [v5 valueMetadata];
    long long v14 = [v13 sourceAppBundleIdentifier];
    int v15 = [v6 isEqualToString:v14];

    if (!v15)
    {
LABEL_2:
      uint64_t v9 = 0;
      goto LABEL_8;
    }
  }
  else
  {
  }
  uint64_t v9 = objc_alloc_init(_INPBContactValue);
  uint64_t v16 = [v5 image];
  long long v17 = INIntentSlotValueRedactedImageValueFromImageValue(v16, a2);
  [(_INPBContactValue *)v9 setImage:v17];

  long long v18 = [v5 namePrefix];
  [(_INPBContactValue *)v9 setNamePrefix:v18];

  long long v19 = [v5 phoneticNamePrefix];
  [(_INPBContactValue *)v9 setPhoneticNamePrefix:v19];

  long long v20 = [v5 firstName];
  [(_INPBContactValue *)v9 setFirstName:v20];

  uint64_t v21 = [v5 phoneticFirstName];
  [(_INPBContactValue *)v9 setPhoneticFirstName:v21];

  uint64_t v22 = [v5 middleName];
  [(_INPBContactValue *)v9 setMiddleName:v22];

  uint64_t v23 = [v5 phoneticMiddleName];
  [(_INPBContactValue *)v9 setPhoneticMiddleName:v23];

  uint64_t v24 = [v5 lastName];
  [(_INPBContactValue *)v9 setLastName:v24];

  uint64_t v25 = [v5 phoneticLastName];
  [(_INPBContactValue *)v9 setPhoneticLastName:v25];

  uint64_t v26 = [v5 nameSuffix];
  [(_INPBContactValue *)v9 setNameSuffix:v26];

  uint64_t v27 = [v5 phoneticNameSuffix];
  [(_INPBContactValue *)v9 setPhoneticNameSuffix:v27];

  uint64_t v28 = [v5 nickName];
  [(_INPBContactValue *)v9 setNickName:v28];

  uint64_t v29 = [v5 fullName];
  [(_INPBContactValue *)v9 setFullName:v29];

  uint64_t v30 = [v5 contactHandle];
  [(_INPBContactValue *)v9 setContactHandle:v30];

  char v31 = [v5 valueMetadata];
  [(_INPBContactValue *)v9 setValueMetadata:v31];

  char v32 = [v5 customIdentifier];
  [(_INPBContactValue *)v9 setCustomIdentifier:v32];

  -[_INPBContactValue setIsContactSuggestion:](v9, "setIsContactSuggestion:", [v5 isContactSuggestion]);
  -[_INPBContactValue setSearchProvider:](v9, "setSearchProvider:", [v5 searchProvider]);
LABEL_8:

  return v9;
}

_INPBContact *INIntentSlotValueRedactedContactFromContact(void *a1, uint64_t a2, void *a3)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a3;
  if (v5)
  {
    uint64_t v7 = objc_alloc_init(_INPBContact);
    long long v15 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
    long long v18 = 0u;
    uint64_t v8 = objc_msgSend(v5, "values", 0);
    uint64_t v9 = [v8 countByEnumeratingWithState:&v15 objects:v19 count:16];
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = *(void *)v16;
      do
      {
        for (uint64_t i = 0; i != v10; ++i)
        {
          if (*(void *)v16 != v11) {
            objc_enumerationMutation(v8);
          }
          long long v13 = INIntentSlotValueRedactedValueFromContactValue(*(void **)(*((void *)&v15 + 1) + 8 * i), a2, v6);
          if (v13) {
            [(_INPBContact *)v7 addValue:v13];
          }
        }
        uint64_t v10 = [v8 countByEnumeratingWithState:&v15 objects:v19 count:16];
      }
      while (v10);
    }
  }
  else
  {
    uint64_t v7 = 0;
  }

  return v7;
}

id INIntentSlotValueRedactedContactsFromContacts(void *a1, uint64_t a2, void *a3)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a3;
  uint64_t v7 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v5, "count"));
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v8 = v5;
  uint64_t v9 = [v8 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)v17;
    do
    {
      for (uint64_t i = 0; i != v10; ++i)
      {
        if (*(void *)v17 != v11) {
          objc_enumerationMutation(v8);
        }
        long long v13 = INIntentSlotValueRedactedContactFromContact(*(void **)(*((void *)&v16 + 1) + 8 * i), a2, v6);
        objc_msgSend(v7, "addObject:", v13, (void)v16);
      }
      uint64_t v10 = [v8 countByEnumeratingWithState:&v16 objects:v20 count:16];
    }
    while (v10);
  }

  long long v14 = (void *)[v7 copy];

  return v14;
}

id INIntentSlotValueTransformFromDialingContact(void *a1)
{
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  id v23 = a1;
  id v1 = [v23 values];
  uint64_t v2 = [v1 countByEnumeratingWithState:&v24 objects:v28 count:16];
  if (!v2)
  {
    id v4 = 0;
    id v5 = 0;
    goto LABEL_21;
  }
  uint64_t v3 = v2;
  id v4 = 0;
  id v5 = 0;
  uint64_t v6 = *(void *)v25;
  do
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      if (*(void *)v25 != v6) {
        objc_enumerationMutation(v1);
      }
      id v8 = *(void **)(*((void *)&v24 + 1) + 8 * i);
      if (v5
        || ([*(id *)(*((void *)&v24 + 1) + 8 * i) dialingContact],
            uint64_t v9 = objc_claimAutoreleasedReturnValue(),
            [v9 valueMetadata],
            uint64_t v10 = objc_claimAutoreleasedReturnValue(),
            uint64_t v11 = INPrivacyEntitlementOptionsForValueMetadata(v10),
            v10,
            v9,
            v11))
      {
        id v12 = v8;
        if (!v12) {
          continue;
        }
        long long v13 = v12;
        if ([v12 hasDialingContact]
          && ([v13 dialingContact],
              long long v14 = objc_claimAutoreleasedReturnValue(),
              INIntentSlotValueTransformFromContactValueWithAlternatives(v14, 0),
              id v15 = (id)objc_claimAutoreleasedReturnValue(),
              v14,
              v15))
        {
        }
        else
        {
          LOBYTE(v22) = 0;
          LOBYTE(v21) = 0;
          id v15 = [[INPerson alloc] _initWithUserInput:0 personHandle:0 nameComponents:0 displayName:0 image:0 contactIdentifier:0 customIdentifier:0 relationship:0 aliases:0 suggestionType:0 isMe:v21 alternatives:0 sourceAppBundleIdentifier:0 phonemeData:0 isContactSuggestion:v22];

          if (!v15) {
            continue;
          }
        }
        if (!v4) {
          id v4 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
        }
        [v4 addObject:v15];
      }
      else
      {
        id v5 = v8;
      }
    }
    uint64_t v3 = [v1 countByEnumeratingWithState:&v24 objects:v28 count:16];
  }
  while (v3);
LABEL_21:

  id v16 = v5;
  id v17 = v4;
  if (v16)
  {
    if (![v16 hasDialingContact]
      || ([v16 dialingContact],
          long long v18 = objc_claimAutoreleasedReturnValue(),
          INIntentSlotValueTransformFromContactValueWithAlternatives(v18, v17),
          id v19 = (id)objc_claimAutoreleasedReturnValue(),
          v18,
          !v19))
    {
      LOBYTE(v22) = 0;
      LOBYTE(v21) = 0;
      id v19 = [[INPerson alloc] _initWithUserInput:0 personHandle:0 nameComponents:0 displayName:0 image:0 contactIdentifier:0 customIdentifier:0 relationship:0 aliases:0 suggestionType:0 isMe:v21 alternatives:v17 sourceAppBundleIdentifier:0 phonemeData:0 isContactSuggestion:v22];
    }
  }
  else
  {
    id v19 = 0;
  }

  return v19;
}

_INPBDialingContact *INIntentSlotValueTransformToDialingContact(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = _INIntentSlotValueTransformToDialingContactValue(v1);
  if (v2)
  {
    uint64_t v3 = objc_alloc_init(_INPBDialingContact);
    [(_INPBDialingContact *)v3 addValue:v2];
  }
  else
  {
    uint64_t v3 = 0;
  }
  long long v13 = 0u;
  long long v14 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v4 = objc_msgSend(v1, "alternatives", 0);
  uint64_t v5 = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)v12;
    do
    {
      uint64_t v8 = 0;
      uint64_t v9 = v2;
      do
      {
        if (*(void *)v12 != v7) {
          objc_enumerationMutation(v4);
        }
        uint64_t v2 = _INIntentSlotValueTransformToDialingContactValue(*(void **)(*((void *)&v11 + 1) + 8 * v8));

        if (v2) {
          [(_INPBDialingContact *)v3 addValue:v2];
        }
        ++v8;
        uint64_t v9 = v2;
      }
      while (v6 != v8);
      uint64_t v6 = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v6);
  }

  return v3;
}

_INPBDialingContactValue *_INIntentSlotValueTransformToDialingContactValue(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    uint64_t v2 = objc_alloc_init(_INPBDialingContactValue);
    uint64_t v3 = INIntentSlotValueTransformToContactValue(v1);

    [(_INPBDialingContactValue *)v2 setDialingContact:v3];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INIntentSlotValueTransformFromDialingContacts(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = INIntentSlotValueTransformFromDialingContact(*(void **)(*((void *)&v11 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  uint64_t v9 = (void *)[v2 copy];

  return v9;
}

id INIntentSlotValueTransformToDialingContacts(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = INIntentSlotValueTransformToDialingContact(*(void **)(*((void *)&v11 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  uint64_t v9 = (void *)[v2 copy];

  return v9;
}

_INPBDialingContact *INIntentSlotValueRedactedDialingContactFromDialingContact(void *a1, uint64_t a2, void *a3)
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a3;
  if (v5)
  {
    uint64_t v22 = objc_alloc_init(_INPBDialingContact);
    long long v23 = 0u;
    long long v24 = 0u;
    long long v25 = 0u;
    long long v26 = 0u;
    id v20 = v5;
    id obj = [v5 values];
    uint64_t v7 = [obj countByEnumeratingWithState:&v23 objects:v27 count:16];
    if (v7)
    {
      uint64_t v8 = v7;
      uint64_t v9 = *(void *)v24;
      do
      {
        for (uint64_t i = 0; i != v8; ++i)
        {
          if (*(void *)v24 != v9) {
            objc_enumerationMutation(obj);
          }
          id v11 = *(id *)(*((void *)&v23 + 1) + 8 * i);
          id v12 = v6;
          long long v13 = [v11 dialingContact];
          long long v14 = [v13 valueMetadata];
          uint64_t v15 = INPrivacyEntitlementOptionsForValueMetadata(v14);

          if ((v15 & a2) != 0)
          {
            uint64_t v16 = 0;
          }
          else
          {
            uint64_t v16 = objc_alloc_init(_INPBDialingContactValue);
            id v17 = [v11 dialingContact];
            long long v18 = INIntentSlotValueRedactedValueFromContactValue(v17, a2, v12);
            [(_INPBDialingContactValue *)v16 setDialingContact:v18];
          }
          if (v16) {
            [(_INPBDialingContact *)v22 addValue:v16];
          }
        }
        uint64_t v8 = [obj countByEnumeratingWithState:&v23 objects:v27 count:16];
      }
      while (v8);
    }

    id v5 = v20;
  }
  else
  {
    uint64_t v22 = 0;
  }

  return v22;
}

id INIntentSlotValueRedactedDialingContactsFromDialingContacts(void *a1, uint64_t a2, void *a3)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a3;
  uint64_t v7 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v5, "count"));
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v8 = v5;
  uint64_t v9 = [v8 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)v17;
    do
    {
      for (uint64_t i = 0; i != v10; ++i)
      {
        if (*(void *)v17 != v11) {
          objc_enumerationMutation(v8);
        }
        long long v13 = INIntentSlotValueRedactedDialingContactFromDialingContact(*(void **)(*((void *)&v16 + 1) + 8 * i), a2, v6);
        objc_msgSend(v7, "addObject:", v13, (void)v16);
      }
      uint64_t v10 = [v8 countByEnumeratingWithState:&v16 objects:v20 count:16];
    }
    while (v10);
  }

  long long v14 = (void *)[v7 copy];

  return v14;
}

uint64_t _INPBResumeTimerIntentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        long long v24 = objc_alloc_init(_INPBIntentMetadata);
        if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v24, a2) & 1) == 0)
        {
LABEL_43:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntentMetadata:", v24, 0, 0);
      }
      else
      {
        if (v17 != 3)
        {
          if (v17 == 2)
          {
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            while (1)
            {
              uint64_t v21 = *v3;
              unint64_t v22 = *(void *)(a2 + v21);
              if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
              *(void *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0) {
                goto LABEL_38;
              }
              v18 += 7;
              BOOL v14 = v19++ >= 9;
              if (v14)
              {
                uint64_t v20 = 0;
                goto LABEL_40;
              }
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_38:
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v20 = 0;
            }
LABEL_40:
            [a1 setResumeMultiple:v20 != 0];
          }
          else
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
          }
          continue;
        }
        long long v24 = objc_alloc_init(_INPBTimer);
        if (!PBReaderPlaceMark() || (_INPBTimerReadFrom(v24, a2) & 1) == 0) {
          goto LABEL_43;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTargetTimer:", v24, 0, 0);
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t INAmountTypeHasBackingType(unint64_t a1)
{
  return (a1 < 7) & (0x7Eu >> a1);
}

uint64_t INAmountTypeGetBackingType(uint64_t result)
{
  if ((unint64_t)(result - 1) < 6) {
    return result;
  }
  else {
    return 0x7FFFFFFFLL;
  }
}

uint64_t INAmountTypeGetFacadeType(int a1, int a2)
{
  uint64_t v2 = (a2 - 1);
  if (v2 <= 5) {
    uint64_t v3 = v2 + 1;
  }
  else {
    uint64_t v3 = 0;
  }
  if (a1) {
    return v3;
  }
  else {
    return 0;
  }
}

__CFString *INAmountTypeGetName(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 5) {
    return @"unknown";
  }
  else {
    return off_1E5519570[a1 - 1];
  }
}

uint64_t INAmountTypeWithString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"minimumDue"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"amountDue"])
  {
    uint64_t v2 = 2;
  }
  else if ([v1 isEqualToString:@"currentBalance"])
  {
    uint64_t v2 = 3;
  }
  else if ([v1 isEqualToString:@"maximumTransferAmount"])
  {
    uint64_t v2 = 4;
  }
  else if ([v1 isEqualToString:@"minimumTransferAmount"])
  {
    uint64_t v2 = 5;
  }
  else if ([v1 isEqualToString:@"statementBalance"])
  {
    uint64_t v2 = 6;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INAmountTypeGetLocalizedName(uint64_t a1, void *a2)
{
  id v3 = a2;
  switch(a1)
  {
    case 1:
      uint64_t v4 = @"minimum due";
      goto LABEL_9;
    case 2:
      uint64_t v4 = @"amount due";
      goto LABEL_9;
    case 3:
      uint64_t v4 = @"current balance";
      goto LABEL_9;
    case 4:
      uint64_t v4 = @"maximum transfer amount";
      goto LABEL_9;
    case 5:
      uint64_t v4 = @"minimum transfer amount";
      goto LABEL_9;
    case 6:
      uint64_t v4 = @"statement balance";
LABEL_9:
      id v5 = INLocalizedStringWithLocalizer(v4, v4, v3);
      break;
    default:
      id v5 = 0;
      break;
  }

  return v5;
}

__CFString *INSearchForBillsIntentResponseCodeGetName(unint64_t a1)
{
  if (a1 > 7) {
    return 0;
  }
  else {
    return off_1E55195A0[a1];
  }
}

__CFString *INSetTaskAttributeIntentResponseCodeGetName(unint64_t a1)
{
  if (a1 > 5) {
    return 0;
  }
  else {
    return off_1E55195E0[a1];
  }
}

uint64_t _INPBAddTasksIntentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v17 = objc_alloc_init(_INPBIntentMetadata);
        if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_75;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntentMetadata:", v17, 0, 0);
        goto LABEL_54;
      case 2u:
        unint64_t v17 = objc_alloc_init(_INPBTaskList);
        if (!PBReaderPlaceMark() || !_INPBTaskListReadFrom(v17, a2)) {
          goto LABEL_75;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTargetTaskList:", v17, 0, 0);
        goto LABEL_54;
      case 3u:
        unint64_t v17 = objc_alloc_init(_INPBDataString);
        uint64_t v33 = 0;
        uint64_t v34 = 0;
        if (!PBReaderPlaceMark() || !_INPBDataStringReadFrom(v17, a2)) {
          goto LABEL_75;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addTaskTitles:", v17, 0, 0);
        }
        goto LABEL_54;
      case 5u:
        unint64_t v17 = objc_alloc_init(_INPBSpatialEventTrigger);
        if (!PBReaderPlaceMark() || (_INPBSpatialEventTriggerReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_75;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSpatialEventTrigger:", v17, 0, 0);
        goto LABEL_54;
      case 6u:
        unint64_t v17 = objc_alloc_init(_INPBTemporalEventTrigger);
        if (!PBReaderPlaceMark() || (_INPBTemporalEventTriggerReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_75;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTemporalEventTrigger:", v17, 0, 0);
        goto LABEL_54;
      case 7u:
        unint64_t v17 = objc_alloc_init(_INPBContactEventTrigger);
        if (!PBReaderPlaceMark() || (_INPBContactEventTriggerReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_75;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setContactEventTrigger:", v17, 0, 0);
        goto LABEL_54;
      case 8u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_68;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v21;
        }
LABEL_68:
        objc_msgSend(a1, "setTaskReference:", v25, v33, v34);
        goto LABEL_55;
      case 9u:
        unint64_t v17 = objc_alloc_init(_INPBIntent);
        if (!PBReaderPlaceMark() || (_INPBIntentReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_75;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntent:", v17, 0, 0);
        goto LABEL_54;
      case 0xAu:
        unint64_t v17 = objc_alloc_init(_INPBContact);
        uint64_t v33 = 0;
        uint64_t v34 = 0;
        if (PBReaderPlaceMark() && _INPBContactReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          if (v17) {
            objc_msgSend(a1, "addTargetTaskListMembers:", v17, 0, 0);
          }
LABEL_54:

LABEL_55:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_75:

        return 0;
      case 0xBu:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                uint64_t v32 = 0;
                goto LABEL_73;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v32 = 0;
        }
        else {
          uint64_t v32 = v28;
        }
LABEL_73:
        objc_msgSend(a1, "setPriority:", v32, v33, v34);
        goto LABEL_55;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_55;
    }
  }
}

__CFString *INPayBillIntentResponseCodeGetName(unint64_t a1)
{
  if (a1 > 7) {
    return 0;
  }
  else {
    return off_1E5519628[a1];
  }
}

void INCallRecordTypeOptionsEnumerateBackingTypes(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (!a1 || !v3) {
    goto LABEL_12;
  }
  id v4 = v3;
  if (a1)
  {
    (*((void (**)(id, uint64_t))v3 + 2))(v3, 2);
    id v3 = v4;
    if ((a1 & 2) == 0)
    {
LABEL_5:
      if ((a1 & 4) == 0) {
        goto LABEL_6;
      }
      goto LABEL_17;
    }
  }
  else if ((a1 & 2) == 0)
  {
    goto LABEL_5;
  }
  (*((void (**)(id, uint64_t))v3 + 2))(v4, 3);
  id v3 = v4;
  if ((a1 & 4) == 0)
  {
LABEL_6:
    if ((a1 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  (*((void (**)(id, uint64_t))v3 + 2))(v4, 4);
  id v3 = v4;
  if ((a1 & 8) == 0)
  {
LABEL_7:
    if ((a1 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  (*((void (**)(id, uint64_t))v3 + 2))(v4, 5);
  id v3 = v4;
  if ((a1 & 0x10) == 0)
  {
LABEL_8:
    if ((a1 & 0x20) == 0) {
      goto LABEL_9;
    }
LABEL_20:
    (*((void (**)(id, uint64_t))v3 + 2))(v4, 8);
    id v3 = v4;
    if ((a1 & 0x40) == 0)
    {
LABEL_10:
      if ((a1 & 0x80) == 0) {
        goto LABEL_12;
      }
      goto LABEL_11;
    }
    goto LABEL_21;
  }
LABEL_19:
  (*((void (**)(id, uint64_t))v3 + 2))(v4, 7);
  id v3 = v4;
  if ((a1 & 0x20) != 0) {
    goto LABEL_20;
  }
LABEL_9:
  if ((a1 & 0x40) == 0) {
    goto LABEL_10;
  }
LABEL_21:
  (*((void (**)(id, uint64_t))v3 + 2))(v4, 9);
  id v3 = v4;
  if ((a1 & 0x80) != 0)
  {
LABEL_11:
    (*((void (**)(id, uint64_t))v3 + 2))(v4, 10);
    id v3 = v4;
  }
LABEL_12:
}

uint64_t INCallRecordTypeOptionsContainsBackingType(uint64_t result, int a2)
{
  if (result)
  {
    unint64_t v2 = result;
    uint64_t result = 0;
    switch(a2)
    {
      case 2:
        uint64_t result = v2 & 1;
        break;
      case 3:
        uint64_t result = (v2 >> 1) & 1;
        break;
      case 4:
        uint64_t result = (v2 >> 2) & 1;
        break;
      case 5:
        uint64_t result = (v2 >> 3) & 1;
        break;
      case 7:
        uint64_t result = (v2 >> 4) & 1;
        break;
      case 8:
        uint64_t result = (v2 >> 5) & 1;
        break;
      case 9:
        uint64_t result = (v2 >> 6) & 1;
        break;
      case 10:
        uint64_t result = (v2 >> 7) & 1;
        break;
      default:
        return result;
    }
  }
  return result;
}

uint64_t *INCallRecordTypeOptionsAddBackingType(uint64_t *result, int a2)
{
  if (result)
  {
    uint64_t v2 = *result;
    switch(a2)
    {
      case 2:
        v2 |= 1uLL;
        break;
      case 3:
        v2 |= 2uLL;
        break;
      case 4:
        v2 |= 4uLL;
        break;
      case 5:
        v2 |= 8uLL;
        break;
      case 7:
        v2 |= 0x10uLL;
        break;
      case 8:
        v2 |= 0x20uLL;
        break;
      case 9:
        v2 |= 0x40uLL;
        break;
      case 10:
        v2 |= 0x80uLL;
        break;
      default:
        break;
    }
    *uint64_t result = v2;
  }
  return result;
}

uint64_t *INCallRecordTypeOptionsRemoveBackingType(uint64_t *result, int a2)
{
  if (result)
  {
    uint64_t v2 = *result;
    switch(a2)
    {
      case 2:
        v2 &= ~1uLL;
        break;
      case 3:
        v2 &= ~2uLL;
        break;
      case 4:
        v2 &= ~4uLL;
        break;
      case 5:
        v2 &= ~8uLL;
        break;
      case 7:
        v2 &= ~0x10uLL;
        break;
      case 8:
        v2 &= ~0x20uLL;
        break;
      case 9:
        v2 &= ~0x40uLL;
        break;
      case 10:
        v2 &= ~0x80uLL;
        break;
      default:
        break;
    }
    *uint64_t result = v2;
  }
  return result;
}

id INCallRecordTypeOptionsGetNames(uint64_t a1)
{
  if (a1)
  {
    char v1 = a1;
    id v2 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
    id v3 = v2;
    if (v1)
    {
      [v2 addObject:@"outgoing"];
      if ((v1 & 2) == 0)
      {
LABEL_4:
        if ((v1 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_18;
      }
    }
    else if ((v1 & 2) == 0)
    {
      goto LABEL_4;
    }
    [v3 addObject:@"missed"];
    if ((v1 & 4) == 0)
    {
LABEL_5:
      if ((v1 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_19;
    }
LABEL_18:
    [v3 addObject:@"received"];
    if ((v1 & 8) == 0)
    {
LABEL_6:
      if ((v1 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_20;
    }
LABEL_19:
    [v3 addObject:@"latest"];
    if ((v1 & 0x10) == 0)
    {
LABEL_7:
      if ((v1 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_21;
    }
LABEL_20:
    [v3 addObject:@"voicemail"];
    if ((v1 & 0x20) == 0)
    {
LABEL_8:
      if ((v1 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_22;
    }
LABEL_21:
    [v3 addObject:@"ringing"];
    if ((v1 & 0x40) == 0)
    {
LABEL_9:
      if ((v1 & 0x80) == 0)
      {
LABEL_11:
        id v4 = (void *)[v3 copy];

        goto LABEL_13;
      }
LABEL_10:
      [v3 addObject:@"onHold"];
      goto LABEL_11;
    }
LABEL_22:
    [v3 addObject:@"inProgress"];
    if ((v1 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  id v4 = (void *)MEMORY[0x1E4F1CBF0];
LABEL_13:

  return v4;
}

uint64_t INCallRecordTypeOptionsWithNames(void *a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id obj = a1;
  uint64_t v1 = [obj countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = 0;
    uint64_t v4 = *(void *)v10;
    do
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v10 != v4) {
          objc_enumerationMutation(obj);
        }
        id v6 = *(void **)(*((void *)&v9 + 1) + 8 * i);
        v3 |= [v6 isEqualToString:@"outgoing"];
        if ([v6 isEqualToString:@"missed"]) {
          v3 |= 2uLL;
        }
        if ([v6 isEqualToString:@"received"]) {
          v3 |= 4uLL;
        }
        if ([v6 isEqualToString:@"latest"]) {
          v3 |= 8uLL;
        }
        if ([v6 isEqualToString:@"voicemail"]) {
          v3 |= 0x10uLL;
        }
        if ([v6 isEqualToString:@"ringing"]) {
          v3 |= 0x20uLL;
        }
        if ([v6 isEqualToString:@"inProgress"]) {
          v3 |= 0x40uLL;
        }
        if ([v6 isEqualToString:@"onHold"]) {
          v3 |= 0x80uLL;
        }
      }
      uint64_t v2 = [obj countByEnumeratingWithState:&v9 objects:v13 count:16];
    }
    while (v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INCallRecordTypeOptionsGetLocalizedNames(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v4 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
    if (a1)
    {
      char v8 = INLocalizedStringWithLocalizer(@"outgoing", @"outgoing", v3);
      [v4 addObject:v8];

      if ((a1 & 2) == 0)
      {
LABEL_4:
        if ((a1 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_18;
      }
    }
    else if ((a1 & 2) == 0)
    {
      goto LABEL_4;
    }
    long long v9 = INLocalizedStringWithLocalizer(@"missed", @"missed", v3);
    [v4 addObject:v9];

    if ((a1 & 4) == 0)
    {
LABEL_5:
      if ((a1 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_19;
    }
LABEL_18:
    long long v10 = INLocalizedStringWithLocalizer(@"received", @"received", v3);
    [v4 addObject:v10];

    if ((a1 & 8) == 0)
    {
LABEL_6:
      if ((a1 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_20;
    }
LABEL_19:
    long long v11 = INLocalizedStringWithLocalizer(@"latest", @"latest", v3);
    [v4 addObject:v11];

    if ((a1 & 0x10) == 0)
    {
LABEL_7:
      if ((a1 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_21;
    }
LABEL_20:
    long long v12 = INLocalizedStringWithLocalizer(@"voicemail", @"voicemail", v3);
    [v4 addObject:v12];

    if ((a1 & 0x20) == 0)
    {
LABEL_8:
      if ((a1 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_22;
    }
LABEL_21:
    char v13 = INLocalizedStringWithLocalizer(@"ringing", @"ringing", v3);
    [v4 addObject:v13];

    if ((a1 & 0x40) == 0)
    {
LABEL_9:
      if ((a1 & 0x80) == 0)
      {
LABEL_11:
        id v6 = (void *)[v4 copy];

        goto LABEL_13;
      }
LABEL_10:
      id v5 = INLocalizedStringWithLocalizer(@"on hold", @"on hold", v3);
      [v4 addObject:v5];

      goto LABEL_11;
    }
LABEL_22:
    uint64_t v14 = INLocalizedStringWithLocalizer(@"in progress", @"in progress", v3);
    [v4 addObject:v14];

    if ((a1 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  id v6 = (void *)MEMORY[0x1E4F1CBF0];
LABEL_13:

  return v6;
}

uint64_t _INPBSearchForPhotosIntentResponseReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 2)
      {
        uint64_t v25 = objc_alloc_init(_INPBLocation);
        if (!PBReaderPlaceMark() || (_INPBLocationReadFrom(v25, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLocationCreated:", v25, 0, 0);
      }
      else
      {
        if (v17 != 4)
        {
          if (v17 == 7)
          {
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            while (1)
            {
              uint64_t v21 = *v3;
              unint64_t v22 = *(void *)(a2 + v21);
              if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
              *(void *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0) {
                goto LABEL_36;
              }
              v18 += 7;
              BOOL v14 = v19++ >= 9;
              if (v14)
              {
                uint64_t v24 = 0;
                goto LABEL_39;
              }
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_36:
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v24 = 0;
            }
            else {
              uint64_t v24 = v20;
            }
LABEL_39:
            [a1 setSearchResultsCount:v24];
          }
          else
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
          }
          continue;
        }
        PBReaderReadString();
        uint64_t v25 = (_INPBLocation *)objc_claimAutoreleasedReturnValue();
        [a1 setAlbumName:v25];
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _INPBPayloadConfirmationReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((int)(v10 >> 3) <= 999)
      {
        if (v17 == 1)
        {
          long long v46 = objc_alloc_init(_INPBSelectionItem);
          if (!PBReaderPlaceMark() || !_INPBSelectionItemReadFrom(v46, a2))
          {

            return 0;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "setConfirmationItem:", v46, 0, 0);
        }
        else
        {
          if (v17 != 2)
          {
LABEL_55:
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
            continue;
          }
          char v25 = 0;
          unsigned int v26 = 0;
          uint64_t v27 = 0;
          while (1)
          {
            uint64_t v28 = *v3;
            unint64_t v29 = *(void *)(a2 + v28);
            if (v29 == -1 || v29 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
            *(void *)(a2 + v2_Block_object_dispose(&a9, 8) = v29 + 1;
            v27 |= (unint64_t)(v30 & 0x7F) << v25;
            if ((v30 & 0x80) == 0) {
              goto LABEL_63;
            }
            v25 += 7;
            BOOL v14 = v26++ >= 9;
            if (v14)
            {
              uint64_t v31 = 0;
              goto LABEL_66;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_63:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v31 = 0;
          }
          else {
            uint64_t v31 = v27;
          }
LABEL_66:
          [a1 setReason:v31];
        }
      }
      else
      {
        switch(v17)
        {
          case 0x654:
            char v32 = 0;
            unsigned int v33 = 0;
            uint64_t v34 = 0;
            while (1)
            {
              uint64_t v35 = *v3;
              unint64_t v36 = *(void *)(a2 + v35);
              if (v36 == -1 || v36 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
              *(void *)(a2 + v35) = v36 + 1;
              v34 |= (unint64_t)(v37 & 0x7F) << v32;
              if ((v37 & 0x80) == 0) {
                goto LABEL_68;
              }
              v32 += 7;
              BOOL v14 = v33++ >= 9;
              if (v14)
              {
                uint64_t v38 = 0;
                goto LABEL_71;
              }
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_68:
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v38 = 0;
            }
            else {
              uint64_t v38 = v34;
            }
LABEL_71:
            [a1 setSendAnnouncementIntentAnnouncementConfirmationReason:v38];
            break;
          case 0x514:
            char v39 = 0;
            unsigned int v40 = 0;
            uint64_t v41 = 0;
            while (1)
            {
              uint64_t v42 = *v3;
              unint64_t v43 = *(void *)(a2 + v42);
              if (v43 == -1 || v43 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v44 = *(unsigned char *)(*(void *)(a2 + *v7) + v43);
              *(void *)(a2 + v42) = v43 + 1;
              v41 |= (unint64_t)(v44 & 0x7F) << v39;
              if ((v44 & 0x80) == 0) {
                goto LABEL_73;
              }
              v39 += 7;
              BOOL v14 = v40++ >= 9;
              if (v14)
              {
                uint64_t v45 = 0;
                goto LABEL_76;
              }
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_73:
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v45 = 0;
            }
            else {
              uint64_t v45 = v41;
            }
LABEL_76:
            [a1 setStartCallIntentContactsConfirmationReason:v45];
            break;
          case 0x3E8:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            while (1)
            {
              uint64_t v21 = *v3;
              unint64_t v22 = *(void *)(a2 + v21);
              if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
              *(void *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0) {
                goto LABEL_58;
              }
              v18 += 7;
              BOOL v14 = v19++ >= 9;
              if (v14)
              {
                uint64_t v24 = 0;
                goto LABEL_61;
              }
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_58:
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v24 = 0;
            }
            else {
              uint64_t v24 = v20;
            }
LABEL_61:
            [a1 setAddTasksIntentTargetTaskListConfirmationReason:v24];
            break;
          default:
            goto LABEL_55;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

id INIntentSlotValueTransformFromIntent(void *a1)
{
  id v1 = a1;
  uint64_t v2 = v1;
  if (!v1) {
    goto LABEL_5;
  }
  int v3 = [v1 encodingFormat];
  if (v3 != 2)
  {
    if (v3 == 1)
    {
      id v4 = [v2 encodedIntent];
      id v5 = [v4 dataUsingEncoding:4];
      id v6 = INIntentCreate(0, v5);
      goto LABEL_7;
    }
LABEL_5:
    id v6 = 0;
    goto LABEL_9;
  }
  id v4 = [v2 intentTypeName];
  id v7 = objc_alloc(MEMORY[0x1E4F1C9B8]);
  id v5 = [v2 encodedIntent];
  char v8 = (void *)[v7 initWithBase64EncodedString:v5 options:0];
  id v6 = INIntentCreate(v4, v8);

LABEL_7:
  unsigned int v9 = [v6 launchId];

  if (!v9)
  {
    unint64_t v10 = [v2 appIdentifier];
    uint64_t v11 = [v10 bundleIdentifier];
    [v6 _setLaunchId:v11];
  }
LABEL_9:

  return v6;
}

_INPBIntent *INIntentSlotValueTransformToIntent(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    uint64_t v2 = objc_alloc_init(_INPBIntent);
    int v3 = objc_alloc_init(_INPBAppIdentifier);
    id v4 = [v1 launchId];
    [(_INPBAppIdentifier *)v3 setBundleIdentifier:v4];

    [(_INPBIntent *)v2 setAppIdentifier:v3];
    [(_INPBIntent *)v2 setEncodingFormat:1];
    id v5 = [v1 typeName];
    [(_INPBIntent *)v2 setIntentTypeName:v5];

    id v6 = [v1 _JSONDictionaryRepresentation];
    id v7 = objc_msgSend(v6, "if_JSONStringRepresentation");
    [(_INPBIntent *)v2 setEncodedIntent:v7];

    char v8 = [v1 _codableDescription];
    unsigned int v9 = [v8 schema];
    unint64_t v10 = +[INStringLocalizer siriLocalizer];
    uint64_t v11 = [v9 dictionaryRepresentationForIntent:v1 localizer:v10];

    unint64_t v12 = objc_msgSend(v11, "if_JSONStringRepresentation");
    [(_INPBIntent *)v2 setEncodedIntentDefinition:v12];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INIntentSlotValueTransformFromIntents(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        char v8 = INIntentSlotValueTransformFromIntent(*(void **)(*((void *)&v11 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  unsigned int v9 = (void *)[v2 copy];

  return v9;
}

id INIntentSlotValueTransformToIntents(void *a1)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v11;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v11 != v6) {
          objc_enumerationMutation(v3);
        }
        char v8 = INIntentSlotValueTransformToIntent(*(void **)(*((void *)&v10 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v10);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v5);
  }

  return v2;
}

void sub_18CCDD1B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__49870(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__49871(uint64_t a1)
{
}

uint64_t _INPBDeleteFilePermanentlyIntentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = objc_alloc_init(_INPBIntentMetadata);
        if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntentMetadata:", v17, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

id INIntentSlotValueTransformFromImageValue(void *a1)
{
  id v1 = a1;
  uint64_t v2 = v1;
  if (v1)
  {
    id v3 = [v1 uri];
    switch([v2 type])
    {
      case 0u:
        id v6 = [[INImage alloc] _initWithIdentifier:v3];
        break;
      case 1u:
        uint64_t v4 = [v2 data];
        uint64_t v5 = +[INImage imageWithImageData:v4];
        goto LABEL_8;
      case 2u:
      case 3u:
        uint64_t v4 = [MEMORY[0x1E4F1CB10] URLWithString:v3];
        uint64_t v5 = +[INImage imageWithURL:v4];
LABEL_8:
        id v6 = (id)v5;
        goto LABEL_10;
      case 4u:
        id v6 = [(INImage *)[INRemoteImageProxy alloc] _initWithIdentifier:v3];
        [v6 _setProxyIdentifier:v3];
        uint64_t v4 = [v2 proxyServiceIdentifier];
        [v6 _setStorageServiceIdentifier:v4];
LABEL_10:

        break;
      default:
        id v6 = 0;
        break;
    }
    [v2 width];
    double v8 = v7;
    [v2 height];
    objc_msgSend(v6, "_setImageSize:", v8, v9);
    unsigned int v10 = [v2 renderingMode];
    if (v10 <= 2) {
      [v6 _setRenderingMode:v10];
    }
  }
  else
  {
    id v6 = 0;
  }

  return v6;
}

_INPBImageValue *INIntentSlotValueTransformToImageValue(void *a1)
{
  id v1 = a1;
  if (!v1)
  {
    uint64_t v2 = 0;
    goto LABEL_20;
  }
  uint64_t v2 = objc_alloc_init(_INPBImageValue);
  [v1 _imageSize];
  if (v3 == 0.0 && ([v1 _imageSize], v4 == 0.0))
  {
    uint64_t v5 = +[INCache sharedCache];
    id v6 = [v1 _identifier];
    double v7 = [v5 cacheableObjectForIdentifier:v6];

    if (v7)
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        id v8 = v7;
        [v8 _imageSize];
        -[_INPBImageValue setWidth:](v2, "setWidth:");
        [v8 _imageSize];
        double v10 = v9;

        [(_INPBImageValue *)v2 setHeight:v10];
      }
    }
  }
  else
  {
    [v1 _imageSize];
    -[_INPBImageValue setWidth:](v2, "setWidth:");
    [v1 _imageSize];
    [(_INPBImageValue *)v2 setHeight:v11];
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    unint64_t v12 = [v1 _imageData];
    [(_INPBImageValue *)v2 setData:v12];
    uint64_t v13 = 1;
LABEL_17:

    goto LABEL_18;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    unint64_t v12 = [v1 _URLRepresentation];
    long long v14 = [v12 absoluteString];
    [(_INPBImageValue *)v2 setUri:v14];

    uint64_t v13 = 3;
    goto LABEL_17;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass() & 1) != 0 || (objc_opt_class(), (objc_opt_isKindOfClass()))
  {
    unint64_t v12 = [v1 _URLRepresentation];
    int v15 = [v12 absoluteString];
    [(_INPBImageValue *)v2 setUri:v15];

    uint64_t v13 = 2;
    goto LABEL_17;
  }
  uint64_t v13 = 0;
LABEL_18:
  [(_INPBImageValue *)v2 setType:v13];
  unint64_t v16 = [v1 _renderingMode];
  if (v16 <= 2) {
    [(_INPBImageValue *)v2 setRenderingMode:v16];
  }
LABEL_20:

  return v2;
}

id INIntentSlotValueTransformFromImageValues(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        id v8 = INIntentSlotValueTransformFromImageValue(*(void **)(*((void *)&v11 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  double v9 = (void *)[v2 copy];

  return v9;
}

id INIntentSlotValueTransformToImageValues(void *a1)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v11;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v11 != v6) {
          objc_enumerationMutation(v3);
        }
        id v8 = INIntentSlotValueTransformToImageValue(*(void **)(*((void *)&v10 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v10);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v5);
  }

  return v2;
}

id INIntentSlotValueRedactedImageValueFromImageValue(void *a1, uint64_t a2)
{
  id v3 = a1;
  uint64_t v4 = [v3 valueMetadata];
  uint64_t v5 = INPrivacyEntitlementOptionsForValueMetadata(v4);

  if ((v5 & a2) != 0) {
    id v6 = 0;
  }
  else {
    id v6 = v3;
  }

  return v6;
}

uint64_t _INPBBalanceAmountValueReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  double v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v17 = objc_alloc_init(_INPBValueMetadata);
        if (!PBReaderPlaceMark() || (_INPBValueMetadataReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_45;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setValueMetadata:", v17, 0, 0);
        goto LABEL_37;
      case 2u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_42;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v21;
        }
LABEL_42:
        [a1 setType:v25];
        goto LABEL_43;
      case 3u:
        unint64_t v17 = objc_alloc_init(_INPBCurrencyAmountValue);
        if (!PBReaderPlaceMark() || !_INPBCurrencyAmountValueReadFrom(v17, a2)) {
          goto LABEL_45;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCurrencyAmount:", v17, 0, 0);
        goto LABEL_37;
      case 4u:
        unint64_t v17 = objc_alloc_init(_INPBDecimalNumberValue);
        if PBReaderPlaceMark() && (_INPBDecimalNumberValueReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setCustomAmount:", v17, 0, 0);
LABEL_37:

LABEL_43:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_45:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_43;
    }
  }
}

__CFString *INStartVideoCallIntentResponseCodeGetName(unint64_t a1)
{
  if (a1 > 8) {
    return 0;
  }
  else {
    return off_1E5519748[a1];
  }
}

uint64_t _INPBBoolValueReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    double v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v23 = objc_alloc_init(_INPBValueMetadata);
        if (!PBReaderPlaceMark() || (_INPBValueMetadataReadFrom(v23, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setValueMetadata:", v23, 0, 0);
      }
      else if ((v10 >> 3) == 2)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_33;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_35;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_35:
        [a1 setValue:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _INPBCurrencyAmountReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    double v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(_INPBCurrencyAmountValue);
        if (!PBReaderPlaceMark() || !_INPBCurrencyAmountValueReadFrom(v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addValue:", v17, 0, 0);
        }
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _INPBCancelWorkoutIntentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    double v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(_INPBIntentMetadata);
        if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntentMetadata:", v17, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v17 = objc_alloc_init(_INPBDataString);
    if (!PBReaderPlaceMark() || !_INPBDataStringReadFrom(v17, a2))
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setWorkoutName:", v17, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _INPBDoubleValueReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    double v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          uint64_t v16 = *v5;
          int v17 = *(unsigned __int8 *)(a2 + v16);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      uint64_t v16 = *v5;
      int v17 = *(unsigned __int8 *)(a2 + v16);
      if (*(unsigned char *)(a2 + v16)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v17 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v22 = objc_alloc_init(_INPBValueMetadata);
        if (!PBReaderPlaceMark() || (_INPBValueMetadataReadFrom(v22, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setValueMetadata:", v22, 0, 0);
      }
      else if ((v10 >> 3) == 2)
      {
        uint64_t v19 = *v3;
        unint64_t v20 = *(void *)(a2 + v19);
        if (v20 <= 0xFFFFFFFFFFFFFFF7 && v20 + 8 <= *(void *)(a2 + *v4))
        {
          double v21 = *(double *)(*(void *)(a2 + *v7) + v20);
          *(void *)(a2 + v19) = v20 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          double v21 = 0.0;
        }
        [a1 setValue:v21];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _INPBSetCarLockStatusIntentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    double v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        char v24 = objc_alloc_init(_INPBIntentMetadata);
        if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v24, a2) & 1) == 0)
        {
LABEL_43:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntentMetadata:", v24, 0, 0);
      }
      else
      {
        if (v17 != 3)
        {
          if (v17 == 2)
          {
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            while (1)
            {
              uint64_t v21 = *v3;
              unint64_t v22 = *(void *)(a2 + v21);
              if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
              *(void *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0) {
                goto LABEL_38;
              }
              v18 += 7;
              BOOL v14 = v19++ >= 9;
              if (v14)
              {
                uint64_t v20 = 0;
                goto LABEL_40;
              }
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_38:
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v20 = 0;
            }
LABEL_40:
            [a1 setLocked:v20 != 0];
          }
          else
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
          }
          continue;
        }
        char v24 = objc_alloc_init(_INPBDataString);
        if (!PBReaderPlaceMark() || !_INPBDataStringReadFrom(v24, a2)) {
          goto LABEL_43;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCarName:", v24, 0, 0);
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _INPBEventParticipantReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    double v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          unint64_t v17 = objc_alloc_init(_INPBContact);
          if PBReaderPlaceMark() && (_INPBContactReadFrom(v17, a2))
          {
            PBReaderRecallMark();
            objc_msgSend(a1, "setPerson:", v17, 0, 0);

            continue;
          }

          return 0;
        case 2u:
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          while (1)
          {
            uint64_t v22 = *v3;
            unint64_t v23 = *(void *)(a2 + v22);
            if (v23 == -1 || v23 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if ((v24 & 0x80) == 0) {
              goto LABEL_46;
            }
            v19 += 7;
            BOOL v14 = v20++ >= 9;
            if (v14)
            {
              uint64_t v25 = 0;
              goto LABEL_49;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_46:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v25 = 0;
          }
          else {
            uint64_t v25 = v21;
          }
LABEL_49:
          [a1 setStatus:v25];
          continue;
        case 3u:
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v28 = 0;
          while (2)
          {
            uint64_t v29 = *v3;
            unint64_t v30 = *(void *)(a2 + v29);
            if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
              *(void *)(a2 + v29) = v30 + 1;
              v28 |= (unint64_t)(v31 & 0x7F) << v26;
              if (v31 < 0)
              {
                v26 += 7;
                BOOL v14 = v27++ >= 9;
                if (v14)
                {
                  uint64_t v28 = 0;
                  goto LABEL_53;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v28 = 0;
          }
LABEL_53:
          [a1 setIsUser:v28 != 0];
          continue;
        case 4u:
          char v32 = 0;
          unsigned int v33 = 0;
          uint64_t v34 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v35 = *v3;
        unint64_t v36 = *(void *)(a2 + v35);
        if (v36 == -1 || v36 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
        *(void *)(a2 + v35) = v36 + 1;
        v34 |= (unint64_t)(v37 & 0x7F) << v32;
        if ((v37 & 0x80) == 0) {
          goto LABEL_55;
        }
        v32 += 7;
        BOOL v14 = v33++ >= 9;
        if (v14)
        {
          uint64_t v34 = 0;
          goto LABEL_57;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_55:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v34 = 0;
      }
LABEL_57:
      [a1 setIsEventOrganizer:v34 != 0];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _INPBPlayMediaIntentResponseReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    double v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = objc_alloc_init(_INPBDictionary);
        if (!PBReaderPlaceMark() || (_INPBDictionaryReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setNowPlayingInfo:", v17, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

__CFString *INCreateNoteIntentResponseCodeGetName(unint64_t a1)
{
  if (a1 > 5) {
    return 0;
  }
  else {
    return off_1E55197D0[a1];
  }
}

id INIntentSlotValueTransformFromSpeed(void *a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v1 = objc_msgSend(a1, "values", 0);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v10;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v10 != v4) {
          objc_enumerationMutation(v1);
        }
        uint64_t v6 = INIntentSlotValueTransformFromSpeedValue(*(void **)(*((void *)&v9 + 1) + 8 * i));
        if (v6)
        {
          double v7 = (void *)v6;
          goto LABEL_11;
        }
      }
      uint64_t v3 = [v1 countByEnumeratingWithState:&v9 objects:v13 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
  double v7 = 0;
LABEL_11:

  return v7;
}

id INIntentSlotValueTransformFromSpeedValue(void *a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = v1;
  if (v1)
  {
    uint64_t v3 = [v1 valueMetadata];
    INPrivacyEntitlementValidateValueMetadata(v3);

    if ([v2 hasUnit])
    {
      switch([v2 unit])
      {
        case 1u:
          uint64_t v4 = [MEMORY[0x1E4F29208] metersPerSecond];
          break;
        case 2u:
          uint64_t v4 = [MEMORY[0x1E4F29208] kilometersPerHour];
          break;
        case 3u:
          uint64_t v4 = [MEMORY[0x1E4F29208] milesPerHour];
          break;
        case 4u:
          uint64_t v4 = [MEMORY[0x1E4F29208] knots];
          break;
        default:
          goto LABEL_10;
      }
      uint64_t v5 = (void *)v4;
      if (v4)
      {
        id v6 = objc_alloc(MEMORY[0x1E4F28E28]);
        [v2 magnitude];
        double v7 = objc_msgSend(v6, "initWithDoubleValue:unit:", v5);

        goto LABEL_13;
      }
    }
LABEL_10:
    char v8 = INSiriLogContextIntents;
    if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_ERROR))
    {
      int v10 = 136315138;
      long long v11 = "INIntentSlotValueTransformFromSpeedValue";
      _os_log_error_impl(&dword_18CB2F000, v8, OS_LOG_TYPE_ERROR, "%s _INPBSpeedValue must contain a unit. Otherwise ambiguous magnitude for NSMeasurement", (uint8_t *)&v10, 0xCu);
    }
  }
  double v7 = 0;
LABEL_13:

  return v7;
}

_INPBSpeed *INIntentSlotValueTransformToSpeed(void *a1)
{
  id v1 = INIntentSlotValueTransformToSpeedValue(a1);
  if (v1)
  {
    uint64_t v2 = objc_alloc_init(_INPBSpeed);
    [(_INPBSpeed *)v2 addValue:v1];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

_INPBSpeedValue *INIntentSlotValueTransformToSpeedValue(void *a1)
{
  if (!a1)
  {
    uint64_t v2 = 0;
    goto LABEL_13;
  }
  id v1 = a1;
  uint64_t v2 = objc_alloc_init(_INPBSpeedValue);
  uint64_t v3 = [v1 unit];
  [v1 doubleValue];
  double v5 = v4;

  [(_INPBSpeedValue *)v2 setMagnitude:v5];
  id v6 = [MEMORY[0x1E4F29208] kilometersPerHour];
  char v7 = [v3 isEqual:v6];

  if (v7)
  {
    uint64_t v8 = 2;
LABEL_11:
    [(_INPBSpeedValue *)v2 setUnit:v8];
    goto LABEL_12;
  }
  long long v9 = [MEMORY[0x1E4F29208] knots];
  char v10 = [v3 isEqual:v9];

  if (v10)
  {
    uint64_t v8 = 4;
    goto LABEL_11;
  }
  long long v11 = [MEMORY[0x1E4F29208] metersPerSecond];
  char v12 = [v3 isEqual:v11];

  if (v12)
  {
    uint64_t v8 = 1;
    goto LABEL_11;
  }
  char v13 = [MEMORY[0x1E4F29208] milesPerHour];
  int v14 = [v3 isEqual:v13];

  if (v14)
  {
    uint64_t v8 = 3;
    goto LABEL_11;
  }
LABEL_12:

LABEL_13:

  return v2;
}

id INIntentSlotValueTransformFromSpeedValues(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = INIntentSlotValueTransformFromSpeedValue(*(void **)(*((void *)&v11 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  long long v9 = (void *)[v2 copy];

  return v9;
}

id INIntentSlotValueTransformFromSpeeds(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = INIntentSlotValueTransformFromSpeed(*(void **)(*((void *)&v11 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  long long v9 = (void *)[v2 copy];

  return v9;
}

id INIntentSlotValueTransformToSpeedValues(void *a1)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v11;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v11 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = INIntentSlotValueTransformToSpeedValue(*(void **)(*((void *)&v10 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v10);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v5);
  }

  return v2;
}

id INIntentSlotValueTransformToSpeeds(void *a1)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v11;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v11 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = INIntentSlotValueTransformToSpeed(*(void **)(*((void *)&v10 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v10);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v5);
  }

  return v2;
}

id INIntentSlotValueRedactedValueFromSpeedValue(void *a1, uint64_t a2)
{
  id v3 = a1;
  uint64_t v4 = [v3 valueMetadata];
  uint64_t v5 = INPrivacyEntitlementOptionsForValueMetadata(v4);

  if ((v5 & a2) != 0) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = (void *)[v3 copy];
  }

  return v6;
}

_INPBSpeed *INIntentSlotValueRedactedSpeedFromSpeed(void *a1, uint64_t a2, void *a3)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a3;
  if (v5)
  {
    char v7 = objc_alloc_init(_INPBSpeed);
    long long v15 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
    long long v18 = 0u;
    uint64_t v8 = objc_msgSend(v5, "values", 0);
    uint64_t v9 = [v8 countByEnumeratingWithState:&v15 objects:v19 count:16];
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = *(void *)v16;
      do
      {
        for (uint64_t i = 0; i != v10; ++i)
        {
          if (*(void *)v16 != v11) {
            objc_enumerationMutation(v8);
          }
          long long v13 = INIntentSlotValueRedactedValueFromSpeedValue(*(void **)(*((void *)&v15 + 1) + 8 * i), a2);
          if (v13) {
            [(_INPBSpeed *)v7 addValue:v13];
          }
        }
        uint64_t v10 = [v8 countByEnumeratingWithState:&v15 objects:v19 count:16];
      }
      while (v10);
    }
  }
  else
  {
    char v7 = 0;
  }

  return v7;
}

id INIntentSlotValueRedactedSpeedsFromSpeeds(void *a1, uint64_t a2, void *a3)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a3;
  char v7 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v5, "count"));
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v8 = v5;
  uint64_t v9 = [v8 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)v17;
    do
    {
      for (uint64_t i = 0; i != v10; ++i)
      {
        if (*(void *)v17 != v11) {
          objc_enumerationMutation(v8);
        }
        long long v13 = INIntentSlotValueRedactedSpeedFromSpeed(*(void **)(*((void *)&v16 + 1) + 8 * i), a2, v6);
        objc_msgSend(v7, "addObject:", v13, (void)v16);
      }
      uint64_t v10 = [v8 countByEnumeratingWithState:&v16 objects:v20 count:16];
    }
    while (v10);
  }

  long long v14 = (void *)[v7 copy];

  return v14;
}

BOOL _INPBScanVisualCodeIntentResponseReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  id v6 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
      return v7 == 0;
    }
    if (*(unsigned char *)(a2 + *v5))
    {
      int v7 = 1;
      return v7 == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    uint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v6) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        LOBYTE(v10) = 0;
        int v7 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      LOBYTE(v10) = 0;
    }
LABEL_14:
    if (v7) {
      BOOL v15 = 1;
    }
    else {
      BOOL v15 = (v10 & 7) == 4;
    }
    if (v15) {
      return v7 == 0;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      return 0;
    }
  }
}

__CFString *INCodableStringAttributeMetadataCapitalizationAsString(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2) {
    return @"None";
  }
  else {
    return off_1E5519800[a1 - 1];
  }
}

id _INExtensionAuxiliaryVendingXPCInterface()
{
  uint64_t v0 = [MEMORY[0x1E4F29280] interfaceWithProtocol:&unk_1EDBDAA88];
  id v1 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v2 = objc_opt_class();
  id v3 = objc_msgSend(v1, "setWithObjects:", v2, objc_opt_class(), 0);
  [v0 setClasses:v3 forSelector:sel_confirmIntent_withCompletion_ argumentIndex:2 ofReply:1];

  uint64_t v4 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v5 = objc_opt_class();
  id v6 = objc_msgSend(v4, "setWithObjects:", v5, objc_opt_class(), 0);
  [v0 setClasses:v6 forSelector:sel_handleIntent_withCompletion_ argumentIndex:2 ofReply:1];

  int v7 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v8 = objc_opt_class();
  uint64_t v9 = objc_opt_class();
  uint64_t v10 = objc_msgSend(v7, "setWithObjects:", v8, v9, objc_opt_class(), 0);
  [v0 setClasses:v10 forSelector:sel_resolveIntentSlots_forIntent_completionBlock_ argumentIndex:2 ofReply:1];

  uint64_t v11 = [MEMORY[0x1E4F29280] interfaceWithProtocol:&unk_1EDC31508];
  unint64_t v12 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v13 = objc_opt_class();
  long long v14 = objc_msgSend(v12, "setWithObjects:", v13, objc_opt_class(), 0);
  [v11 setClasses:v14 forSelector:sel_intentResponseDidUpdate_withSerializedCacheItems_ argumentIndex:1 ofReply:0];

  [v0 setInterface:v11 forSelector:sel_startSendingUpdatesForIntent_toObserver_ argumentIndex:1 ofReply:0];

  return v0;
}

__CFString *INSetCarLockStatusIntentResponseCodeGetName(unint64_t a1)
{
  if (a1 > 5) {
    return 0;
  }
  else {
    return off_1E5519818[a1];
  }
}

id INIntentSlotValueTransformFromMass(void *a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v1 = objc_msgSend(a1, "values", 0);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v10;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v10 != v4) {
          objc_enumerationMutation(v1);
        }
        uint64_t v6 = INIntentSlotValueTransformFromMassValue(*(void **)(*((void *)&v9 + 1) + 8 * i));
        if (v6)
        {
          int v7 = (void *)v6;
          goto LABEL_11;
        }
      }
      uint64_t v3 = [v1 countByEnumeratingWithState:&v9 objects:v13 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
  int v7 = 0;
LABEL_11:

  return v7;
}

id INIntentSlotValueTransformFromMassValue(void *a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = v1;
  if (v1)
  {
    uint64_t v3 = [v1 valueMetadata];
    INPrivacyEntitlementValidateValueMetadata(v3);

    if ([v2 hasUnit])
    {
      switch([v2 unit])
      {
        case 1u:
          uint64_t v4 = [MEMORY[0x1E4F291E8] kilograms];
          break;
        case 2u:
          uint64_t v4 = [MEMORY[0x1E4F291E8] grams];
          break;
        case 3u:
          uint64_t v4 = [MEMORY[0x1E4F291E8] decigrams];
          break;
        case 4u:
          uint64_t v4 = [MEMORY[0x1E4F291E8] centigrams];
          break;
        case 5u:
          uint64_t v4 = [MEMORY[0x1E4F291E8] milligrams];
          break;
        case 6u:
          uint64_t v4 = [MEMORY[0x1E4F291E8] micrograms];
          break;
        case 7u:
          uint64_t v4 = [MEMORY[0x1E4F291E8] nanograms];
          break;
        case 8u:
          uint64_t v4 = [MEMORY[0x1E4F291E8] picograms];
          break;
        case 9u:
          uint64_t v4 = [MEMORY[0x1E4F291E8] ounces];
          break;
        case 0xAu:
          uint64_t v4 = [MEMORY[0x1E4F291E8] poundsMass];
          break;
        case 0xBu:
          uint64_t v4 = [MEMORY[0x1E4F291E8] stones];
          break;
        case 0xCu:
          uint64_t v4 = [MEMORY[0x1E4F291E8] metricTons];
          break;
        case 0xDu:
          uint64_t v4 = [MEMORY[0x1E4F291E8] shortTons];
          break;
        case 0xEu:
          uint64_t v4 = [MEMORY[0x1E4F291E8] carats];
          break;
        case 0xFu:
          uint64_t v4 = [MEMORY[0x1E4F291E8] ouncesTroy];
          break;
        case 0x10u:
          uint64_t v4 = [MEMORY[0x1E4F291E8] slugs];
          break;
        default:
          goto LABEL_22;
      }
      uint64_t v5 = (void *)v4;
      if (v4)
      {
        id v6 = objc_alloc(MEMORY[0x1E4F28E28]);
        [v2 magnitude];
        int v7 = objc_msgSend(v6, "initWithDoubleValue:unit:", v5);

        goto LABEL_25;
      }
    }
LABEL_22:
    uint64_t v8 = INSiriLogContextIntents;
    if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_ERROR))
    {
      int v10 = 136315138;
      long long v11 = "INIntentSlotValueTransformFromMassValue";
      _os_log_error_impl(&dword_18CB2F000, v8, OS_LOG_TYPE_ERROR, "%s _INPBMassValue must contain a unit. Otherwise ambiguous magnitude for NSMeasurement", (uint8_t *)&v10, 0xCu);
    }
  }
  int v7 = 0;
LABEL_25:

  return v7;
}

_INPBMass *INIntentSlotValueTransformToMass(void *a1)
{
  id v1 = INIntentSlotValueTransformToMassValue(a1);
  if (v1)
  {
    uint64_t v2 = objc_alloc_init(_INPBMass);
    [(_INPBMass *)v2 addValue:v1];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

_INPBMassValue *INIntentSlotValueTransformToMassValue(void *a1)
{
  if (!a1)
  {
    uint64_t v2 = 0;
    goto LABEL_37;
  }
  id v1 = a1;
  uint64_t v2 = objc_alloc_init(_INPBMassValue);
  uint64_t v3 = [v1 unit];
  [v1 doubleValue];
  double v5 = v4;

  [(_INPBMassValue *)v2 setMagnitude:v5];
  id v6 = [MEMORY[0x1E4F291E8] carats];
  char v7 = [v3 isEqual:v6];

  if (v7)
  {
    uint64_t v8 = 14;
LABEL_35:
    [(_INPBMassValue *)v2 setUnit:v8];
    goto LABEL_36;
  }
  long long v9 = [MEMORY[0x1E4F291E8] centigrams];
  char v10 = [v3 isEqual:v9];

  if (v10)
  {
    uint64_t v8 = 4;
    goto LABEL_35;
  }
  long long v11 = [MEMORY[0x1E4F291E8] decigrams];
  char v12 = [v3 isEqual:v11];

  if (v12)
  {
    uint64_t v8 = 3;
    goto LABEL_35;
  }
  uint64_t v13 = [MEMORY[0x1E4F291E8] grams];
  char v14 = [v3 isEqual:v13];

  if (v14)
  {
    uint64_t v8 = 2;
    goto LABEL_35;
  }
  BOOL v15 = [MEMORY[0x1E4F291E8] kilograms];
  char v16 = [v3 isEqual:v15];

  if (v16)
  {
    uint64_t v8 = 1;
    goto LABEL_35;
  }
  long long v17 = [MEMORY[0x1E4F291E8] metricTons];
  char v18 = [v3 isEqual:v17];

  if (v18)
  {
    uint64_t v8 = 12;
    goto LABEL_35;
  }
  long long v19 = [MEMORY[0x1E4F291E8] micrograms];
  char v20 = [v3 isEqual:v19];

  if (v20)
  {
    uint64_t v8 = 6;
    goto LABEL_35;
  }
  uint64_t v21 = [MEMORY[0x1E4F291E8] milligrams];
  char v22 = [v3 isEqual:v21];

  if (v22)
  {
    uint64_t v8 = 5;
    goto LABEL_35;
  }
  unint64_t v23 = [MEMORY[0x1E4F291E8] nanograms];
  char v24 = [v3 isEqual:v23];

  if (v24)
  {
    uint64_t v8 = 7;
    goto LABEL_35;
  }
  uint64_t v25 = [MEMORY[0x1E4F291E8] ounces];
  char v26 = [v3 isEqual:v25];

  if (v26)
  {
    uint64_t v8 = 9;
    goto LABEL_35;
  }
  unsigned int v27 = [MEMORY[0x1E4F291E8] ouncesTroy];
  char v28 = [v3 isEqual:v27];

  if (v28)
  {
    uint64_t v8 = 15;
    goto LABEL_35;
  }
  uint64_t v29 = [MEMORY[0x1E4F291E8] picograms];
  char v30 = [v3 isEqual:v29];

  if (v30)
  {
    uint64_t v8 = 8;
    goto LABEL_35;
  }
  char v31 = [MEMORY[0x1E4F291E8] poundsMass];
  char v32 = [v3 isEqual:v31];

  if (v32)
  {
    uint64_t v8 = 10;
    goto LABEL_35;
  }
  unsigned int v33 = [MEMORY[0x1E4F291E8] shortTons];
  char v34 = [v3 isEqual:v33];

  if (v34)
  {
    uint64_t v8 = 13;
    goto LABEL_35;
  }
  uint64_t v35 = [MEMORY[0x1E4F291E8] slugs];
  char v36 = [v3 isEqual:v35];

  if (v36)
  {
    uint64_t v8 = 16;
    goto LABEL_35;
  }
  char v37 = [MEMORY[0x1E4F291E8] stones];
  int v38 = [v3 isEqual:v37];

  if (v38)
  {
    uint64_t v8 = 11;
    goto LABEL_35;
  }
LABEL_36:

LABEL_37:

  return v2;
}

id INIntentSlotValueTransformFromMassValues(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = INIntentSlotValueTransformFromMassValue(*(void **)(*((void *)&v11 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  long long v9 = (void *)[v2 copy];

  return v9;
}

id INIntentSlotValueTransformFromMasses(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = INIntentSlotValueTransformFromMass(*(void **)(*((void *)&v11 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  long long v9 = (void *)[v2 copy];

  return v9;
}

id INIntentSlotValueTransformToMassValues(void *a1)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v11;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v11 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = INIntentSlotValueTransformToMassValue(*(void **)(*((void *)&v10 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v10);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v5);
  }

  return v2;
}

id INIntentSlotValueTransformToMasses(void *a1)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v11;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v11 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = INIntentSlotValueTransformToMass(*(void **)(*((void *)&v10 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v10);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v5);
  }

  return v2;
}

id INIntentSlotValueRedactedValueFromMassValue(void *a1, uint64_t a2)
{
  id v3 = a1;
  uint64_t v4 = [v3 valueMetadata];
  uint64_t v5 = INPrivacyEntitlementOptionsForValueMetadata(v4);

  if ((v5 & a2) != 0) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = (void *)[v3 copy];
  }

  return v6;
}

_INPBMass *INIntentSlotValueRedactedMassFromMass(void *a1, uint64_t a2, void *a3)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a3;
  if (v5)
  {
    char v7 = objc_alloc_init(_INPBMass);
    long long v15 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
    long long v18 = 0u;
    uint64_t v8 = objc_msgSend(v5, "values", 0);
    uint64_t v9 = [v8 countByEnumeratingWithState:&v15 objects:v19 count:16];
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = *(void *)v16;
      do
      {
        for (uint64_t i = 0; i != v10; ++i)
        {
          if (*(void *)v16 != v11) {
            objc_enumerationMutation(v8);
          }
          long long v13 = INIntentSlotValueRedactedValueFromMassValue(*(void **)(*((void *)&v15 + 1) + 8 * i), a2);
          if (v13) {
            [(_INPBMass *)v7 addValue:v13];
          }
        }
        uint64_t v10 = [v8 countByEnumeratingWithState:&v15 objects:v19 count:16];
      }
      while (v10);
    }
  }
  else
  {
    char v7 = 0;
  }

  return v7;
}

id INIntentSlotValueRedactedMassesFromMasses(void *a1, uint64_t a2, void *a3)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a3;
  char v7 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v5, "count"));
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v8 = v5;
  uint64_t v9 = [v8 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)v17;
    do
    {
      for (uint64_t i = 0; i != v10; ++i)
      {
        if (*(void *)v17 != v11) {
          objc_enumerationMutation(v8);
        }
        long long v13 = INIntentSlotValueRedactedMassFromMass(*(void **)(*((void *)&v16 + 1) + 8 * i), a2, v6);
        objc_msgSend(v7, "addObject:", v13, (void)v16);
      }
      uint64_t v10 = [v8 countByEnumeratingWithState:&v16 objects:v20 count:16];
    }
    while (v10);
  }

  long long v14 = (void *)[v7 copy];

  return v14;
}

BOOL _INPBListRideOptionsIntentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    char v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        long long v18 = objc_alloc_init(_INPBIntentMetadata);
        if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v18, a2) & 1) == 0)
        {
LABEL_35:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntentMetadata:", v18, 0, 0);
        goto LABEL_30;
      }
      if (v17 == 2) {
        break;
      }
      if (v17 == 3)
      {
        long long v18 = objc_alloc_init(_INPBLocation);
        if (!PBReaderPlaceMark() || (_INPBLocationReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_35;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setDropOffLocation:", v18, 0, 0);
LABEL_30:

        goto LABEL_32;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_32:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    long long v18 = objc_alloc_init(_INPBLocation);
    if (!PBReaderPlaceMark() || (_INPBLocationReadFrom(v18, a2) & 1) == 0) {
      goto LABEL_35;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setPickupLocation:", v18, 0, 0);
    goto LABEL_30;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _INPBCompressFileIntentResponseReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    char v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        unint64_t v23 = objc_alloc_init(_INPBString);
        if (!PBReaderPlaceMark() || (_INPBStringReadFrom(v23, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEntityName:", v23, 0, 0);
      }
      else if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_33;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_35;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_35:
        [a1 setSuccess:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _INPBDateTimeReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  char v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = objc_alloc_init(_INPBLocalDate);
        if (!PBReaderPlaceMark() || (_INPBLocalDateReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_43;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setDate:", v17, 0, 0);
        goto LABEL_28;
      case 2u:
        char v17 = objc_alloc_init(_INPBLocalTime);
        if PBReaderPlaceMark() && (_INPBLocalTimeReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setTime:", v17, 0, 0);
LABEL_28:

LABEL_41:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_43:

        return 0;
      case 3u:
        PBReaderReadString();
        char v17 = (_INPBLocalDate *)objc_claimAutoreleasedReturnValue();
        [a1 setTimeZoneID:v17];
        goto LABEL_28;
      case 4u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_40;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v21;
        }
LABEL_40:
        [a1 setCalendarSystem:v25];
        goto LABEL_41;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_41;
    }
  }
}

void sub_18CCF3724(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_18CCF3BA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18CCF3D3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18CCF41CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__54489(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__54490(uint64_t a1)
{
}

uint64_t _INPBCreateFileIntentResponseReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  char v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_50;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_52;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_50:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_52:
        [a1 setOverwrite:v19 != 0];
        goto LABEL_62;
      case 2u:
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v26 = 0;
        while (2)
        {
          uint64_t v27 = *v3;
          unint64_t v28 = *(void *)(a2 + v27);
          if (v28 == -1 || v28 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
            *(void *)(a2 + v27) = v28 + 1;
            v26 |= (unint64_t)(v29 & 0x7F) << v24;
            if (v29 < 0)
            {
              v24 += 7;
              BOOL v14 = v25++ >= 9;
              if (v14)
              {
                uint64_t v26 = 0;
                goto LABEL_56;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v26 = 0;
        }
LABEL_56:
        [a1 setSuccess:v26 != 0];
        goto LABEL_62;
      case 3u:
        char v30 = 0;
        unsigned int v31 = 0;
        uint64_t v32 = 0;
        while (2)
        {
          uint64_t v33 = *v3;
          unint64_t v34 = *(void *)(a2 + v33);
          if (v34 == -1 || v34 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v35 = *(unsigned char *)(*(void *)(a2 + *v7) + v34);
            *(void *)(a2 + v33) = v34 + 1;
            v32 |= (unint64_t)(v35 & 0x7F) << v30;
            if (v35 < 0)
            {
              v30 += 7;
              BOOL v14 = v31++ >= 9;
              if (v14)
              {
                uint64_t v36 = 0;
                goto LABEL_61;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v36 = 0;
        }
        else {
          uint64_t v36 = v32;
        }
LABEL_61:
        [a1 setEntityType:v36];
        goto LABEL_62;
      case 4u:
        char v37 = objc_alloc_init(_INPBString);
        if (!PBReaderPlaceMark() || (_INPBStringReadFrom(v37, a2) & 1) == 0) {
          goto LABEL_64;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEntityName:", v37, 0, 0);
        goto LABEL_48;
      case 5u:
        char v37 = objc_alloc_init(_INPBString);
        if PBReaderPlaceMark() && (_INPBStringReadFrom(v37, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setDestinationName:", v37, 0, 0);
LABEL_48:

LABEL_62:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_64:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_62;
    }
  }
}

BOOL _INPBSelectionItemReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    char v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 4)
      {
        unsigned int v18 = objc_alloc_init(_INPBIntentSlotValue);
        if (!PBReaderPlaceMark() || (_INPBIntentSlotValueReadFrom(v18, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setValue:", v18, 0, 0);
        goto LABEL_26;
      }
      if (v17 == 3) {
        break;
      }
      if (v17 == 1)
      {
        PBReaderReadString();
        unsigned int v18 = (_INPBIntentSlotValue *)objc_claimAutoreleasedReturnValue();
        [a1 setUuid:v18];
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    PBReaderReadString();
    unsigned int v18 = (_INPBIntentSlotValue *)objc_claimAutoreleasedReturnValue();
    [a1 setVocabularyValue:v18];
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

Class __getAFPreferencesClass_block_invoke_54899(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!AssistantServicesLibraryCore_frameworkLibrary_54900)
  {
    v4[1] = MEMORY[0x1E4F143A8];
    v4[2] = 3221225472;
    v4[3] = __AssistantServicesLibraryCore_block_invoke_54901;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    void v4[5] = v4;
    long long v5 = xmmword_1E5519A70;
    uint64_t v6 = 0;
    AssistantServicesLibraryCore_frameworkLibrary_54900 = _sl_dlopen();
    uint64_t v2 = (void *)v4[0];
    if (!AssistantServicesLibraryCore_frameworkLibrary_54900)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("AFPreferences");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    uint64_t v2 = (void *)abort_report_np();
LABEL_8:
    free(v2);
  }
  getAFPreferencesClass_softClass_54898 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __AssistantServicesLibraryCore_block_invoke_54901()
{
  uint64_t result = _sl_dlopen();
  AssistantServicesLibraryCore_frameworkLibrary_54900 = result;
  return result;
}

BOOL INTaskTypeHasBackingType(unint64_t a1)
{
  return a1 < 3;
}

uint64_t INTaskTypeGetBackingType(unint64_t a1)
{
  if (a1 >= 3) {
    return 0x7FFFFFFFLL;
  }
  else {
    return (10 * a1);
  }
}

uint64_t INTaskTypeGetFacadeType(int a1, int a2)
{
  uint64_t v2 = a2 == 10;
  if (a2 == 20) {
    uint64_t v2 = 2;
  }
  if (a1) {
    return v2;
  }
  else {
    return 0;
  }
}

__CFString *INTaskTypeGetName(uint64_t a1)
{
  id v1 = @"unknown";
  if (a1 == 2) {
    id v1 = @"completable";
  }
  if (a1 == 1) {
    return @"notCompletable";
  }
  else {
    return v1;
  }
}

uint64_t INTaskTypeWithString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"notCompletable"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"completable"])
  {
    uint64_t v2 = 2;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INTaskTypeGetLocalizedName(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1 == 2)
  {
    uint64_t v4 = @"completable";
    goto LABEL_5;
  }
  if (a1 == 1)
  {
    uint64_t v4 = @"not completable";
LABEL_5:
    long long v5 = INLocalizedStringWithLocalizer(v4, v4, v3);
    goto LABEL_7;
  }
  long long v5 = 0;
LABEL_7:

  return v5;
}

BOOL INBloodValueTypeHasBackingType(unint64_t a1)
{
  return a1 < 9;
}

unint64_t INBloodValueTypeGetBackingType(unint64_t result)
{
  if (result >= 9) {
    return 0x7FFFFFFFLL;
  }
  else {
    return result;
  }
}

uint64_t INBloodValueTypeGetFacadeType(int a1, int a2)
{
  uint64_t v2 = (a2 - 1);
  if (v2 <= 7) {
    uint64_t v3 = v2 + 1;
  }
  else {
    uint64_t v3 = 0;
  }
  if (a1) {
    return v3;
  }
  else {
    return 0;
  }
}

__CFString *INBloodValueTypeGetName(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 7) {
    return @"unknown";
  }
  else {
    return *(&off_1E5519A88 + a1 - 1);
  }
}

uint64_t INBloodValueTypeWithString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"apositive"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"anegative"])
  {
    uint64_t v2 = 2;
  }
  else if ([v1 isEqualToString:@"bpositive"])
  {
    uint64_t v2 = 3;
  }
  else if ([v1 isEqualToString:@"bnegative"])
  {
    uint64_t v2 = 4;
  }
  else if ([v1 isEqualToString:@"abpositive"])
  {
    uint64_t v2 = 5;
  }
  else if ([v1 isEqualToString:@"abnegative"])
  {
    uint64_t v2 = 6;
  }
  else if ([v1 isEqualToString:@"opositive"])
  {
    uint64_t v2 = 7;
  }
  else if ([v1 isEqualToString:@"onegative"])
  {
    uint64_t v2 = 8;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INBloodValueTypeGetLocalizedName(uint64_t a1, void *a2)
{
  id v3 = a2;
  switch(a1)
  {
    case 1:
      uint64_t v4 = @"apositive";
      goto LABEL_11;
    case 2:
      uint64_t v4 = @"anegative";
      goto LABEL_11;
    case 3:
      uint64_t v4 = @"bpositive";
      goto LABEL_11;
    case 4:
      uint64_t v4 = @"bnegative";
      goto LABEL_11;
    case 5:
      uint64_t v4 = @"abpositive";
      goto LABEL_11;
    case 6:
      uint64_t v4 = @"abnegative";
      goto LABEL_11;
    case 7:
      uint64_t v4 = @"opositive";
      goto LABEL_11;
    case 8:
      uint64_t v4 = @"onegative";
LABEL_11:
      long long v5 = INLocalizedStringWithLocalizer(v4, v4, v3);
      break;
    default:
      long long v5 = 0;
      break;
  }

  return v5;
}

uint64_t _INPBLocationReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  long long v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = objc_alloc_init(_INPBLocationValue);
        if (!PBReaderPlaceMark() || !_INPBLocationValueReadFrom(v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addValue:", v17, 0, 0);
        }
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

INMessage *INIntentSlotValueTransformFromMessage(void *a1)
{
  id v1 = a1;
  uint64_t v2 = v1;
  if (v1)
  {
    id v3 = [v1 audioMessageFile];
    if (v3)
    {
      uint64_t v4 = (void *)MEMORY[0x1E4F1C978];
      long long v5 = [v2 audioMessageFile];
      uint64_t v6 = [v4 arrayWithObject:v5];
    }
    else
    {
      uint64_t v6 = [v2 attachmentFiles];
    }

    char v8 = [INMessage alloc];
    uint64_t v60 = [v2 identifier];
    long long v59 = [v2 conversationIdentifier];
    long long v58 = [v2 content];
    long long v52 = [v2 dateSent];
    uint64_t v51 = v8;
    if (v52)
    {
      unsigned int v9 = [MEMORY[0x1E4F1C9A8] currentCalendar];
      char v39 = [v2 dateSent];
      INIntentSlotValueTransformFromDateTime(v39);
      int v38 = v40 = v9;
      long long v54 = objc_msgSend(v9, "dateFromComponents:");
    }
    else
    {
      long long v54 = 0;
    }
    unint64_t v10 = [v2 sender];
    long long v57 = INIntentSlotValueTransformFromContact(v10);
    uint64_t v11 = [v2 recipients];
    long long v56 = INIntentSlotValueTransformFromContacts(v11);
    unint64_t v12 = [v2 speakableGroupName];
    long long v55 = INIntentSlotValueTransformFromDataString(v12);
    long long v49 = [v2 dateLastMessageRead];
    if (v49)
    {
      char v13 = [MEMORY[0x1E4F1C9A8] currentCalendar];
      uint64_t v36 = [v2 dateLastMessageRead];
      INIntentSlotValueTransformFromDateTime(v36);
      char v35 = v37 = v13;
      uint64_t v14 = objc_msgSend(v13, "dateFromComponents:");
    }
    else
    {
      uint64_t v14 = 0;
    }
    int v15 = [v2 numberOfAttachments];
    long long v46 = INIntentSlotValueTransformFromInteger(v15);
    unsigned int v16 = [v2 type] - 1;
    long long v48 = (void *)v14;
    if (v16 > 0x21) {
      uint64_t v17 = 0;
    }
    else {
      uint64_t v17 = qword_18CFC4970[v16];
    }
    int v18 = [v2 hasEffect];
    int v19 = [v2 effect];
    id v50 = v12;
    long long v47 = v15;
    if (v18)
    {
      uint64_t v20 = (v19 - 1);
      uint64_t v21 = v17;
      if (v20 > 0xC) {
        uint64_t v43 = 0;
      }
      else {
        uint64_t v43 = v20 + 1;
      }
    }
    else
    {
      uint64_t v43 = 0;
      uint64_t v21 = v17;
    }
    uint64_t v45 = [v2 referencedMessage];
    uint64_t v42 = INIntentSlotValueTransformFromMessage();
    uint64_t v41 = [v2 serviceName];
    char v44 = [v2 reaction];
    char v22 = INIntentSlotValueTransformFromMessageReaction(v44);
    long long v53 = v6;
    unint64_t v23 = INIntentSlotValueTransformFromFiles(v6);
    char v24 = [v2 location];
    unsigned int v25 = INIntentSlotValueTransformFromLocation(v24);
    uint64_t v26 = [v2 linkMetadata];
    uint64_t v27 = INIntentSlotValueTransformFromMessageLinkMetadata(v26);
    uint64_t v7 = -[INMessage initWithIdentifier:conversationIdentifier:content:dateSent:sender:recipients:groupName:dateMessageWasLastRead:numberOfAttachments:messageType:messageEffectType:referencedMessage:serviceName:reaction:attachmentFiles:location:linkMetadata:](v51, "initWithIdentifier:conversationIdentifier:content:dateSent:sender:recipients:groupName:dateMessageWasLastRead:numberOfAttachments:messageType:messageEffectType:referencedMessage:serviceName:reaction:attachmentFiles:location:linkMetadata:", v60, v59, v58, v54, v57, v56, v55, v48, v46, v21, v43, v42, v41, v22, v23,
           v25,
           v27);

    if (v49)
    {
    }
    if (v52)
    {
    }
    unint64_t v28 = [v2 linkMetadata];
    char v29 = INIntentSlotValueTransformFromMessageLinkMetadata(v28);
    [(INMessage *)v7 setLinkMetadata:v29];

    char v30 = [v2 paymentAmount];
    unsigned int v31 = INIntentSlotValueTransformFromCurrencyAmountValue(v30);
    [(INMessage *)v7 setPaymentAmount:v31];

    uint64_t v32 = [v2 locationName];
    [(INMessage *)v7 setLocationName:v32];

    uint64_t v33 = [v2 fileExtension];
    [(INMessage *)v7 setFileExtension:v33];
  }
  else
  {
    uint64_t v7 = 0;
  }

  return v7;
}

_INPBMessage *INIntentSlotValueTransformToMessage(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_alloc_init(_INPBMessage);
    uint64_t v3 = [v1 identifier];
    if (v3) {
      [(_INPBMessage *)v2 setIdentifier:v3];
    }
    uint64_t v4 = [v1 conversationIdentifier];
    if (v4) {
      [(_INPBMessage *)v2 setConversationIdentifier:v4];
    }
    long long v49 = (void *)v4;
    id v50 = (void *)v3;
    long long v5 = [v1 content];
    if (v5) {
      [(_INPBMessage *)v2 setContent:v5];
    }
    uint64_t v6 = [v1 dateSent];
    if (v6)
    {
      uint64_t v7 = [MEMORY[0x1E4F1C9A8] currentCalendar];
      char v8 = [v7 components:3178748 fromDate:v6];
      unsigned int v9 = INIntentSlotValueTransformToDateTime(v8);
      [(_INPBMessage *)v2 setDateSent:v9];
    }
    unint64_t v10 = [v1 sender];
    uint64_t v11 = v10;
    if (v10)
    {
      unint64_t v12 = INIntentSlotValueTransformToContact(v10);
      [(_INPBMessage *)v2 setSender:v12];
    }
    long long v48 = [v1 recipients];
    char v13 = INIntentSlotValueTransformToContacts(v48);
    [(_INPBMessage *)v2 setRecipients:v13];

    uint64_t v14 = [v1 groupName];
    int v15 = v14;
    if (v14)
    {
      unsigned int v16 = INIntentSlotValueTransformToDataString(v14);
      [(_INPBMessage *)v2 setSpeakableGroupName:v16];
    }
    uint64_t v17 = [v1 dateMessageWasLastRead];
    if (v17)
    {
      int v18 = [MEMORY[0x1E4F1C9A8] currentCalendar];
      int v19 = [v18 components:3178748 fromDate:v17];
      uint64_t v20 = INIntentSlotValueTransformToDateTime(v19);
      [(_INPBMessage *)v2 setDateLastMessageRead:v20];
    }
    uint64_t v21 = [v1 numberOfAttachments];
    char v22 = v21;
    if (v21)
    {
      unint64_t v23 = INIntentSlotValueTransformToInteger(v21);
      [(_INPBMessage *)v2 setNumberOfAttachments:v23];
    }
    uint64_t v24 = [v1 messageType];
    switch(v24)
    {
      case 1:
        uint64_t v25 = 1;
        break;
      case 2:
        uint64_t v25 = 2;
        break;
      case 3:
        uint64_t v25 = 3;
        break;
      case 4:
        uint64_t v25 = 4;
        break;
      case 5:
        uint64_t v25 = 5;
        break;
      case 6:
        uint64_t v25 = 6;
        break;
      case 7:
        uint64_t v25 = 7;
        break;
      case 8:
        uint64_t v25 = 8;
        break;
      case 9:
        uint64_t v25 = 9;
        break;
      case 10:
        uint64_t v25 = 10;
        break;
      case 11:
        uint64_t v25 = 11;
        break;
      case 12:
        uint64_t v25 = 12;
        break;
      case 13:
        uint64_t v25 = 13;
        break;
      case 14:
        uint64_t v25 = 14;
        break;
      case 15:
        uint64_t v25 = 15;
        break;
      case 16:
        uint64_t v25 = 16;
        break;
      case 17:
        uint64_t v25 = 17;
        break;
      case 18:
        uint64_t v25 = 18;
        break;
      case 19:
        uint64_t v25 = 19;
        break;
      case 20:
        uint64_t v25 = 20;
        break;
      case 21:
        uint64_t v25 = 21;
        break;
      case 22:
        uint64_t v25 = 22;
        break;
      case 23:
        uint64_t v25 = 23;
        break;
      case 24:
        uint64_t v25 = 24;
        break;
      case 25:
        uint64_t v25 = 25;
        break;
      case 26:
        uint64_t v25 = 26;
        break;
      case 27:
        uint64_t v25 = 33;
        break;
      case 28:
        uint64_t v25 = 34;
        break;
      default:
        switch(v24)
        {
          case 1000:
            uint64_t v25 = 27;
            break;
          case 1001:
            uint64_t v25 = 28;
            break;
          case 1002:
            uint64_t v25 = 29;
            break;
          case 1003:
            uint64_t v25 = 30;
            break;
          case 1004:
            uint64_t v25 = 31;
            break;
          case 1005:
            uint64_t v25 = 32;
            break;
          default:
            uint64_t v25 = 0;
            break;
        }
        break;
    }
    [(_INPBMessage *)v2 setType:v25];
    unint64_t v26 = [v1 messageEffectType] - 1;
    if (v26 < 0xD) {
      uint64_t v27 = (v26 + 1);
    }
    else {
      uint64_t v27 = 0x7FFFFFFFLL;
    }
    [(_INPBMessage *)v2 setEffect:v27];
    unint64_t v28 = [v1 referencedMessage];
    char v29 = INIntentSlotValueTransformToMessage();
    [(_INPBMessage *)v2 setReferencedMessage:v29];

    char v30 = [v1 linkMetadata];
    unsigned int v31 = INIntentSlotValueTransformToMessageLinkMetadata(v30);
    [(_INPBMessage *)v2 setLinkMetadata:v31];

    uint64_t v32 = [v1 paymentAmount];
    uint64_t v33 = INIntentSlotValueTransformToCurrencyAmountValue(v32);
    [(_INPBMessage *)v2 setPaymentAmount:v33];

    unint64_t v34 = [v1 locationName];
    [(_INPBMessage *)v2 setLocationName:v34];

    char v35 = [v1 fileExtension];
    [(_INPBMessage *)v2 setFileExtension:v35];

    uint64_t v36 = [v1 serviceName];
    [(_INPBMessage *)v2 setServiceName:v36];

    char v37 = [v1 audioMessageFile];
    int v38 = INIntentSlotValueTransformToFile(v37);
    [(_INPBMessage *)v2 setAudioMessageFile:v38];

    char v39 = [v1 attachmentFiles];
    unsigned int v40 = INIntentSlotValueTransformToFiles(v39);
    [(_INPBMessage *)v2 setAttachmentFiles:v40];

    uint64_t v41 = [v1 reaction];
    uint64_t v42 = INIntentSlotValueTransformToMessageReaction(v41);
    [(_INPBMessage *)v2 setReaction:v42];

    uint64_t v43 = [v1 location];
    char v44 = INIntentSlotValueTransformToLocation(v43);
    [(_INPBMessage *)v2 setLocation:v44];

    uint64_t v45 = [v1 linkMetadata];
    long long v46 = INIntentSlotValueTransformToMessageLinkMetadata(v45);
    [(_INPBMessage *)v2 setLinkMetadata:v46];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INIntentSlotValueTransformFromMessages(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        char v8 = INIntentSlotValueTransformFromMessage(*(void **)(*((void *)&v11 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  unsigned int v9 = (void *)[v2 copy];

  return v9;
}

id INIntentSlotValueTransformToMessages(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        char v8 = INIntentSlotValueTransformToMessage(*(void **)(*((void *)&v11 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  unsigned int v9 = (void *)[v2 copy];

  return v9;
}

void INMessageAttributeOptionsEnumerateBackingTypes(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (!a1 || !v3) {
    goto LABEL_9;
  }
  id v4 = v3;
  if (a1)
  {
    (*((void (**)(id, uint64_t))v3 + 2))(v3, 1);
    id v3 = v4;
    if ((a1 & 2) == 0)
    {
LABEL_5:
      if ((a1 & 4) == 0) {
        goto LABEL_6;
      }
LABEL_14:
      (*((void (**)(id, uint64_t))v3 + 2))(v4, 3);
      id v3 = v4;
      if ((a1 & 8) == 0)
      {
LABEL_7:
        if ((a1 & 0x10) == 0) {
          goto LABEL_9;
        }
        goto LABEL_8;
      }
      goto LABEL_15;
    }
  }
  else if ((a1 & 2) == 0)
  {
    goto LABEL_5;
  }
  (*((void (**)(id, uint64_t))v3 + 2))(v4, 2);
  id v3 = v4;
  if ((a1 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_6:
  if ((a1 & 8) == 0) {
    goto LABEL_7;
  }
LABEL_15:
  (*((void (**)(id, uint64_t))v3 + 2))(v4, 4);
  id v3 = v4;
  if ((a1 & 0x10) != 0)
  {
LABEL_8:
    (*((void (**)(id, uint64_t))v3 + 2))(v4, 5);
    id v3 = v4;
  }
LABEL_9:
}

unint64_t INMessageAttributeOptionsContainsBackingType(unint64_t result, int a2)
{
  if (result)
  {
    switch(a2)
    {
      case 1:
        result &= 1u;
        break;
      case 2:
        uint64_t result = (result >> 1) & 1;
        break;
      case 3:
        uint64_t result = (result >> 2) & 1;
        break;
      case 4:
        uint64_t result = (result >> 3) & 1;
        break;
      case 5:
        uint64_t result = (result >> 4) & 1;
        break;
      default:
        uint64_t result = 0;
        break;
    }
  }
  return result;
}

uint64_t *INMessageAttributeOptionsAddBackingType(uint64_t *result, int a2)
{
  if (result)
  {
    uint64_t v2 = *result;
    switch(a2)
    {
      case 1:
        v2 |= 1uLL;
        break;
      case 2:
        v2 |= 2uLL;
        break;
      case 3:
        v2 |= 4uLL;
        break;
      case 4:
        v2 |= 8uLL;
        break;
      case 5:
        v2 |= 0x10uLL;
        break;
      default:
        break;
    }
    *uint64_t result = v2;
  }
  return result;
}

uint64_t *INMessageAttributeOptionsRemoveBackingType(uint64_t *result, int a2)
{
  if (result)
  {
    uint64_t v2 = *result;
    switch(a2)
    {
      case 1:
        v2 &= ~1uLL;
        break;
      case 2:
        v2 &= ~2uLL;
        break;
      case 3:
        v2 &= ~4uLL;
        break;
      case 4:
        v2 &= ~8uLL;
        break;
      case 5:
        v2 &= ~0x10uLL;
        break;
      default:
        break;
    }
    *uint64_t result = v2;
  }
  return result;
}

id INMessageAttributeOptionsGetNames(uint64_t a1)
{
  if (a1)
  {
    char v1 = a1;
    id v2 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
    id v3 = v2;
    if (v1)
    {
      [v2 addObject:@"read"];
      if ((v1 & 2) == 0)
      {
LABEL_4:
        if ((v1 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_15;
      }
    }
    else if ((v1 & 2) == 0)
    {
      goto LABEL_4;
    }
    [v3 addObject:@"unread"];
    if ((v1 & 4) == 0)
    {
LABEL_5:
      if ((v1 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_16;
    }
LABEL_15:
    [v3 addObject:@"flagged"];
    if ((v1 & 8) == 0)
    {
LABEL_6:
      if ((v1 & 0x10) == 0)
      {
LABEL_8:
        id v4 = (void *)[v3 copy];

        goto LABEL_10;
      }
LABEL_7:
      [v3 addObject:@"played"];
      goto LABEL_8;
    }
LABEL_16:
    [v3 addObject:@"unflagged"];
    if ((v1 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  id v4 = (void *)MEMORY[0x1E4F1CBF0];
LABEL_10:

  return v4;
}

uint64_t INMessageAttributeOptionsWithNames(void *a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id obj = a1;
  uint64_t v1 = [obj countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = 0;
    uint64_t v4 = *(void *)v10;
    do
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v10 != v4) {
          objc_enumerationMutation(obj);
        }
        uint64_t v6 = *(void **)(*((void *)&v9 + 1) + 8 * i);
        v3 |= [v6 isEqualToString:@"read"];
        if ([v6 isEqualToString:@"unread"]) {
          v3 |= 2uLL;
        }
        if ([v6 isEqualToString:@"flagged"]) {
          v3 |= 4uLL;
        }
        if ([v6 isEqualToString:@"unflagged"]) {
          v3 |= 8uLL;
        }
        if ([v6 isEqualToString:@"played"]) {
          v3 |= 0x10uLL;
        }
      }
      uint64_t v2 = [obj countByEnumeratingWithState:&v9 objects:v13 count:16];
    }
    while (v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id INMessageAttributeOptionsGetLocalizedNames(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v4 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
    if (a1)
    {
      char v8 = INLocalizedStringWithLocalizer(@"read", @"read", v3);
      [v4 addObject:v8];

      if ((a1 & 2) == 0)
      {
LABEL_4:
        if ((a1 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_15;
      }
    }
    else if ((a1 & 2) == 0)
    {
      goto LABEL_4;
    }
    long long v9 = INLocalizedStringWithLocalizer(@"unread", @"unread", v3);
    [v4 addObject:v9];

    if ((a1 & 4) == 0)
    {
LABEL_5:
      if ((a1 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_16;
    }
LABEL_15:
    long long v10 = INLocalizedStringWithLocalizer(@"flagged", @"flagged", v3);
    [v4 addObject:v10];

    if ((a1 & 8) == 0)
    {
LABEL_6:
      if ((a1 & 0x10) == 0)
      {
LABEL_8:
        uint64_t v6 = (void *)[v4 copy];

        goto LABEL_10;
      }
LABEL_7:
      uint64_t v5 = INLocalizedStringWithLocalizer(@"played", @"played", v3);
      [v4 addObject:v5];

      goto LABEL_8;
    }
LABEL_16:
    long long v11 = INLocalizedStringWithLocalizer(@"unflagged", @"unflagged", v3);
    [v4 addObject:v11];

    if ((a1 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v6 = (void *)MEMORY[0x1E4F1CBF0];
LABEL_10:

  return v6;
}

uint64_t _INPBLanguageTagReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadString();
        [a1 setTag:v17];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t INCodableTimeIntervalAttributeMetadataUnitWithString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"Seconds"])
  {
    uint64_t v2 = 0;
  }
  else if ([v1 isEqualToString:@"Minutes"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"Hours"])
  {
    uint64_t v2 = 2;
  }
  else if ([v1 isEqualToString:@"Days"])
  {
    uint64_t v2 = 3;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

__CFString *INCodableTimeIntervalAttributeMetadataUnitAsString(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2) {
    return @"Seconds";
  }
  else {
    return *(&off_1E5519AC8 + a1 - 1);
  }
}

uint64_t INCodableTimeIntervalAttributeMetadataUnitAsCalendarUnit(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2) {
    return 128;
  }
  else {
    return qword_18CFC4A80[a1 - 1];
  }
}

BOOL _INPBDateTimeRangeListReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 1) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        uint64_t v17 = objc_alloc_init(_INPBCondition);
        if (!PBReaderPlaceMark() || (_INPBConditionReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_32;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCondition:", v17, 0, 0);
LABEL_27:

        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_29:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    uint64_t v17 = objc_alloc_init(_INPBDateTimeRange);
    if (!PBReaderPlaceMark() || !_INPBDateTimeRangeReadFrom(v17, a2))
    {
LABEL_32:

      return 0;
    }
    PBReaderRecallMark();
    if (v17) {
      objc_msgSend(a1, "addDateRange:", v17, 0, 0);
    }
    goto LABEL_27;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _INPBWellnessUnitTypeReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_92;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              uint64_t v23 = 0;
              goto LABEL_95;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_92:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v23 = 0;
          }
          else {
            uint64_t v23 = v19;
          }
LABEL_95:
          [a1 setMassUnit:v23];
          continue;
        case 2u:
          char v25 = 0;
          unsigned int v26 = 0;
          uint64_t v27 = 0;
          while (2)
          {
            uint64_t v28 = *v3;
            unint64_t v29 = *(void *)(a2 + v28);
            if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
              *(void *)(a2 + v2_Block_object_dispose(&a9, 8) = v29 + 1;
              v27 |= (unint64_t)(v30 & 0x7F) << v25;
              if (v30 < 0)
              {
                v25 += 7;
                BOOL v14 = v26++ >= 9;
                if (v14)
                {
                  uint64_t v31 = 0;
                  goto LABEL_100;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v31 = 0;
          }
          else {
            uint64_t v31 = v27;
          }
LABEL_100:
          [a1 setLengthUnit:v31];
          continue;
        case 3u:
          char v32 = 0;
          unsigned int v33 = 0;
          uint64_t v34 = 0;
          while (2)
          {
            uint64_t v35 = *v3;
            unint64_t v36 = *(void *)(a2 + v35);
            if (v36 == -1 || v36 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
              *(void *)(a2 + v35) = v36 + 1;
              v34 |= (unint64_t)(v37 & 0x7F) << v32;
              if (v37 < 0)
              {
                v32 += 7;
                BOOL v14 = v33++ >= 9;
                if (v14)
                {
                  uint64_t v38 = 0;
                  goto LABEL_105;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v38 = 0;
          }
          else {
            uint64_t v38 = v34;
          }
LABEL_105:
          [a1 setVolumeUnit:v38];
          continue;
        case 4u:
          char v39 = 0;
          unsigned int v40 = 0;
          uint64_t v41 = 0;
          while (2)
          {
            uint64_t v42 = *v3;
            unint64_t v43 = *(void *)(a2 + v42);
            if (v43 == -1 || v43 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v44 = *(unsigned char *)(*(void *)(a2 + *v7) + v43);
              *(void *)(a2 + v42) = v43 + 1;
              v41 |= (unint64_t)(v44 & 0x7F) << v39;
              if (v44 < 0)
              {
                v39 += 7;
                BOOL v14 = v40++ >= 9;
                if (v14)
                {
                  uint64_t v45 = 0;
                  goto LABEL_110;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v45 = 0;
          }
          else {
            uint64_t v45 = v41;
          }
LABEL_110:
          [a1 setTimeUnit:v45];
          continue;
        case 5u:
          char v46 = 0;
          unsigned int v47 = 0;
          uint64_t v48 = 0;
          while (2)
          {
            uint64_t v49 = *v3;
            unint64_t v50 = *(void *)(a2 + v49);
            if (v50 == -1 || v50 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v51 = *(unsigned char *)(*(void *)(a2 + *v7) + v50);
              *(void *)(a2 + v49) = v50 + 1;
              v48 |= (unint64_t)(v51 & 0x7F) << v46;
              if (v51 < 0)
              {
                v46 += 7;
                BOOL v14 = v47++ >= 9;
                if (v14)
                {
                  uint64_t v52 = 0;
                  goto LABEL_115;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v52 = 0;
          }
          else {
            uint64_t v52 = v48;
          }
LABEL_115:
          [a1 setTemperatureUnit:v52];
          continue;
        case 6u:
          char v53 = 0;
          unsigned int v54 = 0;
          uint64_t v55 = 0;
          while (2)
          {
            uint64_t v56 = *v3;
            unint64_t v57 = *(void *)(a2 + v56);
            if (v57 == -1 || v57 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v58 = *(unsigned char *)(*(void *)(a2 + *v7) + v57);
              *(void *)(a2 + v56) = v57 + 1;
              v55 |= (unint64_t)(v58 & 0x7F) << v53;
              if (v58 < 0)
              {
                v53 += 7;
                BOOL v14 = v54++ >= 9;
                if (v14)
                {
                  uint64_t v59 = 0;
                  goto LABEL_120;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v59 = 0;
          }
          else {
            uint64_t v59 = v55;
          }
LABEL_120:
          [a1 setBloodPressureUnit:v59];
          continue;
        case 7u:
          char v60 = 0;
          unsigned int v61 = 0;
          uint64_t v62 = 0;
          while (2)
          {
            uint64_t v63 = *v3;
            unint64_t v64 = *(void *)(a2 + v63);
            if (v64 == -1 || v64 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v65 = *(unsigned char *)(*(void *)(a2 + *v7) + v64);
              *(void *)(a2 + v63) = v64 + 1;
              v62 |= (unint64_t)(v65 & 0x7F) << v60;
              if (v65 < 0)
              {
                v60 += 7;
                BOOL v14 = v61++ >= 9;
                if (v14)
                {
                  uint64_t v66 = 0;
                  goto LABEL_125;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v66 = 0;
          }
          else {
            uint64_t v66 = v62;
          }
LABEL_125:
          [a1 setHeartRateUnit:v66];
          continue;
        case 8u:
          char v67 = 0;
          unsigned int v68 = 0;
          uint64_t v69 = 0;
          while (2)
          {
            uint64_t v70 = *v3;
            unint64_t v71 = *(void *)(a2 + v70);
            if (v71 == -1 || v71 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v72 = *(unsigned char *)(*(void *)(a2 + *v7) + v71);
              *(void *)(a2 + v70) = v71 + 1;
              v69 |= (unint64_t)(v72 & 0x7F) << v67;
              if (v72 < 0)
              {
                v67 += 7;
                BOOL v14 = v68++ >= 9;
                if (v14)
                {
                  uint64_t v73 = 0;
                  goto LABEL_130;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v73 = 0;
          }
          else {
            uint64_t v73 = v69;
          }
LABEL_130:
          [a1 setRespiratoryRateUnit:v73];
          continue;
        case 9u:
          char v74 = 0;
          unsigned int v75 = 0;
          uint64_t v76 = 0;
          while (2)
          {
            uint64_t v77 = *v3;
            unint64_t v78 = *(void *)(a2 + v77);
            if (v78 == -1 || v78 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v79 = *(unsigned char *)(*(void *)(a2 + *v7) + v78);
              *(void *)(a2 + v77) = v78 + 1;
              v76 |= (unint64_t)(v79 & 0x7F) << v74;
              if (v79 < 0)
              {
                v74 += 7;
                BOOL v14 = v75++ >= 9;
                if (v14)
                {
                  uint64_t v80 = 0;
                  goto LABEL_135;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v80 = 0;
          }
          else {
            uint64_t v80 = v76;
          }
LABEL_135:
          [a1 setEnergyUnit:v80];
          continue;
        case 0xAu:
          char v81 = 0;
          unsigned int v82 = 0;
          uint64_t v83 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v84 = *v3;
        unint64_t v85 = *(void *)(a2 + v84);
        if (v85 == -1 || v85 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v86 = *(unsigned char *)(*(void *)(a2 + *v7) + v85);
        *(void *)(a2 + v84) = v85 + 1;
        v83 |= (unint64_t)(v86 & 0x7F) << v81;
        if ((v86 & 0x80) == 0) {
          goto LABEL_137;
        }
        v81 += 7;
        BOOL v14 = v82++ >= 9;
        if (v14)
        {
          uint64_t v87 = 0;
          goto LABEL_140;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_137:
      uint64_t v87 = *(unsigned char *)(a2 + *v5) ? 0 : v83;
LABEL_140:
      [a1 setBloodGlucoseUnit:v87];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

INBillDetails *INIntentSlotValueTransformFromBillDetailsValue(void *a1)
{
  id v1 = a1;
  uint64_t v2 = v1;
  if (v1)
  {
    id v3 = [v1 valueMetadata];
    INPrivacyEntitlementValidateValueMetadata(v3);

    char v25 = [INBillDetails alloc];
    int v4 = [v2 hasBillType];
    uint64_t v5 = [v2 billType] - 1;
    if (v5 <= 0x15) {
      uint64_t v6 = v5 + 1;
    }
    else {
      uint64_t v6 = 0;
    }
    if (!v4) {
      uint64_t v6 = 0;
    }
    uint64_t v23 = v6;
    int v7 = [v2 hasStatus];
    uint64_t v8 = [v2 status] - 1;
    if (v8 <= 4) {
      uint64_t v9 = v8 + 1;
    }
    else {
      uint64_t v9 = 0;
    }
    if (!v7) {
      uint64_t v9 = 0;
    }
    uint64_t v21 = v9;
    unsigned int v26 = [v2 billPayee];
    uint64_t v20 = INIntentSlotValueTransformFromBillPayeeValue(v26);
    uint64_t v24 = [v2 amountDue];
    unint64_t v10 = INIntentSlotValueTransformFromCurrencyAmountValue(v24);
    char v22 = [v2 minimumDue];
    uint64_t v11 = INIntentSlotValueTransformFromCurrencyAmountValue(v22);
    unint64_t v12 = [v2 lateFee];
    char v13 = INIntentSlotValueTransformFromCurrencyAmountValue(v12);
    BOOL v14 = [v2 dueDate];
    int v15 = INIntentSlotValueTransformFromDateTime(v14);
    uint64_t v16 = [v2 paymentDate];
    char v17 = INIntentSlotValueTransformFromDateTime(v16);
    unsigned int v18 = [(INBillDetails *)v25 initWithBillType:v23 paymentStatus:v21 billPayee:v20 amountDue:v10 minimumDue:v11 lateFee:v13 dueDate:v15 paymentDate:v17];
  }
  else
  {
    unsigned int v18 = 0;
  }

  return v18;
}

_INPBBillDetailsValue *INIntentSlotValueTransformToBillDetailsValue(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    uint64_t v2 = objc_alloc_init(_INPBBillDetailsValue);
    id v3 = [v1 billPayee];
    int v4 = INIntentSlotValueTransformToBillPayeeValue(v3);
    [(_INPBBillDetailsValue *)v2 setBillPayee:v4];

    uint64_t v5 = [v1 amountDue];
    uint64_t v6 = INIntentSlotValueTransformToCurrencyAmountValue(v5);
    [(_INPBBillDetailsValue *)v2 setAmountDue:v6];

    int v7 = [v1 minimumDue];
    uint64_t v8 = INIntentSlotValueTransformToCurrencyAmountValue(v7);
    [(_INPBBillDetailsValue *)v2 setMinimumDue:v8];

    uint64_t v9 = [v1 lateFee];
    unint64_t v10 = INIntentSlotValueTransformToCurrencyAmountValue(v9);
    [(_INPBBillDetailsValue *)v2 setLateFee:v10];

    uint64_t v11 = [v1 dueDate];
    unint64_t v12 = INIntentSlotValueTransformToDateTime(v11);
    [(_INPBBillDetailsValue *)v2 setDueDate:v12];

    char v13 = [v1 paymentDate];
    BOOL v14 = INIntentSlotValueTransformToDateTime(v13);
    [(_INPBBillDetailsValue *)v2 setPaymentDate:v14];

    unint64_t v15 = [v1 billType] - 1;
    if (v15 < 0x16) {
      uint64_t v16 = (v15 + 1);
    }
    else {
      uint64_t v16 = 0x7FFFFFFFLL;
    }
    [(_INPBBillDetailsValue *)v2 setBillType:v16];
    uint64_t v17 = [v1 paymentStatus];

    if ((unint64_t)(v17 - 1) < 5) {
      uint64_t v18 = v17;
    }
    else {
      uint64_t v18 = 0x7FFFFFFFLL;
    }
    [(_INPBBillDetailsValue *)v2 setStatus:v18];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INIntentSlotValueTransformFromBillDetailsValues(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          uint64_t v8 = INIntentSlotValueTransformFromBillDetailsValue(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    uint64_t v9 = (void *)[v2 copy];
  }
  else
  {
    uint64_t v9 = 0;
  }

  return v9;
}

id INIntentSlotValueTransformToBillDetailsValues(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          uint64_t v8 = INIntentSlotValueTransformToBillDetailsValue(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    uint64_t v9 = (void *)[v2 copy];
  }
  else
  {
    uint64_t v9 = 0;
  }

  return v9;
}

_INPBBillDetailsValue *INIntentSlotValueRedactedBillDetailsValueFromBillDetailsValue(void *a1, uint64_t a2, void *a3)
{
  id v5 = a1;
  id v6 = a3;
  int v7 = [v5 valueMetadata];
  uint64_t v8 = INPrivacyEntitlementOptionsForValueMetadata(v7);

  if ((v8 & a2) != 0)
  {
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v9 = objc_alloc_init(_INPBBillDetailsValue);
    unint64_t v10 = [v5 billPayee];
    long long v11 = INIntentSlotValueRedactedBillPayeeValueFromBillPayeeValue(v10, a2);
    [(_INPBBillDetailsValue *)v9 setBillPayee:v11];

    long long v12 = [v5 amountDue];
    long long v13 = INIntentSlotValueRedactedCurrencyAmountValueFromCurrencyAmountValue(v12, a2, v6);
    [(_INPBBillDetailsValue *)v9 setAmountDue:v13];

    long long v14 = [v5 minimumDue];
    unint64_t v15 = INIntentSlotValueRedactedCurrencyAmountValueFromCurrencyAmountValue(v14, a2, v6);
    [(_INPBBillDetailsValue *)v9 setMinimumDue:v15];

    uint64_t v16 = [v5 lateFee];
    uint64_t v17 = INIntentSlotValueRedactedCurrencyAmountValueFromCurrencyAmountValue(v16, a2, v6);
    [(_INPBBillDetailsValue *)v9 setLateFee:v17];

    uint64_t v18 = [v5 dueDate];
    [(_INPBBillDetailsValue *)v9 setDueDate:v18];

    uint64_t v19 = [v5 paymentDate];
    [(_INPBBillDetailsValue *)v9 setPaymentDate:v19];

    -[_INPBBillDetailsValue setBillType:](v9, "setBillType:", [v5 billType]);
    -[_INPBBillDetailsValue setStatus:](v9, "setStatus:", [v5 status]);
  }

  return v9;
}

void INCarSignalOptionsEnumerateBackingTypes(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1 && v3)
  {
    id v4 = v3;
    if (a1)
    {
      (*((void (**)(id, uint64_t))v3 + 2))(v3, 1);
      id v3 = v4;
    }
    if ((a1 & 2) != 0)
    {
      (*((void (**)(id, uint64_t))v3 + 2))(v4, 2);
      id v3 = v4;
    }
  }
}

uint64_t INCarSignalOptionsContainsBackingType(unint64_t a1, int a2)
{
  uint64_t v2 = (a1 >> 1) & 1;
  int v3 = a1 & 1;
  if (a2 != 1) {
    int v3 = 0;
  }
  if (a2 != 2) {
    LODWORD(v2) = v3;
  }
  if (a1) {
    return v2;
  }
  else {
    return 0;
  }
}

uint64_t *INCarSignalOptionsAddBackingType(uint64_t *result, int a2)
{
  if (result)
  {
    uint64_t v2 = *result;
    if (a2 == 1) {
      uint64_t v2 = *result | 1;
    }
    if (a2 == 2) {
      uint64_t v2 = *result | 2;
    }
    *uint64_t result = v2;
  }
  return result;
}

unint64_t *INCarSignalOptionsRemoveBackingType(unint64_t *result, int a2)
{
  if (result)
  {
    unint64_t v2 = *result;
    if (a2 == 1) {
      unint64_t v2 = *result & 0xFFFFFFFFFFFFFFFELL;
    }
    if (a2 == 2) {
      unint64_t v2 = *result & 0xFFFFFFFFFFFFFFFDLL;
    }
    *uint64_t result = v2;
  }
  return result;
}

id INCarSignalOptionsGetNames(uint64_t a1)
{
  if (a1)
  {
    char v1 = a1;
    id v2 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
    int v3 = v2;
    if (v1) {
      [v2 addObject:@"audible"];
    }
    if ((v1 & 2) != 0) {
      [v3 addObject:@"visible"];
    }
    id v4 = (void *)[v3 copy];
  }
  else
  {
    id v4 = (void *)MEMORY[0x1E4F1CBF0];
  }

  return v4;
}

uint64_t INCarSignalOptionsWithNames(void *a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  uint64_t v2 = [v1 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = 0;
    uint64_t v5 = *(void *)v10;
    do
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v10 != v5) {
          objc_enumerationMutation(v1);
        }
        int v7 = *(void **)(*((void *)&v9 + 1) + 8 * i);
        v4 |= [v7 isEqualToString:@"audible"];
        if ([v7 isEqualToString:@"visible"]) {
          v4 |= 2uLL;
        }
      }
      uint64_t v3 = [v1 countByEnumeratingWithState:&v9 objects:v13 count:16];
    }
    while (v3);
  }
  else
  {
    uint64_t v4 = 0;
  }

  return v4;
}

id INCarSignalOptionsGetLocalizedNames(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v4 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
    if (a1)
    {
      uint64_t v5 = INLocalizedStringWithLocalizer(@"audible", @"audible", v3);
      [v4 addObject:v5];
    }
    if ((a1 & 2) != 0)
    {
      id v6 = INLocalizedStringWithLocalizer(@"visible", @"visible", v3);
      [v4 addObject:v6];
    }
    int v7 = (void *)[v4 copy];
  }
  else
  {
    int v7 = (void *)MEMORY[0x1E4F1CBF0];
  }

  return v7;
}

BOOL _INPBSetSeatSettingsInCarIntentResponseReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  id v6 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
      return v7 == 0;
    }
    if (*(unsigned char *)(a2 + *v5))
    {
      int v7 = 1;
      return v7 == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    uint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v6) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        LOBYTE(v10) = 0;
        int v7 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      LOBYTE(v10) = 0;
    }
LABEL_14:
    if (v7) {
      BOOL v15 = 1;
    }
    else {
      BOOL v15 = (v10 & 7) == 4;
    }
    if (v15) {
      return v7 == 0;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      return 0;
    }
  }
}

BOOL _INPBPlaceListReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 1) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        uint64_t v17 = objc_alloc_init(_INPBCondition);
        if (!PBReaderPlaceMark() || (_INPBConditionReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_32;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCondition:", v17, 0, 0);
LABEL_27:

        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_29:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    uint64_t v17 = objc_alloc_init(_INPBPlace);
    if (!PBReaderPlaceMark() || !_INPBPlaceReadFrom(v17, a2))
    {
LABEL_32:

      return 0;
    }
    PBReaderRecallMark();
    if (v17) {
      objc_msgSend(a1, "addPlace:", v17, 0, 0);
    }
    goto LABEL_27;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _INPBSetAudioSourceInCarIntentResponseReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  id v6 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
      return v7 == 0;
    }
    if (*(unsigned char *)(a2 + *v5))
    {
      int v7 = 1;
      return v7 == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    uint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v6) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        LOBYTE(v10) = 0;
        int v7 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      LOBYTE(v10) = 0;
    }
LABEL_14:
    if (v7) {
      BOOL v15 = 1;
    }
    else {
      BOOL v15 = (v10 & 7) == 4;
    }
    if (v15) {
      return v7 == 0;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      return 0;
    }
  }
}

uint64_t _INPBLocalDateReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_50;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              uint64_t v23 = 0;
              goto LABEL_53;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_50:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v23 = 0;
          }
          else {
            uint64_t v23 = v19;
          }
LABEL_53:
          [a1 setYear:v23];
          continue;
        case 2u:
          char v25 = 0;
          unsigned int v26 = 0;
          uint64_t v27 = 0;
          while (2)
          {
            uint64_t v28 = *v3;
            unint64_t v29 = *(void *)(a2 + v28);
            if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
              *(void *)(a2 + v2_Block_object_dispose(&a9, 8) = v29 + 1;
              v27 |= (unint64_t)(v30 & 0x7F) << v25;
              if (v30 < 0)
              {
                v25 += 7;
                BOOL v14 = v26++ >= 9;
                if (v14)
                {
                  uint64_t v31 = 0;
                  goto LABEL_58;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v31 = 0;
          }
          else {
            uint64_t v31 = v27;
          }
LABEL_58:
          [a1 setMonth:v31];
          continue;
        case 3u:
          char v32 = 0;
          unsigned int v33 = 0;
          uint64_t v34 = 0;
          while (2)
          {
            uint64_t v35 = *v3;
            unint64_t v36 = *(void *)(a2 + v35);
            if (v36 == -1 || v36 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
              *(void *)(a2 + v35) = v36 + 1;
              v34 |= (unint64_t)(v37 & 0x7F) << v32;
              if (v37 < 0)
              {
                v32 += 7;
                BOOL v14 = v33++ >= 9;
                if (v14)
                {
                  uint64_t v38 = 0;
                  goto LABEL_63;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v38 = 0;
          }
          else {
            uint64_t v38 = v34;
          }
LABEL_63:
          [a1 setDayOfMonth:v38];
          continue;
        case 4u:
          char v39 = 0;
          unsigned int v40 = 0;
          uint64_t v41 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v42 = *v3;
        unint64_t v43 = *(void *)(a2 + v42);
        if (v43 == -1 || v43 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v44 = *(unsigned char *)(*(void *)(a2 + *v7) + v43);
        *(void *)(a2 + v42) = v43 + 1;
        v41 |= (unint64_t)(v44 & 0x7F) << v39;
        if ((v44 & 0x80) == 0) {
          goto LABEL_65;
        }
        v39 += 7;
        BOOL v14 = v40++ >= 9;
        if (v14)
        {
          uint64_t v45 = 0;
          goto LABEL_68;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_65:
      uint64_t v45 = *(unsigned char *)(a2 + *v5) ? 0 : v41;
LABEL_68:
      [a1 setDayOfWeek:v45];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

id INIntentSlotValueTransformFromDictionary(void *a1)
{
  uint64_t v51 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = v1;
  if (v1)
  {
    id v3 = objc_msgSend(MEMORY[0x1E4F1CA60], "dictionaryWithCapacity:", objc_msgSend(v1, "pairsCount"));
    long long v46 = 0u;
    long long v47 = 0u;
    long long v48 = 0u;
    long long v49 = 0u;
    id v4 = objc_msgSend(v2, "pairs", 0);
    uint64_t v5 = [v4 countByEnumeratingWithState:&v46 objects:v50 count:16];
    if (!v5) {
      goto LABEL_68;
    }
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)v47;
    while (1)
    {
      for (uint64_t i = 0; i != v6; ++i)
      {
        if (*(void *)v47 != v7) {
          objc_enumerationMutation(v4);
        }
        unsigned int v9 = *(void **)(*((void *)&v46 + 1) + 8 * i);
        if ([v9 pairStringValuesCount])
        {
          int v10 = [v9 repeated];
          uint64_t v11 = [v9 pairStringValues];
          unint64_t v12 = v11;
          if (!v10)
          {
            char v17 = [v11 firstObject];
            uint64_t v18 = INIntentSlotValueTransformFromStringValue(v17);
LABEL_64:
            unint64_t v43 = (void *)v18;
            char v44 = [v9 key];
            [v3 setObject:v43 forKey:v44];

            goto LABEL_65;
          }
          uint64_t v13 = INIntentSlotValueTransformFromStringValues(v11);
        }
        else
        {
          BOOL v14 = [v9 pairDataValues];

          if (v14)
          {
            int v15 = [v9 repeated];
            uint64_t v16 = [v9 pairDataValues];
            unint64_t v12 = v16;
            if (!v15)
            {
              char v17 = [v16 firstObject];
              uint64_t v18 = INIntentSlotValueTransformFromDataValue(v17);
              goto LABEL_64;
            }
            uint64_t v13 = INIntentSlotValueTransformFromDataValues(v16);
          }
          else if ([v9 pairUrlValuesCount])
          {
            int v19 = [v9 repeated];
            uint64_t v20 = [v9 pairUrlValues];
            unint64_t v12 = v20;
            if (!v19)
            {
              char v17 = [v20 firstObject];
              uint64_t v18 = INIntentSlotValueTransformFromURLValue(v17);
              goto LABEL_64;
            }
            uint64_t v13 = INIntentSlotValueTransformFromURLValues(v20);
          }
          else if ([v9 pairDoubleValuesCount])
          {
            int v21 = [v9 repeated];
            char v22 = [v9 pairDoubleValues];
            unint64_t v12 = v22;
            if (!v21)
            {
              char v17 = [v22 firstObject];
              uint64_t v18 = INIntentSlotValueTransformFromDoubleValue(v17);
              goto LABEL_64;
            }
            uint64_t v13 = INIntentSlotValueTransformFromDoubleValues(v22);
          }
          else if ([v9 pairIntegerValuesCount])
          {
            int v23 = [v9 repeated];
            uint64_t v24 = [v9 pairIntegerValues];
            unint64_t v12 = v24;
            if (!v23)
            {
              char v17 = [v24 firstObject];
              uint64_t v18 = INIntentSlotValueTransformFromIntegerValue(v17);
              goto LABEL_64;
            }
            uint64_t v13 = INIntentSlotValueTransformFromIntegerValues(v24);
          }
          else if ([v9 pairDistanceValuesCount])
          {
            int v25 = [v9 repeated];
            unsigned int v26 = [v9 pairDistanceValues];
            unint64_t v12 = v26;
            if (!v25)
            {
              char v17 = [v26 firstObject];
              uint64_t v18 = INIntentSlotValueTransformFromDistanceValue(v17);
              goto LABEL_64;
            }
            uint64_t v13 = INIntentSlotValueTransformFromDistanceValues(v26);
          }
          else if ([v9 pairTemperatureValuesCount])
          {
            int v27 = [v9 repeated];
            uint64_t v28 = [v9 pairTemperatureValues];
            unint64_t v12 = v28;
            if (!v27)
            {
              char v17 = [v28 firstObject];
              uint64_t v18 = INIntentSlotValueTransformFromTemperatureValue(v17);
              goto LABEL_64;
            }
            uint64_t v13 = INIntentSlotValueTransformFromTemperatureValues(v28);
          }
          else if ([v9 pairLocationValuesCount])
          {
            int v29 = [v9 repeated];
            char v30 = [v9 pairLocationValues];
            unint64_t v12 = v30;
            if (!v29)
            {
              char v17 = [v30 firstObject];
              uint64_t v18 = INIntentSlotValueTransformFromLocationValue(v17);
              goto LABEL_64;
            }
            uint64_t v13 = INIntentSlotValueTransformFromLocationValues(v30);
          }
          else if ([v9 pairPersonValuesCount])
          {
            int v31 = [v9 repeated];
            char v32 = [v9 pairPersonValues];
            unint64_t v12 = v32;
            if (!v31)
            {
              char v17 = [v32 firstObject];
              uint64_t v18 = INIntentSlotValueTransformFromContactValueWithAlternatives(v17, 0);
              goto LABEL_64;
            }
            uint64_t v13 = INIntentSlotValueTransformFromContactValues(v32);
          }
          else if ([v9 pairCurrencyAmountValuesCount])
          {
            int v33 = [v9 repeated];
            uint64_t v34 = [v9 pairCurrencyAmountValues];
            unint64_t v12 = v34;
            if (!v33)
            {
              char v17 = [v34 firstObject];
              uint64_t v18 = INIntentSlotValueTransformFromCurrencyAmountValue(v17);
              goto LABEL_64;
            }
            uint64_t v13 = INIntentSlotValueTransformFromCurrencyAmountValues(v34);
          }
          else if ([v9 pairImageValuesCount])
          {
            int v35 = [v9 repeated];
            unint64_t v36 = [v9 pairImageValues];
            unint64_t v12 = v36;
            if (!v35)
            {
              char v17 = [v36 firstObject];
              uint64_t v18 = INIntentSlotValueTransformFromImageValue(v17);
              goto LABEL_64;
            }
            uint64_t v13 = INIntentSlotValueTransformFromImageValues(v36);
          }
          else if ([v9 pairPaymentMethodValuesCount])
          {
            int v37 = [v9 repeated];
            uint64_t v38 = [v9 pairPaymentMethodValues];
            unint64_t v12 = v38;
            if (!v37)
            {
              char v17 = [v38 firstObject];
              uint64_t v18 = INIntentSlotValueTransformFromPaymentMethodValue(v17);
              goto LABEL_64;
            }
            uint64_t v13 = INIntentSlotValueTransformFromPaymentMethodValues(v38);
          }
          else if ([v9 pairDataStringsCount])
          {
            int v39 = [v9 repeated];
            unsigned int v40 = [v9 pairDataStrings];
            unint64_t v12 = v40;
            if (!v39)
            {
              char v17 = [v40 firstObject];
              uint64_t v18 = INIntentSlotValueTransformFromDataString(v17);
              goto LABEL_64;
            }
            uint64_t v13 = INIntentSlotValueTransformFromDataStrings(v40);
          }
          else
          {
            if (![v9 pairCustomObjectsCount]) {
              continue;
            }
            int v41 = [v9 repeated];
            uint64_t v42 = [v9 pairCustomObjects];
            unint64_t v12 = v42;
            if (!v41)
            {
              char v17 = [v42 firstObject];
              uint64_t v18 = INIntentSlotValueTransformFromCustomObject(v17);
              goto LABEL_64;
            }
            uint64_t v13 = INIntentSlotValueTransformFromCustomObjects(v42);
          }
        }
        char v17 = (void *)v13;
        unint64_t v43 = [v9 key];
        [v3 setObject:v17 forKey:v43];
LABEL_65:
      }
      uint64_t v6 = [v4 countByEnumeratingWithState:&v46 objects:v50 count:16];
      if (!v6)
      {
LABEL_68:

        goto LABEL_70;
      }
    }
  }
  id v3 = 0;
LABEL_70:

  return v3;
}

_INPBDictionary *INIntentSlotValueTransformToDictionary(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    uint64_t v2 = objc_alloc_init(_INPBDictionary);
    v5[0] = MEMORY[0x1E4F143A8];
    v5[1] = 3221225472;
    void v5[2] = __INIntentSlotValueTransformToDictionary_block_invoke;
    v5[3] = &unk_1E551D838;
    id v3 = v2;
    uint64_t v6 = v3;
    [v1 enumerateKeysAndObjectsUsingBlock:v5];
  }
  else
  {
    id v3 = 0;
  }

  return v3;
}

void __INIntentSlotValueTransformToDictionary_block_invoke(uint64_t a1, void *a2, void *a3)
{
  v59[1] = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v7 = objc_alloc_init(_INPBPair);
    [(_INPBPair *)v7 setKey:v5];
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      [(_INPBPair *)v7 setRepeated:1];
      char v8 = [v6 firstObject];
      objc_opt_class();
      char isKindOfClass = objc_opt_isKindOfClass();

      if (isKindOfClass)
      {
        int v10 = INIntentSlotValueTransformToStringValues(v6);
        [(_INPBPair *)v7 setPairStringValues:v10];
LABEL_70:

        [*(id *)(a1 + 32) addPair:v7];
        goto LABEL_71;
      }
      unint64_t v12 = [v6 firstObject];
      objc_opt_class();
      char v13 = objc_opt_isKindOfClass();

      if (v13)
      {
        int v10 = INIntentSlotValueTransformToURLValues(v6);
        [(_INPBPair *)v7 setPairUrlValues:v10];
        goto LABEL_70;
      }
      BOOL v14 = [v6 firstObject];
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        int v15 = [v6 firstObject];
        int v16 = objc_msgSend(v15, "_intents_isDouble");

        if (v16)
        {
          int v10 = INIntentSlotValueTransformToDoubleValues(v6);
          [(_INPBPair *)v7 setPairDoubleValues:v10];
          goto LABEL_70;
        }
      }
      else
      {
      }
      char v17 = [v6 firstObject];
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        uint64_t v18 = [v6 firstObject];
        int v19 = objc_msgSend(v18, "_intents_isInteger");

        if (v19)
        {
          int v10 = INIntentSlotValueTransformToIntegerValues(v6);
          [(_INPBPair *)v7 setPairIntegerValues:v10];
          goto LABEL_70;
        }
      }
      else
      {
      }
      uint64_t v20 = [v6 firstObject];
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        int v21 = [v6 firstObject];
        char v22 = [v21 unit];
        objc_opt_class();
        char v23 = objc_opt_isKindOfClass();

        if (v23)
        {
          int v10 = INIntentSlotValueTransformToDistanceValues(v6);
          [(_INPBPair *)v7 setPairDistanceValues:v10];
          goto LABEL_70;
        }
      }
      else
      {
      }
      uint64_t v24 = [v6 firstObject];
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        int v25 = [v6 firstObject];
        unsigned int v26 = [v25 unit];
        objc_opt_class();
        char v27 = objc_opt_isKindOfClass();

        if (v27)
        {
          int v10 = INIntentSlotValueTransformToTemperatureValues(v6);
          [(_INPBPair *)v7 setPairTemperatureValues:v10];
          goto LABEL_70;
        }
      }
      else
      {
      }
      char v30 = [v6 firstObject];
      objc_opt_class();
      char v31 = objc_opt_isKindOfClass();

      if (v31)
      {
        int v10 = INIntentSlotValueTransformToLocationValues(v6);
        [(_INPBPair *)v7 setPairLocationValues:v10];
        goto LABEL_70;
      }
      uint64_t v34 = [v6 firstObject];
      objc_opt_class();
      char v35 = objc_opt_isKindOfClass();

      if (v35)
      {
        int v10 = INIntentSlotValueTransformToContactValues(v6);
        [(_INPBPair *)v7 setPairPersonValues:v10];
        goto LABEL_70;
      }
      unint64_t v36 = [v6 firstObject];
      objc_opt_class();
      char v37 = objc_opt_isKindOfClass();

      if (v37)
      {
        int v10 = INIntentSlotValueTransformToCurrencyAmountValues(v6);
        [(_INPBPair *)v7 setPairCurrencyAmountValues:v10];
        goto LABEL_70;
      }
      uint64_t v38 = [v6 firstObject];
      objc_opt_class();
      char v39 = objc_opt_isKindOfClass();

      if (v39)
      {
        int v10 = INIntentSlotValueTransformToImageValues(v6);
        [(_INPBPair *)v7 setPairImageValues:v10];
        goto LABEL_70;
      }
      unsigned int v40 = [v6 firstObject];
      objc_opt_class();
      char v41 = objc_opt_isKindOfClass();

      if (v41)
      {
        int v10 = INIntentSlotValueTransformToDataStrings(v6);
        [(_INPBPair *)v7 setPairDataStrings:v10];
        goto LABEL_70;
      }
      uint64_t v42 = [v6 firstObject];
      objc_opt_class();
      char v43 = objc_opt_isKindOfClass();

      if (v43)
      {
        int v10 = INIntentSlotValueTransformToPaymentMethodValues(v6);
        [(_INPBPair *)v7 setPairPaymentMethodValues:v10];
        goto LABEL_70;
      }
      char v44 = [v6 firstObject];
      objc_opt_class();
      char v45 = objc_opt_isKindOfClass();

      if (v45)
      {
        int v10 = INIntentSlotValueTransformToCustomObjects(v6);
        [(_INPBPair *)v7 setPairCustomObjects:v10];
        goto LABEL_70;
      }
LABEL_71:

      goto LABEL_72;
    }
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      int v10 = INIntentSlotValueTransformToStringValue(v6);
      v59[0] = v10;
      uint64_t v11 = [MEMORY[0x1E4F1C978] arrayWithObjects:v59 count:1];
      [(_INPBPair *)v7 setPairStringValues:v11];
    }
    else
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        int v10 = INIntentSlotValueTransformToDataValue(v6);
        char v58 = v10;
        uint64_t v11 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v58 count:1];
        [(_INPBPair *)v7 setPairDataValues:v11];
      }
      else
      {
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          int v10 = INIntentSlotValueTransformToURLValue(v6);
          unint64_t v57 = v10;
          uint64_t v11 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v57 count:1];
          [(_INPBPair *)v7 setPairUrlValues:v11];
        }
        else
        {
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) != 0 && objc_msgSend(v6, "_intents_isDouble"))
          {
            int v10 = INIntentSlotValueTransformToDoubleValue(v6);
            uint64_t v56 = v10;
            uint64_t v11 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v56 count:1];
            [(_INPBPair *)v7 setPairDoubleValues:v11];
          }
          else
          {
            objc_opt_class();
            if ((objc_opt_isKindOfClass() & 1) != 0 && objc_msgSend(v6, "_intents_isInteger"))
            {
              int v10 = INIntentSlotValueTransformToIntegerValue(v6);
              uint64_t v55 = v10;
              uint64_t v11 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v55 count:1];
              [(_INPBPair *)v7 setPairIntegerValues:v11];
            }
            else
            {
              objc_opt_class();
              if ((objc_opt_isKindOfClass() & 1) != 0
                && ([v6 unit],
                    uint64_t v28 = objc_claimAutoreleasedReturnValue(),
                    objc_opt_class(),
                    char v29 = objc_opt_isKindOfClass(),
                    v28,
                    (v29 & 1) != 0))
              {
                int v10 = INIntentSlotValueTransformToDistanceValue(v6);
                unsigned int v54 = v10;
                uint64_t v11 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v54 count:1];
                [(_INPBPair *)v7 setPairDistanceValues:v11];
              }
              else
              {
                objc_opt_class();
                if ((objc_opt_isKindOfClass() & 1) != 0
                  && ([v6 unit],
                      char v32 = objc_claimAutoreleasedReturnValue(),
                      objc_opt_class(),
                      char v33 = objc_opt_isKindOfClass(),
                      v32,
                      (v33 & 1) != 0))
                {
                  int v10 = INIntentSlotValueTransformToTemperatureValue(v6);
                  char v53 = v10;
                  uint64_t v11 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v53 count:1];
                  [(_INPBPair *)v7 setPairTemperatureValues:v11];
                }
                else
                {
                  objc_opt_class();
                  if (objc_opt_isKindOfClass())
                  {
                    int v10 = INIntentSlotValueTransformToLocationValue(v6);
                    uint64_t v52 = v10;
                    uint64_t v11 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v52 count:1];
                    [(_INPBPair *)v7 setPairLocationValues:v11];
                  }
                  else
                  {
                    objc_opt_class();
                    if (objc_opt_isKindOfClass())
                    {
                      int v10 = INIntentSlotValueTransformToContactValue(v6);
                      uint64_t v51 = v10;
                      uint64_t v11 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v51 count:1];
                      [(_INPBPair *)v7 setPairPersonValues:v11];
                    }
                    else
                    {
                      objc_opt_class();
                      if (objc_opt_isKindOfClass())
                      {
                        int v10 = INIntentSlotValueTransformToCurrencyAmountValue(v6);
                        unint64_t v50 = v10;
                        uint64_t v11 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v50 count:1];
                        [(_INPBPair *)v7 setPairCurrencyAmountValues:v11];
                      }
                      else
                      {
                        objc_opt_class();
                        if (objc_opt_isKindOfClass())
                        {
                          int v10 = INIntentSlotValueTransformToImageValue(v6);
                          long long v49 = v10;
                          uint64_t v11 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v49 count:1];
                          [(_INPBPair *)v7 setPairImageValues:v11];
                        }
                        else
                        {
                          objc_opt_class();
                          if (objc_opt_isKindOfClass())
                          {
                            int v10 = INIntentSlotValueTransformToDataString(v6);
                            long long v48 = v10;
                            uint64_t v11 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v48 count:1];
                            [(_INPBPair *)v7 setPairDataStrings:v11];
                          }
                          else
                          {
                            objc_opt_class();
                            if (objc_opt_isKindOfClass())
                            {
                              int v10 = INIntentSlotValueTransformToPaymentMethodValue(v6);
                              long long v47 = v10;
                              uint64_t v11 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v47 count:1];
                              [(_INPBPair *)v7 setPairPaymentMethodValues:v11];
                            }
                            else
                            {
                              objc_opt_class();
                              if ((objc_opt_isKindOfClass() & 1) == 0) {
                                goto LABEL_71;
                              }
                              int v10 = INIntentSlotValueTransformToCustomObject(v6);
                              long long v46 = v10;
                              uint64_t v11 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v46 count:1];
                              [(_INPBPair *)v7 setPairCustomObjects:v11];
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

    goto LABEL_70;
  }
LABEL_72:
}

BOOL _INPBSetRadioStationIntentResponseReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  id v6 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
      return v7 == 0;
    }
    if (*(unsigned char *)(a2 + *v5))
    {
      int v7 = 1;
      return v7 == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    uint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v6) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        LOBYTE(v10) = 0;
        int v7 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      LOBYTE(v10) = 0;
    }
LABEL_14:
    if (v7) {
      BOOL v15 = 1;
    }
    else {
      BOOL v15 = (v10 & 7) == 4;
    }
    if (v15) {
      return v7 == 0;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      return 0;
    }
  }
}

BOOL _INPBIntentSlotVocabularyPolicyReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        char v17 = (_INPBIntentSlotVocabularyConcept *)objc_claimAutoreleasedReturnValue();
        if (v17) {
          [a1 addIntentSlotNames:v17];
        }
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v17 = objc_alloc_init(_INPBIntentSlotVocabularyConcept);
    if (!PBReaderPlaceMark() || !_INPBIntentSlotVocabularyConceptReadFrom(v17, a2))
    {

      return 0;
    }
    PBReaderRecallMark();
    if (v17) {
      objc_msgSend(a1, "addIntentSlotVocabularyConcepts:", v17, 0, 0);
    }
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _INPBTimerReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          uint64_t v16 = *v5;
          int v17 = *(unsigned __int8 *)(a2 + v16);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      uint64_t v16 = *v5;
      int v17 = *(unsigned __int8 *)(a2 + v16);
      if (*(unsigned char *)(a2 + v16)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v17 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          int v19 = objc_alloc_init(_INPBDataString);
          if (PBReaderPlaceMark() && _INPBDataStringReadFrom(v19, a2))
          {
            PBReaderRecallMark();
            objc_msgSend(a1, "setLabel:", v19, 0, 0);
            goto LABEL_31;
          }

          return 0;
        case 2u:
          uint64_t v21 = *v3;
          unint64_t v22 = *(void *)(a2 + v21);
          if (v22 <= 0xFFFFFFFFFFFFFFF7 && v22 + 8 <= *(void *)(a2 + *v4))
          {
            double v23 = *(double *)(*(void *)(a2 + *v7) + v22);
            *(void *)(a2 + v21) = v22 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + v16) = 1;
            double v23 = 0.0;
          }
          [a1 setDuration:v23];
          continue;
        case 3u:
          uint64_t v24 = *v3;
          unint64_t v25 = *(void *)(a2 + v24);
          if (v25 <= 0xFFFFFFFFFFFFFFF7 && v25 + 8 <= *(void *)(a2 + *v4))
          {
            double v26 = *(double *)(*(void *)(a2 + *v7) + v25);
            *(void *)(a2 + v24) = v25 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + v16) = 1;
            double v26 = 0.0;
          }
          [a1 setRemainingTime:v26];
          continue;
        case 4u:
          PBReaderReadString();
          int v19 = (_INPBDataString *)objc_claimAutoreleasedReturnValue();
          [a1 setIdentifier:v19];
LABEL_31:

          continue;
        case 5u:
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v29 = 0;
          while (2)
          {
            uint64_t v30 = *v3;
            uint64_t v31 = *(void *)(a2 + v30);
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
              *(void *)(a2 + v30) = v32;
              v29 |= (unint64_t)(v33 & 0x7F) << v27;
              if (v33 < 0)
              {
                v27 += 7;
                BOOL v15 = v28++ >= 9;
                if (v15)
                {
                  uint64_t v34 = 0;
                  goto LABEL_50;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v34 = 0;
          }
          else {
            uint64_t v34 = v29;
          }
LABEL_50:
          [a1 setState:v34];
          continue;
        case 6u:
          char v35 = 0;
          unsigned int v36 = 0;
          uint64_t v37 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v38 = *v3;
        uint64_t v39 = *(void *)(a2 + v38);
        unint64_t v40 = v39 + 1;
        if (v39 == -1 || v40 > *(void *)(a2 + *v4)) {
          break;
        }
        char v41 = *(unsigned char *)(*(void *)(a2 + *v7) + v39);
        *(void *)(a2 + v3_Block_object_dispose(&a9, 8) = v40;
        v37 |= (unint64_t)(v41 & 0x7F) << v35;
        if ((v41 & 0x80) == 0) {
          goto LABEL_52;
        }
        v35 += 7;
        BOOL v15 = v36++ >= 9;
        if (v15)
        {
          uint64_t v42 = 0;
          goto LABEL_55;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_52:
      uint64_t v42 = *(unsigned char *)(a2 + *v5) ? 0 : v37;
LABEL_55:
      [a1 setType:v42];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _INPBSearchForFilesIntentResponseReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_40;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_42;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_40:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_42:
        [a1 setSuccess:v19 != 0];
        goto LABEL_43;
      case 2u:
        uint64_t v24 = objc_alloc_init(_INPBString);
        if (!PBReaderPlaceMark() || !_INPBStringReadFrom(v24, a2)) {
          goto LABEL_45;
        }
        PBReaderRecallMark();
        if (v24) {
          objc_msgSend(a1, "addEntities:", v24, 0, 0);
        }
        goto LABEL_38;
      case 3u:
        uint64_t v24 = objc_alloc_init(_INPBInteger);
        if (!PBReaderPlaceMark() || (_INPBIntegerReadFrom(v24, a2) & 1) == 0) {
          goto LABEL_45;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setNumResults:", v24, 0, 0);
        goto LABEL_38;
      case 4u:
        uint64_t v24 = objc_alloc_init(_INPBString);
        if PBReaderPlaceMark() && (_INPBStringReadFrom(v24, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setQuery:", v24, 0, 0);
LABEL_38:

LABEL_43:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_45:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_43;
    }
  }
}

id getHKUnitClass()
{
  uint64_t v4 = 0;
  id v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)getHKUnitClass_softClass;
  uint64_t v7 = getHKUnitClass_softClass;
  if (!getHKUnitClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getHKUnitClass_block_invoke;
    v3[3] = &unk_1E5520EB8;
    void v3[4] = &v4;
    __getHKUnitClass_block_invoke((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_18CD08AB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getHKUnitClass_block_invoke(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!HealthKitLibraryCore_frameworkLibrary)
  {
    v4[1] = MEMORY[0x1E4F143A8];
    v4[2] = 3221225472;
    v4[3] = __HealthKitLibraryCore_block_invoke;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    void v4[5] = v4;
    long long v5 = xmmword_1E5519E10;
    uint64_t v6 = 0;
    HealthKitLibraryCore_frameworkLibrary = _sl_dlopen();
    uint64_t v2 = (void *)v4[0];
    if (!HealthKitLibraryCore_frameworkLibrary)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("HKUnit");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    uint64_t v2 = (void *)abort_report_np();
LABEL_8:
    free(v2);
  }
  getHKUnitClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __HealthKitLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  HealthKitLibraryCore_frameworkLibrary = result;
  return result;
}

__CFString *INDeleteHealthSampleIntentResponseCodeGetName(unint64_t a1)
{
  if (a1 > 6) {
    return 0;
  }
  else {
    return off_1E5519E28[a1];
  }
}

uint64_t _INPBSendMessageIntentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  long long v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = objc_alloc_init(_INPBIntentMetadata);
        if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_76;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntentMetadata:", v17, 0, 0);
        goto LABEL_62;
      case 2u:
        char v17 = objc_alloc_init(_INPBContact);
        uint64_t v33 = 0;
        uint64_t v34 = 0;
        if (!PBReaderPlaceMark() || !_INPBContactReadFrom(v17, a2)) {
          goto LABEL_76;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addRecipient:", v17, 0, 0);
        }
        goto LABEL_62;
      case 5u:
        char v17 = objc_alloc_init(_INPBString);
        if (!PBReaderPlaceMark() || (_INPBStringReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_76;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setContent:", v17, 0, 0);
        goto LABEL_62;
      case 6u:
        char v17 = objc_alloc_init(_INPBString);
        if (!PBReaderPlaceMark() || (_INPBStringReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_76;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setGroupName:", v17, 0, 0);
        goto LABEL_62;
      case 7u:
        char v17 = objc_alloc_init(_INPBDataString);
        if (!PBReaderPlaceMark() || !_INPBDataStringReadFrom(v17, a2)) {
          goto LABEL_76;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSpeakableGroupName:", v17, 0, 0);
        goto LABEL_62;
      case 8u:
        PBReaderReadString();
        char v17 = (_INPBIntentMetadata *)objc_claimAutoreleasedReturnValue();
        [a1 setConversationIdentifier:v17];
        goto LABEL_62;
      case 9u:
        PBReaderReadString();
        char v17 = (_INPBIntentMetadata *)objc_claimAutoreleasedReturnValue();
        [a1 setServiceName:v17];
        goto LABEL_62;
      case 0xAu:
        char v17 = objc_alloc_init(_INPBContact);
        if (!PBReaderPlaceMark() || (_INPBContactReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_76;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSender:", v17, 0, 0);
        goto LABEL_62;
      case 0xCu:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_69;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v21;
        }
LABEL_69:
        objc_msgSend(a1, "setEffect:", v25, v33, v34);
        goto LABEL_63;
      case 0xDu:
        char v17 = objc_alloc_init(_INPBSendMessageAttachment);
        uint64_t v33 = 0;
        uint64_t v34 = 0;
        if (PBReaderPlaceMark() && _INPBSendMessageAttachmentReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          if (v17) {
            objc_msgSend(a1, "addAttachments:", v17, 0, 0);
          }
LABEL_62:

LABEL_63:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_76:

        return 0;
      case 0xEu:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                uint64_t v32 = 0;
                goto LABEL_74;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v32 = 0;
        }
        else {
          uint64_t v32 = v28;
        }
LABEL_74:
        objc_msgSend(a1, "setOutgoingMessageType:", v32, v33, v34);
        goto LABEL_63;
      case 0xFu:
        PBReaderReadString();
        char v17 = (_INPBIntentMetadata *)objc_claimAutoreleasedReturnValue();
        [a1 setNotificationThreadIdentifier:v17];
        goto LABEL_62;
      case 0x10u:
        PBReaderReadString();
        char v17 = (_INPBIntentMetadata *)objc_claimAutoreleasedReturnValue();
        [a1 setAlternativeConversationIdentifier:v17];
        goto LABEL_62;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_63;
    }
  }
}

void sub_18CD0DDB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getCKKnowledgeStoreClass_block_invoke(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("CKKnowledgeStore");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getCKKnowledgeStoreClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    abort_report_np();
    CoreKnowledgeLibrary();
  }
}

void CoreKnowledgeLibrary()
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  v1[0] = 0;
  if (!CoreKnowledgeLibraryCore_frameworkLibrary)
  {
    v1[1] = MEMORY[0x1E4F143A8];
    v1[2] = 3221225472;
    v1[3] = __CoreKnowledgeLibraryCore_block_invoke;
    v1[4] = &__block_descriptor_40_e5_v8__0l;
    v1[5] = v1;
    long long v2 = xmmword_1E5519FB8;
    uint64_t v3 = 0;
    CoreKnowledgeLibraryCore_frameworkLibrary = _sl_dlopen();
    uint64_t v0 = (void *)v1[0];
    if (CoreKnowledgeLibraryCore_frameworkLibrary)
    {
      if (!v1[0]) {
        return;
      }
    }
    else
    {
      uint64_t v0 = (void *)abort_report_np();
    }
    free(v0);
  }
}

uint64_t __CoreKnowledgeLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  CoreKnowledgeLibraryCore_frameworkLibrary = result;
  return result;
}

void sub_18CD0E178(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

Class __getCKGenericConditionClass_block_invoke(uint64_t a1)
{
  CoreKnowledgeLibrary();
  Class result = objc_getClass("CKGenericCondition");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getCKGenericConditionClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = abort_report_np();
    return (Class)__56__INUserContextStore_userContextOfClass_withCompletion___block_invoke(v3);
  }
  return result;
}

BOOL _INPBContactListReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  long long v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 1) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        char v17 = objc_alloc_init(_INPBCondition);
        if (!PBReaderPlaceMark() || (_INPBConditionReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_32;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCondition:", v17, 0, 0);
LABEL_27:

        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_29:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v17 = objc_alloc_init(_INPBContact);
    if (!PBReaderPlaceMark() || !_INPBContactReadFrom(v17, a2))
    {
LABEL_32:

      return 0;
    }
    PBReaderRecallMark();
    if (v17) {
      objc_msgSend(a1, "addContact:", v17, 0, 0);
    }
    goto LABEL_27;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _INPBPayBillIntentReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  long long v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = objc_alloc_init(_INPBIntentMetadata);
        if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_58;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntentMetadata:", v17, 0, 0);
        goto LABEL_49;
      case 2u:
        char v17 = objc_alloc_init(_INPBBillPayeeValue);
        if (!PBReaderPlaceMark() || !_INPBBillPayeeValueReadFrom(v17, a2)) {
          goto LABEL_58;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setBillPayee:", v17, 0, 0);
        goto LABEL_49;
      case 4u:
        char v17 = objc_alloc_init(_INPBFinancialAccountValue);
        if (!PBReaderPlaceMark() || (_INPBFinancialAccountValueReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_58;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setFromAccount:", v17, 0, 0);
        goto LABEL_49;
      case 5u:
        char v17 = objc_alloc_init(_INPBPaymentAmountValue);
        if (!PBReaderPlaceMark() || (_INPBPaymentAmountValueReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_58;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTransactionAmount:", v17, 0, 0);
        goto LABEL_49;
      case 6u:
        char v17 = objc_alloc_init(_INPBDateTimeRange);
        if (!PBReaderPlaceMark() || (_INPBDateTimeRangeReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_58;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTransactionScheduledDate:", v17, 0, 0);
        goto LABEL_49;
      case 7u:
        char v17 = objc_alloc_init(_INPBString);
        if (!PBReaderPlaceMark() || (_INPBStringReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_58;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTransactionNote:", v17, 0, 0);
        goto LABEL_49;
      case 8u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_56;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v21;
        }
LABEL_56:
        [a1 setBillType:v25];
        goto LABEL_50;
      case 9u:
        char v17 = objc_alloc_init(_INPBDateTimeRange);
        if PBReaderPlaceMark() && (_INPBDateTimeRangeReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setDueDate:", v17, 0, 0);
LABEL_49:

LABEL_50:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_58:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_50;
    }
  }
}

void sub_18CD12EAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getCSSearchableIndexClass_block_invoke_59652(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!CoreSpotlightLibraryCore_frameworkLibrary_59653)
  {
    v4[1] = MEMORY[0x1E4F143A8];
    v4[2] = 3221225472;
    v4[3] = __CoreSpotlightLibraryCore_block_invoke_59654;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    void v4[5] = v4;
    long long v5 = xmmword_1E551A178;
    uint64_t v6 = 0;
    CoreSpotlightLibraryCore_frameworkLibrary_59653 = _sl_dlopen();
    long long v2 = (void *)v4[0];
    if (!CoreSpotlightLibraryCore_frameworkLibrary_59653)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("CSSearchableIndex");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    long long v2 = (void *)abort_report_np();
LABEL_8:
    free(v2);
  }
  getCSSearchableIndexClass_softClass_59651 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __CoreSpotlightLibraryCore_block_invoke_59654()
{
  uint64_t result = _sl_dlopen();
  CoreSpotlightLibraryCore_frameworkLibrary_59653 = result;
  return result;
}

INRentalCarReservation *INIntentSlotValueTransformFromRentalCarReservation(INRentalCarReservation *a1)
{
  if (a1)
  {
    long long v2 = a1;
    uint64_t v3 = [(INRentalCarReservation *)v2 reservation];
    uint64_t v21 = [INRentalCarReservation alloc];
    char v26 = [v3 itemReference];
    uint64_t v28 = INIntentSlotValueTransformFromDataString(v26);
    unsigned int v27 = [v3 reservationNumber];
    uint64_t v25 = [v3 bookingTime];
    unsigned int v18 = INIntentSlotValueTransformFromTimestamp(v25);
    int v4 = [v3 hasReservationStatus];
    uint64_t v5 = [v3 reservationStatus] - 2;
    if (v5 <= 3) {
      uint64_t v6 = v5 + 1;
    }
    else {
      uint64_t v6 = 0;
    }
    if (!v4) {
      uint64_t v6 = 0;
    }
    uint64_t v19 = v6;
    char v17 = [v3 reservationHolderName];
    char v24 = [v3 actions];
    uint64_t v16 = INIntentSlotValueTransformFromReservationActions(v24);
    unint64_t v23 = [v3 url];
    int v15 = INIntentSlotValueTransformFromURLValue(v23);
    unsigned int v20 = [(INRentalCarReservation *)v2 rentalCar];
    BOOL v14 = INIntentSlotValueTransformFromRentalCar(v20);
    uint64_t v7 = [(INRentalCarReservation *)v2 rentalDuration];
    char v8 = INIntentSlotValueTransformFromDateTimeRange(v7);
    unsigned int v9 = [(INRentalCarReservation *)v2 pickupLocation];
    unint64_t v10 = INIntentSlotValueTransformFromLocationValue(v9);
    uint64_t v11 = [(INRentalCarReservation *)v2 dropOffLocation];

    unint64_t v12 = INIntentSlotValueTransformFromLocationValue(v11);
    uint64_t v22 = [(INRentalCarReservation *)v21 initWithItemReference:v28 reservationNumber:v27 bookingTime:v18 reservationStatus:v19 reservationHolderName:v17 actions:v16 URL:v15 rentalCar:v14 rentalDuration:v8 pickupLocation:v10 dropOffLocation:v12];

    a1 = v22;
    uint64_t v1 = vars8;
  }
  return a1;
}

_INPBRentalCarReservation *INIntentSlotValueTransformToRentalCarReservation(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    long long v2 = objc_alloc_init(_INPBReservation);
    uint64_t v3 = [v1 itemReference];
    int v4 = INIntentSlotValueTransformToDataString(v3);
    [(_INPBReservation *)v2 setItemReference:v4];

    uint64_t v5 = [v1 reservationNumber];
    [(_INPBReservation *)v2 setReservationNumber:v5];

    uint64_t v6 = [v1 bookingTime];
    uint64_t v7 = INIntentSlotValueTransformToTimestamp(v6);
    [(_INPBReservation *)v2 setBookingTime:v7];

    unint64_t v8 = [v1 reservationStatus];
    if (v8 < 5) {
      uint64_t v9 = (v8 + 1);
    }
    else {
      uint64_t v9 = 0x7FFFFFFFLL;
    }
    [(_INPBReservation *)v2 setReservationStatus:v9];
    unint64_t v10 = [v1 reservationHolderName];
    [(_INPBReservation *)v2 setReservationHolderName:v10];

    uint64_t v11 = [v1 actions];
    unint64_t v12 = INIntentSlotValueTransformToReservationActions(v11);
    [(_INPBReservation *)v2 setActions:v12];

    char v13 = [v1 URL];
    BOOL v14 = INIntentSlotValueTransformToURLValue(v13);
    [(_INPBReservation *)v2 setUrl:v14];

    int v15 = objc_alloc_init(_INPBRentalCarReservation);
    [(_INPBRentalCarReservation *)v15 setReservation:v2];
    uint64_t v16 = [v1 rentalCar];
    char v17 = INIntentSlotValueTransformToRentalCar(v16);
    [(_INPBRentalCarReservation *)v15 setRentalCar:v17];

    unsigned int v18 = [v1 rentalDuration];
    uint64_t v19 = INIntentSlotValueTransformToDateTimeRange(v18);
    [(_INPBRentalCarReservation *)v15 setRentalDuration:v19];

    unsigned int v20 = [v1 pickupLocation];
    uint64_t v21 = INIntentSlotValueTransformToLocationValue(v20);
    [(_INPBRentalCarReservation *)v15 setPickupLocation:v21];

    uint64_t v22 = [v1 dropOffLocation];

    unint64_t v23 = INIntentSlotValueTransformToLocationValue(v22);
    [(_INPBRentalCarReservation *)v15 setDropOffLocation:v23];
  }
  else
  {
    int v15 = 0;
  }

  return v15;
}

id INIntentSlotValueTransformFromRentalCarReservations(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    long long v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          unint64_t v8 = INIntentSlotValueTransformFromRentalCarReservation(*(INRentalCarReservation **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    uint64_t v9 = (void *)[v2 copy];
  }
  else
  {
    uint64_t v9 = 0;
  }

  return v9;
}

id INIntentSlotValueTransformToRentalCarReservations(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    long long v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          unint64_t v8 = INIntentSlotValueTransformToRentalCarReservation(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    uint64_t v9 = (void *)[v2 copy];
  }
  else
  {
    uint64_t v9 = 0;
  }

  return v9;
}

id INIntentSlotValueRedactedRentalCarReservationFromRentalCarReservation(void *a1)
{
  id v1 = a1;

  return v1;
}

uint64_t _INPBRecurrenceValueReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (2)
    {
      if (!*(unsigned char *)(a2 + *v5))
      {
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v3;
          unint64_t v12 = *(void *)(a2 + v11);
          if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
          *(void *)(a2 + v11) = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_12;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        if (*(unsigned char *)(a2 + *v5)) {
          unint64_t v10 = 0;
        }
LABEL_14:
        int v16 = v10 & 7;
        if (!v15 && v16 != 4)
        {
          switch((v10 >> 3))
          {
            case 1u:
              char v18 = 0;
              unsigned int v19 = 0;
              uint64_t v20 = 0;
              while (1)
              {
                uint64_t v21 = *v3;
                unint64_t v22 = *(void *)(a2 + v21);
                if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
                  break;
                }
                char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
                *(void *)(a2 + v21) = v22 + 1;
                v20 |= (unint64_t)(v23 & 0x7F) << v18;
                if ((v23 & 0x80) == 0) {
                  goto LABEL_56;
                }
                v18 += 7;
                BOOL v14 = v19++ >= 9;
                if (v14)
                {
                  uint64_t v24 = 0;
                  goto LABEL_59;
                }
              }
              *(unsigned char *)(a2 + *v5) = 1;
LABEL_56:
              if (*(unsigned char *)(a2 + *v5)) {
                uint64_t v24 = 0;
              }
              else {
                uint64_t v24 = v20;
              }
LABEL_59:
              objc_msgSend(a1, "setOrdinal:", v24, v52, v53);
              goto LABEL_80;
            case 2u:
              char v25 = 0;
              unsigned int v26 = 0;
              uint64_t v27 = 0;
              while (2)
              {
                uint64_t v28 = *v3;
                unint64_t v29 = *(void *)(a2 + v28);
                if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
                  *(void *)(a2 + v2_Block_object_dispose(&a9, 8) = v29 + 1;
                  v27 |= (unint64_t)(v30 & 0x7F) << v25;
                  if (v30 < 0)
                  {
                    v25 += 7;
                    BOOL v14 = v26++ >= 9;
                    if (v14)
                    {
                      uint64_t v31 = 0;
                      goto LABEL_64;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                uint64_t v31 = 0;
              }
              else {
                uint64_t v31 = v27;
              }
LABEL_64:
              objc_msgSend(a1, "setInterval:", v31, v52, v53);
              goto LABEL_80;
            case 3u:
              char v32 = 0;
              unsigned int v33 = 0;
              uint64_t v34 = 0;
              while (2)
              {
                uint64_t v35 = *v3;
                unint64_t v36 = *(void *)(a2 + v35);
                if (v36 == -1 || v36 >= *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
                  *(void *)(a2 + v35) = v36 + 1;
                  v34 |= (unint64_t)(v37 & 0x7F) << v32;
                  if (v37 < 0)
                  {
                    v32 += 7;
                    BOOL v14 = v33++ >= 9;
                    if (v14)
                    {
                      uint64_t v38 = 0;
                      goto LABEL_69;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                uint64_t v38 = 0;
              }
              else {
                uint64_t v38 = v34;
              }
LABEL_69:
              objc_msgSend(a1, "setFrequency:", v38, v52, v53);
              goto LABEL_80;
            case 4u:
              if (v16 == 2)
              {
                uint64_t v52 = 0;
                uint64_t v53 = 0;
                uint64_t result = PBReaderPlaceMark();
                if (!result) {
                  return result;
                }
                while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4) && !*(unsigned char *)(a2 + *v5))
                {
                  char v39 = 0;
                  unsigned int v40 = 0;
                  uint64_t v41 = 0;
                  while (1)
                  {
                    uint64_t v42 = *v3;
                    unint64_t v43 = *(void *)(a2 + v42);
                    if (v43 == -1 || v43 >= *(void *)(a2 + *v4)) {
                      break;
                    }
                    char v44 = *(unsigned char *)(*(void *)(a2 + *v7) + v43);
                    *(void *)(a2 + v42) = v43 + 1;
                    v41 |= (unint64_t)(v44 & 0x7F) << v39;
                    if (v44 < 0)
                    {
                      v39 += 7;
                      BOOL v14 = v40++ >= 9;
                      if (!v14) {
                        continue;
                      }
                    }
                    goto LABEL_54;
                  }
                  *(unsigned char *)(a2 + *v5) = 1;
LABEL_54:
                  PBRepeatedInt32Add();
                }
                PBReaderRecallMark();
              }
              else
              {
                char v45 = 0;
                unsigned int v46 = 0;
                uint64_t v47 = 0;
                while (1)
                {
                  uint64_t v48 = *v3;
                  unint64_t v49 = *(void *)(a2 + v48);
                  if (v49 == -1 || v49 >= *(void *)(a2 + *v4)) {
                    break;
                  }
                  char v50 = *(unsigned char *)(*(void *)(a2 + *v7) + v49);
                  *(void *)(a2 + v4_Block_object_dispose(&a9, 8) = v49 + 1;
                  v47 |= (unint64_t)(v50 & 0x7F) << v45;
                  if (v50 < 0)
                  {
                    v45 += 7;
                    BOOL v14 = v46++ >= 9;
                    if (!v14) {
                      continue;
                    }
                  }
                  goto LABEL_79;
                }
                *(unsigned char *)(a2 + *v5) = 1;
LABEL_79:
                PBRepeatedInt32Add();
              }
LABEL_80:
              if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
                return *(unsigned char *)(a2 + *v5) == 0;
              }
              continue;
            default:
              if (PBReaderSkipValueWithTag()) {
                goto LABEL_80;
              }
              return 0;
          }
        }
      }
      break;
    }
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t INPreferredCallProviderHasBackingType(unint64_t a1)
{
  return (a1 < 4) & (0xEu >> (a1 & 0xF));
}

uint64_t INPreferredCallProviderGetBackingType(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) >= 3) {
    return 0x7FFFFFFFLL;
  }
  else {
    return (a1 + 1);
  }
}

uint64_t INPreferredCallProviderGetFacadeType(int a1, int a2)
{
  uint64_t v2 = (a2 - 2);
  if (v2 <= 2) {
    uint64_t v3 = v2 + 1;
  }
  else {
    uint64_t v3 = 0;
  }
  if (a1) {
    return v3;
  }
  else {
    return 0;
  }
}

__CFString *INPreferredCallProviderGetName(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2) {
    return @"unknown";
  }
  else {
    return off_1E551A370[a1 - 1];
  }
}

uint64_t INPreferredCallProviderWithString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"telephonyProvider"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"facetimeProvider"])
  {
    uint64_t v2 = 2;
  }
  else if ([v1 isEqualToString:@"thirdPartyProvider"])
  {
    uint64_t v2 = 3;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INPreferredCallProviderGetLocalizedName(uint64_t a1, void *a2)
{
  id v3 = a2;
  switch(a1)
  {
    case 3:
      uint64_t v4 = @"third party provider";
      goto LABEL_7;
    case 2:
      uint64_t v4 = @"facetime provider";
      goto LABEL_7;
    case 1:
      uint64_t v4 = @"telephony provider";
LABEL_7:
      uint64_t v5 = INLocalizedStringWithLocalizer(v4, v4, v3);
      goto LABEL_9;
  }
  uint64_t v5 = 0;
LABEL_9:

  return v5;
}

void sub_18CD1944C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getDNDAvailabilityServiceClass_block_invoke(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!DoNotDisturbLibraryCore_frameworkLibrary)
  {
    v4[1] = MEMORY[0x1E4F143A8];
    v4[2] = 3221225472;
    v4[3] = __DoNotDisturbLibraryCore_block_invoke;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    void v4[5] = v4;
    long long v5 = xmmword_1E551A3B0;
    uint64_t v6 = 0;
    DoNotDisturbLibraryCore_frameworkLibrary = _sl_dlopen();
    uint64_t v2 = (void *)v4[0];
    if (!DoNotDisturbLibraryCore_frameworkLibrary)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("DNDAvailabilityService");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    uint64_t v2 = (void *)abort_report_np();
LABEL_8:
    free(v2);
  }
  getDNDAvailabilityServiceClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __DoNotDisturbLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  DoNotDisturbLibraryCore_frameworkLibrary = result;
  return result;
}

BOOL INRelativeReferenceHasBackingType(uint64_t a1)
{
  return (unint64_t)(a1 - 1) < 2;
}

uint64_t INRelativeReferenceGetBackingType(uint64_t a1)
{
  if (a1 == 1) {
    unsigned int v1 = 1;
  }
  else {
    unsigned int v1 = 0x7FFFFFFF;
  }
  if (a1 == 2) {
    return 2;
  }
  else {
    return v1;
  }
}

uint64_t INRelativeReferenceGetFacadeType(int a1, int a2)
{
  uint64_t v2 = 2 * (a2 == 2);
  if (a2 == 1) {
    uint64_t v2 = 1;
  }
  if (a1) {
    return v2;
  }
  else {
    return 0;
  }
}

__CFString *INRelativeReferenceGetName(uint64_t a1)
{
  unsigned int v1 = @"unknown";
  if (a1 == 2) {
    unsigned int v1 = @"previous";
  }
  if (a1 == 1) {
    return @"next";
  }
  else {
    return v1;
  }
}

uint64_t INRelativeReferenceWithString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"next"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"previous"])
  {
    uint64_t v2 = 2;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INRelativeReferenceGetLocalizedName(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1 == 2)
  {
    uint64_t v4 = @"previous";
    goto LABEL_5;
  }
  if (a1 == 1)
  {
    uint64_t v4 = @"next";
LABEL_5:
    long long v5 = INLocalizedStringWithLocalizer(v4, v4, v3);
    goto LABEL_7;
  }
  long long v5 = 0;
LABEL_7:

  return v5;
}

void sub_18CD1A090(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getCNLabeledValueClass_60805()
{
  uint64_t v4 = 0;
  long long v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)getCNLabeledValueClass_softClass_60839;
  uint64_t v7 = getCNLabeledValueClass_softClass_60839;
  if (!getCNLabeledValueClass_softClass_60839)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getCNLabeledValueClass_block_invoke_60840;
    v3[3] = &unk_1E5520EB8;
    void v3[4] = &v4;
    __getCNLabeledValueClass_block_invoke_60840((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_18CD1A188(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getCNPhoneNumberClass_block_invoke(uint64_t a1)
{
  ContactsLibrary_60820();
  Class result = objc_getClass("CNPhoneNumber");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getCNPhoneNumberClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = abort_report_np();
    return (Class)__getCNPostalAddressClass_block_invoke(v3);
  }
  return result;
}

Class __getCNPostalAddressClass_block_invoke(uint64_t a1)
{
  ContactsLibrary_60820();
  Class result = objc_getClass("CNPostalAddress");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getCNPostalAddressClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = abort_report_np();
    return (Class)__getCNContactRelationClass_block_invoke(v3);
  }
  return result;
}

Class __getCNContactRelationClass_block_invoke(uint64_t a1)
{
  ContactsLibrary_60820();
  Class result = objc_getClass("CNContactRelation");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getCNContactRelationClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = abort_report_np();
    return (Class)__getCNInstantMessageAddressClass_block_invoke(v3);
  }
  return result;
}

void __getCNInstantMessageAddressClass_block_invoke(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("CNInstantMessageAddress");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getCNInstantMessageAddressClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    abort_report_np();
    ContactsLibrary_60820();
  }
}

void ContactsLibrary_60820()
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  v1[0] = 0;
  if (!ContactsLibraryCore_frameworkLibrary_60823)
  {
    v1[1] = MEMORY[0x1E4F143A8];
    v1[2] = 3221225472;
    v1[3] = __ContactsLibraryCore_block_invoke_60824;
    v1[4] = &__block_descriptor_40_e5_v8__0l;
    v1[5] = v1;
    long long v2 = xmmword_1E551A3C8;
    uint64_t v3 = 0;
    ContactsLibraryCore_frameworkLibrary_60823 = _sl_dlopen();
    uint64_t v0 = (void *)v1[0];
    if (ContactsLibraryCore_frameworkLibrary_60823)
    {
      if (!v1[0]) {
        return;
      }
    }
    else
    {
      uint64_t v0 = (void *)abort_report_np();
    }
    free(v0);
  }
}

uint64_t __ContactsLibraryCore_block_invoke_60824()
{
  uint64_t result = _sl_dlopen();
  ContactsLibraryCore_frameworkLibrary_60823 = result;
  return result;
}

void __getCNLabeledValueClass_block_invoke_60840(uint64_t a1)
{
  ContactsLibrary_60820();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("CNLabeledValue");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getCNLabeledValueClass_softClass_60839 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    long long v2 = (INContactCard *)abort_report_np();
    [(INContactCard *)v2 encodeWithCoder:v4];
  }
}

__CFString *INUpdateEventIntentResponseCodeGetName(unint64_t a1)
{
  if (a1 > 7) {
    return 0;
  }
  else {
    return off_1E551A3E0[a1];
  }
}

BOOL _INPBEndWorkoutIntentResponseReadFrom(uint64_t a1, uint64_t a2)
{
  SEL v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  long long v5 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v6 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
      return v7 == 0;
    }
    if (*(unsigned char *)(a2 + *v5))
    {
      int v7 = 1;
      return v7 == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    uint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v6) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        LOBYTE(v10) = 0;
        int v7 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      LOBYTE(v10) = 0;
    }
LABEL_14:
    if (v7) {
      BOOL v15 = 1;
    }
    else {
      BOOL v15 = (v10 & 7) == 4;
    }
    if (v15) {
      return v7 == 0;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      return 0;
    }
  }
}

BOOL _INPBSaveProfileInCarIntentReadFrom(void *a1, uint64_t a2)
{
  SEL v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  long long v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        char v18 = objc_alloc_init(_INPBString);
        if (!PBReaderPlaceMark() || (_INPBStringReadFrom(v18, a2) & 1) == 0)
        {
LABEL_35:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setProfileName:", v18, 0, 0);
        goto LABEL_30;
      }
      if (v17 == 2) {
        break;
      }
      if (v17 == 1)
      {
        char v18 = objc_alloc_init(_INPBIntentMetadata);
        if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_35;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntentMetadata:", v18, 0, 0);
LABEL_30:

        goto LABEL_32;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_32:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v18 = objc_alloc_init(_INPBInteger);
    if (!PBReaderPlaceMark() || (_INPBIntegerReadFrom(v18, a2) & 1) == 0) {
      goto LABEL_35;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setProfileNumber:", v18, 0, 0);
    goto LABEL_30;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _INPBPaymentAmountValueReadFrom(void *a1, uint64_t a2)
{
  SEL v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  long long v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v24 = objc_alloc_init(_INPBCurrencyAmountValue);
        if (!PBReaderPlaceMark() || !_INPBCurrencyAmountValueReadFrom(v24, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setValue:", v24, 0, 0);
      }
      else if ((v10 >> 3) == 2)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_33;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_36;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v23 = 0;
        }
        else {
          uint64_t v23 = v19;
        }
LABEL_36:
        [a1 setAmountType:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t __INCoalesceValidMessagingParameterCombinations_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  id v5 = v3;
  id v6 = v4;
  int v7 = [v5 containsObject:@"speakableGroupName"];
  int v8 = [v5 containsObject:@"recipients"];
  int v9 = v8;
  if (v7 && (v8 & 1) != 0) {
    goto LABEL_10;
  }
  if (v7)
  {
    unint64_t v10 = [v5 setByAddingObject:@"recipients"];
    char v11 = [v6 containsObject:v10];

    if (v11) {
      goto LABEL_9;
    }
  }
  if (!v9) {
    goto LABEL_10;
  }
  unint64_t v12 = [v5 setByAddingObject:@"speakableGroupName"];
  if (![v6 containsObject:v12])
  {
    char v13 = (void *)[v5 mutableCopy];
    [v13 removeObject:@"recipients"];
    [v13 addObject:@"speakableGroupName"];
    char v14 = [v6 containsObject:v13];

    if (v14) {
      goto LABEL_9;
    }
LABEL_10:
    uint64_t v15 = 1;
    goto LABEL_11;
  }

LABEL_9:
  uint64_t v15 = 0;
LABEL_11:

  return v15;
}

uint64_t _INPBRideStatusReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        char v17 = (_INPBRideVehicle *)objc_claimAutoreleasedReturnValue();
        [a1 setRideIdentifier:v17];
        goto LABEL_70;
      case 2u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_77;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v21;
        }
LABEL_77:
        objc_msgSend(a1, "setPhase:", v25, v26, v27);
        goto LABEL_71;
      case 3u:
        char v17 = objc_alloc_init(_INPBRideVehicle);
        if (!PBReaderPlaceMark() || !_INPBRideVehicleReadFrom(v17, a2)) {
          goto LABEL_79;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setVehicle:", v17, 0, 0);
        goto LABEL_70;
      case 4u:
        char v17 = objc_alloc_init(_INPBRideDriver);
        if (!PBReaderPlaceMark() || !_INPBRideDriverReadFrom(v17, a2)) {
          goto LABEL_79;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setDriver:", v17, 0, 0);
        goto LABEL_70;
      case 5u:
        char v17 = objc_alloc_init(_INPBTimestamp);
        if (!PBReaderPlaceMark() || (_INPBTimestampReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_79;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEstimatedPickupDate:", v17, 0, 0);
        goto LABEL_70;
      case 6u:
        char v17 = objc_alloc_init(_INPBTimestamp);
        if (!PBReaderPlaceMark() || (_INPBTimestampReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_79;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEstimatedDropOffDate:", v17, 0, 0);
        goto LABEL_70;
      case 7u:
        char v17 = objc_alloc_init(_INPBLocationValue);
        if (!PBReaderPlaceMark() || !_INPBLocationValueReadFrom(v17, a2)) {
          goto LABEL_79;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPickupLocation:", v17, 0, 0);
        goto LABEL_70;
      case 8u:
        char v17 = objc_alloc_init(_INPBLocationValue);
        uint64_t v26 = 0;
        uint64_t v27 = 0;
        if (!PBReaderPlaceMark() || !_INPBLocationValueReadFrom(v17, a2)) {
          goto LABEL_79;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addWaypoints:", v17, 0, 0);
        }
        goto LABEL_70;
      case 9u:
        char v17 = objc_alloc_init(_INPBLocationValue);
        if (!PBReaderPlaceMark() || !_INPBLocationValueReadFrom(v17, a2)) {
          goto LABEL_79;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setDropOffLocation:", v17, 0, 0);
        goto LABEL_70;
      case 0xAu:
        char v17 = objc_alloc_init(_INPBRideOption);
        if (!PBReaderPlaceMark() || (_INPBRideOptionReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_79;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRideOption:", v17, 0, 0);
        goto LABEL_70;
      case 0xBu:
        char v17 = objc_alloc_init(_INPBUserActivity);
        if (!PBReaderPlaceMark() || !_INPBUserActivityReadFrom(v17, a2)) {
          goto LABEL_79;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setUserActivityForCancelingInApplication:", v17, 0, 0);
        goto LABEL_70;
      case 0xCu:
        char v17 = objc_alloc_init(_INPBTimestamp);
        if (!PBReaderPlaceMark() || (_INPBTimestampReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_79;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEstimatedPickupEndDate:", v17, 0, 0);
        goto LABEL_70;
      case 0xDu:
        char v17 = objc_alloc_init(_INPBRideCompletionStatus);
        if (!PBReaderPlaceMark() || (_INPBRideCompletionStatusReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_79;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCompletionStatus:", v17, 0, 0);
        goto LABEL_70;
      case 0xEu:
        char v17 = objc_alloc_init(_INPBUserActivity);
        uint64_t v26 = 0;
        uint64_t v27 = 0;
        if (!PBReaderPlaceMark() || !_INPBUserActivityReadFrom(v17, a2)) {
          goto LABEL_79;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addAdditionalActionItems:", v17, 0, 0);
        }
        goto LABEL_70;
      case 0xFu:
        char v17 = objc_alloc_init(_INPBDateTimeRangeValue);
        if PBReaderPlaceMark() && (_INPBDateTimeRangeValueReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setScheduledPickupTime:", v17, 0, 0);
LABEL_70:

LABEL_71:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_79:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_71;
    }
  }
}

id INLocalizedStringFromBundle(void *a1, void *a2, void *a3, void *a4, uint64_t a5, void *a6)
{
  uint64_t v30 = *MEMORY[0x1E4F143B8];
  id v11 = a1;
  id v12 = a2;
  id v13 = a3;
  if (a5)
  {
    unint64_t v23 = a6;
    char v24 = v12;
    [a4 preferredLocalizationsForBundle:a5];
    long long v25 = 0u;
    long long v26 = 0u;
    long long v27 = 0u;
    long long v28 = 0u;
    id v14 = (id)objc_claimAutoreleasedReturnValue();
    uint64_t v15 = [v14 countByEnumeratingWithState:&v25 objects:v29 count:16];
    if (v15)
    {
      uint64_t v16 = v15;
      uint64_t v17 = *(void *)v26;
      while (2)
      {
        for (uint64_t i = 0; i != v16; ++i)
        {
          if (*(void *)v26 != v17) {
            objc_enumerationMutation(v14);
          }
          char v19 = *(void **)(*((void *)&v25 + 1) + 8 * i);
          unsigned int v20 = (void *)CFBundleCopyLocalizedStringForLocalization();
          if (([v20 isEqualToString:@"<invalid_language>"] & 1) == 0)
          {
            if (v23) {
              void *v23 = v19;
            }
            id v21 = [v20 variantFittingPresentationWidth:20];

            id v12 = v24;
            goto LABEL_14;
          }
        }
        uint64_t v16 = [v14 countByEnumeratingWithState:&v25 objects:v29 count:16];
        if (v16) {
          continue;
        }
        break;
      }
    }

    id v12 = v24;
    id v21 = v24;
LABEL_14:
  }
  else
  {
    id v21 = v12;
  }

  return v21;
}

id INLocalizedStringFromCodable(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a1;
  id v10 = a2;
  id v11 = a3;
  id v12 = a4;
  id v13 = [v11 bundleIdentifier];
  id v14 = (const void *)[v12 bundleWithIdentifier:v13 fileURL:0];

  if (v14)
  {
    CFRetain(v14);
    v21[0] = MEMORY[0x1E4F143A8];
    v21[1] = 3221225472;
    v21[2] = __INLocalizedStringFromCodable_block_invoke;
    v21[3] = &__block_descriptor_40_e5_v8__0l;
    v21[4] = v14;
    uint64_t v15 = (void (**)(void))MEMORY[0x192F984C0](v21);
    uint64_t v16 = [v11 tableName];
    uint64_t v17 = INLocalizedStringFromBundle(v9, v9, v16, v12, (uint64_t)v14, a5);

    if ([v17 isEqualToString:v9]) {
      unsigned int v18 = v10;
    }
    else {
      unsigned int v18 = v17;
    }
    id v19 = v18;

    v15[2](v15);
  }
  else
  {
    id v19 = v10;
  }

  return v19;
}

void sub_18CD21888(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(v1 + 16))(v1);
  _Unwind_Resume(a1);
}

void __INLocalizedStringFromCodable_block_invoke(uint64_t a1)
{
}

id INLocalizedFormatStringFromSlotComposing(void *a1, void *a2, void *a3, __CFBundle *a4, void *a5, void *a6, void *a7, void *a8)
{
  id v15 = a1;
  id v16 = a2;
  id v17 = a3;
  id v18 = a5;
  id v19 = a6;
  id v20 = a7;
  id v21 = (void *)[v16 mutableCopy];
  if (a4)
  {
    CFBundleGetDevelopmentRegion(a4);
    *a8 = (id)objc_claimAutoreleasedReturnValue();
    if (v15)
    {
      uint64_t v22 = INLocalizedStringFromBundle(v15, v15, v17, v18, (uint64_t)a4, a8);
      if ([v22 length] && (objc_msgSend(v15, "isEqualToString:", v22) & 1) == 0)
      {
        uint64_t v24 = [v22 mutableCopy];
      }
      else
      {
        unint64_t v23 = INLocalizedStringFromBundle(v16, v16, v17, v18, (uint64_t)a4, a8);
        uint64_t v24 = [v23 mutableCopy];

        id v21 = v23;
      }

      id v21 = (void *)v24;
      if (!v16) {
        goto LABEL_13;
      }
      goto LABEL_11;
    }
  }
  else
  {
    *a8 = @"en";
  }
  if (!v16) {
    goto LABEL_13;
  }
LABEL_11:
  if (v21)
  {
    uint64_t v28 = MEMORY[0x1E4F143A8];
    uint64_t v29 = 3221225472;
    uint64_t v30 = __INLocalizedFormatStringFromSlotComposing_block_invoke;
    uint64_t v31 = &unk_1E551A4E0;
    id v32 = v20;
    id v33 = v19;
    long long v25 = INFillOutStringWithStringsDict(v16, v21, &v28);
    uint64_t v26 = objc_msgSend(v25, "mutableCopy", v28, v29, v30, v31);

    id v21 = (void *)v26;
  }
LABEL_13:

  return v21;
}

id __INLocalizedFormatStringFromSlotComposing_block_invoke(uint64_t a1, void *a2, uint64_t *a3)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = [*(id *)(a1 + 32) objectForKeyedSubscript:v5];
  if (!v6 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
  {

    long long v22 = 0u;
    long long v23 = 0u;
    long long v20 = 0u;
    long long v21 = 0u;
    char v8 = objc_msgSend(*(id *)(a1 + 40), "intentSlotDescriptions", 0);
    uint64_t v9 = [v8 countByEnumeratingWithState:&v20 objects:v24 count:16];
    if (!v9) {
      goto LABEL_13;
    }
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)v21;
LABEL_7:
    uint64_t v12 = 0;
    while (1)
    {
      if (*(void *)v21 != v11) {
        objc_enumerationMutation(v8);
      }
      id v13 = *(void **)(*((void *)&v20 + 1) + 8 * v12);
      id v14 = [v13 facadePropertyName];
      int v15 = [v14 isEqualToString:v5];

      if (v15) {
        break;
      }
      if (v10 == ++v12)
      {
        uint64_t v10 = [v8 countByEnumeratingWithState:&v20 objects:v24 count:16];
        if (v10) {
          goto LABEL_7;
        }
LABEL_13:

        id v6 = 0;
        goto LABEL_23;
      }
    }
    id v16 = [*(id *)(a1 + 40) valueForKey:v5];
    uint64_t v17 = [v13 valueType];
    if (v17 == 24)
    {
      uint64_t v18 = 0;
    }
    else
    {
      id v6 = 0;
      if (v17 != 21)
      {
LABEL_22:

        goto LABEL_23;
      }
      uint64_t v18 = 2;
    }
    *a3 = v18;
    id v6 = v16;
    goto LABEL_22;
  }
  if (objc_msgSend(v6, "_intents_isInteger"))
  {
    uint64_t v7 = 1;
  }
  else
  {
    if (!objc_msgSend(v6, "_intents_isDouble")) {
      goto LABEL_23;
    }
    uint64_t v7 = 2;
  }
  *a3 = v7;
LABEL_23:

  return v6;
}

id INFillOutStringWithStringsDict(void *a1, void *a2, void *a3)
{
  uint64_t v177 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v156 = a2;
  v155 = a3;
  if (!v5)
  {
    id v41 = 0;
    goto LABEL_123;
  }
  id v6 = objc_msgSend(MEMORY[0x1E4F28FD8], "_intents_sharedFormatRegularExpression");
  uint64_t v7 = objc_msgSend(v6, "matchesInString:options:range:", v5, 0, 0, objc_msgSend(v5, "length"));

  id v159 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  long long v170 = 0u;
  long long v171 = 0u;
  long long v172 = 0u;
  long long v173 = 0u;
  id v8 = v7;
  uint64_t v9 = [v8 countByEnumeratingWithState:&v170 objects:v176 count:16];
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)v171;
    do
    {
      for (uint64_t i = 0; i != v10; ++i)
      {
        if (*(void *)v171 != v11) {
          objc_enumerationMutation(v8);
        }
        id v13 = [*(id *)(*((void *)&v170 + 1) + 8 * i) resultByAdjustingRangesWithOffset:0];
        uint64_t v14 = [v13 rangeAtIndex:1];
        id v16 = objc_msgSend(v5, "substringWithRange:", v14, v15);
        id v169 = v16;
        _INStringExtractKeyPathAndFunctions(&v169, 0);
        id v17 = v169;

        objc_msgSend(v159, "if_addObjectIfNonNil:", v17);
      }
      uint64_t v10 = [v8 countByEnumeratingWithState:&v170 objects:v176 count:16];
    }
    while (v10);
  }
  id v150 = v5;

  uint64_t v18 = objc_msgSend(MEMORY[0x1E4F28FD8], "_intents_sharedStringsDictFormatRegularExpression");
  id v19 = objc_msgSend(v18, "matchesInString:options:range:", v156, 0, 0, objc_msgSend(v156, "length"));

  v152 = objc_msgSend(MEMORY[0x1E4F1CA48], "arrayWithCapacity:", objc_msgSend(v19, "count"));
  v153 = objc_msgSend(MEMORY[0x1E4F1CA48], "arrayWithCapacity:", objc_msgSend(v19, "count"));
  long long v165 = 0u;
  long long v166 = 0u;
  long long v167 = 0u;
  long long v168 = 0u;
  id obj = v19;
  uint64_t v157 = [obj countByEnumeratingWithState:&v165 objects:v175 count:16];
  if (v157)
  {
    uint64_t v154 = *(void *)v166;
    do
    {
      uint64_t v20 = 0;
      do
      {
        if (*(void *)v166 != v154) {
          objc_enumerationMutation(obj);
        }
        uint64_t v158 = v20;
        uint64_t v21 = [*(id *)(*((void *)&v165 + 1) + 8 * v20) rangeAtIndex:1];
        objc_msgSend(v156, "substringWithRange:", v21, v22);
        id v23 = (id)objc_claimAutoreleasedReturnValue();
        long long v161 = 0u;
        long long v162 = 0u;
        long long v163 = 0u;
        long long v164 = 0u;
        id v24 = v159;
        uint64_t v25 = [v24 countByEnumeratingWithState:&v161 objects:v174 count:16];
        uint64_t v26 = v23;
        if (v25)
        {
          uint64_t v27 = v25;
          uint64_t v28 = *(void *)v162;
          uint64_t v26 = v23;
          do
          {
            for (uint64_t j = 0; j != v27; ++j)
            {
              if (*(void *)v162 != v28) {
                objc_enumerationMutation(v24);
              }
              uint64_t v30 = *(void **)(*((void *)&v161 + 1) + 8 * j);
              uint64_t v31 = [NSString stringWithFormat:@".%@", v23];
              int v32 = [v30 hasSuffix:v31];

              if (v32)
              {
                id v33 = v30;

                uint64_t v26 = v33;
              }
            }
            uint64_t v27 = [v24 countByEnumeratingWithState:&v161 objects:v174 count:16];
          }
          while (v27);
        }

        uint64_t v160 = 0;
        uint64_t v34 = v155[2](v155, v26, &v160);
        if (v34)
        {
          [v152 addObject:v34];
          uint64_t v35 = [NSNumber numberWithInteger:v160];
          [v153 addObject:v35];
        }
        uint64_t v20 = v158 + 1;
      }
      while (v158 + 1 != v157);
      uint64_t v157 = [obj countByEnumeratingWithState:&v165 objects:v175 count:16];
    }
    while (v157);
  }

  if ([v152 count] != 1)
  {
    id v5 = v150;
    if ([v152 count] == 2)
    {
      uint64_t v42 = [v153 objectAtIndexedSubscript:0];
      uint64_t v43 = [v42 integerValue];

      if (v43 == 2) {
        goto LABEL_61;
      }
      if (v43 != 1)
      {
        if (v43) {
          goto LABEL_121;
        }
        char v44 = [v153 objectAtIndexedSubscript:1];
        uint64_t v45 = [v44 integerValue];

        switch(v45)
        {
          case 2:
            unsigned int v75 = NSString;
            char v39 = [v152 objectAtIndexedSubscript:0];
            uint64_t v76 = [v39 intValue];
            goto LABEL_75;
          case 1:
            unsigned int v46 = NSString;
            char v39 = [v152 objectAtIndexedSubscript:0];
            uint64_t v47 = [v39 intValue];
            goto LABEL_72;
          case 0:
            unsigned int v46 = NSString;
            char v39 = [v152 objectAtIndexedSubscript:0];
            uint64_t v47 = [v39 intValue];
LABEL_60:
            unsigned int v61 = [v152 objectAtIndexedSubscript:1];
            uint64_t v62 = [v61 intValue];
LABEL_73:
            objc_msgSend(v46, "localizedStringWithFormat:", v156, v47, v62);
LABEL_76:
            id v41 = (id)objc_claimAutoreleasedReturnValue();

            goto LABEL_77;
        }
      }
      uint64_t v59 = [v153 objectAtIndexedSubscript:1];
      uint64_t v60 = [v59 integerValue];

      if (v60 != 2)
      {
        if (v60 != 1)
        {
          if (!v60)
          {
            unsigned int v46 = NSString;
            char v39 = [v152 objectAtIndexedSubscript:0];
            uint64_t v47 = [v39 longValue];
            goto LABEL_60;
          }
LABEL_61:
          uint64_t v63 = [v153 objectAtIndexedSubscript:1];
          uint64_t v64 = [v63 integerValue];

          if (v64 == 2)
          {
            uint64_t v70 = NSString;
            char v39 = [v152 objectAtIndexedSubscript:0];
            [v39 doubleValue];
            uint64_t v72 = v71;
            unsigned int v68 = [v152 objectAtIndexedSubscript:1];
            [v68 doubleValue];
            objc_msgSend(v70, "localizedStringWithFormat:", v156, v72, v73);
          }
          else
          {
            if (v64 == 1)
            {
              char v65 = NSString;
              char v39 = [v152 objectAtIndexedSubscript:0];
              [v39 doubleValue];
              uint64_t v67 = v74;
              unsigned int v68 = [v152 objectAtIndexedSubscript:1];
              uint64_t v69 = [v68 longValue];
            }
            else
            {
              if (v64) {
                goto LABEL_121;
              }
              char v65 = NSString;
              char v39 = [v152 objectAtIndexedSubscript:0];
              [v39 doubleValue];
              uint64_t v67 = v66;
              unsigned int v68 = [v152 objectAtIndexedSubscript:1];
              uint64_t v69 = [v68 intValue];
            }
            objc_msgSend(v65, "localizedStringWithFormat:", v156, v67, v69);
          }
          id v41 = (id)objc_claimAutoreleasedReturnValue();

          goto LABEL_77;
        }
        unsigned int v46 = NSString;
        char v39 = [v152 objectAtIndexedSubscript:0];
        uint64_t v47 = [v39 longValue];
LABEL_72:
        unsigned int v61 = [v152 objectAtIndexedSubscript:1];
        uint64_t v62 = [v61 longValue];
        goto LABEL_73;
      }
      unsigned int v75 = NSString;
      char v39 = [v152 objectAtIndexedSubscript:0];
      uint64_t v76 = [v39 longValue];
LABEL_75:
      unsigned int v61 = [v152 objectAtIndexedSubscript:1];
      [v61 doubleValue];
      objc_msgSend(v75, "localizedStringWithFormat:", v156, v76, v77);
      goto LABEL_76;
    }
    if ([v152 count] != 3) {
      goto LABEL_121;
    }
    uint64_t v48 = [v153 objectAtIndexedSubscript:0];
    uint64_t v49 = [v48 integerValue];

    if (v49 == 2) {
      goto LABEL_105;
    }
    if (v49 != 1)
    {
      if (v49) {
        goto LABEL_121;
      }
      char v50 = [v153 objectAtIndexedSubscript:1];
      uint64_t v51 = [v50 integerValue];

      switch(v51)
      {
        case 2:
LABEL_82:
          uint64_t v80 = [v153 objectAtIndexedSubscript:1];
          uint64_t v81 = [v80 integerValue];

          switch(v81)
          {
            case 2:
              int v137 = NSString;
              uint64_t v55 = [v152 objectAtIndexedSubscript:0];
              uint64_t v138 = [v55 intValue];
              goto LABEL_149;
            case 1:
              unsigned int v82 = NSString;
              uint64_t v55 = [v152 objectAtIndexedSubscript:0];
              uint64_t v83 = [v55 intValue];
              goto LABEL_146;
            case 0:
              unsigned int v82 = NSString;
              uint64_t v55 = [v152 objectAtIndexedSubscript:0];
              uint64_t v83 = [v55 intValue];
LABEL_104:
              unint64_t v88 = [v152 objectAtIndexedSubscript:1];
              [v88 doubleValue];
              uint64_t v97 = v96;
              long long v98 = [v152 objectAtIndexedSubscript:2];
              uint64_t v99 = [v98 intValue];
LABEL_147:
              objc_msgSend(v82, "localizedStringWithFormat:", v156, v83, v97, v99);
LABEL_150:
              id v41 = (id)objc_claimAutoreleasedReturnValue();

LABEL_163:
              goto LABEL_164;
          }
          break;
        case 1:
LABEL_78:
          unint64_t v78 = [v153 objectAtIndexedSubscript:1];
          uint64_t v79 = [v78 integerValue];

          switch(v79)
          {
            case 2:
              int v139 = NSString;
              uint64_t v55 = [v152 objectAtIndexedSubscript:0];
              uint64_t v140 = [v55 intValue];
LABEL_152:
              unint64_t v88 = [v152 objectAtIndexedSubscript:1];
              uint64_t v148 = [v88 longValue];
LABEL_161:
              long long v92 = [v152 objectAtIndexedSubscript:2];
              [v92 doubleValue];
              objc_msgSend(v139, "localizedStringWithFormat:", v156, v140, v148, v149);
              goto LABEL_162;
            case 1:
              unsigned int v54 = NSString;
              uint64_t v55 = [v152 objectAtIndexedSubscript:0];
              uint64_t v56 = [v55 intValue];
LABEL_154:
              unint64_t v88 = [v152 objectAtIndexedSubscript:1];
              uint64_t v89 = [v88 longValue];
LABEL_157:
              long long v92 = [v152 objectAtIndexedSubscript:2];
              uint64_t v93 = [v92 longValue];
              goto LABEL_158;
            case 0:
              unsigned int v54 = NSString;
              uint64_t v55 = [v152 objectAtIndexedSubscript:0];
              uint64_t v56 = [v55 intValue];
LABEL_98:
              unint64_t v88 = [v152 objectAtIndexedSubscript:1];
              uint64_t v89 = [v88 longValue];
              goto LABEL_99;
          }
          goto LABEL_82;
        case 0:
          uint64_t v52 = [v153 objectAtIndexedSubscript:1];
          uint64_t v53 = [v52 integerValue];

          switch(v53)
          {
            case 2:
              int v139 = NSString;
              uint64_t v55 = [v152 objectAtIndexedSubscript:0];
              uint64_t v140 = [v55 intValue];
              goto LABEL_160;
            case 1:
              unsigned int v54 = NSString;
              uint64_t v55 = [v152 objectAtIndexedSubscript:0];
              uint64_t v56 = [v55 intValue];
              goto LABEL_156;
            case 0:
              unsigned int v54 = NSString;
              uint64_t v55 = [v152 objectAtIndexedSubscript:0];
              uint64_t v56 = [v55 intValue];
LABEL_93:
              unint64_t v88 = [v152 objectAtIndexedSubscript:1];
              uint64_t v89 = [v88 intValue];
LABEL_99:
              long long v92 = [v152 objectAtIndexedSubscript:2];
              uint64_t v93 = [v92 intValue];
LABEL_158:
              objc_msgSend(v54, "localizedStringWithFormat:", v156, v56, v89, v93);
LABEL_162:
              id v41 = (id)objc_claimAutoreleasedReturnValue();

              goto LABEL_163;
          }
          goto LABEL_78;
      }
    }
    uint64_t v84 = [v153 objectAtIndexedSubscript:1];
    uint64_t v85 = [v84 integerValue];

    if (v85 == 2)
    {
LABEL_100:
      long long v94 = [v153 objectAtIndexedSubscript:1];
      uint64_t v95 = [v94 integerValue];

      if (v95 != 2)
      {
        if (v95 != 1)
        {
          if (!v95)
          {
            unsigned int v82 = NSString;
            uint64_t v55 = [v152 objectAtIndexedSubscript:0];
            uint64_t v83 = [v55 longValue];
            goto LABEL_104;
          }
LABEL_105:
          long long v100 = [v153 objectAtIndexedSubscript:1];
          uint64_t v101 = [v100 integerValue];

          if (v101 == 2) {
            goto LABEL_117;
          }
          if (v101 != 1)
          {
            if (v101) {
              goto LABEL_121;
            }
            uint64_t v102 = [v153 objectAtIndexedSubscript:1];
            uint64_t v103 = [v102 integerValue];

            switch(v103)
            {
              case 2:
                char v132 = NSString;
                uint64_t v55 = [v152 objectAtIndexedSubscript:0];
                [v55 doubleValue];
                uint64_t v134 = v141;
                int v107 = [v152 objectAtIndexedSubscript:1];
                uint64_t v135 = [v107 intValue];
                goto LABEL_137;
              case 1:
                unsigned int v104 = NSString;
                uint64_t v55 = [v152 objectAtIndexedSubscript:0];
                [v55 doubleValue];
                uint64_t v106 = v143;
                int v107 = [v152 objectAtIndexedSubscript:1];
                uint64_t v108 = [v107 intValue];
                goto LABEL_139;
              case 0:
                unsigned int v104 = NSString;
                uint64_t v55 = [v152 objectAtIndexedSubscript:0];
                [v55 doubleValue];
                uint64_t v106 = v105;
                int v107 = [v152 objectAtIndexedSubscript:1];
                uint64_t v108 = [v107 intValue];
LABEL_116:
                uint64_t v112 = [v152 objectAtIndexedSubscript:2];
                uint64_t v113 = [v112 intValue];
LABEL_140:
                objc_msgSend(v104, "localizedStringWithFormat:", v156, v106, v108, v113);
                goto LABEL_141;
            }
          }
          int v109 = [v153 objectAtIndexedSubscript:1];
          uint64_t v110 = [v109 integerValue];

          if (v110 != 2)
          {
            if (v110 != 1)
            {
              if (!v110)
              {
                unsigned int v104 = NSString;
                uint64_t v55 = [v152 objectAtIndexedSubscript:0];
                [v55 doubleValue];
                uint64_t v106 = v111;
                int v107 = [v152 objectAtIndexedSubscript:1];
                uint64_t v108 = [v107 longValue];
                goto LABEL_116;
              }
LABEL_117:
              char v114 = [v153 objectAtIndexedSubscript:1];
              uint64_t v115 = [v114 integerValue];

              if (v115 == 2)
              {
                uint64_t v124 = NSString;
                uint64_t v55 = [v152 objectAtIndexedSubscript:0];
                [v55 doubleValue];
                uint64_t v126 = v125;
                int v107 = [v152 objectAtIndexedSubscript:1];
                [v107 doubleValue];
                uint64_t v128 = v127;
                int v121 = [v152 objectAtIndexedSubscript:2];
                [v121 doubleValue];
                objc_msgSend(v124, "localizedStringWithFormat:", v156, v126, v128, v129);
              }
              else
              {
                if (v115 == 1)
                {
                  unsigned int v116 = NSString;
                  uint64_t v55 = [v152 objectAtIndexedSubscript:0];
                  [v55 doubleValue];
                  uint64_t v118 = v130;
                  int v107 = [v152 objectAtIndexedSubscript:1];
                  [v107 doubleValue];
                  uint64_t v120 = v131;
                  int v121 = [v152 objectAtIndexedSubscript:2];
                  uint64_t v122 = [v121 longValue];
                }
                else
                {
                  if (v115) {
                    goto LABEL_121;
                  }
                  unsigned int v116 = NSString;
                  uint64_t v55 = [v152 objectAtIndexedSubscript:0];
                  [v55 doubleValue];
                  uint64_t v118 = v117;
                  int v107 = [v152 objectAtIndexedSubscript:1];
                  [v107 doubleValue];
                  uint64_t v120 = v119;
                  int v121 = [v152 objectAtIndexedSubscript:2];
                  uint64_t v122 = [v121 intValue];
                }
                objc_msgSend(v116, "localizedStringWithFormat:", v156, v118, v120, v122);
              }
              id v41 = (id)objc_claimAutoreleasedReturnValue();

              goto LABEL_142;
            }
            unsigned int v104 = NSString;
            uint64_t v55 = [v152 objectAtIndexedSubscript:0];
            [v55 doubleValue];
            uint64_t v106 = v136;
            int v107 = [v152 objectAtIndexedSubscript:1];
            uint64_t v108 = [v107 longValue];
LABEL_139:
            uint64_t v112 = [v152 objectAtIndexedSubscript:2];
            uint64_t v113 = [v112 longValue];
            goto LABEL_140;
          }
          char v132 = NSString;
          uint64_t v55 = [v152 objectAtIndexedSubscript:0];
          [v55 doubleValue];
          uint64_t v134 = v133;
          int v107 = [v152 objectAtIndexedSubscript:1];
          uint64_t v135 = [v107 longValue];
LABEL_137:
          uint64_t v112 = [v152 objectAtIndexedSubscript:2];
          [v112 doubleValue];
          objc_msgSend(v132, "localizedStringWithFormat:", v156, v134, v135, v142);
LABEL_141:
          id v41 = (id)objc_claimAutoreleasedReturnValue();

LABEL_142:
LABEL_164:

          goto LABEL_122;
        }
        unsigned int v82 = NSString;
        uint64_t v55 = [v152 objectAtIndexedSubscript:0];
        uint64_t v83 = [v55 longValue];
LABEL_146:
        unint64_t v88 = [v152 objectAtIndexedSubscript:1];
        [v88 doubleValue];
        uint64_t v97 = v144;
        long long v98 = [v152 objectAtIndexedSubscript:2];
        uint64_t v99 = [v98 longValue];
        goto LABEL_147;
      }
      int v137 = NSString;
      uint64_t v55 = [v152 objectAtIndexedSubscript:0];
      uint64_t v138 = [v55 longValue];
LABEL_149:
      unint64_t v88 = [v152 objectAtIndexedSubscript:1];
      [v88 doubleValue];
      uint64_t v146 = v145;
      long long v98 = [v152 objectAtIndexedSubscript:2];
      [v98 doubleValue];
      objc_msgSend(v137, "localizedStringWithFormat:", v156, v138, v146, v147);
      goto LABEL_150;
    }
    if (v85 == 1) {
      goto LABEL_94;
    }
    if (v85) {
      goto LABEL_105;
    }
    char v86 = [v153 objectAtIndexedSubscript:1];
    uint64_t v87 = [v86 integerValue];

    if (v87 != 2)
    {
      if (v87 != 1)
      {
        if (!v87)
        {
          unsigned int v54 = NSString;
          uint64_t v55 = [v152 objectAtIndexedSubscript:0];
          uint64_t v56 = [v55 longValue];
          goto LABEL_93;
        }
LABEL_94:
        long long v90 = [v153 objectAtIndexedSubscript:1];
        uint64_t v91 = [v90 integerValue];

        if (v91 != 2)
        {
          if (v91 != 1)
          {
            if (!v91)
            {
              unsigned int v54 = NSString;
              uint64_t v55 = [v152 objectAtIndexedSubscript:0];
              uint64_t v56 = [v55 longValue];
              goto LABEL_98;
            }
            goto LABEL_100;
          }
          unsigned int v54 = NSString;
          uint64_t v55 = [v152 objectAtIndexedSubscript:0];
          uint64_t v56 = [v55 longValue];
          goto LABEL_154;
        }
        int v139 = NSString;
        uint64_t v55 = [v152 objectAtIndexedSubscript:0];
        uint64_t v140 = [v55 longValue];
        goto LABEL_152;
      }
      unsigned int v54 = NSString;
      uint64_t v55 = [v152 objectAtIndexedSubscript:0];
      uint64_t v56 = [v55 longValue];
LABEL_156:
      unint64_t v88 = [v152 objectAtIndexedSubscript:1];
      uint64_t v89 = [v88 intValue];
      goto LABEL_157;
    }
    int v139 = NSString;
    uint64_t v55 = [v152 objectAtIndexedSubscript:0];
    uint64_t v140 = [v55 longValue];
LABEL_160:
    unint64_t v88 = [v152 objectAtIndexedSubscript:1];
    uint64_t v148 = [v88 intValue];
    goto LABEL_161;
  }
  unint64_t v36 = [v153 objectAtIndexedSubscript:0];
  uint64_t v37 = [v36 integerValue];

  id v5 = v150;
  if (v37 != 2)
  {
    if (v37 == 1)
    {
      uint64_t v38 = NSString;
      char v39 = [v152 objectAtIndexedSubscript:0];
      uint64_t v40 = [v39 longValue];
      goto LABEL_54;
    }
    if (!v37)
    {
      uint64_t v38 = NSString;
      char v39 = [v152 objectAtIndexedSubscript:0];
      uint64_t v40 = [v39 intValue];
LABEL_54:
      objc_msgSend(v38, "localizedStringWithFormat:", v156, v40);
      goto LABEL_55;
    }
LABEL_121:
    id v41 = v156;
    goto LABEL_122;
  }
  unint64_t v57 = NSString;
  char v39 = [v152 objectAtIndexedSubscript:0];
  [v39 doubleValue];
  objc_msgSend(v57, "localizedStringWithFormat:", v156, v58);
LABEL_55:
  id v41 = (id)objc_claimAutoreleasedReturnValue();
LABEL_77:

LABEL_122:
LABEL_123:

  return v41;
}

void _INStringExtractKeyPathAndFunctions(id *a1, void *a2)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  if (a1)
  {
    id v3 = (void *)[*a1 mutableCopy];
    id v4 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
    id v5 = objc_msgSend(MEMORY[0x1E4F28FD8], "_intents_sharedFunctionRegularExpression");
    id v6 = objc_msgSend(v5, "matchesInString:options:range:", *a1, 0, 0, objc_msgSend(*a1, "length"));

    long long v21 = 0u;
    long long v22 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    id obj = v6;
    uint64_t v7 = [obj countByEnumeratingWithState:&v19 objects:v23 count:16];
    if (v7)
    {
      uint64_t v8 = v7;
      uint64_t v9 = *(void *)v20;
      do
      {
        for (uint64_t i = 0; i != v8; ++i)
        {
          if (*(void *)v20 != v9) {
            objc_enumerationMutation(obj);
          }
          uint64_t v11 = [*(id *)(*((void *)&v19 + 1) + 8 * i) resultByAdjustingRangesWithOffset:0];
          id v12 = *a1;
          uint64_t v13 = [v11 rangeAtIndex:1];
          uint64_t v15 = objc_msgSend(v12, "substringWithRange:", v13, v14);
          [v4 addObject:v15];
          id v16 = [NSString stringWithFormat:@".%@", v15];
          objc_msgSend(v3, "replaceOccurrencesOfString:withString:options:range:", v16, &stru_1EDA6DB28, 0, 0, objc_msgSend(v3, "length"));
        }
        uint64_t v8 = [obj countByEnumeratingWithState:&v19 objects:v23 count:16];
      }
      while (v8);
    }

    if (a2) {
      *a2 = (id)[v4 copy];
    }
    *a1 = (id)[v3 copy];
  }
}

id INLocalizedFormatStringFromCodable(void *a1, void *a2, void *a3, __CFBundle *a4, void *a5, void *a6, void *a7, __CFString **a8, unsigned __int8 a9)
{
  uint64_t v98 = *MEMORY[0x1E4F143B8];
  id v72 = a1;
  id v16 = a2;
  id v17 = a3;
  id v80 = a5;
  id v81 = a6;
  id v18 = a7;
  if (a4)
  {
    CFURLRef v19 = CFBundleCopyBundleURL(a4);
    if (v19)
    {
      CFURLRef v20 = v19;
      long long v21 = [MEMORY[0x1E4F28B50] bundleWithURL:v19];
      CFRelease(v20);
      long long v22 = (void *)MEMORY[0x1E4F70C28];
      id v23 = [v80 languageCode];
      id v24 = [v22 grammarCollectionNamed:v17 bundle:v21 language:v23];

      uint64_t v25 = v72;
      if (v24)
      {
        unsigned int v75 = [v24 sentenceWithIdentifier:v72];
        if (v75
          || ([v24 sentenceWithIdentifier:v16],
              (unsigned int v75 = objc_claimAutoreleasedReturnValue()) != 0))
        {
          id v68 = v18;
          id v70 = v17;
          long long v93 = 0u;
          long long v94 = 0u;
          long long v91 = 0u;
          long long v92 = 0u;
          uint64_t v26 = objc_msgSend(v81, "_nonNilAttributes", v16);
          uint64_t v27 = v75;
          uint64_t v79 = [v26 countByEnumeratingWithState:&v91 objects:v97 count:16];
          if (!v79) {
            goto LABEL_23;
          }
          id obj = *(id *)v92;
          uint64_t v73 = v26;
          while (1)
          {
            for (uint64_t i = 0; i != v79; ++i)
            {
              if (*(id *)v92 != obj) {
                objc_enumerationMutation(v26);
              }
              uint64_t v29 = *(void *)(*((void *)&v91 + 1) + 8 * i);
              uint64_t v30 = [v81 _objectDescription];
              uint64_t v31 = [v30 attributeByName:v29];

              objc_opt_class();
              if (objc_opt_isKindOfClass())
              {
                int v32 = [v31 typeName];
                if ([v32 isEqualToString:@"Long"])
                {
                }
                else
                {
                  char v39 = [v31 typeName];
                  int v40 = [v39 isEqualToString:@"Double"];

                  if (!v40) {
                    goto LABEL_21;
                  }
                }
                uint64_t v34 = [v81 valueForKey:v29];
                [v27 setNumber:v34 forPlaceholder:v29];
              }
              else
              {
                objc_opt_class();
                if ((objc_opt_isKindOfClass() & 1) == 0) {
                  goto LABEL_21;
                }
                id v33 = v21;
                uint64_t v34 = [v81 valueForKey:v29];
                uint64_t v35 = objc_msgSend(v31, "valueForIndex:", objc_msgSend(v34, "unsignedIntegerValue"));
                unint64_t v36 = [v35 displayNameLocID];
                uint64_t v37 = [v24 tokenWithIdentifier:v36];

                if (!v37)
                {
                  uint64_t v38 = [v35 displayName];
                  uint64_t v37 = [v24 tokenWithIdentifier:v38];
                }
                uint64_t v27 = v75;
                [v75 setToken:v37 forPlaceholder:v29];

                long long v21 = v33;
                uint64_t v26 = v73;
              }

LABEL_21:
            }
            uint64_t v79 = [v26 countByEnumeratingWithState:&v91 objects:v97 count:16];
            if (!v79)
            {
LABEL_23:

              id v41 = [v27 resolvedSentence];
              id v18 = v68;
              id v17 = v70;
              uint64_t v42 = v27;
              id v16 = v66;
              goto LABEL_53;
            }
          }
        }
      }

      uint64_t v76 = (void *)[v16 mutableCopy];
      if (a8) {
        goto LABEL_29;
      }
    }
    else
    {
      uint64_t v76 = (void *)[v16 mutableCopy];
      uint64_t v25 = v72;
      if (a8)
      {
LABEL_29:
        CFBundleGetDevelopmentRegion(a4);
        uint64_t v43 = (__CFString *)(id)objc_claimAutoreleasedReturnValue();
        goto LABEL_30;
      }
    }
LABEL_31:
    if (v25) {
      goto LABEL_32;
    }
LABEL_47:
    long long v21 = 0;
    id v24 = 0;
    uint64_t v63 = v76;
    if (v76) {
      goto LABEL_52;
    }
LABEL_48:
    id v41 = 0;
    goto LABEL_54;
  }
  uint64_t v76 = (void *)[v16 mutableCopy];
  if (a8)
  {
    uint64_t v43 = @"en";
    uint64_t v25 = v72;
LABEL_30:
    *a8 = v43;
    goto LABEL_31;
  }
  uint64_t v25 = v72;
  if (!v72) {
    goto LABEL_47;
  }
LABEL_32:
  uint64_t v74 = (uint64_t)a4;
  id v69 = v18;
  uint64_t v71 = v17;
  uint64_t v44 = objc_msgSend(v25, "mutableCopy", a8);
  uint64_t v45 = v16;
  id v24 = (id)[v16 mutableCopy];
  unsigned int v46 = [v81 _nonNilAttributes];
  uint64_t v47 = [MEMORY[0x1E4F29008] sortDescriptorWithKey:0 ascending:1];
  uint64_t v96 = v47;
  uint64_t v48 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v96 count:1];
  uint64_t v49 = [v46 sortedArrayUsingDescriptors:v48];

  long long v89 = 0u;
  long long v90 = 0u;
  long long v87 = 0u;
  long long v88 = 0u;
  id obja = v49;
  uint64_t v50 = [obja countByEnumeratingWithState:&v87 objects:v95 count:16];
  if (v50)
  {
    uint64_t v51 = v50;
    uint64_t v52 = *(void *)v88;
    long long v21 = (void *)v44;
    do
    {
      uint64_t v53 = 0;
      unsigned int v54 = v21;
      uint64_t v55 = v24;
      do
      {
        if (*(void *)v88 != v52) {
          objc_enumerationMutation(obja);
        }
        uint64_t v56 = *(void **)(*((void *)&v87 + 1) + 8 * v53);
        unint64_t v57 = [v81 _objectDescription];
        uint64_t v58 = [v57 attributeByName:v56];

        id v85 = v55;
        char v86 = v54;
        _INUpdateFinalLocalizedString(v81, v45, v58, v56, a9, v80, &v86, &v85);
        long long v21 = v86;

        id v24 = v85;
        ++v53;
        unsigned int v54 = v21;
        uint64_t v55 = v24;
      }
      while (v51 != v53);
      uint64_t v51 = [obja countByEnumeratingWithState:&v87 objects:v95 count:16];
    }
    while (v51);
  }
  else
  {
    long long v21 = (void *)v44;
  }

  if (v74)
  {
    id v17 = v71;
    uint64_t v59 = INLocalizedStringFromBundle(v21, v21, v71, v80, v74, v67);
    id v18 = v69;
    uint64_t v60 = v76;
    if ([v59 length] && (objc_msgSend(v21, "isEqualToString:", v59) & 1) == 0)
    {
      uint64_t v63 = (void *)[v59 mutableCopy];
    }
    else
    {
      INLocalizedStringFromBundle(v24, v24, v71, v80, v74, v67);
      v62 = unsigned int v61 = v21;
      uint64_t v63 = (void *)[v62 mutableCopy];

      uint64_t v60 = v62;
      long long v21 = v61;
    }

    id v16 = v45;
  }
  else
  {
    id v16 = v45;
    id v18 = v69;
    id v17 = v71;
    uint64_t v63 = v76;
  }

  if (!v63) {
    goto LABEL_48;
  }
LABEL_52:
  v82[0] = MEMORY[0x1E4F143A8];
  v82[1] = 3221225472;
  v82[2] = __INLocalizedFormatStringFromCodable_block_invoke;
  v82[3] = &unk_1E551A4E0;
  id v83 = v18;
  id v84 = v81;
  uint64_t v64 = INFillOutStringWithStringsDict(v24, v63, v82);
  id v41 = (void *)[v64 mutableCopy];

  uint64_t v42 = v83;
LABEL_53:

LABEL_54:

  return v41;
}

void _INUpdateFinalLocalizedString(void *a1, void *a2, void *a3, void *a4, unsigned int a5, void *a6, void **a7, id *a8)
{
  uint64_t v172 = *MEMORY[0x1E4F143B8];
  id v148 = a1;
  id v14 = a2;
  id v15 = a3;
  id v16 = a4;
  id v147 = a6;
  id v17 = [NSString stringWithFormat:@"${%@}", v16];
  int v18 = [v14 containsString:v17];
  if ((v18 & 1) != 0 || !a5) {
    goto LABEL_6;
  }
  CFURLRef v19 = [NSString stringWithFormat:@"\\(%@)", v16];

  if (([v14 containsString:v19] & 1) == 0)
  {
    id v17 = [NSString stringWithFormat:@"(%@)", v16];

    int v18 = [v14 containsString:v17];
LABEL_6:
    CFURLRef v19 = v17;
    goto LABEL_7;
  }
  int v18 = 1;
LABEL_7:
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();
  id v149 = v15;
  if (v18 && (isKindOfClass & 1) != 0)
  {
    id v21 = [v148 valueForKeyPath:v16];
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      char v132 = v19;
      id obj = v14;
      id v139 = v16;
      uint64_t v143 = a8;
      id v22 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
      long long v164 = 0u;
      long long v165 = 0u;
      long long v166 = 0u;
      long long v167 = 0u;
      id v23 = v21;
      uint64_t v24 = [v23 countByEnumeratingWithState:&v164 objects:v171 count:16];
      uint64_t v25 = v23;
      if (v24)
      {
        uint64_t v26 = v24;
        uint64_t v27 = *(void *)v165;
        do
        {
          for (uint64_t i = 0; i != v26; ++i)
          {
            if (*(void *)v165 != v27) {
              objc_enumerationMutation(v25);
            }
            uint64_t v29 = objc_msgSend(v15, "valueForIndex:", objc_msgSend(*(id *)(*((void *)&v164 + 1) + 8 * i), "unsignedIntegerValue"));
            uint64_t v30 = v29;
            if (v29)
            {
              uint64_t v31 = [v29 displayName];
              int v32 = v31;
              if (v31)
              {
                id v33 = v31;
              }
              else
              {
                id v33 = [v30 name];
              }
              uint64_t v34 = v33;

              uint64_t v35 = *a7;
              unint64_t v36 = [v30 displayNameLocID];
              [v35 appendFormat:@"-%@", v36];

              [v22 addObject:v34];
              id v15 = v149;
            }
          }
          id v23 = v25;
          uint64_t v26 = [v25 countByEnumeratingWithState:&v164 objects:v171 count:16];
        }
        while (v26);
      }

      id v37 = *v143;
      uint64_t v38 = objc_msgSend(v22, "_intents_readableTitleWithLocalizer:", v147);
      id v21 = v25;
      CFURLRef v19 = v132;
      objc_msgSend(v37, "replaceOccurrencesOfString:withString:options:range:", v132, v38, 0, 0, objc_msgSend(*v143, "length"));

      id v14 = obj;
      id v16 = v139;
    }
    else
    {
      uint64_t v71 = objc_msgSend(v15, "valueForIndex:", objc_msgSend(v21, "unsignedIntegerValue"));
      id v72 = v71;
      if (v71)
      {
        uint64_t v73 = v19;
        id v74 = v21;
        unsigned int v75 = [v71 displayName];
        uint64_t v76 = v75;
        uint64_t v77 = a8;
        if (v75)
        {
          id v78 = v75;
        }
        else
        {
          id v78 = [v72 name];
        }
        uint64_t v97 = v78;

        uint64_t v98 = *a7;
        uint64_t v99 = [v72 displayNameLocID];
        [v98 appendFormat:@"-%@", v99];

        objc_msgSend(*v77, "replaceOccurrencesOfString:withString:options:range:", v73, v97, 0, 0, objc_msgSend(*v77, "length"));
        CFURLRef v19 = v73;
        id v21 = v74;
      }
    }
    goto LABEL_90;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    char v39 = [v15 metadata];
    objc_opt_class();
    int v40 = objc_opt_isKindOfClass() & v18;

    if (v40 == 1)
    {
      id v21 = [v15 metadata];
      if (v21 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
      {
        uint64_t v41 = [v21 trueDisplayName];
        if (v41)
        {
          uint64_t v42 = (void *)v41;
          uint64_t v43 = v19;
          uint64_t v44 = [v21 falseDisplayName];
          if (v44)
          {
            uint64_t v45 = (void *)v44;
            uint64_t v46 = [v21 trueDisplayNameID];
            if (v46)
            {
              uint64_t v47 = (void *)v46;
              uint64_t v144 = a8;
              uint64_t v48 = [v21 falseDisplayNameID];
              if (v48)
              {
                uint64_t v49 = (void *)v48;
                int v50 = [v14 containsString:v43];

                if (v50)
                {
                  uint64_t v51 = [v148 valueForKeyPath:v16];
                  objc_opt_class();
                  id v150 = v51;
                  if (objc_opt_isKindOfClass())
                  {
                    uint64_t v133 = v43;
                    id obja = v14;
                    id v140 = v16;
                    id v52 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
                    long long v160 = 0u;
                    long long v161 = 0u;
                    long long v162 = 0u;
                    long long v163 = 0u;
                    id v53 = v51;
                    uint64_t v54 = [v53 countByEnumeratingWithState:&v160 objects:v170 count:16];
                    if (v54)
                    {
                      uint64_t v55 = v54;
                      uint64_t v56 = *(void *)v161;
                      do
                      {
                        for (uint64_t j = 0; j != v55; ++j)
                        {
                          if (*(void *)v161 != v56) {
                            objc_enumerationMutation(v53);
                          }
                          id v58 = *(id *)(*((void *)&v160 + 1) + 8 * j);
                          if (v58)
                          {
                            objc_opt_class();
                            if (objc_opt_isKindOfClass()) {
                              uint64_t v59 = v58;
                            }
                            else {
                              uint64_t v59 = 0;
                            }
                          }
                          else
                          {
                            uint64_t v59 = 0;
                          }
                          id v60 = v59;

                          char v61 = [v60 BOOLValue];
                          uint64_t v62 = *a7;
                          if (v61)
                          {
                            uint64_t v63 = [v21 trueDisplayNameID];
                            [v62 appendFormat:@"-%@", v63];

                            [v21 trueDisplayName];
                          }
                          else
                          {
                            uint64_t v64 = [v21 falseDisplayNameID];
                            [v62 appendFormat:@"-%@", v64];

                            [v21 falseDisplayName];
                          char v65 = };
                          [v52 addObject:v65];
                        }
                        uint64_t v55 = [v53 countByEnumeratingWithState:&v160 objects:v170 count:16];
                      }
                      while (v55);
                    }

                    id v66 = *v144;
                    uint64_t v67 = objc_msgSend(v52, "_intents_readableTitleWithLocalizer:", v147);
                    CFURLRef v19 = v133;
                    objc_msgSend(v66, "replaceOccurrencesOfString:withString:options:range:", v133, v67, 0, 0, objc_msgSend(*v144, "length"));

                    id v14 = obja;
                    id v16 = v140;
                  }
                  else
                  {
                    id v118 = v51;
                    if (v118)
                    {
                      objc_opt_class();
                      if (objc_opt_isKindOfClass()) {
                        uint64_t v119 = v118;
                      }
                      else {
                        uint64_t v119 = 0;
                      }
                    }
                    else
                    {
                      uint64_t v119 = 0;
                    }
                    id v120 = v119;

                    int v121 = [v120 BOOLValue];
                    uint64_t v122 = *a7;
                    if (v121)
                    {
                      int v123 = [v21 trueDisplayNameID];
                      [v122 appendFormat:@"-%@", v123];

                      id v124 = *v144;
                      [v21 trueDisplayName];
                    }
                    else
                    {
                      uint64_t v125 = [v21 falseDisplayNameID];
                      [v122 appendFormat:@"-%@", v125];

                      id v124 = *v144;
                      [v21 falseDisplayName];
                    uint64_t v126 = };
                    uint64_t v127 = [*v144 length];
                    uint64_t v128 = v124;
                    CFURLRef v19 = v43;
                    objc_msgSend(v128, "replaceOccurrencesOfString:withString:options:range:", v43, v126, 0, 0, v127);
                  }
                  goto LABEL_90;
                }
                goto LABEL_95;
              }
            }
          }

LABEL_95:
          CFURLRef v19 = v43;
        }
      }
      else
      {

        id v21 = 0;
      }
LABEL_90:

      goto LABEL_91;
    }
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v145 = a8;
    id v68 = v15;
    unsigned int v141 = a5;
    id v69 = v14;
    if (v68)
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass()) {
        id v70 = v68;
      }
      else {
        id v70 = 0;
      }
    }
    else
    {
      id v70 = 0;
    }
    id v82 = v70;

    long long v158 = 0u;
    long long v159 = 0u;
    long long v156 = 0u;
    long long v157 = 0u;
    id v130 = v82;
    id v83 = [v82 codableDescription];
    id v84 = [v83 attributes];
    id v85 = [v84 allValues];

    id objb = v85;
    uint64_t v86 = [v85 countByEnumeratingWithState:&v156 objects:v169 count:16];
    if (v86)
    {
      uint64_t v87 = v86;
      uint64_t v88 = *(void *)v157;
      do
      {
        for (uint64_t k = 0; k != v87; ++k)
        {
          if (*(void *)v157 != v88) {
            objc_enumerationMutation(objb);
          }
          long long v90 = *(void **)(*((void *)&v156 + 1) + 8 * k);
          long long v91 = NSString;
          long long v92 = [v90 propertyName];
          id v93 = v16;
          long long v94 = [v91 stringWithFormat:@"%@.%@", v16, v92];

          uint64_t v95 = [NSString stringWithFormat:@"${%@", v94];
          int v96 = [v69 containsString:v95];

          if (v96) {
            _INUpdateFinalLocalizedString(v148, v69, v90, v94, v141, v147, a7, v145);
          }

          id v16 = v93;
        }
        uint64_t v87 = [objb countByEnumeratingWithState:&v156 objects:v169 count:16];
      }
      while (v87);
    }

    id v14 = v69;
    id v15 = v149;
    id v21 = v130;
    goto LABEL_90;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v79 = v15;
    uint64_t v134 = v19;
    unsigned int v142 = a5;
    id v80 = v14;
    if (v79)
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass()) {
        id v81 = v79;
      }
      else {
        id v81 = 0;
      }
    }
    else
    {
      id v81 = 0;
    }
    id v21 = v81;

    long long v100 = +[INSchema systemSchema];
    uint64_t v101 = [v100 _types];
    uint64_t v102 = [v21 typeName];
    uint64_t v103 = INIntentDefinitionNamespacedName(@"System", v102);
    uint64_t v104 = [v101 objectForKeyedSubscript:v103];

    uint64_t v105 = (void *)v104;
    if (v104)
    {
      uint64_t v129 = (void *)v104;
      id v131 = v21;
      uint64_t v146 = a8;
      id v106 = v16;
      long long v154 = 0u;
      long long v155 = 0u;
      long long v152 = 0u;
      long long v153 = 0u;
      int v107 = [v105 attributes];
      uint64_t v108 = [v107 allValues];

      id objc = v108;
      uint64_t v109 = [v108 countByEnumeratingWithState:&v152 objects:v168 count:16];
      if (v109)
      {
        uint64_t v110 = v109;
        uint64_t v111 = *(void *)v153;
        do
        {
          for (uint64_t m = 0; m != v110; ++m)
          {
            if (*(void *)v153 != v111) {
              objc_enumerationMutation(objc);
            }
            uint64_t v113 = *(void **)(*((void *)&v152 + 1) + 8 * m);
            char v114 = NSString;
            uint64_t v115 = [v113 propertyName];
            unsigned int v116 = [v114 stringWithFormat:@"%@.%@", v106, v115];

            uint64_t v117 = [NSString stringWithFormat:@"${%@", v116];
            LODWORD(v115) = [v80 containsString:v117];

            if (v115) {
              _INUpdateFinalLocalizedString(v148, v80, v113, v116, v142, v147, a7, v146);
            }
          }
          uint64_t v110 = [objc countByEnumeratingWithState:&v152 objects:v168 count:16];
        }
        while (v110);
      }

      id v15 = v149;
      id v16 = v106;
      uint64_t v105 = v129;
      id v21 = v131;
    }

    CFURLRef v19 = v134;
    id v14 = v80;
    goto LABEL_90;
  }
LABEL_91:
}

id __INLocalizedFormatStringFromCodable_block_invoke(uint64_t a1, void *a2, uint64_t *a3)
{
  id v5 = a2;
  id v6 = [*(id *)(a1 + 32) objectForKeyedSubscript:v5];
  if (!v6 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
  {

    uint64_t v8 = [*(id *)(a1 + 40) _objectDescription];
    uint64_t v9 = [v8 attributeByKeyPath:v5];

    if (v9)
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        id v6 = [*(id *)(a1 + 40) valueForKeyPath:v5];
        uint64_t v10 = [v9 typeName];
        char v11 = [v10 isEqualToString:@"Long"];

        if (v11)
        {
          uint64_t v12 = 1;
LABEL_14:
          *a3 = v12;
LABEL_17:

          goto LABEL_18;
        }
        uint64_t v13 = [v9 typeName];
        char v14 = [v13 isEqualToString:@"Double"];

        if (v14)
        {
          uint64_t v12 = 2;
          goto LABEL_14;
        }
      }
    }
    id v6 = 0;
    goto LABEL_17;
  }
  if (objc_msgSend(v6, "_intents_isInteger"))
  {
    uint64_t v7 = 1;
  }
  else
  {
    if (!objc_msgSend(v6, "_intents_isDouble")) {
      goto LABEL_18;
    }
    uint64_t v7 = 2;
  }
  *a3 = v7;
LABEL_18:

  return v6;
}

id INReplaceVariablesInFormatStringFromSlotComposing(void *a1, void *a2, void *a3)
{
  uint64_t v49 = *MEMORY[0x1E4F143B8];
  id v36 = a2;
  id v5 = a3;
  id v6 = (void *)[a1 mutableCopy];
  uint64_t v7 = objc_msgSend(MEMORY[0x1E4F28FD8], "_intents_sharedFormatRegularExpression");
  uint64_t v8 = objc_msgSend(v7, "matchesInString:options:range:", v6, 0, 0, objc_msgSend(v6, "length"));

  long long v45 = 0u;
  long long v46 = 0u;
  long long v43 = 0u;
  long long v44 = 0u;
  id v9 = v8;
  uint64_t v32 = [v9 countByEnumeratingWithState:&v43 objects:v48 count:16];
  if (v32)
  {
    uint64_t v10 = 0;
    uint64_t v33 = *(void *)v44;
    uint64_t v34 = v9;
    uint64_t v35 = v6;
    while (2)
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v44 != v33) {
          objc_enumerationMutation(v9);
        }
        uint64_t v37 = v11;
        uint64_t v38 = v10;
        uint64_t v12 = [*(id *)(*((void *)&v43 + 1) + 8 * v11) resultByAdjustingRangesWithOffset:v10];
        uint64_t v13 = [v12 rangeAtIndex:1];
        id v15 = objc_msgSend(v6, "substringWithRange:", v13, v14);
        long long v39 = 0u;
        long long v40 = 0u;
        long long v41 = 0u;
        long long v42 = 0u;
        id v16 = v5;
        id v17 = [v5 intentSlotDescriptions];
        uint64_t v18 = [v17 countByEnumeratingWithState:&v39 objects:v47 count:16];
        if (!v18)
        {
LABEL_19:

          id v5 = v16;
LABEL_20:

          id v9 = v34;
          id v30 = 0;
          id v6 = v35;
          goto LABEL_21;
        }
        uint64_t v19 = v18;
        uint64_t v20 = *(void *)v40;
LABEL_8:
        uint64_t v21 = 0;
        while (1)
        {
          if (*(void *)v40 != v20) {
            objc_enumerationMutation(v17);
          }
          id v22 = *(void **)(*((void *)&v39 + 1) + 8 * v21);
          id v23 = [v22 facadePropertyName];
          char v24 = [v23 isEqualToString:v15];

          if (v24) {
            break;
          }
          if (v19 == ++v21)
          {
            uint64_t v19 = [v17 countByEnumeratingWithState:&v39 objects:v47 count:16];
            if (v19) {
              goto LABEL_8;
            }
            goto LABEL_19;
          }
        }
        id v5 = v16;
        uint64_t v25 = [v16 localizeValueOfSlotDescription:v22 withLocalizer:v36];

        if (!v25) {
          goto LABEL_20;
        }
        uint64_t v26 = [v12 range];
        id v6 = v35;
        objc_msgSend(v35, "replaceCharactersInRange:withString:", v26, v27, v25);
        uint64_t v28 = [v25 length];
        [v12 range];
        uint64_t v10 = v28 - v29 + v38;

        uint64_t v11 = v37 + 1;
        id v9 = v34;
      }
      while (v37 + 1 != v32);
      uint64_t v32 = [v34 countByEnumeratingWithState:&v43 objects:v48 count:16];
      if (v32) {
        continue;
      }
      break;
    }
  }

  id v30 = v6;
LABEL_21:

  return v30;
}

id INReplaceVariablesInFormatStringFromCodable(void *a1, void *a2, void *a3, void *a4, int a5)
{
  uint64_t v144 = *MEMORY[0x1E4F143B8];
  id v9 = a1;
  id v106 = a2;
  id v10 = a3;
  id v107 = a4;
  long long v100 = v9;
  if (v9)
  {
    uint64_t v11 = objc_msgSend(v9, "mutableCopy", v9);
    uint64_t v12 = objc_msgSend(MEMORY[0x1E4F28FD8], "_intents_sharedFormatRegularExpression");
    uint64_t v13 = objc_msgSend(v12, "matchesInString:options:range:", v11, 0, 0, objc_msgSend(v11, "length"));

    if (a5 && ![v13 count])
    {
      uint64_t v14 = objc_msgSend(MEMORY[0x1E4F28FD8], "_intents_sharedOldFormatRegularExpression");
      uint64_t v15 = objc_msgSend(v14, "matchesInString:options:range:", v11, 0, 0, objc_msgSend(v11, "length"));

      uint64_t v13 = (void *)v15;
    }
    long long v127 = 0u;
    long long v128 = 0u;
    long long v125 = 0u;
    long long v126 = 0u;
    id v16 = v13;
    uint64_t v105 = [v16 countByEnumeratingWithState:&v125 objects:v135 count:16];
    if (v105)
    {
      uint64_t v17 = 0;
      uint64_t v103 = v16;
      uint64_t v104 = *(void *)v126;
      uint64_t v101 = v11;
      uint64_t v102 = v10;
LABEL_7:
      uint64_t v18 = 0;
LABEL_8:
      if (*(void *)v126 != v104) {
        objc_enumerationMutation(v16);
      }
      uint64_t v113 = v18;
      uint64_t v19 = [*(id *)(*((void *)&v125 + 1) + 8 * v18) resultByAdjustingRangesWithOffset:v17];
      uint64_t v20 = [v19 rangeAtIndex:1];
      id v22 = objc_msgSend(v11, "substringWithRange:", v20, v21);
      if (v22)
      {
        id v23 = [v107 objectForKeyedSubscript:v22];

        if (v23)
        {
          char v24 = [v107 objectForKeyedSubscript:v22];
          objc_msgSend(v24, "_intents_readableTitleWithLocalizer:", v106);
          id v25 = (id)objc_claimAutoreleasedReturnValue();

          if (v25)
          {
            uint64_t v26 = [v19 range];
            objc_msgSend(v11, "replaceCharactersInRange:withString:", v26, v27, v25);
            uint64_t v28 = [v25 length];
            [v19 range];
            uint64_t v30 = v28 - v29;
            char v114 = v22;
            goto LABEL_80;
          }
        }
      }
      uint64_t v108 = v17;
      uint64_t v110 = v19;
      id v123 = 0;
      id v124 = v22;
      _INStringExtractKeyPathAndFunctions(&v124, &v123);
      id v31 = v124;

      id v32 = v123;
      uint64_t v33 = [v10 _objectDescription];
      uint64_t v34 = [v33 attributeByKeyPath:v31];

      if (v34)
      {
        uint64_t v35 = [v10 valueForKeyPath:v31];
        char v114 = v31;
        if (v35)
        {
          objc_opt_class();
          if (objc_opt_isKindOfClass()) {
            id v36 = v35;
          }
          else {
            id v36 = 0;
          }
        }
        else
        {
          id v36 = 0;
        }
        id v37 = v36;
        uint64_t v38 = objc_msgSend(v37, "if_flatMap:", &__block_literal_global_62201);
        long long v39 = (void *)v38;
        if (v38) {
          long long v40 = (void *)v38;
        }
        else {
          long long v40 = v35;
        }
        id v41 = v40;

        objc_opt_class();
        uint64_t v109 = v41;
        if (objc_opt_isKindOfClass())
        {
          objc_opt_class();
          if (objc_opt_isKindOfClass())
          {
            id v42 = v32;
            id v43 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
            long long v119 = 0u;
            long long v120 = 0u;
            long long v121 = 0u;
            long long v122 = 0u;
            id v44 = v41;
            uint64_t v45 = [v44 countByEnumeratingWithState:&v119 objects:v134 count:16];
            if (v45)
            {
              uint64_t v46 = v45;
              uint64_t v47 = *(void *)v120;
              do
              {
                for (uint64_t i = 0; i != v46; ++i)
                {
                  if (*(void *)v120 != v47) {
                    objc_enumerationMutation(v44);
                  }
                  uint64_t v49 = objc_msgSend(v34, "valueForIndex:", objc_msgSend(*(id *)(*((void *)&v119 + 1) + 8 * i), "unsignedIntegerValue"));
                  int v50 = [v49 displayName];
                  objc_msgSend(v43, "if_addObjectIfNonNil:", v50);
                }
                uint64_t v46 = [v44 countByEnumeratingWithState:&v119 objects:v134 count:16];
              }
              while (v46);
            }

            uint64_t v51 = objc_msgSend(v43, "_intents_readableTitleWithLocalizer:", v106);
            id v32 = v42;
            goto LABEL_59;
          }
          objc_msgSend(v34, "valueForIndex:", objc_msgSend(v41, "unsignedIntegerValue"));
          id v43 = (id)objc_claimAutoreleasedReturnValue();
          uint64_t v68 = [v43 displayName];
        }
        else
        {
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) != 0
            && ([v34 metadata],
                id v52 = objc_claimAutoreleasedReturnValue(),
                objc_opt_class(),
                char isKindOfClass = objc_opt_isKindOfClass(),
                v52,
                (isKindOfClass & 1) != 0))
          {
            id v43 = [v34 metadata];
            if (!v43 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
            {

              id v43 = 0;
LABEL_97:

LABEL_98:
              uint64_t v95 = (void *)INSiriLogContextIntents;
              id v10 = v102;
              if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_ERROR))
              {
                uint64_t v97 = v95;
                uint64_t v98 = [v102 _objectDescription];
                uint64_t v99 = [v98 className];
                *(_DWORD *)long long buf = 136315906;
                int v137 = "INReplaceVariablesInFormatStringFromCodable";
                __int16 v138 = 2112;
                id v139 = v99;
                __int16 v140 = 2112;
                id v141 = v34;
                __int16 v142 = 2112;
                uint64_t v143 = v109;
                _os_log_error_impl(&dword_18CB2F000, v97, OS_LOG_TYPE_ERROR, "%s [%@] No displayable value for %@ with value %@", buf, 0x2Au);
              }
              uint64_t v11 = v101;
              id v31 = v114;
              goto LABEL_101;
            }
            uint64_t v54 = [v43 trueDisplayName];
            if (!v54) {
              goto LABEL_97;
            }
            uint64_t v55 = (void *)v54;
            uint64_t v56 = [v43 falseDisplayName];

            if (!v56) {
              goto LABEL_97;
            }
            objc_opt_class();
            if (objc_opt_isKindOfClass())
            {
              id v111 = v32;
              id v57 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
              long long v115 = 0u;
              long long v116 = 0u;
              long long v117 = 0u;
              long long v118 = 0u;
              id v58 = v41;
              uint64_t v59 = [v58 countByEnumeratingWithState:&v115 objects:v133 count:16];
              if (v59)
              {
                uint64_t v60 = v59;
                uint64_t v61 = *(void *)v116;
                do
                {
                  for (uint64_t j = 0; j != v60; ++j)
                  {
                    if (*(void *)v116 != v61) {
                      objc_enumerationMutation(v58);
                    }
                    id v63 = *(id *)(*((void *)&v115 + 1) + 8 * j);
                    if (v63)
                    {
                      objc_opt_class();
                      if (objc_opt_isKindOfClass()) {
                        uint64_t v64 = v63;
                      }
                      else {
                        uint64_t v64 = 0;
                      }
                    }
                    else
                    {
                      uint64_t v64 = 0;
                    }
                    id v65 = v64;

                    char v66 = [v65 BOOLValue];
                    if (v66) {
                      [v43 trueDisplayName];
                    }
                    else {
                    uint64_t v67 = [v43 falseDisplayName];
                    }
                    objc_msgSend(v57, "if_addObjectIfNonNil:", v67);
                  }
                  uint64_t v60 = [v58 countByEnumeratingWithState:&v115 objects:v133 count:16];
                }
                while (v60);
              }

              uint64_t v51 = objc_msgSend(v57, "_intents_readableTitleWithLocalizer:", v106);

              id v32 = v111;
              goto LABEL_59;
            }
            id v85 = v41;
            if (v85)
            {
              objc_opt_class();
              if (objc_opt_isKindOfClass()) {
                uint64_t v86 = v85;
              }
              else {
                uint64_t v86 = 0;
              }
            }
            else
            {
              uint64_t v86 = 0;
            }
            id v87 = v86;

            char v88 = [v87 BOOLValue];
            if (v88) {
              [v43 trueDisplayName];
            }
            else {
            uint64_t v68 = [v43 falseDisplayName];
            }
          }
          else
          {
            id v43 = [v34 metadata];
            uint64_t v68 = objc_msgSend(v41, "_intents_readableTitleWithLocalizer:metadata:", v106, v43);
          }
        }
        uint64_t v51 = (void *)v68;
LABEL_59:

        if (!v51) {
          goto LABEL_98;
        }
        id v25 = v51;
        id v69 = v32;
        long long v129 = 0u;
        long long v130 = 0u;
        long long v131 = 0u;
        long long v132 = 0u;
        uint64_t v70 = [v69 countByEnumeratingWithState:&v129 objects:buf count:16];
        uint64_t v112 = v25;
        if (!v70) {
          goto LABEL_79;
        }
        uint64_t v71 = v70;
        uint64_t v72 = *(void *)v130;
        while (1)
        {
          uint64_t v73 = 0;
          do
          {
            if (*(void *)v130 != v72) {
              objc_enumerationMutation(v69);
            }
            id v74 = *(void **)(*((void *)&v129 + 1) + 8 * v73);
            id v75 = v25;
            id v76 = v74;
            if ([v76 isEqualToString:@"uppercased()"])
            {
              uint64_t v77 = [v75 localizedUppercaseString];
LABEL_69:
              id v78 = v77;
              id v25 = (id)[v77 copy];

              goto LABEL_70;
            }
            if ([v76 isEqualToString:@"lowercased()"])
            {
              uint64_t v77 = [v75 localizedLowercaseString];
              goto LABEL_69;
            }
            if ([v76 isEqualToString:@"uppercaseFirstCharacter()"])
            {
              uint64_t v79 = objc_msgSend(v75, "if_stringByUppercasingFirstCharacter");
              goto LABEL_77;
            }
            id v25 = v75;
            if ([v76 isEqualToString:@"lowercaseFirstCharacter()"])
            {
              uint64_t v79 = objc_msgSend(v75, "if_stringByLowercasingFirstCharacter");
LABEL_77:
              id v25 = (id)v79;
              id v78 = v75;
LABEL_70:
            }
            ++v73;
          }
          while (v71 != v73);
          uint64_t v80 = [v69 countByEnumeratingWithState:&v129 objects:buf count:16];
          uint64_t v71 = v80;
          if (!v80)
          {
LABEL_79:

            uint64_t v19 = v110;
            uint64_t v81 = [v110 range];
            uint64_t v11 = v101;
            objc_msgSend(v101, "replaceCharactersInRange:withString:", v81, v82, v25);
            uint64_t v83 = [v25 length];
            [v110 range];
            uint64_t v30 = v83 - v84;

            id v10 = v102;
            id v16 = v103;
            uint64_t v17 = v108;
LABEL_80:

            v17 += v30;
            uint64_t v18 = v113 + 1;
            if (v113 + 1 == v105)
            {
              uint64_t v89 = [v16 countByEnumeratingWithState:&v125 objects:v135 count:16];
              uint64_t v105 = v89;
              if (!v89) {
                goto LABEL_92;
              }
              goto LABEL_7;
            }
            goto LABEL_8;
          }
        }
      }
      long long v91 = (void *)INSiriLogContextIntents;
      if (os_log_type_enabled((os_log_t)INSiriLogContextIntents, OS_LOG_TYPE_ERROR))
      {
        long long v92 = v91;
        id v93 = [v10 _objectDescription];
        long long v94 = [v93 className];
        *(_DWORD *)long long buf = 136315650;
        int v137 = "INReplaceVariablesInFormatStringFromCodable";
        __int16 v138 = 2112;
        id v139 = v94;
        __int16 v140 = 2112;
        id v141 = v31;
        _os_log_error_impl(&dword_18CB2F000, v92, OS_LOG_TYPE_ERROR, "%s [%@] No codable attribute for parameter key path %@", buf, 0x20u);
      }
LABEL_101:

      id v16 = v103;
      id v90 = 0;
    }
    else
    {
LABEL_92:

      id v90 = v11;
    }
  }
  else
  {
    id v90 = 0;
  }

  return v90;
}

id __INReplaceVariablesInFormatStringFromCodable_block_invoke(uint64_t a1, void *a2)
{
  id v2 = a2;
  if (!v2 || (objc_opt_class(), id v3 = v2, (objc_opt_isKindOfClass() & 1) == 0))
  {

    id v3 = objc_msgSend(MEMORY[0x1E4F1C978], "if_arrayWithObjectIfNonNil:", v2);
  }

  return v3;
}

id INStringsDictEntryForKeyInTable(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  uint64_t v85 = *MEMORY[0x1E4F143B8];
  id v9 = a1;
  id v10 = a3;
  id v11 = a4;
  uint64_t v12 = [v10 bundleIdentifier];
  uint64_t v13 = (__CFBundle *)[v11 bundleWithIdentifier:v12 fileURL:0];

  if (v13)
  {
    uint64_t v14 = [v11 preferredLocalizationsForBundle:v13];
    uint64_t v15 = [v14 firstObject];

    if (a5) {
      *a5 = v15;
    }
    CFURLRef v16 = CFBundleCopyResourceURLForLocalization(v13, (CFStringRef)[v10 tableName], @"stringsdict", 0, v15);
    if (v16)
    {
      uint64_t v17 = [MEMORY[0x1E4F1C9E8] dictionaryWithContentsOfURL:v16];
      uint64_t v18 = v17;
      if (v17
        && (([v17 objectForKey:v9], (uint64_t v19 = objc_claimAutoreleasedReturnValue()) != 0)
         || ([v18 objectForKey:*a2], (uint64_t v19 = objc_claimAutoreleasedReturnValue()) != 0)))
      {
        char v66 = [MEMORY[0x1E4F1CA60] dictionary];
        uint64_t v20 = [v19 objectForKey:@"NSStringLocalizedFormatKey"];
        uint64_t v62 = a2;
        if (v20)
        {
          objc_opt_class();
          if (objc_opt_isKindOfClass()) {
            uint64_t v21 = v20;
          }
          else {
            uint64_t v21 = 0;
          }
        }
        else
        {
          uint64_t v21 = 0;
        }
        id v23 = v21;

        char v24 = (void *)[v23 mutableCopy];
        if (v24)
        {
          uint64_t v56 = v18;
          CFURLRef v57 = v16;
          id v58 = v15;
          id v59 = v11;
          id v60 = v10;
          id v61 = v9;
          id v25 = objc_msgSend(MEMORY[0x1E4F28FD8], "_intents_sharedStringsDictFormatRegularExpression");
          uint64_t v26 = objc_msgSend(v25, "matchesInString:options:range:", v24, 0, 0, objc_msgSend(v24, "length"));

          long long v81 = 0u;
          long long v82 = 0u;
          long long v79 = 0u;
          long long v80 = 0u;
          id obj = v26;
          uint64_t v27 = v66;
          unint64_t v28 = 0x1E4F29000uLL;
          uint64_t v68 = [obj countByEnumeratingWithState:&v79 objects:v84 count:16];
          if (v68)
          {
            uint64_t v29 = 0;
            uint64_t v67 = *(void *)v80;
            uint64_t v64 = v24;
            id v65 = v19;
            do
            {
              uint64_t v30 = 0;
              do
              {
                if (*(void *)v80 != v67) {
                  objc_enumerationMutation(obj);
                }
                uint64_t v72 = v30;
                id v31 = [*(id *)(*((void *)&v79 + 1) + 8 * v30) resultByAdjustingRangesWithOffset:v29];
                uint64_t v32 = [v31 rangeAtIndex:1];
                uint64_t v34 = objc_msgSend(v24, "substringWithRange:", v32, v33);
                uint64_t v71 = v31;
                uint64_t v35 = [v31 range];
                uint64_t v37 = v36;
                uint64_t v38 = [*(id *)(v28 + 24) stringWithFormat:@"${%@}", v34];
                objc_msgSend(v24, "replaceCharactersInRange:withString:", v35, v37, v38);

                long long v39 = [v19 objectForKey:v34];
                long long v40 = [v39 objectForKey:@"NSStringFormatValueTypeKey"];
                if (v40)
                {
                  id v74 = v34;
                  id v41 = (void *)MEMORY[0x1E4F28FD8];
                  id v69 = v40;
                  id v42 = [*(id *)(v28 + 24) stringWithFormat:@"%%(.[0-9])?%@", v40];
                  uint64_t v73 = [v41 regularExpressionWithPattern:v42 options:0 error:0];

                  id v43 = [MEMORY[0x1E4F1CA60] dictionary];
                  long long v75 = 0u;
                  long long v76 = 0u;
                  long long v77 = 0u;
                  long long v78 = 0u;
                  uint64_t v70 = v29;
                  if (_INStringsDictAcceptedKeys_onceToken != -1) {
                    dispatch_once(&_INStringsDictAcceptedKeys_onceToken, &__block_literal_global_70);
                  }
                  id v44 = (id)_INStringsDictAcceptedKeys_acceptedKeys;
                  uint64_t v45 = [v44 countByEnumeratingWithState:&v75 objects:v83 count:16];
                  if (v45)
                  {
                    uint64_t v46 = v45;
                    uint64_t v47 = *(void *)v76;
                    do
                    {
                      for (uint64_t i = 0; i != v46; ++i)
                      {
                        if (*(void *)v76 != v47) {
                          objc_enumerationMutation(v44);
                        }
                        uint64_t v49 = *(void *)(*((void *)&v75 + 1) + 8 * i);
                        int v50 = [v39 objectForKey:v49];
                        if (v50)
                        {
                          uint64_t v51 = v50;
                          uint64_t v52 = [v50 length];
                          id v53 = [*(id *)(v28 + 24) stringWithFormat:@"${%@}", v74];
                          uint64_t v54 = objc_msgSend(v73, "stringByReplacingMatchesInString:options:range:withTemplate:", v51, 0, 0, v52, v53);

                          unint64_t v28 = 0x1E4F29000;
                          [v43 setObject:v54 forKey:v49];
                        }
                      }
                      uint64_t v46 = [v44 countByEnumeratingWithState:&v75 objects:v83 count:16];
                    }
                    while (v46);
                  }

                  uint64_t v27 = v66;
                  uint64_t v34 = v74;
                  [v66 setObject:v43 forKey:v74];

                  char v24 = v64;
                  uint64_t v19 = v65;
                  long long v40 = v69;
                  uint64_t v29 = v70;
                }
                --v29;

                uint64_t v30 = v72 + 1;
              }
              while (v72 + 1 != v68);
              uint64_t v68 = [obj countByEnumeratingWithState:&v79 objects:v84 count:16];
            }
            while (v68);
          }

          *uint64_t v62 = (id)[v24 copy];
          id v22 = v27;

          id v10 = v60;
          id v9 = v61;
          uint64_t v15 = v58;
          id v11 = v59;
          uint64_t v18 = v56;
          CFURLRef v16 = v57;
        }
        else
        {
          id v22 = 0;
          uint64_t v27 = v66;
        }
      }
      else
      {
        id v22 = 0;
      }
    }
    else
    {
      id v22 = 0;
    }
  }
  else
  {
    id v22 = 0;
  }

  return v22;
}

BOOL _INPBSaveHealthSampleIntentResponseReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t v17 = objc_alloc_init(_INPBString);
        if (!PBReaderPlaceMark() || !_INPBStringReadFrom(v17, a2)) {
          goto LABEL_49;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addSampleUuids:", v17, 0, 0);
        }
        goto LABEL_45;
      case 2u:
        uint64_t v17 = objc_alloc_init(_INPBDateTimeRange);
        if (!PBReaderPlaceMark() || (_INPBDateTimeRangeReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_49;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRecordDate:", v17, 0, 0);
        goto LABEL_45;
      case 3u:
        uint64_t v17 = objc_alloc_init(_INPBString);
        if (!PBReaderPlaceMark() || (_INPBStringReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_49;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setDefaultUnit:", v17, 0, 0);
        goto LABEL_45;
      case 4u:
        uint64_t v17 = objc_alloc_init(_INPBWellnessValue);
        if (!PBReaderPlaceMark() || !_INPBWellnessValueReadFrom(v17, a2)) {
          goto LABEL_49;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addValuesDefaultUnit:", v17, 0, 0);
        }
        goto LABEL_45;
      case 5u:
        uint64_t v17 = objc_alloc_init(_INPBString);
        if (!PBReaderPlaceMark() || (_INPBStringReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_49;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setUserProvidedUnit:", v17, 0, 0);
        goto LABEL_45;
      case 6u:
        uint64_t v17 = objc_alloc_init(_INPBWellnessValue);
        if (!PBReaderPlaceMark() || !_INPBWellnessValueReadFrom(v17, a2)) {
          goto LABEL_49;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addValuesUserProvidedUnit:", v17, 0, 0);
        }
        goto LABEL_45;
      case 7u:
        uint64_t v17 = objc_alloc_init(_INPBString);
        if PBReaderPlaceMark() && (_INPBStringReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setPunchoutUrl:", v17, 0, 0);
LABEL_45:

LABEL_46:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_49:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_46;
    }
  }
}

id INIntentSlotValueTransformFromCurrencyAmount(void *a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  uint64_t v1 = objc_msgSend(a1, "values", 0);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v10;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v10 != v4) {
          objc_enumerationMutation(v1);
        }
        uint64_t v6 = INIntentSlotValueTransformFromCurrencyAmountValue(*(void **)(*((void *)&v9 + 1) + 8 * i));
        if (v6)
        {
          uint64_t v7 = (void *)v6;
          goto LABEL_11;
        }
      }
      uint64_t v3 = [v1 countByEnumeratingWithState:&v9 objects:v13 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
  uint64_t v7 = 0;
LABEL_11:

  return v7;
}

INCurrencyAmount *INIntentSlotValueTransformFromCurrencyAmountValue(void *a1)
{
  id v1 = a1;
  uint64_t v2 = v1;
  if (v1)
  {
    uint64_t v3 = [v1 valueMetadata];
    INPrivacyEntitlementValidateValueMetadata(v3);

    uint64_t v4 = [INCurrencyAmount alloc];
    id v5 = [v2 amount];
    uint64_t v6 = INIntentSlotValueTransformFromDecimalNumberValue(v5);
    uint64_t v7 = [v2 currencyCode];
    char v8 = [(INCurrencyAmount *)v4 initWithAmount:v6 currencyCode:v7];
  }
  else
  {
    char v8 = 0;
  }

  return v8;
}

_INPBCurrencyAmount *INIntentSlotValueTransformToCurrencyAmount(void *a1)
{
  id v1 = INIntentSlotValueTransformToCurrencyAmountValue(a1);
  if (v1)
  {
    uint64_t v2 = objc_alloc_init(_INPBCurrencyAmount);
    [(_INPBCurrencyAmount *)v2 addValue:v1];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

_INPBCurrencyAmountValue *INIntentSlotValueTransformToCurrencyAmountValue(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    uint64_t v2 = objc_alloc_init(_INPBCurrencyAmountValue);
    uint64_t v3 = [v1 currencyCode];
    [(_INPBCurrencyAmountValue *)v2 setCurrencyCode:v3];

    uint64_t v4 = [v1 amount];

    id v5 = INIntentSlotValueTransformToDecimalNumberValue(v4);
    [(_INPBCurrencyAmountValue *)v2 setAmount:v5];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INIntentSlotValueTransformFromCurrencyAmounts(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        char v8 = INIntentSlotValueTransformFromCurrencyAmount(*(void **)(*((void *)&v11 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v11);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  long long v9 = (void *)[v2 copy];

  return v9;
}

id INIntentSlotValueTransformToCurrencyAmounts(void *a1)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v11;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v11 != v6) {
          objc_enumerationMutation(v3);
        }
        char v8 = INIntentSlotValueTransformToCurrencyAmount(*(void **)(*((void *)&v10 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v10);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v5);
  }

  return v2;
}

id INIntentSlotValueTransformToCurrencyAmountValues(void *a1)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v11;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v11 != v6) {
          objc_enumerationMutation(v3);
        }
        char v8 = INIntentSlotValueTransformToCurrencyAmountValue(*(void **)(*((void *)&v10 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v10);
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v5);
  }

  return v2;
}

_INPBCurrencyAmountValue *INIntentSlotValueRedactedCurrencyAmountValueFromCurrencyAmountValue(void *a1, uint64_t a2, void *a3)
{
  id v5 = a1;
  id v6 = a3;
  uint64_t v7 = [v5 valueMetadata];
  uint64_t v8 = INPrivacyEntitlementOptionsForValueMetadata(v7);

  if ((v8 & a2) != 0)
  {
    long long v9 = 0;
  }
  else
  {
    long long v9 = objc_alloc_init(_INPBCurrencyAmountValue);
    long long v10 = [v5 amount];
    long long v11 = INIntentSlotValueRedactedValueFromDecimalNumberValue(v10, a2);
    [(_INPBCurrencyAmountValue *)v9 setAmount:v11];

    long long v12 = [v5 currencyCode];
    [(_INPBCurrencyAmountValue *)v9 setCurrencyCode:v12];
  }

  return v9;
}

_INPBCurrencyAmount *INIntentSlotValueRedactedCurrencyAmountFromCurrencyAmount(void *a1, uint64_t a2, void *a3)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a3;
  if (v5)
  {
    uint64_t v7 = objc_alloc_init(_INPBCurrencyAmount);
    long long v15 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
    long long v18 = 0u;
    uint64_t v8 = objc_msgSend(v5, "values", 0);
    uint64_t v9 = [v8 countByEnumeratingWithState:&v15 objects:v19 count:16];
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = *(void *)v16;
      do
      {
        for (uint64_t i = 0; i != v10; ++i)
        {
          if (*(void *)v16 != v11) {
            objc_enumerationMutation(v8);
          }
          long long v13 = INIntentSlotValueRedactedCurrencyAmountValueFromCurrencyAmountValue(*(void **)(*((void *)&v15 + 1) + 8 * i), a2, v6);
          if (v13) {
            [(_INPBCurrencyAmount *)v7 addValue:v13];
          }
        }
        uint64_t v10 = [v8 countByEnumeratingWithState:&v15 objects:v19 count:16];
      }
      while (v10);
    }
  }
  else
  {
    uint64_t v7 = 0;
  }

  return v7;
}

id INIntentSlotValueRedactedCurrencyAmountsFromCurrencyAmounts(void *a1, uint64_t a2, void *a3)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a3;
  uint64_t v7 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v5, "count"));
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v8 = v5;
  uint64_t v9 = [v8 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)v17;
    do
    {
      for (uint64_t i = 0; i != v10; ++i)
      {
        if (*(void *)v17 != v11) {
          objc_enumerationMutation(v8);
        }
        long long v13 = INIntentSlotValueRedactedCurrencyAmountFromCurrencyAmount(*(void **)(*((void *)&v16 + 1) + 8 * i), a2, v6);
        objc_msgSend(v7, "addObject:", v13, (void)v16);
      }
      uint64_t v10 = [v8 countByEnumeratingWithState:&v16 objects:v20 count:16];
    }
    while (v10);
  }

  long long v14 = (void *)[v7 copy];

  return v14;
}

uint64_t _INPBGetFileInformationIntentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        long long v17 = objc_alloc_init(_INPBIntentMetadata);
        if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_66;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntentMetadata:", v17, 0, 0);
        goto LABEL_34;
      case 2u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_53;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v21;
        }
LABEL_53:
        [a1 setEntityType:v25];
        goto LABEL_64;
      case 3u:
        long long v17 = objc_alloc_init(_INPBString);
        if PBReaderPlaceMark() && (_INPBStringReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setEntityName:", v17, 0, 0);
LABEL_34:

LABEL_64:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_66:

        return 0;
      case 4u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                uint64_t v32 = 0;
                goto LABEL_58;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v32 = 0;
        }
        else {
          uint64_t v32 = v28;
        }
LABEL_58:
        [a1 setPropertyName:v32];
        goto LABEL_64;
      case 5u:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        while (2)
        {
          uint64_t v36 = *v3;
          unint64_t v37 = *(void *)(a2 + v36);
          if (v37 == -1 || v37 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v38 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
            *(void *)(a2 + v36) = v37 + 1;
            v35 |= (unint64_t)(v38 & 0x7F) << v33;
            if (v38 < 0)
            {
              v33 += 7;
              BOOL v14 = v34++ >= 9;
              if (v14)
              {
                uint64_t v39 = 0;
                goto LABEL_63;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v39 = 0;
        }
        else {
          uint64_t v39 = v35;
        }
LABEL_63:
        [a1 setQualifier:v39];
        goto LABEL_64;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_64;
    }
  }
}

uint64_t _INPBRideOptionReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        long long v17 = (_INPBTimestamp *)objc_claimAutoreleasedReturnValue();
        [a1 setName:v17];
        goto LABEL_46;
      case 2u:
        PBReaderReadString();
        long long v17 = (_INPBTimestamp *)objc_claimAutoreleasedReturnValue();
        [a1 setSubtitle:v17];
        goto LABEL_46;
      case 3u:
        long long v17 = objc_alloc_init(_INPBTimestamp);
        if (!PBReaderPlaceMark() || (_INPBTimestampReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_61;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEstimatedPickupDate:", v17, 0, 0);
        goto LABEL_46;
      case 4u:
        long long v17 = objc_alloc_init(_INPBPriceRangeValue);
        if (!PBReaderPlaceMark() || !_INPBPriceRangeValueReadFrom(v17, a2)) {
          goto LABEL_61;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPriceRange:", v17, 0, 0);
        goto LABEL_46;
      case 5u:
        PBReaderReadString();
        long long v17 = (_INPBTimestamp *)objc_claimAutoreleasedReturnValue();
        [a1 setDisclaimerMessage:v17];
        goto LABEL_46;
      case 6u:
        long long v17 = objc_alloc_init(_INPBRidePartySizeOption);
        if (!PBReaderPlaceMark() || !_INPBRidePartySizeOptionReadFrom(v17, a2)) {
          goto LABEL_61;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addAvailablePartySizeOptions:", v17, 0, 0);
        }
        goto LABEL_46;
      case 7u:
        PBReaderReadString();
        long long v17 = (_INPBTimestamp *)objc_claimAutoreleasedReturnValue();
        [a1 setAvailablePartySizeOptionsSelectionPrompt:v17];
        goto LABEL_46;
      case 8u:
        PBReaderReadString();
        long long v17 = (_INPBTimestamp *)objc_claimAutoreleasedReturnValue();
        [a1 setSpecialPricing:v17];
        goto LABEL_46;
      case 9u:
        long long v17 = objc_alloc_init(_INPBImageValue);
        if (!PBReaderPlaceMark() || (_INPBImageValueReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_61;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSpecialPricingBadgeImage:", v17, 0, 0);
        goto LABEL_46;
      case 0xAu:
        long long v17 = objc_alloc_init(_INPBRideFareLineItem);
        if (!PBReaderPlaceMark() || !_INPBRideFareLineItemReadFrom(v17, a2)) {
          goto LABEL_61;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addFareLineItems:", v17, 0, 0);
        }
        goto LABEL_46;
      case 0xBu:
        long long v17 = objc_alloc_init(_INPBUserActivity);
        if (PBReaderPlaceMark() && _INPBUserActivityReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setUserActivityForBookingInApplication:", v17, 0, 0);
LABEL_46:

LABEL_47:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_61:

        return 0;
      case 0xCu:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v21 = 0;
                goto LABEL_59;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v21 = 0;
        }
LABEL_59:
        [a1 setUsesMeteredFare:v21 != 0];
        goto LABEL_47;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_47;
    }
  }
}

BOOL INSpatialEventHasBackingType(unint64_t a1)
{
  return a1 < 3;
}

uint64_t INSpatialEventGetBackingType(unint64_t a1)
{
  if (a1 >= 3) {
    return 0x7FFFFFFFLL;
  }
  else {
    return (10 * a1);
  }
}

uint64_t INSpatialEventGetFacadeType(int a1, int a2)
{
  uint64_t v2 = a2 == 10;
  if (a2 == 20) {
    uint64_t v2 = 2;
  }
  if (a1) {
    return v2;
  }
  else {
    return 0;
  }
}

__CFString *INSpatialEventGetName(uint64_t a1)
{
  id v1 = @"unknown";
  if (a1 == 2) {
    id v1 = @"depart";
  }
  if (a1 == 1) {
    return @"arrive";
  }
  else {
    return v1;
  }
}

uint64_t INSpatialEventWithString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"arrive"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"depart"])
  {
    uint64_t v2 = 2;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INSpatialEventGetLocalizedName(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1 == 2)
  {
    uint64_t v4 = @"depart";
    goto LABEL_5;
  }
  if (a1 == 1)
  {
    uint64_t v4 = @"arrive";
LABEL_5:
    id v5 = INLocalizedStringWithLocalizer(v4, v4, v3);
    goto LABEL_7;
  }
  id v5 = 0;
LABEL_7:

  return v5;
}

BOOL _INPBSetMessageAttributeIntentResponseReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  id v6 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
      return v7 == 0;
    }
    if (*(unsigned char *)(a2 + *v5))
    {
      int v7 = 1;
      return v7 == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    uint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v6) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        LOBYTE(v10) = 0;
        int v7 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      LOBYTE(v10) = 0;
    }
LABEL_14:
    if (v7) {
      BOOL v15 = 1;
    }
    else {
      BOOL v15 = (v10 & 7) == 4;
    }
    if (v15) {
      return v7 == 0;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      return 0;
    }
  }
}

uint64_t _INPBPayloadNeedsDisambiguationReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        long long v17 = objc_alloc_init(_INPBSelectionItem);
        if (!PBReaderPlaceMark() || !_INPBSelectionItemReadFrom(v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addDisambiguationItems:", v17, 0, 0);
        }
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

__CFString *INSendMessageIntentResponseCodeGetName(uint64_t a1)
{
  switch(a1)
  {
    case 0:
      uint64_t result = @"INSendMessageIntentResponseCodeUnspecified";
      break;
    case 1:
      uint64_t result = @"INSendMessageIntentResponseCodeReady";
      break;
    case 2:
      uint64_t result = @"INSendMessageIntentResponseCodeInProgress";
      break;
    case 3:
      uint64_t result = @"INSendMessageIntentResponseCodeSuccess";
      break;
    case 4:
      uint64_t result = @"INSendMessageIntentResponseCodeFailure";
      break;
    case 5:
      uint64_t result = @"INSendMessageIntentResponseCodeFailureRequiringAppLaunch";
      break;
    case 6:
      uint64_t result = @"INSendMessageIntentResponseCodeFailureMessageServiceNotAvailable";
      break;
    case 7:
      uint64_t result = @"INSendMessageIntentResponseCodeFailureRequiringInAppAuthentication";
      break;
    default:
      switch(a1)
      {
        case 1000:
          uint64_t result = @"INSendMessageIntentResponseCodeFailureMessageAttachmentError";
          break;
        case 1001:
          uint64_t result = @"INSendMessageIntentResponseCodeFailureMessageLocationNotAllowed";
          break;
        case 1002:
          uint64_t result = @"INSendMessageIntentResponseCodeFailureScreenTimeRestrictionEnabled";
          break;
        case 1003:
          uint64_t result = @"INSendMessageIntentResponseCodeFailureNotAMemberOfConversation";
          break;
        case 1004:
          uint64_t result = @"INSendMessageIntentResponseCodeFailureMessageLocationAuthorizationNotDetermined";
          break;
        case 1005:
          uint64_t result = @"INSendMessageIntentResponseCodeFailureMessagePreciseLocationNotAuthorized";
          break;
        default:
          uint64_t result = 0;
          break;
      }
      break;
  }
  return result;
}

INTicketedEventReservation *INIntentSlotValueTransformFromTicketedEventReservation(INTicketedEventReservation *a1)
{
  if (a1)
  {
    uint64_t v2 = a1;
    id v3 = [(INTicketedEventReservation *)v2 reservation];
    uint64_t v4 = [INTicketedEventReservation alloc];
    unint64_t v23 = [v3 itemReference];
    char v24 = INIntentSlotValueTransformFromDataString(v23);
    id v5 = [v3 reservationNumber];
    uint64_t v22 = [v3 bookingTime];
    unsigned int v20 = INIntentSlotValueTransformFromTimestamp(v22);
    int v6 = [v3 hasReservationStatus];
    uint64_t v7 = [v3 reservationStatus] - 2;
    if (v7 <= 3) {
      char v8 = (void *)(v7 + 1);
    }
    else {
      char v8 = 0;
    }
    if (!v6) {
      char v8 = 0;
    }
    id v17 = v8;
    long long v16 = [v3 reservationHolderName];
    uint64_t v21 = [v3 actions];
    int v15 = INIntentSlotValueTransformFromReservationActions(v21);
    char v19 = [v3 url];
    unsigned int v9 = INIntentSlotValueTransformFromURLValue(v19);
    unint64_t v10 = [(INTicketedEventReservation *)v2 reservedSeat];
    uint64_t v11 = INIntentSlotValueTransformFromSeat(v10);
    unint64_t v12 = [(INTicketedEventReservation *)v2 event];

    char v13 = INIntentSlotValueTransformFromTicketedEvent(v12);
    long long v18 = [(INTicketedEventReservation *)v4 initWithItemReference:v24 reservationNumber:v5 bookingTime:v20 reservationStatus:v17 reservationHolderName:v16 actions:v15 URL:v9 reservedSeat:v11 event:v13];

    a1 = v18;
    uint64_t v1 = vars8;
  }
  return a1;
}

_INPBTicketedEventReservation *INIntentSlotValueTransformToTicketedEventReservation(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    uint64_t v2 = objc_alloc_init(_INPBReservation);
    id v3 = [v1 itemReference];
    uint64_t v4 = INIntentSlotValueTransformToDataString(v3);
    [(_INPBReservation *)v2 setItemReference:v4];

    id v5 = [v1 reservationNumber];
    [(_INPBReservation *)v2 setReservationNumber:v5];

    int v6 = [v1 bookingTime];
    uint64_t v7 = INIntentSlotValueTransformToTimestamp(v6);
    [(_INPBReservation *)v2 setBookingTime:v7];

    unint64_t v8 = [v1 reservationStatus];
    if (v8 < 5) {
      uint64_t v9 = (v8 + 1);
    }
    else {
      uint64_t v9 = 0x7FFFFFFFLL;
    }
    [(_INPBReservation *)v2 setReservationStatus:v9];
    unint64_t v10 = [v1 reservationHolderName];
    [(_INPBReservation *)v2 setReservationHolderName:v10];

    uint64_t v11 = [v1 actions];
    unint64_t v12 = INIntentSlotValueTransformToReservationActions(v11);
    [(_INPBReservation *)v2 setActions:v12];

    char v13 = [v1 URL];
    BOOL v14 = INIntentSlotValueTransformToURLValue(v13);
    [(_INPBReservation *)v2 setUrl:v14];

    int v15 = objc_alloc_init(_INPBTicketedEventReservation);
    [(_INPBTicketedEventReservation *)v15 setReservation:v2];
    long long v16 = [v1 event];
    id v17 = INIntentSlotValueTransformToTicketedEvent(v16);
    [(_INPBTicketedEventReservation *)v15 setEvent:v17];

    long long v18 = [v1 reservedSeat];

    char v19 = INIntentSlotValueTransformToSeat(v18);
    [(_INPBTicketedEventReservation *)v15 setReservedSeat:v19];
  }
  else
  {
    int v15 = 0;
  }

  return v15;
}

id INIntentSlotValueTransformFromTicketedEventReservations(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          INIntentSlotValueTransformFromTicketedEventReservation(*(INTicketedEventReservation **)(*((void *)&v11 + 1)
          unint64_t v8 = + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    uint64_t v9 = (void *)[v2 copy];
  }
  else
  {
    uint64_t v9 = 0;
  }

  return v9;
}

id INIntentSlotValueTransformToTicketedEventReservations(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v1, "count"));
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          unint64_t v8 = INIntentSlotValueTransformToTicketedEventReservation(*(void **)(*((void *)&v11 + 1) + 8 * i));
          if (v8) {
            objc_msgSend(v2, "addObject:", v8, (void)v11);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    uint64_t v9 = (void *)[v2 copy];
  }
  else
  {
    uint64_t v9 = 0;
  }

  return v9;
}

id INIntentSlotValueRedactedTicketedEventReservationFromTicketedEventReservation(void *a1)
{
  id v1 = a1;

  return v1;
}

uint64_t _INPBStartAudioCallIntentResponseReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((int)(v10 >> 3) <= 2) {
        break;
      }
      if (v17 == 1000)
      {
        long long v18 = objc_alloc_init(_INPBCallMetrics);
        if (!PBReaderPlaceMark() || (_INPBCallMetricsReadFrom(v18, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setMetrics:", v18, 0, 0);
LABEL_36:

        goto LABEL_44;
      }
      if (v17 != 3)
      {
LABEL_37:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_44;
      }
      char v19 = 0;
      unsigned int v20 = 0;
      uint64_t v21 = 0;
      while (1)
      {
        uint64_t v22 = *v3;
        unint64_t v23 = *(void *)(a2 + v22);
        if (v23 == -1 || v23 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
        *(void *)(a2 + v22) = v23 + 1;
        v21 |= (unint64_t)(v24 & 0x7F) << v19;
        if ((v24 & 0x80) == 0) {
          goto LABEL_40;
        }
        v19 += 7;
        BOOL v14 = v20++ >= 9;
        if (v14)
        {
          uint64_t v25 = 0;
          goto LABEL_43;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_40:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v25 = 0;
      }
      else {
        uint64_t v25 = v21;
      }
LABEL_43:
      [a1 setAudioRoute:v25];
LABEL_44:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    if (v17 == 1)
    {
      PBReaderReadString();
      long long v18 = (_INPBCallMetrics *)objc_claimAutoreleasedReturnValue();
      [a1 setStatus:v18];
    }
    else
    {
      if (v17 != 2) {
        goto LABEL_37;
      }
      PBReaderReadString();
      long long v18 = (_INPBCallMetrics *)objc_claimAutoreleasedReturnValue();
      if (v18) {
        [a1 addTargetContacts:v18];
      }
    }
    goto LABEL_36;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

__CFString *INDeleteEventIntentResponseCodeGetName(unint64_t a1)
{
  if (a1 > 5) {
    return 0;
  }
  else {
    return off_1E551A5D0[a1];
  }
}

uint64_t _INPBCreateNoteIntentResponseReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = objc_alloc_init(_INPBNote);
        if (!PBReaderPlaceMark() || !_INPBNoteReadFrom(v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCreatedNote:", v17, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _INPBHomeAttributeReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        char v24 = objc_alloc_init(_INPBHomeAttributeValue);
        if (!PBReaderPlaceMark() || (_INPBHomeAttributeValueReadFrom(v24, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAttributeValue:", v24, 0, 0);
      }
      else if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_33;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_36;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v23 = 0;
        }
        else {
          uint64_t v23 = v19;
        }
LABEL_36:
        [a1 setAttributeType:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void sub_18CD341CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

uint64_t __Block_byref_object_copy__65171(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__65172(uint64_t a1)
{
}

BOOL _INPBGetCarPowerLevelStatusIntentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 1) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        char v17 = objc_alloc_init(_INPBDataString);
        if (!PBReaderPlaceMark() || !_INPBDataStringReadFrom(v17, a2)) {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCarName:", v17, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v17 = objc_alloc_init(_INPBIntentMetadata);
    if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v17, a2) & 1) == 0)
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setIntentMetadata:", v17, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _INPBPlayMediaIntentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        uint64_t v16 = *v5;
        int v17 = *(unsigned __int8 *)(a2 + v16);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    uint64_t v16 = *v5;
    int v17 = *(unsigned __int8 *)(a2 + v16);
    if (*(unsigned char *)(a2 + v16)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v17 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    unint64_t v19 = v10 >> 3;
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t v20 = objc_alloc_init(_INPBIntentMetadata);
        if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v20, a2) & 1) == 0) {
          goto LABEL_145;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntentMetadata:", v20, 0, 0);
        goto LABEL_114;
      case 2u:
        uint64_t v20 = objc_alloc_init(_INPBMediaItemValue);
        uint64_t v63 = 0;
        uint64_t v64 = 0;
        if (!PBReaderPlaceMark() || !_INPBMediaItemValueReadFrom(v20, a2)) {
          goto LABEL_145;
        }
        PBReaderRecallMark();
        if (v20) {
          objc_msgSend(a1, "addMediaItems:", v20, 0, 0);
        }
        goto LABEL_114;
      case 3u:
        uint64_t v20 = objc_alloc_init(_INPBMediaItemValue);
        if (!PBReaderPlaceMark() || (_INPBMediaItemValueReadFrom(v20, a2) & 1) == 0) {
          goto LABEL_145;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setMediaContainer:", v20, 0, 0);
        goto LABEL_114;
      case 4u:
        char v21 = 0;
        unsigned int v22 = 0;
        uint64_t v23 = 0;
        while (2)
        {
          uint64_t v24 = *v3;
          uint64_t v25 = *(void *)(a2 + v24);
          unint64_t v26 = v25 + 1;
          if (v25 == -1 || v26 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v27 = *(unsigned char *)(*(void *)(a2 + *v7) + v25);
            *(void *)(a2 + v24) = v26;
            v23 |= (unint64_t)(v27 & 0x7F) << v21;
            if (v27 < 0)
            {
              v21 += 7;
              BOOL v15 = v22++ >= 9;
              if (v15)
              {
                uint64_t v23 = 0;
                goto LABEL_122;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v23 = 0;
        }
LABEL_122:
        [a1 setPlayShuffled:v23 != 0];
        goto LABEL_115;
      case 5u:
        char v28 = 0;
        unsigned int v29 = 0;
        uint64_t v30 = 0;
        while (2)
        {
          uint64_t v31 = *v3;
          uint64_t v32 = *(void *)(a2 + v31);
          unint64_t v33 = v32 + 1;
          if (v32 == -1 || v33 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v32);
            *(void *)(a2 + v31) = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if (v34 < 0)
            {
              v28 += 7;
              BOOL v15 = v29++ >= 9;
              if (v15)
              {
                uint64_t v35 = 0;
                goto LABEL_127;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v35 = 0;
        }
        else {
          uint64_t v35 = v30;
        }
LABEL_127:
        objc_msgSend(a1, "setPlaybackRepeatMode:", v35, v63, v64);
        goto LABEL_115;
      case 6u:
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        while (2)
        {
          uint64_t v39 = *v3;
          uint64_t v40 = *(void *)(a2 + v39);
          unint64_t v41 = v40 + 1;
          if (v40 == -1 || v41 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v42 = *(unsigned char *)(*(void *)(a2 + *v7) + v40);
            *(void *)(a2 + v39) = v41;
            v38 |= (unint64_t)(v42 & 0x7F) << v36;
            if (v42 < 0)
            {
              v36 += 7;
              BOOL v15 = v37++ >= 9;
              if (v15)
              {
                uint64_t v38 = 0;
                goto LABEL_131;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v38 = 0;
        }
LABEL_131:
        [a1 setResumePlayback:v38 != 0];
        goto LABEL_115;
      case 7u:
        uint64_t v20 = objc_alloc_init(_INPBTimestamp);
        if (!PBReaderPlaceMark() || (_INPBTimestampReadFrom(v20, a2) & 1) == 0) {
          goto LABEL_145;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setExpirationDate:", v20, 0, 0);
        goto LABEL_114;
      case 8u:
        uint64_t v20 = objc_alloc_init(_INPBDataString);
        uint64_t v63 = 0;
        uint64_t v64 = 0;
        if (!PBReaderPlaceMark() || !_INPBDataStringReadFrom(v20, a2)) {
          goto LABEL_145;
        }
        PBReaderRecallMark();
        if (v20) {
          objc_msgSend(a1, "addBucket:", v20, 0, 0);
        }
        goto LABEL_114;
      case 9u:
        PBReaderReadString();
        uint64_t v20 = (_INPBIntentMetadata *)objc_claimAutoreleasedReturnValue();
        [a1 setRecoID:v20];
        goto LABEL_114;
      case 0xAu:
        char v43 = 0;
        unsigned int v44 = 0;
        uint64_t v45 = 0;
        while (2)
        {
          uint64_t v46 = *v3;
          uint64_t v47 = *(void *)(a2 + v46);
          unint64_t v48 = v47 + 1;
          if (v47 == -1 || v48 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v49 = *(unsigned char *)(*(void *)(a2 + *v7) + v47);
            *(void *)(a2 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              BOOL v15 = v44++ >= 9;
              if (v15)
              {
                uint64_t v50 = 0;
                goto LABEL_136;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v50 = 0;
        }
        else {
          uint64_t v50 = v45;
        }
LABEL_136:
        objc_msgSend(a1, "setPlaybackQueueLocation:", v50, v63, v64);
        goto LABEL_115;
      case 0xBu:
        uint64_t v51 = *v3;
        unint64_t v52 = *(void *)(a2 + v51);
        if (v52 <= 0xFFFFFFFFFFFFFFF7 && v52 + 8 <= *(void *)(a2 + *v4))
        {
          double v53 = *(double *)(*(void *)(a2 + *v7) + v52);
          *(void *)(a2 + v51) = v52 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          double v53 = 0.0;
        }
        objc_msgSend(a1, "setPlaybackSpeed:", v53, v63, v64);
        goto LABEL_115;
      case 0xCu:
        uint64_t v20 = objc_alloc_init(_INPBMediaSearch);
        if (!PBReaderPlaceMark() || (_INPBMediaSearchReadFrom(v20, a2) & 1) == 0) {
          goto LABEL_145;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setMediaSearch:", v20, 0, 0);
        goto LABEL_114;
      case 0xDu:
        uint64_t v20 = objc_alloc_init(_INPBString);
        uint64_t v63 = 0;
        uint64_t v64 = 0;
        if (!PBReaderPlaceMark() || !_INPBStringReadFrom(v20, a2)) {
          goto LABEL_145;
        }
        PBReaderRecallMark();
        if (v20) {
          objc_msgSend(a1, "addHashedRouteUIDs:", v20, 0, 0);
        }
        goto LABEL_114;
      case 0xEu:
        uint64_t v20 = objc_alloc_init(_INPBString);
        if (!PBReaderPlaceMark() || (_INPBStringReadFrom(v20, a2) & 1) == 0) {
          goto LABEL_145;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPlaylistTitle:", v20, 0, 0);
        goto LABEL_114;
      case 0xFu:
        uint64_t v20 = objc_alloc_init(_INPBString);
        if (!PBReaderPlaceMark() || (_INPBStringReadFrom(v20, a2) & 1) == 0) {
          goto LABEL_145;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setMusicArtistName:", v20, 0, 0);
        goto LABEL_114;
      case 0x10u:
        uint64_t v20 = objc_alloc_init(_INPBString);
        if (!PBReaderPlaceMark() || (_INPBStringReadFrom(v20, a2) & 1) == 0) {
          goto LABEL_145;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAudiobookTitle:", v20, 0, 0);
        goto LABEL_114;
      case 0x11u:
        uint64_t v20 = objc_alloc_init(_INPBString);
        if (!PBReaderPlaceMark() || (_INPBStringReadFrom(v20, a2) & 1) == 0) {
          goto LABEL_145;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAudiobookAuthor:", v20, 0, 0);
        goto LABEL_114;
      case 0x12u:
        uint64_t v20 = objc_alloc_init(_INPBString);
        if (!PBReaderPlaceMark() || (_INPBStringReadFrom(v20, a2) & 1) == 0) {
          goto LABEL_145;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setShowTitle:", v20, 0, 0);
        goto LABEL_114;
      case 0x13u:
        uint64_t v20 = objc_alloc_init(_INPBString);
        if (!PBReaderPlaceMark() || (_INPBStringReadFrom(v20, a2) & 1) == 0) {
          goto LABEL_145;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setMediaUserContext:", v20, 0, 0);
        goto LABEL_114;
      case 0x14u:
        uint64_t v20 = objc_alloc_init(_INPBMediaItemGroup);
        uint64_t v63 = 0;
        uint64_t v64 = 0;
        if (!PBReaderPlaceMark() || !_INPBMediaItemGroupReadFrom(v20, a2)) {
          goto LABEL_145;
        }
        PBReaderRecallMark();
        if (v20) {
          objc_msgSend(a1, "addAudioSearchResults:", v20, 0, 0);
        }
        goto LABEL_114;
      case 0x15u:
        uint64_t v20 = objc_alloc_init(_INPBMediaItemGroup);
        uint64_t v63 = 0;
        uint64_t v64 = 0;
        if (!PBReaderPlaceMark() || !_INPBMediaItemGroupReadFrom(v20, a2)) {
          goto LABEL_145;
        }
        PBReaderRecallMark();
        if (v20) {
          objc_msgSend(a1, "addAlternativeResults:", v20, 0, 0);
        }
        goto LABEL_114;
      case 0x16u:
        char v54 = 0;
        unsigned int v55 = 0;
        uint64_t v56 = 0;
        while (2)
        {
          uint64_t v57 = *v3;
          uint64_t v58 = *(void *)(a2 + v57);
          unint64_t v59 = v58 + 1;
          if (v58 == -1 || v59 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v60 = *(unsigned char *)(*(void *)(a2 + *v7) + v58);
            *(void *)(a2 + v57) = v59;
            v56 |= (unint64_t)(v60 & 0x7F) << v54;
            if (v60 < 0)
            {
              v54 += 7;
              BOOL v15 = v55++ >= 9;
              if (v15)
              {
                uint64_t v61 = 0;
                goto LABEL_141;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v61 = 0;
        }
        else {
          uint64_t v61 = v56;
        }
LABEL_141:
        objc_msgSend(a1, "setParsecCategory:", v61, v63, v64);
        goto LABEL_115;
      default:
        if (v19 == 100)
        {
          PBReaderReadString();
          uint64_t v20 = (_INPBIntentMetadata *)objc_claimAutoreleasedReturnValue();
          [a1 setProxiedBundleIdentifier:v20];
          goto LABEL_114;
        }
        if (v19 != 110)
        {
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
LABEL_115:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
        uint64_t v20 = objc_alloc_init(_INPBPrivatePlayMediaIntentData);
        if PBReaderPlaceMark() && (_INPBPrivatePlayMediaIntentDataReadFrom(v20, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setPrivatePlayMediaIntentData:", v20, 0, 0);
LABEL_114:

          goto LABEL_115;
        }
LABEL_145:

        return 0;
    }
  }
}

__CFString *INSendRideFeedbackIntentResponseCodeGetName(unint64_t a1)
{
  if (a1 > 3) {
    return 0;
  }
  else {
    return off_1E551A8E8[a1];
  }
}

BOOL INVisualCodeTypeHasBackingType(unint64_t a1)
{
  return a1 < 7;
}

unint64_t INVisualCodeTypeGetBackingType(unint64_t result)
{
  if (result >= 7) {
    return 0x7FFFFFFFLL;
  }
  else {
    return result;
  }
}

uint64_t INVisualCodeTypeGetFacadeType(int a1, int a2)
{
  uint64_t v2 = (a2 - 1);
  if (v2 <= 5) {
    uint64_t v3 = v2 + 1;
  }
  else {
    uint64_t v3 = 0;
  }
  if (a1) {
    return v3;
  }
  else {
    return 0;
  }
}

__CFString *INVisualCodeTypeGetName(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 5) {
    return @"unknown";
  }
  else {
    return off_1E551A908[a1 - 1];
  }
}

uint64_t INVisualCodeTypeWithString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"contact"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"requestPayment"])
  {
    uint64_t v2 = 2;
  }
  else if ([v1 isEqualToString:@"sendPayment"])
  {
    uint64_t v2 = 3;
  }
  else if ([v1 isEqualToString:@"transit"])
  {
    uint64_t v2 = 4;
  }
  else if ([v1 isEqualToString:@"bus"])
  {
    uint64_t v2 = 5;
  }
  else if ([v1 isEqualToString:@"subway"])
  {
    uint64_t v2 = 6;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INVisualCodeTypeGetLocalizedName(uint64_t a1, void *a2)
{
  id v3 = a2;
  switch(a1)
  {
    case 1:
      uint64_t v4 = @"contact";
      goto LABEL_9;
    case 2:
      uint64_t v4 = @"request payment";
      goto LABEL_9;
    case 3:
      uint64_t v4 = @"send payment";
      goto LABEL_9;
    case 4:
      uint64_t v4 = @"transit";
      goto LABEL_9;
    case 5:
      uint64_t v4 = @"bus";
      goto LABEL_9;
    case 6:
      uint64_t v4 = @"subway";
LABEL_9:
      uint64_t v5 = INLocalizedStringWithLocalizer(v4, v4, v3);
      break;
    default:
      uint64_t v5 = 0;
      break;
  }

  return v5;
}

uint64_t _INPBRideCompletionStatusReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    int v16 = v10 & 7;
    if (v15 || v16 == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unsigned int v18 = objc_alloc_init(_INPBUserActivity);
        if (!PBReaderPlaceMark() || !_INPBUserActivityReadFrom(v18, a2)) {
          goto LABEL_113;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCompletionUserActivity:", v18, 0, 0);
        goto LABEL_79;
      case 2u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v21 = 0;
                goto LABEL_83;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v21 = 0;
        }
LABEL_83:
        objc_msgSend(a1, "setCompleted:", v21 != 0, v62, v63);
        goto LABEL_110;
      case 3u:
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v27 = 0;
        while (2)
        {
          uint64_t v28 = *v3;
          unint64_t v29 = *(void *)(a2 + v28);
          if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
            *(void *)(a2 + v2_Block_object_dispose(&a9, 8) = v29 + 1;
            v27 |= (unint64_t)(v30 & 0x7F) << v25;
            if (v30 < 0)
            {
              v25 += 7;
              BOOL v14 = v26++ >= 9;
              if (v14)
              {
                uint64_t v27 = 0;
                goto LABEL_87;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v27 = 0;
        }
LABEL_87:
        [a1 setCanceled:v27 != 0];
        goto LABEL_110;
      case 4u:
        char v31 = 0;
        unsigned int v32 = 0;
        uint64_t v33 = 0;
        while (2)
        {
          uint64_t v34 = *v3;
          unint64_t v35 = *(void *)(a2 + v34);
          if (v35 == -1 || v35 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v36 = *(unsigned char *)(*(void *)(a2 + *v7) + v35);
            *(void *)(a2 + v34) = v35 + 1;
            v33 |= (unint64_t)(v36 & 0x7F) << v31;
            if (v36 < 0)
            {
              v31 += 7;
              BOOL v14 = v32++ >= 9;
              if (v14)
              {
                uint64_t v33 = 0;
                goto LABEL_91;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v33 = 0;
        }
LABEL_91:
        [a1 setMissedPickup:v33 != 0];
        goto LABEL_110;
      case 5u:
        unsigned int v18 = objc_alloc_init(_INPBCurrencyAmountValue);
        if (!PBReaderPlaceMark() || !_INPBCurrencyAmountValueReadFrom(v18, a2)) {
          goto LABEL_113;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPaymentAmount:", v18, 0, 0);
        goto LABEL_79;
      case 6u:
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v39 = 0;
        while (2)
        {
          uint64_t v40 = *v3;
          unint64_t v41 = *(void *)(a2 + v40);
          if (v41 == -1 || v41 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v42 = *(unsigned char *)(*(void *)(a2 + *v7) + v41);
            *(void *)(a2 + v40) = v41 + 1;
            v39 |= (unint64_t)(v42 & 0x7F) << v37;
            if (v42 < 0)
            {
              v37 += 7;
              BOOL v14 = v38++ >= 9;
              if (v14)
              {
                uint64_t v39 = 0;
                goto LABEL_95;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v39 = 0;
        }
LABEL_95:
        [a1 setOutstanding:v39 != 0];
        goto LABEL_110;
      case 7u:
        char v43 = 0;
        unsigned int v44 = 0;
        uint64_t v45 = 0;
        while (2)
        {
          uint64_t v46 = *v3;
          unint64_t v47 = *(void *)(a2 + v46);
          if (v47 == -1 || v47 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v48 = *(unsigned char *)(*(void *)(a2 + *v7) + v47);
            *(void *)(a2 + v46) = v47 + 1;
            v45 |= (unint64_t)(v48 & 0x7F) << v43;
            if (v48 < 0)
            {
              v43 += 7;
              BOOL v14 = v44++ >= 9;
              if (v14)
              {
                uint64_t v45 = 0;
                goto LABEL_99;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v45 = 0;
        }
LABEL_99:
        [a1 setCanceledByService:v45 != 0];
        goto LABEL_110;
      case 8u:
        if (v16 == 2)
        {
          uint64_t v62 = 0;
          uint64_t v63 = 0;
          uint64_t result = PBReaderPlaceMark();
          if (!result) {
            return result;
          }
          while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4) && !*(unsigned char *)(a2 + *v5))
          {
            char v50 = 0;
            unsigned int v51 = 0;
            uint64_t v52 = 0;
            while (1)
            {
              uint64_t v53 = *v3;
              unint64_t v54 = *(void *)(a2 + v53);
              if (v54 == -1 || v54 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v55 = *(unsigned char *)(*(void *)(a2 + *v7) + v54);
              *(void *)(a2 + v53) = v54 + 1;
              v52 |= (unint64_t)(v55 & 0x7F) << v50;
              if (v55 < 0)
              {
                v50 += 7;
                BOOL v14 = v51++ >= 9;
                if (!v14) {
                  continue;
                }
              }
              goto LABEL_74;
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_74:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          char v56 = 0;
          unsigned int v57 = 0;
          uint64_t v58 = 0;
          while (1)
          {
            uint64_t v59 = *v3;
            unint64_t v60 = *(void *)(a2 + v59);
            if (v60 == -1 || v60 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v61 = *(unsigned char *)(*(void *)(a2 + *v7) + v60);
            *(void *)(a2 + v59) = v60 + 1;
            v58 |= (unint64_t)(v61 & 0x7F) << v56;
            if (v61 < 0)
            {
              v56 += 7;
              BOOL v14 = v57++ >= 9;
              if (!v14) {
                continue;
              }
            }
            goto LABEL_109;
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_109:
          PBRepeatedInt32Add();
        }
        goto LABEL_110;
      case 9u:
        unsigned int v18 = objc_alloc_init(_INPBCurrencyAmountValue);
        uint64_t v62 = 0;
        uint64_t v63 = 0;
        if (PBReaderPlaceMark() && _INPBCurrencyAmountValueReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          if (v18) {
            objc_msgSend(a1, "addDefaultTippingOptions:", v18, 0, 0);
          }
LABEL_79:

LABEL_110:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_113:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_110;
    }
  }
}

uint64_t _INPBResetTimerIntentResponseReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        int v17 = objc_alloc_init(_INPBTimer);
        if (!PBReaderPlaceMark() || !_INPBTimerReadFrom(v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addResetTimers:", v17, 0, 0);
        }
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void sub_18CD3DF78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getACXDeviceConnectionClass_block_invoke(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!AppConduitLibraryCore_frameworkLibrary)
  {
    v4[1] = MEMORY[0x1E4F143A8];
    v4[2] = 3221225472;
    v4[3] = __AppConduitLibraryCore_block_invoke;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    void v4[5] = v4;
    long long v5 = xmmword_1E551A9B0;
    uint64_t v6 = 0;
    AppConduitLibraryCore_frameworkLibrary = _sl_dlopen();
    uint64_t v2 = (void *)v4[0];
    if (!AppConduitLibraryCore_frameworkLibrary)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("ACXDeviceConnection");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    uint64_t v2 = (void *)abort_report_np();
LABEL_8:
    free(v2);
  }
  getACXDeviceConnectionClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __AppConduitLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  AppConduitLibraryCore_frameworkLibrary = result;
  return result;
}

uint64_t _INPBMessageReactionReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  long long v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_35;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_38;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_35:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v23 = 0;
        }
        else {
          uint64_t v23 = v19;
        }
LABEL_38:
        [a1 setReactionType:v23];
        goto LABEL_39;
      case 2u:
        PBReaderReadString();
        char v25 = (_INPBSticker *)objc_claimAutoreleasedReturnValue();
        [a1 setReactionDescription:v25];
        goto LABEL_33;
      case 3u:
        PBReaderReadString();
        char v25 = (_INPBSticker *)objc_claimAutoreleasedReturnValue();
        [a1 setEmoji:v25];
        goto LABEL_33;
      case 4u:
        char v25 = objc_alloc_init(_INPBSticker);
        if PBReaderPlaceMark() && (_INPBStickerReadFrom(v25, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setSticker:", v25, 0, 0);
LABEL_33:

LABEL_39:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_39;
    }
  }
}

BOOL INMessagePlaybackStateHasBackingType(unint64_t a1)
{
  return a1 < 3;
}

uint64_t INMessagePlaybackStateGetBackingType(unint64_t a1)
{
  if (a1 < 3) {
    return (a1 + 1);
  }
  else {
    return 0x7FFFFFFFLL;
  }
}

uint64_t INMessagePlaybackStateGetFacadeType(int a1, int a2)
{
  uint64_t v2 = a2 == 2;
  if (a2 == 3) {
    uint64_t v2 = 2;
  }
  if (a1) {
    return v2;
  }
  else {
    return 0;
  }
}

__CFString *INMessagePlaybackStateGetName(uint64_t a1)
{
  id v1 = @"unknown";
  if (a1 == 2) {
    id v1 = @"playing";
  }
  if (a1 == 1) {
    return @"stopped";
  }
  else {
    return v1;
  }
}

uint64_t INMessagePlaybackStateWithString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"stopped"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"playing"])
  {
    uint64_t v2 = 2;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id INMessagePlaybackStateGetLocalizedName(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1 == 2)
  {
    uint64_t v4 = @"playing";
    goto LABEL_5;
  }
  if (a1 == 1)
  {
    uint64_t v4 = @"stopped";
LABEL_5:
    long long v5 = INLocalizedStringWithLocalizer(v4, v4, v3);
    goto LABEL_7;
  }
  long long v5 = 0;
LABEL_7:

  return v5;
}

uint64_t _INPBCompressFileIntentReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  long long v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        char v25 = objc_alloc_init(_INPBIntentMetadata);
        if (!PBReaderPlaceMark() || (_INPBIntentMetadataReadFrom(v25, a2) & 1) == 0)
        {
LABEL_44:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntentMetadata:", v25, 0, 0);
      }
      else
      {
        if (v17 != 3)
        {
          if (v17 == 2)
          {
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            while (1)
            {
              uint64_t v21 = *v3;
              unint64_t v22 = *(void *)(a2 + v21);
              if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
              *(void *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0) {
                goto LABEL_38;
              }
              v18 += 7;
              BOOL v14 = v19++ >= 9;
              if (v14)
              {
                uint64_t v24 = 0;
                goto LABEL_41;
              }
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_38:
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v24 = 0;
            }
            else {
              uint64_t v24 = v20;
            }
LABEL_41:
            [a1 setEntityType:v24];
          }
          else
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
          }
          continue;
        }
        char v25 = objc_alloc_init(_INPBString);
        if (!PBReaderPlaceMark() || (_INPBStringReadFrom(v25, a2) & 1) == 0) {
          goto LABEL_44;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEntityName:", v25, 0, 0);
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}