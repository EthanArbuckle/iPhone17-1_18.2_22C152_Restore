unint64_t sub_2288AF87C(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  Swift::String v7;
  unint64_t result;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  id v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7._countAndFlagsBits = a1;
  v7._object = a2;
  result = (unint64_t)SecureStorage.getDirectoryContent(at:)(v7);
  if (v9)
  {
    if (qword_268267F30 != -1) {
      swift_once();
    }
    v10 = __swift_project_value_buffer(v4, (uint64_t)qword_268283DF8);
    sub_22880AB38(v10, (uint64_t)v6);
    v11 = sub_2289155C0();
    v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v6, 1, v11) == 1)
    {

      return sub_2288110C0((uint64_t)v6, (uint64_t *)&unk_2682684D0);
    }
    else
    {
      v18 = v9;
      v19 = v9;
      v20 = sub_2289155A0();
      v21 = sub_228916050();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        v27 = (void *)swift_slowAlloc();
        *(_DWORD *)v22 = 138412290;
        v23 = v9;
        v24 = _swift_stdlib_bridgeErrorToNSError();
        v28 = v24;
        sub_2289161F0();
        v25 = v27;
        *v27 = v24;

        _os_log_impl(&dword_228806000, v20, v21, "Could not load Analytics sessions: [%@]", v22, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_268269A10);
        swift_arrayDestroy();
        MEMORY[0x22A6A1090](v25, -1, -1);
        MEMORY[0x22A6A1090](v22, -1, -1);
      }
      else
      {
      }
      return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v6, v11);
    }
  }
  else
  {
    v13 = result;
    if (result)
    {
      swift_bridgeObjectRetain();
      v14 = sub_2288D7064(v13, a1, (uint64_t)a2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = *(void *)(v14 + 16);
      if (v15)
      {
        swift_bridgeObjectRetain();
        v16 = (uint64_t *)(v14 + 40);
        do
        {
          v17 = *v16;
          v28 = *(v16 - 1);
          v29 = v17;
          sub_2288AF34C();
          v16 += 2;
          --v15;
        }
        while (v15);
        return swift_bridgeObjectRelease_n();
      }
      else
      {
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for AnalyticsCache()
{
  return self;
}

ValueMetadata *type metadata accessor for AnalyticsManager()
{
  return &type metadata for AnalyticsManager;
}

uint64_t sub_2288AFC04(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for AnalyticsReporter() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_22881CB04;
  return sub_2288DD79C(a1, v5, v6, v7);
}

uint64_t sub_2288AFCF0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AnalyticsReporter();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2288AFD4C()
{
  unint64_t result = qword_26826A0A8;
  if (!qword_26826A0A8)
  {
    type metadata accessor for AnalyticsReporter();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A0A8);
  }
  return result;
}

uint64_t objectdestroyTm_0()
{
  uint64_t v1 = (int *)(type metadata accessor for AnalyticsReporter() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_unknownObjectRelease();
  uint64_t v6 = (id *)(v0 + v3);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = (char *)v6 + v1[10];
  uint64_t v8 = sub_2289152F0();
  (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);

  return MEMORY[0x270FA0238](v0, v4, v5);
}

unint64_t sub_2288AFEC0()
{
  unint64_t result = qword_26826A0E0;
  if (!qword_26826A0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A0E0);
  }
  return result;
}

unint64_t sub_2288AFF14()
{
  unint64_t result = qword_26826A0F0;
  if (!qword_26826A0F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26826A0E8);
    sub_2288AFEC0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A0F0);
  }
  return result;
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.vehicleClass.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22883741C(v1, a1, &qword_268268CD0);
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.vehicleRestrictions.getter()
{
  type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege(0);

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege(uint64_t a1)
{
  return sub_22882D77C(a1, (uint64_t *)&unk_26826A118);
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.vehicleEndorsements.getter()
{
  type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege(0);

  return swift_bridgeObjectRetain();
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.hash(into:)(uint64_t a1)
{
  sub_2288289E4(a1);
  uint64_t v3 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege(0);
  uint64_t v4 = *(void *)(v1 + *(int *)(v3 + 20));
  swift_bridgeObjectRetain();
  sub_228829C88(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v1 + *(int *)(v3 + 24));
  swift_bridgeObjectRetain();
  sub_228829C88(a1, v5);

  return swift_bridgeObjectRelease();
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.hashValue.getter()
{
  sub_228916750();
  sub_2288289E4((uint64_t)v3);
  uint64_t v1 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege(0);
  sub_228829C88(v3, *(void *)(v0 + *(int *)(v1 + 20)));
  sub_228829C88(v3, *(void *)(v0 + *(int *)(v1 + 24)));
  return sub_228916780();
}

uint64_t sub_2288B0140(uint64_t a1)
{
  sub_228916750();
  sub_2288289E4((uint64_t)v4);
  sub_228829C88(v4, *(void *)(v1 + *(int *)(a1 + 20)));
  sub_228829C88(v4, *(void *)(v1 + *(int *)(a1 + 24)));
  return sub_228916780();
}

uint64_t sub_2288B01A4(uint64_t a1, uint64_t a2)
{
  sub_2288289E4(a1);
  uint64_t v4 = *(void *)(v2 + *(int *)(a2 + 20));
  uint64_t v5 = *(void *)(v4 + 16);
  sub_228916760();
  if (v5)
  {
    uint64_t v6 = v4 + 56;
    do
    {
      if (*(void *)(v6 - 16))
      {
        sub_228916770();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        sub_228915D10();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_228916770();
        swift_bridgeObjectRetain();
      }
      v6 += 32;
      sub_228915D10();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      --v5;
    }
    while (v5);
  }
  uint64_t v7 = *(void *)(v2 + *(int *)(a2 + 24));
  uint64_t v8 = *(void *)(v7 + 16);
  uint64_t result = sub_228916760();
  if (v8)
  {
    uint64_t v10 = v7 + 56;
    do
    {
      if (*(void *)(v10 - 16))
      {
        sub_228916770();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        sub_228915D10();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_228916770();
        swift_bridgeObjectRetain();
      }
      v10 += 32;
      sub_228915D10();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      --v8;
    }
    while (v8);
  }
  return result;
}

uint64_t sub_2288B0350(uint64_t a1, uint64_t a2)
{
  sub_228916750();
  sub_2288289E4((uint64_t)v5);
  sub_228829C88(v5, *(void *)(v2 + *(int *)(a2 + 20)));
  sub_228829C88(v5, *(void *)(v2 + *(int *)(a2 + 24)));
  return sub_228916780();
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass.code.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass.issueDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  return sub_22883741C(v1 + *(int *)(v3 + 24), a1, &qword_268268810);
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass.expirationDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  return sub_22883741C(v1 + *(int *)(v3 + 28), a1, &qword_268268810);
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass.hash(into:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_228914F70();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  v11 = (char *)&v15 - v10;
  swift_bridgeObjectRetain();
  sub_228915D10();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_228915D10();
  swift_bridgeObjectRelease();
  uint64_t v12 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  sub_22883741C(v1 + *(int *)(v12 + 24), (uint64_t)v11, &qword_268268810);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
  if (v13(v11, 1, v2) == 1)
  {
    sub_228916770();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v11, v2);
    sub_228916770();
    sub_2288B1C74(&qword_268268818, MEMORY[0x263F063B0]);
    sub_228915BD0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_22883741C(v1 + *(int *)(v12 + 28), (uint64_t)v8, &qword_268268810);
  if (v13(v8, 1, v2) == 1) {
    return sub_228916770();
  }
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
  sub_228916770();
  sub_2288B1C74(&qword_268268818, MEMORY[0x263F063B0]);
  sub_228915BD0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass.hashValue.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_228914F70();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  v11 = (char *)&v15 - v10;
  sub_228916750();
  sub_228915D10();
  sub_228915D10();
  uint64_t v12 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  sub_22883741C(v1 + *(int *)(v12 + 24), (uint64_t)v11, &qword_268268810);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
  if (v13(v11, 1, v2) == 1)
  {
    sub_228916770();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v11, v2);
    sub_228916770();
    sub_2288B1C74(&qword_268268818, MEMORY[0x263F063B0]);
    sub_228915BD0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_22883741C(v1 + *(int *)(v12 + 28), (uint64_t)v8, &qword_268268810);
  if (v13(v8, 1, v2) == 1)
  {
    sub_228916770();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_228916770();
    sub_2288B1C74(&qword_268268818, MEMORY[0x263F063B0]);
    sub_228915BD0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return sub_228916780();
}

uint64_t sub_2288B0AE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v5 = sub_228914F70();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
  MEMORY[0x270FA5388](v9 - 8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  v14 = (char *)&v17 - v13;
  sub_228915D10();
  sub_228915D10();
  sub_22883741C(v4 + *(int *)(a2 + 24), (uint64_t)v14, &qword_268268810);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (v15(v14, 1, v5) == 1)
  {
    sub_228916770();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v14, v5);
    sub_228916770();
    sub_2288B1C74(&qword_268268818, MEMORY[0x263F063B0]);
    sub_228915BD0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  sub_22883741C(v4 + *(int *)(a2 + 28), (uint64_t)v11, &qword_268268810);
  if (v15(v11, 1, v5) == 1) {
    return sub_228916770();
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
  sub_228916770();
  sub_2288B1C74(&qword_268268818, MEMORY[0x263F063B0]);
  sub_228915BD0();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_2288B0DD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v5 = sub_228914F70();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
  MEMORY[0x270FA5388](v9 - 8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  v14 = (char *)&v17 - v13;
  sub_228916750();
  sub_228915D10();
  sub_228915D10();
  sub_22883741C(v4 + *(int *)(a2 + 24), (uint64_t)v14, &qword_268268810);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (v15(v14, 1, v5) == 1)
  {
    sub_228916770();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v14, v5);
    sub_228916770();
    sub_2288B1C74(&qword_268268818, MEMORY[0x263F063B0]);
    sub_228915BD0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  sub_22883741C(v4 + *(int *)(a2 + 28), (uint64_t)v11, &qword_268268810);
  if (v15(v11, 1, v5) == 1)
  {
    sub_228916770();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
    sub_228916770();
    sub_2288B1C74(&qword_268268818, MEMORY[0x263F063B0]);
    sub_228915BD0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return sub_228916780();
}

uint64_t static MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleRestriction.== infix(_:_:)(void *a1, void *a2)
{
  return sub_22882A7D0(a1, a2) & 1;
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleEndorsement.code.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleEndorsement.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleEndorsement.== infix(_:_:)(void *a1, void *a2)
{
  return sub_22882A7D0(a1, a2) & 1;
}

uint64_t _s15ProximityReader31MobileDriversLicenseDataRequestV8ResponseV16DocumentElementsV21AAMVADrivingPrivilegeV2eeoiySbAI_AItFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  v30 = (uint64_t *)((char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268269440);
  uint64_t v8 = v7 - 8;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268CD0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (uint64_t *)((char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v14);
  v16 = (char *)&v29 - v15;
  MEMORY[0x270FA5388](v17);
  v19 = (char *)&v29 - v18;
  uint64_t v31 = a1;
  sub_22883741C(a1, (uint64_t)&v29 - v18, &qword_268268CD0);
  uint64_t v32 = a2;
  sub_22883741C(a2, (uint64_t)v16, &qword_268268CD0);
  uint64_t v20 = (uint64_t)&v10[*(int *)(v8 + 56)];
  sub_22883741C((uint64_t)v19, (uint64_t)v10, &qword_268268CD0);
  sub_22883741C((uint64_t)v16, v20, &qword_268268CD0);
  v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v21((uint64_t)v10, 1, v4) == 1)
  {
    sub_2288110C0((uint64_t)v16, &qword_268268CD0);
    sub_2288110C0((uint64_t)v19, &qword_268268CD0);
    if (v21(v20, 1, v4) == 1)
    {
      sub_2288110C0((uint64_t)v10, &qword_268268CD0);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_22883741C((uint64_t)v10, (uint64_t)v13, &qword_268268CD0);
  if (v21(v20, 1, v4) == 1)
  {
    sub_2288110C0((uint64_t)v16, &qword_268268CD0);
    sub_2288110C0((uint64_t)v19, &qword_268268CD0);
    sub_2288B2AD4((uint64_t)v13);
LABEL_6:
    sub_2288110C0((uint64_t)v10, &qword_268269440);
LABEL_10:
    char v27 = 0;
    return v27 & 1;
  }
  v22 = v30;
  sub_2288B3834(v20, (uint64_t)v30);
  BOOL v23 = _s15ProximityReader31MobileDriversLicenseDataRequestV8ResponseV16DocumentElementsV21AAMVADrivingPrivilegeV12VehicleClassV2eeoiySbAK_AKtFZ_0(v13, v22);
  sub_2288B2AD4((uint64_t)v22);
  sub_2288110C0((uint64_t)v16, &qword_268268CD0);
  sub_2288110C0((uint64_t)v19, &qword_268268CD0);
  sub_2288B2AD4((uint64_t)v13);
  sub_2288110C0((uint64_t)v10, &qword_268268CD0);
  if (!v23) {
    goto LABEL_10;
  }
LABEL_8:
  uint64_t v24 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege(0);
  uint64_t v26 = v31;
  uint64_t v25 = v32;
  if ((sub_22885AEE4(*(void *)(v31 + *(int *)(v24 + 20)), *(void *)(v32 + *(int *)(v24 + 20))) & 1) == 0) {
    goto LABEL_10;
  }
  char v27 = sub_22885AEE4(*(void *)(v26 + *(int *)(v24 + 24)), *(void *)(v25 + *(int *)(v24 + 24)));
  return v27 & 1;
}

uint64_t type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass(uint64_t a1)
{
  return sub_22882D77C(a1, (uint64_t *)&unk_26826A130);
}

BOOL _s15ProximityReader31MobileDriversLicenseDataRequestV8ResponseV16DocumentElementsV21AAMVADrivingPrivilegeV12VehicleClassV2eeoiySbAK_AKtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = sub_228914F70();
  uint64_t v57 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268CD8);
  MEMORY[0x270FA5388](v56);
  uint64_t v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v48 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v54 = (uint64_t)&v48 - v16;
  MEMORY[0x270FA5388](v17);
  uint64_t v55 = (uint64_t)&v48 - v18;
  MEMORY[0x270FA5388](v19);
  v21 = (char *)&v48 - v20;
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v48 - v23;
  MEMORY[0x270FA5388](v25);
  char v27 = (char *)&v48 - v26;
  if (*a1 == *a2 && a1[1] == a2[1] || (v28 = sub_228916660(), BOOL result = 0, (v28 & 1) != 0))
  {
    if (a1[2] == a2[2] && a1[3] == a2[3] || (v30 = sub_228916660(), BOOL result = 0, (v30 & 1) != 0))
    {
      v50 = v14;
      v52 = v8;
      v53 = v6;
      uint64_t v31 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
      sub_22883741C((uint64_t)a1 + *(int *)(v31 + 24), (uint64_t)v27, &qword_268268810);
      uint64_t v51 = v31;
      sub_22883741C((uint64_t)a2 + *(int *)(v31 + 24), (uint64_t)v24, &qword_268268810);
      uint64_t v32 = (uint64_t)&v11[*(int *)(v56 + 48)];
      sub_22883741C((uint64_t)v27, (uint64_t)v11, &qword_268268810);
      sub_22883741C((uint64_t)v24, v32, &qword_268268810);
      v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48);
      if (v33((uint64_t)v11, 1, v4) == 1)
      {
        sub_2288110C0((uint64_t)v24, &qword_268268810);
        sub_2288110C0((uint64_t)v27, &qword_268268810);
        if (v33(v32, 1, v4) == 1)
        {
          sub_2288110C0((uint64_t)v11, &qword_268268810);
LABEL_14:
          uint64_t v37 = v51;
          uint64_t v38 = (uint64_t)a1 + *(int *)(v51 + 28);
          uint64_t v39 = v55;
          sub_22883741C(v38, v55, &qword_268268810);
          uint64_t v40 = v54;
          sub_22883741C((uint64_t)a2 + *(int *)(v37 + 28), v54, &qword_268268810);
          uint64_t v41 = (uint64_t)v52;
          uint64_t v42 = (uint64_t)&v52[*(int *)(v56 + 48)];
          sub_22883741C(v39, (uint64_t)v52, &qword_268268810);
          sub_22883741C(v40, v42, &qword_268268810);
          if (v33(v41, 1, v4) == 1)
          {
            sub_2288110C0(v40, &qword_268268810);
            sub_2288110C0(v39, &qword_268268810);
            if (v33(v42, 1, v4) == 1)
            {
              sub_2288110C0(v41, &qword_268268810);
              return 1;
            }
          }
          else
          {
            uint64_t v43 = (uint64_t)v50;
            sub_22883741C(v41, (uint64_t)v50, &qword_268268810);
            if (v33(v42, 1, v4) != 1)
            {
              uint64_t v44 = v57;
              v45 = v53;
              (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(v53, v42, v4);
              sub_2288B1C74(&qword_268268CE8, MEMORY[0x263F063B0]);
              char v46 = sub_228915C30();
              v47 = *(void (**)(char *, uint64_t))(v44 + 8);
              v47(v45, v4);
              sub_2288110C0(v40, &qword_268268810);
              sub_2288110C0(v39, &qword_268268810);
              v47((char *)v43, v4);
              sub_2288110C0(v41, &qword_268268810);
              return (v46 & 1) != 0;
            }
            sub_2288110C0(v40, &qword_268268810);
            sub_2288110C0(v39, &qword_268268810);
            (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v43, v4);
          }
          uint64_t v34 = v41;
          goto LABEL_20;
        }
      }
      else
      {
        sub_22883741C((uint64_t)v11, (uint64_t)v21, &qword_268268810);
        if (v33(v32, 1, v4) != 1)
        {
          v35 = *(void (**)(char *, uint64_t, uint64_t))(v57 + 32);
          v48 = v21;
          v35(v53, v32, v4);
          sub_2288B1C74(&qword_268268CE8, MEMORY[0x263F063B0]);
          int v49 = sub_228915C30();
          v36 = *(void (**)(char *, uint64_t))(v57 + 8);
          v36(v53, v4);
          sub_2288110C0((uint64_t)v24, &qword_268268810);
          sub_2288110C0((uint64_t)v27, &qword_268268810);
          v36(v48, v4);
          sub_2288110C0((uint64_t)v11, &qword_268268810);
          if ((v49 & 1) == 0) {
            return 0;
          }
          goto LABEL_14;
        }
        sub_2288110C0((uint64_t)v24, &qword_268268810);
        sub_2288110C0((uint64_t)v27, &qword_268268810);
        (*(void (**)(char *, uint64_t))(v57 + 8))(v21, v4);
      }
      uint64_t v34 = (uint64_t)v11;
LABEL_20:
      sub_2288110C0(v34, &qword_268268CD8);
      return 0;
    }
  }
  return result;
}

uint64_t sub_2288B1C2C()
{
  return sub_2288B1C74(&qword_26826A0F8, (void (*)(uint64_t))type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege);
}

uint64_t sub_2288B1C74(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2288B1CBC()
{
  return sub_2288B1C74(&qword_26826A100, (void (*)(uint64_t))type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass);
}

unint64_t sub_2288B1D08()
{
  unint64_t result = qword_26826A108;
  if (!qword_26826A108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A108);
  }
  return result;
}

unint64_t sub_2288B1D60()
{
  unint64_t result = qword_26826A110;
  if (!qword_26826A110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A110);
  }
  return result;
}

uint64_t *_s21AAMVADrivingPrivilegeVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268CD0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      uint64_t v12 = a2[3];
      a1[2] = a2[2];
      a1[3] = v12;
      uint64_t v13 = *(int *)(v7 + 24);
      __dst = (char *)a1 + v13;
      uint64_t v29 = v8;
      uint64_t v14 = (char *)a2 + v13;
      uint64_t v15 = sub_228914F70();
      uint64_t v16 = *(void *)(v15 - 8);
      uint64_t v17 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48);
      uint64_t v18 = v14;
      uint64_t v19 = v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v17(v18, 1, v19))
      {
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
        memcpy(__dst, v18, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v16 + 16))(__dst, v18, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v19);
      }
      uint64_t v21 = v16;
      uint64_t v22 = *(int *)(v7 + 28);
      uint64_t v23 = (char *)a1 + v22;
      uint64_t v24 = (char *)a2 + v22;
      if (v17((char *)a2 + v22, 1, v19))
      {
        uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
        memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v23, v24, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v23, 0, 1, v19);
      }
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v29 + 56))(a1, 0, 1, v7);
    }
    uint64_t v26 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v26) = *(uint64_t *)((char *)a2 + v26);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s21AAMVADrivingPrivilegeVwxx(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = a1 + *(int *)(v2 + 24);
    uint64_t v4 = sub_228914F70();
    uint64_t v5 = *(void *)(v4 - 8);
    uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (!v6(v3, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    }
    uint64_t v7 = a1 + *(int *)(v2 + 28);
    if (!v6(v7, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
    }
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s21AAMVADrivingPrivilegeVwcp(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268CD0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v24 = v7;
    uint64_t v25 = a3;
    uint64_t v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    uint64_t v10 = a2[3];
    a1[2] = a2[2];
    a1[3] = v10;
    uint64_t v11 = *(int *)(v6 + 24);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_228914F70();
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v16(v13, 1, v14))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
      memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    uint64_t v18 = *(int *)(v6 + 28);
    uint64_t v19 = (char *)a1 + v18;
    uint64_t v20 = (char *)a2 + v18;
    if (v16((char *)a2 + v18, 1, v14))
    {
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v19, v20, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v19, 0, 1, v14);
    }
    a3 = v25;
    (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(a1, 0, 1, v6);
  }
  uint64_t v22 = *(int *)(a3 + 24);
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  *(void *)((char *)a1 + v22) = *(void *)((char *)a2 + v22);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *_s21AAMVADrivingPrivilegeVwca(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_2288B2AD4((uint64_t)a1);
      goto LABEL_7;
    }
    uint64_t v41 = a3;
    *(void *)a1 = *(void *)a2;
    *((void *)a1 + 1) = *((void *)a2 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((void *)a1 + 2) = *((void *)a2 + 2);
    *((void *)a1 + 3) = *((void *)a2 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v18 = *(int *)(v6 + 24);
    uint64_t v19 = &a1[v18];
    uint64_t v20 = &a2[v18];
    uint64_t v21 = sub_228914F70();
    uint64_t v22 = *(void *)(v21 - 8);
    uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
    int v24 = v23(v19, 1, v21);
    int v25 = v23(v20, 1, v21);
    if (v24)
    {
      if (!v25)
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
        goto LABEL_19;
      }
    }
    else
    {
      if (!v25)
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 24))(v19, v20, v21);
LABEL_19:
        uint64_t v32 = *(int *)(v6 + 28);
        v33 = &a1[v32];
        uint64_t v34 = &a2[v32];
        int v35 = v23(&a1[v32], 1, v21);
        int v36 = v23(v34, 1, v21);
        if (v35)
        {
          if (!v36)
          {
            (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v33, v34, v21);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v33, 0, 1, v21);
LABEL_25:
            a3 = v41;
            goto LABEL_26;
          }
        }
        else
        {
          if (!v36)
          {
            (*(void (**)(char *, char *, uint64_t))(v22 + 24))(v33, v34, v21);
            goto LABEL_25;
          }
          (*(void (**)(char *, uint64_t))(v22 + 8))(v33, v21);
        }
        uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
        memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64));
        goto LABEL_25;
      }
      (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v21);
    }
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
    memcpy(v19, v20, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_19;
  }
  if (!v10)
  {
    uint64_t v40 = v7;
    uint64_t v41 = a3;
    *(void *)a1 = *(void *)a2;
    *((void *)a1 + 1) = *((void *)a2 + 1);
    *((void *)a1 + 2) = *((void *)a2 + 2);
    *((void *)a1 + 3) = *((void *)a2 + 3);
    uint64_t v11 = *(int *)(v6 + 24);
    __dst = &a1[v11];
    uint64_t v12 = &a2[v11];
    uint64_t v13 = sub_228914F70();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v15(v12, 1, v13))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
      memcpy(__dst, v12, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(__dst, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
    }
    uint64_t v26 = v14;
    uint64_t v27 = *(int *)(v6 + 28);
    char v28 = &a1[v27];
    uint64_t v29 = &a2[v27];
    if (v15(&a2[v27], 1, v13))
    {
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
      memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v28, v29, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v28, 0, 1, v13);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(a1, 0, 1, v6);
    goto LABEL_25;
  }
LABEL_7:
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268CD0);
  memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
LABEL_26:
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2288B2AD4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *_s21AAMVADrivingPrivilegeVwtk(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268CD0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v23 = v7;
    long long v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    uint64_t v10 = *(int *)(v6 + 24);
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = sub_228914F70();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    if (v15(v12, 1, v13))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
      memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    uint64_t v17 = *(int *)(v6 + 28);
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    if (v15((char *)a2 + v17, 1, v13))
    {
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v19, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v18, 0, 1, v13);
    }
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v23 + 56))(a1, 0, 1, v6);
  }
  uint64_t v21 = *(int *)(a3 + 24);
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  *(void *)((char *)a1 + v21) = *(void *)((char *)a2 + v21);
  return a1;
}

char *_s21AAMVADrivingPrivilegeVwta(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_2288B2AD4((uint64_t)a1);
      goto LABEL_7;
    }
    uint64_t v42 = a3;
    uint64_t v20 = *((void *)a2 + 1);
    *(void *)a1 = *(void *)a2;
    *((void *)a1 + 1) = v20;
    swift_bridgeObjectRelease();
    uint64_t v21 = *((void *)a2 + 3);
    *((void *)a1 + 2) = *((void *)a2 + 2);
    *((void *)a1 + 3) = v21;
    swift_bridgeObjectRelease();
    uint64_t v22 = *(int *)(v6 + 24);
    uint64_t v23 = &a1[v22];
    int v24 = &a2[v22];
    uint64_t v25 = sub_228914F70();
    uint64_t v26 = *(void *)(v25 - 8);
    uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
    int v28 = v27(v23, 1, v25);
    int v29 = v27(v24, 1, v25);
    if (v28)
    {
      if (!v29)
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
        goto LABEL_19;
      }
    }
    else
    {
      if (!v29)
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 40))(v23, v24, v25);
LABEL_19:
        uint64_t v35 = *(int *)(v6 + 28);
        int v36 = &a1[v35];
        uint64_t v37 = &a2[v35];
        int v38 = v27(&a1[v35], 1, v25);
        int v39 = v27(v37, 1, v25);
        if (v38)
        {
          if (!v39)
          {
            (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v36, v37, v25);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v36, 0, 1, v25);
LABEL_25:
            a3 = v42;
            goto LABEL_26;
          }
        }
        else
        {
          if (!v39)
          {
            (*(void (**)(char *, char *, uint64_t))(v26 + 40))(v36, v37, v25);
            goto LABEL_25;
          }
          (*(void (**)(char *, uint64_t))(v26 + 8))(v36, v25);
        }
        uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
        memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64));
        goto LABEL_25;
      }
      (*(void (**)(char *, uint64_t))(v26 + 8))(v23, v25);
    }
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
    memcpy(v23, v24, *(void *)(*(void *)(v34 - 8) + 64));
    goto LABEL_19;
  }
  if (!v10)
  {
    uint64_t v42 = a3;
    long long v11 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v11;
    uint64_t v12 = *(int *)(v6 + 24);
    uint64_t v13 = &a1[v12];
    uint64_t v14 = &a2[v12];
    uint64_t v15 = sub_228914F70();
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    if (v17(v14, 1, v15))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
      memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    uint64_t v30 = *(int *)(v6 + 28);
    uint64_t v31 = &a1[v30];
    uint64_t v32 = &a2[v30];
    if (v17(&a2[v30], 1, v15))
    {
      uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
      memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v31, v32, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v31, 0, 1, v15);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    goto LABEL_25;
  }
LABEL_7:
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268CD0);
  memcpy(a1, a2, *(void *)(*(void *)(v19 - 8) + 64));
LABEL_26:
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRelease();
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s21AAMVADrivingPrivilegeVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2288B3334);
}

uint64_t sub_2288B3334(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268CD0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t _s21AAMVADrivingPrivilegeVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2288B340C);
}

uint64_t sub_2288B340C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_268268CD0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

void sub_2288B34CC()
{
  sub_2288B37C0(319, &qword_26826A128, (void (*)(uint64_t))type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t _s21AAMVADrivingPrivilegeV12VehicleClassVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2288B3598);
}

uint64_t sub_2288B3598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t _s21AAMVADrivingPrivilegeV12VehicleClassVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2288B3660);
}

uint64_t sub_2288B3660(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_2288B370C()
{
  sub_2288B37C0(319, (unint64_t *)&qword_268268AF0, MEMORY[0x263F063B0]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_2288B37C0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2289161E0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleRestriction()
{
  return &type metadata for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleRestriction;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleEndorsement()
{
  return &type metadata for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleEndorsement;
}

uint64_t sub_2288B3834(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t IdentityReaderErrorInternal.publicLogMessage.getter()
{
  uint64_t v1 = *((void *)v0 + 2);
  uint64_t v2 = *((void *)v0 + 3);
  long long v6 = *v0;
  uint64_t v7 = v1;
  uint64_t v8 = v2;
  IdentityReaderErrorInternal.externalize.getter(v5);
  uint64_t result = sub_228915CE0();
  *(void *)&long long v6 = result;
  *((void *)&v6 + 1) = v4;
  if (v2)
  {
    v5[0] = 10272;
    v5[1] = 0xE200000000000000;
    sub_228915D60();
    sub_228915D60();
    sub_228915D60();
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

void IdentityReaderErrorInternal.externalize.getter(unsigned char *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 8);
  if (v2 > 0x15) {
    *a1 = 3;
  }
  else {
    *a1 = byte_22892120A[v2];
  }
}

uint64_t IdentityReaderErrorInternal.init(_:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v40 = sub_228915620();
  uint64_t v4 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  long long v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_228915600();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (void *)((char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_228915610();
  int v14 = (*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 88))(v13, v10);
  if (v14 == *MEMORY[0x263F35DB8])
  {
    (*(void (**)(uint64_t *, uint64_t))(v11 + 96))(v13, v10);
    uint64_t v15 = *v13;
    uint64_t v16 = v13[1];
  }
  else
  {
    if (v14 != *MEMORY[0x263F35DC0])
    {
      if (v14 == *MEMORY[0x263F35D38])
      {
        uint64_t v15 = 0;
        uint64_t v16 = 1;
        goto LABEL_45;
      }
      if (v14 == *MEMORY[0x263F35D58])
      {
        uint64_t v15 = 0;
        uint64_t v16 = 4;
        goto LABEL_45;
      }
      if (v14 == *MEMORY[0x263F35DB0])
      {
        uint64_t v15 = 0;
        uint64_t v16 = 7;
        goto LABEL_45;
      }
      if (v14 == *MEMORY[0x263F35DC8])
      {
        uint64_t v15 = 0;
        uint64_t v16 = 2;
        goto LABEL_45;
      }
      if (v14 == *MEMORY[0x263F35D80])
      {
        uint64_t v15 = 0;
        uint64_t v16 = 11;
        goto LABEL_45;
      }
      if (v14 == *MEMORY[0x263F35D30])
      {
        uint64_t v15 = 0;
        uint64_t v16 = 8;
        goto LABEL_45;
      }
      if (v14 == *MEMORY[0x263F35D20])
      {
        uint64_t v15 = 0;
        uint64_t v16 = 16;
        goto LABEL_45;
      }
      if (v14 == *MEMORY[0x263F35D48])
      {
        uint64_t v15 = 0;
        uint64_t v16 = 6;
        goto LABEL_45;
      }
      if (v14 == *MEMORY[0x263F35D78])
      {
        uint64_t v15 = 0;
        uint64_t v16 = 5;
        goto LABEL_45;
      }
      if (v14 == *MEMORY[0x263F35D68])
      {
        uint64_t v15 = 0;
        uint64_t v16 = 15;
        goto LABEL_45;
      }
      if (v14 == *MEMORY[0x263F35D40])
      {
        uint64_t v15 = 0;
        uint64_t v16 = 12;
        goto LABEL_45;
      }
      if (v14 == *MEMORY[0x263F35D90])
      {
        uint64_t v15 = 0;
        uint64_t v16 = 17;
        goto LABEL_45;
      }
      if (v14 == *MEMORY[0x263F35DA8])
      {
        uint64_t v15 = 0;
        uint64_t v16 = 9;
        goto LABEL_45;
      }
      if (v14 == *MEMORY[0x263F35D70])
      {
        uint64_t v15 = 0;
        uint64_t v16 = 18;
        goto LABEL_45;
      }
      if (v14 == *MEMORY[0x263F35D88])
      {
        uint64_t v15 = 0;
        uint64_t v16 = 19;
        goto LABEL_45;
      }
      if (v14 == *MEMORY[0x263F35D28])
      {
        uint64_t v15 = 0;
        uint64_t v16 = 3;
        goto LABEL_45;
      }
      if (v14 == *MEMORY[0x263F35D98])
      {
        uint64_t v15 = 0;
        uint64_t v16 = 13;
        goto LABEL_45;
      }
      if (v14 == *MEMORY[0x263F35D50])
      {
        uint64_t v15 = 0;
        uint64_t v16 = 14;
        goto LABEL_45;
      }
      if (v14 == *MEMORY[0x263F35D60])
      {
        uint64_t v15 = 0;
        uint64_t v16 = 20;
        goto LABEL_45;
      }
      if (v14 == *MEMORY[0x263F35DA0])
      {
        uint64_t v15 = 0;
        uint64_t v16 = 10;
        goto LABEL_45;
      }
      if (qword_268267F00 != -1) {
        swift_once();
      }
      uint64_t v21 = __swift_project_value_buffer(v7, (uint64_t)qword_268283D68);
      sub_22880AB38(v21, (uint64_t)v9);
      uint64_t v22 = sub_2289155C0();
      uint64_t v38 = *(void *)(v22 - 8);
      uint64_t v39 = v22;
      if ((*(unsigned int (**)(char *, uint64_t))(v38 + 48))(v9, 1) == 1)
      {
        sub_2288110C0((uint64_t)v9, (uint64_t *)&unk_2682684D0);
      }
      else
      {
        uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
        v35(v6, a1, v40);
        uint64_t v23 = sub_2289155A0();
        os_log_type_t v24 = sub_228916050();
        uint64_t v37 = v23;
        int v36 = v24;
        if (os_log_type_enabled(v23, v24))
        {
          uint64_t v25 = (uint8_t *)swift_slowAlloc();
          uint64_t v34 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v25 = 138412290;
          v32[2] = v25 + 12;
          uint64_t v33 = v25;
          v32[1] = v25 + 4;
          sub_2288B8EA8();
          uint64_t v26 = v40;
          v32[0] = swift_allocError();
          v35(v27, (uint64_t)v6, v26);
          uint64_t v28 = _swift_stdlib_bridgeErrorToNSError();
          uint64_t v41 = v28;
          sub_2289161F0();
          *uint64_t v34 = v28;
          (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v40);
          int v29 = v37;
          uint64_t v30 = v33;
          _os_log_impl(&dword_228806000, v37, (os_log_type_t)v36, "Could not parse identity session error: [ %@ ]", v33, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_268269A10);
          uint64_t v31 = v34;
          swift_arrayDestroy();
          MEMORY[0x22A6A1090](v31, -1, -1);
          MEMORY[0x22A6A1090](v30, -1, -1);
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v40);
        }
        (*(void (**)(char *, uint64_t))(v38 + 8))(v9, v39);
      }
      (*(void (**)(uint64_t *, uint64_t))(v11 + 8))(v13, v10);
    }
    uint64_t v15 = 0;
    uint64_t v16 = 0;
  }
LABEL_45:
  uint64_t v17 = sub_2289155F0();
  uint64_t v19 = v18;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v40);
  *a2 = v15;
  a2[1] = v16;
  a2[2] = v17;
  a2[3] = v19;
  return result;
}

uint64_t IdentityReaderErrorInternal.Code.hash(into:)()
{
  switch(*(void *)(v0 + 8))
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 0xALL:
    case 0xBLL:
    case 0xCLL:
    case 0xDLL:
    case 0xELL:
    case 0xFLL:
    case 0x10:
    case 0x11:
    case 0x12:
    case 0x13:
    case 0x14:
    case 0x15:
      uint64_t result = sub_228916760();
      break;
    default:
      sub_228916760();
      uint64_t result = sub_228915D10();
      break;
  }
  return result;
}

unint64_t sub_2288B4260(char a1)
{
  unint64_t result = 0x6E776F6E6B6E75;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x776F6C6C41746F6ELL;
      break;
    case 2:
      unint64_t result = 0x656C6C65636E6163;
      break;
    case 3:
      unint64_t result = 0x456B726F7774656ELL;
      break;
    case 4:
    case 5:
      unint64_t result = 0x5264696C61766E69;
      break;
    case 6:
      unint64_t result = 0x5464696C61766E69;
      break;
    case 7:
      unint64_t result = 0x75426D6574737973;
      break;
    case 8:
      unint64_t result = 0x626173694463666ELL;
      break;
    case 9:
      unint64_t result = 0x687265764F63666ELL;
      break;
    case 10:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 11:
      unint64_t result = 0xD000000000000011;
      break;
    case 12:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 13:
    case 15:
      unint64_t result = 0xD000000000000010;
      break;
    case 14:
      unint64_t result = 0x6F70707553746F6ELL;
      break;
    case 16:
      unint64_t result = 0xD000000000000015;
      break;
    case 17:
      unint64_t result = 0x6954726564616572;
      break;
    case 18:
      unint64_t result = 0xD000000000000024;
      break;
    case 19:
      unint64_t result = 0x456E6F6973736573;
      break;
    case 20:
      unint64_t result = 0xD000000000000012;
      break;
    case 21:
      unint64_t result = 0xD000000000000015;
      break;
    case 22:
      unint64_t result = 0xD00000000000001BLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2288B456C(uint64_t a1)
{
  unint64_t v2 = sub_2288B9528();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2288B45A8(uint64_t a1)
{
  unint64_t v2 = sub_2288B9528();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2288B45E4(uint64_t a1)
{
  unint64_t v2 = sub_2288B957C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2288B4620(uint64_t a1)
{
  unint64_t v2 = sub_2288B957C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2288B465C(uint64_t a1)
{
  unint64_t v2 = sub_2288B95D0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2288B4698(uint64_t a1)
{
  unint64_t v2 = sub_2288B95D0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2288B46D4(uint64_t a1)
{
  unint64_t v2 = sub_2288B98C4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2288B4710(uint64_t a1)
{
  unint64_t v2 = sub_2288B98C4();

  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_2288B474C()
{
  return sub_2288B4260(*v0);
}

uint64_t sub_2288B4754@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2288BB504(a1, a2);
  *a3 = result;
  return result;
}

void sub_2288B477C(unsigned char *a1@<X8>)
{
  *a1 = 23;
}

uint64_t sub_2288B4788(uint64_t a1)
{
  unint64_t v2 = sub_2288B91E0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2288B47C4(uint64_t a1)
{
  unint64_t v2 = sub_2288B91E0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2288B4800(uint64_t a1)
{
  unint64_t v2 = sub_2288B9234();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2288B483C(uint64_t a1)
{
  unint64_t v2 = sub_2288B9234();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2288B4878(uint64_t a1)
{
  unint64_t v2 = sub_2288B981C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2288B48B4(uint64_t a1)
{
  unint64_t v2 = sub_2288B981C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2288B48F0(uint64_t a1)
{
  unint64_t v2 = sub_2288B97C8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2288B492C(uint64_t a1)
{
  unint64_t v2 = sub_2288B97C8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2288B4968(uint64_t a1)
{
  unint64_t v2 = sub_2288B9774();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2288B49A4(uint64_t a1)
{
  unint64_t v2 = sub_2288B9774();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2288B49E0(uint64_t a1)
{
  unint64_t v2 = sub_2288B9870();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2288B4A1C(uint64_t a1)
{
  unint64_t v2 = sub_2288B9870();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2288B4A58(uint64_t a1)
{
  unint64_t v2 = sub_2288B96CC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2288B4A94(uint64_t a1)
{
  unint64_t v2 = sub_2288B96CC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2288B4AD0(uint64_t a1)
{
  unint64_t v2 = sub_2288B9624();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2288B4B0C(uint64_t a1)
{
  unint64_t v2 = sub_2288B9624();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2288B4B48(uint64_t a1)
{
  unint64_t v2 = sub_2288B9678();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2288B4B84(uint64_t a1)
{
  unint64_t v2 = sub_2288B9678();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2288B4BC0(uint64_t a1)
{
  unint64_t v2 = sub_2288B9918();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2288B4BFC(uint64_t a1)
{
  unint64_t v2 = sub_2288B9918();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2288B4C38(uint64_t a1)
{
  unint64_t v2 = sub_2288B94D4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2288B4C74(uint64_t a1)
{
  unint64_t v2 = sub_2288B94D4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2288B4CB0(uint64_t a1)
{
  unint64_t v2 = sub_2288B9288();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2288B4CEC(uint64_t a1)
{
  unint64_t v2 = sub_2288B9288();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2288B4D28(uint64_t a1)
{
  unint64_t v2 = sub_2288B9480();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2288B4D64(uint64_t a1)
{
  unint64_t v2 = sub_2288B9480();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2288B4DA0(uint64_t a1)
{
  unint64_t v2 = sub_2288B942C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2288B4DDC(uint64_t a1)
{
  unint64_t v2 = sub_2288B942C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2288B4E18(uint64_t a1)
{
  unint64_t v2 = sub_2288B93D8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2288B4E54(uint64_t a1)
{
  unint64_t v2 = sub_2288B93D8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2288B4E90(uint64_t a1)
{
  unint64_t v2 = sub_2288B92DC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2288B4ECC(uint64_t a1)
{
  unint64_t v2 = sub_2288B92DC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2288B4F08(uint64_t a1)
{
  unint64_t v2 = sub_2288B9330();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2288B4F44(uint64_t a1)
{
  unint64_t v2 = sub_2288B9330();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2288B4F80(uint64_t a1)
{
  unint64_t v2 = sub_2288B9720();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2288B4FBC(uint64_t a1)
{
  unint64_t v2 = sub_2288B9720();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2288B4FF8()
{
  return 0x657A696C61636F6CLL;
}

uint64_t sub_2288B501C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x657A696C61636F6CLL && a2 == 0xEF676E6972745364)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_228916660();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2288B50D8(uint64_t a1)
{
  unint64_t v2 = sub_2288B9384();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2288B5114(uint64_t a1)
{
  unint64_t v2 = sub_2288B9384();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2288B5150(uint64_t a1)
{
  unint64_t v2 = sub_2288B996C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2288B518C(uint64_t a1)
{
  unint64_t v2 = sub_2288B996C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t IdentityReaderErrorInternal.Code.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A148);
  uint64_t v132 = *(void *)(v3 - 8);
  uint64_t v133 = v3;
  MEMORY[0x270FA5388](v3);
  v131 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A150);
  uint64_t v129 = *(void *)(v5 - 8);
  uint64_t v130 = v5;
  MEMORY[0x270FA5388](v5);
  v128 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A158);
  uint64_t v69 = *(void *)(v70 - 8);
  MEMORY[0x270FA5388](v70);
  v68 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A160);
  uint64_t v126 = *(void *)(v8 - 8);
  uint64_t v127 = v8;
  MEMORY[0x270FA5388](v8);
  v124 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A168);
  uint64_t v123 = *(void *)(v125 - 8);
  MEMORY[0x270FA5388](v125);
  v122 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A170);
  uint64_t v120 = *(void *)(v11 - 8);
  uint64_t v121 = v11;
  MEMORY[0x270FA5388](v11);
  v119 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A178);
  uint64_t v117 = *(void *)(v13 - 8);
  uint64_t v118 = v13;
  MEMORY[0x270FA5388](v13);
  v116 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A180);
  uint64_t v114 = *(void *)(v115 - 8);
  MEMORY[0x270FA5388](v115);
  v113 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A188);
  uint64_t v111 = *(void *)(v112 - 8);
  MEMORY[0x270FA5388](v112);
  v110 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A190);
  uint64_t v108 = *(void *)(v109 - 8);
  MEMORY[0x270FA5388](v109);
  v107 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A198);
  uint64_t v105 = *(void *)(v106 - 8);
  MEMORY[0x270FA5388](v106);
  v104 = (char *)&v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A1A0);
  uint64_t v102 = *(void *)(v103 - 8);
  MEMORY[0x270FA5388](v103);
  v101 = (char *)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A1A8);
  uint64_t v99 = *(void *)(v100 - 8);
  MEMORY[0x270FA5388](v100);
  v98 = (char *)&v67 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A1B0);
  uint64_t v96 = *(void *)(v97 - 8);
  MEMORY[0x270FA5388](v97);
  v95 = (char *)&v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A1B8);
  uint64_t v93 = *(void *)(v94 - 8);
  MEMORY[0x270FA5388](v94);
  v92 = (char *)&v67 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A1C0);
  uint64_t v90 = *(void *)(v91 - 8);
  MEMORY[0x270FA5388](v91);
  v89 = (char *)&v67 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A1C8);
  uint64_t v87 = *(void *)(v88 - 8);
  MEMORY[0x270FA5388](v88);
  v86 = (char *)&v67 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A1D0);
  uint64_t v84 = *(void *)(v85 - 8);
  MEMORY[0x270FA5388](v85);
  v83 = (char *)&v67 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A1D8);
  uint64_t v81 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  v80 = (char *)&v67 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A1E0);
  uint64_t v78 = *(void *)(v79 - 8);
  MEMORY[0x270FA5388](v79);
  v77 = (char *)&v67 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A1E8);
  uint64_t v75 = *(void *)(v76 - 8);
  MEMORY[0x270FA5388](v76);
  v74 = (char *)&v67 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A1F0);
  uint64_t v73 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v31 = (char *)&v67 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A1F8);
  uint64_t v72 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v34 = (char *)&v67 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A200);
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v135 = v35;
  uint64_t v136 = v36;
  MEMORY[0x270FA5388](v35);
  uint64_t v38 = (char *)&v67 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = v1[1];
  uint64_t v71 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2288B91E0();
  v134 = v38;
  sub_2289167B0();
  switch(v39)
  {
    case 0:
      char v137 = 0;
      sub_2288B996C();
      uint64_t v41 = v134;
      uint64_t v40 = v135;
      sub_228916580();
      (*(void (**)(char *, uint64_t))(v72 + 8))(v34, v32);
      goto LABEL_27;
    case 1:
      char v137 = 1;
      sub_2288B9918();
      v47 = v134;
      uint64_t v48 = v135;
      sub_228916580();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v31, v29);
      return (*(uint64_t (**)(char *, uint64_t))(v136 + 8))(v47, v48);
    case 2:
      char v137 = 2;
      sub_2288B98C4();
      int v49 = v74;
      uint64_t v41 = v134;
      uint64_t v40 = v135;
      sub_228916580();
      (*(void (**)(char *, uint64_t))(v75 + 8))(v49, v76);
      goto LABEL_27;
    case 3:
      char v137 = 3;
      sub_2288B9870();
      v50 = v77;
      uint64_t v41 = v134;
      uint64_t v40 = v135;
      sub_228916580();
      (*(void (**)(char *, uint64_t))(v78 + 8))(v50, v79);
      goto LABEL_27;
    case 4:
      char v137 = 4;
      sub_2288B981C();
      uint64_t v51 = v80;
      uint64_t v41 = v134;
      uint64_t v40 = v135;
      sub_228916580();
      (*(void (**)(char *, uint64_t))(v81 + 8))(v51, v82);
      goto LABEL_27;
    case 5:
      char v137 = 5;
      sub_2288B97C8();
      v52 = v83;
      uint64_t v41 = v134;
      uint64_t v40 = v135;
      sub_228916580();
      (*(void (**)(char *, uint64_t))(v84 + 8))(v52, v85);
      goto LABEL_27;
    case 6:
      char v137 = 6;
      sub_2288B9774();
      v53 = v86;
      uint64_t v41 = v134;
      uint64_t v40 = v135;
      sub_228916580();
      (*(void (**)(char *, uint64_t))(v87 + 8))(v53, v88);
      goto LABEL_27;
    case 7:
      char v137 = 7;
      sub_2288B9720();
      uint64_t v54 = v89;
      uint64_t v41 = v134;
      uint64_t v40 = v135;
      sub_228916580();
      (*(void (**)(char *, uint64_t))(v90 + 8))(v54, v91);
      goto LABEL_27;
    case 8:
      char v137 = 8;
      sub_2288B96CC();
      uint64_t v55 = v92;
      uint64_t v41 = v134;
      uint64_t v40 = v135;
      sub_228916580();
      (*(void (**)(char *, uint64_t))(v93 + 8))(v55, v94);
      goto LABEL_27;
    case 9:
      char v137 = 9;
      sub_2288B9678();
      uint64_t v56 = v95;
      uint64_t v41 = v134;
      uint64_t v40 = v135;
      sub_228916580();
      (*(void (**)(char *, uint64_t))(v96 + 8))(v56, v97);
      goto LABEL_27;
    case 10:
      char v137 = 10;
      sub_2288B9624();
      uint64_t v57 = v98;
      uint64_t v41 = v134;
      uint64_t v40 = v135;
      sub_228916580();
      (*(void (**)(char *, uint64_t))(v99 + 8))(v57, v100);
      goto LABEL_27;
    case 11:
      char v137 = 11;
      sub_2288B95D0();
      v58 = v101;
      uint64_t v41 = v134;
      uint64_t v40 = v135;
      sub_228916580();
      (*(void (**)(char *, uint64_t))(v102 + 8))(v58, v103);
      goto LABEL_27;
    case 12:
      char v137 = 12;
      sub_2288B957C();
      v59 = v104;
      uint64_t v41 = v134;
      uint64_t v40 = v135;
      sub_228916580();
      (*(void (**)(char *, uint64_t))(v105 + 8))(v59, v106);
      goto LABEL_27;
    case 13:
      char v137 = 13;
      sub_2288B9528();
      v60 = v107;
      uint64_t v41 = v134;
      uint64_t v40 = v135;
      sub_228916580();
      (*(void (**)(char *, uint64_t))(v108 + 8))(v60, v109);
      goto LABEL_27;
    case 14:
      char v137 = 14;
      sub_2288B94D4();
      v61 = v110;
      uint64_t v41 = v134;
      uint64_t v40 = v135;
      sub_228916580();
      (*(void (**)(char *, uint64_t))(v111 + 8))(v61, v112);
      goto LABEL_27;
    case 15:
      char v137 = 15;
      sub_2288B9480();
      v62 = v113;
      uint64_t v41 = v134;
      uint64_t v40 = v135;
      sub_228916580();
      (*(void (**)(char *, uint64_t))(v114 + 8))(v62, v115);
      goto LABEL_27;
    case 16:
      char v137 = 16;
      sub_2288B942C();
      v63 = v116;
      uint64_t v41 = v134;
      uint64_t v40 = v135;
      sub_228916580();
      uint64_t v65 = v117;
      uint64_t v64 = v118;
      goto LABEL_24;
    case 17:
      char v137 = 17;
      sub_2288B93D8();
      v63 = v119;
      uint64_t v41 = v134;
      uint64_t v40 = v135;
      sub_228916580();
      uint64_t v65 = v120;
      uint64_t v64 = v121;
      goto LABEL_24;
    case 18:
      char v137 = 19;
      sub_2288B9330();
      v63 = v124;
      uint64_t v41 = v134;
      uint64_t v40 = v135;
      sub_228916580();
      uint64_t v65 = v126;
      uint64_t v64 = v127;
      goto LABEL_24;
    case 19:
      char v137 = 20;
      sub_2288B92DC();
      v66 = v68;
      uint64_t v41 = v134;
      uint64_t v40 = v135;
      sub_228916580();
      (*(void (**)(char *, uint64_t))(v69 + 8))(v66, v70);
      goto LABEL_27;
    case 20:
      char v137 = 21;
      sub_2288B9288();
      v63 = v128;
      uint64_t v41 = v134;
      uint64_t v40 = v135;
      sub_228916580();
      uint64_t v65 = v129;
      uint64_t v64 = v130;
      goto LABEL_24;
    case 21:
      char v137 = 22;
      sub_2288B9234();
      v63 = v131;
      uint64_t v41 = v134;
      uint64_t v40 = v135;
      sub_228916580();
      uint64_t v65 = v132;
      uint64_t v64 = v133;
LABEL_24:
      (*(void (**)(char *, uint64_t))(v65 + 8))(v63, v64);
LABEL_27:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v136 + 8))(v41, v40);
      break;
    default:
      char v137 = 18;
      sub_2288B9384();
      uint64_t v42 = v122;
      uint64_t v44 = v134;
      uint64_t v43 = v135;
      sub_228916580();
      uint64_t v45 = v125;
      sub_2289165D0();
      (*(void (**)(char *, uint64_t))(v123 + 8))(v42, v45);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v136 + 8))(v44, v43);
      break;
  }
  return result;
}

uint64_t IdentityReaderErrorInternal.Code.hashValue.getter()
{
  return sub_228916780();
}

uint64_t IdentityReaderErrorInternal.Code.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  v160 = a2;
  uint64_t v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A2C8);
  uint64_t v165 = *(void *)(v142 - 8);
  MEMORY[0x270FA5388](v142);
  v159 = (char *)&v95 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A2D0);
  uint64_t v140 = *(void *)(v141 - 8);
  MEMORY[0x270FA5388](v141);
  v164 = (char *)&v95 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A2D8);
  uint64_t v138 = *(void *)(v139 - 8);
  MEMORY[0x270FA5388](v139);
  v158 = (char *)&v95 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A2E0);
  uint64_t v134 = *(void *)(v136 - 8);
  MEMORY[0x270FA5388](v136);
  v156 = (char *)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A2E8);
  uint64_t v135 = *(void *)(v137 - 8);
  MEMORY[0x270FA5388](v137);
  v157 = (char *)&v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A2F0);
  uint64_t v132 = *(void *)(v133 - 8);
  MEMORY[0x270FA5388](v133);
  v155 = (char *)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A2F8);
  uint64_t v130 = *(void *)(v131 - 8);
  MEMORY[0x270FA5388](v131);
  v154 = (char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A300);
  uint64_t v128 = *(void *)(v129 - 8);
  MEMORY[0x270FA5388](v129);
  v153 = (char *)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A308);
  uint64_t v126 = *(void *)(v127 - 8);
  MEMORY[0x270FA5388](v127);
  v152 = (char *)&v95 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A310);
  uint64_t v124 = *(void *)(v125 - 8);
  MEMORY[0x270FA5388](v125);
  v151 = (char *)&v95 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A318);
  uint64_t v122 = *(void *)(v123 - 8);
  MEMORY[0x270FA5388](v123);
  v150 = (char *)&v95 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A320);
  uint64_t v120 = *(void *)(v121 - 8);
  MEMORY[0x270FA5388](v121);
  v149 = (char *)&v95 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A328);
  uint64_t v118 = *(void *)(v119 - 8);
  MEMORY[0x270FA5388](v119);
  v148 = (char *)&v95 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A330);
  uint64_t v116 = *(void *)(v117 - 8);
  MEMORY[0x270FA5388](v117);
  v147 = (char *)&v95 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A338);
  uint64_t v114 = *(void *)(v115 - 8);
  MEMORY[0x270FA5388](v115);
  v144 = (char *)&v95 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A340);
  uint64_t v112 = *(void *)(v113 - 8);
  MEMORY[0x270FA5388](v113);
  v163 = (char *)&v95 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A348);
  uint64_t v110 = *(void *)(v111 - 8);
  MEMORY[0x270FA5388](v111);
  v162 = (char *)&v95 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A350);
  uint64_t v108 = *(void *)(v109 - 8);
  MEMORY[0x270FA5388](v109);
  v146 = (char *)&v95 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A358);
  uint64_t v106 = *(void *)(v107 - 8);
  MEMORY[0x270FA5388](v107);
  v145 = (char *)&v95 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A360);
  uint64_t v104 = *(void *)(v105 - 8);
  MEMORY[0x270FA5388](v105);
  v161 = (char *)&v95 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A368);
  uint64_t v102 = *(void *)(v103 - 8);
  MEMORY[0x270FA5388](v103);
  v143 = (char *)&v95 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A370);
  uint64_t v100 = *(void *)(v101 - 8);
  MEMORY[0x270FA5388](v101);
  uint64_t v25 = (char *)&v95 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A378);
  uint64_t v99 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (char *)&v95 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A380);
  uint64_t v30 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v32 = (char *)&v95 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = a1[3];
  v166 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v33);
  sub_2288B91E0();
  uint64_t v34 = v167;
  sub_2289167A0();
  if (v34)
  {
LABEL_8:
    uint64_t v48 = (uint64_t)v166;
    return __swift_destroy_boxed_opaque_existential_1(v48);
  }
  uint64_t v96 = v28;
  uint64_t v95 = v26;
  uint64_t v97 = v25;
  uint64_t v36 = v161;
  uint64_t v35 = v162;
  uint64_t v37 = v163;
  uint64_t v38 = v164;
  uint64_t v98 = 0;
  uint64_t v39 = v165;
  uint64_t v167 = v30;
  uint64_t v40 = sub_228916570();
  if (*(void *)(v40 + 16) != 1)
  {
    uint64_t v45 = sub_228916360();
    swift_allocError();
    v47 = v46;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26826B190);
    void *v47 = &type metadata for IdentityReaderErrorInternal.Code;
    sub_2289164D0();
    sub_228916350();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v45 - 8) + 104))(v47, *MEMORY[0x263F8DCB0], v45);
    swift_willThrow();
LABEL_7:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v167 + 8))(v32, v29);
    goto LABEL_8;
  }
  switch(*(unsigned char *)(v40 + 32))
  {
    case 1:
      char v168 = 1;
      sub_2288B9918();
      v50 = v97;
      uint64_t v51 = v98;
      sub_2289164C0();
      if (v51) {
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v100 + 8))(v50, v101);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v167 + 8))(v32, v29);
      uint64_t v43 = 0;
      uint64_t v44 = 1;
      goto LABEL_55;
    case 2:
      char v168 = 2;
      sub_2288B98C4();
      v52 = v143;
      uint64_t v53 = v98;
      sub_2289164C0();
      if (v53) {
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v102 + 8))(v52, v103);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v167 + 8))(v32, v29);
      uint64_t v43 = 0;
      uint64_t v44 = 2;
      goto LABEL_55;
    case 3:
      char v168 = 3;
      sub_2288B9870();
      uint64_t v54 = v98;
      sub_2289164C0();
      if (v54) {
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v104 + 8))(v36, v105);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v167 + 8))(v32, v29);
      uint64_t v43 = 0;
      uint64_t v44 = 3;
      goto LABEL_55;
    case 4:
      char v168 = 4;
      sub_2288B981C();
      uint64_t v55 = v145;
      uint64_t v56 = v98;
      sub_2289164C0();
      if (v56) {
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v106 + 8))(v55, v107);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v167 + 8))(v32, v29);
      uint64_t v43 = 0;
      uint64_t v44 = 4;
      goto LABEL_55;
    case 5:
      char v168 = 5;
      sub_2288B97C8();
      uint64_t v57 = v146;
      uint64_t v58 = v98;
      sub_2289164C0();
      if (v58) {
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v108 + 8))(v57, v109);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v167 + 8))(v32, v29);
      uint64_t v43 = 0;
      uint64_t v44 = 5;
      goto LABEL_55;
    case 6:
      char v168 = 6;
      sub_2288B9774();
      uint64_t v59 = v98;
      sub_2289164C0();
      if (v59) {
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v110 + 8))(v35, v111);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v167 + 8))(v32, v29);
      uint64_t v43 = 0;
      uint64_t v44 = 6;
      goto LABEL_55;
    case 7:
      char v168 = 7;
      sub_2288B9720();
      uint64_t v60 = v98;
      sub_2289164C0();
      if (v60) {
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v112 + 8))(v37, v113);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v167 + 8))(v32, v29);
      uint64_t v43 = 0;
      uint64_t v44 = 7;
      goto LABEL_55;
    case 8:
      char v168 = 8;
      sub_2288B96CC();
      v61 = v144;
      uint64_t v62 = v98;
      sub_2289164C0();
      if (v62) {
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v114 + 8))(v61, v115);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v167 + 8))(v32, v29);
      uint64_t v43 = 0;
      uint64_t v44 = 8;
      goto LABEL_55;
    case 9:
      char v168 = 9;
      sub_2288B9678();
      v63 = v147;
      uint64_t v64 = v98;
      sub_2289164C0();
      if (v64) {
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v116 + 8))(v63, v117);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v167 + 8))(v32, v29);
      uint64_t v43 = 0;
      uint64_t v44 = 9;
      goto LABEL_55;
    case 0xA:
      char v168 = 10;
      sub_2288B9624();
      uint64_t v65 = v148;
      uint64_t v66 = v98;
      sub_2289164C0();
      if (v66) {
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v118 + 8))(v65, v119);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v167 + 8))(v32, v29);
      uint64_t v43 = 0;
      uint64_t v44 = 10;
      goto LABEL_55;
    case 0xB:
      char v168 = 11;
      sub_2288B95D0();
      uint64_t v67 = v149;
      uint64_t v68 = v98;
      sub_2289164C0();
      if (v68) {
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v120 + 8))(v67, v121);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v167 + 8))(v32, v29);
      uint64_t v43 = 0;
      uint64_t v44 = 11;
      goto LABEL_55;
    case 0xC:
      char v168 = 12;
      sub_2288B957C();
      uint64_t v69 = v150;
      uint64_t v70 = v98;
      sub_2289164C0();
      if (v70) {
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v122 + 8))(v69, v123);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v167 + 8))(v32, v29);
      uint64_t v43 = 0;
      uint64_t v44 = 12;
      goto LABEL_55;
    case 0xD:
      char v168 = 13;
      sub_2288B9528();
      uint64_t v71 = v151;
      uint64_t v72 = v98;
      sub_2289164C0();
      if (v72) {
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v124 + 8))(v71, v125);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v167 + 8))(v32, v29);
      uint64_t v43 = 0;
      uint64_t v44 = 13;
      goto LABEL_55;
    case 0xE:
      char v168 = 14;
      sub_2288B94D4();
      uint64_t v73 = v152;
      uint64_t v74 = v98;
      sub_2289164C0();
      if (v74) {
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v126 + 8))(v73, v127);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v167 + 8))(v32, v29);
      uint64_t v43 = 0;
      uint64_t v44 = 14;
      goto LABEL_55;
    case 0xF:
      char v168 = 15;
      sub_2288B9480();
      uint64_t v75 = v153;
      uint64_t v76 = v98;
      sub_2289164C0();
      if (v76) {
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v128 + 8))(v75, v129);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v167 + 8))(v32, v29);
      uint64_t v43 = 0;
      uint64_t v44 = 15;
      goto LABEL_55;
    case 0x10:
      char v168 = 16;
      sub_2288B942C();
      v77 = v154;
      uint64_t v78 = v98;
      sub_2289164C0();
      if (v78) {
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v130 + 8))(v77, v131);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v167 + 8))(v32, v29);
      uint64_t v43 = 0;
      uint64_t v44 = 16;
      goto LABEL_55;
    case 0x11:
      char v168 = 17;
      sub_2288B93D8();
      uint64_t v79 = v155;
      uint64_t v80 = v98;
      sub_2289164C0();
      if (v80) {
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v132 + 8))(v79, v133);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v167 + 8))(v32, v29);
      uint64_t v43 = 0;
      uint64_t v44 = 17;
      goto LABEL_55;
    case 0x12:
      char v168 = 18;
      sub_2288B9384();
      uint64_t v81 = v157;
      uint64_t v82 = v98;
      sub_2289164C0();
      if (v82) {
        goto LABEL_7;
      }
      uint64_t v83 = v137;
      uint64_t v84 = sub_228916520();
      uint64_t v85 = v167;
      uint64_t v43 = v84;
      uint64_t v44 = v94;
      (*(void (**)(char *, uint64_t))(v135 + 8))(v81, v83);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v85 + 8))(v32, v29);
      goto LABEL_55;
    case 0x13:
      char v168 = 19;
      sub_2288B9330();
      v86 = v156;
      uint64_t v87 = v98;
      sub_2289164C0();
      if (v87) {
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v134 + 8))(v86, v136);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v167 + 8))(v32, v29);
      uint64_t v43 = 0;
      uint64_t v44 = 18;
      goto LABEL_55;
    case 0x14:
      char v168 = 20;
      sub_2288B92DC();
      uint64_t v88 = v158;
      uint64_t v89 = v98;
      sub_2289164C0();
      if (v89) {
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v138 + 8))(v88, v139);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v167 + 8))(v32, v29);
      uint64_t v43 = 0;
      uint64_t v44 = 19;
      goto LABEL_55;
    case 0x15:
      char v168 = 21;
      sub_2288B9288();
      uint64_t v90 = v98;
      sub_2289164C0();
      if (v90) {
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v140 + 8))(v38, v141);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v167 + 8))(v32, v29);
      uint64_t v43 = 0;
      uint64_t v44 = 20;
      goto LABEL_55;
    case 0x16:
      char v168 = 22;
      sub_2288B9234();
      uint64_t v91 = v159;
      uint64_t v92 = v98;
      sub_2289164C0();
      if (v92)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v167 + 8))(v32, v29);
        uint64_t v48 = (uint64_t)v166;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v39 + 8))(v91, v142);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v167 + 8))(v32, v29);
        uint64_t v43 = 0;
        uint64_t v44 = 21;
        uint64_t v48 = (uint64_t)v166;
        uint64_t v93 = v160;
LABEL_56:
        *uint64_t v93 = v43;
        v93[1] = v44;
      }
      break;
    default:
      char v168 = 0;
      sub_2288B996C();
      uint64_t v41 = v96;
      uint64_t v42 = v98;
      sub_2289164C0();
      if (v42) {
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v99 + 8))(v41, v95);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v167 + 8))(v32, v29);
      uint64_t v43 = 0;
      uint64_t v44 = 0;
LABEL_55:
      uint64_t v48 = (uint64_t)v166;
      uint64_t v93 = v160;
      goto LABEL_56;
  }
  return __swift_destroy_boxed_opaque_existential_1(v48);
}

uint64_t sub_2288B8478@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return IdentityReaderErrorInternal.Code.init(from:)(a1, a2);
}

uint64_t sub_2288B8490(void *a1)
{
  return IdentityReaderErrorInternal.Code.encode(to:)(a1);
}

uint64_t sub_2288B84A8()
{
  return sub_228916780();
}

uint64_t sub_2288B84F8()
{
  return sub_228916780();
}

uint64_t IdentityReaderErrorInternal.code.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  return sub_22887CCB0(v2, v3);
}

uint64_t IdentityReaderErrorInternal.debugDescription.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

__n128 IdentityReaderErrorInternal.init(code:debugDescription:)@<Q0>(__n128 *a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, __n128 *a4@<X8>)
{
  __n128 result = *a1;
  *a4 = *a1;
  a4[1].n128_u64[0] = a2;
  a4[1].n128_u64[1] = a3;
  return result;
}

uint64_t IdentityReaderErrorInternal.init(_bridgedNSError:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_domain);
  uint64_t v5 = sub_228915C70();
  uint64_t v7 = v6;

  sub_2288B99C0();
  if (v5 == sub_228914ED0() && v7 == v8)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v10 = sub_228916660();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v10 & 1) == 0) {
      goto LABEL_15;
    }
  }
  id v12 = objc_msgSend(a1, sel_userInfo);
  uint64_t v13 = sub_228915BB0();

  if (!*(void *)(v13 + 16) || (unint64_t v14 = sub_228816C80(0xD000000000000032, 0x8000000228929FC0), (v15 & 1) == 0))
  {
    long long v27 = 0u;
    long long v28 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  sub_2288111D0(*(void *)(v13 + 56) + 32 * v14, (uint64_t)&v27);
  swift_bridgeObjectRelease();
  if (!*((void *)&v28 + 1))
  {
LABEL_14:
    uint64_t result = sub_2288110C0((uint64_t)&v27, &qword_268268500);
    goto LABEL_15;
  }
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_15:
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
    a2[3] = 1;
    return result;
  }
  sub_228915030();
  swift_allocObject();
  sub_228915020();
  sub_2288B9A14();
  sub_228915010();
  swift_release();
  long long v16 = v27;
  id v17 = objc_msgSend(a1, sel_code);
  if (*((void *)&v16 + 1) > 0x15uLL) {
    uint64_t v18 = 14;
  }
  else {
    uint64_t v18 = qword_228921220[*((void *)&v16 + 1)];
  }
  if (v17 != (id)v18)
  {
    sub_22887CC9C(v16, *((unint64_t *)&v16 + 1));
    uint64_t result = sub_22880BB80(v25, v26);
    goto LABEL_15;
  }
  id v19 = objc_msgSend(a1, sel_userInfo);
  uint64_t v20 = sub_228915BB0();

  if (*(void *)(v20 + 16) && (unint64_t v21 = sub_228816C80(0xD00000000000003ELL, 0x800000022892A000), (v22 & 1) != 0))
  {
    sub_2288111D0(*(void *)(v20 + 56) + 32 * v21, (uint64_t)&v27);
  }
  else
  {
    long long v27 = 0u;
    long long v28 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_22880BB80(v25, v26);
  if (*((void *)&v28 + 1))
  {
    uint64_t result = swift_dynamicCast();
    uint64_t v23 = v25;
    unint64_t v24 = v26;
    if (!result)
    {
      uint64_t v23 = 0;
      unint64_t v24 = 0;
    }
  }
  else
  {
    uint64_t result = sub_2288110C0((uint64_t)&v27, &qword_268268500);
    uint64_t v23 = 0;
    unint64_t v24 = 0;
  }
  *(_OWORD *)a2 = v16;
  a2[2] = v23;
  a2[3] = v24;
  return result;
}

uint64_t sub_2288B8904(uint64_t a1)
{
  unint64_t v2 = sub_2288B99C0();

  return MEMORY[0x270EF2670](a1, v2);
}

uint64_t sub_2288B8940(uint64_t a1)
{
  unint64_t v2 = sub_2288B99C0();

  return MEMORY[0x270EF2668](a1, v2);
}

uint64_t IdentityReaderErrorInternal.errorCode.getter()
{
  unint64_t v1 = *(void *)(v0 + 8);
  if (v1 > 0x15) {
    return 14;
  }
  else {
    return qword_228921220[v1];
  }
}

uint64_t IdentityReaderErrorInternal.errorUserInfo.getter()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v5 = MEMORY[0x263F8EE80];
  uint64_t v16 = MEMORY[0x263F8EE80];
  sub_228915060();
  swift_allocObject();
  sub_228915050();
  sub_22887CCB0(v1, v2);
  sub_2288B9A68();
  uint64_t v8 = sub_228915040();
  uint64_t v10 = v9;
  sub_22887CC9C(v1, v2);
  swift_release();
  uint64_t v15 = MEMORY[0x263F06F78];
  *(void *)&long long v14 = v8;
  *((void *)&v14 + 1) = v10;
  sub_22881122C(&v14, v13);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_22883AA3C(v13, 0xD000000000000032, 0x8000000228929FC0, isUniquelyReferenced_nonNull_native);
  uint64_t v16 = v5;
  swift_bridgeObjectRelease();
  if (v3)
  {
    uint64_t v15 = MEMORY[0x263F8D310];
    *(void *)&long long v14 = v4;
    *((void *)&v14 + 1) = v3;
    sub_22881122C(&v14, v13);
    swift_bridgeObjectRetain();
    uint64_t v6 = v16;
    char v7 = swift_isUniquelyReferenced_nonNull_native();
    sub_22883AA3C(v13, 0xD00000000000003ELL, 0x800000022892A000, v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_22883A2FC(0xD00000000000003ELL, 0x800000022892A000, &v14);
    sub_2288110C0((uint64_t)&v14, &qword_268268500);
    return v16;
  }
  return v6;
}

uint64_t sub_2288B8BC4()
{
  unint64_t v1 = *(void *)(v0 + 8);
  if (v1 > 0x15) {
    return 14;
  }
  else {
    return qword_228921220[v1];
  }
}

unint64_t IdentityReaderErrorInternal.description.getter()
{
  unint64_t result = 0xD000000000000010;
  switch(*(void *)(v0 + 8))
  {
    case 0:
      unint64_t result = 0x6E776F6E6B6E75;
      break;
    case 1:
      unint64_t result = 0x776F6C6C41746F6ELL;
      break;
    case 2:
      unint64_t result = 0x656C6C65636E6163;
      break;
    case 3:
      unint64_t result = 0x456B726F7774656ELL;
      break;
    case 4:
    case 5:
      unint64_t result = 0x5264696C61766E69;
      break;
    case 6:
      unint64_t result = 0x5464696C61766E69;
      break;
    case 7:
      unint64_t result = 0x75426D6574737973;
      break;
    case 8:
      unint64_t result = 0x626173694463666ELL;
      break;
    case 9:
      unint64_t result = 0x687265764F63666ELL;
      break;
    case 0xALL:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 0xBLL:
      unint64_t result = 0xD000000000000011;
      break;
    case 0xCLL:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 0xDLL:
    case 0xFLL:
      return result;
    case 0xELL:
      unint64_t result = 0x6F70707553746F6ELL;
      break;
    case 0x10:
      unint64_t result = 0xD000000000000015;
      break;
    case 0x11:
      unint64_t result = 0x6954726564616572;
      break;
    case 0x12:
      unint64_t result = 0x456E6F6973736573;
      break;
    case 0x13:
      unint64_t result = 0xD000000000000012;
      break;
    case 0x14:
      unint64_t result = 0xD000000000000015;
      break;
    case 0x15:
      unint64_t result = 0xD00000000000001BLL;
      break;
    default:
      unint64_t result = 0xD000000000000024;
      break;
  }
  return result;
}

unint64_t sub_2288B8EA8()
{
  unint64_t result = qword_26826A140;
  if (!qword_26826A140)
  {
    sub_228915620();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A140);
  }
  return result;
}

uint64_t _s15ProximityReader08IdentityB13ErrorInternalV4CodeO2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  switch(v3)
  {
    case 0uLL:
      if (v5) {
        goto LABEL_52;
      }
      unint64_t v3 = 0;
      char v6 = 1;
      break;
    case 1uLL:
      if (v5 != 1) {
        goto LABEL_52;
      }
      unint64_t v3 = 1;
      char v6 = 1;
      break;
    case 2uLL:
      if (v5 != 2) {
        goto LABEL_52;
      }
      char v6 = 1;
      unint64_t v3 = 2;
      break;
    case 3uLL:
      if (v5 != 3) {
        goto LABEL_52;
      }
      char v6 = 1;
      unint64_t v3 = 3;
      break;
    case 4uLL:
      if (v5 != 4) {
        goto LABEL_52;
      }
      char v6 = 1;
      unint64_t v3 = 4;
      break;
    case 5uLL:
      if (v5 != 5) {
        goto LABEL_52;
      }
      char v6 = 1;
      unint64_t v3 = 5;
      break;
    case 6uLL:
      if (v5 != 6) {
        goto LABEL_52;
      }
      char v6 = 1;
      unint64_t v3 = 6;
      break;
    case 7uLL:
      if (v5 != 7) {
        goto LABEL_52;
      }
      char v6 = 1;
      unint64_t v3 = 7;
      break;
    case 8uLL:
      if (v5 != 8) {
        goto LABEL_52;
      }
      char v6 = 1;
      unint64_t v3 = 8;
      break;
    case 9uLL:
      if (v5 != 9) {
        goto LABEL_52;
      }
      char v6 = 1;
      unint64_t v3 = 9;
      break;
    case 0xAuLL:
      if (v5 != 10) {
        goto LABEL_52;
      }
      char v6 = 1;
      unint64_t v3 = 10;
      break;
    case 0xBuLL:
      if (v5 != 11) {
        goto LABEL_52;
      }
      char v6 = 1;
      unint64_t v3 = 11;
      break;
    case 0xCuLL:
      if (v5 != 12) {
        goto LABEL_52;
      }
      char v6 = 1;
      unint64_t v3 = 12;
      break;
    case 0xDuLL:
      if (v5 != 13) {
        goto LABEL_52;
      }
      char v6 = 1;
      unint64_t v3 = 13;
      break;
    case 0xEuLL:
      if (v5 != 14) {
        goto LABEL_52;
      }
      char v6 = 1;
      unint64_t v3 = 14;
      break;
    case 0xFuLL:
      if (v5 != 15) {
        goto LABEL_52;
      }
      char v6 = 1;
      unint64_t v3 = 15;
      break;
    case 0x10uLL:
      if (v5 != 16) {
        goto LABEL_52;
      }
      char v6 = 1;
      unint64_t v3 = 16;
      break;
    case 0x11uLL:
      if (v5 != 17) {
        goto LABEL_52;
      }
      char v6 = 1;
      unint64_t v3 = 17;
      break;
    case 0x12uLL:
      if (v5 != 18) {
        goto LABEL_52;
      }
      char v6 = 1;
      unint64_t v3 = 18;
      break;
    case 0x13uLL:
      if (v5 != 19) {
        goto LABEL_52;
      }
      char v6 = 1;
      unint64_t v3 = 19;
      break;
    case 0x14uLL:
      if (v5 != 20) {
        goto LABEL_52;
      }
      char v6 = 1;
      unint64_t v3 = 20;
      break;
    case 0x15uLL:
      if (v5 != 21) {
        goto LABEL_52;
      }
      char v6 = 1;
      unint64_t v3 = 21;
      break;
    default:
      if (v5 < 0x16)
      {
LABEL_52:
        char v6 = 0;
      }
      else if (v2 == v4 && v3 == v5)
      {
        char v6 = 1;
      }
      else
      {
        char v6 = sub_228916660();
      }
      sub_22887CCB0(v4, v5);
      sub_22887CCB0(v2, v3);
      break;
  }
  sub_22887CC9C(v2, v3);
  sub_22887CC9C(v4, v5);
  return v6 & 1;
}

unint64_t sub_2288B91E0()
{
  unint64_t result = qword_26826A208;
  if (!qword_26826A208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A208);
  }
  return result;
}

unint64_t sub_2288B9234()
{
  unint64_t result = qword_26826A210;
  if (!qword_26826A210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A210);
  }
  return result;
}

unint64_t sub_2288B9288()
{
  unint64_t result = qword_26826A218;
  if (!qword_26826A218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A218);
  }
  return result;
}

unint64_t sub_2288B92DC()
{
  unint64_t result = qword_26826A220;
  if (!qword_26826A220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A220);
  }
  return result;
}

unint64_t sub_2288B9330()
{
  unint64_t result = qword_26826A228;
  if (!qword_26826A228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A228);
  }
  return result;
}

unint64_t sub_2288B9384()
{
  unint64_t result = qword_26826A230;
  if (!qword_26826A230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A230);
  }
  return result;
}

unint64_t sub_2288B93D8()
{
  unint64_t result = qword_26826A238;
  if (!qword_26826A238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A238);
  }
  return result;
}

unint64_t sub_2288B942C()
{
  unint64_t result = qword_26826A240;
  if (!qword_26826A240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A240);
  }
  return result;
}

unint64_t sub_2288B9480()
{
  unint64_t result = qword_26826A248;
  if (!qword_26826A248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A248);
  }
  return result;
}

unint64_t sub_2288B94D4()
{
  unint64_t result = qword_26826A250;
  if (!qword_26826A250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A250);
  }
  return result;
}

unint64_t sub_2288B9528()
{
  unint64_t result = qword_26826A258;
  if (!qword_26826A258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A258);
  }
  return result;
}

unint64_t sub_2288B957C()
{
  unint64_t result = qword_26826A260;
  if (!qword_26826A260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A260);
  }
  return result;
}

unint64_t sub_2288B95D0()
{
  unint64_t result = qword_26826A268;
  if (!qword_26826A268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A268);
  }
  return result;
}

unint64_t sub_2288B9624()
{
  unint64_t result = qword_26826A270;
  if (!qword_26826A270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A270);
  }
  return result;
}

unint64_t sub_2288B9678()
{
  unint64_t result = qword_26826A278;
  if (!qword_26826A278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A278);
  }
  return result;
}

unint64_t sub_2288B96CC()
{
  unint64_t result = qword_26826A280;
  if (!qword_26826A280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A280);
  }
  return result;
}

unint64_t sub_2288B9720()
{
  unint64_t result = qword_26826A288;
  if (!qword_26826A288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A288);
  }
  return result;
}

unint64_t sub_2288B9774()
{
  unint64_t result = qword_26826A290;
  if (!qword_26826A290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A290);
  }
  return result;
}

unint64_t sub_2288B97C8()
{
  unint64_t result = qword_26826A298;
  if (!qword_26826A298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A298);
  }
  return result;
}

unint64_t sub_2288B981C()
{
  unint64_t result = qword_26826A2A0;
  if (!qword_26826A2A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A2A0);
  }
  return result;
}

unint64_t sub_2288B9870()
{
  unint64_t result = qword_26826A2A8;
  if (!qword_26826A2A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A2A8);
  }
  return result;
}

unint64_t sub_2288B98C4()
{
  unint64_t result = qword_26826A2B0;
  if (!qword_26826A2B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A2B0);
  }
  return result;
}

unint64_t sub_2288B9918()
{
  unint64_t result = qword_26826A2B8;
  if (!qword_26826A2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A2B8);
  }
  return result;
}

unint64_t sub_2288B996C()
{
  unint64_t result = qword_26826A2C0;
  if (!qword_26826A2C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A2C0);
  }
  return result;
}

unint64_t sub_2288B99C0()
{
  unint64_t result = qword_26826A388;
  if (!qword_26826A388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A388);
  }
  return result;
}

unint64_t sub_2288B9A14()
{
  unint64_t result = qword_26826A390;
  if (!qword_26826A390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A390);
  }
  return result;
}

unint64_t sub_2288B9A68()
{
  unint64_t result = qword_26826A398;
  if (!qword_26826A398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A398);
  }
  return result;
}

unint64_t sub_2288B9AC0()
{
  unint64_t result = qword_26826A3A0;
  if (!qword_26826A3A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A3A0);
  }
  return result;
}

uint64_t destroy for IdentityReaderErrorInternal(uint64_t a1)
{
  if (*(void *)(a1 + 8) >= 0x16uLL) {
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for IdentityReaderErrorInternal(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (v4 >= 0x16)
  {
    *a1 = *a2;
    a1[1] = v4;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for IdentityReaderErrorInternal(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] >= 0x16uLL)
  {
    if (v4 >= 0x16)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_2288110C0((uint64_t)a1, &qword_26826A3A8);
    goto LABEL_6;
  }
  if (v4 < 0x16)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
LABEL_8:
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for IdentityReaderErrorInternal(void *a1, void *a2)
{
  if (a1[1] >= 0x16uLL)
  {
    unint64_t v4 = a2[1];
    if (v4 >= 0x16)
    {
      *a1 = *a2;
      a1[1] = v4;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_2288110C0((uint64_t)a1, &qword_26826A3A8);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_6:
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IdentityReaderErrorInternal(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for IdentityReaderErrorInternal(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal()
{
  return &type metadata for IdentityReaderErrorInternal;
}

unint64_t destroy for IdentityReaderErrorInternal.Code(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s15ProximityReader27IdentityReaderErrorInternalV4CodeOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for IdentityReaderErrorInternal.Code(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for IdentityReaderErrorInternal.Code(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IdentityReaderErrorInternal.Code(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFE9 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483626);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 21;
  if (v4 >= 0x17) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for IdentityReaderErrorInternal.Code(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFEA)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483626;
    if (a3 >= 0x7FFFFFEA) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFEA) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 21;
    }
  }
  return result;
}

uint64_t sub_2288B9FC4(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_2288B9FDC(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code()
{
  return &type metadata for IdentityReaderErrorInternal.Code;
}

uint64_t getEnumTagSinglePayload for IdentityReaderErrorInternal.Code.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEA) {
    goto LABEL_17;
  }
  if (a2 + 22 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 22) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 22;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 22;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 22;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x17;
  int v8 = v6 - 23;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for IdentityReaderErrorInternal.Code.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 22 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 22) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE9)
  {
    unsigned int v6 = ((a2 - 234) >> 8) + 1;
    *unint64_t result = a2 + 22;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2288BA168);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 22;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code.CodingKeys()
{
  return &type metadata for IdentityReaderErrorInternal.Code.CodingKeys;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code.UnknownCodingKeys()
{
  return &type metadata for IdentityReaderErrorInternal.Code.UnknownCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code.NotAllowedCodingKeys()
{
  return &type metadata for IdentityReaderErrorInternal.Code.NotAllowedCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code.CancelledCodingKeys()
{
  return &type metadata for IdentityReaderErrorInternal.Code.CancelledCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code.NetworkErrorCodingKeys()
{
  return &type metadata for IdentityReaderErrorInternal.Code.NetworkErrorCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code.InvalidRequestCodingKeys()
{
  return &type metadata for IdentityReaderErrorInternal.Code.InvalidRequestCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code.InvalidResponseCodingKeys()
{
  return &type metadata for IdentityReaderErrorInternal.Code.InvalidResponseCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code.InvalidTokenCodingKeys()
{
  return &type metadata for IdentityReaderErrorInternal.Code.InvalidTokenCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code.SystemBusyCodingKeys()
{
  return &type metadata for IdentityReaderErrorInternal.Code.SystemBusyCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code.NfcDisabledCodingKeys()
{
  return &type metadata for IdentityReaderErrorInternal.Code.NfcDisabledCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code.NfcOverheatCodingKeys()
{
  return &type metadata for IdentityReaderErrorInternal.Code.NfcOverheatCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code.NfcNegotiatedHandoverFailedCodingKeys()
{
  return &type metadata for IdentityReaderErrorInternal.Code.NfcNegotiatedHandoverFailedCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code.BluetoothDisabledCodingKeys()
{
  return &type metadata for IdentityReaderErrorInternal.Code.BluetoothDisabledCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code.AccountTwoFactorAuthRequiredCodingKeys()
{
  return &type metadata for IdentityReaderErrorInternal.Code.AccountTwoFactorAuthRequiredCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code.AccountSignedOutCodingKeys()
{
  return &type metadata for IdentityReaderErrorInternal.Code.AccountSignedOutCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code.NotSupportedCodingKeys()
{
  return &type metadata for IdentityReaderErrorInternal.Code.NotSupportedCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code.PasscodeDisabledCodingKeys()
{
  return &type metadata for IdentityReaderErrorInternal.Code.PasscodeDisabledCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code.ReaderConnectionErrorCodingKeys()
{
  return &type metadata for IdentityReaderErrorInternal.Code.ReaderConnectionErrorCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code.ReaderTimeoutCodingKeys()
{
  return &type metadata for IdentityReaderErrorInternal.Code.ReaderTimeoutCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for IdentityReaderErrorInternal.Code.TermsAndConditionsAcceptanceRequiredCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2288BA35CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code.TermsAndConditionsAcceptanceRequiredCodingKeys()
{
  return &type metadata for IdentityReaderErrorInternal.Code.TermsAndConditionsAcceptanceRequiredCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code.SessionExpiredCodingKeys()
{
  return &type metadata for IdentityReaderErrorInternal.Code.SessionExpiredCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code.ServiceUnavailableCodingKeys()
{
  return &type metadata for IdentityReaderErrorInternal.Code.ServiceUnavailableCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code.OsVersionNotSupportedCodingKeys()
{
  return &type metadata for IdentityReaderErrorInternal.Code.OsVersionNotSupportedCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code.ContinuityDisplayNotAllowedCodingKeys()
{
  return &type metadata for IdentityReaderErrorInternal.Code.ContinuityDisplayNotAllowedCodingKeys;
}

unint64_t sub_2288BA3D8()
{
  unint64_t result = qword_26826A3B0;
  if (!qword_26826A3B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A3B0);
  }
  return result;
}

unint64_t sub_2288BA430()
{
  unint64_t result = qword_26826A3B8;
  if (!qword_26826A3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A3B8);
  }
  return result;
}

unint64_t sub_2288BA488()
{
  unint64_t result = qword_26826A3C0;
  if (!qword_26826A3C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A3C0);
  }
  return result;
}

unint64_t sub_2288BA4E0()
{
  unint64_t result = qword_26826A3C8;
  if (!qword_26826A3C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A3C8);
  }
  return result;
}

unint64_t sub_2288BA538()
{
  unint64_t result = qword_26826A3D0;
  if (!qword_26826A3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A3D0);
  }
  return result;
}

unint64_t sub_2288BA590()
{
  unint64_t result = qword_26826A3D8;
  if (!qword_26826A3D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A3D8);
  }
  return result;
}

unint64_t sub_2288BA5E8()
{
  unint64_t result = qword_26826A3E0;
  if (!qword_26826A3E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A3E0);
  }
  return result;
}

unint64_t sub_2288BA640()
{
  unint64_t result = qword_26826A3E8;
  if (!qword_26826A3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A3E8);
  }
  return result;
}

unint64_t sub_2288BA698()
{
  unint64_t result = qword_26826A3F0;
  if (!qword_26826A3F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A3F0);
  }
  return result;
}

unint64_t sub_2288BA6F0()
{
  unint64_t result = qword_26826A3F8;
  if (!qword_26826A3F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A3F8);
  }
  return result;
}

unint64_t sub_2288BA748()
{
  unint64_t result = qword_26826A400;
  if (!qword_26826A400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A400);
  }
  return result;
}

unint64_t sub_2288BA7A0()
{
  unint64_t result = qword_26826A408;
  if (!qword_26826A408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A408);
  }
  return result;
}

unint64_t sub_2288BA7F8()
{
  unint64_t result = qword_26826A410;
  if (!qword_26826A410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A410);
  }
  return result;
}

unint64_t sub_2288BA850()
{
  unint64_t result = qword_26826A418;
  if (!qword_26826A418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A418);
  }
  return result;
}

unint64_t sub_2288BA8A8()
{
  unint64_t result = qword_26826A420;
  if (!qword_26826A420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A420);
  }
  return result;
}

unint64_t sub_2288BA900()
{
  unint64_t result = qword_26826A428;
  if (!qword_26826A428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A428);
  }
  return result;
}

unint64_t sub_2288BA958()
{
  unint64_t result = qword_26826A430;
  if (!qword_26826A430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A430);
  }
  return result;
}

unint64_t sub_2288BA9B0()
{
  unint64_t result = qword_26826A438;
  if (!qword_26826A438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A438);
  }
  return result;
}

unint64_t sub_2288BAA08()
{
  unint64_t result = qword_26826A440;
  if (!qword_26826A440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A440);
  }
  return result;
}

unint64_t sub_2288BAA60()
{
  unint64_t result = qword_26826A448;
  if (!qword_26826A448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A448);
  }
  return result;
}

unint64_t sub_2288BAAB8()
{
  unint64_t result = qword_26826A450;
  if (!qword_26826A450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A450);
  }
  return result;
}

unint64_t sub_2288BAB10()
{
  unint64_t result = qword_26826A458;
  if (!qword_26826A458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A458);
  }
  return result;
}

unint64_t sub_2288BAB68()
{
  unint64_t result = qword_26826A460;
  if (!qword_26826A460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A460);
  }
  return result;
}

unint64_t sub_2288BABC0()
{
  unint64_t result = qword_26826A468;
  if (!qword_26826A468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A468);
  }
  return result;
}

unint64_t sub_2288BAC18()
{
  unint64_t result = qword_26826A470;
  if (!qword_26826A470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A470);
  }
  return result;
}

unint64_t sub_2288BAC70()
{
  unint64_t result = qword_26826A478;
  if (!qword_26826A478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A478);
  }
  return result;
}

unint64_t sub_2288BACC8()
{
  unint64_t result = qword_26826A480;
  if (!qword_26826A480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A480);
  }
  return result;
}

unint64_t sub_2288BAD20()
{
  unint64_t result = qword_26826A488;
  if (!qword_26826A488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A488);
  }
  return result;
}

unint64_t sub_2288BAD78()
{
  unint64_t result = qword_26826A490;
  if (!qword_26826A490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A490);
  }
  return result;
}

unint64_t sub_2288BADD0()
{
  unint64_t result = qword_26826A498;
  if (!qword_26826A498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A498);
  }
  return result;
}

unint64_t sub_2288BAE28()
{
  unint64_t result = qword_26826A4A0;
  if (!qword_26826A4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A4A0);
  }
  return result;
}

unint64_t sub_2288BAE80()
{
  unint64_t result = qword_26826A4A8;
  if (!qword_26826A4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A4A8);
  }
  return result;
}

unint64_t sub_2288BAED8()
{
  unint64_t result = qword_26826A4B0;
  if (!qword_26826A4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A4B0);
  }
  return result;
}

unint64_t sub_2288BAF30()
{
  unint64_t result = qword_26826A4B8;
  if (!qword_26826A4B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A4B8);
  }
  return result;
}

unint64_t sub_2288BAF88()
{
  unint64_t result = qword_26826A4C0;
  if (!qword_26826A4C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A4C0);
  }
  return result;
}

unint64_t sub_2288BAFE0()
{
  unint64_t result = qword_26826A4C8;
  if (!qword_26826A4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A4C8);
  }
  return result;
}

unint64_t sub_2288BB038()
{
  unint64_t result = qword_26826A4D0;
  if (!qword_26826A4D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A4D0);
  }
  return result;
}

unint64_t sub_2288BB090()
{
  unint64_t result = qword_26826A4D8;
  if (!qword_26826A4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A4D8);
  }
  return result;
}

unint64_t sub_2288BB0E8()
{
  unint64_t result = qword_26826A4E0;
  if (!qword_26826A4E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A4E0);
  }
  return result;
}

unint64_t sub_2288BB140()
{
  unint64_t result = qword_26826A4E8;
  if (!qword_26826A4E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A4E8);
  }
  return result;
}

unint64_t sub_2288BB198()
{
  unint64_t result = qword_26826A4F0;
  if (!qword_26826A4F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A4F0);
  }
  return result;
}

unint64_t sub_2288BB1F0()
{
  unint64_t result = qword_26826A4F8;
  if (!qword_26826A4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A4F8);
  }
  return result;
}

unint64_t sub_2288BB248()
{
  unint64_t result = qword_26826A500;
  if (!qword_26826A500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A500);
  }
  return result;
}

unint64_t sub_2288BB2A0()
{
  unint64_t result = qword_26826A508;
  if (!qword_26826A508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A508);
  }
  return result;
}

unint64_t sub_2288BB2F8()
{
  unint64_t result = qword_26826A510;
  if (!qword_26826A510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A510);
  }
  return result;
}

unint64_t sub_2288BB350()
{
  unint64_t result = qword_26826A518;
  if (!qword_26826A518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A518);
  }
  return result;
}

unint64_t sub_2288BB3A8()
{
  unint64_t result = qword_26826A520;
  if (!qword_26826A520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A520);
  }
  return result;
}

unint64_t sub_2288BB400()
{
  unint64_t result = qword_26826A528;
  if (!qword_26826A528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A528);
  }
  return result;
}

unint64_t sub_2288BB458()
{
  unint64_t result = qword_26826A530;
  if (!qword_26826A530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A530);
  }
  return result;
}

unint64_t sub_2288BB4B0()
{
  unint64_t result = qword_26826A538;
  if (!qword_26826A538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A538);
  }
  return result;
}

uint64_t sub_2288BB504(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000;
  if (v2 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x776F6C6C41746F6ELL && a2 == 0xEA00000000006465 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C6C65636E6163 && a2 == 0xE900000000000064 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x456B726F7774656ELL && a2 == 0xEC000000726F7272 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x5264696C61766E69 && a2 == 0xEE00747365757165 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x5264696C61766E69 && a2 == 0xEF65736E6F707365 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x5464696C61766E69 && a2 == 0xEC0000006E656B6FLL || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x75426D6574737973 && a2 == 0xEA00000000007973 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x626173694463666ELL && a2 == 0xEB0000000064656CLL || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x687265764F63666ELL && a2 == 0xEB00000000746165 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000022892A060 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000022892A110 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x800000022892A0C0 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000022892A0A0 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x6F70707553746F6ELL && a2 == 0xEC00000064657472 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002289277D0 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000228928860 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x6954726564616572 && a2 == 0xED000074756F656DLL || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000024 && a2 == 0x800000022892A0E0 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x456E6F6973736573 && a2 == 0xEE00646572697078 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000022892A080 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000002289277B0 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000022892A040)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else
  {
    char v6 = sub_228916660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 22;
    }
    else {
      return 23;
    }
  }
}

ProximityReader::VASReadResult::ReadEntry::Status_optional __swiftcall VASReadResult.ReadEntry.Status.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue > 27263)
  {
    if (rawValue > 27391)
    {
      if (rawValue == 27392)
      {
        *unint64_t v1 = 3;
        return (ProximityReader::VASReadResult::ReadEntry::Status_optional)rawValue;
      }
      if (rawValue == 36864)
      {
        *unint64_t v1 = 0;
        return (ProximityReader::VASReadResult::ReadEntry::Status_optional)rawValue;
      }
    }
    else
    {
      if (rawValue == 27264)
      {
        *unint64_t v1 = 6;
        return (ProximityReader::VASReadResult::ReadEntry::Status_optional)rawValue;
      }
      if (rawValue == 27267)
      {
        *unint64_t v1 = 1;
        return (ProximityReader::VASReadResult::ReadEntry::Status_optional)rawValue;
      }
    }
LABEL_20:
    *unint64_t v1 = 8;
    return (ProximityReader::VASReadResult::ReadEntry::Status_optional)rawValue;
  }
  if (rawValue > 26367)
  {
    if (rawValue == 26368)
    {
      *unint64_t v1 = 4;
      return (ProximityReader::VASReadResult::ReadEntry::Status_optional)rawValue;
    }
    if (rawValue == 27012)
    {
      *unint64_t v1 = 5;
      return (ProximityReader::VASReadResult::ReadEntry::Status_optional)rawValue;
    }
    goto LABEL_20;
  }
  if (rawValue == 25223)
  {
    *unint64_t v1 = 2;
    return (ProximityReader::VASReadResult::ReadEntry::Status_optional)rawValue;
  }
  if (rawValue != 25408) {
    goto LABEL_20;
  }
  *unint64_t v1 = 7;
  return (ProximityReader::VASReadResult::ReadEntry::Status_optional)rawValue;
}

uint64_t VASReadResult.id.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VASReadResult.entries.getter()
{
  return swift_bridgeObjectRetain();
}

ProximityReader::VASReadResult __swiftcall VASReadResult.init(id:entries:)(Swift::String id, Swift::OpaquePointer entries)
{
  *(Swift::String *)uint64_t v2 = id;
  *(Swift::OpaquePointer *)(v2 + 16) = entries;
  result.id = id;
  result.entries = entries;
  return result;
}

uint64_t VASReadResult.ReadEntry.id.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VASReadResult.ReadEntry.customerVASData.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_22880ACA4(v1, *(void *)(v0 + 24));
  return v1;
}

void VASReadResult.ReadEntry.status.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 32);
}

uint64_t VASReadResult.ReadEntry.Status.rawValue.getter()
{
  return qword_228921438[*v0];
}

BOOL sub_2288BC080(char *a1, char *a2)
{
  return qword_228921438[*a1] == qword_228921438[*a2];
}

unint64_t sub_2288BC0A8()
{
  unint64_t result = qword_26826A540;
  if (!qword_26826A540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A540);
  }
  return result;
}

uint64_t sub_2288BC0FC()
{
  return sub_228916780();
}

uint64_t sub_2288BC14C()
{
  return sub_228916760();
}

uint64_t sub_2288BC184()
{
  return sub_228916780();
}

ProximityReader::VASReadResult::ReadEntry::Status_optional sub_2288BC1D0(Swift::Int *a1)
{
  return VASReadResult.ReadEntry.Status.init(rawValue:)(*a1);
}

void sub_2288BC1D8(void *a1@<X8>)
{
  *a1 = qword_228921438[*v1];
}

uint64_t destroy for VASReadResult()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s15ProximityReader13VASReadResultVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for VASReadResult(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for VASReadResult(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for VASReadResult(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VASReadResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VASReadResult()
{
  return &type metadata for VASReadResult;
}

uint64_t destroy for VASReadResult.ReadEntry(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = *(void *)(a1 + 16);
    return sub_22880BB80(v4, v3);
  }
  return result;
}

uint64_t initializeWithCopy for VASReadResult.ReadEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = (_OWORD *)(a2 + 16);
  unint64_t v6 = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *v5;
  }
  else
  {
    uint64_t v7 = *(void *)v5;
    sub_22880ACB8(v7, v6);
    *(void *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = v6;
  }
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t assignWithCopy for VASReadResult.ReadEntry(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (uint64_t *)(a2 + 16);
  unint64_t v5 = *(void *)(a2 + 24);
  if (*(void *)(a1 + 24) >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      uint64_t v7 = *v4;
      sub_22880ACB8(*v4, *(void *)(a2 + 24));
      uint64_t v8 = *(void *)(a1 + 16);
      unint64_t v9 = *(void *)(a1 + 24);
      *(void *)(a1 + 16) = v7;
      *(void *)(a1 + 24) = v5;
      sub_22880BB80(v8, v9);
      goto LABEL_8;
    }
    sub_22882FA00(a1 + 16);
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v4;
    goto LABEL_8;
  }
  uint64_t v6 = *v4;
  sub_22880ACB8(*v4, *(void *)(a2 + 24));
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v5;
LABEL_8:
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for VASReadResult.ReadEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  unint64_t v5 = (void *)(a2 + 16);
  unint64_t v6 = *(void *)(a1 + 24);
  if (v6 >> 60 != 15)
  {
    unint64_t v7 = *(void *)(a2 + 24);
    if (v7 >> 60 != 15)
    {
      uint64_t v8 = *(void *)(a1 + 16);
      *(void *)(a1 + 16) = *v5;
      *(void *)(a1 + 24) = v7;
      sub_22880BB80(v8, v6);
      goto LABEL_6;
    }
    sub_22882FA00(a1 + 16);
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)v5;
LABEL_6:
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for VASReadResult.ReadEntry()
{
  return &type metadata for VASReadResult.ReadEntry;
}

uint64_t getEnumTagSinglePayload for VASReadResult.ReadEntry.Status(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for VASReadResult.ReadEntry.Status(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2288BC77CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VASReadResult.ReadEntry.Status()
{
  return &type metadata for VASReadResult.ReadEntry.Status;
}

unint64_t static XPCServices.PaymentTerminalService.getter()
{
  return 0xD00000000000001FLL;
}

unint64_t static XPCServices.InternalClientService.getter()
{
  return 0xD00000000000001DLL;
}

unint64_t static XPCServices.IdentityService.getter()
{
  return 0xD00000000000001CLL;
}

unint64_t static XPCServices.DiscoveryService.getter()
{
  return 0xD00000000000001DLL;
}

ValueMetadata *type metadata accessor for XPCServices()
{
  return &type metadata for XPCServices;
}

uint64_t sub_2288BC834()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v0);
  v9[2] = (char *)v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v3 = sub_228914E60();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unsigned int v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_228914EA0();
  swift_allocObject();
  sub_228914E90();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F06198], v3);
  sub_228914E70();
  uint64_t v7 = sub_228914E80();
  swift_release();
  return v7;
}

uint64_t sub_2288BCC90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A560);
  MEMORY[0x270FA5388](v1 - 8);
  id v19 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_228914F70();
  uint64_t v20 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_228915490();
  uint64_t v17 = *(void *)(v5 - 8);
  uint64_t v18 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_228915470();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26826A568);
  uint64_t v8 = sub_228915480();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 72);
  unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_228921490;
  unint64_t v13 = v12 + v11;
  long long v14 = *(void (**)(unint64_t, void, uint64_t))(v9 + 104);
  v14(v13, *MEMORY[0x263F07878], v8);
  v14(v13 + v10, *MEMORY[0x263F078A0], v8);
  v14(v13 + 2 * v10, *MEMORY[0x263F078D8], v8);
  v14(v13 + 3 * v10, *MEMORY[0x263F078A8], v8);
  v14(v13 + 4 * v10, *MEMORY[0x263F07870], v8);
  sub_2288DDDCC(v12);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_228915450();
  swift_bridgeObjectRelease();
  sub_2289154A0();
  sub_228914F60();
  sub_228915460();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v4, v21);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v7, v18);
}

uint64_t sub_2288BD024@<X0>(uint64_t a1@<X8>)
{
  uint64_t v16 = a1;
  uint64_t v17 = sub_228914F70();
  uint64_t v15 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_228915490();
  uint64_t v3 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_228915470();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26826A568);
  uint64_t v6 = sub_228915480();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 72);
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_2289214A0;
  unint64_t v11 = *(void (**)(unint64_t, void, uint64_t))(v7 + 104);
  v11(v10 + v9, *MEMORY[0x263F07878], v6);
  v11(v10 + v9 + v8, *MEMORY[0x263F078A0], v6);
  v11(v10 + v9 + 2 * v8, *MEMORY[0x263F078D8], v6);
  v11(v10 + v9 + 3 * v8, *MEMORY[0x263F078A8], v6);
  v11(v10 + v9 + 4 * v8, *MEMORY[0x263F07870], v6);
  v11(v10 + v9 + 5 * v8, *MEMORY[0x263F07890], v6);
  sub_2288DDDCC(v10);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_228915450();
  swift_bridgeObjectRelease();
  sub_228915460();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v2, v17);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v14);
}

uint64_t sub_2288BD35C(char a1)
{
  uint64_t v70 = *MEMORY[0x263EF8340];
  uint64_t isUniquelyReferenced_nonNull_native = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](isUniquelyReferenced_nonNull_native);
  uint64_t v4 = (long long *)((char *)v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = self;
  uint64_t v6 = (void *)sub_228915230();
  *(void *)&long long v68 = 0;
  id v7 = objc_msgSend(v5, sel_JSONObjectWithData_options_error_, v6, 1, &v68);

  if (!v7)
  {
    id v10 = (id)v68;
    unint64_t v11 = sub_2289150A0();

    swift_willThrow();
    if (qword_268267F18 != -1) {
LABEL_74:
    }
      swift_once();
    uint64_t v12 = __swift_project_value_buffer(isUniquelyReferenced_nonNull_native, (uint64_t)qword_268283DB0);
    sub_22880AB38(v12, (uint64_t)v4);
    uint64_t v13 = sub_2289155C0();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(long long *, uint64_t, uint64_t))(v14 + 48))(v4, 1, v13) == 1)
    {
      sub_22880ABA0((uint64_t)v4);
    }
    else
    {
      uint64_t v58 = sub_2289155A0();
      os_log_type_t v59 = sub_228916070();
      if (os_log_type_enabled(v58, v59))
      {
        uint64_t v60 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v60 = 0;
        _os_log_impl(&dword_228806000, v58, v59, "Error json->dictionary", v60, 2u);
        MEMORY[0x22A6A1090](v60, -1, -1);
      }

      (*(void (**)(long long *, uint64_t))(v14 + 8))(v4, v13);
    }
    unint64_t v9 = (long long *)sub_2288384A4(MEMORY[0x263F8EE78]);

    return (uint64_t)v9;
  }
  id v8 = (id)v68;
  sub_228916250();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26826A548);
  if (swift_dynamicCast())
  {
    v62[0] = *(void *)&v67[0];
    if ((a1 & 1) == 0)
    {
LABEL_4:
      unint64_t v9 = (long long *)sub_2288DB168(v62[0]);
      swift_bridgeObjectRelease();
      return (uint64_t)v9;
    }
  }
  else
  {
    v62[0] = sub_22883870C(MEMORY[0x263F8EE78]);
    if ((a1 & 1) == 0) {
      goto LABEL_4;
    }
  }
  unint64_t v9 = (long long *)sub_2288384A4(MEMORY[0x263F8EE78]);
  int64_t v15 = 0;
  uint64_t v16 = v62[0];
  uint64_t v17 = *(void *)(v62[0] + 64);
  uint64_t v63 = v62[0] + 64;
  uint64_t v18 = 1 << *(unsigned char *)(v62[0] + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v11 = v19 & v17;
  int64_t v64 = (unint64_t)(v18 + 63) >> 6;
  v62[1] = MEMORY[0x263F8EE50] + 8;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      int64_t v65 = v15;
      unint64_t v21 = v20 | (v15 << 6);
    }
    else
    {
      int64_t v22 = v15 + 1;
      if (__OFADD__(v15, 1)) {
        goto LABEL_67;
      }
      if (v22 >= v64)
      {
LABEL_60:
        swift_release();
        return (uint64_t)v9;
      }
      unint64_t v23 = *(void *)(v63 + 8 * v22);
      int64_t v24 = v15 + 1;
      if (!v23)
      {
        int64_t v24 = v15 + 2;
        if (v15 + 2 >= v64) {
          goto LABEL_60;
        }
        unint64_t v23 = *(void *)(v63 + 8 * v24);
        if (!v23)
        {
          int64_t v24 = v15 + 3;
          if (v15 + 3 >= v64) {
            goto LABEL_60;
          }
          unint64_t v23 = *(void *)(v63 + 8 * v24);
          if (!v23)
          {
            uint64_t v25 = v15 + 4;
            if (v15 + 4 >= v64) {
              goto LABEL_60;
            }
            unint64_t v23 = *(void *)(v63 + 8 * v25);
            if (!v23)
            {
              while (1)
              {
                int64_t v24 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_73;
                }
                if (v24 >= v64) {
                  goto LABEL_60;
                }
                unint64_t v23 = *(void *)(v63 + 8 * v24);
                ++v25;
                if (v23) {
                  goto LABEL_29;
                }
              }
            }
            int64_t v24 = v15 + 4;
          }
        }
      }
LABEL_29:
      unint64_t v11 = (v23 - 1) & v23;
      int64_t v65 = v24;
      unint64_t v21 = __clz(__rbit64(v23)) + (v24 << 6);
    }
    unint64_t v26 = (uint64_t *)(*(void *)(v16 + 48) + 16 * v21);
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    uint64_t v29 = *(void *)(*(void *)(v16 + 56) + 8 * v21);
    uint64_t v30 = sub_228915BE0();
    uint64_t isUniquelyReferenced_nonNull_native = v31;
    *(void *)&long long v68 = v30;
    *((void *)&v68 + 1) = v31;
    *(void *)&v67[0] = 0x6E656B6F74;
    *((void *)&v67[0] + 1) = 0xE500000000000000;
    sub_2288566E4();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    char v32 = sub_228916230();
    swift_bridgeObjectRelease();
    if (v32)
    {
      *(void *)&v67[0] = v29;
      swift_unknownObjectRetain();
      if (swift_dynamicCast()) {
        break;
      }
    }
    uint64_t ObjectType = swift_getObjectType();
    *(void *)&long long v68 = v29;
    sub_22881122C(&v68, v67);
    swift_unknownObjectRetain();
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v66[0] = v9;
    uint64_t v4 = v9;
    unint64_t v38 = sub_228816C80(v28, v27);
    uint64_t v39 = *((void *)v9 + 2);
    BOOL v40 = (v37 & 1) == 0;
    uint64_t v41 = v39 + v40;
    if (__OFADD__(v39, v40))
    {
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
      goto LABEL_74;
    }
    char v42 = v37;
    if (*((void *)v9 + 3) >= v41)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        unint64_t v9 = (long long *)v66[0];
        if (v37) {
          goto LABEL_12;
        }
      }
      else
      {
        uint64_t v4 = (long long *)v66;
        sub_2288AD944();
        unint64_t v9 = (long long *)v66[0];
        if (v42) {
          goto LABEL_12;
        }
      }
    }
    else
    {
      sub_2288AC2DC(v41, isUniquelyReferenced_nonNull_native);
      uint64_t v4 = (long long *)v66[0];
      unint64_t v43 = sub_228816C80(v28, v27);
      if ((v42 & 1) != (v44 & 1)) {
        goto LABEL_75;
      }
      unint64_t v38 = v43;
      unint64_t v9 = (long long *)v66[0];
      if (v42)
      {
LABEL_12:
        uint64_t v4 = (long long *)(*((void *)v9 + 7) + 32 * v38);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
        sub_22881122C(v67, v4);
        goto LABEL_13;
      }
    }
    *((void *)v9 + (v38 >> 6) + 8) |= 1 << v38;
    uint64_t v45 = (uint64_t *)(*((void *)v9 + 6) + 16 * v38);
    uint64_t *v45 = v28;
    v45[1] = v27;
    sub_22881122C(v67, (_OWORD *)(*((void *)v9 + 7) + 32 * v38));
    uint64_t v46 = *((void *)v9 + 2);
    BOOL v47 = __OFADD__(v46, 1);
    uint64_t v48 = v46 + 1;
    if (v47) {
      goto LABEL_68;
    }
LABEL_55:
    *((void *)v9 + 2) = v48;
    swift_bridgeObjectRetain();
LABEL_13:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int64_t v15 = v65;
  }
  uint64_t v34 = *((void *)&v68 + 1);
  uint64_t v33 = v68;
  *(void *)&v67[0] = 46;
  *((void *)&v67[0] + 1) = 0xE100000000000000;
  uint64_t v4 = &v68;
  uint64_t v35 = (void *)sub_228916210();
  if (v35[2] < 3uLL)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)&long long v68 = 0;
    *((void *)&v68 + 1) = 0xE000000000000000;
    sub_228916320();
    if (!v35[2]) {
      goto LABEL_70;
    }
    uint64_t v36 = v35[4];
    uint64_t isUniquelyReferenced_nonNull_native = v35[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)&long long v68 = v36;
    *((void *)&v68 + 1) = isUniquelyReferenced_nonNull_native;
    uint64_t v4 = &v68;
    sub_228915D60();
    if (v35[2] < 2uLL) {
      goto LABEL_71;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_228915D60();
    swift_bridgeObjectRelease();
    sub_228915D60();
    swift_bridgeObjectRelease();
    uint64_t v34 = *((void *)&v68 + 1);
    uint64_t v33 = v68;
  }
  uint64_t ObjectType = MEMORY[0x263F8D310];
  *(void *)&long long v68 = v33;
  *((void *)&v68 + 1) = v34;
  sub_22881122C(&v68, v67);
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v66[0] = v9;
  uint64_t v4 = v9;
  unint64_t v38 = sub_228816C80(v28, v27);
  uint64_t v50 = *((void *)v9 + 2);
  BOOL v51 = (v49 & 1) == 0;
  uint64_t v52 = v50 + v51;
  if (__OFADD__(v50, v51)) {
    goto LABEL_69;
  }
  char v53 = v49;
  if (*((void *)v9 + 3) >= v52)
  {
    uint64_t v16 = v62[0];
    if (isUniquelyReferenced_nonNull_native)
    {
      unint64_t v9 = (long long *)v66[0];
      if (v49) {
        goto LABEL_12;
      }
    }
    else
    {
      uint64_t v4 = (long long *)v66;
      sub_2288AD944();
      unint64_t v9 = (long long *)v66[0];
      if (v53) {
        goto LABEL_12;
      }
    }
    goto LABEL_54;
  }
  sub_2288AC2DC(v52, isUniquelyReferenced_nonNull_native);
  uint64_t v4 = (long long *)v66[0];
  unint64_t v54 = sub_228816C80(v28, v27);
  uint64_t v16 = v62[0];
  if ((v53 & 1) == (v55 & 1))
  {
    unint64_t v38 = v54;
    unint64_t v9 = (long long *)v66[0];
    if (v53) {
      goto LABEL_12;
    }
LABEL_54:
    *((void *)v9 + (v38 >> 6) + 8) |= 1 << v38;
    uint64_t v56 = (uint64_t *)(*((void *)v9 + 6) + 16 * v38);
    *uint64_t v56 = v28;
    v56[1] = v27;
    sub_22881122C(v67, (_OWORD *)(*((void *)v9 + 7) + 32 * v38));
    uint64_t v57 = *((void *)v9 + 2);
    BOOL v47 = __OFADD__(v57, 1);
    uint64_t v48 = v57 + 1;
    if (v47) {
      goto LABEL_72;
    }
    goto LABEL_55;
  }
LABEL_75:
  uint64_t result = sub_2289166A0();
  __break(1u);
  return result;
}

uint64_t sub_2288BDC04(uint64_t a1)
{
  uint64_t v21 = a1;
  v22[3] = *MEMORY[0x263EF8340];
  uint64_t v1 = sub_228915B80();
  uint64_t v20 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_228915CB0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_228915B30();
  uint64_t v18 = *(void *)(v8 - 8);
  uint64_t v19 = v8;
  MEMORY[0x270FA5388](v8);
  id v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_228915CA0();
  uint64_t v11 = sub_228915C80();
  unint64_t v13 = v12;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v13 >> 60 != 15)
  {
    sub_2288BE4A4(&qword_26826A550, MEMORY[0x263F047F8]);
    sub_228915B20();
    switch(v13 >> 62)
    {
      case 1uLL:
        if (v11 >> 32 < (int)v11) {
          __break(1u);
        }
        sub_22880ACB8(v11, v13);
        sub_2288FC224((int)v11, v11 >> 32);
        break;
      case 2uLL:
        uint64_t v14 = *(void *)(v11 + 16);
        uint64_t v15 = *(void *)(v11 + 24);
        sub_22880ACA4(v11, v13);
        swift_retain();
        swift_retain();
        sub_2288FC224(v14, v15);
        swift_release();
        swift_release();
        break;
      case 3uLL:
        memset(v22, 0, 14);
        goto LABEL_8;
      default:
        v22[0] = v11;
        LOWORD(v22[1]) = v13;
        BYTE2(v22[1]) = BYTE2(v13);
        BYTE3(v22[1]) = BYTE3(v13);
        BYTE4(v22[1]) = BYTE4(v13);
        BYTE5(v22[1]) = BYTE5(v13);
LABEL_8:
        sub_228915B00();
        break;
    }
    sub_22880BB6C(v11, v13);
    uint64_t v16 = v20;
    sub_228915B10();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v3, v1);
    sub_22880BB6C(v11, v13);
    uint64_t v11 = sub_2288BE054();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v10, v19);
  }
  return v11;
}

uint64_t sub_2288BE054()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v0);
  uint64_t v1 = sub_228915B70();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_228915B30();
  sub_2288BE4A4(&qword_26826A558, MEMORY[0x263F045C0]);
  sub_228915B40();
  uint64_t v5 = sub_228915B60();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v5;
}

void sub_2288BE42C()
{
  uint64_t v0 = (void *)sub_228915C40();
  id v1 = objc_msgSend(self, sel_bundleWithIdentifier_, v0);

  if (v1) {
    qword_268283D40 = (uint64_t)v1;
  }
  else {
    __break(1u);
  }
}

uint64_t sub_2288BE4A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t PINData.isPINBypass.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ProximityReader7PINData_isPINBypass);
}

uint64_t PINData.pinCipherBlobBase64.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15ProximityReader7PINData_pinCipherBlobBase64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PINData.pinKeyBlobBase64.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15ProximityReader7PINData_pinKeyBlobBase64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PINData.pinKekId.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15ProximityReader7PINData_pinKekId);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PINData.seAttestationBase64.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15ProximityReader7PINData_seAttestationBase64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PINData.casdCertificateHex.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15ProximityReader7PINData_casdCertificateHex);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static PINData.supportsSecureCoding.getter()
{
  return 1;
}

id PINData.__allocating_init(isPINBypass:pinKekId:pinCipherBlob:pinKeyBlob:seAttestation:casdCertificate:)(char a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, unint64_t a9, uint64_t a10, unint64_t a11)
{
  unint64_t v12 = v11;
  uint64_t v18 = objc_allocWithZone(v12);
  v18[OBJC_IVAR____TtC15ProximityReader7PINData_isPINBypass] = a1;
  uint64_t v19 = v18;
  uint64_t v20 = sub_228915240();
  uint64_t v21 = (uint64_t *)&v19[OBJC_IVAR____TtC15ProximityReader7PINData_pinCipherBlobBase64];
  uint64_t *v21 = v20;
  v21[1] = v22;
  uint64_t v23 = sub_228915240();
  int64_t v24 = (uint64_t *)&v19[OBJC_IVAR____TtC15ProximityReader7PINData_pinKeyBlobBase64];
  *int64_t v24 = v23;
  v24[1] = v25;
  unint64_t v26 = &v19[OBJC_IVAR____TtC15ProximityReader7PINData_pinKekId];
  *unint64_t v26 = a2;
  v26[1] = a3;
  uint64_t v27 = sub_228915240();
  uint64_t v28 = (uint64_t *)&v19[OBJC_IVAR____TtC15ProximityReader7PINData_seAttestationBase64];
  *uint64_t v28 = v27;
  v28[1] = v29;
  uint64_t v41 = sub_2288BF60C(a10, a11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26826A5A0);
  sub_22883CD78();
  uint64_t v30 = sub_228915C00();
  uint64_t v32 = v31;
  swift_bridgeObjectRelease();
  uint64_t v33 = (uint64_t *)&v19[OBJC_IVAR____TtC15ProximityReader7PINData_casdCertificateHex];
  uint64_t *v33 = v30;
  v33[1] = v32;

  v40.receiver = v19;
  v40.super_class = v37;
  id v34 = objc_msgSendSuper2(&v40, sel_init);
  sub_22880BB80(a10, a11);
  sub_22880BB80(a8, a9);
  sub_22880BB80(a6, a7);
  sub_22880BB80(a4, a5);
  return v34;
}

id PINData.init(isPINBypass:pinKekId:pinCipherBlob:pinKeyBlob:seAttestation:casdCertificate:)(char a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, unint64_t a9, unint64_t a10, unint64_t a11)
{
  id v16 = sub_2288BF9B0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
  sub_22880BB80(a10, a11);
  sub_22880BB80(a8, a9);
  sub_22880BB80(a6, a7);
  sub_22880BB80(a4, a5);
  return v16;
}

Swift::Void __swiftcall PINData.encode(with:)(NSCoder with)
{
  uint64_t v3 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ProximityReader7PINData_isPINBypass);
  uint64_t v4 = (void *)sub_228915C40();
  [(objc_class *)with.super.isa encodeBool:v3 forKey:v4];

  uint64_t v5 = (void *)sub_228915C40();
  uint64_t v6 = (void *)sub_228915C40();
  [(objc_class *)with.super.isa encodeObject:v5 forKey:v6];

  uint64_t v7 = (void *)sub_228915C40();
  uint64_t v8 = (void *)sub_228915C40();
  [(objc_class *)with.super.isa encodeObject:v7 forKey:v8];

  uint64_t v9 = (void *)sub_228915C40();
  id v10 = (void *)sub_228915C40();
  [(objc_class *)with.super.isa encodeObject:v9 forKey:v10];

  uint64_t v11 = (void *)sub_228915C40();
  unint64_t v12 = (void *)sub_228915C40();
  [(objc_class *)with.super.isa encodeObject:v11 forKey:v12];

  unint64_t v13 = (void *)sub_228915C40();
  id v14 = (id)sub_228915C40();
  [(objc_class *)with.super.isa encodeObject:v13 forKey:v14];
}

id PINData.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return PINData.init(coder:)(a1);
}

id PINData.init(coder:)(void *a1)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1;
  uint64_t v8 = (void *)sub_228915C40();
  unsigned int v9 = objc_msgSend(a1, sel_decodeBoolForKey_, v8);

  sub_22880A978();
  uint64_t v10 = sub_228916120();
  if (v10)
  {
    uint64_t v11 = (void *)v10;
    unsigned int v48 = v9;
    uint64_t v12 = sub_228916120();
    if (v12)
    {
      unint64_t v13 = (void *)v12;
      char v49 = (objc_class *)ObjectType;
      uint64_t v14 = sub_228916120();
      if (v14)
      {
        uint64_t v15 = (void *)v14;
        uint64_t v16 = sub_228916120();
        if (v16)
        {
          BOOL v47 = (void *)v16;
          uint64_t v17 = sub_228916120();
          if (v17)
          {
            uint64_t v18 = (void *)v17;
            v7[OBJC_IVAR____TtC15ProximityReader7PINData_isPINBypass] = v48;
            uint64_t v19 = sub_228915C70();
            uint64_t v20 = (uint64_t *)&v7[OBJC_IVAR____TtC15ProximityReader7PINData_pinKekId];
            *uint64_t v20 = v19;
            v20[1] = v21;
            uint64_t v22 = sub_228915C70();
            uint64_t v23 = (uint64_t *)&v7[OBJC_IVAR____TtC15ProximityReader7PINData_pinCipherBlobBase64];
            *uint64_t v23 = v22;
            v23[1] = v24;
            uint64_t v25 = sub_228915C70();
            unint64_t v26 = (uint64_t *)&v7[OBJC_IVAR____TtC15ProximityReader7PINData_pinKeyBlobBase64];
            *unint64_t v26 = v25;
            v26[1] = v27;
            uint64_t v28 = v47;
            uint64_t v29 = sub_228915C70();
            uint64_t v30 = (uint64_t *)&v7[OBJC_IVAR____TtC15ProximityReader7PINData_seAttestationBase64];
            uint64_t *v30 = v29;
            v30[1] = v31;
            uint64_t v32 = sub_228915C70();
            uint64_t v34 = v33;

            uint64_t v35 = (uint64_t *)&v7[OBJC_IVAR____TtC15ProximityReader7PINData_casdCertificateHex];
            *uint64_t v35 = v32;
            v35[1] = v34;

            v50.receiver = v7;
            v50.super_class = v49;
            id v36 = objc_msgSendSuper2(&v50, sel_init);

            return v36;
          }

          unint64_t v38 = v13;
          char v37 = v15;
          uint64_t v11 = v47;
        }
        else
        {
          unint64_t v38 = v11;
          char v37 = v13;
          uint64_t v11 = v15;
        }
      }
      else
      {
        char v37 = v11;
        uint64_t v11 = v13;
      }
    }
  }

  if (qword_268267EF8 != -1) {
    swift_once();
  }
  uint64_t v39 = __swift_project_value_buffer(v4, (uint64_t)qword_268283D50);
  sub_22880AB38(v39, (uint64_t)v6);
  uint64_t v40 = sub_2289155C0();
  uint64_t v41 = *(void *)(v40 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v6, 1, v40) == 1)
  {

    sub_22880ABA0((uint64_t)v6);
  }
  else
  {
    char v42 = sub_2289155A0();
    os_log_type_t v43 = sub_228916050();
    if (os_log_type_enabled(v42, v43))
    {
      char v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v44 = 0;
      _os_log_impl(&dword_228806000, v42, v43, "PINData | Failed to decode object", v44, 2u);
      MEMORY[0x22A6A1090](v44, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v41 + 8))(v6, v40);
  }
  swift_deallocPartialClassInstance();
  return 0;
}

uint64_t PINData.printResult.getter()
{
  sub_228916320();
  sub_228915D60();
  sub_228915D60();
  swift_bridgeObjectRelease();
  sub_228915D60();
  unint64_t v0 = sub_2289151F0();
  if (v1 >> 60 != 15)
  {
    uint64_t v2 = v0;
    unint64_t v3 = v1;
    sub_2288BF60C(v0, v1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26826A5A0);
    sub_22883CD78();
    sub_228915C00();
    swift_bridgeObjectRelease();
    sub_22880BB6C(v2, v3);
  }
  sub_228915D60();
  swift_bridgeObjectRelease();
  sub_228915D60();
  unint64_t v4 = sub_2289151F0();
  if (v5 >> 60 != 15)
  {
    uint64_t v6 = v4;
    unint64_t v7 = v5;
    sub_2288BF60C(v4, v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26826A5A0);
    sub_22883CD78();
    sub_228915C00();
    swift_bridgeObjectRelease();
    sub_22880BB6C(v6, v7);
  }
  sub_228915D60();
  swift_bridgeObjectRelease();
  sub_228915D60();
  swift_bridgeObjectRetain();
  sub_228915D60();
  swift_bridgeObjectRelease();
  sub_228915D60();
  unint64_t v8 = sub_2289151F0();
  if (v9 >> 60 != 15)
  {
    uint64_t v10 = v8;
    unint64_t v11 = v9;
    sub_2288BF60C(v8, v9);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26826A5A0);
    sub_22883CD78();
    sub_228915C00();
    swift_bridgeObjectRelease();
    sub_22880BB6C(v10, v11);
  }
  sub_228915D60();
  swift_bridgeObjectRelease();
  sub_228915D60();
  unint64_t v12 = sub_2289151F0();
  if (v13 >> 60 != 15)
  {
    uint64_t v14 = v12;
    unint64_t v15 = v13;
    sub_2288BF60C(v12, v13);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26826A5A0);
    sub_22883CD78();
    sub_228915C00();
    swift_bridgeObjectRelease();
    sub_22880BB6C(v14, v15);
  }
  sub_228915D60();
  swift_bridgeObjectRelease();
  sub_228915D60();
  return 0;
}

id PINData.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void PINData.init()()
{
}

id PINData.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2288BF60C(unint64_t a1, unint64_t a2)
{
  uint64_t v41 = *MEMORY[0x263EF8340];
  unint64_t v2 = a2 >> 62;
  uint64_t v3 = MEMORY[0x263F8EE78];
  unint64_t v4 = a1;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_43;
      }
      uint64_t v5 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (!v5) {
        return v3;
      }
      uint64_t v40 = MEMORY[0x263F8EE78];
      int64_t v8 = v5 & ~(v5 >> 63);
      sub_22886AC24(0, v8, 0);
      uint64_t v3 = v40;
      uint64_t v33 = (int)v4;
      if (v2)
      {
        if (v2 == 1) {
          uint64_t v9 = (int)v4;
        }
        else {
          uint64_t v9 = *(void *)(v4 + 16);
        }
        if (v5 < 0)
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
        }
      }
      else
      {
        if (v5 < 0) {
          goto LABEL_45;
        }
        uint64_t v9 = 0;
      }
      uint64_t v32 = (uint64_t)v4 >> 32;
      unint64_t v30 = v4 >> 16;
      unint64_t v31 = v4 >> 8;
      unint64_t v28 = HIDWORD(v4);
      unint64_t v29 = v4 >> 24;
      unint64_t v26 = HIWORD(v4);
      unint64_t v27 = v4 >> 40;
      unint64_t v25 = HIBYTE(v4);
      int v35 = v2;
      unint64_t v36 = v4;
      do
      {
        if (!v8)
        {
          __break(1u);
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          goto LABEL_42;
        }
        if (v2)
        {
          if (v2 == 1)
          {
            if (v9 < v33 || v9 >= v32) {
              goto LABEL_36;
            }
            uint64_t v10 = sub_228914F00();
            if (!v10) {
              goto LABEL_46;
            }
            uint64_t v11 = v10;
            uint64_t v12 = sub_228914F30();
            uint64_t v13 = v9 - v12;
            if (__OFSUB__(v9, v12)) {
              goto LABEL_39;
            }
          }
          else
          {
            if (v9 < *(void *)(v4 + 16)) {
              goto LABEL_38;
            }
            if (v9 >= *(void *)(v4 + 24)) {
              goto LABEL_40;
            }
            uint64_t v15 = sub_228914F00();
            if (!v15) {
              goto LABEL_47;
            }
            uint64_t v11 = v15;
            uint64_t v16 = sub_228914F30();
            uint64_t v13 = v9 - v16;
            if (__OFSUB__(v9, v16)) {
              goto LABEL_41;
            }
          }
          char v14 = *(unsigned char *)(v11 + v13);
        }
        else
        {
          if (v9 >= BYTE6(a2)) {
            goto LABEL_37;
          }
          v37[0] = v4;
          v37[1] = v31;
          v37[2] = v30;
          v37[3] = v29;
          v37[4] = v28;
          v37[5] = v27;
          v37[6] = v26;
          v37[7] = v25;
          int v38 = a2;
          __int16 v39 = WORD2(a2);
          char v14 = v37[v9];
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_268268DB0);
        uint64_t v17 = swift_allocObject();
        *(_OWORD *)(v17 + 16) = xmmword_22891AC40;
        *(void *)(v17 + 56) = MEMORY[0x263F8E778];
        *(void *)(v17 + 64) = MEMORY[0x263F8E7C0];
        *(unsigned char *)(v17 + 32) = v14;
        uint64_t v18 = sub_228915C90();
        uint64_t v20 = v19;
        uint64_t v40 = v3;
        unint64_t v22 = *(void *)(v3 + 16);
        unint64_t v21 = *(void *)(v3 + 24);
        if (v22 >= v21 >> 1)
        {
          sub_22886AC24(v21 > 1, v22 + 1, 1);
          uint64_t v3 = v40;
        }
        *(void *)(v3 + 16) = v22 + 1;
        uint64_t v23 = v3 + 16 * v22;
        *(void *)(v23 + 32) = v18;
        *(void *)(v23 + 40) = v20;
        ++v9;
        --v8;
        --v5;
        LODWORD(v2) = v35;
        unint64_t v4 = v36;
      }
      while (v5);
      return v3;
    case 2uLL:
      uint64_t v7 = *(void *)(a1 + 16);
      uint64_t v6 = *(void *)(a1 + 24);
      uint64_t v5 = v6 - v7;
      if (!__OFSUB__(v6, v7)) {
        goto LABEL_6;
      }
      goto LABEL_44;
    case 3uLL:
      return v3;
    default:
      uint64_t v5 = BYTE6(a2);
      goto LABEL_6;
  }
}

id sub_2288BF9B0(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, unint64_t a11)
{
  uint64_t v12 = v11;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v12[OBJC_IVAR____TtC15ProximityReader7PINData_isPINBypass] = a1;
  uint64_t v16 = v12;
  uint64_t v17 = sub_228915240();
  uint64_t v18 = (uint64_t *)&v16[OBJC_IVAR____TtC15ProximityReader7PINData_pinCipherBlobBase64];
  *uint64_t v18 = v17;
  v18[1] = v19;
  uint64_t v20 = sub_228915240();
  unint64_t v21 = (uint64_t *)&v16[OBJC_IVAR____TtC15ProximityReader7PINData_pinKeyBlobBase64];
  uint64_t *v21 = v20;
  v21[1] = v22;
  uint64_t v23 = &v16[OBJC_IVAR____TtC15ProximityReader7PINData_pinKekId];
  *(void *)uint64_t v23 = a2;
  *((void *)v23 + 1) = a3;
  uint64_t v24 = sub_228915240();
  unint64_t v25 = (uint64_t *)&v16[OBJC_IVAR____TtC15ProximityReader7PINData_seAttestationBase64];
  *unint64_t v25 = v24;
  v25[1] = v26;
  uint64_t v34 = sub_2288BF60C(a10, a11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26826A5A0);
  sub_22883CD78();
  uint64_t v27 = sub_228915C00();
  uint64_t v29 = v28;
  swift_bridgeObjectRelease();
  unint64_t v30 = (uint64_t *)&v16[OBJC_IVAR____TtC15ProximityReader7PINData_casdCertificateHex];
  uint64_t *v30 = v27;
  v30[1] = v29;

  v33.receiver = v16;
  v33.super_class = ObjectType;
  return objc_msgSendSuper2(&v33, sel_init);
}

uint64_t type metadata accessor for PINData()
{
  return self;
}

uint64_t method lookup function for PINData(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for PINData);
}

uint64_t dispatch thunk of PINData.__allocating_init(isPINBypass:pinKekId:pinCipherBlob:pinKeyBlob:seAttestation:casdCertificate:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of PINData.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t MobileDriversLicenseDisplayRequest.elements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MobileDriversLicenseDisplayRequest.elements.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *id v1 = a1;
  return result;
}

uint64_t (*MobileDriversLicenseDisplayRequest.elements.modify())()
{
  return nullsub_1;
}

void MobileDriversLicenseDisplayRequest.options.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 8);
}

unsigned char *MobileDriversLicenseDisplayRequest.options.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 8) = *result;
  return result;
}

uint64_t (*MobileDriversLicenseDisplayRequest.options.modify())()
{
  return nullsub_1;
}

uint64_t MobileDriversLicenseDisplayRequest.init(elements:options:)@<X0>(uint64_t result@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v3 = *a2;
  *(void *)a3 = result;
  *(unsigned char *)(a3 + 8) = v3;
  return result;
}

uint64_t MobileDriversLicenseDisplayRequest.hash(into:)()
{
  uint64_t v1 = *v0;
  sub_228916760();
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    char v3 = (unsigned char *)(v1 + 40);
    do
    {
      if ((*v3 & 1) == 0) {
        sub_228916760();
      }
      v3 += 16;
      sub_228916760();
      --v2;
    }
    while (v2);
  }
  return sub_228916760();
}

uint64_t static MobileDriversLicenseDisplayRequest.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 8);
  int v3 = *(unsigned __int8 *)(a2 + 8);
  return sub_22885AEEC(*(void *)a1, *(void *)a2) & (v2 == v3);
}

uint64_t MobileDriversLicenseDisplayRequest.hashValue.getter()
{
  return sub_228916780();
}

uint64_t sub_2288BFD84()
{
  return sub_228916780();
}

uint64_t sub_2288BFDDC()
{
  return sub_228916780();
}

uint64_t sub_2288BFE2C(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 8);
  int v3 = *(unsigned __int8 *)(a2 + 8);
  return sub_22885AEEC(*(void *)a1, *(void *)a2) & (v2 == v3);
}

uint64_t static MobileDocumentRequest<>.displayDriversLicense(_:options:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v3 = *a2;
  *(void *)a3 = a1;
  *(unsigned char *)(a3 + 8) = v3;
  return swift_bridgeObjectRetain();
}

unint64_t sub_2288BFE84()
{
  unint64_t result = qword_26826A5A8;
  if (!qword_26826A5A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A5A8);
  }
  return result;
}

unint64_t sub_2288BFED8(uint64_t a1)
{
  unint64_t result = sub_2288BFF00();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2288BFF00()
{
  unint64_t result = qword_26826A5B0;
  if (!qword_26826A5B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A5B0);
  }
  return result;
}

unint64_t sub_2288BFF58()
{
  unint64_t result = qword_26826A5B8;
  if (!qword_26826A5B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A5B8);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for MobileDriversLicenseDisplayRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MobileDriversLicenseDisplayRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for MobileDriversLicenseDisplayRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for MobileDriversLicenseDisplayRequest(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 9)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MobileDriversLicenseDisplayRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 9) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDisplayRequest()
{
  return &type metadata for MobileDriversLicenseDisplayRequest;
}

uint64_t static StoreAndForwardStatusInternal.supportsSecureCoding.getter()
{
  return byte_26826A5C0;
}

uint64_t static StoreAndForwardStatusInternal.supportsSecureCoding.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  byte_26826A5C0 = a1;
  return result;
}

uint64_t (*static StoreAndForwardStatusInternal.supportsSecureCoding.modify())()
{
  return j__swift_endAccess;
}

id StoreAndForwardStatusInternal.__allocating_init(activationID:readCount:expiry:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (char *)objc_allocWithZone(v4);
  uint64_t v10 = &v9[OBJC_IVAR____TtC15ProximityReader29StoreAndForwardStatusInternal_activationID];
  *(void *)uint64_t v10 = a1;
  *((void *)v10 + 1) = a2;
  *(void *)&v9[OBJC_IVAR____TtC15ProximityReader29StoreAndForwardStatusInternal_readCount] = a3;
  uint64_t v11 = &v9[OBJC_IVAR____TtC15ProximityReader29StoreAndForwardStatusInternal_expiry];
  uint64_t v12 = sub_2289152F0();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v11, a4, v12);
  v16.receiver = v9;
  v16.super_class = v4;
  id v14 = objc_msgSendSuper2(&v16, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a4, v12);
  return v14;
}

id StoreAndForwardStatusInternal.init(activationID:readCount:expiry:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = &v4[OBJC_IVAR____TtC15ProximityReader29StoreAndForwardStatusInternal_activationID];
  *(void *)uint64_t v10 = a1;
  *((void *)v10 + 1) = a2;
  *(void *)&v4[OBJC_IVAR____TtC15ProximityReader29StoreAndForwardStatusInternal_readCount] = a3;
  uint64_t v11 = &v4[OBJC_IVAR____TtC15ProximityReader29StoreAndForwardStatusInternal_expiry];
  uint64_t v12 = sub_2289152F0();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v11, a4, v12);
  v16.receiver = v4;
  v16.super_class = ObjectType;
  id v14 = objc_msgSendSuper2(&v16, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a4, v12);
  return v14;
}

Swift::Void __swiftcall StoreAndForwardStatusInternal.encode(with:)(NSCoder with)
{
  char v3 = (void *)sub_228915C40();
  unint64_t v4 = (void *)sub_228915C40();
  [(objc_class *)with.super.isa encodeObject:v3 forKey:v4];

  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC15ProximityReader29StoreAndForwardStatusInternal_readCount);
  uint64_t v6 = (void *)sub_228915C40();
  [(objc_class *)with.super.isa encodeInteger:v5 forKey:v6];

  uint64_t v7 = (void *)sub_2289152A0();
  id v8 = (id)sub_228915C40();
  [(objc_class *)with.super.isa encodeObject:v7 forKey:v8];
}

id StoreAndForwardStatusInternal.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return StoreAndForwardStatusInternal.init(coder:)(a1);
}

id StoreAndForwardStatusInternal.init(coder:)(id a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v46);
  uint64_t v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26826A5E0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v41 - v11;
  uint64_t v13 = sub_2289152F0();
  id v14 = *(void **)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v45 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_228811060(0, (unint64_t *)&qword_268268250);
  objc_super v16 = v2;
  uint64_t v17 = sub_228916120();
  if (v17 && (uint64_t v18 = (void *)v17, v48 = 0, v49 = 0, sub_228915C60(), v18, (v19 = v49) != 0))
  {
    uint64_t v41 = v48;
    sub_228811060(0, &qword_26826A5F0);
    id v44 = a1;
    uint64_t v20 = sub_228916120();
    if (v20)
    {
      unint64_t v21 = (void *)v20;
      os_log_type_t v43 = (objc_class *)ObjectType;
      char v42 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v14[7];
      v42(v9, 1, 1, v13);
      sub_2288C0DC0();
      sub_2289164A0();

      uint64_t v22 = (uint64_t (*)(char *, uint64_t, uint64_t))v14[6];
      if (v22(v9, 1, v13) == 1)
      {
        v42(v12, 1, 1, v13);
      }
      else
      {
        uint64_t v23 = v9;
        uint64_t v24 = (void (*)(char *, char *, uint64_t))v14[4];
        v24(v12, v23, v13);
        v42(v12, 0, 1, v13);
        int v25 = v22(v12, 1, v13);
        uint64_t v26 = v43;
        if (v25 != 1)
        {
          unint64_t v36 = v45;
          v24(v45, v12, v13);
          char v37 = &v16[OBJC_IVAR____TtC15ProximityReader29StoreAndForwardStatusInternal_activationID];
          *(void *)char v37 = v41;
          *((void *)v37 + 1) = v19;
          int v38 = (void *)sub_228915C40();
          id v39 = v44;
          id v40 = objc_msgSend(v44, sel_decodeIntegerForKey_, v38);

          *(void *)&v16[OBJC_IVAR____TtC15ProximityReader29StoreAndForwardStatusInternal_readCount] = v40;
          v24(&v16[OBJC_IVAR____TtC15ProximityReader29StoreAndForwardStatusInternal_expiry], v36, v13);

          v47.receiver = v16;
          v47.super_class = v26;
          id v34 = objc_msgSendSuper2(&v47, sel_init);

          return v34;
        }
      }
    }
    else
    {
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v14[7])(v12, 1, 1, v13);
    }

    swift_bridgeObjectRelease();
    sub_2288110C0((uint64_t)v12, (uint64_t *)&unk_26826A5E0);
    a1 = v44;
  }
  else
  {
  }
  if (qword_268267EF8 != -1) {
    swift_once();
  }
  uint64_t v27 = __swift_project_value_buffer(v46, (uint64_t)qword_268283D50);
  sub_22880AB38(v27, (uint64_t)v6);
  uint64_t v28 = sub_2289155C0();
  uint64_t v29 = *(void *)(v28 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v6, 1, v28) == 1)
  {

    sub_2288110C0((uint64_t)v6, (uint64_t *)&unk_2682684D0);
  }
  else
  {
    unint64_t v30 = a1;
    unint64_t v31 = sub_2289155A0();
    os_log_type_t v32 = sub_228916050();
    if (os_log_type_enabled(v31, v32))
    {
      objc_super v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)objc_super v33 = 0;
      _os_log_impl(&dword_228806000, v31, v32, "StoreAndForwardStatusInternal | Failed to decode object", v33, 2u);
      MEMORY[0x22A6A1090](v33, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v29 + 8))(v6, v28);
  }
  swift_deallocPartialClassInstance();
  return 0;
}

id StoreAndForwardStatusInternal.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void StoreAndForwardStatusInternal.init()()
{
}

id StoreAndForwardStatusInternal.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_2288C0DC0()
{
  unint64_t result = qword_26826A5F8;
  if (!qword_26826A5F8)
  {
    sub_2289152F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A5F8);
  }
  return result;
}

uint64_t sub_2288C0E18()
{
  return type metadata accessor for StoreAndForwardStatusInternal();
}

uint64_t type metadata accessor for StoreAndForwardStatusInternal()
{
  uint64_t result = qword_26826A608;
  if (!qword_26826A608) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2288C0E6C()
{
  uint64_t result = sub_2289152F0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for StoreAndForwardStatusInternal(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for StoreAndForwardStatusInternal);
}

uint64_t dispatch thunk of StoreAndForwardStatusInternal.__allocating_init(activationID:readCount:expiry:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of StoreAndForwardStatusInternal.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

unint64_t PaymentCardReaderSession.ReadError.errorName.getter()
{
  if (!*(unsigned char *)(v0 + 16)) {
    return 0xD000000000000013;
  }
  if (*(unsigned char *)(v0 + 16) == 1) {
    return 0xD00000000000001BLL;
  }
  unint64_t result = 0x41746F4E64616572;
  switch(*(void *)v0)
  {
    case 1:
      unint64_t result = 0xD000000000000017;
      break;
    case 2:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0x7265646165526F6ELL;
      break;
    case 5:
      unint64_t result = 0xD000000000000014;
      break;
    case 6:
      unint64_t result = 0xD000000000000012;
      break;
    case 7:
      unint64_t result = 0xD000000000000019;
      break;
    case 8:
      unint64_t result = 0xD000000000000020;
      break;
    case 9:
      unint64_t result = 0xD000000000000011;
      break;
    case 0xALL:
      unint64_t result = 0x636E614364616572;
      break;
    case 0xBLL:
      unint64_t result = 0x4164696C61766E69;
      break;
    case 0xCLL:
    case 0xDLL:
    case 0x14:
      return 0xD000000000000013;
    case 0xELL:
      unint64_t result = 0x626173694463666ELL;
      break;
    case 0xFLL:
      unint64_t result = 0xD000000000000018;
      break;
    case 0x10:
      unint64_t result = 0xD000000000000010;
      break;
    case 0x11:
      unint64_t result = 0x6461655264726163;
      break;
    case 0x12:
      unint64_t result = 0x4664616552736176;
      break;
    case 0x13:
      unint64_t result = 0xD000000000000011;
      break;
    case 0x15:
      unint64_t result = 0x7972746E456E6970;
      break;
    case 0x16:
      unint64_t result = 0x6E656B6F546E6970;
      break;
    case 0x17:
      unint64_t result = 0x7972746E456E6970;
      break;
    case 0x18:
      unint64_t result = 0x65636E61436E6970;
      break;
    case 0x19:
      unint64_t result = 0x6C41746F4E6E6970;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t PaymentCardReaderSession.id.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t PaymentCardReaderSession.Event.name.getter()
{
  unint64_t result = 0x726F467964616572;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6574654464726163;
      break;
    case 2:
      unint64_t result = 0x614365766F6D6572;
      break;
    case 3:
      unint64_t result = 0x6574656C706D6F63;
      break;
    case 4:
      unint64_t result = 0x7972746572;
      break;
    case 5:
      unint64_t result = 0x636E614364616572;
      break;
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

BOOL static PaymentCardReaderSession.Event.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t PaymentCardReaderSession.Event.hash(into:)()
{
  return sub_228916760();
}

uint64_t PaymentCardReaderSession.Event.hashValue.getter()
{
  return sub_228916780();
}

unint64_t PaymentCardReaderSession.ReadError.errorDescription.getter()
{
  if (*(unsigned char *)(v0 + 16))
  {
    if (*(unsigned char *)(v0 + 16) == 1)
    {
      swift_bridgeObjectRetain();
      sub_228916320();
      swift_bridgeObjectRelease();
      unint64_t v2 = 0xD00000000000002ALL;
LABEL_6:
      sub_228915D60();
      swift_bridgeObjectRelease();
      return v2;
    }
    unint64_t result = 0xD00000000000002ELL;
    switch(*(void *)v0)
    {
      case 1:
        unint64_t result = 0xD000000000000046;
        break;
      case 2:
        unint64_t result = 0xD000000000000043;
        break;
      case 3:
        unint64_t result = 0xD000000000000037;
        break;
      case 4:
        unint64_t result = 0xD000000000000037;
        break;
      case 5:
        unint64_t result = 0xD00000000000004BLL;
        break;
      case 6:
        unint64_t result = 0xD000000000000037;
        break;
      case 7:
        unint64_t result = 0xD000000000000041;
        break;
      case 8:
        unint64_t result = 0xD000000000000045;
        break;
      case 9:
        unint64_t result = 0xD000000000000028;
        break;
      case 0xALL:
        unint64_t result = 0xD00000000000003BLL;
        break;
      case 0xBLL:
        unint64_t result = 0xD000000000000066;
        break;
      case 0xDLL:
        unint64_t result = 0xD00000000000002CLL;
        break;
      case 0xELL:
        unint64_t result = 0xD00000000000001ELL;
        break;
      case 0xFLL:
        unint64_t result = 0xD000000000000033;
        break;
      case 0x10:
        unint64_t result = 0xD000000000000046;
        break;
      case 0x11:
        unint64_t result = 0xD000000000000028;
        break;
      case 0x13:
        unint64_t result = 0xD000000000000031;
        break;
      case 0x14:
        unint64_t result = 0xD00000000000002ALL;
        break;
      case 0x15:
        unint64_t result = 0xD000000000000029;
        break;
      case 0x16:
        unint64_t result = 0xD00000000000002DLL;
        break;
      case 0x17:
        unint64_t result = 0xD00000000000003ALL;
        break;
      case 0x18:
        unint64_t result = 0xD000000000000052;
        break;
      case 0x19:
        unint64_t result = 0xD000000000000048;
        break;
      default:
        return result;
    }
  }
  else
  {
    if (*(void *)(v0 + 8))
    {
      unint64_t v2 = 0xD000000000000030;
      sub_228915D60();
      swift_bridgeObjectRetain();
      goto LABEL_6;
    }
    return 0xD00000000000005CLL;
  }
  return result;
}

uint64_t PaymentCardReaderSession.PINToken.rawValue.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

ProximityReader::PaymentCardReaderSession::PINToken __swiftcall PaymentCardReaderSession.PINToken.init(rawValue:)(ProximityReader::PaymentCardReaderSession::PINToken rawValue)
{
  *uint64_t v1 = rawValue;
  return rawValue;
}

uint64_t PaymentCardReaderSession.deinit()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v2);
  unint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v16 - v6;
  if (qword_268267F00 != -1) {
    swift_once();
  }
  uint64_t v8 = __swift_project_value_buffer(v2, (uint64_t)qword_268283D68);
  sub_22880AB38(v8, (uint64_t)v7);
  uint64_t v9 = sub_2289155C0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v7, 1, v9) == 1)
  {
    sub_22880ABA0((uint64_t)v7);
  }
  else
  {
    sub_2288C61B4(v1, 0x74696E696564, 0xE600000000000000, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
  }
  sub_22880AB38(v8, (uint64_t)v4);
  if (v11(v4, 1, v9) == 1)
  {
    sub_22880ABA0((uint64_t)v4);
  }
  else
  {
    uint64_t v12 = sub_2289155A0();
    os_log_type_t v13 = sub_228916070();
    if (os_log_type_enabled(v12, v13))
    {
      id v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v14 = 0;
      _os_log_impl(&dword_228806000, v12, v13, "PaymentCardReaderSession destroyed", v14, 2u);
      MEMORY[0x22A6A1090](v14, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v4, v9);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t PaymentCardReaderSession.__deallocating_deinit()
{
  PaymentCardReaderSession.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_2288C1A8C()
{
  v1[2] = v0;
  v1[3] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  v1[4] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2288C1B24);
}

uint64_t sub_2288C1B24()
{
  if (qword_268267F00 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[4];
  uint64_t v2 = __swift_project_value_buffer(v0[3], (uint64_t)qword_268283D68);
  sub_22880AB38(v2, v1);
  uint64_t v3 = sub_2289155C0();
  uint64_t v4 = *(void *)(v3 - 8);
  int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  uint64_t v6 = v0[4];
  if (v5 == 1)
  {
    sub_22880ABA0(v0[4]);
  }
  else
  {
    sub_2288C61B4(v0[2], 0x65526C65636E6163, 0xEC00000029286461, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  if (qword_268267EE0 != -1) {
    swift_once();
  }
  uint64_t v7 = v0[2];
  uint64_t v8 = *(void *)(v7 + 32);
  uint64_t v9 = *(void *)(v7 + 40);
  uint64_t v10 = (void *)swift_task_alloc();
  v0[5] = (uint64_t)v10;
  *uint64_t v10 = v0;
  v10[1] = sub_2288C1CFC;
  return sub_228892894(v8, v9);
}

uint64_t sub_2288C1CFC(char a1)
{
  uint64_t v4 = *v2;
  swift_task_dealloc();
  swift_task_dealloc();
  int v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
  if (v1) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = a1 & 1;
  }
  return v5(v6);
}

uint64_t sub_2288C1E2C(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  v3[6] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2288C1EC8);
}

uint64_t sub_2288C1EC8()
{
  if (qword_268267F00 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[6];
  uint64_t v2 = __swift_project_value_buffer(v0[5], (uint64_t)qword_268283D68);
  sub_22880AB38(v2, v1);
  uint64_t v3 = sub_2289155C0();
  uint64_t v4 = *(void *)(v3 - 8);
  int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  uint64_t v6 = v0[6];
  if (v5 == 1)
  {
    sub_22880ABA0(v0[6]);
  }
  else
  {
    sub_2288C61B4(v0[4], 0xD000000000000013, 0x800000022892B140, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  uint64_t v7 = (void *)swift_task_alloc();
  v0[7] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_2288C2068;
  uint64_t v8 = v0[3];
  uint64_t v9 = v0[2];
  return sub_2288C2178(v9, v8, 0, 0);
}

uint64_t sub_2288C2068()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_2288C2178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  void v5[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2682699A8);
  v5[7] = swift_task_alloc();
  v5[8] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  v5[9] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2288C2248);
}

uint64_t sub_2288C2248()
{
  uint64_t v20 = v0;
  if (qword_268267F00 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = __swift_project_value_buffer(*(void *)(v0 + 64), (uint64_t)qword_268283D68);
  sub_22880AB38(v2, v1);
  uint64_t v3 = sub_2289155C0();
  uint64_t v4 = *(void *)(v3 - 8);
  int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  uint64_t v6 = *(void *)(v0 + 72);
  if (v5 == 1)
  {
    sub_22880ABA0(*(void *)(v0 + 72));
  }
  else
  {
    sub_2288C61B4(*(void *)(v0 + 48), 0xD000000000000020, 0x800000022892B160, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  sub_22883B06C(*(unsigned int **)(v0 + 24));
  int64_t v7 = sub_22883B9D8(*(void *)(*(void *)(v0 + 24) + 48));
  uint64_t v8 = *(void *)(v0 + 56);
  sub_2288C4964(*(void *)(v0 + 24), v8, (uint64_t (*)(void))type metadata accessor for PaymentCardTransactionRequest);
  uint64_t v9 = type metadata accessor for PaymentCardTransactionRequest();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 0, 1, v9);
  v19[0] = 4;
  id v10 = objc_allocWithZone((Class)type metadata accessor for TransactionInternal());
  id v11 = sub_22886FFD8(0, v8, -1, v7, 0, MEMORY[0x263F8EE78], 3, v19);
  *(void *)(v0 + 80) = v11;
  if (qword_268267EE0 != -1) {
    swift_once();
  }
  uint64_t v12 = *(void *)(v0 + 48);
  uint64_t v13 = *(void *)(v12 + 32);
  uint64_t v14 = *(void *)(v12 + 40);
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v15;
  *uint64_t v15 = v0;
  v15[1] = sub_2288C2550;
  uint64_t v16 = *(void *)(v0 + 32);
  uint64_t v17 = *(void *)(v0 + 40);
  return sub_228893634(v13, v14, (uint64_t)v11, v16, v17);
}

uint64_t sub_2288C2550(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 96) = a1;
  *(void *)(v3 + 104) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_2288C27BC;
  }
  else {
    uint64_t v4 = sub_2288C2664;
  }
  return MEMORY[0x270FA2498](v4);
}

uint64_t sub_2288C2664()
{
  uint64_t v16 = v0;
  ReadResult.getPaymentData()(&v15);
  object = v15.value.id._object;
  if (v15.value.id._object)
  {
    uint64_t v2 = *(void **)(v0 + 96);
    uint64_t v3 = *(void *)(v0 + 16);
    Swift::Bool isPINFallback = v15.value.isPINFallback;
    __int16 v5 = *(_WORD *)&v15.value.outcome;
    uint64_t countAndFlagsBits = v15.value.id._countAndFlagsBits;

    Swift::String_optional paymentCardData = v15.value.paymentCardData;
    Swift::String_optional generalCardData = v15.value.generalCardData;
    Swift::String_optional applicationTypeIdentifier = v15.value.applicationTypeIdentifier;
    *(void *)uint64_t v3 = countAndFlagsBits;
    *(void *)(v3 + 8) = object;
    *(Swift::String_optional *)(v3 + 16) = paymentCardData;
    *(Swift::String_optional *)(v3 + 32) = generalCardData;
    *(Swift::String_optional *)(v3 + 48) = applicationTypeIdentifier;
    *(unsigned char *)(v3 + 64) = v5;
    *(unsigned char *)(v3 + 65) = HIBYTE(v5) & 1;
    *(unsigned char *)(v3 + 66) = isPINFallback;
  }
  else
  {
    id v11 = *(void **)(v0 + 96);
    uint64_t v12 = *(void **)(v0 + 80);
    sub_22883CD24();
    swift_allocError();
    *(_OWORD *)uint64_t v13 = xmmword_22891F6F0;
    *(unsigned char *)(v13 + 16) = 2;
    swift_willThrow();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  id v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_2288C27BC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2288C2834(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  v3[6] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2288C28D0);
}

uint64_t sub_2288C28D0()
{
  if (qword_268267F00 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[6];
  uint64_t v2 = __swift_project_value_buffer(v0[5], (uint64_t)qword_268283D68);
  sub_22880AB38(v2, v1);
  uint64_t v3 = sub_2289155C0();
  uint64_t v4 = *(void *)(v3 - 8);
  int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  uint64_t v6 = v0[6];
  if (v5 == 1)
  {
    sub_22880ABA0(v0[6]);
  }
  else
  {
    sub_2288C61B4(v0[4], 0xD000000000000013, 0x800000022892B140, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  int64_t v7 = (void *)swift_task_alloc();
  v0[7] = v7;
  *int64_t v7 = v0;
  v7[1] = sub_2288C58F8;
  uint64_t v8 = v0[3];
  uint64_t v9 = v0[2];
  return sub_2288C2A70(v9, v8, 0, 0);
}

uint64_t sub_2288C2A70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  void v5[2] = a1;
  type metadata accessor for PaymentCardVerificationRequest();
  v5[7] = swift_task_alloc();
  v5[8] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  v5[9] = swift_task_alloc();
  v5[10] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2288C2B4C);
}

uint64_t sub_2288C2B4C()
{
  uint64_t v28 = v0;
  if (qword_268267F00 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[10];
  uint64_t v2 = __swift_project_value_buffer(v0[8], (uint64_t)qword_268283D68);
  sub_22880AB38(v2, v1);
  uint64_t v3 = sub_2289155C0();
  uint64_t v4 = *(void *)(v3 - 8);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  int v6 = v5(v1, 1, v3);
  uint64_t v7 = v0[10];
  if (v6 == 1)
  {
    sub_22880ABA0(v0[10]);
  }
  else
  {
    sub_2288C61B4(v0[6], 0xD000000000000020, 0x800000022892B160, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  uint64_t v8 = (uint64_t *)v0[3];
  type metadata accessor for CurrencyDefinitions();
  static CurrencyDefinitions.find(isoCurrencyCode:countryCode:)(*v8, v8[1], -1, (uint64_t)v26);
  uint64_t v9 = v27;
  sub_22883CDD4(v26[0], v26[1], v26[2], v27);
  if (v9)
  {
    uint64_t v10 = v0[7];
    sub_2288C4964(v0[3], v10, (uint64_t (*)(void))type metadata accessor for PaymentCardVerificationRequest);
    id v11 = _s15ProximityReader19TransactionInternalC12verificationAcA30PaymentCardVerificationRequestV_tcfC_0(v10);
    v0[11] = v11;
    if (qword_268267EE0 != -1) {
      swift_once();
    }
    uint64_t v12 = v0[6];
    uint64_t v13 = *(void *)(v12 + 32);
    uint64_t v14 = *(void *)(v12 + 40);
    ProximityReader::PaymentCardReadResult_optional v15 = (void *)swift_task_alloc();
    v0[12] = v15;
    *ProximityReader::PaymentCardReadResult_optional v15 = v0;
    v15[1] = sub_2288C2F10;
    uint64_t v16 = v0[4];
    uint64_t v17 = v0[5];
    return sub_228893634(v13, v14, (uint64_t)v11, v16, v17);
  }
  else
  {
    uint64_t v19 = v0[9];
    sub_22880AB38(v2, v19);
    if (v5(v19, 1, v3) == 1)
    {
      sub_22880ABA0(v0[9]);
    }
    else
    {
      uint64_t v20 = sub_2289155A0();
      os_log_type_t v21 = sub_228916050();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v22 = 0;
        _os_log_impl(&dword_228806000, v20, v21, "PaymentCardVerificationRequest - invalidCurrencyCode", v22, 2u);
        MEMORY[0x22A6A1090](v22, -1, -1);
      }
      uint64_t v23 = v0[9];

      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v23, v3);
    }
    sub_22883CD24();
    swift_allocError();
    *(_OWORD *)uint64_t v24 = xmmword_22891AC30;
    *(unsigned char *)(v24 + 16) = 2;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    int v25 = (uint64_t (*)(void))v0[1];
    return v25();
  }
}

uint64_t sub_2288C2F10(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 104) = a1;
  *(void *)(v3 + 112) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_2288C3194;
  }
  else {
    uint64_t v4 = sub_2288C3024;
  }
  return MEMORY[0x270FA2498](v4);
}

uint64_t sub_2288C3024()
{
  uint64_t v16 = v0;
  ReadResult.getPaymentData()(&v15);
  object = v15.value.id._object;
  if (v15.value.id._object)
  {
    uint64_t v2 = *(void **)(v0 + 104);
    uint64_t v3 = *(void *)(v0 + 16);
    Swift::Bool isPINFallback = v15.value.isPINFallback;
    __int16 v5 = *(_WORD *)&v15.value.outcome;
    uint64_t countAndFlagsBits = v15.value.id._countAndFlagsBits;

    Swift::String_optional paymentCardData = v15.value.paymentCardData;
    Swift::String_optional generalCardData = v15.value.generalCardData;
    Swift::String_optional applicationTypeIdentifier = v15.value.applicationTypeIdentifier;
    *(void *)uint64_t v3 = countAndFlagsBits;
    *(void *)(v3 + 8) = object;
    *(Swift::String_optional *)(v3 + 16) = paymentCardData;
    *(Swift::String_optional *)(v3 + 32) = generalCardData;
    *(Swift::String_optional *)(v3 + 48) = applicationTypeIdentifier;
    *(unsigned char *)(v3 + 64) = v5;
    *(unsigned char *)(v3 + 65) = HIBYTE(v5) & 1;
    *(unsigned char *)(v3 + 66) = isPINFallback;
  }
  else
  {
    id v11 = *(void **)(v0 + 104);
    uint64_t v12 = *(void **)(v0 + 88);
    sub_22883CD24();
    swift_allocError();
    *(_OWORD *)uint64_t v13 = xmmword_22891F6F0;
    *(unsigned char *)(v13 + 16) = 2;
    swift_willThrow();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_2288C3194()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2288C321C(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  v3[6] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2288C32B8);
}

uint64_t sub_2288C32B8()
{
  if (qword_268267F00 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[6];
  uint64_t v2 = __swift_project_value_buffer(v0[5], (uint64_t)qword_268283D68);
  sub_22880AB38(v2, v1);
  uint64_t v3 = sub_2289155C0();
  uint64_t v4 = *(void *)(v3 - 8);
  int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  uint64_t v6 = v0[6];
  if (v5 == 1)
  {
    sub_22880ABA0(v0[6]);
  }
  else
  {
    sub_2288C61B4(v0[4], 0x2853415664616572, 0xEB00000000293A5FLL, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  uint64_t v7 = (void *)swift_task_alloc();
  v0[7] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_2288C58F8;
  uint64_t v8 = v0[3];
  uint64_t v9 = v0[2];
  return sub_2288C345C(v9, v8, 0, 0);
}

uint64_t sub_2288C345C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  void v5[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2682699A8);
  v5[7] = swift_task_alloc();
  v5[8] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  v5[9] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2288C352C);
}

uint64_t sub_2288C352C()
{
  os_log_type_t v21 = v0;
  if (qword_268267F00 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[9];
  uint64_t v2 = __swift_project_value_buffer(v0[8], (uint64_t)qword_268283D68);
  sub_22880AB38(v2, v1);
  uint64_t v3 = sub_2289155C0();
  uint64_t v4 = *(void *)(v3 - 8);
  int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  uint64_t v6 = v0[9];
  if (v5 == 1)
  {
    sub_22880ABA0(v0[9]);
  }
  else
  {
    sub_2288C61B4(v0[6], 0xD000000000000018, 0x800000022892B190, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  uint64_t v7 = sub_22883C524(v0[3], *(void *)(v0[6] + 48));
  v0[10] = (uint64_t)v7;
  uint64_t v8 = v7;
  uint64_t v9 = v0[7];
  uint64_t v10 = type metadata accessor for PaymentCardTransactionRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v20[0] = 4;
  id v11 = objc_allocWithZone((Class)type metadata accessor for TransactionInternal());
  swift_retain();
  id v12 = sub_22886FFD8(1, v9, -1, MEMORY[0x263F8EE78], v8, MEMORY[0x263F8EE78], 2, v20);
  v0[11] = (uint64_t)v12;
  swift_release();
  if (qword_268267EE0 != -1) {
    swift_once();
  }
  uint64_t v13 = v0[6];
  uint64_t v14 = *(void *)(v13 + 32);
  uint64_t v15 = *(void *)(v13 + 40);
  uint64_t v16 = (void *)swift_task_alloc();
  v0[12] = (uint64_t)v16;
  void *v16 = v0;
  v16[1] = sub_2288C3820;
  uint64_t v17 = v0[4];
  uint64_t v18 = v0[5];
  return sub_228893634(v14, v15, (uint64_t)v12, v17, v18);
}

uint64_t sub_2288C3820(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 104) = v1;
  swift_task_dealloc();
  if (v1)
  {
    int v5 = sub_2288C3A38;
  }
  else
  {
    *(void *)(v4 + 112) = a1;
    int v5 = sub_2288C3948;
  }
  return MEMORY[0x270FA2498](v5);
}

uint64_t sub_2288C3948()
{
  uint64_t v1 = (char *)v0[14];
  uint64_t v2 = (void *)v0[11];
  uint64_t v3 = (void *)v0[2];
  uint64_t v5 = *(void *)&v1[OBJC_IVAR____TtC15ProximityReader10ReadResult_transactionId];
  uint64_t v4 = *(void *)&v1[OBJC_IVAR____TtC15ProximityReader10ReadResult_transactionId + 8];
  unint64_t v6 = *(void *)&v1[OBJC_IVAR____TtC15ProximityReader10ReadResult_vasEntries];
  swift_bridgeObjectRetain();
  uint64_t D0VGSayACGFZ_0 = _s15ProximityReader12VASReadEntryC11externalizeySayAA0C6ResultV04ReadD0VGSayACGFZ_0(v6);

  swift_release();
  *uint64_t v3 = v5;
  v3[1] = v4;
  v3[2] = D0VGSayACGFZ_0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_2288C3A38()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2288C3AB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 40) = a4;
  *(void *)(v6 + 48) = v5;
  *(unsigned char *)(v6 + 80) = a5;
  *(void *)(v6 + 24) = a2;
  *(void *)(v6 + 32) = a3;
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 56) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  *(void *)(v6 + 64) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2288C3B5C);
}

uint64_t sub_2288C3B5C()
{
  if (qword_268267F00 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = __swift_project_value_buffer(*(void *)(v0 + 56), (uint64_t)qword_268283D68);
  sub_22880AB38(v2, v1);
  uint64_t v3 = sub_2289155C0();
  uint64_t v4 = *(void *)(v3 - 8);
  int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  uint64_t v6 = *(void *)(v0 + 64);
  if (v5 == 1)
  {
    sub_22880ABA0(*(void *)(v0 + 64));
  }
  else
  {
    sub_2288C61B4(*(void *)(v0 + 48), 0xD00000000000002ELL, 0x800000022892B1B0, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_2288C3D04;
  uint64_t v8 = *(void *)(v0 + 40);
  char v9 = *(unsigned char *)(v0 + 80);
  uint64_t v10 = *(void *)(v0 + 24);
  uint64_t v11 = *(void *)(v0 + 32);
  uint64_t v12 = *(void *)(v0 + 16);
  return sub_2288C3E14(v12, v10, v11, v8, v9, 0, 0);
}

uint64_t sub_2288C3D04()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_2288C3E14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v8 + 56) = a7;
  *(void *)(v8 + 64) = v7;
  *(void *)(v8 + 40) = a4;
  *(void *)(v8 + 48) = a6;
  *(unsigned char *)(v8 + 136) = a5;
  *(void *)(v8 + 24) = a2;
  *(void *)(v8 + 32) = a3;
  *(void *)(v8 + 16) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2682699A8);
  *(void *)(v8 + 72) = swift_task_alloc();
  *(void *)(v8 + 80) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  *(void *)(v8 + 88) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2288C3EEC);
}

uint64_t sub_2288C3EEC()
{
  uint64_t v22 = v0;
  if (qword_268267F00 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = __swift_project_value_buffer(*(void *)(v0 + 80), (uint64_t)qword_268283D68);
  sub_22880AB38(v2, v1);
  uint64_t v3 = sub_2289155C0();
  uint64_t v4 = *(void *)(v3 - 8);
  int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  uint64_t v6 = *(void *)(v0 + 88);
  if (v5 == 1)
  {
    sub_22880ABA0(*(void *)(v0 + 88));
  }
  else
  {
    sub_2288C61B4(*(void *)(v0 + 64), 0xD00000000000003BLL, 0x800000022892B1E0, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  sub_22883B06C(*(unsigned int **)(v0 + 32));
  int64_t v7 = sub_22883B9D8(*(void *)(*(void *)(v0 + 32) + 48));
  uint64_t v8 = sub_22883C524(*(void *)(v0 + 40), *(void *)(*(void *)(v0 + 64) + 48));
  *(void *)(v0 + 96) = v8;
  char v9 = v8;
  uint64_t v10 = *(void *)(v0 + 72);
  int v11 = *(unsigned __int8 *)(v0 + 136);
  sub_2288C4964(*(void *)(v0 + 32), v10, (uint64_t (*)(void))type metadata accessor for PaymentCardTransactionRequest);
  uint64_t v12 = type metadata accessor for PaymentCardTransactionRequest();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v10, 0, 1, v12);
  v21[0] = 4;
  objc_allocWithZone((Class)type metadata accessor for TransactionInternal());
  swift_retain();
  id v13 = sub_22886FFD8(2, v10, -1, v7, v9, MEMORY[0x263F8EE78], v11, v21);
  *(void *)(v0 + 104) = v13;
  swift_release();
  if (qword_268267EE0 != -1) {
    swift_once();
  }
  uint64_t v14 = *(void *)(v0 + 64);
  uint64_t v15 = *(void *)(v14 + 32);
  uint64_t v16 = *(void *)(v14 + 40);
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v17;
  *uint64_t v17 = v0;
  v17[1] = sub_2288C422C;
  uint64_t v18 = *(void *)(v0 + 48);
  uint64_t v19 = *(void *)(v0 + 56);
  return sub_228893634(v15, v16, (uint64_t)v13, v18, v19);
}

uint64_t sub_2288C422C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 120) = v1;
  swift_task_dealloc();
  if (v1)
  {
    int v5 = sub_2288C44A8;
  }
  else
  {
    *(void *)(v4 + 128) = a1;
    int v5 = sub_2288C4354;
  }
  return MEMORY[0x270FA2498](v5);
}

uint64_t sub_2288C4354()
{
  uint64_t v19 = v0;
  uint64_t v1 = (char *)v0[16];
  uint64_t v17 = (void *)v0[13];
  uint64_t v3 = v0[2];
  uint64_t v2 = (void *)v0[3];
  ReadResult.getPaymentData()(&v18);
  Swift::String_optional paymentCardData = v18.value.paymentCardData;
  Swift::String id = v18.value.id;
  Swift::String_optional generalCardData = v18.value.generalCardData;
  object = v18.value.applicationTypeIdentifier.value._object;
  uint64_t countAndFlagsBits = v18.value.applicationTypeIdentifier.value._countAndFlagsBits;
  __int16 v16 = *(_WORD *)&v18.value.outcome;
  Swift::Bool isPINFallback = v18.value.isPINFallback;
  uint64_t v6 = *(void *)&v1[OBJC_IVAR____TtC15ProximityReader10ReadResult_transactionId];
  uint64_t v7 = *(void *)&v1[OBJC_IVAR____TtC15ProximityReader10ReadResult_transactionId + 8];
  unint64_t v8 = *(void *)&v1[OBJC_IVAR____TtC15ProximityReader10ReadResult_vasEntries];
  swift_bridgeObjectRetain();
  uint64_t D0VGSayACGFZ_0 = _s15ProximityReader12VASReadEntryC11externalizeySayAA0C6ResultV04ReadD0VGSayACGFZ_0(v8);
  swift_release();

  *(Swift::String *)uint64_t v3 = id;
  *(Swift::String_optional *)(v3 + 16) = paymentCardData;
  *(Swift::String_optional *)(v3 + 32) = generalCardData;
  *(void *)(v3 + 48) = countAndFlagsBits;
  *(void *)(v3 + 56) = object;
  *(unsigned char *)(v3 + 66) = isPINFallback;
  *(_WORD *)(v3 + 64) = v16;
  *uint64_t v2 = v6;
  v2[1] = v7;
  v2[2] = D0VGSayACGFZ_0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_2288C44A8()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2288C4528(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  v5[6] = a4;
  v5[7] = v4;
  v5[4] = a1;
  v5[5] = a3;
  v5[8] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = *a2;
  uint64_t v9 = a2[1];
  v5[9] = v7;
  v5[10] = v8;
  v5[11] = v9;
  return MEMORY[0x270FA2498](sub_2288C45D0);
}

uint64_t sub_2288C45D0()
{
  if (qword_268267F00 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[9];
  uint64_t v2 = __swift_project_value_buffer(v0[8], (uint64_t)qword_268283D68);
  sub_22880AB38(v2, v1);
  uint64_t v3 = sub_2289155C0();
  uint64_t v4 = *(void *)(v3 - 8);
  int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  uint64_t v6 = v0[9];
  if (v5 == 1)
  {
    sub_22880ABA0(v0[9]);
  }
  else
  {
    sub_2288C61B4(v0[7], 0xD00000000000002ALL, 0x800000022892B220, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  if (qword_268267EE0 != -1) {
    swift_once();
  }
  uint64_t v7 = v0[11];
  uint64_t v8 = v0[7];
  uint64_t v9 = *(void *)(v8 + 32);
  uint64_t v10 = *(void *)(v8 + 40);
  v0[2] = v0[10];
  v0[3] = v7;
  uint64_t v11 = (void *)swift_task_alloc();
  v0[12] = (uint64_t)v11;
  void *v11 = v0;
  v11[1] = sub_2288C47C4;
  uint64_t v12 = v0[5];
  uint64_t v13 = v0[6];
  uint64_t v14 = v0[4];
  return sub_228894CA0(v14, v9, v10, v0 + 2, v12, v13);
}

uint64_t sub_2288C47C4()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_2288C4900);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_2288C4900()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2288C4964(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_2288C49D0()
{
  unint64_t result = qword_26826A670;
  if (!qword_26826A670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A670);
  }
  return result;
}

unint64_t sub_2288C4A28()
{
  unint64_t result = qword_26826A678;
  if (!qword_26826A678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A678);
  }
  return result;
}

uint64_t type metadata accessor for PaymentCardReaderSession()
{
  return self;
}

uint64_t method lookup function for PaymentCardReaderSession(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for PaymentCardReaderSession);
}

uint64_t dispatch thunk of PaymentCardReaderSession.cancelRead()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 112) + **(int **)(*(void *)v0 + 112));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_22881BC74;
  return v4();
}

uint64_t dispatch thunk of PaymentCardReaderSession.readPaymentCard(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 120) + **(int **)(*(void *)v2 + 120));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_22881CB04;
  return v8(a1, a2);
}

{
  uint64_t v2;
  uint64_t v3;
  void *v6;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;

  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 136) + **(int **)(*(void *)v2 + 136));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_22881CB04;
  return v8(a1, a2);
}

uint64_t dispatch thunk of PaymentCardReaderSession.readPaymentCard(_:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v4 + 128)
                                                                   + **(int **)(*(void *)v4 + 128));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_22881CB04;
  return v12(a1, a2, a3, a4);
}

{
  uint64_t v4;
  uint64_t v5;
  void *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;

  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v4 + 144)
                                                                   + **(int **)(*(void *)v4 + 144));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_22881CB04;
  return v12(a1, a2, a3, a4);
}

uint64_t dispatch thunk of PaymentCardReaderSession.readVAS(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 152) + **(int **)(*(void *)v2 + 152));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_22881CB04;
  return v8(a1, a2);
}

uint64_t dispatch thunk of PaymentCardReaderSession.readVAS(_:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v4 + 160)
                                                                   + **(int **)(*(void *)v4 + 160));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_22881CB04;
  return v12(a1, a2, a3, a4);
}

uint64_t dispatch thunk of PaymentCardReaderSession.readPaymentCard(_:vasRequest:stopOnVASResult:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v5 + 168)
                                                                            + **(int **)(*(void *)v5 + 168));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  *uint64_t v12 = v6;
  v12[1] = sub_22881CB04;
  return v14(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of PaymentCardReaderSession.readPaymentCard(_:vasRequest:stopOnVASResult:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  ProximityReader::PaymentCardReadResult_optional v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v7 + 176)
                                                                                              + **(int **)(*(void *)v7 + 176));
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v8 + 16) = v16;
  void *v16 = v8;
  v16[1] = sub_228812B70;
  return v18(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t dispatch thunk of PaymentCardReaderSession.capturePIN(using:cardReaderTransactionID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v4 + 184)
                                                                   + **(int **)(*(void *)v4 + 184));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_22881CB04;
  return v12(a1, a2, a3, a4);
}

unsigned char *storeEnumTagSinglePayload for PaymentCardReaderSession.Event(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2288C56D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PaymentCardReaderSession.Event()
{
  return &type metadata for PaymentCardReaderSession.Event;
}

uint64_t destroy for PaymentCardReaderSession.ReadError(uint64_t a1)
{
  return sub_2288A42F8(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s15ProximityReader24PaymentCardReaderSessionC9ReadErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_2288A42E0(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for PaymentCardReaderSession.ReadError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_2288A42E0(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_2288A42F8(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for PaymentCardReaderSession.ReadError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_2288A42F8(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for PaymentCardReaderSession.ReadError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PaymentCardReaderSession.ReadError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_2288C58A8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_2288C58C0(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)__n128 result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PaymentCardReaderSession.ReadError()
{
  return &type metadata for PaymentCardReaderSession.ReadError;
}

ValueMetadata *type metadata accessor for PaymentCardReaderSession.PINToken()
{
  return &type metadata for PaymentCardReaderSession.PINToken;
}

uint64_t sub_2288C58FC()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  __swift_allocate_value_buffer(v0, qword_268283D50);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_268283D50);
  sub_2289155B0();
  uint64_t v2 = sub_2289155C0();
  unsigned int v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_2288C59C0()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  __swift_allocate_value_buffer(v0, qword_268283D68);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_268283D68);
  sub_2289155B0();
  uint64_t v2 = sub_2289155C0();
  unsigned int v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_2288C5A98()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  __swift_allocate_value_buffer(v0, qword_268283D80);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_268283D80);
  sub_2289155B0();
  uint64_t v2 = sub_2289155C0();
  unsigned int v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_2288C5B6C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  __swift_allocate_value_buffer(v0, qword_268283D98);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_268283D98);
  sub_2289155B0();
  uint64_t v2 = sub_2289155C0();
  unsigned int v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_2288C5C34()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  __swift_allocate_value_buffer(v0, qword_268283DB0);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_268283DB0);
  sub_2289155B0();
  uint64_t v2 = sub_2289155C0();
  unsigned int v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_2288C5D00()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  __swift_allocate_value_buffer(v0, qword_268283DC8);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_268283DC8);
  sub_2289155B0();
  uint64_t v2 = sub_2289155C0();
  unsigned int v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_2288C5DD8()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  __swift_allocate_value_buffer(v0, qword_268283DE0);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_268283DE0);
  sub_2289155B0();
  uint64_t v2 = sub_2289155C0();
  unsigned int v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_2288C5EB0()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  __swift_allocate_value_buffer(v0, qword_268283DF8);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_268283DF8);
  sub_2289155B0();
  uint64_t v2 = sub_2289155C0();
  unsigned int v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_2288C5F80()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  __swift_allocate_value_buffer(v0, qword_268283E10);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_268283E10);
  sub_2289155B0();
  uint64_t v2 = sub_2289155C0();
  unsigned int v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_2288C6050()
{
  uint64_t result = MCGestaltIsInternalBuild();
  byte_268283E28 = result;
  return result;
}

uint64_t type metadata accessor for PRLoggers()
{
  return self;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

unint64_t sub_2288C60F8(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t result = sub_228915D40();
  if (v4) {
    uint64_t result = 15;
  }
  if (4 * v3 < result >> 14) {
    goto LABEL_12;
  }

  return sub_228915E10();
}

void sub_2288C61B4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  if (qword_268267F40 != -1) {
    swift_once();
  }
  if (byte_268283E28 == 1)
  {
    uint64_t v9 = HIBYTE(a5) & 0xF;
    if ((a5 & 0x2000000000000000) == 0) {
      uint64_t v9 = a4 & 0xFFFFFFFFFFFFLL;
    }
    if (v9)
    {
      uint64_t v30 = a2;
      unint64_t v31 = a3;
      swift_bridgeObjectRetain();
      sub_228915D60();
      sub_228915D60();
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    uint64_t v30 = sub_228915C20();
    unint64_t v31 = v10;
    sub_2288566E4();
    uint64_t v11 = sub_228916220();
    unint64_t v13 = v12;
    swift_bridgeObjectRelease();
    unint64_t v14 = sub_2288C60F8(8uLL, v11, v13);
    uint64_t v16 = v15;
    uint64_t v29 = v17;
    uint64_t v19 = v18;
    swift_bridgeObjectRelease();
    swift_unknownObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_2289155A0();
    os_log_type_t v21 = sub_228916030();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      uint64_t v30 = v28;
      *(_DWORD *)uint64_t v22 = 136381187;
      swift_getObjectType();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26826A6D0);
      uint64_t v23 = sub_228915CC0();
      sub_2288AB2C4(v23, v24, &v30);
      sub_2289161F0();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2081;
      swift_bridgeObjectRetain();
      uint64_t v25 = MEMORY[0x22A69FD50](v14, v16, v29, v19);
      unint64_t v27 = v26;
      swift_bridgeObjectRelease();
      sub_2288AB2C4(v25, v27, &v30);
      sub_2289161F0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 22) = 2081;
      swift_bridgeObjectRetain();
      sub_2288AB2C4(a2, a3, &v30);
      sub_2289161F0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_228806000, v20, v21, "(o)%{private}s-%{private}s.%{private}s", (uint8_t *)v22, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x22A6A1090](v28, -1, -1);
      MEMORY[0x22A6A1090](v22, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_unknownObjectRelease_n();
    }
  }
}

void *LayoutBundleManager.__allocating_init()()
{
  uint64_t v0 = (void *)swift_allocObject();
  id v1 = objc_msgSend(self, sel_defaultManager);
  v0[3] = 0;
  v0[4] = 0;
  v0[2] = v1;
  return v0;
}

void *LayoutBundleManager.init()()
{
  id v1 = objc_msgSend(self, sel_defaultManager);
  v0[3] = 0;
  v0[4] = 0;
  v0[2] = v1;
  return v0;
}

uint64_t sub_2288C65FC(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268268D68);
  v3[6] = swift_task_alloc();
  uint64_t v4 = sub_2289151B0();
  v3[7] = v4;
  v3[8] = *(void *)(v4 - 8);
  v3[9] = swift_task_alloc();
  v3[10] = swift_task_alloc();
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2288C67AC);
}

uint64_t sub_2288C67AC()
{
  if (qword_268267F38 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[18];
  uint64_t v2 = __swift_project_value_buffer(v0[16], (uint64_t)qword_268283E10);
  sub_22880AB38(v2, v1);
  uint64_t v3 = sub_2289155C0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  int v6 = v5(v1, 1, v3);
  uint64_t v7 = v0[18];
  if (v6 == 1)
  {
    sub_2288110C0(v0[18], (uint64_t *)&unk_2682684D0);
  }
  else
  {
    sub_2288C61B4(v0[5], 0x286C6C6174736E69, 0xEE00293A6D6F7266, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  uint64_t v8 = v0[7];
  uint64_t v9 = v0[8];
  uint64_t v10 = v0[6];
  sub_228915190();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v10, 1, v8) == 1)
  {
    uint64_t v11 = v0[17];
    sub_2288110C0(v0[6], &qword_268268D68);
    sub_22880AB38(v2, v11);
    if (v5(v11, 1, v3) == 1)
    {
      sub_2288110C0(v0[17], (uint64_t *)&unk_2682684D0);
    }
    else
    {
      uint64_t v28 = sub_2289155A0();
      os_log_type_t v29 = sub_228916050();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v30 = 0;
        _os_log_impl(&dword_228806000, v28, v29, "install - unable to install layout bundle", v30, 2u);
        MEMORY[0x22A6A1090](v30, -1, -1);
      }
      uint64_t v31 = v0[17];

      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v31, v3);
    }
    sub_228854518();
    swift_allocError();
    *os_log_type_t v32 = 1;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    objc_super v33 = (uint64_t (*)(void))v0[1];
    return v33();
  }
  else
  {
    uint64_t v13 = v0[12];
    uint64_t v12 = v0[13];
    uint64_t v14 = v0[11];
    uint64_t v15 = v0[8];
    uint64_t v16 = v0[7];
    uint64_t v17 = v0[5];
    (*(void (**)(void, void, uint64_t))(v15 + 32))(v0[15], v0[6], v16);
    id v34 = *(id *)(v17 + 16);
    v0[19] = v34;
    id v18 = objc_msgSend(v34, sel_temporaryDirectory);
    sub_228915170();

    sub_228915150();
    uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    v0[20] = v19;
    v0[21] = (v15 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v19(v14, v16);
    sub_228915150();
    v19(v13, v16);
    sub_228915120();
    sub_228915150();
    swift_bridgeObjectRelease();
    v19(v12, v16);
    id v20 = objc_msgSend(v34, sel_temporaryDirectory);
    sub_228915170();

    sub_228915150();
    v19(v14, v16);
    sub_228915150();
    v19(v13, v16);
    sub_228915140();
    sub_228915120();
    v19(v13, v16);
    sub_228915150();
    swift_bridgeObjectRelease();
    v19(v12, v16);
    os_log_type_t v21 = (void *)sub_228915180();
    sub_2288C7614(v21, v22);
    swift_bridgeObjectRelease();
    id v23 = objc_msgSend(v34, sel_temporaryDirectory);
    sub_228915170();

    sub_228915150();
    v19(v13, v16);
    sub_228915150();
    v19(v12, v16);
    unint64_t v24 = (void *)swift_task_alloc();
    v0[22] = v24;
    *unint64_t v24 = v0;
    v24[1] = sub_2288C6E80;
    uint64_t v25 = v0[15];
    uint64_t v26 = v0[9];
    return sub_2288C7B68(v25, v26);
  }
}

uint64_t sub_2288C6E80()
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*(void *)v1 + 160);
  uint64_t v3 = *(void *)(*(void *)v1 + 72);
  uint64_t v4 = *(void *)(*(void *)v1 + 56);
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0) {
    uint64_t v5 = sub_2288C732C;
  }
  else {
    uint64_t v5 = sub_2288C702C;
  }
  return MEMORY[0x270FA2498](v5);
}

uint64_t sub_2288C702C()
{
  uint64_t v1 = v0[23];
  sub_2288C9F7C(v0[14], v0[10]);
  if (v1)
  {
    uint64_t v2 = (void (*)(uint64_t, uint64_t))v0[20];
    uint64_t v3 = v0[14];
    uint64_t v4 = v0[15];
    uint64_t v5 = v0[7];
    v2(v0[10], v5);
    v2(v3, v5);
    v2(v4, v5);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    int v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
  else
  {
    uint64_t v8 = (void *)v0[19];
    sub_228915180();
    uint64_t v9 = (void *)sub_228915C40();
    swift_bridgeObjectRelease();
    v0[2] = 0;
    LODWORD(v8) = objc_msgSend(v8, sel_removeItemAtPath_error_, v9, v0 + 2);

    uint64_t v10 = (void *)v0[2];
    if (v8)
    {
      id v11 = v10;
    }
    else
    {
      id v12 = v10;
      uint64_t v13 = (void *)sub_2289150A0();

      swift_willThrow();
    }
    uint64_t v14 = (void (*)(uint64_t, uint64_t))v0[20];
    uint64_t v16 = v0[14];
    uint64_t v15 = v0[15];
    uint64_t v17 = v0[10];
    uint64_t v18 = v0[7];
    uint64_t v19 = v0[5];
    *(void *)(v19 + 24) = sub_228915180();
    *(void *)(v19 + 32) = v20;
    swift_bridgeObjectRelease();
    uint64_t v21 = sub_228915180();
    uint64_t v24 = v22;
    v14(v17, v18);
    v14(v16, v18);
    v14(v15, v18);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v23 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
    return v23(v21, v24);
  }
}

uint64_t sub_2288C732C()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[20];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[7];
  v1(v0[10], v4);
  v1(v2, v4);
  v1(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_2288C7470()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_268267F38 != -1) {
    swift_once();
  }
  uint64_t v5 = __swift_project_value_buffer(v2, (uint64_t)qword_268283E10);
  sub_22880AB38(v5, (uint64_t)v4);
  uint64_t v6 = sub_2289155C0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_2288110C0((uint64_t)v4, (uint64_t *)&unk_2682684D0);
  }
  else
  {
    sub_2288C61B4(v1, 0x292865766F6D6572, 0xE800000000000000, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  uint64_t v8 = *(void **)(v1 + 24);
  uint64_t v9 = *(void **)(v1 + 32);
  swift_bridgeObjectRetain();
  sub_2288C7614(v8, v9);
  swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = 0;
  *(void *)(v1 + 32) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_2288C7614(void *a1, void *a2)
{
  v42[2] = *(id *)MEMORY[0x263EF8340];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  uint64_t result = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v9 = *(void **)(v2 + 16);
    swift_bridgeObjectRetain();
    uint64_t v10 = (void *)sub_228915C40();
    unsigned int v11 = objc_msgSend(v9, sel_fileExistsAtPath_, v10);

    if (v11)
    {
      id v12 = (void *)sub_228915C40();
      v42[0] = 0;
      id v13 = objc_msgSend(v9, sel_contentsOfDirectoryAtPath_error_, v12, v42);

      id v14 = v42[0];
      if (v13)
      {
        uint64_t v15 = sub_228915E90();
        id v16 = v14;

        uint64_t v17 = *(void *)(v15 + 16);
        if (v17)
        {
          id v39 = (uint8_t *)v5;
          id v40 = v8;
          uint64_t v38 = v15;
          uint64_t v18 = v15 + 40;
          for (uint64_t i = v17 - 1; ; --i)
          {
            v42[0] = a1;
            v42[1] = a2;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_228915D60();
            swift_bridgeObjectRetain();
            sub_228915D60();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v20 = (void *)sub_228915C40();
            swift_bridgeObjectRelease();
            v42[0] = 0;
            unsigned int v21 = objc_msgSend(v9, sel_removeItemAtPath_error_, v20, v42, v38);

            if (!v21)
            {
              id v25 = v42[0];
              swift_bridgeObjectRelease();
              uint64_t v24 = (void *)sub_2289150A0();

              swift_willThrow();
              uint64_t v5 = (uint64_t)v39;
              uint64_t v8 = v40;
              goto LABEL_19;
            }
            if (!i) {
              break;
            }
            v18 += 16;
            id v22 = v42[0];
          }
          id v26 = v42[0];
          uint64_t v5 = (uint64_t)v39;
          uint64_t v8 = v40;
        }
        swift_bridgeObjectRelease();
        unint64_t v27 = (void *)sub_228915C40();
        v42[0] = 0;
        unsigned int v28 = objc_msgSend(v9, sel_removeItemAtPath_error_, v27, v42);

        if (v28)
        {
          id v29 = v42[0];
          return swift_bridgeObjectRelease();
        }
        id v30 = v42[0];
        uint64_t v24 = (void *)sub_2289150A0();
      }
      else
      {
        id v23 = v42[0];
        uint64_t v24 = (void *)sub_2289150A0();
      }
      swift_willThrow();
LABEL_19:
      if (qword_268267F38 != -1) {
        swift_once();
      }
      uint64_t v31 = __swift_project_value_buffer(v5, (uint64_t)qword_268283E10);
      sub_22880AB38(v31, (uint64_t)v8);
      uint64_t v32 = sub_2289155C0();
      uint64_t v33 = *(void *)(v32 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v8, 1, v32) == 1)
      {

        swift_bridgeObjectRelease();
        return sub_2288110C0((uint64_t)v8, (uint64_t *)&unk_2682684D0);
      }
      else
      {
        swift_bridgeObjectRetain();
        id v34 = sub_2289155A0();
        os_log_type_t v35 = sub_228916050();
        if (os_log_type_enabled(v34, v35))
        {
          unint64_t v36 = (uint8_t *)swift_slowAlloc();
          id v40 = (char *)swift_slowAlloc();
          v42[0] = v40;
          *(_DWORD *)unint64_t v36 = 136315138;
          id v39 = v36 + 4;
          swift_bridgeObjectRetain();
          uint64_t v41 = sub_2288AB2C4((uint64_t)a1, (unint64_t)a2, (uint64_t *)v42);
          sub_2289161F0();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_228806000, v34, v35, "removeBundle - unable to remove the bundle folder %s", v36, 0xCu);
          char v37 = v40;
          swift_arrayDestroy();
          MEMORY[0x22A6A1090](v37, -1, -1);
          MEMORY[0x22A6A1090](v36, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }

        return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v8, v32);
      }
    }
    else
    {
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_2288C7B68(uint64_t a1, uint64_t a2)
{
  v3[10] = a2;
  v3[11] = v2;
  v3[9] = a1;
  uint64_t v4 = sub_228914E00();
  v3[12] = v4;
  v3[13] = *(void *)(v4 - 8);
  v3[14] = swift_task_alloc();
  v3[15] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  uint64_t v5 = sub_2289151B0();
  v3[22] = v5;
  v3[23] = *(void *)(v5 - 8);
  v3[24] = swift_task_alloc();
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  v3[27] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2288C7D50);
}

uint64_t sub_2288C7D50()
{
  uint64_t v63 = v0;
  v62[1] = *MEMORY[0x263EF8340];
  sub_228915120();
  sub_228915150();
  swift_bridgeObjectRelease();
  if (qword_268267F38 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[21];
  uint64_t v2 = __swift_project_value_buffer(v0[15], (uint64_t)qword_268283E10);
  v0[28] = v2;
  sub_22880AB38(v2, v1);
  uint64_t v3 = sub_2289155C0();
  v0[29] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v0[30] = v4;
  uint64_t v5 = *(unsigned int (**)(void, void, void))(v4 + 48);
  v0[31] = v5;
  v0[32] = (v4 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  uint64_t v60 = v2;
  v61 = v5;
  if (v5(v1, 1, v3) == 1)
  {
    sub_2288110C0(v0[21], (uint64_t *)&unk_2682684D0);
  }
  else
  {
    (*(void (**)(void, void, void))(v0[23] + 16))(v0[26], v0[9], v0[22]);
    uint64_t v6 = sub_2289155A0();
    os_log_type_t v7 = sub_228916070();
    BOOL v8 = os_log_type_enabled(v6, v7);
    uint64_t v9 = v0[26];
    uint64_t v10 = v0[23];
    uint64_t v58 = v0[22];
    if (v8)
    {
      unsigned int v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      v62[0] = v12;
      *(_DWORD *)unsigned int v11 = 136315138;
      uint64_t v13 = sub_228915100();
      v0[8] = sub_2288AB2C4(v13, v14, v62);
      sub_2289161F0();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v58);
      _os_log_impl(&dword_228806000, v6, v7, "downloadFile - remoteFileURL:      %s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22A6A1090](v12, -1, -1);
      uint64_t v15 = v11;
      uint64_t v2 = v60;
      MEMORY[0x22A6A1090](v15, -1, -1);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v58);
    }
    (*(void (**)(void, uint64_t))(v4 + 8))(v0[21], v3);
    uint64_t v5 = v61;
  }
  uint64_t v16 = v0[20];
  sub_22880AB38(v2, v16);
  if (v5(v16, 1, v3) == 1)
  {
    sub_2288110C0(v0[20], (uint64_t *)&unk_2682684D0);
  }
  else
  {
    (*(void (**)(void, void, void))(v0[23] + 16))(v0[25], v0[27], v0[22]);
    uint64_t v17 = sub_2289155A0();
    os_log_type_t v18 = sub_228916070();
    BOOL v19 = os_log_type_enabled(v17, v18);
    uint64_t v20 = v0[25];
    uint64_t v21 = v0[22];
    uint64_t v22 = v0[23];
    if (v19)
    {
      uint64_t v57 = v3;
      id v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v59 = swift_slowAlloc();
      v62[0] = v59;
      *(_DWORD *)id v23 = 136315138;
      uint64_t v24 = sub_228915100();
      v0[7] = sub_2288AB2C4(v24, v25, v62);
      sub_2289161F0();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
      _os_log_impl(&dword_228806000, v17, v18, "               destinationFileURL: %s", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22A6A1090](v59, -1, -1);
      id v26 = v23;
      uint64_t v3 = v57;
      MEMORY[0x22A6A1090](v26, -1, -1);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
    }
    (*(void (**)(void, uint64_t))(v4 + 8))(v0[20], v3);
    uint64_t v5 = v61;
  }
  unint64_t v27 = *(void **)(v0[11] + 16);
  sub_228915180();
  unsigned int v28 = (void *)sub_228915C40();
  swift_bridgeObjectRelease();
  unsigned __int8 v29 = objc_msgSend(v27, sel_fileExistsAtPath_, v28);

  if ((v29 & 1) == 0)
  {
    sub_228915180();
    id v44 = (void *)sub_228915C40();
    swift_bridgeObjectRelease();
    v0[5] = 0;
    unsigned __int8 v45 = objc_msgSend(v27, sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_, v44, 1, 0, v0 + 5);

    id v34 = (void *)v0[5];
    if ((v45 & 1) == 0)
    {
      uint64_t v50 = v0[18];
      id v51 = v34;
      char v37 = (void *)sub_2289150A0();

      swift_willThrow();
      sub_22880AB38(v60, v50);
      unsigned int v52 = v5(v50, 1, v3);
      uint64_t v39 = v0[18];
      if (v52 != 1)
      {
        id v40 = sub_2289155A0();
        os_log_type_t v53 = sub_228916050();
        if (os_log_type_enabled(v40, v53))
        {
          unint64_t v54 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v54 = 0;
          _os_log_impl(&dword_228806000, v40, v53, "downloadFile - unable to create folder", v54, 2u);
          MEMORY[0x22A6A1090](v54, -1, -1);
        }
        uint64_t v43 = v0[18];
        goto LABEL_32;
      }
LABEL_28:
      sub_2288110C0(v39, (uint64_t *)&unk_2682684D0);
LABEL_33:
      sub_228854518();
      swift_allocError();
      *char v55 = 6;
      swift_willThrow();

      (*(void (**)(void, void))(v0[23] + 8))(v0[27], v0[22]);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v56 = (uint64_t (*)(void))v0[1];
      return v56();
    }
    goto LABEL_23;
  }
  sub_228915180();
  id v30 = (void *)sub_228915C40();
  swift_bridgeObjectRelease();
  unsigned int v31 = objc_msgSend(v27, sel_fileExistsAtPath_, v30);

  if (v31)
  {
    sub_228915180();
    uint64_t v32 = (void *)sub_228915C40();
    swift_bridgeObjectRelease();
    v0[6] = 0;
    unsigned int v33 = objc_msgSend(v27, sel_removeItemAtPath_error_, v32, v0 + 6);

    id v34 = (void *)v0[6];
    if (!v33)
    {
      uint64_t v35 = v0[17];
      id v36 = v34;
      char v37 = (void *)sub_2289150A0();

      swift_willThrow();
      sub_22880AB38(v60, v35);
      unsigned int v38 = v5(v35, 1, v3);
      uint64_t v39 = v0[17];
      if (v38 != 1)
      {
        id v40 = sub_2289155A0();
        os_log_type_t v41 = sub_228916050();
        if (os_log_type_enabled(v40, v41))
        {
          char v42 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)char v42 = 0;
          _os_log_impl(&dword_228806000, v40, v41, "downloadFile - unable to delete former file", v42, 2u);
          MEMORY[0x22A6A1090](v42, -1, -1);
        }
        uint64_t v43 = v0[17];
LABEL_32:

        (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v43, v3);
        goto LABEL_33;
      }
      goto LABEL_28;
    }
LABEL_23:
    id v46 = v34;
  }
  (*(void (**)(void, void, void))(v0[23] + 16))(v0[24], v0[9], v0[22]);
  sub_228914DE0();
  objc_super v47 = (void *)swift_task_alloc();
  v0[33] = v47;
  void *v47 = v0;
  v47[1] = sub_2288C86F0;
  uint64_t v48 = v0[14];
  return sub_2288C8D74((uint64_t)(v0 + 2), v48);
}

uint64_t sub_2288C86F0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 112);
  uint64_t v2 = *(void *)(*(void *)v0 + 104);
  uint64_t v3 = *(void *)(*(void *)v0 + 96);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return MEMORY[0x270FA2498](sub_2288C8874);
}

uint64_t sub_2288C8874()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (*(unsigned char *)(v0 + 32))
  {
    uint64_t v2 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 248);
    uint64_t v3 = *(void *)(v0 + 232);
    uint64_t v4 = *(void *)(v0 + 152);
    sub_22880AB38(*(void *)(v0 + 224), v4);
    if (v2(v4, 1, v3) == 1)
    {
      sub_2288110C0(*(void *)(v0 + 152), (uint64_t *)&unk_2682684D0);
    }
    else
    {
      uint64_t v6 = sub_2289155A0();
      os_log_type_t v7 = sub_228916050();
      if (os_log_type_enabled(v6, v7))
      {
        BOOL v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)BOOL v8 = 0;
        _os_log_impl(&dword_228806000, v6, v7, "downloadFile - unable to download file", v8, 2u);
        MEMORY[0x22A6A1090](v8, -1, -1);
      }
      uint64_t v9 = *(void *)(v0 + 232);
      uint64_t v10 = *(void *)(v0 + 240);
      uint64_t v11 = *(void *)(v0 + 152);

      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v9);
    }
    sub_228854518();
    swift_allocError();
    *uint64_t v12 = v1;
    swift_willThrow();
    (*(void (**)(void, void))(*(void *)(v0 + 184) + 8))(*(void *)(v0 + 216), *(void *)(v0 + 176));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    unint64_t v5 = *(void *)(v0 + 24);
    sub_22880ACB8(*(void *)(v0 + 16), v5);
    sub_228915280();
    uint64_t v13 = *(void *)(v0 + 216);
    uint64_t v15 = *(void *)(v0 + 176);
    uint64_t v14 = *(void *)(v0 + 184);
    sub_2288CA90C(v1, v5, 0);
    sub_2288CA90C(v1, v5, 0);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v16();
}

void sub_2288C8D00()
{
  id v0 = objc_msgSend(self, sel_ephemeralSessionConfiguration);
  id v1 = objc_msgSend(self, sel_sessionWithConfiguration_, v0);

  qword_268283E30 = (uint64_t)v1;
}

uint64_t sub_2288C8D74(uint64_t a1, uint64_t a2)
{
  v2[8] = a1;
  v2[9] = a2;
  uint64_t v3 = sub_2289154E0();
  v2[10] = v3;
  v2[11] = *(void *)(v3 - 8);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26826A6F8);
  v2[14] = swift_task_alloc();
  uint64_t v4 = sub_228915500();
  v2[15] = v4;
  v2[16] = *(void *)(v4 - 8);
  v2[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268268D68);
  v2[18] = swift_task_alloc();
  uint64_t v5 = sub_228914E00();
  v2[19] = v5;
  v2[20] = *(void *)(v5 - 8);
  v2[21] = swift_task_alloc();
  v2[22] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  v2[26] = swift_task_alloc();
  v2[27] = swift_task_alloc();
  v2[28] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2288C8FD0);
}

uint64_t sub_2288C8FD0()
{
  uint64_t v32 = v0;
  if (qword_268267F38 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[28];
  uint64_t v2 = __swift_project_value_buffer(v0[22], (uint64_t)qword_268283E10);
  v0[29] = v2;
  sub_22880AB38(v2, v1);
  uint64_t v3 = sub_2289155C0();
  v0[30] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v0[31] = v4;
  uint64_t v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  v0[32] = v5;
  v0[33] = (v4 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v5(v1, 1, v3) == 1)
  {
    sub_2288110C0(v0[28], (uint64_t *)&unk_2682684D0);
  }
  else
  {
    (*(void (**)(void, void, void))(v0[20] + 16))(v0[21], v0[9], v0[19]);
    uint64_t v6 = sub_2289155A0();
    os_log_type_t v7 = sub_228916070();
    BOOL v8 = os_log_type_enabled(v6, v7);
    uint64_t v9 = v0[21];
    if (v8)
    {
      os_log_type_t v29 = v7;
      uint64_t v10 = v0[18];
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      uint64_t v31 = v28;
      *(_DWORD *)uint64_t v11 = 136315138;
      sub_228914DF0();
      uint64_t v12 = sub_2289151B0();
      uint64_t v13 = *(void *)(v12 - 8);
      int v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12);
      uint64_t v15 = v0[18];
      log = v6;
      if (v14 == 1)
      {
        sub_2288110C0(v15, &qword_268268D68);
        unint64_t v16 = 0xE800000000000000;
        uint64_t v17 = 0x3E6C7275206F6E3CLL;
      }
      else
      {
        uint64_t v17 = sub_228915100();
        unint64_t v16 = v20;
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v12);
      }
      uint64_t v22 = v0[20];
      uint64_t v21 = v0[21];
      uint64_t v23 = v0[19];
      v0[7] = sub_2288AB2C4(v17, v16, &v31);
      sub_2289161F0();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
      _os_log_impl(&dword_228806000, log, v29, "Request: %s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22A6A1090](v28, -1, -1);
      MEMORY[0x22A6A1090](v11, -1, -1);
    }
    else
    {
      uint64_t v18 = v0[19];
      uint64_t v19 = v0[20];

      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v9, v18);
    }
    (*(void (**)(void, uint64_t))(v4 + 8))(v0[28], v3);
  }
  if (qword_268267F48 != -1) {
    swift_once();
  }
  uint64_t v24 = (void *)qword_268283E30;
  v0[34] = qword_268283E30;
  v24;
  unint64_t v25 = (void *)swift_task_alloc();
  v0[35] = v25;
  *unint64_t v25 = v0;
  v25[1] = sub_2288C93EC;
  uint64_t v26 = v0[9];
  return MEMORY[0x270EF1EB0](v26, 0);
}

uint64_t sub_2288C93EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *v4;
  *(void *)(v5 + 288) = a1;
  *(void *)(v5 + 296) = a2;
  *(void *)(v5 + 304) = a3;
  *(void *)(v5 + 312) = v3;
  swift_task_dealloc();
  if (v3)
  {
    uint64_t v6 = sub_2288C98EC;
  }
  else
  {

    uint64_t v6 = sub_2288C950C;
  }
  return MEMORY[0x270FA2498](v6);
}

uint64_t sub_2288C950C()
{
  self;
  uint64_t v1 = swift_dynamicCastObjCClass();
  if (v1)
  {
    uint64_t v2 = (void *)v1;
    id v3 = *(id *)(v0 + 304);
    if ((char *)objc_msgSend(v2, sel_statusCode) - 300 >= (char *)0xFFFFFFFFFFFFFF9CLL)
    {
      uint64_t v17 = *(void **)(v0 + 304);

      char v18 = 0;
      long long v19 = *(_OWORD *)(v0 + 288);
      goto LABEL_17;
    }
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 256);
    uint64_t v5 = *(void *)(v0 + 240);
    uint64_t v6 = *(void *)(v0 + 208);
    sub_22880AB38(*(void *)(v0 + 232), v6);
    int v7 = v4(v6, 1, v5);
    uint64_t v8 = *(void **)(v0 + 304);
    if (v7 != 1)
    {
      id v28 = v8;
      os_log_type_t v29 = sub_2289155A0();
      os_log_type_t v30 = sub_228916050();
      BOOL v31 = os_log_type_enabled(v29, v30);
      unint64_t v33 = *(void *)(v0 + 296);
      uint64_t v32 = *(void **)(v0 + 304);
      uint64_t v34 = *(void *)(v0 + 288);
      if (v31)
      {
        unint64_t v43 = *(void *)(v0 + 296);
        uint64_t v35 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v35 = 134217984;
        *(void *)(v0 + 48) = objc_msgSend(v2, sel_statusCode);
        sub_2289161F0();

        _os_log_impl(&dword_228806000, v29, v30, "Execute download file - serverError - Invalid status from server: %ld", v35, 0xCu);
        MEMORY[0x22A6A1090](v35, -1, -1);

        sub_22880BB80(v34, v43);
        id v36 = *(NSObject **)(v0 + 304);
      }
      else
      {

        sub_22880BB80(v34, v33);
        id v36 = *(NSObject **)(v0 + 304);
        os_log_type_t v29 = v36;
      }
      uint64_t v37 = *(void *)(v0 + 240);
      uint64_t v38 = *(void *)(v0 + 248);
      uint64_t v39 = *(void *)(v0 + 208);

      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v39, v37);
      goto LABEL_16;
    }
    uint64_t v9 = *(void *)(v0 + 288);
    unint64_t v10 = *(void *)(v0 + 296);
    uint64_t v11 = *(void *)(v0 + 208);

    sub_22880BB80(v9, v10);
  }
  else
  {
    uint64_t v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 256);
    uint64_t v13 = *(void *)(v0 + 240);
    uint64_t v14 = *(void *)(v0 + 216);
    sub_22880AB38(*(void *)(v0 + 232), v14);
    if (v12(v14, 1, v13) != 1)
    {
      unint64_t v20 = sub_2289155A0();
      os_log_type_t v21 = sub_228916050();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v22 = 0;
        _os_log_impl(&dword_228806000, v20, v21, "Execute download file - internalError - Channel failure, nil api service", v22, 2u);
        MEMORY[0x22A6A1090](v22, -1, -1);
      }
      unint64_t v23 = *(void *)(v0 + 296);
      uint64_t v24 = *(void *)(v0 + 288);
      uint64_t v25 = *(void *)(v0 + 240);
      uint64_t v26 = *(void *)(v0 + 248);
      uint64_t v27 = *(void *)(v0 + 216);

      sub_22880BB80(v24, v23);
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v27, v25);
      goto LABEL_16;
    }
    unint64_t v15 = *(void *)(v0 + 296);
    uint64_t v16 = *(void *)(v0 + 288);
    uint64_t v11 = *(void *)(v0 + 216);

    sub_22880BB80(v16, v15);
  }
  sub_2288110C0(v11, (uint64_t *)&unk_2682684D0);
LABEL_16:
  long long v19 = xmmword_2289218B0;
  char v18 = 1;
LABEL_17:
  uint64_t v40 = *(void *)(v0 + 64);
  *(_OWORD *)uint64_t v40 = v19;
  *(unsigned char *)(v40 + 16) = v18;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v41 = *(uint64_t (**)(void))(v0 + 8);
  return v41();
}

uint64_t sub_2288C98EC()
{
  uint64_t v1 = *(void **)(v0 + 312);
  uint64_t v2 = *(void *)(v0 + 128);

  *(void *)(v0 + 16) = v1;
  id v3 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268269118);
  char v4 = swift_dynamicCast();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
  if (v4)
  {
    uint64_t v6 = *(void *)(v0 + 128);
    uint64_t v7 = *(void *)(v0 + 136);
    uint64_t v9 = *(void *)(v0 + 112);
    uint64_t v8 = *(void *)(v0 + 120);
    uint64_t v11 = *(void *)(v0 + 96);
    uint64_t v10 = *(void *)(v0 + 104);
    uint64_t v12 = *(void *)(v0 + 80);
    uint64_t v13 = *(void *)(v0 + 88);
    v5(v9, 0, 1, v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v7, v9, v8);
    sub_2288CA918(&qword_26826A700, MEMORY[0x263F07A20]);
    sub_228915080();
    sub_2289154F0();
    sub_2288CA918(&qword_26826A708, MEMORY[0x263F07A00]);
    sub_228915E40();
    sub_228915E40();
    uint64_t v15 = *(void *)(v0 + 32);
    uint64_t v14 = *(void *)(v0 + 40);
    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v16(v11, v12);
    v16(v10, v12);
    if (v15 == v14)
    {
      uint64_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 256);
      uint64_t v18 = *(void *)(v0 + 240);
      uint64_t v19 = *(void *)(v0 + 200);
      sub_22880AB38(*(void *)(v0 + 232), v19);
      if (v17(v19, 1, v18) == 1)
      {
        unint64_t v20 = *(void **)(v0 + 312);
        uint64_t v21 = *(void *)(v0 + 200);
        (*(void (**)(void, void))(*(void *)(v0 + 128) + 8))(*(void *)(v0 + 136), *(void *)(v0 + 120));

        sub_2288110C0(v21, (uint64_t *)&unk_2682684D0);
        uint64_t v22 = 5;
      }
      else
      {
        unsigned int v52 = sub_2289155A0();
        os_log_type_t v53 = sub_228916050();
        BOOL v54 = os_log_type_enabled(v52, v53);
        char v55 = *(void **)(v0 + 312);
        if (v54)
        {
          uint64_t v56 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v56 = 0;
          _os_log_impl(&dword_228806000, v52, v53, "Execute download file - request cancelled", v56, 2u);
          MEMORY[0x22A6A1090](v56, -1, -1);
        }
        else
        {
        }
        uint64_t v57 = *(void *)(v0 + 240);
        uint64_t v58 = *(void *)(v0 + 248);
        uint64_t v59 = *(void *)(v0 + 200);
        (*(void (**)(void, void))(*(void *)(v0 + 128) + 8))(*(void *)(v0 + 136), *(void *)(v0 + 120));
        (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v59, v57);
        uint64_t v22 = 5;
      }
      goto LABEL_19;
    }
    (*(void (**)(void, void))(*(void *)(v0 + 128) + 8))(*(void *)(v0 + 136), *(void *)(v0 + 120));
  }
  else
  {
    uint64_t v23 = *(void *)(v0 + 112);
    v5(v23, 1, 1, *(void *)(v0 + 120));
    sub_2288110C0(v23, &qword_26826A6F8);
  }
  uint64_t v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 256);
  uint64_t v25 = *(void *)(v0 + 240);
  uint64_t v26 = *(void *)(v0 + 192);
  sub_22880AB38(*(void *)(v0 + 232), v26);
  if (v24(v26, 1, v25) == 1)
  {
    sub_2288110C0(*(void *)(v0 + 192), (uint64_t *)&unk_2682684D0);
  }
  else
  {
    uint64_t v27 = sub_2289155A0();
    os_log_type_t v28 = sub_228916050();
    if (os_log_type_enabled(v27, v28))
    {
      os_log_type_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v29 = 0;
      _os_log_impl(&dword_228806000, v27, v28, "Execute download file - networkError - Server not reachable", v29, 2u);
      MEMORY[0x22A6A1090](v29, -1, -1);
    }
    uint64_t v31 = *(void *)(v0 + 240);
    uint64_t v30 = *(void *)(v0 + 248);
    uint64_t v32 = *(void *)(v0 + 192);

    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v32, v31);
  }
  unint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 256);
  uint64_t v34 = *(void *)(v0 + 240);
  uint64_t v35 = *(void *)(v0 + 184);
  sub_22880AB38(*(void *)(v0 + 232), v35);
  int v36 = v33(v35, 1, v34);
  uint64_t v37 = *(void **)(v0 + 312);
  uint64_t v38 = *(void *)(v0 + 184);
  if (v36 == 1)
  {

    sub_2288110C0(v38, (uint64_t *)&unk_2682684D0);
  }
  else
  {
    id v39 = v37;
    id v40 = v37;
    os_log_type_t v41 = sub_2289155A0();
    os_log_type_t v42 = sub_228916050();
    BOOL v43 = os_log_type_enabled(v41, v42);
    uint64_t v44 = *(void **)(v0 + 312);
    if (v43)
    {
      unsigned __int8 v45 = (uint8_t *)swift_slowAlloc();
      id v46 = (void *)swift_slowAlloc();
      *(_DWORD *)unsigned __int8 v45 = 138412290;
      id v47 = v44;
      uint64_t v48 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 24) = v48;
      sub_2289161F0();
      *id v46 = v48;

      _os_log_impl(&dword_228806000, v41, v42, "Error processing request: %@", v45, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_268269A10);
      swift_arrayDestroy();
      MEMORY[0x22A6A1090](v46, -1, -1);
      MEMORY[0x22A6A1090](v45, -1, -1);
    }
    else
    {
    }
    (*(void (**)(void, void))(*(void *)(v0 + 248) + 8))(*(void *)(v0 + 184), *(void *)(v0 + 240));
  }
  uint64_t v22 = 3;
LABEL_19:
  uint64_t v49 = *(void *)(v0 + 64);
  *(void *)uint64_t v49 = v22;
  *(void *)(v49 + 8) = 0;
  *(unsigned char *)(v49 + 16) = 1;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v50 = *(uint64_t (**)(void))(v0 + 8);
  return v50();
}

void sub_2288C9F7C(uint64_t a1, uint64_t a2)
{
  v71[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v4 = sub_2289151B0();
  uint64_t v5 = *(uint8_t **)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v66 = (char *)v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v57 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v10);
  uint64_t v63 = (uint64_t)v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v57 - v13;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)v57 - v16;
  if (qword_268267F38 != -1) {
    swift_once();
  }
  uint64_t v18 = __swift_project_value_buffer(v10, (uint64_t)qword_268283E10);
  sub_22880AB38(v18, (uint64_t)v17);
  uint64_t v19 = sub_2289155C0();
  uint64_t v67 = *(void *)(v19 - 8);
  uint64_t v68 = v19;
  uint64_t v69 = *(uint64_t (**)(char *, uint64_t))(v67 + 48);
  int v20 = v69(v17, 1);
  uint64_t v64 = a2;
  uint64_t v65 = a1;
  uint64_t v62 = v18;
  if (v20 == 1)
  {
    sub_2288110C0((uint64_t)v17, (uint64_t *)&unk_2682684D0);
    uint64_t v21 = v68;
  }
  else
  {
    (*((void (**)(char *, uint64_t, uint64_t))v5 + 2))(v9, a1, v4);
    uint64_t v59 = v5;
    uint64_t v22 = sub_2289155A0();
    os_log_type_t v23 = sub_228916070();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v60 = v4;
      uint64_t v25 = (uint8_t *)v24;
      uint64_t v58 = (void *)swift_slowAlloc();
      v71[0] = v58;
      *(_DWORD *)uint64_t v25 = 136315138;
      v57[1] = v25 + 4;
      uint64_t v26 = sub_228915180();
      uint64_t v70 = sub_2288AB2C4(v26, v27, (uint64_t *)v71);
      uint64_t v18 = v62;
      sub_2289161F0();
      swift_bridgeObjectRelease();
      uint64_t v5 = v59;
      (*((void (**)(char *, uint64_t))v59 + 1))(v9, v60);
      _os_log_impl(&dword_228806000, v22, v23, "unzipping file %s", v25, 0xCu);
      os_log_type_t v28 = v58;
      swift_arrayDestroy();
      MEMORY[0x22A6A1090](v28, -1, -1);
      os_log_type_t v29 = v25;
      uint64_t v4 = v60;
      MEMORY[0x22A6A1090](v29, -1, -1);
    }
    else
    {

      uint64_t v5 = v59;
      (*((void (**)(char *, uint64_t))v59 + 1))(v9, v4);
    }
    uint64_t v21 = v68;
    (*(void (**)(char *, uint64_t))(v67 + 8))(v17, v68);
    a2 = v64;
  }
  sub_22880AB38(v18, (uint64_t)v14);
  int v30 = ((uint64_t (*)(char *, uint64_t, uint64_t))v69)(v14, 1, v21);
  uint64_t v31 = v66;
  if (v30 == 1)
  {
    sub_2288110C0((uint64_t)v14, (uint64_t *)&unk_2682684D0);
  }
  else
  {
    (*((void (**)(char *, uint64_t, uint64_t))v5 + 2))(v66, a2, v4);
    uint64_t v32 = v5;
    unint64_t v33 = v31;
    uint64_t v34 = sub_2289155A0();
    os_log_type_t v35 = sub_228916070();
    if (os_log_type_enabled(v34, v35))
    {
      int v36 = (uint8_t *)swift_slowAlloc();
      uint64_t v37 = (void *)swift_slowAlloc();
      uint64_t v60 = v4;
      uint64_t v38 = v37;
      v71[0] = v37;
      *(_DWORD *)int v36 = 136315138;
      uint64_t v59 = v36 + 4;
      uint64_t v39 = sub_228915180();
      uint64_t v70 = sub_2288AB2C4(v39, v40, (uint64_t *)v71);
      uint64_t v21 = v68;
      sub_2289161F0();
      swift_bridgeObjectRelease();
      (*((void (**)(char *, uint64_t))v32 + 1))(v66, v60);
      _os_log_impl(&dword_228806000, v34, v35, "     to folder %s", v36, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22A6A1090](v38, -1, -1);
      MEMORY[0x22A6A1090](v36, -1, -1);
    }
    else
    {

      (*((void (**)(char *, uint64_t))v32 + 1))(v33, v4);
    }
    (*(void (**)(char *, uint64_t))(v67 + 8))(v14, v21);
  }
  os_log_type_t v41 = (NSURL *)sub_228915130();
  os_log_type_t v42 = (NSURL *)sub_228915130();
  char v43 = PKUnarchiverZip(v41, v42);

  if ((v43 & 1) == 0)
  {
    uint64_t v44 = v63;
    sub_22880AB38(v62, v63);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v69)(v44, 1, v21) == 1)
    {
      sub_2288110C0(v44, (uint64_t *)&unk_2682684D0);
    }
    else
    {
      unsigned __int8 v45 = sub_2289155A0();
      os_log_type_t v46 = sub_228916040();
      if (os_log_type_enabled(v45, v46))
      {
        id v47 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v47 = 0;
        _os_log_impl(&dword_228806000, v45, v46, "unzip failure", v47, 2u);
        MEMORY[0x22A6A1090](v47, -1, -1);
      }

      (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v63, v21);
    }
    uint64_t v48 = (void *)sub_228915180();
    uint64_t v49 = v61;
    sub_2288C7614(v48, v50);
    swift_bridgeObjectRelease();
    id v51 = *(void **)(v49 + 16);
    sub_228915180();
    unsigned int v52 = (void *)sub_228915C40();
    swift_bridgeObjectRelease();
    v71[0] = 0;
    LODWORD(v49) = objc_msgSend(v51, sel_removeItemAtPath_error_, v52, v71);

    if (v49)
    {
      id v53 = v71[0];
    }
    else
    {
      id v54 = v71[0];
      char v55 = (void *)sub_2289150A0();

      swift_willThrow();
    }
    sub_228854518();
    swift_allocError();
    *uint64_t v56 = 6;
    swift_willThrow();
  }
}

uint64_t LayoutBundleManager.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t LayoutBundleManager.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LayoutBundleManager()
{
  return self;
}

uint64_t method lookup function for LayoutBundleManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for LayoutBundleManager);
}

uint64_t dispatch thunk of LayoutBundleManager.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of LayoutBundleManager.install(from:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 136) + **(int **)(*(void *)v2 + 136));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_22881C264;
  return v8(a1, a2);
}

uint64_t dispatch thunk of LayoutBundleManager.remove()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t sub_2288CA90C(uint64_t a1, unint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return sub_22880BB80(a1, a2);
  }
  return a1;
}

uint64_t sub_2288CA918(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t ReadErrorInternal.externalize.getter@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  switch(result)
  {
    case 0:
      *(void *)a2 = 0;
      *(void *)(a2 + 8) = 0;
      goto LABEL_29;
    case 1:
      long long v2 = xmmword_228921A00;
      goto LABEL_28;
    case 2:
      long long v2 = xmmword_22891F720;
      goto LABEL_28;
    case 3:
      long long v2 = xmmword_22891F6F0;
      goto LABEL_28;
    case 4:
      long long v2 = xmmword_2289219F0;
      goto LABEL_28;
    case 5:
      long long v2 = xmmword_2289219E0;
      goto LABEL_28;
    case 6:
      long long v2 = xmmword_2289218B0;
      goto LABEL_28;
    case 7:
      long long v2 = xmmword_2289219D0;
      goto LABEL_28;
    case 8:
      long long v2 = xmmword_2289219C0;
      goto LABEL_28;
    case 9:
      long long v2 = xmmword_22891F710;
      goto LABEL_28;
    case 10:
      long long v2 = xmmword_2289219B0;
      goto LABEL_28;
    case 11:
      long long v2 = xmmword_22891AC20;
      goto LABEL_28;
    case 12:
      long long v2 = xmmword_22891AC30;
      goto LABEL_28;
    case 15:
      long long v2 = xmmword_2289219A0;
      goto LABEL_28;
    case 17:
      long long v2 = xmmword_228921990;
      goto LABEL_28;
    case 18:
      long long v2 = xmmword_228921980;
      goto LABEL_28;
    case 19:
    case 20:
    case 21:
    case 22:
      long long v2 = xmmword_228921910;
      goto LABEL_28;
    case 23:
      *(void *)a2 = 0xD00000000000001FLL;
      *(void *)(a2 + 8) = 0x8000000228927D70;
      *(unsigned char *)(a2 + 16) = 0;
      return result;
    case 24:
      long long v2 = xmmword_228921970;
      goto LABEL_28;
    case 25:
    case 26:
      long long v2 = xmmword_228921950;
      goto LABEL_28;
    case 27:
      long long v2 = xmmword_22891F700;
      goto LABEL_28;
    case 28:
      long long v2 = xmmword_228921940;
      goto LABEL_28;
    case 29:
      long long v2 = xmmword_228921930;
      goto LABEL_28;
    case 30:
      long long v2 = xmmword_228921920;
      goto LABEL_28;
    case 31:
      long long v2 = xmmword_228921960;
      goto LABEL_28;
    default:
      long long v2 = xmmword_228921900;
LABEL_28:
      *(_OWORD *)a2 = v2;
LABEL_29:
      *(unsigned char *)(a2 + 16) = 2;
      return result;
  }
}

BOOL ReadErrorInternal.isPINError.getter(uint64_t a1)
{
  return (unint64_t)(a1 - 25) < 6;
}

unint64_t ReadErrorInternal.init(rawValue:)(unint64_t a1)
{
  return sub_2288CB300(a1);
}

unint64_t static ReadErrorInternal._nsErrorDomain.getter()
{
  return 0xD000000000000021;
}

uint64_t sub_2288CABC8()
{
  return sub_228916780();
}

uint64_t sub_2288CAC2C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_2288CB530();

  return MEMORY[0x270EEEA70](a1, a2, v4);
}

uint64_t sub_2288CAC78()
{
  return sub_228916780();
}

unint64_t sub_2288CACD8@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_2288CB300(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_2288CAD0C(uint64_t a1)
{
  unint64_t v2 = sub_2288CB530();

  return MEMORY[0x270EEEA80](a1, v2);
}

uint64_t sub_2288CAD48(uint64_t a1)
{
  unint64_t v2 = sub_2288CB530();

  return MEMORY[0x270EEEA78](a1, v2);
}

uint64_t sub_2288CAD84(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_2288CB530();

  return MEMORY[0x270EEEA68](a1, a2, v4);
}

unint64_t sub_2288CADD8()
{
  return 0xD000000000000021;
}

unint64_t ReadErrorInternal.description.getter(uint64_t a1)
{
  unint64_t result = 0x41746F4E64616572;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      unint64_t result = 0xD000000000000017;
      break;
    case 2:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0x7265646165526F6ELL;
      break;
    case 5:
      unint64_t result = 0xD000000000000014;
      break;
    case 6:
      unint64_t result = 0xD000000000000012;
      break;
    case 7:
      unint64_t result = 0xD000000000000019;
      break;
    case 8:
      unint64_t result = 0xD000000000000020;
      break;
    case 9:
      unint64_t result = 0xD000000000000011;
      break;
    case 10:
      unint64_t result = 0x636E614364616572;
      break;
    case 11:
      unint64_t result = 0x4164696C61766E69;
      break;
    case 12:
    case 21:
    case 23:
    case 31:
    case 33:
      unint64_t result = 0xD000000000000013;
      break;
    case 13:
      unint64_t result = 0xD000000000000010;
      break;
    case 14:
      unint64_t result = 0x656D695464616572;
      break;
    case 15:
      unint64_t result = 0x626173694463666ELL;
      break;
    case 16:
      unint64_t result = 0x6461655264726163;
      break;
    case 17:
      unint64_t result = 0xD000000000000018;
      break;
    case 18:
      unint64_t result = 0xD000000000000010;
      break;
    case 19:
      unint64_t result = 0x4664616552736176;
      break;
    case 20:
      unint64_t result = 0x4E61746144736176;
      break;
    case 22:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 24:
      unint64_t result = 0xD000000000000011;
      break;
    case 25:
      unint64_t result = 0x6E6F436F4E6E6970;
      break;
    case 26:
      unint64_t result = 0x7972746E456E6970;
      break;
    case 27:
      unint64_t result = 0x6E656B6F546E6970;
      break;
    case 28:
      unint64_t result = 0x7972746E456E6970;
      break;
    case 29:
      unint64_t result = 0x65636E61436E6970;
      break;
    case 30:
      unint64_t result = 0x6C41746F4E6E6970;
      break;
    case 32:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 34:
      unint64_t result = 0x7261655464726163;
      break;
    case 35:
      unint64_t result = 0x4164616552797274;
      break;
    case 36:
      unint64_t result = 0x5464726143736176;
      break;
    case 37:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      sub_228916690();
      __break(1u);
      JUMPOUT(0x2288CB260);
  }
  return result;
}

unint64_t sub_2288CB2F8()
{
  return ReadErrorInternal.description.getter(*v0);
}

unint64_t sub_2288CB300(unint64_t result)
{
  if (result > 0x25) {
    return 0;
  }
  return result;
}

unint64_t sub_2288CB314()
{
  unint64_t result = qword_26826A710;
  if (!qword_26826A710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A710);
  }
  return result;
}

unint64_t sub_2288CB36C()
{
  unint64_t result = qword_26826A718;
  if (!qword_26826A718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A718);
  }
  return result;
}

unint64_t sub_2288CB3C4()
{
  unint64_t result = qword_26826A720;
  if (!qword_26826A720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A720);
  }
  return result;
}

unint64_t sub_2288CB41C()
{
  unint64_t result = qword_26826A728;
  if (!qword_26826A728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A728);
  }
  return result;
}

unint64_t sub_2288CB474()
{
  unint64_t result = qword_26826A730;
  if (!qword_26826A730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A730);
  }
  return result;
}

unint64_t sub_2288CB4CC()
{
  unint64_t result = qword_26826A738;
  if (!qword_26826A738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A738);
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadErrorInternal()
{
  return &type metadata for ReadErrorInternal;
}

unint64_t sub_2288CB530()
{
  unint64_t result = qword_26826A740;
  if (!qword_26826A740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A740);
  }
  return result;
}

unint64_t DiscoveryErrorInternal.description.getter(uint64_t a1)
{
  unint64_t result = 0x4E746E65746E6F63;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0x6F70707553746F6ELL;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0x75426D6574737973;
      break;
    case 5:
      unint64_t result = 0x656C6C65636E6163;
      break;
    case 6:
      unint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      sub_228916690();
      __break(1u);
      JUMPOUT(0x2288CB6B0);
  }
  return result;
}

unint64_t DiscoveryErrorInternal.externalize.getter@<X0>(unint64_t result@<X0>, unsigned char *a2@<X8>)
{
  unint64_t v2 = 0x5050403020100uLL >> (8 * result);
  if (result >= 7) {
    LOBYTE(v2) = 5;
  }
  *a2 = v2;
  return result;
}

unint64_t DiscoveryErrorInternal.init(rawValue:)(unint64_t a1)
{
  return sub_2288CB8A4(a1);
}

unint64_t static DiscoveryErrorInternal._nsErrorDomain.getter()
{
  return 0xD000000000000026;
}

uint64_t sub_2288CB734(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_2288CBA28();

  return MEMORY[0x270EEEA70](a1, a2, v4);
}

unint64_t sub_2288CB780@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_2288CB8A4(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_2288CB7B4(uint64_t a1)
{
  unint64_t v2 = sub_2288CBA28();

  return MEMORY[0x270EEEA80](a1, v2);
}

uint64_t sub_2288CB7F0(uint64_t a1)
{
  unint64_t v2 = sub_2288CBA28();

  return MEMORY[0x270EEEA78](a1, v2);
}

uint64_t sub_2288CB82C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_2288CBA28();

  return MEMORY[0x270EEEA68](a1, a2, v4);
}

unint64_t sub_2288CB880()
{
  return 0xD000000000000026;
}

unint64_t sub_2288CB89C()
{
  return DiscoveryErrorInternal.description.getter(*v0);
}

unint64_t sub_2288CB8A4(unint64_t result)
{
  if (result > 6) {
    return 0;
  }
  return result;
}

unint64_t sub_2288CB8B8()
{
  unint64_t result = qword_26826A748;
  if (!qword_26826A748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A748);
  }
  return result;
}

unint64_t sub_2288CB914()
{
  unint64_t result = qword_26826A750;
  if (!qword_26826A750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A750);
  }
  return result;
}

unint64_t sub_2288CB96C()
{
  unint64_t result = qword_26826A758;
  if (!qword_26826A758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A758);
  }
  return result;
}

unint64_t sub_2288CB9C4()
{
  unint64_t result = qword_26826A760;
  if (!qword_26826A760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A760);
  }
  return result;
}

ValueMetadata *type metadata accessor for DiscoveryErrorInternal()
{
  return &type metadata for DiscoveryErrorInternal;
}

unint64_t sub_2288CBA28()
{
  unint64_t result = qword_26826A768;
  if (!qword_26826A768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A768);
  }
  return result;
}

uint64_t AccountAuth.partnerToken.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15ProximityReader11AccountAuth_partnerToken);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AccountAuth.relink.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ProximityReader11AccountAuth_relink);
}

uint64_t AccountAuth.gsToken.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15ProximityReader11AccountAuth_gsToken);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AccountAuth.altDsId.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15ProximityReader11AccountAuth_altDsId);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AccountAuth.deviceLocale.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15ProximityReader11AccountAuth_deviceLocale);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static AccountAuth.supportsSecureCoding.getter()
{
  return 1;
}

id AccountAuth.__allocating_init(partnerToken:relink:gsToken:altDsId:deviceLocale:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v18 = objc_allocWithZone(v9);
  uint64_t v19 = &v18[OBJC_IVAR____TtC15ProximityReader11AccountAuth_partnerToken];
  void *v19 = a1;
  v19[1] = a2;
  v18[OBJC_IVAR____TtC15ProximityReader11AccountAuth_relink] = a3;
  int v20 = &v18[OBJC_IVAR____TtC15ProximityReader11AccountAuth_gsToken];
  *int v20 = a4;
  v20[1] = a5;
  uint64_t v21 = &v18[OBJC_IVAR____TtC15ProximityReader11AccountAuth_altDsId];
  void *v21 = a6;
  v21[1] = a7;
  uint64_t v22 = &v18[OBJC_IVAR____TtC15ProximityReader11AccountAuth_deviceLocale];
  void *v22 = a8;
  v22[1] = a9;
  v24.receiver = v18;
  v24.super_class = v9;
  return objc_msgSendSuper2(&v24, sel_init);
}

id AccountAuth.init(partnerToken:relink:gsToken:altDsId:deviceLocale:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10 = &v9[OBJC_IVAR____TtC15ProximityReader11AccountAuth_partnerToken];
  *uint64_t v10 = a1;
  v10[1] = a2;
  v9[OBJC_IVAR____TtC15ProximityReader11AccountAuth_relink] = a3;
  uint64_t v11 = &v9[OBJC_IVAR____TtC15ProximityReader11AccountAuth_gsToken];
  void *v11 = a4;
  v11[1] = a5;
  uint64_t v12 = &v9[OBJC_IVAR____TtC15ProximityReader11AccountAuth_altDsId];
  *uint64_t v12 = a6;
  v12[1] = a7;
  uint64_t v13 = &v9[OBJC_IVAR____TtC15ProximityReader11AccountAuth_deviceLocale];
  *uint64_t v13 = a8;
  v13[1] = a9;
  v15.receiver = v9;
  v15.super_class = (Class)type metadata accessor for AccountAuth();
  return objc_msgSendSuper2(&v15, sel_init);
}

uint64_t type metadata accessor for AccountAuth()
{
  return self;
}

void sub_2288CBD04(void *a1)
{
  uint64_t v3 = (void *)sub_228915C40();
  unint64_t v4 = (void *)sub_228915C40();
  objc_msgSend(a1, sel_encodeObject_forKey_, v3, v4);

  uint64_t v5 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ProximityReader11AccountAuth_relink);
  uint64_t v6 = (void *)sub_228915C40();
  objc_msgSend(a1, sel_encodeBool_forKey_, v5, v6);

  uint64_t v7 = (void *)sub_228915C40();
  uint64_t v8 = (void *)sub_228915C40();
  objc_msgSend(a1, sel_encodeObject_forKey_, v7, v8);

  uint64_t v9 = (void *)sub_228915C40();
  uint64_t v10 = (void *)sub_228915C40();
  objc_msgSend(a1, sel_encodeObject_forKey_, v9, v10);

  uint64_t v11 = (void *)sub_228915C40();
  id v12 = (id)sub_228915C40();
  objc_msgSend(a1, sel_encodeObject_forKey_, v11, v12);
}

id AccountAuth.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return AccountAuth.init(coder:)(a1);
}

id AccountAuth.init(coder:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22880A978();
  uint64_t v6 = v1;
  uint64_t v7 = sub_228916120();
  if (v7)
  {
    uint64_t v8 = (void *)v7;
    uint64_t v9 = (void *)sub_228915C40();
    unsigned __int8 v10 = objc_msgSend(a1, sel_decodeBoolForKey_, v9);

    uint64_t v11 = sub_228916120();
    if (v11)
    {
      id v12 = (void *)v11;
      uint64_t v13 = sub_228916120();
      if (v13)
      {
        uint64_t v14 = (void *)v13;
        uint64_t v15 = sub_228916120();
        if (v15)
        {
          uint64_t v16 = (void *)v15;
          uint64_t v17 = sub_228915C70();
          uint64_t v18 = (uint64_t *)&v6[OBJC_IVAR____TtC15ProximityReader11AccountAuth_partnerToken];
          *uint64_t v18 = v17;
          v18[1] = v19;
          v6[OBJC_IVAR____TtC15ProximityReader11AccountAuth_relink] = v10;
          uint64_t v20 = sub_228915C70();
          uint64_t v21 = (uint64_t *)&v6[OBJC_IVAR____TtC15ProximityReader11AccountAuth_gsToken];
          uint64_t *v21 = v20;
          v21[1] = v22;
          uint64_t v23 = sub_228915C70();
          objc_super v24 = (uint64_t *)&v6[OBJC_IVAR____TtC15ProximityReader11AccountAuth_altDsId];
          *objc_super v24 = v23;
          v24[1] = v25;
          uint64_t v26 = sub_228915C70();
          uint64_t v28 = v27;

          os_log_type_t v29 = (uint64_t *)&v6[OBJC_IVAR____TtC15ProximityReader11AccountAuth_deviceLocale];
          *os_log_type_t v29 = v26;
          v29[1] = v28;

          int v30 = (objc_class *)type metadata accessor for AccountAuth();
          v40.receiver = v6;
          v40.super_class = v30;
          id v31 = objc_msgSendSuper2(&v40, sel_init);

          return v31;
        }

        uint64_t v32 = v12;
        uint64_t v8 = v14;
      }
      else
      {
        uint64_t v32 = v8;
        uint64_t v8 = v12;
      }
    }
  }

  if (qword_268267EF8 != -1) {
    swift_once();
  }
  uint64_t v33 = __swift_project_value_buffer(v3, (uint64_t)qword_268283D50);
  sub_22880AB38(v33, (uint64_t)v5);
  uint64_t v34 = sub_2289155C0();
  uint64_t v35 = *(void *)(v34 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v5, 1, v34) == 1)
  {

    sub_22880ABA0((uint64_t)v5);
  }
  else
  {
    int v36 = sub_2289155A0();
    os_log_type_t v37 = sub_228916050();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v38 = 0;
      _os_log_impl(&dword_228806000, v36, v37, "AccountAuth | Failed to decode object", v38, 2u);
      MEMORY[0x22A6A1090](v38, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v35 + 8))(v5, v34);
  }
  type metadata accessor for AccountAuth();
  swift_deallocPartialClassInstance();
  return 0;
}

id AccountAuth.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void AccountAuth.init()()
{
}

id AccountAuth.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AccountAuth();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for AccountAuth(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AccountAuth);
}

uint64_t dispatch thunk of AccountAuth.__allocating_init(partnerToken:relink:gsToken:altDsId:deviceLocale:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of AccountAuth.encode(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of AccountAuth.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t VASMode.rawValue.getter(char a1)
{
  uint64_t result = 0x20646E6120736156;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x7020726F20736156;
      break;
    case 2:
      uint64_t result = 0x796C6E6F20736156;
      break;
    case 3:
      uint64_t result = 0x20746E656D796150;
      break;
    default:
      return result;
  }
  return result;
}

void *static VASMode.allCases.getter()
{
  return &unk_26DCFD3E8;
}

uint64_t sub_2288CC5FC(unsigned __int8 *a1, unsigned char *a2)
{
  unint64_t v2 = 0xEF746E656D796170;
  uint64_t v3 = 0x20646E6120736156;
  uint64_t v4 = *a1;
  uint64_t v5 = 0x20646E6120736156;
  unint64_t v6 = 0xEF746E656D796170;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x7020726F20736156;
      unint64_t v6 = 0xEE00746E656D7961;
      break;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v5 = 0x796C6E6F20736156;
      break;
    case 3:
      uint64_t v5 = 0x20746E656D796150;
      unint64_t v6 = 0xEC000000796C6E6FLL;
      break;
    default:
      break;
  }
  switch(*a2)
  {
    case 1:
      unint64_t v2 = 0xEE00746E656D7961;
      if (v5 == 0x7020726F20736156) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x796C6E6F20736156;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0xEC000000796C6E6FLL;
      if (v5 == 0x20746E656D796150) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_228916660();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_2288CC7D0()
{
  return sub_228916780();
}

uint64_t sub_2288CC8CC()
{
  sub_228915D10();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2288CC9B0()
{
  return sub_228916780();
}

uint64_t sub_2288CCAA8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s15ProximityReader7VASModeO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

void sub_2288CCAD8(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xEF746E656D796170;
  uint64_t v3 = 0x20646E6120736156;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEE00746E656D7961;
      uint64_t v3 = 0x7020726F20736156;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x796C6E6F20736156;
      *(void *)(a1 + 8) = 0xE800000000000000;
      break;
    case 3:
      strcpy((char *)a1, "Payment only");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

void sub_2288CCB94(void *a1@<X8>)
{
  *a1 = &unk_26DCFD410;
}

uint64_t _s15ProximityReader7VASModeO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0 = sub_2289164B0();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

unint64_t sub_2288CCBF4()
{
  unint64_t result = qword_26826A798;
  if (!qword_26826A798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A798);
  }
  return result;
}

unint64_t sub_2288CCC4C()
{
  unint64_t result = qword_26826A7A0;
  if (!qword_26826A7A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26826A7A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A7A0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for VASMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2288CCD74);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VASMode()
{
  return &type metadata for VASMode;
}

uint64_t sub_2288CCDAC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *(void *)a1 = *a2;
    a1 = v11 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    *(void *)(a1 + 16) = a2[2];
    uint64_t v6 = a2[5];
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    uint64_t v7 = *(int *)(a3 + 28);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (uint64_t *)((char *)a2 + v7);
    *(void *)(a1 + 40) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_268269078);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_2289156A0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      void *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2288CCF04(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268269078);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_2289156A0();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_2288CCFCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268269078);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_2289156A0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  }
  else
  {
    *uint64_t v7 = *v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_2288CD0CC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 28);
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_2288110C0((uint64_t)a1 + v7, &qword_268269078);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268269078);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_2289156A0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      void *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_2288CD200(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268269078);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_2289156A0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v6, v7, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_2288CD2DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v8 = *(int *)(a3 + 28);
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (const void *)(a2 + v8);
    sub_2288110C0(a1 + v8, &qword_268269078);
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268269078);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_2289156A0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2288CD3F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2288CD40C);
}

uint64_t sub_2288CD40C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2682692D8);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_2288CD4C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2288CD4D4);
}

uint64_t sub_2288CD4D4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2682692D8);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for DiscoveryErrorSheet()
{
  uint64_t result = qword_26826A7B0;
  if (!qword_26826A7B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_2288CD5CC()
{
  sub_228857478();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_2288CD674()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2288CD690@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v3 = type metadata accessor for DiscoveryErrorSheet();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268269350);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  os_log_type_t v37 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v36 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268269358);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v38 = (uint64_t)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)v36 - v15;
  *(void *)uint64_t v16 = sub_228915780();
  *((void *)v16 + 1) = 0;
  v16[16] = 1;
  uint64_t v17 = &v16[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268269378) + 44)];
  v36[0] = (uint64_t)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2288CDE80((uint64_t)a1, v36[0]);
  uint64_t v18 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v19 = (v18 + 16) & ~v18;
  v36[1] = v18 | 7;
  v36[2] = v19 + v5;
  uint64_t v20 = swift_allocObject();
  sub_2288CDEE8((uint64_t)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v20 + v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268269380);
  sub_22885909C();
  sub_228915A70();
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  uint64_t v22 = v37;
  v21(v37, v11, v6);
  *(void *)uint64_t v17 = 0;
  v17[8] = 1;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2682693C0);
  v21(&v17[*(int *)(v23 + 48)], v22, v6);
  objc_super v24 = *(void (**)(char *, uint64_t))(v7 + 8);
  v24(v11, v6);
  v24(v22, v6);
  uint64_t v25 = *a1;
  uint64_t v26 = a1[1];
  uint64_t v27 = a1[2];
  uint64_t v28 = a1[3];
  uint64_t v29 = (uint64_t)a1;
  uint64_t v30 = v36[0];
  sub_2288CDE80(v29, v36[0]);
  uint64_t v31 = swift_allocObject();
  sub_2288CDEE8(v30, v31 + v19);
  uint64_t v32 = v38;
  sub_22883741C((uint64_t)v16, v38, &qword_268269358);
  uint64_t v33 = v39;
  sub_22883741C(v32, v39, &qword_268269358);
  uint64_t v34 = v33 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26826A7D8) + 48);
  *(void *)uint64_t v34 = v25;
  *(void *)(v34 + 8) = v26;
  *(void *)(v34 + 16) = v27;
  *(void *)(v34 + 24) = v28;
  *(unsigned char *)(v34 + 32) = 0;
  *(void *)(v34 + 40) = 0;
  *(void *)(v34 + 48) = 0;
  *(void *)(v34 + 56) = sub_2288CE0D8;
  *(void *)(v34 + 64) = v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2288A4930(0);
  sub_2288A4930((uint64_t)sub_2288CE0D8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2288110C0((uint64_t)v16, &qword_268269358);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22883A0F4(0);
  sub_22883A0F4((uint64_t)sub_2288CE0D8);
  return sub_2288110C0(v32, &qword_268269358);
}

uint64_t sub_2288CDAB8()
{
  uint64_t v0 = sub_2289156A0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DiscoveryErrorSheet();
  sub_2288CE13C((uint64_t)v3);
  sub_228915690();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_2288CDB9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_228915A50();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_228915A40();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F1B4B8], v2);
  uint64_t v22 = sub_228915A60();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_228915AC0();
  sub_228915680();
  uint64_t v6 = v23;
  char v7 = v24;
  uint64_t v8 = v25;
  char v9 = v26;
  uint64_t v11 = v27;
  uint64_t v10 = v28;
  id v12 = objc_msgSend(self, sel_systemDarkGrayColor);
  uint64_t v13 = MEMORY[0x22A69FA90](v12);
  uint64_t KeyPath = swift_getKeyPath();
  char v15 = sub_2289158E0();
  uint64_t result = sub_228915660();
  *(void *)a1 = v22;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(unsigned char *)(a1 + 32) = v9;
  *(void *)(a1 + 40) = v11;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = KeyPath;
  *(void *)(a1 + 64) = v13;
  *(unsigned char *)(a1 + 72) = v15;
  *(void *)(a1 + 80) = v17;
  *(void *)(a1 + 88) = v18;
  *(void *)(a1 + 96) = v19;
  *(void *)(a1 + 104) = v20;
  *(unsigned char *)(a1 + 112) = 0;
  return result;
}

uint64_t sub_2288CDD90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A7C0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v6 = sub_228915AB0();
  v6[1] = v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A7C8);
  sub_2288CD690(v2, (uint64_t)v6 + *(int *)(v8 + 44));
  uint64_t v9 = sub_2289156D0();
  char v10 = sub_2289158E0();
  sub_22883741C((uint64_t)v6, a1, &qword_26826A7C0);
  uint64_t v11 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26826A7D0) + 36);
  *(void *)uint64_t v11 = v9;
  *(unsigned char *)(v11 + 8) = v10;
  return sub_2288110C0((uint64_t)v6, &qword_26826A7C0);
}

uint64_t sub_2288CDE80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DiscoveryErrorSheet();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2288CDEE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DiscoveryErrorSheet();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2288CDF4C()
{
  type metadata accessor for DiscoveryErrorSheet();

  return sub_2288CDAB8();
}

uint64_t objectdestroyTm_1()
{
  uint64_t v1 = (int *)(type metadata accessor for DiscoveryErrorSheet() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v5 = v0 + v3 + v1[9];
  __swift_instantiateConcreteTypeFromMangledName(&qword_268269078);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_2289156A0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_2288CE0D8()
{
  uint64_t v1 = *(void *)(type metadata accessor for DiscoveryErrorSheet() - 8);
  return (*(uint64_t (**)(void))(v0
                              + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
                              + 32))();
}

uint64_t sub_2288CE13C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_228915770();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268269078);
  MEMORY[0x270FA5388](v8);
  char v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22883741C(v2, (uint64_t)v10, &qword_268269078);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_2289156A0();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, v10, v11);
  }
  else
  {
    os_log_type_t v13 = sub_228916060();
    uint64_t v14 = sub_2289158C0();
    os_log_type_t v15 = v13;
    if (os_log_type_enabled(v14, v13))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      v19[1] = a1;
      uint64_t v18 = v17;
      uint64_t v20 = v17;
      *(_DWORD *)uint64_t v16 = 136315138;
      v19[2] = sub_2288AB2C4(0x417373696D736944, 0xED00006E6F697463, &v20);
      sub_2289161F0();
      _os_log_impl(&dword_228806000, v14, v15, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22A6A1090](v18, -1, -1);
      MEMORY[0x22A6A1090](v16, -1, -1);
    }

    sub_228915760();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_2288CE3FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2289156F0();
  *a1 = result;
  return result;
}

uint64_t sub_2288CE428@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2289156F0();
  *a1 = result;
  return result;
}

uint64_t sub_2288CE454()
{
  return sub_228915700();
}

uint64_t sub_2288CE480()
{
  return sub_228915700();
}

unint64_t sub_2288CE4B0()
{
  unint64_t result = qword_26826A7E0;
  if (!qword_26826A7E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26826A7D0);
    sub_2288592CC(&qword_26826A7E8, &qword_26826A7C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A7E0);
  }
  return result;
}

uint64_t UnknownErrorCode.rawValue.getter()
{
  return *v0 + 1;
}

uint64_t static Constants.UnknownCountryCode.getter()
{
  return -1;
}

unint64_t static Constants.CRLocalizableTable.getter()
{
  return 0xD00000000000001BLL;
}

unint64_t static Constants.CRUIBundleIdentifier.getter()
{
  return 0xD00000000000001DLL;
}

unint64_t static Constants.PRUIServiceBundleIdentifier.getter()
{
  return 0xD000000000000022;
}

uint64_t static Constants.PINUI.getter()
{
  return 0x49554E4950;
}

uint64_t static Constants.TapUI.getter()
{
  return 0x4955706154;
}

uint64_t static Constants.RegUI.getter()
{
  return 0x4955676552;
}

uint64_t static Constants.IdentityUI.getter()
{
  return 0x797469746E656449;
}

unint64_t static Constants.PreferenceKeyServerEnvironmentSPS.getter()
{
  return 0xD000000000000014;
}

unint64_t static Constants.PreferenceKeyServerEnvironmentPSP.getter()
{
  return 0xD000000000000014;
}

unint64_t static Constants.PreferenceKeyServerEnvironmentWCS.getter()
{
  return 0xD000000000000014;
}

uint64_t static Constants.MonitorEventOrigin.getter()
{
  return 100;
}

uint64_t static Constants.MonitorEventComponent.getter()
{
  return 100;
}

uint64_t static Constants.EnvironmentDefaultRegion.getter()
{
  return 21333;
}

uint64_t static Constants.EnvironmentDefaultServer.getter()
{
  return 3367281;
}

unint64_t static Constants.EnvironmentMerchantdDomain.getter()
{
  return 0xD000000000000013;
}

uint64_t static Constants.EnvironmentKey.getter()
{
  return 0x6D6E6F7269766E65;
}

uint64_t static Constants.ContentDefaultEnvironment.getter()
{
  return 7759204;
}

uint64_t static Constants.ReadCardPaymentTimeout.getter()
{
  return 39;
}

uint64_t static Constants.ReadCardVasTimeout.getter()
{
  return 39;
}

uint64_t static Constants.DeviceSerialMaxLength.getter()
{
  return 8;
}

uint64_t static Constants.EmptyEventFieldMonitoring.getter()
{
  return 0x65756C61765F6F6ELL;
}

uint64_t static Constants.UnknownReadCountMonitoring.getter()
{
  return -1;
}

unint64_t static Constants.GSTokenIdentifier.getter()
{
  return 0xD000000000000023;
}

double static Constants.SessionExpirationTolerance.getter()
{
  return 60.0;
}

double static Constants.safMaxAllowedTimeInterval.getter()
{
  return 86400.0;
}

uint64_t static Constants.safMaxNumberOfTransactions.getter()
{
  return 2000;
}

unint64_t static Constants.DaemonPreferenceDomain.getter()
{
  return 0xD000000000000013;
}

unint64_t static Constants.EnablePrivacyLockKey.getter()
{
  return 0xD000000000000016;
}

unint64_t static Constants.EnableAlwaysPlaySound.getter()
{
  return 0xD000000000000017;
}

uint64_t static Constants.defaultConfigurationRegion.getter()
{
  return 0x4E4F4D4D4F43;
}

unint64_t static Constants.proximityReaderFolder.getter()
{
  return 0xD000000000000019;
}

uint64_t static Constants.discoveryFolder.getter()
{
  return 0x7265766F63736944;
}

uint64_t sub_2288CE7F4()
{
  return MCGestaltIsInternalBuild();
}

uint64_t (*static Constants.isInternalInstall.getter())()
{
  return sub_2288CE7F4;
}

void sub_2288CE828()
{
  id v0 = (id)MCGestaltGetDeviceUUID();
  if (v0)
  {
    uint64_t v1 = v0;
    uint64_t v2 = sub_228915C70();
    uint64_t v4 = v3;

    qword_26826A7F0 = v2;
    *(void *)algn_26826A7F8 = v4;
  }
  else
  {
    __break(1u);
  }
}

uint64_t static Constants.uniqueDeviceID.getter()
{
  if (qword_268267F50 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_26826A7F0;
  swift_bridgeObjectRetain();
  return v0;
}

double static Constants.PINEntryTimeout.getter()
{
  return 300.0;
}

double static Constants.PINEntrySafeGuardDelay.getter()
{
  return 2.0;
}

uint64_t static Constants.PrivacyLockAuthTimeout.getter()
{
  return 300;
}

uint64_t static Constants.UnknownMerchantCategoryCode.getter()
{
  return 0;
}

uint64_t static Constants.QRCodeScannerSleepTimeout.getter()
{
  return 300;
}

uint64_t static Constants.maxPreferredAIDs.getter()
{
  return 4;
}

uint64_t static Constants.TermsAndConditionsVersion.getter()
{
  return 3157554;
}

double static Constants.uiFinishTimeout.getter()
{
  return 5.0;
}

double static Server.sessionRequestTimeout.getter()
{
  return 10.0;
}

uint64_t static Server.sessionRequestRetries.getter()
{
  return 3;
}

uint64_t static Server.transaction.getter()
{
  return 0x73746E656D796170;
}

uint64_t static Server.monitoring.getter()
{
  return 0x69726F74696E6F6DLL;
}

uint64_t static Server.attestation.getter()
{
  return 0x7461747365747461;
}

uint64_t static Server.authorization.getter()
{
  return 0x7A69726F68747561;
}

unint64_t static Server.merchant.getter()
{
  return 0xD000000000000010;
}

unint64_t static Server.assets.getter()
{
  return 0xD000000000000013;
}

uint64_t static StatusKey.daemonVersion.getter()
{
  return 7497078;
}

uint64_t static StatusKey.cardReaderVersion.getter()
{
  return 0x726564616572;
}

uint64_t static StatusKey.env.getter()
{
  return 7761509;
}

uint64_t static StatusKey.virtualTerminalId.getter()
{
  return 1684632694;
}

uint64_t static StatusKey.bundleId.getter()
{
  return 0x656C646E7562;
}

uint64_t static StatusKey.installId.getter()
{
  return 0x6C6C6174736E69;
}

uint64_t static StatusKey.seId.getter()
{
  return 1684628851;
}

uint64_t static StatusKey.terminalProfileId.getter()
{
  return 1684631668;
}

uint64_t static StatusKey.sessionExpiration.getter()
{
  return 0x6E6F6973736573;
}

uint64_t static StatusKey.isProdSE.getter()
{
  return 0x4553646F72507369;
}

uint64_t static StatusKey.isSEAvailable.getter()
{
  return 0x6961764145537369;
}

unint64_t static StatusKey.isJCOPVersionCorrect.getter()
{
  return 0xD000000000000014;
}

uint64_t static StatusKey.kernelNeeded.getter()
{
  return 0x654E6C656E72656BLL;
}

uint64_t static StatusKey.configNeeded.getter()
{
  return 0x654E6769666E6F63;
}

unint64_t static StatusKey.kernelUpdateNeeded.getter()
{
  return 0xD000000000000012;
}

uint64_t static StatusKey.profiles.getter()
{
  return 0x73656C69666F7270;
}

unint64_t static Onboarding.tapToPayBundleID.getter()
{
  return 0xD00000000000002ALL;
}

unint64_t static Onboarding.tapToPresentBundleID.getter()
{
  return 0xD00000000000001CLL;
}

uint64_t static Analytics.Client.Name.getter()
{
  return 0x6F705F74705F7078;
}

uint64_t static Analytics.Client.Wallet.getter()
{
  return 0x74656C6C6177;
}

double static Analytics.Client.Version.getter()
{
  return 1.0;
}

uint64_t static Analytics.Client.SessionId.getter()
{
  return 1234;
}

uint64_t static Analytics.Client.Category.getter()
{
  return 1;
}

uint64_t static Analytics.Client.CType.getter()
{
  return 100;
}

uint64_t static Analytics.Service.TapToPay.getter()
{
  return 0x7961506F54706174;
}

uint64_t static Analytics.Service.IdVerifier.getter()
{
  return 0x7265566F54706174;
}

unint64_t static Analytics.Service.IdVerifierDataTransfer.getter()
{
  return 0xD000000000000016;
}

uint64_t static Analytics.Key.hierarchyToken.getter()
{
  return 0x6863726172656968;
}

uint64_t static Analytics.Key.sessionStarted.getter()
{
  return 0x536E6F6973736573;
}

uint64_t static Analytics.Key.cvm.getter()
{
  return 5068355;
}

uint64_t static Analytics.Key.readerMode.getter()
{
  return 0x6F4D726564616572;
}

uint64_t static Analytics.Key.readType.getter()
{
  return 0x6570795464616572;
}

uint64_t static Analytics.Key.eventType.getter()
{
  return 0x707954746E657665;
}

uint64_t static Analytics.Key.buttonTag.getter()
{
  return 0x61546E6F74747562;
}

uint64_t static Analytics.Key.errorType.getter()
{
  return 0x707954726F727265;
}

uint64_t static Analytics.Key.pspId.getter()
{
  return 0x6449707370;
}

uint64_t static Analytics.Key.appId.getter()
{
  return 0x6449707061;
}

uint64_t static Analytics.Key.networkName.getter()
{
  return 0x4E6B726F7774656ELL;
}

unint64_t static Analytics.Key.merchantCategory.getter()
{
  return 0xD000000000000010;
}

uint64_t static Analytics.Key.roundedTS.getter()
{
  return 0x546465646E756F72;
}

uint64_t static Analytics.Key.sessionDuration.getter()
{
  return 0x446E6F6973736573;
}

uint64_t static Analytics.Key.pinRequestType.getter()
{
  return 0x65757165526E6970;
}

uint64_t static Analytics.Key.pinEntryType.getter()
{
  return 0x7972746E456E6970;
}

unint64_t static Analytics.Key.privacyLockEnabled.getter()
{
  return 0xD000000000000012;
}

uint64_t static Analytics.Key.pinBypass.getter()
{
  return 0x73617079426E6970;
}

uint64_t static Analytics.Key.triggerType.getter()
{
  return 0x5472656767697274;
}

uint64_t static Analytics.Key.inRange.getter()
{
  return 0x65676E61526E69;
}

uint64_t static Analytics.Key.inRangeTime.getter()
{
  return 0x5465676E61526E69;
}

unint64_t static Analytics.Key.preferredLanguage.getter()
{
  return 0xD000000000000011;
}

unint64_t static Analytics.Key.accessibilityPinEntryType.getter()
{
  return 0xD000000000000019;
}

unint64_t static Analytics.Key.scribbleRetryCount.getter()
{
  return 0xD000000000000012;
}

uint64_t static Analytics.Key.pageTag.getter()
{
  return 0x67615465676170;
}

uint64_t static Analytics.Key.productType.getter()
{
  return 0x54746375646F7270;
}

uint64_t static Analytics.Key.productSubType.getter()
{
  return 0x53746375646F7270;
}

unint64_t static Analytics.Key.dataTransferType.getter()
{
  return 0xD000000000000010;
}

unint64_t static Analytics.Key.dataTransferSubType.getter()
{
  return 0xD000000000000013;
}

uint64_t static Analytics.Key.serviceName.getter()
{
  return 0x4E65636976726573;
}

uint64_t static Analytics.Key.relyingPartyId.getter()
{
  return 0x50676E69796C6572;
}

unint64_t static Analytics.Key.relyingPartyName.getter()
{
  return 0xD000000000000010;
}

uint64_t static Analytics.Key.appType.getter()
{
  return 0x65707954707061;
}

uint64_t static Analytics.Key.teamId.getter()
{
  return 0x64496D616574;
}

uint64_t static Analytics.Key.issuer.getter()
{
  return 0x726575737369;
}

uint64_t static Analytics.Key.fieldsRequested.getter()
{
  return 0x655273646C656966;
}

uint64_t static Analytics.Key.fieldsStored.getter()
{
  return 0x745373646C656966;
}

uint64_t static Analytics.Key.multiCheck.getter()
{
  return 0x65684369746C756DLL;
}

uint64_t static Analytics.Key.locale.getter()
{
  return 0x656C61636F6CLL;
}

uint64_t static Analytics.Key.purchaseContext.getter()
{
  return 0x6573616863727570;
}

unint64_t static Analytics.Key.contentScrollable.getter()
{
  return 0xD000000000000011;
}

unint64_t static Analytics.Key.contentScrollQuantile.getter()
{
  return 0xD000000000000015;
}

uint64_t static Analytics.Key.contentId.getter()
{
  return 0x49746E65746E6F63;
}

unint64_t static Analytics.Key.contentSessionId.getter()
{
  return 0xD000000000000010;
}

uint64_t static Analytics.Key.contentVersion.getter()
{
  return 0x56746E65746E6F63;
}

uint64_t static Analytics.Key.contentRegion.getter()
{
  return 0x52746E65746E6F63;
}

uint64_t static Analytics.EventType.buttonTap.getter()
{
  return 0x61546E6F74747562;
}

uint64_t static Analytics.EventType.readerActive.getter()
{
  return 0x6341726564616572;
}

uint64_t static Analytics.EventType.readerInactive.getter()
{
  return 0x6E49726564616572;
}

uint64_t static Analytics.EventType.readReady.getter()
{
  return 0x6461655264616572;
}

uint64_t static Analytics.EventType.readInitFailed.getter()
{
  return 0x74696E4964616572;
}

uint64_t static Analytics.EventType.cardDetected.getter()
{
  return 0x6574654464726163;
}

uint64_t static Analytics.EventType.cardTear.getter()
{
  return 0x7261655464726163;
}

uint64_t static Analytics.EventType.readSuccess.getter()
{
  return 0x6363755364616572;
}

uint64_t static Analytics.EventType.readFailed.getter()
{
  return 0x6C69614664616572;
}

unint64_t static Analytics.EventType.cardInfoDelivered.getter()
{
  return 0xD000000000000011;
}

unint64_t static Analytics.EventType.cardInfoNotDelivered.getter()
{
  return 0xD000000000000014;
}

uint64_t static Analytics.EventType.pinEntrySuccess.getter()
{
  return 0x7972746E456E6970;
}

uint64_t static Analytics.EventType.pinEntryFailed.getter()
{
  return 0x7972746E456E6970;
}

unint64_t static Analytics.EventType.privacyAuthSuccess.getter()
{
  return 0xD000000000000012;
}

unint64_t static Analytics.EventType.privacyAuthFailed.getter()
{
  return 0xD000000000000011;
}

uint64_t static Analytics.EventType.guidanceActive.getter()
{
  return 0x65636E6164697567;
}

unint64_t static Analytics.EventType.guidanceDismissed.getter()
{
  return 0xD000000000000011;
}

unint64_t static Analytics.EventType.inRangeProxEvent.getter()
{
  return 0xD000000000000010;
}

unint64_t static Analytics.EventType.contentPresented.getter()
{
  return 0xD000000000000010;
}

uint64_t static Analytics.EventType.contentScrolled.getter()
{
  return 0x53746E65746E6F63;
}

unint64_t static Analytics.EventType.contentDismissed.getter()
{
  return 0xD000000000000010;
}

uint64_t static Analytics.EventType.viewDidAppear.getter()
{
  return 0x4164694477656976;
}

uint64_t static Analytics.EventType.hostAppError.getter()
{
  return 0x4570704174736F68;
}

uint64_t static Analytics.EventType.tapInitiated.getter()
{
  return 0x6974696E49706174;
}

uint64_t static Analytics.EventType.tapSuccess.getter()
{
  return 0x6563637553706174;
}

uint64_t static Analytics.EventType.scanInitiated.getter()
{
  return 0x74696E496E616373;
}

uint64_t static Analytics.EventType.scanSuccess.getter()
{
  return 0x636375536E616373;
}

uint64_t static Analytics.EventType.tapError.getter()
{
  return 0x726F727245706174;
}

uint64_t static Analytics.EventType.scanError.getter()
{
  return 0x6F7272456E616373;
}

uint64_t static Analytics.EventType.connectionError.getter()
{
  return 0x697463656E6E6F63;
}

uint64_t static Analytics.EventType.infoReceived.getter()
{
  return 0x656365526F666E69;
}

unint64_t static Analytics.Button.useCurrentAppleID.getter()
{
  return 0xD000000000000011;
}

unint64_t static Analytics.Button.useDifferentAppleID.getter()
{
  return 0xD000000000000013;
}

uint64_t static Analytics.PINRequestType.cardRequired.getter()
{
  return 0x7571655264726163;
}

uint64_t static Analytics.PINRequestType.issuerRequired.getter()
{
  return 0x6552726575737369;
}

uint64_t static Analytics.PINEntryType.standard.getter()
{
  return 0x647261646E617473;
}

uint64_t static Analytics.PINEntryType.accessibility.getter()
{
  return 0x6269737365636361;
}

uint64_t static Analytics.PrivacyLock.enabled.getter()
{
  return 1;
}

uint64_t static Analytics.PrivacyLock.disabled.getter()
{
  return 0;
}

uint64_t static Analytics.GuidanceActive.cardTear.getter()
{
  return 0x7261655464726163;
}

uint64_t static Analytics.GuidanceActive.sensorObscured.getter()
{
  return 0x624F726F736E6573;
}

uint64_t static Analytics.GuidanceActive.rapidCardTap.getter()
{
  return 0x7261436469706172;
}

uint64_t static Analytics.GuidanceActive.userSwipeDown.getter()
{
  return 0x7069775372657375;
}

uint64_t static Analytics.GuidanceActive.timerThreshold.getter()
{
  return 0x72685472656D6974;
}

uint64_t static Analytics.GuidanceDismiss.userCancel.getter()
{
  return 0x636E614372657375;
}

uint64_t static Analytics.GuidanceDismiss.userSwipeUp.getter()
{
  return 0x7069775372657375;
}

uint64_t static Analytics.GuidanceDismiss.readTimedOut.getter()
{
  return 0x656D695464616572;
}

uint64_t static Analytics.CancelationTrigger.userCancel.getter()
{
  return 0x636E614372657375;
}

uint64_t static Analytics.CancelationTrigger.appCancel.getter()
{
  return 0x65636E6143707061;
}

uint64_t static Analytics.CancelationTrigger.systemCancel.getter()
{
  return 0x61436D6574737973;
}

uint64_t static Analytics.PINBypass.enabled.getter()
{
  return 1;
}

uint64_t static Analytics.PINBypass.disabled.getter()
{
  return 0;
}

uint64_t static Analytics.PrivacyLockCancelationTrigger.systemCancel.getter()
{
  return 0x61436D6574737973;
}

uint64_t static Analytics.PreferredLanguage.device.getter()
{
  return 0x656369766564;
}

uint64_t static Analytics.PreferredLanguage.app.getter()
{
  return 7368801;
}

uint64_t static Analytics.PreferredLanguage.buyer.getter()
{
  return 0x7265797562;
}

uint64_t static Analytics.PreferredLanguage.card.getter()
{
  return 1685217635;
}

uint64_t static Analytics.PreferredLanguage.unset.getter()
{
  return 24942;
}

uint64_t static Analytics.AccessibilityPINEntryType.noEntry.getter()
{
  return 0x7972746E456F6ELL;
}

uint64_t static Analytics.AccessibilityPINEntryType.tapOnly.getter()
{
  return 0x796C6E4F706174;
}

uint64_t static Analytics.AccessibilityPINEntryType.scribbleOnly.getter()
{
  return 0x656C626269726373;
}

uint64_t static Analytics.AccessibilityPINEntryType.tapAndScribble.getter()
{
  return 0x6353646E41706174;
}

unint64_t static Analytics.SpecificErrors.interfaceOrCVMFailed.getter()
{
  return 0xD000000000000014;
}

uint64_t static Analytics.DataTransferType.displayOnly.getter()
{
  return 0x4F79616C70736944;
}

uint64_t static Analytics.DataTransferType.dataTransfer.getter()
{
  return 0x6E61725461746144;
}

uint64_t static Analytics.DataTransferType.rawDataTransfer.getter()
{
  return 0x5461746144776172;
}

unint64_t static Analytics.DataTransferType.validatedDataTransfer.getter()
{
  return 0xD000000000000015;
}

uint64_t static Analytics.ProductType.identity.getter()
{
  return 0x797469746E656469;
}

unint64_t static Analytics.ProductSubType.mobileDriversLicense.getter()
{
  return 0xD000000000000014;
}

uint64_t static Analytics.ProductSubType.nationalID.getter()
{
  return 0x6C616E6F6974616ELL;
}

uint64_t static Analytics.PageTag.tapUI.getter()
{
  return 0x4955706174;
}

uint64_t static Analytics.PageTag.hostAppUI.getter()
{
  return 0x5570704174736F68;
}

uint64_t static Analytics.PageTag.resultUI.getter()
{
  return 0x4955746C75736572;
}

uint64_t static Analytics.ErrorType.tapFailed.getter()
{
  return 0x656C696146706174;
}

uint64_t static Analytics.ErrorType.notMobileDrivingLicence.getter()
{
  return 0x4C446D746F6ELL;
}

uint64_t static Analytics.ErrorType.invalidMobileDrivingLicence.getter()
{
  return 0x6D64696C61766E69;
}

uint64_t static Analytics.ErrorType.tapTimeout.getter()
{
  return 0x6F656D6954706174;
}

uint64_t static Analytics.ErrorType.bluetoothOff.getter()
{
  return 0x746F6F7465756C62;
}

uint64_t static Analytics.ErrorType.nfcError.getter()
{
  return 0x726F72724543464ELL;
}

uint64_t static Analytics.ErrorType.connectionError.getter()
{
  return 0x697463656E6E6F63;
}

unint64_t static Analytics.ErrorType.presentmentError.getter()
{
  return 0xD000000000000010;
}

unint64_t static Analytics.ErrorType.connectionTimeout.getter()
{
  return 0xD000000000000011;
}

uint64_t static Analytics.ErrorType.otherError.getter()
{
  return 0x726568746FLL;
}

uint64_t static Analytics.ButtonTag.scanQRCode.getter()
{
  return 0x6F4352516E616373;
}

uint64_t static Analytics.ButtonTag.dismiss.getter()
{
  return 0x7373696D736964;
}

uint64_t static Analytics.ButtonTag.done.getter()
{
  return 1701736292;
}

uint64_t static Analytics.ButtonTag.matchesPerson.getter()
{
  return 0x507365686374616DLL;
}

uint64_t static Analytics.ButtonTag.doesNotMatch.getter()
{
  return 0x4D746F4E73656F64;
}

uint64_t static Analytics.PurchaseContext.surchargeAmount.getter()
{
  return 0x6772616863727573;
}

unint64_t static Analytics.PurchaseContext.surchargePercent.getter()
{
  return 0xD000000000000010;
}

unint64_t static Analytics.PurchaseContext.weeklyInstallment.getter()
{
  return 0xD000000000000011;
}

unint64_t static Analytics.PurchaseContext.monthlyInstallment.getter()
{
  return 0xD000000000000012;
}

unint64_t static Analytics.PurchaseContext.yearlyInstallment.getter()
{
  return 0xD000000000000011;
}

unint64_t static Analytics.PurchaseContext.weeklyMembership.getter()
{
  return 0xD000000000000010;
}

unint64_t static Analytics.PurchaseContext.monthlyMembership.getter()
{
  return 0xD000000000000011;
}

unint64_t static Analytics.PurchaseContext.yearlyMembership.getter()
{
  return 0xD000000000000010;
}

unint64_t static Analytics.PurchaseContext.preAuthorization.getter()
{
  return 0xD000000000000010;
}

unint64_t static Analytics.PurchaseContext.includePreAuthAmount.getter()
{
  return 0xD000000000000014;
}

uint64_t static Analytics.PurchaseContext.preAuthRelease.getter()
{
  return 0x5268747541657270;
}

uint64_t static Analytics.PurchaseContext.notApplicable.getter()
{
  return 0x696C707041746F6ELL;
}

uint64_t static Analytics.IdentityAppType.direct.getter()
{
  return 0x746365726964;
}

uint64_t static Analytics.IdentityAppType.indirect.getter()
{
  return 0x7463657269446E69;
}

uint64_t static Analytics.DiscoveryScrollQuantile.notDefined.getter()
{
  return 1819047278;
}

uint64_t static Analytics.DiscoveryContentVersion.notDefined.getter()
{
  return 1819047278;
}

uint64_t static Analytics.DiscoveryErrorType.unknown.getter()
{
  return 0x6E776F6E6B6E75;
}

uint64_t static Analytics.DiscoveryRegion.notDefined.getter()
{
  return 1819047278;
}

unint64_t static ErrorDetails.readerNotInitialized.getter()
{
  return 0xD000000000000019;
}

unint64_t static ErrorDetails.unexpectedConfigErrorType.getter()
{
  return 0xD000000000000015;
}

unint64_t static ErrorDetails.errorParsingSessionToken.getter()
{
  return 0xD000000000000017;
}

unint64_t static ErrorDetails.secureChannelError.getter()
{
  return 0xD000000000000014;
}

unint64_t static ErrorDetails.apiResponseFormatError.getter()
{
  return 0xD00000000000001BLL;
}

unint64_t static ErrorDetails.unexpectedSessionError.getter()
{
  return 0xD000000000000018;
}

unint64_t static ErrorDetails.unknownSessionError.getter()
{
  return 0xD00000000000001DLL;
}

unint64_t static ErrorDetails.sessionFormatError.getter()
{
  return 0xD000000000000014;
}

unint64_t static ErrorDetails.invalidSessionFile.getter()
{
  return 0xD000000000000019;
}

unint64_t static ErrorDetails.invalidToken.getter()
{
  return 0xD000000000000021;
}

unint64_t static ErrorDetails.invalidComponent.getter()
{
  return 0xD000000000000025;
}

unint64_t static ErrorDetails.appletInstallationFailed.getter()
{
  return 0xD000000000000015;
}

unint64_t static ErrorDetails.configInstallationFailed.getter()
{
  return 0xD00000000000001ALL;
}

unint64_t static ErrorDetails.kernelConfigNotValid.getter()
{
  return 0xD00000000000001ELL;
}

unint64_t static ErrorDetails.kernelTokenExpired.getter()
{
  return 0xD00000000000001CLL;
}

unint64_t static ErrorDetails.kernelCouldNotParseToken.getter()
{
  return 0xD000000000000023;
}

unint64_t static ErrorDetails.kernelUnknownError.getter()
{
  return 0xD000000000000017;
}

unint64_t static ErrorDetails.attestationDataInvalid.getter()
{
  return 0xD00000000000001CLL;
}

unint64_t static ErrorDetails.clockNotAutomatic.getter()
{
  return 0xD000000000000025;
}

unint64_t static ErrorDetails.unknownErrorAttest.getter()
{
  return 0xD00000000000001FLL;
}

unint64_t static ErrorDetails.attestationTokenInvalid.getter()
{
  return 0xD00000000000002ALL;
}

unint64_t static ErrorDetails.cannotRenewCertificate.getter()
{
  return 0xD000000000000018;
}

unint64_t static ErrorDetails.sessionBusy.getter()
{
  return 0xD000000000000016;
}

unint64_t static ErrorDetails.invalidSLAM.getter()
{
  return 0xD000000000000015;
}

unint64_t static ErrorDetails.couldNotAttest.getter()
{
  return 0xD000000000000018;
}

unint64_t static ErrorDetails.appletNotAvailable.getter()
{
  return 0xD000000000000026;
}

unint64_t static ErrorDetails.baselineSelection.getter()
{
  return 0xD00000000000002ALL;
}

unint64_t static ErrorDetails.incorrectJCOPVersion.getter()
{
  return 0xD00000000000001CLL;
}

unint64_t static ErrorDetails.endpointNotFound.getter()
{
  return 0xD000000000000020;
}

unint64_t static ErrorDetails.invalidEnvironment.getter()
{
  return 0xD000000000000020;
}

unint64_t static ErrorDetails.readerSecurePairingBroken.getter()
{
  return 0xD00000000000001FLL;
}

unint64_t static ErrorDetails.invalidTimeSync.getter()
{
  return 0xD000000000000022;
}

unint64_t static ErrorDetails.unexpectedConfigurationError.getter()
{
  return 0xD00000000000001CLL;
}

ProximityReader::UnknownErrorCode_optional __swiftcall UnknownErrorCode.init(rawValue:)(Swift::Int rawValue)
{
  unint64_t v2 = 0x302010004uLL >> (8 * rawValue);
  if ((unint64_t)rawValue >= 5) {
    LOBYTE(v2) = 4;
  }
  *uint64_t v1 = v2;
  return (ProximityReader::UnknownErrorCode_optional)rawValue;
}

uint64_t sub_2288D00D4()
{
  return sub_228916780();
}

uint64_t sub_2288D011C()
{
  return sub_228916760();
}

uint64_t sub_2288D014C()
{
  return sub_228916780();
}

ProximityReader::UnknownErrorCode_optional sub_2288D0190(Swift::Int *a1)
{
  return UnknownErrorCode.init(rawValue:)(*a1);
}

void sub_2288D0198(void *a1@<X8>)
{
  *a1 = *v1 + 1;
}

ProximityReader::XPCUserInfoKey_optional __swiftcall XPCUserInfoKey.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_2289164B0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 16;
  if (v3 < 0x10) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

unint64_t XPCUserInfoKey.rawValue.getter()
{
  unint64_t result = 0x746361736E617274;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x746E61686372656DLL;
      break;
    case 2:
      unint64_t result = 0x49737365636F7270;
      break;
    case 3:
      unint64_t result = 0x79636E6572727563;
      break;
    case 4:
      unint64_t result = 0x6E656B6F546E6970;
      break;
    case 5:
      unint64_t result = 0x69666E6F436E6970;
      break;
    case 6:
      unint64_t result = 0xD000000000000012;
      break;
    case 7:
      unint64_t result = 0x4C79636176697270;
      break;
    case 8:
      unint64_t result = 0x65646F4D6975;
      break;
    case 9:
      unint64_t result = 7234157;
      break;
    case 0xA:
      unint64_t result = 0x746E756F6D61;
      break;
    case 0xB:
      unint64_t result = 0x6C50737961776C61;
      break;
    case 0xC:
      unint64_t result = 0x6172747369676572;
      break;
    case 0xD:
      unint64_t result = 0x74736575716572;
      break;
    case 0xE:
      unint64_t result = 0xD000000000000015;
      break;
    case 0xF:
      unint64_t result = 0x747865746E6F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2288D0418()
{
  return sub_2288D9FCC();
}

uint64_t sub_2288D0424()
{
  return sub_228916780();
}

uint64_t sub_2288D048C()
{
  XPCUserInfoKey.rawValue.getter();
  sub_228915D10();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2288D04F0()
{
  return sub_228916780();
}

ProximityReader::XPCUserInfoKey_optional sub_2288D0554(Swift::String *a1)
{
  return XPCUserInfoKey.init(rawValue:)(*a1);
}

unint64_t sub_2288D0560@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = XPCUserInfoKey.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

ProximityReader::UIMode_optional __swiftcall UIMode.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue == 1) {
    v1.value = ProximityReader_UIMode_issuerPIN;
  }
  else {
    v1.value = ProximityReader_UIMode_unknownDefault;
  }
  if (rawValue) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t UIMode.rawValue.getter(char a1)
{
  return a1 & 1;
}

void *sub_2288D05A8@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  *a2 = v3;
  return result;
}

uint64_t static DiscoveryInternalTopics.Main.payment.getter()
{
  return 0x746E656D796170;
}

uint64_t static DiscoveryInternalTopics.Payment.howToTap.getter()
{
  return 0x7061546F54776F68;
}

unint64_t sub_2288D05FC()
{
  unint64_t result = qword_26826A800;
  if (!qword_26826A800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A800);
  }
  return result;
}

unint64_t sub_2288D0654()
{
  unint64_t result = qword_26826A808;
  if (!qword_26826A808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A808);
  }
  return result;
}

unint64_t sub_2288D06AC()
{
  unint64_t result = qword_26826A810;
  if (!qword_26826A810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A810);
  }
  return result;
}

ValueMetadata *type metadata accessor for Constants()
{
  return &type metadata for Constants;
}

ValueMetadata *type metadata accessor for Server()
{
  return &type metadata for Server;
}

ValueMetadata *type metadata accessor for StatusKey()
{
  return &type metadata for StatusKey;
}

ValueMetadata *type metadata accessor for Onboarding()
{
  return &type metadata for Onboarding;
}

ValueMetadata *type metadata accessor for Analytics()
{
  return &type metadata for Analytics;
}

ValueMetadata *type metadata accessor for Analytics.Client()
{
  return &type metadata for Analytics.Client;
}

ValueMetadata *type metadata accessor for Analytics.Service()
{
  return &type metadata for Analytics.Service;
}

ValueMetadata *type metadata accessor for Analytics.Key()
{
  return &type metadata for Analytics.Key;
}

ValueMetadata *type metadata accessor for Analytics.EventType()
{
  return &type metadata for Analytics.EventType;
}

ValueMetadata *type metadata accessor for Analytics.Button()
{
  return &type metadata for Analytics.Button;
}

ValueMetadata *type metadata accessor for Analytics.PINRequestType()
{
  return &type metadata for Analytics.PINRequestType;
}

ValueMetadata *type metadata accessor for Analytics.PINEntryType()
{
  return &type metadata for Analytics.PINEntryType;
}

ValueMetadata *type metadata accessor for Analytics.PrivacyLock()
{
  return &type metadata for Analytics.PrivacyLock;
}

ValueMetadata *type metadata accessor for Analytics.GuidanceActive()
{
  return &type metadata for Analytics.GuidanceActive;
}

ValueMetadata *type metadata accessor for Analytics.GuidanceDismiss()
{
  return &type metadata for Analytics.GuidanceDismiss;
}

ValueMetadata *type metadata accessor for Analytics.CancelationTrigger()
{
  return &type metadata for Analytics.CancelationTrigger;
}

ValueMetadata *type metadata accessor for Analytics.PINBypass()
{
  return &type metadata for Analytics.PINBypass;
}

ValueMetadata *type metadata accessor for Analytics.PrivacyLockCancelationTrigger()
{
  return &type metadata for Analytics.PrivacyLockCancelationTrigger;
}

ValueMetadata *type metadata accessor for Analytics.PreferredLanguage()
{
  return &type metadata for Analytics.PreferredLanguage;
}

ValueMetadata *type metadata accessor for Analytics.AccessibilityPINEntryType()
{
  return &type metadata for Analytics.AccessibilityPINEntryType;
}

ValueMetadata *type metadata accessor for Analytics.SpecificErrors()
{
  return &type metadata for Analytics.SpecificErrors;
}

ValueMetadata *type metadata accessor for Analytics.DataTransferType()
{
  return &type metadata for Analytics.DataTransferType;
}

ValueMetadata *type metadata accessor for Analytics.ProductType()
{
  return &type metadata for Analytics.ProductType;
}

ValueMetadata *type metadata accessor for Analytics.ProductSubType()
{
  return &type metadata for Analytics.ProductSubType;
}

ValueMetadata *type metadata accessor for Analytics.PageTag()
{
  return &type metadata for Analytics.PageTag;
}

ValueMetadata *type metadata accessor for Analytics.ErrorType()
{
  return &type metadata for Analytics.ErrorType;
}

ValueMetadata *type metadata accessor for Analytics.ButtonTag()
{
  return &type metadata for Analytics.ButtonTag;
}

ValueMetadata *type metadata accessor for Analytics.PurchaseContext()
{
  return &type metadata for Analytics.PurchaseContext;
}

ValueMetadata *type metadata accessor for Analytics.IdentityAppType()
{
  return &type metadata for Analytics.IdentityAppType;
}

ValueMetadata *type metadata accessor for Analytics.DiscoveryScrollQuantile()
{
  return &type metadata for Analytics.DiscoveryScrollQuantile;
}

ValueMetadata *type metadata accessor for Analytics.DiscoveryContentVersion()
{
  return &type metadata for Analytics.DiscoveryContentVersion;
}

ValueMetadata *type metadata accessor for Analytics.DiscoveryErrorType()
{
  return &type metadata for Analytics.DiscoveryErrorType;
}

ValueMetadata *type metadata accessor for Analytics.DiscoveryRegion()
{
  return &type metadata for Analytics.DiscoveryRegion;
}

ValueMetadata *type metadata accessor for ErrorDetails()
{
  return &type metadata for ErrorDetails;
}

unsigned char *storeEnumTagSinglePayload for UnknownErrorCode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2288D09ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UnknownErrorCode()
{
  return &type metadata for UnknownErrorCode;
}

uint64_t getEnumTagSinglePayload for XPCUserInfoKey(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF1) {
    goto LABEL_17;
  }
  if (a2 + 15 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 15) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 15;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x10;
  int v8 = v6 - 16;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for XPCUserInfoKey(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 15 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 15) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF0)
  {
    unsigned int v6 = ((a2 - 241) >> 8) + 1;
    *unint64_t result = a2 + 15;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2288D0B80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 15;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCUserInfoKey()
{
  return &type metadata for XPCUserInfoKey;
}

unsigned char *storeEnumTagSinglePayload for UIMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2288D0C84);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UIMode()
{
  return &type metadata for UIMode;
}

ValueMetadata *type metadata accessor for DiscoveryInternalTopics()
{
  return &type metadata for DiscoveryInternalTopics;
}

ValueMetadata *type metadata accessor for DiscoveryInternalTopics.Main()
{
  return &type metadata for DiscoveryInternalTopics.Main;
}

ValueMetadata *type metadata accessor for DiscoveryInternalTopics.Payment()
{
  return &type metadata for DiscoveryInternalTopics.Payment;
}

unsigned char *MobileDriversLicenseDisplayRequest.Options.init(validationMode:)@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

BOOL static MobileDriversLicenseDisplayRequest.Options.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void MobileDriversLicenseDisplayRequest.Options.validationMode.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *MobileDriversLicenseDisplayRequest.Options.validationMode.setter(unsigned char *result)
{
  *ProximityReader::UIMode_optional v1 = *result;
  return result;
}

uint64_t (*MobileDriversLicenseDisplayRequest.Options.validationMode.modify())()
{
  return nullsub_1;
}

uint64_t MobileDriversLicenseDisplayRequest.Options.hash(into:)()
{
  return sub_228916760();
}

uint64_t MobileDriversLicenseDisplayRequest.Options.hashValue.getter()
{
  return sub_228916780();
}

unint64_t sub_2288D0DBC()
{
  unint64_t result = qword_26826A818;
  if (!qword_26826A818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826A818);
  }
  return result;
}

unsigned char *_s7OptionsVwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2288D0EDCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDisplayRequest.Options()
{
  return &type metadata for MobileDriversLicenseDisplayRequest.Options;
}

Swift::Void __swiftcall CRSignpost.begin()()
{
}

Swift::Void __swiftcall CRSignpost.end()()
{
}

uint64_t sub_2288D0F44(void (*a1)(void))
{
  a1();
  if (qword_268267F58 != -1) {
    swift_once();
  }
  type metadata accessor for CRSignpost();

  return sub_228915570();
}

uint64_t CRSignpost.begin(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2288D1018(a1, a2, a3, a4, MEMORY[0x263F902A0]);
}

uint64_t CRSignpost.end(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2288D1018(a1, a2, a3, a4, MEMORY[0x263F90298]);
}

uint64_t sub_2288D1018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  a5();
  if (qword_268267F58 != -1) {
    swift_once();
  }
  type metadata accessor for CRSignpost();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268268DB0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_22891AC40;
  *(void *)(v6 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_268269F20);
  *(void *)(v6 + 64) = sub_2288A4370();
  *(void *)(v6 + 32) = a4;
  swift_bridgeObjectRetain();
  sub_228915560();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2288D115C()
{
  sub_2288D66E4();
  uint64_t result = sub_2289161D0();
  qword_268283E38 = result;
  return result;
}

uint64_t type metadata accessor for CRSignpost()
{
  uint64_t result = qword_26826AE20;
  if (!qword_26826AE20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2288D1210()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826A820);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826A820);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "context-total-public";
  *(void *)(v6 + 8) = 20;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.contextPublic.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268267F60, (uint64_t)qword_26826A820, a1);
}

uint64_t sub_2288D134C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRSignpost();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2288D13B0()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826A838);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826A838);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "context-total-daemon";
  *(void *)(v6 + 8) = 20;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.context.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268267F68, (uint64_t)qword_26826A838, a1);
}

uint64_t sub_2288D14EC()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826A850);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826A850);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "context-001-verify";
  *(void *)(v6 + 8) = 18;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.contextVerify.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268267F70, (uint64_t)qword_26826A850, a1);
}

uint64_t sub_2288D1628()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826A868);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826A868);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "context-002-environmentSelection";
  *(void *)(v6 + 8) = 32;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.environmentSelection.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268267F78, (uint64_t)qword_26826A868, a1);
}

uint64_t sub_2288D1764()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826A880);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826A880);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "session-total-public";
  *(void *)(v6 + 8) = 20;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.sessionPublic.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268267F80, (uint64_t)qword_26826A880, a1);
}

uint64_t sub_2288D18A0()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826A898);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826A898);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "session-total-daemon";
  *(void *)(v6 + 8) = 20;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.session.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268267F88, (uint64_t)qword_26826A898, a1);
}

uint64_t sub_2288D19DC()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826A8B0);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826A8B0);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "session-001-verify";
  *(void *)(v6 + 8) = 18;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.sessionVerify.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268267F90, (uint64_t)qword_26826A8B0, a1);
}

uint64_t sub_2288D1B18()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826A8C8);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826A8C8);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "session-002-load";
  *(void *)(v6 + 8) = 16;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.loadSession.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268267F98, (uint64_t)qword_26826A8C8, a1);
}

uint64_t sub_2288D1C54()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826A8E0);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826A8E0);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "session-003-attestationToken";
  *(void *)(v6 + 8) = 28;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.attestationToken.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268267FA0, (uint64_t)qword_26826A8E0, a1);
}

uint64_t sub_2288D1D90()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826A8F8);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826A8F8);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "session-004-openSession";
  *(void *)(v6 + 8) = 23;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.openSession.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268267FA8, (uint64_t)qword_26826A8F8, a1);
}

uint64_t sub_2288D1ECC()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826A910);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826A910);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "session-005-kernelInstall";
  *(void *)(v6 + 8) = 25;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.kernelInstall.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268267FB0, (uint64_t)qword_26826A910, a1);
}

uint64_t sub_2288D2008()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826A928);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826A928);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "session-006-save";
  *(void *)(v6 + 8) = 16;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.saveSession.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268267FB8, (uint64_t)qword_26826A928, a1);
}

uint64_t sub_2288D2144()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826A940);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826A940);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "read-total-public";
  *(void *)(v6 + 8) = 17;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.readPublic.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268267FC0, (uint64_t)qword_26826A940, a1);
}

uint64_t sub_2288D2280()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826A958);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826A958);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "read-total-daemon";
  *(void *)(v6 + 8) = 17;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.read.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268267FC8, (uint64_t)qword_26826A958, a1);
}

uint64_t sub_2288D23BC()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826A970);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826A970);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "read-001-verify";
  *(void *)(v6 + 8) = 15;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.readVerify.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268267FD0, (uint64_t)qword_26826A970, a1);
}

uint64_t sub_2288D24F8()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826A988);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826A988);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "read-002-startUI";
  *(void *)(v6 + 8) = 16;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.startUI.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268267FD8, (uint64_t)qword_26826A988, a1);
}

uint64_t sub_2288D2634()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826A9A0);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826A9A0);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "read-003-readerReady";
  *(void *)(v6 + 8) = 20;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.readerReady.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268267FE0, (uint64_t)qword_26826A9A0, a1);
}

uint64_t sub_2288D2770()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826A9B8);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826A9B8);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "read-004-userTap";
  *(void *)(v6 + 8) = 16;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.userTap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268267FE8, (uint64_t)qword_26826A9B8, a1);
}

uint64_t sub_2288D28AC()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826A9D0);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826A9D0);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "read-005-cardRead";
  *(void *)(v6 + 8) = 17;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.cardRead.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268267FF0, (uint64_t)qword_26826A9D0, a1);
}

uint64_t sub_2288D29E8()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826A9E8);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826A9E8);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "read-006-cardReaderBlobEncryption";
  *(void *)(v6 + 8) = 33;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.cardReaderBlobEncryption.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268267FF8, (uint64_t)qword_26826A9E8, a1);
}

uint64_t sub_2288D2B24()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826AA00);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826AA00);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "read-007-closeUI";
  *(void *)(v6 + 8) = 16;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.closeUI.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268268000, (uint64_t)qword_26826AA00, a1);
}

uint64_t sub_2288D2C60()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826AA18);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826AA18);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "read-008-deliverReadCardResult";
  *(void *)(v6 + 8) = 30;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.deliverReadCardResult.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268268008, (uint64_t)qword_26826AA18, a1);
}

uint64_t sub_2288D2D9C()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826AA30);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826AA30);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "registration-total-public";
  *(void *)(v6 + 8) = 25;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.registrationPublic.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268268010, (uint64_t)qword_26826AA30, a1);
}

uint64_t sub_2288D2ED8()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826AA48);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826AA48);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "registration-total-daemon";
  *(void *)(v6 + 8) = 25;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.registrationDaemon.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268268018, (uint64_t)qword_26826AA48, a1);
}

uint64_t sub_2288D3014()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826AA60);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826AA60);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "registration-001-showRegistrationUI";
  *(void *)(v6 + 8) = 35;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.showRegistrationUI.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268268020, (uint64_t)qword_26826AA60, a1);
}

uint64_t sub_2288D3150()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826AA78);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826AA78);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "registration-002-showTermsOfServiceUI";
  *(void *)(v6 + 8) = 37;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.showTermsOfServiceUI.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268268028, (uint64_t)qword_26826AA78, a1);
}

uint64_t sub_2288D328C()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826AA90);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826AA90);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "registration-003-configure";
  *(void *)(v6 + 8) = 26;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.configure.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268268030, (uint64_t)qword_26826AA90, a1);
}

uint64_t sub_2288D33C8()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826AAA8);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826AAA8);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "registration-004-useDifferentAppleId";
  *(void *)(v6 + 8) = 36;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.useDifferentAppleId.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268268038, (uint64_t)qword_26826AAA8, a1);
}

uint64_t sub_2288D3504()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826AAC0);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826AAC0);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "registration-005-payloadCreation";
  *(void *)(v6 + 8) = 32;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.payloadCreation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268268040, (uint64_t)qword_26826AAC0, a1);
}

uint64_t sub_2288D3640()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826AAD8);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826AAD8);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "registration-006-register";
  *(void *)(v6 + 8) = 25;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.registration.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268268048, (uint64_t)qword_26826AAD8, a1);
}

uint64_t sub_2288D377C()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826AAF0);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826AAF0);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "startIssuerPINEntry-total-public";
  *(void *)(v6 + 8) = 32;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.startIssuerPINEntryPublic.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268268050, (uint64_t)qword_26826AAF0, a1);
}

uint64_t sub_2288D38B8()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826AB08);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826AB08);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "startIssuerPINEntry-total-daemon";
  *(void *)(v6 + 8) = 32;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.startIssuerPINEntry.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268268058, (uint64_t)qword_26826AB08, a1);
}

uint64_t sub_2288D39F4()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826AB20);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826AB20);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "pin-001-startPINUI";
  *(void *)(v6 + 8) = 18;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.startPINUI.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268268060, (uint64_t)qword_26826AB20, a1);
}

uint64_t sub_2288D3B30()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826AB38);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826AB38);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "pin-002-addPINDigit";
  *(void *)(v6 + 8) = 19;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.addPINDigit.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268268068, (uint64_t)qword_26826AB38, a1);
}

uint64_t sub_2288D3C6C()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826AB50);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826AB50);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "pin-003-removePINDigit";
  *(void *)(v6 + 8) = 22;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.removePINDigit.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268268070, (uint64_t)qword_26826AB50, a1);
}

uint64_t sub_2288D3DA8()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826AB68);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826AB68);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "pin-004-clearPINDigits";
  *(void *)(v6 + 8) = 22;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.clearPINDigits.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268268078, (uint64_t)qword_26826AB68, a1);
}

uint64_t sub_2288D3EE4()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826AB80);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826AB80);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "pin-005-capturePIN";
  *(void *)(v6 + 8) = 18;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.capturePIN.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268268080, (uint64_t)qword_26826AB80, a1);
}

uint64_t sub_2288D4020()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826AB98);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826AB98);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "pin-006-generatePINBlock";
  *(void *)(v6 + 8) = 24;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.generatePINBlock.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268268088, (uint64_t)qword_26826AB98, a1);
}

uint64_t sub_2288D415C()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826ABB0);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826ABB0);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "pin-007-sendPINData";
  *(void *)(v6 + 8) = 19;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.sendPINData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268268090, (uint64_t)qword_26826ABB0, a1);
}

uint64_t sub_2288D4298()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826ABC8);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826ABC8);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "pin-008-cancelPINCapture";
  *(void *)(v6 + 8) = 24;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.cancelPINCapture.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268268098, (uint64_t)qword_26826ABC8, a1);
}

uint64_t sub_2288D43D4()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826ABE0);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826ABE0);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "pin-009-closePINUI";
  *(void *)(v6 + 8) = 18;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.closePINUI.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_2682680A0, (uint64_t)qword_26826ABE0, a1);
}

uint64_t sub_2288D4510()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826ABF8);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826ABF8);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "pin-010-displayPINRequired";
  *(void *)(v6 + 8) = 26;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.displayPINRequired.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_2682680A8, (uint64_t)qword_26826ABF8, a1);
}

uint64_t sub_2288D464C()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826AC10);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826AC10);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "pin-011-deliverPINResult";
  *(void *)(v6 + 8) = 24;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.deliverPINResult.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_2682680B0, (uint64_t)qword_26826AC10, a1);
}

uint64_t sub_2288D4788()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826AC28);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826AC28);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "identity-identifier-total-public";
  *(void *)(v6 + 8) = 32;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.identityIdentifierPublic.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_2682680B8, (uint64_t)qword_26826AC28, a1);
}

uint64_t sub_2288D48C4()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826AC40);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826AC40);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "identity-001-identifier";
  *(void *)(v6 + 8) = 23;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.identityIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_2682680C0, (uint64_t)qword_26826AC40, a1);
}

uint64_t sub_2288D4A00()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826AC58);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826AC58);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "identity-session-total-public";
  *(void *)(v6 + 8) = 29;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.identitySessionPublic.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_2682680C8, (uint64_t)qword_26826AC58, a1);
}

uint64_t sub_2288D4B3C()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826AC70);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826AC70);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "identity-session-001";
  *(void *)(v6 + 8) = 20;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.identitySession.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_2682680D0, (uint64_t)qword_26826AC70, a1);
}

uint64_t sub_2288D4C78()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826AC88);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826AC88);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "identity-readRawData-total-public";
  *(void *)(v6 + 8) = 33;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.identityReadRawDataPublic.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_2682680D8, (uint64_t)qword_26826AC88, a1);
}

uint64_t sub_2288D4DB4()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826ACA0);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826ACA0);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "identity-readRawData-001-readerReady";
  *(void *)(v6 + 8) = 36;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.identityReaderReadyForRawData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_2682680E0, (uint64_t)qword_26826ACA0, a1);
}

uint64_t sub_2288D4EF0()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826ACB8);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826ACB8);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "identity-readRawData-002-deliver-response";
  *(void *)(v6 + 8) = 41;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.identityDeliverRawDataResponse.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_2682680E8, (uint64_t)qword_26826ACB8, a1);
}

uint64_t sub_2288D502C()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826ACD0);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826ACD0);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "identity-readData-total-public";
  *(void *)(v6 + 8) = 30;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.identityReadDataPublic.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_2682680F0, (uint64_t)qword_26826ACD0, a1);
}

uint64_t sub_2288D5168()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826ACE8);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826ACE8);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "identity-readData-001-readerReady";
  *(void *)(v6 + 8) = 33;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.identityReaderReadyForData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_2682680F8, (uint64_t)qword_26826ACE8, a1);
}

uint64_t sub_2288D52A4()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826AD00);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826AD00);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "identity-readData-002-deliver-response";
  *(void *)(v6 + 8) = 38;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.identityDeliverDataResponse.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268268100, (uint64_t)qword_26826AD00, a1);
}

uint64_t sub_2288D53E0()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826AD18);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826AD18);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "identity-displayOnly-001-readerReady";
  *(void *)(v6 + 8) = 36;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.identityDisplayOnlyReaderReady.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268268108, (uint64_t)qword_26826AD18, a1);
}

uint64_t sub_2288D551C()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826AD30);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826AD30);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "identity-displayOnly-002-IdentityInfo";
  *(void *)(v6 + 8) = 37;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.identityDisplayIdentityInfo.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268268110, (uint64_t)qword_26826AD30, a1);
}

uint64_t sub_2288D5658()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826AD48);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826AD48);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "identity-registration-001-showRegistrationUI";
  *(void *)(v6 + 8) = 44;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.identityShowRegistrationUI.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268268118, (uint64_t)qword_26826AD48, a1);
}

uint64_t sub_2288D5794()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826AD60);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826AD60);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "identity-registration-002-register";
  *(void *)(v6 + 8) = 34;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.identityRegister.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268268120, (uint64_t)qword_26826AD60, a1);
}

uint64_t sub_2288D58D0()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826AD78);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826AD78);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "identity-001-validate-request";
  *(void *)(v6 + 8) = 29;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.identityValidateRequest.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268268128, (uint64_t)qword_26826AD78, a1);
}

uint64_t sub_2288D5A0C()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826AD90);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826AD90);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "identity-002-preFlightCheck";
  *(void *)(v6 + 8) = 27;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.identityPreFlightCheck.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268268130, (uint64_t)qword_26826AD90, a1);
}

uint64_t sub_2288D5B48()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826ADA8);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826ADA8);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "identity-003-showTapUI";
  *(void *)(v6 + 8) = 22;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.identityShowTapUI.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268268138, (uint64_t)qword_26826ADA8, a1);
}

uint64_t sub_2288D5C84()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826ADC0);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826ADC0);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "identity-004-waiting-tap";
  *(void *)(v6 + 8) = 24;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.identityWaitingTap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268268140, (uint64_t)qword_26826ADC0, a1);
}

uint64_t sub_2288D5DC0()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826ADD8);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826ADD8);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "identity-005-connecting-holder";
  *(void *)(v6 + 8) = 30;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.identityConnectingHolder.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268268148, (uint64_t)qword_26826ADD8, a1);
}

uint64_t sub_2288D5EFC()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826ADF0);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826ADF0);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "identity-006-waiting-approval";
  *(void *)(v6 + 8) = 29;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.identityWaitingApproval.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268268150, (uint64_t)qword_26826ADF0, a1);
}

uint64_t sub_2288D6038()
{
  uint64_t v0 = sub_228915590();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_26826AE08);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26826AE08);
  sub_228915580();
  uint64_t v6 = v5 + *(int *)(v4 + 20);
  *(void *)uint64_t v6 = "identity-007-fetchMerchantDetails";
  *(void *)(v6 + 8) = 33;
  *(unsigned char *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.identityFetchMerchantDetails.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288D6174(&qword_268268158, (uint64_t)qword_26826AE08, a1);
}

uint64_t sub_2288D6174@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for CRSignpost();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);

  return sub_2288D134C(v6, a3);
}

uint64_t *initializeBufferWithCopyOfBuffer for CRSignpost(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_228915590();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    char v10 = (char *)a2 + v8;
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    v9[16] = v10[16];
  }
  return a1;
}

uint64_t destroy for CRSignpost(uint64_t a1)
{
  uint64_t v2 = sub_228915590();
  int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t initializeWithCopy for CRSignpost(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_228915590();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
  return a1;
}

uint64_t assignWithCopy for CRSignpost(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_228915590();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)v9;
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
  return a1;
}

uint64_t initializeWithTake for CRSignpost(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_228915590();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
  return a1;
}

uint64_t assignWithTake for CRSignpost(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_228915590();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRSignpost(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2288D6560);
}

uint64_t sub_2288D6560(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_228915590();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for CRSignpost(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2288D65E0);
}

uint64_t sub_2288D65E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_228915590();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_2288D6650()
{
  uint64_t result = sub_228915590();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_2288D66E4()
{
  unint64_t result = qword_26826AE30;
  if (!qword_26826AE30)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26826AE30);
  }
  return result;
}

void SecureStorage.save(at:data:)()
{
  v23[10] = *(id *)MEMORY[0x263EF8340];
  uint64_t v21 = sub_2289151B0();
  uint64_t v1 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  int v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = self;
  id v22 = objc_msgSend(v4, sel_defaultManager);
  sub_228915160();
  id v5 = objc_msgSend(v4, sel_defaultManager);
  sub_228915180();
  uint64_t v6 = (void *)sub_228915C40();
  swift_bridgeObjectRelease();
  unsigned __int8 v7 = objc_msgSend(v5, sel_fileExistsAtPath_, v6);

  if (v7) {
    goto LABEL_4;
  }
  uint64_t v20 = v0;
  uint64_t v8 = (void *)sub_228915130();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26826AE38);
  uint64_t inited = swift_initStackObject();
  char v10 = (void **)MEMORY[0x263F080A8];
  *(_OWORD *)(inited + 16) = xmmword_22891AC40;
  uint64_t v11 = *v10;
  *(void *)(inited + 32) = *v10;
  id v12 = (void *)*MEMORY[0x263F08080];
  type metadata accessor for FileProtectionType(0);
  *(void *)(inited + 64) = v13;
  *(void *)(inited + 40) = v12;
  id v14 = v11;
  id v15 = v12;
  sub_2288385DC(inited);
  type metadata accessor for FileAttributeKey(0);
  sub_2288D6B54();
  uint64_t v16 = (void *)sub_228915B90();
  swift_bridgeObjectRelease();
  v23[0] = 0;
  id v17 = v22;
  LODWORD(inited) = objc_msgSend(v22, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v8, 1, v16, v23);

  if (inited)
  {
    id v18 = v23[0];
LABEL_4:
    sub_228915280();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v21);

    return;
  }
  id v19 = v23[0];
  sub_2289150A0();

  swift_willThrow();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v21);
}

uint64_t SecureStorage.read(at:)()
{
  return sub_2289151E0();
}

Swift::OpaquePointer_optional __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SecureStorage.getDirectoryContentAbsolutePath(at:)(Swift::String at)
{
  object = at._object;
  uint64_t countAndFlagsBits = (void *)at._countAndFlagsBits;
  Swift::OpaquePointer_optional result = SecureStorage.getDirectoryContent(at:)(at);
  if (!v3)
  {
    rawValue = result.value._rawValue;
    if (result.value._rawValue)
    {
      swift_bridgeObjectRetain();
      uint64_t countAndFlagsBits = (void *)sub_2288D7064((uint64_t)rawValue, (uint64_t)countAndFlagsBits, (uint64_t)object);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t countAndFlagsBits = 0;
    }
  }
  result.value._rawValue = countAndFlagsBits;
  return result;
}

id SecureStorage.exists(at:)()
{
  id v0 = objc_msgSend(self, sel_defaultManager);
  sub_228915180();
  uint64_t v1 = (void *)sub_228915C40();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_fileExistsAtPath_, v1);

  return v2;
}

unint64_t sub_2288D6B54()
{
  unint64_t result = qword_268268210;
  if (!qword_268268210)
  {
    type metadata accessor for FileAttributeKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268268210);
  }
  return result;
}

uint64_t SecureStorage.delete(at:)()
{
  v6[1] = *(id *)MEMORY[0x263EF8340];
  id v0 = objc_msgSend(self, sel_defaultManager);
  uint64_t v1 = (void *)sub_228915130();
  v6[0] = 0;
  unsigned __int8 v2 = objc_msgSend(v0, sel_removeItemAtURL_error_, v1, v6);

  if (v2)
  {
    id v3 = v6[0];
  }
  else
  {
    id v4 = v6[0];
    sub_2289150A0();

    swift_willThrow();
  }
  return 1;
}

void *SecureStorage.getDirectoryContent(at:)()
{
  v7[1] = *(id *)MEMORY[0x263EF8340];
  id v0 = objc_msgSend(self, sel_defaultManager);
  uint64_t v1 = (void *)sub_228915130();
  v7[0] = 0;
  id v2 = objc_msgSend(v0, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v1, 0, 0, v7);

  id v3 = v7[0];
  if (v2)
  {
    sub_2289151B0();
    uint64_t v1 = (void *)sub_228915E90();
    id v4 = v3;
  }
  else
  {
    id v5 = v7[0];
    sub_2289150A0();

    swift_willThrow();
  }
  return v1;
}

Swift::OpaquePointer_optional __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SecureStorage.getDirectoryContent(at:)(Swift::String at)
{
  v9[1] = *(id *)MEMORY[0x263EF8340];
  id v1 = objc_msgSend(self, sel_defaultManager);
  id v2 = (void *)sub_228915C40();
  v9[0] = 0;
  id v3 = objc_msgSend(v1, sel_contentsOfDirectoryAtPath_error_, v2, v9);

  id v4 = v9[0];
  if (v3)
  {
    id v2 = (void *)sub_228915E90();
    id v5 = v4;
  }
  else
  {
    id v7 = v9[0];
    sub_2289150A0();

    swift_willThrow();
  }
  uint64_t v8 = v2;
  result.value._rawValue = v8;
  result.is_nil = v6;
  return result;
}

void sub_2288D6EC8()
{
}

uint64_t sub_2288D6EE0()
{
  return sub_2289151E0();
}

id sub_2288D6EFC()
{
  id v0 = objc_msgSend(self, sel_defaultManager);
  sub_228915180();
  id v1 = (void *)sub_228915C40();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_fileExistsAtPath_, v1);

  return v2;
}

uint64_t sub_2288D6F84()
{
  return 1;
}

void *sub_2288D6FA0()
{
  return SecureStorage.getDirectoryContent(at:)();
}

unint64_t sub_2288D6FB8(uint64_t a1, uint64_t a2)
{
  return (unint64_t)SecureStorage.getDirectoryContent(at:)(*(Swift::String *)&a1);
}

uint64_t sub_2288D6FD0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = (unint64_t)SecureStorage.getDirectoryContent(at:)(*(Swift::String *)&a1);
  if (!v5)
  {
    uint64_t v6 = v4;
    if (v4)
    {
      swift_bridgeObjectRetain();
      uint64_t v3 = sub_2288D7064(v6, v3, a2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      return 0;
    }
  }
  return v3;
}

uint64_t sub_2288D7064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x263F8EE78];
  if (v3)
  {
    uint64_t v13 = MEMORY[0x263F8EE78];
    sub_22886AC24(0, v3, 0);
    uint64_t v4 = v13;
    uint64_t v7 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_228915D60();
      sub_228915D60();
      swift_bridgeObjectRelease();
      unint64_t v9 = *(void *)(v13 + 16);
      unint64_t v8 = *(void *)(v13 + 24);
      if (v9 >= v8 >> 1) {
        sub_22886AC24(v8 > 1, v9 + 1, 1);
      }
      v7 += 16;
      *(void *)(v13 + 16) = v9 + 1;
      uint64_t v10 = v13 + 16 * v9;
      *(void *)(v10 + 32) = a2;
      *(void *)(v10 + 40) = a3;
      --v3;
    }
    while (v3);
  }
  return v4;
}

uint64_t dispatch thunk of Storage.save(at:data:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of Storage.read(at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of Storage.exists(at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of Storage.delete(at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))() & 1;
}

uint64_t dispatch thunk of Storage.getDirectoryContent(at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of Storage.getDirectoryContent(at:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of Storage.getDirectoryContentAbsolutePath(at:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

ValueMetadata *type metadata accessor for SecureStorage()
{
  return &type metadata for SecureStorage;
}

void MobileDriversLicenseDisplayRequest.Response.validationOutcome.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t MobileDriversLicenseDisplayRequest.Response.hash(into:)()
{
  return sub_228916760();
}

BOOL static MobileDriversLicenseDisplayRequest.Response.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t MobileDriversLicenseDisplayRequest.Response.hashValue.getter()
{
  return sub_228916780();
}

unint64_t sub_2288D7338()
{
  unint64_t result = qword_26826AE40;
  if (!qword_26826AE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826AE40);
  }
  return result;
}

unsigned char *_s8ResponseVwst_2(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2288D7458);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDisplayRequest.Response()
{
  return &type metadata for MobileDriversLicenseDisplayRequest.Response;
}

uint64_t static VASProtocol.internalize(_:)(char a1)
{
  return a1 & 1;
}

BOOL VASProtocol.init(rawValue:)(uint64_t a1)
{
  return a1 && a1 == 1;
}

unint64_t sub_2288D74C0()
{
  unint64_t result = qword_26826AE48;
  if (!qword_26826AE48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826AE48);
  }
  return result;
}

void *sub_2288D7514@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2 = *result != 1 && *result != 0;
  *(void *)a2 = *result == 1;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

ValueMetadata *type metadata accessor for VASProtocol()
{
  return &type metadata for VASProtocol;
}

uint64_t sub_2288D7554()
{
  if (*v0) {
    return 0x797469746E656469;
  }
  else {
    return 0x7961506F54706174;
  }
}

uint64_t sub_2288D7588@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2288D8874(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2288D75B0(uint64_t a1)
{
  unint64_t v2 = sub_2288D7B00();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2288D75EC(uint64_t a1)
{
  unint64_t v2 = sub_2288D7B00();

  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_2288D7628()
{
  return 0xD000000000000024;
}

uint64_t sub_2288D7644@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2288D8968(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2288D7670(uint64_t a1)
{
  unint64_t v2 = sub_2288D7B54();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2288D76AC(uint64_t a1)
{
  unint64_t v2 = sub_2288D7B54();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2288D76E8()
{
  if (*v0) {
    return 0x6B6E696C6572;
  }
  else {
    return 0x5472656E74726170;
  }
}

uint64_t sub_2288D7728@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2288D89F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2288D7750(uint64_t a1)
{
  unint64_t v2 = sub_2288D7BA8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2288D778C(uint64_t a1)
{
  unint64_t v2 = sub_2288D7BA8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t RegistrationType.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826AE50);
  uint64_t v20 = *(void *)(v3 - 8);
  uint64_t v21 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826AE58);
  uint64_t v22 = *(void *)(v6 - 8);
  uint64_t v23 = v6;
  MEMORY[0x270FA5388](v6);
  unint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826AE60);
  uint64_t v9 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *v1;
  uint64_t v24 = v1[1];
  uint64_t v25 = v12;
  int v13 = *((char *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2288D7B00();
  sub_2289167B0();
  if (v13 < 0)
  {
    char v31 = 1;
    sub_2288D7B54();
    uint64_t v18 = v27;
    sub_228916580();
    uint64_t v19 = v21;
    sub_2289165D0();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v19);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v18);
  }
  else
  {
    char v30 = 0;
    sub_2288D7BA8();
    uint64_t v14 = v27;
    sub_228916580();
    char v29 = 0;
    uint64_t v15 = v23;
    uint64_t v16 = v26;
    sub_2289165D0();
    if (!v16)
    {
      char v28 = 1;
      sub_2289165E0();
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v15);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v14);
  }
}

unint64_t sub_2288D7B00()
{
  unint64_t result = qword_26826AE68;
  if (!qword_26826AE68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826AE68);
  }
  return result;
}

unint64_t sub_2288D7B54()
{
  unint64_t result = qword_26826AE70;
  if (!qword_26826AE70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826AE70);
  }
  return result;
}

unint64_t sub_2288D7BA8()
{
  unint64_t result = qword_26826AE78;
  if (!qword_26826AE78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826AE78);
  }
  return result;
}

uint64_t RegistrationType.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  char v31 = a2;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826AE80);
  uint64_t v32 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826AE88);
  uint64_t v33 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826AE90);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  uint64_t v35 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_2288D7B00();
  uint64_t v13 = v36;
  sub_2289167A0();
  if (!v13)
  {
    uint64_t v14 = v34;
    uint64_t v36 = v9;
    uint64_t v15 = sub_228916570();
    if (*(void *)(v15 + 16) == 1)
    {
      if (*(unsigned char *)(v15 + 32))
      {
        char v40 = 1;
        sub_2288D7B54();
        uint64_t v16 = v4;
        sub_2289164C0();
        uint64_t v22 = sub_228916520();
        uint64_t v24 = v23;
        (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v14);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v8);
        char v25 = 0x80;
      }
      else
      {
        char v39 = 0;
        sub_2288D7BA8();
        sub_2289164C0();
        char v38 = 0;
        uint64_t v32 = sub_228916520();
        uint64_t v24 = v26;
        uint64_t v34 = (uint64_t)v11;
        char v37 = 1;
        char v27 = sub_228916530();
        uint64_t v28 = v36;
        char v29 = v27;
        (*(void (**)(char *, uint64_t))(v33 + 8))(v7, v5);
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v34, v8);
        char v25 = v29 & 1;
        uint64_t v22 = v32;
      }
      char v30 = v31;
      *char v31 = v22;
      v30[1] = v24;
      *((unsigned char *)v30 + 16) = v25;
    }
    else
    {
      id v17 = v11;
      uint64_t v18 = sub_228916360();
      swift_allocError();
      uint64_t v20 = v19;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26826B190);
      *uint64_t v20 = &type metadata for RegistrationType;
      sub_2289164D0();
      sub_228916350();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v18 - 8) + 104))(v20, *MEMORY[0x263F8DCB0], v18);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v17, v8);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
}

uint64_t sub_2288D814C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return RegistrationType.init(from:)(a1, a2);
}

uint64_t sub_2288D8164(void *a1)
{
  return RegistrationType.encode(to:)(a1);
}

uint64_t sub_2288D8180()
{
  return swift_bridgeObjectRetain();
}

uint64_t destroy for RegistrationType()
{
  return sub_2288D8198();
}

uint64_t sub_2288D8198()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s15ProximityReader16RegistrationTypeOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_2288D8180();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for RegistrationType(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_2288D8180();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_2288D8198();
  return a1;
}

uint64_t assignWithTake for RegistrationType(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_2288D8198();
  return a1;
}

uint64_t getEnumTagSinglePayload for RegistrationType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7F && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 127);
  }
  unsigned int v3 = (*(unsigned char *)(a1 + 16) & 0x7E | (*(unsigned __int8 *)(a1 + 16) >> 7)) ^ 0x7F;
  if (v3 >= 0x7E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for RegistrationType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 127;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(unsigned char *)(result + 16) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

uint64_t sub_2288D8330(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16) >> 7;
}

uint64_t sub_2288D833C(uint64_t result)
{
  *(unsigned char *)(result + 16) &= ~0x80u;
  return result;
}

uint64_t sub_2288D834C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = *(unsigned char *)(result + 16) & 1 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for RegistrationType()
{
  return &type metadata for RegistrationType;
}

ValueMetadata *type metadata accessor for RegistrationType.CodingKeys()
{
  return &type metadata for RegistrationType.CodingKeys;
}

unsigned char *_s15ProximityReader16RegistrationTypeO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2288D8450);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RegistrationType.TapToPayCodingKeys()
{
  return &type metadata for RegistrationType.TapToPayCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for RegistrationType.IdentityCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2288D8524);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for RegistrationType.IdentityCodingKeys()
{
  return &type metadata for RegistrationType.IdentityCodingKeys;
}

unint64_t sub_2288D8560()
{
  unint64_t result = qword_26826AE98;
  if (!qword_26826AE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826AE98);
  }
  return result;
}

unint64_t sub_2288D85B8()
{
  unint64_t result = qword_26826AEA0;
  if (!qword_26826AEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826AEA0);
  }
  return result;
}

unint64_t sub_2288D8610()
{
  unint64_t result = qword_26826AEA8;
  if (!qword_26826AEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826AEA8);
  }
  return result;
}

unint64_t sub_2288D8668()
{
  unint64_t result = qword_26826AEB0;
  if (!qword_26826AEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826AEB0);
  }
  return result;
}

unint64_t sub_2288D86C0()
{
  unint64_t result = qword_26826AEB8;
  if (!qword_26826AEB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826AEB8);
  }
  return result;
}

unint64_t sub_2288D8718()
{
  unint64_t result = qword_26826AEC0;
  if (!qword_26826AEC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826AEC0);
  }
  return result;
}

unint64_t sub_2288D8770()
{
  unint64_t result = qword_26826AEC8;
  if (!qword_26826AEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826AEC8);
  }
  return result;
}

unint64_t sub_2288D87C8()
{
  unint64_t result = qword_26826AED0;
  if (!qword_26826AED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826AED0);
  }
  return result;
}

unint64_t sub_2288D8820()
{
  unint64_t result = qword_26826AED8;
  if (!qword_26826AED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826AED8);
  }
  return result;
}

uint64_t sub_2288D8874(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7961506F54706174 && a2 == 0xE800000000000000;
  if (v2 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x797469746E656469 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_228916660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2288D8968(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000024 && a2 == 0x800000022892A0E0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_228916660();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_2288D89F0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x5472656E74726170 && a2 == 0xEC0000006E656B6FLL;
  if (v2 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6B6E696C6572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_228916660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

BOOL static MobileDriversLicenseDisplayRequest.Response.ValidationOutcome.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t MobileDriversLicenseDisplayRequest.Response.ValidationOutcome.hash(into:)()
{
  return sub_228916760();
}

uint64_t MobileDriversLicenseDisplayRequest.Response.ValidationOutcome.hashValue.getter()
{
  return sub_228916780();
}

unint64_t sub_2288D8B80()
{
  unint64_t result = qword_26826AEE0;
  if (!qword_26826AEE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826AEE0);
  }
  return result;
}

unsigned char *_s17ValidationOutcomeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2288D8CA0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDisplayRequest.Response.ValidationOutcome()
{
  return &type metadata for MobileDriversLicenseDisplayRequest.Response.ValidationOutcome;
}

uint64_t static PINConfiguration.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t PINConfiguration.digest.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15ProximityReader16PINConfiguration_digest);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PINConfiguration.allowPINBypass.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ProximityReader16PINConfiguration_allowPINBypass);
}

uint64_t PINConfiguration.privacyLock.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ProximityReader16PINConfiguration_privacyLock);
}

uint64_t PINConfiguration.merchantName.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15ProximityReader16PINConfiguration_merchantName);
  swift_bridgeObjectRetain();
  return v1;
}

id PINConfiguration.amount.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC15ProximityReader16PINConfiguration_amount);
}

uint64_t PINConfiguration.currencyCode.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15ProximityReader16PINConfiguration_currencyCode);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PINConfiguration.countryCode.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC15ProximityReader16PINConfiguration_countryCode);
}

uint64_t PINConfiguration.customerLocaleIdentifier.getter()
{
  return sub_2288D8DF4(&OBJC_IVAR____TtC15ProximityReader16PINConfiguration_customerLocaleIdentifier);
}

uint64_t PINConfiguration.cardPreferredLocaleIdentifier.getter()
{
  return sub_2288D8DF4(&OBJC_IVAR____TtC15ProximityReader16PINConfiguration_cardPreferredLocaleIdentifier);
}

uint64_t sub_2288D8DF4(void *a1)
{
  uint64_t v2 = *(void *)(v1 + *a1);
  swift_bridgeObjectRetain();
  return v2;
}

id PINConfiguration.__allocating_init(digest:allowPINBypass:privacyLock:merchantName:amount:currencyCode:countryCode:customerLocaleIdentifier:cardPreferredLocaleIdentifier:)(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v22 = objc_allocWithZone(v14);
  uint64_t v23 = &v22[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_digest];
  *uint64_t v23 = a1;
  v23[1] = a2;
  v22[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_allowPINBypass] = a3;
  v22[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_privacyLock] = a4;
  uint64_t v24 = &v22[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_merchantName];
  *uint64_t v24 = a5;
  v24[1] = a6;
  *(void *)&v22[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_amount] = a7;
  char v25 = &v22[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_currencyCode];
  *char v25 = a8;
  v25[1] = a9;
  *(void *)&v22[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_countryCode] = a10;
  uint64_t v26 = &v22[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_customerLocaleIdentifier];
  *uint64_t v26 = a11;
  v26[1] = a12;
  char v27 = &v22[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_cardPreferredLocaleIdentifier];
  *char v27 = a13;
  v27[1] = a14;
  v30.receiver = v22;
  v30.super_class = v14;
  return objc_msgSendSuper2(&v30, sel_init);
}

id PINConfiguration.init(digest:allowPINBypass:privacyLock:merchantName:amount:currencyCode:countryCode:customerLocaleIdentifier:cardPreferredLocaleIdentifier:)(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v23 = &v14[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_digest];
  *uint64_t v23 = a1;
  v23[1] = a2;
  v14[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_allowPINBypass] = a3;
  v14[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_privacyLock] = a4;
  uint64_t v24 = &v14[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_merchantName];
  *uint64_t v24 = a5;
  v24[1] = a6;
  *(void *)&v14[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_amount] = a7;
  char v25 = &v14[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_currencyCode];
  *char v25 = a8;
  v25[1] = a9;
  *(void *)&v14[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_countryCode] = a10;
  uint64_t v26 = &v14[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_customerLocaleIdentifier];
  *uint64_t v26 = a11;
  v26[1] = a12;
  char v27 = &v14[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_cardPreferredLocaleIdentifier];
  *char v27 = a13;
  v27[1] = a14;
  v30.receiver = v14;
  v30.super_class = ObjectType;
  return objc_msgSendSuper2(&v30, sel_init);
}

Swift::Void __swiftcall PINConfiguration.encode(with:)(NSCoder with)
{
  int v3 = (void *)sub_228915C40();
  unsigned int v4 = (void *)sub_228915C40();
  [(objc_class *)with.super.isa encodeObject:v3 forKey:v4];

  uint64_t v5 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ProximityReader16PINConfiguration_allowPINBypass);
  unsigned int v6 = (void *)sub_228915C40();
  [(objc_class *)with.super.isa encodeBool:v5 forKey:v6];

  uint64_t v7 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ProximityReader16PINConfiguration_privacyLock);
  uint64_t v8 = (void *)sub_228915C40();
  [(objc_class *)with.super.isa encodeBool:v7 forKey:v8];

  uint64_t v9 = (void *)sub_228915C40();
  uint64_t v10 = (void *)sub_228915C40();
  [(objc_class *)with.super.isa encodeObject:v9 forKey:v10];

  uint64_t v11 = *(void *)(v1 + OBJC_IVAR____TtC15ProximityReader16PINConfiguration_amount);
  uint64_t v12 = (void *)sub_228915C40();
  [(objc_class *)with.super.isa encodeObject:v11 forKey:v12];

  uint64_t v13 = (void *)sub_228915C40();
  uint64_t v14 = (void *)sub_228915C40();
  [(objc_class *)with.super.isa encodeObject:v13 forKey:v14];

  uint64_t v15 = *(void *)(v1 + OBJC_IVAR____TtC15ProximityReader16PINConfiguration_countryCode);
  uint64_t v16 = (void *)sub_228915C40();
  [(objc_class *)with.super.isa encodeInteger:v15 forKey:v16];

  if (*(void *)(v1 + OBJC_IVAR____TtC15ProximityReader16PINConfiguration_customerLocaleIdentifier + 8)) {
    uint64_t v17 = sub_228915C40();
  }
  else {
    uint64_t v17 = 0;
  }
  uint64_t v18 = (void *)sub_228915C40();
  [(objc_class *)with.super.isa encodeObject:v17 forKey:v18];
  swift_unknownObjectRelease();

  if (*(void *)(v1 + OBJC_IVAR____TtC15ProximityReader16PINConfiguration_cardPreferredLocaleIdentifier + 8)) {
    uint64_t v19 = sub_228915C40();
  }
  else {
    uint64_t v19 = 0;
  }
  id v20 = (id)sub_228915C40();
  [(objc_class *)with.super.isa encodeObject:v19 forKey:v20];
  swift_unknownObjectRelease();
}

id PINConfiguration.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return PINConfiguration.init(coder:)(a1);
}

id PINConfiguration.init(coder:)(void *a1)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v4);
  unsigned int v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_228811060(0, (unint64_t *)&qword_268268250);
  uint64_t v7 = v1;
  uint64_t v8 = sub_228916120();
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    uint64_t v56 = sub_228915C70();
    uint64_t v11 = v10;

    uint64_t v12 = (void *)sub_228915C40();
    unsigned int v55 = objc_msgSend(a1, sel_decodeBoolForKey_, v12);

    uint64_t v13 = (void *)sub_228915C40();
    unsigned __int8 v14 = objc_msgSend(a1, sel_decodeBoolForKey_, v13);

    uint64_t v15 = sub_228916120();
    if (v15)
    {
      uint64_t v16 = (void *)v15;
      uint64_t v57 = (objc_class *)ObjectType;
      uint64_t v54 = sub_228915C70();
      uint64_t v18 = v17;

      sub_228811060(0, (unint64_t *)&unk_268269988);
      uint64_t v19 = sub_228916120();
      if (v19)
      {
        id v20 = (void *)v19;
        uint64_t v21 = sub_228916120();
        if (v21)
        {
          uint64_t v22 = (void *)v21;
          uint64_t v53 = sub_228915C70();
          uint64_t v24 = v23;

          char v25 = (void *)sub_228915C40();
          id v26 = objc_msgSend(a1, sel_decodeIntegerForKey_, v25);

          char v27 = (uint64_t *)&v7[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_digest];
          *char v27 = v56;
          v27[1] = v11;
          v7[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_allowPINBypass] = v55;
          v7[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_privacyLock] = v14;
          uint64_t v28 = (uint64_t *)&v7[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_merchantName];
          *uint64_t v28 = v54;
          v28[1] = v18;
          *(void *)&v7[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_amount] = v20;
          char v29 = (uint64_t *)&v7[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_currencyCode];
          *char v29 = v53;
          v29[1] = v24;
          *(void *)&v7[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_countryCode] = v26;
          id v30 = v20;
          uint64_t v31 = sub_228916120();
          if (v31)
          {
            uint64_t v32 = (void *)v31;
            uint64_t v33 = sub_228915C70();
            uint64_t v35 = v34;
          }
          else
          {
            uint64_t v33 = 0;
            uint64_t v35 = 0;
          }
          uint64_t v44 = v57;
          unsigned __int8 v45 = (uint64_t *)&v7[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_customerLocaleIdentifier];
          uint64_t *v45 = v33;
          v45[1] = v35;
          uint64_t v46 = sub_228916120();
          if (v46)
          {
            id v47 = (void *)v46;
            uint64_t v48 = sub_228915C70();
            uint64_t v50 = v49;
          }
          else
          {

            uint64_t v48 = 0;
            uint64_t v50 = 0;
          }
          id v51 = (uint64_t *)&v7[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_cardPreferredLocaleIdentifier];
          *id v51 = v48;
          v51[1] = v50;

          v58.receiver = v7;
          v58.super_class = v44;
          id v42 = objc_msgSendSuper2(&v58, sel_init);

          return v42;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }

  if (qword_268267F10 != -1) {
    swift_once();
  }
  uint64_t v36 = __swift_project_value_buffer(v4, (uint64_t)qword_268283D98);
  sub_22880AB38(v36, (uint64_t)v6);
  uint64_t v37 = sub_2289155C0();
  uint64_t v38 = *(void *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v6, 1, v37) == 1)
  {

    sub_22880ABA0((uint64_t)v6);
  }
  else
  {
    char v39 = sub_2289155A0();
    os_log_type_t v40 = sub_228916050();
    if (os_log_type_enabled(v39, v40))
    {
      os_log_type_t v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v41 = 0;
      _os_log_impl(&dword_228806000, v39, v40, "PINConfiguration | Failed to decode object", v41, 2u);
      MEMORY[0x22A6A1090](v41, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v38 + 8))(v6, v37);
  }
  swift_deallocPartialClassInstance();
  return 0;
}

id PINConfiguration.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void PINConfiguration.init()()
{
}

id PINConfiguration.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for PINConfiguration()
{
  return self;
}

uint64_t method lookup function for PINConfiguration(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for PINConfiguration);
}

uint64_t dispatch thunk of PINConfiguration.__allocating_init(digest:allowPINBypass:privacyLock:merchantName:amount:currencyCode:countryCode:customerLocaleIdentifier:cardPreferredLocaleIdentifier:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of PINConfiguration.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t sub_2288D9C14(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000010;
  unint64_t v3 = 0x8000000228925D50;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000010;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x7665447974706D45;
      unint64_t v3 = 0xED00004449656369;
      break;
    case 2:
      unint64_t v5 = 0xD000000000000012;
      unint64_t v3 = 0x8000000228925D70;
      break;
    case 3:
      unint64_t v5 = 0x7865746E6F436F4ELL;
      unint64_t v3 = 0xE900000000000074;
      break;
    case 4:
      unint64_t v5 = 0x6167656C65446F4ELL;
      unint64_t v3 = 0xEA00000000006574;
      break;
    default:
      break;
  }
  unint64_t v6 = 0x8000000228925D50;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xED00004449656369;
      if (v5 == 0x7665447974706D45) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0x8000000228925D70;
      if (v5 != 0xD000000000000012) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v2 = 0x7865746E6F436F4ELL;
      unint64_t v6 = 0xE900000000000074;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xEA00000000006574;
      if (v5 != 0x6167656C65446F4ELL) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_228916660();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_2288D9E04(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEB00000000656D61;
  uint64_t v3 = 0x4E65636976726573;
  uint64_t v4 = a1;
  unint64_t v5 = 0x4E65636976726573;
  unint64_t v6 = 0xEB00000000656D61;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x496E6F6973736573;
      unint64_t v6 = 0xE900000000000044;
      break;
    case 2:
      unint64_t v5 = 0x6863726172656968;
      unint64_t v6 = 0xEE006E656B6F5479;
      break;
    case 3:
      unint64_t v6 = 0x8000000228925E90;
      unint64_t v5 = 0xD000000000000011;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE900000000000044;
      if (v5 == 0x496E6F6973736573) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v3 = 0x6863726172656968;
      unint64_t v2 = 0xEE006E656B6F5479;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0x8000000228925E90;
      if (v5 == 0xD000000000000011) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_228916660();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_2288D9FCC()
{
  unint64_t v0 = XPCUserInfoKey.rawValue.getter();
  uint64_t v2 = v1;
  if (v0 == XPCUserInfoKey.rawValue.getter() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_228916660();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_2288DA064()
{
  return sub_228916780();
}

uint64_t sub_2288DA180()
{
  return sub_228916780();
}

uint64_t sub_2288DA278()
{
  sub_228915D10();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2288DA374()
{
  return sub_228916780();
}

uint64_t sub_2288DA468()
{
  return sub_228916780();
}

uint64_t sub_2288DA580(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268269EC0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2682686C8);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  unsigned __int8 v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1, 1, v11) == 1)
  {
    sub_2288110C0(a1, &qword_268269EC0);
    sub_228839E6C(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_2288110C0((uint64_t)v10, &qword_268269EC0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v14, a1, v11);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    sub_22883A590((uint64_t)v14, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_2288DA760(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24))
  {
    sub_22881122C((_OWORD *)a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_22883AA3C(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_2288110C0(a1, &qword_268268500);
    sub_22883A2FC(a2, a3, v9);
    swift_bridgeObjectRelease();
    return sub_2288110C0((uint64_t)v9, &qword_268268500);
  }
}

uint64_t sub_2288DA838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826A048);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for AnalyticsReporter();
  __n128 v12 = MEMORY[0x270FA5388](v11);
  unsigned __int8 v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, __n128))(v15 + 48))(a1, 1, v12) == 1)
  {
    sub_2288110C0(a1, &qword_26826A048);
    sub_22883A400(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_2288110C0((uint64_t)v10, &qword_26826A048);
  }
  else
  {
    sub_22883AD68(a1, (uint64_t)v14);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    sub_22883AB90((uint64_t)v14, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v4 = v19;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_2288DA9F4(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268268D70);
    uint64_t v2 = sub_228916470();
  }
  else
  {
    uint64_t v2 = MEMORY[0x263F8EE80];
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    uint64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_2288111D0(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(void *)&long long v39 = v19;
    *((void *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(void *)&v37[0] = v19;
    *((void *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_22881122C(v38, v32);
    long long v33 = v29;
    long long v34 = v30;
    uint64_t v35 = v31;
    sub_22881122C(v32, v36);
    long long v29 = v33;
    long long v30 = v34;
    uint64_t v31 = v35;
    sub_22881122C(v36, v37);
    sub_22881122C(v37, &v33);
    uint64_t result = sub_2289162E0();
    uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = *(void *)(v2 + 48) + 40 * v9;
    *(_OWORD *)uint64_t v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(void *)(v10 + 32) = v31;
    uint64_t result = (uint64_t)sub_22881122C(&v33, (_OWORD *)(*(void *)(v2 + 56) + 32 * v9));
    ++*(void *)(v2 + 16);
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_22886D984();
    return v2;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

unint64_t sub_2288DADBC(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2682698E0);
    uint64_t v2 = (void *)sub_228916470();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
  }
  uint64_t v35 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v34 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v47;
  char v7 = v45;
  int64_t v8 = &v41;
  unint64_t v9 = &v43;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t v36 = 0;
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v19 = v36 + 1;
  if (__OFADD__(v36, 1)) {
    goto LABEL_35;
  }
  if (v19 >= v34) {
    goto LABEL_32;
  }
  unint64_t v20 = *(void *)(v35 + 8 * v19);
  int64_t v21 = v36 + 1;
  if (!v20)
  {
    int64_t v21 = v36 + 2;
    if (v36 + 2 >= v34) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v35 + 8 * v21);
    if (!v20)
    {
      int64_t v21 = v36 + 3;
      if (v36 + 3 >= v34) {
        goto LABEL_32;
      }
      unint64_t v20 = *(void *)(v35 + 8 * v21);
      if (!v20)
      {
        int64_t v21 = v36 + 4;
        if (v36 + 4 >= v34) {
          goto LABEL_32;
        }
        unint64_t v20 = *(void *)(v35 + 8 * v21);
        if (!v20)
        {
          int64_t v22 = v36 + 5;
          if (v36 + 5 < v34)
          {
            unint64_t v20 = *(void *)(v35 + 8 * v22);
            if (v20)
            {
              int64_t v21 = v36 + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v21 = v22 + 1;
              if (__OFADD__(v22, 1)) {
                goto LABEL_36;
              }
              if (v21 >= v34) {
                break;
              }
              unint64_t v20 = *(void *)(v35 + 8 * v21);
              ++v22;
              if (v20) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_22886D984();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  int64_t v36 = v21;
  uint64_t v37 = (v20 - 1) & v20;
  for (unint64_t i = __clz(__rbit64(v20)) + (v21 << 6); ; unint64_t i = __clz(__rbit64(v5)) | (v36 << 6))
  {
    char v23 = (uint64_t *)(*(void *)(v1 + 48) + 16 * i);
    uint64_t v25 = *v23;
    uint64_t v24 = v23[1];
    sub_2288111D0(*(void *)(v1 + 56) + 32 * i, (uint64_t)v6);
    *(void *)&long long v46 = v25;
    *((void *)&v46 + 1) = v24;
    v44[2] = v46;
    v45[0] = v47[0];
    v45[1] = v47[1];
    uint64_t v39 = v25;
    uint64_t v40 = v24;
    sub_22881122C(v7, &v38);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26826A0C8);
    swift_dynamicCast();
    uint64_t v27 = v39;
    uint64_t v26 = v40;
    sub_22881122C(v8, v9);
    sub_22881122C(v9, v44);
    sub_22881122C(v44, &v42);
    unint64_t result = sub_228816C80(v27, v26);
    unint64_t v28 = result;
    if (v29)
    {
      unint64_t v11 = v9;
      unint64_t v12 = v8;
      uint64_t v13 = v1;
      unint64_t v14 = v7;
      int64_t v15 = v6;
      int64_t v16 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      uint64_t *v16 = v27;
      v16[1] = v26;
      uint64_t v6 = v15;
      char v7 = v14;
      uint64_t v1 = v13;
      int64_t v8 = v12;
      unint64_t v9 = v11;
      uint64_t v17 = (_OWORD *)(v2[7] + 32 * v28);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
      unint64_t result = (unint64_t)sub_22881122C(&v42, v17);
      unint64_t v5 = v37;
      if (!v37) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v30 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v30 = v27;
    v30[1] = v26;
    unint64_t result = (unint64_t)sub_22881122C(&v42, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v31 = v2[2];
    BOOL v32 = __OFADD__(v31, 1);
    uint64_t v33 = v31 + 1;
    if (v32) {
      goto LABEL_34;
    }
    v2[2] = v33;
    unint64_t v5 = v37;
    if (!v37) {
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v37 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

unint64_t sub_2288DB168(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2682698E0);
    uint64_t v2 = (void *)sub_228916470();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
  }
  uint64_t v32 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v31 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = &v37;
  char v7 = &v39;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  uint64_t v10 = MEMORY[0x263F8EE50] + 8;
  uint64_t v11 = MEMORY[0x263F8EE58] + 8;
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v20 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v20 >= v31) {
    goto LABEL_32;
  }
  unint64_t v21 = *(void *)(v32 + 8 * v20);
  int64_t v22 = i + 1;
  if (!v21)
  {
    int64_t v22 = i + 2;
    if (i + 2 >= v31) {
      goto LABEL_32;
    }
    unint64_t v21 = *(void *)(v32 + 8 * v22);
    if (!v21)
    {
      int64_t v22 = i + 3;
      if (i + 3 >= v31) {
        goto LABEL_32;
      }
      unint64_t v21 = *(void *)(v32 + 8 * v22);
      if (!v21)
      {
        int64_t v22 = i + 4;
        if (i + 4 >= v31) {
          goto LABEL_32;
        }
        unint64_t v21 = *(void *)(v32 + 8 * v22);
        if (!v21)
        {
          int64_t v23 = i + 5;
          if (i + 5 < v31)
          {
            unint64_t v21 = *(void *)(v32 + 8 * v23);
            if (v21)
            {
              int64_t v22 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v22 = v23 + 1;
              if (__OFADD__(v23, 1)) {
                goto LABEL_36;
              }
              if (v22 >= v31) {
                break;
              }
              unint64_t v21 = *(void *)(v32 + 8 * v22);
              ++v23;
              if (v21) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_22886D984();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  uint64_t v34 = (v21 - 1) & v21;
  unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
  for (i = v22; ; unint64_t v19 = __clz(__rbit64(v5)) | (i << 6))
  {
    uint64_t v24 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v19);
    uint64_t v35 = *v24;
    uint64_t v36 = v24[1];
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    sub_22881122C(v6, v7);
    sub_22881122C(v7, v40);
    sub_22881122C(v40, &v38);
    unint64_t result = sub_228816C80(v35, v36);
    unint64_t v25 = result;
    if (v26)
    {
      int64_t v33 = i;
      unint64_t v12 = v7;
      uint64_t v13 = v6;
      uint64_t v14 = v1;
      uint64_t v15 = v11;
      uint64_t v16 = v10;
      uint64_t v17 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *uint64_t v17 = v35;
      v17[1] = v36;
      uint64_t v10 = v16;
      uint64_t v11 = v15;
      uint64_t v1 = v14;
      uint64_t v6 = v13;
      char v7 = v12;
      int64_t i = v33;
      uint64_t v18 = (_OWORD *)(v2[7] + 32 * v25);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
      unint64_t result = (unint64_t)sub_22881122C(&v38, v18);
      unint64_t v5 = v34;
      if (!v34) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v27 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v27 = v35;
    v27[1] = v36;
    unint64_t result = (unint64_t)sub_22881122C(&v38, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v28 = v2[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_34;
    }
    v2[2] = v30;
    unint64_t v5 = v34;
    if (!v34) {
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v34 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t AnalyticsReporter.init(serviceName:hierarchyToken:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v75 = a3;
  uint64_t v76 = a1;
  uint64_t v72 = a5;
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v68);
  uint64_t v69 = (uint64_t)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_228915330();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for AnalyticsReporter();
  uint64_t v70 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (uint64_t *)((char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_228915320();
  uint64_t v15 = sub_228915300();
  uint64_t v17 = v16;
  uint64_t v18 = *(void (**)(char *, uint64_t))(v9 + 8);
  v18(v11, v8);
  v14[3] = v15;
  v14[4] = v17;
  uint64_t v19 = v76;
  v14[1] = v76;
  v14[2] = a2;
  uint64_t v71 = v12;
  uint64_t v20 = *(int *)(v12 + 32);
  v77 = v14;
  unint64_t v21 = (char *)v14 + v20;
  uint64_t v22 = a2;
  swift_bridgeObjectRetain();
  sub_2289152E0();
  if (a4)
  {
    uint64_t v23 = v75;
  }
  else
  {
    sub_228915320();
    uint64_t v23 = sub_228915300();
    a4 = v24;
    v18(v11, v8);
  }
  unint64_t v25 = v77;
  v77[5] = v23;
  v25[6] = a4;
  uint64_t v26 = v22;
  if (v19 == 0x7265566F54706174 && v22 == 0xEB00000000796669
    || (sub_228916660() & 1) != 0
    || v19 == 0xD000000000000016 && v22 == 0x800000022892B700
    || (sub_228916660() & 1) != 0)
  {
    unint64_t v74 = 0xE600000000000000;
    uint64_t v73 = 0x74656C6C6177;
    int v27 = 55;
  }
  else
  {
    unint64_t v74 = 0xE900000000000073;
    uint64_t v73 = 0x6F705F74705F7078;
    int v27 = 31;
  }
  LODWORD(v75) = v27;
  if (qword_268268160 != -1) {
    swift_once();
  }
  uint64_t result = *MEMORY[0x263F62A50];
  if (!*MEMORY[0x263F62A50])
  {
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v29 = v19;
  uint64_t v30 = qword_26826AF38;
  uint64_t v31 = sub_228915C70();
  uint64_t v33 = v32;
  uint64_t v34 = self;
  swift_bridgeObjectRetain();
  id v35 = objc_msgSend(v34, sel_mainBundle);
  id v36 = objc_msgSend(v35, sel_bundleIdentifier);

  uint64_t v37 = MEMORY[0x263F8D310];
  if (v36)
  {
    uint64_t v38 = sub_228915C70();
    unint64_t v40 = v39;

    uint64_t v81 = v37;
    if (v40) {
      goto LABEL_19;
    }
    uint64_t v38 = 0;
  }
  else
  {
    uint64_t v38 = 0;
    uint64_t v81 = MEMORY[0x263F8D310];
  }
  unint64_t v40 = 0xE000000000000000;
LABEL_19:
  *(void *)&long long v80 = v38;
  *((void *)&v80 + 1) = v40;
  sub_22881122C(&v80, v79);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v78 = v30;
  sub_22883AA3C(v79, v31, v33, isUniquelyReferenced_nonNull_native);
  uint64_t v42 = v78;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *MEMORY[0x263F62A60];
  if (!*MEMORY[0x263F62A60])
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v43 = sub_228915C70();
  uint64_t v45 = v44;
  uint64_t v81 = MEMORY[0x263F8E548];
  LODWORD(v80) = v75;
  sub_22881122C(&v80, v79);
  char v46 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v78 = v42;
  sub_22883AA3C(v79, v43, v45, v46);
  uint64_t v47 = v78;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26826AF40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_228918720;
  uint64_t result = *MEMORY[0x263F62AB8];
  if (!*MEMORY[0x263F62AB8])
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  *(void *)(inited + 32) = sub_228915C70();
  *(void *)(inited + 40) = v49;
  *(void *)(inited + 72) = v37;
  unint64_t v50 = v74;
  *(void *)(inited + 48) = v73;
  *(void *)(inited + 56) = v50;
  uint64_t result = *MEMORY[0x263F62AC8];
  if (!*MEMORY[0x263F62AC8])
  {
LABEL_36:
    __break(1u);
    return result;
  }
  *(void *)(inited + 80) = sub_228915C70();
  *(void *)(inited + 88) = v51;
  *(void *)(inited + 120) = v37;
  *(void *)(inited + 96) = v29;
  *(void *)(inited + 104) = v26;
  unint64_t v52 = sub_2288384A4(inited);
  sub_2288DA9F4(v47);
  swift_bridgeObjectRelease();
  sub_2288DA9F4(v52);
  swift_bridgeObjectRelease();
  id v53 = objc_allocWithZone(MEMORY[0x263F62A08]);
  uint64_t v54 = (void *)sub_228915B90();
  swift_bridgeObjectRelease();
  unsigned int v55 = (void *)sub_228915B90();
  swift_bridgeObjectRelease();
  uint64_t v56 = (void *)sub_228915E80();
  id v57 = objc_msgSend(v53, sel_initWithSessionInfo_userInfo_frameworksToCheck_, v54, v55, v56);

  if (v57)
  {
    uint64_t v58 = (uint64_t)v77;
    void *v77 = v57;
    uint64_t v59 = v72;
    sub_2288AE89C(v58, v72);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v70 + 56))(v59, 0, 1, v71);
    return sub_2288AFCF0(v58);
  }
  else
  {
    if (qword_268267F30 != -1) {
      swift_once();
    }
    uint64_t v60 = __swift_project_value_buffer(v68, (uint64_t)qword_268283DF8);
    uint64_t v61 = v69;
    sub_22880AB38(v60, v69);
    uint64_t v62 = sub_2289155C0();
    uint64_t v63 = *(void *)(v62 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v61, 1, v62) == 1)
    {
      sub_2288110C0(v61, (uint64_t *)&unk_2682684D0);
    }
    else
    {
      uint64_t v64 = sub_2289155A0();
      os_log_type_t v65 = sub_228916050();
      if (os_log_type_enabled(v64, v65))
      {
        uint64_t v66 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v66 = 0;
        _os_log_impl(&dword_228806000, v64, v65, "Could not create the RTCReporting object", v66, 2u);
        MEMORY[0x22A6A1090](v66, -1, -1);
      }

      (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v61, v62);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v67 = sub_2289152F0();
    (*(void (**)(char *, uint64_t))(*(void *)(v67 - 8) + 8))(v21, v67);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v70 + 56))(v72, 1, 1, v71);
  }
}

uint64_t type metadata accessor for AnalyticsReporter()
{
  uint64_t result = qword_26826AF80;
  if (!qword_26826AF80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t AnalyticsReporter.sessionDuration.getter()
{
  uint64_t v0 = sub_2289152F0();
  uint64_t v17 = *(void *)(v0 - 8);
  uint64_t v18 = v0;
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_228915490();
  uint64_t v3 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  unint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_228914F70();
  uint64_t v6 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_228915470();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26826A568);
  uint64_t v9 = sub_228915480();
  uint64_t v10 = *(void *)(v9 - 8);
  unint64_t v11 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_22891AC40;
  (*(void (**)(unint64_t, void, uint64_t))(v10 + 104))(v12 + v11, *MEMORY[0x263F078C8], v9);
  sub_2288DDDCC(v12);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  type metadata accessor for AnalyticsReporter();
  sub_2289152E0();
  sub_228915440();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v2, v18);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v16);
  uint64_t v13 = sub_228914F50();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v15);
  return v13;
}

id sub_2288DC0F8(uint64_t a1)
{
  v32[23] = *(id *)MEMORY[0x263EF8340];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v3);
  unint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26826AF40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_228922A40;
  if (!*MEMORY[0x263F62A18])
  {
    __break(1u);
    goto LABEL_17;
  }
  *(void *)(inited + 32) = sub_228915C70();
  *(void *)(inited + 40) = v7;
  uint64_t v8 = MEMORY[0x263F8E888];
  *(void *)(inited + 72) = MEMORY[0x263F8E888];
  *(_WORD *)(inited + 48) = 1;
  if (!*MEMORY[0x263F62A30])
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
  }
  *(void *)(inited + 80) = sub_228915C70();
  *(void *)(inited + 88) = v9;
  *(void *)(inited + 120) = v8;
  *(_WORD *)(inited + 96) = 100;
  if (!*MEMORY[0x263F62A28]) {
    goto LABEL_18;
  }
  *(void *)(inited + 128) = sub_228915C70();
  *(void *)(inited + 136) = v10;
  *(void *)(inited + 168) = __swift_instantiateConcreteTypeFromMangledName(&qword_268269FC0);
  *(void *)(inited + 144) = a1;
  swift_bridgeObjectRetain();
  unint64_t v11 = sub_2288384A4(inited);
  uint64_t v12 = *v1;
  sub_2288DA9F4(v11);
  swift_bridgeObjectRelease();
  uint64_t v13 = (void *)sub_228915B90();
  swift_bridgeObjectRelease();
  v32[0] = 0;
  LODWORD(v12) = objc_msgSend(v12, sel_sendMessageWithDictionary_error_, v13, v32);

  id v14 = v32[0];
  if (v12)
  {
    return v14;
  }
  else
  {
    id v30 = v32[0];
    id v16 = v32[0];
    uint64_t v17 = (void *)sub_2289150A0();

    swift_willThrow();
    if (qword_268267F30 != -1) {
      swift_once();
    }
    uint64_t v18 = __swift_project_value_buffer(v3, (uint64_t)qword_268283DF8);
    sub_22880AB38(v18, (uint64_t)v5);
    uint64_t v19 = sub_2289155C0();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v5, 1, v19) == 1)
    {

      return (id)sub_2288110C0((uint64_t)v5, (uint64_t *)&unk_2682684D0);
    }
    else
    {
      id v21 = v17;
      id v22 = v17;
      uint64_t v23 = sub_2289155A0();
      os_log_type_t v24 = sub_228916050();
      if (os_log_type_enabled(v23, v24))
      {
        unint64_t v25 = (uint8_t *)swift_slowAlloc();
        uint64_t v26 = (void *)swift_slowAlloc();
        v32[0] = v26;
        *(_DWORD *)unint64_t v25 = 136315138;
        id v30 = v25 + 4;
        uint64_t v31 = (uint64_t)v17;
        id v27 = v17;
        __swift_instantiateConcreteTypeFromMangledName(&qword_268269118);
        uint64_t v28 = sub_228915CC0();
        uint64_t v31 = sub_2288AB2C4(v28, v29, (uint64_t *)v32);
        sub_2289161F0();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_228806000, v23, v24, "Error sending analytics: [%s]", v25, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22A6A1090](v26, -1, -1);
        MEMORY[0x22A6A1090](v25, -1, -1);
      }
      else
      {
      }
      return (id)(*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v5, v19);
    }
  }
}

uint64_t static AnalyticsError.== infix(_:_:)()
{
  return 1;
}

uint64_t AnalyticsError.hash(into:)()
{
  return sub_228916760();
}

uint64_t AnalyticsError.hashValue.getter()
{
  return sub_228916780();
}

unint64_t sub_2288DC630()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26826AF40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_228922A40;
  unint64_t result = *MEMORY[0x263F62A68];
  if (!*MEMORY[0x263F62A68])
  {
    __break(1u);
    goto LABEL_6;
  }
  *(void *)(inited + 32) = sub_228915C70();
  *(void *)(inited + 40) = v2;
  *(void *)(inited + 72) = MEMORY[0x263F8D538];
  *(void *)(inited + 48) = 0x3FF0000000000000;
  unint64_t result = *MEMORY[0x263F62AA8];
  if (!*MEMORY[0x263F62AA8])
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  *(void *)(inited + 80) = sub_228915C70();
  *(void *)(inited + 88) = v3;
  *(void *)(inited + 120) = MEMORY[0x263F8E8F8];
  *(_DWORD *)(inited + 96) = 1234;
  unint64_t result = *MEMORY[0x263F62A40];
  if (*MEMORY[0x263F62A40])
  {
    *(void *)(inited + 128) = sub_228915C70();
    *(void *)(inited + 136) = v4;
    *(void *)(inited + 168) = MEMORY[0x263F8D4F8];
    *(unsigned char *)(inited + 144) = 1;
    unint64_t result = sub_2288384A4(inited);
    qword_26826AF38 = result;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t AnalyticsReporter.serviceName.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AnalyticsReporter.sessionID.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AnalyticsReporter.hierarchyToken.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AnalyticsReporter.creationTimestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AnalyticsReporter() + 32);
  uint64_t v4 = sub_2289152F0();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_2288DC820(unsigned __int8 *a1, char *a2)
{
  return sub_2288D9E04(*a1, *a2);
}

uint64_t sub_2288DC82C()
{
  return sub_2288DA180();
}

uint64_t sub_2288DC834()
{
  sub_228915D10();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2288DC914()
{
  return sub_2288DA374();
}

uint64_t sub_2288DC91C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2288DF0D4();
  *a1 = result;
  return result;
}

void sub_2288DC94C(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xEB00000000656D61;
  uint64_t v3 = 0x4E65636976726573;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE900000000000044;
      uint64_t v3 = 0x496E6F6973736573;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "hierarchyToken");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    case 3:
      *(void *)a1 = 0xD000000000000011;
      *(void *)(a1 + 8) = 0x8000000228925E90;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

unint64_t sub_2288DCA04()
{
  unint64_t result = 0x4E65636976726573;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x496E6F6973736573;
      break;
    case 2:
      unint64_t result = 0x6863726172656968;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2288DCAB0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2288DF0D4();
  *a1 = result;
  return result;
}

uint64_t sub_2288DCAD8(uint64_t a1)
{
  unint64_t v2 = sub_2288DE618();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2288DCB14(uint64_t a1)
{
  unint64_t v2 = sub_2288DE618();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AnalyticsReporter.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v76 = a2;
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v74);
  uint64_t v75 = (uint64_t)&v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_2289152F0();
  uint64_t v77 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826AF48);
  uint64_t v78 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for AnalyticsReporter();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  long long v80 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_2288DE618();
  uint64_t v14 = v79;
  sub_2289167A0();
  if (v14) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v80);
  }
  uint64_t v15 = v6;
  uint64_t v79 = v10;
  uint64_t v16 = v4;
  LOBYTE(v82) = 0;
  uint64_t v17 = sub_228916520();
  uint64_t v19 = v12;
  *((void *)v12 + 1) = v17;
  *((void *)v12 + 2) = v20;
  LOBYTE(v82) = 1;
  uint64_t v21 = v17;
  uint64_t v22 = v20;
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_228916520();
  uint64_t v72 = v21;
  uint64_t v73 = v22;
  *((void *)v19 + 3) = v23;
  *((void *)v19 + 4) = v24;
  LOBYTE(v82) = 2;
  *((void *)v19 + 5) = sub_228916520();
  *((void *)v19 + 6) = v25;
  LOBYTE(v82) = 3;
  sub_2288DF188(&qword_26826AF58, MEMORY[0x263F07490]);
  sub_228916560();
  uint64_t v68 = v9;
  (*(void (**)(char *, char *, uint64_t))(v77 + 32))(&v19[*(int *)(v79 + 32)], v15, v16);
  if (qword_268268160 != -1) {
    swift_once();
  }
  uint64_t v71 = v7;
  uint64_t result = *MEMORY[0x263F62A50];
  if (!*MEMORY[0x263F62A50])
  {
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v26 = qword_26826AF38;
  uint64_t v70 = sub_228915C70();
  uint64_t v69 = v27;
  uint64_t v28 = self;
  uint64_t v29 = v26;
  swift_bridgeObjectRetain();
  id v30 = objc_msgSend(v28, sel_mainBundle);
  id v31 = objc_msgSend(v30, sel_bundleIdentifier);

  uint64_t v32 = MEMORY[0x263F8D310];
  if (v31)
  {
    uint64_t v33 = sub_228915C70();
    unint64_t v35 = v34;

    uint64_t v83 = v32;
    if (v35) {
      goto LABEL_15;
    }
    uint64_t v33 = 0;
  }
  else
  {
    uint64_t v33 = 0;
    uint64_t v83 = MEMORY[0x263F8D310];
  }
  unint64_t v35 = 0xE000000000000000;
LABEL_15:
  uint64_t v36 = v29;
  uint64_t v37 = v70;
  uint64_t v38 = v69;
  uint64_t v70 = 0;
  *(void *)&long long v82 = v33;
  *((void *)&v82 + 1) = v35;
  sub_22881122C(&v82, &v81);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v84 = v36;
  sub_22883AA3C(&v81, v37, v38, isUniquelyReferenced_nonNull_native);
  uint64_t v40 = v84;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *MEMORY[0x263F62A60];
  if (!*MEMORY[0x263F62A60])
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v41 = sub_228915C70();
  uint64_t v43 = v42;
  uint64_t v83 = MEMORY[0x263F8E548];
  LODWORD(v82) = 31;
  sub_22881122C(&v82, &v81);
  char v44 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v84 = v40;
  sub_22883AA3C(&v81, v41, v43, v44);
  uint64_t v45 = v84;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26826AF40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_228918720;
  uint64_t result = *MEMORY[0x263F62AB8];
  if (!*MEMORY[0x263F62AB8])
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  *(void *)(inited + 32) = sub_228915C70();
  *(void *)(inited + 40) = v47;
  uint64_t v48 = MEMORY[0x263F8D310];
  *(void *)(inited + 72) = MEMORY[0x263F8D310];
  *(void *)(inited + 48) = 0x6F705F74705F7078;
  *(void *)(inited + 56) = 0xE900000000000073;
  uint64_t result = *MEMORY[0x263F62AC8];
  if (!*MEMORY[0x263F62AC8])
  {
LABEL_31:
    __break(1u);
    return result;
  }
  *(void *)(inited + 80) = sub_228915C70();
  *(void *)(inited + 88) = v49;
  *(void *)(inited + 120) = v48;
  uint64_t v50 = v73;
  *(void *)(inited + 96) = v72;
  *(void *)(inited + 104) = v50;
  unint64_t v51 = sub_2288384A4(inited);
  sub_2288DA9F4(v45);
  swift_bridgeObjectRelease();
  sub_2288DA9F4(v51);
  swift_bridgeObjectRelease();
  id v52 = objc_allocWithZone(MEMORY[0x263F62A08]);
  id v53 = (void *)sub_228915B90();
  swift_bridgeObjectRelease();
  uint64_t v54 = (void *)sub_228915B90();
  swift_bridgeObjectRelease();
  unsigned int v55 = (void *)sub_228915E80();
  id v56 = objc_msgSend(v52, sel_initWithSessionInfo_userInfo_frameworksToCheck_, v53, v54, v55);

  if (v56)
  {
    (*(void (**)(char *, uint64_t))(v78 + 8))(v68, v71);
    *(void *)uint64_t v19 = v56;
    sub_2288AE89C((uint64_t)v19, v76);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v80);
    return sub_2288AFCF0((uint64_t)v19);
  }
  else
  {
    uint64_t v57 = v71;
    if (qword_268267F30 != -1) {
      swift_once();
    }
    uint64_t v58 = __swift_project_value_buffer(v74, (uint64_t)qword_268283DF8);
    uint64_t v59 = v75;
    sub_22880AB38(v58, v75);
    uint64_t v60 = sub_2289155C0();
    uint64_t v61 = *(void *)(v60 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60) == 1)
    {
      sub_2288110C0(v59, (uint64_t *)&unk_2682684D0);
      uint64_t v62 = v78;
    }
    else
    {
      uint64_t v63 = sub_2289155A0();
      os_log_type_t v64 = sub_228916050();
      if (os_log_type_enabled(v63, v64))
      {
        os_log_type_t v65 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v65 = 0;
        _os_log_impl(&dword_228806000, v63, v64, "Could not create the RTCReporting object", v65, 2u);
        uint64_t v66 = v65;
        uint64_t v59 = v75;
        MEMORY[0x22A6A1090](v66, -1, -1);
      }

      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v59, v60);
      uint64_t v62 = v78;
      uint64_t v57 = v71;
    }
    sub_2288DE66C();
    swift_allocError();
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v62 + 8))(v68, v57);
    uint64_t v67 = v70;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v80);
    swift_bridgeObjectRelease();
    if (!v67) {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v77 + 8))(&v19[*(int *)(v79 + 32)], v16);
  }
}

uint64_t AnalyticsReporter.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826AF68);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2288DE618();
  sub_2289167B0();
  v8[15] = 0;
  sub_2289165D0();
  if (!v1)
  {
    v8[14] = 1;
    sub_2289165D0();
    v8[13] = 2;
    sub_2289165D0();
    type metadata accessor for AnalyticsReporter();
    v8[12] = 3;
    sub_2289152F0();
    sub_2288DF188(&qword_26826AF70, MEMORY[0x263F07490]);
    sub_228916610();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_2288DD79C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[16] = a1;
  v4[17] = a4;
  v4[18] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  v4[19] = swift_task_alloc();
  v4[20] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2288DD844);
}

uint64_t sub_2288DD844()
{
  uint64_t v1 = **(void ***)(v0 + 136);
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v0 + 120;
  *(void *)(v0 + 24) = sub_2288DD944;
  uint64_t v2 = swift_continuation_init();
  *(void *)(v0 + 80) = MEMORY[0x263EF8330];
  *(void *)(v0 + 88) = 0x40000000;
  *(void *)(v0 + 96) = sub_2288DDD24;
  *(void *)(v0 + 104) = &block_descriptor;
  *(void *)(v0 + 112) = v2;
  objc_msgSend(v1, sel_startConfigurationWithCompletionHandler_, v0 + 80);
  return MEMORY[0x270FA23F0](v0 + 16);
}

uint64_t sub_2288DD944()
{
  return MEMORY[0x270FA2498](sub_2288DDA24);
}

uint64_t sub_2288DDA24()
{
  uint64_t v1 = *(void *)(v0 + 120);
  swift_bridgeObjectRelease();
  if (!v1)
  {
    if (qword_268267F30 != -1) {
      swift_once();
    }
    uint64_t v12 = *(void *)(v0 + 152);
    uint64_t v13 = __swift_project_value_buffer(*(void *)(v0 + 144), (uint64_t)qword_268283DF8);
    sub_22880AB38(v13, v12);
    uint64_t v4 = sub_2289155C0();
    uint64_t v5 = *(void *)(v4 - 8);
    int v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v12, 1, v4);
    uint64_t v7 = *(void *)(v0 + 152);
    if (v14 != 1)
    {
      uint64_t v8 = sub_2289155A0();
      os_log_type_t v16 = sub_228916050();
      if (os_log_type_enabled(v8, v16))
      {
        uint64_t v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v17 = 0;
        _os_log_impl(&dword_228806000, v8, v16, "RTC storebag was NOT found!", v17, 2u);
        MEMORY[0x22A6A1090](v17, -1, -1);
      }
      uint64_t v11 = *(void *)(v0 + 152);
      goto LABEL_15;
    }
LABEL_11:
    sub_2288110C0(v7, (uint64_t *)&unk_2682684D0);
    char v15 = 1;
    goto LABEL_16;
  }
  if (qword_268267F30 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v3 = __swift_project_value_buffer(*(void *)(v0 + 144), (uint64_t)qword_268283DF8);
  sub_22880AB38(v3, v2);
  uint64_t v4 = sub_2289155C0();
  uint64_t v5 = *(void *)(v4 - 8);
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v2, 1, v4);
  uint64_t v7 = *(void *)(v0 + 160);
  if (v6 == 1) {
    goto LABEL_11;
  }
  uint64_t v8 = sub_2289155A0();
  os_log_type_t v9 = sub_228916040();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl(&dword_228806000, v8, v9, "RTC storebag found!", v10, 2u);
    MEMORY[0x22A6A1090](v10, -1, -1);
  }
  uint64_t v11 = *(void *)(v0 + 160);
LABEL_15:

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v11, v4);
  char v15 = 0;
LABEL_16:
  **(unsigned char **)(v0 + 128) = v15;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

uint64_t sub_2288DDD24(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (a2) {
    uint64_t v3 = sub_228915E90();
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v5 = v3;
  sub_2288DF120((uint64_t)&v5, *(void *)(*(void *)(v2 + 64) + 40));
  return swift_continuation_resume();
}

uint64_t sub_2288DDD9C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AnalyticsReporter.init(from:)(a1, a2);
}

uint64_t sub_2288DDDB4(void *a1)
{
  return AnalyticsReporter.encode(to:)(a1);
}

uint64_t sub_2288DDDCC(uint64_t a1)
{
  uint64_t v2 = sub_228915480();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26826AFB8);
    uint64_t v9 = sub_228916310();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    unint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    char v15 = (void (**)(char *, uint64_t))(v11 - 8);
    id v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_2288DF188(&qword_26826AFC0, MEMORY[0x263F07908]);
      uint64_t v16 = sub_228915BC0();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v5, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_2288DF188(&qword_26826AFC8, MEMORY[0x263F07908]);
          char v23 = sub_228915C30();
          uint64_t v24 = *v15;
          (*v15)(v5, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

id _s15ProximityReader16AnalyticsManagerV15sendSingleEvent11serviceName7messageySS_SDySSypGtF_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v37[17] = *(id *)MEMORY[0x263EF8340];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26826AF40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_228918720;
  if (!*MEMORY[0x263F62AB8])
  {
    __break(1u);
LABEL_18:
    __break(1u);
  }
  *(void *)(inited + 32) = sub_228915C70();
  *(void *)(inited + 40) = v10;
  uint64_t v11 = MEMORY[0x263F8D310];
  *(void *)(inited + 72) = MEMORY[0x263F8D310];
  *(void *)(inited + 48) = 0x6F705F74705F7078;
  *(void *)(inited + 56) = 0xE900000000000073;
  if (!*MEMORY[0x263F62AC8]) {
    goto LABEL_18;
  }
  *(void *)(inited + 80) = sub_228915C70();
  *(void *)(inited + 88) = v12;
  *(void *)(inited + 120) = v11;
  *(void *)(inited + 96) = a1;
  *(void *)(inited + 104) = a2;
  swift_bridgeObjectRetain();
  unint64_t v13 = sub_2288384A4(inited);
  uint64_t v14 = self;
  if (qword_268268160 != -1) {
    swift_once();
  }
  sub_2288DA9F4(qword_26826AF38);
  char v15 = (void *)sub_228915B90();
  swift_bridgeObjectRelease();
  sub_2288DA9F4(v13);
  swift_bridgeObjectRelease();
  uint64_t v16 = (void *)sub_228915B90();
  swift_bridgeObjectRelease();
  sub_2288DA9F4(a3);
  uint64_t v17 = (void *)sub_228915B90();
  swift_bridgeObjectRelease();
  v37[0] = 0;
  unsigned int v18 = objc_msgSend(v14, sel_sendOneMessageWithSessionInfo_userInfo_category_type_payload_error_, v15, v16, 1, 100, v17, v37);

  id v19 = v37[0];
  if (v18)
  {
    return v19;
  }
  else
  {
    id v35 = v37[0];
    id v21 = v37[0];
    uint64_t v22 = (void *)sub_2289150A0();

    swift_willThrow();
    if (qword_268267F30 != -1) {
      swift_once();
    }
    uint64_t v23 = __swift_project_value_buffer(v6, (uint64_t)qword_268283DF8);
    sub_22880AB38(v23, (uint64_t)v8);
    uint64_t v24 = sub_2289155C0();
    uint64_t v25 = *(void *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v8, 1, v24) == 1)
    {

      return (id)sub_2288110C0((uint64_t)v8, (uint64_t *)&unk_2682684D0);
    }
    else
    {
      id v26 = v22;
      id v27 = v22;
      BOOL v28 = sub_2289155A0();
      os_log_type_t v29 = sub_228916050();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = (uint8_t *)swift_slowAlloc();
        id v31 = (void *)swift_slowAlloc();
        v37[0] = v31;
        *(_DWORD *)uint64_t v30 = 136315138;
        id v35 = v30 + 4;
        uint64_t v36 = (uint64_t)v22;
        id v32 = v22;
        __swift_instantiateConcreteTypeFromMangledName(&qword_268269118);
        uint64_t v33 = sub_228915CC0();
        uint64_t v36 = sub_2288AB2C4(v33, v34, (uint64_t *)v37);
        sub_2289161F0();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_228806000, v28, v29, "Error sending analytics: [%s]", v30, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22A6A1090](v31, -1, -1);
        MEMORY[0x22A6A1090](v30, -1, -1);
      }
      else
      {
      }
      return (id)(*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v8, v24);
    }
  }
}

unint64_t sub_2288DE618()
{
  unint64_t result = qword_26826AF50;
  if (!qword_26826AF50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826AF50);
  }
  return result;
}

unint64_t sub_2288DE66C()
{
  unint64_t result = qword_26826AF60;
  if (!qword_26826AF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826AF60);
  }
  return result;
}

unint64_t sub_2288DE6C4()
{
  unint64_t result = qword_26826AF78;
  if (!qword_26826AF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826AF78);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AnalyticsError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2288DE7B4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AnalyticsError()
{
  return &type metadata for AnalyticsError;
}

char *initializeBufferWithCopyOfBuffer for AnalyticsReporter(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  unsigned int v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = a2[2];
    *((void *)a1 + 1) = a2[1];
    *((void *)a1 + 2) = v6;
    uint64_t v7 = a2[4];
    *((void *)a1 + 3) = a2[3];
    *((void *)a1 + 4) = v7;
    uint64_t v8 = a2[6];
    uint64_t v9 = *(int *)(a3 + 32);
    uint64_t v10 = (uint64_t)a2 + v9;
    uint64_t v11 = &a1[v9];
    *((void *)a1 + 5) = a2[5];
    *((void *)a1 + 6) = v8;
    uint64_t v12 = sub_2289152F0();
    unint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    uint64_t v14 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v11, v10, v12);
  }
  return v5;
}

uint64_t destroy for AnalyticsReporter(id *a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unsigned int v4 = (char *)a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_2289152F0();
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *initializeWithCopy for AnalyticsReporter(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v6 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  a1[4] = *(void *)(a2 + 32);
  a1[5] = v7;
  uint64_t v8 = *(int *)(a3 + 32);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = a2 + v8;
  a1[6] = *(void *)(a2 + 48);
  uint64_t v11 = sub_2289152F0();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  id v13 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  return a1;
}

uint64_t assignWithCopy for AnalyticsReporter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 32);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_2289152F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

uint64_t initializeWithTake for AnalyticsReporter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v4 = *(int *)(a3 + 32);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_2289152F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for AnalyticsReporter(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v7 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[4];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[6];
  *(void *)(a1 + 40) = a2[5];
  *(void *)(a1 + 48) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_2289152F0();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnalyticsReporter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2288DECB4);
}

uint64_t sub_2288DECB4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_2289152F0();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for AnalyticsReporter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2288DED78);
}

void *sub_2288DED78(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_2289152F0();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 32);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_2288DEE20()
{
  uint64_t result = sub_2289152F0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AnalyticsReporter.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2288DEF94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnalyticsReporter.CodingKeys()
{
  return &type metadata for AnalyticsReporter.CodingKeys;
}

unint64_t sub_2288DEFD0()
{
  unint64_t result = qword_26826AF90;
  if (!qword_26826AF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826AF90);
  }
  return result;
}

unint64_t sub_2288DF028()
{
  unint64_t result = qword_26826AF98;
  if (!qword_26826AF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826AF98);
  }
  return result;
}

unint64_t sub_2288DF080()
{
  unint64_t result = qword_26826AFA0;
  if (!qword_26826AFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_26826AFA0);
  }
  return result;
}

uint64_t sub_2288DF0D4()
{
  unint64_t v0 = sub_2289164B0();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_2288DF120(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826AFB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2288DF188(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t MobileDocumentReaderSession.requestDocument<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  void v5[2] = a1;
  v5[7] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  v5[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2288DF270);
}

uint64_t sub_2288DF270()
{
  if (qword_268267F00 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[8];
  uint64_t v2 = __swift_project_value_buffer(v0[7], (uint64_t)qword_268283D68);
  sub_22880AB38(v2, v1);
  uint64_t v3 = sub_2289155C0();
  uint64_t v4 = *(void *)(v3 - 8);
  int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  uint64_t v6 = v0[8];
  if (v5 == 1)
  {
    sub_22880ABA0(v0[8]);
  }
  else
  {
    sub_2288C61B4(v0[6], 0xD000000000000013, 0x800000022892CA80, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  if (qword_268267EC8 != -1) {
    swift_once();
  }
  uint64_t v7 = v0[6];
  uint64_t v8 = *(void *)(v7 + 16);
  uint64_t v9 = *(void *)(v7 + 24);
  uint64_t v10 = (void *)swift_task_alloc();
  v0[9] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_2288C3D04;
  uint64_t v11 = v0[4];
  uint64_t v12 = v0[5];
  uint64_t v13 = v0[2];
  uint64_t v14 = v0[3];
  return sub_228873160(v13, v14, v8, v9, v11, v12);
}

uint64_t MobileDocumentReaderSession.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MobileDocumentReaderSession.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MobileDocumentReaderSession()
{
  return self;
}

uint64_t method lookup function for MobileDocumentReaderSession(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for MobileDocumentReaderSession);
}

uint64_t static MobileDocumentReader.isSupported.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v5 = sub_22887D710();
  if (qword_268267F00 != -1) {
    swift_once();
  }
  uint64_t v6 = __swift_project_value_buffer(v2, (uint64_t)qword_268283D68);
  sub_22880AB38(v6, (uint64_t)v4);
  uint64_t v7 = sub_2289155C0();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v7) == 1)
  {
    sub_22880ABA0((uint64_t)v4);
  }
  else
  {
    uint64_t v9 = sub_2289155A0();
    os_log_type_t v10 = sub_228916040();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v16 = v1;
      uint64_t v17 = v12;
      *(_DWORD *)uint64_t v11 = 136315394;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26826AFD8);
      uint64_t v13 = sub_228915CC0();
      uint64_t v16 = sub_2288AB2C4(v13, v14, &v17);
      sub_2289161F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v11 + 12) = 1024;
      LODWORD(v16) = v5 & 1;
      sub_2289161F0();
      _os_log_impl(&dword_228806000, v9, v10, "%s - isSupported result: %{BOOL}d", (uint8_t *)v11, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x22A6A1090](v12, -1, -1);
      MEMORY[0x22A6A1090](v11, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v4, v7);
  }
  return v5 & 1;
}

uint64_t MobileDocumentReader.__allocating_init()()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = swift_allocObject();
  if (qword_268267F00 != -1) {
    swift_once();
  }
  uint64_t v4 = __swift_project_value_buffer(v0, (uint64_t)qword_268283D68);
  sub_22880AB38(v4, (uint64_t)v2);
  uint64_t v5 = sub_2289155C0();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v2, 1, v5) == 1)
  {
    sub_22880ABA0((uint64_t)v2);
  }
  else
  {
    uint64_t v7 = swift_retain();
    sub_2288C61B4(v7, 0x292874696E69, 0xE600000000000000, 0, 0xE000000000000000);
    swift_release();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v2, v5);
  }
  return v3;
}

uint64_t MobileDocumentReader.init()()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_268267F00 != -1) {
    swift_once();
  }
  uint64_t v5 = __swift_project_value_buffer(v2, (uint64_t)qword_268283D68);
  sub_22880AB38(v5, (uint64_t)v4);
  uint64_t v6 = sub_2289155C0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_22880ABA0((uint64_t)v4);
  }
  else
  {
    uint64_t v8 = swift_retain();
    sub_2288C61B4(v8, 0x292874696E69, 0xE600000000000000, 0, 0xE000000000000000);
    swift_release();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  return v1;
}

uint64_t MobileDocumentReader.configuration.getter(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  v2[4] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  v2[5] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2288DFB14);
}

uint64_t sub_2288DFB14()
{
  if (qword_268267F00 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[5];
  uint64_t v2 = __swift_project_value_buffer(v0[4], (uint64_t)qword_268283D68);
  sub_22880AB38(v2, v1);
  uint64_t v3 = sub_2289155C0();
  uint64_t v4 = *(void *)(v3 - 8);
  int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  uint64_t v6 = v0[5];
  if (v5 == 1)
  {
    sub_22880ABA0(v0[5]);
  }
  else
  {
    sub_2288C61B4(v0[3], 0x72756769666E6F63, 0xED00006E6F697461, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  if (qword_268267EC8 != -1) {
    swift_once();
  }
  v0[6] = qword_268283D18;
  return MEMORY[0x270FA2498](sub_2288DFCB4);
}

uint64_t sub_2288DFCB4()
{
  *(void *)(v0 + 56) = sub_228870CAC();
  *(void *)(v0 + 64) = v1;
  return MEMORY[0x270FA2498](sub_2288DFD70);
}

uint64_t sub_2288DFD70()
{
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 72) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 56);
  *(void *)(v1 + 32) = sub_228871290;
  *(void *)(v1 + 40) = 0;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_2288DFE74;
  uint64_t v3 = *(void *)(v0 + 16);
  return MEMORY[0x270FA2360](v3, 0, 0, 0xD000000000000020, 0x80000002289280A0, sub_2288E449C, v1, &type metadata for MobileDocumentReader.Configuration);
}

uint64_t sub_2288DFE74()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_2288E0014;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_2288DFF9C;
  }
  return MEMORY[0x270FA2498](v2);
}

uint64_t sub_2288DFF9C()
{
  uint64_t v1 = *(void **)(v0 + 64);

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2288E0014()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2288E0080);
}

uint64_t sub_2288E0080()
{
  uint64_t v1 = *(void **)(v0 + 64);

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t MobileDocumentReader.prepare(using:)(_OWORD *a1)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  *(void *)(v2 + 32) = swift_task_alloc();
  *(_OWORD *)(v2 + 40) = *a1;
  return MEMORY[0x270FA2498](sub_2288E0198);
}

uint64_t sub_2288E0198()
{
  if (qword_268267F00 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[4];
  uint64_t v2 = __swift_project_value_buffer(v0[3], (uint64_t)qword_268283D68);
  sub_22880AB38(v2, v1);
  uint64_t v3 = sub_2289155C0();
  uint64_t v4 = *(void *)(v3 - 8);
  int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  uint64_t v6 = v0[4];
  if (v5 == 1)
  {
    sub_22880ABA0(v0[4]);
  }
  else
  {
    sub_2288C61B4(v0[2], 0x2865726170657270, 0xEF293A676E697375, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  if (qword_268267EC8 != -1) {
    swift_once();
  }
  if (v0[6]) {
    uint64_t v7 = v0[5];
  }
  else {
    uint64_t v7 = 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = (void *)swift_task_alloc();
  v0[7] = (uint64_t)v8;
  void *v8 = v0;
  v8[1] = sub_2288E0380;
  uint64_t v9 = v0[6];
  return sub_228871E98(v7, v9);
}

uint64_t sub_2288E0380(uint64_t a1)
{
  uint64_t v4 = *v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v5 = swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(uint64_t))(v4 + 8);
  if (!v1) {
    uint64_t v5 = a1;
  }
  return v6(v5);
}

uint64_t MobileDocumentReader.deinit()
{
  return v0;
}

uint64_t MobileDocumentReader.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_2288E04E8(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_2288E06A0(a1, a2, a3, a4, a5, &qword_268269198, (uint64_t)&unk_26DD041F8, (uint64_t)&unk_26826B0A8);
}

uint64_t sub_2288E0510(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_2288E06A0(a1, a2, a3, a4, a5, &qword_2682691C0, (uint64_t)&unk_26DD04270, (uint64_t)&unk_26826B0B8);
}

uint64_t sub_2288E0538(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_2288E06A0(a1, a2, a3, a4, a5, &qword_2682690E0, (uint64_t)&unk_26DD04180, (uint64_t)&unk_26826B090);
}

uint64_t sub_2288E0560(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_2288E06A0(a1, a2, a3, a4, a5, &qword_268269A50, (uint64_t)&unk_26DD04090, (uint64_t)&unk_26826B070);
}

uint64_t sub_2288E0588(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_2288E06A0(a1, a2, a3, a4, a5, &qword_268269A48, (uint64_t)&unk_26DD04018, (uint64_t)&unk_26826B060);
}

uint64_t sub_2288E05B0(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_2288E06A0(a1, a2, a3, a4, a5, &qword_268269A40, (uint64_t)&unk_26DD03FA0, (uint64_t)&unk_26826B050);
}

uint64_t sub_2288E05D8(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_2288E06A0(a1, a2, a3, a4, a5, &qword_268269A38, (uint64_t)&unk_26DD03F28, (uint64_t)&unk_26826B040);
}

uint64_t sub_2288E0600(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_2288E06A0(a1, a2, a3, a4, a5, &qword_268269A30, (uint64_t)&unk_26DD03EB0, (uint64_t)&unk_26826B030);
}

uint64_t sub_2288E0628(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_2288E06A0(a1, a2, a3, a4, a5, &qword_268269A28, (uint64_t)&unk_26DD03E38, (uint64_t)&unk_26826B020);
}

uint64_t sub_2288E0650(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_2288E06A0(a1, a2, a3, a4, a5, &qword_268269A20, (uint64_t)&unk_26DD03DC0, (uint64_t)&unk_26826B010);
}

uint64_t sub_2288E0678(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_2288E06A0(a1, a2, a3, a4, a5, &qword_2682690E0, (uint64_t)&unk_26DD03D48, (uint64_t)&unk_26826AFF8);
}

uint64_t sub_2288E06A0(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v28 = a4;
  uint64_t v29 = a8;
  v27[1] = a7;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(a6);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x270FA5388](v12);
  char v15 = (char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268510);
  MEMORY[0x270FA5388](v16 - 8);
  unsigned int v18 = (char *)v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_228915F70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  unint64_t v20 = (*(unsigned __int8 *)(v13 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v21 = (v14 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = (char *)swift_allocObject();
  *((void *)v22 + 2) = 0;
  *((void *)v22 + 3) = 0;
  *((void *)v22 + 4) = a2;
  *((void *)v22 + 5) = a3;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v22[v20], v15, v12);
  uint64_t v23 = &v22[v21];
  *(void *)uint64_t v23 = v28;
  *((void *)v23 + 1) = a5;
  id v24 = a2;
  id v25 = a3;
  swift_retain();
  sub_228818D10((uint64_t)v18, v29, (uint64_t)v22);
  return swift_release();
}

uint64_t sub_2288E08A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[21] = a7;
  v8[22] = a8;
  v8[19] = a5;
  v8[20] = a6;
  v8[18] = a4;
  v8[23] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  v8[24] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268269198);
  v8[25] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v8[26] = v10;
  v8[27] = *(void *)(v10 + 64);
  v8[28] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2288E09A8);
}

uint64_t sub_2288E09A8()
{
  id v32 = v0;
  uint64_t v2 = v0[27];
  uint64_t v1 = v0[28];
  uint64_t v4 = v0[25];
  uint64_t v3 = v0[26];
  uint64_t v30 = (void *)v0[19];
  uint64_t v5 = (void *)v0[18];
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 16))(v1, v0[20], v4);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v7 = (v2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = swift_allocObject();
  unint64_t v9 = v8 + v6;
  uint64_t v10 = v0 + 16;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v9, v1, v4);
  uint64_t v11 = (void *)(v8 + v7);
  void *v11 = v5;
  v11[1] = v30;
  v0[6] = sub_2288E554C;
  v0[7] = v8;
  v0[2] = MEMORY[0x263EF8330];
  v0[3] = 1107296256;
  v0[4] = sub_22888D6CC;
  v0[5] = &block_descriptor_110_0;
  uint64_t v12 = _Block_copy(v0 + 2);
  id v13 = v5;
  id v14 = v30;
  swift_release();
  id v15 = objc_msgSend(v13, sel_remoteObjectProxyWithErrorHandler_, v12);
  _Block_release(v12);
  sub_228916250();
  swift_unknownObjectRelease();
  sub_2288111D0((uint64_t)(v0 + 8), (uint64_t)(v0 + 12));
  __swift_instantiateConcreteTypeFromMangledName(&qword_26826B098);
  if (swift_dynamicCast() && *v10)
  {
    uint64_t v16 = (void (*)(uint64_t *, uint64_t))v0[21];
    uint64_t v17 = v0[20];
    uint64_t v31 = *v10;
    v16(&v31, v17);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_268267EF8 != -1) {
      swift_once();
    }
    uint64_t v18 = v0[24];
    uint64_t v19 = __swift_project_value_buffer(v0[23], (uint64_t)qword_268283D50);
    sub_22880AB38(v19, v18);
    uint64_t v20 = sub_2289155C0();
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v18, 1, v20) == 1)
    {
      sub_22880ABA0(v0[24]);
    }
    else
    {
      uint64_t v22 = sub_2289155A0();
      os_log_type_t v23 = sub_228916050();
      if (os_log_type_enabled(v22, v23))
      {
        id v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v24 = 0;
        _os_log_impl(&dword_228806000, v22, v23, "Service not available to create a session", v24, 2u);
        MEMORY[0x22A6A1090](v24, -1, -1);
      }
      uint64_t v25 = v0[24];

      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v25, v20);
    }
    id v26 = (void *)v0[19];
    v0[17] = v26;
    id v27 = v26;
    sub_228915F20();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v28 = (uint64_t (*)(void))v0[1];
  return v28();
}

uint64_t sub_2288E0D64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[21] = a7;
  v8[22] = a8;
  v8[19] = a5;
  v8[20] = a6;
  v8[18] = a4;
  v8[23] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  v8[24] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2682691C0);
  v8[25] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v8[26] = v10;
  v8[27] = *(void *)(v10 + 64);
  v8[28] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2288E0E6C);
}

uint64_t sub_2288E0E6C()
{
  id v32 = v0;
  uint64_t v2 = v0[27];
  uint64_t v1 = v0[28];
  uint64_t v4 = v0[25];
  uint64_t v3 = v0[26];
  uint64_t v30 = (void *)v0[19];
  uint64_t v5 = (void *)v0[18];
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 16))(v1, v0[20], v4);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v7 = (v2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = swift_allocObject();
  unint64_t v9 = v8 + v6;
  uint64_t v10 = v0 + 16;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v9, v1, v4);
  uint64_t v11 = (void *)(v8 + v7);
  void *v11 = v5;
  v11[1] = v30;
  v0[6] = sub_2288E5858;
  v0[7] = v8;
  v0[2] = MEMORY[0x263EF8330];
  v0[3] = 1107296256;
  v0[4] = sub_22888D6CC;
  v0[5] = &block_descriptor_120;
  uint64_t v12 = _Block_copy(v0 + 2);
  id v13 = v5;
  id v14 = v30;
  swift_release();
  id v15 = objc_msgSend(v13, sel_remoteObjectProxyWithErrorHandler_, v12);
  _Block_release(v12);
  sub_228916250();
  swift_unknownObjectRelease();
  sub_2288111D0((uint64_t)(v0 + 8), (uint64_t)(v0 + 12));
  __swift_instantiateConcreteTypeFromMangledName(&qword_26826B098);
  if (swift_dynamicCast() && *v10)
  {
    uint64_t v16 = (void (*)(uint64_t *, uint64_t))v0[21];
    uint64_t v17 = v0[20];
    uint64_t v31 = *v10;
    v16(&v31, v17);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_268267EF8 != -1) {
      swift_once();
    }
    uint64_t v18 = v0[24];
    uint64_t v19 = __swift_project_value_buffer(v0[23], (uint64_t)qword_268283D50);
    sub_22880AB38(v19, v18);
    uint64_t v20 = sub_2289155C0();
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v18, 1, v20) == 1)
    {
      sub_22880ABA0(v0[24]);
    }
    else
    {
      uint64_t v22 = sub_2289155A0();
      os_log_type_t v23 = sub_228916050();
      if (os_log_type_enabled(v22, v23))
      {
        id v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v24 = 0;
        _os_log_impl(&dword_228806000, v22, v23, "Service not available to create a session", v24, 2u);
        MEMORY[0x22A6A1090](v24, -1, -1);
      }
      uint64_t v25 = v0[24];

      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v25, v20);
    }
    id v26 = (void *)v0[19];
    v0[17] = v26;
    id v27 = v26;
    sub_228915F20();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v28 = (uint64_t (*)(void))v0[1];
  return v28();
}

uint64_t sub_2288E1228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[21] = a7;
  v8[22] = a8;
  v8[19] = a5;
  v8[20] = a6;
  v8[18] = a4;
  v8[23] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  v8[24] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2682690E0);
  v8[25] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v8[26] = v10;
  v8[27] = *(void *)(v10 + 64);
  v8[28] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2288E1330);
}

uint64_t sub_2288E1330()
{
  id v32 = v0;
  uint64_t v2 = v0[27];
  uint64_t v1 = v0[28];
  uint64_t v4 = v0[25];
  uint64_t v3 = v0[26];
  uint64_t v30 = (void *)v0[19];
  uint64_t v5 = (void *)v0[18];
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 16))(v1, v0[20], v4);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v7 = (v2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = swift_allocObject();
  unint64_t v9 = v8 + v6;
  uint64_t v10 = v0 + 16;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v9, v1, v4);
  uint64_t v11 = (void *)(v8 + v7);
  void *v11 = v5;
  v11[1] = v30;
  v0[6] = sub_2288E468C;
  v0[7] = v8;
  v0[2] = MEMORY[0x263EF8330];
  v0[3] = 1107296256;
  v0[4] = sub_22888D6CC;
  v0[5] = &block_descriptor_100;
  uint64_t v12 = _Block_copy(v0 + 2);
  id v13 = v5;
  id v14 = v30;
  swift_release();
  id v15 = objc_msgSend(v13, sel_remoteObjectProxyWithErrorHandler_, v12);
  _Block_release(v12);
  sub_228916250();
  swift_unknownObjectRelease();
  sub_2288111D0((uint64_t)(v0 + 8), (uint64_t)(v0 + 12));
  __swift_instantiateConcreteTypeFromMangledName(&qword_26826B098);
  if (swift_dynamicCast() && *v10)
  {
    uint64_t v16 = (void (*)(uint64_t *, uint64_t))v0[21];
    uint64_t v17 = v0[20];
    uint64_t v31 = *v10;
    v16(&v31, v17);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_268267EF8 != -1) {
      swift_once();
    }
    uint64_t v18 = v0[24];
    uint64_t v19 = __swift_project_value_buffer(v0[23], (uint64_t)qword_268283D50);
    sub_22880AB38(v19, v18);
    uint64_t v20 = sub_2289155C0();
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v18, 1, v20) == 1)
    {
      sub_22880ABA0(v0[24]);
    }
    else
    {
      uint64_t v22 = sub_2289155A0();
      os_log_type_t v23 = sub_228916050();
      if (os_log_type_enabled(v22, v23))
      {
        id v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v24 = 0;
        _os_log_impl(&dword_228806000, v22, v23, "Service not available to create a session", v24, 2u);
        MEMORY[0x22A6A1090](v24, -1, -1);
      }
      uint64_t v25 = v0[24];

      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v25, v20);
    }
    id v26 = (void *)v0[19];
    v0[17] = v26;
    id v27 = v26;
    sub_228915F20();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v28 = (uint64_t (*)(void))v0[1];
  return v28();
}

uint64_t sub_2288E16EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[21] = a7;
  v8[22] = a8;
  v8[19] = a5;
  v8[20] = a6;
  v8[18] = a4;
  v8[23] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  v8[24] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268269A58);
  v8[25] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v8[26] = v10;
  v8[27] = *(void *)(v10 + 64);
  v8[28] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2288E17F4);
}

uint64_t sub_2288E17F4()
{
  id v32 = v0;
  uint64_t v2 = v0[27];
  uint64_t v1 = v0[28];
  uint64_t v4 = v0[25];
  uint64_t v3 = v0[26];
  uint64_t v30 = (void *)v0[19];
  uint64_t v5 = (void *)v0[18];
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 16))(v1, v0[20], v4);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v7 = (v2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = swift_allocObject();
  unint64_t v9 = v8 + v6;
  uint64_t v10 = v0 + 16;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v9, v1, v4);
  uint64_t v11 = (void *)(v8 + v7);
  void *v11 = v5;
  v11[1] = v30;
  v0[6] = sub_2288E5288;
  v0[7] = v8;
  v0[2] = MEMORY[0x263EF8330];
  v0[3] = 1107296256;
  v0[4] = sub_22888D6CC;
  v0[5] = &block_descriptor_90_0;
  uint64_t v12 = _Block_copy(v0 + 2);
  id v13 = v5;
  id v14 = v30;
  swift_release();
  id v15 = objc_msgSend(v13, sel_remoteObjectProxyWithErrorHandler_, v12);
  _Block_release(v12);
  sub_228916250();
  swift_unknownObjectRelease();
  sub_2288111D0((uint64_t)(v0 + 8), (uint64_t)(v0 + 12));
  __swift_instantiateConcreteTypeFromMangledName(&qword_26826B000);
  if (swift_dynamicCast() && *v10)
  {
    uint64_t v16 = (void (*)(uint64_t *, uint64_t))v0[21];
    uint64_t v17 = v0[20];
    uint64_t v31 = *v10;
    v16(&v31, v17);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_268267EF8 != -1) {
      swift_once();
    }
    uint64_t v18 = v0[24];
    uint64_t v19 = __swift_project_value_buffer(v0[23], (uint64_t)qword_268283D50);
    sub_22880AB38(v19, v18);
    uint64_t v20 = sub_2289155C0();
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v18, 1, v20) == 1)
    {
      sub_22880ABA0(v0[24]);
    }
    else
    {
      uint64_t v22 = sub_2289155A0();
      os_log_type_t v23 = sub_228916050();
      if (os_log_type_enabled(v22, v23))
      {
        id v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v24 = 0;
        _os_log_impl(&dword_228806000, v22, v23, "Service not available to create a session", v24, 2u);
        MEMORY[0x22A6A1090](v24, -1, -1);
      }
      uint64_t v25 = v0[24];

      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v25, v20);
    }
    id v26 = (void *)v0[19];
    v0[17] = v26;
    id v27 = v26;
    sub_228915F20();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v28 = (uint64_t (*)(void))v0[1];
  return v28();
}

uint64_t sub_2288E1BB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[21] = a7;
  v8[22] = a8;
  v8[19] = a5;
  v8[20] = a6;
  v8[18] = a4;
  v8[23] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  v8[24] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268269A50);
  v8[25] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v8[26] = v10;
  v8[27] = *(void *)(v10 + 64);
  v8[28] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2288E1CB8);
}

uint64_t sub_2288E1CB8()
{
  id v32 = v0;
  uint64_t v2 = v0[27];
  uint64_t v1 = v0[28];
  uint64_t v4 = v0[25];
  uint64_t v3 = v0[26];
  uint64_t v30 = (void *)v0[19];
  uint64_t v5 = (void *)v0[18];
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 16))(v1, v0[20], v4);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v7 = (v2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = swift_allocObject();
  unint64_t v9 = v8 + v6;
  uint64_t v10 = v0 + 16;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v9, v1, v4);
  uint64_t v11 = (void *)(v8 + v7);
  void *v11 = v5;
  v11[1] = v30;
  v0[6] = sub_2288E5120;
  v0[7] = v8;
  v0[2] = MEMORY[0x263EF8330];
  v0[3] = 1107296256;
  v0[4] = sub_22888D6CC;
  v0[5] = &block_descriptor_80;
  uint64_t v12 = _Block_copy(v0 + 2);
  id v13 = v5;
  id v14 = v30;
  swift_release();
  id v15 = objc_msgSend(v13, sel_remoteObjectProxyWithErrorHandler_, v12);
  _Block_release(v12);
  sub_228916250();
  swift_unknownObjectRelease();
  sub_2288111D0((uint64_t)(v0 + 8), (uint64_t)(v0 + 12));
  __swift_instantiateConcreteTypeFromMangledName(&qword_26826B000);
  if (swift_dynamicCast() && *v10)
  {
    uint64_t v16 = (void (*)(uint64_t *, uint64_t))v0[21];
    uint64_t v17 = v0[20];
    uint64_t v31 = *v10;
    v16(&v31, v17);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_268267EF8 != -1) {
      swift_once();
    }
    uint64_t v18 = v0[24];
    uint64_t v19 = __swift_project_value_buffer(v0[23], (uint64_t)qword_268283D50);
    sub_22880AB38(v19, v18);
    uint64_t v20 = sub_2289155C0();
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v18, 1, v20) == 1)
    {
      sub_22880ABA0(v0[24]);
    }
    else
    {
      uint64_t v22 = sub_2289155A0();
      os_log_type_t v23 = sub_228916050();
      if (os_log_type_enabled(v22, v23))
      {
        id v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v24 = 0;
        _os_log_impl(&dword_228806000, v22, v23, "Service not available to create a session", v24, 2u);
        MEMORY[0x22A6A1090](v24, -1, -1);
      }
      uint64_t v25 = v0[24];

      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v25, v20);
    }
    id v26 = (void *)v0[19];
    v0[17] = v26;
    id v27 = v26;
    sub_228915F20();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v28 = (uint64_t (*)(void))v0[1];
  return v28();
}

uint64_t sub_2288E2074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[21] = a7;
  v8[22] = a8;
  v8[19] = a5;
  v8[20] = a6;
  v8[18] = a4;
  v8[23] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  v8[24] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268269A48);
  v8[25] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v8[26] = v10;
  v8[27] = *(void *)(v10 + 64);
  v8[28] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2288E217C);
}

uint64_t sub_2288E217C()
{
  id v32 = v0;
  uint64_t v2 = v0[27];
  uint64_t v1 = v0[28];
  uint64_t v4 = v0[25];
  uint64_t v3 = v0[26];
  uint64_t v30 = (void *)v0[19];
  uint64_t v5 = (void *)v0[18];
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 16))(v1, v0[20], v4);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v7 = (v2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = swift_allocObject();
  unint64_t v9 = v8 + v6;
  uint64_t v10 = v0 + 16;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v9, v1, v4);
  uint64_t v11 = (void *)(v8 + v7);
  void *v11 = v5;
  v11[1] = v30;
  v0[6] = sub_2288E4FB8;
  v0[7] = v8;
  v0[2] = MEMORY[0x263EF8330];
  v0[3] = 1107296256;
  v0[4] = sub_22888D6CC;
  v0[5] = &block_descriptor_70;
  uint64_t v12 = _Block_copy(v0 + 2);
  id v13 = v5;
  id v14 = v30;
  swift_release();
  id v15 = objc_msgSend(v13, sel_remoteObjectProxyWithErrorHandler_, v12);
  _Block_release(v12);
  sub_228916250();
  swift_unknownObjectRelease();
  sub_2288111D0((uint64_t)(v0 + 8), (uint64_t)(v0 + 12));
  __swift_instantiateConcreteTypeFromMangledName(&qword_26826B000);
  if (swift_dynamicCast() && *v10)
  {
    uint64_t v16 = (void (*)(uint64_t *, uint64_t))v0[21];
    uint64_t v17 = v0[20];
    uint64_t v31 = *v10;
    v16(&v31, v17);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_268267EF8 != -1) {
      swift_once();
    }
    uint64_t v18 = v0[24];
    uint64_t v19 = __swift_project_value_buffer(v0[23], (uint64_t)qword_268283D50);
    sub_22880AB38(v19, v18);
    uint64_t v20 = sub_2289155C0();
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v18, 1, v20) == 1)
    {
      sub_22880ABA0(v0[24]);
    }
    else
    {
      uint64_t v22 = sub_2289155A0();
      os_log_type_t v23 = sub_228916050();
      if (os_log_type_enabled(v22, v23))
      {
        id v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v24 = 0;
        _os_log_impl(&dword_228806000, v22, v23, "Service not available to create a session", v24, 2u);
        MEMORY[0x22A6A1090](v24, -1, -1);
      }
      uint64_t v25 = v0[24];

      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v25, v20);
    }
    id v26 = (void *)v0[19];
    v0[17] = v26;
    id v27 = v26;
    sub_228915F20();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v28 = (uint64_t (*)(void))v0[1];
  return v28();
}

uint64_t sub_2288E2538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[21] = a7;
  v8[22] = a8;
  v8[19] = a5;
  v8[20] = a6;
  v8[18] = a4;
  v8[23] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  v8[24] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268269A40);
  v8[25] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v8[26] = v10;
  v8[27] = *(void *)(v10 + 64);
  v8[28] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2288E2640);
}

uint64_t sub_2288E2640()
{
  id v32 = v0;
  uint64_t v2 = v0[27];
  uint64_t v1 = v0[28];
  uint64_t v4 = v0[25];
  uint64_t v3 = v0[26];
  uint64_t v30 = (void *)v0[19];
  uint64_t v5 = (void *)v0[18];
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 16))(v1, v0[20], v4);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v7 = (v2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = swift_allocObject();
  unint64_t v9 = v8 + v6;
  uint64_t v10 = v0 + 16;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v9, v1, v4);
  uint64_t v11 = (void *)(v8 + v7);
  void *v11 = v5;
  v11[1] = v30;
  v0[6] = sub_2288E4E50;
  v0[7] = v8;
  v0[2] = MEMORY[0x263EF8330];
  v0[3] = 1107296256;
  v0[4] = sub_22888D6CC;
  v0[5] = &block_descriptor_60;
  uint64_t v12 = _Block_copy(v0 + 2);
  id v13 = v5;
  id v14 = v30;
  swift_release();
  id v15 = objc_msgSend(v13, sel_remoteObjectProxyWithErrorHandler_, v12);
  _Block_release(v12);
  sub_228916250();
  swift_unknownObjectRelease();
  sub_2288111D0((uint64_t)(v0 + 8), (uint64_t)(v0 + 12));
  __swift_instantiateConcreteTypeFromMangledName(&qword_26826B000);
  if (swift_dynamicCast() && *v10)
  {
    uint64_t v16 = (void (*)(uint64_t *, uint64_t))v0[21];
    uint64_t v17 = v0[20];
    uint64_t v31 = *v10;
    v16(&v31, v17);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_268267EF8 != -1) {
      swift_once();
    }
    uint64_t v18 = v0[24];
    uint64_t v19 = __swift_project_value_buffer(v0[23], (uint64_t)qword_268283D50);
    sub_22880AB38(v19, v18);
    uint64_t v20 = sub_2289155C0();
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v18, 1, v20) == 1)
    {
      sub_22880ABA0(v0[24]);
    }
    else
    {
      uint64_t v22 = sub_2289155A0();
      os_log_type_t v23 = sub_228916050();
      if (os_log_type_enabled(v22, v23))
      {
        id v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v24 = 0;
        _os_log_impl(&dword_228806000, v22, v23, "Service not available to create a session", v24, 2u);
        MEMORY[0x22A6A1090](v24, -1, -1);
      }
      uint64_t v25 = v0[24];

      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v25, v20);
    }
    id v26 = (void *)v0[19];
    v0[17] = v26;
    id v27 = v26;
    sub_228915F20();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v28 = (uint64_t (*)(void))v0[1];
  return v28();
}

uint64_t sub_2288E29FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[21] = a7;
  v8[22] = a8;
  v8[19] = a5;
  v8[20] = a6;
  v8[18] = a4;
  v8[23] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  v8[24] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268269A38);
  v8[25] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v8[26] = v10;
  v8[27] = *(void *)(v10 + 64);
  v8[28] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2288E2B04);
}

uint64_t sub_2288E2B04()
{
  id v32 = v0;
  uint64_t v2 = v0[27];
  uint64_t v1 = v0[28];
  uint64_t v4 = v0[25];
  uint64_t v3 = v0[26];
  uint64_t v30 = (void *)v0[19];
  uint64_t v5 = (void *)v0[18];
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 16))(v1, v0[20], v4);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v7 = (v2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = swift_allocObject();
  unint64_t v9 = v8 + v6;
  uint64_t v10 = v0 + 16;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v9, v1, v4);
  uint64_t v11 = (void *)(v8 + v7);
  void *v11 = v5;
  v11[1] = v30;
  v0[6] = sub_2288E4CE8;
  v0[7] = v8;
  v0[2] = MEMORY[0x263EF8330];
  v0[3] = 1107296256;
  v0[4] = sub_22888D6CC;
  v0[5] = &block_descriptor_50;
  uint64_t v12 = _Block_copy(v0 + 2);
  id v13 = v5;
  id v14 = v30;
  swift_release();
  id v15 = objc_msgSend(v13, sel_remoteObjectProxyWithErrorHandler_, v12);
  _Block_release(v12);
  sub_228916250();
  swift_unknownObjectRelease();
  sub_2288111D0((uint64_t)(v0 + 8), (uint64_t)(v0 + 12));
  __swift_instantiateConcreteTypeFromMangledName(&qword_26826B000);
  if (swift_dynamicCast() && *v10)
  {
    uint64_t v16 = (void (*)(uint64_t *, uint64_t))v0[21];
    uint64_t v17 = v0[20];
    uint64_t v31 = *v10;
    v16(&v31, v17);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_268267EF8 != -1) {
      swift_once();
    }
    uint64_t v18 = v0[24];
    uint64_t v19 = __swift_project_value_buffer(v0[23], (uint64_t)qword_268283D50);
    sub_22880AB38(v19, v18);
    uint64_t v20 = sub_2289155C0();
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v18, 1, v20) == 1)
    {
      sub_22880ABA0(v0[24]);
    }
    else
    {
      uint64_t v22 = sub_2289155A0();
      os_log_type_t v23 = sub_228916050();
      if (os_log_type_enabled(v22, v23))
      {
        id v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v24 = 0;
        _os_log_impl(&dword_228806000, v22, v23, "Service not available to create a session", v24, 2u);
        MEMORY[0x22A6A1090](v24, -1, -1);
      }
      uint64_t v25 = v0[24];

      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v25, v20);
    }
    id v26 = (void *)v0[19];
    v0[17] = v26;
    id v27 = v26;
    sub_228915F20();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v28 = (uint64_t (*)(void))v0[1];
  return v28();
}

uint64_t sub_2288E2EC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[21] = a7;
  v8[22] = a8;
  v8[19] = a5;
  v8[20] = a6;
  v8[18] = a4;
  v8[23] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  v8[24] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268269A30);
  v8[25] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v8[26] = v10;
  v8[27] = *(void *)(v10 + 64);
  v8[28] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2288E2FC8);
}

uint64_t sub_2288E2FC8()
{
  id v32 = v0;
  uint64_t v2 = v0[27];
  uint64_t v1 = v0[28];
  uint64_t v4 = v0[25];
  uint64_t v3 = v0[26];
  uint64_t v30 = (void *)v0[19];
  uint64_t v5 = (void *)v0[18];
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 16))(v1, v0[20], v4);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v7 = (v2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = swift_allocObject();
  unint64_t v9 = v8 + v6;
  uint64_t v10 = v0 + 16;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v9, v1, v4);
  uint64_t v11 = (void *)(v8 + v7);
  void *v11 = v5;
  v11[1] = v30;
  v0[6] = sub_2288E4B80;
  v0[7] = v8;
  v0[2] = MEMORY[0x263EF8330];
  v0[3] = 1107296256;
  v0[4] = sub_22888D6CC;
  v0[5] = &block_descriptor_40_0;
  uint64_t v12 = _Block_copy(v0 + 2);
  id v13 = v5;
  id v14 = v30;
  swift_release();
  id v15 = objc_msgSend(v13, sel_remoteObjectProxyWithErrorHandler_, v12);
  _Block_release(v12);
  sub_228916250();
  swift_unknownObjectRelease();
  sub_2288111D0((uint64_t)(v0 + 8), (uint64_t)(v0 + 12));
  __swift_instantiateConcreteTypeFromMangledName(&qword_26826B000);
  if (swift_dynamicCast() && *v10)
  {
    uint64_t v16 = (void (*)(uint64_t *, uint64_t))v0[21];
    uint64_t v17 = v0[20];
    uint64_t v31 = *v10;
    v16(&v31, v17);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_268267EF8 != -1) {
      swift_once();
    }
    uint64_t v18 = v0[24];
    uint64_t v19 = __swift_project_value_buffer(v0[23], (uint64_t)qword_268283D50);
    sub_22880AB38(v19, v18);
    uint64_t v20 = sub_2289155C0();
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v18, 1, v20) == 1)
    {
      sub_22880ABA0(v0[24]);
    }
    else
    {
      uint64_t v22 = sub_2289155A0();
      os_log_type_t v23 = sub_228916050();
      if (os_log_type_enabled(v22, v23))
      {
        id v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v24 = 0;
        _os_log_impl(&dword_228806000, v22, v23, "Service not available to create a session", v24, 2u);
        MEMORY[0x22A6A1090](v24, -1, -1);
      }
      uint64_t v25 = v0[24];

      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v25, v20);
    }
    id v26 = (void *)v0[19];
    v0[17] = v26;
    id v27 = v26;
    sub_228915F20();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v28 = (uint64_t (*)(void))v0[1];
  return v28();
}

uint64_t sub_2288E3384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[21] = a7;
  v8[22] = a8;
  v8[19] = a5;
  v8[20] = a6;
  v8[18] = a4;
  v8[23] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  v8[24] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268269A28);
  v8[25] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v8[26] = v10;
  v8[27] = *(void *)(v10 + 64);
  v8[28] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2288E348C);
}

uint64_t sub_2288E348C()
{
  id v32 = v0;
  uint64_t v2 = v0[27];
  uint64_t v1 = v0[28];
  uint64_t v4 = v0[25];
  uint64_t v3 = v0[26];
  uint64_t v30 = (void *)v0[19];
  uint64_t v5 = (void *)v0[18];
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 16))(v1, v0[20], v4);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v7 = (v2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = swift_allocObject();
  unint64_t v9 = v8 + v6;
  uint64_t v10 = v0 + 16;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v9, v1, v4);
  uint64_t v11 = (void *)(v8 + v7);
  void *v11 = v5;
  v11[1] = v30;
  v0[6] = sub_2288E4A18;
  v0[7] = v8;
  v0[2] = MEMORY[0x263EF8330];
  v0[3] = 1107296256;
  v0[4] = sub_22888D6CC;
  v0[5] = &block_descriptor_30;
  uint64_t v12 = _Block_copy(v0 + 2);
  id v13 = v5;
  id v14 = v30;
  swift_release();
  id v15 = objc_msgSend(v13, sel_remoteObjectProxyWithErrorHandler_, v12);
  _Block_release(v12);
  sub_228916250();
  swift_unknownObjectRelease();
  sub_2288111D0((uint64_t)(v0 + 8), (uint64_t)(v0 + 12));
  __swift_instantiateConcreteTypeFromMangledName(&qword_26826B000);
  if (swift_dynamicCast() && *v10)
  {
    uint64_t v16 = (void (*)(uint64_t *, uint64_t))v0[21];
    uint64_t v17 = v0[20];
    uint64_t v31 = *v10;
    v16(&v31, v17);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_268267EF8 != -1) {
      swift_once();
    }
    uint64_t v18 = v0[24];
    uint64_t v19 = __swift_project_value_buffer(v0[23], (uint64_t)qword_268283D50);
    sub_22880AB38(v19, v18);
    uint64_t v20 = sub_2289155C0();
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v18, 1, v20) == 1)
    {
      sub_22880ABA0(v0[24]);
    }
    else
    {
      uint64_t v22 = sub_2289155A0();
      os_log_type_t v23 = sub_228916050();
      if (os_log_type_enabled(v22, v23))
      {
        id v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v24 = 0;
        _os_log_impl(&dword_228806000, v22, v23, "Service not available to create a session", v24, 2u);
        MEMORY[0x22A6A1090](v24, -1, -1);
      }
      uint64_t v25 = v0[24];

      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v25, v20);
    }
    id v26 = (void *)v0[19];
    v0[17] = v26;
    id v27 = v26;
    sub_228915F20();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v28 = (uint64_t (*)(void))v0[1];
  return v28();
}

uint64_t sub_2288E3848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[21] = a7;
  v8[22] = a8;
  v8[19] = a5;
  v8[20] = a6;
  v8[18] = a4;
  v8[23] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  v8[24] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268269A20);
  v8[25] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v8[26] = v10;
  v8[27] = *(void *)(v10 + 64);
  v8[28] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2288E3950);
}

uint64_t sub_2288E3950()
{
  id v32 = v0;
  uint64_t v2 = v0[27];
  uint64_t v1 = v0[28];
  uint64_t v4 = v0[25];
  uint64_t v3 = v0[26];
  uint64_t v30 = (void *)v0[19];
  uint64_t v5 = (void *)v0[18];
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 16))(v1, v0[20], v4);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v7 = (v2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = swift_allocObject();
  unint64_t v9 = v8 + v6;
  uint64_t v10 = v0 + 16;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v9, v1, v4);
  uint64_t v11 = (void *)(v8 + v7);
  void *v11 = v5;
  v11[1] = v30;
  v0[6] = sub_2288E480C;
  v0[7] = v8;
  v0[2] = MEMORY[0x263EF8330];
  v0[3] = 1107296256;
  v0[4] = sub_22888D6CC;
  v0[5] = &block_descriptor_20;
  uint64_t v12 = _Block_copy(v0 + 2);
  id v13 = v5;
  id v14 = v30;
  swift_release();
  id v15 = objc_msgSend(v13, sel_remoteObjectProxyWithErrorHandler_, v12);
  _Block_release(v12);
  sub_228916250();
  swift_unknownObjectRelease();
  sub_2288111D0((uint64_t)(v0 + 8), (uint64_t)(v0 + 12));
  __swift_instantiateConcreteTypeFromMangledName(&qword_26826B000);
  if (swift_dynamicCast() && *v10)
  {
    uint64_t v16 = (void (*)(uint64_t *, uint64_t))v0[21];
    uint64_t v17 = v0[20];
    uint64_t v31 = *v10;
    v16(&v31, v17);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_268267EF8 != -1) {
      swift_once();
    }
    uint64_t v18 = v0[24];
    uint64_t v19 = __swift_project_value_buffer(v0[23], (uint64_t)qword_268283D50);
    sub_22880AB38(v19, v18);
    uint64_t v20 = sub_2289155C0();
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v18, 1, v20) == 1)
    {
      sub_22880ABA0(v0[24]);
    }
    else
    {
      uint64_t v22 = sub_2289155A0();
      os_log_type_t v23 = sub_228916050();
      if (os_log_type_enabled(v22, v23))
      {
        id v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v24 = 0;
        _os_log_impl(&dword_228806000, v22, v23, "Service not available to create a session", v24, 2u);
        MEMORY[0x22A6A1090](v24, -1, -1);
      }
      uint64_t v25 = v0[24];

      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v25, v20);
    }
    id v26 = (void *)v0[19];
    v0[17] = v26;
    id v27 = v26;
    sub_228915F20();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v28 = (uint64_t (*)(void))v0[1];
  return v28();
}

uint64_t sub_2288E3D0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[21] = a7;
  v8[22] = a8;
  v8[19] = a5;
  v8[20] = a6;
  v8[18] = a4;
  v8[23] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  v8[24] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2682690E0);
  v8[25] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v8[26] = v10;
  v8[27] = *(void *)(v10 + 64);
  v8[28] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2288E3E14);
}

uint64_t sub_2288E3E14()
{
  id v32 = v0;
  uint64_t v2 = v0[27];
  uint64_t v1 = v0[28];
  uint64_t v4 = v0[25];
  uint64_t v3 = v0[26];
  uint64_t v30 = (void *)v0[19];
  uint64_t v5 = (void *)v0[18];
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 16))(v1, v0[20], v4);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v7 = (v2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = swift_allocObject();
  unint64_t v9 = v8 + v6;
  uint64_t v10 = v0 + 16;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v9, v1, v4);
  uint64_t v11 = (void *)(v8 + v7);
  void *v11 = v5;
  v11[1] = v30;
  v0[6] = sub_2288E468C;
  v0[7] = v8;
  v0[2] = MEMORY[0x263EF8330];
  v0[3] = 1107296256;
  v0[4] = sub_22888D6CC;
  v0[5] = &block_descriptor_6;
  uint64_t v12 = _Block_copy(v0 + 2);
  id v13 = v5;
  id v14 = v30;
  swift_release();
  id v15 = objc_msgSend(v13, sel_remoteObjectProxyWithErrorHandler_, v12);
  _Block_release(v12);
  sub_228916250();
  swift_unknownObjectRelease();
  sub_2288111D0((uint64_t)(v0 + 8), (uint64_t)(v0 + 12));
  __swift_instantiateConcreteTypeFromMangledName(&qword_26826B000);
  if (swift_dynamicCast() && *v10)
  {
    uint64_t v16 = (void (*)(uint64_t *, uint64_t))v0[21];
    uint64_t v17 = v0[20];
    uint64_t v31 = *v10;
    v16(&v31, v17);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_268267EF8 != -1) {
      swift_once();
    }
    uint64_t v18 = v0[24];
    uint64_t v19 = __swift_project_value_buffer(v0[23], (uint64_t)qword_268283D50);
    sub_22880AB38(v19, v18);
    uint64_t v20 = sub_2289155C0();
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v18, 1, v20) == 1)
    {
      sub_22880ABA0(v0[24]);
    }
    else
    {
      uint64_t v22 = sub_2289155A0();
      os_log_type_t v23 = sub_228916050();
      if (os_log_type_enabled(v22, v23))
      {
        id v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v24 = 0;
        _os_log_impl(&dword_228806000, v22, v23, "Service not available to create a session", v24, 2u);
        MEMORY[0x22A6A1090](v24, -1, -1);
      }
      uint64_t v25 = v0[24];

      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v25, v20);
    }
    id v26 = (void *)v0[19];
    v0[17] = v26;
    id v27 = v26;
    sub_228915F20();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v28 = (uint64_t (*)(void))v0[1];
  return v28();
}

uint64_t sub_2288E41D0(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t *a5)
{
  uint64_t v28 = a5;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_268267EF8 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v8, (uint64_t)qword_268283D50);
  sub_22880AB38(v11, (uint64_t)v10);
  uint64_t v12 = sub_2289155C0();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) == 1)
  {
    sub_22880ABA0((uint64_t)v10);
  }
  else
  {
    id v14 = a1;
    id v15 = a1;
    uint64_t v16 = sub_2289155A0();
    os_log_type_t v17 = sub_228916050();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v27 = a2;
      uint64_t v19 = (uint8_t *)v18;
      uint64_t v20 = (void *)swift_slowAlloc();
      id v26 = a4;
      *(_DWORD *)uint64_t v19 = 138412290;
      v25[1] = v19 + 4;
      id v21 = a1;
      uint64_t v22 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v29 = v22;
      a4 = v26;
      sub_2289161F0();
      *uint64_t v20 = v22;

      _os_log_impl(&dword_228806000, v16, v17, "Error using service: [ %@ ]", v19, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_268269A10);
      swift_arrayDestroy();
      MEMORY[0x22A6A1090](v20, -1, -1);
      MEMORY[0x22A6A1090](v19, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
  }
  uint64_t v29 = (uint64_t)a4;
  id v23 = a4;
  __swift_instantiateConcreteTypeFromMangledName(v28);
  return sub_228915F20();
}

uint64_t sub_2288E449C(uint64_t a1)
{
  return sub_2288E06A0(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), &qword_268269A58, (uint64_t)&unk_26DD04108, (uint64_t)&unk_26826B080);
}

uint64_t type metadata accessor for MobileDocumentReader()
{
  return self;
}

uint64_t method lookup function for MobileDocumentReader(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for MobileDocumentReader);
}

uint64_t dispatch thunk of MobileDocumentReader.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t sub_2288E4530()
{
  return objectdestroyTm_2(&qword_2682690E0);
}

uint64_t sub_2288E453C(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2682690E0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = v1[5];
  uint64_t v10 = (uint64_t)v1 + v5;
  uint64_t v11 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  id v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  void *v14 = v2;
  v14[1] = sub_22881CB04;
  return sub_2288E3D0C(a1, v6, v7, v8, v9, v10, v12, v13);
}

uint64_t sub_2288E4680()
{
  return objectdestroy_9Tm_0(&qword_2682690E0);
}

uint64_t sub_2288E468C(void *a1)
{
  return sub_2288E4818(a1, &qword_2682690E0);
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t sub_2288E46B0()
{
  return objectdestroyTm_2(&qword_268269A20);
}

uint64_t sub_2288E46BC(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268269A20) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = v1[5];
  uint64_t v10 = (uint64_t)v1 + v5;
  uint64_t v11 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  id v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  void *v14 = v2;
  v14[1] = sub_22881CB04;
  return sub_2288E3848(a1, v6, v7, v8, v9, v10, v12, v13);
}

uint64_t sub_2288E4800()
{
  return objectdestroy_9Tm_0(&qword_268269A20);
}

uint64_t sub_2288E480C(void *a1)
{
  return sub_2288E4818(a1, &qword_268269A20);
}

uint64_t sub_2288E4818(void *a1, uint64_t *a2)
{
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a2) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_2288E41D0(a1, v2 + v6, *(void *)(v2 + v7), *(void **)(v2 + v7 + 8), a2);
}

uint64_t sub_2288E48BC()
{
  return objectdestroyTm_2(&qword_268269A28);
}

uint64_t sub_2288E48C8(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268269A28) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = v1[5];
  uint64_t v10 = (uint64_t)v1 + v5;
  uint64_t v11 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  id v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  void *v14 = v2;
  v14[1] = sub_22881CB04;
  return sub_2288E3384(a1, v6, v7, v8, v9, v10, v12, v13);
}

uint64_t sub_2288E4A0C()
{
  return objectdestroy_9Tm_0(&qword_268269A28);
}

uint64_t sub_2288E4A18(void *a1)
{
  return sub_2288E4818(a1, &qword_268269A28);
}

uint64_t sub_2288E4A24()
{
  return objectdestroyTm_2(&qword_268269A30);
}

uint64_t sub_2288E4A30(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268269A30) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = v1[5];
  uint64_t v10 = (uint64_t)v1 + v5;
  uint64_t v11 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  id v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  void *v14 = v2;
  v14[1] = sub_22881CB04;
  return sub_2288E2EC0(a1, v6, v7, v8, v9, v10, v12, v13);
}

uint64_t sub_2288E4B74()
{
  return objectdestroy_9Tm_0(&qword_268269A30);
}

uint64_t sub_2288E4B80(void *a1)
{
  return sub_2288E4818(a1, &qword_268269A30);
}

uint64_t sub_2288E4B8C()
{
  return objectdestroyTm_2(&qword_268269A38);
}

uint64_t sub_2288E4B98(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268269A38) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = v1[5];
  uint64_t v10 = (uint64_t)v1 + v5;
  uint64_t v11 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  id v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  void *v14 = v2;
  v14[1] = sub_22881CB04;
  return sub_2288E29FC(a1, v6, v7, v8, v9, v10, v12, v13);
}

uint64_t sub_2288E4CDC()
{
  return objectdestroy_9Tm_0(&qword_268269A38);
}

uint64_t sub_2288E4CE8(void *a1)
{
  return sub_2288E4818(a1, &qword_268269A38);
}

uint64_t sub_2288E4CF4()
{
  return objectdestroyTm_2(&qword_268269A40);
}

uint64_t sub_2288E4D00(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268269A40) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = v1[5];
  uint64_t v10 = (uint64_t)v1 + v5;
  uint64_t v11 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  id v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  void *v14 = v2;
  v14[1] = sub_22881CB04;
  return sub_2288E2538(a1, v6, v7, v8, v9, v10, v12, v13);
}

uint64_t sub_2288E4E44()
{
  return objectdestroy_9Tm_0(&qword_268269A40);
}

uint64_t sub_2288E4E50(void *a1)
{
  return sub_2288E4818(a1, &qword_268269A40);
}

uint64_t sub_2288E4E5C()
{
  return objectdestroyTm_2(&qword_268269A48);
}

uint64_t sub_2288E4E68(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268269A48) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = v1[5];
  uint64_t v10 = (uint64_t)v1 + v5;
  uint64_t v11 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  id v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  void *v14 = v2;
  v14[1] = sub_22881CB04;
  return sub_2288E2074(a1, v6, v7, v8, v9, v10, v12, v13);
}

uint64_t sub_2288E4FAC()
{
  return objectdestroy_9Tm_0(&qword_268269A48);
}

uint64_t sub_2288E4FB8(void *a1)
{
  return sub_2288E4818(a1, &qword_268269A48);
}

uint64_t sub_2288E4FC4()
{
  return objectdestroyTm_2(&qword_268269A50);
}

uint64_t sub_2288E4FD0(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268269A50) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = v1[5];
  uint64_t v10 = (uint64_t)v1 + v5;
  uint64_t v11 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  id v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  void *v14 = v2;
  v14[1] = sub_22881CB04;
  return sub_2288E1BB0(a1, v6, v7, v8, v9, v10, v12, v13);
}

uint64_t sub_2288E5114()
{
  return objectdestroy_9Tm_0(&qword_268269A50);
}

uint64_t sub_2288E5120(void *a1)
{
  return sub_2288E4818(a1, &qword_268269A50);
}

uint64_t sub_2288E512C()
{
  return objectdestroyTm_2(&qword_268269A58);
}

uint64_t sub_2288E5138(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268269A58) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = v1[5];
  uint64_t v10 = (uint64_t)v1 + v5;
  uint64_t v11 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  id v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  void *v14 = v2;
  v14[1] = sub_228812B70;
  return sub_2288E16EC(a1, v6, v7, v8, v9, v10, v12, v13);
}

uint64_t sub_2288E527C()
{
  return objectdestroy_9Tm_0(&qword_268269A58);
}

uint64_t sub_2288E5288(void *a1)
{
  return sub_2288E4818(a1, &qword_268269A58);
}

uint64_t sub_2288E5294()
{
  return objectdestroyTm_2(&qword_2682690E0);
}

uint64_t sub_2288E52A0(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2682690E0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = v1[5];
  uint64_t v10 = (uint64_t)v1 + v5;
  uint64_t v11 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  id v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  void *v14 = v2;
  v14[1] = sub_22881CB04;
  return sub_2288E1228(a1, v6, v7, v8, v9, v10, v12, v13);
}

uint64_t sub_2288E53E4()
{
  return objectdestroy_9Tm_0(&qword_2682690E0);
}

uint64_t sub_2288E53F0()
{
  return objectdestroyTm_2(&qword_268269198);
}

uint64_t sub_2288E53FC(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268269198) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = v1[5];
  uint64_t v10 = (uint64_t)v1 + v5;
  uint64_t v11 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  id v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  void *v14 = v2;
  v14[1] = sub_22881CB04;
  return sub_2288E08A0(a1, v6, v7, v8, v9, v10, v12, v13);
}

uint64_t sub_2288E5540()
{
  return objectdestroy_9Tm_0(&qword_268269198);
}

uint64_t sub_2288E554C(void *a1)
{
  return sub_2288E4818(a1, &qword_268269198);
}

uint64_t sub_2288E5558()
{
  return objectdestroyTm_2(&qword_2682691C0);
}

uint64_t objectdestroyTm_2(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 48) & ~v4;
  uint64_t v6 = v4 | 7;
  unint64_t v7 = ((*(void *)(v3 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  swift_release();

  return MEMORY[0x270FA0238](v1, v7, v6);
}

uint64_t sub_2288E565C(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2682691C0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = v1[5];
  uint64_t v10 = (uint64_t)v1 + v5;
  uint64_t v11 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  id v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  void *v14 = v2;
  v14[1] = sub_22881CB04;
  return sub_2288E0D64(a1, v6, v7, v8, v9, v10, v12, v13);
}

uint64_t sub_2288E57A0()
{
  return objectdestroy_9Tm_0(&qword_2682691C0);
}

uint64_t objectdestroy_9Tm_0(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = v4 | 7;
  unint64_t v7 = (*(void *)(v3 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = v7 + 16;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  uint64_t v9 = (id *)(v1 + v7);

  return MEMORY[0x270FA0238](v1, v8, v6);
}

uint64_t sub_2288E5858(void *a1)
{
  return sub_2288E4818(a1, &qword_2682691C0);
}

uint64_t static JwtHelper.redactSignature(_:)(uint64_t a1)
{
  sub_2288566E4();
  uint64_t v2 = sub_228916210();
  if (*(void *)(v2 + 16) < 3uLL)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    return a1;
  }
  uint64_t result = sub_228916320();
  if (*(void *)(v2 + 16))
  {
    uint64_t v4 = *(void *)(v2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t result = sub_228915D60();
    if (*(void *)(v2 + 16) >= 2uLL)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_228915D60();
      swift_bridgeObjectRelease();
      sub_228915D60();
      return v4;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t static JwtHelper.generateToken<A, B>(header:payload:privateKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v58 = a5;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_2288BC834();
  if (v13 >> 60 != 15)
  {
    uint64_t v14 = v12;
    unint64_t v15 = v13;
    uint64_t v53 = a3;
    uint64_t v55 = v9;
    uint64_t v63 = sub_228915240();
    uint64_t v64 = v16;
    uint64_t v56 = a7;
    uint64_t v61 = 43;
    unint64_t v62 = 0xE100000000000000;
    uint64_t v59 = 45;
    unint64_t v60 = 0xE100000000000000;
    sub_2288566E4();
    uint64_t v17 = sub_228916220();
    uint64_t v19 = v18;
    swift_bridgeObjectRelease();
    uint64_t v63 = v17;
    uint64_t v64 = v19;
    uint64_t v61 = 47;
    unint64_t v62 = 0xE100000000000000;
    uint64_t v59 = 95;
    unint64_t v60 = 0xE100000000000000;
    uint64_t v20 = sub_228916220();
    uint64_t v22 = v21;
    swift_bridgeObjectRelease();
    uint64_t v63 = v20;
    uint64_t v64 = v22;
    uint64_t v61 = 61;
    unint64_t v62 = 0xE100000000000000;
    uint64_t v59 = 0;
    unint64_t v60 = 0xE000000000000000;
    uint64_t v54 = sub_228916220();
    uint64_t v57 = v23;
    swift_bridgeObjectRelease();
    sub_22880BB6C(v14, v15);
    uint64_t v24 = sub_2288BC834();
    if (v25 >> 60 != 15)
    {
      uint64_t v26 = v24;
      unint64_t v27 = v25;
      uint64_t v63 = sub_228915240();
      uint64_t v64 = v28;
      uint64_t v61 = 43;
      unint64_t v62 = 0xE100000000000000;
      uint64_t v59 = 45;
      unint64_t v60 = 0xE100000000000000;
      uint64_t v29 = sub_228916220();
      uint64_t v31 = v30;
      swift_bridgeObjectRelease();
      uint64_t v63 = v29;
      uint64_t v64 = v31;
      uint64_t v61 = 47;
      unint64_t v62 = 0xE100000000000000;
      uint64_t v59 = 95;
      unint64_t v60 = 0xE100000000000000;
      uint64_t v32 = sub_228916220();
      uint64_t v34 = v33;
      swift_bridgeObjectRelease();
      uint64_t v63 = v32;
      uint64_t v64 = v34;
      uint64_t v61 = 61;
      unint64_t v62 = 0xE100000000000000;
      uint64_t v59 = 0;
      unint64_t v60 = 0xE000000000000000;
      uint64_t v35 = sub_228916220();
      swift_bridgeObjectRelease();
      sub_22880BB6C(v26, v27);
      uint64_t v63 = v54;
      uint64_t v64 = v57;
      swift_bridgeObjectRetain();
      sub_228915D60();
      sub_228915D60();
      uint64_t v36 = sub_2288BDC04(v53);
      unint64_t v38 = v37;
      swift_bridgeObjectRelease();
      if (v38 >> 60 != 15)
      {
        uint64_t v63 = sub_228915240();
        uint64_t v64 = v46;
        uint64_t v61 = 43;
        unint64_t v62 = 0xE100000000000000;
        uint64_t v59 = 45;
        unint64_t v60 = 0xE100000000000000;
        uint64_t v47 = sub_228916220();
        uint64_t v49 = v48;
        swift_bridgeObjectRelease();
        uint64_t v63 = v47;
        uint64_t v64 = v49;
        uint64_t v61 = 47;
        unint64_t v62 = 0xE100000000000000;
        uint64_t v59 = 95;
        unint64_t v60 = 0xE100000000000000;
        uint64_t v50 = sub_228916220();
        uint64_t v58 = v35;
        uint64_t v52 = v51;
        swift_bridgeObjectRelease();
        uint64_t v63 = v50;
        uint64_t v64 = v52;
        uint64_t v61 = 61;
        unint64_t v62 = 0xE100000000000000;
        uint64_t v59 = 0;
        unint64_t v60 = 0xE000000000000000;
        sub_228916220();
        swift_bridgeObjectRelease();
        sub_22880BB6C(v36, v38);
        uint64_t v63 = v54;
        uint64_t v64 = v57;
        sub_228915D60();
        sub_228915D60();
        swift_bridgeObjectRelease();
        sub_228915D60();
        sub_228915D60();
        swift_bridgeObjectRelease();
        return v63;
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t v9 = v55;
  }
  if (qword_268267F18 != -1) {
    swift_once();
  }
  uint64_t v39 = __swift_project_value_buffer(v9, (uint64_t)qword_268283DB0);
  sub_22883741C(v39, (uint64_t)v11, (uint64_t *)&unk_2682684D0);
  uint64_t v40 = sub_2289155C0();
  uint64_t v41 = *(void *)(v40 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v11, 1, v40) == 1)
  {
    sub_2288110C0((uint64_t)v11, (uint64_t *)&unk_2682684D0);
  }
  else
  {
    uint64_t v42 = sub_2289155A0();
    os_log_type_t v43 = sub_228916050();
    if (os_log_type_enabled(v42, v43))
    {
      char v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v44 = 0;
      _os_log_impl(&dword_228806000, v42, v43, "Could not generate JWT token", v44, 2u);
      MEMORY[0x22A6A1090](v44, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v40);
  }
  return 0;
}

uint64_t static JwtHelper.header(_:)(uint64_t a1, uint64_t a2)
{
  return sub_2288EC298(a1, a2, 0);
}

uint64_t static JwtHelper.payload(_:)(uint64_t a1, uint64_t a2)
{
  return sub_2288EC298(a1, a2, 1);
}

uint64_t static JwtHelper.compareStringClaim(token1:token2:claim:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = sub_2288E61B8(0, a1, a2, a5, a6);
  if (v11)
  {
    uint64_t v12 = v10;
    uint64_t v13 = v11;
    uint64_t v14 = sub_2288E61B8(0, a3, a4, a5, a6);
    if (v15)
    {
      if (v12 == v14 && v13 == v15) {
        char v16 = 1;
      }
      else {
        char v16 = sub_228916660();
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      char v16 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v16 = 0;
  }
  return v16 & 1;
}

uint64_t sub_2288E61B8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_2288EC298(a2, a3, ~a1 & 1);
  if (!v7) {
    return 0;
  }
  sub_2288566E4();
  uint64_t v8 = sub_228916220();
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  *(void *)&long long v19 = v8;
  *((void *)&v19 + 1) = v10;
  uint64_t v23 = 95;
  unint64_t v24 = 0xE100000000000000;
  uint64_t v21 = 47;
  unint64_t v22 = 0xE100000000000000;
  sub_228916220();
  swift_bridgeObjectRelease();
  while ((sub_228915D20() & 3) != 0)
  {
    *(void *)&long long v19 = 61;
    *((void *)&v19 + 1) = 0xE100000000000000;
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_228915E00();
    unint64_t v24 = v11;
    sub_228915D50();
    swift_bridgeObjectRelease();
  }
  uint64_t v12 = sub_2289151F0();
  unint64_t v14 = v13;
  sub_22880ACA4(v12, v13);
  swift_bridgeObjectRelease();
  uint64_t result = 0;
  if (v14 >> 60 != 15)
  {
    sub_22880BB6C(v12, v14);
    uint64_t v16 = sub_2288BD35C(1);
    sub_22880BB6C(v12, v14);
    if (*(void *)(v16 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v17 = sub_228816C80(a4, a5);
      if (v18)
      {
        sub_2288111D0(*(void *)(v16 + 56) + 32 * v17, (uint64_t)&v19);
      }
      else
      {
        long long v19 = 0u;
        long long v20 = 0u;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      long long v19 = 0u;
      long long v20 = 0u;
    }
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_268268500);
    if (swift_dynamicCast()) {
      return v23;
    }
    else {
      return 0;
    }
  }
  return result;
}

uint64_t sub_2288E6468(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_2288EC298(a2, a3, ~a1 & 1);
  if (!v7) {
    return 0;
  }
  sub_2288566E4();
  uint64_t v8 = sub_228916220();
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  *(void *)&long long v19 = v8;
  *((void *)&v19 + 1) = v10;
  uint64_t v23 = 95;
  unint64_t v24 = 0xE100000000000000;
  uint64_t v21 = 47;
  unint64_t v22 = 0xE100000000000000;
  sub_228916220();
  swift_bridgeObjectRelease();
  while ((sub_228915D20() & 3) != 0)
  {
    *(void *)&long long v19 = 61;
    *((void *)&v19 + 1) = 0xE100000000000000;
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_228915E00();
    unint64_t v24 = v11;
    sub_228915D50();
    swift_bridgeObjectRelease();
  }
  uint64_t v12 = sub_2289151F0();
  unint64_t v14 = v13;
  sub_22880ACA4(v12, v13);
  swift_bridgeObjectRelease();
  if (v14 >> 60 == 15) {
    return 0;
  }
  sub_22880BB6C(v12, v14);
  uint64_t v16 = sub_2288BD35C(1);
  sub_22880BB6C(v12, v14);
  if (*(void *)(v16 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v17 = sub_228816C80(a4, a5);
    if (v18)
    {
      sub_2288111D0(*(void *)(v16 + 56) + 32 * v17, (uint64_t)&v19);
    }
    else
    {
      long long v19 = 0u;
      long long v20 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v19 = 0u;
    long long v20 = 0u;
  }
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268268500);
  if (swift_dynamicCast()) {
    return v23;
  }
  else {
    return 0;
  }
}

uint64_t static JwtHelper.claim<A>(fromHeader:_:claim:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  sub_2288EC298(a2, a3, (a1 & 1) == 0);
  if (!v10) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 - 8) + 56))(a7, 1, 1, a6);
  }
  sub_2288566E4();
  uint64_t v11 = sub_228916220();
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  *(void *)&long long v24 = v11;
  *((void *)&v24 + 1) = v13;
  uint64_t v28 = 95;
  unint64_t v29 = 0xE100000000000000;
  uint64_t v26 = 47;
  unint64_t v27 = 0xE100000000000000;
  sub_228916220();
  swift_bridgeObjectRelease();
  while ((sub_228915D20() & 3) != 0)
  {
    *(void *)&long long v24 = 61;
    *((void *)&v24 + 1) = 0xE100000000000000;
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_228915E00();
    unint64_t v29 = v14;
    sub_228915D50();
    swift_bridgeObjectRelease();
  }
  uint64_t v15 = sub_2289151F0();
  unint64_t v17 = v16;
  sub_22880ACA4(v15, v16);
  swift_bridgeObjectRelease();
  if (v17 >> 60 == 15) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 - 8) + 56))(a7, 1, 1, a6);
  }
  sub_22880BB6C(v15, v17);
  uint64_t v19 = sub_2288BD35C(1);
  sub_22880BB6C(v15, v17);
  if (*(void *)(v19 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v20 = sub_228816C80(a4, a5);
    if (v21)
    {
      sub_2288111D0(*(void *)(v19 + 56) + 32 * v20, (uint64_t)&v24);
    }
    else
    {
      long long v24 = 0u;
      long long v25 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v24 = 0u;
    long long v25 = 0u;
  }
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268268500);
  int v22 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a6 - 8) + 56))(a7, v22 ^ 1u, 1, a6);
}

uint64_t sub_2288E6A0C(uint64_t a1, uint64_t a2)
{
  sub_2288111D0(a1, (uint64_t)v4);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    sub_2288111D0(a2, (uint64_t)v4);
    return (swift_dynamicCast() & 1) != 0;
  }
  return result;
}

uint64_t sub_2288E6AB4(uint64_t a1, uint64_t a2)
{
  sub_2288111D0(a1, (uint64_t)v5);
  if (!swift_dynamicCast()) {
    goto LABEL_5;
  }
  sub_2288111D0(a2, (uint64_t)v5);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    char v3 = 0;
    return v3 & 1;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v3 = 1;
  return v3 & 1;
}

uint64_t static JwtHelper.compareClaim<A>(_:_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v32 = a5;
  uint64_t v34 = a3;
  uint64_t v7 = sub_2289161E0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v33 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v29 - v11;
  uint64_t v13 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](v14);
  unint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v29 - v18;
  sub_2288111D0(a2, (uint64_t)v35);
  char v20 = swift_dynamicCast();
  char v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  if ((v20 & 1) == 0)
  {
    v21(v12, 1, 1, a4);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
LABEL_6:
    char v26 = 0;
    return v26 & 1;
  }
  uint64_t v30 = v16;
  uint64_t v31 = v7;
  v21(v12, 0, 1, a4);
  int v22 = v12;
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v23(v19, v22, a4);
  sub_2288111D0(v34, (uint64_t)v35);
  long long v24 = v33;
  if ((swift_dynamicCast() & 1) == 0)
  {
    v21(v24, 1, 1, a4);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v19, a4);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v24, v31);
    goto LABEL_6;
  }
  v21(v24, 0, 1, a4);
  long long v25 = v30;
  v23(v30, v24, a4);
  char v26 = sub_228915C30();
  unint64_t v27 = *(void (**)(char *, uint64_t))(v13 + 8);
  v27(v25, a4);
  v27(v19, a4);
  return v26 & 1;
}

uint64_t sub_2288E6EE8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(void *))
{
  sub_2288111D0(a1, (uint64_t)v15);
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    uint64_t v10 = v16;
    sub_2288111D0(a2, (uint64_t)v15);
    swift_bridgeObjectRetain();
    if ((swift_dynamicCast() & 1) != 0
      && (uint64_t v14 = v13,
          uint64_t v11 = *(void *)(v10 + 16),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          uint64_t v12 = *(void *)(v13 + 16),
          swift_bridgeObjectRelease(),
          v11 == v12))
    {
      sub_2288E978C(&v16, a4, a5);
      swift_bridgeObjectRelease();
      sub_2288E978C(&v14, a4, a5);
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return result;
}

uint64_t static JwtHelper.compareArrayClaim<A>(_:_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2288111D0(a1, (uint64_t)v10);
  sub_228915F00();
  if (swift_dynamicCast())
  {
    uint64_t v5 = v11;
    sub_2288111D0(a2, (uint64_t)v10);
    swift_bridgeObjectRetain();
    if (swift_dynamicCast())
    {
      swift_bridgeObjectRetain();
      uint64_t v6 = MEMORY[0x22A69FF50](v5, a3);
      swift_bridgeObjectRelease();
      uint64_t v7 = MEMORY[0x22A69FF50](v9, a3);
      swift_bridgeObjectRelease();
      if (v6 == v7)
      {
        swift_getWitnessTable();
        swift_getWitnessTable();
        sub_228915C10();
        swift_bridgeObjectRelease();
        sub_228915C10();
        swift_bridgeObjectRelease();
        return 1;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t static JwtHelper.compareClaims(token1:token2:claims:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v60 - v14;
  uint64_t v16 = sub_2288EC298(a1, a2, 1);
  if (!v17) {
    return 0;
  }
  unint64_t v60 = v15;
  uint64_t v61 = v10;
  unint64_t v62 = v12;
  *(void *)&long long v68 = v16;
  *((void *)&v68 + 1) = v17;
  *(void *)&long long v66 = 45;
  *((void *)&v66 + 1) = 0xE100000000000000;
  *(void *)&long long v64 = 43;
  *((void *)&v64 + 1) = 0xE100000000000000;
  sub_2288566E4();
  uint64_t v18 = sub_228916220();
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  *(void *)&long long v68 = v18;
  *((void *)&v68 + 1) = v20;
  *(void *)&long long v66 = 95;
  *((void *)&v66 + 1) = 0xE100000000000000;
  *(void *)&long long v64 = 47;
  *((void *)&v64 + 1) = 0xE100000000000000;
  uint64_t v21 = sub_228916220();
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();
  for (; (sub_228915D20() & 3) != 0; uint64_t v21 = v66)
  {
    *(void *)&long long v68 = 61;
    *((void *)&v68 + 1) = 0xE100000000000000;
    *(void *)&long long v66 = v21;
    *((void *)&v66 + 1) = v23;
    swift_bridgeObjectRetain();
    *(void *)&long long v66 = sub_228915E00();
    *((void *)&v66 + 1) = v24;
    sub_228915D50();
    swift_bridgeObjectRelease();
    uint64_t v23 = *((void *)&v66 + 1);
  }
  uint64_t v25 = sub_2289151F0();
  unint64_t v27 = v26;
  sub_22880ACA4(v25, v26);
  swift_bridgeObjectRelease();
  if (v27 >> 60 == 15) {
    return 0;
  }
  sub_22880BB6C(v25, v27);
  uint64_t v28 = sub_2288BD35C(1);
  sub_22880BB6C(v25, v27);
  *(void *)&long long v66 = MEMORY[0x263F8EE80];
  uint64_t v29 = *(void *)(a5 + 16);
  if (v29)
  {
    swift_bridgeObjectRetain();
    uint64_t v30 = (uint64_t *)(a5 + 40);
    uint64_t v31 = v29;
    do
    {
      uint64_t v32 = *v30;
      *(void *)&long long v68 = *(v30 - 1);
      *((void *)&v68 + 1) = v32;
      swift_bridgeObjectRetain();
      sub_2288E884C((uint64_t)&v66, (uint64_t *)&v68, v28);
      v30 += 2;
      swift_bridgeObjectRelease();
      --v31;
    }
    while (v31);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v33 = v66;
    uint64_t v34 = static JwtHelper.claims(_:claimIdentifiers:)(a3, a4, a5);
    if (v34)
    {
      uint64_t v35 = v34;
      swift_bridgeObjectRetain();
      uint64_t v36 = (unint64_t *)(a5 + 40);
      while (1)
      {
        uint64_t v38 = *(v36 - 1);
        unint64_t v37 = *v36;
        if (!*(void *)(v33 + 16)) {
          break;
        }
        swift_bridgeObjectRetain_n();
        unint64_t v39 = sub_228816C80(v38, v37);
        if (v40)
        {
          sub_2288111D0(*(void *)(v33 + 56) + 32 * v39, (uint64_t)&v66);
        }
        else
        {
          long long v66 = 0u;
          long long v67 = 0u;
        }
        swift_bridgeObjectRelease();
        if (!*((void *)&v67 + 1)) {
          goto LABEL_29;
        }
        sub_22881122C(&v66, &v68);
        if (!*(void *)(v35 + 16))
        {
          long long v64 = 0u;
          long long v65 = 0u;
LABEL_31:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v68);
          swift_bridgeObjectRelease();
          sub_2288110C0((uint64_t)&v64, &qword_268268500);
          goto LABEL_33;
        }
        swift_bridgeObjectRetain();
        unint64_t v41 = sub_228816C80(v38, v37);
        if (v42)
        {
          sub_2288111D0(*(void *)(v35 + 56) + 32 * v41, (uint64_t)&v64);
        }
        else
        {
          long long v64 = 0u;
          long long v65 = 0u;
        }
        swift_bridgeObjectRelease();
        if (!*((void *)&v65 + 1)) {
          goto LABEL_31;
        }
        sub_22881122C(&v64, &v66);
        __swift_project_boxed_opaque_existential_1(&v68, v69);
        uint64_t DynamicType = swift_getDynamicType();
        __swift_project_boxed_opaque_existential_1(&v66, *((uint64_t *)&v67 + 1));
        if (DynamicType != swift_getDynamicType())
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v66);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v68);
          swift_bridgeObjectRelease();
          goto LABEL_33;
        }
        if ((sub_2288EC508((uint64_t)&v68, (uint64_t)&v66) & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (qword_268267F18 != -1) {
            swift_once();
          }
          uint64_t v53 = __swift_project_value_buffer(v61, (uint64_t)qword_268283DB0);
          uint64_t v45 = (uint64_t)v60;
          sub_22883741C(v53, (uint64_t)v60, (uint64_t *)&unk_2682684D0);
          uint64_t v54 = sub_2289155C0();
          uint64_t v55 = *(void *)(v54 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v45, 1, v54) == 1)
          {
            swift_bridgeObjectRelease();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v66);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v68);
            goto LABEL_37;
          }
          swift_bridgeObjectRetain();
          uint64_t v56 = sub_2289155A0();
          os_log_type_t v57 = sub_228916070();
          if (os_log_type_enabled(v56, v57))
          {
            uint64_t v58 = (uint8_t *)swift_slowAlloc();
            uint64_t v59 = swift_slowAlloc();
            *(void *)&long long v64 = v59;
            *(_DWORD *)uint64_t v58 = 136315138;
            swift_bridgeObjectRetain();
            uint64_t v63 = sub_2288AB2C4(v38, v37, (uint64_t *)&v64);
            uint64_t v45 = (uint64_t)v60;
            sub_2289161F0();
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_228806000, v56, v57, "The claim: [ %s ] does not match or could not be compared", v58, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x22A6A1090](v59, -1, -1);
            MEMORY[0x22A6A1090](v58, -1, -1);
          }
          else
          {
            swift_bridgeObjectRelease_n();
          }

          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v66);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v68);
          (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v45, v54);
          return 0;
        }
        v36 += 2;
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v66);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v68);
        if (!--v29)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_26;
        }
      }
      long long v66 = 0u;
      long long v67 = 0u;
      swift_bridgeObjectRetain();
LABEL_29:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2288110C0((uint64_t)&v66, &qword_268268500);
LABEL_33:
      uint64_t v45 = (uint64_t)v62;
      if (qword_268267F18 != -1) {
        swift_once();
      }
      uint64_t v46 = __swift_project_value_buffer(v61, (uint64_t)qword_268283DB0);
      sub_22883741C(v46, v45, (uint64_t *)&unk_2682684D0);
      uint64_t v47 = sub_2289155C0();
      uint64_t v48 = *(void *)(v47 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v45, 1, v47) == 1)
      {
        swift_bridgeObjectRelease();
LABEL_37:
        sub_2288110C0(v45, (uint64_t *)&unk_2682684D0);
        return 0;
      }
      swift_bridgeObjectRetain();
      uint64_t v49 = sub_2289155A0();
      os_log_type_t v50 = sub_228916050();
      if (os_log_type_enabled(v49, v50))
      {
        uint64_t v51 = (uint8_t *)swift_slowAlloc();
        uint64_t v52 = swift_slowAlloc();
        *(void *)&long long v68 = v52;
        *(_DWORD *)uint64_t v51 = 136315138;
        swift_bridgeObjectRetain();
        *(void *)&long long v66 = sub_2288AB2C4(v38, v37, (uint64_t *)&v68);
        uint64_t v45 = (uint64_t)v62;
        sub_2289161F0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_228806000, v49, v50, "The claim: [ %s ] could not be found or have different value types", v51, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22A6A1090](v52, -1, -1);
        MEMORY[0x22A6A1090](v51, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v45, v47);
      return 0;
    }
    goto LABEL_27;
  }
  swift_bridgeObjectRelease();
  if (!static JwtHelper.claims(_:claimIdentifiers:)(a3, a4, a5))
  {
LABEL_27:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRelease();
LABEL_26:
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t static JwtHelper.claims(_:claimIdentifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2288EC298(a1, a2, 1);
  if (!v4) {
    return 0;
  }
  sub_2288566E4();
  uint64_t v5 = sub_228916220();
  unint64_t v7 = v6;
  swift_bridgeObjectRelease();
  uint64_t v19 = v5;
  unint64_t v20 = v7;
  uint64_t v17 = 95;
  unint64_t v18 = 0xE100000000000000;
  sub_228916220();
  swift_bridgeObjectRelease();
  while ((sub_228915D20() & 3) != 0)
  {
    uint64_t v19 = 61;
    unint64_t v20 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_228915E00();
    unint64_t v18 = v8;
    sub_228915D50();
    swift_bridgeObjectRelease();
  }
  uint64_t v9 = sub_2289151F0();
  unint64_t v11 = v10;
  sub_22880ACA4(v9, v10);
  swift_bridgeObjectRelease();
  uint64_t result = 0;
  if (v11 >> 60 != 15)
  {
    sub_22880BB6C(v9, v11);
    uint64_t v13 = sub_2288BD35C(1);
    sub_22880BB6C(v9, v11);
    uint64_t v17 = MEMORY[0x263F8EE80];
    uint64_t v14 = *(void *)(a3 + 16);
    if (v14)
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = (unint64_t *)(a3 + 40);
      do
      {
        unint64_t v16 = *v15;
        uint64_t v19 = *(v15 - 1);
        unint64_t v20 = v16;
        swift_bridgeObjectRetain();
        sub_2288E884C((uint64_t)&v17, &v19, v13);
        v15 += 2;
        swift_bridgeObjectRelease();
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v17;
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x263F8EE80];
    }
  }
  return result;
}

uint64_t static JwtHelper.compare(token1:token2:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4) {
    return 1;
  }
  else {
    return sub_228916660();
  }
}

uint64_t static JwtHelper.createAttestToken()()
{
  uint64_t v52 = *MEMORY[0x263EF8340];
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B0C0);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v49 = (char *)&v47 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_228915330();
  uint64_t v47 = *(void *)(v2 - 8);
  uint64_t v48 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v5);
  unint64_t v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (MCGestaltIsInternalBuild())
  {
    id v8 = objc_allocWithZone(MEMORY[0x263EFFA40]);
    uint64_t v9 = (void *)sub_228915C40();
    id v10 = objc_msgSend(v8, sel_initWithSuiteName_, v9);

    if (v10)
    {
      unint64_t v11 = (void *)sub_228915C40();
      unsigned int v12 = objc_msgSend(v10, sel_BOOLForKey_, v11);

      if (v12)
      {
        id v13 = objc_msgSend(self, sel_shared);
        *(void *)&long long v50 = 0;
        id v14 = objc_msgSend(v13, sel_makeConfiguratorAndReturnError_, &v50);

        uint64_t v15 = (void *)v50;
        if (v14
          && (*(void *)&long long v50 = 0,
              id v16 = v15,
              id v17 = objc_msgSend(v14, sel_statusAndReturnError_, &v50),
              v14,
              uint64_t v15 = (void *)v50,
              v17))
        {
          uint64_t v18 = sub_228915BB0();
          id v19 = v15;

          if (*(void *)(v18 + 16)
            && (unint64_t v20 = sub_228816C80(0x69746E6564496573, 0xEC00000072656966), (v21 & 1) != 0))
          {
            sub_2288111D0(*(void *)(v18 + 56) + 32 * v20, (uint64_t)&v50);
          }
          else
          {
            long long v50 = 0u;
            long long v51 = 0u;
          }
          swift_bridgeObjectRelease();
          if (*((void *)&v51 + 1))
          {
            swift_dynamicCast();
            goto LABEL_22;
          }
          unint64_t v27 = &qword_268268500;
          uint64_t v28 = (char *)&v50;
        }
        else
        {
          id v22 = v15;
          uint64_t v23 = (void *)sub_2289150A0();

          swift_willThrow();
          if (qword_268267F18 != -1) {
            swift_once();
          }
          uint64_t v24 = __swift_project_value_buffer(v5, (uint64_t)qword_268283DB0);
          sub_22883741C(v24, (uint64_t)v7, (uint64_t *)&unk_2682684D0);
          uint64_t v25 = sub_2289155C0();
          uint64_t v26 = *(void *)(v25 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v7, 1, v25) != 1)
          {
            uint64_t v29 = sub_2289155A0();
            os_log_type_t v30 = sub_228916070();
            if (os_log_type_enabled(v29, v30))
            {
              uint64_t v31 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v31 = 0;
              _os_log_impl(&dword_228806000, v29, v30, "Could not get SEID", v31, 2u);
              MEMORY[0x22A6A1090](v31, -1, -1);
            }

            (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v25);
            goto LABEL_22;
          }
          unint64_t v27 = (uint64_t *)&unk_2682684D0;
          uint64_t v28 = v7;
        }
        sub_2288110C0((uint64_t)v28, v27);
      }
LABEL_22:
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26826AF40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_228922A40;
  uint64_t v33 = MEMORY[0x263F8D310];
  *(void *)(inited + 32) = 7371124;
  *(void *)(inited + 40) = 0xE300000000000000;
  *(void *)(inited + 48) = 5527370;
  *(void *)(inited + 56) = 0xE300000000000000;
  *(void *)(inited + 72) = v33;
  *(void *)(inited + 80) = 6580587;
  *(void *)(inited + 88) = 0xE300000000000000;
  *(void *)(inited + 96) = 0xD000000000000024;
  *(void *)(inited + 104) = 0x800000022892CB10;
  *(void *)(inited + 120) = v33;
  *(void *)(inited + 128) = 6777953;
  *(void *)(inited + 168) = v33;
  *(void *)(inited + 136) = 0xE300000000000000;
  *(void *)(inited + 144) = 0x3635325345;
  *(void *)(inited + 152) = 0xE500000000000000;
  unint64_t v34 = sub_2288384A4(inited);
  uint64_t v35 = swift_initStackObject();
  *(_OWORD *)(v35 + 16) = xmmword_22891ABB0;
  *(void *)(v35 + 32) = 7566185;
  *(void *)(v35 + 40) = 0xE300000000000000;
  *(void *)(v35 + 48) = 0x7461747365747461;
  *(void *)(v35 + 56) = 0xEB000000006E6F69;
  *(void *)(v35 + 72) = v33;
  *(void *)(v35 + 80) = 6583649;
  *(void *)(v35 + 88) = 0xE300000000000000;
  strcpy((char *)(v35 + 96), "authorization");
  *(_WORD *)(v35 + 110) = -4864;
  *(void *)(v35 + 120) = v33;
  *(void *)(v35 + 128) = 6911082;
  *(void *)(v35 + 136) = 0xE300000000000000;
  sub_228915320();
  sub_228915300();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v4, v48);
  uint64_t v36 = sub_228915BE0();
  uint64_t v38 = v37;
  swift_bridgeObjectRelease();
  *(void *)(v35 + 144) = v36;
  *(void *)(v35 + 152) = v38;
  *(void *)(v35 + 168) = v33;
  *(void *)(v35 + 176) = 1684628851;
  *(void *)(v35 + 184) = 0xE400000000000000;
  uint64_t v39 = sub_228915BE0();
  uint64_t v41 = v40;
  swift_bridgeObjectRelease();
  *(void *)(v35 + 216) = v33;
  *(void *)(v35 + 192) = v39;
  *(void *)(v35 + 200) = v41;
  unint64_t v42 = sub_2288384A4(v35);
  uint64_t v43 = sub_228915B50();
  uint64_t v44 = (uint64_t)v49;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v49, 1, 1, v43);
  uint64_t v45 = _s15ProximityReader9JwtHelperV9makeToken6header6claims6inject6expiry4signSSSDySSypG_AJSbSi9CryptoKit4P256O7SigningO10PrivateKeyVSgtFZ_0(v34, v42, 1, 900, v44);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2288110C0(v44, &qword_26826B0C0);
  return v45;
}

uint64_t static JwtHelper.claims(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2288EC298(a1, a2, 1);
  if (!v4) {
    return 0;
  }
  sub_2288566E4();
  uint64_t v5 = sub_228916220();
  unint64_t v7 = v6;
  swift_bridgeObjectRelease();
  uint64_t v19 = v5;
  unint64_t v20 = v7;
  uint64_t v17 = 95;
  unint64_t v18 = 0xE100000000000000;
  sub_228916220();
  swift_bridgeObjectRelease();
  while ((sub_228915D20() & 3) != 0)
  {
    uint64_t v19 = 61;
    unint64_t v20 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_228915E00();
    unint64_t v18 = v8;
    sub_228915D50();
    swift_bridgeObjectRelease();
  }
  uint64_t v9 = sub_2289151F0();
  unint64_t v11 = v10;
  sub_22880ACA4(v9, v10);
  swift_bridgeObjectRelease();
  uint64_t result = 0;
  if (v11 >> 60 != 15)
  {
    sub_22880BB6C(v9, v11);
    uint64_t v13 = sub_2288BD35C(1);
    sub_22880BB6C(v9, v11);
    uint64_t v17 = MEMORY[0x263F8EE80];
    uint64_t v14 = *(void *)(a3 + 16);
    if (v14)
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = (unint64_t *)(a3 + 40);
      do
      {
        unint64_t v16 = *v15;
        uint64_t v19 = *(v15 - 1);
        unint64_t v20 = v16;
        swift_bridgeObjectRetain();
        sub_2288E884C((uint64_t)&v17, &v19, v13);
        v15 += 2;
        swift_bridgeObjectRelease();
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v17;
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x263F8EE80];
    }
  }
  return result;
}

uint64_t sub_2288E884C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  *(void *)&long long v12 = *a2;
  *((void *)&v12 + 1) = v5;
  *(void *)&long long v10 = 46;
  *((void *)&v10 + 1) = 0xE100000000000000;
  sub_2288566E4();
  if (sub_228916230())
  {
    *(void *)&long long v12 = v4;
    *((void *)&v12 + 1) = v5;
    *(void *)&long long v10 = 46;
    *((void *)&v10 + 1) = 0xE100000000000000;
    uint64_t v6 = sub_228916210();
    sub_2288E89F4(v6 + 32, 0, (2 * *(void *)(v6 + 16)) | 1, a3, &v10);
    swift_bridgeObjectRelease();
    if (v11)
    {
      sub_22881122C(&v10, &v12);
      sub_2288111D0((uint64_t)&v12, (uint64_t)&v10);
      swift_bridgeObjectRetain();
      sub_2288DA760((uint64_t)&v10, v4, v5);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v12);
    }
    else
    {
      return sub_2288110C0((uint64_t)&v10, &qword_268268500);
    }
  }
  else
  {
    if (*(void *)(a3 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v8 = sub_228816C80(v4, v5);
      if (v9)
      {
        sub_2288111D0(*(void *)(a3 + 56) + 32 * v8, (uint64_t)&v12);
      }
      else
      {
        long long v12 = 0u;
        long long v13 = 0u;
      }
    }
    else
    {
      long long v12 = 0u;
      long long v13 = 0u;
      swift_bridgeObjectRetain();
    }
    return sub_2288DA760((uint64_t)&v12, v4, v5);
  }
}

void sub_2288E89F4(uint64_t a1@<X1>, uint64_t a2@<X2>, unint64_t a3@<X3>, uint64_t a4@<X4>, _OWORD *a5@<X8>)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v10);
  long long v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v13 = a3 >> 1;
  if (__OFSUB__(a3 >> 1, a2))
  {
    __break(1u);
    goto LABEL_29;
  }
  if ((uint64_t)((a3 >> 1) - a2) >= 2)
  {
    if (v13 > a2)
    {
      if (*(void *)(a4 + 16))
      {
        uint64_t v14 = (uint64_t *)(a1 + 16 * a2);
        uint64_t v16 = *v14;
        uint64_t v15 = v14[1];
        swift_bridgeObjectRetain();
        unint64_t v17 = sub_228816C80(v16, v15);
        if (v18)
        {
          sub_2288111D0(*(void *)(a4 + 56) + 32 * v17, (uint64_t)&v33);
          swift_bridgeObjectRelease();
          if (*((void *)&v34 + 1))
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_268269FC0);
            if (swift_dynamicCast())
            {
              uint64_t v19 = v32[1];
              uint64_t v20 = swift_unknownObjectRetain();
              sub_2288E89F4(v20, a1, a2 + 1, a3, v19);
              swift_unknownObjectRelease();
              swift_bridgeObjectRelease();
              return;
            }
LABEL_17:
            if (qword_268267F18 == -1) {
              goto LABEL_18;
            }
            goto LABEL_30;
          }
        }
        else
        {
          long long v33 = 0u;
          long long v34 = 0u;
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        long long v33 = 0u;
        long long v34 = 0u;
      }
      sub_2288110C0((uint64_t)&v33, &qword_268268500);
      goto LABEL_17;
    }
LABEL_29:
    __break(1u);
LABEL_30:
    swift_once();
LABEL_18:
    uint64_t v26 = __swift_project_value_buffer(v10, (uint64_t)qword_268283DB0);
    sub_22883741C(v26, (uint64_t)v12, (uint64_t *)&unk_2682684D0);
    uint64_t v27 = sub_2289155C0();
    uint64_t v28 = *(void *)(v27 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v12, 1, v27) == 1)
    {
      sub_2288110C0((uint64_t)v12, (uint64_t *)&unk_2682684D0);
    }
    else
    {
      uint64_t v29 = sub_2289155A0();
      os_log_type_t v30 = sub_228916050();
      if (os_log_type_enabled(v29, v30))
      {
        uint64_t v31 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v31 = 0;
        _os_log_impl(&dword_228806000, v29, v30, "Invalid key path", v31, 2u);
        MEMORY[0x22A6A1090](v31, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v27);
    }
    goto LABEL_23;
  }
  if (v13 == a2) {
    goto LABEL_23;
  }
  if (v13 <= a2)
  {
    __break(1u);
    return;
  }
  if (!*(void *)(a4 + 16))
  {
LABEL_23:
    *a5 = 0u;
    a5[1] = 0u;
    return;
  }
  char v21 = (uint64_t *)(a1 + 16 * a2);
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  swift_bridgeObjectRetain();
  unint64_t v24 = sub_228816C80(v23, v22);
  if (v25)
  {
    sub_2288111D0(*(void *)(a4 + 56) + 32 * v24, (uint64_t)a5);
  }
  else
  {
    *a5 = 0u;
    a5[1] = 0u;
  }

  swift_bridgeObjectRelease();
}

uint64_t static JwtHelper.isExpired(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  char v9 = (char *)v40 - v8;
  uint64_t v10 = sub_2289152F0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  int64_t v13 = (char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(double *)&uint64_t v14 = COERCE_DOUBLE(sub_2288E6468(0, a1, a2, 7370853, 0xE300000000000000));
  if (v15)
  {
    if (qword_268267F18 != -1) {
      swift_once();
    }
    uint64_t v21 = __swift_project_value_buffer(v4, (uint64_t)qword_268283DB0);
    sub_22883741C(v21, (uint64_t)v6, (uint64_t *)&unk_2682684D0);
    uint64_t v22 = sub_2289155C0();
    uint64_t v23 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v6, 1, v22) == 1)
    {
      sub_2288110C0((uint64_t)v6, (uint64_t *)&unk_2682684D0);
    }
    else
    {
      uint64_t v27 = sub_2289155A0();
      os_log_type_t v28 = sub_228916050();
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v29 = 0;
        _os_log_impl(&dword_228806000, v27, v28, "Token does not have 'exp' claim", v29, 2u);
        MEMORY[0x22A6A1090](v29, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v22);
    }
    return 2;
  }
  else
  {
    double v16 = *(double *)&v14;
    sub_2289152D0();
    sub_2289152C0();
    double v18 = v17;
    uint64_t v19 = *(void (**)(char *, uint64_t))(v11 + 8);
    v19(v13, v10);
    if (v18 >= v16)
    {
      if (qword_268267F18 != -1) {
        swift_once();
      }
      uint64_t v24 = __swift_project_value_buffer(v4, (uint64_t)qword_268283DB0);
      sub_22883741C(v24, (uint64_t)v9, (uint64_t *)&unk_2682684D0);
      uint64_t v25 = sub_2289155C0();
      uint64_t v26 = *(void *)(v25 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v9, 1, v25) == 1)
      {
        sub_2288110C0((uint64_t)v9, (uint64_t *)&unk_2682684D0);
      }
      else
      {
        os_log_type_t v30 = sub_2289155A0();
        os_log_type_t v31 = sub_228916050();
        int v32 = v31;
        if (os_log_type_enabled(v30, v31))
        {
          os_log_t v44 = v30;
          uint64_t v33 = swift_slowAlloc();
          int v42 = v32;
          long long v34 = (uint8_t *)v33;
          uint64_t v43 = swift_slowAlloc();
          uint64_t v46 = v43;
          *(_DWORD *)long long v34 = 136315138;
          v40[1] = v34 + 4;
          uint64_t v41 = v34;
          sub_2289152B0();
          sub_2288ED2D8();
          uint64_t v35 = sub_228916630();
          unint64_t v37 = v36;
          v19(v13, v10);
          uint64_t v45 = sub_2288AB2C4(v35, v37, &v46);
          sub_2289161F0();
          swift_bridgeObjectRelease();
          os_log_type_t v30 = v44;
          uint64_t v38 = v41;
          _os_log_impl(&dword_228806000, v44, (os_log_type_t)v42, "Token is expired: [%s]", v41, 0xCu);
          uint64_t v39 = v43;
          swift_arrayDestroy();
          MEMORY[0x22A6A1090](v39, -1, -1);
          MEMORY[0x22A6A1090](v38, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v25);
      }
      return 1;
    }
    else
    {
      return 0;
    }
  }
}

uint64_t sub_2288E9294(uint64_t a1)
{
  unint64_t v2 = sub_2288ED330();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2288E92D0(uint64_t a1)
{
  unint64_t v2 = sub_2288ED330();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t JwtHelper.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B0C8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2288ED330();
  sub_2289167B0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_2288E941C(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B0C8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2288ED330();
  sub_2289167B0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

ProximityReader::JwtHeader __swiftcall JwtHeader.init(alg:typ:)(Swift::String alg, Swift::String typ)
{
  *uint64_t v2 = alg;
  v2[1] = typ;
  result.typ = typ;
  result.alg = alg;
  return result;
}

uint64_t sub_2288E9538()
{
  if (*v0) {
    return 7371124;
  }
  else {
    return 6777953;
  }
}

uint64_t sub_2288E955C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2288ED6C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2288E9584(uint64_t a1)
{
  unint64_t v2 = sub_2288ED384();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2288E95C0(uint64_t a1)
{
  unint64_t v2 = sub_2288ED384();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t JwtHeader.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B0D8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  v10[1] = *(void *)(v1 + 24);
  v10[2] = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2288ED384();
  sub_2289167B0();
  char v12 = 0;
  uint64_t v8 = v10[3];
  sub_2289165D0();
  if (!v8)
  {
    char v11 = 1;
    sub_2289165D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_2288E9774(void *a1)
{
  return JwtHeader.encode(to:)(a1);
}

uint64_t sub_2288E978C(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void *))
{
  uint64_t v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v6 = a2(v6);
  }
  uint64_t v7 = *(void *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  uint64_t result = a3(v9);
  *a1 = v6;
  return result;
}

uint64_t sub_2288E9814(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_228916620();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_2288EB2B4(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  uint64_t v105 = result;
  uint64_t v102 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
      char v11 = (char *)MEMORY[0x263F8EE78];
LABEL_118:
      uint64_t v94 = v11;
      uint64_t v104 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          uint64_t v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_2288EB384((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(void *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v97 = sub_2288EC0A0((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          uint64_t v100 = &v97[16 * v96 + 32];
          *(void *)uint64_t v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          uint64_t v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_228915ED0();
    *(void *)(v7 + 16) = v6;
    uint64_t v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v103 = v10 + 8;
  char v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v106 = v3;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    uint64_t v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    double v17 = (void *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_228916660();
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    uint64_t v21 = (void *)(v103 + 16 * v20);
    do
    {
      uint64_t v23 = (void *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_228916660()))
      {
        goto LABEL_36;
      }
      v21 += 2;
      uint64_t v22 = v20 + 1;
      uint64_t v9 = v20;
      uint64_t v20 = v22;
    }
    while (v22 < v3);
    uint64_t v20 = v22;
LABEL_36:
    uint64_t v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 16 * v20;
        uint64_t v26 = 16 * v13;
        uint64_t v27 = v20;
        uint64_t v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v25;
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = *(void *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(void *)(v29 - 16) = v30;
            *(void *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      uint64_t v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v105) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v11 = sub_2288EBD70(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v41 = *((void *)v11 + 2);
    unint64_t v40 = *((void *)v11 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      char v11 = sub_2288EBD70((char *)(v40 > 1), v41 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    int v42 = v11 + 32;
    uint64_t v43 = &v11[16 * v41 + 32];
    *(void *)uint64_t v43 = v13;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      uint64_t v107 = v9;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v49 = &v42[16 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_135;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_136;
          }
          unint64_t v56 = v12 - 2;
          os_log_type_t v57 = &v42[16 * v12 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_138;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_141;
          }
          if (v61 >= v52)
          {
            uint64_t v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_145;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v11 + 4);
            uint64_t v74 = *((void *)v11 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_99;
          }
          uint64_t v46 = *((void *)v11 + 4);
          uint64_t v45 = *((void *)v11 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_137;
        }
        unint64_t v56 = v12 - 2;
        unint64_t v62 = &v42[16 * v12 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_140;
        }
        long long v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_143;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_144;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_105:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v67) {
          goto LABEL_139;
        }
        uint64_t v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_142;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v84 = v10;
        if (!v10) {
          goto LABEL_157;
        }
        uint64_t v85 = v11;
        v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        uint64_t v88 = v42;
        unint64_t v89 = v44;
        uint64_t v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v84;
        sub_2288EB384((char *)(v84 + 16 * *(void *)v86), (char *)(v84 + 16 * *(void *)v90), v84 + 16 * v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v91 < v87) {
          goto LABEL_132;
        }
        if (v89 > *((void *)v85 + 2)) {
          goto LABEL_133;
        }
        *(void *)v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v85 + 2);
        if (v89 >= v93) {
          goto LABEL_134;
        }
        char v11 = v85;
        unint64_t v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        int v42 = v88;
        *((void *)v85 + 2) = v93 - 1;
        uint64_t v10 = v92;
        uint64_t v9 = v107;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v106;
    if (v9 >= v106)
    {
      uint64_t v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_153;
  }
  if (v13 + v105 >= v3) {
    uint64_t v32 = v3;
  }
  else {
    uint64_t v32 = v13 + v105;
  }
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      uint64_t v33 = (void *)(v10 + 16 * v9);
      do
      {
        long long v34 = (uint64_t *)(v10 + 16 * v9);
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        uint64_t v37 = v13;
        uint64_t v38 = v33;
        do
        {
          BOOL v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_228916660() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v35 = *v38;
          uint64_t v36 = v38[1];
          *(_OWORD *)uint64_t v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      uint64_t v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  uint64_t result = sub_228916420();
  __break(1u);
  return result;
}

uint64_t sub_2288E9F00(void *a1)
{
  unint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_228916620();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_136;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v80 = 0;
      uint64_t v81 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        double v83 = *(double *)(v81 + 8 * i);
        uint64_t v84 = v80;
        do
        {
          uint64_t v85 = v81 + 8 * v84;
          if (v83 >= *(double *)v85) {
            break;
          }
          if (!v81) {
            goto LABEL_140;
          }
          *(void *)(v85 + 8) = *(void *)v85;
          *(double *)(v81 + 8 * v84--) = v83;
        }
        while (v84 != -1);
        ++v80;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_145;
  }
  uint64_t v97 = result;
  uint64_t v98 = v3;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    __dst = (double *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
      char v11 = (char *)MEMORY[0x263F8EE78];
LABEL_102:
      uint64_t v96 = v8;
      if (v12 >= 2)
      {
        uint64_t v86 = *v2;
        do
        {
          unint64_t v87 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_131;
          }
          if (!v86) {
            goto LABEL_144;
          }
          uint64_t v88 = v11;
          unint64_t v89 = v11 + 32;
          uint64_t v90 = *(void *)&v11[16 * v87 + 32];
          uint64_t v91 = *(void *)&v11[16 * v12 + 24];
          sub_2288EB620((double *)(v86 + 8 * v90), (double *)(v86 + 8 * *(void *)&v89[16 * v12 - 16]), v86 + 8 * v91, __dst);
          if (v1) {
            break;
          }
          if (v91 < v90) {
            goto LABEL_132;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v88 = sub_2288EC0A0((uint64_t)v88);
          }
          if (v87 >= *((void *)v88 + 2)) {
            goto LABEL_133;
          }
          uint64_t v92 = &v88[16 * v87 + 32];
          *(void *)uint64_t v92 = v90;
          *((void *)v92 + 1) = v91;
          unint64_t v93 = *((void *)v88 + 2);
          if (v12 > v93) {
            goto LABEL_134;
          }
          memmove(&v88[16 * v12 + 16], &v88[16 * v12 + 32], 16 * (v93 - v12));
          char v11 = v88;
          *((void *)v88 + 2) = v93 - 1;
          unint64_t v12 = v93 - 1;
        }
        while (v93 > 2);
      }
LABEL_113:
      swift_bridgeObjectRelease();
      *(void *)(v96 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v96 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_228915ED0();
    *(void *)(v7 + 16) = v6;
    uint64_t v3 = v98;
    uint64_t v96 = v7;
    __dst = (double *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *v2;
  uint64_t v94 = v2;
  uint64_t v95 = *v2 - 8;
  char v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v99 = *v2;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 < v3)
    {
      double v14 = *(double *)(v10 + 8 * v9);
      double v15 = *(double *)(v10 + 8 * v13);
      uint64_t v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        double v16 = v14;
        while (1)
        {
          double v17 = v16;
          double v16 = *(double *)(v10 + 8 * v9);
          if (v14 < v15 == v16 >= v17) {
            break;
          }
          if (v3 == ++v9)
          {
            uint64_t v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13) {
          goto LABEL_137;
        }
        if (v13 < v9)
        {
          double v18 = (uint64_t *)(v95 + 8 * v9);
          uint64_t v19 = v9;
          uint64_t v20 = v13;
          uint64_t v21 = (uint64_t *)(v10 + 8 * v13);
          do
          {
            if (v20 != --v19)
            {
              if (!v10) {
                goto LABEL_143;
              }
              uint64_t v22 = *v21;
              uint64_t *v21 = *v18;
              *double v18 = v22;
            }
            ++v20;
            --v18;
            ++v21;
          }
          while (v20 < v19);
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v9, v13)) {
      goto LABEL_135;
    }
    if (v9 - v13 >= v97) {
      goto LABEL_46;
    }
    uint64_t v23 = v13 + v97;
    if (__OFADD__(v13, v97)) {
      goto LABEL_138;
    }
    if (v23 >= v3) {
      uint64_t v23 = v3;
    }
    if (v23 < v13) {
      break;
    }
    if (v9 != v23)
    {
      uint64_t v24 = (double *)(v95 + 8 * v9);
      do
      {
        double v25 = *(double *)(v10 + 8 * v9);
        uint64_t v26 = v13;
        uint64_t v27 = v24;
        do
        {
          double v28 = *v27;
          if (v25 >= *v27) {
            break;
          }
          if (!v10) {
            goto LABEL_141;
          }
          *uint64_t v27 = v25;
          v27[1] = v28;
          --v27;
          ++v26;
        }
        while (v9 != v26);
        ++v9;
        ++v24;
      }
      while (v9 != v23);
      uint64_t v9 = v23;
    }
LABEL_46:
    if (v9 < v13) {
      goto LABEL_130;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v11 = sub_2288EBD70(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v30 = *((void *)v11 + 2);
    unint64_t v29 = *((void *)v11 + 3);
    unint64_t v12 = v30 + 1;
    uint64_t v10 = v99;
    if (v30 >= v29 >> 1)
    {
      uint64_t v79 = sub_2288EBD70((char *)(v29 > 1), v30 + 1, 1, v11);
      uint64_t v10 = v99;
      char v11 = v79;
    }
    *((void *)v11 + 2) = v12;
    uint64_t v31 = v11 + 32;
    uint64_t v32 = &v11[16 * v30 + 32];
    *(void *)uint64_t v32 = v13;
    *((void *)v32 + 1) = v9;
    if (v30)
    {
      while (1)
      {
        unint64_t v33 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v38 = &v31[16 * v12];
          uint64_t v39 = *((void *)v38 - 8);
          uint64_t v40 = *((void *)v38 - 7);
          BOOL v44 = __OFSUB__(v40, v39);
          uint64_t v41 = v40 - v39;
          if (v44) {
            goto LABEL_119;
          }
          uint64_t v43 = *((void *)v38 - 6);
          uint64_t v42 = *((void *)v38 - 5);
          BOOL v44 = __OFSUB__(v42, v43);
          uint64_t v36 = v42 - v43;
          char v37 = v44;
          if (v44) {
            goto LABEL_120;
          }
          unint64_t v45 = v12 - 2;
          uint64_t v46 = &v31[16 * v12 - 32];
          uint64_t v48 = *(void *)v46;
          uint64_t v47 = *((void *)v46 + 1);
          BOOL v44 = __OFSUB__(v47, v48);
          uint64_t v49 = v47 - v48;
          if (v44) {
            goto LABEL_122;
          }
          BOOL v44 = __OFADD__(v36, v49);
          uint64_t v50 = v36 + v49;
          if (v44) {
            goto LABEL_125;
          }
          if (v50 >= v41)
          {
            long long v68 = &v31[16 * v33];
            uint64_t v70 = *(void *)v68;
            uint64_t v69 = *((void *)v68 + 1);
            BOOL v44 = __OFSUB__(v69, v70);
            uint64_t v71 = v69 - v70;
            if (v44) {
              goto LABEL_129;
            }
            BOOL v61 = v36 < v71;
            goto LABEL_83;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v62 = *((void *)v11 + 4);
            uint64_t v63 = *((void *)v11 + 5);
            BOOL v44 = __OFSUB__(v63, v62);
            uint64_t v55 = v63 - v62;
            char v56 = v44;
            goto LABEL_77;
          }
          uint64_t v35 = *((void *)v11 + 4);
          uint64_t v34 = *((void *)v11 + 5);
          BOOL v44 = __OFSUB__(v34, v35);
          uint64_t v36 = v34 - v35;
          char v37 = v44;
        }
        if (v37) {
          goto LABEL_121;
        }
        unint64_t v45 = v12 - 2;
        uint64_t v51 = &v31[16 * v12 - 32];
        uint64_t v53 = *(void *)v51;
        uint64_t v52 = *((void *)v51 + 1);
        BOOL v54 = __OFSUB__(v52, v53);
        uint64_t v55 = v52 - v53;
        char v56 = v54;
        if (v54) {
          goto LABEL_124;
        }
        os_log_type_t v57 = &v31[16 * v33];
        uint64_t v59 = *(void *)v57;
        uint64_t v58 = *((void *)v57 + 1);
        BOOL v44 = __OFSUB__(v58, v59);
        uint64_t v60 = v58 - v59;
        if (v44) {
          goto LABEL_127;
        }
        if (__OFADD__(v55, v60)) {
          goto LABEL_128;
        }
        if (v55 + v60 >= v36)
        {
          BOOL v61 = v36 < v60;
LABEL_83:
          if (v61) {
            unint64_t v33 = v45;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v56) {
          goto LABEL_123;
        }
        uint64_t v64 = &v31[16 * v33];
        uint64_t v66 = *(void *)v64;
        uint64_t v65 = *((void *)v64 + 1);
        BOOL v44 = __OFSUB__(v65, v66);
        uint64_t v67 = v65 - v66;
        if (v44) {
          goto LABEL_126;
        }
        if (v67 < v55) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v72 = v33 - 1;
        if (v33 - 1 >= v12)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v10) {
          goto LABEL_142;
        }
        uint64_t v73 = &v31[16 * v72];
        uint64_t v74 = *(void *)v73;
        uint64_t v75 = v31;
        uint64_t v76 = &v31[16 * v33];
        uint64_t v77 = *((void *)v76 + 1);
        sub_2288EB620((double *)(v10 + 8 * *(void *)v73), (double *)(v10 + 8 * *(void *)v76), v10 + 8 * v77, __dst);
        if (v1) {
          goto LABEL_113;
        }
        if (v77 < v74) {
          goto LABEL_116;
        }
        if (v33 > *((void *)v11 + 2)) {
          goto LABEL_117;
        }
        *(void *)uint64_t v73 = v74;
        *(void *)&v75[16 * v72 + 8] = v77;
        unint64_t v78 = *((void *)v11 + 2);
        if (v33 >= v78) {
          goto LABEL_118;
        }
        unint64_t v12 = v78 - 1;
        memmove(v76, v76 + 16, 16 * (v78 - 1 - v33));
        uint64_t v31 = v75;
        *((void *)v11 + 2) = v78 - 1;
        uint64_t v10 = v99;
        if (v78 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v98;
    if (v9 >= v98)
    {
      uint64_t v8 = v96;
      unint64_t v2 = v94;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  uint64_t result = sub_228916420();
  __break(1u);
  return result;
}

uint64_t sub_2288EA594(void *a1)
{
  unint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_228916620();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_136;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v80 = 0;
      uint64_t v81 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        float v83 = *(float *)(v81 + 4 * i);
        uint64_t v84 = v80;
        do
        {
          uint64_t v85 = v81 + 4 * v84;
          if (v83 >= *(float *)v85) {
            break;
          }
          if (!v81) {
            goto LABEL_140;
          }
          *(_DWORD *)(v85 + 4) = *(_DWORD *)v85;
          *(float *)(v81 + 4 * v84--) = v83;
        }
        while (v84 != -1);
        ++v80;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_145;
  }
  uint64_t v97 = result;
  uint64_t v98 = v3;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    __dst = (float *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
      char v11 = (char *)MEMORY[0x263F8EE78];
LABEL_102:
      uint64_t v96 = v8;
      if (v12 >= 2)
      {
        uint64_t v86 = *v2;
        do
        {
          unint64_t v87 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_131;
          }
          if (!v86) {
            goto LABEL_144;
          }
          uint64_t v88 = v11;
          unint64_t v89 = v11 + 32;
          uint64_t v90 = *(void *)&v11[16 * v87 + 32];
          uint64_t v91 = *(void *)&v11[16 * v12 + 24];
          sub_2288EB890((float *)(v86 + 4 * v90), (float *)(v86 + 4 * *(void *)&v89[16 * v12 - 16]), v86 + 4 * v91, __dst);
          if (v1) {
            break;
          }
          if (v91 < v90) {
            goto LABEL_132;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v88 = sub_2288EC0A0((uint64_t)v88);
          }
          if (v87 >= *((void *)v88 + 2)) {
            goto LABEL_133;
          }
          uint64_t v92 = &v88[16 * v87 + 32];
          *(void *)uint64_t v92 = v90;
          *((void *)v92 + 1) = v91;
          unint64_t v93 = *((void *)v88 + 2);
          if (v12 > v93) {
            goto LABEL_134;
          }
          memmove(&v88[16 * v12 + 16], &v88[16 * v12 + 32], 16 * (v93 - v12));
          char v11 = v88;
          *((void *)v88 + 2) = v93 - 1;
          unint64_t v12 = v93 - 1;
        }
        while (v93 > 2);
      }
LABEL_113:
      swift_bridgeObjectRelease();
      *(void *)(v96 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v96 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_228915ED0();
    *(void *)(v7 + 16) = v6;
    uint64_t v3 = v98;
    uint64_t v96 = v7;
    __dst = (float *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *v2;
  uint64_t v94 = v2;
  uint64_t v95 = *v2 - 4;
  char v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v99 = *v2;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 < v3)
    {
      float v14 = *(float *)(v10 + 4 * v9);
      float v15 = *(float *)(v10 + 4 * v13);
      uint64_t v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        float v16 = v14;
        while (1)
        {
          float v17 = v16;
          float v16 = *(float *)(v10 + 4 * v9);
          if (v14 < v15 == v16 >= v17) {
            break;
          }
          if (v3 == ++v9)
          {
            uint64_t v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13) {
          goto LABEL_137;
        }
        if (v13 < v9)
        {
          double v18 = (int *)(v95 + 4 * v9);
          uint64_t v19 = v9;
          uint64_t v20 = v13;
          uint64_t v21 = (int *)(v10 + 4 * v13);
          do
          {
            if (v20 != --v19)
            {
              if (!v10) {
                goto LABEL_143;
              }
              int v22 = *v21;
              int *v21 = *v18;
              *double v18 = v22;
            }
            ++v20;
            --v18;
            ++v21;
          }
          while (v20 < v19);
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v9, v13)) {
      goto LABEL_135;
    }
    if (v9 - v13 >= v97) {
      goto LABEL_46;
    }
    uint64_t v23 = v13 + v97;
    if (__OFADD__(v13, v97)) {
      goto LABEL_138;
    }
    if (v23 >= v3) {
      uint64_t v23 = v3;
    }
    if (v23 < v13) {
      break;
    }
    if (v9 != v23)
    {
      uint64_t v24 = (float *)(v95 + 4 * v9);
      do
      {
        float v25 = *(float *)(v10 + 4 * v9);
        uint64_t v26 = v13;
        uint64_t v27 = v24;
        do
        {
          float v28 = *v27;
          if (v25 >= *v27) {
            break;
          }
          if (!v10) {
            goto LABEL_141;
          }
          *uint64_t v27 = v25;
          v27[1] = v28;
          --v27;
          ++v26;
        }
        while (v9 != v26);
        ++v9;
        ++v24;
      }
      while (v9 != v23);
      uint64_t v9 = v23;
    }
LABEL_46:
    if (v9 < v13) {
      goto LABEL_130;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v11 = sub_2288EBD70(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v30 = *((void *)v11 + 2);
    unint64_t v29 = *((void *)v11 + 3);
    unint64_t v12 = v30 + 1;
    uint64_t v10 = v99;
    if (v30 >= v29 >> 1)
    {
      uint64_t v79 = sub_2288EBD70((char *)(v29 > 1), v30 + 1, 1, v11);
      uint64_t v10 = v99;
      char v11 = v79;
    }
    *((void *)v11 + 2) = v12;
    uint64_t v31 = v11 + 32;
    uint64_t v32 = &v11[16 * v30 + 32];
    *(void *)uint64_t v32 = v13;
    *((void *)v32 + 1) = v9;
    if (v30)
    {
      while (1)
      {
        unint64_t v33 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v38 = &v31[16 * v12];
          uint64_t v39 = *((void *)v38 - 8);
          uint64_t v40 = *((void *)v38 - 7);
          BOOL v44 = __OFSUB__(v40, v39);
          uint64_t v41 = v40 - v39;
          if (v44) {
            goto LABEL_119;
          }
          uint64_t v43 = *((void *)v38 - 6);
          uint64_t v42 = *((void *)v38 - 5);
          BOOL v44 = __OFSUB__(v42, v43);
          uint64_t v36 = v42 - v43;
          char v37 = v44;
          if (v44) {
            goto LABEL_120;
          }
          unint64_t v45 = v12 - 2;
          uint64_t v46 = &v31[16 * v12 - 32];
          uint64_t v48 = *(void *)v46;
          uint64_t v47 = *((void *)v46 + 1);
          BOOL v44 = __OFSUB__(v47, v48);
          uint64_t v49 = v47 - v48;
          if (v44) {
            goto LABEL_122;
          }
          BOOL v44 = __OFADD__(v36, v49);
          uint64_t v50 = v36 + v49;
          if (v44) {
            goto LABEL_125;
          }
          if (v50 >= v41)
          {
            long long v68 = &v31[16 * v33];
            uint64_t v70 = *(void *)v68;
            uint64_t v69 = *((void *)v68 + 1);
            BOOL v44 = __OFSUB__(v69, v70);
            uint64_t v71 = v69 - v70;
            if (v44) {
              goto LABEL_129;
            }
            BOOL v61 = v36 < v71;
            goto LABEL_83;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v62 = *((void *)v11 + 4);
            uint64_t v63 = *((void *)v11 + 5);
            BOOL v44 = __OFSUB__(v63, v62);
            uint64_t v55 = v63 - v62;
            char v56 = v44;
            goto LABEL_77;
          }
          uint64_t v35 = *((void *)v11 + 4);
          uint64_t v34 = *((void *)v11 + 5);
          BOOL v44 = __OFSUB__(v34, v35);
          uint64_t v36 = v34 - v35;
          char v37 = v44;
        }
        if (v37) {
          goto LABEL_121;
        }
        unint64_t v45 = v12 - 2;
        uint64_t v51 = &v31[16 * v12 - 32];
        uint64_t v53 = *(void *)v51;
        uint64_t v52 = *((void *)v51 + 1);
        BOOL v54 = __OFSUB__(v52, v53);
        uint64_t v55 = v52 - v53;
        char v56 = v54;
        if (v54) {
          goto LABEL_124;
        }
        os_log_type_t v57 = &v31[16 * v33];
        uint64_t v59 = *(void *)v57;
        uint64_t v58 = *((void *)v57 + 1);
        BOOL v44 = __OFSUB__(v58, v59);
        uint64_t v60 = v58 - v59;
        if (v44) {
          goto LABEL_127;
        }
        if (__OFADD__(v55, v60)) {
          goto LABEL_128;
        }
        if (v55 + v60 >= v36)
        {
          BOOL v61 = v36 < v60;
LABEL_83:
          if (v61) {
            unint64_t v33 = v45;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v56) {
          goto LABEL_123;
        }
        uint64_t v64 = &v31[16 * v33];
        uint64_t v66 = *(void *)v64;
        uint64_t v65 = *((void *)v64 + 1);
        BOOL v44 = __OFSUB__(v65, v66);
        uint64_t v67 = v65 - v66;
        if (v44) {
          goto LABEL_126;
        }
        if (v67 < v55) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v72 = v33 - 1;
        if (v33 - 1 >= v12)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v10) {
          goto LABEL_142;
        }
        uint64_t v73 = &v31[16 * v72];
        uint64_t v74 = *(void *)v73;
        uint64_t v75 = v31;
        uint64_t v76 = &v31[16 * v33];
        uint64_t v77 = *((void *)v76 + 1);
        sub_2288EB890((float *)(v10 + 4 * *(void *)v73), (float *)(v10 + 4 * *(void *)v76), v10 + 4 * v77, __dst);
        if (v1) {
          goto LABEL_113;
        }
        if (v77 < v74) {
          goto LABEL_116;
        }
        if (v33 > *((void *)v11 + 2)) {
          goto LABEL_117;
        }
        *(void *)uint64_t v73 = v74;
        *(void *)&v75[16 * v72 + 8] = v77;
        unint64_t v78 = *((void *)v11 + 2);
        if (v33 >= v78) {
          goto LABEL_118;
        }
        unint64_t v12 = v78 - 1;
        memmove(v76, v76 + 16, 16 * (v78 - 1 - v33));
        uint64_t v31 = v75;
        *((void *)v11 + 2) = v78 - 1;
        uint64_t v10 = v99;
        if (v78 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v98;
    if (v9 >= v98)
    {
      uint64_t v8 = v96;
      unint64_t v2 = v94;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  uint64_t result = sub_228916420();
  __break(1u);
  return result;
}

uint64_t sub_2288EAC28(void *a1)
{
  unint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_228916620();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v78 = 0;
      uint64_t v79 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v81 = *(void *)(v79 + 8 * i);
        uint64_t v82 = v78;
        do
        {
          uint64_t v83 = *(void *)(v79 + v82);
          if (v81 >= v83) {
            break;
          }
          if (!v79) {
            goto LABEL_141;
          }
          *(void *)(v79 + v82 + 8) = v83;
          *(void *)(v79 + v82) = v81;
          v82 -= 8;
        }
        while (v82 != -8);
        v78 += 8;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  uint64_t v95 = result;
  uint64_t v96 = v3;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
      char v11 = (char *)MEMORY[0x263F8EE78];
LABEL_103:
      uint64_t v94 = v8;
      if (v12 >= 2)
      {
        uint64_t v84 = *v2;
        do
        {
          unint64_t v85 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_132;
          }
          if (!v84) {
            goto LABEL_145;
          }
          uint64_t v86 = v11;
          unint64_t v87 = v11 + 32;
          uint64_t v88 = *(void *)&v11[16 * v85 + 32];
          uint64_t v89 = *(void *)&v11[16 * v12 + 24];
          sub_2288EBB00((char *)(v84 + 8 * v88), (char *)(v84 + 8 * *(void *)&v87[16 * v12 - 16]), v84 + 8 * v89, __dst);
          if (v1) {
            break;
          }
          if (v89 < v88) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v86 = sub_2288EC0A0((uint64_t)v86);
          }
          if (v85 >= *((void *)v86 + 2)) {
            goto LABEL_134;
          }
          uint64_t v90 = &v86[16 * v85 + 32];
          *(void *)uint64_t v90 = v88;
          *((void *)v90 + 1) = v89;
          unint64_t v91 = *((void *)v86 + 2);
          if (v12 > v91) {
            goto LABEL_135;
          }
          memmove(&v86[16 * v12 + 16], &v86[16 * v12 + 32], 16 * (v91 - v12));
          char v11 = v86;
          *((void *)v86 + 2) = v91 - 1;
          unint64_t v12 = v91 - 1;
        }
        while (v91 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(void *)(v94 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v94 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_228915ED0();
    *(void *)(v7 + 16) = v6;
    uint64_t v3 = v96;
    uint64_t v94 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *v2;
  uint64_t v92 = v2;
  uint64_t v93 = *v2 - 8;
  char v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v97 = *v2;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 < v3)
    {
      uint64_t v14 = *(void *)(v10 + 8 * v9);
      uint64_t v15 = *(void *)(v10 + 8 * v13);
      uint64_t v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        uint64_t v16 = v14;
        while (1)
        {
          uint64_t v17 = *(void *)(v10 + 8 * v9);
          if (v14 < v15 == v17 >= v16) {
            break;
          }
          ++v9;
          uint64_t v16 = v17;
          if (v3 == v9)
          {
            uint64_t v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13) {
          goto LABEL_138;
        }
        if (v13 < v9)
        {
          uint64_t v18 = v9 - 1;
          uint64_t v19 = v13;
          do
          {
            if (v19 != v18)
            {
              if (!v10) {
                goto LABEL_144;
              }
              uint64_t v20 = *(void *)(v10 + 8 * v19);
              *(void *)(v10 + 8 * v19) = *(void *)(v10 + 8 * v18);
              *(void *)(v10 + 8 * v18) = v20;
            }
            BOOL v59 = ++v19 < v18--;
          }
          while (v59);
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_47;
    }
    if (__OFSUB__(v9, v13)) {
      goto LABEL_136;
    }
    if (v9 - v13 >= v95) {
      goto LABEL_47;
    }
    uint64_t v21 = v13 + v95;
    if (__OFADD__(v13, v95)) {
      goto LABEL_139;
    }
    if (v21 >= v3) {
      uint64_t v21 = v3;
    }
    if (v21 < v13) {
      break;
    }
    if (v9 != v21)
    {
      int v22 = (uint64_t *)(v93 + 8 * v9);
      do
      {
        uint64_t v23 = *(void *)(v10 + 8 * v9);
        uint64_t v24 = v13;
        float v25 = v22;
        do
        {
          uint64_t v26 = *v25;
          if (v23 >= *v25) {
            break;
          }
          if (!v10) {
            goto LABEL_142;
          }
          *float v25 = v23;
          v25[1] = v26;
          --v25;
          ++v24;
        }
        while (v9 != v24);
        ++v9;
        ++v22;
      }
      while (v9 != v21);
      uint64_t v9 = v21;
    }
LABEL_47:
    if (v9 < v13) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v11 = sub_2288EBD70(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v28 = *((void *)v11 + 2);
    unint64_t v27 = *((void *)v11 + 3);
    unint64_t v12 = v28 + 1;
    uint64_t v10 = v97;
    if (v28 >= v27 >> 1)
    {
      uint64_t v77 = sub_2288EBD70((char *)(v27 > 1), v28 + 1, 1, v11);
      uint64_t v10 = v97;
      char v11 = v77;
    }
    *((void *)v11 + 2) = v12;
    unint64_t v29 = v11 + 32;
    unint64_t v30 = &v11[16 * v28 + 32];
    *(void *)unint64_t v30 = v13;
    *((void *)v30 + 1) = v9;
    if (v28)
    {
      while (1)
      {
        unint64_t v31 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v36 = &v29[16 * v12];
          uint64_t v37 = *((void *)v36 - 8);
          uint64_t v38 = *((void *)v36 - 7);
          BOOL v42 = __OFSUB__(v38, v37);
          uint64_t v39 = v38 - v37;
          if (v42) {
            goto LABEL_120;
          }
          uint64_t v41 = *((void *)v36 - 6);
          uint64_t v40 = *((void *)v36 - 5);
          BOOL v42 = __OFSUB__(v40, v41);
          uint64_t v34 = v40 - v41;
          char v35 = v42;
          if (v42) {
            goto LABEL_121;
          }
          unint64_t v43 = v12 - 2;
          BOOL v44 = &v29[16 * v12 - 32];
          uint64_t v46 = *(void *)v44;
          uint64_t v45 = *((void *)v44 + 1);
          BOOL v42 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          if (v42) {
            goto LABEL_123;
          }
          BOOL v42 = __OFADD__(v34, v47);
          uint64_t v48 = v34 + v47;
          if (v42) {
            goto LABEL_126;
          }
          if (v48 >= v39)
          {
            uint64_t v66 = &v29[16 * v31];
            uint64_t v68 = *(void *)v66;
            uint64_t v67 = *((void *)v66 + 1);
            BOOL v42 = __OFSUB__(v67, v68);
            uint64_t v69 = v67 - v68;
            if (v42) {
              goto LABEL_130;
            }
            BOOL v59 = v34 < v69;
            goto LABEL_84;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v60 = *((void *)v11 + 4);
            uint64_t v61 = *((void *)v11 + 5);
            BOOL v42 = __OFSUB__(v61, v60);
            uint64_t v53 = v61 - v60;
            char v54 = v42;
            goto LABEL_78;
          }
          uint64_t v33 = *((void *)v11 + 4);
          uint64_t v32 = *((void *)v11 + 5);
          BOOL v42 = __OFSUB__(v32, v33);
          uint64_t v34 = v32 - v33;
          char v35 = v42;
        }
        if (v35) {
          goto LABEL_122;
        }
        unint64_t v43 = v12 - 2;
        uint64_t v49 = &v29[16 * v12 - 32];
        uint64_t v51 = *(void *)v49;
        uint64_t v50 = *((void *)v49 + 1);
        BOOL v52 = __OFSUB__(v50, v51);
        uint64_t v53 = v50 - v51;
        char v54 = v52;
        if (v52) {
          goto LABEL_125;
        }
        uint64_t v55 = &v29[16 * v31];
        uint64_t v57 = *(void *)v55;
        uint64_t v56 = *((void *)v55 + 1);
        BOOL v42 = __OFSUB__(v56, v57);
        uint64_t v58 = v56 - v57;
        if (v42) {
          goto LABEL_128;
        }
        if (__OFADD__(v53, v58)) {
          goto LABEL_129;
        }
        if (v53 + v58 >= v34)
        {
          BOOL v59 = v34 < v58;
LABEL_84:
          if (v59) {
            unint64_t v31 = v43;
          }
          goto LABEL_86;
        }
LABEL_78:
        if (v54) {
          goto LABEL_124;
        }
        uint64_t v62 = &v29[16 * v31];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v42 = __OFSUB__(v63, v64);
        uint64_t v65 = v63 - v64;
        if (v42) {
          goto LABEL_127;
        }
        if (v65 < v53) {
          goto LABEL_15;
        }
LABEL_86:
        unint64_t v70 = v31 - 1;
        if (v31 - 1 >= v12)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v10) {
          goto LABEL_143;
        }
        uint64_t v71 = &v29[16 * v70];
        uint64_t v72 = *(void *)v71;
        uint64_t v73 = v29;
        uint64_t v74 = &v29[16 * v31];
        uint64_t v75 = *((void *)v74 + 1);
        sub_2288EBB00((char *)(v10 + 8 * *(void *)v71), (char *)(v10 + 8 * *(void *)v74), v10 + 8 * v75, __dst);
        if (v1) {
          goto LABEL_114;
        }
        if (v75 < v72) {
          goto LABEL_117;
        }
        if (v31 > *((void *)v11 + 2)) {
          goto LABEL_118;
        }
        *(void *)uint64_t v71 = v72;
        *(void *)&v73[16 * v70 + 8] = v75;
        unint64_t v76 = *((void *)v11 + 2);
        if (v31 >= v76) {
          goto LABEL_119;
        }
        unint64_t v12 = v76 - 1;
        memmove(v74, v74 + 16, 16 * (v76 - 1 - v31));
        unint64_t v29 = v73;
        *((void *)v11 + 2) = v76 - 1;
        uint64_t v10 = v97;
        if (v76 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v96;
    if (v9 >= v96)
    {
      uint64_t v8 = v94;
      unint64_t v2 = v92;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  uint64_t result = sub_228916420();
  __break(1u);
  return result;
}

uint64_t sub_2288EB2B4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    uint64_t v9 = (uint64_t *)(v7 + 16 * v4);
    uint64_t result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    unint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (uint64_t result = sub_228916660(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)unint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2288EB384(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  unint64_t v27 = __src;
  uint64_t v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      uint64_t v17 = &v4[16 * v13];
      float v25 = v17;
      unint64_t v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        uint64_t v18 = (char *)(a3 - 16);
        uint64_t v19 = v6;
        while (1)
        {
          uint64_t v20 = v18 + 16;
          uint64_t v21 = *((void *)v19 - 2);
          uint64_t v22 = *((void *)v19 - 1);
          v19 -= 16;
          BOOL v23 = *((void *)v17 - 2) == v21 && *((void *)v17 - 1) == v22;
          if (v23 || (sub_228916660() & 1) == 0)
          {
            float v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(_OWORD *)uint64_t v18 = *((_OWORD *)v17 - 1);
            }
            uint64_t v19 = v6;
            v17 -= 16;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= v6) {
              *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
            }
            unint64_t v27 = v19;
            if (v19 <= v7) {
              goto LABEL_50;
            }
          }
          v18 -= 16;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    uint64_t v14 = &v4[16 * v10];
    float v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v15 || (sub_228916660() & 1) == 0)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v26 = v4;
          uint64_t v16 = v6;
        }
        else
        {
          uint64_t v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      unint64_t v27 = v7;
    }
LABEL_50:
    sub_2288EBE6C((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  uint64_t result = sub_228916480();
  __break(1u);
  return result;
}

uint64_t sub_2288EB620(double *__src, double *a2, unint64_t a3, double *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  uint64_t v24 = __src;
  BOOL v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[v13] <= __dst) {
        memmove(__dst, a2, 8 * v13);
      }
      uint64_t v16 = &v4[v13];
      uint64_t v22 = v16;
      uint64_t v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        uint64_t v17 = (double *)(a3 - 8);
        while (1)
        {
          uint64_t v18 = v17 + 1;
          uint64_t v19 = v6 - 1;
          double v20 = *(v6 - 1);
          if (*(v16 - 1) >= v20)
          {
            uint64_t v22 = v16 - 1;
            if (v18 < v16 || v17 >= v16 || v18 != v16) {
              *uint64_t v17 = *(v16 - 1);
            }
            --v16;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v18 != v6 || v17 >= v6) {
              *uint64_t v17 = v20;
            }
            uint64_t v24 = --v6;
            if (v19 <= v7) {
              goto LABEL_42;
            }
          }
          --v17;
          if (v16 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    uint64_t v14 = &v4[v10];
    uint64_t v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*v6 >= *v4)
        {
          if (v7 != v4) {
            *uint64_t v7 = *v4;
          }
          BOOL v23 = ++v4;
          BOOL v15 = v6;
        }
        else
        {
          BOOL v15 = v6 + 1;
          if (v7 < v6 || v7 >= v15 || v7 != v6) {
            *uint64_t v7 = *v6;
          }
        }
        ++v7;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      uint64_t v24 = v7;
    }
LABEL_42:
    sub_2288EBF28((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  uint64_t result = sub_228916480();
  __break(1u);
  return result;
}

uint64_t sub_2288EB890(float *__src, float *a2, unint64_t a3, float *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 3;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 2;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 3;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 2;
  uint64_t v24 = __src;
  BOOL v23 = __dst;
  if (v10 >= v12 >> 2)
  {
    if (v11 >= -3)
    {
      if (__dst != a2 || &a2[v13] <= __dst) {
        memmove(__dst, a2, 4 * v13);
      }
      uint64_t v16 = &v4[v13];
      uint64_t v22 = v16;
      uint64_t v24 = v6;
      if (v7 < v6 && v11 >= 4)
      {
        uint64_t v17 = (float *)(a3 - 4);
        while (1)
        {
          uint64_t v18 = v17 + 1;
          uint64_t v19 = v6 - 1;
          float v20 = *(v6 - 1);
          if (*(v16 - 1) >= v20)
          {
            uint64_t v22 = v16 - 1;
            if (v18 < v16 || v17 >= v16 || v18 != v16) {
              *uint64_t v17 = *(v16 - 1);
            }
            --v16;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v18 != v6 || v17 >= v6) {
              *uint64_t v17 = v20;
            }
            uint64_t v24 = --v6;
            if (v19 <= v7) {
              goto LABEL_42;
            }
          }
          --v17;
          if (v16 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -3)
  {
    if (__dst != __src || &__src[v10] <= __dst) {
      memmove(__dst, __src, 4 * v10);
    }
    uint64_t v14 = &v4[v10];
    uint64_t v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 4)
    {
      do
      {
        if (*v6 >= *v4)
        {
          if (v7 != v4) {
            *uint64_t v7 = *v4;
          }
          BOOL v23 = ++v4;
          BOOL v15 = v6;
        }
        else
        {
          BOOL v15 = v6 + 1;
          if (v7 < v6 || v7 >= v15 || v7 != v6) {
            *uint64_t v7 = *v6;
          }
        }
        ++v7;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      uint64_t v24 = v7;
    }
LABEL_42:
    sub_2288EBFE4((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  uint64_t result = sub_228916480();
  __break(1u);
  return result;
}

uint64_t sub_2288EBB00(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 7;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  uint64_t v24 = __src;
  BOOL v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst) {
        memmove(__dst, a2, 8 * v13);
      }
      uint64_t v16 = &v4[8 * v13];
      uint64_t v22 = v16;
      uint64_t v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        uint64_t v17 = (char *)(a3 - 8);
        while (1)
        {
          uint64_t v18 = v17 + 8;
          uint64_t v19 = v6 - 8;
          uint64_t v20 = *((void *)v6 - 1);
          if (*((void *)v16 - 1) >= v20)
          {
            uint64_t v22 = v16 - 8;
            if (v18 < v16 || v17 >= v16 || v18 != v16) {
              *(void *)uint64_t v17 = *((void *)v16 - 1);
            }
            v16 -= 8;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v18 != v6 || v17 >= v6) {
              *(void *)uint64_t v17 = v20;
            }
            uint64_t v24 = v6 - 8;
            v6 -= 8;
            if (v19 <= v7) {
              goto LABEL_42;
            }
          }
          v17 -= 8;
          if (v16 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    uint64_t v14 = &v4[8 * v10];
    uint64_t v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*(void *)v6 >= *(void *)v4)
        {
          if (v7 != v4) {
            *(void *)uint64_t v7 = *(void *)v4;
          }
          v4 += 8;
          BOOL v23 = v4;
          BOOL v15 = v6;
        }
        else
        {
          BOOL v15 = v6 + 8;
          if (v7 < v6 || v7 >= v15 || v7 != v6) {
            *(void *)uint64_t v7 = *(void *)v6;
          }
        }
        v7 += 8;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      uint64_t v24 = v7;
    }
LABEL_42:
    sub_2288EBF28((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  uint64_t result = sub_228916480();
  __break(1u);
  return result;
}

char *sub_2288EBD70(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26826B128);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_2288EBE6C(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)sub_228916480();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

char *sub_2288EBF28(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)sub_228916480();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

char *sub_2288EBFE4(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 3;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -4)
  {
    uint64_t result = (char *)sub_228916480();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 2;
    if (result != v3 || result >= &v3[4 * v7])
    {
      return (char *)memmove(result, v3, 4 * v7);
    }
  }
  return result;
}

char *sub_2288EC0A0(uint64_t a1)
{
  return sub_2288EBD70(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t _s15ProximityReader9JwtHelperV17generateSignature22base64UrlEncodedHeader0ghI7Payload10privateKeySSSgSS_SS9CryptoKit4P256O7SigningO07PrivateM0VtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_bridgeObjectRetain();
  sub_228915D60();
  sub_228915D60();
  uint64_t v6 = sub_2288BDC04(a5);
  unint64_t v8 = v7;
  swift_bridgeObjectRelease();
  if (v8 >> 60 == 15) {
    return 0;
  }
  sub_228915240();
  sub_2288566E4();
  sub_228916220();
  swift_bridgeObjectRelease();
  sub_228916220();
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_228916220();
  swift_bridgeObjectRelease();
  sub_22880BB6C(v6, v8);
  return v9;
}

uint64_t sub_2288EC298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v6);
  unint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[2] = a1;
  v20[3] = a2;
  v20[0] = 46;
  v20[1] = 0xE100000000000000;
  sub_2288566E4();
  uint64_t result = sub_228916210();
  if (*(void *)(result + 16) <= a3) {
    goto LABEL_7;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    uint64_t v10 = result + 16 * a3;
    uint64_t v11 = *(void *)(v10 + 32);
    unint64_t v12 = *(void *)(v10 + 40);
    uint64_t v13 = HIBYTE(v12) & 0xF;
    if ((v12 & 0x2000000000000000) == 0) {
      uint64_t v13 = v11 & 0xFFFFFFFFFFFFLL;
    }
    if (v13)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return v11;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    if (qword_268267F18 != -1) {
      swift_once();
    }
    uint64_t v14 = __swift_project_value_buffer(v6, (uint64_t)qword_268283DB0);
    sub_22883741C(v14, (uint64_t)v8, (uint64_t *)&unk_2682684D0);
    uint64_t v15 = sub_2289155C0();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v8, 1, v15) == 1)
    {
      sub_2288110C0((uint64_t)v8, (uint64_t *)&unk_2682684D0);
    }
    else
    {
      uint64_t v17 = sub_2289155A0();
      os_log_type_t v18 = sub_228916070();
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v19 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v19 = 0;
        _os_log_impl(&dword_228806000, v17, v18, "Error extracting JWT payload value", v19, 2u);
        MEMORY[0x22A6A1090](v19, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v15);
    }
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_2288EC508(uint64_t a1, uint64_t a2)
{
  sub_2288111D0(a1, (uint64_t)v10);
  if (!swift_dynamicCast())
  {
    if (swift_dynamicCast())
    {
      sub_2288111D0(a1, (uint64_t)&v9);
      if (swift_dynamicCast())
      {
        sub_2288111D0(a2, (uint64_t)&v9);
        if (swift_dynamicCast())
        {
          char v4 = 1;
          goto LABEL_23;
        }
      }
LABEL_22:
      char v4 = 0;
      goto LABEL_23;
    }
    if (swift_dynamicCast())
    {
      char v4 = sub_2288E6A0C(a1, a2);
      goto LABEL_23;
    }
    if (swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      char v4 = sub_2288E6AB4(a1, a2);
      goto LABEL_23;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_26826B110);
    if (swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      uint64_t v5 = &qword_26826B110;
      uint64_t v6 = (uint64_t (*)(uint64_t))sub_22886FFC4;
      uint64_t v7 = sub_2288EAC28;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26826B118);
      if (swift_dynamicCast())
      {
        swift_bridgeObjectRelease();
        uint64_t v5 = &qword_26826B118;
        uint64_t v6 = (uint64_t (*)(uint64_t))sub_22886FFB0;
        uint64_t v7 = sub_2288EA594;
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_26826B120);
        if (swift_dynamicCast())
        {
          swift_bridgeObjectRelease();
          uint64_t v5 = &qword_26826B120;
          uint64_t v6 = (uint64_t (*)(uint64_t))sub_22886FF9C;
          uint64_t v7 = sub_2288E9F00;
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26826A5A0);
          if (!swift_dynamicCast()) {
            goto LABEL_22;
          }
          swift_bridgeObjectRelease();
          uint64_t v5 = &qword_26826A5A0;
          uint64_t v6 = (uint64_t (*)(uint64_t))sub_22886FF88;
          uint64_t v7 = sub_2288E9814;
        }
      }
    }
    char v4 = sub_2288E6EE8(a1, a2, v5, v6, v7);
    goto LABEL_23;
  }
  sub_2288111D0(a1, (uint64_t)&v9);
  if (!swift_dynamicCast()) {
    goto LABEL_22;
  }
  sub_2288111D0(a2, (uint64_t)&v9);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_22;
  }
  char v4 = 1;
LABEL_23:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  return v4 & 1;
}

uint64_t _s15ProximityReader9JwtHelperV9makeToken6header6claims6inject6expiry4signSSSDySSypG_AJSbSi9CryptoKit4P256O7SigningO10PrivateKeyVSgtFZ_0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v87 = *MEMORY[0x263EF8340];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B0C0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v78 = (uint64_t)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_228915B50();
  uint64_t v79 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v81 = (uint64_t)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_2289152F0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2289152E0();
  sub_2289152C0();
  double v18 = v17;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  if ((~*(void *)&v18 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v18 <= -9.22337204e18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v18 >= 9.22337204e18)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (a3)
  {
    uint64_t v19 = MEMORY[0x263F8D6C8];
    uint64_t v86 = MEMORY[0x263F8D6C8];
    *(void *)&long long v85 = (uint64_t)v18;
    sub_22881122C(&v85, v84);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v82 = a2;
    sub_22883AA3C(v84, 7627113, 0xE300000000000000, isUniquelyReferenced_nonNull_native);
    uint64_t v21 = v82;
    swift_bridgeObjectRelease();
    if (!__OFADD__((uint64_t)v18, a4))
    {
      uint64_t v86 = v19;
      *(void *)&long long v85 = (uint64_t)v18 + a4;
      sub_22881122C(&v85, v84);
      char v22 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v82 = v21;
      sub_22883AA3C(v84, 7370853, 0xE300000000000000, v22);
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
LABEL_25:
    __break(1u);
  }
  swift_bridgeObjectRetain();
LABEL_8:
  uint64_t v75 = a5;
  uint64_t v76 = v11;
  BOOL v23 = self;
  uint64_t v24 = (void *)sub_228915B90();
  *(void *)&long long v85 = 0;
  id v25 = objc_msgSend(v23, sel_dataWithJSONObject_options_error_, v24, 0, &v85);

  id v26 = (id)v85;
  if (v25)
  {
    uint64_t v27 = sub_228915260();
    unint64_t v29 = v28;

    *(void *)&long long v85 = sub_228915240();
    *((void *)&v85 + 1) = v30;
    *(void *)&v84[0] = 43;
    *((void *)&v84[0] + 1) = 0xE100000000000000;
    uint64_t v82 = 45;
    unint64_t v83 = 0xE100000000000000;
    sub_2288566E4();
    uint64_t v74 = v23;
    uint64_t v31 = sub_228916220();
    uint64_t v33 = v32;
    swift_bridgeObjectRelease();
    *(void *)&long long v85 = v31;
    *((void *)&v85 + 1) = v33;
    *(void *)&v84[0] = 47;
    *((void *)&v84[0] + 1) = 0xE100000000000000;
    uint64_t v82 = 95;
    unint64_t v83 = 0xE100000000000000;
    uint64_t v34 = sub_228916220();
    uint64_t v36 = v35;
    swift_bridgeObjectRelease();
    *(void *)&long long v85 = v34;
    *((void *)&v85 + 1) = v36;
    *(void *)&v84[0] = 61;
    *((void *)&v84[0] + 1) = 0xE100000000000000;
    uint64_t v82 = 0;
    unint64_t v83 = 0xE000000000000000;
    BOOL v23 = v74;
    uint64_t v80 = sub_228916220();
    uint64_t v77 = v37;
    swift_bridgeObjectRelease();
    sub_22880BB80(v27, v29);
  }
  else
  {
    uint64_t v38 = v26;
    uint64_t v39 = (void *)sub_2289150A0();

    swift_willThrow();
    uint64_t v80 = 0;
    uint64_t v77 = 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v40 = (void *)sub_228915B90();
  swift_bridgeObjectRelease();
  *(void *)&long long v85 = 0;
  id v41 = objc_msgSend(v23, sel_dataWithJSONObject_options_error_, v40, 0, &v85);

  id v42 = (id)v85;
  if (v41)
  {
    uint64_t v43 = sub_228915260();
    unint64_t v45 = v44;

    *(void *)&long long v85 = sub_228915240();
    *((void *)&v85 + 1) = v46;
    *(void *)&v84[0] = 43;
    *((void *)&v84[0] + 1) = 0xE100000000000000;
    uint64_t v82 = 45;
    unint64_t v83 = 0xE100000000000000;
    sub_2288566E4();
    uint64_t v47 = sub_228916220();
    uint64_t v49 = v48;
    swift_bridgeObjectRelease();
    *(void *)&long long v85 = v47;
    *((void *)&v85 + 1) = v49;
    *(void *)&v84[0] = 47;
    *((void *)&v84[0] + 1) = 0xE100000000000000;
    uint64_t v82 = 95;
    unint64_t v83 = 0xE100000000000000;
    uint64_t v50 = sub_228916220();
    uint64_t v52 = v51;
    swift_bridgeObjectRelease();
    *(void *)&long long v85 = v50;
    *((void *)&v85 + 1) = v52;
    *(void *)&v84[0] = 61;
    *((void *)&v84[0] + 1) = 0xE100000000000000;
    uint64_t v82 = 0;
    unint64_t v83 = 0xE000000000000000;
    uint64_t v53 = sub_228916220();
    uint64_t v55 = v54;
    swift_bridgeObjectRelease();
    sub_22880BB80(v43, v45);
  }
  else
  {
    uint64_t v56 = v42;
    uint64_t v57 = (void *)sub_2289150A0();

    swift_willThrow();
    uint64_t v53 = 0;
    uint64_t v55 = 0;
  }
  uint64_t v58 = v78;
  sub_22883741C(v75, v78, &qword_26826B0C0);
  uint64_t v59 = v79;
  uint64_t v60 = v76;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v79 + 48))(v58, 1, v76) == 1)
  {
    swift_bridgeObjectRelease();
    sub_2288110C0(v58, &qword_26826B0C0);
LABEL_21:
    *(void *)&long long v85 = 0;
    *((void *)&v85 + 1) = 0xE000000000000000;
    sub_228915D60();
    swift_bridgeObjectRelease();
    sub_228915D60();
    sub_228915D60();
    swift_bridgeObjectRelease();
    sub_228915D60();
    sub_228915D60();
    swift_bridgeObjectRelease();
    return v85;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v59 + 32))(v81, v58, v60);
  uint64_t v62 = v77;
  if (v77)
  {
    if (v55)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&long long v85 = v80;
      *((void *)&v85 + 1) = v62;
      swift_bridgeObjectRetain();
      sub_228915D60();
      sub_228915D60();
      uint64_t v63 = sub_2288BDC04(v81);
      unint64_t v65 = v64;
      swift_bridgeObjectRelease();
      if (v65 >> 60 != 15)
      {
        *(void *)&long long v85 = sub_228915240();
        *((void *)&v85 + 1) = v66;
        *(void *)&v84[0] = 43;
        *((void *)&v84[0] + 1) = 0xE100000000000000;
        uint64_t v82 = 45;
        unint64_t v83 = 0xE100000000000000;
        sub_2288566E4();
        uint64_t v75 = v63;
        uint64_t v67 = sub_228916220();
        uint64_t v78 = v53;
        uint64_t v69 = v68;
        swift_bridgeObjectRelease();
        *(void *)&long long v85 = v67;
        *((void *)&v85 + 1) = v69;
        *(void *)&v84[0] = 47;
        *((void *)&v84[0] + 1) = 0xE100000000000000;
        uint64_t v82 = 95;
        unint64_t v83 = 0xE100000000000000;
        uint64_t v70 = sub_228916220();
        uint64_t v72 = v71;
        swift_bridgeObjectRelease();
        *(void *)&long long v85 = v70;
        *((void *)&v85 + 1) = v72;
        *(void *)&v84[0] = 61;
        *((void *)&v84[0] + 1) = 0xE100000000000000;
        uint64_t v82 = 0;
        unint64_t v83 = 0xE000000000000000;
        sub_228916220();
        uint64_t v59 = v79;
        swift_bridgeObjectRelease();
        sub_22880BB6C(v75, v65);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v81, v60);
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_2288ED2D8()
{
  unint64_t result = qword_2682698D0;
  if (!qword_2682698D0)
  {
    sub_2289152F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2682698D0);
  }
  return result;
}

unint64_t sub_2288ED330()
{
  unint64_t result = qword_26826B0D0;
  if (!qword_26826B0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B0D0);
  }
  return result;
}

unint64_t sub_2288ED384()
{
  unint64_t result = qword_26826B0E0;
  if (!qword_26826B0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B0E0);
  }
  return result;
}

ValueMetadata *type metadata accessor for JwtHelper()
{
  return &type metadata for JwtHelper;
}

ValueMetadata *type metadata accessor for JwtHeader()
{
  return &type metadata for JwtHeader;
}

unsigned char *storeEnumTagSinglePayload for JwtHeader.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2288ED4C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JwtHeader.CodingKeys()
{
  return &type metadata for JwtHeader.CodingKeys;
}

ValueMetadata *type metadata accessor for JwtHelper.CodingKeys()
{
  return &type metadata for JwtHelper.CodingKeys;
}

unint64_t sub_2288ED510()
{
  unint64_t result = qword_26826B0E8;
  if (!qword_26826B0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B0E8);
  }
  return result;
}

unint64_t sub_2288ED568()
{
  unint64_t result = qword_26826B0F0;
  if (!qword_26826B0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B0F0);
  }
  return result;
}

unint64_t sub_2288ED5C0()
{
  unint64_t result = qword_26826B0F8;
  if (!qword_26826B0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B0F8);
  }
  return result;
}

unint64_t sub_2288ED618()
{
  unint64_t result = qword_26826B100;
  if (!qword_26826B100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B100);
  }
  return result;
}

unint64_t sub_2288ED670()
{
  unint64_t result = qword_26826B108;
  if (!qword_26826B108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B108);
  }
  return result;
}

uint64_t sub_2288ED6C4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 6777953 && a2 == 0xE300000000000000;
  if (v2 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7371124 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_228916660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

BOOL static MobileDriversLicenseViewResponseInternal.ValidationOutcome.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t MobileDriversLicenseViewResponseInternal.ValidationOutcome.hash(into:)()
{
  return sub_228916760();
}

uint64_t sub_2288ED7D8(uint64_t a1)
{
  unint64_t v2 = sub_2288EDE4C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2288ED814(uint64_t a1)
{
  unint64_t v2 = sub_2288EDE4C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2288ED850()
{
  uint64_t v1 = 0x6465766F72707061;
  if (*v0 != 1) {
    uint64_t v1 = 0x64657463656A6572;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x657373696D736964;
  }
}

uint64_t sub_2288ED8B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2288EF81C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2288ED8D8(uint64_t a1)
{
  unint64_t v2 = sub_2288EDDA4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2288ED914(uint64_t a1)
{
  unint64_t v2 = sub_2288EDDA4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2288ED950(uint64_t a1)
{
  unint64_t v2 = sub_2288EDEA0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2288ED98C(uint64_t a1)
{
  unint64_t v2 = sub_2288EDEA0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2288ED9C8(uint64_t a1)
{
  unint64_t v2 = sub_2288EDDF8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2288EDA04(uint64_t a1)
{
  unint64_t v2 = sub_2288EDDF8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t MobileDriversLicenseViewResponseInternal.ValidationOutcome.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B130);
  uint64_t v24 = *(void *)(v4 - 8);
  uint64_t v25 = v4;
  MEMORY[0x270FA5388](v4);
  BOOL v23 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B138);
  uint64_t v21 = *(void *)(v6 - 8);
  uint64_t v22 = v6;
  MEMORY[0x270FA5388](v6);
  unint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B140);
  uint64_t v19 = *(void *)(v9 - 8);
  uint64_t v20 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B148);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v16 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2288EDDA4();
  sub_2289167B0();
  if (v16)
  {
    if (v16 == 1)
    {
      char v27 = 1;
      sub_2288EDE4C();
      sub_228916580();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v22);
    }
    else
    {
      char v28 = 2;
      sub_2288EDDF8();
      double v17 = v23;
      sub_228916580();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v25);
    }
  }
  else
  {
    char v26 = 0;
    sub_2288EDEA0();
    sub_228916580();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v20);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

unint64_t sub_2288EDDA4()
{
  unint64_t result = qword_26826B150;
  if (!qword_26826B150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B150);
  }
  return result;
}

unint64_t sub_2288EDDF8()
{
  unint64_t result = qword_26826B158;
  if (!qword_26826B158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B158);
  }
  return result;
}

unint64_t sub_2288EDE4C()
{
  unint64_t result = qword_26826B160;
  if (!qword_26826B160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B160);
  }
  return result;
}

unint64_t sub_2288EDEA0()
{
  unint64_t result = qword_26826B168;
  if (!qword_26826B168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B168);
  }
  return result;
}

uint64_t MobileDriversLicenseViewResponseInternal.ValidationOutcome.hashValue.getter()
{
  return sub_228916780();
}

uint64_t MobileDriversLicenseViewResponseInternal.ValidationOutcome.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B170);
  uint64_t v33 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v37 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B178);
  uint64_t v32 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B180);
  uint64_t v31 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B188);
  uint64_t v36 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2288EDDA4();
  uint64_t v12 = (uint64_t)v39;
  sub_2289167A0();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v29 = v6;
  uint64_t v30 = 0;
  uint64_t v14 = v37;
  uint64_t v13 = v38;
  uint64_t v39 = a1;
  uint64_t v15 = v11;
  uint64_t v16 = sub_228916570();
  if (*(void *)(v16 + 16) != 1)
  {
    uint64_t v21 = sub_228916360();
    swift_allocError();
    BOOL v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26826B190);
    *BOOL v23 = &type metadata for MobileDriversLicenseViewResponseInternal.ValidationOutcome;
    sub_2289164D0();
    sub_228916350();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v23, *MEMORY[0x263F8DCB0], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v9);
    a1 = v39;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  int v17 = *(unsigned __int8 *)(v16 + 32);
  if (*(unsigned char *)(v16 + 32))
  {
    if (v17 == 1)
    {
      char v41 = 1;
      sub_2288EDE4C();
      uint64_t v18 = v30;
      sub_2289164C0();
      uint64_t v20 = v35;
      uint64_t v19 = v36;
      uint64_t v30 = v18;
      if (v18)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
LABEL_12:
        a1 = v39;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      }
      (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v34);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
    }
    else
    {
      char v42 = 2;
      sub_2288EDDF8();
      uint64_t v25 = v30;
      sub_2289164C0();
      uint64_t v20 = v35;
      uint64_t v26 = v36;
      uint64_t v30 = v25;
      if (v25)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v13);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
    }
  }
  else
  {
    char v40 = 0;
    sub_2288EDEA0();
    uint64_t v24 = v30;
    sub_2289164C0();
    uint64_t v30 = v24;
    if (v24)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
    uint64_t v20 = v35;
  }
  *uint64_t v20 = v17;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
}

uint64_t sub_2288EE4F4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return MobileDriversLicenseViewResponseInternal.ValidationOutcome.init(from:)(a1, a2);
}

uint64_t sub_2288EE50C(void *a1)
{
  return MobileDriversLicenseViewResponseInternal.ValidationOutcome.encode(to:)(a1);
}

void MobileDriversLicenseViewResponseInternal.internalValidationOutcome.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1
                 + OBJC_IVAR____TtC15ProximityReader40MobileDriversLicenseViewResponseInternal_internalValidationOutcome);
}

id MobileDriversLicenseViewResponseInternal.__allocating_init(validationOutcome:)(unsigned char *a1)
{
  uint64_t v3 = objc_allocWithZone(v1);
  v3[OBJC_IVAR____TtC15ProximityReader40MobileDriversLicenseViewResponseInternal_internalValidationOutcome] = *a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id MobileDriversLicenseViewResponseInternal.init(validationOutcome:)(unsigned char *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v1[OBJC_IVAR____TtC15ProximityReader40MobileDriversLicenseViewResponseInternal_internalValidationOutcome] = *a1;
  v5.receiver = v1;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_init);
}

id MobileDriversLicenseViewResponseInternal.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void MobileDriversLicenseViewResponseInternal.init()()
{
}

unint64_t sub_2288EE674()
{
  return 0xD000000000000019;
}

uint64_t sub_2288EE690@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2288EF980(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2288EE6BC(uint64_t a1)
{
  unint64_t v2 = sub_2288EE8BC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2288EE6F8(uint64_t a1)
{
  unint64_t v2 = sub_2288EE8BC();

  return MEMORY[0x270FA00B8](a1, v2);
}

id MobileDriversLicenseViewResponseInternal.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t MobileDriversLicenseViewResponseInternal.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B1A0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2288EE8BC();
  sub_2289167B0();
  v9[15] = *(unsigned char *)(v2
                    + OBJC_IVAR____TtC15ProximityReader40MobileDriversLicenseViewResponseInternal_internalValidationOutcome);
  sub_2288EE910();
  sub_228916610();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_2288EE8BC()
{
  unint64_t result = qword_26826B1A8;
  if (!qword_26826B1A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B1A8);
  }
  return result;
}

unint64_t sub_2288EE910()
{
  unint64_t result = qword_26826B1B0;
  if (!qword_26826B1B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B1B0);
  }
  return result;
}

void *MobileDriversLicenseViewResponseInternal.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return MobileDriversLicenseViewResponseInternal.init(from:)(a1);
}

void *MobileDriversLicenseViewResponseInternal.init(from:)(void *a1)
{
  id v3 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B1B8);
  uint64_t v12 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2288EE8BC();
  id v9 = v3;
  sub_2289167A0();
  if (v2)
  {

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v10 = v12;
    sub_2288EEBA0();
    sub_228916560();
    *((unsigned char *)v9 + OBJC_IVAR____TtC15ProximityReader40MobileDriversLicenseViewResponseInternal_internalValidationOutcome) = v15;

    v14.receiver = v9;
    v14.super_class = ObjectType;
    unint64_t v8 = objc_msgSendSuper2(&v14, sel_init);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v8;
}

unint64_t sub_2288EEBA0()
{
  unint64_t result = qword_26826B1C0;
  if (!qword_26826B1C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B1C0);
  }
  return result;
}

void *sub_2288EEBF4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v6 = objc_allocWithZone(v2);
  unint64_t result = MobileDriversLicenseViewResponseInternal.init(from:)(a1);
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_2288EEC44(void *a1)
{
  return MobileDriversLicenseViewResponseInternal.encode(to:)(a1);
}

uint64_t static MobileDriversLicenseViewResponseInternal.supportsSecureCoding.getter()
{
  return 1;
}

id MobileDriversLicenseViewResponseInternal.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id MobileDriversLicenseViewResponseInternal.init(coder:)(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_22880C37C();
  id v4 = v1;
  uint64_t v5 = sub_228916120();
  if (!v5)
  {

LABEL_10:
    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  id v6 = (void *)v5;
  uint64_t v7 = sub_228915260();
  unint64_t v9 = v8;

  id v10 = objc_allocWithZone(MEMORY[0x263F08928]);
  sub_22880ACB8(v7, v9);
  id v11 = sub_22880C5EC();
  sub_22880BB80(v7, v9);
  if (!v11)
  {

LABEL_9:
    sub_22880BB80(v7, v9);
    goto LABEL_10;
  }
  sub_2288EF0F4(&qword_26826B1D0);
  sub_228916090();
  uint64_t v12 = v19;

  if (!v19)
  {
    objc_msgSend(v11, sel_finishDecoding);

    goto LABEL_9;
  }
  char v13 = *((unsigned char *)v19
        + OBJC_IVAR____TtC15ProximityReader40MobileDriversLicenseViewResponseInternal_internalValidationOutcome);
  objc_super v14 = objc_allocWithZone(ObjectType);
  v14[OBJC_IVAR____TtC15ProximityReader40MobileDriversLicenseViewResponseInternal_internalValidationOutcome] = v13;
  v18.receiver = v14;
  v18.super_class = ObjectType;
  id v15 = objc_msgSendSuper2(&v18, sel_init);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  id v16 = v15;
  objc_msgSend(v11, sel_finishDecoding);

  sub_22880BB80(v7, v9);
  return v16;
}

Swift::Void __swiftcall MobileDriversLicenseViewResponseInternal.encode(with:)(NSCoder with)
{
  swift_getObjectType();
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08910]), sel_initRequiringSecureCoding_, 1);
  sub_2288EF0F4(&qword_26826B1D8);
  sub_228916080();
  objc_msgSend(v2, sel_finishEncoding);
  id v3 = objc_msgSend(v2, sel_encodedData);
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = (void *)sub_228915C40();
    [(objc_class *)with.super.isa encodeObject:v4 forKey:v5];
  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for MobileDriversLicenseViewResponseInternal()
{
  return self;
}

uint64_t sub_2288EF0F4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for MobileDriversLicenseViewResponseInternal();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2288EF138()
{
  unint64_t result = qword_26826B1E0;
  if (!qword_26826B1E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B1E0);
  }
  return result;
}

uint64_t method lookup function for MobileDriversLicenseViewResponseInternal(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for MobileDriversLicenseViewResponseInternal);
}

uint64_t dispatch thunk of MobileDriversLicenseViewResponseInternal.__allocating_init(validationOutcome:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of MobileDriversLicenseViewResponseInternal.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

ValueMetadata *type metadata accessor for MobileDriversLicenseViewResponseInternal.ValidationOutcome()
{
  return &type metadata for MobileDriversLicenseViewResponseInternal.ValidationOutcome;
}

unsigned char *storeEnumTagSinglePayload for MobileDriversLicenseViewResponseInternal.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2288EF290);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseViewResponseInternal.CodingKeys()
{
  return &type metadata for MobileDriversLicenseViewResponseInternal.CodingKeys;
}

unsigned char *_s15ProximityReader40MobileDriversLicenseViewResponseInternalC17ValidationOutcomeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2288EF394);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseViewResponseInternal.ValidationOutcome.CodingKeys()
{
  return &type metadata for MobileDriversLicenseViewResponseInternal.ValidationOutcome.CodingKeys;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseViewResponseInternal.ValidationOutcome.DismissedCodingKeys()
{
  return &type metadata for MobileDriversLicenseViewResponseInternal.ValidationOutcome.DismissedCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseViewResponseInternal.ValidationOutcome.ApprovedCodingKeys()
{
  return &type metadata for MobileDriversLicenseViewResponseInternal.ValidationOutcome.ApprovedCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseViewResponseInternal.ValidationOutcome.RejectedCodingKeys()
{
  return &type metadata for MobileDriversLicenseViewResponseInternal.ValidationOutcome.RejectedCodingKeys;
}

unint64_t sub_2288EF400()
{
  unint64_t result = qword_26826B1F0;
  if (!qword_26826B1F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B1F0);
  }
  return result;
}

unint64_t sub_2288EF458()
{
  unint64_t result = qword_26826B1F8;
  if (!qword_26826B1F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B1F8);
  }
  return result;
}

unint64_t sub_2288EF4B0()
{
  unint64_t result = qword_26826B200;
  if (!qword_26826B200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B200);
  }
  return result;
}

unint64_t sub_2288EF508()
{
  unint64_t result = qword_26826B208;
  if (!qword_26826B208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B208);
  }
  return result;
}

unint64_t sub_2288EF560()
{
  unint64_t result = qword_26826B210;
  if (!qword_26826B210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B210);
  }
  return result;
}

unint64_t sub_2288EF5B8()
{
  unint64_t result = qword_26826B218;
  if (!qword_26826B218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B218);
  }
  return result;
}

unint64_t sub_2288EF610()
{
  unint64_t result = qword_26826B220;
  if (!qword_26826B220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B220);
  }
  return result;
}

unint64_t sub_2288EF668()
{
  unint64_t result = qword_26826B228;
  if (!qword_26826B228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B228);
  }
  return result;
}

unint64_t sub_2288EF6C0()
{
  unint64_t result = qword_26826B230;
  if (!qword_26826B230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B230);
  }
  return result;
}

unint64_t sub_2288EF718()
{
  unint64_t result = qword_26826B238;
  if (!qword_26826B238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B238);
  }
  return result;
}

unint64_t sub_2288EF770()
{
  unint64_t result = qword_26826B240;
  if (!qword_26826B240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B240);
  }
  return result;
}

unint64_t sub_2288EF7C8()
{
  unint64_t result = qword_26826B248;
  if (!qword_26826B248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B248);
  }
  return result;
}

uint64_t sub_2288EF81C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x657373696D736964 && a2 == 0xE900000000000064;
  if (v2 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6465766F72707061 && a2 == 0xE800000000000000 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64657463656A6572 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_228916660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_2288EF980(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000019 && a2 == 0x800000022892CC00)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_228916660();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t static TransactionTypeInternal.internalize(_:)(unsigned __int8 *a1)
{
  return *a1;
}

BOOL TransactionTypeInternal.init(rawValue:)(uint64_t a1)
{
  return a1 && a1 == 1;
}

uint64_t TransactionTypeInternal.description.getter(uint64_t a1)
{
  if (!a1) {
    return 0x6573616863727570;
  }
  if (a1 == 1) {
    return 0x646E75666572;
  }
  uint64_t result = sub_228916690();
  __break(1u);
  return result;
}

unint64_t sub_2288EFAA4()
{
  unint64_t result = qword_26826B250;
  if (!qword_26826B250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B250);
  }
  return result;
}

uint64_t sub_2288EFAF8()
{
  if (!*v0) {
    return 0x6573616863727570;
  }
  if (*v0 == 1) {
    return 0x646E75666572;
  }
  uint64_t result = sub_228916690();
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for TransactionTypeInternal()
{
  return &type metadata for TransactionTypeInternal;
}

uint64_t IdentityConfigurationInternal.readerIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15ProximityReader29IdentityConfigurationInternal_readerIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

id IdentityConfigurationInternal.__allocating_init(readerIdentifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)objc_allocWithZone(v2);
  char v6 = &v5[OBJC_IVAR____TtC15ProximityReader29IdentityConfigurationInternal_readerIdentifier];
  *(void *)char v6 = a1;
  *((void *)v6 + 1) = a2;
  v8.receiver = v5;
  v8.super_class = v2;
  return objc_msgSendSuper2(&v8, sel_init);
}

id IdentityConfigurationInternal.init(readerIdentifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  char v6 = &v2[OBJC_IVAR____TtC15ProximityReader29IdentityConfigurationInternal_readerIdentifier];
  *(void *)char v6 = a1;
  *((void *)v6 + 1) = a2;
  v8.receiver = v2;
  v8.super_class = ObjectType;
  return objc_msgSendSuper2(&v8, sel_init);
}

id IdentityConfigurationInternal.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void IdentityConfigurationInternal.init()()
{
}

id IdentityConfigurationInternal.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t static IdentityConfigurationInternal.supportsSecureCoding.getter()
{
  return byte_26826B260;
}

uint64_t static IdentityConfigurationInternal.supportsSecureCoding.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  byte_26826B260 = a1;
  return result;
}

uint64_t (*static IdentityConfigurationInternal.supportsSecureCoding.modify())()
{
  return j__swift_endAccess;
}

Swift::Void __swiftcall IdentityConfigurationInternal.encode(with:)(NSCoder with)
{
  objc_super v2 = (void *)sub_228915C40();
  id v3 = (id)sub_228915C40();
  [(objc_class *)with.super.isa encodeObject:v2 forKey:v3];
}

id IdentityConfigurationInternal.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

uint64_t IdentityConfigurationInternal.init(coder:)(void *a1)
{
  objc_super v2 = v1;
  swift_getObjectType();
  sub_22880A978();
  id v4 = v2;
  uint64_t v5 = sub_228916120();
  if (v5)
  {
    char v6 = (void *)v5;
    uint64_t v8 = 0;
    sub_228915C60();
  }
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return 0;
}

uint64_t type metadata accessor for IdentityConfigurationInternal()
{
  return self;
}

uint64_t method lookup function for IdentityConfigurationInternal(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for IdentityConfigurationInternal);
}

uint64_t dispatch thunk of IdentityConfigurationInternal.__allocating_init(readerIdentifier:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

void static MobileDriversLicenseDisplayRequest.Options.ValidationMode.check.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

BOOL static MobileDriversLicenseDisplayRequest.Options.ValidationMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void static MobileDriversLicenseDisplayRequest.Options.ValidationMode.checkMultiple.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

void static MobileDriversLicenseDisplayRequest.Options.ValidationMode.confirm.getter(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

void MobileDriversLicenseDisplayRequest.Options.ValidationMode.internalValidationMode.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t MobileDriversLicenseDisplayRequest.Options.ValidationMode.hash(into:)()
{
  return sub_228916760();
}

uint64_t MobileDriversLicenseDisplayRequest.Options.ValidationMode.hashValue.getter()
{
  return sub_228916780();
}

unint64_t sub_2288F02A8()
{
  unint64_t result = qword_26826B270;
  if (!qword_26826B270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B270);
  }
  return result;
}

unsigned char *_s14ValidationModeVwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2288F03C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDisplayRequest.Options.ValidationMode()
{
  return &type metadata for MobileDriversLicenseDisplayRequest.Options.ValidationMode;
}

unint64_t static ErrorCode.ProdConfigOnCert.getter()
{
  return 0xD000000000000036;
}

unint64_t static ErrorCode.CertConfigOnProd.getter()
{
  return 0xD000000000000048;
}

unint64_t static ErrorCode.PartnerConfigChanged.getter()
{
  return 0xD000000000000059;
}

unint64_t static ErrorCode.PartnerTokenExpClaimMissing.getter()
{
  return 0xD000000000000024;
}

unint64_t static ErrorCode.SAFNotAvailable.getter()
{
  return 0xD00000000000002CLL;
}

uint64_t static ErrorCode.Authorization.ExpiredPSPToken.getter()
{
  return 0x363530342D535A41;
}

uint64_t static ErrorCode.Authorization.DeviceStatusInvalid.getter()
{
  return 0x303031342D535A41;
}

uint64_t static ErrorCode.Authorization.MerchantStatusInvalid.getter()
{
  return 0x303032342D535A41;
}

uint64_t static ErrorCode.Authorization.MerchantStatusBlocked.getter()
{
  return 0x313032342D535A41;
}

uint64_t static ErrorCode.Authorization.MerchantNotRegistered.getter()
{
  return 0x323032342D535A41;
}

uint64_t static ErrorCode.Authorization.MerchantRestricted.getter()
{
  return 0x333032342D535A41;
}

uint64_t static ErrorCode.Authorization.AuthConfigEnvMismatch.getter()
{
  return 0x333033342D535A41;
}

unint64_t sub_2288F0534()
{
  unint64_t result = sub_228838828((uint64_t)&unk_26DCFD658);
  qword_26826B278 = result;
  return result;
}

uint64_t static ErrorCode.Authorization.TokenErrorsMapping.getter()
{
  return sub_2288F06F0(&qword_268268168);
}

unint64_t static ErrorCode.MerchantManager.AlreadyRegistered.getter()
{
  return 0xD000000000000012;
}

uint64_t static ErrorCode.MerchantManager.ExpiredPSPToken.getter()
{
  return 0x343630342D474D4DLL;
}

uint64_t static ErrorCode.MerchantManager.InvalidGSToken.getter()
{
  return 0x303035342D474D4DLL;
}

uint64_t static ErrorCode.MerchantManager.GSTokenFailed.getter()
{
  return 0x313035342D474D4DLL;
}

uint64_t static ErrorCode.MerchantManager.MerchantStatusAlreadyExists.getter()
{
  return 0x333530342D474D4DLL;
}

uint64_t static ErrorCode.MerchantManager.MerchantStatusInvalid.getter()
{
  return 0x343530342D474D4DLL;
}

uint64_t static ErrorCode.MerchantManager.MerchantStatusWrongOrg.getter()
{
  return 0x353530342D474D4DLL;
}

uint64_t static ErrorCode.MerchantManager.MerchantStatusDeleted.getter()
{
  return 0x363530342D474D4DLL;
}

uint64_t static ErrorCode.MerchantManager.MerchantBlocked.getter()
{
  return 0x383530342D474D4DLL;
}

uint64_t static ErrorCode.MerchantManager.MerchantBlockedRelink.getter()
{
  return 0x373030342D474D4DLL;
}

uint64_t static ErrorCode.MerchantManager.MerchantNotFound.getter()
{
  return 0x393530342D474D4DLL;
}

uint64_t static ErrorCode.MerchantManager.LinkConfigEnvMismatch.getter()
{
  return 0x333033342D474D4DLL;
}

unint64_t sub_2288F06A4()
{
  unint64_t result = sub_228838828((uint64_t)&unk_26DCFD818);
  qword_26826B280 = result;
  return result;
}

uint64_t static ErrorCode.MerchantManager.TokenErrors.getter()
{
  return sub_2288F06F0(&qword_268268170);
}

uint64_t sub_2288F06F0(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

ValueMetadata *type metadata accessor for ErrorCode()
{
  return &type metadata for ErrorCode;
}

ValueMetadata *type metadata accessor for ErrorCode.Authorization()
{
  return &type metadata for ErrorCode.Authorization;
}

ValueMetadata *type metadata accessor for ErrorCode.MerchantManager()
{
  return &type metadata for ErrorCode.MerchantManager;
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege.vehicleCategoryCode.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege.issueDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1
     + *(int *)(type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege()
              + 20);

  return sub_2288F082C(v3, a1);
}

uint64_t type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege()
{
  uint64_t result = qword_26826B298;
  if (!qword_26826B298) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2288F082C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege.expirationDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1
     + *(int *)(type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege()
              + 24);

  return sub_2288F082C(v3, a1);
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege.codes.getter()
{
  type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege();

  return swift_bridgeObjectRetain();
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_228914F70();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
  MEMORY[0x270FA5388](v8 - 8);
  id v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  char v13 = (char *)&v18 - v12;
  swift_bridgeObjectRetain();
  sub_228915D10();
  swift_bridgeObjectRelease();
  objc_super v14 = (int *)type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege();
  sub_2288F082C(v2 + v14[5], (uint64_t)v13);
  id v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  if (v15(v13, 1, v4) == 1)
  {
    sub_228916770();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v13, v4);
    sub_228916770();
    sub_2288F21C4(&qword_268268818, MEMORY[0x263F063B0]);
    sub_228915BD0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  sub_2288F082C(v2 + v14[6], (uint64_t)v10);
  if (v15(v10, 1, v4) == 1)
  {
    sub_228916770();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_228916770();
    sub_2288F21C4(&qword_268268818, MEMORY[0x263F063B0]);
    sub_228915BD0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v16 = *(void *)(v2 + v14[7]);
  swift_bridgeObjectRetain();
  sub_22882A2F4(a1, v16);
  return swift_bridgeObjectRelease();
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege.hashValue.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_228914F70();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = &v16[-v10 - 8];
  sub_228916750();
  sub_228915D10();
  uint64_t v12 = (int *)type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege();
  sub_2288F082C(v1 + v12[5], (uint64_t)v11);
  char v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
  if (v13(v11, 1, v2) == 1)
  {
    sub_228916770();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v11, v2);
    sub_228916770();
    sub_2288F21C4(&qword_268268818, MEMORY[0x263F063B0]);
    sub_228915BD0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_2288F082C(v1 + v12[6], (uint64_t)v8);
  if (v13(v8, 1, v2) == 1)
  {
    sub_228916770();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_228916770();
    sub_2288F21C4(&qword_268268818, MEMORY[0x263F063B0]);
    sub_228915BD0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_22882A2F4(v16, *(void *)(v1 + v12[7]));
  return sub_228916780();
}

uint64_t sub_2288F0F3C(uint64_t a1, int *a2)
{
  uint64_t v4 = v2;
  uint64_t v6 = sub_228914F70();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  id v15 = (char *)&v18 - v14;
  sub_228915D10();
  sub_2288F082C(v4 + a2[5], (uint64_t)v15);
  uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v16(v15, 1, v6) == 1)
  {
    sub_228916770();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v15, v6);
    sub_228916770();
    sub_2288F21C4(&qword_268268818, MEMORY[0x263F063B0]);
    sub_228915BD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  sub_2288F082C(v4 + a2[6], (uint64_t)v12);
  if (v16(v12, 1, v6) == 1)
  {
    sub_228916770();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
    sub_228916770();
    sub_2288F21C4(&qword_268268818, MEMORY[0x263F063B0]);
    sub_228915BD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return sub_22882A2F4(a1, *(void *)(v4 + a2[7]));
}

uint64_t sub_2288F1228(uint64_t a1, int *a2)
{
  uint64_t v4 = v2;
  uint64_t v5 = sub_228914F70();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = &v18[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = &v18[-v13 - 8];
  sub_228916750();
  sub_228915D10();
  sub_2288F082C(v4 + a2[5], (uint64_t)v14);
  id v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (v15(v14, 1, v5) == 1)
  {
    sub_228916770();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v14, v5);
    sub_228916770();
    sub_2288F21C4(&qword_268268818, MEMORY[0x263F063B0]);
    sub_228915BD0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  sub_2288F082C(v4 + a2[6], (uint64_t)v11);
  if (v15(v11, 1, v5) == 1)
  {
    sub_228916770();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
    sub_228916770();
    sub_2288F21C4(&qword_268268818, MEMORY[0x263F063B0]);
    sub_228915BD0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  sub_22882A2F4(v18, *(void *)(v4 + a2[7]));
  return sub_228916780();
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege.Code.code.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege.Code.sign.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege.Code.value.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege.Code.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  sub_228915D10();
  swift_bridgeObjectRelease();
  if (!v1)
  {
    sub_228916770();
    if (v2) {
      goto LABEL_3;
    }
    return sub_228916770();
  }
  sub_228916770();
  swift_bridgeObjectRetain();
  sub_228915D10();
  swift_bridgeObjectRelease();
  if (!v2) {
    return sub_228916770();
  }
LABEL_3:
  sub_228916770();
  swift_bridgeObjectRetain();
  sub_228915D10();

  return swift_bridgeObjectRelease();
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege.Code.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 40);
  sub_228916750();
  swift_bridgeObjectRetain();
  sub_228915D10();
  swift_bridgeObjectRelease();
  if (!v1)
  {
    sub_228916770();
    if (v2) {
      goto LABEL_3;
    }
LABEL_5:
    sub_228916770();
    return sub_228916780();
  }
  sub_228916770();
  swift_bridgeObjectRetain();
  sub_228915D10();
  swift_bridgeObjectRelease();
  if (!v2) {
    goto LABEL_5;
  }
LABEL_3:
  sub_228916770();
  swift_bridgeObjectRetain();
  sub_228915D10();
  swift_bridgeObjectRelease();
  return sub_228916780();
}

uint64_t _s15ProximityReader31MobileDriversLicenseDataRequestV8ResponseV16DocumentElementsV16DrivingPrivilegeV2eeoiySbAI_AItFZ_0(void *a1, void *a2)
{
  uint64_t v4 = sub_228914F70();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v53[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268CD8);
  MEMORY[0x270FA5388](v63);
  uint64_t v62 = &v53[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = &v53[-v10];
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = &v53[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v15);
  uint64_t v60 = &v53[-v16];
  MEMORY[0x270FA5388](v17);
  uint64_t v61 = &v53[-v18];
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = &v53[-v20];
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = &v53[-v23];
  MEMORY[0x270FA5388](v25);
  char v27 = &v53[-v26];
  uint64_t v28 = *a1;
  uint64_t v29 = a1[1];
  uint64_t v30 = *a2;
  uint64_t v31 = a2[1];
  unint64_t v64 = a2;
  if (v28 == v30 && v29 == v31 || (char v32 = sub_228916660(), v33 = 0, (v32 & 1) != 0))
  {
    uint64_t v57 = v7;
    uint64_t v34 = (int *)type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege();
    uint64_t v35 = v34[5];
    uint64_t v58 = a1;
    sub_2288F082C((uint64_t)a1 + v35, (uint64_t)v27);
    sub_2288F082C((uint64_t)v64 + v34[5], (uint64_t)v24);
    uint64_t v36 = (uint64_t)&v11[*(int *)(v63 + 48)];
    sub_2288F082C((uint64_t)v27, (uint64_t)v11);
    sub_2288F082C((uint64_t)v24, v36);
    uint64_t v59 = v5;
    uint64_t v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v37((uint64_t)v11, 1, v4) == 1)
    {
      sub_2288110C0((uint64_t)v24, &qword_268268810);
      sub_2288110C0((uint64_t)v27, &qword_268268810);
      if (v37(v36, 1, v4) == 1)
      {
        sub_2288110C0((uint64_t)v11, &qword_268268810);
LABEL_11:
        uint64_t v43 = v58;
        unint64_t v44 = v61;
        sub_2288F082C((uint64_t)v58 + v34[6], (uint64_t)v61);
        unint64_t v45 = v60;
        sub_2288F082C((uint64_t)v64 + v34[6], (uint64_t)v60);
        uint64_t v46 = v62;
        uint64_t v47 = (uint64_t)&v62[*(int *)(v63 + 48)];
        sub_2288F082C((uint64_t)v44, (uint64_t)v62);
        sub_2288F082C((uint64_t)v45, v47);
        if (v37((uint64_t)v46, 1, v4) == 1)
        {
          sub_2288110C0((uint64_t)v45, &qword_268268810);
          sub_2288110C0((uint64_t)v44, &qword_268268810);
          if (v37(v47, 1, v4) == 1)
          {
            sub_2288110C0((uint64_t)v62, &qword_268268810);
LABEL_21:
            char v33 = sub_22885AEE8(*(void *)((char *)v43 + v34[7]), *(void *)((char *)v64 + v34[7]));
            return v33 & 1;
          }
        }
        else
        {
          sub_2288F082C((uint64_t)v62, (uint64_t)v14);
          if (v37(v47, 1, v4) != 1)
          {
            uint64_t v49 = v59;
            uint64_t v50 = v57;
            (*(void (**)(unsigned char *, uint64_t, uint64_t))(v59 + 32))(v57, v47, v4);
            sub_2288F21C4(&qword_268268CE8, MEMORY[0x263F063B0]);
            char v51 = sub_228915C30();
            uint64_t v52 = *(void (**)(unsigned char *, uint64_t))(v49 + 8);
            v52(v50, v4);
            sub_2288110C0((uint64_t)v45, &qword_268268810);
            sub_2288110C0((uint64_t)v44, &qword_268268810);
            v52(v14, v4);
            sub_2288110C0((uint64_t)v62, &qword_268268810);
            if (v51) {
              goto LABEL_21;
            }
            goto LABEL_18;
          }
          sub_2288110C0((uint64_t)v45, &qword_268268810);
          sub_2288110C0((uint64_t)v44, &qword_268268810);
          (*(void (**)(unsigned char *, uint64_t))(v59 + 8))(v14, v4);
        }
        uint64_t v38 = v62;
        goto LABEL_17;
      }
    }
    else
    {
      sub_2288F082C((uint64_t)v11, (uint64_t)v21);
      if (v37(v36, 1, v4) != 1)
      {
        uint64_t v55 = v34;
        uint64_t v56 = v14;
        uint64_t v39 = v59;
        char v40 = v57;
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v59 + 32))(v57, v36, v4);
        sub_2288F21C4(&qword_268268CE8, MEMORY[0x263F063B0]);
        int v54 = sub_228915C30();
        char v41 = *(void (**)(unsigned char *, uint64_t))(v39 + 8);
        char v42 = v40;
        uint64_t v14 = v56;
        v41(v42, v4);
        sub_2288110C0((uint64_t)v24, &qword_268268810);
        sub_2288110C0((uint64_t)v27, &qword_268268810);
        v41(v21, v4);
        uint64_t v34 = v55;
        sub_2288110C0((uint64_t)v11, &qword_268268810);
        if ((v54 & 1) == 0)
        {
LABEL_18:
          char v33 = 0;
          return v33 & 1;
        }
        goto LABEL_11;
      }
      sub_2288110C0((uint64_t)v24, &qword_268268810);
      sub_2288110C0((uint64_t)v27, &qword_268268810);
      (*(void (**)(unsigned char *, uint64_t))(v59 + 8))(v21, v4);
    }
    uint64_t v38 = v11;
LABEL_17:
    sub_2288110C0((uint64_t)v38, &qword_268268CD8);
    goto LABEL_18;
  }
  return v33 & 1;
}

uint64_t sub_2288F1E8C()
{
  return sub_2288F21C4(&qword_26826B288, (void (*)(uint64_t))type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege);
}

unint64_t sub_2288F1ED8()
{
  unint64_t result = qword_26826B290;
  if (!qword_26826B290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B290);
  }
  return result;
}

uint64_t _s16DrivingPrivilegeVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2288F1F40);
}

uint64_t sub_2288F1F40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t _s16DrivingPrivilegeVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2288F2008);
}

uint64_t sub_2288F2008(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_2288F20B4()
{
  sub_2288F215C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_2288F215C()
{
  if (!qword_268268AF0)
  {
    sub_228914F70();
    unint64_t v0 = sub_2289161E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268268AF0);
    }
  }
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege.Code()
{
  return &type metadata for MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege.Code;
}

uint64_t sub_2288F21C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t MobileDriversLicenseDataRequest.retainedElements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MobileDriversLicenseDataRequest.retainedElements.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*MobileDriversLicenseDataRequest.retainedElements.modify())()
{
  return nullsub_1;
}

uint64_t MobileDriversLicenseDataRequest.nonRetainedElements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MobileDriversLicenseDataRequest.nonRetainedElements.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*MobileDriversLicenseDataRequest.nonRetainedElements.modify())()
{
  return nullsub_1;
}

uint64_t MobileDriversLicenseDataRequest.init(retainedElements:nonRetainedElements:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t MobileDriversLicenseDataRequest.hash(into:)()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  sub_228916760();
  uint64_t v3 = *(void *)(v1 + 16);
  if (v3)
  {
    unint64_t v4 = (unsigned char *)(v1 + 40);
    do
    {
      if ((*v4 & 1) == 0) {
        sub_228916760();
      }
      v4 += 16;
      sub_228916760();
      --v3;
    }
    while (v3);
  }
  uint64_t result = sub_228916760();
  uint64_t v6 = *(void *)(v2 + 16);
  if (v6)
  {
    uint64_t v7 = (unsigned char *)(v2 + 40);
    do
    {
      if ((*v7 & 1) == 0) {
        sub_228916760();
      }
      v7 += 16;
      uint64_t result = sub_228916760();
      --v6;
    }
    while (v6);
  }
  return result;
}

uint64_t static MobileDriversLicenseDataRequest.== infix(_:_:)(void *a1, void *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  if ((sub_22885AEEC(*a1, *a2) & 1) == 0) {
    return 0;
  }

  return sub_22885AEEC(v2, v3);
}

uint64_t MobileDriversLicenseDataRequest.hashValue.getter()
{
  return sub_228916780();
}

uint64_t sub_2288F2434()
{
  return sub_228916780();
}

uint64_t sub_2288F2484()
{
  return sub_228916780();
}

uint64_t static MobileDocumentRequest<>.driversLicenseData(retaining:notRetaining:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

unint64_t sub_2288F250C()
{
  unint64_t result = qword_26826B2A8;
  if (!qword_26826B2A8)
  {
    type metadata accessor for MobileDriversLicenseDataRequest.Response();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B2A8);
  }
  return result;
}

unint64_t sub_2288F2564(uint64_t a1)
{
  unint64_t result = sub_2288F258C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2288F258C()
{
  unint64_t result = qword_26826B2B0;
  if (!qword_26826B2B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B2B0);
  }
  return result;
}

unint64_t sub_2288F25E4()
{
  unint64_t result = qword_26826B2B8;
  if (!qword_26826B2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B2B8);
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDataRequest()
{
  return &type metadata for MobileDriversLicenseDataRequest;
}

uint64_t static LocaleHelper.findLocaleInBundle(locale:bundle:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B2C0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_228915410();
  uint64_t v46 = *(void *)(v9 - 8);
  uint64_t v47 = v9;
  MEMORY[0x270FA5388](v9);
  unint64_t v45 = (char *)v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268568);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_228915430();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)v41 - v19;
  sub_22883741C(a1, (uint64_t)v13, &qword_268268568);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_2288110C0((uint64_t)v13, &qword_268268568);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(a3, 1, 1, v14);
  }
  uint64_t v43 = v8;
  uint64_t v22 = v20;
  uint64_t v23 = *(void (**)(void))(v15 + 32);
  unint64_t v44 = v22;
  v23();
  id v24 = objc_msgSend(a2, sel_localizations);
  uint64_t v25 = sub_228915E90();

  int64_t v26 = *(void *)(v25 + 16);
  if (v26)
  {
    uint64_t v42 = a3;
    uint64_t v48 = MEMORY[0x263F8EE78];
    sub_22886ACA0(0, v26, 0);
    uint64_t v27 = v48;
    v41[1] = v25;
    uint64_t v28 = v25 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_228915340();
      uint64_t v48 = v27;
      unint64_t v30 = *(void *)(v27 + 16);
      unint64_t v29 = *(void *)(v27 + 24);
      if (v30 >= v29 >> 1)
      {
        sub_22886ACA0(v29 > 1, v30 + 1, 1);
        uint64_t v27 = v48;
      }
      v28 += 16;
      *(void *)(v27 + 16) = v30 + 1;
      ((void (*)(unint64_t, char *, uint64_t))v23)(v27+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(void *)(v15 + 72) * v30, v17, v14);
      --v26;
    }
    while (v26);
    uint64_t v31 = swift_bridgeObjectRelease();
    a3 = v42;
  }
  else
  {
    uint64_t v31 = swift_bridgeObjectRelease();
    uint64_t v27 = MEMORY[0x263F8EE78];
  }
  MEMORY[0x270FA5388](v31);
  char v32 = v44;
  v41[-2] = v44;
  sub_2288F307C((uint64_t (*)(char *))sub_2288F4D30, (uint64_t)&v41[-4], v27);
  uint64_t v34 = v33;
  unint64_t v35 = *(void *)(v33 + 16);
  uint64_t v36 = (uint64_t)v43;
  if (v35 <= 1)
  {
    if (v35)
    {
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v15 + 16))(a3, v33 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80)), v14);
      uint64_t v40 = 0;
    }
    else
    {
      uint64_t v40 = 1;
    }
    goto LABEL_19;
  }
  uint64_t v37 = v45;
  sub_228915420();
  sub_2289153F0();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v37, v47);
  uint64_t v38 = sub_2288F4D50(v34, v36);
  swift_bridgeObjectRelease();
  sub_2288110C0(v36, &qword_26826B2C0);
  unint64_t v39 = *(void *)(v38 + 16);
  if (v39 < 2)
  {
    if (v39)
    {
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v15 + 16))(a3, v38 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80)), v14);
      uint64_t v40 = 0;
    }
    else
    {
      uint64_t v40 = 1;
    }
LABEL_19:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(a3, v40, 1, v14);
    goto LABEL_20;
  }
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v15 + 16))(a3, v38 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80)), v14);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(a3, 0, 1, v14);
LABEL_20:
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v32, v14);
}

uint64_t sub_2288F2BDC(uint64_t a1, uint64_t a2)
{
  uint64_t v42 = a2;
  uint64_t v43 = sub_228915360();
  uint64_t v41 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  uint64_t v38 = (char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B2E0);
  uint64_t v4 = v3 - 8;
  MEMORY[0x270FA5388](v3);
  uint64_t v40 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B2E8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v39 = (uint64_t)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v38 - v9;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v38 - v12;
  uint64_t v14 = sub_228915410();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v38 - v19;
  sub_228915420();
  sub_2289153E0();
  uint64_t v21 = *(void (**)(char *, uint64_t))(v15 + 8);
  v21(v20, v14);
  sub_228915420();
  sub_2289153E0();
  uint64_t v22 = v17;
  uint64_t v24 = (uint64_t)v40;
  uint64_t v23 = v41;
  v21(v22, v14);
  uint64_t v25 = (uint64_t)v13;
  uint64_t v26 = (uint64_t)v10;
  uint64_t v27 = v43;
  uint64_t v28 = v24 + *(int *)(v4 + 56);
  sub_22883741C(v25, v24, &qword_26826B2E8);
  sub_22883741C((uint64_t)v10, v28, &qword_26826B2E8);
  uint64_t v29 = v23;
  unint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
  if (v30(v24, 1, v27) == 1)
  {
    sub_2288110C0(v26, &qword_26826B2E8);
    sub_2288110C0(v25, &qword_26826B2E8);
    int v31 = v30(v28, 1, v27);
    if (v31 == 1) {
      char v32 = &qword_26826B2E8;
    }
    else {
      char v32 = &qword_26826B2E0;
    }
    if (v31 == 1) {
      char v33 = -1;
    }
    else {
      char v33 = 0;
    }
  }
  else
  {
    uint64_t v34 = v39;
    sub_22883741C(v24, v39, &qword_26826B2E8);
    if (v30(v28, 1, v27) == 1)
    {
      sub_2288110C0(v26, &qword_26826B2E8);
      sub_2288110C0(v25, &qword_26826B2E8);
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v34, v27);
      char v33 = 0;
      char v32 = &qword_26826B2E0;
    }
    else
    {
      unint64_t v35 = v38;
      (*(void (**)(char *, uint64_t, uint64_t))(v23 + 32))(v38, v28, v27);
      sub_2288F5548(&qword_26826B2F0, MEMORY[0x263F07548]);
      char v33 = sub_228915C30();
      uint64_t v42 = v25;
      uint64_t v36 = *(void (**)(char *, uint64_t))(v29 + 8);
      v36(v35, v27);
      char v32 = &qword_26826B2E8;
      sub_2288110C0(v26, &qword_26826B2E8);
      sub_2288110C0(v42, &qword_26826B2E8);
      v36((char *)v34, v27);
    }
  }
  sub_2288110C0(v24, v32);
  return v33 & 1;
}

void sub_2288F307C(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v42 = a1;
  uint64_t v43 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268568);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_228915430();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v37 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v13 = MEMORY[0x270FA5388](v12);
  unint64_t v45 = (char *)&v30 - v14;
  uint64_t v46 = MEMORY[0x263F8EE78];
  uint64_t v38 = *(void *)(a3 + 16);
  if (v38)
  {
    unint64_t v15 = 0;
    uint64_t v39 = v10 + 48;
    unint64_t v44 = (void (**)(char *))(v10 + 32);
    uint64_t v40 = v10 + 56;
    uint64_t v41 = v10 + 16;
    unint64_t v32 = (v10 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    char v33 = (void (**)(char *, uint64_t))(v10 + 8);
    uint64_t v36 = v10;
    while (v15 < *(void *)(a3 + 16))
    {
      unint64_t v16 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      uint64_t v17 = *(void *)(v10 + 72);
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v10 + 16))(v8, a3 + v16 + v17 * v15, v9, v13);
      uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v10 + 56);
      ((void (*)(char *, void, uint64_t, uint64_t))v18)(v8, 0, 1, v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
        goto LABEL_17;
      }
      unint64_t v35 = v18;
      uint64_t v19 = a3;
      uint64_t v20 = v8;
      uint64_t v21 = v45;
      uint64_t v22 = *v44;
      uint64_t v23 = v20;
      (*v44)(v45);
      char v24 = v42(v21);
      if (v4)
      {
        (*v33)(v45, v9);
        swift_bridgeObjectRelease();
        swift_release();
        return;
      }
      if (v24)
      {
        ((void (*)(char *, char *, uint64_t))v22)(v37, v45, v9);
        uint64_t v25 = v46;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v34 = 0;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_22886ACA0(0, *(void *)(v25 + 16) + 1, 1);
          uint64_t v25 = v46;
        }
        unint64_t v28 = *(void *)(v25 + 16);
        unint64_t v27 = *(void *)(v25 + 24);
        unint64_t v29 = v28 + 1;
        if (v28 >= v27 >> 1)
        {
          unint64_t v31 = v28 + 1;
          sub_22886ACA0(v27 > 1, v28 + 1, 1);
          unint64_t v29 = v31;
          uint64_t v25 = v46;
        }
        *(void *)(v25 + 16) = v29;
        ((void (*)(unint64_t, char *, uint64_t))v22)(v25 + v16 + v28 * v17, v37, v9);
        uint64_t v46 = v25;
        uint64_t v4 = v34;
      }
      else
      {
        (*v33)(v45, v9);
      }
      a3 = v19;
      ++v15;
      uint64_t v8 = v23;
      uint64_t v10 = v36;
      if (v38 == v15)
      {
        v35(v23, 1, 1, v9, v13);
        goto LABEL_17;
      }
    }
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v10 + 56))(v8, 1, 1, v9, v13);
LABEL_17:
    swift_bridgeObjectRelease();
    sub_2288110C0((uint64_t)v8, &qword_268268568);
  }
}

uint64_t static LocaleHelper.resolveCardPreferredLocale(from:preferredRegion:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v107 = a3;
  uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v101);
  uint64_t v8 = (char *)&v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v95 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268568);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v111 = (uint64_t)&v95 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v112 = (char *)&v95 - v15;
  MEMORY[0x270FA5388](v16);
  uint64_t v120 = (char *)&v95 - v17;
  MEMORY[0x270FA5388](v18);
  uint64_t v114 = (uint64_t)&v95 - v19;
  MEMORY[0x270FA5388](v20);
  uint64_t v117 = (char *)&v95 - v21;
  uint64_t v22 = sub_228915430();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v97 = (char *)&v95 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v99 = (char *)&v95 - v26;
  MEMORY[0x270FA5388](v27);
  unint64_t v29 = (char *)&v95 - v28;
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_228915D20();
  uint64_t v96 = v8;
  if (v30)
  {
    unint64_t v31 = (uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))v30;
    unint64_t v32 = a4;
    char v33 = sub_2288F464C(v30, 0);
    swift_bridgeObjectRetain();
    uint64_t v34 = (uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))sub_2288F4590(v125, v33 + 4, (uint64_t)v31, a1, a2);
    swift_bridgeObjectRelease();
    if (v34 != v31)
    {
LABEL_58:
      __break(1u);
LABEL_59:
      swift_once();
LABEL_49:
      uint64_t v87 = __swift_project_value_buffer(v101, (uint64_t)qword_268283DB0);
      uint64_t v88 = (uint64_t)v96;
      sub_22883741C(v87, (uint64_t)v96, (uint64_t *)&unk_2682684D0);
      uint64_t v89 = sub_2289155C0();
      uint64_t v90 = *(void *)(v89 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v90 + 48))(v88, 1, v89) == 1)
      {
        sub_2288110C0(v88, (uint64_t *)&unk_2682684D0);
      }
      else
      {
        unint64_t v91 = sub_2289155A0();
        os_log_type_t v92 = sub_228916050();
        if (os_log_type_enabled(v91, v92))
        {
          uint64_t v93 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v93 = 0;
          _os_log_impl(&dword_228806000, v91, v92, "error parsing preferred language tag, array out of bounds", v93, 2u);
          uint64_t v94 = v93;
          uint64_t v88 = (uint64_t)v96;
          MEMORY[0x22A6A1090](v94, -1, -1);
        }

        (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v88, v89);
      }
      return (*v31)(v98, 1, 1, v22);
    }
    swift_bridgeObjectRelease();
    unint64_t v35 = v33;
    a4 = v32;
    unint64_t v36 = v35[2];
    if (v36)
    {
LABEL_4:
      uint64_t v98 = a4;
      unint64_t v37 = 0;
      uint64_t v109 = 0;
      uint64_t v124 = (void (**)(char *, char *, uint64_t))(v23 + 32);
      uint64_t v121 = v23 + 16;
      unint64_t v31 = (uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
      uint64_t v116 = (unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
      uint64_t v38 = v117;
      uint64_t v118 = v29;
      uint64_t v119 = v22;
      uint64_t v100 = v23;
      unint64_t v122 = v23 + 56;
      uint64_t v106 = v11;
      uint64_t v110 = v35;
      unint64_t v103 = v36;
      uint64_t v102 = v35 + 4;
      while (1)
      {
        unint64_t v40 = v37 | 1;
        if ((v37 | 1) >= v36) {
          break;
        }
        if (v37 >= v35[2])
        {
          __break(1u);
LABEL_57:
          __break(1u);
          goto LABEL_58;
        }
        unint64_t v108 = v37;
        swift_bridgeObjectRetain();
        uint64_t v41 = sub_228915BE0();
        unint64_t v31 = v42;
        swift_bridgeObjectRelease();
        v125[0] = v41;
        v125[1] = v31;
        if (v40 >= v110[2]) {
          goto LABEL_57;
        }
        swift_bridgeObjectRetain();
        sub_228915BE0();
        swift_bridgeObjectRelease();
        sub_228915D60();
        uint64_t v43 = swift_bridgeObjectRelease();
        uint64_t v44 = MEMORY[0x22A69F3E0](v43);
        uint64_t v45 = v109;
        uint64_t v46 = sub_2288F5358(v44);
        uint64_t v109 = v45;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        int64_t v47 = *(void *)(v46 + 16);
        if (v47)
        {
          v125[0] = MEMORY[0x263F8EE78];
          sub_22886ACA0(0, v47, 0);
          uint64_t v48 = v125[0];
          uint64_t v49 = v46 + 40;
          do
          {
            swift_bridgeObjectRetain();
            sub_228915340();
            v125[0] = v48;
            unint64_t v51 = *(void *)(v48 + 16);
            unint64_t v50 = *(void *)(v48 + 24);
            if (v51 >= v50 >> 1)
            {
              sub_22886ACA0(v50 > 1, v51 + 1, 1);
              uint64_t v48 = v125[0];
            }
            v49 += 16;
            *(void *)(v48 + 16) = v51 + 1;
            (*(void (**)(unint64_t, char *, uint64_t))(v23 + 32))(v48+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(void *)(v23 + 72) * v51, v29, v22);
            --v47;
          }
          while (v47);
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v48 = MEMORY[0x263F8EE78];
        }
        uint64_t v52 = sub_2288F4D50(v48, v107);
        id v53 = _s15ProximityReader12LocaleHelperC12findUIBundleSo8NSBundleCSgyFZ_0();
        unint64_t v31 = (uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))v122;
        uint64_t v54 = (uint64_t)v106;
        uint64_t v55 = v110;
        uint64_t v56 = v116;
        uint64_t v123 = v53;
        if (v53)
        {
          uint64_t v57 = v52;
          uint64_t v58 = *(void *)(v52 + 16);
          unint64_t v59 = v122 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
          uint64_t v105 = v57;
          if (v58)
          {
            unint64_t v104 = v122 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
            unint64_t v60 = v57 + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80));
            uint64_t v113 = *(void *)(v23 + 72);
            uint64_t v115 = *(void (**)(char *, unint64_t, uint64_t))(v23 + 16);
            while (1)
            {
              v115(v38, v60, v22);
              uint64_t v61 = *v31;
              (*v31)(v38, 0, 1, v22);
              uint64_t v62 = *v56;
              if ((*v56)(v38, 1, v22) == 1)
              {
                uint64_t v69 = v112;
                uint64_t v23 = v100;
                goto LABEL_35;
              }
              uint64_t v63 = *v124;
              uint64_t v64 = (uint64_t)v120;
              (*v124)(v120, v38, v22);
              v61((char *)v64, 0, 1, v22);
              uint64_t v65 = v114;
              static LocaleHelper.findLocaleInBundle(locale:bundle:)(v64, v123, v114);
              sub_2288110C0(v64, &qword_268268568);
              if (v62((char *)v65, 1, v22) != 1) {
                break;
              }
              sub_2288110C0(v65, &qword_268268568);
              v60 += v113;
              --v58;
              unint64_t v31 = (uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))v122;
              uint64_t v38 = v117;
              unint64_t v29 = v118;
              uint64_t v22 = v119;
              if (!v58)
              {
                uint64_t v23 = v100;
                unint64_t v59 = v104;
                goto LABEL_29;
              }
            }
            swift_bridgeObjectRelease();
            swift_release();

            swift_bridgeObjectRelease();
            unint64_t v83 = v99;
            uint64_t v84 = v119;
            v63(v99, (char *)v65, v119);
            long long v85 = v98;
            v63(v98, v83, v84);
            return v61(v85, 0, 1, v84);
          }
          uint64_t v61 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))v122;
LABEL_29:
          unint64_t v104 = v59;
          v61(v38, 1, 1, v22);
          uint64_t v69 = v112;
LABEL_35:
          swift_bridgeObjectRelease();
          uint64_t v74 = *(void *)(v48 + 16);
          if (v74)
          {
            unint64_t v75 = v48 + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80));
            uint64_t v113 = *(void *)(v23 + 72);
            uint64_t v115 = *(void (**)(char *, unint64_t, uint64_t))(v23 + 16);
            while (1)
            {
              v115(v69, v75, v22);
              v61(v69, 0, 1, v22);
              uint64_t v76 = v31;
              uint64_t v77 = *v116;
              if ((*v116)(v69, 1, v22) == 1)
              {

                swift_bridgeObjectRelease();
                unint64_t v31 = v76;
                uint64_t v38 = v117;
                unint64_t v35 = v110;
                unint64_t v36 = v103;
                unint64_t v39 = v108;
                uint64_t v23 = v100;
                goto LABEL_6;
              }
              uint64_t v78 = v69;
              uint64_t v79 = *v124;
              uint64_t v80 = (uint64_t)v120;
              (*v124)(v120, v78, v22);
              v61((char *)v80, 0, 1, v22);
              uint64_t v81 = v111;
              static LocaleHelper.findLocaleInBundle(locale:bundle:)(v80, v123, v111);
              sub_2288110C0(v80, &qword_268268568);
              if (v77((char *)v81, 1, v22) != 1) {
                break;
              }
              sub_2288110C0(v81, &qword_268268568);
              uint64_t v69 = v112;
              v75 += v113;
              --v74;
              unint64_t v31 = (uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))v122;
              unint64_t v29 = v118;
              uint64_t v22 = v119;
              if (!v74)
              {
                uint64_t v38 = v117;
                uint64_t v23 = v100;
                goto LABEL_5;
              }
            }
            swift_release();

            swift_bridgeObjectRelease();
            uint64_t v86 = v97;
            uint64_t v84 = v119;
            v79(v97, (char *)v81, v119);
            long long v85 = v98;
            v79(v98, v86, v84);
            return v61(v85, 0, 1, v84);
          }
LABEL_5:
          v61(v69, 1, 1, v22);

          swift_bridgeObjectRelease();
          unint64_t v35 = v110;
          unint64_t v36 = v103;
          unint64_t v39 = v108;
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (qword_268267F18 != -1) {
            swift_once();
          }
          uint64_t v66 = __swift_project_value_buffer(v101, (uint64_t)qword_268283DB0);
          sub_22883741C(v66, v54, (uint64_t *)&unk_2682684D0);
          uint64_t v67 = sub_2289155C0();
          uint64_t v68 = *(void *)(v67 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v68 + 48))(v54, 1, v67) == 1)
          {
            sub_2288110C0(v54, (uint64_t *)&unk_2682684D0);
          }
          else
          {
            uint64_t v70 = sub_2289155A0();
            os_log_type_t v71 = sub_228916050();
            if (os_log_type_enabled(v70, v71))
            {
              uint64_t v72 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v72 = 0;
              _os_log_impl(&dword_228806000, v70, v71, "UI Bundle not found, unable to check Locales", v72, 2u);
              uint64_t v73 = v72;
              uint64_t v55 = v110;
              MEMORY[0x22A6A1090](v73, -1, -1);
            }

            (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v54, v67);
            unint64_t v31 = (uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))v122;
          }
          unint64_t v36 = v103;
          unint64_t v39 = v108;
          unint64_t v35 = v55;
        }
LABEL_6:
        unint64_t v37 = v39 + 2;
        if (v37 >= v36)
        {
          swift_release();
          a4 = v98;
          return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(a4, 1, 1, v22);
        }
      }
      swift_release();
      if (qword_268267F18 != -1) {
        goto LABEL_59;
      }
      goto LABEL_49;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v35 = (void *)MEMORY[0x263F8EE78];
    unint64_t v36 = *(void *)(MEMORY[0x263F8EE78] + 16);
    if (v36) {
      goto LABEL_4;
    }
  }
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(a4, 1, 1, v22);
}

uint64_t sub_2288F4184(uint64_t a1, uint64_t a2)
{
  uint64_t v30 = a2;
  uint64_t v2 = sub_2289153B0();
  uint64_t v29 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v27 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B2D0);
  uint64_t v5 = v4 - 8;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B2C0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v28 = (uint64_t)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v27 - v11;
  uint64_t v13 = sub_228915410();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_228915420();
  sub_2289153F0();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v17 = v29;
  uint64_t v18 = (uint64_t)&v7[*(int *)(v5 + 56)];
  sub_22883741C((uint64_t)v12, (uint64_t)v7, &qword_26826B2C0);
  sub_22883741C(v30, v18, &qword_26826B2C0);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
  if (v19((uint64_t)v7, 1, v2) == 1)
  {
    sub_2288110C0((uint64_t)v12, &qword_26826B2C0);
    int v20 = v19(v18, 1, v2);
    if (v20 == 1) {
      uint64_t v21 = &qword_26826B2C0;
    }
    else {
      uint64_t v21 = &qword_26826B2D0;
    }
    if (v20 == 1) {
      char v22 = -1;
    }
    else {
      char v22 = 0;
    }
  }
  else
  {
    uint64_t v23 = v28;
    sub_22883741C((uint64_t)v7, v28, &qword_26826B2C0);
    if (v19(v18, 1, v2) == 1)
    {
      sub_2288110C0((uint64_t)v12, &qword_26826B2C0);
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v23, v2);
      char v22 = 0;
      uint64_t v21 = &qword_26826B2D0;
    }
    else
    {
      uint64_t v24 = v27;
      (*(void (**)(char *, uint64_t, uint64_t))(v17 + 32))(v27, v18, v2);
      sub_2288F5548(&qword_26826B2D8, MEMORY[0x263F07598]);
      char v22 = sub_228915C30();
      uint64_t v25 = *(void (**)(char *, uint64_t))(v17 + 8);
      v25(v24, v2);
      uint64_t v21 = &qword_26826B2C0;
      sub_2288110C0((uint64_t)v12, &qword_26826B2C0);
      v25((char *)v23, v2);
    }
  }
  sub_2288110C0((uint64_t)v7, v21);
  return v22 & 1;
}

uint64_t LocaleHelper.deinit()
{
  return v0;
}

uint64_t LocaleHelper.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void *sub_2288F4590(void *result, uint64_t *a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v5 = result;
  uint64_t v6 = HIBYTE(a5) & 0xF;
  uint64_t v12 = a4;
  unint64_t v13 = a5;
  if ((a5 & 0x2000000000000000) == 0) {
    uint64_t v6 = a4 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v14 = v6;
  if (!a2)
  {
    uint64_t v7 = 0;
LABEL_14:
    *uint64_t v5 = a4;
    v5[1] = a5;
    void v5[2] = 0;
    v5[3] = v6;
    return (void *)v7;
  }
  uint64_t v7 = a3;
  if (!a3) {
    goto LABEL_14;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = a2;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = sub_228915D80();
      if (!v11) {
        break;
      }
      ++v9;
      uint64_t *v8 = v10;
      v8[1] = v11;
      v8 += 2;
      if (v7 == v9)
      {
        a4 = v12;
        a5 = v13;
        goto LABEL_13;
      }
    }
    a4 = v12;
    a5 = v13;
    uint64_t v7 = v9;
LABEL_13:
    uint64_t v6 = v14;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

void *sub_2288F464C(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26826B2C8);
  uint64_t v4 = (void *)swift_allocObject();
  int64_t v5 = _swift_stdlib_malloc_size(v4);
  uint64_t v6 = v5 - 32;
  if (v5 < 32) {
    uint64_t v6 = v5 - 17;
  }
  v4[2] = a1;
  v4[3] = 2 * (v6 >> 4);
  return v4;
}

uint64_t _s15ProximityReader12LocaleHelperC6encode8languageSSSg10Foundation0C0V8LanguageVSg_tFZ_0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B2C0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B2F8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B2E8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v5 = sub_228915430();
  uint64_t v17 = *(void *)(v5 - 8);
  uint64_t v18 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682699B0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_228915410();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22883741C(a1, (uint64_t)v10, (uint64_t *)&unk_2682699B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_2288110C0((uint64_t)v10, (uint64_t *)&unk_2682699B0);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    sub_2289153E0();
    sub_228915400();
    sub_2289153F0();
    sub_228915370();
    uint64_t v15 = sub_228915350();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v18);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  return v15;
}

id _s15ProximityReader12LocaleHelperC12findUIBundleSo8NSBundleCSgyFZ_0()
{
  uint64_t v0 = sub_2289150E0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_2289151B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v22 - v9;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v22 - v12;
  uint64_t v14 = (void *)sub_228915C40();
  id v15 = objc_msgSend(self, sel_bundleWithIdentifier_, v14);

  if (!v15) {
    return 0;
  }
  id v16 = objc_msgSend(v15, sel_bundleURL);
  sub_228915170();

  sub_228915160();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v5 + 8);
  v17(v7, v4);
  sub_228915160();
  v17(v10, v4);
  v22[0] = 0xD00000000000002FLL;
  v22[1] = 0x800000022892CE60;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F06E50], v0);
  sub_2288566E4();
  sub_2289151A0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_bridgeObjectRelease();
  id v18 = objc_allocWithZone(MEMORY[0x263F086E0]);
  uint64_t v19 = (void *)sub_228915130();
  id v20 = objc_msgSend(v18, sel_initWithURL_, v19);

  v17(v10, v4);
  v17(v13, v4);
  return v20;
}

uint64_t sub_2288F4D30(uint64_t a1)
{
  return sub_2288F2BDC(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_2288F4D50(uint64_t a1, uint64_t a2)
{
  uint64_t v65 = sub_228915410();
  uint64_t v68 = *(void *)(v65 - 8);
  MEMORY[0x270FA5388](v65);
  unint64_t v59 = (char *)v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268568);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_228915430();
  uint64_t v67 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v48 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B2C0);
  MEMORY[0x270FA5388](v14 - 8);
  id v16 = (char *)v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)v48 - v18;
  uint64_t v70 = a2;
  swift_bridgeObjectRetain();
  sub_2288F307C((uint64_t (*)(char *))sub_2288F5528, (uint64_t)v69, a1);
  uint64_t v21 = v20;
  uint64_t v22 = *(void *)(v20 + 16);
  sub_22883741C(a2, (uint64_t)v19, &qword_26826B2C0);
  if (v22)
  {
    sub_2288110C0((uint64_t)v19, &qword_26826B2C0);
  }
  else
  {
    uint64_t v63 = v16;
    uint64_t v66 = v7;
    uint64_t v23 = v65;
    unint64_t v51 = v13;
    uint64_t v64 = v10;
    uint64_t v24 = v67;
    uint64_t v25 = sub_2289153B0();
    uint64_t v26 = *(void *)(v25 - 8);
    uint64_t v61 = *(uint64_t (**)(char *, uint64_t))(v26 + 48);
    uint64_t v62 = v25;
    uint64_t v60 = v26 + 48;
    int v27 = v61(v19, 1);
    sub_2288110C0((uint64_t)v19, &qword_26826B2C0);
    if (v27 != 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v71 = MEMORY[0x263F8EE78];
      uint64_t v28 = *(void *)(a1 + 16);
      uint64_t v29 = swift_bridgeObjectRetain();
      v48[1] = v29;
      if (v28)
      {
        uint64_t v30 = v24 + 16;
        uint64_t v58 = *(void (**)(char *, unint64_t, uint64_t))(v24 + 16);
        unint64_t v50 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
        unint64_t v31 = v29 + v50;
        unint64_t v32 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56);
        uint64_t v33 = *(void *)(v24 + 72);
        uint64_t v56 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 32);
        id v53 = (void (**)(char *, uint64_t))(v68 + 8);
        uint64_t v54 = v30 + 16;
        uint64_t v49 = (void (**)(char *, uint64_t))(v30 - 8);
        uint64_t v57 = v32;
        v48[0] = (unint64_t)v32 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
        uint64_t v34 = v59;
        unint64_t v35 = v51;
        uint64_t v36 = (uint64_t)v66;
        uint64_t v37 = v8;
        uint64_t v67 = v30;
        uint64_t v55 = v33;
        uint64_t v38 = (void (**)(char *, uint64_t, uint64_t))(v30 + 16);
        v58(v66, v29 + v50, v37);
        while (1)
        {
          uint64_t v52 = *v57;
          v52(v36, 0, 1, v37);
          if ((*v56)(v36, 1, v37) == 1) {
            break;
          }
          uint64_t v68 = v28;
          unint64_t v40 = *v38;
          (*v38)(v35, v36, v37);
          sub_228915420();
          uint64_t v41 = v37;
          uint64_t v42 = (uint64_t)v63;
          sub_2289153F0();
          (*v53)(v34, v23);
          int v43 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v61)(v42, 1, v62);
          sub_2288110C0(v42, &qword_26826B2C0);
          if (v43 == 1)
          {
            v40(v64, (uint64_t)v35, v41);
            uint64_t v44 = v71;
            uint64_t v37 = v41;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_22886ACA0(0, *(void *)(v44 + 16) + 1, 1);
              uint64_t v44 = v71;
            }
            uint64_t v36 = (uint64_t)v66;
            uint64_t v39 = v55;
            unint64_t v46 = *(void *)(v44 + 16);
            unint64_t v45 = *(void *)(v44 + 24);
            if (v46 >= v45 >> 1)
            {
              sub_22886ACA0(v45 > 1, v46 + 1, 1);
              uint64_t v44 = v71;
            }
            *(void *)(v44 + 16) = v46 + 1;
            v40((char *)(v44 + v50 + v46 * v39), (uint64_t)v64, v37);
            uint64_t v71 = v44;
            uint64_t v23 = v65;
            uint64_t v34 = v59;
            unint64_t v35 = v51;
          }
          else
          {
            (*v49)(v35, v41);
            uint64_t v36 = (uint64_t)v66;
            uint64_t v37 = v41;
            uint64_t v39 = v55;
          }
          v31 += v39;
          uint64_t v28 = v68 - 1;
          if (v68 == 1)
          {
            v52(v36, 1, 1, v37);
            break;
          }
          v58((char *)v36, v31, v37);
        }
      }
      else
      {
        uint64_t v36 = (uint64_t)v66;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v66, 1, 1, v8);
      }
      swift_bridgeObjectRelease();
      sub_2288110C0(v36, &qword_268268568);
      return v71;
    }
  }
  return v21;
}

uint64_t sub_2288F5358(uint64_t result)
{
  unint64_t v1 = *(void *)(result + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  unint64_t v2 = 0;
  uint64_t v3 = result + 40;
  uint64_t v4 = -(uint64_t)v1;
  uint64_t v5 = MEMORY[0x263F8EE78];
  uint64_t v14 = result + 40;
  unint64_t v15 = *(void *)(result + 16);
  do
  {
    if (v2 <= v1) {
      unint64_t v6 = v1;
    }
    else {
      unint64_t v6 = v2;
    }
    uint64_t v7 = -(uint64_t)v6;
    for (uint64_t i = (uint64_t *)(v3 + 16 * v2++); ; i += 2)
    {
      if (v7 + v2 == 1)
      {
        __break(1u);
        return result;
      }
      uint64_t v10 = *(i - 1);
      uint64_t v9 = *i;
      sub_2288566E4();
      swift_bridgeObjectRetain();
      if (sub_228916230()) {
        break;
      }
      unint64_t result = swift_bridgeObjectRelease();
      ++v2;
      if (v4 + v2 == 1) {
        return v5;
      }
    }
    unint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0) {
      unint64_t result = sub_22886AC24(0, *(void *)(v5 + 16) + 1, 1);
    }
    unint64_t v12 = *(void *)(v5 + 16);
    unint64_t v11 = *(void *)(v5 + 24);
    if (v12 >= v11 >> 1) {
      unint64_t result = sub_22886AC24(v11 > 1, v12 + 1, 1);
    }
    *(void *)(v5 + 16) = v12 + 1;
    uint64_t v13 = v5 + 16 * v12;
    *(void *)(v13 + 32) = v10;
    *(void *)(v13 + 40) = v9;
    uint64_t v3 = v14;
    unint64_t v1 = v15;
  }
  while (v4 + v2);
  return v5;
}

uint64_t type metadata accessor for LocaleHelper()
{
  return self;
}

uint64_t method lookup function for LocaleHelper(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for LocaleHelper);
}

uint64_t sub_2288F5528(uint64_t a1)
{
  return sub_2288F4184(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_2288F5548(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2288F5594(unint64_t a1, unint64_t a2)
{
  uint64_t v44 = *MEMORY[0x263EF8340];
  *(void *)&long long v40 = a1;
  *((void *)&v40 + 1) = a2;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26826B310);
  if (swift_dynamicCast())
  {
    sub_2288FDB90(v38, (uint64_t)&v41);
    __swift_project_boxed_opaque_existential_1(&v41, v43);
    sub_228914FC0();
    swift_bridgeObjectRelease();
    v38[0] = v40;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v41);
    return *(void *)&v38[0];
  }
  uint64_t v39 = 0;
  memset(v38, 0, sizeof(v38));
  sub_2288110C0((uint64_t)v38, &qword_26826B318);
  unint64_t v2 = a1;
  unint64_t v3 = a2;
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) != 0)
    {
      uint64_t v41 = a1;
      uint64_t v42 = a2 & 0xFFFFFFFFFFFFFFLL;
      unint64_t v6 = (char *)&v41 + (HIBYTE(a2) & 0xF);
      uint64_t v7 = &v41;
    }
    else
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        uint64_t v4 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v4 = sub_228916370();
      }
      if (v4) {
        unint64_t v6 = (unsigned char *)(v4 + v5);
      }
      else {
        unint64_t v6 = 0;
      }
      uint64_t v7 = (uint64_t *)v4;
    }
    uint64_t v8 = sub_2288FCFD0(v7, v6);
    unint64_t v10 = v9;
    if (v9 >> 60 != 15)
    {
      swift_bridgeObjectRelease();
      *(void *)&v38[0] = v8;
      *((void *)&v38[0] + 1) = v10;
      return *(void *)&v38[0];
    }
    unint64_t v2 = a1;
    unint64_t v3 = a2;
    if ((a2 & 0x1000000000000000) == 0) {
      goto LABEL_14;
    }
LABEL_70:
    uint64_t v11 = sub_228915D90();
    goto LABEL_17;
  }
LABEL_69:
  uint64_t v8 = 0;
  unint64_t v10 = 0xF000000000000000;
  if ((v3 & 0x1000000000000000) != 0) {
    goto LABEL_70;
  }
LABEL_14:
  if ((v3 & 0x2000000000000000) != 0) {
    uint64_t v11 = HIBYTE(v3) & 0xF;
  }
  else {
    uint64_t v11 = v2 & 0xFFFFFFFFFFFFLL;
  }
LABEL_17:
  *(void *)&v38[0] = sub_2288FD034(v11);
  *((void *)&v38[0] + 1) = v12;
  MEMORY[0x270FA5388](*(void *)&v38[0]);
  unint64_t v13 = (unint64_t)sub_2288FBCB0((void *(*)(uint64_t *__return_ptr, char *, char *))sub_2288FDB24);
  uint64_t v16 = *((void *)&v38[0] + 1) >> 62;
  uint64_t v17 = v13;
  uint64_t v18 = v3;
  unint64_t v19 = v14;
  switch(*((void *)&v38[0] + 1) >> 62)
  {
    case 1:
      LODWORD(v20) = DWORD1(v38[0]) - LODWORD(v38[0]);
      if (__OFSUB__(DWORD1(v38[0]), v38[0])) {
        goto LABEL_73;
      }
      uint64_t v20 = (int)v20;
LABEL_23:
      if (v15 != v20)
      {
        if (v16)
        {
          if (v16 == 1) {
            uint64_t v24 = *(uint64_t *)&v38[0] >> 32;
          }
          else {
            uint64_t v24 = *(void *)(*(void *)&v38[0] + 24);
          }
        }
        else
        {
          uint64_t v24 = BYTE14(v38[0]);
        }
LABEL_61:
        if (v24 < v15)
        {
          __break(1u);
LABEL_73:
          __break(1u);
LABEL_74:
          __break(1u);
        }
        sub_228915210();
LABEL_63:
        swift_bridgeObjectRelease();
        goto LABEL_64;
      }
LABEL_29:
      if ((v3 & 0x2000000000000000) != 0) {
        unint64_t v25 = HIBYTE(v3) & 0xF;
      }
      else {
        unint64_t v25 = v13 & 0xFFFFFFFFFFFFLL;
      }
      *(void *)((char *)&v40 + 7) = 0;
      *(void *)&long long v40 = 0;
      if (4 * v25 == v14 >> 14) {
        goto LABEL_58;
      }
      LOBYTE(v26) = 0;
      uint64_t v27 = (v13 >> 59) & 1;
      if ((v3 & 0x1000000000000000) == 0) {
        LOBYTE(v27) = 1;
      }
      uint64_t v28 = 4 << v27;
      uint64_t v35 = v3 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v33 = (uint64_t)v8;
      uint64_t v34 = (v3 & 0xFFFFFFFFFFFFFFFLL) + 32;
      break;
    case 2:
      uint64_t v22 = *(void *)(*(void *)&v38[0] + 16);
      uint64_t v21 = *(void *)(*(void *)&v38[0] + 24);
      BOOL v23 = __OFSUB__(v21, v22);
      uint64_t v20 = v21 - v22;
      if (!v23) {
        goto LABEL_23;
      }
      goto LABEL_74;
    case 3:
      if (!v15) {
        goto LABEL_29;
      }
      uint64_t v24 = 0;
      goto LABEL_61;
    default:
      uint64_t v20 = BYTE14(v38[0]);
      goto LABEL_23;
  }
  do
  {
    unint64_t v29 = v19 & 0xC;
    unint64_t v2 = v19;
    if (v29 == v28) {
      unint64_t v2 = sub_2288FB3D8(v19, v17, v18);
    }
    unint64_t v30 = v2 >> 16;
    if (v2 >> 16 >= v25)
    {
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
    if ((v18 & 0x1000000000000000) != 0)
    {
      unint64_t v2 = sub_228915DD0();
      char v31 = v2;
      if (v29 != v28) {
        goto LABEL_47;
      }
    }
    else if ((v18 & 0x2000000000000000) != 0)
    {
      uint64_t v41 = v17;
      uint64_t v42 = v35;
      char v31 = *((unsigned char *)&v41 + v30);
      if (v29 != v28) {
        goto LABEL_47;
      }
    }
    else
    {
      unint64_t v2 = v34;
      if ((v17 & 0x1000000000000000) == 0) {
        unint64_t v2 = sub_228916370();
      }
      char v31 = *(unsigned char *)(v2 + v30);
      if (v29 != v28)
      {
LABEL_47:
        if ((v18 & 0x1000000000000000) == 0) {
          goto LABEL_48;
        }
        goto LABEL_51;
      }
    }
    unint64_t v2 = sub_2288FB3D8(v19, v17, v18);
    unint64_t v19 = v2;
    if ((v18 & 0x1000000000000000) == 0)
    {
LABEL_48:
      unint64_t v19 = (v19 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_53;
    }
LABEL_51:
    if (v25 <= v19 >> 16) {
      goto LABEL_68;
    }
    unint64_t v2 = sub_228915DA0();
    unint64_t v19 = v2;
LABEL_53:
    *((unsigned char *)&v40 + v26) = v31;
    unsigned int v26 = v26 + 1;
    if ((v26 >> 8)) {
      goto LABEL_67;
    }
    BYTE14(v40) = v26;
    if (v26 == 14)
    {
      uint64_t v41 = v40;
      LODWORD(v42) = DWORD2(v40);
      WORD2(v42) = WORD6(v40);
      sub_228915220();
      LOBYTE(v26) = 0;
      BYTE14(v40) = 0;
    }
  }
  while (4 * v25 != v19 >> 14);
  uint64_t v8 = (unsigned char *)v33;
  if ((_BYTE)v26)
  {
    uint64_t v41 = v40;
    LODWORD(v42) = DWORD2(v40);
    WORD2(v42) = WORD6(v40);
    sub_228915220();
    sub_22880BB6C(v33, v10);
    goto LABEL_63;
  }
LABEL_58:
  swift_bridgeObjectRelease();
  sub_22880BB6C((uint64_t)v8, v10);
LABEL_64:
  swift_bridgeObjectRelease();
  return *(void *)&v38[0];
}

uint64_t static Utilities.analyticsCacheDirectoryPath()()
{
  return sub_2288F6FF4();
}

uint64_t sub_2288F5AE0(uint64_t a1)
{
  uint64_t v2 = sub_228915B30();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2288FDADC(&qword_26826B308, MEMORY[0x263F045C0]);
  uint64_t v6 = sub_228915E30();
  uint64_t v37 = MEMORY[0x263F8EE78];
  sub_22886AC24(0, v6 & ~(v6 >> 63), 0);
  uint64_t v7 = v37;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  uint64_t result = sub_228915E20();
  if ((v6 & 0x8000000000000000) == 0)
  {
    unint64_t v9 = v36;
    if (v6)
    {
      uint64_t v10 = *(void *)(v35 + 16);
      uint64_t v33 = v35;
      *(void *)&long long v34 = v10;
      uint64_t v32 = v35 + 32;
      long long v31 = xmmword_22891AC40;
      unint64_t v11 = v36;
      while ((void)v34 != v11)
      {
        if ((v9 & 0x8000000000000000) != 0) {
          goto LABEL_21;
        }
        if (v11 >= *(void *)(v33 + 16)) {
          goto LABEL_22;
        }
        char v12 = *(unsigned char *)(v32 + v11);
        __swift_instantiateConcreteTypeFromMangledName(&qword_268268DB0);
        uint64_t v13 = swift_allocObject();
        *(_OWORD *)(v13 + 16) = v31;
        *(void *)(v13 + 56) = MEMORY[0x263F8E778];
        *(void *)(v13 + 64) = MEMORY[0x263F8E7C0];
        *(unsigned char *)(v13 + 32) = v12;
        uint64_t result = sub_228915C90();
        uint64_t v14 = result;
        uint64_t v16 = v15;
        uint64_t v37 = v7;
        unint64_t v18 = *(void *)(v7 + 16);
        unint64_t v17 = *(void *)(v7 + 24);
        if (v18 >= v17 >> 1)
        {
          uint64_t result = sub_22886AC24(v17 > 1, v18 + 1, 1);
          uint64_t v7 = v37;
        }
        *(void *)(v7 + 16) = v18 + 1;
        uint64_t v19 = v7 + 16 * v18;
        *(void *)(v19 + 32) = v14;
        *(void *)(v19 + 40) = v16;
        ++v11;
        if (!--v6)
        {
          unint64_t v36 = v11;
          goto LABEL_12;
        }
      }
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
    }
    else
    {
      unint64_t v11 = v36;
LABEL_12:
      uint64_t v20 = v35;
      unint64_t v21 = *(void *)(v35 + 16);
      if (v11 == v21)
      {
LABEL_13:
        swift_bridgeObjectRelease();
        return v7;
      }
      long long v34 = xmmword_22891AC40;
      while (v11 < v21)
      {
        char v22 = *(unsigned char *)(v20 + 32 + v11);
        unint64_t v36 = v11 + 1;
        __swift_instantiateConcreteTypeFromMangledName(&qword_268268DB0);
        uint64_t v23 = swift_allocObject();
        *(_OWORD *)(v23 + 16) = v34;
        *(void *)(v23 + 56) = MEMORY[0x263F8E778];
        *(void *)(v23 + 64) = MEMORY[0x263F8E7C0];
        *(unsigned char *)(v23 + 32) = v22;
        uint64_t result = sub_228915C90();
        uint64_t v24 = result;
        uint64_t v26 = v25;
        uint64_t v37 = v7;
        unint64_t v28 = *(void *)(v7 + 16);
        unint64_t v27 = *(void *)(v7 + 24);
        if (v28 >= v27 >> 1)
        {
          uint64_t result = sub_22886AC24(v27 > 1, v28 + 1, 1);
          uint64_t v7 = v37;
        }
        *(void *)(v7 + 16) = v28 + 1;
        uint64_t v29 = v7 + 16 * v28;
        *(void *)(v29 + 32) = v24;
        *(void *)(v29 + 40) = v26;
        unint64_t v11 = v36;
        unint64_t v21 = *(void *)(v20 + 16);
        if (v36 == v21) {
          goto LABEL_13;
        }
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_2288F5E70()
{
  id v0 = objc_msgSend(self, sel_sharedInstance);
  id v1 = objc_msgSend(v0, sel_callServicesClientCapabilities);
  objc_msgSend(v1, sel_setWantsToScreenCalls_, 1);

  id v2 = objc_msgSend(v0, sel_callServicesClientCapabilities);
  objc_msgSend(v2, sel_save);

  qword_26826B300 = (uint64_t)v0;
}

uint64_t static Utilities.hasCurrentCalls.getter()
{
  sub_228811060(0, (unint64_t *)&qword_268268538);
  id v0 = (void *)sub_2289160C0();
  sub_2289160D0();

  return v2;
}

id sub_2288F5FA0@<X0>(char *a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (SEL *)((char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_268268178 != -1) {
    goto LABEL_31;
  }
  while (1)
  {
    uint64_t v5 = (void *)qword_26826B300;
    id result = objc_msgSend((id)qword_26826B300, sel_hasCurrentCalls, v26);
    if (!result)
    {
      char v14 = 0;
      goto LABEL_13;
    }
    id v7 = objc_msgSend(v5, sel_currentAudioAndVideoCalls);
    sub_228811060(0, &qword_26826B330);
    unint64_t v8 = sub_228915E90();

    unint64_t v28 = a1;
    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_228916440();
      if (!v9)
      {
LABEL_9:
        char v14 = 0;
        goto LABEL_12;
      }
    }
    else
    {
      uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v9) {
        goto LABEL_9;
      }
    }
    unint64_t v32 = v8 & 0xC000000000000001;
    uint64_t v29 = (char *)v4;
    id v10 = (v8 & 0xC000000000000001) != 0 ? (id)MEMORY[0x22A6A03A0](0, v8) : *(id *)(v8 + 32);
    unint64_t v11 = v10;
    char v12 = sub_2288FD100(v10);

    if ((v12 & 1) == 0) {
      break;
    }
    if (v9 == 1) {
      goto LABEL_9;
    }
    uint64_t v15 = 5;
    uint64_t v4 = (SEL *)&property descriptor for TransactionInternal.transactionType;
    *(void *)&long long v13 = 67109376;
    long long v26 = v13;
    a1 = v29;
    uint64_t v30 = v9;
    unint64_t v31 = v8;
    uint64_t v27 = v2;
    while (1)
    {
      id v16 = v32 ? (id)MEMORY[0x22A6A03A0](v15 - 4, v8) : *(id *)(v8 + 8 * v15);
      unint64_t v17 = v16;
      uint64_t v18 = v15 - 3;
      if (__OFADD__(v15 - 4, 1)) {
        break;
      }
      unsigned int v34 = [v16 v4[350]];
      unsigned int v33 = objc_msgSend(v17, sel_isScreening);
      if (qword_268267F18 != -1) {
        swift_once();
      }
      uint64_t v19 = __swift_project_value_buffer(v2, (uint64_t)qword_268283DB0);
      sub_22883741C(v19, (uint64_t)a1, (uint64_t *)&unk_2682684D0);
      uint64_t v20 = sub_2289155C0();
      uint64_t v21 = *(void *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(a1, 1, v20) == 1)
      {
        sub_2288110C0((uint64_t)a1, (uint64_t *)&unk_2682684D0);
      }
      else
      {
        char v22 = sub_2289155A0();
        os_log_type_t v23 = sub_228916070();
        if (os_log_type_enabled(v22, v23))
        {
          BOOL v24 = v34 == 1;
          uint64_t v25 = swift_slowAlloc();
          *(_DWORD *)uint64_t v25 = v26;
          *(_DWORD *)(v25 + 4) = v24;
          *(_WORD *)(v25 + 8) = 1024;
          *(_DWORD *)(v25 + 10) = v33;
          _os_log_impl(&dword_228806000, v22, v23, "Call: isActive [ %{BOOL}d ] isScreening [ %{BOOL}d ]", (uint8_t *)v25, 0xEu);
          MEMORY[0x22A6A1090](v25, -1, -1);
        }

        a1 = v29;
        (*(void (**)(char *, uint64_t))(v21 + 8))(v29, v20);
        uint64_t v2 = v27;
        uint64_t v4 = (SEL *)&property descriptor for TransactionInternal.transactionType;
      }

      char v14 = 1;
      unint64_t v8 = v31;
      if (v34 != 1 || ((v33 ^ 1) & 1) != 0) {
        goto LABEL_12;
      }
      ++v15;
      if (v18 == v30) {
        goto LABEL_9;
      }
    }
    __break(1u);
LABEL_31:
    swift_once();
  }
  char v14 = 1;
LABEL_12:
  id result = (id)swift_bridgeObjectRelease_n();
  a1 = v28;
LABEL_13:
  *a1 = v14;
  return result;
}

id static Utilities.isPasscodeEnabled.getter()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F10468]), sel_init);
  id v1 = objc_msgSend(v0, sel_canEvaluatePolicy_error_, 2, 0);

  return v1;
}

BOOL static Utilities.isPINPrivacyLockEnabled(_:)()
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  HIBYTE(v13) = 0;
  unint64_t v14 = 0xD000000000000017;
  unint64_t v15 = 0x800000022892CE90;
  sub_228915D60();
  uint64_t v3 = (__CFString *)sub_228915C40();
  swift_bridgeObjectRelease();
  uint64_t v4 = (__CFString *)sub_228915C40();
  int AppBooleanValue = CFPreferencesGetAppBooleanValue(v3, v4, (Boolean *)&v13 + 7);

  if (qword_268267F18 != -1) {
    swift_once();
  }
  uint64_t v6 = __swift_project_value_buffer(v0, (uint64_t)qword_268283DB0);
  sub_22883741C(v6, (uint64_t)v2, (uint64_t *)&unk_2682684D0);
  uint64_t v7 = sub_2289155C0();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v2, 1, v7) == 1)
  {
    sub_2288110C0((uint64_t)v2, (uint64_t *)&unk_2682684D0);
    if (!AppBooleanValue) {
      return 0;
    }
  }
  else
  {
    id v10 = sub_2289155A0();
    os_log_type_t v11 = sub_228916070();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 67109376;
      LODWORD(v14) = AppBooleanValue != 0;
      sub_2289161F0();
      *(_WORD *)(v12 + 8) = 1024;
      swift_beginAccess();
      LODWORD(v14) = HIBYTE(v13) != 0;
      sub_2289161F0();
      _os_log_impl(&dword_228806000, v10, v11, "pref - isPINPrivacyEnabled = %{BOOL}d, exists = %{BOOL}d", (uint8_t *)v12, 0xEu);
      MEMORY[0x22A6A1090](v12, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v2, v7);
    if (!AppBooleanValue) {
      return 0;
    }
  }
  swift_beginAccess();
  return HIBYTE(v13) != 0;
}

uint64_t static Utilities.settingsAlwaysPlaySound(_:)(uint64_t a1, unint64_t a2)
{
  _OWORD v44[3] = *MEMORY[0x263EF8340];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v36 - v8;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v36 - v11;
  Boolean keyExistsAndHasValidFormat = 0;
  if (qword_268267F18 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v4, (uint64_t)qword_268283DB0);
  sub_22883741C(v13, (uint64_t)v12, (uint64_t *)&unk_2682684D0);
  uint64_t v14 = sub_2289155C0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v41(v12, 1, v14) == 1)
  {
    sub_2288110C0((uint64_t)v12, (uint64_t *)&unk_2682684D0);
  }
  else
  {
    uint64_t v40 = v13;
    swift_bridgeObjectRetain_n();
    uint64_t v16 = sub_2289155A0();
    os_log_type_t v17 = sub_228916070();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v39 = v6;
      uint64_t v19 = v18;
      uint64_t v37 = swift_slowAlloc();
      v44[0] = v37;
      *(_DWORD *)uint64_t v19 = 136315394;
      os_log_t v36 = v16;
      uint64_t v43 = sub_2288AB2C4(0xD000000000000017, 0x800000022892B610, v44);
      uint64_t v38 = v15;
      sub_2289161F0();
      *(_WORD *)(v19 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v43 = sub_2288AB2C4(a1, a2, v44);
      uint64_t v15 = v38;
      sub_2289161F0();
      swift_bridgeObjectRelease_n();
      uint64_t v16 = v36;
      _os_log_impl(&dword_228806000, v36, v17, "pref - %s-%s", (uint8_t *)v19, 0x16u);
      uint64_t v20 = v37;
      swift_arrayDestroy();
      MEMORY[0x22A6A1090](v20, -1, -1);
      uint64_t v21 = v19;
      uint64_t v6 = v39;
      MEMORY[0x22A6A1090](v21, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
    uint64_t v13 = v40;
  }
  v44[0] = 0xD000000000000018;
  v44[1] = 0x800000022892CEB0;
  sub_228915D60();
  char v22 = (__CFString *)sub_228915C40();
  swift_bridgeObjectRelease();
  os_log_type_t v23 = (__CFString *)sub_228915C40();
  int AppBooleanValue = CFPreferencesGetAppBooleanValue(v22, v23, &keyExistsAndHasValidFormat);

  BOOL v25 = AppBooleanValue != 0;
  sub_22883741C(v13, (uint64_t)v9, (uint64_t *)&unk_2682684D0);
  if (v41(v9, 1, v14) == 1)
  {
    sub_2288110C0((uint64_t)v9, (uint64_t *)&unk_2682684D0);
  }
  else
  {
    long long v26 = sub_2289155A0();
    os_log_type_t v27 = sub_228916070();
    if (os_log_type_enabled(v26, v27))
    {
      unint64_t v28 = (_DWORD *)swift_slowAlloc();
      uint64_t v40 = v13;
      uint64_t v29 = v15;
      uint64_t v30 = v28;
      *unint64_t v28 = 67109376;
      LODWORD(v44[0]) = AppBooleanValue != 0;
      sub_2289161F0();
      *((_WORD *)v30 + 4) = 1024;
      swift_beginAccess();
      LODWORD(v44[0]) = keyExistsAndHasValidFormat != 0;
      sub_2289161F0();
      _os_log_impl(&dword_228806000, v26, v27, "pref - alwaysPlaySound = %{BOOL}d, exists = %{BOOL}d", (uint8_t *)v30, 0xEu);
      unint64_t v31 = v30;
      uint64_t v15 = v29;
      uint64_t v13 = v40;
      MEMORY[0x22A6A1090](v31, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v14);
  }
  swift_beginAccess();
  if (!keyExistsAndHasValidFormat)
  {
    sub_22883741C(v13, (uint64_t)v6, (uint64_t *)&unk_2682684D0);
    if (v41(v6, 1, v14) == 1)
    {
      sub_2288110C0((uint64_t)v6, (uint64_t *)&unk_2682684D0);
    }
    else
    {
      unint64_t v32 = sub_2289155A0();
      os_log_type_t v33 = sub_228916070();
      if (os_log_type_enabled(v32, v33))
      {
        unsigned int v34 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unsigned int v34 = 0;
        _os_log_impl(&dword_228806000, v32, v33, "pref - missing, default to true", v34, 2u);
        MEMORY[0x22A6A1090](v34, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v15 + 8))(v6, v14);
    }
    return 1;
  }
  return v25;
}

uint64_t static Utilities.libraryDirectoryPath()()
{
  uint64_t result = CPSharedResourcesDirectory();
  if (result)
  {
    uint64_t v1 = (void *)result;
    uint64_t v2 = sub_228915C70();

    sub_228915D60();
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t static Utilities.homeDirectoryPath()()
{
  uint64_t result = CPSharedResourcesDirectory();
  if (result)
  {
    uint64_t v1 = (void *)result;
    uint64_t v2 = sub_228915C70();

    sub_228915D60();
    sub_228916320();
    swift_bridgeObjectRelease();
    sub_228915D60();
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t static Utilities.logoDirectoryPath()()
{
  return sub_2288FD370();
}

uint64_t static Utilities.sessionsDirectoryPath()()
{
  uint64_t result = CPSharedResourcesDirectory();
  if (result)
  {
    uint64_t v1 = (void *)result;
    uint64_t v2 = sub_228915C70();

    sub_228915D60();
    sub_228916320();
    swift_bridgeObjectRelease();
    sub_228915D60();
    sub_228915D60();
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t static Utilities.cacheDirectoryPath()()
{
  return sub_2288FD370();
}

uint64_t static Utilities.transactionDataCacheDirectoryPath()()
{
  return sub_2288F6FF4();
}

uint64_t sub_2288F6FF4()
{
  uint64_t v1 = sub_2288FD370();
  sub_228915D60();
  return v1;
}

uint64_t static Utilities.discoveryCacheDirectoryPath()()
{
  return sub_2288F6FF4();
}

uint64_t static Utilities.deviceModel()()
{
  uint64_t v2 = *MEMORY[0x263EF8340];
  bzero(&v1, 0x500uLL);
  uname(&v1);
  return sub_228915D70();
}

uint64_t sub_2288F70E0(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v9 + 184) = v19;
  *(_OWORD *)(v9 + 168) = v18;
  *(_OWORD *)(v9 + 152) = v17;
  *(_OWORD *)(v9 + 136) = v16;
  *(_OWORD *)(v9 + 120) = v15;
  *(_OWORD *)(v9 + 104) = v14;
  *(_OWORD *)(v9 + 88) = v13;
  *(_OWORD *)(v9 + 72) = v12;
  *(void *)(v9 + 56) = a8;
  *(void *)(v9 + 64) = a9;
  *(void *)(v9 + 40) = a6;
  *(void *)(v9 + 48) = a7;
  *(void *)(v9 + 32) = a5;
  *(double *)(v9 + 24) = a1;
  *(void *)(v9 + 192) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  *(void *)(v9 + 200) = swift_task_alloc();
  *(void *)(v9 + 208) = swift_task_alloc();
  *(void *)(v9 + 216) = swift_task_alloc();
  *(void *)(v9 + 224) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268268D68);
  *(void *)(v9 + 232) = swift_task_alloc();
  *(void *)(v9 + 240) = swift_task_alloc();
  *(void *)(v9 + 248) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2288F725C);
}

uint64_t sub_2288F725C()
{
  *(void *)(v0 + 16) = 0;
  uint64_t v1 = *(void *)(v0 + 248);
  sub_22883741C(*(void *)(v0 + 40), v1, &qword_268268D68);
  uint64_t v2 = sub_2289151B0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  int v5 = v4(v1, 1, v2);
  uint64_t v6 = *(void *)(v0 + 248);
  if (v5 == 1)
  {
    sub_2288110C0(*(void *)(v0 + 248), &qword_268268D68);
    CFURLRef v77 = 0;
  }
  else
  {
    CFURLRef v77 = (const __CFURL *)sub_228915130();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
  }
  uint64_t v7 = *(void *)(v0 + 240);
  sub_22883741C(*(void *)(v0 + 48), v7, &qword_268268D68);
  int v8 = v4(v7, 1, v2);
  uint64_t v9 = *(void *)(v0 + 240);
  if (v8 == 1)
  {
    sub_2288110C0(*(void *)(v0 + 240), &qword_268268D68);
    CFURLRef v76 = 0;
  }
  else
  {
    CFURLRef v76 = (const __CFURL *)sub_228915130();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v9, v2);
  }
  uint64_t v10 = *(void *)(v0 + 232);
  sub_22883741C(*(void *)(v0 + 56), v10, &qword_268268D68);
  int v11 = v4(v10, 1, v2);
  uint64_t v12 = *(void *)(v0 + 232);
  if (v11 == 1)
  {
    sub_2288110C0(*(void *)(v0 + 232), &qword_268268D68);
    CFURLRef v75 = 0;
  }
  else
  {
    CFURLRef v75 = (const __CFURL *)sub_228915130();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v12, v2);
  }
  if (qword_268267EF0 != -1) {
    swift_once();
  }
  uint64_t v13 = *(void *)(v0 + 88);
  long long v14 = (void *)qword_268283D40;
  long long v15 = (void *)sub_228915C40();
  long long v16 = (void *)sub_228915C40();
  long long v17 = (void *)sub_228915C40();
  id v18 = objc_msgSend(v14, sel_localizedStringForKey_value_table_, v15, v16, v17);

  sub_228915C70();
  alertHeader = (__CFString *)sub_228915C40();
  swift_bridgeObjectRelease();
  if (v13)
  {
    uint64_t v19 = (void *)qword_268283D40;
    uint64_t v20 = (void *)sub_228915C40();
    uint64_t v21 = (void *)sub_228915C40();
    char v22 = (void *)sub_228915C40();
    id v23 = objc_msgSend(v19, sel_localizedStringForKey_value_table_, v20, v21, v22);

    sub_228915C70();
    BOOL v24 = (__CFString *)sub_228915C40();
    swift_bridgeObjectRelease();
  }
  else
  {
    BOOL v24 = 0;
  }
  uint64_t v25 = *(void *)(v0 + 120);
  long long v26 = (void *)qword_268283D40;
  os_log_type_t v27 = (void *)sub_228915C40();
  unint64_t v28 = (void *)sub_228915C40();
  uint64_t v29 = (void *)sub_228915C40();
  id v30 = objc_msgSend(v26, sel_localizedStringForKey_value_table_, v27, v28, v29);

  sub_228915C70();
  unint64_t v31 = (__CFString *)sub_228915C40();
  swift_bridgeObjectRelease();
  if (!v25)
  {
    uint64_t v37 = 0;
    if (*(void *)(v0 + 136)) {
      goto LABEL_17;
    }
LABEL_19:
    otherButtonTitle = 0;
    goto LABEL_20;
  }
  unint64_t v32 = (void *)qword_268283D40;
  os_log_type_t v33 = (void *)sub_228915C40();
  unsigned int v34 = (void *)sub_228915C40();
  uint64_t v35 = (void *)sub_228915C40();
  id v36 = objc_msgSend(v32, sel_localizedStringForKey_value_table_, v33, v34, v35);

  sub_228915C70();
  uint64_t v37 = (__CFString *)sub_228915C40();
  swift_bridgeObjectRelease();
  if (!*(void *)(v0 + 136)) {
    goto LABEL_19;
  }
LABEL_17:
  uint64_t v38 = (void *)qword_268283D40;
  uint64_t v39 = (void *)sub_228915C40();
  uint64_t v40 = (void *)sub_228915C40();
  uint64_t v41 = (void *)sub_228915C40();
  id v42 = objc_msgSend(v38, (SEL)&selRef_notifyIncomingCallAction_, v39, v40, v41);

  sub_228915C70();
  otherButtonTitle = (__CFString *)sub_228915C40();
  swift_bridgeObjectRelease();
LABEL_20:
  CFUserNotificationDisplayAlert(*(CFTimeInterval *)(v0 + 24), *(void *)(v0 + 32), v77, v76, v75, alertHeader, v24, v31, v37, otherButtonTitle, (CFOptionFlags *)(v0 + 16));

  switch(*(void *)(v0 + 16))
  {
    case 0:
      uint64_t v44 = *(void (**)(void))(v0 + 144);
      if (v44) {
        v44();
      }
      goto LABEL_53;
    case 1:
      uint64_t v55 = *(void (**)(uint64_t))(v0 + 160);
      if (v55) {
        goto LABEL_32;
      }
      if (qword_268267F18 != -1) {
        swift_once();
      }
      uint64_t v62 = *(void *)(v0 + 224);
      uint64_t v63 = __swift_project_value_buffer(*(void *)(v0 + 192), (uint64_t)qword_268283DB0);
      sub_22883741C(v63, v62, (uint64_t *)&unk_2682684D0);
      uint64_t v47 = sub_2289155C0();
      uint64_t v48 = *(void *)(v47 - 8);
      int v64 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v62, 1, v47);
      uint64_t v50 = *(void *)(v0 + 224);
      if (v64 == 1) {
        goto LABEL_48;
      }
      unint64_t v51 = sub_2289155A0();
      os_log_type_t v65 = sub_228916040();
      if (os_log_type_enabled(v51, v65))
      {
        uint64_t v66 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v66 = 0;
        _os_log_impl(&dword_228806000, v51, v65, "No Alternate button handler", v66, 2u);
        MEMORY[0x22A6A1090](v66, -1, -1);
      }
      uint64_t v54 = *(void *)(v0 + 224);
      goto LABEL_52;
    case 2:
      uint64_t v55 = *(void (**)(uint64_t))(v0 + 176);
      if (v55)
      {
LABEL_32:
        uint64_t v56 = swift_retain();
        v55(v56);
        sub_22883A0F4((uint64_t)v55);
      }
      else
      {
        if (qword_268267F18 != -1) {
          swift_once();
        }
        uint64_t v67 = *(void *)(v0 + 216);
        uint64_t v68 = __swift_project_value_buffer(*(void *)(v0 + 192), (uint64_t)qword_268283DB0);
        sub_22883741C(v68, v67, (uint64_t *)&unk_2682684D0);
        uint64_t v47 = sub_2289155C0();
        uint64_t v48 = *(void *)(v47 - 8);
        int v69 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v67, 1, v47);
        uint64_t v50 = *(void *)(v0 + 216);
        if (v69 == 1)
        {
LABEL_48:
          sub_2288110C0(v50, (uint64_t *)&unk_2682684D0);
        }
        else
        {
          unint64_t v51 = sub_2289155A0();
          os_log_type_t v70 = sub_228916040();
          if (os_log_type_enabled(v51, v70))
          {
            uint64_t v71 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v71 = 0;
            _os_log_impl(&dword_228806000, v51, v70, "No Other button handler", v71, 2u);
            MEMORY[0x22A6A1090](v71, -1, -1);
          }
          uint64_t v54 = *(void *)(v0 + 216);
LABEL_52:

          (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v54, v47);
        }
      }
LABEL_53:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v72 = *(uint64_t (**)(void))(v0 + 8);
      return v72();
    case 3:
      if (qword_268267F18 != -1) {
        swift_once();
      }
      uint64_t v57 = *(void *)(v0 + 208);
      uint64_t v58 = __swift_project_value_buffer(*(void *)(v0 + 192), (uint64_t)qword_268283DB0);
      sub_22883741C(v58, v57, (uint64_t *)&unk_2682684D0);
      uint64_t v47 = sub_2289155C0();
      uint64_t v48 = *(void *)(v47 - 8);
      int v59 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v57, 1, v47);
      uint64_t v50 = *(void *)(v0 + 208);
      if (v59 == 1) {
        goto LABEL_48;
      }
      unint64_t v51 = sub_2289155A0();
      os_log_type_t v60 = sub_228916040();
      if (os_log_type_enabled(v51, v60))
      {
        uint64_t v61 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v61 = 0;
        _os_log_impl(&dword_228806000, v51, v60, "The Alert timed out", v61, 2u);
        MEMORY[0x22A6A1090](v61, -1, -1);
      }
      uint64_t v54 = *(void *)(v0 + 208);
      goto LABEL_52;
    default:
      if (qword_268267F18 != -1) {
        swift_once();
      }
      uint64_t v45 = *(void *)(v0 + 200);
      uint64_t v46 = __swift_project_value_buffer(*(void *)(v0 + 192), (uint64_t)qword_268283DB0);
      sub_22883741C(v46, v45, (uint64_t *)&unk_2682684D0);
      uint64_t v47 = sub_2289155C0();
      uint64_t v48 = *(void *)(v47 - 8);
      int v49 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v45, 1, v47);
      uint64_t v50 = *(void *)(v0 + 200);
      if (v49 == 1) {
        goto LABEL_48;
      }
      unint64_t v51 = sub_2289155A0();
      os_log_type_t v52 = sub_228916050();
      if (os_log_type_enabled(v51, v52))
      {
        id v53 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v53 = 0;
        _os_log_impl(&dword_228806000, v51, v52, "Unexpected response received from Alert", v53, 2u);
        MEMORY[0x22A6A1090](v53, -1, -1);
      }
      uint64_t v54 = *(void *)(v0 + 200);
      goto LABEL_52;
  }
}

uint64_t static Utilities.showBluetoothDisabledDialog(handler:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268D68);
  MEMORY[0x270FA5388](v6 - 8);
  int v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  int v11 = (char *)&v26 - v10;
  MEMORY[0x270FA5388](v12);
  long long v14 = (char *)&v26 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v15);
  long long v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_268267F18 != -1) {
    swift_once();
  }
  uint64_t v18 = __swift_project_value_buffer(v15, (uint64_t)qword_268283DB0);
  sub_22883741C(v18, (uint64_t)v17, (uint64_t *)&unk_2682684D0);
  uint64_t v19 = sub_2289155C0();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v17, 1, v19) == 1)
  {
    sub_2288110C0((uint64_t)v17, (uint64_t *)&unk_2682684D0);
  }
  else
  {
    sub_2288C61B4(v3, 0xD000000000000025, 0x800000022892CF40, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
  }
  uint64_t v21 = (void *)swift_allocObject();
  v21[2] = a1;
  v21[3] = a2;
  v21[4] = v3;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  uint64_t v23 = sub_2289151B0();
  BOOL v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
  v24(v14, 1, 1, v23);
  v24(v11, 1, 1, v23);
  v24(v8, 1, 1, v23);
  swift_retain_n();
  sub_2288FD4E0(0xD00000000000001ELL, 0x800000022892CEF0, 0xD000000000000020, 0x800000022892CF10, 0x53474E4954544553, 0xE800000000000000, (uint64_t)sub_2288FD47C, (uint64_t)v21, 0.0, 0x4C45434E4143, 0xE600000000000000, (uint64_t)sub_2288FD4BC, v22, 0, 0, 0, 0, 0, (uint64_t)v14,
    (uint64_t)v11,
    (uint64_t)v8);
  swift_release();
  swift_release();
  sub_2288110C0((uint64_t)v8, &qword_268268D68);
  sub_2288110C0((uint64_t)v11, &qword_268268D68);
  return sub_2288110C0((uint64_t)v14, &qword_268268D68);
}

uint64_t static Utilities.showNFCDisabledDialog(handler:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268D68);
  MEMORY[0x270FA5388](v6 - 8);
  int v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  int v11 = (char *)&v26 - v10;
  MEMORY[0x270FA5388](v12);
  long long v14 = (char *)&v26 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v15);
  long long v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_268267F18 != -1) {
    swift_once();
  }
  uint64_t v18 = __swift_project_value_buffer(v15, (uint64_t)qword_268283DB0);
  sub_22883741C(v18, (uint64_t)v17, (uint64_t *)&unk_2682684D0);
  uint64_t v19 = sub_2289155C0();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v17, 1, v19) == 1)
  {
    sub_2288110C0((uint64_t)v17, (uint64_t *)&unk_2682684D0);
  }
  else
  {
    sub_2288C61B4(v3, 0xD00000000000001FLL, 0x800000022892CFB0, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
  }
  uint64_t v21 = (void *)swift_allocObject();
  v21[2] = a1;
  v21[3] = a2;
  v21[4] = v3;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  uint64_t v23 = sub_2289151B0();
  BOOL v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
  v24(v14, 1, 1, v23);
  v24(v11, 1, 1, v23);
  v24(v8, 1, 1, v23);
  swift_retain_n();
  sub_2288FD4E0(0xD000000000000018, 0x800000022892CF70, 0xD00000000000001ALL, 0x800000022892CF90, 0x53474E4954544553, 0xE800000000000000, (uint64_t)sub_2288FD8B8, (uint64_t)v21, 0.0, 0x4C45434E4143, 0xE600000000000000, (uint64_t)sub_2288FD8F8, v22, 0, 0, 0, 0, 0, (uint64_t)v14,
    (uint64_t)v11,
    (uint64_t)v8);
  swift_release();
  swift_release();
  sub_2288110C0((uint64_t)v8, &qword_268268D68);
  sub_2288110C0((uint64_t)v11, &qword_268268D68);
  return sub_2288110C0((uint64_t)v14, &qword_268268D68);
}

id sub_2288F85C8(void (*a1)(uint64_t, __n128), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, const char *a6)
{
  unint64_t v28 = a6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268D68);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_2289151B0();
  uint64_t v14 = *(void *)(v13 - 8);
  __n128 v15 = MEMORY[0x270FA5388](v13);
  long long v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1(1, v15);
  sub_228915190();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_2288110C0((uint64_t)v12, &qword_268268D68);
    if (qword_268267F18 != -1) {
      swift_once();
    }
    uint64_t v18 = __swift_project_value_buffer(v7, (uint64_t)qword_268283DB0);
    sub_22883741C(v18, (uint64_t)v9, (uint64_t *)&unk_2682684D0);
    uint64_t v19 = sub_2289155C0();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v9, 1, v19) == 1)
    {
      return (id)sub_2288110C0((uint64_t)v9, (uint64_t *)&unk_2682684D0);
    }
    else
    {
      BOOL v24 = sub_2289155A0();
      os_log_type_t v25 = sub_228916050();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v26 = 0;
        _os_log_impl(&dword_228806000, v24, v25, v28, v26, 2u);
        MEMORY[0x22A6A1090](v26, -1, -1);
      }

      return (id)(*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v9, v19);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v17, v12, v13);
    id result = objc_msgSend(self, sel_defaultWorkspace);
    if (result)
    {
      uint64_t v22 = result;
      uint64_t v23 = (void *)sub_228915130();
      objc_msgSend(v22, sel_openSensitiveURL_withOptions_, v23, 0);

      return (id)(*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_2288F8954(uint64_t (*a1)(void), uint64_t a2, const char *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_268267F18 != -1) {
    swift_once();
  }
  uint64_t v8 = __swift_project_value_buffer(v5, (uint64_t)qword_268283DB0);
  sub_22883741C(v8, (uint64_t)v7, (uint64_t *)&unk_2682684D0);
  uint64_t v9 = sub_2289155C0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9) == 1)
  {
    sub_2288110C0((uint64_t)v7, (uint64_t *)&unk_2682684D0);
  }
  else
  {
    uint64_t v11 = sub_2289155A0();
    os_log_type_t v12 = sub_228916040();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl(&dword_228806000, v11, v12, a3, v13, 2u);
      MEMORY[0x22A6A1090](v13, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
  }
  return a1(0);
}

uint64_t static Utilities.showTwoFactorAuthDisabledDialog(handler:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268D68);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v26 - v10;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v26 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v15);
  long long v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_268267F18 != -1) {
    swift_once();
  }
  uint64_t v18 = __swift_project_value_buffer(v15, (uint64_t)qword_268283DB0);
  sub_22883741C(v18, (uint64_t)v17, (uint64_t *)&unk_2682684D0);
  uint64_t v19 = sub_2289155C0();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v17, 1, v19) == 1)
  {
    sub_2288110C0((uint64_t)v17, (uint64_t *)&unk_2682684D0);
  }
  else
  {
    sub_2288C61B4(v3, 0xD000000000000029, 0x800000022892D010, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
  }
  uint64_t v21 = (void *)swift_allocObject();
  v21[2] = a1;
  v21[3] = a2;
  v21[4] = v3;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  uint64_t v23 = sub_2289151B0();
  BOOL v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
  v24(v14, 1, 1, v23);
  v24(v11, 1, 1, v23);
  v24(v8, 1, 1, v23);
  swift_retain_n();
  sub_2288FD4E0(0xD00000000000001BLL, 0x800000022892CFD0, 0xD00000000000001DLL, 0x800000022892CFF0, 0x53474E4954544553, 0xE800000000000000, (uint64_t)sub_2288FD91C, (uint64_t)v21, 0.0, 0x4C45434E4143, 0xE600000000000000, (uint64_t)sub_2288FD994, v22, 0, 0, 0, 0, 0, (uint64_t)v14,
    (uint64_t)v11,
    (uint64_t)v8);
  swift_release();
  swift_release();
  sub_2288110C0((uint64_t)v8, &qword_268268D68);
  sub_2288110C0((uint64_t)v11, &qword_268268D68);
  return sub_2288110C0((uint64_t)v14, &qword_268268D68);
}

uint64_t static Utilities.showPasscodeDisabledDialog(handler:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268D68);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v26 - v10;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v26 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v15);
  long long v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_268267F18 != -1) {
    swift_once();
  }
  uint64_t v18 = __swift_project_value_buffer(v15, (uint64_t)qword_268283DB0);
  sub_22883741C(v18, (uint64_t)v17, (uint64_t *)&unk_2682684D0);
  uint64_t v19 = sub_2289155C0();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v17, 1, v19) == 1)
  {
    sub_2288110C0((uint64_t)v17, (uint64_t *)&unk_2682684D0);
  }
  else
  {
    sub_2288C61B4(v3, 0xD000000000000024, 0x800000022892D080, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
  }
  uint64_t v21 = (void *)swift_allocObject();
  v21[2] = a1;
  v21[3] = a2;
  v21[4] = v3;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  uint64_t v23 = sub_2289151B0();
  BOOL v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
  v24(v14, 1, 1, v23);
  v24(v11, 1, 1, v23);
  v24(v8, 1, 1, v23);
  swift_retain_n();
  sub_2288FD4E0(0xD000000000000014, 0x800000022892D040, 0xD000000000000016, 0x800000022892D060, 0x53474E4954544553, 0xE800000000000000, (uint64_t)sub_2288FD9B8, (uint64_t)v21, 0.0, 0x4C45434E4143, 0xE600000000000000, (uint64_t)sub_2288FD9F8, v22, 0, 0, 0, 0, 0, (uint64_t)v14,
    (uint64_t)v11,
    (uint64_t)v8);
  swift_release();
  swift_release();
  sub_2288110C0((uint64_t)v8, &qword_268268D68);
  sub_2288110C0((uint64_t)v11, &qword_268268D68);
  return sub_2288110C0((uint64_t)v14, &qword_268268D68);
}

uint64_t static Utilities.showICloudSignedOutDialog(handler:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268D68);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v26 - v10;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v26 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v15);
  long long v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_268267F18 != -1) {
    swift_once();
  }
  uint64_t v18 = __swift_project_value_buffer(v15, (uint64_t)qword_268283DB0);
  sub_22883741C(v18, (uint64_t)v17, (uint64_t *)&unk_2682684D0);
  uint64_t v19 = sub_2289155C0();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v17, 1, v19) == 1)
  {
    sub_2288110C0((uint64_t)v17, (uint64_t *)&unk_2682684D0);
  }
  else
  {
    sub_2288C61B4(v3, 0xD000000000000023, 0x800000022892D110, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
  }
  uint64_t v21 = (void *)swift_allocObject();
  v21[2] = a1;
  v21[3] = a2;
  v21[4] = v3;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  uint64_t v23 = sub_2289151B0();
  BOOL v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
  v24(v14, 1, 1, v23);
  v24(v11, 1, 1, v23);
  v24(v8, 1, 1, v23);
  swift_retain_n();
  sub_2288FD4E0(0xD000000000000021, 0x800000022892D0B0, 0xD000000000000023, 0x800000022892D0E0, 0x53474E4954544553, 0xE800000000000000, (uint64_t)sub_2288FDA1C, (uint64_t)v21, 0.0, 0x4C45434E4143, 0xE600000000000000, (uint64_t)sub_2288FDA64, v22, 0, 0, 0, 0, 0, (uint64_t)v14,
    (uint64_t)v11,
    (uint64_t)v8);
  swift_release();
  swift_release();
  sub_2288110C0((uint64_t)v8, &qword_268268D68);
  sub_2288110C0((uint64_t)v11, &qword_268268D68);
  return sub_2288110C0((uint64_t)v14, &qword_268268D68);
}

uint64_t static Utilities.showOSVersionNotSupportedDialog(handler:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_268267F18 != -1) {
    swift_once();
  }
  uint64_t v4 = __swift_project_value_buffer(v1, (uint64_t)qword_268283DB0);
  sub_22883741C(v4, (uint64_t)v3, (uint64_t *)&unk_2682684D0);
  uint64_t v5 = sub_2289155C0();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v3, 1, v5) == 1)
  {
    sub_2288110C0((uint64_t)v3, (uint64_t *)&unk_2682684D0);
  }
  else
  {
    sub_2288C61B4(v0, 0xD000000000000029, 0x800000022892D170, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v3, v5);
  }
  if (qword_268267EF0 != -1) {
    swift_once();
  }
  uint64_t v7 = (void *)qword_268283D40;
  uint64_t v8 = (void *)sub_228915C40();
  uint64_t v9 = (void *)sub_228915C40();
  uint64_t v10 = (void *)sub_228915C40();
  id v11 = objc_msgSend(v7, sel_localizedStringForKey_value_table_, v8, v9, v10);

  uint64_t v12 = sub_228915C70();
  uint64_t v14 = v13;

  type metadata accessor for BaselineErrorDialog();
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = 0;
  v15[3] = v12;
  v15[4] = v14;
  sub_228838B98();
  return swift_release();
}

uint64_t static Utilities.showContinuityDisplayNotAllowedDialog(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268D68);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v23 - v9;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v23 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_268267F18 != -1) {
    swift_once();
  }
  uint64_t v17 = __swift_project_value_buffer(v14, (uint64_t)qword_268283DB0);
  sub_22883741C(v17, (uint64_t)v16, (uint64_t *)&unk_2682684D0);
  uint64_t v18 = sub_2289155C0();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18) == 1)
  {
    sub_2288110C0((uint64_t)v16, (uint64_t *)&unk_2682684D0);
  }
  else
  {
    sub_2288C61B4(v2, 0xD000000000000029, 0x800000022892D1A0, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
  }
  uint64_t v20 = sub_2289151B0();
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
  v21(v13, 1, 1, v20);
  v21(v10, 1, 1, v20);
  v21(v7, 1, 1, v20);
  sub_2288FD4E0(a1, a2, 0, 0, 19279, 0xE200000000000000, 0, 0, 0.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, (uint64_t)v13,
    (uint64_t)v10,
    (uint64_t)v7);
  sub_2288110C0((uint64_t)v7, &qword_268268D68);
  sub_2288110C0((uint64_t)v10, &qword_268268D68);
  return sub_2288110C0((uint64_t)v13, &qword_268268D68);
}

void static Utilities.showLowMemoryDialog()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_268267F18 != -1) {
    swift_once();
  }
  uint64_t v4 = __swift_project_value_buffer(v1, (uint64_t)qword_268283DB0);
  sub_22883741C(v4, (uint64_t)v3, (uint64_t *)&unk_2682684D0);
  uint64_t v5 = sub_2289155C0();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v3, 1, v5) == 1)
  {
    sub_2288110C0((uint64_t)v3, (uint64_t *)&unk_2682684D0);
  }
  else
  {
    sub_2288C61B4(v0, 0xD000000000000015, 0x800000022892D210, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v3, v5);
  }
  if (qword_268267EF0 != -1) {
    swift_once();
  }
  uint64_t v7 = (void *)qword_268283D40;
  uint64_t v8 = (void *)sub_228915C40();
  uint64_t v9 = (void *)sub_228915C40();
  uint64_t v10 = (void *)sub_228915C40();
  id v11 = objc_msgSend(v7, sel_localizedStringForKey_value_table_, v8, v9, v10);

  sub_228915C70();
  uint64_t v12 = (__CFString *)sub_228915C40();
  swift_bridgeObjectRelease();
  uint64_t v13 = (void *)qword_268283D40;
  uint64_t v14 = (void *)sub_228915C40();
  uint64_t v15 = (void *)sub_228915C40();
  uint64_t v16 = (void *)sub_228915C40();
  id v17 = objc_msgSend(v13, sel_localizedStringForKey_value_table_, v14, v15, v16);

  sub_228915C70();
  uint64_t v18 = (__CFString *)sub_228915C40();
  swift_bridgeObjectRelease();
  uint64_t v19 = (void *)qword_268283D40;
  uint64_t v20 = (void *)sub_228915C40();
  uint64_t v21 = (void *)sub_228915C40();
  uint64_t v22 = (void *)sub_228915C40();
  id v23 = objc_msgSend(v19, sel_localizedStringForKey_value_table_, v20, v21, v22);

  sub_228915C70();
  BOOL v24 = (__CFString *)sub_228915C40();
  swift_bridgeObjectRelease();
  CFUserNotificationDisplayNotice(0.0, 0, 0, 0, 0, v12, v18, v24);
}

void static Utilities.showOSRestoreDialog()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_268267F18 != -1) {
    swift_once();
  }
  uint64_t v4 = __swift_project_value_buffer(v1, (uint64_t)qword_268283DB0);
  sub_22883741C(v4, (uint64_t)v3, (uint64_t *)&unk_2682684D0);
  uint64_t v5 = sub_2289155C0();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v3, 1, v5) == 1)
  {
    sub_2288110C0((uint64_t)v3, (uint64_t *)&unk_2682684D0);
  }
  else
  {
    sub_2288C61B4(v0, 0xD000000000000015, 0x800000022892D270, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v3, v5);
  }
  if (qword_268267EF0 != -1) {
    swift_once();
  }
  uint64_t v7 = (void *)qword_268283D40;
  uint64_t v8 = (void *)sub_228915C40();
  uint64_t v9 = (void *)sub_228915C40();
  uint64_t v10 = (void *)sub_228915C40();
  id v11 = objc_msgSend(v7, sel_localizedStringForKey_value_table_, v8, v9, v10);

  sub_228915C70();
  uint64_t v12 = (__CFString *)sub_228915C40();
  swift_bridgeObjectRelease();
  uint64_t v13 = (void *)qword_268283D40;
  uint64_t v14 = (void *)sub_228915C40();
  uint64_t v15 = (void *)sub_228915C40();
  uint64_t v16 = (void *)sub_228915C40();
  id v17 = objc_msgSend(v13, sel_localizedStringForKey_value_table_, v14, v15, v16);

  sub_228915C70();
  uint64_t v18 = (__CFString *)sub_228915C40();
  swift_bridgeObjectRelease();
  uint64_t v19 = (void *)qword_268283D40;
  uint64_t v20 = (void *)sub_228915C40();
  uint64_t v21 = (void *)sub_228915C40();
  uint64_t v22 = (void *)sub_228915C40();
  id v23 = objc_msgSend(v19, sel_localizedStringForKey_value_table_, v20, v21, v22);

  sub_228915C70();
  BOOL v24 = (__CFString *)sub_228915C40();
  swift_bridgeObjectRelease();
  CFUserNotificationDisplayNotice(0.0, 0, 0, 0, 0, v12, v18, v24);
}

uint64_t static Utilities.primaryEmailOrUsername()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v54 = (uint64_t)&v51 - v5;
  MEMORY[0x270FA5388](v6);
  uint64_t v53 = (uint64_t)&v51 - v7;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v51 - v9;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v51 - v12;
  if (qword_268267F18 != -1) {
    swift_once();
  }
  uint64_t v14 = __swift_project_value_buffer(v1, (uint64_t)qword_268283DB0);
  sub_22883741C(v14, (uint64_t)v13, (uint64_t *)&unk_2682684D0);
  uint64_t v15 = sub_2289155C0();
  uint64_t v16 = *(void *)(v15 - 8);
  id v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v17(v13, 1, v15) == 1)
  {
    sub_2288110C0((uint64_t)v13, (uint64_t *)&unk_2682684D0);
  }
  else
  {
    sub_2288C61B4(v0, 0xD000000000000018, 0x800000022892D290, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
  }
  id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFB210]), sel_init);
  id v19 = objc_msgSend(v18, sel_aa_primaryAppleAccount);
  if (!v19)
  {
    sub_22883741C(v14, (uint64_t)v3, (uint64_t *)&unk_2682684D0);
    if (v17(v3, 1, v15) != 1)
    {
      uint64_t v29 = sub_2289155A0();
      os_log_type_t v30 = sub_228916070();
      if (os_log_type_enabled(v29, v30))
      {
        unint64_t v31 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v31 = 0;
        _os_log_impl(&dword_228806000, v29, v30, "No account", v31, 2u);
        MEMORY[0x22A6A1090](v31, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v16 + 8))(v3, v15);
      return 0;
    }

    uint64_t v28 = (uint64_t)v3;
    goto LABEL_32;
  }
  uint64_t v20 = v19;
  id v21 = objc_msgSend(v19, sel_aa_primaryEmail);
  uint64_t v52 = v16;
  if (v21)
  {
    uint64_t v22 = v21;
    uint64_t v23 = sub_228915C70();
    unint64_t v25 = v24;

    uint64_t v26 = HIBYTE(v25) & 0xF;
    if ((v25 & 0x2000000000000000) == 0) {
      uint64_t v26 = v23 & 0xFFFFFFFFFFFFLL;
    }
    if (v26)
    {
      sub_22883741C(v14, (uint64_t)v10, (uint64_t *)&unk_2682684D0);
      if (v17(v10, 1, v15) == 1)
      {

        uint64_t v27 = (uint64_t)v10;
LABEL_25:
        sub_2288110C0(v27, (uint64_t *)&unk_2682684D0);
        return v23;
      }
      uint64_t v39 = sub_2289155A0();
      os_log_type_t v40 = sub_228916070();
      if (os_log_type_enabled(v39, v40))
      {
        uint64_t v41 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v41 = 0;
        _os_log_impl(&dword_228806000, v39, v40, "Primary email is good", v41, 2u);
        MEMORY[0x22A6A1090](v41, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v52 + 8))(v10, v15);
      return v23;
    }
    swift_bridgeObjectRelease();
    uint64_t v16 = v52;
  }
  id v32 = objc_msgSend(v20, sel_username);
  if (!v32)
  {
LABEL_30:
    uint64_t v42 = v14;
    uint64_t v43 = v54;
    sub_22883741C(v42, v54, (uint64_t *)&unk_2682684D0);
    if (v17((char *)v43, 1, v15) != 1)
    {
      uint64_t v44 = sub_2289155A0();
      os_log_type_t v45 = sub_228916070();
      if (os_log_type_enabled(v44, v45))
      {
        uint64_t v46 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v46 = 0;
        _os_log_impl(&dword_228806000, v44, v45, "both primary email and username are empty", v46, 2u);
        MEMORY[0x22A6A1090](v46, -1, -1);
      }

      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v43, v15);
      return 0;
    }

    uint64_t v28 = v43;
LABEL_32:
    sub_2288110C0(v28, (uint64_t *)&unk_2682684D0);
    return 0;
  }
  os_log_type_t v33 = v32;
  uint64_t v23 = sub_228915C70();
  unint64_t v35 = v34;

  uint64_t v36 = HIBYTE(v35) & 0xF;
  if ((v35 & 0x2000000000000000) == 0) {
    uint64_t v36 = v23 & 0xFFFFFFFFFFFFLL;
  }
  if (!v36)
  {
    swift_bridgeObjectRelease();
    uint64_t v16 = v52;
    goto LABEL_30;
  }
  uint64_t v37 = v14;
  uint64_t v38 = v53;
  sub_22883741C(v37, v53, (uint64_t *)&unk_2682684D0);
  if (v17((char *)v38, 1, v15) == 1)
  {

    uint64_t v27 = v38;
    goto LABEL_25;
  }
  uint64_t v47 = sub_2289155A0();
  os_log_type_t v48 = sub_228916070();
  if (os_log_type_enabled(v47, v48))
  {
    int v49 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v49 = 0;
    _os_log_impl(&dword_228806000, v47, v48, "User name is good", v49, 2u);
    MEMORY[0x22A6A1090](v49, -1, -1);
  }

  (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v38, v15);
  return v23;
}

uint64_t static Utilities.dispatchToMainIfNeeded(block:)(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t v4 = sub_228915AD0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_228915AF0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(self, sel_isMainThread)) {
    return a1();
  }
  sub_228811060(0, (unint64_t *)&qword_268268538);
  uint64_t v17 = sub_2289160C0();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = a2;
  aBlock[4] = sub_228851D10;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_228881E08;
  aBlock[3] = &block_descriptor_7;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_228915AE0();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_2288FDADC((unint64_t *)&qword_268269B90, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268269B98);
  sub_2288592CC(&qword_268269BA0, &qword_268269B98);
  sub_228916260();
  uint64_t v15 = (void *)v17;
  MEMORY[0x22A6A0140](0, v11, v7, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t static Utilities.toSHA256(payload:)(unint64_t a1, unint64_t a2)
{
  v23[4] = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_228915B80();
  uint64_t v21 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_228915B30();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_2288F5594(a1, a2);
  unint64_t v13 = v12;
  sub_2288FDADC(&qword_26826A550, MEMORY[0x263F047F8]);
  sub_228915B20();
  uint64_t v22 = v8;
  switch(v13 >> 62)
  {
    case 1uLL:
      uint64_t v20 = v7;
      if (v11 >> 32 < (int)v11) {
        __break(1u);
      }
      sub_22880ACB8(v11, v13);
      sub_2288FC224((int)v11, v11 >> 32);
      sub_22880BB80(v11, v13);
      uint64_t v7 = v20;
      goto LABEL_9;
    case 2uLL:
      uint64_t v20 = 0;
      uint64_t v14 = v7;
      uint64_t v16 = *(void *)(v11 + 16);
      uint64_t v15 = *(void *)(v11 + 24);
      sub_22880ACB8(v11, v13);
      swift_retain();
      swift_retain();
      uint64_t v17 = v16;
      uint64_t v7 = v14;
      sub_2288FC224(v17, v15);
      swift_release();
      swift_release();
      goto LABEL_8;
    case 3uLL:
      memset(v23, 0, 14);
      goto LABEL_7;
    default:
      v23[0] = v11;
      LOWORD(v23[1]) = v13;
      BYTE2(v23[1]) = BYTE2(v13);
      BYTE3(v23[1]) = BYTE3(v13);
      BYTE4(v23[1]) = BYTE4(v13);
      BYTE5(v23[1]) = BYTE5(v13);
LABEL_7:
      sub_228915B00();
LABEL_8:
      sub_22880BB80(v11, v13);
LABEL_9:
      sub_228915B10();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v4);
      sub_22880BB80(v11, v13);
      v23[0] = sub_2288F5AE0((uint64_t)v10);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26826A5A0);
      sub_2288592CC((unint64_t *)&qword_268268DB8, &qword_26826A5A0);
      uint64_t v18 = sub_228915C00();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v7);
      return v18;
  }
}

uint64_t static Utilities.osVersionBuildString()()
{
  id v0 = objc_msgSend(self, sel_processInfo);
  id v1 = objc_msgSend(v0, sel_operatingSystemVersionString);

  uint64_t v2 = sub_228915C70();
  return v2;
}

uint64_t static Utilities.osVersion()()
{
  id v0 = self;
  id v1 = objc_msgSend(v0, sel_processInfo);
  objc_msgSend(v1, sel_operatingSystemVersion);
  uint64_t v2 = v9;

  uint64_t v9 = v2;
  uint64_t v12 = sub_228916630();
  uint64_t v13 = v3;
  sub_228915D60();
  id v4 = objc_msgSend(v0, sel_processInfo);
  objc_msgSend(v4, sel_operatingSystemVersion);
  uint64_t v5 = v10;

  uint64_t v9 = v5;
  sub_228916630();
  sub_228915D60();
  swift_bridgeObjectRelease();
  sub_228915D60();
  id v6 = objc_msgSend(v0, sel_processInfo);
  objc_msgSend(v6, sel_operatingSystemVersion);
  uint64_t v7 = v11;

  uint64_t v9 = v7;
  sub_228916630();
  sub_228915D60();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t Utilities.deinit()
{
  return v0;
}

uint64_t Utilities.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_2288FB3D8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_228915DE0();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x22A69FE10](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

unsigned __int8 *sub_2288FB454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  sub_2288FE1BC();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_228915E00();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v9 = (unsigned __int8 *)&v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_2288FB7C4();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v9 = (unsigned __int8 *)sub_228916370();
  }
LABEL_7:
  unint64_t v13 = sub_2288FB548(v9, v10, a5);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_2288FB548(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  uint64_t v13 = 0;
                  if (v11 < 0x61 || v11 >= v8) {
                    return (unsigned __int8 *)v13;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v14 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v14 - (v11 + v12);
              if (__OFSUB__(v14, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      unsigned __int8 v23 = a3 + 48;
      unsigned __int8 v24 = a3 + 55;
      unsigned __int8 v25 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v23 = 58;
      }
      else
      {
        unsigned __int8 v25 = 97;
        unsigned __int8 v24 = 65;
      }
      if (result)
      {
        uint64_t v26 = 0;
        do
        {
          unsigned int v27 = *result;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v24)
            {
              uint64_t v13 = 0;
              if (v27 < 0x61 || v27 >= v25) {
                return (unsigned __int8 *)v13;
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          uint64_t v29 = v26 * a3;
          if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63) {
            return 0;
          }
          uint64_t v26 = v29 + (v27 + v28);
          if (__OFADD__(v29, (v27 + v28))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v29 + (v27 + v28));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  uint64_t v15 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v16 = a3 + 48;
  unsigned __int8 v17 = a3 + 55;
  unsigned __int8 v18 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v16 = 58;
  }
  else
  {
    unsigned __int8 v18 = 97;
    unsigned __int8 v17 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  id v19 = result + 1;
  do
  {
    unsigned int v20 = *v19;
    if (v20 < 0x30 || v20 >= v16)
    {
      if (v20 < 0x41 || v20 >= v17)
      {
        uint64_t v13 = 0;
        if (v20 < 0x61 || v20 >= v18) {
          return (unsigned __int8 *)v13;
        }
        char v21 = -87;
      }
      else
      {
        char v21 = -55;
      }
    }
    else
    {
      char v21 = -48;
    }
    uint64_t v22 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v22 + (v20 + v21);
    if (__OFADD__(v22, (v20 + v21))) {
      return 0;
    }
    ++v19;
    --v15;
  }
  while (v15);
  return (unsigned __int8 *)v9;
}

uint64_t sub_2288FB7C4()
{
  unint64_t v0 = sub_228915E10();
  uint64_t v4 = sub_2288FB844(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_2288FB844(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    unint64_t v9 = sub_2288FB99C(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      unsigned int v11 = sub_2288AB764(v9, 0);
      unint64_t v12 = sub_2288FBA9C((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_228916370();
LABEL_4:
        JUMPOUT(0x22A69FD60);
      }
    }
    else
    {
      unsigned int v11 = (void *)MEMORY[0x263F8EE78];
    }
    uint64_t v13 = MEMORY[0x22A69FD60](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x22A69FD60]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_2288FB99C(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7 = result;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    id result = sub_2288FB3D8(result, a3, a4);
    unint64_t v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    id result = sub_2288FB3D8(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0) {
      return (a2 >> 16) - (v7 >> 16);
    }
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  unint64_t v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    unint64_t v10 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v10 < v7 >> 16)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v10 < a2 >> 16)
  {
LABEL_17:
    __break(1u);
    return result;
  }

  return sub_228915DC0();
}

unint64_t sub_2288FBA9C(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    void v9[2] = a6;
    void v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    id result = v12;
    if (v17 == v15) {
      id result = sub_2288FB3D8(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      id result = sub_228915DD0();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        id result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          id result = sub_228916370();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    id result = sub_2288FB3D8(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_228915DA0();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

char *sub_2288FBCB0(void *(*a1)(uint64_t *__return_ptr, char *, char *))
{
  v16[2] = *MEMORY[0x263EF8340];
  uint64_t v4 = *v1;
  unint64_t v3 = v1[1];
  uint64_t v5 = v1;
  switch(v3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)unint64_t v1 = xmmword_2289239D0;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v11 = v4 >> 32;
      if (isUniquelyReferenced_nonNull_native) {
        goto LABEL_16;
      }
      if (v11 < (int)v4) {
        goto LABEL_23;
      }
      if (sub_228914F00() && __OFSUB__((int)v4, sub_228914F30())) {
        goto LABEL_24;
      }
      sub_228914F40();
      swift_allocObject();
      uint64_t v13 = sub_228914EE0();
      swift_release();
      uint64_t v9 = v13;
      uint64_t v11 = v4 >> 32;
LABEL_16:
      if (v11 < (int)v4)
      {
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
      }
      id result = sub_2288FC09C((int)v4, v11, a1);
      unint64_t v12 = v9 | 0x4000000000000000;
      if (v2)
      {
        *uint64_t v5 = v4;
        goto LABEL_19;
      }
      *uint64_t v5 = v4;
      v5[1] = v12;
      break;
    case 2uLL:
      uint64_t v14 = *v1;
      uint64_t v15 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      sub_2289151D0();
      id result = sub_2288FC09C(*(void *)(v14 + 16), *(void *)(v14 + 24), a1);
      unint64_t v12 = v15 | 0x8000000000000000;
      if (v2)
      {
        *unint64_t v1 = v14;
LABEL_19:
        v5[1] = v12;
      }
      else
      {
        *unint64_t v1 = v14;
        v1[1] = v12;
      }
      break;
    case 3uLL:
      memset(v16, 0, 15);
      id result = (char *)a1(&v14, (char *)v16, (char *)v16);
      if (!v2) {
        return (char *)v14;
      }
      return result;
    default:
      v16[0] = *v1;
      LOWORD(v16[1]) = v3;
      BYTE2(v16[1]) = BYTE2(v3);
      BYTE3(v16[1]) = BYTE3(v3);
      BYTE4(v16[1]) = BYTE4(v3);
      BYTE5(v16[1]) = BYTE5(v3);
      BYTE6(v16[1]) = BYTE6(v3);
      id result = (char *)a1(&v14, (char *)v16, (char *)v16 + BYTE6(v3));
      if (!v2) {
        id result = (char *)v14;
      }
      unint64_t v8 = LODWORD(v16[1]) | ((unint64_t)BYTE4(v16[1]) << 32) | ((unint64_t)BYTE5(v16[1]) << 40) | ((unint64_t)BYTE6(v16[1]) << 48);
      *unint64_t v1 = v16[0];
      v1[1] = v8;
      return result;
  }
  return result;
}

unsigned char *sub_2288FBFB4@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    id result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    id result = (unsigned char *)sub_2288FCD4C(result, a2);
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    id result = (unsigned char *)sub_2288FCE10((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    id result = (unsigned char *)sub_2288FCE8C((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

void *sub_2288FC02C(void *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    id result = a1(&v6, a3, a4 - a3);
    if (v4) {
      return result;
    }
    return (void *)v6;
  }
  id result = a1(&v6, 0, 0);
  if (!v4) {
    return (void *)v6;
  }
  return result;
}

char *sub_2288FC09C(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  id result = (char *)sub_228914F00();
  if (!result) {
    goto LABEL_12;
  }
  uint64_t v8 = result;
  id result = (char *)sub_228914F30();
  uint64_t v9 = a1 - (void)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v12 = sub_228914F20();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  id result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3) {
    return (char *)v14;
  }
  return result;
}

uint64_t sub_2288FC150(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t result = 0;
    goto LABEL_8;
  }
  if ((a4 & 0x2000000000000000) != 0)
  {
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v11 = v14;
  }
  else if ((a3 & 0x1000000000000000) != 0)
  {
    uint64_t v11 = (void *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    uint64_t v11 = (void *)sub_228916370();
  }
  uint64_t result = sub_2288FC440((uint64_t)v11, a1, a2, a3, a4, a5);
  if (!v5)
  {
    char v15 = v13 & 1;
LABEL_8:
    LOBYTE(v14[0]) = (a4 & 0x1000000000000000) != 0;
  }
  return result;
}

uint64_t sub_2288FC224(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_228914F00();
  if (!result || (uint64_t result = sub_228914F30(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_228914F20();
      sub_228915B80();
      sub_2288FDADC(&qword_26826A550, MEMORY[0x263F047F8]);
      return sub_228915B00();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2288FC304@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_228916330();
    if ((v3 & 1) == 0)
    {
      uint64_t v4 = result;
      uint64_t result = swift_bridgeObjectRelease();
      *a2 = 0;
      a2[1] = 0xE000000000000000;
      a2[2] = 15;
      a2[3] = v4;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_2288FC390(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v4 = 7;
  if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
    uint64_t v4 = 11;
  }
  unint64_t v5 = v4 | (v3 << 16);
  uint64_t result = sub_228915D40();
  if (v6) {
    uint64_t result = v5;
  }
  if (4 * v3 < result >> 14) {
    goto LABEL_14;
  }

  return sub_228915E10();
}

uint64_t sub_2288FC440(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  unint64_t v10 = a2;
  uint64_t v11 = result;
  uint64_t v12 = (a4 >> 59) & 1;
  if ((a5 & 0x1000000000000000) == 0) {
    LOBYTE(v12) = 1;
  }
  uint64_t v13 = 4 << v12;
  unint64_t v14 = a2 & 0xC;
  if (v14 == 4 << v12)
  {
    uint64_t result = sub_2288FB3D8(a2, a4, a5);
    a2 = result;
    if ((a5 & 0x1000000000000000) == 0)
    {
LABEL_5:
      int64_t v15 = a2 >> 16;
      if (v14 != v13) {
        goto LABEL_6;
      }
      goto LABEL_14;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
    goto LABEL_5;
  }
  unint64_t v16 = a4 & 0xFFFFFFFFFFFFLL;
  if ((a5 & 0x2000000000000000) != 0) {
    unint64_t v16 = HIBYTE(a5) & 0xF;
  }
  if (v16 < a2 >> 16) {
    goto LABEL_95;
  }
  uint64_t result = sub_228915DC0();
  int64_t v15 = result;
  if (v14 == v13)
  {
LABEL_14:
    uint64_t result = sub_2288FB3D8(v10, a4, a5);
    unint64_t v10 = result;
  }
LABEL_6:
  if ((a3 & 0xC) == v13)
  {
    uint64_t result = sub_2288FB3D8(a3, a4, a5);
    a3 = result;
    if ((a5 & 0x1000000000000000) == 0) {
      goto LABEL_8;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
LABEL_8:
    uint64_t result = (a3 >> 16) - (v10 >> 16);
    goto LABEL_21;
  }
  unint64_t v17 = HIBYTE(a5) & 0xF;
  if ((a5 & 0x2000000000000000) == 0) {
    unint64_t v17 = a4 & 0xFFFFFFFFFFFFLL;
  }
  if (v17 < v10 >> 16) {
    goto LABEL_91;
  }
  if (v17 < a3 >> 16)
  {
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  uint64_t result = sub_228915DC0();
LABEL_21:
  int64_t v18 = v15 + result;
  if (__OFADD__(v15, result))
  {
    __break(1u);
    goto LABEL_90;
  }
  if (v18 < v15)
  {
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  char v19 = (unsigned __int8 *)(v11 + v15);
  if (!v11) {
    char v19 = 0;
  }
  int v20 = *v19;
  if (v20 == 43)
  {
    if (result >= 1)
    {
      if (result != 1)
      {
        unsigned __int8 v31 = a6 + 48;
        unsigned __int8 v32 = a6 + 55;
        unsigned __int8 v33 = a6 + 87;
        if (a6 > 10)
        {
          unsigned __int8 v31 = 58;
        }
        else
        {
          unsigned __int8 v33 = 97;
          unsigned __int8 v32 = 65;
        }
        if (v19)
        {
          uint64_t v24 = 0;
          unint64_t v34 = v19 + 1;
          uint64_t v35 = result - 1;
          do
          {
            unsigned int v36 = *v34;
            if (v36 < 0x30 || v36 >= v31)
            {
              if (v36 < 0x41 || v36 >= v32)
              {
                uint64_t v29 = 0;
                if (v36 < 0x61 || v36 >= v33) {
                  return v29;
                }
                char v37 = -87;
              }
              else
              {
                char v37 = -55;
              }
            }
            else
            {
              char v37 = -48;
            }
            uint64_t v38 = v24 * a6;
            if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63) {
              return 0;
            }
            uint64_t v24 = v38 + (v36 + v37);
            if (__OFADD__(v38, (v36 + v37))) {
              return 0;
            }
            ++v34;
            --v35;
          }
          while (v35);
          return v24;
        }
        return 0;
      }
      return 0;
    }
    goto LABEL_94;
  }
  if (v20 != 45)
  {
    if (v18 != v15)
    {
      unsigned __int8 v39 = a6 + 48;
      unsigned __int8 v40 = a6 + 55;
      unsigned __int8 v41 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v39 = 58;
      }
      else
      {
        unsigned __int8 v41 = 97;
        unsigned __int8 v40 = 65;
      }
      if (v19)
      {
        uint64_t v42 = 0;
        do
        {
          unsigned int v43 = *v19;
          if (v43 < 0x30 || v43 >= v39)
          {
            if (v43 < 0x41 || v43 >= v40)
            {
              uint64_t v29 = 0;
              if (v43 < 0x61 || v43 >= v41) {
                return v29;
              }
              char v44 = -87;
            }
            else
            {
              char v44 = -55;
            }
          }
          else
          {
            char v44 = -48;
          }
          uint64_t v45 = v42 * a6;
          if ((unsigned __int128)(v42 * (__int128)a6) >> 64 != (v42 * a6) >> 63) {
            return 0;
          }
          uint64_t v42 = v45 + (v43 + v44);
          if (__OFADD__(v45, (v43 + v44))) {
            return 0;
          }
          ++v19;
          --result;
        }
        while (result);
        return v45 + (v43 + v44);
      }
      return 0;
    }
    return 0;
  }
  if (result >= 1)
  {
    if (result != 1)
    {
      unsigned __int8 v21 = a6 + 48;
      unsigned __int8 v22 = a6 + 55;
      unsigned __int8 v23 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v21 = 58;
      }
      else
      {
        unsigned __int8 v23 = 97;
        unsigned __int8 v22 = 65;
      }
      if (v19)
      {
        uint64_t v24 = 0;
        unsigned __int8 v25 = v19 + 1;
        uint64_t v26 = result - 1;
        while (1)
        {
          unsigned int v27 = *v25;
          if (v27 < 0x30 || v27 >= v21)
          {
            if (v27 < 0x41 || v27 >= v22)
            {
              uint64_t v29 = 0;
              if (v27 < 0x61 || v27 >= v23) {
                return v29;
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          uint64_t v30 = v24 * a6;
          if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63) {
            return 0;
          }
          uint64_t v24 = v30 - (v27 + v28);
          if (__OFSUB__(v30, (v27 + v28))) {
            return 0;
          }
          ++v25;
          if (!--v26) {
            return v24;
          }
        }
      }
      return 0;
    }
    return 0;
  }
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
  return result;
}

BOOL _s15ProximityReader9UtilitiesC17isDeviceSupportedSbyFZ_0()
{
  uint64_t v47 = *MEMORY[0x263EF8340];
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)v42 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  bzero(&v46, 0x500uLL);
  uname(&v46);
  uint64_t v3 = sub_228915D70();
  unint64_t v5 = v4;
  if (qword_268267F18 != -1) {
    swift_once();
  }
  uint64_t v6 = __swift_project_value_buffer(v0, (uint64_t)qword_268283DB0);
  sub_22883741C(v6, (uint64_t)v2, (uint64_t *)&unk_2682684D0);
  uint64_t v7 = sub_2289155C0();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v2, 1, v7) == 1)
  {
    sub_2288110C0((uint64_t)v2, (uint64_t *)&unk_2682684D0);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    uint64_t v9 = sub_2289155A0();
    os_log_type_t v10 = sub_228916070();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = swift_slowAlloc();
      uint64_t v43 = v3;
      uint64_t v12 = (uint8_t *)v11;
      uint64_t v13 = swift_slowAlloc();
      *(void *)v46.sysname = v13;
      *(_DWORD *)uint64_t v12 = 136315138;
      v42[1] = v12 + 4;
      swift_bridgeObjectRetain();
      uint64_t v44 = sub_2288AB2C4(v43, v5, (uint64_t *)v46.sysname);
      sub_2289161F0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_228806000, v9, v10, "model: %s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22A6A1090](v13, -1, -1);
      unint64_t v14 = v12;
      uint64_t v3 = v43;
      MEMORY[0x22A6A1090](v14, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v2, v7);
  }
  *(void *)v46.sysname = v3;
  *(void *)&v46.sysname[8] = v5;
  uint64_t v44 = 0x656E6F685069;
  unint64_t v45 = 0xE600000000000000;
  sub_2288FE0C0();
  sub_2288FE114();
  if ((sub_228915BF0() & 1) == 0) {
    goto LABEL_25;
  }
  if (sub_228915D20() <= 6) {
    goto LABEL_25;
  }
  unint64_t v15 = sub_2288FC390(6uLL, v3, v5);
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  *(void *)v46.sysname = v15;
  *(void *)&v46.sysname[8] = v17;
  *(void *)&v46.sysname[16] = v19;
  *(void *)&v46.sysname[24] = v21;
  sub_2288FE168();
  unsigned __int8 v22 = (void *)sub_228916240();
  swift_bridgeObjectRelease();
  if (v22[2] != 2) {
    goto LABEL_25;
  }
  uint64_t v23 = v22[4];
  uint64_t v24 = v22[5];
  if (!((v24 ^ (unint64_t)v23) >> 14)) {
    goto LABEL_25;
  }
  unint64_t v26 = v22[6];
  unint64_t v25 = v22[7];
  uint64_t v27 = sub_2288FC150(v22[4], v22[5], v26, v25, 10);
  if ((v28 & 0x100) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = (uint64_t)sub_2288FB454(v23, v24, v26, v25, 10);
    char v31 = v30;
    swift_bridgeObjectRelease();
    if (v31) {
      goto LABEL_25;
    }
  }
  else
  {
    if (v28) {
      goto LABEL_25;
    }
    uint64_t v29 = v27;
  }
  if (v22[2] < 2uLL)
  {
    __break(1u);
    goto LABEL_25;
  }
  unint64_t v32 = v22[8];
  unint64_t v33 = v22[9];
  unint64_t v35 = v22[10];
  unint64_t v34 = v22[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (!((v33 ^ v32) >> 14))
  {
LABEL_25:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v36 = sub_2288FC150(v32, v33, v35, v34, 10);
  if ((v37 & 0x100) != 0) {
    uint64_t v36 = (uint64_t)sub_2288FB454(v32, v33, v35, v34, 10);
  }
  uint64_t v38 = v36;
  char v39 = v37;
  swift_bridgeObjectRelease();
  if (v39) {
    return 0;
  }
  if (v29 > 11) {
    return 1;
  }
  return v29 == 11 && v38 > 1;
}

uint64_t sub_2288FCD4C(unsigned char *__src, unsigned char *a2)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_2288FCE10(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_228914F40();
  swift_allocObject();
  uint64_t result = sub_228914EF0();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_228915200();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_2288FCE8C(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_228914F40();
  swift_allocObject();
  uint64_t result = sub_228914EF0();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0) {
    return v2 << 32;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_2288FCF10(uint64_t a1)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B338);
  uint64_t v10 = sub_2288592CC(&qword_26826B340, &qword_26826B338);
  v8[0] = a1;
  uint64_t v2 = __swift_project_boxed_opaque_existential_1(v8, v9);
  uint64_t v3 = (unsigned char *)(*v2 + 32);
  unint64_t v4 = &v3[*(void *)(*v2 + 16)];
  swift_bridgeObjectRetain();
  sub_2288FBFB4(v3, v4, &v7);
  uint64_t v5 = v7;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v5;
}

unsigned char *sub_2288FCFD0(unsigned char *result, unsigned char *a2)
{
  if (result)
  {
    uint64_t v2 = a2 - result;
    if (a2 == result)
    {
      return 0;
    }
    else if (v2 <= 14)
    {
      return (unsigned char *)sub_2288FCD4C(result, a2);
    }
    else if ((unint64_t)v2 >= 0x7FFFFFFF)
    {
      return (unsigned char *)sub_2288FCE10((uint64_t)result, (uint64_t)a2);
    }
    else
    {
      return (unsigned char *)sub_2288FCE8C((uint64_t)result, (uint64_t)a2);
    }
  }
  return result;
}

uint64_t sub_2288FD034(uint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    if (result <= 14)
    {
      if (result < 0) {
        __break(1u);
      }
      else {
        return 0;
      }
    }
    else
    {
      sub_228914F40();
      swift_allocObject();
      sub_228914F10();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_228915200();
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = 0;
        *(void *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

uint64_t sub_2288FD0D4()
{
  return sub_2288FD370();
}

id sub_2288FD0E4@<X0>(char *a1@<X8>)
{
  return sub_2288F5FA0(a1);
}

uint64_t sub_2288FD100(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  *(void *)&double v3 = MEMORY[0x270FA5388](v2).n128_u64[0];
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v6 = objc_msgSend(a1, sel_status, v3);
  unsigned int v7 = objc_msgSend(a1, sel_isScreening);
  if (qword_268267F18 != -1) {
    swift_once();
  }
  uint64_t v8 = __swift_project_value_buffer(v2, (uint64_t)qword_268283DB0);
  sub_22883741C(v8, (uint64_t)v5, (uint64_t *)&unk_2682684D0);
  uint64_t v9 = sub_2289155C0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v5, 1, v9) == 1)
  {
    sub_2288110C0((uint64_t)v5, (uint64_t *)&unk_2682684D0);
  }
  else
  {
    uint64_t v11 = sub_2289155A0();
    os_log_type_t v12 = sub_228916070();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 67109376;
      v15[3] = v6 == 1;
      sub_2289161F0();
      *(_WORD *)(v13 + 8) = 1024;
      v15[2] = v7;
      sub_2289161F0();
      _os_log_impl(&dword_228806000, v11, v12, "Call: isActive [ %{BOOL}d ] isScreening [ %{BOOL}d ]", (uint8_t *)v13, 0xEu);
      MEMORY[0x22A6A1090](v13, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v5, v9);
  }
  if (v6 == 1) {
    return v7;
  }
  else {
    return 0;
  }
}

uint64_t sub_2288FD360()
{
  return sub_2288FD370();
}

uint64_t sub_2288FD370()
{
  uint64_t result = CPSharedResourcesDirectory();
  if (result)
  {
    unint64_t v1 = (void *)result;
    uint64_t v2 = sub_228915C70();

    sub_228915D60();
    sub_228916320();
    swift_bridgeObjectRelease();
    sub_228915D60();
    sub_228915D60();
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2288FD444()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

id sub_2288FD47C()
{
  return sub_2288F85C8(*(void (**)(uint64_t, __n128))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), 0xD000000000000014, 0x800000022892D380, "Could not generate URL for BT settings");
}

uint64_t sub_2288FD4BC()
{
  return sub_2288F8954(*(uint64_t (**)(void))(v0 + 16), *(void *)(v0 + 24), "Bluetooth Required Alert was dismissed");
}

uint64_t sub_2288FD4E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v86 = a7;
  uint64_t v87 = a8;
  uint64_t v82 = a5;
  uint64_t v83 = a6;
  uint64_t v79 = a3;
  uint64_t v80 = a4;
  uint64_t v88 = a17;
  uint64_t v84 = a13;
  uint64_t v85 = a16;
  uint64_t v81 = a12;
  uint64_t v77 = a14;
  uint64_t v78 = a15;
  uint64_t v75 = a2;
  uint64_t v76 = a11;
  uint64_t v73 = a1;
  uint64_t v74 = a10;
  uint64_t v71 = a18;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268D68);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(void *)(v23 + 64);
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v70 = (uint64_t)&v66 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = (char *)&v66 - v26;
  uint64_t v69 = (uint64_t)&v66 - v26;
  MEMORY[0x270FA5388](v28);
  char v30 = (char *)&v66 - v29;
  uint64_t v68 = (uint64_t)&v66 - v29;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268510);
  MEMORY[0x270FA5388](v31 - 8);
  unint64_t v33 = (char *)&v66 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = v33;
  uint64_t v34 = sub_228915F70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v33, 1, 1, v34);
  sub_22883741C(a19, (uint64_t)v30, &qword_268268D68);
  sub_22883741C(a20, (uint64_t)v27, &qword_268268D68);
  sub_22883741C(a21, (uint64_t)&v66 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_268268D68);
  uint64_t v35 = *(unsigned __int8 *)(v23 + 80);
  uint64_t v36 = (v35 + 48) & ~v35;
  uint64_t v37 = (v24 + v35 + v36) & ~v35;
  uint64_t v38 = (v24 + v35 + v37) & ~v35;
  unint64_t v39 = (v24 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v40 = (v39 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v41 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v42 = (v41 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v43 = (v42 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v44 = (v43 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v66 = (v44 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v67 = (v66 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v45 = swift_allocObject();
  *(void *)(v45 + 16) = 0;
  *(void *)(v45 + 24) = 0;
  *(double *)(v45 + 32) = a9;
  *(void *)(v45 + 40) = v71;
  sub_2288A5988(v68, v45 + v36);
  sub_2288A5988(v69, v45 + v37);
  sub_2288A5988(v70, v45 + v38);
  utsname v46 = (void *)(v45 + v39);
  uint64_t v47 = v75;
  *utsname v46 = v73;
  v46[1] = v47;
  os_log_type_t v48 = (void *)(v45 + v40);
  uint64_t v49 = v80;
  void *v48 = v79;
  v48[1] = v49;
  uint64_t v50 = (void *)(v45 + v41);
  uint64_t v51 = v83;
  void *v50 = v82;
  v50[1] = v51;
  uint64_t v52 = (void *)(v45 + v42);
  uint64_t v53 = v76;
  void *v52 = v74;
  v52[1] = v53;
  uint64_t v54 = (void *)(v45 + v43);
  uint64_t v55 = v78;
  *uint64_t v54 = v77;
  v54[1] = v55;
  uint64_t v56 = (uint64_t *)(v45 + v44);
  uint64_t v58 = v86;
  uint64_t v57 = v87;
  *uint64_t v56 = v86;
  v56[1] = v57;
  int v59 = (uint64_t *)(v45 + v66);
  uint64_t v60 = v81;
  uint64_t v62 = v84;
  uint64_t v61 = v85;
  uint64_t *v59 = v81;
  v59[1] = v62;
  uint64_t v63 = (uint64_t *)(v45 + v67);
  uint64_t v64 = v88;
  uint64_t *v63 = v61;
  v63[1] = v64;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2288A4930(v58);
  sub_2288A4930(v60);
  sub_2288A4930(v61);
  sub_228818D10((uint64_t)v72, (uint64_t)&unk_26826B328, v45);
  return swift_release();
}

id sub_2288FD8B8()
{
  return sub_2288F85C8(*(void (**)(uint64_t, __n128))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), 0xD000000000000020, 0x800000022892D350, "Could not generate URL for NFC settings");
}

uint64_t sub_2288FD8F8()
{
  return sub_2288F8954(*(uint64_t (**)(void))(v0 + 16), *(void *)(v0 + 24), "NFC Required Alert was dismissed");
}

id sub_2288FD91C()
{
  return sub_2288F85C8(*(void (**)(uint64_t, __n128))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), 0xD000000000000033, 0x800000022892D310, "Could not generate URL for iCloud two factor settings");
}

uint64_t sub_2288FD95C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2288FD994()
{
  return sub_2288F8954(*(uint64_t (**)(void))(v0 + 16), *(void *)(v0 + 24), "iCloud two factor auth alert was dismissed");
}

id sub_2288FD9B8()
{
  return sub_2288F85C8(*(void (**)(uint64_t, __n128))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), 0xD000000000000031, 0x800000022892D2D0, "Could not generate URL for passcode settings");
}

uint64_t sub_2288FD9F8()
{
  return sub_2288F8954(*(uint64_t (**)(void))(v0 + 16), *(void *)(v0 + 24), "Passcode alert was dismissed");
}

id sub_2288FDA1C()
{
  return sub_2288F85C8(*(void (**)(uint64_t, __n128))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), 0x6F723A7366657270, 0xEF544F4F523D746FLL, "Could not generate URL for iCloud sign in settings");
}

uint64_t sub_2288FDA64()
{
  return sub_2288F8954(*(uint64_t (**)(void))(v0 + 16), *(void *)(v0 + 24), "iCloud signed out dialog was dismissed");
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t type metadata accessor for Utilities()
{
  return self;
}

uint64_t method lookup function for Utilities(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for Utilities);
}

uint64_t sub_2288FDADC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_2288FDB24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = *(uint64_t **)(v3 + 16);
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  v13[0] = v7;
  v13[1] = v6;
  v12[2] = v13;
  uint64_t result = sub_2288FC02C((void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_2288FDBA8, (uint64_t)v12, a1, a2);
  *a3 = result;
  a3[1] = v9;
  a3[2] = v10;
  a3[3] = v11;
  return result;
}

uint64_t sub_2288FDB90(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_2288FDBA8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_2288FC304(a1, a2);
}

uint64_t sub_2288FDBC8()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268268D68) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 48) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = (v4 + v2 + v3) & ~v2;
  uint64_t v6 = (v4 + v2 + v5) & ~v2;
  unint64_t v7 = (((((((((((v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 23) & 0xFFFFFFFFFFFFFFF8)
      + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  uint64_t v8 = v0 + v3;
  uint64_t v9 = sub_2289151B0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v11(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  unint64_t v16 = v7;
  unint64_t v12 = v7 + 23;
  if (!v11(v0 + v5, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0 + v5, v9);
  }
  unint64_t v13 = v12 & 0xFFFFFFFFFFFFFFF8;
  if (!v11(v0 + v6, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0 + v6, v9);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v16)) {
    swift_release();
  }
  unint64_t v14 = (v13 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v0 + v13)) {
    swift_release();
  }
  if (*(void *)(v0 + v14)) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, v14 + 16, v2 | 7);
}

uint64_t sub_2288FDE78(uint64_t a1)
{
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268268D68) - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = (v4 + v5 + v3) & ~v3;
  uint64_t v7 = (v6 + v5 + v3) & ~v3;
  uint64_t v17 = *((void *)v1 + 2);
  uint64_t v16 = *((void *)v1 + 3);
  double v8 = v1[4];
  uint64_t v15 = *((void *)v1 + 5);
  uint64_t v12 = (uint64_t)v1 + v4;
  uint64_t v11 = (uint64_t)v1 + v6;
  uint64_t v13 = (uint64_t)v1 + v7;
  uint64_t v14 = *(void *)((char *)v1 + ((v5 + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v18 + 16) = v9;
  *uint64_t v9 = v18;
  v9[1] = sub_228812B70;
  return sub_2288F70E0(v8, a1, v17, v16, v15, v12, v11, v13, v14);
}

unint64_t sub_2288FE0C0()
{
  unint64_t result = qword_26826B348;
  if (!qword_26826B348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B348);
  }
  return result;
}

unint64_t sub_2288FE114()
{
  unint64_t result = qword_26826B350;
  if (!qword_26826B350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B350);
  }
  return result;
}

unint64_t sub_2288FE168()
{
  unint64_t result = qword_26826B358;
  if (!qword_26826B358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B358);
  }
  return result;
}

unint64_t sub_2288FE1BC()
{
  unint64_t result = qword_26826B360;
  if (!qword_26826B360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B360);
  }
  return result;
}

void __swiftcall ReadResult.getPaymentData()(ProximityReader::PaymentCardReadResult_optional *__return_ptr retstr)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_268267EF8 != -1) {
    swift_once();
  }
  uint64_t v7 = __swift_project_value_buffer(v4, (uint64_t)qword_268283D50);
  sub_22880AB38(v7, (uint64_t)v6);
  uint64_t v8 = sub_2289155C0();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    sub_22880ABA0((uint64_t)v6);
  }
  else
  {
    uint64_t v10 = v2;
    uint64_t v11 = sub_2289155A0();
    os_log_type_t v12 = sub_228916040();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = (void *)swift_slowAlloc();
      uint64_t v36 = v13;
      *(_DWORD *)uint64_t v13 = 138412290;
      uint64_t v34 = v13 + 4;
      uint64_t v14 = *(void *)&v10[OBJC_IVAR____TtC15ProximityReader10ReadResult_readOutcome];
      sub_2288FFAC4();
      swift_allocError();
      *uint64_t v15 = v14;
      uint64_t v16 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v37 = v16;
      sub_2289161F0();
      uint64_t v17 = v35;
      *uint64_t v35 = v16;

      os_log_type_t v18 = v12;
      uint64_t v19 = v36;
      _os_log_impl(&dword_228806000, v11, v18, "PaymentCardReadResult - %@", v36, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_268269A10);
      swift_arrayDestroy();
      MEMORY[0x22A6A1090](v17, -1, -1);
      MEMORY[0x22A6A1090](v19, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  uint64_t v21 = *(void *)&v2[OBJC_IVAR____TtC15ProximityReader10ReadResult_cardReaderBlob];
  unint64_t v20 = *(void *)&v2[OBJC_IVAR____TtC15ProximityReader10ReadResult_cardReaderBlob + 8];
  uint64_t v22 = HIBYTE(v20) & 0xF;
  if ((v20 & 0x2000000000000000) == 0) {
    uint64_t v22 = v21 & 0xFFFFFFFFFFFFLL;
  }
  if (!v22)
  {
    uint64_t v24 = 0;
    uint64_t v23 = 0;
    uint64_t v21 = 0;
    unint64_t v20 = 0;
    uint64_t v26 = 0;
    uint64_t v25 = 0;
    uint64_t v28 = 0;
    unint64_t v27 = 0;
    int v30 = 0;
LABEL_26:
    retstr->value.id._uint64_t countAndFlagsBits = v24;
    retstr->value.id._object = v23;
    retstr->value.paymentCardData.value._uint64_t countAndFlagsBits = v21;
    retstr->value.paymentCardData.value._object = (void *)v20;
    retstr->value.generalCardData.value._uint64_t countAndFlagsBits = v26;
    retstr->value.generalCardData.value._object = v25;
    retstr->value.applicationTypeIdentifier.value._uint64_t countAndFlagsBits = v28;
    retstr->value.applicationTypeIdentifier.value._object = (void *)v27;
    *(_WORD *)&retstr->value.outcome = v30;
    retstr->value.Swift::Bool isPINFallback = BYTE2(v30);
    return;
  }
  uint64_t v24 = *(void *)&v2[OBJC_IVAR____TtC15ProximityReader10ReadResult_transactionId];
  uint64_t v23 = *(void **)&v2[OBJC_IVAR____TtC15ProximityReader10ReadResult_transactionId + 8];
  uint64_t v26 = *(void *)&v2[OBJC_IVAR____TtC15ProximityReader10ReadResult_generalCardData];
  uint64_t v25 = *(void **)&v2[OBJC_IVAR____TtC15ProximityReader10ReadResult_generalCardData + 8];
  uint64_t v28 = *(void *)&v2[OBJC_IVAR____TtC15ProximityReader10ReadResult_payAppType];
  unint64_t v27 = *(void *)&v2[OBJC_IVAR____TtC15ProximityReader10ReadResult_payAppType + 8];
  uint64_t v29 = HIBYTE(v27) & 0xF;
  if ((v27 & 0x2000000000000000) == 0) {
    uint64_t v29 = v28 & 0xFFFFFFFFFFFFLL;
  }
  if (v29)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v28 = 0;
    unint64_t v27 = 0;
  }
  if (*(void *)&v2[OBJC_IVAR____TtC15ProximityReader10ReadResult_readOutcome] < 3uLL)
  {
    if (v2[OBJC_IVAR____TtC15ProximityReader10ReadResult_pinBypassed]) {
      int v31 = 256;
    }
    else {
      int v31 = 0;
    }
    unsigned int v32 = v31 & 0xFFFFFF00 | *(void *)&v2[OBJC_IVAR____TtC15ProximityReader10ReadResult_readOutcome];
    if (v2[OBJC_IVAR____TtC15ProximityReader10ReadResult_isPINFallback]) {
      int v33 = 0x10000;
    }
    else {
      int v33 = 0;
    }
    int v30 = v32 | v33;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_26;
  }
  uint64_t v37 = *(void *)&v2[OBJC_IVAR____TtC15ProximityReader10ReadResult_readOutcome];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_228916690();
  __break(1u);
}

ProximityReader::VASReadResult __swiftcall ReadResult.getVASData()()
{
  uint64_t v2 = v0;
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC15ProximityReader10ReadResult_transactionId);
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC15ProximityReader10ReadResult_transactionId + 8);
  unint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC15ProximityReader10ReadResult_vasEntries);
  swift_bridgeObjectRetain();
  uint64_t D0VGSayACGFZ_0 = _s15ProximityReader12VASReadEntryC11externalizeySayAA0C6ResultV04ReadD0VGSayACGFZ_0(v5);
  *uint64_t v2 = v4;
  v2[1] = v3;
  v2[2] = D0VGSayACGFZ_0;
  result.entries._rawValue = v8;
  result.id._object = v7;
  result.id._uint64_t countAndFlagsBits = D0VGSayACGFZ_0;
  return result;
}

uint64_t ReadResult.dataType.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC15ProximityReader10ReadResult_dataType);
}

uint64_t ReadResult.transactionId.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15ProximityReader10ReadResult_transactionId);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ReadResult.cardReaderBlob.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15ProximityReader10ReadResult_cardReaderBlob);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ReadResult.generalCardData.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15ProximityReader10ReadResult_generalCardData);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ReadResult.payAppType.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15ProximityReader10ReadResult_payAppType);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ReadResult.vasEntries.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ReadResult.readOutcome.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC15ProximityReader10ReadResult_readOutcome);
}

uint64_t ReadResult.pinBypassed.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ProximityReader10ReadResult_pinBypassed);
}

uint64_t ReadResult.isPINFallback.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ProximityReader10ReadResult_isPINFallback);
}

uint64_t ReadResult.cardEffectiveState.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC15ProximityReader10ReadResult_cardEffectiveState);
}

uint64_t ReadResult.cardExpirationState.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC15ProximityReader10ReadResult_cardExpirationState);
}

id ReadResult.__allocating_init(dataType:transactionId:cardReaderBlob:generalCardData:payAppType:vasEntries:readOutcome:pinBypassed:isPINFallback:cardEffectiveState:cardExpirationState:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, long long a9, uint64_t a10, char a11, char a12, uint64_t a13, char a14, uint64_t a15, char a16)
{
  id v19 = objc_allocWithZone(v16);
  return ReadResult.init(dataType:transactionId:cardReaderBlob:generalCardData:payAppType:vasEntries:readOutcome:pinBypassed:isPINFallback:cardEffectiveState:cardExpirationState:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, *((uint64_t *)&a9 + 1), a10, a11, a12, a13, a14 & 1, a15, a16 & 1);
}

id ReadResult.init(dataType:transactionId:cardReaderBlob:generalCardData:payAppType:vasEntries:readOutcome:pinBypassed:isPINFallback:cardEffectiveState:cardExpirationState:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, char a13, uint64_t a14, char a15, uint64_t a16, char a17)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v17[OBJC_IVAR____TtC15ProximityReader10ReadResult_dataType] = a1;
  uint64_t v26 = &v17[OBJC_IVAR____TtC15ProximityReader10ReadResult_transactionId];
  *uint64_t v26 = a2;
  v26[1] = a3;
  if (a5) {
    uint64_t v27 = a4;
  }
  else {
    uint64_t v27 = 0;
  }
  unint64_t v28 = 0xE000000000000000;
  if (a5) {
    unint64_t v29 = a5;
  }
  else {
    unint64_t v29 = 0xE000000000000000;
  }
  int v30 = &v17[OBJC_IVAR____TtC15ProximityReader10ReadResult_cardReaderBlob];
  void *v30 = v27;
  v30[1] = v29;
  if (a7) {
    uint64_t v31 = a6;
  }
  else {
    uint64_t v31 = 0;
  }
  if (a7) {
    unint64_t v28 = a7;
  }
  unsigned int v32 = &v17[OBJC_IVAR____TtC15ProximityReader10ReadResult_generalCardData];
  *unsigned int v32 = v31;
  v32[1] = v28;
  int v33 = &v17[OBJC_IVAR____TtC15ProximityReader10ReadResult_payAppType];
  void *v33 = a8;
  v33[1] = a9;
  uint64_t v34 = MEMORY[0x263F8EE78];
  if (a10) {
    uint64_t v34 = a10;
  }
  *(void *)&v17[OBJC_IVAR____TtC15ProximityReader10ReadResult_vasEntries] = v34;
  *(void *)&v17[OBJC_IVAR____TtC15ProximityReader10ReadResult_readOutcome] = a11;
  v17[OBJC_IVAR____TtC15ProximityReader10ReadResult_pinBypassed] = a12;
  v17[OBJC_IVAR____TtC15ProximityReader10ReadResult_isPINFallback] = a13;
  uint64_t v35 = &v17[OBJC_IVAR____TtC15ProximityReader10ReadResult_cardEffectiveState];
  *(void *)uint64_t v35 = a14;
  v35[8] = a15 & 1;
  uint64_t v36 = &v17[OBJC_IVAR____TtC15ProximityReader10ReadResult_cardExpirationState];
  *(void *)uint64_t v36 = a16;
  v36[8] = a17 & 1;
  v39.receiver = v17;
  v39.super_class = ObjectType;
  return objc_msgSendSuper2(&v39, sel_init, a11);
}

unint64_t ReadOutcomeInternal.externalize.getter@<X0>(unint64_t result@<X0>, unsigned char *a2@<X8>)
{
  if (result >= 3)
  {
    ProximityReader::VASReadResult result = sub_228916690();
    __break(1u);
  }
  else
  {
    *a2 = result;
  }
  return result;
}

uint64_t static ReadResult.supportsSecureCoding.getter()
{
  return 1;
}

Swift::Void __swiftcall ReadResult.encode(with:)(NSCoder with)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC15ProximityReader10ReadResult_dataType);
  uint64_t v4 = (void *)sub_228915C40();
  [(objc_class *)with.super.isa encodeInteger:v3 forKey:v4];

  unint64_t v5 = (void *)sub_228915C40();
  uint64_t v6 = (void *)sub_228915C40();
  [(objc_class *)with.super.isa encodeObject:v5 forKey:v6];

  uint64_t v7 = (void *)sub_228915C40();
  uint64_t v8 = (void *)sub_228915C40();
  [(objc_class *)with.super.isa encodeObject:v7 forKey:v8];

  uint64_t v9 = (void *)sub_228915C40();
  uint64_t v10 = (void *)sub_228915C40();
  [(objc_class *)with.super.isa encodeObject:v9 forKey:v10];

  uint64_t v11 = (void *)sub_228915C40();
  os_log_type_t v12 = (void *)sub_228915C40();
  [(objc_class *)with.super.isa encodeObject:v11 forKey:v12];

  uint64_t v13 = *(void *)(v1 + OBJC_IVAR____TtC15ProximityReader10ReadResult_vasEntries);
  uint64_t v14 = (objc_class *)type metadata accessor for VASResultArrayWrapper();
  uint64_t v15 = (char *)objc_allocWithZone(v14);
  *(void *)&v15[OBJC_IVAR____TtC15ProximityReader21VASResultArrayWrapper_vasEntries] = v13;
  v28.receiver = v15;
  v28.super_class = v14;
  swift_bridgeObjectRetain();
  id v16 = objc_msgSendSuper2(&v28, sel_init);
  uint64_t v17 = (void *)sub_228915C40();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v16, v17, v28.receiver, v28.super_class);

  uint64_t v18 = *(void *)(v1 + OBJC_IVAR____TtC15ProximityReader10ReadResult_readOutcome);
  id v19 = (void *)sub_228915C40();
  [(objc_class *)with.super.isa encodeInteger:v18 forKey:v19];

  uint64_t v20 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ProximityReader10ReadResult_pinBypassed);
  uint64_t v21 = (void *)sub_228915C40();
  [(objc_class *)with.super.isa encodeBool:v20 forKey:v21];

  uint64_t v22 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ProximityReader10ReadResult_isPINFallback);
  uint64_t v23 = (void *)sub_228915C40();
  [(objc_class *)with.super.isa encodeBool:v22 forKey:v23];

  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC15ProximityReader10ReadResult_cardEffectiveState + 8) & 1) == 0)
  {
    uint64_t v24 = *(void *)(v1 + OBJC_IVAR____TtC15ProximityReader10ReadResult_cardEffectiveState);
    uint64_t v25 = (void *)sub_228915C40();
    [(objc_class *)with.super.isa encodeInteger:v24 forKey:v25];
  }
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC15ProximityReader10ReadResult_cardExpirationState + 8) & 1) == 0)
  {
    uint64_t v26 = *(void *)(v1 + OBJC_IVAR____TtC15ProximityReader10ReadResult_cardExpirationState);
    uint64_t v27 = (void *)sub_228915C40();
    [(objc_class *)with.super.isa encodeInteger:v26 forKey:v27];
  }
}

id ReadResult.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return ReadResult.init(coder:)(a1);
}

id ReadResult.init(coder:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v70 - v8;
  uint64_t v10 = qword_268267EF8;
  uint64_t v76 = v2;
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v75 = __swift_project_value_buffer(v4, (uint64_t)qword_268283D50);
  sub_22880AB38(v75, (uint64_t)v9);
  uint64_t v11 = sub_2289155C0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v9, 1, v11) == 1)
  {
    sub_22880ABA0((uint64_t)v9);
  }
  else
  {
    uint64_t v14 = sub_2289155A0();
    os_log_type_t v15 = sub_228916040();
    if (os_log_type_enabled(v14, v15))
    {
      id v16 = a1;
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl(&dword_228806000, v14, v15, "readErrorCode init", v17, 2u);
      uint64_t v18 = v17;
      a1 = v16;
      MEMORY[0x22A6A1090](v18, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
  }
  id v19 = (void *)sub_228915C40();
  uint64_t v20 = a1;
  id v21 = objc_msgSend(a1, sel_decodeIntegerForKey_, v19);

  if ((unint64_t)v21 <= 2)
  {
    sub_22880A978();
    uint64_t v22 = (void *)sub_228916120();
    if (v22)
    {
      id v74 = v22;
      uint64_t v23 = (void *)sub_228916120();
      if (v23)
      {
        id v73 = v23;
        uint64_t v24 = (void *)sub_228916120();
        if (v24)
        {
          id v72 = v24;
          uint64_t v25 = (void *)sub_228916120();
          if (v25)
          {
            id v71 = v25;
            type metadata accessor for VASResultArrayWrapper();
            uint64_t v26 = sub_228916120();
            if (v26)
            {
              uint64_t v70 = (char *)v26;
              uint64_t v27 = (void *)sub_228915C40();
              id v28 = objc_msgSend(v20, sel_decodeIntegerForKey_, v27);

              if ((unint64_t)v28 < 3)
              {
                id v29 = v28;
                int v30 = (void *)sub_228915C40();
                unsigned __int8 v31 = objc_msgSend(v20, sel_decodeBoolForKey_, v30);

                unsigned int v32 = (void *)sub_228915C40();
                LOBYTE(v30) = objc_msgSend(v20, sel_decodeBoolForKey_, v32);

                int v33 = v76;
                *(void *)&v76[OBJC_IVAR____TtC15ProximityReader10ReadResult_dataType] = v21;
                id v34 = v74;
                uint64_t v35 = sub_228915C70();
                uint64_t v36 = (uint64_t *)&v33[OBJC_IVAR____TtC15ProximityReader10ReadResult_transactionId];
                *uint64_t v36 = v35;
                v36[1] = v37;
                uint64_t v38 = sub_228915C70();
                objc_super v39 = (uint64_t *)&v33[OBJC_IVAR____TtC15ProximityReader10ReadResult_cardReaderBlob];
                *objc_super v39 = v38;
                v39[1] = v40;
                uint64_t v41 = sub_228915C70();
                unint64_t v42 = (uint64_t *)&v33[OBJC_IVAR____TtC15ProximityReader10ReadResult_generalCardData];
                *unint64_t v42 = v41;
                v42[1] = v43;
                uint64_t v44 = sub_228915C70();
                uint64_t v45 = (uint64_t *)&v33[OBJC_IVAR____TtC15ProximityReader10ReadResult_payAppType];
                uint64_t *v45 = v44;
                v45[1] = v46;
                uint64_t v47 = v70;
                *(void *)&v33[OBJC_IVAR____TtC15ProximityReader10ReadResult_vasEntries] = *(void *)&v70[OBJC_IVAR____TtC15ProximityReader21VASResultArrayWrapper_vasEntries];
                *(void *)&v33[OBJC_IVAR____TtC15ProximityReader10ReadResult_readOutcome] = v29;
                v33[OBJC_IVAR____TtC15ProximityReader10ReadResult_pinBypassed] = v31;
                v33[OBJC_IVAR____TtC15ProximityReader10ReadResult_isPINFallback] = (_BYTE)v30;
                swift_bridgeObjectRetain();
                os_log_type_t v48 = (void *)sub_228915C40();
                id v49 = objc_msgSend(v20, sel_decodeIntegerForKey_, v48);

                uint64_t v50 = (void *)sub_228915C40();
                unsigned int v51 = objc_msgSend(v20, sel_containsValueForKey_, v50);

                if ((unint64_t)v49 <= 3) {
                  id v52 = v49;
                }
                else {
                  id v52 = 0;
                }
                if (!v51) {
                  id v52 = 0;
                }
                uint64_t v53 = &v33[OBJC_IVAR____TtC15ProximityReader10ReadResult_cardEffectiveState];
                *(void *)uint64_t v53 = v52;
                v53[8] = (unint64_t)v49 > 3 || (v51 & 1) == 0;
                uint64_t v54 = (void *)sub_228915C40();
                id v55 = objc_msgSend(v20, sel_decodeIntegerForKey_, v54);

                uint64_t v56 = (void *)sub_228915C40();
                unsigned int v57 = objc_msgSend(v20, sel_containsValueForKey_, v56);

                if ((unint64_t)v55 <= 3) {
                  id v58 = v55;
                }
                else {
                  id v58 = 0;
                }
                if (v57) {
                  id v59 = v58;
                }
                else {
                  id v59 = 0;
                }

                uint64_t v60 = &v33[OBJC_IVAR____TtC15ProximityReader10ReadResult_cardExpirationState];
                *(void *)uint64_t v60 = v59;
                v60[8] = (unint64_t)v55 > 3 || (v57 & 1) == 0;

                v78.receiver = v33;
                v78.super_class = ObjectType;
                id v61 = objc_msgSendSuper2(&v78, sel_init);

                return v61;
              }

              id v64 = v72;
              id v65 = v73;
              id v62 = v70;
              id v63 = v71;
            }
            else
            {
              id v64 = v73;
              id v65 = v74;
              id v62 = v71;
              id v63 = v72;
            }
          }
          else
          {
            id v63 = v73;
            id v64 = v74;
            id v62 = v72;
          }
        }
        else
        {
          id v62 = v73;
          id v63 = v74;
        }
      }
      else
      {
        id v62 = v74;
      }
    }
  }

  sub_22880AB38(v75, (uint64_t)v6);
  if (v13(v6, 1, v11) == 1)
  {

    sub_22880ABA0((uint64_t)v6);
  }
  else
  {
    unint64_t v66 = sub_2289155A0();
    os_log_type_t v67 = sub_228916050();
    if (os_log_type_enabled(v66, v67))
    {
      uint64_t v68 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v68 = 0;
      _os_log_impl(&dword_228806000, v66, v67, "ReadResultInternal | Failed to decode object", v68, 2u);
      MEMORY[0x22A6A1090](v68, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v12 + 8))(v6, v11);
  }
  swift_deallocPartialClassInstance();
  return 0;
}

unint64_t ReadOutcomeInternal.init(rawValue:)(unint64_t result)
{
  if (result > 2) {
    return 0;
  }
  return result;
}

id ReadResult.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void ReadResult.init()()
{
}

id ReadResult.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t static ReadOutcomeInternal._nsErrorDomain.getter()
{
  return 0xD000000000000023;
}

uint64_t sub_2288FF8F4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_2288FFEB4();

  return MEMORY[0x270EEEA70](a1, a2, v4);
}

uint64_t sub_2288FF940(uint64_t a1)
{
  unint64_t v2 = sub_2288FFEB4();

  return MEMORY[0x270EEEA80](a1, v2);
}

uint64_t sub_2288FF97C(uint64_t a1)
{
  unint64_t v2 = sub_2288FFEB4();

  return MEMORY[0x270EEEA78](a1, v2);
}

unint64_t sub_2288FF9B8()
{
  return 0xD000000000000023;
}

uint64_t sub_2288FF9D4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_2288FFEB4();

  return MEMORY[0x270EEEA68](a1, a2, v4);
}

uint64_t CardEffectiveStateInternal.description.getter()
{
  return 0x6E776F6E6B6E75;
}

unint64_t CardEffectiveStateInternal.init(rawValue:)(unint64_t a1)
{
  return sub_22888B060(a1);
}

void *static CardEffectiveStateInternal.allCases.getter()
{
  return &unk_26DCFD9D8;
}

uint64_t sub_2288FFA68()
{
  return 0x6E776F6E6B6E75;
}

void sub_2288FFA80(void *a1@<X8>)
{
  *a1 = &unk_26DCFDA18;
}

uint64_t CardExpirationStateInternal.description.getter()
{
  return 0x6E776F6E6B6E75;
}

void *static CardExpirationStateInternal.allCases.getter()
{
  return &unk_26DCFDA58;
}

void sub_2288FFAB4(void *a1@<X8>)
{
  *a1 = &unk_26DCFDA98;
}

unint64_t sub_2288FFAC4()
{
  unint64_t result = qword_26826B3A0;
  if (!qword_26826B3A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B3A0);
  }
  return result;
}

unint64_t sub_2288FFB1C()
{
  unint64_t result = qword_26826B3D8;
  if (!qword_26826B3D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B3D8);
  }
  return result;
}

unint64_t sub_2288FFB74()
{
  unint64_t result = qword_26826B3E0;
  if (!qword_26826B3E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B3E0);
  }
  return result;
}

unint64_t sub_2288FFBCC()
{
  unint64_t result = qword_26826B3E8;
  if (!qword_26826B3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B3E8);
  }
  return result;
}

unint64_t sub_2288FFC24()
{
  unint64_t result = qword_26826B3F0;
  if (!qword_26826B3F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B3F0);
  }
  return result;
}

unint64_t sub_2288FFC80()
{
  unint64_t result = qword_26826B400;
  if (!qword_26826B400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B400);
  }
  return result;
}

uint64_t sub_2288FFCD4()
{
  return sub_2288FFD7C(&qword_26826B408, &qword_26826B410);
}

unint64_t sub_2288FFD00()
{
  unint64_t result = qword_26826B418;
  if (!qword_26826B418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B418);
  }
  return result;
}

uint64_t sub_2288FFD54()
{
  return sub_2288FFD7C(&qword_26826B420, (uint64_t *)&unk_26826B428);
}

uint64_t sub_2288FFD7C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for ReadResult()
{
  return self;
}

uint64_t method lookup function for ReadResult(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ReadResult);
}

uint64_t dispatch thunk of ReadResult.__allocating_init(dataType:transactionId:cardReaderBlob:generalCardData:payAppType:vasEntries:readOutcome:pinBypassed:isPINFallback:cardEffectiveState:cardExpirationState:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 168))(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t dispatch thunk of ReadResult.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

ValueMetadata *type metadata accessor for ReadOutcomeInternal()
{
  return &type metadata for ReadOutcomeInternal;
}

ValueMetadata *type metadata accessor for CardEffectiveStateInternal()
{
  return &type metadata for CardEffectiveStateInternal;
}

ValueMetadata *type metadata accessor for CardExpirationStateInternal()
{
  return &type metadata for CardExpirationStateInternal;
}

unint64_t sub_2288FFEB4()
{
  unint64_t result = qword_26826B438;
  if (!qword_26826B438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B438);
  }
  return result;
}

uint64_t static LogoManager.shared.getter()
{
  uint64_t v0 = type metadata accessor for LogoManager();

  return MEMORY[0x270FA0480](v0, &unk_268268188);
}

uint64_t type metadata accessor for LogoManager()
{
  return self;
}

uint64_t sub_2288FFF64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268D68);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2289151B0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(sub_228901AC8(a1, a2) + 16) == 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v15[2] = sub_2288FD360();
    v15[3] = v12;
    sub_228915D60();
    sub_228915110();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
      uint64_t v13 = sub_2289151E0();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      return v13;
    }
    sub_2288110C0((uint64_t)v7, &qword_268268D68);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_228900368(uint64_t a1, uint64_t a2)
{
  uint64_t v56 = *MEMORY[0x263EF8340];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268D68);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_2289151B0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_228901AC8(a1, a2);
  uint64_t v15 = *(void *)(v14 + 16);
  if (v15)
  {
    uint64_t v45 = v4;
    uint64_t v46 = v6;
    unsigned int v51 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    id v52 = (void (**)(char *, void, uint64_t, uint64_t))(v11 + 56);
    os_log_type_t v48 = (void (**)(char *, uint64_t))(v11 + 8);
    id v49 = (void (**)(char *, char *, uint64_t))(v11 + 32);
    uint64_t v47 = v14;
    uint64_t v16 = v14 + 40;
    unint64_t v50 = 0x800000022892CED0;
    while (1)
    {
      swift_bridgeObjectRetain();
      uint64_t v17 = CPSharedResourcesDirectory();
      if (!v17) {
        __break(1u);
      }
      uint64_t v18 = (void *)v17;
      id v19 = (void *)sub_228915C70();
      unint64_t v21 = v20;

      id v54 = v19;
      unint64_t v55 = v21;
      sub_228915D60();
      id v22 = v54;
      unint64_t v23 = v55;
      id v54 = 0;
      unint64_t v55 = 0xE000000000000000;
      sub_228916320();
      swift_bridgeObjectRelease();
      id v54 = v22;
      unint64_t v55 = v23;
      sub_228915D60();
      sub_228915D60();
      sub_228915D60();
      sub_228915110();
      swift_bridgeObjectRelease();
      (*v52)(v9, 0, 1, v10);
      swift_bridgeObjectRelease();
      if ((*v51)(v9, 1, v10) == 1)
      {
        sub_2288110C0((uint64_t)v9, &qword_268268D68);
      }
      else
      {
        (*v49)(v13, v9, v10);
        id v24 = objc_msgSend(self, sel_defaultManager);
        uint64_t v25 = (void *)sub_228915130();
        id v54 = 0;
        unsigned int v26 = objc_msgSend(v24, sel_removeItemAtURL_error_, v25, &v54);

        if (!v26)
        {
          id v30 = v54;
          unsigned __int8 v31 = (void *)sub_2289150A0();

          swift_willThrow();
          (*v48)(v13, v10);
          swift_bridgeObjectRelease();
          if (qword_268267F20 != -1) {
            swift_once();
          }
          uint64_t v32 = __swift_project_value_buffer(v45, (uint64_t)qword_268283DC8);
          uint64_t v33 = (uint64_t)v46;
          sub_22880AB38(v32, (uint64_t)v46);
          uint64_t v34 = sub_2289155C0();
          uint64_t v35 = *(void *)(v34 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34) == 1)
          {

            return sub_2288110C0(v33, (uint64_t *)&unk_2682684D0);
          }
          else
          {
            id v36 = v31;
            id v37 = v31;
            uint64_t v38 = sub_2289155A0();
            os_log_type_t v39 = sub_228916050();
            if (os_log_type_enabled(v38, v39))
            {
              uint64_t v40 = (uint8_t *)swift_slowAlloc();
              uint64_t v41 = (void *)swift_slowAlloc();
              id v54 = v41;
              *(_DWORD *)uint64_t v40 = 136315138;
              swift_getErrorValue();
              uint64_t v42 = sub_2289166F0();
              uint64_t v53 = sub_2288AB2C4(v42, v43, (uint64_t *)&v54);
              sub_2289161F0();
              swift_bridgeObjectRelease();

              _os_log_impl(&dword_228806000, v38, v39, "Error occurred when retrieving logo directories: %s", v40, 0xCu);
              swift_arrayDestroy();
              uint64_t v33 = (uint64_t)v46;
              MEMORY[0x22A6A1090](v41, -1, -1);
              MEMORY[0x22A6A1090](v40, -1, -1);
            }
            else
            {
            }
            return (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 8))(v33, v34);
          }
        }
        uint64_t v27 = *v48;
        id v28 = v54;
        v27(v13, v10);
      }
      v16 += 16;
      if (!--v15) {
        return swift_bridgeObjectRelease();
      }
    }
  }

  return swift_bridgeObjectRelease();
}

void sub_2289009F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v31 = a2;
  uint64_t v32 = a3;
  uint64_t v6 = sub_2289151B0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_268267F20 != -1) {
    swift_once();
  }
  uint64_t v12 = __swift_project_value_buffer(v9, (uint64_t)qword_268283DC8);
  sub_22880AB38(v12, (uint64_t)v11);
  uint64_t v13 = sub_2289155C0();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) == 1)
  {
    sub_2288110C0((uint64_t)v11, (uint64_t *)&unk_2682684D0);
  }
  else
  {
    uint64_t v30 = v4;
    uint64_t v15 = sub_2289155A0();
    os_log_type_t v16 = sub_228916040();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = a1;
      uint64_t v18 = v17;
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl(&dword_228806000, v15, v16, "Clear logo", v17, 2u);
      id v19 = v18;
      a1 = v29;
      MEMORY[0x22A6A1090](v19, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    uint64_t v4 = v30;
  }
  id v20 = objc_msgSend(self, sel_sharedSession);
  unint64_t v21 = (void *)sub_228915130();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v22 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v23 = (v8 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v24 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v24 + v22, (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  uint64_t v25 = (void *)(v24 + v23);
  uint64_t v26 = v32;
  *uint64_t v25 = v31;
  v25[1] = v26;
  *(void *)(v24 + ((v23 + 23) & 0xFFFFFFFFFFFFFFF8)) = v4;
  aBlock[4] = sub_228902104;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_228901764;
  aBlock[3] = &block_descriptor_8;
  uint64_t v27 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  id v28 = objc_msgSend(v20, sel_dataTaskWithURL_completionHandler_, v21, v27);
  _Block_release(v27);

  objc_msgSend(v28, sel_resume);
}

void sub_228900DD8(uint64_t a1, unint64_t a2, void *a3, void *a4, uint8_t *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v78 = a7;
  uint64_t v79 = a6;
  uint64_t v80 = a5;
  uint64_t v11 = sub_2289151B0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  MEMORY[0x270FA5388](v19);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v72 - v23;
  if (a4)
  {
    id v25 = a4;
    if (qword_268267F20 != -1) {
      swift_once();
    }
    uint64_t v26 = __swift_project_value_buffer(v15, (uint64_t)qword_268283DC8);
    sub_22880AB38(v26, (uint64_t)v24);
    uint64_t v27 = sub_2289155C0();
    uint64_t v28 = *(void *)(v27 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v24, 1, v27) == 1)
    {

      sub_2288110C0((uint64_t)v24, (uint64_t *)&unk_2682684D0);
    }
    else
    {
      id v36 = a4;
      id v37 = a4;
      uint64_t v38 = sub_2289155A0();
      os_log_type_t v39 = sub_228916050();
      if (os_log_type_enabled(v38, v39))
      {
        uint64_t v40 = (uint8_t *)swift_slowAlloc();
        uint64_t v41 = swift_slowAlloc();
        v82[0] = v41;
        *(_DWORD *)uint64_t v40 = 136315138;
        uint64_t v80 = v40 + 4;
        swift_getErrorValue();
        uint64_t v42 = sub_2289166F0();
        uint64_t v81 = sub_2288AB2C4(v42, v43, v82);
        sub_2289161F0();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_228806000, v38, v39, "Error received when fetching merchant logo: %s", v40, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22A6A1090](v41, -1, -1);
        MEMORY[0x22A6A1090](v40, -1, -1);
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v28 + 8))(v24, v27);
    }
    return;
  }
  uint64_t v77 = v21;
  if (!a3) {
    goto LABEL_10;
  }
  uint64_t v29 = v22;
  self;
  uint64_t v30 = swift_dynamicCastObjCClass();
  if (!v30) {
    goto LABEL_10;
  }
  uint64_t v31 = (void *)v30;
  id v32 = a3;
  if ((char *)objc_msgSend(v31, sel_statusCode) - 300 < (char *)0xFFFFFFFFFFFFFF9CLL)
  {

LABEL_10:
    if (qword_268267F20 != -1) {
      swift_once();
    }
    uint64_t v33 = __swift_project_value_buffer(v15, (uint64_t)qword_268283DC8);
    sub_22880AB38(v33, (uint64_t)v17);
    uint64_t v34 = sub_2289155C0();
    uint64_t v35 = *(void *)(v34 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v17, 1, v34) == 1) {
      goto LABEL_13;
    }
    uint64_t v44 = sub_2289155A0();
    os_log_type_t v45 = sub_228916050();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v46 = 0;
      _os_log_impl(&dword_228806000, v44, v45, "Non 200 response", v46, 2u);
      MEMORY[0x22A6A1090](v46, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v35 + 8))(v17, v34);
    return;
  }
  if (a2 >> 60 == 15)
  {
    uint64_t v47 = v32;
    if (qword_268267F20 != -1) {
      swift_once();
    }
    uint64_t v48 = __swift_project_value_buffer(v15, (uint64_t)qword_268283DC8);
    uint64_t v17 = (char *)v29;
    sub_22880AB38(v48, v29);
    uint64_t v49 = sub_2289155C0();
    uint64_t v50 = *(void *)(v49 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v29, 1, v49) == 1)
    {

LABEL_13:
      sub_2288110C0((uint64_t)v17, (uint64_t *)&unk_2682684D0);
      return;
    }
    id v58 = sub_2289155A0();
    os_log_type_t v59 = sub_228916050();
    if (os_log_type_enabled(v58, v59))
    {
      uint64_t v60 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v60 = 0;
      _os_log_impl(&dword_228806000, v58, v59, "Did not receive logo data from provided logoURL", v60, 2u);
      MEMORY[0x22A6A1090](v60, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v29, v49);
  }
  else
  {
    id v76 = v32;
    uint64_t v51 = a1;
    sub_22880ACB8(a1, a2);
    if (qword_268267F20 != -1) {
      swift_once();
    }
    uint64_t v52 = __swift_project_value_buffer(v15, (uint64_t)qword_268283DC8);
    uint64_t v53 = v77;
    sub_22880AB38(v52, v77);
    uint64_t v54 = sub_2289155C0();
    uint64_t v55 = *(void *)(v54 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54) == 1)
    {
      sub_2288110C0(v53, (uint64_t *)&unk_2682684D0);
      uint64_t v56 = v78;
      uint64_t v57 = v79;
    }
    else
    {
      uint64_t v61 = v12;
      id v62 = *(void (**)(char *, uint8_t *, uint64_t))(v12 + 16);
      id v63 = v14;
      v62(v14, v80, v11);
      id v64 = sub_2289155A0();
      os_log_type_t v65 = sub_228916040();
      int v66 = v65;
      if (os_log_type_enabled(v64, v65))
      {
        int v75 = v66;
        os_log_type_t v67 = (uint8_t *)swift_slowAlloc();
        uint64_t v74 = swift_slowAlloc();
        v82[0] = v74;
        id v73 = v67;
        *(_DWORD *)os_log_type_t v67 = 136315138;
        id v72 = v67 + 4;
        sub_228902B10();
        uint64_t v68 = sub_228916630();
        uint64_t v81 = sub_2288AB2C4(v68, v69, v82);
        sub_2289161F0();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v61 + 8))(v63, v11);
        uint64_t v70 = v73;
        _os_log_impl(&dword_228806000, v64, (os_log_type_t)v75, "Logo: %s", v73, 0xCu);
        uint64_t v71 = v74;
        swift_arrayDestroy();
        MEMORY[0x22A6A1090](v71, -1, -1);
        MEMORY[0x22A6A1090](v70, -1, -1);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v61 + 8))(v63, v11);
      }
      uint64_t v56 = v78;
      uint64_t v57 = v79;
      (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v77, v54);
      uint64_t v51 = a1;
    }
    v82[0] = v57;
    v82[1] = v56;
    swift_bridgeObjectRetain();
    sub_228915D60();
    sub_2289150F0();
    sub_228915D60();
    swift_bridgeObjectRelease();
    sub_228902274(v51, a2);
    swift_bridgeObjectRelease();
    sub_22880BB6C(v51, a2);
  }
}

uint64_t sub_228901764(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v6 = a2;
  uint64_t v7 = *(void (**)(void *, unint64_t, void *, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    id v8 = v6;
    uint64_t v6 = (void *)sub_228915260();
    unint64_t v10 = v9;
  }
  else
  {
    swift_retain();
    unint64_t v10 = 0xF000000000000000;
  }
  id v11 = a3;
  id v12 = a4;
  v7(v6, v10, a3, a4);

  sub_22880BB6C((uint64_t)v6, v10);

  return swift_release();
}

uint64_t LogoManager.deinit()
{
  return v0;
}

uint64_t LogoManager.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_228901844(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = *(void *)(result + 16);
  if (!v3) {
    return MEMORY[0x263F8EE78];
  }
  unint64_t v4 = 0;
  uint64_t v33 = result + 32;
  uint64_t v5 = MEMORY[0x263F8EE78];
  unint64_t v31 = *(void *)(result + 16);
  do
  {
    uint64_t v29 = v5;
    if (v4 <= v3) {
      unint64_t v6 = v3;
    }
    else {
      unint64_t v6 = v4;
    }
    while (1)
    {
      if (v4 == v6)
      {
        __break(1u);
        return result;
      }
      id v8 = (uint64_t *)(v33 + 16 * v4);
      uint64_t v10 = *v8;
      unint64_t v9 = v8[1];
      ++v4;
      uint64_t v11 = HIBYTE(v9) & 0xF;
      if ((v9 & 0x2000000000000000) == 0) {
        uint64_t v11 = v10 & 0xFFFFFFFFFFFFLL;
      }
      if (v11) {
        break;
      }
LABEL_8:
      if (v4 == v3) {
        return v29;
      }
    }
    swift_bridgeObjectRetain();
    while (1)
    {
      unint64_t v12 = sub_228915D30();
      if (sub_228915DF0() == 46 && v13 == 0xE100000000000000) {
        break;
      }
      char v15 = sub_228916660();
      swift_bridgeObjectRelease();
      if (v15) {
        goto LABEL_22;
      }
      if (v12 < 0x4000) {
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
LABEL_22:
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_228915E10();
    uint64_t v18 = v17;
    uint64_t v20 = v19;
    uint64_t v22 = v21;
    swift_bridgeObjectRelease();
    uint64_t v23 = MEMORY[0x22A69FD50](v16, v18, v20, v22);
    uint64_t v25 = v24;
    swift_bridgeObjectRelease();
    if (v23 == a2 && v25 == a3)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v7 = sub_228916660();
      swift_bridgeObjectRelease();
      if ((v7 & 1) == 0)
      {
LABEL_7:
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v3 = v31;
        goto LABEL_8;
      }
    }
    uint64_t v5 = v29;
    unint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      unint64_t result = sub_22886AC24(0, *(void *)(v29 + 16) + 1, 1);
      uint64_t v5 = v29;
    }
    unint64_t v27 = *(void *)(v5 + 16);
    unint64_t v26 = *(void *)(v5 + 24);
    if (v27 >= v26 >> 1)
    {
      unint64_t result = sub_22886AC24(v26 > 1, v27 + 1, 1);
      uint64_t v5 = v29;
    }
    *(void *)(v5 + 16) = v27 + 1;
    uint64_t v28 = v5 + 16 * v27;
    *(void *)(v28 + 32) = v10;
    *(void *)(v28 + 40) = v9;
    unint64_t v3 = v31;
  }
  while (v4 != v31);
  return v5;
}

uint64_t sub_228901AC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v4);
  unint64_t v6 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  unint64_t v9 = (char *)v38 - v8;
  v10._uint64_t countAndFlagsBits = sub_2288FD360();
  unint64_t v11 = (unint64_t)SecureStorage.getDirectoryContent(at:)(v10);
  if (v12)
  {
    swift_bridgeObjectRelease();
    if (qword_268267F20 != -1) {
      swift_once();
    }
    uint64_t v13 = __swift_project_value_buffer(v4, (uint64_t)qword_268283DC8);
    sub_22880AB38(v13, (uint64_t)v6);
    uint64_t v14 = sub_2289155C0();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v6, 1, v14) == 1)
    {
      sub_2288110C0((uint64_t)v6, (uint64_t *)&unk_2682684D0);
    }
    else
    {
      id v18 = v12;
      id v19 = v12;
      uint64_t v20 = sub_2289155A0();
      os_log_type_t v21 = sub_228916050();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = (uint8_t *)swift_slowAlloc();
        uint64_t v23 = swift_slowAlloc();
        v41[0] = v23;
        *(_DWORD *)uint64_t v22 = 136315138;
        uint64_t v39 = (uint64_t)(v22 + 4);
        swift_getErrorValue();
        uint64_t v24 = sub_2289166F0();
        uint64_t v40 = sub_2288AB2C4(v24, v25, v41);
        sub_2289161F0();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_228806000, v20, v21, "Empty logo directory: %s", v22, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22A6A1090](v23, -1, -1);
        MEMORY[0x22A6A1090](v22, -1, -1);
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v15 + 8))(v6, v14);
    }

    return MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v16 = v11;
    swift_bridgeObjectRelease();
    if (v16)
    {
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_228901844(v16, a1, a2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!*(void *)(v17 + 16)) {
        return v17;
      }
    }
    else
    {
      uint64_t v17 = MEMORY[0x263F8EE78];
      if (!*(void *)(MEMORY[0x263F8EE78] + 16)) {
        return v17;
      }
    }
    if (qword_268267F20 != -1) {
      swift_once();
    }
    uint64_t v27 = __swift_project_value_buffer(v4, (uint64_t)qword_268283DC8);
    sub_22880AB38(v27, (uint64_t)v9);
    uint64_t v28 = sub_2289155C0();
    uint64_t v29 = *(void *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v9, 1, v28) == 1)
    {
      sub_2288110C0((uint64_t)v9, (uint64_t *)&unk_2682684D0);
    }
    else
    {
      swift_bridgeObjectRetain_n();
      uint64_t v30 = sub_2289155A0();
      os_log_type_t v31 = sub_228916040();
      if (os_log_type_enabled(v30, v31))
      {
        id v32 = (uint8_t *)swift_slowAlloc();
        uint64_t v39 = swift_slowAlloc();
        v41[0] = v39;
        *(_DWORD *)id v32 = 136315138;
        v38[1] = v32 + 4;
        uint64_t v33 = swift_bridgeObjectRetain();
        uint64_t v34 = MEMORY[0x22A69FF00](v33, MEMORY[0x263F8D310]);
        unint64_t v36 = v35;
        swift_bridgeObjectRelease();
        uint64_t v40 = sub_2288AB2C4(v34, v36, v41);
        sub_2289161F0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_228806000, v30, v31, "getFilesMatching at: %s", v32, 0xCu);
        uint64_t v37 = v39;
        swift_arrayDestroy();
        MEMORY[0x22A6A1090](v37, -1, -1);
        MEMORY[0x22A6A1090](v32, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v28);
    }
  }
  return v17;
}

uint64_t sub_228902044()
{
  uint64_t v1 = sub_2289151B0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, v6 + 8, v5);
}

void sub_228902104(uint64_t a1, unint64_t a2, void *a3, void *a4)
{
  uint64_t v9 = *(void *)(sub_2289151B0() - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v11 = (*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = *(void *)(v4 + v11);
  uint64_t v13 = *(void *)(v4 + v11 + 8);

  sub_228900DD8(a1, a2, a3, a4, (uint8_t *)(v4 + v10), v12, v13);
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t method lookup function for LogoManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for LogoManager);
}

uint64_t dispatch thunk of LogoManager.loadLogo(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of LogoManager.clearLogos(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of LogoManager.retrieveAndStoreLogo(url:for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t sub_228902274(uint64_t a1, uint64_t a2)
{
  uint64_t v46 = a2;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v2);
  os_log_type_t v45 = (uint8_t *)v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  unint64_t v6 = (char *)v42 - v5;
  MEMORY[0x270FA5388](v7);
  uint64_t v44 = (uint64_t)v42 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268D68);
  MEMORY[0x270FA5388](v9 - 8);
  unint64_t v11 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_2289151B0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  unint64_t v43 = (char *)v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)v42 - v16;
  v48[0] = sub_2288FD360();
  v48[1] = v18;
  sub_228915D60();
  sub_228915110();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_2288110C0((uint64_t)v11, &qword_268268D68);
    if (qword_268267F20 != -1) {
      swift_once();
    }
    uint64_t v19 = __swift_project_value_buffer(v2, (uint64_t)qword_268283DC8);
    sub_22880AB38(v19, (uint64_t)v6);
    uint64_t v20 = sub_2289155C0();
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v6, 1, v20) == 1)
    {
      uint64_t v22 = (uint64_t)v6;
      return sub_2288110C0(v22, (uint64_t *)&unk_2682684D0);
    }
    uint64_t v23 = sub_2289155A0();
    os_log_type_t v24 = sub_228916050();
    if (os_log_type_enabled(v23, v24))
    {
      unint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v25 = 0;
      _os_log_impl(&dword_228806000, v23, v24, "Unable to resolve logo path", v25, 2u);
      MEMORY[0x22A6A1090](v25, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v6, v20);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v17, v11, v12);
    SecureStorage.save(at:data:)();
    if (qword_268267F20 != -1) {
      swift_once();
    }
    uint64_t v27 = __swift_project_value_buffer(v2, (uint64_t)qword_268283DC8);
    uint64_t v28 = v44;
    sub_22880AB38(v27, v44);
    uint64_t v29 = sub_2289155C0();
    uint64_t v30 = *(void *)(v29 - 8);
    int v31 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29);
    id v32 = v43;
    if (v31 == 1)
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v12);
      uint64_t v22 = v28;
      return sub_2288110C0(v22, (uint64_t *)&unk_2682684D0);
    }
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v43, v17, v12);
    uint64_t v33 = sub_2289155A0();
    os_log_type_t v34 = sub_228916040();
    if (os_log_type_enabled(v33, v34))
    {
      unint64_t v35 = (uint8_t *)swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      v48[0] = v46;
      os_log_type_t v45 = v35;
      *(_DWORD *)unint64_t v35 = 136315138;
      v42[1] = v35 + 4;
      sub_228902B10();
      uint64_t v36 = sub_228916630();
      uint64_t v47 = sub_2288AB2C4(v36, v37, v48);
      sub_2289161F0();
      swift_bridgeObjectRelease();
      uint64_t v38 = *(void (**)(char *, uint64_t))(v13 + 8);
      v38(v32, v12);
      uint64_t v39 = v45;
      _os_log_impl(&dword_228806000, v33, v34, "Cached at: %s", v45, 0xCu);
      uint64_t v40 = v46;
      swift_arrayDestroy();
      MEMORY[0x22A6A1090](v40, -1, -1);
      uint64_t v41 = v39;
      uint64_t v28 = v44;
      MEMORY[0x22A6A1090](v41, -1, -1);
    }
    else
    {
      uint64_t v38 = *(void (**)(char *, uint64_t))(v13 + 8);
      v38(v32, v12);
    }

    v38(v17, v12);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8))(v28, v29);
  }
}

unint64_t sub_228902B10()
{
  unint64_t result = qword_26826B440;
  if (!qword_26826B440)
  {
    sub_2289151B0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B440);
  }
  return result;
}

unint64_t ForegroundActiveState.description.getter(uint64_t a1)
{
  unint64_t result = 0x756F72676B636162;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0x74616E696D726574;
      break;
    case 4:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      sub_228916690();
      __break(1u);
      JUMPOUT(0x228902C50);
  }
  return result;
}

unint64_t ForegroundActiveState.init(rawValue:)(unint64_t a1)
{
  return sub_228812EEC(a1);
}

unint64_t sub_228902C84()
{
  return ForegroundActiveState.description.getter(*v0);
}

unint64_t sub_228902C90()
{
  unint64_t result = qword_26826B448;
  if (!qword_26826B448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B448);
  }
  return result;
}

ValueMetadata *type metadata accessor for ForegroundActiveState()
{
  return &type metadata for ForegroundActiveState;
}

uint64_t sub_228902CF8(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v12 = MEMORY[0x263F8EE78];
    sub_22886AC24(0, v1, 0);
    uint64_t v3 = a1 + 40;
    do
    {
      uint64_t v4 = sub_228915CC0();
      uint64_t v6 = v5;
      unint64_t v8 = *(void *)(v12 + 16);
      unint64_t v7 = *(void *)(v12 + 24);
      if (v8 >= v7 >> 1) {
        sub_22886AC24(v7 > 1, v8 + 1, 1);
      }
      *(void *)(v12 + 16) = v8 + 1;
      uint64_t v9 = v12 + 16 * v8;
      *(void *)(v9 + 32) = v4;
      *(void *)(v9 + 40) = v6;
      v3 += 16;
      --v1;
    }
    while (v1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26826A5A0);
  sub_22883CD78();
  uint64_t v10 = sub_228915C00();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t MobileDocumentElementInternal.hash(into:)()
{
  if ((*(unsigned char *)(v0 + 8) & 1) == 0) {
    sub_228916760();
  }
  return sub_228916760();
}

unint64_t sub_228902E84(char a1)
{
  unint64_t result = 0x6D614E6E65766967;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x614E796C696D6166;
      break;
    case 2:
      unint64_t result = 0x7469617274726F70;
      break;
    case 3:
      unint64_t result = 6645601;
      break;
    case 4:
      unint64_t result = 0x61654C7441656761;
      break;
    case 5:
      unint64_t result = 0x6942664F65746164;
      break;
    case 6:
      unint64_t result = 7890291;
      break;
    case 7:
      unint64_t result = 0x73736572646461;
      break;
    case 8:
      unint64_t result = 0xD000000000000010;
      break;
    case 9:
    case 11:
      unint64_t result = 0xD000000000000011;
      break;
    case 10:
      unint64_t result = 0x746E656D75636F64;
      break;
    case 12:
      unint64_t result = 0xD000000000000016;
      break;
    case 13:
      unint64_t result = 0xD00000000000001BLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_228903048(uint64_t a1)
{
  unint64_t v2 = sub_228905BE4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_228903084(uint64_t a1)
{
  unint64_t v2 = sub_228905BE4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2289030C0(uint64_t a1)
{
  unint64_t v2 = sub_228905CE0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2289030FC(uint64_t a1)
{
  unint64_t v2 = sub_228905CE0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_228903138(uint64_t a1)
{
  unint64_t v2 = sub_228905D34();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_228903174(uint64_t a1)
{
  unint64_t v2 = sub_228905D34();

  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_2289031B0()
{
  return sub_228902E84(*v0);
}

uint64_t sub_2289031B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_228906C94(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2289031E0(uint64_t a1)
{
  unint64_t v2 = sub_228905998();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22890321C(uint64_t a1)
{
  unint64_t v2 = sub_228905998();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_228903258(uint64_t a1)
{
  unint64_t v2 = sub_228905C8C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_228903294(uint64_t a1)
{
  unint64_t v2 = sub_228905C8C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2289032D0(uint64_t a1)
{
  unint64_t v2 = sub_2289059EC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22890330C(uint64_t a1)
{
  unint64_t v2 = sub_2289059EC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_228903348(uint64_t a1)
{
  unint64_t v2 = sub_228905A40();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_228903384(uint64_t a1)
{
  unint64_t v2 = sub_228905A40();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2289033C0(uint64_t a1)
{
  unint64_t v2 = sub_228905A94();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2289033FC(uint64_t a1)
{
  unint64_t v2 = sub_228905A94();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_228903438(uint64_t a1)
{
  unint64_t v2 = sub_228905AE8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_228903474(uint64_t a1)
{
  unint64_t v2 = sub_228905AE8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2289034B0(uint64_t a1)
{
  unint64_t v2 = sub_228905B3C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2289034EC(uint64_t a1)
{
  unint64_t v2 = sub_228905B3C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_228903528(uint64_t a1)
{
  unint64_t v2 = sub_228905DDC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_228903564(uint64_t a1)
{
  unint64_t v2 = sub_228905DDC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2289035A0(uint64_t a1)
{
  unint64_t v2 = sub_228905E30();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2289035DC(uint64_t a1)
{
  unint64_t v2 = sub_228905E30();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_228903618(uint64_t a1)
{
  unint64_t v2 = sub_228905B90();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_228903654(uint64_t a1)
{
  unint64_t v2 = sub_228905B90();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_228903690(uint64_t a1)
{
  unint64_t v2 = sub_228905D88();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2289036CC(uint64_t a1)
{
  unint64_t v2 = sub_228905D88();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_228903708(uint64_t a1)
{
  unint64_t v2 = sub_228905C38();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_228903744(uint64_t a1)
{
  unint64_t v2 = sub_228905C38();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t MobileDocumentElementInternal.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B450);
  uint64_t v84 = *(void *)(v3 - 8);
  uint64_t v85 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v83 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B458);
  uint64_t v81 = *(void *)(v5 - 8);
  uint64_t v82 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v80 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B460);
  uint64_t v78 = *(void *)(v7 - 8);
  uint64_t v79 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v77 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B468);
  uint64_t v75 = *(void *)(v9 - 8);
  uint64_t v76 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v74 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B470);
  uint64_t v72 = *(void *)(v11 - 8);
  uint64_t v73 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v71 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B478);
  uint64_t v69 = *(void *)(v13 - 8);
  uint64_t v70 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v68 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B480);
  uint64_t v66 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67);
  os_log_type_t v65 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B488);
  uint64_t v63 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  id v62 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B490);
  uint64_t v60 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  os_log_type_t v59 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B498);
  uint64_t v86 = *(void *)(v18 - 8);
  uint64_t v87 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B4A0);
  uint64_t v57 = *(void *)(v58 - 8);
  MEMORY[0x270FA5388](v58);
  uint64_t v56 = (char *)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B4A8);
  uint64_t v54 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  uint64_t v53 = (char *)&v47 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B4B0);
  uint64_t v51 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52);
  uint64_t v50 = (char *)&v47 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B4B8);
  uint64_t v48 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v47 = (char *)&v47 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B4C0);
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v28 = (char *)&v47 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = *v1;
  int v30 = *((unsigned __int8 *)v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_228905998();
  sub_2289167B0();
  if (v30 == 1)
  {
    int v31 = v28;
    switch(v29)
    {
      case 1:
        char v89 = 1;
        sub_228905DDC();
        uint64_t v38 = v50;
        sub_228916580();
        uint64_t v33 = *(void (**)(char *, uint64_t))(v51 + 8);
        os_log_type_t v34 = v38;
        unint64_t v35 = &v84;
        goto LABEL_11;
      case 2:
        char v90 = 2;
        sub_228905D88();
        uint64_t v39 = v53;
        sub_228916580();
        uint64_t v33 = *(void (**)(char *, uint64_t))(v54 + 8);
        os_log_type_t v34 = v39;
        unint64_t v35 = &v87;
        goto LABEL_11;
      case 3:
        char v91 = 3;
        sub_228905D34();
        uint64_t v40 = v56;
        sub_228916580();
        uint64_t v33 = *(void (**)(char *, uint64_t))(v57 + 8);
        os_log_type_t v34 = v40;
        unint64_t v35 = (uint64_t *)v94;
        goto LABEL_11;
      case 4:
        char v93 = 5;
        sub_228905C8C();
        uint64_t v41 = v59;
        sub_228916580();
        uint64_t v33 = *(void (**)(char *, uint64_t))(v60 + 8);
        os_log_type_t v34 = v41;
        unint64_t v35 = &v95;
        goto LABEL_11;
      case 5:
        v94[16] = 6;
        sub_228905C38();
        uint64_t v42 = v62;
        sub_228916580();
        uint64_t v33 = *(void (**)(char *, uint64_t))(v63 + 8);
        os_log_type_t v34 = v42;
        unint64_t v35 = &v96;
        goto LABEL_11;
      case 6:
        v94[17] = 7;
        sub_228905BE4();
        unint64_t v43 = v65;
        sub_228916580();
        uint64_t v33 = *(void (**)(char *, uint64_t))(v66 + 8);
        os_log_type_t v34 = v43;
        unint64_t v35 = &v97;
        goto LABEL_11;
      case 7:
        v94[18] = 8;
        sub_228905B90();
        os_log_type_t v45 = v68;
        sub_228916580();
        uint64_t v46 = v69;
        uint64_t v44 = v70;
        goto LABEL_18;
      case 8:
        v94[19] = 9;
        sub_228905B3C();
        os_log_type_t v45 = v71;
        sub_228916580();
        uint64_t v46 = v72;
        uint64_t v44 = v73;
        goto LABEL_18;
      case 9:
        v94[20] = 10;
        sub_228905AE8();
        os_log_type_t v45 = v74;
        sub_228916580();
        uint64_t v46 = v75;
        uint64_t v44 = v76;
        goto LABEL_18;
      case 10:
        v94[21] = 11;
        sub_228905A94();
        os_log_type_t v45 = v77;
        sub_228916580();
        uint64_t v46 = v78;
        uint64_t v44 = v79;
        goto LABEL_18;
      case 11:
        v94[22] = 12;
        sub_228905A40();
        os_log_type_t v45 = v80;
        sub_228916580();
        uint64_t v46 = v81;
        uint64_t v44 = v82;
        goto LABEL_18;
      case 12:
        v94[23] = 13;
        sub_2289059EC();
        os_log_type_t v45 = v83;
        sub_228916580();
        uint64_t v46 = v84;
        uint64_t v44 = v85;
LABEL_18:
        uint64_t v33 = *(void (**)(char *, uint64_t))(v46 + 8);
        os_log_type_t v34 = v45;
        break;
      default:
        char v88 = 0;
        sub_228905E30();
        id v32 = v47;
        sub_228916580();
        uint64_t v33 = *(void (**)(char *, uint64_t))(v48 + 8);
        os_log_type_t v34 = v32;
        unint64_t v35 = &v81;
LABEL_11:
        uint64_t v44 = *(v35 - 32);
        break;
    }
    v33(v34, v44);
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v31, v25);
  }
  else
  {
    char v92 = 4;
    sub_228905CE0();
    sub_228916580();
    uint64_t v36 = v87;
    sub_228916600();
    (*(void (**)(char *, uint64_t))(v86 + 8))(v20, v36);
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v28, v25);
  }
}

uint64_t MobileDocumentElementInternal.hashValue.getter()
{
  return sub_228916780();
}

uint64_t MobileDocumentElementInternal.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  char v93 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B540);
  uint64_t v83 = *(void *)(v3 - 8);
  uint64_t v84 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v97 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B548);
  uint64_t v81 = *(void *)(v5 - 8);
  uint64_t v82 = v5;
  MEMORY[0x270FA5388](v5);
  char v92 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B550);
  uint64_t v79 = *(void *)(v80 - 8);
  MEMORY[0x270FA5388](v80);
  char v91 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B558);
  uint64_t v77 = *(void *)(v78 - 8);
  MEMORY[0x270FA5388](v78);
  char v90 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B560);
  uint64_t v75 = *(void *)(v76 - 8);
  MEMORY[0x270FA5388](v76);
  char v89 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B568);
  uint64_t v73 = *(void *)(v74 - 8);
  MEMORY[0x270FA5388](v74);
  char v88 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B570);
  uint64_t v71 = *(void *)(v72 - 8);
  MEMORY[0x270FA5388](v72);
  uint64_t v87 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B578);
  uint64_t v70 = *(void *)(v69 - 8);
  MEMORY[0x270FA5388](v69);
  uint64_t v86 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B580);
  uint64_t v67 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68);
  uint64_t v96 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B588);
  uint64_t v58 = *(void *)(v66 - 8);
  MEMORY[0x270FA5388](v66);
  uint64_t v95 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B590);
  uint64_t v64 = *(void *)(v65 - 8);
  MEMORY[0x270FA5388](v65);
  uint64_t v94 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B598);
  uint64_t v62 = *(void *)(v63 - 8);
  MEMORY[0x270FA5388](v63);
  uint64_t v85 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B5A0);
  uint64_t v60 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  uint64_t v18 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B5A8);
  uint64_t v59 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B5B0);
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v54 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = a1[3];
  uint64_t v98 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v26);
  sub_228905998();
  uint64_t v27 = v99;
  sub_2289167A0();
  uint64_t v28 = v27;
  if (v27) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v98);
  }
  uint64_t v56 = v21;
  uint64_t v55 = v19;
  uint64_t v57 = v18;
  int v30 = v94;
  uint64_t v29 = v95;
  id v32 = v96;
  int v31 = v97;
  uint64_t v99 = v23;
  uint64_t v33 = sub_228916570();
  if (*(void *)(v33 + 16) != 1)
  {
    uint64_t v35 = sub_228916360();
    swift_allocError();
    unint64_t v37 = v36;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26826B190);
    *unint64_t v37 = &type metadata for MobileDocumentElementInternal;
    sub_2289164D0();
    sub_228916350();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v35 - 8) + 104))(v37, *MEMORY[0x263F8DCB0], v35);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v99 + 8))(v25, v22);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v98);
  }
  switch(*(unsigned char *)(v33 + 32))
  {
    case 1:
      char v101 = 1;
      sub_228905DDC();
      uint64_t v38 = v57;
      sub_2289164C0();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v38, v61);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v99 + 8))(v25, v22);
      uint64_t v28 = 1;
      goto LABEL_9;
    case 2:
      char v102 = 2;
      sub_228905D88();
      uint64_t v40 = v85;
      sub_2289164C0();
      (*(void (**)(char *, uint64_t))(v62 + 8))(v40, v63);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v99 + 8))(v25, v22);
      char v39 = 1;
      uint64_t v28 = 2;
      break;
    case 3:
      char v103 = 3;
      sub_228905D34();
      sub_2289164C0();
      (*(void (**)(char *, uint64_t))(v64 + 8))(v30, v65);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v99 + 8))(v25, v22);
      char v39 = 1;
      uint64_t v28 = 3;
      break;
    case 4:
      char v104 = 4;
      sub_228905CE0();
      sub_2289164C0();
      uint64_t v41 = v66;
      uint64_t v42 = sub_228916550();
      uint64_t v43 = v99;
      uint64_t v28 = v42;
      (*(void (**)(char *, uint64_t))(v58 + 8))(v29, v41);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v25, v22);
      char v39 = 0;
      break;
    case 5:
      char v105 = 5;
      sub_228905C8C();
      sub_2289164C0();
      (*(void (**)(char *, uint64_t))(v67 + 8))(v32, v68);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v99 + 8))(v25, v22);
      char v39 = 1;
      uint64_t v28 = 4;
      break;
    case 6:
      char v106 = 6;
      sub_228905C38();
      uint64_t v44 = v86;
      sub_2289164C0();
      (*(void (**)(char *, uint64_t))(v70 + 8))(v44, v69);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v99 + 8))(v25, v22);
      char v39 = 1;
      uint64_t v28 = 5;
      break;
    case 7:
      char v107 = 7;
      sub_228905BE4();
      os_log_type_t v45 = v87;
      sub_2289164C0();
      (*(void (**)(char *, uint64_t))(v71 + 8))(v45, v72);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v99 + 8))(v25, v22);
      char v39 = 1;
      uint64_t v28 = 6;
      break;
    case 8:
      char v108 = 8;
      sub_228905B90();
      uint64_t v46 = v88;
      sub_2289164C0();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v46, v74);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v99 + 8))(v25, v22);
      char v39 = 1;
      uint64_t v28 = 7;
      break;
    case 9:
      char v109 = 9;
      sub_228905B3C();
      uint64_t v47 = v89;
      sub_2289164C0();
      (*(void (**)(char *, uint64_t))(v75 + 8))(v47, v76);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v99 + 8))(v25, v22);
      char v39 = 1;
      uint64_t v28 = 8;
      break;
    case 0xA:
      char v110 = 10;
      sub_228905AE8();
      uint64_t v48 = v90;
      sub_2289164C0();
      (*(void (**)(char *, uint64_t))(v77 + 8))(v48, v78);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v99 + 8))(v25, v22);
      char v39 = 1;
      uint64_t v28 = 9;
      break;
    case 0xB:
      char v111 = 11;
      sub_228905A94();
      uint64_t v49 = v91;
      sub_2289164C0();
      (*(void (**)(char *, uint64_t))(v79 + 8))(v49, v80);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v99 + 8))(v25, v22);
      char v39 = 1;
      uint64_t v28 = 10;
      break;
    case 0xC:
      char v112 = 12;
      sub_228905A40();
      uint64_t v50 = v92;
      sub_2289164C0();
      (*(void (**)(char *, uint64_t))(v81 + 8))(v50, v82);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v99 + 8))(v25, v22);
      char v39 = 1;
      uint64_t v28 = 11;
      break;
    case 0xD:
      char v113 = 13;
      sub_2289059EC();
      sub_2289164C0();
      (*(void (**)(char *, uint64_t))(v83 + 8))(v31, v84);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v99 + 8))(v25, v22);
      char v39 = 1;
      uint64_t v28 = 12;
      break;
    default:
      char v100 = 0;
      sub_228905E30();
      os_log_type_t v34 = v56;
      sub_2289164C0();
      (*(void (**)(char *, uint64_t))(v59 + 8))(v34, v55);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v99 + 8))(v25, v22);
LABEL_9:
      char v39 = 1;
      break;
  }
  uint64_t v52 = (uint64_t)v98;
  uint64_t v53 = v93;
  *char v93 = v28;
  *((unsigned char *)v53 + 8) = v39;
  return __swift_destroy_boxed_opaque_existential_1(v52);
}

uint64_t sub_228905734@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return MobileDocumentElementInternal.init(from:)(a1, a2);
}

uint64_t sub_22890574C(void *a1)
{
  return MobileDocumentElementInternal.encode(to:)(a1);
}

uint64_t sub_228905764()
{
  return sub_228916780();
}

uint64_t sub_2289057BC()
{
  return sub_228916780();
}

BOOL _s15ProximityReader29MobileDocumentElementInternalO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  if (*((unsigned char *)a1 + 8) == 1)
  {
    switch(v2)
    {
      case 1:
        if (v3 != 1) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 2:
        if (v3 != 2) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 3:
        if (v3 != 3) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 4:
        if (v3 != 4) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 5:
        if (v3 != 5) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 6:
        if (v3 != 6) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 7:
        if (v3 != 7) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 8:
        if (v3 != 8) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 9:
        if (v3 != 9) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 10:
        if (v3 != 10) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 11:
        if (v3 != 11) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 12:
        if (v3 <= 0xB) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      default:
        if (v3) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
    }
  }
  else
  {
    return (*(unsigned char *)(a2 + 8) & 1) == 0 && v2 == v3;
  }
  return result;
}

unint64_t sub_228905998()
{
  unint64_t result = qword_26826B4C8;
  if (!qword_26826B4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B4C8);
  }
  return result;
}

unint64_t sub_2289059EC()
{
  unint64_t result = qword_26826B4D0;
  if (!qword_26826B4D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B4D0);
  }
  return result;
}

unint64_t sub_228905A40()
{
  unint64_t result = qword_26826B4D8;
  if (!qword_26826B4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B4D8);
  }
  return result;
}

unint64_t sub_228905A94()
{
  unint64_t result = qword_26826B4E0;
  if (!qword_26826B4E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B4E0);
  }
  return result;
}

unint64_t sub_228905AE8()
{
  unint64_t result = qword_26826B4E8;
  if (!qword_26826B4E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B4E8);
  }
  return result;
}

unint64_t sub_228905B3C()
{
  unint64_t result = qword_26826B4F0;
  if (!qword_26826B4F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B4F0);
  }
  return result;
}

unint64_t sub_228905B90()
{
  unint64_t result = qword_26826B4F8;
  if (!qword_26826B4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B4F8);
  }
  return result;
}

unint64_t sub_228905BE4()
{
  unint64_t result = qword_26826B500;
  if (!qword_26826B500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B500);
  }
  return result;
}

unint64_t sub_228905C38()
{
  unint64_t result = qword_26826B508;
  if (!qword_26826B508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B508);
  }
  return result;
}

unint64_t sub_228905C8C()
{
  unint64_t result = qword_26826B510;
  if (!qword_26826B510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B510);
  }
  return result;
}

unint64_t sub_228905CE0()
{
  unint64_t result = qword_26826B518;
  if (!qword_26826B518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B518);
  }
  return result;
}

unint64_t sub_228905D34()
{
  unint64_t result = qword_26826B520;
  if (!qword_26826B520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B520);
  }
  return result;
}

unint64_t sub_228905D88()
{
  unint64_t result = qword_26826B528;
  if (!qword_26826B528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B528);
  }
  return result;
}

unint64_t sub_228905DDC()
{
  unint64_t result = qword_26826B530;
  if (!qword_26826B530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B530);
  }
  return result;
}

unint64_t sub_228905E30()
{
  unint64_t result = qword_26826B538;
  if (!qword_26826B538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B538);
  }
  return result;
}

unint64_t sub_228905E88()
{
  unint64_t result = qword_26826B5B8;
  if (!qword_26826B5B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B5B8);
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentElementInternal()
{
  return &type metadata for MobileDocumentElementInternal;
}

unsigned char *storeEnumTagSinglePayload for MobileDocumentElementInternal.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *unint64_t result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x228905FB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 13;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentElementInternal.CodingKeys()
{
  return &type metadata for MobileDocumentElementInternal.CodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentElementInternal.GivenNameCodingKeys()
{
  return &type metadata for MobileDocumentElementInternal.GivenNameCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentElementInternal.FamilyNameCodingKeys()
{
  return &type metadata for MobileDocumentElementInternal.FamilyNameCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentElementInternal.PortraitCodingKeys()
{
  return &type metadata for MobileDocumentElementInternal.PortraitCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentElementInternal.AgeCodingKeys()
{
  return &type metadata for MobileDocumentElementInternal.AgeCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for MobileDocumentElementInternal.AgeAtLeastCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2289060CCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentElementInternal.AgeAtLeastCodingKeys()
{
  return &type metadata for MobileDocumentElementInternal.AgeAtLeastCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentElementInternal.DateOfBirthCodingKeys()
{
  return &type metadata for MobileDocumentElementInternal.DateOfBirthCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentElementInternal.SexCodingKeys()
{
  return &type metadata for MobileDocumentElementInternal.SexCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentElementInternal.AddressCodingKeys()
{
  return &type metadata for MobileDocumentElementInternal.AddressCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentElementInternal.IssuingAuthorityCodingKeys()
{
  return &type metadata for MobileDocumentElementInternal.IssuingAuthorityCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentElementInternal.DrivingPrivilegesCodingKeys()
{
  return &type metadata for MobileDocumentElementInternal.DrivingPrivilegesCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentElementInternal.DocumentNumberCodingKeys()
{
  return &type metadata for MobileDocumentElementInternal.DocumentNumberCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentElementInternal.DocumentIssueDateCodingKeys()
{
  return &type metadata for MobileDocumentElementInternal.DocumentIssueDateCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentElementInternal.DocumentExpirationDateCodingKeys()
{
  return &type metadata for MobileDocumentElementInternal.DocumentExpirationDateCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentElementInternal.DocumentDHSComplianceStatusCodingKeys()
{
  return &type metadata for MobileDocumentElementInternal.DocumentDHSComplianceStatusCodingKeys;
}

unint64_t sub_228906198()
{
  unint64_t result = qword_26826B5C0;
  if (!qword_26826B5C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B5C0);
  }
  return result;
}

unint64_t sub_2289061F0()
{
  unint64_t result = qword_26826B5C8;
  if (!qword_26826B5C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B5C8);
  }
  return result;
}

unint64_t sub_228906248()
{
  unint64_t result = qword_26826B5D0;
  if (!qword_26826B5D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B5D0);
  }
  return result;
}

unint64_t sub_2289062A0()
{
  unint64_t result = qword_26826B5D8;
  if (!qword_26826B5D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B5D8);
  }
  return result;
}

unint64_t sub_2289062F8()
{
  unint64_t result = qword_26826B5E0;
  if (!qword_26826B5E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B5E0);
  }
  return result;
}

unint64_t sub_228906350()
{
  unint64_t result = qword_26826B5E8;
  if (!qword_26826B5E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B5E8);
  }
  return result;
}

unint64_t sub_2289063A8()
{
  unint64_t result = qword_26826B5F0;
  if (!qword_26826B5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B5F0);
  }
  return result;
}

unint64_t sub_228906400()
{
  unint64_t result = qword_26826B5F8;
  if (!qword_26826B5F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B5F8);
  }
  return result;
}

unint64_t sub_228906458()
{
  unint64_t result = qword_26826B600;
  if (!qword_26826B600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B600);
  }
  return result;
}

unint64_t sub_2289064B0()
{
  unint64_t result = qword_26826B608;
  if (!qword_26826B608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B608);
  }
  return result;
}

unint64_t sub_228906508()
{
  unint64_t result = qword_26826B610;
  if (!qword_26826B610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B610);
  }
  return result;
}

unint64_t sub_228906560()
{
  unint64_t result = qword_26826B618;
  if (!qword_26826B618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B618);
  }
  return result;
}

unint64_t sub_2289065B8()
{
  unint64_t result = qword_26826B620;
  if (!qword_26826B620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B620);
  }
  return result;
}

unint64_t sub_228906610()
{
  unint64_t result = qword_26826B628;
  if (!qword_26826B628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B628);
  }
  return result;
}

unint64_t sub_228906668()
{
  unint64_t result = qword_26826B630;
  if (!qword_26826B630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B630);
  }
  return result;
}

unint64_t sub_2289066C0()
{
  unint64_t result = qword_26826B638;
  if (!qword_26826B638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B638);
  }
  return result;
}

unint64_t sub_228906718()
{
  unint64_t result = qword_26826B640;
  if (!qword_26826B640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B640);
  }
  return result;
}

unint64_t sub_228906770()
{
  unint64_t result = qword_26826B648;
  if (!qword_26826B648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B648);
  }
  return result;
}

unint64_t sub_2289067C8()
{
  unint64_t result = qword_26826B650;
  if (!qword_26826B650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B650);
  }
  return result;
}

unint64_t sub_228906820()
{
  unint64_t result = qword_26826B658;
  if (!qword_26826B658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B658);
  }
  return result;
}

unint64_t sub_228906878()
{
  unint64_t result = qword_26826B660;
  if (!qword_26826B660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B660);
  }
  return result;
}

unint64_t sub_2289068D0()
{
  unint64_t result = qword_26826B668;
  if (!qword_26826B668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B668);
  }
  return result;
}

unint64_t sub_228906928()
{
  unint64_t result = qword_26826B670;
  if (!qword_26826B670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B670);
  }
  return result;
}

unint64_t sub_228906980()
{
  unint64_t result = qword_26826B678;
  if (!qword_26826B678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B678);
  }
  return result;
}

unint64_t sub_2289069D8()
{
  unint64_t result = qword_26826B680;
  if (!qword_26826B680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B680);
  }
  return result;
}

unint64_t sub_228906A30()
{
  unint64_t result = qword_26826B688;
  if (!qword_26826B688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B688);
  }
  return result;
}

unint64_t sub_228906A88()
{
  unint64_t result = qword_26826B690;
  if (!qword_26826B690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B690);
  }
  return result;
}

unint64_t sub_228906AE0()
{
  unint64_t result = qword_26826B698;
  if (!qword_26826B698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B698);
  }
  return result;
}

unint64_t sub_228906B38()
{
  unint64_t result = qword_26826B6A0;
  if (!qword_26826B6A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B6A0);
  }
  return result;
}

unint64_t sub_228906B90()
{
  unint64_t result = qword_26826B6A8;
  if (!qword_26826B6A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B6A8);
  }
  return result;
}

unint64_t sub_228906BE8()
{
  unint64_t result = qword_26826B6B0;
  if (!qword_26826B6B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B6B0);
  }
  return result;
}

unint64_t sub_228906C40()
{
  unint64_t result = qword_26826B6B8;
  if (!qword_26826B6B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B6B8);
  }
  return result;
}

uint64_t sub_228906C94(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D614E6E65766967 && a2 == 0xE900000000000065;
  if (v2 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x614E796C696D6166 && a2 == 0xEA0000000000656DLL || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7469617274726F70 && a2 == 0xE800000000000000 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 6645601 && a2 == 0xE300000000000000 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x61654C7441656761 && a2 == 0xEA00000000007473 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6942664F65746164 && a2 == 0xEB00000000687472 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 7890291 && a2 == 0xE300000000000000 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x73736572646461 && a2 == 0xE700000000000000 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000228927A90 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000228927AB0 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x746E656D75636F64 && a2 == 0xEE007265626D754ELL || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000228927AF0 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000228927B10 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000228927B30)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else
  {
    char v6 = sub_228916660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 13;
    }
    else {
      return 14;
    }
  }
}

unint64_t ReadFeedbackInternal.externalize.getter@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  if (result >= 0xA)
  {
    unint64_t result = sub_228916690();
    __break(1u);
  }
  else
  {
    *(void *)a2 = result + 1;
    *(unsigned char *)(a2 + 8) = 1;
  }
  return result;
}

unint64_t ReadFeedbackInternal.externalizeToReadEvent.getter@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2 = 7;
  if (result < 7) {
    char v2 = result;
  }
  *a2 = v2;
  return result;
}

unint64_t ReadFeedbackInternal.init(rawValue:)(unint64_t a1)
{
  return sub_2289074A0(a1);
}

unint64_t sub_2289072C0@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_2289074A0(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

unint64_t ReadFeedbackInternal.description.getter(uint64_t a1)
{
  unint64_t result = 0x726F467964616572;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      unint64_t result = 0x6574654464726163;
      break;
    case 2:
      unint64_t result = 0x614365766F6D6572;
      break;
    case 3:
      unint64_t result = 0x706D6F4364616572;
      break;
    case 4:
      unint64_t result = 0x7274655264616572;
      break;
    case 5:
      unint64_t result = 0x636E614364616572;
      break;
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    case 7:
    case 8:
      unint64_t result = 0xD000000000000011;
      break;
    case 9:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      sub_228916690();
      __break(1u);
      JUMPOUT(0x228907470);
  }
  return result;
}

unint64_t sub_228907498()
{
  return ReadFeedbackInternal.description.getter(*v0);
}

unint64_t sub_2289074A0(unint64_t result)
{
  if (result > 9) {
    return 0;
  }
  return result;
}

unint64_t sub_2289074B4()
{
  unint64_t result = qword_26826B6C0;
  if (!qword_26826B6C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B6C0);
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadFeedbackInternal()
{
  return &type metadata for ReadFeedbackInternal;
}

void __swiftcall DiscoveryAnalyticsData.init(eventType:appIdPresence:contentId:contentSessionId:contentVersion:contentRegion:contentScrollable:contentScrollQuantile:errorType:)(ProximityReader::DiscoveryAnalyticsData *__return_ptr retstr, ProximityReader::DiscoveryAnalyticsData::EventType eventType, Swift::Bool appIdPresence, Swift::String contentId, Swift::String contentSessionId, Swift::String contentVersion, Swift::String contentRegion, Swift::Bool_optional contentScrollable, Swift::String_optional contentScrollQuantile, Swift::String_optional errorType)
{
  Swift::String v42 = contentVersion;
  uint64_t countAndFlagsBits = contentId._countAndFlagsBits;
  uint64_t v12 = (ProximityReader::DiscoveryAnalyticsData::EventType *)eventType;
  object = contentSessionId._object;
  uint64_t v41 = errorType.value._object;
  uint64_t v38 = contentSessionId._countAndFlagsBits;
  uint64_t v39 = errorType.value._countAndFlagsBits;
  uint64_t v36 = contentId._object;
  unint64_t v37 = contentScrollQuantile.value._object;
  uint64_t v35 = contentScrollQuantile.value._countAndFlagsBits;
  BOOL value = contentScrollable.value;
  uint64_t v14 = sub_228915430();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = &v33[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B2C0);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = &v33[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  ProximityReader::DiscoveryAnalyticsData::EventType v21 = *v12;
  Swift::Bool v43 = appIdPresence;
  sub_2289153D0();
  sub_2289153C0();
  (*(void (**)(unsigned char *, uint64_t))(v15 + 8))(v17, v14);
  uint64_t v22 = sub_2289153B0();
  uint64_t v23 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v23 + 48))(v20, 1, v22) == 1)
  {
    sub_2288110C0((uint64_t)v20, &qword_26826B2C0);
    uint64_t v24 = 0;
    uint64_t v25 = (void *)0xE000000000000000;
  }
  else
  {
    uint64_t v24 = sub_228915390();
    uint64_t v25 = v26;
    (*(void (**)(unsigned char *, uint64_t))(v23 + 8))(v20, v22);
  }
  Swift::Bool v27 = v43;
  retstr->eventType = v21;
  retstr->appIdPresence = v27;
  retstr->locale._uint64_t countAndFlagsBits = v24;
  retstr->locale._object = v25;
  uint64_t v28 = v36;
  retstr->contentId._uint64_t countAndFlagsBits = countAndFlagsBits;
  retstr->contentId._object = v28;
  uint64_t v29 = object;
  retstr->contentSessionId._uint64_t countAndFlagsBits = v38;
  retstr->contentSessionId._object = v29;
  int v30 = v42._object;
  retstr->contentVersion._uint64_t countAndFlagsBits = v42._countAndFlagsBits;
  retstr->contentVersion._object = v30;
  retstr->contentRegion = contentRegion;
  retstr->contentScrollable.BOOL value = value;
  int v31 = v37;
  retstr->contentScrollQuantile.value._uint64_t countAndFlagsBits = v35;
  retstr->contentScrollQuantile.value._object = v31;
  id v32 = v41;
  retstr->errorType.value._uint64_t countAndFlagsBits = v39;
  retstr->errorType.value._object = v32;
}

uint64_t DiscoveryAnalyticsData.encode()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v1);
  int v3 = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v4 = v0[5];
  v16[4] = v0[4];
  v16[5] = v4;
  long long v5 = v0[7];
  v16[6] = v0[6];
  v16[7] = v5;
  long long v6 = v0[1];
  v16[0] = *v0;
  v16[1] = v6;
  long long v7 = v0[3];
  v16[2] = v0[2];
  void v16[3] = v7;
  uint64_t result = sub_228907988();
  if (v9 >> 60 == 15)
  {
    if (qword_268267F38 != -1) {
      swift_once();
    }
    uint64_t v10 = __swift_project_value_buffer(v1, (uint64_t)qword_268283E10);
    sub_22880AB38(v10, (uint64_t)v3);
    uint64_t v11 = sub_2289155C0();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v3, 1, v11) == 1)
    {
      sub_2288110C0((uint64_t)v3, (uint64_t *)&unk_2682684D0);
    }
    else
    {
      uint64_t v13 = sub_2289155A0();
      os_log_type_t v14 = sub_228916070();
      if (os_log_type_enabled(v13, v14))
      {
        uint64_t v15 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v15 = 0;
        _os_log_impl(&dword_228806000, v13, v14, "DiscoveryAnalyticsData - failed to encode object", v15, 2u);
        MEMORY[0x22A6A1090](v15, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v12 + 8))(v3, v11);
    }
    return 0;
  }
  return result;
}

uint64_t sub_228907988()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v1);
  uint64_t v2 = sub_228914E60();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  long long v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v6 = v0[5];
  v12[15] = v0[4];
  v12[16] = v6;
  long long v7 = v0[7];
  v12[17] = v0[6];
  v12[18] = v7;
  long long v8 = v0[1];
  v12[11] = *v0;
  v12[12] = v8;
  long long v9 = v0[3];
  v12[13] = v0[2];
  v12[14] = v9;
  sub_228914EA0();
  swift_allocObject();
  sub_228914E90();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F06198], v2);
  sub_228914E70();
  sub_22890B9AC();
  uint64_t v10 = sub_228914E80();
  swift_release();
  return v10;
}

uint64_t sub_228907DB8()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v1);
  uint64_t v2 = sub_228914E60();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  long long v5 = v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0) + 56;
  sub_228870C14(v0, (uint64_t)v9);
  sub_228914EA0();
  swift_allocObject();
  sub_228914E90();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F06198], v2);
  sub_228914E70();
  sub_22890B958();
  uint64_t v6 = sub_228914E80();
  swift_release();
  return v6;
}

uint64_t sub_2289081A4()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v0);
  uint64_t v1 = type metadata accessor for AnalyticsReporter();
  MEMORY[0x270FA5388](v1);
  uint64_t v2 = sub_228914E60();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  long long v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_228914EA0();
  swift_allocObject();
  sub_228914E90();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F06198], v2);
  sub_228914E70();
  sub_22890B900();
  uint64_t v6 = sub_228914E80();
  swift_release();
  return v6;
}

unint64_t DiscoveryAnalyticsData.EventType.toAnalyticsEventType.getter()
{
  unint64_t result = 0xD000000000000010;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x53746E65746E6F63;
      break;
    default:
      return result;
  }
  return result;
}

ProximityReader::DiscoveryAnalyticsData::EventType_optional __swiftcall DiscoveryAnalyticsData.EventType.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 4;
  if ((unint64_t)rawValue < 4) {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (ProximityReader::DiscoveryAnalyticsData::EventType_optional)rawValue;
}

uint64_t DiscoveryAnalyticsData.EventType.rawValue.getter()
{
  return *v0;
}

ProximityReader::DiscoveryAnalyticsData::EventType_optional sub_22890866C(Swift::Int *a1)
{
  return DiscoveryAnalyticsData.EventType.init(rawValue:)(*a1);
}

uint64_t sub_228908674()
{
  return sub_228915E60();
}

uint64_t sub_2289086D4()
{
  return sub_228915E50();
}

void DiscoveryAnalyticsData.eventType.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t DiscoveryAnalyticsData.appIdPresence.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t DiscoveryAnalyticsData.locale.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DiscoveryAnalyticsData.contentId.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DiscoveryAnalyticsData.contentSessionId.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DiscoveryAnalyticsData.contentVersion.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DiscoveryAnalyticsData.contentRegion.getter()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DiscoveryAnalyticsData.contentScrollable.getter()
{
  return *(unsigned __int8 *)(v0 + 88);
}

uint64_t DiscoveryAnalyticsData.contentScrollQuantile.getter()
{
  uint64_t v1 = *(void *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DiscoveryAnalyticsData.errorType.getter()
{
  uint64_t v1 = *(void *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

Swift::Void __swiftcall DiscoveryAnalyticsData.logEntry()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2682684D0);
  MEMORY[0x270FA5388](v1);
  uint64_t v121 = (uint64_t)&v120 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  long long v5 = (char *)&v120 - v4;
  MEMORY[0x270FA5388](v6);
  uint64_t v124 = (uint64_t)&v120 - v7;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v120 - v9;
  MEMORY[0x270FA5388](v11);
  uint64_t v132 = (char *)&v120 - v12;
  MEMORY[0x270FA5388](v13);
  uint64_t v133 = (char *)&v120 - v14;
  MEMORY[0x270FA5388](v15);
  uint64_t v125 = (uint64_t)&v120 - v16;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v120 - v18;
  MEMORY[0x270FA5388](v20);
  uint64_t v123 = (char *)&v120 - v21;
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v120 - v23;
  MEMORY[0x270FA5388](v25);
  Swift::Bool v27 = (char *)&v120 - v26;
  long long v28 = v0[5];
  long long v140 = v0[4];
  long long v141 = v28;
  long long v29 = v0[7];
  long long v142 = v0[6];
  long long v143 = v29;
  long long v30 = v0[1];
  long long v136 = *v0;
  long long v137 = v30;
  long long v31 = v0[3];
  long long v138 = v0[2];
  long long v139 = v31;
  if (qword_268267F38 != -1) {
    swift_once();
  }
  uint64_t v32 = __swift_project_value_buffer(v1, (uint64_t)qword_268283E10);
  sub_22880AB38(v32, (uint64_t)v27);
  uint64_t v33 = sub_2289155C0();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
  uint64_t v131 = v34 + 48;
  unsigned int v36 = v35(v27, 1, v33);
  uint64_t v126 = v5;
  uint64_t v129 = v32;
  unint64_t v122 = v19;
  if (v36 == 1)
  {
    sub_2288110C0((uint64_t)v27, (uint64_t *)&unk_2682684D0);
  }
  else
  {
    unint64_t v37 = sub_2289155A0();
    os_log_type_t v38 = sub_228916070();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v39 = 0;
      _os_log_impl(&dword_228806000, v37, v38, "*-*-*-* proxreader - DiscoveryAnalyticsData", v39, 2u);
      MEMORY[0x22A6A1090](v39, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v34 + 8))(v27, v33);
    uint64_t v32 = v129;
  }
  uint64_t v40 = (uint64_t)v133;
  sub_22880AB38(v32, (uint64_t)v24);
  unsigned int v41 = v35(v24, 1, v33);
  uint64_t v127 = v34;
  uint64_t v130 = v10;
  if (v41 == 1)
  {
    sub_2288110C0((uint64_t)v24, (uint64_t *)&unk_2682684D0);
    uint64_t v42 = (uint64_t)v123;
  }
  else
  {
    sub_22890AAF0((uint64_t)&v136);
    sub_22890AAF0((uint64_t)&v136);
    Swift::Bool v43 = sub_2289155A0();
    os_log_type_t v44 = sub_228916070();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = 0xD000000000000010;
      uint64_t v46 = (uint8_t *)swift_slowAlloc();
      uint64_t v47 = swift_slowAlloc();
      uint64_t v135 = v47;
      *(_DWORD *)uint64_t v46 = 136315138;
      unint64_t v48 = 0x800000022892B940;
      uint64_t v49 = v47;
      switch((char)v136)
      {
        case 1:
          unint64_t v48 = 0xEF64656C6C6F7263;
          uint64_t v45 = 0x53746E65746E6F63;
          break;
        case 2:
          unint64_t v48 = 0x800000022892B960;
          break;
        case 3:
          unint64_t v48 = 0xE500000000000000;
          uint64_t v45 = 0x726F727265;
          break;
        default:
          break;
      }
      uint64_t v134 = sub_2288AB2C4(v45, v48, &v135);
      sub_2289161F0();
      swift_bridgeObjectRelease();
      sub_228856738((uint64_t)&v136);
      sub_228856738((uint64_t)&v136);
      _os_log_impl(&dword_228806000, v43, v44, "            eventType = %s", v46, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22A6A1090](v49, -1, -1);
      MEMORY[0x22A6A1090](v46, -1, -1);

      uint64_t v34 = v127;
      uint64_t v32 = v129;
      uint64_t v10 = v130;
    }
    else
    {

      sub_228856738((uint64_t)&v136);
      sub_228856738((uint64_t)&v136);
    }
    uint64_t v42 = (uint64_t)v123;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v24, v33);
    uint64_t v40 = (uint64_t)v133;
  }
  sub_22880AB38(v32, v42);
  unsigned int v50 = v35((char *)v42, 1, v33);
  uint64_t v128 = v35;
  uint64_t v51 = (uint64_t)v132;
  if (v50 == 1)
  {
    sub_2288110C0(v42, (uint64_t *)&unk_2682684D0);
  }
  else
  {
    sub_22890AAF0((uint64_t)&v136);
    sub_22890AAF0((uint64_t)&v136);
    uint64_t v52 = sub_2289155A0();
    os_log_type_t v53 = sub_228916070();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v54 = (uint8_t *)swift_slowAlloc();
      uint64_t v55 = swift_slowAlloc();
      uint64_t v135 = v55;
      *(_DWORD *)uint64_t v54 = 136315138;
      uint64_t v57 = *((void *)&v136 + 1);
      unint64_t v56 = v137;
      swift_bridgeObjectRetain();
      uint64_t v35 = v128;
      uint64_t v134 = sub_2288AB2C4(v57, v56, &v135);
      uint64_t v34 = v127;
      uint64_t v32 = v129;
      sub_2289161F0();
      uint64_t v10 = v130;
      swift_bridgeObjectRelease();
      sub_228856738((uint64_t)&v136);
      sub_228856738((uint64_t)&v136);
      _os_log_impl(&dword_228806000, v52, v53, "               locale = %s", v54, 0xCu);
      swift_arrayDestroy();
      uint64_t v58 = v55;
      uint64_t v42 = (uint64_t)v123;
      MEMORY[0x22A6A1090](v58, -1, -1);
      uint64_t v59 = v54;
      uint64_t v51 = (uint64_t)v132;
      MEMORY[0x22A6A1090](v59, -1, -1);
    }
    else
    {

      sub_228856738((uint64_t)&v136);
      sub_228856738((uint64_t)&v136);
    }
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v42, v33);
    uint64_t v40 = (uint64_t)v133;
  }
  uint64_t v60 = (uint64_t)v122;
  sub_22880AB38(v32, (uint64_t)v122);
  if (v35((char *)v60, 1, v33) == 1)
  {
    sub_2288110C0(v60, (uint64_t *)&unk_2682684D0);
  }
  else
  {
    sub_22890AAF0((uint64_t)&v136);
    uint64_t v61 = sub_2289155A0();
    os_log_type_t v62 = sub_228916070();
    if (os_log_type_enabled(v61, v62))
    {
      uint64_t v63 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v63 = 67109120;
      uint64_t v32 = v129;
      LODWORD(v135) = BYTE1(v136);
      sub_2289161F0();
      sub_228856738((uint64_t)&v136);
      _os_log_impl(&dword_228806000, v61, v62, "        appIdPresence = %{BOOL}d", v63, 8u);
      uint64_t v64 = v63;
      uint64_t v10 = v130;
      MEMORY[0x22A6A1090](v64, -1, -1);
    }
    else
    {

      sub_228856738((uint64_t)&v136);
    }
    uint64_t v51 = (uint64_t)v132;
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v60, v33);
    uint64_t v40 = (uint64_t)v133;
  }
  uint64_t v65 = v125;
  sub_22880AB38(v32, v125);
  if (v35((char *)v65, 1, v33) == 1)
  {
    sub_2288110C0(v65, (uint64_t *)&unk_2682684D0);
  }
  else
  {
    sub_22890AAF0((uint64_t)&v136);
    sub_22890AAF0((uint64_t)&v136);
    uint64_t v66 = sub_2289155A0();
    os_log_type_t v67 = sub_228916070();
    if (os_log_type_enabled(v66, v67))
    {
      uint64_t v68 = (uint8_t *)swift_slowAlloc();
      uint64_t v69 = swift_slowAlloc();
      uint64_t v135 = v69;
      *(_DWORD *)uint64_t v68 = 136315138;
      uint64_t v70 = *((void *)&v137 + 1);
      unint64_t v71 = v138;
      swift_bridgeObjectRetain();
      uint64_t v134 = sub_2288AB2C4(v70, v71, &v135);
      uint64_t v32 = v129;
      sub_2289161F0();
      uint64_t v34 = v127;
      swift_bridgeObjectRelease();
      sub_228856738((uint64_t)&v136);
      sub_228856738((uint64_t)&v136);
      _os_log_impl(&dword_228806000, v66, v67, "            contentId = %s", v68, 0xCu);
      swift_arrayDestroy();
      uint64_t v72 = v69;
      uint64_t v35 = v128;
      MEMORY[0x22A6A1090](v72, -1, -1);
      MEMORY[0x22A6A1090](v68, -1, -1);
    }
    else
    {

      sub_228856738((uint64_t)&v136);
      sub_228856738((uint64_t)&v136);
    }
    uint64_t v51 = (uint64_t)v132;
    uint64_t v40 = (uint64_t)v133;
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v125, v33);
    uint64_t v10 = v130;
  }
  sub_22880AB38(v32, v40);
  if (v35((char *)v40, 1, v33) == 1)
  {
    sub_2288110C0(v40, (uint64_t *)&unk_2682684D0);
    uint64_t v73 = (uint64_t)v126;
  }
  else
  {
    sub_22890AAF0((uint64_t)&v136);
    sub_22890AAF0((uint64_t)&v136);
    uint64_t v74 = sub_2289155A0();
    os_log_type_t v75 = sub_228916070();
    if (os_log_type_enabled(v74, v75))
    {
      uint64_t v76 = (uint8_t *)swift_slowAlloc();
      uint64_t v77 = swift_slowAlloc();
      uint64_t v135 = v77;
      *(_DWORD *)uint64_t v76 = 136315138;
      uint64_t v78 = *((void *)&v138 + 1);
      unint64_t v79 = v139;
      swift_bridgeObjectRetain();
      uint64_t v80 = v78;
      uint64_t v73 = (uint64_t)v126;
      uint64_t v134 = sub_2288AB2C4(v80, v79, &v135);
      uint64_t v32 = v129;
      sub_2289161F0();
      uint64_t v34 = v127;
      swift_bridgeObjectRelease();
      sub_228856738((uint64_t)&v136);
      sub_228856738((uint64_t)&v136);
      _os_log_impl(&dword_228806000, v74, v75, "     contentSessionId = %s", v76, 0xCu);
      swift_arrayDestroy();
      uint64_t v81 = v77;
      uint64_t v35 = v128;
      MEMORY[0x22A6A1090](v81, -1, -1);
      MEMORY[0x22A6A1090](v76, -1, -1);

      uint64_t v51 = (uint64_t)v132;
    }
    else
    {

      sub_228856738((uint64_t)&v136);
      sub_228856738((uint64_t)&v136);
      uint64_t v51 = (uint64_t)v132;
      uint64_t v73 = (uint64_t)v126;
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v133, v33);
    uint64_t v10 = v130;
  }
  sub_22880AB38(v32, v51);
  if (v35((char *)v51, 1, v33) == 1)
  {
    sub_2288110C0(v51, (uint64_t *)&unk_2682684D0);
  }
  else
  {
    sub_22890AAF0((uint64_t)&v136);
    sub_22890AAF0((uint64_t)&v136);
    uint64_t v82 = sub_2289155A0();
    os_log_type_t v83 = sub_228916070();
    if (os_log_type_enabled(v82, v83))
    {
      uint64_t v84 = (uint8_t *)swift_slowAlloc();
      uint64_t v85 = swift_slowAlloc();
      uint64_t v135 = v85;
      *(_DWORD *)uint64_t v84 = 136315138;
      uint64_t v86 = *((void *)&v139 + 1);
      unint64_t v87 = v140;
      swift_bridgeObjectRetain();
      uint64_t v88 = v86;
      uint64_t v73 = (uint64_t)v126;
      uint64_t v134 = sub_2288AB2C4(v88, v87, &v135);
      uint64_t v32 = v129;
      sub_2289161F0();
      uint64_t v34 = v127;
      swift_bridgeObjectRelease();
      sub_228856738((uint64_t)&v136);
      sub_228856738((uint64_t)&v136);
      _os_log_impl(&dword_228806000, v82, v83, "       contentVersion = %s", v84, 0xCu);
      swift_arrayDestroy();
      uint64_t v89 = v85;
      uint64_t v35 = v128;
      MEMORY[0x22A6A1090](v89, -1, -1);
      MEMORY[0x22A6A1090](v84, -1, -1);
    }
    else
    {

      sub_228856738((uint64_t)&v136);
      sub_228856738((uint64_t)&v136);
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v132, v33);
    uint64_t v10 = v130;
  }
  sub_22880AB38(v32, (uint64_t)v10);
  if (v35(v10, 1, v33) == 1)
  {
    sub_2288110C0((uint64_t)v10, (uint64_t *)&unk_2682684D0);
  }
  else
  {
    sub_22890AAF0((uint64_t)&v136);
    sub_22890AAF0((uint64_t)&v136);
    char v90 = sub_2289155A0();
    os_log_type_t v91 = sub_228916070();
    if (os_log_type_enabled(v90, v91))
    {
      char v92 = (uint8_t *)swift_slowAlloc();
      uint64_t v93 = swift_slowAlloc();
      uint64_t v135 = v93;
      *(_DWORD *)char v92 = 136315138;
      uint64_t v94 = *((void *)&v140 + 1);
      unint64_t v95 = v141;
      swift_bridgeObjectRetain();
      uint64_t v96 = v94;
      uint64_t v73 = (uint64_t)v126;
      uint64_t v134 = sub_2288AB2C4(v96, v95, &v135);
      uint64_t v32 = v129;
      sub_2289161F0();
      uint64_t v34 = v127;
      swift_bridgeObjectRelease();
      sub_228856738((uint64_t)&v136);
      sub_228856738((uint64_t)&v136);
      _os_log_impl(&dword_228806000, v90, v91, "        contentRegion = %s", v92, 0xCu);
      swift_arrayDestroy();
      uint64_t v97 = v93;
      uint64_t v35 = v128;
      MEMORY[0x22A6A1090](v97, -1, -1);
      MEMORY[0x22A6A1090](v92, -1, -1);
    }
    else
    {

      sub_228856738((uint64_t)&v136);
      sub_228856738((uint64_t)&v136);
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v130, v33);
  }
  char v98 = BYTE8(v141);
  uint64_t v99 = v124;
  if (BYTE8(v141) == 2)
  {
LABEL_57:
    unint64_t v100 = *((void *)&v142 + 1);
    if (!*((void *)&v142 + 1)) {
      goto LABEL_68;
    }
    goto LABEL_58;
  }
  sub_22880AB38(v32, v124);
  if (v35((char *)v99, 1, v33) == 1)
  {
    sub_2288110C0(v99, (uint64_t *)&unk_2682684D0);
    goto LABEL_57;
  }
  char v108 = sub_2289155A0();
  os_log_type_t v109 = sub_228916070();
  if (os_log_type_enabled(v108, v109))
  {
    int v110 = v98 & 1;
    char v111 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)char v111 = 67109120;
    uint64_t v35 = v128;
    LODWORD(v135) = v110;
    uint64_t v32 = v129;
    sub_2289161F0();
    _os_log_impl(&dword_228806000, v108, v109, "    contentScrollable = %{BOOL}d", v111, 8u);
    MEMORY[0x22A6A1090](v111, -1, -1);
  }

  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v124, v33);
  unint64_t v100 = *((void *)&v142 + 1);
  if (*((void *)&v142 + 1))
  {
LABEL_58:
    char v101 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v35;
    uint64_t v102 = v142;
    sub_22880AB38(v32, v73);
    if (v101(v73, 1, v33) == 1)
    {
      sub_2288110C0(v73, (uint64_t *)&unk_2682684D0);
      uint64_t v35 = v128;
    }
    else
    {
      swift_bridgeObjectRetain_n();
      char v103 = sub_2289155A0();
      os_log_type_t v104 = sub_228916070();
      if (os_log_type_enabled(v103, v104))
      {
        char v105 = (uint8_t *)swift_slowAlloc();
        uint64_t v106 = swift_slowAlloc();
        uint64_t v135 = v106;
        *(_DWORD *)char v105 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v134 = sub_2288AB2C4(v102, v100, &v135);
        uint64_t v34 = v127;
        uint64_t v73 = (uint64_t)v126;
        sub_2289161F0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_228806000, v103, v104, "contentScrollQuantile = %s", v105, 0xCu);
        swift_arrayDestroy();
        uint64_t v107 = v106;
        uint64_t v32 = v129;
        MEMORY[0x22A6A1090](v107, -1, -1);
        MEMORY[0x22A6A1090](v105, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      uint64_t v35 = v128;
      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v73, v33);
    }
  }
LABEL_68:
  unint64_t v112 = *((void *)&v143 + 1);
  if (*((void *)&v143 + 1))
  {
    char v113 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v35;
    uint64_t v114 = v143;
    uint64_t v115 = v121;
    sub_22880AB38(v32, v121);
    if (v113(v115, 1, v33) == 1)
    {
      sub_2288110C0(v115, (uint64_t *)&unk_2682684D0);
    }
    else
    {
      swift_bridgeObjectRetain_n();
      uint64_t v116 = sub_2289155A0();
      os_log_type_t v117 = sub_228916070();
      if (os_log_type_enabled(v116, v117))
      {
        uint64_t v118 = (uint8_t *)swift_slowAlloc();
        uint64_t v119 = swift_slowAlloc();
        uint64_t v135 = v119;
        *(_DWORD *)uint64_t v118 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v134 = sub_2288AB2C4(v114, v112, &v135);
        uint64_t v34 = v127;
        uint64_t v115 = v121;
        sub_2289161F0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_228806000, v116, v117, "         errorType = %s", v118, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22A6A1090](v119, -1, -1);
        MEMORY[0x22A6A1090](v118, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v115, v33);
    }
  }
}

unint64_t sub_228909D30(char a1)
{
  unint64_t result = 0x707954746E657665;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6572506449707061;
      break;
    case 2:
      unint64_t result = 0x656C61636F6CLL;
      break;
    case 3:
      unint64_t result = 0x49746E65746E6F63;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0x56746E65746E6F63;
      break;
    case 6:
      unint64_t result = 0x52746E65746E6F63;
      break;
    case 7:
      unint64_t result = 0xD000000000000011;
      break;
    case 8:
      unint64_t result = 0xD000000000000015;
      break;
    case 9:
      unint64_t result = 0x707954726F727265;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_228909E9C()
{
  return sub_228909D30(*v0);
}

uint64_t sub_228909EA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_22890B440(a1, a2);
  *a3 = result;
  return result;
}

void sub_228909ECC(unsigned char *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_228909ED8(uint64_t a1)
{
  unint64_t v2 = sub_22890AB7C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_228909F14(uint64_t a1)
{
  unint64_t v2 = sub_22890AB7C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DiscoveryAnalyticsData.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B6C8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  int v33 = v1[1];
  uint64_t v8 = *((void *)v1 + 1);
  uint64_t v31 = *((void *)v1 + 2);
  uint64_t v32 = v8;
  uint64_t v9 = *((void *)v1 + 3);
  uint64_t v29 = *((void *)v1 + 4);
  uint64_t v30 = v9;
  uint64_t v10 = *((void *)v1 + 6);
  uint64_t v27 = *((void *)v1 + 5);
  uint64_t v28 = v10;
  uint64_t v11 = *((void *)v1 + 8);
  uint64_t v25 = *((void *)v1 + 7);
  uint64_t v26 = v11;
  uint64_t v12 = *((void *)v1 + 10);
  uint64_t v23 = *((void *)v1 + 9);
  uint64_t v24 = v12;
  int v22 = v1[88];
  uint64_t v13 = *((void *)v1 + 13);
  v21[0] = *((void *)v1 + 12);
  v21[1] = v13;
  uint64_t v14 = *((void *)v1 + 15);
  uint64_t v15 = a1[3];
  uint64_t v16 = a1;
  uint64_t v18 = v17;
  __swift_project_boxed_opaque_existential_1(v16, v15);
  sub_22890AB7C();
  sub_2289167B0();
  char v45 = v7;
  char v44 = 0;
  sub_22890ABD0();
  uint64_t v19 = v34;
  sub_228916610();
  if (!v19)
  {
    uint64_t v34 = v14;
    char v43 = 1;
    sub_2289165E0();
    char v42 = 2;
    sub_2289165D0();
    char v41 = 3;
    sub_2289165D0();
    char v40 = 4;
    sub_2289165D0();
    char v39 = 5;
    sub_2289165D0();
    char v38 = 6;
    sub_2289165D0();
    char v37 = 7;
    sub_2289165A0();
    char v36 = 8;
    sub_228916590();
    char v35 = 9;
    sub_228916590();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v18);
}

uint64_t DiscoveryAnalyticsData.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B6E0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  os_log_type_t v83 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_22890AB7C();
  sub_2289167A0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v83);
  }
  uint64_t v10 = v6;
  unsigned int v50 = a2;
  LOBYTE(v54) = 0;
  sub_22890AC24();
  sub_228916560();
  char v11 = v62[0];
  v62[0] = 1;
  int v12 = sub_228916530();
  v62[0] = 2;
  uint64_t v13 = sub_228916520();
  int v48 = v12;
  uint64_t v49 = v13;
  v62[0] = 3;
  uint64_t v15 = v14;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_228916520();
  uint64_t v53 = v15;
  uint64_t v47 = v16;
  v62[0] = 4;
  uint64_t v18 = v17;
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_228916520();
  uint64_t v52 = v18;
  uint64_t v46 = v19;
  v62[0] = 5;
  uint64_t v51 = v20;
  swift_bridgeObjectRetain();
  uint64_t v44 = sub_228916520();
  uint64_t v45 = v21;
  v62[0] = 6;
  swift_bridgeObjectRetain();
  uint64_t v42 = sub_228916520();
  uint64_t v43 = v22;
  uint64_t v23 = v45;
  v62[0] = 7;
  swift_bridgeObjectRetain();
  int v41 = sub_2289164F0();
  uint64_t v24 = v43;
  v62[0] = 8;
  uint64_t v40 = sub_2289164E0();
  char v80 = 9;
  uint64_t v39 = v25;
  swift_bridgeObjectRetain();
  *(void *)&long long v38 = sub_2289164E0();
  *((void *)&v38 + 1) = v26;
  v48 &= 1u;
  char v27 = v48;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v5);
  LOBYTE(v54) = v11;
  BYTE1(v54) = v27;
  uint64_t v28 = v53;
  *((void *)&v54 + 1) = v49;
  *(void *)&long long v55 = v53;
  *((void *)&v55 + 1) = v47;
  *(void *)&long long v56 = v52;
  uint64_t v29 = v51;
  *((void *)&v56 + 1) = v46;
  *(void *)&long long v57 = v51;
  *((void *)&v57 + 1) = v44;
  *(void *)&long long v58 = v23;
  *((void *)&v58 + 1) = v42;
  *(void *)&long long v59 = v24;
  BYTE8(v59) = v41;
  uint64_t v30 = v39;
  *(void *)&long long v60 = v40;
  *((void *)&v60 + 1) = v39;
  long long v61 = v38;
  sub_22890AAF0((uint64_t)&v54);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v31 = v23;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v32 = v59;
  int v33 = v50;
  v50[4] = v58;
  v33[5] = v32;
  long long v34 = v61;
  v33[6] = v60;
  v33[7] = v34;
  long long v35 = v55;
  _OWORD *v33 = v54;
  v33[1] = v35;
  long long v36 = v57;
  v33[2] = v56;
  v33[3] = v36;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v83);
  v62[0] = v11;
  v62[1] = v48;
  int v63 = *(_DWORD *)&v81[7];
  __int16 v64 = v82;
  uint64_t v65 = v49;
  uint64_t v66 = v28;
  uint64_t v67 = v47;
  uint64_t v68 = v52;
  uint64_t v69 = v46;
  uint64_t v70 = v29;
  uint64_t v71 = v44;
  uint64_t v72 = v31;
  uint64_t v73 = v42;
  uint64_t v74 = v24;
  char v75 = v41;
  *(_DWORD *)&v76[3] = *(_DWORD *)&v81[3];
  *(_DWORD *)uint64_t v76 = *(_DWORD *)v81;
  uint64_t v77 = v40;
  uint64_t v78 = v30;
  long long v79 = v38;
  return sub_228856738((uint64_t)v62);
}

uint64_t sub_22890A990@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return DiscoveryAnalyticsData.init(from:)(a1, a2);
}

uint64_t sub_22890A9A8(void *a1)
{
  return DiscoveryAnalyticsData.encode(to:)(a1);
}

unint64_t DiscoveryAnalyticsData.EventType.description.getter()
{
  unint64_t result = 0xD000000000000010;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x53746E65746E6F63;
      break;
    case 3:
      unint64_t result = 0x726F727265;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_22890AA58()
{
  unint64_t result = 0xD000000000000010;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x53746E65746E6F63;
      break;
    case 3:
      unint64_t result = 0x726F727265;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22890AAF0(uint64_t a1)
{
  return a1;
}

unint64_t sub_22890AB7C()
{
  unint64_t result = qword_26826B6D0;
  if (!qword_26826B6D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B6D0);
  }
  return result;
}

unint64_t sub_22890ABD0()
{
  unint64_t result = qword_26826B6D8;
  if (!qword_26826B6D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B6D8);
  }
  return result;
}

unint64_t sub_22890AC24()
{
  unint64_t result = qword_26826B6E8;
  if (!qword_26826B6E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B6E8);
  }
  return result;
}

unint64_t sub_22890AC7C()
{
  unint64_t result = qword_26826B6F0;
  if (!qword_26826B6F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B6F0);
  }
  return result;
}

uint64_t destroy for DiscoveryAnalyticsData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DiscoveryAnalyticsData(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v8 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v8;
  uint64_t v9 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DiscoveryAnalyticsData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy128_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t assignWithTake for DiscoveryAnalyticsData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DiscoveryAnalyticsData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 128)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DiscoveryAnalyticsData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 128) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 128) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DiscoveryAnalyticsData()
{
  return &type metadata for DiscoveryAnalyticsData;
}

unsigned char *storeEnumTagSinglePayload for DiscoveryAnalyticsData.EventType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22890B16CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DiscoveryAnalyticsData.EventType()
{
  return &type metadata for DiscoveryAnalyticsData.EventType;
}

uint64_t getEnumTagSinglePayload for DiscoveryAnalyticsData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DiscoveryAnalyticsData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *__n128 result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22890B300);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DiscoveryAnalyticsData.CodingKeys()
{
  return &type metadata for DiscoveryAnalyticsData.CodingKeys;
}

unint64_t sub_22890B33C()
{
  unint64_t result = qword_26826B6F8;
  if (!qword_26826B6F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B6F8);
  }
  return result;
}

unint64_t sub_22890B394()
{
  unint64_t result = qword_26826B700;
  if (!qword_26826B700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B700);
  }
  return result;
}

unint64_t sub_22890B3EC()
{
  unint64_t result = qword_26826B708;
  if (!qword_26826B708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B708);
  }
  return result;
}

uint64_t sub_22890B440(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x707954746E657665 && a2 == 0xE900000000000065;
  if (v2 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6572506449707061 && a2 == 0xED000065636E6573 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x49746E65746E6F63 && a2 == 0xE900000000000064 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000022892D550 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x56746E65746E6F63 && a2 == 0xEE006E6F69737265 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x52746E65746E6F63 && a2 == 0xED00006E6F696765 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000022892B820 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000022892B840 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x707954726F727265 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v6 = sub_228916660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

unint64_t sub_22890B8AC()
{
  unint64_t result = qword_26826B710;
  if (!qword_26826B710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B710);
  }
  return result;
}

unint64_t sub_22890B900()
{
  unint64_t result = qword_26826B718;
  if (!qword_26826B718)
  {
    type metadata accessor for AnalyticsReporter();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B718);
  }
  return result;
}

unint64_t sub_22890B958()
{
  unint64_t result = qword_26826B720;
  if (!qword_26826B720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B720);
  }
  return result;
}

unint64_t sub_22890B9AC()
{
  unint64_t result = qword_26826B728;
  if (!qword_26826B728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B728);
  }
  return result;
}

void MobileDriversLicenseDataRequestInternal.__allocating_init(_:sessionIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v7 = objc_allocWithZone(v3);
  MobileDriversLicenseDataRequestInternal.init(_:sessionIdentifier:)(a1, a2, a3);
}

{
  objc_class *v3;
  id v7;

  id v7 = objc_allocWithZone(v3);
  MobileDriversLicenseDataRequestInternal.init(_:sessionIdentifier:)(a1, a2, a3);
}

BOOL MobileDriversLicenseDataRequestInternal.isEmpty.getter()
{
  return !*(void *)(*(void *)(v0
                                + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_retainedElements)
                    + 16)
      && *(void *)(*(void *)(v0
                               + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_nonRetainedElements)
                   + 16) == 0;
}

uint64_t static MobileDriversLicenseDataRequestInternal.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t MobileDriversLicenseDataRequestInternal.retainedElements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MobileDriversLicenseDataRequestInternal.nonRetainedElements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MobileDriversLicenseDataRequestInternal.useSystemTrustedIssuerCertificates.getter()
{
  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_useSystemTrustedIssuerCertificates);
}

uint64_t MobileDriversLicenseDataRequestInternal.additionalTrustedIssuerCertificates.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MobileDriversLicenseDataRequestInternal.documentType.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2288421B8(v1 + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_documentType, a1);
}

uint64_t MobileDriversLicenseDataRequestInternal.hostPreferredLocaleIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0
                 + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_hostPreferredLocaleIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDriversLicenseDataRequestInternal.sessionIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_sessionIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDriversLicenseDataRequestInternal.description.getter()
{
  sub_228916320();
  sub_228915D60();
  swift_bridgeObjectRetain();
  sub_228915D60();
  swift_bridgeObjectRelease();
  sub_228915D60();
  swift_bridgeObjectRetain();
  sub_228915D60();
  swift_bridgeObjectRelease();
  sub_228915D60();
  sub_228902CF8(*(void *)(v0
                          + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_retainedElements));
  sub_228915D60();
  swift_bridgeObjectRelease();
  sub_228915D60();
  sub_228902CF8(*(void *)(v0
                          + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_nonRetainedElements));
  sub_228915D60();
  swift_bridgeObjectRelease();
  sub_228915D60();
  return 0;
}

void MobileDriversLicenseDataRequestInternal.init(_:sessionIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4 = v3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  int v8 = v4;
  uint64_t v9 = swift_bridgeObjectRetain();
  uint64_t v10 = sub_228868E5C(v9);
  swift_bridgeObjectRelease();
  *(void *)&v8[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_retainedElements] = v10;
  uint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = sub_228868E5C(v11);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  *(void *)&v8[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_nonRetainedElements] = v12;
  v8[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_useSystemTrustedIssuerCertificates] = 1;
  *(void *)&v8[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_additionalTrustedIssuerCertificates] = MEMORY[0x263F8EE78];
  uint64_t v13 = &v8[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_documentType];
  uint64_t v14 = sub_2289153B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  id v15 = objc_msgSend(self, sel_mainBundle);
  id v16 = objc_msgSend(v15, sel_preferredLocalizations);

  uint64_t v17 = (void *)sub_228915E90();
  if (v17[2])
  {
    uint64_t v19 = v17[4];
    uint64_t v18 = v17[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v20 = &v8[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_hostPreferredLocaleIdentifier];
    *uint64_t v20 = v19;
    v20[1] = v18;
    uint64_t v21 = &v8[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_sessionIdentifier];
    void *v21 = a2;
    v21[1] = a3;

    v22.receiver = v8;
    v22.super_class = ObjectType;
    objc_msgSendSuper2(&v22, sel_init);
  }
  else
  {
    __break(1u);
  }
}

{
  void *v3;
  void *v4;
  objc_class *ObjectType;
  unsigned char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  objc_super v24;

  unsigned int v4 = v3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  type metadata accessor for MobileNationalIDCardDataRequest();
  uint64_t v9 = v4;
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = sub_228868E5C(v10);
  swift_bridgeObjectRelease();
  *(void *)&v9[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_retainedElements] = v11;
  uint64_t v12 = swift_bridgeObjectRetain();
  uint64_t v13 = sub_228868E5C(v12);
  swift_bridgeObjectRelease();
  *(void *)&v9[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_nonRetainedElements] = v13;
  v9[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_useSystemTrustedIssuerCertificates] = 1;
  *(void *)&v9[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_additionalTrustedIssuerCertificates] = MEMORY[0x263F8EE78];
  uint64_t v14 = &v9[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_documentType];
  id v15 = sub_2289153B0();
  id v16 = *(void *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v14, a1, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  uint64_t v17 = objc_msgSend(self, sel_mainBundle);
  uint64_t v18 = objc_msgSend(v17, sel_preferredLocalizations);

  uint64_t v19 = (void *)sub_228915E90();
  if (v19[2])
  {
    uint64_t v21 = v19[4];
    uint64_t v20 = v19[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    objc_super v22 = &v9[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_hostPreferredLocaleIdentifier];
    uint8_t *v22 = v21;
    v22[1] = v20;
    uint64_t v23 = &v9[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_sessionIdentifier];
    *uint64_t v23 = a2;
    v23[1] = a3;

    v24.receiver = v9;
    v24.super_class = ObjectType;
    objc_msgSendSuper2(&v24, sel_init);
    sub_22890D89C(a1, (uint64_t (*)(void))type metadata accessor for MobileNationalIDCardDataRequest);
  }
  else
  {
    __break(1u);
  }
}

id MobileDriversLicenseDataRequestInternal.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return MobileDriversLicenseDataRequestInternal.init(coder:)(a1);
}

id MobileDriversLicenseDataRequestInternal.init(coder:)(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_22880C37C();
  unsigned int v4 = v1;
  uint64_t v5 = sub_228916120();
  if (!v5)
  {

LABEL_10:
    swift_deallocPartialClassInstance();
    return 0;
  }
  char v6 = (void *)v5;
  uint64_t v7 = sub_228915260();
  unint64_t v9 = v8;

  id v10 = objc_allocWithZone(MEMORY[0x263F08928]);
  sub_22880ACB8(v7, v9);
  id v11 = sub_22880C5EC();
  sub_22880BB80(v7, v9);
  if (!v11)
  {

LABEL_9:
    sub_22880BB80(v7, v9);
    goto LABEL_10;
  }
  sub_22890D968(&qword_26826B758, (void (*)(uint64_t))type metadata accessor for MobileDriversLicenseDataRequestInternal);
  sub_228916090();
  uint64_t v12 = v21;
  if (!v21)
  {

    objc_msgSend(v11, sel_finishDecoding);
    goto LABEL_9;
  }
  *(void *)&v4[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_retainedElements] = *(void *)&v21[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_retainedElements];
  *(void *)&v4[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_nonRetainedElements] = *(void *)&v12[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_nonRetainedElements];
  v4[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_useSystemTrustedIssuerCertificates] = 1;
  *(void *)&v4[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_additionalTrustedIssuerCertificates] = MEMORY[0x263F8EE78];
  sub_2288421B8((uint64_t)&v12[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_documentType], (uint64_t)&v4[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_documentType]);
  uint64_t v13 = *(void *)&v12[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_hostPreferredLocaleIdentifier
                      + 8];
  uint64_t v14 = &v4[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_hostPreferredLocaleIdentifier];
  *(void *)uint64_t v14 = *(void *)&v12[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_hostPreferredLocaleIdentifier];
  *((void *)v14 + 1) = v13;
  uint64_t v15 = *(void *)&v12[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_sessionIdentifier + 8];
  uint64_t v19 = *(void *)&v12[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_sessionIdentifier];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  id v16 = &v4[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_sessionIdentifier];
  *(void *)id v16 = v19;
  *((void *)v16 + 1) = v15;

  objc_msgSend(v11, sel_finishDecoding);
  sub_22880BB80(v7, v9);
  v20.receiver = v4;
  v20.super_class = ObjectType;
  id v17 = objc_msgSendSuper2(&v20, sel_init);

  return v17;
}

Swift::Void __swiftcall MobileDriversLicenseDataRequestInternal.encode(with:)(NSCoder with)
{
  swift_getObjectType();
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08910]), sel_initRequiringSecureCoding_, 1);
  sub_22890D968(&qword_26826B760, (void (*)(uint64_t))type metadata accessor for MobileDriversLicenseDataRequestInternal);
  sub_228916080();
  objc_msgSend(v2, sel_finishEncoding);
  id v3 = objc_msgSend(v2, sel_encodedData);
  if (v3)
  {
    unsigned int v4 = v3;
    uint64_t v5 = (void *)sub_228915C40();
    [(objc_class *)with.super.isa encodeObject:v4 forKey:v5];
  }
  else
  {
    __break(1u);
  }
}

id MobileDriversLicenseDataRequestInternal.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void MobileDriversLicenseDataRequestInternal.init()()
{
}

unint64_t sub_22890C784(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000013;
      break;
    case 2:
      unint64_t result = 0xD000000000000022;
      break;
    case 3:
      unint64_t result = 0xD000000000000023;
      break;
    case 4:
      unint64_t result = 0x746E656D75636F64;
      break;
    case 5:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 6:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_22890C858()
{
  return sub_22890C784(*v0);
}

uint64_t sub_22890C860@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_22890DCF8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22890C888(uint64_t a1)
{
  unint64_t v2 = sub_22890D848();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22890C8C4(uint64_t a1)
{
  unint64_t v2 = sub_22890D848();

  return MEMORY[0x270FA00B8](a1, v2);
}

id MobileDriversLicenseDataRequestInternal.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t MobileDriversLicenseDataRequestInternal.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B768);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22890D848();
  sub_2289167B0();
  uint64_t v11 = *(void *)(v3 + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_retainedElements);
  HIBYTE(v10) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2682697B8);
  sub_22890D8FC(&qword_2682697C0, &qword_2682697B8, (void (*)(void))sub_22886B84C);
  sub_228916610();
  if (!v2)
  {
    uint64_t v11 = *(void *)(v3 + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_nonRetainedElements);
    HIBYTE(v10) = 1;
    sub_228916610();
    LOBYTE(v11) = 2;
    sub_2289165E0();
    uint64_t v11 = *(void *)(v3
                    + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_additionalTrustedIssuerCertificates);
    HIBYTE(v10) = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2682699A0);
    sub_22890D8FC(&qword_26826B778, &qword_2682699A0, (void (*)(void))sub_22880B5DC);
    sub_228916610();
    LOBYTE(v11) = 4;
    type metadata accessor for IdentityDocumentType();
    sub_22890D968(&qword_2682697D0, (void (*)(uint64_t))type metadata accessor for IdentityDocumentType);
    sub_228916610();
    LOBYTE(v11) = 5;
    sub_2289165D0();
    LOBYTE(v11) = 6;
    sub_2289165D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

id MobileDriversLicenseDataRequestInternal.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return MobileDriversLicenseDataRequestInternal.init(from:)(a1);
}

id MobileDriversLicenseDataRequestInternal.init(from:)(void *a1)
{
  id v3 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = type metadata accessor for IdentityDocumentType();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26826B780);
  uint64_t v25 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  unint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = (id)a1[3];
  uint64_t v28 = a1;
  __swift_project_boxed_opaque_existential_1(a1, (uint64_t)v10);
  sub_22890D848();
  uint64_t v11 = v3;
  uint64_t v26 = v9;
  sub_2289167A0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);

    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v24 = v7;
    uint64_t v12 = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2682697B8);
    char v31 = 0;
    sub_22890D8FC((unint64_t *)&unk_2682697E0, &qword_2682697B8, (void (*)(void))sub_22886B910);
    uint64_t v13 = v26;
    uint64_t v14 = v27;
    sub_228916560();
    *(void *)&v11[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_retainedElements] = v32;
    char v31 = 1;
    sub_228916560();
    *(void *)&v11[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_nonRetainedElements] = v32;
    LOBYTE(v32) = 2;
    v11[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_useSystemTrustedIssuerCertificates] = sub_228916530() & 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2682699A0);
    char v31 = 3;
    sub_22890D8FC((unint64_t *)&unk_26826B788, &qword_2682699A0, (void (*)(void))sub_22880BB18);
    sub_228916560();
    *(void *)&v11[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_additionalTrustedIssuerCertificates] = v32;
    LOBYTE(v32) = 4;
    sub_22890D968((unint64_t *)&unk_2682697F0, (void (*)(uint64_t))type metadata accessor for IdentityDocumentType);
    uint64_t v16 = (uint64_t)v24;
    sub_228916560();
    sub_2288428E0(v16, (uint64_t)&v11[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_documentType]);
    LOBYTE(v32) = 5;
    uint64_t v17 = sub_228916520();
    uint64_t v18 = (uint64_t *)&v11[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_hostPreferredLocaleIdentifier];
    *uint64_t v18 = v17;
    v18[1] = v19;
    LOBYTE(v32) = 6;
    uint64_t v20 = sub_228916520();
    uint64_t v21 = (uint64_t *)&v11[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_sessionIdentifier];
    uint64_t *v21 = v20;
    v21[1] = v22;

    v30.receiver = v11;
    v30.super_class = ObjectType;
    id v10 = objc_msgSendSuper2(&v30, sel_init);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v13, v14);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  }
  return v10;
}

id sub_22890D3E0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v6 = objc_allocWithZone(v2);
  id result = MobileDriversLicenseDataRequestInternal.init(from:)(a1);
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_22890D430(void *a1)
{
  return MobileDriversLicenseDataRequestInternal.encode(to:)(a1);
}

uint64_t MobileDriversLicenseDataRequestInternal.requestedElements.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_retainedElements);
  int64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = MEMORY[0x263F8EE78];
  if (v3)
  {
    uint64_t v24 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_22886AC24(0, v3, 0);
    uint64_t v4 = v24;
    uint64_t v5 = v2 + 40;
    do
    {
      uint64_t v6 = sub_228915CC0();
      uint64_t v8 = v7;
      unint64_t v10 = *(void *)(v24 + 16);
      unint64_t v9 = *(void *)(v24 + 24);
      if (v10 >= v9 >> 1) {
        sub_22886AC24(v9 > 1, v10 + 1, 1);
      }
      *(void *)(v24 + 16) = v10 + 1;
      uint64_t v11 = v24 + 16 * v10;
      *(void *)(v11 + 32) = v6;
      *(void *)(v11 + 40) = v8;
      v5 += 16;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  uint64_t v12 = *(void *)(v1 + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_nonRetainedElements);
  int64_t v13 = *(void *)(v12 + 16);
  uint64_t v14 = MEMORY[0x263F8EE78];
  if (v13)
  {
    uint64_t v23 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_22886AC24(0, v13, 0);
    uint64_t v14 = v23;
    uint64_t v15 = v12 + 40;
    do
    {
      uint64_t v16 = sub_228915CC0();
      uint64_t v18 = v17;
      unint64_t v20 = *(void *)(v23 + 16);
      unint64_t v19 = *(void *)(v23 + 24);
      if (v20 >= v19 >> 1) {
        sub_22886AC24(v19 > 1, v20 + 1, 1);
      }
      *(void *)(v23 + 16) = v20 + 1;
      unint64_t v21 = v23 + 16 * v20;
      *(void *)(v21 + 32) = v16;
      *(void *)(v21 + 40) = v18;
      v15 += 16;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
  }
  sub_22886B654(v14);
  return v4;
}

uint64_t MobileDriversLicenseDataRequestInternal.storedElements.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_retainedElements);
  int64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v12 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_22886AC24(0, v2, 0);
    uint64_t v3 = v12;
    uint64_t v4 = v1 + 40;
    do
    {
      uint64_t v5 = sub_228915CC0();
      uint64_t v7 = v6;
      unint64_t v9 = *(void *)(v12 + 16);
      unint64_t v8 = *(void *)(v12 + 24);
      if (v9 >= v8 >> 1) {
        sub_22886AC24(v8 > 1, v9 + 1, 1);
      }
      *(void *)(v12 + 16) = v9 + 1;
      uint64_t v10 = v12 + 16 * v9;
      *(void *)(v10 + 32) = v5;
      *(void *)(v10 + 40) = v7;
      v4 += 16;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  return v3;
}

void MobileDriversLicenseDataRequestInternal.transferType.getter(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_22890D75C()
{
  uint64_t v1 = *(void *)(*v0 + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_sessionIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_22890D79C()
{
  return MobileDriversLicenseDataRequestInternal.requestedElements.getter();
}

uint64_t sub_22890D7C0()
{
  return MobileDriversLicenseDataRequestInternal.storedElements.getter();
}

uint64_t sub_22890D7E4@<X0>(uint64_t a1@<X8>)
{
  return sub_2288421B8(*v1 + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_documentType, a1);
}

uint64_t type metadata accessor for MobileDriversLicenseDataRequestInternal()
{
  uint64_t result = qword_26826B798;
  if (!qword_26826B798) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_22890D848()
{
  unint64_t result = qword_26826B770;
  if (!qword_26826B770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B770);
  }
  return result;
}

uint64_t sub_22890D89C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_22890D8FC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22890D968(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22890D9B0()
{
  return type metadata accessor for MobileDriversLicenseDataRequestInternal();
}

uint64_t sub_22890D9B8()
{
  uint64_t result = type metadata accessor for IdentityDocumentType();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for MobileDriversLicenseDataRequestInternal(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for MobileDriversLicenseDataRequestInternal);
}

uint64_t dispatch thunk of MobileDriversLicenseDataRequestInternal.__allocating_init(_:sessionIdentifier:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of MobileDriversLicenseDataRequestInternal.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of MobileDriversLicenseDataRequestInternal.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

unsigned char *storeEnumTagSinglePayload for MobileDriversLicenseDataRequestInternal.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22890DBB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDataRequestInternal.CodingKeys()
{
  return &type metadata for MobileDriversLicenseDataRequestInternal.CodingKeys;
}

unint64_t sub_22890DBF4()
{
  unint64_t result = qword_26826B7A8;
  if (!qword_26826B7A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B7A8);
  }
  return result;
}

unint64_t sub_22890DC4C()
{
  unint64_t result = qword_26826B7B0;
  if (!qword_26826B7B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B7B0);
  }
  return result;
}

unint64_t sub_22890DCA4()
{
  unint64_t result = qword_26826B7B8[0];
  if (!qword_26826B7B8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26826B7B8);
  }
  return result;
}

uint64_t sub_22890DCF8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000002289285B0 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000002289285D0 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x800000022892D5F0 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x800000022892D620 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746E656D75636F64 && a2 == 0xEC00000065707954 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x8000000228928600 || (sub_228916660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000228928620)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v5 = sub_228916660();
    swift_bridgeObjectRelease();
    if (v5) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_22890DFC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 16);
}

void *sub_22890DFC8(void *a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  unsigned int v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  id v5 = v3;
  id v6 = v4;
  a1[1] = v4;
  return a1;
}

void sub_22890E004(uint64_t a1)
{
  int64_t v2 = *(void **)(a1 + 8);
}

uint64_t sub_22890E040(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a2 + 8);
  id v8 = v7;
  unint64_t v9 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;

  return a1;
}

uint64_t sub_22890E09C(uint64_t a1, _OWORD *a2)
{
  unsigned int v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t type metadata accessor for UncheckedSendableXPCConnection()
{
  return __swift_instantiateGenericMetadata();
}

BOOL MobileDriversLicenseTransferType.isDataTransfer.getter()
{
  return *v0 - 1 < 2;
}

BOOL static MobileDriversLicenseTransferType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t MobileDriversLicenseTransferType.hash(into:)()
{
  return sub_228916760();
}

uint64_t MobileDriversLicenseTransferType.hashValue.getter()
{
  return sub_228916780();
}

uint64_t MobileDriversLicenseTransferType.description.getter()
{
  uint64_t v1 = 0x61746144776172;
  if (*v0 != 1) {
    uint64_t v1 = 1635017060;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x4F79616C70736964;
  }
}

unint64_t sub_22890E1F4()
{
  unint64_t result = qword_26826B840;
  if (!qword_26826B840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B840);
  }
  return result;
}

uint64_t sub_22890E248()
{
  uint64_t v1 = 0x61746144776172;
  if (*v0 != 1) {
    uint64_t v1 = 1635017060;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x4F79616C70736964;
  }
}

unsigned char *storeEnumTagSinglePayload for MobileDriversLicenseTransferType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22890E370);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseTransferType()
{
  return &type metadata for MobileDriversLicenseTransferType;
}

uint64_t MobileDriversLicenseDataRequest.Response.documentElements.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22890E3B4(v1, a1);
}

uint64_t sub_22890E3B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t MobileDriversLicenseDataRequest.Response.hashValue.getter()
{
  sub_228916750();
  MobileDriversLicenseDataRequest.Response.DocumentElements.hash(into:)((uint64_t)v1);
  return sub_228916780();
}

uint64_t sub_22890E460()
{
  sub_228916750();
  MobileDriversLicenseDataRequest.Response.DocumentElements.hash(into:)((uint64_t)v1);
  return sub_228916780();
}

uint64_t sub_22890E4A4()
{
  sub_228916750();
  MobileDriversLicenseDataRequest.Response.DocumentElements.hash(into:)((uint64_t)v1);
  return sub_228916780();
}

unint64_t sub_22890E4E8()
{
  unint64_t result = qword_26826B848;
  if (!qword_26826B848)
  {
    type metadata accessor for MobileDriversLicenseDataRequest.Response();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26826B848);
  }
  return result;
}

uint64_t type metadata accessor for MobileDriversLicenseDataRequest.Response()
{
  uint64_t result = qword_26826B850;
  if (!qword_26826B850) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *_s8ResponseVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements();
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    unsigned int v6 = (int *)v4;
    uint64_t v7 = sub_228915070();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268980);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = v6[5];
    uint64_t v12 = (char *)a1 + v11;
    int64_t v13 = (char *)a2 + v11;
    unint64_t v14 = *((void *)v13 + 1);
    if (v14 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    }
    else
    {
      uint64_t v15 = *(void *)v13;
      sub_22880ACB8(*(void *)v13, *((void *)v13 + 1));
      *(void *)uint64_t v12 = v15;
      *((void *)v12 + 1) = v14;
    }
    *(uint64_t *)((char *)a1 + v6[6]) = *(uint64_t *)((char *)a2 + v6[6]);
    uint64_t v16 = v6[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    *(void *)uint64_t v17 = *(void *)v18;
    v17[8] = v18[8];
    uint64_t v19 = v6[8];
    unint64_t v20 = (char *)a1 + v19;
    unint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = sub_228914F70();
    uint64_t v23 = *(void *)(v22 - 8);
    uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
    swift_bridgeObjectRetain();
    if (v24(v21, 1, v22))
    {
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
      memcpy(v20, v21, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    *((unsigned char *)a1 + v6[9]) = *((unsigned char *)a2 + v6[9]);
    uint64_t v26 = v6[10];
    uint64_t v27 = (char *)a1 + v26;
    uint64_t v28 = (char *)a2 + v26;
    uint64_t v29 = *((void *)v28 + 1);
    uint64_t v57 = v23;
    objc_super v30 = v24;
    if (v29 == 1)
    {
      long long v31 = *((_OWORD *)v28 + 1);
      *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
      *((_OWORD *)v27 + 1) = v31;
      *((_OWORD *)v27 + 2) = *((_OWORD *)v28 + 2);
    }
    else
    {
      *(void *)uint64_t v27 = *(void *)v28;
      *((void *)v27 + 1) = v29;
      uint64_t v32 = *((void *)v28 + 3);
      *((void *)v27 + 2) = *((void *)v28 + 2);
      *((void *)v27 + 3) = v32;
      uint64_t v33 = *((void *)v28 + 5);
      *((void *)v27 + 4) = *((void *)v28 + 4);
      *((void *)v27 + 5) = v33;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    *(uint64_t *)((char *)a1 + v6[11]) = *(uint64_t *)((char *)a2 + v6[11]);
    *(uint64_t *)((char *)a1 + v6[12]) = *(uint64_t *)((char *)a2 + v6[12]);
    uint64_t v34 = v6[13];
    long long v35 = (uint64_t *)((char *)a1 + v34);
    long long v36 = (uint64_t *)((char *)a2 + v34);
    uint64_t v37 = v36[1];
    *long long v35 = *v36;
    v35[1] = v37;
    uint64_t v38 = v6[14];
    uint64_t v39 = (char *)a1 + v38;
    uint64_t v40 = (char *)a2 + v38;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v30(v40, 1, v22))
    {
      uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
      memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v39, v40, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v57 + 56))(v39, 0, 1, v22);
    }
    uint64_t v42 = v6[15];
    uint64_t v43 = (char *)a1 + v42;
    uint64_t v44 = (char *)a2 + v42;
    if (v30((char *)a2 + v42, 1, v22))
    {
      uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
      memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v43, v44, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v57 + 56))(v43, 0, 1, v22);
    }
    *((unsigned char *)a1 + v6[16]) = *((unsigned char *)a2 + v6[16]);
    uint64_t v46 = v6[17];
    uint64_t v47 = (char *)a1 + v46;
    int v48 = (char *)a2 + v46;
    uint64_t v49 = *((void *)v48 + 1);
    if (v49 == 1)
    {
      long long v50 = *((_OWORD *)v48 + 3);
      *((_OWORD *)v47 + 2) = *((_OWORD *)v48 + 2);
      *((_OWORD *)v47 + 3) = v50;
      *((_OWORD *)v47 + 4) = *((_OWORD *)v48 + 4);
      long long v51 = *((_OWORD *)v48 + 1);
      *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
      *((_OWORD *)v47 + 1) = v51;
    }
    else
    {
      *(void *)uint64_t v47 = *(void *)v48;
      *((void *)v47 + 1) = v49;
      uint64_t v52 = *((void *)v48 + 3);
      *((void *)v47 + 2) = *((void *)v48 + 2);
      *((void *)v47 + 3) = v52;
      uint64_t v53 = *((void *)v48 + 5);
      *((void *)v47 + 4) = *((void *)v48 + 4);
      *((void *)v47 + 5) = v53;
      uint64_t v54 = *((void *)v48 + 7);
      *((void *)v47 + 6) = *((void *)v48 + 6);
      *((void *)v47 + 7) = v54;
      uint64_t v55 = *((void *)v48 + 9);
      *((void *)v47 + 8) = *((void *)v48 + 8);
      *((void *)v47 + 9) = v55;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

uint64_t _s8ResponseVwxx_1(uint64_t a1)
{
  uint64_t v2 = sub_228915070();
  uint64_t v3 = *(void *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2)) {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  uint64_t v4 = (int *)type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements();
  int v5 = (uint64_t *)(a1 + v4[5]);
  unint64_t v6 = v5[1];
  if (v6 >> 60 != 15) {
    sub_22880BB80(*v5, v6);
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + v4[8];
  uint64_t v8 = sub_228914F70();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v10(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  if (*(void *)(a1 + v4[10] + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = a1 + v4[14];
  if (!v10(v11, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v11, v8);
  }
  uint64_t v12 = a1 + v4[15];
  if (!v10(v12, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v12, v8);
  }
  uint64_t result = *(void *)(a1 + v4[17] + 8);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *_s8ResponseVwcp_1(char *a1, char *a2)
{
  uint64_t v4 = sub_228915070();
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268980);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(a1, a2, v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  uint64_t v7 = (int *)type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements();
  uint64_t v8 = v7[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  unint64_t v11 = *((void *)v10 + 1);
  if (v11 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  }
  else
  {
    uint64_t v12 = *(void *)v10;
    sub_22880ACB8(*(void *)v10, *((void *)v10 + 1));
    *(void *)uint64_t v9 = v12;
    *((void *)v9 + 1) = v11;
  }
  *(void *)&a1[v7[6]] = *(void *)&a2[v7[6]];
  uint64_t v13 = v7[7];
  unint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  *(void *)unint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  uint64_t v16 = v7[8];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = sub_228914F70();
  uint64_t v20 = *(void *)(v19 - 8);
  unint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  swift_bridgeObjectRetain();
  if (v21(v18, 1, v19))
  {
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
    memcpy(v17, v18, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  a1[v7[9]] = a2[v7[9]];
  uint64_t v23 = v7[10];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  uint64_t v26 = *((void *)v25 + 1);
  uint64_t v54 = v20;
  uint64_t v27 = v21;
  if (v26 == 1)
  {
    long long v28 = *((_OWORD *)v25 + 1);
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    *((_OWORD *)v24 + 1) = v28;
    *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
  }
  else
  {
    *(void *)uint64_t v24 = *(void *)v25;
    *((void *)v24 + 1) = v26;
    uint64_t v29 = *((void *)v25 + 3);
    *((void *)v24 + 2) = *((void *)v25 + 2);
    *((void *)v24 + 3) = v29;
    uint64_t v30 = *((void *)v25 + 5);
    *((void *)v24 + 4) = *((void *)v25 + 4);
    *((void *)v24 + 5) = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(void *)&a1[v7[11]] = *(void *)&a2[v7[11]];
  *(void *)&a1[v7[12]] = *(void *)&a2[v7[12]];
  uint64_t v31 = v7[13];
  uint64_t v32 = &a1[v31];
  uint64_t v33 = &a2[v31];
  uint64_t v34 = *((void *)v33 + 1);
  *(void *)uint64_t v32 = *(void *)v33;
  *((void *)v32 + 1) = v34;
  uint64_t v35 = v7[14];
  long long v36 = &a1[v35];
  uint64_t v37 = &a2[v35];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v27(v37, 1, v19))
  {
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
    memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v36, v37, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v36, 0, 1, v19);
  }
  uint64_t v39 = v7[15];
  uint64_t v40 = &a1[v39];
  uint64_t v41 = &a2[v39];
  if (v27(&a2[v39], 1, v19))
  {
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
    memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v40, v41, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v40, 0, 1, v19);
  }
  a1[v7[16]] = a2[v7[16]];
  uint64_t v43 = v7[17];
  uint64_t v44 = &a1[v43];
  uint64_t v45 = &a2[v43];
  uint64_t v46 = *((void *)v45 + 1);
  if (v46 == 1)
  {
    long long v47 = *((_OWORD *)v45 + 3);
    *((_OWORD *)v44 + 2) = *((_OWORD *)v45 + 2);
    *((_OWORD *)v44 + 3) = v47;
    *((_OWORD *)v44 + 4) = *((_OWORD *)v45 + 4);
    long long v48 = *((_OWORD *)v45 + 1);
    *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
    *((_OWORD *)v44 + 1) = v48;
  }
  else
  {
    *(void *)uint64_t v44 = *(void *)v45;
    *((void *)v44 + 1) = v46;
    uint64_t v49 = *((void *)v45 + 3);
    *((void *)v44 + 2) = *((void *)v45 + 2);
    *((void *)v44 + 3) = v49;
    uint64_t v50 = *((void *)v45 + 5);
    *((void *)v44 + 4) = *((void *)v45 + 4);
    *((void *)v44 + 5) = v50;
    uint64_t v51 = *((void *)v45 + 7);
    *((void *)v44 + 6) = *((void *)v45 + 6);
    *((void *)v44 + 7) = v51;
    uint64_t v52 = *((void *)v45 + 9);
    *((void *)v44 + 8) = *((void *)v45 + 8);
    *((void *)v44 + 9) = v52;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

char *_s8ResponseVwca_1(char *a1, char *a2)
{
  uint64_t v4 = sub_228915070();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(a1, a2, v4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(a1, v4);
LABEL_6:
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268980);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 24))(a1, a2, v4);
LABEL_7:
  uint64_t v10 = (int *)type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements();
  uint64_t v11 = v10[5];
  uint64_t v12 = (uint64_t *)&a1[v11];
  uint64_t v13 = (uint64_t *)&a2[v11];
  unint64_t v14 = *(void *)&a2[v11 + 8];
  if (*(void *)&a1[v11 + 8] >> 60 == 15)
  {
    if (v14 >> 60 != 15)
    {
      uint64_t v15 = *v13;
      sub_22880ACB8(v15, v14);
      *uint64_t v12 = v15;
      v12[1] = v14;
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  if (v14 >> 60 == 15)
  {
    sub_22882FA00((uint64_t)v12);
LABEL_12:
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    goto LABEL_14;
  }
  uint64_t v16 = *v13;
  sub_22880ACB8(v16, v14);
  uint64_t v17 = *v12;
  unint64_t v18 = v12[1];
  *uint64_t v12 = v16;
  v12[1] = v14;
  sub_22880BB80(v17, v18);
LABEL_14:
  *(void *)&a1[v10[6]] = *(void *)&a2[v10[6]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = v10[7];
  uint64_t v20 = &a1[v19];
  unint64_t v21 = &a2[v19];
  uint64_t v22 = *(void *)v21;
  v20[8] = v21[8];
  *(void *)uint64_t v20 = v22;
  uint64_t v23 = v10[8];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  uint64_t v26 = sub_228914F70();
  uint64_t v27 = *(void *)(v26 - 8);
  long long v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48);
  int v29 = v28(v24, 1, v26);
  int v30 = v28(v25, 1, v26);
  if (v29)
  {
    if (!v30)
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (v30)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v24, v26);
LABEL_19:
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
    memcpy(v24, v25, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(char *, char *, uint64_t))(v27 + 24))(v24, v25, v26);
LABEL_20:
  a1[v10[9]] = a2[v10[9]];
  uint64_t v32 = v10[10];
  uint64_t v33 = (uint64_t)&a1[v32];
  uint64_t v34 = &a2[v32];
  uint64_t v35 = *(void *)&a1[v32 + 8];
  uint64_t v36 = *(void *)&a2[v32 + 8];
  if (v35 == 1)
  {
    if (v36 == 1)
    {
      long long v37 = *(_OWORD *)v34;
      long long v38 = *((_OWORD *)v34 + 2);
      *(_OWORD *)(v33 + 16) = *((_OWORD *)v34 + 1);
      *(_OWORD *)(v33 + 32) = v38;
      *(_OWORD *)uint64_t v33 = v37;
    }
    else
    {
      *(void *)uint64_t v33 = *(void *)v34;
      *(void *)(v33 + 8) = *((void *)v34 + 1);
      *(void *)(v33 + 16) = *((void *)v34 + 2);
      *(void *)(v33 + 24) = *((void *)v34 + 3);
      *(void *)(v33 + 32) = *((void *)v34 + 4);
      *(void *)(v33 + 40) = *((void *)v34 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v36 == 1)
  {
    sub_22890FAD8(v33);
    long long v40 = *((_OWORD *)v34 + 1);
    long long v39 = *((_OWORD *)v34 + 2);
    *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
    *(_OWORD *)(v33 + 16) = v40;
    *(_OWORD *)(v33 + 32) = v39;
  }
  else
  {
    *(void *)uint64_t v33 = *(void *)v34;
    *(void *)(v33 + 8) = *((void *)v34 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v33 + 16) = *((void *)v34 + 2);
    *(void *)(v33 + 24) = *((void *)v34 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v33 + 32) = *((void *)v34 + 4);
    *(void *)(v33 + 40) = *((void *)v34 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(void *)&a1[v10[11]] = *(void *)&a2[v10[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[v10[12]] = *(void *)&a2[v10[12]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v41 = v10[13];
  uint64_t v42 = &a1[v41];
  uint64_t v43 = &a2[v41];
  *(void *)uint64_t v42 = *(void *)v43;
  *((void *)v42 + 1) = *((void *)v43 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v44 = v10[14];
  uint64_t v45 = &a1[v44];
  uint64_t v46 = &a2[v44];
  int v47 = v28(&a1[v44], 1, v26);
  int v48 = v28(v46, 1, v26);
  if (v47)
  {
    if (!v48)
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v45, v46, v26);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v45, 0, 1, v26);
      goto LABEL_33;
    }
    goto LABEL_32;
  }
  if (v48)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v45, v26);
LABEL_32:
    uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
    memcpy(v45, v46, *(void *)(*(void *)(v49 - 8) + 64));
    goto LABEL_33;
  }
  (*(void (**)(char *, char *, uint64_t))(v27 + 24))(v45, v46, v26);
LABEL_33:
  uint64_t v50 = v10[15];
  uint64_t v51 = &a1[v50];
  uint64_t v52 = &a2[v50];
  int v53 = v28(&a1[v50], 1, v26);
  int v54 = v28(v52, 1, v26);
  if (v53)
  {
    if (!v54)
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v51, v52, v26);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v51, 0, 1, v26);
      goto LABEL_39;
    }
    goto LABEL_38;
  }
  if (v54)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v51, v26);
LABEL_38:
    uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
    memcpy(v51, v52, *(void *)(*(void *)(v55 - 8) + 64));
    goto LABEL_39;
  }
  (*(void (**)(char *, char *, uint64_t))(v27 + 24))(v51, v52, v26);
LABEL_39:
  a1[v10[16]] = a2[v10[16]];
  uint64_t v56 = v10[17];
  uint64_t v57 = (uint64_t)&a1[v56];
  long long v58 = &a2[v56];
  uint64_t v59 = *(void *)&a1[v56 + 8];
  uint64_t v60 = *((void *)v58 + 1);
  if (v59 == 1)
  {
    if (v60 == 1)
    {
      *(_OWORD *)uint64_t v57 = *(_OWORD *)v58;
      long long v61 = *((_OWORD *)v58 + 1);
      long long v62 = *((_OWORD *)v58 + 2);
      long long v63 = *((_OWORD *)v58 + 4);
      *(_OWORD *)(v57 + 48) = *((_OWORD *)v58 + 3);
      *(_OWORD *)(v57 + 64) = v63;
      *(_OWORD *)(v57 + 16) = v61;
      *(_OWORD *)(v57 + 32) = v62;
    }
    else
    {
      *(void *)uint64_t v57 = *(void *)v58;
      *(void *)(v57 + 8) = *((void *)v58 + 1);
      *(void *)(v57 + 16) = *((void *)v58 + 2);
      *(void *)(v57 + 24) = *((void *)v58 + 3);
      *(void *)(v57 + 32) = *((void *)v58 + 4);
      *(void *)(v57 + 40) = *((void *)v58 + 5);
      *(void *)(v57 + 48) = *((void *)v58 + 6);
      *(void *)(v57 + 56) = *((void *)v58 + 7);
      *(void *)(v57 + 64) = *((void *)v58 + 8);
      *(void *)(v57 + 72) = *((void *)v58 + 9);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v60 == 1)
  {
    sub_22890FB2C(v57);
    *(_OWORD *)uint64_t v57 = *(_OWORD *)v58;
    long long v64 = *((_OWORD *)v58 + 4);
    long long v66 = *((_OWORD *)v58 + 1);
    long long v65 = *((_OWORD *)v58 + 2);
    *(_OWORD *)(v57 + 48) = *((_OWORD *)v58 + 3);
    *(_OWORD *)(v57 + 64) = v64;
    *(_OWORD *)(v57 + 16) = v66;
    *(_OWORD *)(v57 + 32) = v65;
  }
  else
  {
    *(void *)uint64_t v57 = *(void *)v58;
    *(void *)(v57 + 8) = *((void *)v58 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v57 + 16) = *((void *)v58 + 2);
    *(void *)(v57 + 24) = *((void *)v58 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v57 + 32) = *((void *)v58 + 4);
    *(void *)(v57 + 40) = *((void *)v58 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v57 + 48) = *((void *)v58 + 6);
    *(void *)(v57 + 56) = *((void *)v58 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v57 + 64) = *((void *)v58 + 8);
    *(void *)(v57 + 72) = *((void *)v58 + 9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

uint64_t sub_22890FAD8(uint64_t a1)
{
  return a1;
}

uint64_t sub_22890FB2C(uint64_t a1)
{
  return a1;
}

char *_s8ResponseVwtk_0(char *a1, char *a2)
{
  uint64_t v4 = sub_228915070();
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268980);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(a1, a2, v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  int v7 = (int *)type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements();
  *(_OWORD *)&a1[v7[5]] = *(_OWORD *)&a2[v7[5]];
  *(void *)&a1[v7[6]] = *(void *)&a2[v7[6]];
  uint64_t v8 = v7[7];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  v9[8] = v10[8];
  *(void *)uint64_t v9 = *(void *)v10;
  uint64_t v11 = v7[8];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = sub_228914F70();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  a1[v7[9]] = a2[v7[9]];
  uint64_t v18 = v7[10];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  long long v21 = *((_OWORD *)v20 + 1);
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *((_OWORD *)v19 + 1) = v21;
  *((_OWORD *)v19 + 2) = *((_OWORD *)v20 + 2);
  *(void *)&a1[v7[11]] = *(void *)&a2[v7[11]];
  *(void *)&a1[v7[12]] = *(void *)&a2[v7[12]];
  *(_OWORD *)&a1[v7[13]] = *(_OWORD *)&a2[v7[13]];
  uint64_t v22 = v7[14];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  if (v16(&a2[v22], 1, v14))
  {
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v23, v24, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v23, 0, 1, v14);
  }
  uint64_t v26 = v7[15];
  uint64_t v27 = &a1[v26];
  long long v28 = &a2[v26];
  if (v16(&a2[v26], 1, v14))
  {
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v27, v28, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v27, 0, 1, v14);
  }
  a1[v7[16]] = a2[v7[16]];
  uint64_t v30 = v7[17];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  long long v33 = *((_OWORD *)v32 + 3);
  *((_OWORD *)v31 + 2) = *((_OWORD *)v32 + 2);
  *((_OWORD *)v31 + 3) = v33;
  *((_OWORD *)v31 + 4) = *((_OWORD *)v32 + 4);
  long long v34 = *((_OWORD *)v32 + 1);
  *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
  *((_OWORD *)v31 + 1) = v34;
  return a1;
}

char *_s8ResponseVwta_1(char *a1, char *a2)
{
  uint64_t v4 = sub_228915070();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(a1, a2, v4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(a1, v4);
LABEL_6:
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268980);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 40))(a1, a2, v4);
LABEL_7:
  uint64_t v10 = (int *)type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements();
  uint64_t v11 = v10[5];
  uint64_t v12 = (uint64_t)&a1[v11];
  uint64_t v13 = &a2[v11];
  unint64_t v14 = *(void *)&a1[v11 + 8];
  if (v14 >> 60 == 15)
  {
LABEL_10:
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    goto LABEL_12;
  }
  unint64_t v15 = *((void *)v13 + 1);
  if (v15 >> 60 == 15)
  {
    sub_22882FA00(v12);
    goto LABEL_10;
  }
  uint64_t v16 = *(void *)v12;
  *(void *)uint64_t v12 = *(void *)v13;
  *(void *)(v12 + 8) = v15;
  sub_22880BB80(v16, v14);
LABEL_12:
  *(void *)&a1[v10[6]] = *(void *)&a2[v10[6]];
  swift_bridgeObjectRelease();
  uint64_t v17 = v10[7];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  *(void *)uint64_t v18 = *(void *)v19;
  v18[8] = v19[8];
  uint64_t v20 = v10[8];
  long long v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  uint64_t v23 = sub_228914F70();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
  int v26 = v25(v21, 1, v23);
  int v27 = v25(v22, 1, v23);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  if (v27)
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v21, v23);
LABEL_17:
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
    memcpy(v21, v22, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(char *, char *, uint64_t))(v24 + 40))(v21, v22, v23);
LABEL_18:
  a1[v10[9]] = a2[v10[9]];
  uint64_t v29 = v10[10];
  uint64_t v30 = (uint64_t)&a1[v29];
  uint64_t v31 = &a2[v29];
  if (*(void *)&a1[v29 + 8] == 1)
  {
LABEL_21:
    long long v33 = *((_OWORD *)v31 + 1);
    *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
    *(_OWORD *)(v30 + 16) = v33;
    *(_OWORD *)(v30 + 32) = *((_OWORD *)v31 + 2);
    goto LABEL_23;
  }
  uint64_t v32 = *((void *)v31 + 1);
  if (v32 == 1)
  {
    sub_22890FAD8(v30);
    goto LABEL_21;
  }
  *(void *)uint64_t v30 = *(void *)v31;
  *(void *)(v30 + 8) = v32;
  swift_bridgeObjectRelease();
  uint64_t v34 = *((void *)v31 + 3);
  *(void *)(v30 + 16) = *((void *)v31 + 2);
  *(void *)(v30 + 24) = v34;
  swift_bridgeObjectRelease();
  uint64_t v35 = *((void *)v31 + 5);
  *(void *)(v30 + 32) = *((void *)v31 + 4);
  *(void *)(v30 + 40) = v35;
  swift_bridgeObjectRelease();
LABEL_23:
  *(void *)&a1[v10[11]] = *(void *)&a2[v10[11]];
  swift_bridgeObjectRelease();
  *(void *)&a1[v10[12]] = *(void *)&a2[v10[12]];
  swift_bridgeObjectRelease();
  uint64_t v36 = v10[13];
  long long v37 = &a1[v36];
  long long v38 = &a2[v36];
  uint64_t v40 = *(void *)v38;
  uint64_t v39 = *((void *)v38 + 1);
  *(void *)long long v37 = v40;
  *((void *)v37 + 1) = v39;
  swift_bridgeObjectRelease();
  uint64_t v41 = v10[14];
  uint64_t v42 = &a1[v41];
  uint64_t v43 = &a2[v41];
  int v44 = v25(&a1[v41], 1, v23);
  int v45 = v25(v43, 1, v23);
  if (v44)
  {
    if (!v45)
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v42, v43, v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v42, 0, 1, v23);
      goto LABEL_29;
    }
    goto LABEL_28;
  }
  if (v45)
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v42, v23);
LABEL_28:
    uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
    memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64));
    goto LABEL_29;
  }
  (*(void (**)(char *, char *, uint64_t))(v24 + 40))(v42, v43, v23);
LABEL_29:
  uint64_t v47 = v10[15];
  int v48 = &a1[v47];
  uint64_t v49 = &a2[v47];
  int v50 = v25(&a1[v47], 1, v23);
  int v51 = v25(v49, 1, v23);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v48, v49, v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v48, 0, 1, v23);
      goto LABEL_35;
    }
    goto LABEL_34;
  }
  if (v51)
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v48, v23);
LABEL_34:
    uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
    memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64));
    goto LABEL_35;
  }
  (*(void (**)(char *, char *, uint64_t))(v24 + 40))(v48, v49, v23);
LABEL_35:
  a1[v10[16]] = a2[v10[16]];
  uint64_t v53 = v10[17];
  int v54 = &a1[v53];
  uint64_t v55 = &a2[v53];
  if (*(void *)&a1[v53 + 8] != 1)
  {
    uint64_t v56 = *((void *)v55 + 1);
    if (v56 != 1)
    {
      *(void *)int v54 = *(void *)v55;
      *((void *)v54 + 1) = v56;
      swift_bridgeObjectRelease();
      uint64_t v59 = *((void *)v55 + 3);
      *((void *)v54 + 2) = *((void *)v55 + 2);
      *((void *)v54 + 3) = v59;
      swift_bridgeObjectRelease();
      uint64_t v60 = *((void *)v55 + 5);
      *((void *)v54 + 4) = *((void *)v55 + 4);
      *((void *)v54 + 5) = v60;
      swift_bridgeObjectRelease();
      uint64_t v61 = *((void *)v55 + 7);
      *((void *)v54 + 6) = *((void *)v55 + 6);
      *((void *)v54 + 7) = v61;
      swift_bridgeObjectRelease();
      uint64_t v62 = *((void *)v55 + 9);
      *((void *)v54 + 8) = *((void *)v55 + 8);
      *((void *)v54 + 9) = v62;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_22890FB2C((uint64_t)v54);
  }
  long long v57 = *((_OWORD *)v55 + 3);
  *((_OWORD *)v54 + 2) = *((_OWORD *)v55 + 2);
  *((_OWORD *)v54 + 3) = v57;
  *((_OWORD *)v54 + 4) = *((_OWORD *)v55 + 4);
  long long v58 = *((_OWORD *)v55 + 1);
  *(_OWORD *)int v54 = *(_OWORD *)v55;
  *((_OWORD *)v54 + 1) = v58;
  return a1;
}

uint64_t _s8ResponseVwet_1(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_228910620);
}

uint64_t sub_228910620(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t _s8ResponseVwst_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2289106A0);
}

uint64_t sub_2289106A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_228910710()
{
  uint64_t result = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t MobileDriversLicenseRequestInformation.multiCheck.getter()
{
  return 0;
}

uint64_t sub_2289107A4()
{
  return MEMORY[0x263F8EE78];
}

uint64_t MobileDriversLicenseRequestInformation.storedElements.getter()
{
  return MEMORY[0x263F8EE78];
}

uint64_t dispatch thunk of MobileDriversLicenseRequestInformation.sessionIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of MobileDriversLicenseRequestInformation.requestedElements.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of MobileDriversLicenseRequestInformation.storedElements.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of MobileDriversLicenseRequestInformation.transferType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of MobileDriversLicenseRequestInformation.multiCheck.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of MobileDriversLicenseRequestInformation.documentType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

unint64_t sub_228910834(unint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  unint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  unint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_24;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v12 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13)
        {
          int64_t v4 = v12 + 3;
          if (v12 + 3 >= v9) {
            return 1;
          }
          unint64_t v13 = *(void *)(v5 + 8 * v4);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_24:
    int v15 = *(unsigned __int8 *)(*(void *)(v3 + 56) + v11);
    uint64_t result = sub_228816C44(*(void *)(*(void *)(v3 + 48) + 8 * v11));
    if ((v16 & 1) == 0 || v15 != *(unsigned __int8 *)(*(void *)(a2 + 56) + result)) {
      return 0;
    }
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_23;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.nameComponents.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22883741C(v1, a1, &qword_268268980);
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.portraitData.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements() + 20);
  uint64_t v2 = *(void *)v1;
  sub_22880ACA4(*(void *)v1, *(void *)(v1 + 8));
  return v2;
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.ageAtLeastElements.getter()
{
  type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements();

  return swift_bridgeObjectRetain();
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.age.getter()
{
  return *(void *)(v0
                   + *(int *)(type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements() + 28));
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.dateOfBirth.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements();
  return sub_22883741C(v1 + *(int *)(v3 + 32), a1, &qword_268268810);
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.sex.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.address.getter()
{
  uint64_t v1 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements();
  uint64_t result = 0;
  if (*(void *)(v0 + *(int *)(v1 + 68) + 8) != 1) {
    return sub_2288880A8();
  }
  return result;
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.issuingAuthority.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1
                 + *(int *)(type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements() + 40));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;

  return sub_22882DB34(v4, v5);
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.drivingPrivileges.getter()
{
  type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements();

  return swift_bridgeObjectRetain();
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.aamvaDrivingPrivileges.getter()
{
  type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements();

  return swift_bridgeObjectRetain();
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.documentNumber.getter()
{
  uint64_t v1 = *(void *)(v0
                 + *(int *)(type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements() + 52));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.documentIssueDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements();
  return sub_22883741C(v1 + *(int *)(v3 + 56), a1, &qword_268268810);
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.documentExpirationDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements();
  return sub_22883741C(v1 + *(int *)(v3 + 60), a1, &qword_268268810);
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.documentDHSComplianceStatus.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 64));
  return result;
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_228914F70();
  uint64_t v49 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v47 = (uint64_t)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v48 = (uint64_t)&v46 - v10;
  MEMORY[0x270FA5388](v11);
  unint64_t v13 = (char *)&v46 - v12;
  uint64_t v14 = sub_228915070();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268980);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22883741C(v2, (uint64_t)v20, &qword_268268980);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) == 1)
  {
    sub_228916770();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v20, v14);
    sub_228916770();
    sub_228914D98(&qword_268268988, MEMORY[0x263F06A30]);
    sub_228915BD0();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
  long long v21 = (int *)type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements();
  uint64_t v22 = (uint64_t *)(v2 + v21[5]);
  unint64_t v23 = v22[1];
  if (v23 >> 60 == 15)
  {
    sub_228916770();
  }
  else
  {
    uint64_t v24 = *v22;
    sub_228916770();
    sub_22880ACB8(v24, v23);
    sub_228915270();
    sub_22880BB6C(v24, v23);
  }
  uint64_t v25 = *(void *)(v2 + v21[6]);
  swift_bridgeObjectRetain();
  sub_22882A440(a1, v25);
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v2 + v21[7] + 8) == 1)
  {
    sub_228916770();
  }
  else
  {
    sub_228916770();
    sub_228916760();
  }
  uint64_t v26 = v49;
  sub_22883741C(v2 + v21[8], (uint64_t)v13, &qword_268268810);
  int v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
  if (v27(v13, 1, v4) == 1)
  {
    sub_228916770();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v6, v13, v4);
    sub_228916770();
    sub_228914D98(&qword_268268818, MEMORY[0x263F063B0]);
    sub_228915BD0();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v6, v4);
  }
  if (*(unsigned char *)(v2 + v21[9]) == 5)
  {
    sub_228916770();
  }
  else
  {
    sub_228916770();
    sub_228916760();
  }
  uint64_t v28 = v2 + v21[10];
  uint64_t v29 = *(void *)(v28 + 8);
  if (v29 == 1)
  {
    sub_228916770();
  }
  else
  {
    uint64_t v50 = *(void *)v28;
    uint64_t v51 = v29;
    long long v30 = *(_OWORD *)(v28 + 32);
    long long v52 = *(_OWORD *)(v28 + 16);
    long long v53 = v30;
    sub_228916770();
    MobileDriversLicenseDataRequest.Response.DocumentElements.IssuingAuthority.hash(into:)();
  }
  uint64_t v31 = *(void *)(v2 + v21[11]);
  swift_bridgeObjectRetain();
  sub_228829D64(a1, v31);
  swift_bridgeObjectRelease();
  uint64_t v32 = *(void *)(v2 + v21[12]);
  swift_bridgeObjectRetain();
  sub_22882957C(a1, v32);
  swift_bridgeObjectRelease();
  if (*(void *)(v2 + v21[13] + 8))
  {
    sub_228916770();
    swift_bridgeObjectRetain();
    uint64_t v26 = v49;
    sub_228915D10();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_228916770();
  }
  uint64_t v33 = v48;
  sub_22883741C(v2 + v21[14], v48, &qword_268268810);
  if (v27((char *)v33, 1, v4) == 1)
  {
    sub_228916770();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v26 + 32))(v6, v33, v4);
    sub_228916770();
    sub_228914D98(&qword_268268818, MEMORY[0x263F063B0]);
    sub_228915BD0();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v6, v4);
  }
  uint64_t v34 = v47;
  sub_22883741C(v2 + v21[15], v47, &qword_268268810);
  if (v27((char *)v34, 1, v4) == 1)
  {
    sub_228916770();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v26 + 32))(v6, v34, v4);
    sub_228916770();
    sub_228914D98(&qword_268268818, MEMORY[0x263F063B0]);
    sub_228915BD0();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v6, v4);
  }
  if (*(unsigned char *)(v2 + v21[16]) == 2)
  {
    sub_228916770();
  }
  else
  {
    sub_228916770();
    sub_228916760();
  }
  uint64_t v35 = (uint64_t *)(v2 + v21[17]);
  uint64_t v36 = v35[1];
  if (v36 == 1) {
    return sub_228916770();
  }
  uint64_t v39 = v35[8];
  uint64_t v38 = v35[9];
  uint64_t v40 = v35[6];
  uint64_t v41 = v35[7];
  uint64_t v42 = v35[5];
  uint64_t v48 = v35[4];
  uint64_t v49 = v40;
  uint64_t v44 = v35[2];
  uint64_t v43 = v35[3];
  uint64_t v50 = *v35;
  uint64_t v45 = v50;
  uint64_t v51 = v36;
  *(void *)&long long v52 = v44;
  *((void *)&v52 + 1) = v43;
  *(void *)&long long v53 = v48;
  *((void *)&v53 + 1) = v42;
  uint64_t v54 = v40;
  uint64_t v55 = v41;
  uint64_t v56 = v39;
  uint64_t v57 = v38;
  sub_228916770();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_228888298();
  return sub_22882DE14(v45, v36);
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.hashValue.getter()
{
  sub_228916750();
  MobileDriversLicenseDataRequest.Response.DocumentElements.hash(into:)((uint64_t)v1);
  return sub_228916780();
}

BOOL _s15ProximityReader31MobileDriversLicenseDataRequestV8ResponseV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v174 = a2;
  uint64_t v168 = sub_228914F70();
  uint64_t v167 = *(void *)(v168 - 8);
  MEMORY[0x270FA5388](v168);
  uint64_t v165 = (int *)&v154[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v166 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268CD8);
  MEMORY[0x270FA5388](v166);
  v158 = &v154[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  v162 = &v154[-v6];
  MEMORY[0x270FA5388](v7);
  v169 = &v154[-v8];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
  MEMORY[0x270FA5388](v9 - 8);
  v157 = &v154[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v11);
  v159 = &v154[-v12];
  MEMORY[0x270FA5388](v13);
  v160 = &v154[-v14];
  MEMORY[0x270FA5388](v15);
  v161 = &v154[-v16];
  MEMORY[0x270FA5388](v17);
  v163 = &v154[-v18];
  MEMORY[0x270FA5388](v19);
  v164 = &v154[-v20];
  MEMORY[0x270FA5388](v21);
  v173 = (int *)&v154[-v22];
  MEMORY[0x270FA5388](v23);
  v170 = &v154[-v24];
  MEMORY[0x270FA5388](v25);
  uint64_t v171 = (uint64_t)&v154[-v26];
  uint64_t v27 = sub_228915070();
  uint64_t v28 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  long long v30 = &v154[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268CE0);
  uint64_t v32 = v31 - 8;
  MEMORY[0x270FA5388](v31);
  uint64_t v34 = &v154[-((v33 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268980);
  MEMORY[0x270FA5388](v35 - 8);
  long long v37 = &v154[-((v36 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v38);
  uint64_t v40 = &v154[-v39];
  MEMORY[0x270FA5388](v41);
  uint64_t v43 = &v154[-v42];
  uint64_t v172 = a1;
  sub_22883741C(a1, (uint64_t)&v154[-v42], &qword_268268980);
  sub_22883741C(v174, (uint64_t)v40, &qword_268268980);
  uint64_t v44 = (uint64_t)&v34[*(int *)(v32 + 56)];
  sub_22883741C((uint64_t)v43, (uint64_t)v34, &qword_268268980);
  sub_22883741C((uint64_t)v40, v44, &qword_268268980);
  uint64_t v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
  if (v45((uint64_t)v34, 1, v27) == 1)
  {
    sub_2288110C0((uint64_t)v40, &qword_268268980);
    sub_2288110C0((uint64_t)v43, &qword_268268980);
    if (v45(v44, 1, v27) == 1)
    {
      sub_2288110C0((uint64_t)v34, &qword_268268980);
      goto LABEL_9;
    }
LABEL_6:
    uint64_t v46 = &qword_268268CE0;
    uint64_t v47 = (uint64_t)v34;
    goto LABEL_7;
  }
  sub_22883741C((uint64_t)v34, (uint64_t)v37, &qword_268268980);
  if (v45(v44, 1, v27) == 1)
  {
    sub_2288110C0((uint64_t)v40, &qword_268268980);
    sub_2288110C0((uint64_t)v43, &qword_268268980);
    (*(void (**)(unsigned char *, uint64_t))(v28 + 8))(v37, v27);
    goto LABEL_6;
  }
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v28 + 32))(v30, v44, v27);
  sub_228914D98(&qword_268268CF0, MEMORY[0x263F06A30]);
  char v48 = sub_228915C30();
  uint64_t v49 = *(void (**)(unsigned char *, uint64_t))(v28 + 8);
  v49(v30, v27);
  sub_2288110C0((uint64_t)v40, &qword_268268980);
  sub_2288110C0((uint64_t)v43, &qword_268268980);
  v49(v37, v27);
  sub_2288110C0((uint64_t)v34, &qword_268268980);
  if ((v48 & 1) == 0) {
    return 0;
  }
LABEL_9:
  uint64_t v50 = (int *)type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements();
  uint64_t v51 = v50[5];
  uint64_t v52 = v172;
  uint64_t v53 = *(void *)(v172 + v51);
  unint64_t v54 = *(void *)(v172 + v51 + 8);
  uint64_t v55 = v174;
  uint64_t v56 = (uint64_t *)(v174 + v51);
  uint64_t v57 = *v56;
  unint64_t v58 = v56[1];
  if (v54 >> 60 == 15)
  {
    uint64_t v59 = v173;
    if (v58 >> 60 == 15) {
      goto LABEL_16;
    }
LABEL_14:
    sub_22880ACA4(v53, v54);
    sub_22880ACA4(v57, v58);
    sub_22880BB6C(v53, v54);
    sub_22880BB6C(v57, v58);
    return 0;
  }
  uint64_t v59 = v173;
  if (v58 >> 60 == 15) {
    goto LABEL_14;
  }
  sub_22880ACA4(v53, v54);
  sub_22880ACA4(v57, v58);
  char v60 = sub_228862AD4(v53, v54, v57, v58);
  sub_22880BB6C(v57, v58);
  sub_22880BB6C(v53, v54);
  if ((v60 & 1) == 0) {
    return 0;
  }
LABEL_16:
  if ((sub_228910834(*(void *)(v52 + v50[6]), *(void *)(v55 + v50[6])) & 1) == 0) {
    return 0;
  }
  uint64_t v61 = v50[7];
  uint64_t v62 = (void *)(v52 + v61);
  char v63 = *(unsigned char *)(v52 + v61 + 8);
  long long v64 = (void *)(v55 + v61);
  int v65 = *(unsigned __int8 *)(v55 + v61 + 8);
  if (v63)
  {
    long long v66 = v169;
    uint64_t v67 = v171;
    uint64_t v68 = v170;
    if (!v65) {
      return 0;
    }
  }
  else
  {
    if (*v62 != *v64) {
      LOBYTE(v65) = 1;
    }
    long long v66 = v169;
    uint64_t v67 = v171;
    uint64_t v68 = v170;
    if (v65) {
      return 0;
    }
  }
  sub_22883741C(v52 + v50[8], v67, &qword_268268810);
  sub_22883741C(v55 + v50[8], (uint64_t)v68, &qword_268268810);
  uint64_t v69 = (uint64_t)&v66[*(int *)(v166 + 48)];
  sub_22883741C(v67, (uint64_t)v66, &qword_268268810);
  sub_22883741C((uint64_t)v68, v69, &qword_268268810);
  uint64_t v70 = v168;
  v156 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v167 + 48);
  if (v156((uint64_t)v66, 1, v168) == 1)
  {
    sub_2288110C0((uint64_t)v68, &qword_268268810);
    sub_2288110C0(v67, &qword_268268810);
    if (v156(v69, 1, v168) == 1)
    {
      sub_2288110C0((uint64_t)v66, &qword_268268810);
      goto LABEL_30;
    }
LABEL_28:
    uint64_t v46 = &qword_268268CD8;
    uint64_t v47 = (uint64_t)v66;
    goto LABEL_7;
  }
  sub_22883741C((uint64_t)v66, (uint64_t)v59, &qword_268268810);
  if (v156(v69, 1, v70) == 1)
  {
    sub_2288110C0((uint64_t)v170, &qword_268268810);
    sub_2288110C0(v171, &qword_268268810);
    (*(void (**)(int *, uint64_t))(v167 + 8))(v59, v70);
    goto LABEL_28;
  }
  uint64_t v71 = v167;
  uint64_t v72 = v165;
  (*(void (**)(int *, uint64_t, uint64_t))(v167 + 32))(v165, v69, v70);
  sub_228914D98(&qword_268268CE8, MEMORY[0x263F063B0]);
  int v155 = sub_228915C30();
  uint64_t v73 = *(void (**)(int *, uint64_t))(v71 + 8);
  v73(v72, v70);
  sub_2288110C0((uint64_t)v170, &qword_268268810);
  sub_2288110C0(v171, &qword_268268810);
  v73(v173, v70);
  sub_2288110C0((uint64_t)v169, &qword_268268810);
  if ((v155 & 1) == 0) {
    return 0;
  }
LABEL_30:
  uint64_t v74 = v50[9];
  int v75 = *(unsigned __int8 *)(v52 + v74);
  int v76 = *(unsigned __int8 *)(v55 + v74);
  if (v75 == 5)
  {
    if (v76 != 5) {
      return 0;
    }
  }
  else
  {
    BOOL result = 0;
    if (v76 == 5 || v75 != v76) {
      return result;
    }
  }
  uint64_t v78 = v50[10];
  long long v79 = *(int **)(v52 + v78);
  uint64_t v80 = *(void *)(v52 + v78 + 8);
  uint64_t v81 = *(void *)(v52 + v78 + 16);
  uint64_t v82 = *(void *)(v52 + v78 + 24);
  os_log_type_t v83 = *(unsigned char **)(v52 + v78 + 32);
  uint64_t v84 = *(void *)(v52 + v78 + 40);
  uint64_t v85 = (uint64_t *)(v55 + v78);
  uint64_t v87 = *v85;
  uint64_t v86 = v85[1];
  uint64_t v89 = v85[2];
  uint64_t v88 = v85[3];
  uint64_t v91 = v85[4];
  uint64_t v90 = v85[5];
  if (v80 == 1)
  {
    v170 = v83;
    uint64_t v171 = v81;
    v173 = v79;
    if (v86 == 1) {
      goto LABEL_42;
    }
LABEL_40:
    sub_22882DB34(v87, v86);
    sub_22882DDC0((uint64_t)v173, v80);
    sub_22882DDC0(v87, v86);
    return 0;
  }
  uint64_t v175 = (uint64_t)v79;
  uint64_t v176 = v80;
  uint64_t v177 = v81;
  uint64_t v178 = v82;
  v179 = v83;
  uint64_t v180 = v84;
  if (v86 == 1)
  {
    v170 = v83;
    uint64_t v171 = v81;
    v173 = v79;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_40;
  }
  uint64_t v195 = v87;
  uint64_t v196 = v86;
  uint64_t v197 = v89;
  uint64_t v198 = v88;
  uint64_t v199 = v91;
  uint64_t v200 = v90;
  char v92 = _s15ProximityReader40MobileDriversLicenseDataResponseInternalC16DocumentElementsV16IssuingAuthorityV2eeoiySbAG_AGtFZ_0(&v175, &v195);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v92 & 1) == 0) {
    return 0;
  }
LABEL_42:
  uint64_t v93 = v172;
  uint64_t v94 = v174;
  if ((sub_22885B080(*(void *)(v172 + v50[11]), *(void *)(v174 + v50[11])) & 1) == 0
    || (sub_22885B270(*(void *)(v93 + v50[12]), *(void *)(v94 + v50[12])) & 1) == 0)
  {
    return 0;
  }
  v173 = v50;
  uint64_t v95 = v50[13];
  uint64_t v96 = (void *)(v93 + v95);
  uint64_t v97 = *(void *)(v93 + v95 + 8);
  char v98 = (void *)(v94 + v95);
  uint64_t v99 = v98[1];
  if (!v97)
  {
    uint64_t v100 = (uint64_t)v162;
    uint64_t v101 = (uint64_t)v161;
    uint64_t v102 = v164;
    char v103 = v163;
    if (v99) {
      return 0;
    }
    goto LABEL_53;
  }
  uint64_t v100 = (uint64_t)v162;
  uint64_t v101 = (uint64_t)v161;
  uint64_t v102 = v164;
  char v103 = v163;
  if (!v99) {
    return 0;
  }
  if (*v96 == *v98 && v97 == v99 || (v104 = sub_228916660(), v102 = v164, v105 = v104, BOOL result = 0, (v105 & 1) != 0))
  {
LABEL_53:
    uint64_t v106 = v173;
    sub_22883741C(v93 + v173[14], (uint64_t)v102, &qword_268268810);
    sub_22883741C(v94 + v106[14], (uint64_t)v103, &qword_268268810);
    uint64_t v107 = v100 + *(int *)(v166 + 48);
    sub_22883741C((uint64_t)v102, v100, &qword_268268810);
    sub_22883741C((uint64_t)v103, v107, &qword_268268810);
    uint64_t v108 = v168;
    if (v156(v100, 1, v168) == 1)
    {
      sub_2288110C0((uint64_t)v103, &qword_268268810);
      sub_2288110C0((uint64_t)v102, &qword_268268810);
      if (v156(v107, 1, v168) == 1)
      {
        sub_2288110C0(v100, &qword_268268810);
LABEL_60:
        unint64_t v112 = v173;
        char v113 = v160;
        sub_22883741C(v93 + v173[15], (uint64_t)v160, &qword_268268810);
        uint64_t v114 = v94 + v112[15];
        uint64_t v115 = v159;
        sub_22883741C(v114, (uint64_t)v159, &qword_268268810);
        uint64_t v116 = v158;
        uint64_t v117 = (uint64_t)&v158[*(int *)(v166 + 48)];
        sub_22883741C((uint64_t)v113, (uint64_t)v158, &qword_268268810);
        sub_22883741C((uint64_t)v115, v117, &qword_268268810);
        uint64_t v118 = v168;
        if (v156((uint64_t)v116, 1, v168) == 1)
        {
          sub_2288110C0((uint64_t)v159, &qword_268268810);
          sub_2288110C0((uint64_t)v160, &qword_268268810);
          if (v156(v117, 1, v118) == 1)
          {
            sub_2288110C0((uint64_t)v116, &qword_268268810);
LABEL_67:
            uint64_t v125 = v173[16];
            int v126 = *(unsigned __int8 *)(v172 + v125);
            int v127 = *(unsigned __int8 *)(v174 + v125);
            if (v126 == 2)
            {
              uint64_t v128 = v174;
              uint64_t v129 = v172;
              if (v127 != 2) {
                return 0;
              }
            }
            else
            {
              BOOL result = 0;
              if (v127 == 2) {
                return result;
              }
              char v130 = v127 ^ v126;
              uint64_t v128 = v174;
              uint64_t v129 = v172;
              if (v130) {
                return result;
              }
            }
            uint64_t v131 = v173[17];
            uint64_t v132 = (uint64_t *)(v129 + v131);
            uint64_t v133 = *v132;
            uint64_t v134 = v132[1];
            uint64_t v135 = v132[2];
            uint64_t v136 = v132[3];
            uint64_t v137 = v132[4];
            uint64_t v138 = v132[5];
            uint64_t v139 = v132[6];
            uint64_t v140 = v132[7];
            uint64_t v141 = v132[8];
            uint64_t v142 = v132[9];
            long long v143 = (uint64_t *)(v128 + v131);
            uint64_t v145 = *v143;
            uint64_t v144 = v143[1];
            uint64_t v147 = v143[2];
            uint64_t v146 = v143[3];
            uint64_t v149 = v143[4];
            uint64_t v148 = v143[5];
            uint64_t v151 = v143[6];
            uint64_t v150 = v143[7];
            uint64_t v152 = v143[8];
            uint64_t v153 = v143[9];
            if (v134 == 1)
            {
              if (v144 == 1) {
                return 1;
              }
              goto LABEL_76;
            }
            if (v144 == 1)
            {
LABEL_76:
              uint64_t v175 = v133;
              uint64_t v176 = v134;
              uint64_t v177 = v135;
              uint64_t v178 = v136;
              v179 = (unsigned char *)v137;
              uint64_t v180 = v138;
              uint64_t v181 = v139;
              uint64_t v182 = v140;
              uint64_t v183 = v141;
              uint64_t v184 = v142;
              uint64_t v185 = v145;
              uint64_t v186 = v144;
              uint64_t v187 = v147;
              uint64_t v188 = v146;
              uint64_t v189 = v149;
              uint64_t v190 = v148;
              uint64_t v191 = v151;
              uint64_t v192 = v150;
              uint64_t v193 = v152;
              uint64_t v194 = v153;
              sub_22882DAC0(v133, v134);
              sub_22882DAC0(v145, v144);
              sub_228837480(&v175);
              return 0;
            }
            uint64_t v195 = v133;
            uint64_t v196 = v134;
            uint64_t v197 = v135;
            uint64_t v198 = v136;
            uint64_t v199 = v137;
            uint64_t v200 = v138;
            uint64_t v201 = v139;
            uint64_t v202 = v140;
            uint64_t v203 = v141;
            uint64_t v204 = v142;
            uint64_t v175 = v145;
            uint64_t v176 = v144;
            uint64_t v177 = v147;
            uint64_t v178 = v146;
            v179 = (unsigned char *)v149;
            uint64_t v180 = v148;
            uint64_t v181 = v151;
            uint64_t v182 = v150;
            uint64_t v183 = v152;
            uint64_t v184 = v153;
            return (sub_228888560(&v195, &v175) & 1) != 0;
          }
        }
        else
        {
          sub_22883741C((uint64_t)v116, (uint64_t)v157, &qword_268268810);
          if (v156(v117, 1, v118) != 1)
          {
            uint64_t v119 = v167;
            uint64_t v120 = v165;
            uint64_t v121 = v168;
            (*(void (**)(int *, uint64_t, uint64_t))(v167 + 32))(v165, v117, v168);
            sub_228914D98(&qword_268268CE8, MEMORY[0x263F063B0]);
            unint64_t v122 = v157;
            char v123 = sub_228915C30();
            uint64_t v124 = *(void (**)(unsigned char *, uint64_t))(v119 + 8);
            v124(v120, v121);
            sub_2288110C0((uint64_t)v159, &qword_268268810);
            sub_2288110C0((uint64_t)v160, &qword_268268810);
            v124(v122, v121);
            sub_2288110C0((uint64_t)v158, &qword_268268810);
            if ((v123 & 1) == 0) {
              return 0;
            }
            goto LABEL_67;
          }
          sub_2288110C0((uint64_t)v159, &qword_268268810);
          sub_2288110C0((uint64_t)v160, &qword_268268810);
          (*(void (**)(unsigned char *, uint64_t))(v167 + 8))(v157, v168);
          uint64_t v116 = v158;
        }
        uint64_t v46 = &qword_268268CD8;
        uint64_t v47 = (uint64_t)v116;
LABEL_7:
        sub_2288110C0(v47, v46);
        return 0;
      }
    }
    else
    {
      sub_22883741C(v100, v101, &qword_268268810);
      if (v156(v107, 1, v108) != 1)
      {
        uint64_t v109 = v167;
        int v110 = v165;
        (*(void (**)(int *, uint64_t, uint64_t))(v167 + 32))(v165, v107, v108);
        sub_228914D98(&qword_268268CE8, MEMORY[0x263F063B0]);
        LODWORD(v171) = sub_228915C30();
        char v111 = *(void (**)(unsigned char *, uint64_t))(v109 + 8);
        v111(v110, v108);
        sub_2288110C0((uint64_t)v163, &qword_268268810);
        sub_2288110C0((uint64_t)v164, &qword_268268810);
        v111((unsigned char *)v101, v108);
        sub_2288110C0(v100, &qword_268268810);
        if ((v171 & 1) == 0) {
          return 0;
        }
        goto LABEL_60;
      }
      sub_2288110C0((uint64_t)v103, &qword_268268810);
      sub_2288110C0((uint64_t)v164, &qword_268268810);
      (*(void (**)(uint64_t, uint64_t))(v167 + 8))(v101, v108);
    }
    uint64_t v46 = &qword_268268CD8;
    uint64_t v47 = v100;
    goto LABEL_7;
  }
  return result;
}

uint64_t type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements()
{
  uint64_t result = qword_26826B868;
  if (!qword_26826B868) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_228912A0C()
{
  return sub_228914D98(&qword_26826B860, (void (*)(uint64_t))type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements);
}

uint64_t *_s16DocumentElementsVwCP_0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_228915070();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268980);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = a3[5];
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    unint64_t v14 = *((void *)v13 + 1);
    if (v14 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    }
    else
    {
      uint64_t v15 = *(void *)v13;
      sub_22880ACB8(*(void *)v13, *((void *)v13 + 1));
      *(void *)uint64_t v12 = v15;
      *((void *)v12 + 1) = v14;
    }
    uint64_t v16 = a3[7];
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    *(void *)uint64_t v17 = *(void *)v18;
    v17[8] = v18[8];
    uint64_t v19 = a3[8];
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = sub_228914F70();
    uint64_t v23 = *(void *)(v22 - 8);
    uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
    swift_bridgeObjectRetain();
    if (v24(v21, 1, v22))
    {
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
      memcpy(v20, v21, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    uint64_t v26 = a3[10];
    *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    uint64_t v27 = (char *)a1 + v26;
    uint64_t v28 = (char *)a2 + v26;
    uint64_t v29 = *((void *)v28 + 1);
    uint64_t v58 = v23;
    long long v30 = v24;
    if (v29 == 1)
    {
      long long v31 = *((_OWORD *)v28 + 1);
      *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
      *((_OWORD *)v27 + 1) = v31;
      *((_OWORD *)v27 + 2) = *((_OWORD *)v28 + 2);
    }
    else
    {
      *(void *)uint64_t v27 = *(void *)v28;
      *((void *)v27 + 1) = v29;
      uint64_t v32 = *((void *)v28 + 3);
      *((void *)v27 + 2) = *((void *)v28 + 2);
      *((void *)v27 + 3) = v32;
      uint64_t v33 = *((void *)v28 + 5);
      *((void *)v27 + 4) = *((void *)v28 + 4);
      *((void *)v27 + 5) = v33;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t v34 = a3[12];
    *(uint64_t *)((char *)a1 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    *(uint64_t *)((char *)a1 + v34) = *(uint64_t *)((char *)a2 + v34);
    uint64_t v35 = a3[13];
    uint64_t v36 = a3[14];
    long long v37 = (uint64_t *)((char *)a1 + v35);
    uint64_t v38 = (uint64_t *)((char *)a2 + v35);
    uint64_t v39 = v38[1];
    *long long v37 = *v38;
    v37[1] = v39;
    uint64_t v40 = (char *)a1 + v36;
    uint64_t v41 = (char *)a2 + v36;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v30(v41, 1, v22))
    {
      uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
      memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v40, v41, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v40, 0, 1, v22);
    }
    uint64_t v43 = a3[15];
    uint64_t v44 = (char *)a1 + v43;
    uint64_t v45 = (char *)a2 + v43;
    if (v30((char *)a2 + v43, 1, v22))
    {
      uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
      memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v44, v45, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v44, 0, 1, v22);
    }
    uint64_t v47 = a3[17];
    *((unsigned char *)a1 + a3[16]) = *((unsigned char *)a2 + a3[16]);
    char v48 = (char *)a1 + v47;
    uint64_t v49 = (char *)a2 + v47;
    uint64_t v50 = *((void *)v49 + 1);
    if (v50 == 1)
    {
      long long v51 = *((_OWORD *)v49 + 3);
      *((_OWORD *)v48 + 2) = *((_OWORD *)v49 + 2);
      *((_OWORD *)v48 + 3) = v51;
      *((_OWORD *)v48 + 4) = *((_OWORD *)v49 + 4);
      long long v52 = *((_OWORD *)v49 + 1);
      *(_OWORD *)char v48 = *(_OWORD *)v49;
      *((_OWORD *)v48 + 1) = v52;
    }
    else
    {
      *(void *)char v48 = *(void *)v49;
      *((void *)v48 + 1) = v50;
      uint64_t v53 = *((void *)v49 + 3);
      *((void *)v48 + 2) = *((void *)v49 + 2);
      *((void *)v48 + 3) = v53;
      uint64_t v54 = *((void *)v49 + 5);
      *((void *)v48 + 4) = *((void *)v49 + 4);
      *((void *)v48 + 5) = v54;
      uint64_t v55 = *((void *)v49 + 7);
      *((void *)v48 + 6) = *((void *)v49 + 6);
      *((void *)v48 + 7) = v55;
      uint64_t v56 = *((void *)v49 + 9);
      *((void *)v48 + 8) = *((void *)v49 + 8);
      *((void *)v48 + 9) = v56;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

uint64_t _s16DocumentElementsVwxx_0(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_228915070();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v6 = (uint64_t *)(a1 + a2[5]);
  unint64_t v7 = v6[1];
  if (v7 >> 60 != 15) {
    sub_22880BB80(*v6, v7);
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + a2[8];
  uint64_t v9 = sub_228914F70();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v11(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  if (*(void *)(a1 + a2[10] + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = a1 + a2[14];
  if (!v11(v12, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v12, v9);
  }
  uint64_t v13 = a1 + a2[15];
  if (!v11(v13, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v13, v9);
  }
  uint64_t result = *(void *)(a1 + a2[17] + 8);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *_s16DocumentElementsVwcp_0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_228915070();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268980);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  unint64_t v12 = *((void *)v11 + 1);
  if (v12 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  }
  else
  {
    uint64_t v13 = *(void *)v11;
    sub_22880ACB8(*(void *)v11, *((void *)v11 + 1));
    *(void *)uint64_t v10 = v13;
    *((void *)v10 + 1) = v12;
  }
  uint64_t v14 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  *(void *)uint64_t v15 = *(void *)v16;
  v15[8] = v16[8];
  uint64_t v17 = a3[8];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = sub_228914F70();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  swift_bridgeObjectRetain();
  if (v22(v19, 1, v20))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
    memcpy(v18, v19, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  uint64_t v24 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  uint64_t v27 = *((void *)v26 + 1);
  uint64_t v56 = v21;
  uint64_t v28 = v22;
  if (v27 == 1)
  {
    long long v29 = *((_OWORD *)v26 + 1);
    *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
    *((_OWORD *)v25 + 1) = v29;
    *((_OWORD *)v25 + 2) = *((_OWORD *)v26 + 2);
  }
  else
  {
    *(void *)uint64_t v25 = *(void *)v26;
    *((void *)v25 + 1) = v27;
    uint64_t v30 = *((void *)v26 + 3);
    *((void *)v25 + 2) = *((void *)v26 + 2);
    *((void *)v25 + 3) = v30;
    uint64_t v31 = *((void *)v26 + 5);
    *((void *)v25 + 4) = *((void *)v26 + 4);
    *((void *)v25 + 5) = v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v32 = a3[12];
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  *(void *)&a1[v32] = *(void *)&a2[v32];
  uint64_t v33 = a3[13];
  uint64_t v34 = a3[14];
  uint64_t v35 = &a1[v33];
  uint64_t v36 = &a2[v33];
  uint64_t v37 = *((void *)v36 + 1);
  *(void *)uint64_t v35 = *(void *)v36;
  *((void *)v35 + 1) = v37;
  uint64_t v38 = &a1[v34];
  uint64_t v39 = &a2[v34];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v28(v39, 1, v20))
  {
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
    memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v38, v39, v20);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v38, 0, 1, v20);
  }
  uint64_t v41 = a3[15];
  uint64_t v42 = &a1[v41];
  uint64_t v43 = &a2[v41];
  if (v28(&a2[v41], 1, v20))
  {
    uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
    memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v42, v43, v20);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v42, 0, 1, v20);
  }
  uint64_t v45 = a3[17];
  a1[a3[16]] = a2[a3[16]];
  uint64_t v46 = &a1[v45];
  uint64_t v47 = &a2[v45];
  uint64_t v48 = *((void *)v47 + 1);
  if (v48 == 1)
  {
    long long v49 = *((_OWORD *)v47 + 3);
    *((_OWORD *)v46 + 2) = *((_OWORD *)v47 + 2);
    *((_OWORD *)v46 + 3) = v49;
    *((_OWORD *)v46 + 4) = *((_OWORD *)v47 + 4);
    long long v50 = *((_OWORD *)v47 + 1);
    *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
    *((_OWORD *)v46 + 1) = v50;
  }
  else
  {
    *(void *)uint64_t v46 = *(void *)v47;
    *((void *)v46 + 1) = v48;
    uint64_t v51 = *((void *)v47 + 3);
    *((void *)v46 + 2) = *((void *)v47 + 2);
    *((void *)v46 + 3) = v51;
    uint64_t v52 = *((void *)v47 + 5);
    *((void *)v46 + 4) = *((void *)v47 + 4);
    *((void *)v46 + 5) = v52;
    uint64_t v53 = *((void *)v47 + 7);
    *((void *)v46 + 6) = *((void *)v47 + 6);
    *((void *)v46 + 7) = v53;
    uint64_t v54 = *((void *)v47 + 9);
    *((void *)v46 + 8) = *((void *)v47 + 8);
    *((void *)v46 + 9) = v54;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

char *_s16DocumentElementsVwca_0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_228915070();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268980);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = (uint64_t *)&a1[v12];
  uint64_t v14 = (uint64_t *)&a2[v12];
  unint64_t v15 = *(void *)&a2[v12 + 8];
  if (*(void *)&a1[v12 + 8] >> 60 == 15)
  {
    if (v15 >> 60 != 15)
    {
      uint64_t v16 = *v14;
      sub_22880ACB8(v16, v15);
      *uint64_t v13 = v16;
      v13[1] = v15;
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  if (v15 >> 60 == 15)
  {
    sub_22882FA00((uint64_t)v13);
LABEL_12:
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    goto LABEL_14;
  }
  uint64_t v17 = *v14;
  sub_22880ACB8(v17, v15);
  uint64_t v18 = *v13;
  unint64_t v19 = v13[1];
  *uint64_t v13 = v17;
  v13[1] = v15;
  sub_22880BB80(v18, v19);
LABEL_14:
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[7];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  uint64_t v23 = *(void *)v22;
  v21[8] = v22[8];
  *(void *)uint64_t v21 = v23;
  uint64_t v24 = a3[8];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  uint64_t v27 = sub_228914F70();
  uint64_t v28 = *(void *)(v27 - 8);
  long long v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  int v30 = v29(v25, 1, v27);
  int v31 = v29(v26, 1, v27);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (v31)
  {
    (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v27);
LABEL_19:
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
    memcpy(v25, v26, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 24))(v25, v26, v27);
LABEL_20:
  a1[a3[9]] = a2[a3[9]];
  uint64_t v33 = a3[10];
  uint64_t v34 = (uint64_t)&a1[v33];
  uint64_t v35 = &a2[v33];
  uint64_t v36 = *(void *)&a1[v33 + 8];
  uint64_t v37 = *(void *)&a2[v33 + 8];
  if (v36 == 1)
  {
    if (v37 == 1)
    {
      long long v38 = *(_OWORD *)v35;
      long long v39 = *((_OWORD *)v35 + 2);
      *(_OWORD *)(v34 + 16) = *((_OWORD *)v35 + 1);
      *(_OWORD *)(v34 + 32) = v39;
      *(_OWORD *)uint64_t v34 = v38;
    }
    else
    {
      *(void *)uint64_t v34 = *(void *)v35;
      *(void *)(v34 + 8) = *((void *)v35 + 1);
      *(void *)(v34 + 16) = *((void *)v35 + 2);
      *(void *)(v34 + 24) = *((void *)v35 + 3);
      *(void *)(v34 + 32) = *((void *)v35 + 4);
      *(void *)(v34 + 40) = *((void *)v35 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v37 == 1)
  {
    sub_22890FAD8(v34);
    long long v41 = *((_OWORD *)v35 + 1);
    long long v40 = *((_OWORD *)v35 + 2);
    *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
    *(_OWORD *)(v34 + 16) = v41;
    *(_OWORD *)(v34 + 32) = v40;
  }
  else
  {
    *(void *)uint64_t v34 = *(void *)v35;
    *(void *)(v34 + 8) = *((void *)v35 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v34 + 16) = *((void *)v35 + 2);
    *(void *)(v34 + 24) = *((void *)v35 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v34 + 32) = *((void *)v35 + 4);
    *(void *)(v34 + 40) = *((void *)v35 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v42 = a3[13];
  uint64_t v43 = &a1[v42];
  uint64_t v44 = &a2[v42];
  *(void *)uint64_t v43 = *(void *)v44;
  *((void *)v43 + 1) = *((void *)v44 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v45 = a3[14];
  uint64_t v46 = &a1[v45];
  uint64_t v47 = &a2[v45];
  int v48 = v29(&a1[v45], 1, v27);
  int v49 = v29(v47, 1, v27);
  if (v48)
  {
    if (!v49)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v46, v47, v27);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v46, 0, 1, v27);
      goto LABEL_33;
    }
    goto LABEL_32;
  }
  if (v49)
  {
    (*(void (**)(char *, uint64_t))(v28 + 8))(v46, v27);
LABEL_32:
    uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
    memcpy(v46, v47, *(void *)(*(void *)(v50 - 8) + 64));
    goto LABEL_33;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 24))(v46, v47, v27);
LABEL_33:
  uint64_t v51 = a3[15];
  uint64_t v52 = &a1[v51];
  uint64_t v53 = &a2[v51];
  int v54 = v29(&a1[v51], 1, v27);
  int v55 = v29(v53, 1, v27);
  if (v54)
  {
    if (!v55)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v52, v53, v27);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v52, 0, 1, v27);
      goto LABEL_39;
    }
    goto LABEL_38;
  }
  if (v55)
  {
    (*(void (**)(char *, uint64_t))(v28 + 8))(v52, v27);
LABEL_38:
    uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
    memcpy(v52, v53, *(void *)(*(void *)(v56 - 8) + 64));
    goto LABEL_39;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 24))(v52, v53, v27);
LABEL_39:
  a1[a3[16]] = a2[a3[16]];
  uint64_t v57 = a3[17];
  uint64_t v58 = (uint64_t)&a1[v57];
  uint64_t v59 = &a2[v57];
  uint64_t v60 = *(void *)&a1[v57 + 8];
  uint64_t v61 = *((void *)v59 + 1);
  if (v60 == 1)
  {
    if (v61 == 1)
    {
      *(_OWORD *)uint64_t v58 = *(_OWORD *)v59;
      long long v62 = *((_OWORD *)v59 + 1);
      long long v63 = *((_OWORD *)v59 + 2);
      long long v64 = *((_OWORD *)v59 + 4);
      *(_OWORD *)(v58 + 48) = *((_OWORD *)v59 + 3);
      *(_OWORD *)(v58 + 64) = v64;
      *(_OWORD *)(v58 + 16) = v62;
      *(_OWORD *)(v58 + 32) = v63;
    }
    else
    {
      *(void *)uint64_t v58 = *(void *)v59;
      *(void *)(v58 + 8) = *((void *)v59 + 1);
      *(void *)(v58 + 16) = *((void *)v59 + 2);
      *(void *)(v58 + 24) = *((void *)v59 + 3);
      *(void *)(v58 + 32) = *((void *)v59 + 4);
      *(void *)(v58 + 40) = *((void *)v59 + 5);
      *(void *)(v58 + 48) = *((void *)v59 + 6);
      *(void *)(v58 + 56) = *((void *)v59 + 7);
      *(void *)(v58 + 64) = *((void *)v59 + 8);
      *(void *)(v58 + 72) = *((void *)v59 + 9);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v61 == 1)
  {
    sub_22890FB2C(v58);
    *(_OWORD *)uint64_t v58 = *(_OWORD *)v59;
    long long v65 = *((_OWORD *)v59 + 4);
    long long v67 = *((_OWORD *)v59 + 1);
    long long v66 = *((_OWORD *)v59 + 2);
    *(_OWORD *)(v58 + 48) = *((_OWORD *)v59 + 3);
    *(_OWORD *)(v58 + 64) = v65;
    *(_OWORD *)(v58 + 16) = v67;
    *(_OWORD *)(v58 + 32) = v66;
  }
  else
  {
    *(void *)uint64_t v58 = *(void *)v59;
    *(void *)(v58 + 8) = *((void *)v59 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v58 + 16) = *((void *)v59 + 2);
    *(void *)(v58 + 24) = *((void *)v59 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v58 + 32) = *((void *)v59 + 4);
    *(void *)(v58 + 40) = *((void *)v59 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v58 + 48) = *((void *)v59 + 6);
    *(void *)(v58 + 56) = *((void *)v59 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v58 + 64) = *((void *)v59 + 8);
    *(void *)(v58 + 72) = *((void *)v59 + 9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

char *_s16DocumentElementsVwtk_0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_228915070();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268980);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(void *)&a1[v9] = *(void *)&a2[v9];
  uint64_t v10 = a3[7];
  uint64_t v11 = a3[8];
  uint64_t v12 = &a1[v10];
  uint64_t v13 = &a2[v10];
  *(void *)uint64_t v12 = *(void *)v13;
  v12[8] = v13[8];
  uint64_t v14 = &a1[v11];
  unint64_t v15 = &a2[v11];
  uint64_t v16 = sub_228914F70();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v18(v15, 1, v16))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
    memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  uint64_t v20 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  long long v23 = *((_OWORD *)v22 + 1);
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  *((_OWORD *)v21 + 1) = v23;
  *((_OWORD *)v21 + 2) = *((_OWORD *)v22 + 2);
  uint64_t v24 = a3[12];
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  *(void *)&a1[v24] = *(void *)&a2[v24];
  uint64_t v25 = a3[14];
  *(_OWORD *)&a1[a3[13]] = *(_OWORD *)&a2[a3[13]];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  if (v18(&a2[v25], 1, v16))
  {
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
    memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v26, v27, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v26, 0, 1, v16);
  }
  uint64_t v29 = a3[15];
  int v30 = &a1[v29];
  int v31 = &a2[v29];
  if (v18(&a2[v29], 1, v16))
  {
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
    memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v30, v31, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v30, 0, 1, v16);
  }
  uint64_t v33 = a3[17];
  a1[a3[16]] = a2[a3[16]];
  uint64_t v34 = &a1[v33];
  uint64_t v35 = &a2[v33];
  long long v36 = *((_OWORD *)v35 + 3);
  *((_OWORD *)v34 + 2) = *((_OWORD *)v35 + 2);
  *((_OWORD *)v34 + 3) = v36;
  *((_OWORD *)v34 + 4) = *((_OWORD *)v35 + 4);
  long long v37 = *((_OWORD *)v35 + 1);
  *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
  *((_OWORD *)v34 + 1) = v37;
  return a1;
}

char *_s16DocumentElementsVwta_0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_228915070();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268980);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = (uint64_t)&a1[v12];
  uint64_t v14 = &a2[v12];
  unint64_t v15 = *(void *)&a1[v12 + 8];
  if (v15 >> 60 == 15)
  {
LABEL_10:
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    goto LABEL_12;
  }
  unint64_t v16 = *((void *)v14 + 1);
  if (v16 >> 60 == 15)
  {
    sub_22882FA00(v13);
    goto LABEL_10;
  }
  uint64_t v17 = *(void *)v13;
  *(void *)uint64_t v13 = *(void *)v14;
  *(void *)(v13 + 8) = v16;
  sub_22880BB80(v17, v15);
LABEL_12:
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[7];
  uint64_t v19 = a3[8];
  uint64_t v20 = &a1[v18];
  uint64_t v21 = &a2[v18];
  *(void *)uint64_t v20 = *(void *)v21;
  v20[8] = v21[8];
  uint64_t v22 = &a1[v19];
  long long v23 = &a2[v19];
  uint64_t v24 = sub_228914F70();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  int v27 = v26(v22, 1, v24);
  int v28 = v26(v23, 1, v24);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v24);
LABEL_17:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
    memcpy(v22, v23, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 40))(v22, v23, v24);
LABEL_18:
  uint64_t v30 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  int v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  if (*(void *)&a1[v30 + 8] == 1)
  {
LABEL_21:
    long long v34 = *((_OWORD *)v32 + 1);
    *(_OWORD *)int v31 = *(_OWORD *)v32;
    *((_OWORD *)v31 + 1) = v34;
    *((_OWORD *)v31 + 2) = *((_OWORD *)v32 + 2);
    goto LABEL_23;
  }
  uint64_t v33 = *((void *)v32 + 1);
  if (v33 == 1)
  {
    sub_22890FAD8((uint64_t)&a1[v30]);
    goto LABEL_21;
  }
  *(void *)int v31 = *(void *)v32;
  *((void *)v31 + 1) = v33;
  swift_bridgeObjectRelease();
  uint64_t v35 = *((void *)v32 + 3);
  *((void *)v31 + 2) = *((void *)v32 + 2);
  *((void *)v31 + 3) = v35;
  swift_bridgeObjectRelease();
  uint64_t v36 = *((void *)v32 + 5);
  *((void *)v31 + 4) = *((void *)v32 + 4);
  *((void *)v31 + 5) = v36;
  swift_bridgeObjectRelease();
LABEL_23:
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  swift_bridgeObjectRelease();
  uint64_t v37 = a3[13];
  long long v38 = &a1[v37];
  long long v39 = &a2[v37];
  uint64_t v41 = *(void *)v39;
  uint64_t v40 = *((void *)v39 + 1);
  *(void *)long long v38 = v41;
  *((void *)v38 + 1) = v40;
  swift_bridgeObjectRelease();
  uint64_t v42 = a3[14];
  uint64_t v43 = &a1[v42];
  uint64_t v44 = &a2[v42];
  int v45 = v26(&a1[v42], 1, v24);
  int v46 = v26(v44, 1, v24);
  if (v45)
  {
    if (!v46)
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v43, v44, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v43, 0, 1, v24);
      goto LABEL_29;
    }
    goto LABEL_28;
  }
  if (v46)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v43, v24);
LABEL_28:
    uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
    memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
    goto LABEL_29;
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 40))(v43, v44, v24);
LABEL_29:
  uint64_t v48 = a3[15];
  int v49 = &a1[v48];
  uint64_t v50 = &a2[v48];
  int v51 = v26(&a1[v48], 1, v24);
  int v52 = v26(v50, 1, v24);
  if (v51)
  {
    if (!v52)
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v49, v50, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v49, 0, 1, v24);
      goto LABEL_35;
    }
    goto LABEL_34;
  }
  if (v52)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v49, v24);
LABEL_34:
    uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
    memcpy(v49, v50, *(void *)(*(void *)(v53 - 8) + 64));
    goto LABEL_35;
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 40))(v49, v50, v24);
LABEL_35:
  uint64_t v54 = a3[17];
  a1[a3[16]] = a2[a3[16]];
  int v55 = &a1[v54];
  uint64_t v56 = &a2[v54];
  if (*(void *)&a1[v54 + 8] != 1)
  {
    uint64_t v57 = *((void *)v56 + 1);
    if (v57 != 1)
    {
      *(void *)int v55 = *(void *)v56;
      *((void *)v55 + 1) = v57;
      swift_bridgeObjectRelease();
      uint64_t v60 = *((void *)v56 + 3);
      *((void *)v55 + 2) = *((void *)v56 + 2);
      *((void *)v55 + 3) = v60;
      swift_bridgeObjectRelease();
      uint64_t v61 = *((void *)v56 + 5);
      *((void *)v55 + 4) = *((void *)v56 + 4);
      *((void *)v55 + 5) = v61;
      swift_bridgeObjectRelease();
      uint64_t v62 = *((void *)v56 + 7);
      *((void *)v55 + 6) = *((void *)v56 + 6);
      *((void *)v55 + 7) = v62;
      swift_bridgeObjectRelease();
      uint64_t v63 = *((void *)v56 + 9);
      *((void *)v55 + 8) = *((void *)v56 + 8);
      *((void *)v55 + 9) = v63;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_22890FB2C((uint64_t)&a1[v54]);
  }
  long long v58 = *((_OWORD *)v56 + 3);
  *((_OWORD *)v55 + 2) = *((_OWORD *)v56 + 2);
  *((_OWORD *)v55 + 3) = v58;
  *((_OWORD *)v55 + 4) = *((_OWORD *)v56 + 4);
  long long v59 = *((_OWORD *)v56 + 1);
  *(_OWORD *)int v55 = *(_OWORD *)v56;
  *((_OWORD *)v55 + 1) = v59;
  return a1;
}

uint64_t _s16DocumentElementsVwet_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2289149C4);
}

uint64_t sub_2289149C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268980);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 32);
    return v12(v14, a2, v13);
  }
}

uint64_t _s16DocumentElementsVwst_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_228914B0C);
}

uint64_t sub_228914B0C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_268268980);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268268810);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 32);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_228914C40()
{
  sub_22885F904(319, &qword_268268AE8, MEMORY[0x263F06A30]);
  if (v0 <= 0x3F)
  {
    sub_22885F904(319, (unint64_t *)&qword_268268AF0, MEMORY[0x263F063B0]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_228914D98(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_228914DE0()
{
  return MEMORY[0x270EEDC50]();
}

uint64_t sub_228914DF0()
{
  return MEMORY[0x270EEDC68]();
}

uint64_t sub_228914E00()
{
  return MEMORY[0x270EEDCB8]();
}

uint64_t sub_228914E10()
{
  return MEMORY[0x270EEDD88]();
}

uint64_t sub_228914E20()
{
  return MEMORY[0x270EEDDA0]();
}

uint64_t sub_228914E30()
{
  return MEMORY[0x270EEDDD0]();
}

uint64_t sub_228914E40()
{
  return MEMORY[0x270EEDE10]();
}

uint64_t sub_228914E50()
{
  return MEMORY[0x270EEDE18]();
}

uint64_t sub_228914E60()
{
  return MEMORY[0x270EEDEA0]();
}

uint64_t sub_228914E70()
{
  return MEMORY[0x270EEDEB8]();
}

uint64_t sub_228914E80()
{
  return MEMORY[0x270EEDEE8]();
}

uint64_t sub_228914E90()
{
  return MEMORY[0x270EEDF30]();
}

uint64_t sub_228914EA0()
{
  return MEMORY[0x270EEDF38]();
}

uint64_t sub_228914EB0()
{
  return MEMORY[0x270EEE378]();
}

uint64_t sub_228914EC0()
{
  return MEMORY[0x270EEE3D0]();
}

uint64_t sub_228914ED0()
{
  return MEMORY[0x270EEE438]();
}

uint64_t sub_228914EE0()
{
  return MEMORY[0x270EEE618]();
}

uint64_t sub_228914EF0()
{
  return MEMORY[0x270EEE628]();
}

uint64_t sub_228914F00()
{
  return MEMORY[0x270EEE638]();
}

uint64_t sub_228914F10()
{
  return MEMORY[0x270EEE648]();
}

uint64_t sub_228914F20()
{
  return MEMORY[0x270EEE658]();
}

uint64_t sub_228914F30()
{
  return MEMORY[0x270EEE670]();
}

uint64_t sub_228914F40()
{
  return MEMORY[0x270EEE688]();
}

uint64_t sub_228914F50()
{
  return MEMORY[0x270EEE848]();
}

uint64_t sub_228914F60()
{
  return MEMORY[0x270EEE8D8]();
}

uint64_t sub_228914F70()
{
  return MEMORY[0x270EEE8E8]();
}

uint64_t sub_228914F80()
{
  return MEMORY[0x270EEE920]();
}

uint64_t sub_228914F90()
{
  return MEMORY[0x270EEE930]();
}

uint64_t sub_228914FA0()
{
  return MEMORY[0x270EEE940]();
}

uint64_t sub_228914FB0()
{
  return MEMORY[0x270EEE950]();
}

uint64_t sub_228914FC0()
{
  return MEMORY[0x270EEEA60]();
}

uint64_t sub_228915010()
{
  return MEMORY[0x270EEF238]();
}

uint64_t sub_228915020()
{
  return MEMORY[0x270EEF250]();
}

uint64_t sub_228915030()
{
  return MEMORY[0x270EEF268]();
}

uint64_t sub_228915040()
{
  return MEMORY[0x270EEF288]();
}

uint64_t sub_228915050()
{
  return MEMORY[0x270EEF2A8]();
}

uint64_t sub_228915060()
{
  return MEMORY[0x270EEF2B8]();
}

uint64_t sub_228915070()
{
  return MEMORY[0x270EEF460]();
}

uint64_t sub_228915080()
{
  return MEMORY[0x270EEF7C8]();
}

uint64_t sub_228915090()
{
  return MEMORY[0x270EEF830]();
}

uint64_t sub_2289150A0()
{
  return MEMORY[0x270EEF840]();
}

uint64_t sub_2289150B0()
{
  return MEMORY[0x270EEFA08]();
}

uint64_t sub_2289150C0()
{
  return MEMORY[0x270EEFA18]();
}

uint64_t sub_2289150D0()
{
  return MEMORY[0x270EEFBC0]();
}

uint64_t sub_2289150E0()
{
  return MEMORY[0x270EEFC10]();
}

uint64_t sub_2289150F0()
{
  return MEMORY[0x270EEFC48]();
}

uint64_t sub_228915100()
{
  return MEMORY[0x270EEFC58]();
}

uint64_t sub_228915110()
{
  return MEMORY[0x270EEFCB0]();
}

uint64_t sub_228915120()
{
  return MEMORY[0x270EEFCE0]();
}

uint64_t sub_228915130()
{
  return MEMORY[0x270EEFD28]();
}

uint64_t sub_228915140()
{
  return MEMORY[0x270EEFD58]();
}

uint64_t sub_228915150()
{
  return MEMORY[0x270EEFD78]();
}

uint64_t sub_228915160()
{
  return MEMORY[0x270EEFDC0]();
}

uint64_t sub_228915170()
{
  return MEMORY[0x270EEFE20]();
}

uint64_t sub_228915180()
{
  return MEMORY[0x270EEFE80]();
}

uint64_t sub_228915190()
{
  return MEMORY[0x270EEFF00]();
}

uint64_t sub_2289151A0()
{
  return MEMORY[0x270EEFF40]();
}

uint64_t sub_2289151B0()
{
  return MEMORY[0x270EEFF68]();
}

uint64_t sub_2289151C0()
{
  return MEMORY[0x270EEFF80]();
}

uint64_t sub_2289151D0()
{
  return MEMORY[0x270EEFFB0]();
}

uint64_t sub_2289151E0()
{
  return MEMORY[0x270EEFFC8]();
}

uint64_t sub_2289151F0()
{
  return MEMORY[0x270EF0060]();
}

uint64_t sub_228915200()
{
  return MEMORY[0x270EF0070]();
}

uint64_t sub_228915210()
{
  return MEMORY[0x270EF0090]();
}

uint64_t sub_228915220()
{
  return MEMORY[0x270EF00B0]();
}

uint64_t sub_228915230()
{
  return MEMORY[0x270EF0120]();
}

uint64_t sub_228915240()
{
  return MEMORY[0x270EF0130]();
}

uint64_t sub_228915250()
{
  return MEMORY[0x270EF0168]();
}

uint64_t sub_228915260()
{
  return MEMORY[0x270EF0178]();
}

uint64_t sub_228915270()
{
  return MEMORY[0x270EF0190]();
}

uint64_t sub_228915280()
{
  return MEMORY[0x270EF01C0]();
}

uint64_t sub_228915290()
{
  return MEMORY[0x270EF07E0]();
}

uint64_t sub_2289152A0()
{
  return MEMORY[0x270EF0998]();
}

uint64_t sub_2289152B0()
{
  return MEMORY[0x270EF0AF0]();
}

uint64_t sub_2289152C0()
{
  return MEMORY[0x270EF0AF8]();
}

uint64_t sub_2289152D0()
{
  return MEMORY[0x270EF0BB8]();
}

uint64_t sub_2289152E0()
{
  return MEMORY[0x270EF0C30]();
}

uint64_t sub_2289152F0()
{
  return MEMORY[0x270EF0C40]();
}

uint64_t sub_228915300()
{
  return MEMORY[0x270EF0C68]();
}

uint64_t sub_228915310()
{
  return MEMORY[0x270EF0CB8]();
}

uint64_t sub_228915320()
{
  return MEMORY[0x270EF0D08]();
}

uint64_t sub_228915330()
{
  return MEMORY[0x270EF0D18]();
}

uint64_t sub_228915340()
{
  return MEMORY[0x270EF0D78]();
}

uint64_t sub_228915350()
{
  return MEMORY[0x270EF0D80]();
}

uint64_t sub_228915360()
{
  return MEMORY[0x270EF0DD8]();
}

uint64_t sub_228915370()
{
  return MEMORY[0x270EF0DF0]();
}

uint64_t sub_228915380()
{
  return MEMORY[0x270EF0F00]();
}

uint64_t sub_228915390()
{
  return MEMORY[0x270EF0F48]();
}

uint64_t sub_2289153A0()
{
  return MEMORY[0x270EF0F60]();
}

uint64_t sub_2289153B0()
{
  return MEMORY[0x270EF0F70]();
}

uint64_t sub_2289153C0()
{
  return MEMORY[0x270EF0F90]();
}

uint64_t sub_2289153D0()
{
  return MEMORY[0x270EF0FA0]();
}

uint64_t sub_2289153E0()
{
  return MEMORY[0x270EF1008]();
}

uint64_t sub_2289153F0()
{
  return MEMORY[0x270EF1050]();
}

uint64_t sub_228915400()
{
  return MEMORY[0x270EF1058]();
}

uint64_t sub_228915410()
{
  return MEMORY[0x270EF1060]();
}

uint64_t sub_228915420()
{
  return MEMORY[0x270EF1080]();
}

uint64_t sub_228915430()
{
  return MEMORY[0x270EF10A8]();
}

uint64_t sub_228915440()
{
  return MEMORY[0x270EF1248]();
}

uint64_t sub_228915450()
{
  return MEMORY[0x270EF1258]();
}

uint64_t sub_228915460()
{
  return MEMORY[0x270EF1368]();
}

uint64_t sub_228915470()
{
  return MEMORY[0x270EF13D8]();
}

uint64_t sub_228915480()
{
  return MEMORY[0x270EF1428]();
}

uint64_t sub_228915490()
{
  return MEMORY[0x270EF1440]();
}

uint64_t sub_2289154A0()
{
  return MEMORY[0x270EF1570]();
}

uint64_t sub_2289154B0()
{
  return MEMORY[0x270EF15C8]();
}

uint64_t sub_2289154C0()
{
  return MEMORY[0x270EF1600]();
}

uint64_t sub_2289154D0()
{
  return MEMORY[0x270EF1608]();
}

uint64_t sub_2289154E0()
{
  return MEMORY[0x270EF16A8]();
}

uint64_t sub_2289154F0()
{
  return MEMORY[0x270EF16B8]();
}

uint64_t sub_228915500()
{
  return MEMORY[0x270EF16C8]();
}

uint64_t sub_228915510()
{
  return MEMORY[0x270F28690]();
}

uint64_t sub_228915530()
{
  return MEMORY[0x270FA06C8]();
}

uint64_t sub_228915540()
{
  return MEMORY[0x270FA06D8]();
}

uint64_t sub_228915550()
{
  return MEMORY[0x270FA2C78]();
}

uint64_t sub_228915560()
{
  return MEMORY[0x270FA2C90]();
}

uint64_t sub_228915570()
{
  return MEMORY[0x270FA2C98]();
}

uint64_t sub_228915580()
{
  return MEMORY[0x270FA2CF8]();
}

uint64_t sub_228915590()
{
  return MEMORY[0x270FA2D00]();
}

uint64_t sub_2289155A0()
{
  return MEMORY[0x270FA2E00]();
}

uint64_t sub_2289155B0()
{
  return MEMORY[0x270FA2E08]();
}

uint64_t sub_2289155C0()
{
  return MEMORY[0x270FA2E20]();
}

uint64_t sub_2289155E0()
{
  return MEMORY[0x270F18EC8]();
}

uint64_t sub_2289155F0()
{
  return MEMORY[0x270F18ED0]();
}

uint64_t sub_228915600()
{
  return MEMORY[0x270F18ED8]();
}

uint64_t sub_228915610()
{
  return MEMORY[0x270F18EE8]();
}

uint64_t sub_228915620()
{
  return MEMORY[0x270F18EF0]();
}

uint64_t sub_228915630()
{
  return MEMORY[0x270F18F00]();
}

uint64_t sub_228915640()
{
  return MEMORY[0x270F19088]();
}

uint64_t sub_228915650()
{
  return MEMORY[0x270F19090]();
}

uint64_t sub_228915660()
{
  return MEMORY[0x270EFECF8]();
}

uint64_t sub_228915670()
{
  return MEMORY[0x270EFEFD0]();
}

uint64_t sub_228915680()
{
  return MEMORY[0x270EFF598]();
}

uint64_t sub_228915690()
{
  return MEMORY[0x270EFF658]();
}

uint64_t sub_2289156A0()
{
  return MEMORY[0x270EFF668]();
}

uint64_t sub_2289156B0()
{
  return MEMORY[0x270F00138]();
}

uint64_t sub_2289156C0()
{
  return MEMORY[0x270F00180]();
}

uint64_t sub_2289156D0()
{
  return MEMORY[0x270F00220]();
}

uint64_t sub_2289156E0()
{
  return MEMORY[0x270F00688]();
}

uint64_t sub_2289156F0()
{
  return MEMORY[0x270F00A20]();
}

uint64_t sub_228915700()
{
  return MEMORY[0x270F00A30]();
}

uint64_t sub_228915710()
{
  return MEMORY[0x270F00B78]();
}

uint64_t sub_228915720()
{
  return MEMORY[0x270F00B80]();
}

uint64_t sub_228915730()
{
  return MEMORY[0x270F00C78]();
}

uint64_t sub_228915740()
{
  return MEMORY[0x270F00C88]();
}

uint64_t sub_228915750()
{
  return MEMORY[0x270F00DE8]();
}

uint64_t sub_228915760()
{
  return MEMORY[0x270F00ED8]();
}

uint64_t sub_228915770()
{
  return MEMORY[0x270F00EE0]();
}

uint64_t sub_228915780()
{
  return MEMORY[0x270F01070]();
}

uint64_t sub_228915790()
{
  return MEMORY[0x270F01430]();
}

uint64_t sub_2289157A0()
{
  return MEMORY[0x270F01460]();
}

uint64_t sub_2289157B0()
{
  return MEMORY[0x270F01510]();
}

uint64_t sub_2289157C0()
{
  return MEMORY[0x270F016A0]();
}

uint64_t sub_2289157D0()
{
  return MEMORY[0x270F016E0]();
}

uint64_t sub_2289157E0()
{
  return MEMORY[0x270F016F8]();
}

uint64_t sub_2289157F0()
{
  return MEMORY[0x270F01708]();
}

uint64_t sub_228915810()
{
  return MEMORY[0x270F01728]();
}

uint64_t sub_228915820()
{
  return MEMORY[0x270F01738]();
}

uint64_t sub_228915830()
{
  return MEMORY[0x270F01748]();
}

uint64_t sub_228915840()
{
  return MEMORY[0x270F01758]();
}

uint64_t sub_228915850()
{
  return MEMORY[0x270F01768]();
}

uint64_t sub_228915860()
{
  return MEMORY[0x270F01778]();
}

uint64_t sub_228915880()
{
  return MEMORY[0x270F01790]();
}

uint64_t sub_228915890()
{
  return MEMORY[0x270F02370]();
}

uint64_t sub_2289158A0()
{
  return MEMORY[0x270F02390]();
}

uint64_t sub_2289158B0()
{
  return MEMORY[0x270F023A0]();
}

uint64_t sub_2289158C0()
{
  return MEMORY[0x270F029E0]();
}

uint64_t sub_2289158D0()
{
  return MEMORY[0x270F02A20]();
}

uint64_t sub_2289158E0()
{
  return MEMORY[0x270F02A30]();
}

uint64_t sub_2289158F0()
{
  return MEMORY[0x270F02A38]();
}

uint64_t sub_228915900()
{
  return MEMORY[0x270F02A48]();
}

uint64_t sub_228915910()
{
  return MEMORY[0x270F02B90]();
}

uint64_t sub_228915920()
{
  return MEMORY[0x270F02BC0]();
}

uint64_t sub_228915930()
{
  return MEMORY[0x270F02C10]();
}

uint64_t sub_228915940()
{
  return MEMORY[0x270F02C70]();
}

uint64_t sub_228915950()
{
  return MEMORY[0x270F02D10]();
}

uint64_t sub_228915960()
{
  return MEMORY[0x270F02F28]();
}

uint64_t sub_228915970()
{
  return MEMORY[0x270F03008]();
}

uint64_t sub_228915980()
{
  return MEMORY[0x270F030A8]();
}

uint64_t sub_228915990()
{
  return MEMORY[0x270F03250]();
}

uint64_t sub_2289159A0()
{
  return MEMORY[0x270F03260]();
}

uint64_t sub_2289159B0()
{
  return MEMORY[0x270F032C0]();
}

uint64_t sub_2289159C0()
{
  return MEMORY[0x270F032D0]();
}

uint64_t sub_2289159D0()
{
  return MEMORY[0x270F036C0]();
}

uint64_t sub_2289159E0()
{
  return MEMORY[0x270F039B0]();
}

uint64_t sub_2289159F0()
{
  return MEMORY[0x270F03BC0]();
}

uint64_t sub_228915A00()
{
  return MEMORY[0x270F04410]();
}

uint64_t sub_228915A10()
{
  return MEMORY[0x270F044F0]();
}

uint64_t sub_228915A20()
{
  return MEMORY[0x270F04558]();
}

uint64_t sub_228915A30()
{
  return MEMORY[0x270F045A8]();
}

uint64_t sub_228915A40()
{
  return MEMORY[0x270F04650]();
}

uint64_t sub_228915A50()
{
  return MEMORY[0x270F04690]();
}

uint64_t sub_228915A60()
{
  return MEMORY[0x270F04718]();
}

uint64_t sub_228915A70()
{
  return MEMORY[0x270F048B0]();
}

uint64_t sub_228915A80()
{
  return MEMORY[0x270F04B20]();
}

uint64_t sub_228915A90()
{
  return MEMORY[0x270F04F90]();
}

uint64_t sub_228915AA0()
{
  return MEMORY[0x270F04FB0]();
}

uint64_t sub_228915AB0()
{
  return MEMORY[0x270F05058]();
}

uint64_t sub_228915AC0()
{
  return MEMORY[0x270F05078]();
}

uint64_t sub_228915AD0()
{
  return MEMORY[0x270FA09A8]();
}

uint64_t sub_228915AE0()
{
  return MEMORY[0x270FA09E8]();
}

uint64_t sub_228915AF0()
{
  return MEMORY[0x270FA0A48]();
}

uint64_t sub_228915B00()
{
  return MEMORY[0x270EEAA78]();
}

uint64_t sub_228915B10()
{
  return MEMORY[0x270EEAA80]();
}

uint64_t sub_228915B20()
{
  return MEMORY[0x270EEAA98]();
}

uint64_t sub_228915B30()
{
  return MEMORY[0x270EEAAA8]();
}

uint64_t sub_228915B40()
{
  return MEMORY[0x270EEAFA0]();
}

uint64_t sub_228915B50()
{
  return MEMORY[0x270EEAFA8]();
}

uint64_t sub_228915B60()
{
  return MEMORY[0x270EEAFC0]();
}

uint64_t sub_228915B70()
{
  return MEMORY[0x270EEAFD0]();
}

uint64_t sub_228915B80()
{
  return MEMORY[0x270EEB090]();
}

uint64_t sub_228915B90()
{
  return MEMORY[0x270EF1818]();
}

uint64_t sub_228915BA0()
{
  return MEMORY[0x270EF1830]();
}

uint64_t sub_228915BB0()
{
  return MEMORY[0x270EF1840]();
}

uint64_t sub_228915BC0()
{
  return MEMORY[0x270F9D318]();
}

uint64_t sub_228915BD0()
{
  return MEMORY[0x270F9D320]();
}

uint64_t sub_228915BE0()
{
  return MEMORY[0x270F9D360]();
}

uint64_t sub_228915BF0()
{
  return MEMORY[0x270FA2B70]();
}

uint64_t sub_228915C00()
{
  return MEMORY[0x270F9D478]();
}

uint64_t sub_228915C10()
{
  return MEMORY[0x270F9D508]();
}

uint64_t sub_228915C20()
{
  return MEMORY[0x270F9D568]();
}

uint64_t sub_228915C30()
{
  return MEMORY[0x270F9D598]();
}

uint64_t sub_228915C40()
{
  return MEMORY[0x270EF19B0]();
}

uint64_t sub_228915C50()
{
  return MEMORY[0x270EF19C8]();
}

uint64_t sub_228915C60()
{
  return MEMORY[0x270EF19E0]();
}

uint64_t sub_228915C70()
{
  return MEMORY[0x270EF19E8]();
}

uint64_t sub_228915C80()
{
  return MEMORY[0x270EF19F8]();
}

uint64_t sub_228915C90()
{
  return MEMORY[0x270EF1A50]();
}

uint64_t sub_228915CA0()
{
  return MEMORY[0x270EF1AA8]();
}

uint64_t sub_228915CB0()
{
  return MEMORY[0x270EF1AD0]();
}

uint64_t sub_228915CC0()
{
  return MEMORY[0x270F9D5E0]();
}

uint64_t sub_228915CD0()
{
  return MEMORY[0x270F9D5F8]();
}

uint64_t sub_228915CE0()
{
  return MEMORY[0x270F9D600]();
}

uint64_t sub_228915CF0()
{
  return MEMORY[0x270F9D648]();
}

uint64_t sub_228915D00()
{
  return MEMORY[0x270F9D6B8]();
}

uint64_t sub_228915D10()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_228915D20()
{
  return MEMORY[0x270F9D740]();
}

uint64_t sub_228915D30()
{
  return MEMORY[0x270F9D750]();
}

uint64_t sub_228915D40()
{
  return MEMORY[0x270F9D758]();
}

uint64_t sub_228915D50()
{
  return MEMORY[0x270F9D788]();
}

uint64_t sub_228915D60()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_228915D70()
{
  return MEMORY[0x270F9D7C0]();
}

uint64_t sub_228915D80()
{
  return MEMORY[0x270F9D7D8]();
}

uint64_t sub_228915D90()
{
  return MEMORY[0x270F9D7E0]();
}

uint64_t sub_228915DA0()
{
  return MEMORY[0x270F9D7E8]();
}

uint64_t sub_228915DB0()
{
  return MEMORY[0x270F9D800]();
}

uint64_t sub_228915DC0()
{
  return MEMORY[0x270F9D808]();
}

uint64_t sub_228915DD0()
{
  return MEMORY[0x270F9D810]();
}

uint64_t sub_228915DE0()
{
  return MEMORY[0x270F9D860]();
}

uint64_t sub_228915DF0()
{
  return MEMORY[0x270F9D8B0]();
}

uint64_t sub_228915E00()
{
  return MEMORY[0x270F9D8E0]();
}

uint64_t sub_228915E10()
{
  return MEMORY[0x270F9D8F0]();
}

uint64_t sub_228915E20()
{
  return MEMORY[0x270F9D8F8]();
}

uint64_t sub_228915E30()
{
  return MEMORY[0x270F9D908]();
}

uint64_t sub_228915E40()
{
  return MEMORY[0x270F9DA70]();
}

uint64_t sub_228915E50()
{
  return MEMORY[0x270F9DA98]();
}

uint64_t sub_228915E60()
{
  return MEMORY[0x270F9DB18]();
}

uint64_t sub_228915E70()
{
  return MEMORY[0x270F9DBA0]();
}

uint64_t sub_228915E80()
{
  return MEMORY[0x270EF1B88]();
}

uint64_t sub_228915E90()
{
  return MEMORY[0x270EF1BB8]();
}

uint64_t sub_228915EA0()
{
  return MEMORY[0x270F9DBB0]();
}

uint64_t sub_228915EB0()
{
  return MEMORY[0x270F9DBB8]();
}

uint64_t sub_228915EC0()
{
  return MEMORY[0x270F9DBF0]();
}

uint64_t sub_228915ED0()
{
  return MEMORY[0x270F9DC20]();
}

uint64_t sub_228915EE0()
{
  return MEMORY[0x270F9DC50]();
}

uint64_t sub_228915EF0()
{
  return MEMORY[0x270F9DC60]();
}

uint64_t sub_228915F00()
{
  return MEMORY[0x270F9DCD8]();
}

uint64_t sub_228915F10()
{
  return MEMORY[0x270FA1DF8]();
}

uint64_t sub_228915F20()
{
  return MEMORY[0x270FA1E18]();
}

uint64_t sub_228915F30()
{
  return MEMORY[0x270FA1E20]();
}

uint64_t sub_228915F40()
{
  return MEMORY[0x270FA1EA0]();
}

uint64_t sub_228915F50()
{
  return MEMORY[0x270FA1EA8]();
}

uint64_t sub_228915F60()
{
  return MEMORY[0x270FA1F08]();
}

uint64_t sub_228915F70()
{
  return MEMORY[0x270FA1F10]();
}

uint64_t sub_228915F80()
{
  return MEMORY[0x270FA1F30]();
}

uint64_t sub_228915F90()
{
  return MEMORY[0x270FA1F48]();
}

uint64_t sub_228915FA0()
{
  return MEMORY[0x270FA1F50]();
}

uint64_t sub_228915FB0()
{
  return MEMORY[0x270FA1F88]();
}

uint64_t sub_228915FC0()
{
  return MEMORY[0x270FA1F90]();
}

uint64_t sub_228915FD0()
{
  return MEMORY[0x270FA1FB0]();
}

uint64_t sub_228915FF0()
{
  return MEMORY[0x270F9DDA0]();
}

uint64_t sub_228916000()
{
  return MEMORY[0x270EF1CC0]();
}

uint64_t sub_228916010()
{
  return MEMORY[0x270EF1E08]();
}

uint64_t sub_228916030()
{
  return MEMORY[0x270FA2E40]();
}

uint64_t sub_228916040()
{
  return MEMORY[0x270FA2E58]();
}

uint64_t sub_228916050()
{
  return MEMORY[0x270FA2E60]();
}

uint64_t sub_228916060()
{
  return MEMORY[0x270FA2E70]();
}

uint64_t sub_228916070()
{
  return MEMORY[0x270FA2E80]();
}

uint64_t sub_228916080()
{
  return MEMORY[0x270EF1F18]();
}

uint64_t sub_228916090()
{
  return MEMORY[0x270EF1F58]();
}

uint64_t sub_2289160A0()
{
  return MEMORY[0x270FA0C50]();
}

uint64_t sub_2289160B0()
{
  return MEMORY[0x270FA0D50]();
}

uint64_t sub_2289160C0()
{
  return MEMORY[0x270FA0D70]();
}

uint64_t sub_2289160D0()
{
  return MEMORY[0x270FA0D88]();
}

uint64_t sub_2289160E0()
{
  return MEMORY[0x270FA0DA0]();
}

uint64_t sub_2289160F0()
{
  return MEMORY[0x270FA0DB8]();
}

uint64_t sub_228916100()
{
  return MEMORY[0x270FA2E90]();
}

uint64_t sub_228916110()
{
  return MEMORY[0x270FA2EA8]();
}

uint64_t sub_228916120()
{
  return MEMORY[0x270EF20F8]();
}

uint64_t sub_228916130()
{
  return MEMORY[0x270EF2100]();
}

uint64_t sub_228916140()
{
  return MEMORY[0x270EF2120]();
}

uint64_t sub_228916150()
{
  return MEMORY[0x270EF2198]();
}

uint64_t sub_228916160()
{
  return MEMORY[0x270FA1170]();
}

uint64_t sub_228916170()
{
  return MEMORY[0x270FA1180]();
}

uint64_t sub_228916180()
{
  return MEMORY[0x270EF2238]();
}

uint64_t sub_228916190()
{
  return MEMORY[0x270EF2250]();
}

uint64_t sub_2289161A0()
{
  return MEMORY[0x270EF2268]();
}

uint64_t sub_2289161B0()
{
  return MEMORY[0x270EF2270]();
}

uint64_t sub_2289161C0()
{
  return MEMORY[0x270EF22D0]();
}

uint64_t sub_2289161D0()
{
  return MEMORY[0x270FA2F00]();
}

uint64_t sub_2289161E0()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_2289161F0()
{
  return MEMORY[0x270F9E530]();
}

uint64_t sub_228916200()
{
  return MEMORY[0x270F9E560]();
}

uint64_t sub_228916210()
{
  return MEMORY[0x270EF23E8]();
}

uint64_t sub_228916220()
{
  return MEMORY[0x270EF24A0]();
}

uint64_t sub_228916230()
{
  return MEMORY[0x270EF25B0]();
}

uint64_t sub_228916240()
{
  return MEMORY[0x270FA13A0]();
}

uint64_t sub_228916250()
{
  return MEMORY[0x270F9E670]();
}

uint64_t sub_228916260()
{
  return MEMORY[0x270F9E7E8]();
}

uint64_t sub_228916270()
{
  return MEMORY[0x270F9E7F0]();
}

uint64_t sub_228916280()
{
  return MEMORY[0x270F9E810]();
}

uint64_t sub_228916290()
{
  return MEMORY[0x270F9E830]();
}

uint64_t sub_2289162A0()
{
  return MEMORY[0x270F9E838]();
}

uint64_t sub_2289162B0()
{
  return MEMORY[0x270F9E840]();
}

uint64_t sub_2289162C0()
{
  return MEMORY[0x270F9E860]();
}

uint64_t sub_2289162D0()
{
  return MEMORY[0x270F9E880]();
}

uint64_t sub_2289162E0()
{
  return MEMORY[0x270F9E8C0]();
}

uint64_t sub_2289162F0()
{
  return MEMORY[0x270F9E8C8]();
}

uint64_t sub_228916300()
{
  return MEMORY[0x270F9E8E8]();
}

uint64_t sub_228916310()
{
  return MEMORY[0x270F9E970]();
}

uint64_t sub_228916320()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_228916330()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t sub_228916340()
{
  return MEMORY[0x270F9EA40]();
}

uint64_t sub_228916350()
{
  return MEMORY[0x270F9EA78]();
}

uint64_t sub_228916360()
{
  return MEMORY[0x270F9EA98]();
}

uint64_t sub_228916370()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t sub_228916380()
{
  return MEMORY[0x270F9EB98]();
}

uint64_t sub_228916390()
{
  return MEMORY[0x270F9EBC0]();
}

uint64_t sub_2289163A0()
{
  return MEMORY[0x270F9EBE0]();
}

uint64_t sub_2289163B0()
{
  return MEMORY[0x270F9EC08]();
}

uint64_t sub_2289163C0()
{
  return MEMORY[0x270F9EC10]();
}

uint64_t sub_2289163D0()
{
  return MEMORY[0x270FA21A0]();
}

uint64_t sub_2289163E0()
{
  return MEMORY[0x270FA21A8]();
}

uint64_t sub_2289163F0()
{
  return MEMORY[0x270FA21B0]();
}

uint64_t sub_228916400()
{
  return MEMORY[0x270F9ECD8]();
}

uint64_t sub_228916410()
{
  return MEMORY[0x270F9ED70]();
}

uint64_t sub_228916420()
{
  return MEMORY[0x270F9EFE8]();
}

uint64_t sub_228916430()
{
  return MEMORY[0x270F9EFF0]();
}

uint64_t sub_228916440()
{
  return MEMORY[0x270F9F080]();
}

uint64_t sub_228916450()
{
  return MEMORY[0x270F9F098]();
}

uint64_t sub_228916460()
{
  return MEMORY[0x270F9F0A0]();
}

uint64_t sub_228916470()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_228916480()
{
  return MEMORY[0x270F9F0C0]();
}

uint64_t sub_2289164A0()
{
  return MEMORY[0x270F9F210]();
}

uint64_t sub_2289164B0()
{
  return MEMORY[0x270F9F230]();
}

uint64_t sub_2289164C0()
{
  return MEMORY[0x270F9F250]();
}

uint64_t sub_2289164D0()
{
  return MEMORY[0x270F9F258]();
}

uint64_t sub_2289164E0()
{
  return MEMORY[0x270F9F270]();
}

uint64_t sub_2289164F0()
{
  return MEMORY[0x270F9F278]();
}

uint64_t sub_228916500()
{
  return MEMORY[0x270F9F290]();
}

uint64_t sub_228916510()
{
  return MEMORY[0x270F9F2A0]();
}

uint64_t sub_228916520()
{
  return MEMORY[0x270F9F2E8]();
}

uint64_t sub_228916530()
{
  return MEMORY[0x270F9F2F0]();
}

uint64_t sub_228916540()
{
  return MEMORY[0x270F9F2F8]();
}

uint64_t sub_228916550()
{
  return MEMORY[0x270F9F308]();
}

uint64_t sub_228916560()
{
  return MEMORY[0x270F9F318]();
}

uint64_t sub_228916570()
{
  return MEMORY[0x270F9F360]();
}

uint64_t sub_228916580()
{
  return MEMORY[0x270F9F390]();
}

uint64_t sub_228916590()
{
  return MEMORY[0x270F9F3B0]();
}

uint64_t sub_2289165A0()
{
  return MEMORY[0x270F9F3B8]();
}

uint64_t sub_2289165B0()
{
  return MEMORY[0x270F9F3D0]();
}

uint64_t sub_2289165C0()
{
  return MEMORY[0x270F9F3E0]();
}

uint64_t sub_2289165D0()
{
  return MEMORY[0x270F9F428]();
}

uint64_t sub_2289165E0()
{
  return MEMORY[0x270F9F430]();
}

uint64_t sub_2289165F0()
{
  return MEMORY[0x270F9F438]();
}

uint64_t sub_228916600()
{
  return MEMORY[0x270F9F448]();
}

uint64_t sub_228916610()
{
  return MEMORY[0x270F9F458]();
}

uint64_t sub_228916620()
{
  return MEMORY[0x270F9F4C8]();
}

uint64_t sub_228916630()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_228916650()
{
  return MEMORY[0x270F9F7C0]();
}

uint64_t sub_228916660()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_228916690()
{
  return MEMORY[0x270F9FA68]();
}

uint64_t sub_2289166A0()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_2289166B0()
{
  return MEMORY[0x270FA2378]();
}

uint64_t sub_2289166F0()
{
  return MEMORY[0x270EF2680]();
}

uint64_t sub_228916700()
{
  return MEMORY[0x270F9FB30]();
}

uint64_t sub_228916710()
{
  return MEMORY[0x270F9FB38]();
}

uint64_t sub_228916720()
{
  return MEMORY[0x270F9FB40]();
}

uint64_t sub_228916730()
{
  return MEMORY[0x270F9FB48]();
}

uint64_t sub_228916740()
{
  return MEMORY[0x270F9FC40]();
}

uint64_t sub_228916750()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_228916760()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_228916770()
{
  return MEMORY[0x270F9FC68]();
}

uint64_t sub_228916780()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_228916790()
{
  return MEMORY[0x270F9FCF8]();
}

uint64_t sub_2289167A0()
{
  return MEMORY[0x270F9FD70]();
}

uint64_t sub_2289167B0()
{
  return MEMORY[0x270F9FD98]();
}

CFPropertyListRef CFPreferencesCopyAppValue(CFStringRef key, CFStringRef applicationID)
{
  return (CFPropertyListRef)MEMORY[0x270EE4CA0](key, applicationID);
}

Boolean CFPreferencesGetAppBooleanValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
{
  return MEMORY[0x270EE4CD0](key, applicationID, keyExistsAndHasValidFormat);
}

void CFPreferencesSetValue(CFStringRef key, CFPropertyListRef value, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
}

Boolean CFPreferencesSynchronize(CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  return MEMORY[0x270EE4D08](applicationID, userName, hostName);
}

void CFRunLoopAddSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFRunLoopMode mode)
{
}

CFRunLoopRef CFRunLoopGetMain(void)
{
  return (CFRunLoopRef)MEMORY[0x270EE4E68]();
}

CFUserNotificationRef CFUserNotificationCreate(CFAllocatorRef allocator, CFTimeInterval timeout, CFOptionFlags flags, SInt32 *error, CFDictionaryRef dictionary)
{
  return (CFUserNotificationRef)MEMORY[0x270EE54C8](allocator, flags, error, dictionary, timeout);
}

CFRunLoopSourceRef CFUserNotificationCreateRunLoopSource(CFAllocatorRef allocator, CFUserNotificationRef userNotification, CFUserNotificationCallBack callout, CFIndex order)
{
  return (CFRunLoopSourceRef)MEMORY[0x270EE54D0](allocator, userNotification, callout, order);
}

SInt32 CFUserNotificationDisplayAlert(CFTimeInterval timeout, CFOptionFlags flags, CFURLRef iconURL, CFURLRef soundURL, CFURLRef localizationURL, CFStringRef alertHeader, CFStringRef alertMessage, CFStringRef defaultButtonTitle, CFStringRef alternateButtonTitle, CFStringRef otherButtonTitle, CFOptionFlags *responseFlags)
{
  return MEMORY[0x270EE54D8](flags, iconURL, soundURL, localizationURL, alertHeader, alertMessage, defaultButtonTitle, alternateButtonTitle, timeout);
}

SInt32 CFUserNotificationDisplayNotice(CFTimeInterval timeout, CFOptionFlags flags, CFURLRef iconURL, CFURLRef soundURL, CFURLRef localizationURL, CFStringRef alertHeader, CFStringRef alertMessage, CFStringRef defaultButtonTitle)
{
  return MEMORY[0x270EE54E0](flags, iconURL, soundURL, localizationURL, alertHeader, alertMessage, defaultButtonTitle, timeout);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  MEMORY[0x270EE71A8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

uint64_t CPSharedResourcesDirectory()
{
  return MEMORY[0x270F0CDD0]();
}

uint64_t MCGestaltGetDeviceUUID()
{
  return MEMORY[0x270F49668]();
}

uint64_t MCGestaltIsInternalBuild()
{
  return MEMORY[0x270F49670]();
}

uint64_t MGCopyAnswer()
{
  return MEMORY[0x270F95F98]();
}

void NSLog(NSString *format, ...)
{
}

uint64_t PKUIGetMinScreenType()
{
  return MEMORY[0x270F52058]();
}

CFTypeRef SecTaskCopyValueForEntitlement(SecTaskRef task, CFStringRef entitlement, CFErrorRef *error)
{
  return (CFTypeRef)MEMORY[0x270EFDCB0](task, entitlement, error);
}

SecTaskRef SecTaskCreateFromSelf(CFAllocatorRef allocator)
{
  return (SecTaskRef)MEMORY[0x270EFDCD0](allocator);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x270ED7CD8](aBlock);
}

void _Block_release(const void *aBlock)
{
}

uint64_t PKUnarchiverZip(NSURL *a1, NSURL *a2)
{
  return MEMORY[0x270F52000](a1, a2);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x270FA0158]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x270FA0160]();
}

void bzero(void *a1, size_t a2)
{
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x270EDA468](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x270F9A528](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A590](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x270F9A5A8]();
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6E8](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x270F9A6F8]();
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D0](oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x270FA01A0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x270FA01D0]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x270FA01D8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x270FA0218]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x270FA23F8]();
}

uint64_t swift_continuation_resume()
{
  return MEMORY[0x270FA2400]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x270FA0228]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x270FA0240]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x270FA2420]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x270FA2428]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x270FA0288]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x270FA0300]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x270FA0310]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x270FA0330]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x270FA0338]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x270FA0348]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x270FA0370]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x270FA03B0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x270FA03B8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x270FA03F0]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x270FA0440]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x270FA0448]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x270FA0458]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x270FA0460]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x270FA0470]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x270FA0478]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x270FA0528]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x270FA0538]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x270FA0550]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x270FA0578]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x270FA2450]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x270FA2458]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x270FA2460]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x270FA0598]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x270FA05A8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x270FA0628]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x270FA0648]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x270FA0650]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x270FA0658]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x270FA0670]();
}

uint64_t swift_willThrowTypedImpl()
{
  return MEMORY[0x270FA0678]();
}

int uname(utsname *a1)
{
  return MEMORY[0x270EDB998](a1);
}