uint64_t RawOrderContent.init(from:configuration:)@<X0>(void *a1@<X0>, __int16 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  unsigned char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned char *v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int16 v16;
  unsigned __int16 *v17;
  uint64_t v19;
  unsigned char v20[12];
  int v21;
  unsigned char *v22;
  uint64_t v23;
  uint64_t v24;
  void v25[5];
  int v26;
  unsigned __int16 v27;
  char v28;

  v24 = a3;
  v6 = type metadata accessor for RawECommerceOrderContent(0);
  MEMORY[0x270FA5388](v6 - 8);
  v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F0E8);
  v23 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v26 = *a2;
  v12 = *((unsigned __int8 *)a2 + 2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24372E5A4();
  sub_243959BA0();
  if (!v3)
  {
    v13 = v26;
    v21 = v12;
    v22 = v8;
    v15 = v23;
    v14 = v24;
    LOBYTE(v27) = 0;
    sub_24372E5F8();
    sub_2439596F0();
    v16 = v25[0];
    if (v13 >= SLOWORD(v25[0]))
    {
      LOBYTE(v25[0]) = 1;
      sub_24372E64C();
      sub_2439596F0();
      sub_24338E428((uint64_t)a1, (uint64_t)v25);
      v27 = v16;
      v28 = v21;
      v19 = (uint64_t)v22;
      RawECommerceOrderContent.init(from:configuration:)(v25, &v27, (uint64_t)v22);
      (*(void (**)(unsigned char *, uint64_t))(v15 + 8))(v11, v9);
      sub_2434E9944(v19, v14);
    }
    else
    {
      sub_24372E6A0();
      swift_allocError();
      *v17 = v16;
      swift_willThrow();
      (*(void (**)(unsigned char *, uint64_t))(v15 + 8))(v11, v9);
    }
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

void RawOrderContent.DecodingConfiguration.maximumSupportedSchemaVersion.getter(_WORD *a1@<X8>)
{
  *a1 = *v1;
}

_WORD *RawOrderContent.DecodingConfiguration.maximumSupportedSchemaVersion.setter(_WORD *result)
{
  _WORD *v1 = *result;
  return result;
}

uint64_t (*RawOrderContent.DecodingConfiguration.maximumSupportedSchemaVersion.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderContent.DecodingConfiguration.allowsInsecureHTTPURLs.getter()
{
  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t RawOrderContent.DecodingConfiguration.allowsInsecureHTTPURLs.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 2) = result;
  return result;
}

uint64_t (*RawOrderContent.DecodingConfiguration.allowsInsecureHTTPURLs.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderContent.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for RawECommerceOrderContent(0);
  MEMORY[0x270FA5388](v3 - 8);
  v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for RawOrderContent();
  MEMORY[0x270FA5388](v6 - 8);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24365C600(v1, (uint64_t)v8);
  sub_2434E9944((uint64_t)v8, (uint64_t)v5);
  RawECommerceOrderContent.encode(to:)(a1);
  return sub_243731870((uint64_t)v5, type metadata accessor for RawECommerceOrderContent);
}

uint64_t sub_24372E3A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (qword_268D96AF8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  char v4 = byte_268D9A8A0;
  sub_24338E428(a1, (uint64_t)v8);
  __int16 v6 = 1;
  char v7 = v4;
  RawOrderContent.init(from:configuration:)(v8, &v6, a2);
  return __swift_destroy_boxed_opaque_existential_0(a1);
}

uint64_t sub_24372E468@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v3 = *(unsigned char *)(a2 + 2);
  __int16 v5 = *(_WORD *)a2;
  char v6 = v3;
  return RawOrderContent.init(from:configuration:)(a1, &v5, a3);
}

uint64_t sub_24372E49C(void *a1)
{
  uint64_t v3 = type metadata accessor for RawECommerceOrderContent(0);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  char v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24365C600(v1, (uint64_t)v8);
  sub_2434E9944((uint64_t)v8, (uint64_t)v6);
  RawECommerceOrderContent.encode(to:)(a1);
  return sub_243731870((uint64_t)v6, type metadata accessor for RawECommerceOrderContent);
}

unint64_t sub_24372E5A4()
{
  unint64_t result = qword_268D9F0F0;
  if (!qword_268D9F0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F0F0);
  }
  return result;
}

unint64_t sub_24372E5F8()
{
  unint64_t result = qword_268D9F0F8;
  if (!qword_268D9F0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F0F8);
  }
  return result;
}

unint64_t sub_24372E64C()
{
  unint64_t result = qword_268D9F100;
  if (!qword_268D9F100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F100);
  }
  return result;
}

unint64_t sub_24372E6A0()
{
  unint64_t result = qword_268D9F108;
  if (!qword_268D9F108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F108);
  }
  return result;
}

unint64_t sub_24372E6F8()
{
  unint64_t result = qword_268D9F110;
  if (!qword_268D9F110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F110);
  }
  return result;
}

unint64_t sub_24372E750()
{
  unint64_t result = qword_268D9F118;
  if (!qword_268D9F118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F118);
  }
  return result;
}

uint64_t sub_24372E7A4()
{
  return MEMORY[0x263F8E530];
}

void *initializeBufferWithCopyOfBuffer for RawOrderContent(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (*a2 == 1)
    {
      long long v6 = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 80) = v6;
      *(void *)(a1 + 96) = a2[12];
      long long v7 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      long long v8 = *((_OWORD *)a2 + 3);
      *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 48) = v8;
    }
    else
    {
      uint64_t v10 = a2[1];
      uint64_t v11 = a2[2];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v10;
      uint64_t v12 = a2[3];
      uint64_t v13 = a2[4];
      *(void *)(a1 + 16) = v11;
      *(void *)(a1 + 24) = v12;
      uint64_t v14 = a2[5];
      uint64_t v15 = a2[6];
      *(void *)(a1 + 32) = v13;
      *(void *)(a1 + 40) = v14;
      uint64_t v16 = a2[7];
      uint64_t v17 = a2[8];
      *(void *)(a1 + 48) = v15;
      *(void *)(a1 + 56) = v16;
      uint64_t v18 = a2[9];
      uint64_t v19 = a2[10];
      *(void *)(a1 + 64) = v17;
      *(void *)(a1 + 72) = v18;
      uint64_t v20 = a2[11];
      uint64_t v21 = a2[12];
      *(void *)(a1 + 80) = v19;
      *(void *)(a1 + 88) = v20;
      *(void *)(a1 + 96) = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v22 = (int *)type metadata accessor for RawMerchant();
    uint64_t v23 = v22[5];
    v24 = (char *)v4 + v23;
    v25 = (char *)a2 + v23;
    uint64_t v26 = sub_243957010();
    uint64_t v27 = *(void *)(v26 - 8);
    v150 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
    if (v150(v25, 1, v26))
    {
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
      memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    uint64_t v29 = v22[6];
    v30 = (char *)v4 + v29;
    v31 = (char *)a2 + v29;
    uint64_t v151 = v26;
    if (v150((char *)a2 + v29, 1, v26))
    {
      uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v30, v31, v26);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v30, 0, 1, v26);
    }
    uint64_t v33 = v22[7];
    v34 = (void *)((char *)v4 + v33);
    v35 = (uint64_t *)((char *)a2 + v33);
    uint64_t v36 = v35[1];
    void *v34 = *v35;
    v34[1] = v36;
    uint64_t v37 = v22[8];
    v38 = (void *)((char *)v4 + v37);
    v39 = (uint64_t *)((char *)a2 + v37);
    uint64_t v40 = v39[1];
    void *v38 = *v39;
    v38[1] = v40;
    uint64_t v41 = v22[9];
    v42 = (void *)((char *)v4 + v41);
    v43 = (uint64_t *)((char *)a2 + v41);
    uint64_t v44 = v43[1];
    void *v42 = *v43;
    v42[1] = v44;
    uint64_t v45 = v22[10];
    v46 = (void *)((char *)v4 + v45);
    v47 = (uint64_t *)((char *)a2 + v45);
    uint64_t v48 = v47[1];
    void *v46 = *v47;
    v46[1] = v48;
    uint64_t v49 = v22[11];
    v50 = (void *)((char *)v4 + v49);
    v51 = (uint64_t *)((char *)a2 + v49);
    uint64_t v52 = v51[1];
    void *v50 = *v51;
    v50[1] = v52;
    uint64_t v53 = v22[12];
    v54 = (char *)v4 + v53;
    v55 = (char *)a2 + v53;
    uint64_t v148 = v27;
    v56 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
    v149 = v56;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v56(v54, v55, v151);
    v57 = (int *)type metadata accessor for RawECommerceOrderContent(0);
    uint64_t v58 = v57[5];
    v59 = (void *)((char *)v4 + v58);
    v60 = (uint64_t *)((char *)a2 + v58);
    uint64_t v61 = v60[1];
    void *v59 = *v60;
    v59[1] = v61;
    uint64_t v62 = v57[6];
    v63 = (void *)((char *)v4 + v62);
    v64 = (uint64_t *)((char *)a2 + v62);
    uint64_t v65 = v64[1];
    void *v63 = *v64;
    v63[1] = v65;
    uint64_t v66 = v57[7];
    v67 = (void *)((char *)v4 + v66);
    v68 = (uint64_t *)((char *)a2 + v66);
    uint64_t v69 = v68[1];
    void *v67 = *v68;
    v67[1] = v69;
    *((unsigned char *)v4 + v57[8]) = *((unsigned char *)a2 + v57[8]);
    *((unsigned char *)v4 + v57[9]) = *((unsigned char *)a2 + v57[9]);
    uint64_t v70 = v57[10];
    v71 = (void *)((char *)v4 + v70);
    v72 = (uint64_t *)((char *)a2 + v70);
    uint64_t v73 = v72[1];
    void *v71 = *v72;
    v71[1] = v73;
    uint64_t v74 = v57[11];
    uint64_t v146 = (uint64_t)a2 + v74;
    v147 = (char *)v4 + v74;
    uint64_t v75 = sub_243957400();
    uint64_t v145 = *(void *)(v75 - 8);
    v76 = *(void (**)(char *, uint64_t, uint64_t))(v145 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v76(v147, v146, v75);
    v144 = (void (*)(char *, char *, uint64_t))v76;
    v76((char *)v4 + v57[12], (uint64_t)a2 + v57[12], v75);
    v56((char *)v4 + v57[13], (char *)a2 + v57[13], v151);
    uint64_t v77 = v57[14];
    v78 = (char *)v4 + v77;
    v79 = (char *)a2 + v77;
    uint64_t v80 = *((void *)v79 + 5);
    if (v80)
    {
      char *v78 = *v79;
      *(_OWORD *)(v78 + 8) = *(_OWORD *)(v79 + 8);
      *((_DWORD *)v78 + 6) = *((_DWORD *)v79 + 6);
      *((void *)v78 + 4) = *((void *)v79 + 4);
      *((void *)v78 + 5) = v80;
      uint64_t v81 = *((void *)v79 + 7);
      *((void *)v78 + 6) = *((void *)v79 + 6);
      *((void *)v78 + 7) = v81;
      uint64_t v82 = *((void *)v79 + 9);
      *((void *)v78 + 8) = *((void *)v79 + 8);
      *((void *)v78 + 9) = v82;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v83 = *((_OWORD *)v79 + 3);
      *((_OWORD *)v78 + 2) = *((_OWORD *)v79 + 2);
      *((_OWORD *)v78 + 3) = v83;
      *((_OWORD *)v78 + 4) = *((_OWORD *)v79 + 4);
      long long v84 = *((_OWORD *)v79 + 1);
      *(_OWORD *)v78 = *(_OWORD *)v79;
      *((_OWORD *)v78 + 1) = v84;
    }
    uint64_t v85 = v57[15];
    v86 = (char *)v4 + v85;
    v87 = (char *)a2 + v85;
    v88 = (int *)type metadata accessor for RawOrderReturnInfo();
    uint64_t v89 = *((void *)v88 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v89 + 48))(v87, 1, v88))
    {
      uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CC60);
      memcpy(v86, v87, *(void *)(*(void *)(v90 - 8) + 64));
    }
    else
    {
      v143 = v57;
      v149(v86, v87, v151);
      uint64_t v91 = v88[5];
      v92 = &v86[v91];
      v93 = &v87[v91];
      uint64_t v94 = *((void *)v93 + 1);
      *(void *)v92 = *(void *)v93;
      *((void *)v92 + 1) = v94;
      uint64_t v95 = v88[6];
      v96 = &v86[v95];
      v97 = &v87[v95];
      swift_bridgeObjectRetain();
      if (v150(v97, 1, v151))
      {
        uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
        memcpy(v96, v97, *(void *)(*(void *)(v98 - 8) + 64));
      }
      else
      {
        v149(v96, v97, v151);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v148 + 56))(v96, 0, 1, v151);
      }
      uint64_t v99 = v88[7];
      v100 = &v86[v99];
      v101 = &v87[v99];
      v57 = v143;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v145 + 48))(&v87[v99], 1, v75))
      {
        uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
        memcpy(v100, v101, *(void *)(*(void *)(v102 - 8) + 64));
      }
      else
      {
        v144(v100, v101, v75);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v145 + 56))(v100, 0, 1, v75);
      }
      v86[v88[8]] = v87[v88[8]];
      (*(void (**)(char *, void, uint64_t, int *))(v89 + 56))(v86, 0, 1, v88);
    }
    *(void *)((char *)v4 + v57[16]) = *(uint64_t *)((char *)a2 + v57[16]);
    *(void *)((char *)v4 + v57[17]) = *(uint64_t *)((char *)a2 + v57[17]);
    uint64_t v103 = v57[18];
    v104 = (char *)v4 + v103;
    uint64_t v105 = (uint64_t)a2 + v103;
    uint64_t v106 = *(uint64_t *)((char *)a2 + v103 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v106 == 1)
    {
      long long v107 = *(_OWORD *)(v105 + 48);
      *((_OWORD *)v104 + 2) = *(_OWORD *)(v105 + 32);
      *((_OWORD *)v104 + 3) = v107;
      *((_OWORD *)v104 + 4) = *(_OWORD *)(v105 + 64);
      long long v108 = *(_OWORD *)(v105 + 16);
      *(_OWORD *)v104 = *(_OWORD *)v105;
      *((_OWORD *)v104 + 1) = v108;
    }
    else
    {
      *(void *)v104 = *(void *)v105;
      *((void *)v104 + 1) = v106;
      uint64_t v109 = *(void *)(v105 + 24);
      *((void *)v104 + 2) = *(void *)(v105 + 16);
      *((void *)v104 + 3) = v109;
      uint64_t v110 = *(void *)(v105 + 40);
      *((void *)v104 + 4) = *(void *)(v105 + 32);
      *((void *)v104 + 5) = v110;
      uint64_t v111 = *(void *)(v105 + 56);
      *((void *)v104 + 6) = *(void *)(v105 + 48);
      *((void *)v104 + 7) = v111;
      uint64_t v112 = *(void *)(v105 + 64);
      uint64_t v113 = *(void *)(v105 + 72);
      *((void *)v104 + 8) = v112;
      *((void *)v104 + 9) = v113;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    *(void *)((char *)v4 + v57[19]) = *(uint64_t *)((char *)a2 + v57[19]);
    *(void *)((char *)v4 + v57[20]) = *(uint64_t *)((char *)a2 + v57[20]);
    *(void *)((char *)v4 + v57[21]) = *(uint64_t *)((char *)a2 + v57[21]);
    uint64_t v114 = v57[22];
    v115 = (char *)v4 + v114;
    uint64_t v116 = (uint64_t)a2 + v114;
    uint64_t v117 = *(uint64_t *)((char *)a2 + v114 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v117)
    {
      uint64_t v118 = *(void *)(v116 + 8);
      *(void *)v115 = *(void *)v116;
      *((void *)v115 + 1) = v118;
      v115[16] = *(unsigned char *)(v116 + 16);
      *((void *)v115 + 3) = *(void *)(v116 + 24);
      *((void *)v115 + 4) = v117;
      uint64_t v119 = *(void *)(v116 + 48);
      *((void *)v115 + 5) = *(void *)(v116 + 40);
      *((void *)v115 + 6) = v119;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v120 = *(_OWORD *)(v116 + 16);
      *(_OWORD *)v115 = *(_OWORD *)v116;
      *((_OWORD *)v115 + 1) = v120;
      *((_OWORD *)v115 + 2) = *(_OWORD *)(v116 + 32);
      *((void *)v115 + 6) = *(void *)(v116 + 48);
    }
    uint64_t v121 = v151;
    uint64_t v122 = v57[23];
    v123 = (void *)((char *)v4 + v122);
    v124 = (uint64_t *)((char *)a2 + v122);
    uint64_t v125 = type metadata accessor for RawOrderProvider();
    uint64_t v126 = *(void *)(v125 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v126 + 48))(v124, 1, v125))
    {
      uint64_t v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CC58);
      memcpy(v123, v124, *(void *)(*(void *)(v127 - 8) + 64));
    }
    else
    {
      uint64_t v128 = v124[1];
      void *v123 = *v124;
      v123[1] = v128;
      uint64_t v129 = v124[3];
      v123[2] = v124[2];
      v123[3] = v129;
      uint64_t v130 = v124[5];
      v123[4] = v124[4];
      v123[5] = v130;
      uint64_t v131 = *(int *)(v125 + 28);
      v132 = (char *)v123 + v131;
      v133 = (char *)v124 + v131;
      swift_bridgeObjectRetain();
      uint64_t v121 = v151;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v149(v132, v133, v151);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v126 + 56))(v123, 0, 1, v125);
    }
    uint64_t v134 = v57[24];
    v135 = (char *)v4 + v134;
    v136 = (char *)a2 + v134;
    if (v150((char *)a2 + v134, 1, v121))
    {
      uint64_t v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
      memcpy(v135, v136, *(void *)(*(void *)(v137 - 8) + 64));
    }
    else
    {
      v149(v135, v136, v121);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v148 + 56))(v135, 0, 1, v121);
    }
    uint64_t v138 = v57[25];
    v139 = (void *)((char *)v4 + v138);
    v140 = (uint64_t *)((char *)a2 + v138);
    uint64_t v141 = v140[1];
    void *v139 = *v140;
    v139[1] = v141;
    *(_WORD *)((char *)v4 + v57[26]) = *(_WORD *)((char *)a2 + v57[26]);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for RawOrderContent(char *a1)
{
  if (*(void *)a1 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v2 = (int *)type metadata accessor for RawMerchant();
  uint64_t v3 = &a1[v2[5]];
  uint64_t v4 = sub_243957010();
  uint64_t v5 = *(void *)(v4 - 8);
  long long v6 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  if (!v6(v3, 1, v4)) {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
  }
  long long v7 = &a1[v2[6]];
  if (!v6(v7, 1, v4)) {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v23 = v6;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v8 = *(void (**)(char *, uint64_t))(v5 + 8);
  v8(&a1[v2[12]], v4);
  uint64_t v9 = (int *)type metadata accessor for RawECommerceOrderContent(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = &a1[v9[11]];
  uint64_t v11 = sub_243957400();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void (**)(char *, uint64_t))(v12 + 8);
  v13(v10, v11);
  v13(&a1[v9[12]], v11);
  v22 = v8;
  v8(&a1[v9[13]], v4);
  if (*(void *)&a1[v9[14] + 40])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = &a1[v9[15]];
  uint64_t v15 = type metadata accessor for RawOrderReturnInfo();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15))
  {
    v22(v14, v4);
    swift_bridgeObjectRelease();
    uint64_t v16 = &v14[*(int *)(v15 + 24)];
    if (!v23(v16, 1, v4)) {
      v22(v16, v4);
    }
    uint64_t v17 = &v14[*(int *)(v15 + 28)];
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v17, 1, v11)) {
      v13(v17, v11);
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)&a1[v9[18] + 8] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)&a1[v9[22] + 32])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v18 = &a1[v9[23]];
  uint64_t v19 = type metadata accessor for RawOrderProvider();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v18, 1, v19))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v22(&v18[*(int *)(v19 + 28)], v4);
  }
  uint64_t v20 = &a1[v9[24]];
  if (!v23(v20, 1, v4)) {
    v22(v20, v4);
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RawOrderContent(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2 == 1)
  {
    long long v4 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v4;
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    long long v6 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v6;
  }
  else
  {
    uint64_t v7 = *(void *)(a2 + 8);
    uint64_t v8 = *(void *)(a2 + 16);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v9 = *(void *)(a2 + 24);
    uint64_t v10 = *(void *)(a2 + 32);
    *(void *)(a1 + 16) = v8;
    *(void *)(a1 + 24) = v9;
    uint64_t v11 = *(void *)(a2 + 40);
    uint64_t v12 = *(void *)(a2 + 48);
    *(void *)(a1 + 32) = v10;
    *(void *)(a1 + 40) = v11;
    uint64_t v13 = *(void *)(a2 + 56);
    uint64_t v14 = *(void *)(a2 + 64);
    *(void *)(a1 + 48) = v12;
    *(void *)(a1 + 56) = v13;
    uint64_t v15 = *(void *)(a2 + 72);
    uint64_t v16 = *(void *)(a2 + 80);
    *(void *)(a1 + 64) = v14;
    *(void *)(a1 + 72) = v15;
    uint64_t v17 = *(void *)(a2 + 88);
    uint64_t v18 = *(void *)(a2 + 96);
    *(void *)(a1 + 80) = v16;
    *(void *)(a1 + 88) = v17;
    *(void *)(a1 + 96) = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v19 = (int *)type metadata accessor for RawMerchant();
  uint64_t v20 = v19[5];
  uint64_t v21 = (void *)(a1 + v20);
  v22 = (const void *)(a2 + v20);
  uint64_t v23 = sub_243957010();
  uint64_t v24 = *(void *)(v23 - 8);
  v147 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48);
  if (v147(v22, 1, v23))
  {
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 16))(v21, v22, v23);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  uint64_t v26 = v19[6];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (const void *)(a2 + v26);
  uint64_t v148 = v23;
  if (v147((const void *)(a2 + v26), 1, v23))
  {
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 16))(v27, v28, v23);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v27, 0, 1, v23);
  }
  uint64_t v30 = v19[7];
  v31 = (void *)(a1 + v30);
  uint64_t v32 = (void *)(a2 + v30);
  uint64_t v33 = v32[1];
  void *v31 = *v32;
  v31[1] = v33;
  uint64_t v34 = v19[8];
  v35 = (void *)(a1 + v34);
  uint64_t v36 = (void *)(a2 + v34);
  uint64_t v37 = v36[1];
  void *v35 = *v36;
  v35[1] = v37;
  uint64_t v38 = v19[9];
  v39 = (void *)(a1 + v38);
  uint64_t v40 = (void *)(a2 + v38);
  uint64_t v41 = v40[1];
  void *v39 = *v40;
  v39[1] = v41;
  uint64_t v42 = v19[10];
  v43 = (void *)(a1 + v42);
  uint64_t v44 = (void *)(a2 + v42);
  uint64_t v45 = v44[1];
  void *v43 = *v44;
  v43[1] = v45;
  uint64_t v46 = v19[11];
  v47 = (void *)(a1 + v46);
  uint64_t v48 = (void *)(a2 + v46);
  uint64_t v49 = v48[1];
  void *v47 = *v48;
  v47[1] = v49;
  uint64_t v50 = v19[12];
  v51 = (char *)(a1 + v50);
  uint64_t v52 = (char *)(a2 + v50);
  uint64_t v145 = v24;
  uint64_t v53 = *(void (**)(char *, char *, uint64_t))(v24 + 16);
  uint64_t v146 = v53;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v53(v51, v52, v148);
  v54 = (int *)type metadata accessor for RawECommerceOrderContent(0);
  uint64_t v55 = v54[5];
  v56 = (void *)(a1 + v55);
  v57 = (void *)(a2 + v55);
  uint64_t v58 = v57[1];
  void *v56 = *v57;
  v56[1] = v58;
  uint64_t v59 = v54[6];
  v60 = (void *)(a1 + v59);
  uint64_t v61 = (void *)(a2 + v59);
  uint64_t v62 = v61[1];
  void *v60 = *v61;
  v60[1] = v62;
  uint64_t v63 = v54[7];
  v64 = (void *)(a1 + v63);
  uint64_t v65 = (void *)(a2 + v63);
  uint64_t v66 = v65[1];
  void *v64 = *v65;
  v64[1] = v66;
  *(unsigned char *)(a1 + v54[8]) = *(unsigned char *)(a2 + v54[8]);
  *(unsigned char *)(a1 + v54[9]) = *(unsigned char *)(a2 + v54[9]);
  uint64_t v67 = v54[10];
  v68 = (void *)(a1 + v67);
  uint64_t v69 = (void *)(a2 + v67);
  uint64_t v70 = v69[1];
  void *v68 = *v69;
  v68[1] = v70;
  uint64_t v71 = v54[11];
  uint64_t v143 = a2 + v71;
  uint64_t v144 = a1 + v71;
  uint64_t v72 = sub_243957400();
  uint64_t v142 = *(void *)(v72 - 8);
  uint64_t v73 = *(void (**)(uint64_t, uint64_t, uint64_t))(v142 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v73(v144, v143, v72);
  uint64_t v141 = (void (*)(char *, char *, uint64_t))v73;
  v73(a1 + v54[12], a2 + v54[12], v72);
  v53((char *)(a1 + v54[13]), (char *)(a2 + v54[13]), v148);
  uint64_t v74 = v54[14];
  uint64_t v75 = a1 + v74;
  uint64_t v76 = a2 + v74;
  uint64_t v77 = *(void *)(v76 + 40);
  if (v77)
  {
    *(unsigned char *)uint64_t v75 = *(unsigned char *)v76;
    *(_OWORD *)(v75 + 8) = *(_OWORD *)(v76 + 8);
    *(_DWORD *)(v75 + 24) = *(_DWORD *)(v76 + 24);
    *(void *)(v75 + 32) = *(void *)(v76 + 32);
    *(void *)(v75 + 40) = v77;
    uint64_t v78 = *(void *)(v76 + 56);
    *(void *)(v75 + 48) = *(void *)(v76 + 48);
    *(void *)(v75 + 56) = v78;
    uint64_t v79 = *(void *)(v76 + 72);
    *(void *)(v75 + 64) = *(void *)(v76 + 64);
    *(void *)(v75 + 72) = v79;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v80 = *(_OWORD *)(v76 + 48);
    *(_OWORD *)(v75 + 32) = *(_OWORD *)(v76 + 32);
    *(_OWORD *)(v75 + 48) = v80;
    *(_OWORD *)(v75 + 64) = *(_OWORD *)(v76 + 64);
    long long v81 = *(_OWORD *)(v76 + 16);
    *(_OWORD *)uint64_t v75 = *(_OWORD *)v76;
    *(_OWORD *)(v75 + 16) = v81;
  }
  uint64_t v82 = v54[15];
  long long v83 = (char *)(a1 + v82);
  long long v84 = (char *)(a2 + v82);
  uint64_t v85 = (int *)type metadata accessor for RawOrderReturnInfo();
  uint64_t v86 = *((void *)v85 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v86 + 48))(v84, 1, v85))
  {
    uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CC60);
    memcpy(v83, v84, *(void *)(*(void *)(v87 - 8) + 64));
  }
  else
  {
    v140 = v54;
    v146(v83, v84, v148);
    uint64_t v88 = v85[5];
    uint64_t v89 = &v83[v88];
    uint64_t v90 = &v84[v88];
    uint64_t v91 = *((void *)v90 + 1);
    *(void *)uint64_t v89 = *(void *)v90;
    *((void *)v89 + 1) = v91;
    uint64_t v92 = v85[6];
    v93 = &v83[v92];
    uint64_t v94 = &v84[v92];
    swift_bridgeObjectRetain();
    if (v147(v94, 1, v148))
    {
      uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
      memcpy(v93, v94, *(void *)(*(void *)(v95 - 8) + 64));
    }
    else
    {
      v146(v93, v94, v148);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v145 + 56))(v93, 0, 1, v148);
    }
    uint64_t v96 = v85[7];
    v97 = &v83[v96];
    uint64_t v98 = &v84[v96];
    v54 = v140;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v142 + 48))(&v84[v96], 1, v72))
    {
      uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
      memcpy(v97, v98, *(void *)(*(void *)(v99 - 8) + 64));
    }
    else
    {
      v141(v97, v98, v72);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v142 + 56))(v97, 0, 1, v72);
    }
    v83[v85[8]] = v84[v85[8]];
    (*(void (**)(char *, void, uint64_t, int *))(v86 + 56))(v83, 0, 1, v85);
  }
  *(void *)(a1 + v54[16]) = *(void *)(a2 + v54[16]);
  *(void *)(a1 + v54[17]) = *(void *)(a2 + v54[17]);
  uint64_t v100 = v54[18];
  uint64_t v101 = a1 + v100;
  uint64_t v102 = a2 + v100;
  uint64_t v103 = *(void *)(a2 + v100 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v103 == 1)
  {
    long long v104 = *(_OWORD *)(v102 + 48);
    *(_OWORD *)(v101 + 32) = *(_OWORD *)(v102 + 32);
    *(_OWORD *)(v101 + 48) = v104;
    *(_OWORD *)(v101 + 64) = *(_OWORD *)(v102 + 64);
    long long v105 = *(_OWORD *)(v102 + 16);
    *(_OWORD *)uint64_t v101 = *(_OWORD *)v102;
    *(_OWORD *)(v101 + 16) = v105;
  }
  else
  {
    *(void *)uint64_t v101 = *(void *)v102;
    *(void *)(v101 + 8) = v103;
    uint64_t v106 = *(void *)(v102 + 24);
    *(void *)(v101 + 16) = *(void *)(v102 + 16);
    *(void *)(v101 + 24) = v106;
    uint64_t v107 = *(void *)(v102 + 40);
    *(void *)(v101 + 32) = *(void *)(v102 + 32);
    *(void *)(v101 + 40) = v107;
    uint64_t v108 = *(void *)(v102 + 56);
    *(void *)(v101 + 48) = *(void *)(v102 + 48);
    *(void *)(v101 + 56) = v108;
    uint64_t v109 = *(void *)(v102 + 64);
    uint64_t v110 = *(void *)(v102 + 72);
    *(void *)(v101 + 64) = v109;
    *(void *)(v101 + 72) = v110;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(void *)(a1 + v54[19]) = *(void *)(a2 + v54[19]);
  *(void *)(a1 + v54[20]) = *(void *)(a2 + v54[20]);
  *(void *)(a1 + v54[21]) = *(void *)(a2 + v54[21]);
  uint64_t v111 = v54[22];
  uint64_t v112 = a1 + v111;
  uint64_t v113 = a2 + v111;
  uint64_t v114 = *(void *)(a2 + v111 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v114)
  {
    uint64_t v115 = *(void *)(v113 + 8);
    *(void *)uint64_t v112 = *(void *)v113;
    *(void *)(v112 + 8) = v115;
    *(unsigned char *)(v112 + 16) = *(unsigned char *)(v113 + 16);
    *(void *)(v112 + 24) = *(void *)(v113 + 24);
    *(void *)(v112 + 32) = v114;
    uint64_t v116 = *(void *)(v113 + 48);
    *(void *)(v112 + 40) = *(void *)(v113 + 40);
    *(void *)(v112 + 48) = v116;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v117 = *(_OWORD *)(v113 + 16);
    *(_OWORD *)uint64_t v112 = *(_OWORD *)v113;
    *(_OWORD *)(v112 + 16) = v117;
    *(_OWORD *)(v112 + 32) = *(_OWORD *)(v113 + 32);
    *(void *)(v112 + 48) = *(void *)(v113 + 48);
  }
  uint64_t v118 = v148;
  uint64_t v119 = v54[23];
  long long v120 = (void *)(a1 + v119);
  uint64_t v121 = (void *)(a2 + v119);
  uint64_t v122 = type metadata accessor for RawOrderProvider();
  uint64_t v123 = *(void *)(v122 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v123 + 48))(v121, 1, v122))
  {
    uint64_t v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CC58);
    memcpy(v120, v121, *(void *)(*(void *)(v124 - 8) + 64));
  }
  else
  {
    uint64_t v125 = v121[1];
    *long long v120 = *v121;
    v120[1] = v125;
    uint64_t v126 = v121[3];
    v120[2] = v121[2];
    v120[3] = v126;
    uint64_t v127 = v121[5];
    v120[4] = v121[4];
    v120[5] = v127;
    uint64_t v128 = *(int *)(v122 + 28);
    uint64_t v129 = (char *)v120 + v128;
    uint64_t v130 = (char *)v121 + v128;
    swift_bridgeObjectRetain();
    uint64_t v118 = v148;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v146(v129, v130, v148);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v123 + 56))(v120, 0, 1, v122);
  }
  uint64_t v131 = v54[24];
  v132 = (void *)(a1 + v131);
  v133 = (void *)(a2 + v131);
  if (v147((const void *)(a2 + v131), 1, v118))
  {
    uint64_t v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(v132, v133, *(void *)(*(void *)(v134 - 8) + 64));
  }
  else
  {
    v146((char *)v132, (char *)v133, v118);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v145 + 56))(v132, 0, 1, v118);
  }
  uint64_t v135 = v54[25];
  v136 = (void *)(a1 + v135);
  uint64_t v137 = (void *)(a2 + v135);
  uint64_t v138 = v137[1];
  void *v136 = *v137;
  v136[1] = v138;
  *(_WORD *)(a1 + v54[26]) = *(_WORD *)(a2 + v54[26]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RawOrderContent(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *a2;
  if (v4 == 1)
  {
    if (v5 == 1)
    {
      long long v6 = *(_OWORD *)a2;
      long long v7 = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
      *(_OWORD *)(a1 + 32) = v7;
      *(_OWORD *)a1 = v6;
      long long v8 = *((_OWORD *)a2 + 3);
      long long v9 = *((_OWORD *)a2 + 4);
      long long v10 = *((_OWORD *)a2 + 5);
      *(void *)(a1 + 96) = a2[12];
      *(_OWORD *)(a1 + 64) = v9;
      *(_OWORD *)(a1 + 80) = v10;
      *(_OWORD *)(a1 + 48) = v8;
    }
    else
    {
      *(void *)a1 = v5;
      *(void *)(a1 + 8) = a2[1];
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = a2[3];
      *(void *)(a1 + 32) = a2[4];
      *(void *)(a1 + 40) = a2[5];
      *(void *)(a1 + 48) = a2[6];
      *(void *)(a1 + 56) = a2[7];
      *(void *)(a1 + 64) = a2[8];
      *(void *)(a1 + 72) = a2[9];
      *(void *)(a1 + 80) = a2[10];
      *(void *)(a1 + 88) = a2[11];
      *(void *)(a1 + 96) = a2[12];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v5 == 1)
  {
    sub_243731720(a1);
    long long v12 = *((_OWORD *)a2 + 1);
    long long v11 = *((_OWORD *)a2 + 2);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v12;
    *(_OWORD *)(a1 + 32) = v11;
    long long v14 = *((_OWORD *)a2 + 4);
    long long v13 = *((_OWORD *)a2 + 5);
    long long v15 = *((_OWORD *)a2 + 3);
    *(void *)(a1 + 96) = a2[12];
    *(_OWORD *)(a1 + 64) = v14;
    *(_OWORD *)(a1 + 80) = v13;
    *(_OWORD *)(a1 + 48) = v15;
  }
  else
  {
    *(void *)a1 = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = a2[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = a2[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = a2[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = a2[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 72) = a2[9];
    *(void *)(a1 + 80) = a2[10];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 88) = a2[11];
    *(void *)(a1 + 96) = a2[12];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v16 = (int *)type metadata accessor for RawMerchant();
  uint64_t v17 = v16[5];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = sub_243957010();
  uint64_t v21 = *(void *)(v20 - 8);
  v22 = *(uint64_t (**)(void))(v21 + 48);
  int v23 = ((uint64_t (*)(void *, uint64_t, uint64_t))v22)(v18, 1, v20);
  v175 = v22;
  int v24 = ((uint64_t (*)(char *, uint64_t, uint64_t))v22)(v19, 1, v20);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v24)
  {
    (*(void (**)(void *, uint64_t))(v21 + 8))(v18, v20);
LABEL_13:
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(v18, v19, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, char *, uint64_t))(v21 + 24))(v18, v19, v20);
LABEL_14:
  uint64_t v26 = v16[6];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (char *)a2 + v26;
  int v29 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v22)(a1 + v26, 1, v20);
  int v30 = ((uint64_t (*)(char *, uint64_t, uint64_t))v22)(v28, 1, v20);
  if (v29)
  {
    if (!v30)
    {
      (*(void (**)(void *, char *, uint64_t))(v21 + 16))(v27, v28, v20);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v27, 0, 1, v20);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (v30)
  {
    (*(void (**)(void *, uint64_t))(v21 + 8))(v27, v20);
LABEL_19:
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(void *, char *, uint64_t))(v21 + 24))(v27, v28, v20);
LABEL_20:
  uint64_t v32 = v16[7];
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (uint64_t *)((char *)a2 + v32);
  *uint64_t v33 = *v34;
  v33[1] = v34[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v35 = v16[8];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (uint64_t *)((char *)a2 + v35);
  *uint64_t v36 = *v37;
  v36[1] = v37[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v38 = v16[9];
  v39 = (void *)(a1 + v38);
  uint64_t v40 = (uint64_t *)((char *)a2 + v38);
  void *v39 = *v40;
  v39[1] = v40[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v41 = v16[10];
  uint64_t v42 = (void *)(a1 + v41);
  v43 = (uint64_t *)((char *)a2 + v41);
  void *v42 = *v43;
  v42[1] = v43[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v44 = v16[11];
  uint64_t v45 = (void *)(a1 + v44);
  uint64_t v46 = (uint64_t *)((char *)a2 + v44);
  *uint64_t v45 = *v46;
  v45[1] = v46[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v172 = v21;
  v173 = *(void (**)(uint64_t, char *, uint64_t))(v21 + 24);
  v173(a1 + v16[12], (char *)a2 + v16[12], v20);
  v47 = (int *)type metadata accessor for RawECommerceOrderContent(0);
  uint64_t v48 = v47[5];
  uint64_t v49 = (void *)(a1 + v48);
  uint64_t v50 = (uint64_t *)((char *)a2 + v48);
  *uint64_t v49 = *v50;
  v49[1] = v50[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v51 = v47[6];
  uint64_t v52 = (void *)(a1 + v51);
  uint64_t v53 = (uint64_t *)((char *)a2 + v51);
  *uint64_t v52 = *v53;
  v52[1] = v53[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v54 = v47[7];
  uint64_t v55 = (void *)(a1 + v54);
  v56 = (uint64_t *)((char *)a2 + v54);
  void *v55 = *v56;
  v55[1] = v56[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v47[8]) = *((unsigned char *)a2 + v47[8]);
  *(unsigned char *)(a1 + v47[9]) = *((unsigned char *)a2 + v47[9]);
  uint64_t v57 = v47[10];
  uint64_t v58 = (void *)(a1 + v57);
  uint64_t v59 = (uint64_t *)((char *)a2 + v57);
  *uint64_t v58 = *v59;
  v58[1] = v59[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v60 = v47[11];
  uint64_t v61 = a1 + v60;
  uint64_t v62 = (uint64_t)a2 + v60;
  uint64_t v63 = sub_243957400();
  uint64_t v166 = *(void *)(v63 - 8);
  uint64_t v64 = a1;
  uint64_t v65 = v20;
  uint64_t v66 = a2;
  uint64_t v67 = *(void (**)(uint64_t, uint64_t, uint64_t))(v166 + 24);
  v67(v61, v62, v63);
  uint64_t v165 = v63;
  v164 = (void (*)(char *, char *, uint64_t))v67;
  v67(v64 + v47[12], (uint64_t)v66 + v47[12], v63);
  v68 = v66;
  uint64_t v69 = v47;
  v173(v64 + v47[13], (char *)v66 + v47[13], v65);
  uint64_t v70 = v47[14];
  uint64_t v71 = v64 + v70;
  uint64_t v72 = (uint64_t)v66 + v70;
  uint64_t v73 = *(void *)(v64 + v70 + 40);
  uint64_t v74 = *(uint64_t *)((char *)v66 + v70 + 40);
  uint64_t v174 = v65;
  if (v73)
  {
    if (v74)
    {
      *(unsigned char *)uint64_t v71 = *(unsigned char *)v72;
      *(_DWORD *)(v71 + 8) = *(_DWORD *)(v72 + 8);
      *(_WORD *)(v71 + 12) = *(_WORD *)(v72 + 12);
      *(_WORD *)(v71 + 14) = *(_WORD *)(v72 + 14);
      *(_WORD *)(v71 + 16) = *(_WORD *)(v72 + 16);
      *(_WORD *)(v71 + 18) = *(_WORD *)(v72 + 18);
      *(_WORD *)(v71 + 20) = *(_WORD *)(v72 + 20);
      *(_WORD *)(v71 + 22) = *(_WORD *)(v72 + 22);
      *(_WORD *)(v71 + 24) = *(_WORD *)(v72 + 24);
      *(_WORD *)(v71 + 26) = *(_WORD *)(v72 + 26);
      *(void *)(v71 + 32) = *(void *)(v72 + 32);
      *(void *)(v71 + 40) = *(void *)(v72 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v71 + 48) = *(void *)(v72 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v71 + 56) = *(void *)(v72 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v71 + 64) = *(void *)(v72 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v71 + 72) = *(void *)(v72 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_243731774(v71);
      *(_OWORD *)uint64_t v71 = *(_OWORD *)v72;
      long long v76 = *(_OWORD *)(v72 + 64);
      long long v78 = *(_OWORD *)(v72 + 16);
      long long v77 = *(_OWORD *)(v72 + 32);
      *(_OWORD *)(v71 + 48) = *(_OWORD *)(v72 + 48);
      *(_OWORD *)(v71 + 64) = v76;
      *(_OWORD *)(v71 + 16) = v78;
      *(_OWORD *)(v71 + 32) = v77;
    }
  }
  else if (v74)
  {
    *(unsigned char *)uint64_t v71 = *(unsigned char *)v72;
    long long v75 = *(_OWORD *)(v72 + 8);
    *(_DWORD *)(v71 + 24) = *(_DWORD *)(v72 + 24);
    *(_OWORD *)(v71 + 8) = v75;
    *(void *)(v71 + 32) = *(void *)(v72 + 32);
    *(void *)(v71 + 40) = *(void *)(v72 + 40);
    *(void *)(v71 + 48) = *(void *)(v72 + 48);
    *(void *)(v71 + 56) = *(void *)(v72 + 56);
    *(void *)(v71 + 64) = *(void *)(v72 + 64);
    *(void *)(v71 + 72) = *(void *)(v72 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v71 = *(_OWORD *)v72;
    long long v79 = *(_OWORD *)(v72 + 16);
    long long v80 = *(_OWORD *)(v72 + 32);
    long long v81 = *(_OWORD *)(v72 + 64);
    *(_OWORD *)(v71 + 48) = *(_OWORD *)(v72 + 48);
    *(_OWORD *)(v71 + 64) = v81;
    *(_OWORD *)(v71 + 16) = v79;
    *(_OWORD *)(v71 + 32) = v80;
  }
  uint64_t v82 = v64;
  uint64_t v83 = v47[15];
  long long v84 = (unsigned char *)(v64 + v83);
  uint64_t v85 = (char *)v66 + v83;
  uint64_t v86 = (int *)type metadata accessor for RawOrderReturnInfo();
  uint64_t v87 = *((void *)v86 - 1);
  uint64_t v88 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v87 + 48);
  int v89 = v88(v84, 1, v86);
  int v90 = v88(v85, 1, v86);
  if (!v89)
  {
    if (v90)
    {
      sub_243731870((uint64_t)v84, (uint64_t (*)(void))type metadata accessor for RawOrderReturnInfo);
      goto LABEL_35;
    }
    v173((uint64_t)v84, v85, v174);
    uint64_t v99 = v86[5];
    uint64_t v100 = &v84[v99];
    uint64_t v101 = &v85[v99];
    void *v100 = *(void *)v101;
    v100[1] = *((void *)v101 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v102 = v86[6];
    uint64_t v103 = &v85[v102];
    v162 = &v84[v102];
    int __dsta = v175();
    int v104 = ((uint64_t (*)(char *, uint64_t, uint64_t))v175)(v103, 1, v174);
    if (__dsta)
    {
      uint64_t v105 = v166;
      if (v104)
      {
        size_t v106 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0) - 8) + 64);
        uint64_t v107 = v162;
LABEL_46:
        memcpy(v107, v103, v106);
        goto LABEL_49;
      }
      (*(void (**)(char *, char *, uint64_t))(v172 + 16))(v162, v103, v174);
      uint64_t v105 = v166;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v172 + 56))(v162, 0, 1, v174);
    }
    else
    {
      uint64_t v105 = v166;
      if (v104)
      {
        (*(void (**)(char *, uint64_t))(v172 + 8))(v162, v174);
        size_t v106 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0) - 8) + 64);
        uint64_t v107 = v162;
        goto LABEL_46;
      }
      v173((uint64_t)v162, v103, v174);
    }
LABEL_49:
    uint64_t v112 = v86[7];
    uint64_t v113 = &v85[v112];
    uint64_t v114 = *(uint64_t (**)(void))(v105 + 48);
    __src = &v84[v112];
    int __dstb = v114();
    int v115 = ((uint64_t (*)(char *, uint64_t, uint64_t))v114)(v113, 1, v165);
    if (__dstb)
    {
      if (!v115)
      {
        (*(void (**)(char *, char *, uint64_t))(v166 + 16))(__src, v113, v165);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v166 + 56))(__src, 0, 1, v165);
        goto LABEL_57;
      }
      size_t v116 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20) - 8)
                       + 64);
      long long v117 = __src;
    }
    else
    {
      if (!v115)
      {
        v164(__src, v113, v165);
        goto LABEL_57;
      }
      (*(void (**)(char *, uint64_t))(v166 + 8))(__src, v165);
      size_t v116 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20) - 8)
                       + 64);
      long long v117 = __src;
    }
    memcpy(v117, v113, v116);
LABEL_57:
    v84[v86[8]] = v85[v86[8]];
    goto LABEL_58;
  }
  if (v90)
  {
LABEL_35:
    uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CC60);
    memcpy(v84, v85, *(void *)(*(void *)(v98 - 8) + 64));
    goto LABEL_58;
  }
  uint64_t v91 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v172 + 16);
  v91(v84, v85, v174);
  uint64_t v92 = v86[5];
  v93 = &v84[v92];
  uint64_t v94 = &v85[v92];
  void *v93 = *(void *)v94;
  v93[1] = *((void *)v94 + 1);
  uint64_t v95 = v86[6];
  __dst = &v84[v95];
  uint64_t v96 = &v85[v95];
  swift_bridgeObjectRetain();
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v175)(v96, 1, v174))
  {
    uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(__dst, v96, *(void *)(*(void *)(v97 - 8) + 64));
  }
  else
  {
    v91(__dst, v96, v174);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v172 + 56))(__dst, 0, 1, v174);
  }
  uint64_t v108 = v86[7];
  uint64_t v109 = &v84[v108];
  uint64_t v110 = &v85[v108];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v166 + 48))(&v85[v108], 1, v165))
  {
    uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
    memcpy(v109, v110, *(void *)(*(void *)(v111 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v166 + 16))(v109, v110, v165);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v166 + 56))(v109, 0, 1, v165);
  }
  v84[v86[8]] = v85[v86[8]];
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v87 + 56))(v84, 0, 1, v86);
LABEL_58:
  *(void *)(v82 + v69[16]) = *(uint64_t *)((char *)v68 + v69[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v82 + v69[17]) = *(uint64_t *)((char *)v68 + v69[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v118 = v69[18];
  uint64_t v119 = v82 + v118;
  uint64_t v120 = (uint64_t)v68 + v118;
  uint64_t v121 = *(void *)(v82 + v118 + 8);
  uint64_t v122 = *(uint64_t *)((char *)v68 + v118 + 8);
  if (v121 == 1)
  {
    if (v122 == 1)
    {
      *(_OWORD *)uint64_t v119 = *(_OWORD *)v120;
      long long v123 = *(_OWORD *)(v120 + 16);
      long long v124 = *(_OWORD *)(v120 + 32);
      long long v125 = *(_OWORD *)(v120 + 64);
      *(_OWORD *)(v119 + 48) = *(_OWORD *)(v120 + 48);
      *(_OWORD *)(v119 + 64) = v125;
      *(_OWORD *)(v119 + 16) = v123;
      *(_OWORD *)(v119 + 32) = v124;
    }
    else
    {
      *(void *)uint64_t v119 = *(void *)v120;
      *(void *)(v119 + 8) = *(void *)(v120 + 8);
      *(void *)(v119 + 16) = *(void *)(v120 + 16);
      *(void *)(v119 + 24) = *(void *)(v120 + 24);
      *(void *)(v119 + 32) = *(void *)(v120 + 32);
      *(void *)(v119 + 40) = *(void *)(v120 + 40);
      *(void *)(v119 + 48) = *(void *)(v120 + 48);
      *(void *)(v119 + 56) = *(void *)(v120 + 56);
      *(void *)(v119 + 64) = *(void *)(v120 + 64);
      *(void *)(v119 + 72) = *(void *)(v120 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v122 == 1)
  {
    sub_2437317C8(v119);
    *(_OWORD *)uint64_t v119 = *(_OWORD *)v120;
    long long v126 = *(_OWORD *)(v120 + 64);
    long long v128 = *(_OWORD *)(v120 + 16);
    long long v127 = *(_OWORD *)(v120 + 32);
    *(_OWORD *)(v119 + 48) = *(_OWORD *)(v120 + 48);
    *(_OWORD *)(v119 + 64) = v126;
    *(_OWORD *)(v119 + 16) = v128;
    *(_OWORD *)(v119 + 32) = v127;
  }
  else
  {
    *(void *)uint64_t v119 = *(void *)v120;
    *(void *)(v119 + 8) = *(void *)(v120 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v119 + 16) = *(void *)(v120 + 16);
    *(void *)(v119 + 24) = *(void *)(v120 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v119 + 32) = *(void *)(v120 + 32);
    *(void *)(v119 + 40) = *(void *)(v120 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v119 + 48) = *(void *)(v120 + 48);
    *(void *)(v119 + 56) = *(void *)(v120 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v119 + 64) = *(void *)(v120 + 64);
    *(void *)(v119 + 72) = *(void *)(v120 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(void *)(v82 + v69[19]) = *(uint64_t *)((char *)v68 + v69[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v82 + v69[20]) = *(uint64_t *)((char *)v68 + v69[20]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v82 + v69[21]) = *(uint64_t *)((char *)v68 + v69[21]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v129 = v69[22];
  uint64_t v130 = v82 + v129;
  uint64_t v131 = (long long *)((char *)v68 + v129);
  uint64_t v132 = *(void *)(v82 + v129 + 32);
  uint64_t v133 = *(uint64_t *)((char *)v68 + v129 + 32);
  if (v132)
  {
    if (v133)
    {
      *(void *)uint64_t v130 = *(void *)v131;
      *(void *)(v130 + 8) = *((void *)v131 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v130 + 16) = *((unsigned char *)v131 + 16);
      *(void *)(v130 + 24) = *((void *)v131 + 3);
      *(void *)(v130 + 32) = *((void *)v131 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v130 + 40) = *((void *)v131 + 5);
      *(void *)(v130 + 48) = *((void *)v131 + 6);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_24373181C(v130);
      long long v135 = v131[1];
      long long v134 = v131[2];
      long long v136 = *v131;
      *(void *)(v130 + 48) = *((void *)v131 + 6);
      *(_OWORD *)(v130 + 16) = v135;
      *(_OWORD *)(v130 + 32) = v134;
      *(_OWORD *)uint64_t v130 = v136;
    }
  }
  else if (v133)
  {
    *(void *)uint64_t v130 = *(void *)v131;
    *(void *)(v130 + 8) = *((void *)v131 + 1);
    *(unsigned char *)(v130 + 16) = *((unsigned char *)v131 + 16);
    *(void *)(v130 + 24) = *((void *)v131 + 3);
    *(void *)(v130 + 32) = *((void *)v131 + 4);
    *(void *)(v130 + 40) = *((void *)v131 + 5);
    *(void *)(v130 + 48) = *((void *)v131 + 6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v137 = *v131;
    long long v138 = v131[1];
    long long v139 = v131[2];
    *(void *)(v130 + 48) = *((void *)v131 + 6);
    *(_OWORD *)(v130 + 16) = v138;
    *(_OWORD *)(v130 + 32) = v139;
    *(_OWORD *)uint64_t v130 = v137;
  }
  uint64_t v140 = v69[23];
  uint64_t v141 = (void *)(v82 + v140);
  uint64_t v142 = (uint64_t *)((char *)v68 + v140);
  uint64_t v143 = type metadata accessor for RawOrderProvider();
  uint64_t v144 = *(void *)(v143 - 8);
  uint64_t v145 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v144 + 48);
  int v146 = v145(v141, 1, v143);
  int v147 = v145(v142, 1, v143);
  if (v146)
  {
    if (!v147)
    {
      *uint64_t v141 = *v142;
      v141[1] = v142[1];
      v141[2] = v142[2];
      v141[3] = v142[3];
      v141[4] = v142[4];
      v141[5] = v142[5];
      uint64_t v148 = *(int *)(v143 + 28);
      v149 = (char *)v141 + v148;
      __dstc = (char *)v142 + v148;
      v167 = *(void (**)(char *, char *, uint64_t))(v172 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v150 = v174;
      v167(v149, __dstc, v174);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v144 + 56))(v141, 0, 1, v143);
      goto LABEL_78;
    }
    goto LABEL_77;
  }
  if (v147)
  {
    sub_243731870((uint64_t)v141, (uint64_t (*)(void))type metadata accessor for RawOrderProvider);
LABEL_77:
    uint64_t v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CC58);
    memcpy(v141, v142, *(void *)(*(void *)(v151 - 8) + 64));
    uint64_t v150 = v174;
    goto LABEL_78;
  }
  *uint64_t v141 = *v142;
  v141[1] = v142[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v141[2] = v142[2];
  v141[3] = v142[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v141[4] = v142[4];
  v141[5] = v142[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v150 = v174;
  v173((uint64_t)v141 + *(int *)(v143 + 28), (char *)v142 + *(int *)(v143 + 28), v174);
LABEL_78:
  uint64_t v152 = v69[24];
  v153 = (void *)(v82 + v152);
  v154 = (char *)v68 + v152;
  int v155 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v175)(v82 + v152, 1, v150);
  int v156 = ((uint64_t (*)(char *, uint64_t, uint64_t))v175)(v154, 1, v150);
  if (!v155)
  {
    if (!v156)
    {
      v173((uint64_t)v153, v154, v150);
      goto LABEL_84;
    }
    (*(void (**)(void *, uint64_t))(v172 + 8))(v153, v150);
    goto LABEL_83;
  }
  if (v156)
  {
LABEL_83:
    uint64_t v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(v153, v154, *(void *)(*(void *)(v157 - 8) + 64));
    goto LABEL_84;
  }
  (*(void (**)(void *, char *, uint64_t))(v172 + 16))(v153, v154, v150);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v172 + 56))(v153, 0, 1, v150);
LABEL_84:
  uint64_t v158 = v69[25];
  v159 = (void *)(v82 + v158);
  v160 = (uint64_t *)((char *)v68 + v158);
  void *v159 = *v160;
  v159[1] = v160[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(v82 + v69[26]) = *(_WORD *)((char *)v68 + v69[26]);
  return v82;
}

uint64_t sub_243731720(uint64_t a1)
{
  return a1;
}

uint64_t sub_243731774(uint64_t a1)
{
  return a1;
}

uint64_t sub_2437317C8(uint64_t a1)
{
  return a1;
}

uint64_t sub_24373181C(uint64_t a1)
{
  return a1;
}

uint64_t sub_243731870(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t initializeWithTake for RawOrderContent(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v4;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  long long v7 = (int *)type metadata accessor for RawMerchant();
  uint64_t v8 = v7[5];
  long long v9 = (void *)(a1 + v8);
  long long v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_243957010();
  uint64_t v12 = *(void *)(v11 - 8);
  long long v13 = *(unsigned int (**)(void))(v12 + 48);
  if (((unsigned int (*)(const void *, uint64_t, uint64_t))v13)(v10, 1, v11))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v15 = v7[6];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  uint64_t v74 = v12;
  long long v76 = v13;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v13)(a2 + v15, 1, v11))
  {
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    uint64_t v19 = *(void (**)(void *, const void *, uint64_t))(v12 + 32);
  }
  else
  {
    uint64_t v19 = *(void (**)(void *, const void *, uint64_t))(v12 + 32);
    v19(v16, v17, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
  }
  long long v77 = (void (*)(uint64_t, uint64_t, uint64_t))v19;
  *(_OWORD *)(a1 + v7[7]) = *(_OWORD *)(a2 + v7[7]);
  *(_OWORD *)(a1 + v7[8]) = *(_OWORD *)(a2 + v7[8]);
  *(_OWORD *)(a1 + v7[9]) = *(_OWORD *)(a2 + v7[9]);
  *(_OWORD *)(a1 + v7[10]) = *(_OWORD *)(a2 + v7[10]);
  *(_OWORD *)(a1 + v7[11]) = *(_OWORD *)(a2 + v7[11]);
  v19((void *)(a1 + v7[12]), (const void *)(a2 + v7[12]), v11);
  uint64_t v20 = (int *)type metadata accessor for RawECommerceOrderContent(0);
  *(_OWORD *)(a1 + v20[5]) = *(_OWORD *)(a2 + v20[5]);
  *(_OWORD *)(a1 + v20[6]) = *(_OWORD *)(a2 + v20[6]);
  *(_OWORD *)(a1 + v20[7]) = *(_OWORD *)(a2 + v20[7]);
  *(unsigned char *)(a1 + v20[8]) = *(unsigned char *)(a2 + v20[8]);
  *(unsigned char *)(a1 + v20[9]) = *(unsigned char *)(a2 + v20[9]);
  *(_OWORD *)(a1 + v20[10]) = *(_OWORD *)(a2 + v20[10]);
  uint64_t v21 = v20[11];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = sub_243957400();
  uint64_t v73 = *(void *)(v24 - 8);
  uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v73 + 32);
  v25(v22, v23, v24);
  uint64_t v72 = (void (*)(char *, char *, uint64_t))v25;
  v25(a1 + v20[12], a2 + v20[12], v24);
  v77(a1 + v20[13], a2 + v20[13], v11);
  uint64_t v26 = v20[14];
  uint64_t v27 = (_OWORD *)(a1 + v26);
  uint64_t v28 = (_OWORD *)(a2 + v26);
  long long v29 = v28[3];
  v27[2] = v28[2];
  v27[3] = v29;
  v27[4] = v28[4];
  long long v30 = v28[1];
  *uint64_t v27 = *v28;
  v27[1] = v30;
  uint64_t v31 = v20[15];
  uint64_t v32 = (char *)(a1 + v31);
  uint64_t v33 = (char *)(a2 + v31);
  uint64_t v34 = v11;
  uint64_t v35 = (int *)type metadata accessor for RawOrderReturnInfo();
  uint64_t v36 = *((void *)v35 - 1);
  uint64_t v75 = v11;
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v36 + 48))(v33, 1, v35))
  {
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CC60);
    memcpy(v32, v33, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    uint64_t v71 = v24;
    v77((uint64_t)v32, (uint64_t)v33, v11);
    *(_OWORD *)&v32[v35[5]] = *(_OWORD *)&v33[v35[5]];
    uint64_t v38 = v35[6];
    v39 = v32;
    uint64_t v40 = &v32[v38];
    uint64_t v41 = &v33[v38];
    if (v76())
    {
      uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
      memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      v77((uint64_t)v40, (uint64_t)v41, v34);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v40, 0, 1, v34);
    }
    uint64_t v43 = v35[7];
    uint64_t v44 = &v39[v43];
    uint64_t v70 = v33;
    uint64_t v45 = &v33[v43];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v45, 1, v71))
    {
      uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
      memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      v72(v44, v45, v71);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v73 + 56))(v44, 0, 1, v71);
    }
    v39[v35[8]] = v70[v35[8]];
    (*(void (**)(char *, void, uint64_t, int *))(v36 + 56))(v39, 0, 1, v35);
  }
  *(void *)(a1 + v20[16]) = *(void *)(a2 + v20[16]);
  *(void *)(a1 + v20[17]) = *(void *)(a2 + v20[17]);
  uint64_t v47 = v20[18];
  uint64_t v48 = (_OWORD *)(a1 + v47);
  uint64_t v49 = (_OWORD *)(a2 + v47);
  long long v50 = v49[4];
  long long v51 = v49[2];
  v48[3] = v49[3];
  v48[4] = v50;
  long long v52 = v49[1];
  *uint64_t v48 = *v49;
  v48[1] = v52;
  v48[2] = v51;
  *(void *)(a1 + v20[19]) = *(void *)(a2 + v20[19]);
  *(void *)(a1 + v20[20]) = *(void *)(a2 + v20[20]);
  *(void *)(a1 + v20[21]) = *(void *)(a2 + v20[21]);
  uint64_t v53 = v20[22];
  uint64_t v54 = a1 + v53;
  uint64_t v55 = (long long *)(a2 + v53);
  *(void *)(v54 + 48) = *((void *)v55 + 6);
  long long v56 = v55[2];
  long long v57 = *v55;
  *(_OWORD *)(v54 + 16) = v55[1];
  *(_OWORD *)(v54 + 32) = v56;
  *(_OWORD *)uint64_t v54 = v57;
  uint64_t v58 = v20[23];
  uint64_t v59 = (_OWORD *)(a1 + v58);
  uint64_t v60 = (_OWORD *)(a2 + v58);
  uint64_t v61 = type metadata accessor for RawOrderProvider();
  uint64_t v62 = *(void *)(v61 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v62 + 48))(v60, 1, v61))
  {
    uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CC58);
    memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
  }
  else
  {
    long long v64 = v60[1];
    _OWORD *v59 = *v60;
    v59[1] = v64;
    v59[2] = v60[2];
    v77((uint64_t)v59 + *(int *)(v61 + 28), (uint64_t)v60 + *(int *)(v61 + 28), v75);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
  }
  uint64_t v65 = v20[24];
  uint64_t v66 = (void *)(a1 + v65);
  uint64_t v67 = (const void *)(a2 + v65);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v76)(a2 + v65, 1, v75))
  {
    uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
  }
  else
  {
    v77((uint64_t)v66, (uint64_t)v67, v75);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v74 + 56))(v66, 0, 1, v75);
  }
  *(_OWORD *)(a1 + v20[25]) = *(_OWORD *)(a2 + v20[25]);
  *(_WORD *)(a1 + v20[26]) = *(_WORD *)(a2 + v20[26]);
  return a1;
}

uint64_t assignWithTake for RawOrderContent(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 == 1) {
    goto LABEL_4;
  }
  if (*(void *)a2 == 1)
  {
    sub_243731720(a1);
LABEL_4:
    long long v4 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v4;
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    long long v6 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v6;
    goto LABEL_6;
  }
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v12;
  swift_bridgeObjectRelease();
LABEL_6:
  long long v13 = (int *)type metadata accessor for RawMerchant();
  uint64_t v14 = v13[5];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v177 = a2;
  uint64_t v16 = (const void *)(a2 + v14);
  uint64_t v17 = sub_243957010();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(uint64_t (**)(void))(v18 + 48);
  int v20 = ((uint64_t (*)(void *, uint64_t, uint64_t))v19)(v15, 1, v17);
  int v21 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v19)(v16, 1, v17);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v15, v16, v17);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v21)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v15, v17);
LABEL_11:
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(v15, v16, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(void *, const void *, uint64_t))(v18 + 40))(v15, v16, v17);
LABEL_12:
  uint64_t v23 = v13[6];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (const void *)(a2 + v23);
  int v26 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v19)(a1 + v23, 1, v17);
  int v27 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v19)(v25, 1, v17);
  uint64_t v174 = v19;
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v24, v25, v17);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v24, 0, 1, v17);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  if (v27)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v24, v17);
LABEL_17:
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(void *, const void *, uint64_t))(v18 + 40))(v24, v25, v17);
LABEL_18:
  uint64_t v29 = v13[7];
  long long v30 = (void *)(a1 + v29);
  uint64_t v31 = (uint64_t *)(a2 + v29);
  uint64_t v33 = *v31;
  uint64_t v32 = v31[1];
  void *v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease();
  uint64_t v34 = v13[8];
  uint64_t v35 = (void *)(a1 + v34);
  uint64_t v36 = (uint64_t *)(a2 + v34);
  uint64_t v38 = *v36;
  uint64_t v37 = v36[1];
  void *v35 = v38;
  v35[1] = v37;
  swift_bridgeObjectRelease();
  uint64_t v39 = v13[9];
  uint64_t v40 = (void *)(a1 + v39);
  uint64_t v41 = (uint64_t *)(a2 + v39);
  uint64_t v43 = *v41;
  uint64_t v42 = v41[1];
  *uint64_t v40 = v43;
  v40[1] = v42;
  swift_bridgeObjectRelease();
  uint64_t v44 = v13[10];
  uint64_t v45 = (void *)(a1 + v44);
  uint64_t v46 = (uint64_t *)(a2 + v44);
  uint64_t v48 = *v46;
  uint64_t v47 = v46[1];
  *uint64_t v45 = v48;
  v45[1] = v47;
  swift_bridgeObjectRelease();
  uint64_t v49 = v13[11];
  long long v50 = (void *)(a1 + v49);
  long long v51 = (uint64_t *)(a2 + v49);
  uint64_t v53 = *v51;
  uint64_t v52 = v51[1];
  void *v50 = v53;
  v50[1] = v52;
  swift_bridgeObjectRelease();
  v175 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 40);
  v175(a1 + v13[12], a2 + v13[12], v17);
  uint64_t v54 = (int *)type metadata accessor for RawECommerceOrderContent(0);
  uint64_t v55 = v54[5];
  long long v56 = (void *)(a1 + v55);
  long long v57 = (uint64_t *)(v177 + v55);
  uint64_t v59 = *v57;
  uint64_t v58 = v57[1];
  void *v56 = v59;
  v56[1] = v58;
  swift_bridgeObjectRelease();
  uint64_t v60 = v54[6];
  uint64_t v61 = (void *)(a1 + v60);
  uint64_t v62 = (uint64_t *)(v177 + v60);
  uint64_t v64 = *v62;
  uint64_t v63 = v62[1];
  *uint64_t v61 = v64;
  v61[1] = v63;
  swift_bridgeObjectRelease();
  uint64_t v65 = v54[7];
  uint64_t v66 = (void *)(a1 + v65);
  uint64_t v67 = (uint64_t *)(v177 + v65);
  uint64_t v69 = *v67;
  uint64_t v68 = v67[1];
  *uint64_t v66 = v69;
  v66[1] = v68;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v54[8]) = *(unsigned char *)(v177 + v54[8]);
  *(unsigned char *)(a1 + v54[9]) = *(unsigned char *)(v177 + v54[9]);
  uint64_t v70 = v54[10];
  uint64_t v71 = (void *)(a1 + v70);
  uint64_t v72 = (uint64_t *)(v177 + v70);
  uint64_t v74 = *v72;
  uint64_t v73 = v72[1];
  void *v71 = v74;
  v71[1] = v73;
  swift_bridgeObjectRelease();
  uint64_t v75 = v54[11];
  uint64_t v76 = a1 + v75;
  uint64_t v77 = v177 + v75;
  uint64_t v176 = v17;
  uint64_t v78 = sub_243957400();
  uint64_t v172 = *(void *)(v78 - 8);
  uint64_t v79 = v18;
  long long v80 = *(void (**)(uint64_t, uint64_t, uint64_t))(v172 + 40);
  v80(v76, v77, v78);
  uint64_t v173 = v78;
  v170 = (void (*)(char *, char *, uint64_t))v80;
  v80(a1 + v54[12], v177 + v54[12], v78);
  v175(a1 + v54[13], v177 + v54[13], v176);
  uint64_t v81 = v54[14];
  uint64_t v82 = a1 + v81;
  uint64_t v83 = v177 + v81;
  if (*(void *)(a1 + v81 + 40))
  {
    uint64_t v84 = *(void *)(v83 + 40);
    if (v84)
    {
      *(unsigned char *)uint64_t v82 = *(unsigned char *)v83;
      *(_DWORD *)(v82 + 8) = *(_DWORD *)(v83 + 8);
      *(_OWORD *)(v82 + 12) = *(_OWORD *)(v83 + 12);
      *(void *)(v82 + 32) = *(void *)(v83 + 32);
      *(void *)(v82 + 40) = v84;
      swift_bridgeObjectRelease();
      *(void *)(v82 + 48) = *(void *)(v83 + 48);
      swift_bridgeObjectRelease();
      *(void *)(v82 + 56) = *(void *)(v83 + 56);
      swift_bridgeObjectRelease();
      *(void *)(v82 + 64) = *(void *)(v83 + 64);
      swift_bridgeObjectRelease();
      *(void *)(v82 + 72) = *(void *)(v83 + 72);
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
    sub_243731774(v82);
  }
  long long v85 = *(_OWORD *)(v83 + 48);
  *(_OWORD *)(v82 + 32) = *(_OWORD *)(v83 + 32);
  *(_OWORD *)(v82 + 48) = v85;
  *(_OWORD *)(v82 + 64) = *(_OWORD *)(v83 + 64);
  long long v86 = *(_OWORD *)(v83 + 16);
  *(_OWORD *)uint64_t v82 = *(_OWORD *)v83;
  *(_OWORD *)(v82 + 16) = v86;
LABEL_23:
  uint64_t v87 = v54[15];
  uint64_t v88 = (unsigned char *)(a1 + v87);
  int v89 = (unsigned char *)(v177 + v87);
  int v90 = (int *)type metadata accessor for RawOrderReturnInfo();
  uint64_t v91 = *((void *)v90 - 1);
  uint64_t v92 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v91 + 48);
  int v93 = v92(v88, 1, v90);
  int v94 = v92(v89, 1, v90);
  if (!v93)
  {
    if (v94)
    {
      sub_243731870((uint64_t)v88, (uint64_t (*)(void))type metadata accessor for RawOrderReturnInfo);
      goto LABEL_29;
    }
    v175((uint64_t)v88, (uint64_t)v89, v176);
    uint64_t v99 = v90[5];
    uint64_t v100 = &v88[v99];
    uint64_t v101 = (uint64_t *)&v89[v99];
    uint64_t v103 = *v101;
    uint64_t v102 = v101[1];
    void *v100 = v103;
    v100[1] = v102;
    swift_bridgeObjectRelease();
    uint64_t v104 = v90[6];
    uint64_t v105 = &v89[v104];
    uint64_t v166 = &v88[v104];
    int v106 = v174();
    int v107 = ((uint64_t (*)(char *, uint64_t, uint64_t))v174)(v105, 1, v176);
    if (v106)
    {
      uint64_t v108 = v172;
      if (v107)
      {
        size_t v109 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0) - 8) + 64);
        uint64_t v110 = v166;
LABEL_42:
        memcpy(v110, v105, v109);
        goto LABEL_45;
      }
      (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v166, v105, v176);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v166, 0, 1, v176);
    }
    else
    {
      uint64_t v108 = v172;
      if (v107)
      {
        (*(void (**)(char *, uint64_t))(v79 + 8))(v166, v176);
        size_t v109 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0) - 8) + 64);
        uint64_t v110 = v166;
        goto LABEL_42;
      }
      v175((uint64_t)v166, (uint64_t)v105, v176);
    }
LABEL_45:
    uint64_t v115 = v90[7];
    size_t v116 = &v89[v115];
    long long v117 = *(uint64_t (**)(void))(v108 + 48);
    v167 = &v88[v115];
    int v118 = v117();
    int v119 = ((uint64_t (*)(char *, uint64_t, uint64_t))v117)(v116, 1, v173);
    if (v118)
    {
      if (!v119)
      {
        (*(void (**)(char *, char *, uint64_t))(v172 + 32))(v167, v116, v173);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v172 + 56))(v167, 0, 1, v173);
        goto LABEL_53;
      }
      size_t v120 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20) - 8)
                       + 64);
      uint64_t v121 = v167;
    }
    else
    {
      if (!v119)
      {
        v170(v167, v116, v173);
        goto LABEL_53;
      }
      (*(void (**)(char *, uint64_t))(v172 + 8))(v167, v173);
      size_t v120 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20) - 8)
                       + 64);
      uint64_t v121 = v167;
    }
    memcpy(v121, v116, v120);
LABEL_53:
    v88[v90[8]] = v89[v90[8]];
    goto LABEL_54;
  }
  if (v94)
  {
LABEL_29:
    uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CC60);
    memcpy(v88, v89, *(void *)(*(void *)(v98 - 8) + 64));
    goto LABEL_54;
  }
  uint64_t v171 = v91;
  __src = *(void **)(v79 + 32);
  ((void (*)(unsigned char *, unsigned char *, uint64_t))__src)(v88, v89, v176);
  *(_OWORD *)&v88[v90[5]] = *(_OWORD *)&v89[v90[5]];
  uint64_t v95 = v90[6];
  __dst = &v88[v95];
  uint64_t v96 = &v89[v95];
  if (((unsigned int (*)(unsigned char *, uint64_t, uint64_t))v174)(&v89[v95], 1, v176))
  {
    uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(__dst, v96, *(void *)(*(void *)(v97 - 8) + 64));
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))__src)(__dst, v96, v176);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(__dst, 0, 1, v176);
  }
  uint64_t v111 = v90[7];
  uint64_t v112 = &v88[v111];
  uint64_t v113 = &v89[v111];
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v172 + 48))(&v89[v111], 1, v173))
  {
    uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
    memcpy(v112, v113, *(void *)(*(void *)(v114 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v172 + 32))(v112, v113, v173);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v172 + 56))(v112, 0, 1, v173);
  }
  v88[v90[8]] = v89[v90[8]];
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v171 + 56))(v88, 0, 1, v90);
LABEL_54:
  *(void *)(a1 + v54[16]) = *(void *)(v177 + v54[16]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + v54[17]) = *(void *)(v177 + v54[17]);
  swift_bridgeObjectRelease();
  uint64_t v122 = v54[18];
  uint64_t v123 = a1 + v122;
  uint64_t v124 = v177 + v122;
  if (*(void *)(a1 + v122 + 8) == 1)
  {
LABEL_57:
    long long v126 = *(_OWORD *)(v124 + 48);
    *(_OWORD *)(v123 + 32) = *(_OWORD *)(v124 + 32);
    *(_OWORD *)(v123 + 48) = v126;
    *(_OWORD *)(v123 + 64) = *(_OWORD *)(v124 + 64);
    long long v127 = *(_OWORD *)(v124 + 16);
    *(_OWORD *)uint64_t v123 = *(_OWORD *)v124;
    *(_OWORD *)(v123 + 16) = v127;
    goto LABEL_59;
  }
  uint64_t v125 = *(void *)(v124 + 8);
  if (v125 == 1)
  {
    sub_2437317C8(v123);
    goto LABEL_57;
  }
  *(void *)uint64_t v123 = *(void *)v124;
  *(void *)(v123 + 8) = v125;
  swift_bridgeObjectRelease();
  uint64_t v128 = *(void *)(v124 + 24);
  *(void *)(v123 + 16) = *(void *)(v124 + 16);
  *(void *)(v123 + 24) = v128;
  swift_bridgeObjectRelease();
  uint64_t v129 = *(void *)(v124 + 40);
  *(void *)(v123 + 32) = *(void *)(v124 + 32);
  *(void *)(v123 + 40) = v129;
  swift_bridgeObjectRelease();
  uint64_t v130 = *(void *)(v124 + 56);
  *(void *)(v123 + 48) = *(void *)(v124 + 48);
  *(void *)(v123 + 56) = v130;
  swift_bridgeObjectRelease();
  uint64_t v131 = *(void *)(v124 + 72);
  *(void *)(v123 + 64) = *(void *)(v124 + 64);
  *(void *)(v123 + 72) = v131;
  swift_bridgeObjectRelease();
LABEL_59:
  *(void *)(a1 + v54[19]) = *(void *)(v177 + v54[19]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + v54[20]) = *(void *)(v177 + v54[20]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + v54[21]) = *(void *)(v177 + v54[21]);
  swift_bridgeObjectRelease();
  uint64_t v132 = v54[22];
  uint64_t v133 = a1 + v132;
  uint64_t v134 = v177 + v132;
  if (*(void *)(a1 + v132 + 32))
  {
    if (*(void *)(v134 + 32))
    {
      uint64_t v135 = *(void *)(v134 + 8);
      *(void *)uint64_t v133 = *(void *)v134;
      *(void *)(v133 + 8) = v135;
      swift_bridgeObjectRelease();
      *(unsigned char *)(v133 + 16) = *(unsigned char *)(v134 + 16);
      uint64_t v136 = *(void *)(v134 + 32);
      *(void *)(v133 + 24) = *(void *)(v134 + 24);
      *(void *)(v133 + 32) = v136;
      swift_bridgeObjectRelease();
      uint64_t v137 = *(void *)(v134 + 48);
      *(void *)(v133 + 40) = *(void *)(v134 + 40);
      *(void *)(v133 + 48) = v137;
      swift_bridgeObjectRelease();
      goto LABEL_64;
    }
    sub_24373181C(v133);
  }
  long long v138 = *(_OWORD *)(v134 + 16);
  *(_OWORD *)uint64_t v133 = *(_OWORD *)v134;
  *(_OWORD *)(v133 + 16) = v138;
  *(_OWORD *)(v133 + 32) = *(_OWORD *)(v134 + 32);
  *(void *)(v133 + 48) = *(void *)(v134 + 48);
LABEL_64:
  uint64_t v139 = v54[23];
  uint64_t v140 = (char *)(a1 + v139);
  uint64_t v141 = (char *)(v177 + v139);
  uint64_t v142 = type metadata accessor for RawOrderProvider();
  uint64_t v143 = *(void *)(v142 - 8);
  uint64_t v144 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v143 + 48);
  int v145 = v144(v140, 1, v142);
  int v146 = v144(v141, 1, v142);
  if (v145)
  {
    if (!v146)
    {
      long long v147 = *((_OWORD *)v141 + 1);
      *(_OWORD *)uint64_t v140 = *(_OWORD *)v141;
      *((_OWORD *)v140 + 1) = v147;
      *((_OWORD *)v140 + 2) = *((_OWORD *)v141 + 2);
      uint64_t v148 = v79;
      uint64_t v149 = v176;
      (*(void (**)(char *, char *, uint64_t))(v79 + 32))(&v140[*(int *)(v142 + 28)], &v141[*(int *)(v142 + 28)], v176);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v143 + 56))(v140, 0, 1, v142);
      goto LABEL_71;
    }
  }
  else
  {
    if (!v146)
    {
      uint64_t v163 = *((void *)v141 + 1);
      *(void *)uint64_t v140 = *(void *)v141;
      *((void *)v140 + 1) = v163;
      swift_bridgeObjectRelease();
      uint64_t v164 = *((void *)v141 + 3);
      *((void *)v140 + 2) = *((void *)v141 + 2);
      *((void *)v140 + 3) = v164;
      swift_bridgeObjectRelease();
      uint64_t v165 = *((void *)v141 + 5);
      *((void *)v140 + 4) = *((void *)v141 + 4);
      *((void *)v140 + 5) = v165;
      swift_bridgeObjectRelease();
      uint64_t v149 = v176;
      v175((uint64_t)&v140[*(int *)(v142 + 28)], (uint64_t)&v141[*(int *)(v142 + 28)], v176);
      goto LABEL_70;
    }
    sub_243731870((uint64_t)v140, (uint64_t (*)(void))type metadata accessor for RawOrderProvider);
  }
  uint64_t v150 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CC58);
  memcpy(v140, v141, *(void *)(*(void *)(v150 - 8) + 64));
  uint64_t v149 = v176;
LABEL_70:
  uint64_t v148 = v79;
LABEL_71:
  uint64_t v151 = v54[24];
  uint64_t v152 = (void *)(a1 + v151);
  v153 = (const void *)(v177 + v151);
  int v154 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v174)(a1 + v151, 1, v149);
  int v155 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v174)(v153, 1, v149);
  if (!v154)
  {
    if (!v155)
    {
      v175((uint64_t)v152, (uint64_t)v153, v149);
      goto LABEL_77;
    }
    (*(void (**)(void *, uint64_t))(v148 + 8))(v152, v149);
    goto LABEL_76;
  }
  if (v155)
  {
LABEL_76:
    uint64_t v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(v152, v153, *(void *)(*(void *)(v156 - 8) + 64));
    goto LABEL_77;
  }
  (*(void (**)(void *, const void *, uint64_t))(v148 + 32))(v152, v153, v149);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v148 + 56))(v152, 0, 1, v149);
LABEL_77:
  uint64_t v157 = v54[25];
  uint64_t v158 = (void *)(a1 + v157);
  v159 = (uint64_t *)(v177 + v157);
  uint64_t v161 = *v159;
  uint64_t v160 = v159[1];
  *uint64_t v158 = v161;
  v158[1] = v160;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + v54[26]) = *(_WORD *)(v177 + v54[26]);
  return a1;
}

uint64_t getEnumTagSinglePayload for RawOrderContent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RawECommerceOrderContent(0);

  return MEMORY[0x270FA0340](a1, a2, v4, sub_2437330C4);
}

uint64_t sub_2437330C4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for RawMerchant();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_16:
    return v9(v10, a2, v8);
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v11 = *(void *)(a1 + a3[5] + 8);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
  uint64_t v13 = sub_243957400();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v8 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a3[11];
LABEL_15:
    uint64_t v10 = a1 + v15;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    goto LABEL_16;
  }
  uint64_t v16 = sub_243957010();
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a3[13];
    goto LABEL_15;
  }
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CC60);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a3[15];
    goto LABEL_15;
  }
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CC58);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a3[23];
    goto LABEL_15;
  }
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
  int v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a3[24];

  return v20(v22, a2, v21);
}

uint64_t storeEnumTagSinglePayload for RawOrderContent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for RawECommerceOrderContent(0);

  return MEMORY[0x270FA0580](a1, a2, a3, v6, sub_2437333A0);
}

uint64_t sub_2437333A0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = type metadata accessor for RawMerchant();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_14:
    return v11(v12, a2, a2, v10);
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[5] + 8) = (a2 - 1);
    return result;
  }
  uint64_t v13 = sub_243957400();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[11];
LABEL_13:
    uint64_t v12 = a1 + v15;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_14;
  }
  uint64_t v16 = sub_243957010();
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[13];
    goto LABEL_13;
  }
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CC60);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[15];
    goto LABEL_13;
  }
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CC58);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[23];
    goto LABEL_13;
  }
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
  int v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a4[24];

  return v20(v22, a2, a2, v21);
}

uint64_t sub_243733614(uint64_t a1)
{
  uint64_t result = type metadata accessor for RawECommerceOrderContent(319);
  if (v3 <= 0x3F)
  {
    uint64_t v4 = *(void *)(result - 8);
    swift_initEnumMetadataSingleCase();
    uint64_t result = 0;
    *(_DWORD *)(*(void *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
  return result;
}

ValueMetadata *type metadata accessor for RawOrderContent.SchemaVersion()
{
  return &type metadata for RawOrderContent.SchemaVersion;
}

unsigned char *storeEnumTagSinglePayload for RawOrderContent.OrderType(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x243733764);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for RawOrderContent.OrderType()
{
  return &type metadata for RawOrderContent.OrderType;
}

_WORD *__swift_memcpy2_2(_WORD *result, _WORD *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for RawOrderContentDecodingError(unsigned __int16 *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 0xFFFF) <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if ((a2 + 0xFFFF) < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 0xFFFF;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        return 0;
      }
      return (*a1 | (v4 << 16)) - 0xFFFF;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 0xFFFF;
    }
  }
  return 0;
}

uint64_t storeEnumTagSinglePayload for RawOrderContentDecodingError(uint64_t result, int a2, int a3)
{
  if ((a3 + 0xFFFF) <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if ((a3 + 0xFFFF) < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    unsigned int v6 = ((a2 - 1) >> 16) + 1;
    *(_WORD *)uint64_t result = a2 - 1;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        return result;
      case 2:
        *(_WORD *)(result + 2) = v6;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)(result + 2) = v6;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *(unsigned char *)(result + 2) = 0;
      break;
    case 2:
      *(_WORD *)(result + 2) = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2437338CCLL);
    case 4:
      *(_DWORD *)(result + 2) = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for RawOrderContentDecodingError()
{
  return &type metadata for RawOrderContentDecodingError;
}

uint64_t __swift_memcpy3_2(uint64_t result, __int16 *a2)
{
  __int16 v2 = *a2;
  *(unsigned char *)(result + 2) = *((unsigned char *)a2 + 2);
  *(_WORD *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for RawOrderContent.DecodingConfiguration(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF)
  {
    if ((a2 + 33554177) >> 24)
    {
      int v2 = *((unsigned __int8 *)a1 + 3);
      if (*((unsigned char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
      }
    }
    else
    {
      int v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
      }
    }
  }
  unsigned int v4 = *((unsigned __int8 *)a1 + 2);
  BOOL v5 = v4 >= 2;
  int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
  if (!v5) {
    int v6 = -1;
  }
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for RawOrderContent.DecodingConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if ((a3 + 33554177) >> 24) {
    int v3 = 1;
  }
  else {
    int v3 = 2;
  }
  if (a3 <= 0xFE) {
    int v3 = 0;
  }
  if (a2 > 0xFE)
  {
    *(_WORD *)uint64_t result = a2 - 255;
    *(unsigned char *)(result + 2) = (a2 - 255) >> 16;
    if (v3)
    {
      unsigned int v4 = ((a2 - 255) >> 24) + 1;
      if (v3 == 2) {
        *(_WORD *)(result + 3) = v4;
      }
      else {
        *(unsigned char *)(result + 3) = v4;
      }
    }
  }
  else
  {
    if (!v3) {
      goto LABEL_10;
    }
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2) {
        return result;
      }
LABEL_16:
      *(unsigned char *)(result + 2) = a2 + 1;
      return result;
    }
    *(unsigned char *)(result + 3) = 0;
    if (a2) {
      goto LABEL_16;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RawOrderContent.DecodingConfiguration()
{
  return &type metadata for RawOrderContent.DecodingConfiguration;
}

unsigned char *storeEnumTagSinglePayload for RawOrderContent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x243733B00);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RawOrderContent.CodingKeys()
{
  return &type metadata for RawOrderContent.CodingKeys;
}

unint64_t sub_243733B3C()
{
  unint64_t result = qword_268D9F130;
  if (!qword_268D9F130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F130);
  }
  return result;
}

unint64_t sub_243733B94()
{
  unint64_t result = qword_268D9F138;
  if (!qword_268D9F138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F138);
  }
  return result;
}

unint64_t sub_243733BEC()
{
  unint64_t result = qword_268D9F140;
  if (!qword_268D9F140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F140);
  }
  return result;
}

unint64_t sub_243733C40()
{
  unint64_t result = qword_268D9F148;
  if (!qword_268D9F148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F148);
  }
  return result;
}

unint64_t sub_243733C94()
{
  unint64_t result = qword_268D9F150;
  if (!qword_268D9F150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F150);
  }
  return result;
}

uint64_t OrderWebServiceRegisterRequest.deviceLibraryIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OrderWebServiceRegisterRequest.deviceLibraryIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*OrderWebServiceRegisterRequest.deviceLibraryIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t OrderWebServiceRegisterRequest.orderTypeIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OrderWebServiceRegisterRequest.orderTypeIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*OrderWebServiceRegisterRequest.orderTypeIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t OrderWebServiceRegisterRequest.orderIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OrderWebServiceRegisterRequest.orderIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*OrderWebServiceRegisterRequest.orderIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t OrderWebServiceRegisterRequest.authenticationToken.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OrderWebServiceRegisterRequest.authenticationToken.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

uint64_t (*OrderWebServiceRegisterRequest.authenticationToken.modify())()
{
  return nullsub_1;
}

uint64_t OrderWebServiceRegisterRequest.pushToken.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  sub_243403DD0(v1, *(void *)(v0 + 72));
  return v1;
}

uint64_t OrderWebServiceRegisterRequest.pushToken.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2433807F0(*(void *)(v2 + 64), *(void *)(v2 + 72));
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  return result;
}

uint64_t (*OrderWebServiceRegisterRequest.pushToken.modify())()
{
  return nullsub_1;
}

uint64_t OrderWebServiceRegisterRequest.init(deviceLibraryIdentifier:orderTypeIdentifier:orderIdentifier:authenticationToken:pushToken:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  a9[8] = a10;
  a9[9] = a11;
  return result;
}

void *OrderWebServiceRegisterRequest.pathComponents.getter()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v6 = v0[4];
  uint64_t v5 = v0[5];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C81B8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24395EAE0;
  *(void *)(inited + 32) = 12662;
  *(void *)(inited + 40) = 0xE200000000000000;
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_24377644C((void *)1, 3, 1, (void *)inited);
  unint64_t v10 = v8[2];
  unint64_t v9 = v8[3];
  unint64_t v11 = v10 + 1;
  if (v10 >= v9 >> 1) {
    uint64_t v8 = sub_24377644C((void *)(v9 > 1), v10 + 1, 1, v8);
  }
  v8[2] = v11;
  uint64_t v12 = &v8[2 * v10];
  v12[4] = 0x73656369766564;
  v12[5] = 0xE700000000000000;
  unint64_t v13 = v8[3];
  int64_t v14 = v10 + 2;
  swift_bridgeObjectRetain();
  if (v11 >= v13 >> 1) {
    uint64_t v8 = sub_24377644C((void *)(v13 > 1), v14, 1, v8);
  }
  v8[2] = v14;
  uint64_t v15 = &v8[2 * v11];
  v15[4] = v2;
  v15[5] = v1;
  swift_bridgeObjectRelease();
  int64_t v16 = v8[2];
  int64_t v17 = v16 + 3;
  if (__OFADD__(v16, 3))
  {
    __break(1u);
  }
  else
  {
    unint64_t v18 = v8[3];
    unint64_t v19 = v18 >> 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((uint64_t)(v18 >> 1) >= v17) {
      goto LABEL_7;
    }
  }
  if (v16 <= v17) {
    int64_t v29 = v16 + 3;
  }
  else {
    int64_t v29 = v16;
  }
  uint64_t v8 = sub_24377644C((void *)1, v29, 1, v8);
  int64_t v16 = v8[2];
  unint64_t v18 = v8[3];
  unint64_t v19 = v18 >> 1;
LABEL_7:
  unint64_t v20 = v16 + 1;
  if (v19 <= v16) {
    uint64_t v8 = sub_24377644C((void *)(v18 > 1), v16 + 1, 1, v8);
  }
  v8[2] = v20;
  uint64_t v21 = (char *)&v8[2 * v16];
  strcpy(v21 + 32, "registrations");
  *((_WORD *)v21 + 23) = -4864;
  unint64_t v22 = v8[3];
  int64_t v23 = v16 + 2;
  swift_bridgeObjectRetain();
  if (v20 >= v22 >> 1) {
    uint64_t v8 = sub_24377644C((void *)(v22 > 1), v23, 1, v8);
  }
  v8[2] = v23;
  uint64_t v24 = &v8[2 * v20];
  v24[4] = v4;
  v24[5] = v3;
  unint64_t v25 = v8[2];
  unint64_t v26 = v8[3];
  swift_bridgeObjectRetain();
  if (v25 >= v26 >> 1) {
    uint64_t v8 = sub_24377644C((void *)(v26 > 1), v25 + 1, 1, v8);
  }
  v8[2] = v25 + 1;
  int v27 = &v8[2 * v25];
  v27[4] = v6;
  v27[5] = v5;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

void OrderWebServiceRegisterRequest.httpMethod.getter(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t OrderWebServiceRegisterRequest.JSONBody.pushToken.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_243403DD0(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t OrderWebServiceRegisterRequest.JSONBody.pushToken.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2433807F0(*(void *)v2, *(void *)(v2 + 8));
  *(void *)uint64_t v2 = a1;
  *(void *)(v2 + 8) = a2;
  return result;
}

uint64_t (*OrderWebServiceRegisterRequest.JSONBody.pushToken.modify())()
{
  return nullsub_1;
}

uint64_t OrderWebServiceRegisterRequest.JSONBody.init(pushToken:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t static OrderWebServiceRegisterRequest.JSONBody.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_2437A0C54(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8));
}

uint64_t sub_243734318()
{
  return 0x656B6F5468737570;
}

uint64_t sub_243734334@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x656B6F5468737570 && a2 == 0xE90000000000006ELL)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_243959940();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2437343D8(uint64_t a1)
{
  unint64_t v2 = sub_243737120();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_243734414(uint64_t a1)
{
  unint64_t v2 = sub_243737120();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t OrderWebServiceRegisterRequest.JSONBody.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F158);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v7 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_243737120();
  sub_243959BD0();
  v10[0] = v8;
  v10[1] = v7;
  sub_2433CBF6C();
  sub_243959860();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t OrderWebServiceRegisterRequest.JSONBody.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F168);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_243737120();
  sub_243959BA0();
  if (!v2)
  {
    sub_2433CBEAC();
    sub_2439596F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_243734708@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return OrderWebServiceRegisterRequest.JSONBody.init(from:)(a1, a2);
}

uint64_t sub_243734720(void *a1)
{
  return OrderWebServiceRegisterRequest.JSONBody.encode(to:)(a1);
}

uint64_t OrderWebServiceRegisterRequest.jsonBody.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 64);
  unint64_t v3 = *(void *)(v1 + 72);
  *a1 = v2;
  a1[1] = v3;
  return sub_243403DD0(v2, v3);
}

uint64_t OrderWebServiceRegisterRequest.makeAdditionalHTTPHeaderFields()()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F2F0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_24395EAE0;
  swift_bridgeObjectRetain();
  sub_243958460();
  strcpy((char *)(v0 + 32), "Authorization");
  *(_WORD *)(v0 + 46) = -4864;
  *(void *)(v0 + 48) = 0x64724F656C707041;
  *(void *)(v0 + 56) = 0xEB00000000207265;
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t OrderWebServiceRegisterRequest.makeJSONEncoder()()
{
  uint64_t v0 = sub_2439564C0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  unint64_t v3 = (uint64_t *)((char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_243956520();
  swift_allocObject();
  uint64_t v4 = sub_243956510();
  *unint64_t v3 = sub_243734920;
  v3[1] = 0;
  (*(void (**)(void *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F06168], v0);
  sub_2439564E0();
  return v4;
}

uint64_t sub_243734920(uint64_t a1, unint64_t a2, void *a3)
{
  __swift_project_boxed_opaque_existential_1(a3, a3[3]);
  sub_243959BC0();
  sub_243403DD0(a1, a2);
  sub_243406488(a1, a2);
  sub_2433807F0(a1, a2);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v6, v7);
  sub_243959990();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
}

uint64_t sub_2437349F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 64);
  unint64_t v3 = *(void *)(v1 + 72);
  *a1 = v2;
  a1[1] = v3;
  return sub_243403DD0(v2, v3);
}

uint64_t sub_243734A04()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F2F0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_24395EAE0;
  swift_bridgeObjectRetain();
  sub_243958460();
  strcpy((char *)(v0 + 32), "Authorization");
  *(_WORD *)(v0 + 46) = -4864;
  *(void *)(v0 + 48) = 0x64724F656C707041;
  *(void *)(v0 + 56) = 0xEB00000000207265;
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_243734ADC()
{
  uint64_t v0 = sub_2439564C0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  unint64_t v3 = (uint64_t *)((char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_243956520();
  swift_allocObject();
  uint64_t v4 = sub_243956510();
  *unint64_t v3 = sub_243734920;
  v3[1] = 0;
  (*(void (**)(void *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F06168], v0);
  sub_2439564E0();
  return v4;
}

uint64_t OrderWebServiceRegisterResponse.hash(into:)()
{
  return sub_243959AE0();
}

BOOL static OrderWebServiceRegisterResponse.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void static OrderWebServiceRegisterResponse.parse(_:)(void *a1@<X0>, unsigned char *a2@<X8>)
{
  self;
  uint64_t v4 = swift_dynamicCastObjCClass();
  if (!v4)
  {
    type metadata accessor for FinanceNetworkError();
    sub_243739474((unint64_t *)&qword_268D9F240, (void (*)(uint64_t))type metadata accessor for FinanceNetworkError);
    swift_allocError();
    long long v10 = v9;
    *unint64_t v9 = sub_24337C218(0, (unint64_t *)&unk_268D9B410);
    v10[4] = sub_24337C218(0, (unint64_t *)&unk_268D9F250);
    v10[1] = (uint64_t)a1;
    swift_storeEnumTagMultiPayload();
    id v11 = a1;
    swift_willThrow();
    return;
  }
  uint64_t v5 = (void *)v4;
  id v6 = a1;
  id v7 = objc_msgSend(v5, sel_statusCode);
  if (v7 == (id)401)
  {
    type metadata accessor for FinanceNetworkError();
    sub_243739474((unint64_t *)&qword_268D9F240, (void (*)(uint64_t))type metadata accessor for FinanceNetworkError);
    swift_allocError();
  }
  else
  {
    id v8 = v7;
    if (v7 == (id)201)
    {

      *a2 = 0;
      return;
    }
    if (v7 == (id)200)
    {

      *a2 = 1;
      return;
    }
    type metadata accessor for FinanceNetworkError();
    sub_243739474((unint64_t *)&qword_268D9F240, (void (*)(uint64_t))type metadata accessor for FinanceNetworkError);
    swift_allocError();
    *uint64_t v12 = v8;
  }
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
}

uint64_t (*OrderWebServiceUnregisterRequest.deviceLibraryIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t (*OrderWebServiceUnregisterRequest.orderTypeIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t (*OrderWebServiceUnregisterRequest.orderIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t OrderWebServiceUnregisterRequest.authenticationToken.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OrderWebServiceUnregisterRequest.authenticationToken.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

uint64_t (*OrderWebServiceUnregisterRequest.authenticationToken.modify())()
{
  return nullsub_1;
}

void __swiftcall OrderWebServiceUnregisterRequest.init(deviceLibraryIdentifier:orderTypeIdentifier:orderIdentifier:authenticationToken:)(FinanceKit::OrderWebServiceUnregisterRequest *__return_ptr retstr, Swift::String deviceLibraryIdentifier, Swift::String orderTypeIdentifier, Swift::String orderIdentifier, Swift::String authenticationToken)
{
  retstr->deviceLibraryIdentifier = deviceLibraryIdentifier;
  retstr->orderTypeIdentifier = orderTypeIdentifier;
  retstr->orderIdentifier = orderIdentifier;
  retstr->authenticationToken = authenticationToken;
}

void *OrderWebServiceUnregisterRequest.pathComponents.getter()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v6 = v0[4];
  uint64_t v5 = v0[5];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C81B8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24395EAE0;
  *(void *)(inited + 32) = 12662;
  *(void *)(inited + 40) = 0xE200000000000000;
  swift_bridgeObjectRetain();
  id v8 = sub_24377644C((void *)1, 3, 1, (void *)inited);
  unint64_t v10 = v8[2];
  unint64_t v9 = v8[3];
  unint64_t v11 = v10 + 1;
  if (v10 >= v9 >> 1) {
    id v8 = sub_24377644C((void *)(v9 > 1), v10 + 1, 1, v8);
  }
  v8[2] = v11;
  uint64_t v12 = &v8[2 * v10];
  v12[4] = 0x73656369766564;
  v12[5] = 0xE700000000000000;
  unint64_t v13 = v8[3];
  int64_t v14 = v10 + 2;
  swift_bridgeObjectRetain();
  if (v11 >= v13 >> 1) {
    id v8 = sub_24377644C((void *)(v13 > 1), v14, 1, v8);
  }
  v8[2] = v14;
  uint64_t v15 = &v8[2 * v11];
  v15[4] = v2;
  v15[5] = v1;
  swift_bridgeObjectRelease();
  int64_t v16 = v8[2];
  int64_t v17 = v16 + 3;
  if (__OFADD__(v16, 3))
  {
    __break(1u);
  }
  else
  {
    unint64_t v18 = v8[3];
    unint64_t v19 = v18 >> 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((uint64_t)(v18 >> 1) >= v17) {
      goto LABEL_7;
    }
  }
  if (v16 <= v17) {
    int64_t v29 = v16 + 3;
  }
  else {
    int64_t v29 = v16;
  }
  id v8 = sub_24377644C((void *)1, v29, 1, v8);
  int64_t v16 = v8[2];
  unint64_t v18 = v8[3];
  unint64_t v19 = v18 >> 1;
LABEL_7:
  unint64_t v20 = v16 + 1;
  if (v19 <= v16) {
    id v8 = sub_24377644C((void *)(v18 > 1), v16 + 1, 1, v8);
  }
  v8[2] = v20;
  uint64_t v21 = (char *)&v8[2 * v16];
  strcpy(v21 + 32, "registrations");
  *((_WORD *)v21 + 23) = -4864;
  unint64_t v22 = v8[3];
  int64_t v23 = v16 + 2;
  swift_bridgeObjectRetain();
  if (v20 >= v22 >> 1) {
    id v8 = sub_24377644C((void *)(v22 > 1), v23, 1, v8);
  }
  v8[2] = v23;
  uint64_t v24 = &v8[2 * v20];
  v24[4] = v4;
  v24[5] = v3;
  unint64_t v25 = v8[2];
  unint64_t v26 = v8[3];
  swift_bridgeObjectRetain();
  if (v25 >= v26 >> 1) {
    id v8 = sub_24377644C((void *)(v26 > 1), v25 + 1, 1, v8);
  }
  v8[2] = v25 + 1;
  int v27 = &v8[2 * v25];
  v27[4] = v6;
  v27[5] = v5;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

void OrderWebServiceUnregisterRequest.httpMethod.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t OrderWebServiceUnregisterRequest.makeHTTPHeaderFields()()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F2F0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_24395EAE0;
  swift_bridgeObjectRetain();
  sub_243958460();
  strcpy((char *)(v0 + 32), "Authorization");
  *(_WORD *)(v0 + 46) = -4864;
  *(void *)(v0 + 48) = 0x64724F656C707041;
  *(void *)(v0 + 56) = 0xEB00000000207265;
  swift_bridgeObjectRelease();
  return v0;
}

void sub_2437352F8(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void static OrderWebServiceUnregisterResponse.parse(_:)(void *a1@<X0>, unsigned char *a2@<X8>)
{
  self;
  uint64_t v4 = swift_dynamicCastObjCClass();
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    id v6 = a1;
    id v7 = objc_msgSend(v5, sel_statusCode);
    if (v7 == (id)404)
    {

      *a2 = 1;
    }
    else
    {
      id v8 = v7;
      if (v7 == (id)401)
      {
        type metadata accessor for FinanceNetworkError();
        sub_243739474((unint64_t *)&qword_268D9F240, (void (*)(uint64_t))type metadata accessor for FinanceNetworkError);
        swift_allocError();
      }
      else
      {
        if (v7 == (id)200)
        {

          *a2 = 0;
          return;
        }
        type metadata accessor for FinanceNetworkError();
        sub_243739474((unint64_t *)&qword_268D9F240, (void (*)(uint64_t))type metadata accessor for FinanceNetworkError);
        swift_allocError();
        *uint64_t v12 = v8;
      }
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
    }
  }
  else
  {
    type metadata accessor for FinanceNetworkError();
    sub_243739474((unint64_t *)&qword_268D9F240, (void (*)(uint64_t))type metadata accessor for FinanceNetworkError);
    swift_allocError();
    unint64_t v10 = v9;
    *unint64_t v9 = sub_24337C218(0, (unint64_t *)&unk_268D9B410);
    v10[4] = sub_24337C218(0, (unint64_t *)&unk_268D9F250);
    v10[1] = (uint64_t)a1;
    swift_storeEnumTagMultiPayload();
    id v11 = a1;
    swift_willThrow();
  }
}

uint64_t OrderWebServiceFetchRequest.orderTypeIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OrderWebServiceFetchRequest.orderTypeIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*OrderWebServiceFetchRequest.orderTypeIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t OrderWebServiceFetchRequest.orderIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OrderWebServiceFetchRequest.orderIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*OrderWebServiceFetchRequest.orderIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t OrderWebServiceFetchRequest.authenticationToken.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OrderWebServiceFetchRequest.authenticationToken.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*OrderWebServiceFetchRequest.authenticationToken.modify())()
{
  return nullsub_1;
}

uint64_t OrderWebServiceFetchRequest.lastModifiedValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OrderWebServiceFetchRequest.lastModifiedValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

uint64_t (*OrderWebServiceFetchRequest.lastModifiedValue.modify())()
{
  return nullsub_1;
}

BOOL OrderWebServiceFetchRequest.isConditional.getter()
{
  return *(void *)(v0 + 56) != 0;
}

void __swiftcall OrderWebServiceFetchRequest.init(orderTypeIdentifier:orderIdentifier:authenticationToken:lastModifiedValue:)(FinanceKit::OrderWebServiceFetchRequest *__return_ptr retstr, Swift::String orderTypeIdentifier, Swift::String orderIdentifier, Swift::String authenticationToken, Swift::String_optional lastModifiedValue)
{
  retstr->orderTypeIdentifier = orderTypeIdentifier;
  retstr->orderIdentifier = orderIdentifier;
  retstr->authenticationToken = authenticationToken;
  retstr->lastModifiedValue = lastModifiedValue;
}

uint64_t OrderWebServiceFetchRequest.pathComponents.getter()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C81B8);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_243965AD0;
  *(void *)(v5 + 32) = 12662;
  *(void *)(v5 + 40) = 0xE200000000000000;
  *(void *)(v5 + 48) = 0x73726564726FLL;
  *(void *)(v5 + 56) = 0xE600000000000000;
  *(void *)(v5 + 64) = v2;
  *(void *)(v5 + 72) = v1;
  *(void *)(v5 + 80) = v4;
  *(void *)(v5 + 88) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t OrderWebServiceFetchRequest.makeHTTPHeaderFields()()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v1 = *(void *)(v0 + 56);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F2F0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_24395EAE0;
  swift_bridgeObjectRetain();
  sub_243958460();
  strcpy((char *)(v3 + 32), "Authorization");
  *(_WORD *)(v3 + 46) = -4864;
  *(void *)(v3 + 48) = 0x64724F656C707041;
  *(void *)(v3 + 56) = 0xEB00000000207265;
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = (uint64_t)sub_24377655C((void *)1, 2, 1, (void *)v3);
    *(void *)(v3 + 16) = 2;
    *(void *)(v3 + 64) = 0xD000000000000011;
    *(void *)(v3 + 72) = 0x80000002439A9BA0;
    *(void *)(v3 + 80) = v2;
    *(void *)(v3 + 88) = v1;
  }
  return v3;
}

uint64_t sub_243735948()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C81B8);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_243965AD0;
  *(void *)(v5 + 32) = 12662;
  *(void *)(v5 + 40) = 0xE200000000000000;
  *(void *)(v5 + 48) = 0x73726564726FLL;
  *(void *)(v5 + 56) = 0xE600000000000000;
  *(void *)(v5 + 64) = v2;
  *(void *)(v5 + 72) = v1;
  *(void *)(v5 + 80) = v4;
  *(void *)(v5 + 88) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t sub_2437359E0()
{
  return OrderWebServiceFetchRequest.makeHTTPHeaderFields()();
}

uint64_t OrderWebServiceFetchResponseContext.orderTypeIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OrderWebServiceFetchResponseContext.orderTypeIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*OrderWebServiceFetchResponseContext.orderTypeIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t OrderWebServiceFetchResponseContext.orderIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OrderWebServiceFetchResponseContext.orderIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*OrderWebServiceFetchResponseContext.orderIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t OrderWebServiceFetchResponseContext.requestWasConditional.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t OrderWebServiceFetchResponseContext.requestWasConditional.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 32) = result;
  return result;
}

uint64_t (*OrderWebServiceFetchResponseContext.requestWasConditional.modify())()
{
  return nullsub_1;
}

void __swiftcall OrderWebServiceFetchResponseContext.init(orderTypeIdentifier:orderIdentifier:requestWasConditional:)(FinanceKit::OrderWebServiceFetchResponseContext *__return_ptr retstr, Swift::String orderTypeIdentifier, Swift::String orderIdentifier, Swift::Bool requestWasConditional)
{
  retstr->orderTypeIdentifier = orderTypeIdentifier;
  retstr->orderIdentifier = orderIdentifier;
  retstr->requestWasConditional = requestWasConditional;
}

uint64_t OrderWebServiceFetchResponseContext.fullyQualifiedOrderIdentifier.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

BOOL sub_243735B90(long long *a1, long long *a2)
{
  sub_2433A857C(a1, (uint64_t)v4);
  sub_2433A857C(a2, (uint64_t)v5);
  return _s10FinanceKit28OrderWebServiceFetchResponseO2eeoiySbAC_ACtFZ_0(v4, v5);
}

void static OrderWebServiceFetchResponse.parse(data:urlResponse:responseContext:)(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  sub_243737A94(a1, a2, a3, a4, (uint64_t **)v7);
  if (!v5) {
    sub_2433A857C(v7, a5);
  }
}

uint64_t OrderWebServiceFetchChangesRequest.deviceLibraryIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OrderWebServiceFetchChangesRequest.deviceLibraryIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*OrderWebServiceFetchChangesRequest.deviceLibraryIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t OrderWebServiceFetchChangesRequest.orderTypeIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OrderWebServiceFetchChangesRequest.orderTypeIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*OrderWebServiceFetchChangesRequest.orderTypeIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t OrderWebServiceFetchChangesRequest.lastModifiedValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OrderWebServiceFetchChangesRequest.lastModifiedValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*OrderWebServiceFetchChangesRequest.lastModifiedValue.modify())()
{
  return nullsub_1;
}

void __swiftcall OrderWebServiceFetchChangesRequest.init(deviceLibraryIdentifier:orderTypeIdentifier:lastModifiedValue:)(FinanceKit::OrderWebServiceFetchChangesRequest *__return_ptr retstr, Swift::String deviceLibraryIdentifier, Swift::String orderTypeIdentifier, Swift::String_optional lastModifiedValue)
{
  retstr->deviceLibraryIdentifier = deviceLibraryIdentifier;
  retstr->orderTypeIdentifier = orderTypeIdentifier;
  retstr->lastModifiedValue = lastModifiedValue;
}

uint64_t OrderWebServiceFetchChangesRequest.pathComponents.getter()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C81B8);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_243961090;
  *(void *)(v5 + 32) = 12662;
  *(void *)(v5 + 40) = 0xE200000000000000;
  *(void *)(v5 + 48) = 0x73656369766564;
  *(void *)(v5 + 56) = 0xE700000000000000;
  *(void *)(v5 + 64) = v2;
  *(void *)(v5 + 72) = v1;
  strcpy((char *)(v5 + 80), "registrations");
  *(_WORD *)(v5 + 94) = -4864;
  *(void *)(v5 + 96) = v4;
  *(void *)(v5 + 104) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t OrderWebServiceFetchChangesRequest.queryItems.getter()
{
  if (!*(void *)(v0 + 40)) {
    return MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268D9F330);
  sub_243956620();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_24395EAE0;
  sub_243956610();
  return v1;
}

void OrderWebServiceFetchChangesRequest.httpMethod.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_243735F88()
{
  if (!*(void *)(v0 + 40)) {
    return MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268D9F330);
  sub_243956620();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_24395EAE0;
  sub_243956610();
  return v1;
}

uint64_t OrderWebServiceFetchChangesResponse.orderIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t OrderWebServiceFetchChangesResponse.orderIdentifiers.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t (*OrderWebServiceFetchChangesResponse.orderIdentifiers.modify())()
{
  return nullsub_1;
}

uint64_t OrderWebServiceFetchChangesResponse.lastModifiedValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*OrderWebServiceFetchChangesResponse.lastModifiedValue.modify())()
{
  return nullsub_1;
}

FinanceKit::OrderWebServiceFetchChangesResponse __swiftcall OrderWebServiceFetchChangesResponse.init(orderIdentifiers:lastModifiedValue:)(Swift::OpaquePointer orderIdentifiers, Swift::String_optional lastModifiedValue)
{
  *(Swift::OpaquePointer *)uint64_t v2 = orderIdentifiers;
  *(Swift::String_optional *)(v2 + 8) = lastModifiedValue;
  result.lastModifiedValue = lastModifiedValue;
  result.orderIdentifiers = orderIdentifiers;
  return result;
}

uint64_t OrderWebServiceFetchChangesResponse.JSONBody.orderIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t OrderWebServiceFetchChangesResponse.JSONBody.orderIdentifiers.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t (*OrderWebServiceFetchChangesResponse.JSONBody.orderIdentifiers.modify())()
{
  return nullsub_1;
}

uint64_t _s10FinanceKit35OrderWebServiceFetchChangesResponseV17lastModifiedValueSSSgvs_0(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*OrderWebServiceFetchChangesResponse.JSONBody.lastModified.modify())()
{
  return nullsub_1;
}

uint64_t OrderWebServiceFetchChangesResponse.JSONBody.init(orderIdentifiers:lastModified:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t sub_2437361E8()
{
  if (*v0) {
    return 0x69646F4D7473616CLL;
  }
  else {
    return 0xD000000000000010;
  }
}

uint64_t sub_243736230@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2437392B8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_243736258(uint64_t a1)
{
  unint64_t v2 = sub_243738054();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_243736294(uint64_t a1)
{
  unint64_t v2 = sub_243738054();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t OrderWebServiceFetchChangesResponse.JSONBody.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F170);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  v11[1] = v1[2];
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_243738054();
  sub_243959BD0();
  uint64_t v14 = v9;
  char v13 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C7148);
  sub_243388214(&qword_268D97378);
  sub_2439597D0();
  if (!v2)
  {
    char v12 = 1;
    sub_243959790();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t OrderWebServiceFetchChangesResponse.JSONBody.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F180);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_243738054();
  sub_243959BA0();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C7148);
    v14[15] = 0;
    sub_243388214((unint64_t *)&qword_268D973B8);
    sub_243959660();
    uint64_t v9 = v15;
    v14[14] = 1;
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_243959620();
    uint64_t v13 = v12;
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *a2 = v9;
    a2[1] = v11;
    a2[2] = v13;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2437366D8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return OrderWebServiceFetchChangesResponse.JSONBody.init(from:)(a1, a2);
}

uint64_t sub_2437366F0(void *a1)
{
  return OrderWebServiceFetchChangesResponse.JSONBody.encode(to:)(a1);
}

void static OrderWebServiceFetchChangesResponse.parse(data:urlResponse:)(void *a1@<X2>, void *a2@<X8>)
{
  self;
  uint64_t v5 = swift_dynamicCastObjCClass();
  if (!v5)
  {
    type metadata accessor for FinanceNetworkError();
    sub_243739474((unint64_t *)&qword_268D9F240, (void (*)(uint64_t))type metadata accessor for FinanceNetworkError);
    swift_allocError();
    uint64_t v12 = v11;
    *uint64_t v11 = sub_24337C218(0, (unint64_t *)&unk_268D9B410);
    v12[4] = sub_24337C218(0, (unint64_t *)&unk_268D9F250);
    v12[1] = (uint64_t)a1;
    swift_storeEnumTagMultiPayload();
    id v13 = a1;
    swift_willThrow();
    return;
  }
  uint64_t v6 = (void *)v5;
  id v7 = a1;
  id v8 = objc_msgSend(v6, sel_statusCode);
  if (v8 == (id)401)
  {
    type metadata accessor for FinanceNetworkError();
    sub_243739474((unint64_t *)&qword_268D9F240, (void (*)(uint64_t))type metadata accessor for FinanceNetworkError);
    swift_allocError();
  }
  else
  {
    id v9 = v8;
    if (v8 == (id)204)
    {

      uint64_t v14 = MEMORY[0x263F8EE78];
      a2[1] = 0;
      a2[2] = 0;
      *a2 = v14;
      return;
    }
    if (v8 == (id)200)
    {
      sub_243956460();
      swift_allocObject();
      sub_243956450();
      sub_2437380A8();
      sub_243956440();
      if (v2)
      {
        type metadata accessor for FinanceNetworkError();
        sub_243739474((unint64_t *)&qword_268D9F240, (void (*)(uint64_t))type metadata accessor for FinanceNetworkError);
        swift_allocError();
        *unint64_t v10 = v2;
        swift_storeEnumTagMultiPayload();
        swift_willThrow();

        swift_release();
        return;
      }
      swift_release();
      uint64_t v16 = MEMORY[0x263F8EE78];
      if (v17) {
        uint64_t v16 = v17;
      }
      *a2 = v16;
      *(_OWORD *)(a2 + 1) = v18;
      goto LABEL_12;
    }
    type metadata accessor for FinanceNetworkError();
    sub_243739474((unint64_t *)&qword_268D9F240, (void (*)(uint64_t))type metadata accessor for FinanceNetworkError);
    swift_allocError();
    *uint64_t v15 = v9;
  }
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
LABEL_12:
}

uint64_t OrderWebServiceLogRequest.logEntries.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t OrderWebServiceLogRequest.logEntries.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t (*OrderWebServiceLogRequest.logEntries.modify())()
{
  return nullsub_1;
}

FinanceKit::OrderWebServiceLogRequest __swiftcall OrderWebServiceLogRequest.init(logEntries:)(FinanceKit::OrderWebServiceLogRequest logEntries)
{
  v1->logEntries._rawValue = logEntries.logEntries._rawValue;
  return logEntries;
}

void *OrderWebServiceLogRequest.pathComponents.getter()
{
  return &unk_26F8AAEA0;
}

void OrderWebServiceLogRequest.httpMethod.getter(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t (*OrderWebServiceLogRequest.JSONBody.logs.modify())()
{
  return nullsub_1;
}

uint64_t static OrderWebServiceLogRequest.JSONBody.== infix(_:_:)(void **a1, void **a2)
{
  return sub_243474994(*a1, *a2);
}

uint64_t sub_243736B0C()
{
  return 1936158572;
}

uint64_t sub_243736B1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1936158572 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_243959940();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_243736BA4(uint64_t a1)
{
  unint64_t v2 = sub_2437380FC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_243736BE0(uint64_t a1)
{
  unint64_t v2 = sub_2437380FC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t OrderWebServiceLogRequest.JSONBody.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F190);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2437380FC();
  sub_243959BD0();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C7148);
  sub_243388214(&qword_268D97378);
  sub_243959860();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t OrderWebServiceLogRequest.JSONBody.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F1A0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2437380FC();
  sub_243959BA0();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C7148);
    sub_243388214((unint64_t *)&qword_268D973B8);
    sub_2439596F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_243736F2C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return OrderWebServiceLogRequest.JSONBody.init(from:)(a1, a2);
}

uint64_t sub_243736F44(void *a1)
{
  return OrderWebServiceLogRequest.JSONBody.encode(to:)(a1);
}

uint64_t OrderWebServiceLogRequest.jsonBody.getter@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_243736F68@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

void *sub_243736F74()
{
  return &unk_26F8AAEA0;
}

void static OrderWebServiceLogResponse.validate(_:)(void *a1)
{
  self;
  uint64_t v2 = swift_dynamicCastObjCClass();
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    id v4 = a1;
    id v5 = objc_msgSend(v3, sel_statusCode);
    if (v5 != (id)200)
    {
      id v6 = v5;
      type metadata accessor for FinanceNetworkError();
      sub_243739474((unint64_t *)&qword_268D9F240, (void (*)(uint64_t))type metadata accessor for FinanceNetworkError);
      swift_allocError();
      *uint64_t v7 = v6;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
    }
  }
  else
  {
    type metadata accessor for FinanceNetworkError();
    sub_243739474((unint64_t *)&qword_268D9F240, (void (*)(uint64_t))type metadata accessor for FinanceNetworkError);
    swift_allocError();
    id v9 = v8;
    uint64_t *v8 = sub_24337C218(0, (unint64_t *)&unk_268D9B410);
    v9[4] = sub_24337C218(0, (unint64_t *)&unk_268D9F250);
    v9[1] = (uint64_t)a1;
    swift_storeEnumTagMultiPayload();
    id v10 = a1;
    swift_willThrow();
  }
}

unint64_t sub_243737120()
{
  unint64_t result = qword_268D9F160;
  if (!qword_268D9F160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F160);
  }
  return result;
}

BOOL _s10FinanceKit28OrderWebServiceFetchResponseO2eeoiySbAC_ACtFZ_0(long long *a1, long long *a2)
{
  sub_2433A857C(a1, (uint64_t)v14);
  if (!v14[0])
  {
    sub_2433A857C(a2, (uint64_t)v13);
    return v13[0] == 0;
  }
  uint64_t v4 = v14[1];
  unint64_t v3 = v14[2];
  uint64_t v6 = v14[3];
  uint64_t v5 = v14[4];
  sub_2433A857C(a2, (uint64_t)v13);
  if (!v13[0]) {
    return 0;
  }
  uint64_t v8 = v13[1];
  unint64_t v7 = v13[2];
  uint64_t v9 = v13[4];
  uint64_t v12 = v13[3];
  sub_243957EE0();
  swift_retain();
  swift_retain();
  sub_243403DD0(v4, v3);
  sub_243403DD0(v8, v7);
  sub_243739474(&qword_268D9CF60, MEMORY[0x263F045C0]);
  if ((sub_243958120() & 1) == 0 || (sub_2437A0C54(v4, v3, v8, v7) & 1) == 0)
  {
    sub_2433807F0(v8, v7);
    sub_2433807F0(v4, v3);
LABEL_12:
    swift_release();
    swift_release();
    return 0;
  }
  if (!v5)
  {
    swift_bridgeObjectRetain();
    sub_2433807F0(v8, v7);
    sub_2433807F0(v4, v3);
    swift_release();
    swift_release();
    if (!v9) {
      return 1;
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  if (!v9)
  {
    swift_bridgeObjectRetain();
    sub_2433807F0(v8, v7);
    sub_2433807F0(v4, v3);
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  if (v6 == v12 && v5 == v9)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2433807F0(v8, v7);
    sub_2433807F0(v4, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    return 1;
  }
  char v11 = sub_243959940();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2433807F0(v8, v7);
  sub_2433807F0(v4, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return (v11 & 1) != 0;
}

BOOL _s10FinanceKit35OrderWebServiceFetchChangesResponseV8JSONBodyV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  unint64_t v7 = *(void **)a2;
  uint64_t v9 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  if (v4)
  {
    if (!v7 || (sub_243474994(v4, v7) & 1) == 0) {
      return 0;
    }
  }
  else if (v7)
  {
    return 0;
  }
  if (v6) {
    return v8 && (v5 == v9 && v6 == v8 || (sub_243959940() & 1) != 0);
  }
  return !v8;
}

uint64_t *sub_2437374CC(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_2439593D0();
  uint64_t v43 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v41 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v42 = (char *)&v40 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = sub_243957010();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = objc_msgSend(self, sel_defaultManager);
  id v14 = objc_msgSend(v13, sel_temporaryDirectory);

  sub_243956F90();
  v45[3] = &type metadata for OrderBundleValidator;
  v45[4] = &protocol witness table for OrderBundleValidator;
  v45[0] = &type metadata for WalletPreferences;
  v45[1] = &protocol witness table for WalletPreferences;
  uint64_t v15 = v44;
  uint64_t v44 = sub_24365C0D4(a1, a2, (uint64_t)v12, (uint64_t)v45);
  if (v15)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v45);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v45[0] = v15;
    uint64_t v16 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C7A50);
    if (swift_dynamicCast())
    {

      uint64_t v17 = v43;
      long long v18 = v42;
      (*(void (**)(void))(v43 + 32))();
      unint64_t v19 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
      unint64_t v20 = v41;
      v19(v41, v18, v4);
      int v21 = (*(uint64_t (**)(char *, uint64_t))(v17 + 88))(v20, v4);
      int v22 = *MEMORY[0x263F8DCB8];
      unint64_t v25 = *(void (**)(char *, uint64_t))(v17 + 8);
      uint64_t v23 = v17 + 8;
      uint64_t v24 = v25;
      v25(v20, v4);
      if (v21 == v22)
      {
        uint64_t v26 = swift_allocError();
        v19(v27, v18, v4);
        sub_2437393C0();
        swift_allocError();
        *(void *)uint64_t v28 = v26;
        *(_OWORD *)(v28 + 8) = 0u;
        *(_OWORD *)(v28 + 24) = 0u;
        *(_OWORD *)(v28 + 40) = 0u;
        *(_OWORD *)(v28 + 49) = 0u;
      }
      else
      {
        type metadata accessor for FinanceNetworkError();
        sub_243739474((unint64_t *)&qword_268D9F240, (void (*)(uint64_t))type metadata accessor for FinanceNetworkError);
        swift_allocError();
        uint64_t v43 = v23;
        uint64_t v35 = v34;
        uint64_t v36 = swift_allocError();
        v19(v37, v18, v4);
        uint64_t *v35 = v36;
        swift_storeEnumTagMultiPayload();
      }
      swift_willThrow();
      v24(v18, v4);
    }
    else
    {

      v45[0] = v15;
      int64_t v29 = v15;
      if (!swift_dynamicCast())
      {

        type metadata accessor for FinanceNetworkError();
        sub_243739474((unint64_t *)&qword_268D9F240, (void (*)(uint64_t))type metadata accessor for FinanceNetworkError);
        swift_allocError();
        void *v38 = v15;
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        return v44;
      }

      __int16 v30 = v46;
      sub_24372E6A0();
      uint64_t v31 = swift_allocError();
      *uint64_t v32 = v30;
      sub_2437393C0();
      swift_allocError();
      *(void *)uint64_t v33 = v31;
      *(_OWORD *)(v33 + 8) = 0u;
      *(_OWORD *)(v33 + 24) = 0u;
      *(_OWORD *)(v33 + 40) = 0u;
      *(_OWORD *)(v33 + 49) = 0u;
      swift_willThrow();
    }
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v45);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  return v44;
}

void sub_243737A94(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X3>, uint64_t **a5@<X8>)
{
  uint64_t v60 = a1;
  uint64_t v58 = a5;
  uint64_t v9 = type metadata accessor for RawECommerceOrderContent(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for RawOrderContent();
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v59 = (uint64_t)&v51 - v16;
  uint64_t v17 = a4[1];
  uint64_t v56 = *a4;
  uint64_t v57 = v17;
  uint64_t v18 = a4[3];
  uint64_t v55 = a4[2];
  int v19 = *((unsigned __int8 *)a4 + 32);
  self;
  uint64_t v20 = swift_dynamicCastObjCClass();
  if (!v20)
  {
    type metadata accessor for FinanceNetworkError();
    sub_243739474((unint64_t *)&qword_268D9F240, (void (*)(uint64_t))type metadata accessor for FinanceNetworkError);
    swift_allocError();
    uint64_t v42 = v41;
    *uint64_t v41 = sub_24337C218(0, (unint64_t *)&unk_268D9B410);
    v42[4] = sub_24337C218(0, (unint64_t *)&unk_268D9F250);
    v42[1] = (uint64_t)a3;
    swift_storeEnumTagMultiPayload();
    id v43 = a3;
    swift_willThrow();
    return;
  }
  int v21 = (void *)v20;
  id v61 = a3;
  id v22 = objc_msgSend(v21, sel_statusCode);
  if (v22 == (id)401)
  {
    type metadata accessor for FinanceNetworkError();
    sub_243739474((unint64_t *)&qword_268D9F240, (void (*)(uint64_t))type metadata accessor for FinanceNetworkError);
    swift_allocError();
LABEL_23:
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    goto LABEL_24;
  }
  id v23 = v22;
  if (v22 == (id)304)
  {
    if (v19)
    {

      uint64_t v44 = 0;
      uint64_t v45 = 0;
      unint64_t v46 = 0;
      uint64_t v38 = 0;
      uint64_t v40 = 0;
      goto LABEL_28;
    }
    goto LABEL_22;
  }
  if (v22 != (id)200)
  {
LABEL_22:
    type metadata accessor for FinanceNetworkError();
    sub_243739474((unint64_t *)&qword_268D9F240, (void (*)(uint64_t))type metadata accessor for FinanceNetworkError);
    swift_allocError();
    void *v47 = v23;
    goto LABEL_23;
  }
  uint64_t v24 = sub_2437374CC(v60, a2);
  if (v5)
  {
LABEL_24:

    return;
  }
  unint64_t v51 = a2;
  uint64_t v52 = v24;
  uint64_t v25 = v59;
  sub_24365C600((uint64_t)v24 + OBJC_IVAR____TtC10FinanceKit11OrderBundle_content, v59);
  sub_24365C600(v25, (uint64_t)v15);
  sub_2434E9944((uint64_t)v15, (uint64_t)v11);
  uint64_t v26 = &v11[*(int *)(v9 + 20)];
  uint64_t v27 = *((void *)v26 + 1);
  uint64_t v54 = *(void *)v26;
  swift_bridgeObjectRetain();
  sub_243739414((uint64_t)v11, type metadata accessor for RawECommerceOrderContent);
  sub_24365C600(v25, (uint64_t)v15);
  sub_2434E9944((uint64_t)v15, (uint64_t)v11);
  uint64_t v28 = &v11[*(int *)(v9 + 24)];
  uint64_t v30 = *(void *)v28;
  uint64_t v29 = *((void *)v28 + 1);
  swift_bridgeObjectRetain();
  sub_243739414((uint64_t)v11, type metadata accessor for RawECommerceOrderContent);
  uint64_t v32 = v56;
  uint64_t v31 = v57;
  uint64_t v33 = v55;
  uint64_t v53 = v27;
  BOOL v34 = v56 == v54 && v57 == v27;
  if (!v34 && (sub_243959940() & 1) == 0
    || (v33 == v30 ? (BOOL v35 = v18 == v29) : (BOOL v35 = 0), !v35 && (sub_243959940() & 1) == 0))
  {
    sub_2437393C0();
    swift_allocError();
    *(void *)uint64_t v48 = v32;
    *(void *)(v48 + 8) = v31;
    *(void *)(v48 + 16) = v33;
    *(void *)(v48 + 24) = v18;
    uint64_t v49 = v53;
    *(void *)(v48 + 32) = v54;
    *(void *)(v48 + 40) = v49;
    *(void *)(v48 + 48) = v30;
    *(void *)(v48 + 56) = v29;
    *(unsigned char *)(v48 + 64) = 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_willThrow();
    swift_release();

    sub_243739414(v59, (uint64_t (*)(void))type metadata accessor for RawOrderContent);
    return;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v36 = (void *)sub_2439582A0();
  id v37 = objc_msgSend(v21, sel_valueForHTTPHeaderField_, v36);

  if (v37)
  {
    uint64_t v38 = sub_2439582D0();
    uint64_t v40 = v39;
  }
  else
  {

    uint64_t v38 = 0;
    uint64_t v40 = 0;
  }
  uint64_t v45 = v60;
  unint64_t v46 = v51;
  sub_243739414(v59, (uint64_t (*)(void))type metadata accessor for RawOrderContent);
  sub_243403DD0(v45, v46);
  uint64_t v44 = v52;
LABEL_28:
  long long v50 = v58;
  *uint64_t v58 = v44;
  v50[1] = (uint64_t *)v45;
  v50[2] = (uint64_t *)v46;
  v50[3] = (uint64_t *)v38;
  v50[4] = v40;
}

unint64_t sub_243738054()
{
  unint64_t result = qword_268D9F178;
  if (!qword_268D9F178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F178);
  }
  return result;
}

unint64_t sub_2437380A8()
{
  unint64_t result = qword_268D9F188;
  if (!qword_268D9F188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F188);
  }
  return result;
}

unint64_t sub_2437380FC()
{
  unint64_t result = qword_268D9F198;
  if (!qword_268D9F198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F198);
  }
  return result;
}

unint64_t sub_243738154()
{
  unint64_t result = qword_268D9F1A8;
  if (!qword_268D9F1A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F1A8);
  }
  return result;
}

unint64_t sub_2437381AC()
{
  unint64_t result = qword_268D9F1B0;
  if (!qword_268D9F1B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F1B0);
  }
  return result;
}

unint64_t sub_243738204()
{
  unint64_t result = qword_268D9F1B8;
  if (!qword_268D9F1B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F1B8);
  }
  return result;
}

uint64_t destroy for OrderWebServiceRegisterRequest(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 64);
  unint64_t v3 = *(void *)(a1 + 72);

  return sub_2433807F0(v2, v3);
}

void *initializeWithCopy for OrderWebServiceRegisterRequest(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[8];
  unint64_t v8 = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_243403DD0(v7, v8);
  a1[8] = v7;
  a1[9] = v8;
  return a1;
}

void *assignWithCopy for OrderWebServiceRegisterRequest(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[8];
  unint64_t v4 = a2[9];
  sub_243403DD0(v5, v4);
  uint64_t v6 = a1[8];
  unint64_t v7 = a1[9];
  a1[8] = v5;
  a1[9] = v4;
  sub_2433807F0(v6, v7);
  return a1;
}

void *assignWithTake for OrderWebServiceRegisterRequest(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  a1[4] = *(void *)(a2 + 32);
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  a1[6] = *(void *)(a2 + 48);
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a1[8];
  unint64_t v9 = a1[9];
  *((_OWORD *)a1 + 4) = *(_OWORD *)(a2 + 64);
  sub_2433807F0(v8, v9);
  return a1;
}

ValueMetadata *type metadata accessor for OrderWebServiceRegisterRequest()
{
  return &type metadata for OrderWebServiceRegisterRequest;
}

ValueMetadata *type metadata accessor for OrderWebServiceRegisterRequest.JSONBody()
{
  return &type metadata for OrderWebServiceRegisterRequest.JSONBody;
}

ValueMetadata *type metadata accessor for OrderWebServiceRegisterResponse()
{
  return &type metadata for OrderWebServiceRegisterResponse;
}

ValueMetadata *type metadata accessor for OrderWebServiceUnregisterRequest()
{
  return &type metadata for OrderWebServiceUnregisterRequest;
}

ValueMetadata *type metadata accessor for OrderWebServiceUnregisterResponse()
{
  return &type metadata for OrderWebServiceUnregisterResponse;
}

uint64_t _s10FinanceKit32OrderWebServiceUnregisterRequestVwxx_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s10FinanceKit32OrderWebServiceUnregisterRequestVwcp_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s10FinanceKit32OrderWebServiceUnregisterRequestVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *_s10FinanceKit32OrderWebServiceUnregisterRequestVwta_0(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s10FinanceKit32OrderWebServiceUnregisterRequestVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_2437386F8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OrderWebServiceFetchRequest()
{
  return &type metadata for OrderWebServiceFetchRequest;
}

ValueMetadata *type metadata accessor for OrderWebServiceFetchResponseContext()
{
  return &type metadata for OrderWebServiceFetchResponseContext;
}

unint64_t destroy for OrderWebServiceFetchResponse(unint64_t *a1)
{
  unint64_t result = *a1;
  if (result >= 0xFFFFFFFF)
  {
    swift_release();
    sub_2433807F0(a1[1], a1[2]);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for OrderWebServiceFetchResponse(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    uint64_t v4 = *(void *)(a2 + 8);
    unint64_t v5 = *(void *)(a2 + 16);
    swift_retain();
    sub_243403DD0(v4, v5);
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v5;
    uint64_t v6 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v6;
    swift_bridgeObjectRetain();
  }
  return a1;
}

unint64_t *assignWithCopy for OrderWebServiceFetchResponse(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4 = *a1;
  unint64_t v5 = *a2;
  if (v4 < 0xFFFFFFFF)
  {
    if (v5 >= 0xFFFFFFFF)
    {
      *a1 = v5;
      uint64_t v10 = a2[1];
      unint64_t v11 = a2[2];
      swift_retain();
      sub_243403DD0(v10, v11);
      a1[1] = v10;
      a1[2] = v11;
      a1[3] = a2[3];
      a1[4] = a2[4];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    long long v12 = *(_OWORD *)a2;
    long long v13 = *((_OWORD *)a2 + 1);
    a1[4] = a2[4];
    *(_OWORD *)a1 = v12;
    *((_OWORD *)a1 + 1) = v13;
    return a1;
  }
  if (v5 < 0xFFFFFFFF)
  {
    swift_release();
    sub_2433807F0(a1[1], a1[2]);
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = a2[1];
  unint64_t v7 = a2[2];
  sub_243403DD0(v6, v7);
  uint64_t v8 = a1[1];
  unint64_t v9 = a1[2];
  a1[1] = v6;
  a1[2] = v7;
  sub_2433807F0(v8, v9);
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for OrderWebServiceFetchResponse(void *a1, uint64_t a2)
{
  if (*a1 < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    swift_release();
    sub_2433807F0(a1[1], a1[2]);
    swift_bridgeObjectRelease();
LABEL_5:
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v7;
    a1[4] = *(void *)(a2 + 32);
    return a1;
  }
  *a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = a1[1];
  unint64_t v5 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  sub_2433807F0(v4, v5);
  uint64_t v6 = *(void *)(a2 + 32);
  a1[3] = *(void *)(a2 + 24);
  a1[4] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for OrderWebServiceFetchResponse(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 40)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for OrderWebServiceFetchResponse(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 32) = 0;
    *(_OWORD *)unint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

uint64_t sub_243738A8C(uint64_t result, int a2)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    uint64_t v2 = a2 ^ 0x80000000;
    *(_OWORD *)(result + 24) = 0u;
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = (a2 - 1);
  }
  *(void *)unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for OrderWebServiceFetchResponse()
{
  return &type metadata for OrderWebServiceFetchResponse;
}

ValueMetadata *type metadata accessor for OrderWebServiceFetchChangesRequest()
{
  return &type metadata for OrderWebServiceFetchChangesRequest;
}

void *assignWithCopy for OrderWebServiceFetchChangesResponse(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for OrderWebServiceFetchChangesResponse(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for OrderWebServiceFetchChangesResponse()
{
  return &type metadata for OrderWebServiceFetchChangesResponse;
}

uint64_t destroy for OrderWebServiceFetchChangesResponse.JSONBody()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s10FinanceKit35OrderWebServiceFetchChangesResponseVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for OrderWebServiceFetchChangesResponse.JSONBody(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for OrderWebServiceFetchChangesResponse.JSONBody(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for OrderWebServiceFetchChangesResponse.JSONBody(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for OrderWebServiceFetchChangesResponse.JSONBody(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OrderWebServiceFetchChangesResponse.JSONBody()
{
  return &type metadata for OrderWebServiceFetchChangesResponse.JSONBody;
}

ValueMetadata *type metadata accessor for OrderWebServiceLogRequest()
{
  return &type metadata for OrderWebServiceLogRequest;
}

ValueMetadata *type metadata accessor for OrderWebServiceLogRequest.JSONBody()
{
  return &type metadata for OrderWebServiceLogRequest.JSONBody;
}

ValueMetadata *type metadata accessor for OrderWebServiceLogResponse()
{
  return &type metadata for OrderWebServiceLogResponse;
}

ValueMetadata *type metadata accessor for OrderWebServiceLogRequest.JSONBody.CodingKeys()
{
  return &type metadata for OrderWebServiceLogRequest.JSONBody.CodingKeys;
}

unsigned char *_s10FinanceKit31OrderWebServiceRegisterResponseOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x243738E94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OrderWebServiceFetchChangesResponse.JSONBody.CodingKeys()
{
  return &type metadata for OrderWebServiceFetchChangesResponse.JSONBody.CodingKeys;
}

unsigned char *_s10FinanceKit25OrderWebServiceLogRequestV8JSONBodyV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x243738F68);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for OrderWebServiceRegisterRequest.JSONBody.CodingKeys()
{
  return &type metadata for OrderWebServiceRegisterRequest.JSONBody.CodingKeys;
}

unint64_t sub_243738FA4()
{
  unint64_t result = qword_268D9F1C0;
  if (!qword_268D9F1C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F1C0);
  }
  return result;
}

unint64_t sub_243738FFC()
{
  unint64_t result = qword_268D9F1C8;
  if (!qword_268D9F1C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F1C8);
  }
  return result;
}

unint64_t sub_243739054()
{
  unint64_t result = qword_268D9F1D0;
  if (!qword_268D9F1D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F1D0);
  }
  return result;
}

unint64_t sub_2437390AC()
{
  unint64_t result = qword_268D9F1D8;
  if (!qword_268D9F1D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F1D8);
  }
  return result;
}

unint64_t sub_243739104()
{
  unint64_t result = qword_268D9F1E0;
  if (!qword_268D9F1E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F1E0);
  }
  return result;
}

unint64_t sub_24373915C()
{
  unint64_t result = qword_268D9F1E8;
  if (!qword_268D9F1E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F1E8);
  }
  return result;
}

unint64_t sub_2437391B4()
{
  unint64_t result = qword_268D9F1F0;
  if (!qword_268D9F1F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F1F0);
  }
  return result;
}

unint64_t sub_24373920C()
{
  unint64_t result = qword_268D9F1F8;
  if (!qword_268D9F1F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F1F8);
  }
  return result;
}

unint64_t sub_243739264()
{
  unint64_t result = qword_268D9F200;
  if (!qword_268D9F200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F200);
  }
  return result;
}

uint64_t sub_2437392B8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000002439B06B0 || (sub_243959940() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x69646F4D7473616CLL && a2 == 0xEC00000064656966)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_243959940();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_2437393C0()
{
  unint64_t result = qword_268D9F390;
  if (!qword_268D9F390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F390);
  }
  return result;
}

uint64_t sub_243739414(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_243739474(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *sub_2437394F0()
{
  swift_bridgeObjectRetain();
  sub_243958460();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F2F0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24395EAE0;
  strcpy((char *)(inited + 32), "Content-Type");
  *(unsigned char *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  *(void *)(inited + 48) = 0xD000000000000010;
  *(void *)(inited + 56) = 0x80000002439A1650;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v1 = (char *)sub_24377655C((void *)1, 2, 1, (void *)inited);
  *((void *)v1 + 2) = 2;
  strcpy(v1 + 64, "Authorization");
  *((_WORD *)v1 + 39) = -4864;
  *((void *)v1 + 10) = 0x64724F656C707041;
  *((void *)v1 + 11) = 0xEB00000000207265;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_243739684()
{
  return sub_243739E3C(type metadata accessor for BankConnectWebServiceAccountRequest, (uint64_t)&unk_26F8AA498);
}

uint64_t sub_2437396B8()
{
  return sub_243739760((uint64_t)&unk_26F8AA518);
}

uint64_t sub_24373970C()
{
  return sub_243739760((uint64_t)&unk_26F8AA558);
}

uint64_t sub_243739760(uint64_t a1)
{
  uint64_t v32 = a1;
  uint64_t v43 = *MEMORY[0x263EF8340];
  uint64_t v2 = sub_2439564D0();
  uint64_t v36 = *(void *)(v2 - 8);
  uint64_t v37 = v2;
  MEMORY[0x270FA5388](v2);
  BOOL v35 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F2F0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24395EAE0;
  unsigned int v4 = (int *)type metadata accessor for BankConnectConsent();
  uint64_t v5 = v4[6];
  unsigned int v6 = (uint64_t *)(v1 + v4[5]);
  uint64_t v7 = *v6;
  uint64_t v33 = v6[1];
  uint64_t v34 = v7;
  uint64_t v8 = v1 + v5;
  unint64_t v9 = (int *)type metadata accessor for RawBankConnectData.Consent(0);
  uint64_t v41 = v9;
  uint64_t v42 = sub_243742950(&qword_268D97C30, (void (*)(uint64_t))type metadata accessor for RawBankConnectData.Consent);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v40);
  unint64_t v11 = (char *)boxed_opaque_existential_0 + v9[5];
  uint64_t v12 = sub_243957400();
  long long v13 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  v13(v11, v8, v12);
  v13((char *)boxed_opaque_existential_0 + v9[6], v1 + v4[7], v12);
  uint64_t v14 = *(void *)(v1 + v4[9]);
  uint64_t v15 = (uint64_t *)(v1 + v4[10]);
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  uint64_t v18 = v33;
  uint64_t *boxed_opaque_existential_0 = v34;
  boxed_opaque_existential_0[1] = v18;
  *(uint64_t *)((char *)boxed_opaque_existential_0 + v9[7]) = v14;
  int v19 = (uint64_t *)((char *)boxed_opaque_existential_0 + v9[8]);
  *int v19 = v16;
  v19[1] = v17;
  __swift_project_boxed_opaque_existential_1(v40, (uint64_t)v41);
  sub_243956520();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_243956510();
  if (qword_268D96AD8 != -1) {
    swift_once();
  }
  uint64_t v20 = v37;
  uint64_t v21 = __swift_project_value_buffer(v37, (uint64_t)qword_268D98E70);
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v35, v21, v20);
  sub_2439564F0();
  uint64_t v22 = v38;
  uint64_t v23 = sub_243956500();
  unint64_t v25 = v24;
  swift_release();
  if (v22)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v40);
    swift_setDeallocating();
    return swift_arrayDestroy();
  }
  else
  {
    uint64_t v27 = sub_2439570B0();
    uint64_t v29 = v28;
    sub_2433807F0(v23, v25);
    uint64_t v30 = (void *)inited;
    *(void *)(inited + 32) = 0x746E65736E6F43;
    v30[5] = 0xE700000000000000;
    v30[6] = v27;
    v30[7] = v29;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v40);
    v40[0] = v32;
    sub_2433A6E34((uint64_t)v30);
    return v40[0];
  }
}

uint64_t sub_243739AFC()
{
  return sub_243739760((uint64_t)&unk_26F8AA5D8);
}

uint64_t sub_243739B50()
{
  v21[13] = *MEMORY[0x263EF8340];
  uint64_t v1 = sub_2439564D0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  unsigned int v4 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  uint64_t v6 = v0[1];
  uint64_t v8 = v0[2];
  uint64_t v7 = v0[3];
  __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F2F0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24395EAE0;
  v21[3] = &type metadata for RawBankConnectData.InitiatedConsent;
  v20[0] = sub_2433D1220();
  v21[4] = v20[0];
  uint64_t v10 = (void *)swift_allocObject();
  v21[0] = v10;
  void v10[2] = v5;
  v10[3] = v6;
  v10[4] = v8;
  v10[5] = v7;
  __swift_project_boxed_opaque_existential_1(v21, (uint64_t)&type metadata for RawBankConnectData.InitiatedConsent);
  sub_243956520();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_243956510();
  if (qword_268D96AD8 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v1, (uint64_t)qword_268D98E70);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v11, v1);
  sub_2439564F0();
  uint64_t v12 = v20[1];
  uint64_t v13 = sub_243956500();
  unint64_t v15 = v14;
  swift_release();
  if (v12)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
    swift_setDeallocating();
    return swift_arrayDestroy();
  }
  else
  {
    uint64_t v17 = sub_2439570B0();
    uint64_t v19 = v18;
    sub_2433807F0(v13, v15);
    *(void *)(inited + 32) = 0x746E65736E6F43;
    *(void *)(inited + 40) = 0xE700000000000000;
    *(void *)(inited + 48) = v17;
    *(void *)(inited + 56) = v19;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
    v21[0] = &unk_26F8AA658;
    sub_2433A6E34(inited);
    return v21[0];
  }
}

uint64_t sub_243739E08()
{
  return sub_243739E3C(type metadata accessor for BankConnectWebServiceAccountPaymentInfoRequest, (uint64_t)&unk_26F8AA6D8);
}

uint64_t sub_243739E3C(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t v37 = a2;
  uint64_t v36 = a1;
  uint64_t v3 = sub_2439564D0();
  uint64_t v41 = *(void *)(v3 - 8);
  uint64_t v42 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v40 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F2F0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24395EAE0;
  uint64_t v5 = (int *)type metadata accessor for BankConnectConsent();
  uint64_t v6 = v5[6];
  uint64_t v7 = (uint64_t *)(v2 + v5[5]);
  uint64_t v8 = *v7;
  uint64_t v38 = v7[1];
  uint64_t v39 = v8;
  uint64_t v9 = v2 + v6;
  uint64_t v10 = (int *)type metadata accessor for RawBankConnectData.Consent(0);
  unint64_t v46 = v10;
  uint64_t v47 = sub_243742950(&qword_268D97C30, (void (*)(uint64_t))type metadata accessor for RawBankConnectData.Consent);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v45);
  uint64_t v12 = (char *)boxed_opaque_existential_0 + v10[5];
  uint64_t v13 = sub_243957400();
  unint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
  v14(v12, v9, v13);
  v14((char *)boxed_opaque_existential_0 + v10[6], v2 + v5[7], v13);
  uint64_t v15 = v2;
  uint64_t v16 = *(void *)(v2 + v5[9]);
  uint64_t v17 = (uint64_t *)(v2 + v5[10]);
  uint64_t v18 = *v17;
  uint64_t v19 = v17[1];
  uint64_t v20 = v38;
  uint64_t *boxed_opaque_existential_0 = v39;
  boxed_opaque_existential_0[1] = v20;
  *(uint64_t *)((char *)boxed_opaque_existential_0 + v10[7]) = v16;
  uint64_t v21 = (uint64_t *)((char *)boxed_opaque_existential_0 + v10[8]);
  *uint64_t v21 = v18;
  v21[1] = v19;
  __swift_project_boxed_opaque_existential_1(v45, (uint64_t)v46);
  sub_243956520();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_243956510();
  if (qword_268D96AD8 != -1) {
    swift_once();
  }
  uint64_t v22 = v42;
  uint64_t v23 = __swift_project_value_buffer(v42, (uint64_t)qword_268D98E70);
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v40, v23, v22);
  sub_2439564F0();
  uint64_t v24 = v43;
  uint64_t v25 = sub_243956500();
  unint64_t v27 = v26;
  swift_release();
  if (v24)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v45);
    swift_setDeallocating();
    return swift_arrayDestroy();
  }
  else
  {
    uint64_t v29 = sub_2439570B0();
    uint64_t v31 = v30;
    sub_2433807F0(v25, v27);
    uint64_t v32 = (void *)inited;
    *(void *)(inited + 32) = 0x746E65736E6F43;
    v32[5] = 0xE700000000000000;
    v32[6] = v29;
    v32[7] = v31;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v45);
    uint64_t v48 = v32;
    uint64_t v33 = v36(0);
    uint64_t v34 = sub_2436358F0(v15 + *(int *)(v33 + 24));
    sub_2433A6E34((uint64_t)v34);
    v45[0] = v37;
    sub_2433A6E34((uint64_t)v48);
    return v45[0];
  }
}

uint64_t sub_24373A1DC()
{
  return sub_243739760((uint64_t)&unk_26F8AA718);
}

uint64_t sub_24373A230()
{
  uint64_t v1 = sub_2439564D0();
  uint64_t v37 = *(void *)(v1 - 8);
  uint64_t v38 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v36 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F2F0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24395EAE0;
  uint64_t v3 = (int *)type metadata accessor for BankConnectConsent();
  uint64_t v4 = v3[6];
  uint64_t v5 = (uint64_t *)(v0 + v3[5]);
  uint64_t v6 = *v5;
  uint64_t v34 = v5[1];
  uint64_t v35 = v6;
  uint64_t v7 = v0 + v4;
  uint64_t v8 = (int *)type metadata accessor for RawBankConnectData.Consent(0);
  uint64_t v42 = v8;
  uint64_t v43 = sub_243742950(&qword_268D97C30, (void (*)(uint64_t))type metadata accessor for RawBankConnectData.Consent);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v41);
  uint64_t v10 = (char *)boxed_opaque_existential_0 + v8[5];
  uint64_t v11 = sub_243957400();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  v12(v10, v7, v11);
  v12((char *)boxed_opaque_existential_0 + v8[6], v0 + v3[7], v11);
  uint64_t v13 = v0;
  uint64_t v14 = *(void *)(v0 + v3[9]);
  uint64_t v15 = (uint64_t *)(v0 + v3[10]);
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  uint64_t v18 = v34;
  uint64_t *boxed_opaque_existential_0 = v35;
  boxed_opaque_existential_0[1] = v18;
  *(uint64_t *)((char *)boxed_opaque_existential_0 + v8[7]) = v14;
  uint64_t v19 = (uint64_t *)((char *)boxed_opaque_existential_0 + v8[8]);
  *uint64_t v19 = v16;
  v19[1] = v17;
  __swift_project_boxed_opaque_existential_1(v41, (uint64_t)v42);
  sub_243956520();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_243956510();
  if (qword_268D96AD8 != -1) {
    swift_once();
  }
  uint64_t v20 = v38;
  uint64_t v21 = __swift_project_value_buffer(v38, (uint64_t)qword_268D98E70);
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v36, v21, v20);
  sub_2439564F0();
  uint64_t v22 = v39;
  uint64_t v23 = sub_243956500();
  unint64_t v25 = v24;
  swift_release();
  if (v22)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v41);
    swift_setDeallocating();
    return swift_arrayDestroy();
  }
  else
  {
    uint64_t v27 = sub_2439570B0();
    uint64_t v29 = v28;
    sub_2433807F0(v23, v25);
    uint64_t v30 = (void *)inited;
    *(void *)(inited + 32) = 0x746E65736E6F43;
    v30[5] = 0xE700000000000000;
    v30[6] = v27;
    v30[7] = v29;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v41);
    uint64_t v44 = v30;
    uint64_t v31 = type metadata accessor for BankConnectWebServiceAccountTransactionsRequest(0);
    uint64_t v32 = sub_2436358F0(v13 + *(int *)(v31 + 36));
    sub_2433A6E34((uint64_t)v32);
    v41[0] = (uint64_t)&unk_26F8AA798;
    sub_2433A6E34((uint64_t)v44);
    return v41[0];
  }
}

void *sub_24373A5BC()
{
  type metadata accessor for BankConnectWebServiceOfflineLabPermissionSaveRequest(0);
  uint64_t v0 = sub_243957420();
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F2F0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24395EAE0;
  strcpy((char *)(inited + 32), "Content-Type");
  *(unsigned char *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  *(void *)(inited + 48) = 0xD000000000000010;
  *(void *)(inited + 56) = 0x80000002439A1650;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_24377655C((void *)1, 2, 1, (void *)inited);
  long long v4[2] = 2;
  v4[8] = 0xD000000000000019;
  v4[9] = 0x80000002439A9BC0;
  v4[10] = v0;
  v4[11] = v2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_24373A70C()
{
  return sub_243739760((uint64_t)&unk_26F8AA818);
}

uint64_t sub_24373A760()
{
  sub_243956520();
  swift_allocObject();
  sub_243956510();
  sub_243569F10();
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_243956500();
  swift_release();
  swift_bridgeObjectRelease();
  if (v0)
  {
    type metadata accessor for FinanceNetworkError();
    sub_243742950((unint64_t *)&qword_268D9F240, (void (*)(uint64_t))type metadata accessor for FinanceNetworkError);
    swift_allocError();
    void *v2 = v0;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  return v1;
}

uint64_t sub_24373A898()
{
  uint64_t v2 = sub_2439564C0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (void *)((char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_243956520();
  swift_allocObject();
  sub_243956510();
  void *v5 = sub_243734920;
  v5[1] = 0;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F06168], v2);
  sub_2439564E0();
  uint64_t v6 = *(void *)(v0 + 64);
  unint64_t v7 = *(void *)(v0 + 72);
  v11[0] = v6;
  v11[1] = v7;
  sub_243403DD0(v6, v7);
  sub_243738154();
  uint64_t v8 = sub_243956500();
  sub_2433807F0(v6, v7);
  swift_release();
  if (v1)
  {
    type metadata accessor for FinanceNetworkError();
    sub_243742950((unint64_t *)&qword_268D9F240, (void (*)(uint64_t))type metadata accessor for FinanceNetworkError);
    swift_allocError();
    *uint64_t v9 = v1;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  return v8;
}

uint64_t sub_24373AAA0()
{
  uint64_t v2 = sub_2439564D0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_243956520();
  swift_allocObject();
  sub_243956510();
  if (qword_268D96AD8 != -1) {
    swift_once();
  }
  uint64_t v6 = __swift_project_value_buffer(v2, (uint64_t)qword_268D98E70);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  sub_2439564F0();
  unint64_t v7 = (void *)(v0 + *(int *)(type metadata accessor for BankConnectWebServiceAccountRequest(0) + 20));
  uint64_t v8 = v7[1];
  v12[0] = *v7;
  v12[1] = v8;
  v12[2] = 12630;
  v12[3] = 0xE200000000000000;
  sub_243742800();
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_243956500();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v1)
  {
    type metadata accessor for FinanceNetworkError();
    sub_243742950((unint64_t *)&qword_268D9F240, (void (*)(uint64_t))type metadata accessor for FinanceNetworkError);
    swift_allocError();
    *uint64_t v10 = v1;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  return v9;
}

uint64_t sub_24373ACE8()
{
  sub_243956520();
  swift_allocObject();
  sub_243956510();
  type metadata accessor for BankConnectWebServiceAccountsRequest(0);
  sub_243742854();
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_243956500();
  swift_release();
  swift_bridgeObjectRelease();
  if (v0)
  {
    type metadata accessor for FinanceNetworkError();
    sub_243742950((unint64_t *)&qword_268D9F240, (void (*)(uint64_t))type metadata accessor for FinanceNetworkError);
    swift_allocError();
    void *v2 = v0;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  return v1;
}

uint64_t sub_24373AE3C()
{
  return sub_24373AE94((void (*)(uint64_t *__return_ptr))BankConnectWebServicePassUnlinkRequest.jsonBody.getter);
}

uint64_t sub_24373AE68()
{
  return sub_24373AE94((void (*)(uint64_t *__return_ptr))BankConnectWebServicePassLinkingRequest.jsonBody.getter);
}

uint64_t sub_24373AE94(void (*a1)(uint64_t *__return_ptr))
{
  sub_243956520();
  swift_allocObject();
  sub_243956510();
  a1(&v6);
  sub_2437428FC();
  uint64_t v3 = sub_243956500();
  swift_release();
  swift_bridgeObjectRelease();
  if (v1)
  {
    type metadata accessor for FinanceNetworkError();
    sub_243742950((unint64_t *)&qword_268D9F240, (void (*)(uint64_t))type metadata accessor for FinanceNetworkError);
    swift_allocError();
    *uint64_t v4 = v1;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  return v3;
}

uint64_t sub_24373AFDC()
{
  sub_243956520();
  swift_allocObject();
  sub_243956510();
  sub_24358C198();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_243956500();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0)
  {
    type metadata accessor for FinanceNetworkError();
    sub_243742950((unint64_t *)&qword_268D9F240, (void (*)(uint64_t))type metadata accessor for FinanceNetworkError);
    swift_allocError();
    void *v1 = v0;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  return v3;
}

uint64_t sub_24373B200()
{
  sub_243956520();
  swift_allocObject();
  sub_243956510();
  uint64_t v2 = *(void *)(v0 + *(int *)(type metadata accessor for BankConnectWebServiceRevokeConsentRequest(0) + 20));
  if (v2 && *(void *)(v2 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C7148);
    sub_2433D9388((unint64_t *)&qword_268D9F370, &qword_26B0C7148);
    sub_243958230();
  }
  sub_2433D42F8();
  uint64_t v3 = sub_243956500();
  swift_release();
  swift_bridgeObjectRelease();
  if (v1)
  {
    type metadata accessor for FinanceNetworkError();
    sub_243742950((unint64_t *)&qword_268D9F240, (void (*)(uint64_t))type metadata accessor for FinanceNetworkError);
    swift_allocError();
    *uint64_t v4 = v1;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  return v3;
}

uint64_t sub_24373B3B4()
{
  uint64_t v0 = sub_243957490();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v31 = v0;
  uint64_t v32 = v1;
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = v3;
  uint64_t v4 = (int *)type metadata accessor for PrismWebServiceRegisterTransactionRequest.JSONBody(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_2439564D0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_243956520();
  swift_allocObject();
  uint64_t v34 = sub_243956510();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F06198], v7);
  sub_2439564F0();
  uint64_t v11 = (int *)type metadata accessor for PrismWebServiceRegisterTransactionRequest(0);
  uint64_t v12 = v41;
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v41 + v11[5], v0);
  uint64_t v13 = (uint64_t *)(v12 + v11[6]);
  uint64_t v14 = *v13;
  unint64_t v15 = v13[1];
  uint64_t v16 = v12 + v11[7];
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9A830);
  uint64_t v39 = v17;
  uint64_t v40 = sub_2433D9388((unint64_t *)&qword_268D9F350, &qword_268D9A830);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v38);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(boxed_opaque_existential_0, v16, v17);
  __swift_project_boxed_opaque_existential_1(v38, v39);
  sub_243403DD0(v14, v15);
  uint64_t v19 = v35;
  sub_2439568B0();
  uint64_t v21 = v36;
  uint64_t v20 = v37;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v38);
  uint64_t v22 = (uint64_t *)(v41 + v11[8]);
  uint64_t v23 = *v22;
  unint64_t v24 = v22[1];
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v6, v33, v31);
  *(void *)&v6[v4[5]] = &unk_26F8AA898;
  unint64_t v25 = (uint64_t *)&v6[v4[6]];
  uint64_t *v25 = v14;
  v25[1] = v15;
  unint64_t v26 = &v6[v4[7]];
  *(void *)unint64_t v26 = v21;
  *((void *)v26 + 1) = v20;
  uint64_t v27 = (uint64_t *)&v6[v4[8]];
  *uint64_t v27 = v23;
  v27[1] = v24;
  *(void *)&v6[v4[9]] = 1;
  sub_243403DD0(v23, v24);
  sub_243742950(&qword_268D9A850, (void (*)(uint64_t))type metadata accessor for PrismWebServiceRegisterTransactionRequest.JSONBody);
  uint64_t v28 = sub_243956500();
  sub_243742998((uint64_t)v6, type metadata accessor for PrismWebServiceRegisterTransactionRequest.JSONBody);
  swift_release();
  if (v19)
  {
    type metadata accessor for FinanceNetworkError();
    sub_243742950((unint64_t *)&qword_268D9F240, (void (*)(uint64_t))type metadata accessor for FinanceNetworkError);
    swift_allocError();
    *uint64_t v29 = v19;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  return v28;
}

uint64_t sub_24373B85C()
{
  uint64_t v1 = type metadata accessor for RawBankConnectData.CompleteConsentRequestBody(0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_243956520();
  swift_allocObject();
  sub_243956510();
  BankConnectWebServiceCompleteConsentRequest.jsonBody.getter((uint64_t)v3);
  sub_243742950(&qword_268D97C40, (void (*)(uint64_t))type metadata accessor for RawBankConnectData.CompleteConsentRequestBody);
  uint64_t v4 = sub_243956500();
  sub_243742998((uint64_t)v3, type metadata accessor for RawBankConnectData.CompleteConsentRequestBody);
  swift_release();
  if (v0)
  {
    type metadata accessor for FinanceNetworkError();
    sub_243742950((unint64_t *)&qword_268D9F240, (void (*)(uint64_t))type metadata accessor for FinanceNetworkError);
    swift_allocError();
    void *v5 = v0;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  return v4;
}

uint64_t sub_24373BA38()
{
  sub_243956520();
  swift_allocObject();
  sub_243956510();
  BankConnectWebServiceInitiateConsentRequest.jsonBody.getter((uint64_t)v3);
  sub_2433D4258();
  uint64_t v4 = sub_243956500();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0)
  {
    type metadata accessor for FinanceNetworkError();
    sub_243742950((unint64_t *)&qword_268D9F240, (void (*)(uint64_t))type metadata accessor for FinanceNetworkError);
    swift_allocError();
    void *v1 = v0;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  return v4;
}

uint64_t sub_24373BC08()
{
  uint64_t v2 = sub_2439564D0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_243956520();
  swift_allocObject();
  sub_243956510();
  if (qword_268D96AD8 != -1) {
    swift_once();
  }
  uint64_t v6 = __swift_project_value_buffer(v2, (uint64_t)qword_268D98E70);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  sub_2439564F0();
  uint64_t v7 = (void *)(v0 + *(int *)(type metadata accessor for BankConnectWebServiceAccountPaymentInfoRequest(0) + 20));
  uint64_t v8 = v7[1];
  v12[0] = *v7;
  v12[1] = v8;
  sub_2437427AC();
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_243956500();
  swift_release();
  swift_bridgeObjectRelease();
  if (v1)
  {
    type metadata accessor for FinanceNetworkError();
    sub_243742950((unint64_t *)&qword_268D9F240, (void (*)(uint64_t))type metadata accessor for FinanceNetworkError);
    swift_allocError();
    *uint64_t v10 = v1;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  return v9;
}

uint64_t sub_24373BE34()
{
  uint64_t v2 = type metadata accessor for RawBankConnectData.NotificationEventsRequestBody(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_2439564D0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_243956520();
  swift_allocObject();
  sub_243956510();
  if (qword_268D96AD8 != -1) {
    swift_once();
  }
  uint64_t v9 = __swift_project_value_buffer(v5, (uint64_t)qword_268D98E70);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  sub_2439564F0();
  uint64_t v10 = type metadata accessor for BankConnectWebServiceNotificationEventsRequest(0);
  uint64_t v11 = v0 + *(int *)(v10 + 20);
  uint64_t v12 = sub_243957400();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v4, v11, v12);
  uint64_t v13 = (uint64_t *)(v0 + *(int *)(v10 + 24));
  uint64_t v14 = *v13;
  uint64_t v15 = v13[1];
  uint64_t v16 = &v4[*(int *)(v2 + 20)];
  *(void *)uint64_t v16 = v14;
  *((void *)v16 + 1) = v15;
  sub_243742950(&qword_268D9E730, (void (*)(uint64_t))type metadata accessor for RawBankConnectData.NotificationEventsRequestBody);
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_243956500();
  sub_243742998((uint64_t)v4, type metadata accessor for RawBankConnectData.NotificationEventsRequestBody);
  swift_release();
  if (v1)
  {
    type metadata accessor for FinanceNetworkError();
    sub_243742950((unint64_t *)&qword_268D9F240, (void (*)(uint64_t))type metadata accessor for FinanceNetworkError);
    swift_allocError();
    *uint64_t v18 = v1;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  return v17;
}

uint64_t sub_24373C158(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_2439564D0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_243956520();
  swift_allocObject();
  sub_243956510();
  if (qword_268D96AD8 != -1) {
    swift_once();
  }
  uint64_t v9 = __swift_project_value_buffer(v5, (uint64_t)qword_268D98E70);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  sub_2439564F0();
  v13[0] = a1;
  v13[1] = a2;
  sub_2437428A8();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_243956500();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v2)
  {
    type metadata accessor for FinanceNetworkError();
    sub_243742950((unint64_t *)&qword_268D9F240, (void (*)(uint64_t))type metadata accessor for FinanceNetworkError);
    swift_allocError();
    *uint64_t v11 = v2;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  return v10;
}

uint64_t sub_24373C398()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v34 = (uint64_t)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (int *)type metadata accessor for RawBankConnectData.TransactionsRequestBody(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (uint64_t *)((char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_2439564D0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_243956520();
  swift_allocObject();
  uint64_t v11 = sub_243956510();
  if (qword_268D96AD8 != -1) {
    swift_once();
  }
  uint64_t v12 = __swift_project_value_buffer(v7, (uint64_t)qword_268D98E70);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v12, v7);
  sub_2439564F0();
  uint64_t v13 = (int *)type metadata accessor for BankConnectWebServiceAccountTransactionsRequest(0);
  uint64_t v14 = v13[6];
  uint64_t v15 = (uint64_t *)(v1 + v13[5]);
  uint64_t v16 = v15[1];
  uint64_t v32 = *v15;
  uint64_t v33 = v11;
  uint64_t v17 = v1 + v14;
  uint64_t v18 = (char *)v6 + v4[5];
  uint64_t v19 = sub_243957400();
  uint64_t v20 = *(void *)(v19 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v18, v17, v19);
  uint64_t v21 = v34;
  sub_2433C03A0(v1 + v13[7], v34);
  uint64_t v22 = (uint64_t *)(v1 + v13[8]);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  uint64_t v25 = (uint64_t)v6 + v4[6];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(v25, 1, 1, v19);
  unint64_t v26 = (void *)((char *)v6 + v4[7]);
  *unint64_t v26 = 0;
  v26[1] = 0;
  *uint64_t v6 = v32;
  v6[1] = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2433AA680(v21, v25);
  swift_bridgeObjectRelease();
  *unint64_t v26 = v24;
  v26[1] = v23;
  sub_243742950(&qword_268D9F2F8, (void (*)(uint64_t))type metadata accessor for RawBankConnectData.TransactionsRequestBody);
  uint64_t v27 = v35;
  uint64_t v28 = sub_243956500();
  sub_243742998((uint64_t)v6, type metadata accessor for RawBankConnectData.TransactionsRequestBody);
  swift_release();
  if (v27)
  {
    type metadata accessor for FinanceNetworkError();
    sub_243742950((unint64_t *)&qword_268D9F240, (void (*)(uint64_t))type metadata accessor for FinanceNetworkError);
    swift_allocError();
    *uint64_t v29 = v27;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  return v28;
}

uint64_t sub_24373C7AC(uint64_t a1, uint64_t a2)
{
  v6[5] = a2;
  v6[4] = a1;
  sub_243956520();
  swift_allocObject();
  sub_243956510();
  BankConnectWebServiceInstitutionsForPassesRequest.jsonBody.getter(v6);
  sub_24358C1F0();
  uint64_t v3 = sub_243956500();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v2)
  {
    type metadata accessor for FinanceNetworkError();
    sub_243742950((unint64_t *)&qword_268D9F240, (void (*)(uint64_t))type metadata accessor for FinanceNetworkError);
    swift_allocError();
    *uint64_t v4 = v2;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  return v3;
}

uint64_t sub_24373C924()
{
  sub_243956520();
  swift_allocObject();
  sub_243956510();
  type metadata accessor for BankConnectWebServiceRegisterToNotificationEventsRequest(0);
  sub_2436E7948();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_243956500();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0)
  {
    type metadata accessor for FinanceNetworkError();
    sub_243742950((unint64_t *)&qword_268D9F240, (void (*)(uint64_t))type metadata accessor for FinanceNetworkError);
    swift_allocError();
    void *v2 = v0;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  return v1;
}

uint64_t sub_24373CA98()
{
  sub_243956520();
  swift_allocObject();
  sub_243956510();
  sub_2436E79A0();
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_243956500();
  swift_release();
  swift_bridgeObjectRelease();
  if (v0)
  {
    type metadata accessor for FinanceNetworkError();
    sub_243742950((unint64_t *)&qword_268D9F240, (void (*)(uint64_t))type metadata accessor for FinanceNetworkError);
    swift_allocError();
    void *v2 = v0;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  return v1;
}

uint64_t sub_24373CBDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_243957010();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v9 = v2[3];
  v15[2] = v2[2];
  v15[3] = v9;
  v15[4] = v2[4];
  long long v10 = v2[1];
  v15[0] = *v2;
  v15[1] = v10;
  uint64_t v11 = OrderWebServiceRegisterRequest.pathComponents.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  uint64_t v12 = v11[2];
  if (v12)
  {
    uint64_t v13 = v11 + 5;
    do
    {
      swift_bridgeObjectRetain();
      sub_243956F10();
      swift_bridgeObjectRelease();
      v13 += 2;
      --v12;
    }
    while (v12);
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(a2, v8, v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24373CD48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_243957010();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v9 = v2[1];
  v15[0] = *v2;
  v15[1] = v9;
  long long v10 = v2[3];
  v15[2] = v2[2];
  v15[3] = v10;
  uint64_t v11 = OrderWebServiceUnregisterRequest.pathComponents.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  uint64_t v12 = v11[2];
  if (v12)
  {
    uint64_t v13 = v11 + 5;
    do
    {
      swift_bridgeObjectRetain();
      sub_243956F10();
      swift_bridgeObjectRelease();
      v13 += 2;
      --v12;
    }
    while (v12);
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(a2, v8, v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24373CEAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v26 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v24 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v25 = (char *)&v20 - v8;
  uint64_t v9 = sub_243956690();
  uint64_t v21 = *(void *)(v9 - 8);
  uint64_t v22 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v27 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_243957010();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v23(v14, a1, v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_243956F10();
  sub_243956F10();
  swift_bridgeObjectRetain();
  sub_243956F10();
  swift_bridgeObjectRelease();
  sub_243956F10();
  swift_bridgeObjectRetain();
  sub_243956F10();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  if (*(void *)(v3 + 40))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268D9F330);
    sub_243956620();
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_24395EAE0;
    sub_243956610();
  }
  else
  {
    uint64_t v15 = MEMORY[0x263F8EE78];
  }
  uint64_t v16 = v27;
  if (*(void *)(v15 + 16))
  {
    sub_243956680();
    sub_243956650();
    uint64_t v17 = (uint64_t)v24;
    v23(v24, (uint64_t)v14, v11);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
    uint64_t v18 = v25;
    sub_243956660();
    sub_2433C1A80(v17);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v18, 1, v11);
    if (result == 1)
    {
      __break(1u);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v21 + 8))(v16, v22);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(v26, v18, v11);
    }
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v26, v14, v11);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24373D318@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v31 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v29 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v30 = (char *)&v25 - v8;
  uint64_t v9 = sub_243956690();
  uint64_t v25 = *(void *)(v9 - 8);
  uint64_t v26 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v28 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_243957010();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v25 - v16;
  uint64_t v32 = *v3;
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v27(v15, a1, v11);
  uint64_t v18 = *(void *)(v32 + 16);
  if (v18)
  {
    uint64_t v19 = swift_bridgeObjectRetain() + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_243956F10();
      swift_bridgeObjectRelease();
      v19 += 16;
      --v18;
    }
    while (v18);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v20(v17, v15, v11);
  sub_24350B9CC((uint64_t)&v32);
  if (!*(void *)(v3[1] + 16))
  {
    uint64_t v23 = v17;
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v20)(v31, v23, v11);
  }
  swift_bridgeObjectRetain();
  uint64_t v21 = v28;
  sub_243956680();
  sub_243956650();
  uint64_t v22 = (uint64_t)v29;
  v27(v29, (uint64_t)v17, v11);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(v22, 0, 1, v11);
  uint64_t v23 = v30;
  sub_243956660();
  sub_2433C1A80(v22);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v23, 1, v11);
  if (result != 1)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v21, v26);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v20)(v31, v23, v11);
  }
  __break(1u);
  return result;
}

uint64_t sub_24373D688@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v24 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v21 - v8;
  uint64_t v10 = sub_243956690();
  uint64_t v21 = *(void *)(v10 - 8);
  uint64_t v22 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_243957010();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v17(v16, a1, v13);
  swift_bridgeObjectRetain();
  sub_243956F10();
  sub_243956F10();
  swift_bridgeObjectRetain();
  sub_243956F10();
  swift_bridgeObjectRelease_n();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268D9F330);
  sub_243956620();
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_24395EAE0;
  sub_243956610();
  if (*(void *)(v18 + 16))
  {
    uint64_t v19 = v24;
    sub_243956680();
    sub_243956650();
    v17(v7, (uint64_t)v16, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v7, 0, 1, v13);
    sub_243956660();
    sub_2433C1A80((uint64_t)v7);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13);
    if (result == 1)
    {
      __break(1u);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v21 + 8))(v12, v22);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(v19, v9, v13);
    }
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v24, v16, v13);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24373DA70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_243957010();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v3 + *(int *)(type metadata accessor for BankConnectWebServiceOfflineLabItemsRequest(0) + 28));
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = v10 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_243956F10();
      swift_bridgeObjectRelease();
      v12 += 16;
      --v11;
    }
    while (v11);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a2, v9, v6);
  return swift_bridgeObjectRelease();
}

uint64_t OrderWebServiceClient.baseURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC10FinanceKit21OrderWebServiceClient_baseURL;
  uint64_t v4 = sub_243957010();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t OrderWebServiceClient.__allocating_init(baseURL:configuration:walletPreferences:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  swift_allocObject();
  uint64_t v8 = sub_243741618(a1, (uint64_t)a2, a3, a4);

  return v8;
}

uint64_t OrderWebServiceClient.init(baseURL:configuration:walletPreferences:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_243741618(a1, (uint64_t)a2, a3, a4);

  return v5;
}

uint64_t sub_24373DCEC(uint64_t a1)
{
  v2[23] = a1;
  v2[24] = v1;
  uint64_t v3 = sub_243958A90();
  v2[25] = v3;
  v2[26] = *(void *)(v3 - 8);
  v2[27] = swift_task_alloc();
  v2[28] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
  v2[29] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24373DE18, 0, 0);
}

uint64_t sub_24373DE18()
{
  if (((*(uint64_t (**)(void))(*(void *)(v0[24]
                                         + OBJC_IVAR____TtC10FinanceKit21OrderWebServiceClient_walletPreferences
                                         + 8)
                             + 8))() & 1) != 0)
  {
    uint64_t v1 = v0[29];
    sub_243956380();
    uint64_t v2 = sub_243957010();
    uint64_t v3 = *(void *)(v2 - 8);
    int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
    uint64_t v5 = v0[29];
    if (v4 == 1)
    {
      sub_2433C1A80(v0[29]);
    }
    else
    {
      sub_243956FB0();
      uint64_t v7 = v6;
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v5, v2);
      if (v7)
      {
        uint64_t v8 = self;
        uint64_t v9 = (void *)sub_2439582A0();
        swift_bridgeObjectRelease();
        objc_msgSend(v8, sel_setAllowsAnyHTTPSCertificate_forHost_, 1, v9);
      }
    }
  }
  uint64_t v10 = (void *)swift_task_alloc();
  v0[30] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_24373E024;
  uint64_t v11 = v0[28];
  uint64_t v12 = v0[23];
  return MEMORY[0x270EF1EC8](v11, v12, 0);
}

uint64_t sub_24373E024(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 248) = a1;
  *(void *)(v3 + 256) = v1;
  swift_task_dealloc();
  if (v1) {
    int v4 = sub_24373F0F0;
  }
  else {
    int v4 = sub_24373E164;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_24373E164()
{
  uint64_t v1 = *(void *)(v0 + 216);
  uint64_t v2 = *(void *)(v0 + 224);
  uint64_t v3 = *(void *)(v0 + 200);
  uint64_t v4 = *(void *)(v0 + 208);
  uint64_t v5 = (uint64_t)objc_msgSend(*(id *)(v0 + 248), sel_expectedContentLength);
  if (v5 >= 6291456) {
    uint64_t v5 = 6291456;
  }
  *(void *)(v0 + 152) = sub_24374242C(v5);
  *(void *)(v0 + 160) = v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, v3);
  *(void *)(v0 + 128) = sub_243958A70();
  *(void *)(v0 + 136) = v7;
  *(void *)(v0 + 144) = v8;
  return MEMORY[0x270FA2498](sub_24373E258, 0, 0);
}

uint64_t sub_24373E258()
{
  uint64_t v1 = *(unsigned char **)(v0 + 136);
  if (v1 == *(unsigned char **)(v0 + 144))
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 264) = v2;
    void *v2 = v0;
    v2[1] = sub_24373E380;
    return MEMORY[0x270EEF008]();
  }
  else
  {
    *(unsigned char *)(v0 + 84) = *v1;
    *(void *)(v0 + 136) = v1 + 1;
    return MEMORY[0x270FA2498](sub_24373E4D0, 0, 0);
  }
}

uint64_t sub_24373E380(__int16 a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 272) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_24373E8F4;
  }
  else
  {
    *(_WORD *)(v4 + 82) = a1;
    uint64_t v5 = sub_24373EC1C;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_24373E4D0()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = (id *)(v0 + 168);
  char v3 = *(unsigned char *)(v0 + 84);
  switch(*(void *)(v0 + 160) >> 62)
  {
    case 1:
      if (__OFSUB__(HIDWORD(v1), v1))
      {
        __break(1u);
LABEL_20:
        __break(1u);
      }
      if (HIDWORD(v1) - (int)v1 < 6291456) {
        goto LABEL_7;
      }
      goto LABEL_10;
    case 2:
      uint64_t v6 = v1 + 16;
      uint64_t v4 = *(void *)(v1 + 16);
      uint64_t v5 = *(void *)(v6 + 8);
      BOOL v7 = __OFSUB__(v5, v4);
      uint64_t v8 = v5 - v4;
      if (v7) {
        goto LABEL_20;
      }
      if (v8 < 6291456)
      {
LABEL_7:
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F398);
        *(void *)(v0 + 112) = v9;
        *(void *)(v0 + 120) = sub_2433D9388(&qword_268D9F3A0, &qword_268D9F398);
        *(unsigned char *)(v0 + 88) = v3;
        *(unsigned char *)(v0 + 81) = *(unsigned char *)__swift_project_boxed_opaque_existential_1((void *)(v0 + 88), v9);
        sub_243957080();
        __swift_destroy_boxed_opaque_existential_0(v0 + 88);
        return MEMORY[0x270FA2498](sub_24373E258, 0, 0);
      }
LABEL_10:
      uint64_t v10 = *(void **)(v0 + 248);
      uint64_t v11 = *(void *)(v0 + 224);
      uint64_t v13 = *(void *)(v0 + 200);
      uint64_t v12 = *(void *)(v0 + 208);
      uint64_t v14 = (void *)sub_243958A80();
      objc_msgSend(v14, sel_cancel);

      sub_2437393C0();
      uint64_t v15 = (void *)swift_allocError();
      *(_OWORD *)uint64_t v16 = 0u;
      *(_OWORD *)(v16 + 16) = 0u;
      *(_OWORD *)(v16 + 32) = 0u;
      *(_OWORD *)(v16 + 48) = 0u;
      *(unsigned char *)(v16 + 64) = 2;
      swift_willThrow();

      swift_unknownObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
      sub_2433807F0(*(void *)(v0 + 152), *(void *)(v0 + 160));
      *(void *)(v0 + 168) = v15;
      id v17 = v15;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C7A50);
      if (!swift_dynamicCast()) {
        goto LABEL_14;
      }
      unint64_t v18 = *(void *)(v0 + 16);
      uint64_t v19 = *(void *)(v0 + 24);
      uint64_t v20 = *(void *)(v0 + 32);
      uint64_t v21 = *(void *)(v0 + 40);
      uint64_t v22 = *(void *)(v0 + 48);
      uint64_t v23 = *(void *)(v0 + 56);
      uint64_t v25 = *(void *)(v0 + 64);
      uint64_t v24 = *(void *)(v0 + 72);
      if (*(unsigned char *)(v0 + 80) == 2 && !(v19 | v18 | v20 | v21 | v22 | v23 | v25 | v24))
      {
        uint64_t v28 = v15;
        uint64_t v29 = *(void *)(v0 + 72);

        swift_allocError();
        *(void *)uint64_t v30 = 0;
        *(void *)(v30 + 8) = v19;
        *(void *)(v30 + 16) = v20;
        *(void *)(v30 + 24) = v21;
        *(void *)(v30 + 32) = v22;
        *(void *)(v30 + 40) = v23;
        *(void *)(v30 + 48) = v25;
        *(void *)(v30 + 56) = v29;
        *(unsigned char *)(v30 + 64) = 2;
        swift_willThrow();
      }
      else
      {
        sub_243742C54((void *)v18, v19, v20, v21, v22, v23, v25, v24, *(unsigned char *)(v0 + 80));
LABEL_14:

        type metadata accessor for FinanceNetworkError();
        sub_243742950((unint64_t *)&qword_268D9F240, (void (*)(uint64_t))type metadata accessor for FinanceNetworkError);
        swift_allocError();
        *uint64_t v26 = v15;
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
      }
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
      return v27();
    default:
      goto LABEL_7;
  }
}

uint64_t sub_24373E8F4()
{
  *(void *)(v0 + 176) = *(void *)(v0 + 272);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C7A50);
  swift_willThrowTypedImpl();
  return MEMORY[0x270FA2498](sub_24373E9AC, 0, 0);
}

uint64_t sub_24373E9AC()
{
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v2 = *(void *)(v0 + 200);
  uint64_t v3 = *(void *)(v0 + 208);

  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  sub_2433807F0(*(void *)(v0 + 152), *(void *)(v0 + 160));
  uint64_t v4 = *(void **)(v0 + 272);
  *(void *)(v0 + 168) = v4;
  uint64_t v5 = (id *)(v0 + 168);
  id v6 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C7A50);
  if (!swift_dynamicCast()) {
    goto LABEL_5;
  }
  unint64_t v7 = *(void *)(v0 + 16);
  uint64_t v8 = *(void *)(v0 + 24);
  uint64_t v9 = *(void *)(v0 + 32);
  uint64_t v10 = *(void *)(v0 + 40);
  uint64_t v11 = *(void *)(v0 + 48);
  uint64_t v12 = *(void *)(v0 + 56);
  uint64_t v14 = *(void *)(v0 + 64);
  uint64_t v13 = *(void *)(v0 + 72);
  if (*(unsigned char *)(v0 + 80) != 2 || v8 | v7 | v9 | v10 | v11 | v12 | v14 | v13)
  {
    sub_243742C54((void *)v7, v8, v9, v10, v11, v12, v14, v13, *(unsigned char *)(v0 + 80));
LABEL_5:

    type metadata accessor for FinanceNetworkError();
    sub_243742950((unint64_t *)&qword_268D9F240, (void (*)(uint64_t))type metadata accessor for FinanceNetworkError);
    swift_allocError();
    *uint64_t v15 = v4;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    goto LABEL_6;
  }
  unint64_t v18 = v4;
  uint64_t v19 = *(void *)(v0 + 72);

  sub_2437393C0();
  swift_allocError();
  *(void *)uint64_t v20 = 0;
  *(void *)(v20 + 8) = v8;
  *(void *)(v20 + 16) = v9;
  *(void *)(v20 + 24) = v10;
  *(void *)(v20 + 32) = v11;
  *(void *)(v20 + 40) = v12;
  *(void *)(v20 + 48) = v14;
  *(void *)(v20 + 56) = v19;
  *(unsigned char *)(v20 + 64) = 2;
  swift_willThrow();

LABEL_6:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

uint64_t sub_24373EC1C()
{
  __int16 v1 = *(_WORD *)(v0 + 82);
  if ((v1 & 0x100) != 0)
  {
    uint64_t v4 = *(void *)(v0 + 224);
    uint64_t v5 = *(void *)(v0 + 208);
    uint64_t v6 = *(void *)(v0 + 200);
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v8 = *(void *)(v0 + 152);
    uint64_t v7 = *(void *)(v0 + 160);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 8);
    uint64_t v10 = *(void *)(v0 + 248);
    return v9(v8, v7, v10);
  }
  else
  {
    uint64_t v2 = (id *)(v0 + 168);
    uint64_t v3 = *(void *)(v0 + 152);
    switch(*(void *)(v0 + 160) >> 62)
    {
      case 1:
        if (__OFSUB__(HIDWORD(v3), v3))
        {
          __break(1u);
LABEL_24:
          __break(1u);
        }
        if (HIDWORD(v3) - (int)v3 < 6291456) {
          goto LABEL_11;
        }
        goto LABEL_14;
      case 2:
        uint64_t v14 = v3 + 16;
        uint64_t v12 = *(void *)(v3 + 16);
        uint64_t v13 = *(void *)(v14 + 8);
        BOOL v15 = __OFSUB__(v13, v12);
        uint64_t v16 = v13 - v12;
        if (v15) {
          goto LABEL_24;
        }
        if (v16 < 6291456)
        {
LABEL_11:
          uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F398);
          *(void *)(v0 + 112) = v17;
          *(void *)(v0 + 120) = sub_2433D9388(&qword_268D9F3A0, &qword_268D9F398);
          *(unsigned char *)(v0 + 88) = v1;
          *(unsigned char *)(v0 + 81) = *(unsigned char *)__swift_project_boxed_opaque_existential_1((void *)(v0 + 88), v17);
          sub_243957080();
          __swift_destroy_boxed_opaque_existential_0(v0 + 88);
          return MEMORY[0x270FA2498](sub_24373E258, 0, 0);
        }
LABEL_14:
        unint64_t v18 = *(void **)(v0 + 248);
        uint64_t v19 = *(void *)(v0 + 224);
        uint64_t v21 = *(void *)(v0 + 200);
        uint64_t v20 = *(void *)(v0 + 208);
        uint64_t v22 = (void *)sub_243958A80();
        objc_msgSend(v22, sel_cancel);

        sub_2437393C0();
        uint64_t v23 = (void *)swift_allocError();
        *(_OWORD *)uint64_t v24 = 0u;
        *(_OWORD *)(v24 + 16) = 0u;
        *(_OWORD *)(v24 + 32) = 0u;
        *(_OWORD *)(v24 + 48) = 0u;
        *(unsigned char *)(v24 + 64) = 2;
        swift_willThrow();

        swift_unknownObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
        sub_2433807F0(*(void *)(v0 + 152), *(void *)(v0 + 160));
        *(void *)(v0 + 168) = v23;
        id v25 = v23;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C7A50);
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_18;
        }
        unint64_t v26 = *(void *)(v0 + 16);
        uint64_t v27 = *(void *)(v0 + 24);
        uint64_t v28 = *(void *)(v0 + 32);
        uint64_t v29 = *(void *)(v0 + 40);
        uint64_t v30 = *(void *)(v0 + 48);
        uint64_t v31 = *(void *)(v0 + 56);
        uint64_t v33 = *(void *)(v0 + 64);
        uint64_t v32 = *(void *)(v0 + 72);
        if (*(unsigned char *)(v0 + 80) == 2 && !(v27 | v26 | v28 | v29 | v30 | v31 | v33 | v32))
        {
          uint64_t v36 = v23;
          uint64_t v37 = *(void *)(v0 + 72);

          swift_allocError();
          *(void *)uint64_t v38 = 0;
          *(void *)(v38 + 8) = v27;
          *(void *)(v38 + 16) = v28;
          *(void *)(v38 + 24) = v29;
          *(void *)(v38 + 32) = v30;
          *(void *)(v38 + 40) = v31;
          *(void *)(v38 + 48) = v33;
          *(void *)(v38 + 56) = v37;
          *(unsigned char *)(v38 + 64) = 2;
          swift_willThrow();
        }
        else
        {
          sub_243742C54((void *)v26, v27, v28, v29, v30, v31, v33, v32, *(unsigned char *)(v0 + 80));
LABEL_18:

          type metadata accessor for FinanceNetworkError();
          sub_243742950((unint64_t *)&qword_268D9F240, (void (*)(uint64_t))type metadata accessor for FinanceNetworkError);
          swift_allocError();
          void *v34 = v23;
          swift_storeEnumTagMultiPayload();
          swift_willThrow();
        }
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v35 = *(uint64_t (**)(void))(v0 + 8);
        uint64_t result = v35();
        break;
      default:
        goto LABEL_11;
    }
  }
  return result;
}

uint64_t sub_24373F0F0()
{
  __int16 v1 = *(void **)(v0 + 256);
  *(void *)(v0 + 168) = v1;
  uint64_t v2 = (id *)(v0 + 168);
  id v3 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C7A50);
  if (!swift_dynamicCast()) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = *(void *)(v0 + 24);
  uint64_t v6 = *(void *)(v0 + 32);
  uint64_t v7 = *(void *)(v0 + 40);
  uint64_t v8 = *(void *)(v0 + 48);
  uint64_t v9 = *(void *)(v0 + 56);
  uint64_t v11 = *(void *)(v0 + 64);
  uint64_t v10 = *(void *)(v0 + 72);
  if (*(unsigned char *)(v0 + 80) != 2 || v5 | v4 | v6 | v7 | v8 | v9 | v11 | v10)
  {
    sub_243742C54((void *)v4, v5, v6, v7, v8, v9, v11, v10, *(unsigned char *)(v0 + 80));
LABEL_5:

    type metadata accessor for FinanceNetworkError();
    sub_243742950((unint64_t *)&qword_268D9F240, (void (*)(uint64_t))type metadata accessor for FinanceNetworkError);
    swift_allocError();
    *uint64_t v12 = v1;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    goto LABEL_6;
  }
  BOOL v15 = v1;
  uint64_t v16 = *(void *)(v0 + 72);

  sub_2437393C0();
  swift_allocError();
  *(void *)uint64_t v17 = 0;
  *(void *)(v17 + 8) = v5;
  *(void *)(v17 + 16) = v6;
  *(void *)(v17 + 24) = v7;
  *(void *)(v17 + 32) = v8;
  *(void *)(v17 + 40) = v9;
  *(void *)(v17 + 48) = v11;
  *(void *)(v17 + 56) = v16;
  *(unsigned char *)(v17 + 64) = 2;
  swift_willThrow();

LABEL_6:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_24373F328(uint64_t a1, _OWORD *a2)
{
  *(void *)(v3 + 96) = a1;
  *(void *)(v3 + 104) = v2;
  sub_243957010();
  *(void *)(v3 + 112) = swift_task_alloc();
  uint64_t v5 = sub_2439563C0();
  *(void *)(v3 + 120) = v5;
  *(void *)(v3 + 128) = *(void *)(v5 - 8);
  *(void *)(v3 + 136) = swift_task_alloc();
  long long v6 = a2[3];
  *(_OWORD *)(v3 + 48) = a2[2];
  *(_OWORD *)(v3 + 64) = v6;
  *(_OWORD *)(v3 + 80) = a2[4];
  long long v7 = a2[1];
  *(_OWORD *)(v3 + 16) = *a2;
  *(_OWORD *)(v3 + 32) = v7;
  return MEMORY[0x270FA2498](sub_24373F430, 0, 0);
}

uint64_t sub_24373F430()
{
  sub_24373CBDC(v0[13] + OBJC_IVAR____TtC10FinanceKit21OrderWebServiceClient_baseURL, v0[14]);
  sub_243956370();
  sub_243956300();
  sub_2439562F0();
  __int16 v1 = sub_2437394F0();
  _sSD10FinanceKitSSRszSSRs_rlEySDyS2SGSayAA15HTTPHeaderFieldVGcfC_0((uint64_t)v1);
  sub_243956350();
  sub_24373A898();
  sub_2439563B0();
  sub_243956360();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[18] = v2;
  void *v2 = v0;
  v2[1] = sub_24373F5D0;
  uint64_t v3 = v0[17];
  return sub_24373DCEC(v3);
}

uint64_t sub_24373F5D0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v8 = (void *)*v4;
  v8[19] = v3;
  swift_task_dealloc();
  uint64_t v9 = v8[17];
  uint64_t v10 = v8[16];
  uint64_t v11 = v8[15];
  if (v3)
  {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    uint64_t v12 = sub_24373F80C;
  }
  else
  {
    v8[20] = a3;
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    sub_2433807F0(a1, a2);
    uint64_t v12 = sub_24373F774;
  }
  return MEMORY[0x270FA2498](v12, 0, 0);
}

uint64_t sub_24373F774()
{
  __int16 v1 = *(void **)(v0 + 160);
  static OrderWebServiceRegisterResponse.parse(_:)(v1, *(unsigned char **)(v0 + 96));

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_24373F80C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  __int16 v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24373F87C(uint64_t a1, _OWORD *a2)
{
  *(void *)(v3 + 80) = a1;
  *(void *)(v3 + 88) = v2;
  uint64_t v5 = sub_2439563C0();
  *(void *)(v3 + 96) = v5;
  *(void *)(v3 + 104) = *(void *)(v5 - 8);
  *(void *)(v3 + 112) = swift_task_alloc();
  long long v6 = a2[1];
  *(_OWORD *)(v3 + 16) = *a2;
  *(_OWORD *)(v3 + 32) = v6;
  long long v7 = a2[3];
  *(_OWORD *)(v3 + 48) = a2[2];
  *(_OWORD *)(v3 + 64) = v7;
  return MEMORY[0x270FA2498](sub_24373F950, 0, 0);
}

uint64_t sub_24373F950()
{
  sub_243563350(v0[11] + OBJC_IVAR____TtC10FinanceKit21OrderWebServiceClient_baseURL);
  __int16 v1 = (void *)swift_task_alloc();
  v0[15] = v1;
  void *v1 = v0;
  v1[1] = sub_24373FA54;
  uint64_t v2 = v0[14];
  return sub_24373DCEC(v2);
}

uint64_t sub_24373FA54(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v8 = (void *)*v4;
  v8[16] = v3;
  swift_task_dealloc();
  uint64_t v9 = v8[14];
  uint64_t v10 = v8[13];
  uint64_t v11 = v8[12];
  if (v3)
  {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    uint64_t v12 = sub_24373FC84;
  }
  else
  {
    v8[17] = a3;
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    sub_2433807F0(a1, a2);
    uint64_t v12 = sub_24373FBF8;
  }
  return MEMORY[0x270FA2498](v12, 0, 0);
}

uint64_t sub_24373FBF8()
{
  __int16 v1 = *(void **)(v0 + 136);
  static OrderWebServiceUnregisterResponse.parse(_:)(v1, *(unsigned char **)(v0 + 80));

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_24373FC84()
{
  swift_task_dealloc();
  __int16 v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24373FCE8(uint64_t a1, _OWORD *a2)
{
  *(void *)(v3 + 120) = a1;
  *(void *)(v3 + 128) = v2;
  uint64_t v5 = sub_2439563C0();
  *(void *)(v3 + 136) = v5;
  *(void *)(v3 + 144) = *(void *)(v5 - 8);
  *(void *)(v3 + 152) = swift_task_alloc();
  long long v6 = a2[1];
  *(_OWORD *)(v3 + 16) = *a2;
  *(_OWORD *)(v3 + 32) = v6;
  long long v7 = a2[3];
  *(_OWORD *)(v3 + 48) = a2[2];
  *(_OWORD *)(v3 + 64) = v7;
  return MEMORY[0x270FA2498](sub_24373FDBC, 0, 0);
}

uint64_t sub_24373FDBC()
{
  sub_2435634DC(v0[16] + OBJC_IVAR____TtC10FinanceKit21OrderWebServiceClient_baseURL, v0[19]);
  __int16 v1 = (void *)swift_task_alloc();
  v0[20] = v1;
  void *v1 = v0;
  v1[1] = sub_24373FEC0;
  uint64_t v2 = v0[19];
  return sub_24373DCEC(v2);
}

uint64_t sub_24373FEC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(void **)v4;
  uint64_t v9 = *(void *)(*(void *)v4 + 152);
  uint64_t v10 = *(void *)(*(void *)v4 + 144);
  uint64_t v11 = *(void *)(*(void *)v4 + 136);
  *(void *)(*(void *)v4 + 168) = v3;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  if (v3)
  {
    uint64_t v12 = sub_243740184;
  }
  else
  {
    v8[22] = a3;
    v8[23] = a2;
    v8[24] = a1;
    uint64_t v12 = sub_243740060;
  }
  return MEMORY[0x270FA2498](v12, 0, 0);
}

uint64_t sub_243740060()
{
  uint64_t v13 = v0;
  unint64_t v2 = *(void *)(v0 + 184);
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v3 = *(void *)(v0 + 168);
  uint64_t v4 = *(void **)(v0 + 176);
  uint64_t v6 = *(void *)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t v7 = *(void *)(v0 + 40);
  BOOL v8 = *(void *)(v0 + 72) != 0;
  v11[0] = *(void *)(v0 + 16);
  v11[1] = v6;
  void v11[2] = v5;
  void v11[3] = v7;
  BOOL v12 = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_243737A94(v1, v2, v4, v11, (uint64_t **)(v0 + 80));

  sub_2433807F0(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v3) {
    sub_2433A857C((long long *)(v0 + 80), *(void *)(v0 + 120));
  }
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_243740184()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2437401E8(uint64_t a1, _OWORD *a2)
{
  *(void *)(v3 + 64) = a1;
  *(void *)(v3 + 72) = v2;
  sub_243957010();
  *(void *)(v3 + 80) = swift_task_alloc();
  uint64_t v5 = sub_2439563C0();
  *(void *)(v3 + 88) = v5;
  *(void *)(v3 + 96) = *(void *)(v5 - 8);
  *(void *)(v3 + 104) = swift_task_alloc();
  long long v6 = a2[1];
  *(_OWORD *)(v3 + 16) = *a2;
  *(_OWORD *)(v3 + 32) = v6;
  *(_OWORD *)(v3 + 48) = a2[2];
  return MEMORY[0x270FA2498](sub_2437402E8, 0, 0);
}

uint64_t sub_2437402E8()
{
  sub_24373CEAC(v0[9] + OBJC_IVAR____TtC10FinanceKit21OrderWebServiceClient_baseURL, v0[10]);
  sub_243956370();
  sub_243956300();
  sub_2439562F0();
  _sSD10FinanceKitSSRszSSRs_rlEySDyS2SGSayAA15HTTPHeaderFieldVGcfC_0(MEMORY[0x263F8EE78]);
  sub_243956350();
  sub_2439563B0();
  sub_243956360();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[14] = v1;
  void *v1 = v0;
  v1[1] = sub_243740400;
  uint64_t v2 = v0[13];
  return sub_24373DCEC(v2);
}

uint64_t sub_243740400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(void **)v4;
  uint64_t v9 = *(void *)(*(void *)v4 + 104);
  uint64_t v10 = *(void *)(*(void *)v4 + 96);
  uint64_t v11 = *(void *)(*(void *)v4 + 88);
  *(void *)(*(void *)v4 + 120) = v3;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  if (v3)
  {
    BOOL v12 = sub_243740658;
  }
  else
  {
    v8[16] = a3;
    v8[17] = a2;
    v8[18] = a1;
    BOOL v12 = sub_2437405A0;
  }
  return MEMORY[0x270FA2498](v12, 0, 0);
}

uint64_t sub_2437405A0()
{
  unint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v3 = *(void **)(v0 + 128);
  static OrderWebServiceFetchChangesResponse.parse(data:urlResponse:)(v3, *(void **)(v0 + 64));

  sub_2433807F0(v2, v1);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_243740658()
{
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2437406C8(uint64_t *a1)
{
  v2[2] = v1;
  uint64_t v4 = sub_2439563C0();
  v2[3] = v4;
  v2[4] = *(void *)(v4 - 8);
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = *a1;
  v2[5] = v5;
  v2[6] = v6;
  return MEMORY[0x270FA2498](sub_243740790, 0, 0);
}

uint64_t sub_243740790()
{
  sub_2435636FC(*(void *)(v0 + 16) + OBJC_IVAR____TtC10FinanceKit21OrderWebServiceClient_baseURL, *(void **)(v0 + 48), *(void *)(v0 + 40));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  void *v1 = v0;
  v1[1] = sub_243740890;
  uint64_t v2 = *(void *)(v0 + 40);
  return sub_24373DCEC(v2);
}

uint64_t sub_243740890(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)*v4;
  uint64_t v8 = (void *)*v4;
  v8[8] = a3;
  v8[9] = v3;
  swift_task_dealloc();
  (*(void (**)(void, void))(v7[4] + 8))(v7[5], v7[3]);
  if (v3)
  {
    uint64_t v9 = sub_243740C20;
  }
  else
  {
    sub_2433807F0(a1, a2);
    uint64_t v9 = sub_243740A14;
  }
  return MEMORY[0x270FA2498](v9, 0, 0);
}

uint64_t sub_243740A14()
{
  self;
  uint64_t v1 = swift_dynamicCastObjCClass();
  uint64_t v2 = *(void **)(v0 + 64);
  if (v1)
  {
    uint64_t v3 = (void *)v1;
    id v4 = v2;
    id v5 = objc_msgSend(v3, sel_statusCode);
    uint64_t v6 = *(void **)(v0 + 64);
    if (v5 == (id)200)
    {

      swift_task_dealloc();
      uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_7;
    }
    id v10 = v5;
    type metadata accessor for FinanceNetworkError();
    sub_243742950((unint64_t *)&qword_268D9F240, (void (*)(uint64_t))type metadata accessor for FinanceNetworkError);
    swift_allocError();
    *uint64_t v11 = v10;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  else
  {
    type metadata accessor for FinanceNetworkError();
    sub_243742950((unint64_t *)&qword_268D9F240, (void (*)(uint64_t))type metadata accessor for FinanceNetworkError);
    swift_allocError();
    uint64_t v9 = v8;
    uint64_t *v8 = sub_24337C218(0, (unint64_t *)&unk_268D9B410);
    v9[4] = sub_24337C218(0, (unint64_t *)&unk_268D9F250);
    v9[1] = (uint64_t)v2;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
LABEL_7:
  return v7();
}

uint64_t sub_243740C20()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_243740C84(uint64_t a1, int *a2)
{
  *(void *)(v3 + 16) = v2;
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  id v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v5;
  void *v5 = v3;
  v5[1] = sub_243740D6C;
  return v7(a1);
}

uint64_t sub_243740D6C()
{
  *(void *)(*(void *)v1 + 32) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_243740F54;
  }
  else {
    uint64_t v2 = sub_243740E80;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_243740E80()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  void *v1 = v0;
  v1[1] = sub_243566A00;
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = MEMORY[0x263F8EE60] + 8;
  return MEMORY[0x270FA2318](v1, 0, 0, 0xD000000000000015, 0x80000002439AA340, sub_2437417E8, v2, v3);
}

uint64_t sub_243740F54()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  void *v1 = v0;
  v1[1] = sub_243566BE8;
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = MEMORY[0x263F8EE60] + 8;
  return MEMORY[0x270FA2318](v1, 0, 0, 0xD000000000000015, 0x80000002439AA340, sub_2437417E8, v2, v3);
}

void sub_243741028(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268D9B400);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = *(void **)(a2 + OBJC_IVAR____TtC10FinanceKit21OrderWebServiceClient_sessionDelegateQueue);
  uint64_t v8 = *(void **)(a2 + OBJC_IVAR____TtC10FinanceKit21OrderWebServiceClient_session);
  uint64_t v9 = *(void **)(a2 + OBJC_IVAR____TtC10FinanceKit21OrderWebServiceClient_sessionDelegate);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v10 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v9;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v11 + v10, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  *(void *)(v11 + ((v6 + v10 + 7) & 0xFFFFFFFFFFFFFFF8)) = v8;
  aBlock[4] = sub_243742B24;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2433FAFC4;
  aBlock[3] = &block_descriptor_20;
  BOOL v12 = _Block_copy(aBlock);
  id v13 = v8;
  id v14 = v9;
  swift_release();
  objc_msgSend(v7, sel_addOperationWithBlock_, v12);
  _Block_release(v12);
}

id sub_24374121C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268D9B400);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  if (*(unsigned char *)(a1
                + OBJC_IVAR____TtC10FinanceKitP33_BBE0122A3E1307DE2D47D62BE8CA3C6615SessionDelegate_sessionDidBecomeInvalid) == 1)
    return (id)sub_243958720();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v6);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11 + v10, (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  BOOL v12 = (uint64_t (**)())(a1
                       + OBJC_IVAR____TtC10FinanceKitP33_BBE0122A3E1307DE2D47D62BE8CA3C6615SessionDelegate_sessionDidBecomeInvalidHandler);
  uint64_t v13 = *(void *)(a1
                  + OBJC_IVAR____TtC10FinanceKitP33_BBE0122A3E1307DE2D47D62BE8CA3C6615SessionDelegate_sessionDidBecomeInvalidHandler);
  *BOOL v12 = sub_24356A180;
  v12[1] = (uint64_t (*)())v11;
  sub_243379EA8(v13);
  return objc_msgSend(a3, sel_invalidateAndCancel);
}

uint64_t OrderWebServiceClient.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC10FinanceKit21OrderWebServiceClient_baseURL;
  uint64_t v2 = sub_243957010();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return v0;
}

uint64_t OrderWebServiceClient.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC10FinanceKit21OrderWebServiceClient_baseURL;
  uint64_t v2 = sub_243957010();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

id sub_2437415CC()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s10FinanceKit15SessionDelegateCMa_0();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_243741618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = v4 + OBJC_IVAR____TtC10FinanceKit21OrderWebServiceClient_baseURL;
  uint64_t v10 = sub_243957010();
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v9, a1, v10);
  BOOL v12 = (void *)(v4 + OBJC_IVAR____TtC10FinanceKit21OrderWebServiceClient_walletPreferences);
  *BOOL v12 = a3;
  v12[1] = a4;
  id v13 = objc_msgSend(objc_allocWithZone((Class)_s10FinanceKit15SessionDelegateCMa_0()), sel_init);
  uint64_t v14 = OBJC_IVAR____TtC10FinanceKit21OrderWebServiceClient_sessionDelegate;
  *(void *)(v4 + OBJC_IVAR____TtC10FinanceKit21OrderWebServiceClient_sessionDelegate) = v13;
  id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A48]), sel_init);
  uint64_t v16 = OBJC_IVAR____TtC10FinanceKit21OrderWebServiceClient_sessionDelegateQueue;
  *(void *)(v4 + OBJC_IVAR____TtC10FinanceKit21OrderWebServiceClient_sessionDelegateQueue) = v15;
  id v17 = v15;
  uint64_t v18 = (void *)sub_2439582A0();
  objc_msgSend(v17, sel_setName_, v18);

  uint64_t v19 = *(void **)(v4 + v16);
  objc_msgSend(v19, sel_setMaxConcurrentOperationCount_, 1);
  id v20 = objc_msgSend(self, sel_sessionWithConfiguration_delegate_delegateQueue_, a2, *(void *)(v4 + v14), v19);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
  *(void *)(v4 + OBJC_IVAR____TtC10FinanceKit21OrderWebServiceClient_session) = v20;
  return v4;
}

void sub_2437417E8(uint64_t a1)
{
  sub_243741028(a1, v1);
}

void destroy for OrderWebServiceError(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 64);
  if (v1 >= 2) {
    unsigned int v1 = *(_DWORD *)a1 + 2;
  }
  if (v1 == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else if (!v1)
  {
    objc_super v2 = *(void **)a1;
  }
}

uint64_t initializeWithCopy for OrderWebServiceError(uint64_t a1, uint64_t *a2)
{
  unsigned int v3 = *((unsigned __int8 *)a2 + 64);
  if (v3 >= 2) {
    unsigned int v3 = *(_DWORD *)a2 + 2;
  }
  if (v3 == 1)
  {
    uint64_t v6 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v6;
    uint64_t v7 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v7;
    uint64_t v8 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v8;
    uint64_t v9 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v9;
    *(unsigned char *)(a1 + 64) = 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else if (v3)
  {
    long long v10 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v10;
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    long long v11 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v11;
  }
  else
  {
    uint64_t v4 = *a2;
    id v5 = (id)*a2;
    *(void *)a1 = v4;
    *(unsigned char *)(a1 + 64) = 0;
  }
  return a1;
}

uint64_t assignWithCopy for OrderWebServiceError(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 64);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else if (!v4)
    {
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 64);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(unsigned char *)(a1 + 64) = 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else if (v5)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      long long v8 = *(_OWORD *)(a2 + 16);
      long long v9 = *(_OWORD *)(a2 + 32);
      long long v10 = *(_OWORD *)(a2 + 48);
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *(_OWORD *)(a1 + 32) = v9;
      *(_OWORD *)(a1 + 48) = v10;
      *(_OWORD *)(a1 + 16) = v8;
    }
    else
    {
      uint64_t v6 = *(void **)a2;
      id v7 = v6;
      *(void *)a1 = v6;
      *(unsigned char *)(a1 + 64) = 0;
    }
  }
  return a1;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for OrderWebServiceError(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 64);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else if (!v4)
    {
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 64);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      long long v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      long long v7 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v7;
      *(unsigned char *)(a1 + 64) = 1;
    }
    else if (v5)
    {
      long long v8 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v8;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      long long v9 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v9;
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 64) = 0;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for OrderWebServiceError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 65)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 64);
  if (v3 >= 3) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for OrderWebServiceError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 64) = 0;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 65) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 64) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_243741C1C(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 64);
  if (result >= 2) {
    return (*(_DWORD *)a1 + 2);
  }
  return result;
}

uint64_t sub_243741C38(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 64) = a2;
  return result;
}

ValueMetadata *type metadata accessor for OrderWebServiceError()
{
  return &type metadata for OrderWebServiceError;
}

uint64_t sub_243741C70()
{
  return type metadata accessor for OrderWebServiceClient();
}

uint64_t type metadata accessor for OrderWebServiceClient()
{
  uint64_t result = qword_268D9F288;
  if (!qword_268D9F288) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_243741CC4()
{
  uint64_t result = sub_243957010();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for OrderWebServiceClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for OrderWebServiceClient);
}

uint64_t dispatch thunk of OrderWebServiceClient.__allocating_init(baseURL:configuration:walletPreferences:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of OrderWebServiceClient.register(with:)(uint64_t a1, uint64_t a2)
{
  long long v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 136) + **(int **)(*(void *)v2 + 136));
  long long v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *long long v6 = v3;
  v6[1] = sub_2433A9E8C;
  return v8(a1, a2);
}

uint64_t dispatch thunk of OrderWebServiceClient.unregister(with:)(uint64_t a1, uint64_t a2)
{
  long long v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 144) + **(int **)(*(void *)v2 + 144));
  long long v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *long long v6 = v3;
  v6[1] = sub_24337AF78;
  return v8(a1, a2);
}

uint64_t dispatch thunk of OrderWebServiceClient.fetch(with:)(uint64_t a1, uint64_t a2)
{
  long long v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 152) + **(int **)(*(void *)v2 + 152));
  long long v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *long long v6 = v3;
  v6[1] = sub_2433A9E8C;
  return v8(a1, a2);
}

uint64_t dispatch thunk of OrderWebServiceClient.fetchChanges(with:)(uint64_t a1, uint64_t a2)
{
  long long v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 160) + **(int **)(*(void *)v2 + 160));
  long long v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *long long v6 = v3;
  v6[1] = sub_2433A9E8C;
  return v8(a1, a2);
}

uint64_t dispatch thunk of OrderWebServiceClient.log(with:)(uint64_t a1)
{
  long long v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 168) + **(int **)(*(void *)v1 + 168));
  unsigned int v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *unsigned int v4 = v2;
  v4[1] = sub_2433A9E8C;
  return v6(a1);
}

uint64_t dispatch thunk of OrderWebServiceClient.invalidateAndCancelAfter<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v4 + 176)
                                                                   + **(int **)(*(void *)v4 + 176));
  long long v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *long long v10 = v5;
  v10[1] = sub_2433A9E8C;
  return v12(a1, a2, a3, a4);
}

uint64_t _s10FinanceKit15SessionDelegateCMa_0()
{
  return self;
}

uint64_t sub_24374242C(uint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    if (result < 15)
    {
      return 0;
    }
    else
    {
      sub_243956710();
      swift_allocObject();
      sub_243956700();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_243957070();
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = 0;
        *(void *)(result + 24) = 0;
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_2437424C8(void *a1)
{
  uint64_t v2 = v1;
  if (a1)
  {
    id v4 = a1;
    if (qword_26B0C7290 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_243957B10();
    __swift_project_value_buffer(v5, (uint64_t)qword_26B0C7278);
    id v6 = a1;
    id v7 = a1;
    long long v8 = sub_243957AF0();
    os_log_type_t v9 = sub_243958AF0();
    if (os_log_type_enabled(v8, v9))
    {
      long long v10 = (uint8_t *)swift_slowAlloc();
      long long v11 = (void *)swift_slowAlloc();
      *(_DWORD *)long long v10 = 138412290;
      id v12 = a1;
      uint64_t v21 = _swift_stdlib_bridgeErrorToNSError();
      sub_2439590C0();
      *long long v11 = v21;

      _os_log_impl(&dword_243363000, v8, v9, "Order web service client session did become invalid with error: %@", v10, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CAB0);
      swift_arrayDestroy();
      MEMORY[0x245680100](v11, -1, -1);
      MEMORY[0x245680100](v10, -1, -1);

      goto LABEL_12;
    }
  }
  else
  {
    if (qword_26B0C7290 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_243957B10();
    __swift_project_value_buffer(v13, (uint64_t)qword_26B0C7278);
    long long v8 = sub_243957AF0();
    os_log_type_t v14 = sub_243958AD0();
    if (os_log_type_enabled(v8, v14))
    {
      id v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v15 = 0;
      _os_log_impl(&dword_243363000, v8, v14, "Order web service client session did become invalid", v15, 2u);
      MEMORY[0x245680100](v15, -1, -1);
    }
  }

LABEL_12:
  *(unsigned char *)(v2
           + OBJC_IVAR____TtC10FinanceKitP33_BBE0122A3E1307DE2D47D62BE8CA3C6615SessionDelegate_sessionDidBecomeInvalid) = 1;
  uint64_t v16 = (uint64_t *)(v2
                  + OBJC_IVAR____TtC10FinanceKitP33_BBE0122A3E1307DE2D47D62BE8CA3C6615SessionDelegate_sessionDidBecomeInvalidHandler);
  id v17 = *(void (**)(uint64_t))(v2
                                       + OBJC_IVAR____TtC10FinanceKitP33_BBE0122A3E1307DE2D47D62BE8CA3C6615SessionDelegate_sessionDidBecomeInvalidHandler);
  if (v17)
  {
    uint64_t v18 = swift_retain();
    v17(v18);
    sub_243379EA8((uint64_t)v17);
    uint64_t v19 = *v16;
  }
  else
  {
    uint64_t v19 = 0;
  }
  *uint64_t v16 = 0;
  v16[1] = 0;
  return sub_243379EA8(v19);
}

unint64_t sub_2437427AC()
{
  unint64_t result = qword_268D9F2E8;
  if (!qword_268D9F2E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F2E8);
  }
  return result;
}

unint64_t sub_243742800()
{
  unint64_t result = qword_268D9F300;
  if (!qword_268D9F300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F300);
  }
  return result;
}

unint64_t sub_243742854()
{
  unint64_t result = qword_268D9F308;
  if (!qword_268D9F308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F308);
  }
  return result;
}

unint64_t sub_2437428A8()
{
  unint64_t result = qword_268D9F310;
  if (!qword_268D9F310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F310);
  }
  return result;
}

unint64_t sub_2437428FC()
{
  unint64_t result = qword_268D9F318;
  if (!qword_268D9F318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F318);
  }
  return result;
}

uint64_t sub_243742950(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_243742998(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2437429F8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_243742A38()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268D9B400);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6 + 8, v5);
}

id sub_243742B24()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268D9B400) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void **)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_24374121C(v3, v0 + v2, v4);
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

uint64_t sub_243742BC0()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268D9B400);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

void sub_243742C54(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if (a9 == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else if (!a9)
  {
  }
}

uint64_t static JSONEncoder.makeBankConnectJSONEncoder()()
{
  uint64_t v0 = sub_2439564D0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_243956520();
  swift_allocObject();
  uint64_t v4 = sub_243956510();
  if (qword_268D96AD8 != -1) {
    swift_once();
  }
  uint64_t v5 = __swift_project_value_buffer(v0, (uint64_t)qword_268D98E70);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  sub_2439564F0();
  return v4;
}

uint64_t static JSONDecoder.makeBankConnectJSONDecoder()()
{
  uint64_t v0 = sub_243956420();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_243956460();
  swift_allocObject();
  uint64_t v4 = sub_243956450();
  if (qword_268D96AC8 != -1) {
    swift_once();
  }
  uint64_t v5 = __swift_project_value_buffer(v0, (uint64_t)qword_268D98E50);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  sub_243956430();
  return v4;
}

uint64_t sub_243742F40(unint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for InternalTransaction(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    if (!v8) {
      return v9;
    }
    uint64_t v18 = MEMORY[0x263F8EE78];
    uint64_t result = sub_2434CCC58(0, v8 & ~(v8 >> 63), 0);
    if (v8 < 0) {
      break;
    }
    unint64_t v17 = v2;
    uint64_t v11 = 0;
    uint64_t v9 = v18;
    unint64_t v2 = a1 & 0xC000000000000001;
    while (v8 != v11)
    {
      if (v2) {
        id v12 = (id)MEMORY[0x24567E5D0](v11, a1);
      }
      else {
        id v12 = *(id *)(a1 + 8 * v11 + 32);
      }
      uint64_t v13 = v12;
      uint64_t v14 = (uint64_t)v12 + OBJC_IVAR___XPCInternalTransaction_value;
      swift_beginAccess();
      sub_2435118A0(v14, (uint64_t)v7);

      uint64_t v18 = v9;
      unint64_t v16 = *(void *)(v9 + 16);
      unint64_t v15 = *(void *)(v9 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_2434CCC58(v15 > 1, v16 + 1, 1);
        uint64_t v9 = v18;
      }
      ++v11;
      *(void *)(v9 + 16) = v16 + 1;
      sub_243511960((uint64_t)v7, v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v16);
      if (v8 == v11) {
        return v9;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_243959550();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_2437432CC(int a1, void *aBlock, uint64_t a3)
{
  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  type metadata accessor for InternalTransaction.XPC(0);
  v3[5] = sub_243958650();
  swift_retain();
  return MEMORY[0x270FA2498](sub_243743368, 0, 0);
}

uint64_t sub_243743368()
{
  unint64_t v1 = (void *)v0[3];
  uint64_t v2 = sub_243742F40(v0[5]);
  v0[6] = v2;
  uint64_t v3 = v1[5];
  uint64_t v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v3);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 + 8) + **(int **)(v4 + 8));
  uint64_t v5 = (void *)swift_task_alloc();
  v0[7] = v5;
  void *v5 = v0;
  v5[1] = sub_243743494;
  return v7(v2, v3, v4);
}

uint64_t sub_243743494(uint64_t a1)
{
  *(void *)(*(void *)v1 + 64) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_2437435B4, 0, 0);
}

uint64_t sub_2437435B4()
{
  uint64_t v1 = (void (**)(void, void))v0[4];
  sub_24357DC98(v0[8]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  type metadata accessor for Transaction.Insight.XPC(0);
  uint64_t v2 = (void *)sub_243958180();
  swift_bridgeObjectRelease();
  ((void (**)(void, void *))v1)[2](v1, v2);

  _Block_release(v1);
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_243743808(const void *a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a2;
  *(void *)(v2 + 24) = _Block_copy(a1);
  swift_retain();
  return MEMORY[0x270FA2498](sub_243743884, 0, 0);
}

uint64_t sub_243743884()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = v1[5];
  uint64_t v3 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v2);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v3 + 16) + **(int **)(v3 + 16));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_243743988;
  return v6(v2, v3);
}

uint64_t sub_243743988(uint64_t a1)
{
  *(void *)(*(void *)v1 + 40) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_243743A88, 0, 0);
}

uint64_t sub_243743A88()
{
  uint64_t v1 = (void (**)(void, void))v0[3];
  sub_24357DC98(v0[5]);
  swift_bridgeObjectRelease();
  swift_release();
  type metadata accessor for Transaction.Insight.XPC(0);
  uint64_t v2 = (void *)sub_243958180();
  swift_bridgeObjectRelease();
  ((void (**)(void, void *))v1)[2](v1, v2);

  _Block_release(v1);
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_243743B5C()
{
  _Block_release(*(const void **)(v0 + 16));
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_243743B9C()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_24337AF78;
  uint64_t v5 = (uint64_t (*)(const void *, uint64_t))((char *)&dword_268D9F3A8 + dword_268D9F3A8);
  return v5(v2, v3);
}

uint64_t sub_243743C50()
{
  _Block_release(*(const void **)(v0 + 24));
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_243743C98()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  void *v5 = v1;
  v5[1] = sub_2433A9E8C;
  uint64_t v6 = (uint64_t (*)(int, void *, uint64_t))((char *)&dword_268D9F3B8 + dword_268D9F3B8);
  return v6(v2, v3, v4);
}

uint64_t sub_243743D54(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  if (*a1 == *a2) {
    return 0;
  }
  if (sub_2439587C0()) {
    return 1;
  }
  return (v3 < v2) & sub_2439587D0();
}

uint64_t sub_243743DCC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = *a1;
  if (*a2 == *a1)
  {
    char v4 = 1;
  }
  else if (sub_2439587C0())
  {
    char v4 = 0;
  }
  else
  {
    char v4 = (v3 >= v2) | sub_2439587D0() ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_243743E4C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  if (*a1 == *a2)
  {
    char v4 = 1;
  }
  else if (sub_2439587C0())
  {
    char v4 = 0;
  }
  else
  {
    char v4 = (v3 >= v2) | sub_2439587D0() ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_243743ECC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = *a1;
  if (*a2 == *a1) {
    return 0;
  }
  if (sub_2439587C0()) {
    return 1;
  }
  return (v3 < v2) & sub_2439587D0();
}

uint64_t sub_243743F44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for TaskPriorityQueue.PendingTask(0);
  uint64_t v25 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v24 - v8;
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  id v12 = (char *)&v24 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v24 - v13;
  unint64_t v15 = *(void **)v1;
  unint64_t v16 = *(void *)(*(void *)v1 + 16);
  if (v16 >= 3)
  {
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_243938448(v15);
      unint64_t v15 = (void *)result;
    }
    uint64_t v18 = v15[2];
    if (v18)
    {
      uint64_t v19 = v18 - 1;
      uint64_t v20 = (uint64_t)v15 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
      sub_243748C74(v20 + *(void *)(v25 + 72) * (v18 - 1), (uint64_t)v12, type metadata accessor for TaskPriorityQueue.PendingTask);
      v15[2] = v19;
      sub_243748C74((uint64_t)v12, (uint64_t)v14, type metadata accessor for TaskPriorityQueue.PendingTask);
      sub_2437496DC(v20, v15[2], (uint64_t)v14);
      *(void *)uint64_t v1 = v15;
      sub_243748CDC((uint64_t)v14, a1, type metadata accessor for TaskPriorityQueue.PendingTask);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(a1, 0, 1, v3);
      return sub_243748C14((uint64_t)v14, type metadata accessor for TaskPriorityQueue.PendingTask);
    }
    __break(1u);
    goto LABEL_16;
  }
  if (v16)
  {
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_243938448(v15);
      unint64_t v15 = (void *)result;
    }
    uint64_t v21 = v15[2];
    if (!v21)
    {
LABEL_16:
      __break(1u);
      return result;
    }
    uint64_t v22 = v21 - 1;
    sub_243748C74((uint64_t)v15+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(void *)(v25 + 72) * (v21 - 1), (uint64_t)v6, type metadata accessor for TaskPriorityQueue.PendingTask);
    v15[2] = v22;
    *(void *)uint64_t v1 = v15;
    sub_243748C74((uint64_t)v6, (uint64_t)v9, type metadata accessor for TaskPriorityQueue.PendingTask);
    sub_243748C74((uint64_t)v9, a1, type metadata accessor for TaskPriorityQueue.PendingTask);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(a1, 0, 1, v3);
  }
  else
  {
    uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56);
    return v23(a1, 1, 1, v3);
  }
}

uint64_t sub_24374425C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v38 = a2;
  uint64_t v39 = a3;
  uint64_t v41 = a1;
  int64_t v5 = type metadata accessor for TaskPriorityQueue.PendingTask(0);
  uint64_t v40 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (uint64_t *)((char *)&v35 - v9);
  uint64_t v11 = type metadata accessor for TaskPriorityQueue.State(0);
  MEMORY[0x270FA5388](v11 - 8);
  unint64_t v13 = (unint64_t)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for TaskPriorityQueue.CurrentTask(0);
  MEMORY[0x270FA5388](v36);
  unint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_243748CDC(v3, v13, type metadata accessor for TaskPriorityQueue.State);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F3D8);
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v17 + 48))(v13, 1, v16) == 1) {
    goto LABEL_17;
  }
  sub_243748C14(v3, type metadata accessor for TaskPriorityQueue.State);
  uint64_t v18 = (uint64_t *)(v13 + *(int *)(v16 + 48));
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  sub_243748C74(v13, (uint64_t)v15, type metadata accessor for TaskPriorityQueue.CurrentTask);
  uint64_t v42 = v19;
  unint64_t v21 = v20 + 1;
  if (__OFADD__(v20, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v37 = v20 + 1;
    uint64_t v22 = (char *)v10 + *(int *)(v5 + 20);
    uint64_t v23 = sub_243958800();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v22, v41, v23);
    *uint64_t v10 = v20;
    uint64_t v24 = (void *)((char *)v10 + *(int *)(v5 + 24));
    uint64_t v25 = v39;
    void *v24 = v38;
    v24[1] = v25;
    sub_243748CDC((uint64_t)v10, (uint64_t)v8, type metadata accessor for TaskPriorityQueue.PendingTask);
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v42 = v19;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_2434CD398(0, *(void *)(v19 + 16) + 1, 1);
      uint64_t v19 = v42;
    }
    uint64_t v20 = v40;
    unint64_t v13 = *(void *)(v19 + 16);
    unint64_t v21 = *(void *)(v19 + 24);
    int64_t v5 = v13 + 1;
    if (v13 < v21 >> 1) {
      goto LABEL_6;
    }
  }
  sub_2434CD398(v21 > 1, v5, 1);
  uint64_t v19 = v42;
LABEL_6:
  *(void *)(v19 + 16) = v5;
  uint64_t v27 = v19 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
  sub_243748C74((uint64_t)v8, v27 + *(void *)(v20 + 72) * v13, type metadata accessor for TaskPriorityQueue.PendingTask);
  unint64_t v28 = *(void *)(v19 + 16);
  if (v28)
  {
    sub_243748D44(v28 - 1, __clz(v28) ^ 0x3F, v27, v28);
    sub_243748C14((uint64_t)v10, type metadata accessor for TaskPriorityQueue.PendingTask);
    if (sub_2439587C0())
    {
      uint64_t v29 = &v15[*(int *)(v36 + 20)];
      uint64_t v30 = *(void (**)(uint64_t))v29;
      if (v29[16])
      {
        uint64_t v31 = *((void *)v29 + 1);
        *(void *)uint64_t v29 = 0;
        *((void *)v29 + 1) = 0;
        v29[16] = 1;
        uint64_t v32 = (void *)(v4 + *(int *)(v16 + 48));
        sub_243748CDC((uint64_t)v15, v4, type metadata accessor for TaskPriorityQueue.CurrentTask);
        *uint64_t v32 = v37;
        v32[1] = v19;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v4, 0, 1, v16);
        if (v30)
        {
          sub_243379E98((uint64_t)v30);
          v30(1);
          sub_2437478D4((uint64_t)v30, v31, 1);
          sub_2437478D4((uint64_t)v30, v31, 1);
        }
        return sub_243748C14((uint64_t)v15, type metadata accessor for TaskPriorityQueue.CurrentTask);
      }
      *(void *)uint64_t v29 = *(void *)v29 & 1 | 0x100;
      *((void *)v29 + 1) = 0;
      v29[16] = 0;
    }
    uint64_t v33 = (void *)(v4 + *(int *)(v16 + 48));
    sub_243748CDC((uint64_t)v15, v4, type metadata accessor for TaskPriorityQueue.CurrentTask);
    *uint64_t v33 = v37;
    v33[1] = v19;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v4, 0, 1, v16);
    return sub_243748C14((uint64_t)v15, type metadata accessor for TaskPriorityQueue.CurrentTask);
  }
  __break(1u);
LABEL_17:
  uint64_t result = sub_243748C14(v13, type metadata accessor for TaskPriorityQueue.State);
  __break(1u);
  return result;
}

uint64_t sub_243744770()
{
  uint64_t v1 = type metadata accessor for TaskPriorityQueue.State(0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (uint64_t)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TaskPriorityQueue.CurrentTask(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_243748CDC(v0, v3, type metadata accessor for TaskPriorityQueue.State);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F3D8);
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v3, 1, v7) != 1)
  {
    sub_243748C14(v0, type metadata accessor for TaskPriorityQueue.State);
    uint64_t v9 = (uint64_t *)(v3 + *(int *)(v7 + 48));
    uint64_t v11 = *v9;
    uint64_t v10 = v9[1];
    sub_243748C74(v3, (uint64_t)v6, type metadata accessor for TaskPriorityQueue.CurrentTask);
    uint64_t v12 = &v6[*(int *)(v4 + 20)];
    uint64_t v3 = *(void *)v12;
    if (v12[16])
    {
      uint64_t v13 = *((void *)v12 + 1);
      *(void *)uint64_t v12 = 0;
      *((void *)v12 + 1) = 0;
      v12[16] = 1;
      uint64_t v14 = (void *)(v0 + *(int *)(v7 + 48));
      sub_243748CDC((uint64_t)v6, v0, type metadata accessor for TaskPriorityQueue.CurrentTask);
      *uint64_t v14 = v11;
      v14[1] = v10;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v0, 0, 1, v7);
      if (v3)
      {
        sub_243379E98(v3);
        ((void (*)(void))v3)(0);
        sub_2437478D4(v3, v13, 1);
        sub_2437478D4(v3, v13, 1);
      }
      return sub_243748C14((uint64_t)v6, type metadata accessor for TaskPriorityQueue.CurrentTask);
    }
    if ((v3 & 1) == 0)
    {
      *(void *)uint64_t v12 = *(void *)v12 & 0x100 | 1;
      *((void *)v12 + 1) = 0;
      v12[16] = 0;
      unint64_t v15 = (void *)(v0 + *(int *)(v7 + 48));
      sub_243748CDC((uint64_t)v6, v0, type metadata accessor for TaskPriorityQueue.CurrentTask);
      *unint64_t v15 = v11;
      v15[1] = v10;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v0, 0, 1, v7);
      return sub_243748C14((uint64_t)v6, type metadata accessor for TaskPriorityQueue.CurrentTask);
    }
    __break(1u);
  }
  uint64_t result = sub_243748C14(v3, type metadata accessor for TaskPriorityQueue.State);
  __break(1u);
  return result;
}

uint64_t sub_243744A60()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F448);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = type metadata accessor for TaskPriorityQueue.PendingTask(0);
  uint64_t v5 = *(void *)(v63 - 8);
  MEMORY[0x270FA5388](v63);
  uint64_t v59 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F450);
  uint64_t v7 = MEMORY[0x270FA5388](v62);
  uint64_t v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v58 = (char *)&v51 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v51 - v12;
  uint64_t v14 = type metadata accessor for TaskPriorityQueue.State(0);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for TaskPriorityQueue.CurrentTask(0);
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v60 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  unint64_t v21 = (char *)&v51 - v20;
  sub_243748CDC(v1, (uint64_t)v16, type metadata accessor for TaskPriorityQueue.State);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F3D8);
  uint64_t v61 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v16, 1, v22) == 1) {
    goto LABEL_9;
  }
  uint64_t v23 = &v16[*(int *)(v22 + 48)];
  uint64_t v24 = *((void *)v23 + 1);
  uint64_t v57 = *(void *)v23;
  sub_243748C74((uint64_t)v16, (uint64_t)v21, type metadata accessor for TaskPriorityQueue.CurrentTask);
  uint64_t v64 = v24;
  uint64_t v25 = &v21[*(int *)(v17 + 20)];
  if (v25[16] != 1 || *(void *)v25)
  {
    __break(1u);
LABEL_9:
    uint64_t result = sub_243748C14((uint64_t)v16, type metadata accessor for TaskPriorityQueue.State);
    __break(1u);
    return result;
  }
  uint64_t v26 = v17;
  sub_243748C14(v1, type metadata accessor for TaskPriorityQueue.State);
  sub_243743F44((uint64_t)v4);
  uint64_t v27 = v63;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v4, 1, v63) == 1)
  {
    sub_24337C1BC((uint64_t)v4, &qword_268D9F448);
    swift_release();
    sub_243748C14((uint64_t)v21, type metadata accessor for TaskPriorityQueue.CurrentTask);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 56))(v1, 1, 1, v22);
  }
  else
  {
    uint64_t v29 = *(int *)(v62 + 48);
    uint64_t v56 = v21;
    uint64_t v53 = &v13[v29];
    uint64_t v30 = v59;
    sub_243748C74((uint64_t)v4, (uint64_t)v59, type metadata accessor for TaskPriorityQueue.PendingTask);
    unint64_t v51 = &v30[*(int *)(v27 + 20)];
    uint64_t v31 = v27;
    uint64_t v32 = sub_243958800();
    uint64_t v33 = *(void *)(v32 - 8);
    uint64_t v52 = v26;
    uint64_t v34 = v33;
    uint64_t v54 = v1;
    uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v33 + 32);
    uint64_t v36 = v58;
    v35(v58, v51, v32);
    uint64_t v37 = (uint64_t *)&v30[*(int *)(v31 + 24)];
    uint64_t v39 = v37[1];
    uint64_t v63 = *v37;
    uint64_t v38 = v63;
    uint64_t v55 = v13;
    v35(v13, v36, v32);
    uint64_t v40 = v53;
    *(void *)uint64_t v53 = v38;
    *((void *)v40 + 1) = v39;
    uint64_t v59 = *(char **)(v34 + 16);
    ((void (*)(char *, char *, uint64_t))v59)(v9, v13, v32);
    uint64_t v41 = (uint64_t)v60;
    v35(v60, v9, v32);
    uint64_t v42 = v41 + *(int *)(v52 + 20);
    *(void *)uint64_t v42 = 0;
    *(void *)(v42 + 8) = 0;
    *(unsigned char *)(v42 + 16) = 0;
    uint64_t v43 = v54;
    uint64_t v44 = (void *)(v54 + *(int *)(v22 + 48));
    sub_243748CDC(v41, v54, type metadata accessor for TaskPriorityQueue.CurrentTask);
    uint64_t v45 = v64;
    *uint64_t v44 = v57;
    v44[1] = v45;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v61 + 56))(v43, 0, 1, v22);
    unint64_t v46 = (uint64_t *)&v9[*(int *)(v62 + 48)];
    uint64_t v47 = (uint64_t)v55;
    ((void (*)(char *, char *, uint64_t))v59)(v9, v55, v32);
    uint64_t v48 = (void (*)(uint64_t))v63;
    uint64_t *v46 = v63;
    v46[1] = v39;
    uint64_t v49 = *(uint64_t (**)(char *, uint64_t))(v34 + 8);
    swift_retain();
    uint64_t v50 = v49(v9, v32);
    v48(v50);
    swift_release();
    sub_243748C14(v41, type metadata accessor for TaskPriorityQueue.CurrentTask);
    sub_24337C1BC(v47, &qword_268D9F450);
    return sub_243748C14((uint64_t)v56, type metadata accessor for TaskPriorityQueue.CurrentTask);
  }
}

uint64_t TaskPriorityQueue.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for TaskPriorityQueue.State(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F3D8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F3E0);
  uint64_t v6 = swift_allocObject();
  *(_DWORD *)(v6 + ((*(unsigned int *)(*(void *)v6 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_243748CDC((uint64_t)v4, v6 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v6 + 16), type metadata accessor for TaskPriorityQueue.State);
  uint64_t result = sub_243748C14((uint64_t)v4, type metadata accessor for TaskPriorityQueue.State);
  *a1 = v6;
  return result;
}

uint64_t type metadata accessor for TaskPriorityQueue.State(uint64_t a1)
{
  return sub_24338E938(a1, (uint64_t *)&unk_268D9F428);
}

uint64_t TaskPriorityQueue.addTask<A>(priority:operation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[13] = a4;
  v6[14] = a5;
  v6[11] = a2;
  v6[12] = a3;
  v6[10] = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C7F80);
  v6[15] = swift_task_alloc();
  uint64_t v7 = sub_243958800();
  v6[16] = v7;
  v6[17] = *(void *)(v7 - 8);
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = *v5;
  v6[18] = v8;
  v6[19] = v9;
  return MEMORY[0x270FA2498](sub_24374531C, 0, 0);
}

uint64_t sub_24374531C()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[15];
  sub_2437458B8(v0[11], v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    uint64_t v4 = v0[15];
    sub_243958850();
    sub_24337C1BC(v4, (uint64_t *)&unk_26B0C7F80);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[17] + 32))(v0[18], v0[15], v0[16]);
  }
  return MEMORY[0x270FA2498](sub_2437453FC, 0, 0);
}

uint64_t sub_2437453FC()
{
  uint64_t v2 = v0[18];
  uint64_t v1 = v0[19];
  v0[2] = v0;
  v0[3] = sub_243745540;
  uint64_t v3 = swift_continuation_init();
  uint64_t v4 = swift_task_alloc();
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v3;
  uint64_t v5 = v1 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v1 + 16);
  uint64_t v6 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v6);
  sub_243745C10(v5);
  os_unfair_lock_unlock(v6);
  swift_task_dealloc();
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_243745540()
{
  return MEMORY[0x270FA2498](sub_243745620, 0, 0);
}

uint64_t sub_243745620()
{
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 112);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 160) = v4;
  long long v5 = *(_OWORD *)(v0 + 96);
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = v2;
  *(_OWORD *)(v4 + 32) = v5;
  *(void *)(v4 + 48) = v1;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 168) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_24374571C;
  uint64_t v7 = *(void *)(v0 + 80);
  return MEMORY[0x270FA2158](v7);
}

uint64_t sub_24374571C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_243745834, 0, 0);
}

uint64_t sub_243745834()
{
  (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[16]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_2437458B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C7F80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_243745920(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v22 = a2;
  uint64_t v6 = type metadata accessor for TaskPriorityQueue.State(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v21 - v10;
  sub_243748CDC(a1, (uint64_t)v21 - v10, type metadata accessor for TaskPriorityQueue.State);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F3D8);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v14(v11, 1, v12) == 1)
  {
    v21[1] = v3;
    sub_243748C14((uint64_t)v11, type metadata accessor for TaskPriorityQueue.State);
    sub_243748CDC(a1, (uint64_t)v9, type metadata accessor for TaskPriorityQueue.State);
    if (v14(v9, 1, v12) == 1)
    {
      sub_243748C14(a1, type metadata accessor for TaskPriorityQueue.State);
      sub_243748C14((uint64_t)v9, type metadata accessor for TaskPriorityQueue.State);
      uint64_t v15 = sub_243958800();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(a1, v22, v15);
      uint64_t v16 = a1 + *(int *)(type metadata accessor for TaskPriorityQueue.CurrentTask(0) + 20);
      *(void *)uint64_t v16 = 0;
      *(void *)(v16 + 8) = 0;
      *(unsigned char *)(v16 + 16) = 0;
      uint64_t v17 = (void *)(a1 + *(int *)(v12 + 48));
      uint64_t v18 = MEMORY[0x263F8EE78];
      *uint64_t v17 = 1;
      v17[1] = v18;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
      return swift_continuation_throwingResume();
    }
    else
    {
      uint64_t result = sub_243748C14((uint64_t)v9, type metadata accessor for TaskPriorityQueue.State);
      __break(1u);
    }
  }
  else
  {
    swift_release();
    sub_243748C14((uint64_t)v11, type metadata accessor for TaskPriorityQueue.CurrentTask);
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = a3;
    sub_24374425C(v22, (uint64_t)sub_24374AC1C, v20);
    return swift_release();
  }
  return result;
}

uint64_t sub_243745C10(uint64_t a1)
{
  return sub_243745920(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_243745C2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[15] = a6;
  v7[16] = a7;
  v7[13] = a4;
  v7[14] = a5;
  v7[11] = a2;
  v7[12] = a3;
  v7[10] = a1;
  sub_2439590A0();
  v7[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C7F80);
  v7[18] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_243745CFC, 0, 0);
}

uint64_t sub_243745CFC()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[16];
  uint64_t v5 = v0[13];
  uint64_t v4 = v0[14];
  uint64_t v6 = v0[12];
  uint64_t v7 = sub_243958800();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v1, v6, v7);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v1, 0, 1, v7);
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = 0;
  v9[3] = 0;
  v9[4] = v3;
  v9[5] = v5;
  v9[6] = v4;
  v9[7] = v2;
  uint64_t v10 = sub_243958770();
  v0[19] = v10;
  swift_retain();
  swift_retain();
  sub_2437467DC(v1, (uint64_t)&unk_268D9F440, (uint64_t)v9, v10);
  sub_24337C1BC(v1, (uint64_t *)&unk_26B0C7F80);
  return MEMORY[0x270FA2498](sub_243745E80, 0, 0);
}

uint64_t sub_243745E80()
{
  uint64_t v1 = *(uint64_t **)(v0 + 120);
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v0 + 188;
  *(void *)(v0 + 24) = sub_243745FD8;
  uint64_t v2 = swift_continuation_init();
  *(void *)(swift_task_alloc() + 16) = v2;
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*MEMORY[0x263F8DD00] + *v1 + 16);
  *(void *)(v0 + 160) = v4;
  uint64_t v5 = (uint64_t)v1 + v4;
  uint64_t v6 = *(unsigned int *)(v3 + 48);
  *(_DWORD *)(v0 + 184) = v6;
  uint64_t v7 = (os_unfair_lock_s *)((char *)v1 + ((v6 + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v7);
  sub_243748BD8(v5);
  *(void *)(v0 + 168) = 0;
  os_unfair_lock_unlock(v7);
  swift_task_dealloc();
  return MEMORY[0x270FA23F0](v0 + 16);
}

uint64_t sub_243745FD8()
{
  *(unsigned char *)(*(void *)v0 + 189) = *(unsigned char *)(*(void *)v0 + 188);
  return MEMORY[0x270FA2498](sub_2437460BC, 0, 0);
}

uint64_t sub_2437460BC()
{
  if (*(unsigned char *)(v0 + 189) == 1) {
    sub_243958760();
  }
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v1;
  void *v1 = v0;
  v1[1] = sub_243746180;
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 136);
  return MEMORY[0x270FA1E58](v3, 0, 0, v2);
}

uint64_t sub_243746180()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24374627C, 0, 0);
}

void sub_24374627C()
{
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v1 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v2, 1, v1) == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = *(void *)(v0 + 168);
    uint64_t v5 = (os_unfair_lock_s *)(*(void *)(v0 + 120) + ((*(unsigned int *)(v0 + 184) + 3) & 0x1FFFFFFFCLL));
    (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(*(void *)(v0 + 80), v2, v1);
    os_unfair_lock_lock(v5);
    sub_243746DBC();
    uint64_t v6 = *(unsigned int *)(v0 + 184);
    if (v4)
    {
      uint64_t v7 = (os_unfair_lock_s *)(*(void *)(v0 + 120) + ((v6 + 3) & 0x1FFFFFFFCLL));
      os_unfair_lock_unlock(v7);
    }
    else
    {
      os_unfair_lock_unlock((os_unfair_lock_t)(*(void *)(v0 + 120) + ((v6 + 3) & 0x1FFFFFFFCLL)));
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v8 = *(void (**)(void))(v0 + 8);
      v8();
    }
  }
}

uint64_t sub_243746414(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = v2[5];
  uint64_t v10 = v2[6];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v11;
  *uint64_t v11 = v3;
  v11[1] = sub_2433A9E8C;
  return sub_243745C2C(a1, a2, v7, v8, v9, v10, v6);
}

uint64_t sub_2437464EC(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 16) = a6;
  uint64_t v10 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v6 + 24) = v8;
  void *v8 = v6;
  v8[1] = sub_2437465CC;
  return v10(a1);
}

uint64_t sub_2437465CC()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2437466C8, 0, 0);
}

uint64_t sub_2437466C8()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + 16)
                          + ((*(unsigned int *)(**(void **)(v0 + 16) + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v1);
  sub_2437467B0();
  os_unfair_lock_unlock(v1);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2437467B0()
{
  return sub_243744770();
}

uint64_t sub_2437467DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C7F80);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2437458B8(a1, (uint64_t)v12);
  uint64_t v13 = sub_243958800();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_24337C1BC((uint64_t)v12, (uint64_t *)&unk_26B0C7F80);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v15 = sub_243958700();
      uint64_t v17 = v16;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_2439587F0();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v12, v13);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v15 = 0;
  uint64_t v17 = 0;
LABEL_6:
  uint64_t v18 = *v5;
  uint64_t v19 = (void *)swift_allocObject();
  v19[2] = *(void *)(a4 + 16);
  v19[3] = a2;
  v19[4] = a3;
  uint64_t v20 = (void *)(v17 | v15);
  if (v17 | v15)
  {
    v23[0] = 0;
    v23[1] = 0;
    uint64_t v20 = v23;
    v23[2] = v15;
    v23[3] = v17;
  }
  v22[1] = 1;
  v22[2] = v20;
  v22[3] = v18;
  swift_task_create();
  return swift_release();
}

uint64_t sub_2437469E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TaskPriorityQueue.State(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TaskPriorityQueue.CurrentTask(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  sub_243748CDC(a1, (uint64_t)v6, type metadata accessor for TaskPriorityQueue.State);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F3D8);
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v6, 1, v11) == 1)
  {
    uint64_t result = sub_243748C14((uint64_t)v6, type metadata accessor for TaskPriorityQueue.State);
    __break(1u);
  }
  else
  {
    uint64_t v13 = &v6[*(int *)(v11 + 48)];
    uint64_t v14 = *(void *)v13;
    uint64_t v28 = *((void *)v13 + 1);
    uint64_t result = sub_243748C74((uint64_t)v6, (uint64_t)v9, type metadata accessor for TaskPriorityQueue.CurrentTask);
    uint64_t v16 = &v9[*(int *)(v7 + 20)];
    if ((v16[16] & 1) == 0)
    {
      uint64_t v17 = *(void *)v16;
      sub_243748C14(a1, type metadata accessor for TaskPriorityQueue.State);
      if (v17)
      {
        sub_2437478D4(*(void *)v16, *((void *)v16 + 1), v16[16]);
        *(void *)uint64_t v16 = 0;
        *((void *)v16 + 1) = 0;
        v16[16] = 1;
        uint64_t v23 = (void *)(a1 + *(int *)(v11 + 48));
        sub_243748CDC((uint64_t)v9, a1, type metadata accessor for TaskPriorityQueue.CurrentTask);
        uint64_t v24 = v28;
        *uint64_t v23 = v14;
        v23[1] = v24;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
        **(unsigned char **)(*(void *)(a2 + 64) + 40) = 0;
      }
      else
      {
        if ((v17 & 0x100) == 0)
        {
          uint64_t v18 = *(void *)v16;
          uint64_t v19 = *((void *)v16 + 1);
          char v20 = v16[16];
          swift_retain();
          sub_2437478D4(v18, v19, v20);
          *(void *)uint64_t v16 = sub_24374AB1C;
          *((void *)v16 + 1) = v10;
          v16[16] = 1;
          unint64_t v21 = (void *)(a1 + *(int *)(v11 + 48));
          sub_243748CDC((uint64_t)v9, a1, type metadata accessor for TaskPriorityQueue.CurrentTask);
          uint64_t v22 = v28;
          *unint64_t v21 = v14;
          v21[1] = v22;
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
LABEL_9:
          sub_243748C14((uint64_t)v9, type metadata accessor for TaskPriorityQueue.CurrentTask);
          return swift_release();
        }
        sub_2437478D4(*(void *)v16, *((void *)v16 + 1), v16[16]);
        *(void *)uint64_t v16 = 0;
        *((void *)v16 + 1) = 0;
        v16[16] = 1;
        uint64_t v25 = (void *)(a1 + *(int *)(v11 + 48));
        sub_243748CDC((uint64_t)v9, a1, type metadata accessor for TaskPriorityQueue.CurrentTask);
        uint64_t v26 = v28;
        void *v25 = v14;
        v25[1] = v26;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
        **(unsigned char **)(*(void *)(a2 + 64) + 40) = 1;
      }
      swift_continuation_resume();
      goto LABEL_9;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_243746DBC()
{
  return sub_243744A60();
}

uint64_t TaskPriorityQueue.addThrowingTask<A>(priority:operation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[7] = a4;
  v6[8] = a5;
  v6[5] = a2;
  void v6[6] = a3;
  v6[4] = a1;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B0C7A50);
  uint64_t v7 = sub_243959B60();
  v6[9] = v7;
  v6[10] = *(void *)(v7 - 8);
  v6[11] = swift_task_alloc();
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = *v5;
  v6[12] = v8;
  v6[13] = v9;
  return MEMORY[0x270FA2498](sub_243746EE4, 0, 0);
}

uint64_t sub_243746EE4()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[6];
  v0[2] = v0[13];
  uint64_t v4 = (void *)swift_allocObject();
  v0[14] = v4;
  long long v4[2] = v2;
  v4[3] = v3;
  v4[4] = v1;
  swift_retain();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[15] = v5;
  void *v5 = v0;
  v5[1] = sub_243746FEC;
  uint64_t v6 = v0[12];
  uint64_t v7 = v0[9];
  uint64_t v8 = v0[5];
  return TaskPriorityQueue.addTask<A>(priority:operation:)(v6, v8, (uint64_t)&unk_268D9F410, (uint64_t)v4, v7);
}

uint64_t sub_243746FEC()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_243747104, 0, 0);
}

uint64_t sub_243747104()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[4];
  (*(void (**)(void, void, uint64_t))(v0[10] + 16))(v0[11], v0[12], v1);
  sub_24354B970(v1, (uint64_t)(v0 + 3), v2);
  (*(void (**)(void, void))(v0[10] + 8))(v0[12], v0[9]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_2437471FC(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  long long v4[2] = a1;
  v4[3] = a4;
  v4[4] = *(void *)(a4 - 8);
  uint64_t v6 = swift_task_alloc();
  v4[5] = v6;
  uint64_t v9 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v7 = (void *)swift_task_alloc();
  v4[6] = v7;
  *uint64_t v7 = v4;
  v7[1] = sub_243747334;
  return v9(v6);
}

uint64_t sub_243747334()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2437474FC;
  }
  else {
    uint64_t v2 = sub_243747448;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_243747448()
{
  (*(void (**)(void, void, void))(v0[4] + 32))(v0[2], v0[5], v0[3]);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B0C7A50);
  sub_243959B60();
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_2437474FC()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 56);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B0C7A50);
  sub_243959B60();
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24374759C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_2437475D4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = (int *)v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_24337AF78;
  return sub_2437471FC(a1, v5, v6, v4);
}

ValueMetadata *type metadata accessor for TaskPriorityQueue()
{
  return &type metadata for TaskPriorityQueue;
}

void *initializeBufferWithCopyOfBuffer for TaskPriorityQueue.PriorityQueue(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for TaskPriorityQueue.PriorityQueue()
{
  return swift_release();
}

void *assignWithCopy for TaskPriorityQueue.PriorityQueue(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for TaskPriorityQueue.PriorityQueue(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for TaskPriorityQueue.PriorityQueue()
{
  return &type metadata for TaskPriorityQueue.PriorityQueue;
}

uint64_t *sub_243747758(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_243958800();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(void *)v10;
    uint64_t v12 = *((void *)v10 + 1);
    char v13 = v10[16];
    sub_24374784C(*(void *)v10, v12, v13);
    *(void *)uint64_t v9 = v11;
    *((void *)v9 + 1) = v12;
    v9[16] = v13;
  }
  return a1;
}

uint64_t sub_24374784C(uint64_t result, uint64_t a2, char a3)
{
  if (a3) {
    return sub_243379E98(result);
  }
  return result;
}

uint64_t sub_243747858(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_243958800();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = *(void *)v5;
  uint64_t v7 = *(void *)(v5 + 8);
  char v8 = *(unsigned char *)(v5 + 16);

  return sub_2437478D4(v6, v7, v8);
}

uint64_t sub_2437478D4(uint64_t result, uint64_t a2, char a3)
{
  if (a3) {
    return sub_243379EA8(result);
  }
  return result;
}

uint64_t sub_2437478E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_243958800();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  char v12 = *(unsigned char *)(v9 + 16);
  sub_24374784C(*(void *)v9, v11, v12);
  *(void *)uint64_t v8 = v10;
  *(void *)(v8 + 8) = v11;
  *(unsigned char *)(v8 + 16) = v12;
  return a1;
}

uint64_t sub_243747984(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_243958800();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  char v12 = *(unsigned char *)(v9 + 16);
  sub_24374784C(*(void *)v9, v11, v12);
  uint64_t v13 = *(void *)v8;
  uint64_t v14 = *(void *)(v8 + 8);
  char v15 = *(unsigned char *)(v8 + 16);
  *(void *)uint64_t v8 = v10;
  *(void *)(v8 + 8) = v11;
  *(unsigned char *)(v8 + 16) = v12;
  sub_2437478D4(v13, v14, v15);
  return a1;
}

uint64_t sub_243747A34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_243958800();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
  return a1;
}

uint64_t sub_243747AC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_243958800();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 16);
  uint64_t v11 = *(void *)v8;
  uint64_t v12 = *(void *)(v8 + 8);
  char v13 = *(unsigned char *)(v8 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(unsigned char *)(v8 + 16) = v10;
  sub_2437478D4(v11, v12, v13);
  return a1;
}

uint64_t sub_243747B58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_243747B6C);
}

uint64_t sub_243747B6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_243958800();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 16);
    if (v10 > 1) {
      return (v10 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_243747C2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_243747C40);
}

uint64_t sub_243747C40(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_243958800();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20) + 16) = -(char)a2;
  }
  return result;
}

uint64_t type metadata accessor for TaskPriorityQueue.CurrentTask(uint64_t a1)
{
  return sub_24338E938(a1, (uint64_t *)&unk_268D9F418);
}

uint64_t sub_243747D20()
{
  uint64_t result = sub_243958800();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_243747DB4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F3D8);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = sub_243958800();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      uint64_t v11 = *(int *)(type metadata accessor for TaskPriorityQueue.CurrentTask(0) + 20);
      uint64_t v12 = (char *)a1 + v11;
      char v13 = (char *)a2 + v11;
      uint64_t v14 = *(void *)v13;
      uint64_t v15 = *((void *)v13 + 1);
      char v16 = v13[16];
      sub_24374784C(*(void *)v13, v15, v16);
      *(void *)uint64_t v12 = v14;
      *((void *)v12 + 1) = v15;
      v12[16] = v16;
      uint64_t v17 = *(int *)(v7 + 48);
      uint64_t v18 = (uint64_t *)((char *)a1 + v17);
      uint64_t v19 = (uint64_t *)((char *)a2 + v17);
      uint64_t v20 = v19[1];
      *uint64_t v18 = *v19;
      v18[1] = v20;
      unint64_t v21 = *(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56);
      swift_retain();
      v21(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_243747F74(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F3D8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = sub_243958800();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
    uint64_t v5 = type metadata accessor for TaskPriorityQueue.CurrentTask(0);
    sub_2437478D4(*(void *)(a1 + *(int *)(v5 + 20)), *(void *)(a1 + *(int *)(v5 + 20) + 8), *(unsigned char *)(a1 + *(int *)(v5 + 20) + 16));
    return swift_release();
  }
  return result;
}

char *sub_243748058(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F3D8);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_243958800();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    uint64_t v9 = *(int *)(type metadata accessor for TaskPriorityQueue.CurrentTask(0) + 20);
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = *(void *)v11;
    uint64_t v13 = *((void *)v11 + 1);
    char v14 = v11[16];
    sub_24374784C(*(void *)v11, v13, v14);
    *(void *)uint64_t v10 = v12;
    *((void *)v10 + 1) = v13;
    v10[16] = v14;
    uint64_t v15 = *(int *)(v6 + 48);
    char v16 = &a1[v15];
    uint64_t v17 = &a2[v15];
    uint64_t v18 = *((void *)v17 + 1);
    *(void *)char v16 = *(void *)v17;
    *((void *)v16 + 1) = v18;
    uint64_t v19 = *(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56);
    swift_retain();
    v19(a1, 0, 1, v6);
  }
  return a1;
}

char *sub_2437481DC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F3D8);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v23 = sub_243958800();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 24))(a1, a2, v23);
      uint64_t v24 = *(int *)(type metadata accessor for TaskPriorityQueue.CurrentTask(0) + 20);
      uint64_t v25 = &a1[v24];
      uint64_t v26 = &a2[v24];
      uint64_t v27 = *(void *)v26;
      uint64_t v28 = *((void *)v26 + 1);
      char v29 = v26[16];
      sub_24374784C(*(void *)v26, v28, v29);
      uint64_t v30 = *(void *)v25;
      uint64_t v31 = *((void *)v25 + 1);
      char v32 = v25[16];
      *(void *)uint64_t v25 = v27;
      *((void *)v25 + 1) = v28;
      v25[16] = v29;
      sub_2437478D4(v30, v31, v32);
      uint64_t v33 = *(int *)(v6 + 48);
      uint64_t v34 = &a1[v33];
      uint64_t v35 = &a2[v33];
      *(void *)uint64_t v34 = *(void *)v35;
      *((void *)v34 + 1) = *((void *)v35 + 1);
      swift_retain();
      swift_release();
      return a1;
    }
    sub_24337C1BC((uint64_t)a1, &qword_268D9F3D8);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = sub_243958800();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
  uint64_t v12 = *(int *)(type metadata accessor for TaskPriorityQueue.CurrentTask(0) + 20);
  uint64_t v13 = &a1[v12];
  char v14 = &a2[v12];
  uint64_t v15 = *(void *)v14;
  uint64_t v16 = *((void *)v14 + 1);
  char v17 = v14[16];
  sub_24374784C(*(void *)v14, v16, v17);
  *(void *)uint64_t v13 = v15;
  *((void *)v13 + 1) = v16;
  v13[16] = v17;
  uint64_t v18 = *(int *)(v6 + 48);
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  *(void *)uint64_t v19 = *(void *)v20;
  *((void *)v19 + 1) = *((void *)v20 + 1);
  unint64_t v21 = *(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56);
  swift_retain();
  v21(a1, 0, 1, v6);
  return a1;
}

char *sub_243748448(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F3D8);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_243958800();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    uint64_t v9 = *(int *)(type metadata accessor for TaskPriorityQueue.CurrentTask(0) + 20);
    int v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    *(_OWORD *)int v10 = *(_OWORD *)v11;
    v10[16] = v11[16];
    *(_OWORD *)&a1[*(int *)(v6 + 48)] = *(_OWORD *)&a2[*(int *)(v6 + 48)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

char *sub_2437485A8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F3D8);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v16 = sub_243958800();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 40))(a1, a2, v16);
      uint64_t v17 = *(int *)(type metadata accessor for TaskPriorityQueue.CurrentTask(0) + 20);
      uint64_t v18 = &a1[v17];
      uint64_t v19 = &a2[v17];
      char v20 = v19[16];
      uint64_t v21 = *(void *)v18;
      uint64_t v22 = *((void *)v18 + 1);
      char v23 = v18[16];
      *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
      v18[16] = v20;
      sub_2437478D4(v21, v22, v23);
      uint64_t v24 = *(int *)(v6 + 48);
      uint64_t v25 = &a1[v24];
      uint64_t v26 = &a2[v24];
      uint64_t v28 = *(void *)v26;
      uint64_t v27 = *((void *)v26 + 1);
      *(void *)uint64_t v25 = v28;
      *((void *)v25 + 1) = v27;
      swift_release();
      return a1;
    }
    sub_24337C1BC((uint64_t)a1, &qword_268D9F3D8);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = sub_243958800();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
  uint64_t v12 = *(int *)(type metadata accessor for TaskPriorityQueue.CurrentTask(0) + 20);
  uint64_t v13 = &a1[v12];
  char v14 = &a2[v12];
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  v13[16] = v14[16];
  *(_OWORD *)&a1[*(int *)(v6 + 48)] = *(_OWORD *)&a2[*(int *)(v6 + 48)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t sub_2437487D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2437487E4);
}

uint64_t sub_2437487E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F3D8);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_243748854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_243748868);
}

uint64_t sub_243748868(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F3D8);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_2437488EC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F3D8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);

  return v3(a1, 1, v2);
}

uint64_t sub_243748958(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F3D8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, 1, v4);
}

uint64_t sub_2437489CC()
{
  uint64_t result = type metadata accessor for TaskPriorityQueue.CurrentTask(319);
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_243748A60()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_243748AA8(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 40);
  uint64_t v5 = *(void *)(v1 + 56);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_2433A9E8C;
  v6[2] = v5;
  int v9 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v7 = (void *)swift_task_alloc();
  v6[3] = v7;
  *uint64_t v7 = v6;
  v7[1] = sub_2437465CC;
  return v9(a1);
}

uint64_t sub_243748BD8(uint64_t a1)
{
  return sub_2437469E4(a1, *(void *)(v1 + 16));
}

uint64_t type metadata accessor for TaskPriorityQueue.PendingTask(uint64_t a1)
{
  return sub_24338E938(a1, (uint64_t *)&unk_268D9F468);
}

uint64_t sub_243748C14(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_243748C74(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_243748CDC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_243748D44(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v80 = type metadata accessor for TaskPriorityQueue.PendingTask(0);
  uint64_t v8 = MEMORY[0x270FA5388](v80);
  uint64_t v10 = (uint64_t *)((char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (uint64_t *)((char *)&v71 - v12);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v74 = (uint64_t)&v71 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  unint64_t v76 = (unint64_t)&v71 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  char v20 = (uint64_t *)((char *)&v71 - v19);
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  uint64_t v73 = (uint64_t)&v71 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v75 = (uint64_t *)((char *)&v71 - v24);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v78 = (uint64_t *)((char *)&v71 - v26);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  char v29 = (uint64_t *)((char *)&v71 - v28);
  uint64_t result = MEMORY[0x270FA5388](v27);
  uint64_t v33 = (uint64_t *)((char *)&v71 - v32);
  if (!a1) {
    return result;
  }
  uint64_t v34 = a1 - 1;
  if (a1 - 1 < 0) {
    uint64_t v34 = a1;
  }
  uint64_t v35 = *(void *)(v31 + 72);
  uint64_t v77 = a1;
  uint64_t v36 = a3 + v35 * a1;
  uint64_t v79 = v35;
  uint64_t v72 = v34 >> 1;
  uint64_t v37 = a3 + v35 * (v34 >> 1);
  if (a2)
  {
    sub_243748CDC(v36, (uint64_t)v13, type metadata accessor for TaskPriorityQueue.PendingTask);
    sub_243748CDC(v37, (uint64_t)v10, type metadata accessor for TaskPriorityQueue.PendingTask);
    uint64_t v41 = (uint64_t)v13;
    uint64_t v42 = *v13;
    uint64_t v43 = *v10;
    if (v42 == *v10) {
      goto LABEL_8;
    }
    uint64_t v33 = (uint64_t *)v41;
    if (sub_2439587C0()) {
      goto LABEL_14;
    }
    if ((sub_2439587D0() & 1) == 0)
    {
LABEL_8:
      sub_243748C14((uint64_t)v10, type metadata accessor for TaskPriorityQueue.PendingTask);
      uint64_t v40 = v41;
      goto LABEL_9;
    }
    sub_243748C14((uint64_t)v10, type metadata accessor for TaskPriorityQueue.PendingTask);
    uint64_t result = sub_243748C14(v41, type metadata accessor for TaskPriorityQueue.PendingTask);
    if (v43 >= v42) {
      goto LABEL_10;
    }
LABEL_15:
    --a2;
    uint64_t v44 = v72;
    uint64_t result = sub_243749578(v77, v72, a3);
    goto LABEL_16;
  }
  uint64_t v71 = a4;
  sub_243748CDC(v36, (uint64_t)&v71 - v32, type metadata accessor for TaskPriorityQueue.PendingTask);
  sub_243748CDC(v37, (uint64_t)v29, type metadata accessor for TaskPriorityQueue.PendingTask);
  uint64_t v38 = *v29;
  uint64_t v39 = *v33;
  if (*v29 != *v33)
  {
    if (sub_2439587C0())
    {
      uint64_t v10 = v29;
LABEL_14:
      sub_243748C14((uint64_t)v10, type metadata accessor for TaskPriorityQueue.PendingTask);
      sub_243748C14((uint64_t)v33, type metadata accessor for TaskPriorityQueue.PendingTask);
      goto LABEL_15;
    }
    if ((sub_2439587D0() & 1) == 0) {
      goto LABEL_6;
    }
    sub_243748C14((uint64_t)v29, type metadata accessor for TaskPriorityQueue.PendingTask);
    uint64_t result = sub_243748C14((uint64_t)v33, type metadata accessor for TaskPriorityQueue.PendingTask);
    if (v39 >= v38) {
      goto LABEL_10;
    }
    goto LABEL_15;
  }
LABEL_6:
  sub_243748C14((uint64_t)v29, type metadata accessor for TaskPriorityQueue.PendingTask);
  uint64_t v40 = (uint64_t)v33;
LABEL_9:
  uint64_t result = sub_243748C14(v40, type metadata accessor for TaskPriorityQueue.PendingTask);
LABEL_10:
  uint64_t v44 = v77;
LABEL_16:
  uint64_t v77 = a3;
  if ((a2 & 1) == 0)
  {
    if (v44 <= 2) {
      return result;
    }
    while (1)
    {
      unint64_t v76 = v44 - 3;
      unint64_t v45 = (unint64_t)(v44 - 3) >> 2;
      uint64_t v47 = v78;
      uint64_t v46 = v79;
      uint64_t v48 = v44;
      uint64_t v49 = v79 * v44;
      unint64_t v50 = a3 + v79 * v44;
      sub_243748CDC(v50, (uint64_t)v78, type metadata accessor for TaskPriorityQueue.PendingTask);
      unint64_t v51 = v45;
      int64_t v52 = v45 * v46;
      uint64_t v53 = a3 + v45 * v46;
      uint64_t v54 = v75;
      sub_243748CDC(v53, (uint64_t)v75, type metadata accessor for TaskPriorityQueue.PendingTask);
      uint64_t v55 = v47;
      uint64_t v56 = *v47;
      uint64_t v57 = *v54;
      if (v56 == *v54)
      {
        uint64_t v66 = v54;
        char v20 = v55;
        goto LABEL_60;
      }
      uint64_t v74 = v53;
      if (sub_2439587C0())
      {
        sub_243748C14((uint64_t)v54, type metadata accessor for TaskPriorityQueue.PendingTask);
        uint64_t result = sub_243748C14((uint64_t)v78, type metadata accessor for TaskPriorityQueue.PendingTask);
        a3 = v77;
      }
      else
      {
        if ((sub_2439587D0() & 1) == 0)
        {
          uint64_t v66 = v75;
          char v20 = v78;
          goto LABEL_60;
        }
        sub_243748C14((uint64_t)v75, type metadata accessor for TaskPriorityQueue.PendingTask);
        uint64_t result = sub_243748C14((uint64_t)v78, type metadata accessor for TaskPriorityQueue.PendingTask);
        BOOL v58 = v57 < v56;
        a3 = v77;
        if (!v58) {
          return result;
        }
      }
      if (v48 != v51)
      {
        if (!a3)
        {
          __break(1u);
LABEL_63:
          __break(1u);
          return result;
        }
        sub_243748C74(v50, v73, type metadata accessor for TaskPriorityQueue.PendingTask);
        uint64_t v59 = v74;
        if (v49 < v52 || v50 >= v74 + v79)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v49 != v52)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        uint64_t result = sub_243748C74(v73, v59, type metadata accessor for TaskPriorityQueue.PendingTask);
      }
      uint64_t v44 = v51;
      if (v76 <= 0xB) {
        return result;
      }
    }
  }
  if (v44 <= 2) {
    return result;
  }
  do
  {
    uint64_t v60 = v44 - 3;
    uint64_t v61 = v79;
    uint64_t v62 = v44;
    uint64_t v73 = v79 * v44;
    unint64_t v63 = a3 + v79 * v44;
    sub_243748CDC(v63, (uint64_t)v20, type metadata accessor for TaskPriorityQueue.PendingTask);
    unint64_t v64 = (unint64_t)(v44 - 3) >> 2;
    uint64_t v65 = v64 * v61;
    uint64_t v75 = (uint64_t *)(a3 + v65);
    uint64_t v66 = (uint64_t *)v76;
    sub_243748CDC(a3 + v65, v76, type metadata accessor for TaskPriorityQueue.PendingTask);
    uint64_t v67 = *v66;
    uint64_t v68 = *v20;
    if (*v66 == *v20) {
      goto LABEL_60;
    }
    uint64_t v78 = (uint64_t *)v60;
    if (sub_2439587C0())
    {
      sub_243748C14((uint64_t)v66, type metadata accessor for TaskPriorityQueue.PendingTask);
      uint64_t result = sub_243748C14((uint64_t)v20, type metadata accessor for TaskPriorityQueue.PendingTask);
      a3 = v77;
    }
    else
    {
      if ((sub_2439587D0() & 1) == 0)
      {
        uint64_t v66 = (uint64_t *)v76;
LABEL_60:
        sub_243748C14((uint64_t)v66, type metadata accessor for TaskPriorityQueue.PendingTask);
        return sub_243748C14((uint64_t)v20, type metadata accessor for TaskPriorityQueue.PendingTask);
      }
      sub_243748C14(v76, type metadata accessor for TaskPriorityQueue.PendingTask);
      uint64_t result = sub_243748C14((uint64_t)v20, type metadata accessor for TaskPriorityQueue.PendingTask);
      BOOL v58 = v68 < v67;
      a3 = v77;
      if (!v58) {
        return result;
      }
    }
    unint64_t v69 = (unint64_t)v78;
    if (v62 != v64)
    {
      if (!a3) {
        goto LABEL_63;
      }
      sub_243748C74(v63, v74, type metadata accessor for TaskPriorityQueue.PendingTask);
      uint64_t v70 = (uint64_t)v75;
      if (v73 < v65 || v63 >= (unint64_t)v75 + v79)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (v73 != v65)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      uint64_t result = sub_243748C74(v74, v70, type metadata accessor for TaskPriorityQueue.PendingTask);
    }
    uint64_t v44 = v64;
  }
  while (v69 > 0xB);
  return result;
}

uint64_t sub_243749578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriorityQueue.PendingTask(0);
  uint64_t result = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 != a2)
  {
    if (a3)
    {
      uint64_t v11 = *(void *)(v8 + 72);
      uint64_t v12 = v11 * a1;
      unint64_t v13 = a3 + v11 * a1;
      uint64_t v14 = v11 * a2;
      uint64_t v15 = a3 + v14;
      sub_243748C74(v13, (uint64_t)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for TaskPriorityQueue.PendingTask);
      if (v12 < v14 || v13 >= v15 + v11)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (v12 != v14)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      return sub_243748C74((uint64_t)v10, v15, type metadata accessor for TaskPriorityQueue.PendingTask);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_2437496DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriorityQueue.PendingTask(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (uint64_t *)((char *)&v31 - v11);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (uint64_t *)((char *)&v31 - v14);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (uint64_t *)((char *)&v31 - v17);
  MEMORY[0x270FA5388](v16);
  char v20 = (uint64_t *)((char *)&v31 - v19);
  uint64_t v22 = *(void *)(v21 + 72);
  if (a2 == 2)
  {
    uint64_t v23 = a1 + v22;
    sub_243748CDC(v23, (uint64_t)&v31 - v19, type metadata accessor for TaskPriorityQueue.PendingTask);
    sub_243748CDC(a3, (uint64_t)v18, type metadata accessor for TaskPriorityQueue.PendingTask);
    uint64_t v24 = *v18;
    uint64_t v25 = *v20;
    if (*v18 == *v20)
    {
LABEL_3:
      sub_243748C14((uint64_t)v18, type metadata accessor for TaskPriorityQueue.PendingTask);
      return sub_243748C14((uint64_t)v20, type metadata accessor for TaskPriorityQueue.PendingTask);
    }
    if (sub_2439587C0())
    {
      sub_243748C14((uint64_t)v18, type metadata accessor for TaskPriorityQueue.PendingTask);
      sub_243748C14((uint64_t)v20, type metadata accessor for TaskPriorityQueue.PendingTask);
LABEL_12:
      sub_243748C74(v23, (uint64_t)v9, type metadata accessor for TaskPriorityQueue.PendingTask);
      sub_243748C74(a3, v23, type metadata accessor for TaskPriorityQueue.PendingTask);
      return sub_243748C74((uint64_t)v9, a3, type metadata accessor for TaskPriorityQueue.PendingTask);
    }
    if ((sub_2439587D0() & 1) == 0) {
      goto LABEL_3;
    }
    sub_243748C14((uint64_t)v18, type metadata accessor for TaskPriorityQueue.PendingTask);
    uint64_t result = sub_243748C14((uint64_t)v20, type metadata accessor for TaskPriorityQueue.PendingTask);
    if (v25 < v24) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v32 = a3;
    sub_243748CDC(a1 + 2 * v22, (uint64_t)v15, type metadata accessor for TaskPriorityQueue.PendingTask);
    sub_243748CDC(a1 + v22, (uint64_t)v12, type metadata accessor for TaskPriorityQueue.PendingTask);
    uint64_t v27 = *v15;
    uint64_t v28 = *v12;
    if (*v15 == *v12)
    {
      uint64_t v29 = 2;
    }
    else if (sub_2439587C0())
    {
      uint64_t v29 = 1;
    }
    else if (((v28 < v27) & sub_2439587D0()) != 0)
    {
      uint64_t v29 = 1;
    }
    else
    {
      uint64_t v29 = 2;
    }
    uint64_t v30 = v32;
    sub_243748C14((uint64_t)v12, type metadata accessor for TaskPriorityQueue.PendingTask);
    sub_243748C14((uint64_t)v15, type metadata accessor for TaskPriorityQueue.PendingTask);
    sub_243748C74(a1 + v29 * v22, (uint64_t)v9, type metadata accessor for TaskPriorityQueue.PendingTask);
    sub_243748C74(v30, a1 + v29 * v22, type metadata accessor for TaskPriorityQueue.PendingTask);
    sub_243748C74((uint64_t)v9, v30, type metadata accessor for TaskPriorityQueue.PendingTask);
    return sub_243749A88(v29, 1, a1, a2);
  }
  return result;
}

uint64_t sub_243749A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v110 = type metadata accessor for TaskPriorityQueue.PendingTask(0);
  uint64_t v8 = MEMORY[0x270FA5388](v110);
  uint64_t v10 = (char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (void **)((char *)&v95 - v12);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v99 = (char *)&v95 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v100 = (uint64_t)&v95 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v98 = (uint64_t *)((char *)&v95 - v19);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v103 = (uint64_t *)((char *)&v95 - v21);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  size_t v109 = (uint64_t *)((char *)&v95 - v23);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v102 = (uint64_t *)((char *)&v95 - v25);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v108 = (uint64_t *)((char *)&v95 - v27);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v101 = (uint64_t *)((char *)&v95 - v29);
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  int v107 = (uint64_t *)((char *)&v95 - v31);
  uint64_t result = MEMORY[0x270FA5388](v30);
  uint64_t v35 = (void **)((char *)&v95 - v34);
  if (!a3)
  {
    __break(1u);
    return result;
  }
  uint64_t v36 = *(void *)(v33 + 72);
  sub_243748C74(a3 + v36 * a1, (uint64_t)&v95 - v34, type metadata accessor for TaskPriorityQueue.PendingTask);
  uint64_t v37 = (4 * a1) | 3;
  uint64_t v38 = 4 * a1 + 6;
  if (v38 >= a4)
  {
    uint64_t v76 = a2 + 2;
    goto LABEL_51;
  }
  uint64_t v95 = v13;
  uint64_t v96 = v10;
  uint64_t v106 = a3;
  uint64_t v97 = a4;
  do
  {
    uint64_t v104 = a2;
    uint64_t v105 = a1;
    uint64_t v39 = v35;
    uint64_t v40 = v107;
    sub_243748CDC(a3 + v37 * v36, (uint64_t)v107, type metadata accessor for TaskPriorityQueue.PendingTask);
    uint64_t v41 = v101;
    sub_243748CDC(a3 + (v37 + 1) * v36, (uint64_t)v101, type metadata accessor for TaskPriorityQueue.PendingTask);
    uint64_t v42 = (uint64_t)v41;
    uint64_t v43 = *v40;
    uint64_t v44 = *v41;
    if (v43 == *v41)
    {
      unsigned int v45 = 0;
    }
    else
    {
      if (sub_2439587C0()) {
        unsigned int v45 = 1;
      }
      else {
        unsigned int v45 = (v44 < v43) & sub_2439587D0();
      }
      uint64_t v42 = (uint64_t)v101;
    }
    sub_243748C14(v42, type metadata accessor for TaskPriorityQueue.PendingTask);
    sub_243748C14((uint64_t)v107, type metadata accessor for TaskPriorityQueue.PendingTask);
    if (v45) {
      uint64_t v46 = v37 + 1;
    }
    else {
      uint64_t v46 = v37;
    }
    uint64_t v47 = v37 + 2;
    uint64_t v48 = v108;
    sub_243748CDC(a3 + (v37 + 2) * v36, (uint64_t)v108, type metadata accessor for TaskPriorityQueue.PendingTask);
    uint64_t v49 = v102;
    sub_243748CDC(a3 + v38 * v36, (uint64_t)v102, type metadata accessor for TaskPriorityQueue.PendingTask);
    uint64_t v50 = (uint64_t)v49;
    uint64_t v51 = *v48;
    uint64_t v52 = *v49;
    if (v51 == *v49)
    {
      unsigned int v53 = 0;
    }
    else
    {
      if (sub_2439587C0()) {
        unsigned int v53 = 1;
      }
      else {
        unsigned int v53 = (v52 < v51) & sub_2439587D0();
      }
      uint64_t v50 = (uint64_t)v102;
    }
    sub_243748C14(v50, type metadata accessor for TaskPriorityQueue.PendingTask);
    sub_243748C14((uint64_t)v108, type metadata accessor for TaskPriorityQueue.PendingTask);
    if (v53) {
      uint64_t v47 = v38;
    }
    uint64_t v54 = v109;
    sub_243748CDC(a3 + v46 * v36, (uint64_t)v109, type metadata accessor for TaskPriorityQueue.PendingTask);
    uint64_t v55 = a3 + v47 * v36;
    uint64_t v56 = v103;
    sub_243748CDC(v55, (uint64_t)v103, type metadata accessor for TaskPriorityQueue.PendingTask);
    uint64_t v57 = (uint64_t)v56;
    uint64_t v58 = *v54;
    uint64_t v59 = *v56;
    BOOL v60 = *v54 == *v56;
    uint64_t v61 = v39;
    if (v60)
    {
      unsigned int v62 = 0;
      unint64_t v63 = (uint64_t *)v99;
    }
    else
    {
      char v64 = sub_2439587C0();
      unint64_t v63 = (uint64_t *)v99;
      if (v64) {
        unsigned int v62 = 1;
      }
      else {
        unsigned int v62 = (v59 < v58) & sub_2439587D0();
      }
      uint64_t v57 = (uint64_t)v103;
    }
    sub_243748C14(v57, type metadata accessor for TaskPriorityQueue.PendingTask);
    sub_243748C14((uint64_t)v109, type metadata accessor for TaskPriorityQueue.PendingTask);
    if (v62) {
      a1 = v47;
    }
    else {
      a1 = v46;
    }
    uint64_t v65 = v106 + a1 * v36;
    uint64_t v66 = v98;
    sub_243748CDC(v65, (uint64_t)v98, type metadata accessor for TaskPriorityQueue.PendingTask);
    uint64_t v67 = *v61;
    uint64_t v68 = *v66;
    if (*v61 == *v66)
    {
      sub_243748C14((uint64_t)v66, type metadata accessor for TaskPriorityQueue.PendingTask);
      uint64_t v35 = v61;
LABEL_49:
      uint64_t v77 = v105;
      a3 = v106;
      return sub_243748C74((uint64_t)v35, a3 + v77 * v36, type metadata accessor for TaskPriorityQueue.PendingTask);
    }
    if (sub_2439587C0())
    {
      sub_243748C14((uint64_t)v66, type metadata accessor for TaskPriorityQueue.PendingTask);
      uint64_t v35 = v61;
    }
    else
    {
      char v69 = sub_2439587D0();
      sub_243748C14((uint64_t)v66, type metadata accessor for TaskPriorityQueue.PendingTask);
      if ((v69 & 1) == 0)
      {
        uint64_t v35 = v61;
        goto LABEL_49;
      }
      uint64_t v35 = v61;
      if (v68 >= v67) {
        goto LABEL_49;
      }
    }
    uint64_t v70 = v100;
    sub_243748C74(v65, v100, type metadata accessor for TaskPriorityQueue.PendingTask);
    a3 = v106;
    sub_243748C74(v70, v106 + v105 * v36, type metadata accessor for TaskPriorityQueue.PendingTask);
    uint64_t v71 = a1 - 1;
    if (a1 - 1 < 0) {
      uint64_t v71 = a1;
    }
    uint64_t v72 = a3 + (v71 >> 1) * v36;
    sub_243748CDC(v72, (uint64_t)v63, type metadata accessor for TaskPriorityQueue.PendingTask);
    uint64_t v73 = *v35;
    uint64_t v74 = *v63;
    if (*v35 == *v63)
    {
LABEL_4:
      sub_243748C14((uint64_t)v63, type metadata accessor for TaskPriorityQueue.PendingTask);
      goto LABEL_5;
    }
    if (sub_2439587C0())
    {
      sub_243748C14((uint64_t)v63, type metadata accessor for TaskPriorityQueue.PendingTask);
LABEL_43:
      uint64_t v75 = v100;
      sub_243748C74(v72, v100, type metadata accessor for TaskPriorityQueue.PendingTask);
      sub_243748C74((uint64_t)v35, v72, type metadata accessor for TaskPriorityQueue.PendingTask);
      sub_243748C74(v75, (uint64_t)v35, type metadata accessor for TaskPriorityQueue.PendingTask);
      goto LABEL_5;
    }
    if ((sub_2439587D0() & 1) == 0) {
      goto LABEL_4;
    }
    sub_243748C14((uint64_t)v63, type metadata accessor for TaskPriorityQueue.PendingTask);
    if (v74 < v73) {
      goto LABEL_43;
    }
LABEL_5:
    uint64_t v37 = (4 * a1) | 3;
    uint64_t v38 = 4 * a1 + 6;
    a2 = v104 + 2;
    a4 = v97;
  }
  while (v38 < v97);
  uint64_t v76 = v104 + 4;
  uint64_t v13 = v95;
  uint64_t v10 = v96;
LABEL_51:
  uint64_t v78 = (2 * a1) | 1;
  if (v78 >= a4) {
    goto LABEL_55;
  }
  uint64_t v105 = sub_24374A4B8(v78, a2 + 1, v37, v76, a3, a4);
  uint64_t v79 = a3 + v105 * v36;
  sub_243748CDC(v79, (uint64_t)v13, type metadata accessor for TaskPriorityQueue.PendingTask);
  uint64_t v80 = *v35;
  uint64_t v81 = *v13;
  if (*v35 == *v13)
  {
    uint64_t v82 = (uint64_t)v13;
    goto LABEL_54;
  }
  size_t v109 = (uint64_t *)v79;
  uint64_t v96 = v10;
  uint64_t v83 = (uint64_t)v35 + *(int *)(v110 + 20);
  char v84 = sub_2439587C0();
  uint64_t v108 = (uint64_t *)v83;
  if (v84)
  {
    sub_243748C14((uint64_t)v13, type metadata accessor for TaskPriorityQueue.PendingTask);
    goto LABEL_59;
  }
  if ((sub_2439587D0() & 1) == 0)
  {
    uint64_t v82 = (uint64_t)v13;
LABEL_54:
    sub_243748C14(v82, type metadata accessor for TaskPriorityQueue.PendingTask);
    goto LABEL_55;
  }
  sub_243748C14((uint64_t)v13, type metadata accessor for TaskPriorityQueue.PendingTask);
  if (v81 >= v80)
  {
LABEL_55:
    uint64_t v77 = a1;
    return sub_243748C74((uint64_t)v35, a3 + v77 * v36, type metadata accessor for TaskPriorityQueue.PendingTask);
  }
LABEL_59:
  uint64_t v85 = v100;
  sub_243748C74((uint64_t)v109, v100, type metadata accessor for TaskPriorityQueue.PendingTask);
  sub_243748C74(v85, a3 + a1 * v36, type metadata accessor for TaskPriorityQueue.PendingTask);
  uint64_t v77 = v105;
  if (v105 >= v37)
  {
    uint64_t v86 = v105 - 1;
    if (v105 - 1 < 0) {
      uint64_t v86 = v105;
    }
    uint64_t v87 = v86 >> 1;
    uint64_t v88 = a3 + (v86 >> 1) * v36;
    int v89 = (uint64_t *)v96;
    sub_243748CDC(v88, (uint64_t)v96, type metadata accessor for TaskPriorityQueue.PendingTask);
    uint64_t v90 = *v35;
    uint64_t v91 = *v89;
    if (*v35 == *v89)
    {
      uint64_t v92 = (uint64_t)v89;
      goto LABEL_64;
    }
    int v107 = (uint64_t *)v87;
    if (sub_2439587C0())
    {
      sub_243748C14((uint64_t)v89, type metadata accessor for TaskPriorityQueue.PendingTask);
      goto LABEL_72;
    }
    if (sub_2439587D0())
    {
      sub_243748C14((uint64_t)v96, type metadata accessor for TaskPriorityQueue.PendingTask);
      if (v91 < v90)
      {
LABEL_72:
        uint64_t v93 = v88;
        uint64_t v94 = v100;
        sub_243748C74(v93, v100, type metadata accessor for TaskPriorityQueue.PendingTask);
        sub_243748C74(v94, (uint64_t)v109, type metadata accessor for TaskPriorityQueue.PendingTask);
        uint64_t v77 = (uint64_t)v107;
      }
    }
    else
    {
      uint64_t v92 = (uint64_t)v96;
LABEL_64:
      sub_243748C14(v92, type metadata accessor for TaskPriorityQueue.PendingTask);
    }
  }
  return sub_243748C74((uint64_t)v35, a3 + v77 * v36, type metadata accessor for TaskPriorityQueue.PendingTask);
}

uint64_t sub_24374A4B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v75 = a2;
  uint64_t v76 = a5;
  uint64_t v74 = a4;
  uint64_t v8 = type metadata accessor for TaskPriorityQueue.PendingTask(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (uint64_t *)((char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (uint64_t *)((char *)&v71 - v13);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v19 = (uint64_t *)((char *)&v71 - v18);
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v22 = (uint64_t *)((char *)&v71 - v21);
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  uint64_t v25 = (uint64_t *)((char *)&v71 - v24);
  uint64_t v26 = MEMORY[0x270FA5388](v23);
  uint64_t v28 = (uint64_t *)((char *)&v71 - v27);
  uint64_t v29 = MEMORY[0x270FA5388](v26);
  uint64_t v31 = (uint64_t *)((char *)&v71 - v30);
  uint64_t v32 = MEMORY[0x270FA5388](v29);
  uint64_t v38 = (uint64_t *)((char *)&v71 - v35);
  if (v36 >= a6)
  {
    uint64_t v45 = a1 + 1;
    if (a1 + 1 < a6)
    {
      uint64_t v46 = *(void *)(v34 + 72);
      uint64_t v47 = v76;
      sub_243748CDC(v76 + v46 * a1, (uint64_t)v14, type metadata accessor for TaskPriorityQueue.PendingTask);
      sub_243748CDC(v47 + v46 * v45, (uint64_t)v11, type metadata accessor for TaskPriorityQueue.PendingTask);
      uint64_t v48 = *v14;
      uint64_t v49 = *v11;
      if (*v14 == *v11)
      {
        uint64_t v45 = a1;
      }
      else if ((sub_2439587C0() & 1) == 0 && ((v49 < v48) & sub_2439587D0()) == 0)
      {
        uint64_t v45 = a1;
      }
      sub_243748C14((uint64_t)v11, type metadata accessor for TaskPriorityQueue.PendingTask);
      sub_243748C14((uint64_t)v14, type metadata accessor for TaskPriorityQueue.PendingTask);
      return v45;
    }
  }
  else
  {
    uint64_t v39 = *(void *)(v34 + 72);
    uint64_t v73 = v32;
    if (v36 + 2 >= a6)
    {
      uint64_t v71 = (uint64_t *)v37;
      uint64_t v72 = (uint64_t *)v33;
      ++a1;
      uint64_t v50 = v76;
      uint64_t v51 = v36;
      sub_243748CDC(v76 + v39 * a1, (uint64_t)v28, type metadata accessor for TaskPriorityQueue.PendingTask);
      uint64_t v52 = v51;
      sub_243748CDC(v50 + v39 * v51, (uint64_t)v25, type metadata accessor for TaskPriorityQueue.PendingTask);
      uint64_t v53 = *v28;
      uint64_t v54 = *v25;
      if (*v28 == *v25)
      {
        char v55 = 0;
      }
      else if (sub_2439587C0())
      {
        char v55 = 1;
      }
      else
      {
        char v55 = (v54 < v53) & sub_2439587D0();
      }
      sub_243748C14((uint64_t)v25, type metadata accessor for TaskPriorityQueue.PendingTask);
      sub_243748C14((uint64_t)v28, type metadata accessor for TaskPriorityQueue.PendingTask);
      if (v55) {
        a1 = v52;
      }
      if (v52 + 1 < a6)
      {
        uint64_t v62 = v76;
        unint64_t v63 = v72;
        sub_243748CDC(v76 + a1 * v39, (uint64_t)v72, type metadata accessor for TaskPriorityQueue.PendingTask);
        uint64_t v64 = v62 + v39 * (v52 + 1);
        uint64_t v65 = v71;
        sub_243748CDC(v64, (uint64_t)v71, type metadata accessor for TaskPriorityQueue.PendingTask);
        uint64_t v66 = (uint64_t)v65;
        uint64_t v67 = *v63;
        uint64_t v68 = *v65;
        if (v67 == *v65)
        {
          BOOL v69 = 0;
        }
        else
        {
          BOOL v69 = (sub_2439587C0() & 1) != 0 || (v68 < v67) & sub_2439587D0();
          uint64_t v66 = (uint64_t)v71;
        }
        sub_243748C14(v66, type metadata accessor for TaskPriorityQueue.PendingTask);
        sub_243748C14((uint64_t)v72, type metadata accessor for TaskPriorityQueue.PendingTask);
        if (v69) {
          return v52 + 1;
        }
      }
    }
    else
    {
      uint64_t v72 = (uint64_t *)(v36 + 2);
      uint64_t v40 = v36 + 1;
      uint64_t v75 = v36;
      uint64_t v41 = v39 * v36;
      uint64_t v42 = v76;
      sub_243748CDC(v76 + v39 * v36, (uint64_t)&v71 - v35, type metadata accessor for TaskPriorityQueue.PendingTask);
      sub_243748CDC(v42 + v39 * v40, (uint64_t)v31, type metadata accessor for TaskPriorityQueue.PendingTask);
      uint64_t v43 = *v38;
      uint64_t v44 = *v31;
      if (*v38 != *v31)
      {
        uint64_t v71 = (uint64_t *)((char *)v38 + *(int *)(v73 + 20));
        if (sub_2439587C0())
        {
          uint64_t v41 = v39 * v40;
          uint64_t v75 = v40;
        }
        else
        {
          BOOL v56 = ((v44 < v43) & sub_2439587D0()) == 0;
          uint64_t v57 = v75;
          if (!v56) {
            uint64_t v57 = v40;
          }
          uint64_t v75 = v57;
          uint64_t v41 = v57 * v39;
        }
      }
      uint64_t v58 = (uint64_t)v72;
      sub_243748C14((uint64_t)v31, type metadata accessor for TaskPriorityQueue.PendingTask);
      sub_243748C14((uint64_t)v38, type metadata accessor for TaskPriorityQueue.PendingTask);
      uint64_t v59 = v76;
      sub_243748CDC(v76 + v41, (uint64_t)v22, type metadata accessor for TaskPriorityQueue.PendingTask);
      sub_243748CDC(v59 + v39 * v58, (uint64_t)v19, type metadata accessor for TaskPriorityQueue.PendingTask);
      uint64_t v60 = *v22;
      uint64_t v61 = *v19;
      if (*v22 == *v19)
      {
        a1 = v75;
      }
      else
      {
        a1 = v58;
        if ((sub_2439587C0() & 1) == 0)
        {
          if (((v61 < v60) & sub_2439587D0()) != 0) {
            a1 = v58;
          }
          else {
            a1 = v75;
          }
        }
      }
      sub_243748C14((uint64_t)v19, type metadata accessor for TaskPriorityQueue.PendingTask);
      sub_243748C14((uint64_t)v22, type metadata accessor for TaskPriorityQueue.PendingTask);
    }
  }
  return a1;
}

uint64_t sub_24374AB0C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24374AB1C(char a1)
{
  **(unsigned char **)(*(void *)(*(void *)(v1 + 16) + 64) + 40) = a1 & 1;
  return swift_continuation_resume();
}

uint64_t sub_24374AB44(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 24);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_24337AF78;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_268D9F458 + dword_268D9F458);
  return v6(a1, v4);
}

uint64_t sub_24374AC0C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24374AC1C()
{
  return swift_continuation_throwingResume();
}

uint64_t *sub_24374AC24(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_243958800();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = *(int *)(a3 + 24);
    uint64_t v12 = (uint64_t *)((char *)v4 + v11);
    uint64_t v13 = (uint64_t *)((char *)a2 + v11);
    uint64_t v14 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v14;
  }
  swift_retain();
  return v4;
}

uint64_t sub_24374AD14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_243958800();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);

  return swift_release();
}

void *sub_24374AD9C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_243958800();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  swift_retain();
  return a1;
}

void *sub_24374AE40(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_243958800();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  swift_retain();
  swift_release();
  return a1;
}

void *sub_24374AEF0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_243958800();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *sub_24374AF88(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_243958800();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_release();
  return a1;
}

uint64_t sub_24374B02C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24374B040);
}

uint64_t sub_24374B040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_243958800();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_24374B104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24374B118);
}

uint64_t sub_24374B118(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_243958800();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_24374B1D8()
{
  uint64_t result = sub_243958800();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for TaskPriorityQueue.CurrentTask.State(uint64_t a1)
{
  return sub_2437478D4(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s10FinanceKit17TaskPriorityQueueV11CurrentTaskV5StateOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_24374784C(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for TaskPriorityQueue.CurrentTask.State(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_24374784C(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_2437478D4(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for TaskPriorityQueue.CurrentTask.State(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_2437478D4(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for TaskPriorityQueue.CurrentTask.State()
{
  return &type metadata for TaskPriorityQueue.CurrentTask.State;
}

unint64_t sub_24374B394()
{
  unint64_t result = qword_268D9F478;
  if (!qword_268D9F478)
  {
    type metadata accessor for TaskPriorityQueue.PendingTask(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F478);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TaskPriorityQueue.TaskEvent(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24374B4B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TaskPriorityQueue.TaskEvent()
{
  return &type metadata for TaskPriorityQueue.TaskEvent;
}

unint64_t sub_24374B4F4()
{
  unint64_t result = qword_268D9F480;
  if (!qword_268D9F480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F480);
  }
  return result;
}

uint64_t ManagedAuthorizationSessionImporter.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t ManagedAuthorizationSessionImporter.init()()
{
  return v0;
}

void ManagedAuthorizationSessionImporter.replaceCurrentSession(with:context:)(uint64_t a1, void *a2)
{
  type metadata accessor for ManagedAuthorizationSession();
  static ManagedAuthorizationSession.deleteAllSessions(in:)(a2);
  if (!v2) {
    sub_24370E894(a1, a2);
  }
}

uint64_t ManagedAuthorizationSessionImporter.deinit()
{
  return v0;
}

uint64_t ManagedAuthorizationSessionImporter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ManagedAuthorizationSessionImporter()
{
  return self;
}

uint64_t method lookup function for ManagedAuthorizationSessionImporter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ManagedAuthorizationSessionImporter);
}

uint64_t dispatch thunk of ManagedAuthorizationSessionImporter.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t sub_24374B62C(int *a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = (uint64_t)v1 + a1[5];
  unsigned int v4 = *(uint64_t **)((char *)v1 + a1[6]);
  char v5 = *((unsigned char *)v1 + a1[8]);
  uint64_t v6 = *__swift_project_boxed_opaque_existential_1((uint64_t **)((char *)v1 + a1[7]), *(uint64_t *)((char *)v1 + a1[7] + 24));
  id v7 = v4;
  uint64_t v8 = sub_24374CD20(v3, v4, v5, v6, v2);

  return v8;
}

void FinanceStore.transactionHistory(forAccountID:since:isMonitoring:)(uint64_t a1@<X0>, void **a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = *a2;
  static DeviceInfo.deviceType.getter(&v17);
  if (v17)
  {
    __break(1u);
  }
  else
  {
    uint64_t v9 = *(void *)(v4 + 16);
    uint64_t v10 = (int *)_s34TransactionHistoryIteratorProviderVMa();
    a4[3] = (uint64_t)v10;
    a4[4] = sub_24374CCD8(&qword_268D9F488, (void (*)(uint64_t))_s34TransactionHistoryIteratorProviderVMa);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(a4);
    unint64_t v12 = (char *)boxed_opaque_existential_0 + v10[5];
    uint64_t v13 = sub_243957490();
    uint64_t v14 = *(void *)(v13 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v12, a1, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
    uint64_t v15 = (uint64_t *)((char *)boxed_opaque_existential_0 + v10[7]);
    v15[3] = type metadata accessor for FinanceStore();
    _OWORD v15[4] = &off_26F8C2700;
    *uint64_t v15 = v4;
    uint64_t *boxed_opaque_existential_0 = v9;
    *(uint64_t *)((char *)boxed_opaque_existential_0 + v10[6]) = (uint64_t)v8;
    *((unsigned char *)boxed_opaque_existential_0 + v10[8]) = a3 & 1;
    id v16 = v8;
    swift_retain();
    swift_retain();
  }
}

uint64_t _s34TransactionHistoryIteratorProviderVMa()
{
  uint64_t result = qword_268D9F4B0;
  if (!qword_268D9F4B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24374B890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_24374B8B4, 0, 0);
}

uint64_t sub_24374B8B4()
{
  id v7 = v0;
  v6[0] = 2;
  if (FinanceStore.isDataRestricted(for:)(v6))
  {
    sub_24337C0AC();
    swift_allocError();
    unsigned char *v1 = 2;
    swift_willThrow();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    uint64_t v4 = (void *)swift_task_alloc();
    v0[5] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_24340A290;
    uint64_t v5 = v0[4];
    return sub_243505924(v5);
  }
}

uint64_t FinanceStore.transactions(query:)(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return MEMORY[0x270FA2498](sub_24374B9F0, 0, 0);
}

void sub_24374B9F0()
{
  uint64_t v5 = v0;
  static DeviceInfo.deviceType.getter(&v4);
  if (v4)
  {
    __break(1u);
  }
  else
  {
    uint64_t v1 = (int8x16_t *)swift_task_alloc();
    *(void *)(v0 + 40) = v1;
    v1[1] = vextq_s8(*(int8x16_t *)(v0 + 24), *(int8x16_t *)(v0 + 24), 8uLL);
    uint64_t v3 = (void (*)(int *))((char *)&dword_268D98590 + dword_268D98590);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 48) = v2;
    void *v2 = v0;
    v2[1] = sub_24374BAD8;
    v3((int *)&unk_268D9F4A0);
  }
}

uint64_t sub_24374BAD8(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 56) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x270FA2498](sub_24374BC30, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t sub_24374BC30()
{
  uint64_t v1 = *(void **)(v0 + 56);
  swift_task_dealloc();
  *(void *)(v0 + 16) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C7A50);
  if ((swift_dynamicCast() & 1) != 0 && *(unsigned char *)(v0 + 64) == 4) {
    return sub_243959540();
  }

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_24374BD50(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_24337AF78;
  *(_OWORD *)(v4 + 24) = v5;
  *(void *)(v4 + 16) = a1;
  return MEMORY[0x270FA2498](sub_24374B8B4, 0, 0);
}

void FinanceStore.transactionHistory(since:isMonitoring:)(void **a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = *a1;
  static DeviceInfo.deviceType.getter(&v14);
  if (v14)
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = *(void *)(v3 + 16);
    uint64_t v8 = (int *)_s34TransactionHistoryIteratorProviderVMa();
    a3[3] = (uint64_t)v8;
    a3[4] = sub_24374CCD8(&qword_268D9F488, (void (*)(uint64_t))_s34TransactionHistoryIteratorProviderVMa);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(a3);
    uint64_t v10 = (char *)boxed_opaque_existential_0 + v8[5];
    uint64_t v11 = sub_243957490();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
    unint64_t v12 = (uint64_t *)((char *)boxed_opaque_existential_0 + v8[7]);
    v12[3] = type metadata accessor for FinanceStore();
    void v12[4] = &off_26F8C2700;
    *unint64_t v12 = v3;
    uint64_t *boxed_opaque_existential_0 = v7;
    *(uint64_t *)((char *)boxed_opaque_existential_0 + v8[6]) = (uint64_t)v6;
    *((unsigned char *)boxed_opaque_existential_0 + v8[8]) = a2 & 1;
    id v13 = v6;
    swift_retain();
    swift_retain();
  }
}

uint64_t FinanceStore.privateTransactions(query:)(uint64_t *a1)
{
  uint64_t v3 = *a1;
  *(void *)(v2 + 64) = v1;
  *(void *)(v2 + 72) = v3;
  *(_OWORD *)(v2 + 80) = *(_OWORD *)(a1 + 1);
  *(unsigned char *)(v2 + 57) = *((unsigned char *)a1 + 24);
  *(void *)(v2 + 96) = a1[4];
  *(unsigned char *)(v2 + 58) = *((unsigned char *)a1 + 40);
  return MEMORY[0x270FA2498](sub_24374BF9C, 0, 0);
}

void sub_24374BF9C()
{
  uint64_t v9 = v0;
  static DeviceInfo.deviceType.getter(&v7);
  if (v7)
  {
    __break(1u);
  }
  else
  {
    v8[0] = 2;
    if (FinanceStore.isDataRestricted(for:)(v8))
    {
      sub_24337C0AC();
      swift_allocError();
      unsigned char *v1 = 2;
      swift_willThrow();
      uint64_t v2 = *(void (**)(void))(v0 + 8);
      v2();
    }
    else
    {
      char v3 = *(unsigned char *)(v0 + 58);
      uint64_t v4 = *(void *)(v0 + 96);
      char v5 = *(unsigned char *)(v0 + 57);
      *(void *)(v0 + 16) = *(void *)(v0 + 72);
      *(_OWORD *)(v0 + 24) = *(_OWORD *)(v0 + 80);
      *(unsigned char *)(v0 + 40) = v5;
      *(void *)(v0 + 48) = v4;
      *(unsigned char *)(v0 + 56) = v3;
      uint64_t v6 = (void *)swift_task_alloc();
      *(void *)(v0 + 104) = v6;
      *uint64_t v6 = v0;
      v6[1] = sub_24340AF1C;
      sub_243506D4C((_OWORD *)(v0 + 16));
    }
  }
}

void *sub_24374C0F0(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    char v7 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    char v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_243957490();
    uint64_t v12 = *(void *)(v11 - 8);
    id v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_retain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C7270);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v15 = a3[6];
    uint64_t v16 = a3[7];
    char v17 = *(void **)((char *)a2 + v15);
    *(void *)((char *)v7 + v15) = v17;
    uint64_t v18 = (char *)v7 + v16;
    uint64_t v19 = (char *)a2 + v16;
    long long v20 = *(_OWORD *)((char *)a2 + v16 + 24);
    *(_OWORD *)((char *)v7 + v16 + 24) = v20;
    uint64_t v21 = v20;
    uint64_t v22 = **(void (***)(char *, char *, uint64_t))(v20 - 8);
    id v23 = v17;
    v22(v18, v19, v21);
    *((unsigned char *)v7 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  }
  return v7;
}

uint64_t sub_24374C2E8(uint64_t a1, int *a2)
{
  swift_release();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_243957490();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }

  uint64_t v7 = a1 + a2[7];

  return __swift_destroy_boxed_opaque_existential_0(v7);
}

void *sub_24374C3C4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_243957490();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_retain();
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C7270);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = a3[7];
  uint64_t v15 = *(void **)((char *)a2 + v13);
  *(void *)((char *)a1 + v13) = v15;
  uint64_t v16 = (char *)a1 + v14;
  char v17 = (char *)a2 + v14;
  long long v18 = *(_OWORD *)((char *)a2 + v14 + 24);
  *(_OWORD *)((char *)a1 + v14 + 24) = v18;
  uint64_t v19 = v18;
  long long v20 = **(void (***)(char *, char *, uint64_t))(v18 - 8);
  id v21 = v15;
  v20(v16, v17, v19);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

void *sub_24374C55C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_243957490();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C7270);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = *(void **)((char *)a1 + v15);
  char v17 = *(void **)((char *)a2 + v15);
  *(void *)((char *)a1 + v15) = v17;
  id v18 = v17;

  __swift_assign_boxed_opaque_existential_1((void *)((char *)a1 + a3[7]), (void *)((char *)a2 + a3[7]));
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

void *sub_24374C728(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_243957490();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C7270);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  int v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  long long v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)int v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  *((void *)v13 + 4) = *((void *)v14 + 4);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

void *sub_24374C87C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_243957490();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C7270);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = *(void **)((char *)a1 + v15);
  *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);

  uint64_t v17 = a3[7];
  id v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1 + v17);
  long long v20 = *((_OWORD *)v19 + 1);
  *(_OWORD *)id v18 = *(_OWORD *)v19;
  *((_OWORD *)v18 + 1) = v20;
  *((void *)v18 + 4) = *((void *)v19 + 4);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

uint64_t sub_24374CA50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24374CA64);
}

uint64_t sub_24374CA64(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C7270);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_24374CB18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24374CB2C);
}

void *sub_24374CB2C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C7270);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_24374CBD8()
{
  sub_24352EF34();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_24374CC90()
{
  return sub_24374CCD8(&qword_268D9F4C0, (void (*)(uint64_t))type metadata accessor for Transaction);
}

uint64_t sub_24374CCD8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24374CD20(uint64_t a1, void *a2, char a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v10 = *a5;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C7270);
  MEMORY[0x270FA5388](v11 - 8);
  int v13 = &v27[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v32[3] = type metadata accessor for FinanceStore();
  v32[4] = &off_26F8C2700;
  v32[0] = a4;
  sub_24340BD48(a1, (uint64_t)v13);
  sub_24338E428((uint64_t)v32, (uint64_t)v30);
  id v14 = a2;
  swift_retain();
  id v15 = sub_24350B648();
  uint64_t v16 = (os_unfair_lock_s *)a5[2];
  uint64_t v28 = v10;
  uint64_t v17 = v16 + 4;
  id v18 = v16 + 6;
  os_unfair_lock_lock(v16 + 6);
  sub_24340B708(v17, &v29);
  os_unfair_lock_unlock(v18);
  uint64_t v19 = v29;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F4C8);
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v30, v31);
  MEMORY[0x270FA5388](v21);
  id v23 = (uint64_t *)&v27[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(uint64_t *))(v24 + 16))(v23);
  uint64_t v25 = sub_24374CF7C((uint64_t)v13, (unint64_t)a2, a3 & 1, *v23, 0, v15, v19, v20);

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v30);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v32);
  return v25;
}

uint64_t sub_24374CF7C(uint64_t a1, unint64_t a2, char a3, uint64_t a4, uint64_t a5, void *a6, id *a7, uint64_t a8)
{
  uint64_t v52 = a6;
  uint64_t v54 = a5;
  LOBYTE(v11) = a3;
  uint64_t v14 = sub_243958D10();
  uint64_t v55 = *(void *)(v14 - 8);
  uint64_t v56 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for FinanceStore();
  unint64_t v63 = &off_26F8C2700;
  *(unsigned char *)(a8 + 16) = 0;
  *(void *)(a8 + 24) = MEMORY[0x263F8EE78];
  *(void *)(a8 + qword_268E17EB0) = 0;
  uint64_t v62 = v17;
  v61[0] = a4;
  unint64_t v18 = qword_268E17EB8;
  *(void *)(a8 + qword_268E17EB8) = 0;
  uint64_t v19 = a8 + qword_268E17EF0;
  uint64_t v20 = qword_268D96B88;
  swift_retain();
  if (v20 != -1) {
LABEL_25:
  }
    swift_once();
  uint64_t v21 = sub_243957B10();
  uint64_t v22 = __swift_project_value_buffer(v21, (uint64_t)qword_268D9B280);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v22, v21);
  uint64_t v53 = a1;
  sub_24340BD48(a1, a8 + qword_268E17ED0);
  *(unsigned char *)(a8 + 32) = v11 & 1;
  *(void *)(a8 + qword_268E17EA8) = a7;
  id v23 = (uint64_t (**)@<X0>(void *@<X0>, uint64_t@<X8>))(a8 + qword_268E17EE0);
  *id v23 = sub_24374D5A0;
  v23[1] = 0;
  uint64_t v24 = *(void **)(a8 + v18);
  *(void *)(a8 + v18) = a2;
  swift_retain();

  uint64_t v25 = *__swift_project_boxed_opaque_existential_1(v61, v17);
  uint64_t v59 = v17;
  uint64_t v60 = &off_26F8C2700;
  v58[0] = v25;
  sub_24338E428((uint64_t)v58, (uint64_t)v57);
  uint64_t v26 = swift_allocObject();
  sub_2433A857C(v57, v26 + 16);
  swift_retain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v58);
  uint64_t v27 = (void *)(a8 + qword_268E17EC0);
  *uint64_t v27 = &unk_268D98578;
  v27[1] = v26;
  uint64_t v28 = *__swift_project_boxed_opaque_existential_1(v61, v62);
  uint64_t v59 = v17;
  uint64_t v60 = &off_26F8C2700;
  v58[0] = v28;
  sub_24338E428((uint64_t)v58, (uint64_t)v57);
  uint64_t v29 = swift_allocObject();
  sub_2433A857C(v57, v29 + 16);
  swift_retain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v58);
  uint64_t v30 = (void *)(a8 + qword_268E17EC8);
  void *v30 = &unk_268D9A9D0;
  v30[1] = v29;
  *(void *)(a8 + qword_268E17ED8) = v54;
  id v31 = objc_msgSend(self, sel_defaultCenter);
  sub_243958D20();

  sub_243958CF0();
  (*(void (**)(uint64_t, char *, uint64_t))(v55 + 32))(a8 + qword_268E17E98, v16, v56);
  id v32 = objc_msgSend(a7[2], sel_persistentStoreCoordinator);
  id v33 = objc_msgSend(v32, sel_persistentStores);

  sub_24340BFDC();
  unint64_t v18 = sub_243958650();

  if (!(v18 >> 62))
  {
    a1 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (a1) {
      goto LABEL_4;
    }
LABEL_15:
    swift_bridgeObjectRelease_n();
LABEL_20:
    uint64_t v41 = 0;
    uint64_t v43 = 0;
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  a1 = sub_243959550();
  if (!a1) {
    goto LABEL_15;
  }
LABEL_4:
  a2 = v18 & 0xC000000000000001;
  uint64_t v11 = 4;
  while (1)
  {
    uint64_t v19 = v11 - 4;
    if (a2) {
      uint64_t v34 = (id *)MEMORY[0x24567E5D0](v11 - 4, v18);
    }
    else {
      uint64_t v34 = (id *)*(id *)(v18 + 8 * v11);
    }
    a7 = v34;
    uint64_t v17 = v11 - 3;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    id v35 = objc_msgSend(v34, sel_configurationName);
    uint64_t v16 = (char *)sub_2439582D0();
    uint64_t v37 = v36;

    if (v16 == (char *)0x6C61636F4CLL && v37 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
    char v39 = sub_243959940();
    swift_bridgeObjectRelease();
    if (v39) {
      break;
    }

    ++v11;
    if (v17 == a1) {
      goto LABEL_15;
    }
  }
  swift_bridgeObjectRelease_n();
LABEL_18:
  id v40 = objc_msgSend(a7, sel_identifier);

  if (!v40) {
    goto LABEL_20;
  }
  uint64_t v41 = sub_2439582D0();
  uint64_t v43 = v42;

LABEL_21:
  uint64_t v44 = v52;
  uint64_t v45 = v53;
  uint64_t v46 = (uint64_t *)(a8 + qword_268E17EA0);
  uint64_t *v46 = v41;
  v46[1] = v43;
  *(void *)(a8 + qword_268E17EE8) = v44;
  uint64_t v47 = qword_26B0C7DF8;
  id v48 = v44;
  if (v47 != -1) {
    swift_once();
  }
  os_activity_t v49 = _os_activity_create(&dword_243363000, "FinancialDataAsyncIterator", (os_activity_t)qword_26B0C7DF0, OS_ACTIVITY_FLAG_DETACHED);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v61);
  sub_24340C01C(v45);
  *(void *)(a8 + qword_268E17EF8) = v49;
  return a8;
}

uint64_t sub_24374D5A0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Transaction.init(_:)(a1, a2);
}

uint64_t sub_24374D5D4()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t OrderedDateFormatter.init(configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24374F90C(a1, a2, (uint64_t (*)(void))type metadata accessor for FormatterConfiguration);
}

uint64_t OrderedDateFormatter.format(_:now:)(uint64_t a1, uint64_t a2)
{
  uint64_t v97 = a2;
  uint64_t v4 = sub_243956E80();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_243957740();
  uint64_t v93 = *(void *)(v95 - 8);
  MEMORY[0x270FA5388](v95);
  uint64_t v94 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_243957560();
  uint64_t v90 = *(void *)(v8 - 8);
  uint64_t v91 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v92 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268DA2290);
  MEMORY[0x270FA5388](v10 - 8);
  int v89 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D98710);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v86 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_243957270();
  uint64_t v87 = *(void *)(v14 - 8);
  uint64_t v88 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v85 = (char *)&v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_2439576D0();
  uint64_t v101 = *(void *)(v16 - 8);
  uint64_t v102 = v16;
  MEMORY[0x270FA5388](v16);
  unint64_t v18 = (char *)&v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_243957570();
  uint64_t v83 = *(void *)(v19 - 8);
  uint64_t v84 = v19;
  MEMORY[0x270FA5388](v19);
  uint64_t v82 = (char *)&v75 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_2439576F0();
  uint64_t v98 = *(void *)(v21 - 8);
  uint64_t v99 = v21;
  MEMORY[0x270FA5388](v21);
  uint64_t v100 = (char *)&v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v23 = (int *)type metadata accessor for WeekdayCustomFormatter();
  MEMORY[0x270FA5388](v23);
  uint64_t v96 = (uint64_t)&v75 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_243956820();
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v28 = (char *)&v75 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = type metadata accessor for FormatterConfiguration();
  uint64_t v29 = v2 + *(int *)(v81 + 20);
  if (sub_2439575A0())
  {
    if (qword_26B0C7FA0 == -1) {
      goto LABEL_6;
    }
    goto LABEL_21;
  }
  if (sub_243957600())
  {
    if (qword_26B0C7FA0 == -1)
    {
LABEL_6:
      uint64_t v30 = (void *)qword_26B0C7F98;
      id v31 = (void *)sub_2439582A0();
      id v32 = (void *)sub_2439582A0();
      id v33 = (void *)sub_2439582A0();
      id v34 = objc_msgSend(v30, sel_localizedStringForKey_value_table_, v31, v32, v33);

      uint64_t v35 = sub_2439582D0();
      return v35;
    }
LABEL_21:
    swift_once();
    goto LABEL_6;
  }
  uint64_t v78 = v18;
  uint64_t v79 = v6;
  uint64_t v80 = v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268D9F760);
  uint64_t v37 = v101;
  unint64_t v38 = (*(unsigned __int8 *)(v101 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80);
  uint64_t v39 = swift_allocObject();
  long long v75 = xmmword_24395EAE0;
  *(_OWORD *)(v39 + 16) = xmmword_24395EAE0;
  uint64_t v40 = *MEMORY[0x263F07870];
  uint64_t v41 = *(void (**)(char *, void, uint64_t))(v37 + 104);
  uint64_t v77 = v37 + 104;
  uint64_t v76 = v41;
  v41((char *)(v39 + v38), v40, v102);
  sub_24368A548(v39);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_2439575C0();
  swift_bridgeObjectRelease();
  uint64_t v42 = sub_243956740();
  LOBYTE(v38) = v43;
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
  if ((v38 & 1) != 0 || (unint64_t)(v42 + 1) < 0xFFFFFFFFFFFFFFFALL)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E30);
    uint64_t v61 = swift_allocObject();
    *(_OWORD *)(v61 + 16) = v75;
    uint64_t v62 = v86;
    sub_243957130();
    uint64_t v63 = sub_243957160();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v62, 0, 1, v63);
    uint64_t v64 = sub_243957140();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v89, 1, 1, v64);
    uint64_t v65 = v80;
    (*(void (**)(char *, uint64_t, uint64_t))(v90 + 16))(v92, v80, v91);
    (*(void (**)(char *, uint64_t, uint64_t))(v98 + 16))(v100, v29, v99);
    (*(void (**)(char *, uint64_t, uint64_t))(v93 + 16))(v94, v65 + *(int *)(v81 + 24), v95);
    sub_243956E70();
    uint64_t v66 = v85;
    sub_243957180();
    uint64_t v67 = sub_243957250();
    uint64_t v69 = v68;
    (*(void (**)(char *, uint64_t))(v87 + 8))(v66, v88);
    *(void *)(v61 + 56) = MEMORY[0x263F8D310];
    *(void *)(v61 + 64) = sub_24337BF04();
    *(void *)(v61 + 32) = v67;
    *(void *)(v61 + 40) = v69;
    if (qword_26B0C7FA0 != -1) {
      swift_once();
    }
    uint64_t v70 = (void *)qword_26B0C7F98;
    uint64_t v71 = (void *)sub_2439582A0();
    uint64_t v72 = (void *)sub_2439582A0();
    uint64_t v73 = (void *)sub_2439582A0();
    id v74 = objc_msgSend(v70, sel_localizedStringForKey_value_table_, v71, v72, v73);

    sub_2439582D0();
    uint64_t v35 = sub_243958310();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v44 = v96;
    sub_243674A44(v80, v96);
    uint64_t v45 = v23[5];
    uint64_t v97 = a1;
    uint64_t v46 = (uint64_t (**)())(v44 + v45);
    uint64_t *v46 = sub_24374E340;
    v46[1] = 0;
    uint64_t v95 = (uint64_t)v46;
    uint64_t v47 = (uint64_t (**)(uint64_t))(v44 + v23[6]);
    uint64_t *v47 = (uint64_t (*)(uint64_t))sub_24374E440;
    v47[1] = 0;
    id v48 = (uint64_t (**)())(v44 + v23[7]);
    *id v48 = sub_24374E540;
    v48[1] = 0;
    os_activity_t v49 = (uint64_t (**)())(v44 + v23[8]);
    *os_activity_t v49 = sub_24374E640;
    v49[1] = 0;
    uint64_t v50 = (uint64_t (**)())(v44 + v23[9]);
    void *v50 = sub_24374E740;
    v50[1] = 0;
    uint64_t v51 = (uint64_t (**)())(v44 + v23[10]);
    char *v51 = sub_24374E840;
    v51[1] = 0;
    uint64_t v52 = (uint64_t (**)())(v44 + v23[11]);
    *uint64_t v52 = sub_24374E940;
    v52[1] = 0;
    uint64_t v53 = v82;
    uint64_t v54 = v83;
    uint64_t v55 = v84;
    (*(void (**)(char *, void, uint64_t))(v83 + 104))(v82, *MEMORY[0x263F07718], v84);
    uint64_t v56 = v100;
    sub_243957580();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v53, v55);
    uint64_t v57 = v78;
    uint64_t v58 = v102;
    v76(v78, *MEMORY[0x263F078E8], v102);
    uint64_t v59 = sub_2439576E0();
    (*(void (**)(char *, uint64_t))(v101 + 8))(v57, v58);
    uint64_t v60 = (*(uint64_t (**)(char *, uint64_t))(v98 + 8))(v56, v99);
    switch(v59)
    {
      case 1:
        uint64_t v47 = (uint64_t (**)(uint64_t))v95;
        break;
      case 2:
        break;
      case 3:
        uint64_t v47 = (uint64_t (**)(uint64_t))v48;
        break;
      case 4:
        uint64_t v47 = (uint64_t (**)(uint64_t))v49;
        break;
      case 5:
        uint64_t v47 = (uint64_t (**)(uint64_t))v50;
        break;
      case 6:
        uint64_t v47 = (uint64_t (**)(uint64_t))v51;
        break;
      case 7:
        uint64_t v47 = (uint64_t (**)(uint64_t))v52;
        break;
      default:
        sub_243959540();
        __break(1u);
        JUMPOUT(0x24374E324);
    }
    uint64_t v35 = (*v47)(v60);
    sub_24374F810(v96);
  }
  return v35;
}

uint64_t sub_24374E340()
{
  if (qword_26B0C7FA0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_26B0C7F98;
  uint64_t v1 = (void *)sub_2439582A0();
  uint64_t v2 = (void *)sub_2439582A0();
  int v3 = (void *)sub_2439582A0();
  id v4 = objc_msgSend(v0, sel_localizedStringForKey_value_table_, v1, v2, v3);

  uint64_t v5 = sub_2439582D0();
  return v5;
}

uint64_t sub_24374E440()
{
  if (qword_26B0C7FA0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_26B0C7F98;
  uint64_t v1 = (void *)sub_2439582A0();
  uint64_t v2 = (void *)sub_2439582A0();
  int v3 = (void *)sub_2439582A0();
  id v4 = objc_msgSend(v0, sel_localizedStringForKey_value_table_, v1, v2, v3);

  uint64_t v5 = sub_2439582D0();
  return v5;
}

uint64_t sub_24374E540()
{
  if (qword_26B0C7FA0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_26B0C7F98;
  uint64_t v1 = (void *)sub_2439582A0();
  uint64_t v2 = (void *)sub_2439582A0();
  int v3 = (void *)sub_2439582A0();
  id v4 = objc_msgSend(v0, sel_localizedStringForKey_value_table_, v1, v2, v3);

  uint64_t v5 = sub_2439582D0();
  return v5;
}

uint64_t sub_24374E640()
{
  if (qword_26B0C7FA0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_26B0C7F98;
  uint64_t v1 = (void *)sub_2439582A0();
  uint64_t v2 = (void *)sub_2439582A0();
  int v3 = (void *)sub_2439582A0();
  id v4 = objc_msgSend(v0, sel_localizedStringForKey_value_table_, v1, v2, v3);

  uint64_t v5 = sub_2439582D0();
  return v5;
}

uint64_t sub_24374E740()
{
  if (qword_26B0C7FA0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_26B0C7F98;
  uint64_t v1 = (void *)sub_2439582A0();
  uint64_t v2 = (void *)sub_2439582A0();
  int v3 = (void *)sub_2439582A0();
  id v4 = objc_msgSend(v0, sel_localizedStringForKey_value_table_, v1, v2, v3);

  uint64_t v5 = sub_2439582D0();
  return v5;
}

uint64_t sub_24374E840()
{
  if (qword_26B0C7FA0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_26B0C7F98;
  uint64_t v1 = (void *)sub_2439582A0();
  uint64_t v2 = (void *)sub_2439582A0();
  int v3 = (void *)sub_2439582A0();
  id v4 = objc_msgSend(v0, sel_localizedStringForKey_value_table_, v1, v2, v3);

  uint64_t v5 = sub_2439582D0();
  return v5;
}

uint64_t sub_24374E940()
{
  if (qword_26B0C7FA0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_26B0C7F98;
  uint64_t v1 = (void *)sub_2439582A0();
  uint64_t v2 = (void *)sub_2439582A0();
  int v3 = (void *)sub_2439582A0();
  id v4 = objc_msgSend(v0, sel_localizedStringForKey_value_table_, v1, v2, v3);

  uint64_t v5 = sub_2439582D0();
  return v5;
}

uint64_t OrderedDateFormatter.hash(into:)()
{
  return sub_2439581D0();
}

BOOL static OrderedDateFormatter.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  BOOL result = 0;
  if (MEMORY[0x24567C750]())
  {
    uint64_t v4 = type metadata accessor for FormatterConfiguration();
    if ((MEMORY[0x24567C8B0](a1 + *(int *)(v4 + 20), a2 + *(int *)(v4 + 20)) & 1) != 0
      && (MEMORY[0x24567C9A0](a1 + *(int *)(v4 + 24), a2 + *(int *)(v4 + 24)) & 1) != 0)
    {
      return 1;
    }
  }
  return result;
}

uint64_t sub_24374EBF4(uint64_t a1)
{
  unint64_t v2 = sub_24374F86C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24374EC30(uint64_t a1)
{
  unint64_t v2 = sub_24374F86C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t OrderedDateFormatter.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F4D0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24374F86C();
  sub_243959BD0();
  type metadata accessor for FormatterConfiguration();
  sub_24374FAEC((unint64_t *)&unk_268DA22C0, (void (*)(uint64_t))type metadata accessor for FormatterConfiguration);
  sub_243959860();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t OrderedDateFormatter.hashValue.getter()
{
  return sub_243959B40();
}

uint64_t OrderedDateFormatter.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v13 = a2;
  uint64_t v4 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x270FA5388](v4);
  uint64_t v15 = (uint64_t)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F4E0);
  uint64_t v14 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for OrderedDateFormatter();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24374F86C();
  sub_243959BA0();
  if (!v2)
  {
    sub_24374FAEC(&qword_268D97EB8, (void (*)(uint64_t))type metadata accessor for FormatterConfiguration);
    sub_2439596F0();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v6);
    sub_24374F90C(v15, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatterConfiguration);
    sub_24374F90C((uint64_t)v11, v13, (uint64_t (*)(void))type metadata accessor for OrderedDateFormatter);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_24374F198@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = OrderedDateFormatter.format(_:now:)(a1, a2);
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_24374F1C0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_243957400();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2439573B0();
  uint64_t v8 = OrderedDateFormatter.format(_:now:)(a1, (uint64_t)v7);
  uint64_t v10 = v9;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *a2 = v8;
  a2[1] = v10;
  return result;
}

uint64_t sub_24374F2A8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return OrderedDateFormatter.init(from:)(a1, a2);
}

uint64_t sub_24374F2C0(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F4D0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24374F86C();
  sub_243959BD0();
  type metadata accessor for FormatterConfiguration();
  sub_24374FAEC((unint64_t *)&unk_268DA22C0, (void (*)(uint64_t))type metadata accessor for FormatterConfiguration);
  sub_243959860();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_24374F434()
{
  return sub_243959B40();
}

uint64_t sub_24374F584()
{
  return sub_2439581D0();
}

uint64_t sub_24374F6C4()
{
  return sub_243959B40();
}

uint64_t sub_24374F810(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WeekdayCustomFormatter();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_24374F86C()
{
  unint64_t result = qword_268D9F4D8;
  if (!qword_268D9F4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F4D8);
  }
  return result;
}

uint64_t type metadata accessor for OrderedDateFormatter()
{
  uint64_t result = qword_268D9F510;
  if (!qword_268D9F510) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24374F90C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24374F974(uint64_t a1)
{
  uint64_t result = sub_24374FAEC(&qword_268D9F4E8, (void (*)(uint64_t))type metadata accessor for OrderedDateFormatter);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_24374F9CC()
{
  return sub_24374FAEC(&qword_268D9F4F0, (void (*)(uint64_t))type metadata accessor for OrderedDateFormatter);
}

uint64_t sub_24374FA14()
{
  return sub_24374FAEC(&qword_268D9F4F8, (void (*)(uint64_t))type metadata accessor for OrderedDateFormatter);
}

uint64_t sub_24374FA5C()
{
  return sub_24374FAEC(&qword_268D9F500, (void (*)(uint64_t))type metadata accessor for OrderedDateFormatter);
}

uint64_t sub_24374FAA4()
{
  return sub_24374FAEC(&qword_268D9F508, (void (*)(uint64_t))type metadata accessor for OrderedDateFormatter);
}

uint64_t sub_24374FAEC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for OrderedDateFormatter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24374FB48);
}

uint64_t sub_24374FB48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatterConfiguration();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for OrderedDateFormatter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24374FBC8);
}

uint64_t sub_24374FBC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatterConfiguration();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

unsigned char *storeEnumTagSinglePayload for OrderedDateFormatter.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24374FCD4);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for OrderedDateFormatter.CodingKeys()
{
  return &type metadata for OrderedDateFormatter.CodingKeys;
}

unint64_t sub_24374FD10()
{
  unint64_t result = qword_268D9F520;
  if (!qword_268D9F520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F520);
  }
  return result;
}

unint64_t sub_24374FD68()
{
  unint64_t result = qword_268D9F528;
  if (!qword_268D9F528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F528);
  }
  return result;
}

unint64_t sub_24374FDC0()
{
  unint64_t result = qword_268D9F530;
  if (!qword_268D9F530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F530);
  }
  return result;
}

FinanceKit::BankConnectWebServicePassDetails __swiftcall BankConnectWebServicePassDetails.init(fpanId:accountIdentifier:)(Swift::String fpanId, Swift::String accountIdentifier)
{
  Swift::String *v2 = fpanId;
  v2[1] = accountIdentifier;
  result.accountIdentifier = accountIdentifier;
  result.fpanId = fpanId;
  return result;
}

uint64_t BankConnectWebServicePassLinkingRequest.init(consent:passDetails:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24374FE70(a1, a2, type metadata accessor for BankConnectWebServicePassLinkingRequest, a3);
}

uint64_t type metadata accessor for BankConnectWebServicePassLinkingRequest(uint64_t a1)
{
  return sub_24338E938(a1, (uint64_t *)&unk_268D9F538);
}

uint64_t BankConnectWebServicePassUnlinkRequest.init(consent:passDetails:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24374FE70(a1, a2, type metadata accessor for BankConnectWebServicePassUnlinkRequest, a3);
}

uint64_t sub_24374FE70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  sub_2433B2D54(a1, a4);
  uint64_t result = a3(0);
  *(void *)(a4 + *(int *)(result + 20)) = a2;
  return result;
}

uint64_t type metadata accessor for BankConnectWebServicePassUnlinkRequest(uint64_t a1)
{
  return sub_24338E938(a1, (uint64_t *)&unk_268D9F548);
}

uint64_t (*BankConnectWebServicePassLinkingRequest.consent.modify())()
{
  return nullsub_1;
}

uint64_t BankConnectWebServicePassLinkingRequest.passDetails.getter()
{
  return sub_24375003C((void (*)(void))type metadata accessor for BankConnectWebServicePassLinkingRequest);
}

uint64_t BankConnectWebServicePassLinkingRequest.passDetails.setter(uint64_t a1)
{
  return sub_243750090(a1, type metadata accessor for BankConnectWebServicePassLinkingRequest);
}

uint64_t (*BankConnectWebServicePassLinkingRequest.passDetails.modify())(void)
{
  return nullsub_1;
}

void *BankConnectWebServicePassLinkingRequest.pathComponents.getter()
{
  return &unk_26F8AAFB0;
}

uint64_t BankConnectWebServicePassLinkingRequest.jsonBody.getter@<X0>(void *a1@<X8>)
{
  return sub_243750140(type metadata accessor for BankConnectWebServicePassLinkingRequest, a1);
}

void *BankConnectWebServicePassLinkingRequest.makeAdditionalHTTPHeaderFields()()
{
  return sub_24375027C();
}

void *sub_24374FFB4()
{
  return BankConnectWebServicePassUnlinkRequest.makeAdditionalHTTPHeaderFields()();
}

void *sub_24374FFCC()
{
  return &unk_26F8AAFB0;
}

void static BankConnectWebServicePassLinkingResponse.parse(urlResponse:)(void *a1)
{
}

uint64_t BankConnectWebServicePassUnlinkRequest.consent.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2433B115C(v1, a1);
}

uint64_t BankConnectWebServicePassUnlinkRequest.consent.setter(uint64_t a1)
{
  return sub_2433B11C0(a1, v1);
}

uint64_t (*BankConnectWebServicePassUnlinkRequest.consent.modify())()
{
  return nullsub_1;
}

uint64_t BankConnectWebServicePassUnlinkRequest.passDetails.getter()
{
  return sub_24375003C((void (*)(void))type metadata accessor for BankConnectWebServicePassUnlinkRequest);
}

uint64_t sub_24375003C(void (*a1)(void))
{
  a1(0);

  return swift_bridgeObjectRetain();
}

uint64_t BankConnectWebServicePassUnlinkRequest.passDetails.setter(uint64_t a1)
{
  return sub_243750090(a1, type metadata accessor for BankConnectWebServicePassUnlinkRequest);
}

uint64_t sub_243750090(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = *(int *)(a2(0) + 20);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + v4) = a1;
  return result;
}

uint64_t (*BankConnectWebServicePassUnlinkRequest.passDetails.modify())(void)
{
  return nullsub_1;
}

void *BankConnectWebServicePassUnlinkRequest.pathComponents.getter()
{
  return &unk_26F8AAF60;
}

uint64_t BankConnectWebServicePassUnlinkRequest.jsonBody.getter@<X0>(void *a1@<X8>)
{
  return sub_243750140(type metadata accessor for BankConnectWebServicePassUnlinkRequest, a1);
}

uint64_t sub_243750140@<X0>(uint64_t (*a1)(void)@<X0>, void *a2@<X8>)
{
  uint64_t result = a1(0);
  uint64_t v5 = *(void *)(v2 + *(int *)(result + 20));
  int64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (v6)
  {
    uint64_t v16 = a2;
    uint64_t v17 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_2434CCAC4(0, v6, 0);
    uint64_t v7 = v17;
    uint64_t v8 = (uint64_t *)(v5 + 56);
    do
    {
      uint64_t v10 = *(v8 - 3);
      uint64_t v9 = *(v8 - 2);
      uint64_t v12 = *(v8 - 1);
      uint64_t v11 = *v8;
      unint64_t v13 = *(void *)(v17 + 16);
      unint64_t v14 = *(void *)(v17 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v13 >= v14 >> 1) {
        sub_2434CCAC4(v14 > 1, v13 + 1, 1);
      }
      v8 += 4;
      *(void *)(v17 + 16) = v13 + 1;
      uint64_t v15 = (void *)(v17 + 32 * v13);
      _OWORD v15[4] = v10;
      _OWORD v15[5] = v9;
      v15[6] = v12;
      v15[7] = v11;
      --v6;
    }
    while (v6);
    uint64_t result = swift_bridgeObjectRelease();
    a2 = v16;
  }
  *a2 = v7;
  return result;
}

void BankConnectWebServicePassUnlinkRequest.httpMethod.getter(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

void *BankConnectWebServicePassUnlinkRequest.makeAdditionalHTTPHeaderFields()()
{
  return sub_24375027C();
}

void *sub_24375027C()
{
  uint64_t v1 = sub_2439564D0();
  uint64_t v34 = *(void *)(v1 - 8);
  uint64_t v35 = v1;
  MEMORY[0x270FA5388](v1);
  id v33 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F2F0);
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_24395EAE0;
  int v3 = (int *)type metadata accessor for BankConnectConsent();
  uint64_t v4 = v3[6];
  uint64_t v5 = (uint64_t *)(v0 + v3[5]);
  uint64_t v6 = *v5;
  uint64_t v31 = v5[1];
  uint64_t v32 = v6;
  uint64_t v7 = v0 + v4;
  uint64_t v8 = (int *)type metadata accessor for RawBankConnectData.Consent(0);
  unint64_t v38 = v8;
  uint64_t v39 = sub_243750894(&qword_268D97C30, (void (*)(uint64_t))type metadata accessor for RawBankConnectData.Consent);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v37);
  uint64_t v10 = (char *)boxed_opaque_existential_0 + v8[5];
  uint64_t v11 = sub_243957400();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  v12(v10, v7, v11);
  v12((char *)boxed_opaque_existential_0 + v8[6], v0 + v3[7], v11);
  uint64_t v13 = *(void *)(v0 + v3[9]);
  unint64_t v14 = (uint64_t *)(v0 + v3[10]);
  uint64_t v15 = *v14;
  uint64_t v16 = v14[1];
  uint64_t v17 = v31;
  uint64_t *boxed_opaque_existential_0 = v32;
  boxed_opaque_existential_0[1] = v17;
  *(uint64_t *)((char *)boxed_opaque_existential_0 + v8[7]) = v13;
  unint64_t v18 = (uint64_t *)((char *)boxed_opaque_existential_0 + v8[8]);
  *unint64_t v18 = v15;
  v18[1] = v16;
  __swift_project_boxed_opaque_existential_1(v37, (uint64_t)v38);
  sub_243956520();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_243956510();
  if (qword_268D96AD8 != -1) {
    swift_once();
  }
  uint64_t v19 = v35;
  uint64_t v20 = __swift_project_value_buffer(v35, (uint64_t)qword_268D98E70);
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v33, v20, v19);
  sub_2439564F0();
  uint64_t v21 = v36;
  uint64_t v22 = sub_243956500();
  unint64_t v24 = v23;
  swift_release();
  if (v21)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v37);
    uint64_t v25 = (void *)v40;
    *(void *)(v40 + 16) = 0;
    swift_release();
  }
  else
  {
    uint64_t v26 = sub_2439570B0();
    uint64_t v28 = v27;
    sub_2433807F0(v22, v24);
    uint64_t v25 = (void *)v40;
    *(void *)(v40 + 32) = 0x746E65736E6F43;
    v25[5] = 0xE700000000000000;
    v25[6] = v26;
    v25[7] = v28;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v37);
  }
  return v25;
}

void *sub_2437505C0()
{
  return &unk_26F8AAF60;
}

void static BankConnectWebServicePassUnlinkResponse.parse(urlResponse:)(void *a1)
{
}

void sub_2437505E4(void *a1)
{
  self;
  uint64_t v2 = swift_dynamicCastObjCClass();
  if (v2)
  {
    int v3 = (void *)v2;
    id v4 = a1;
    id v5 = objc_msgSend(v3, sel_statusCode);
    if (v5 != (id)204)
    {
      id v6 = v5;
      type metadata accessor for FinanceNetworkError();
      sub_243750894((unint64_t *)&qword_268D9F240, (void (*)(uint64_t))type metadata accessor for FinanceNetworkError);
      swift_allocError();
      *uint64_t v7 = v6;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
    }
  }
  else
  {
    type metadata accessor for FinanceNetworkError();
    sub_243750894((unint64_t *)&qword_268D9F240, (void (*)(uint64_t))type metadata accessor for FinanceNetworkError);
    swift_allocError();
    uint64_t v9 = v8;
    uint64_t *v8 = sub_24337C218(0, (unint64_t *)&unk_268D9B410);
    v9[4] = sub_24337C218(0, (unint64_t *)&unk_268D9F250);
    v9[1] = (uint64_t)a1;
    swift_storeEnumTagMultiPayload();
    id v10 = a1;
    swift_willThrow();
  }
}

uint64_t BankConnectWebServicePassDetails.fpanId.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BankConnectWebServicePassDetails.fpanId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*BankConnectWebServicePassDetails.fpanId.modify())()
{
  return nullsub_1;
}

uint64_t BankConnectWebServicePassDetails.accountIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BankConnectWebServicePassDetails.accountIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*BankConnectWebServicePassDetails.accountIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t sub_243750894(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for BankConnectWebServicePassLinkingRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_indexTm_0_0);
}

uint64_t storeEnumTagSinglePayload for BankConnectWebServicePassLinkingRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_indexTm_0_0);
}

ValueMetadata *type metadata accessor for BankConnectWebServicePassLinkingResponse()
{
  return &type metadata for BankConnectWebServicePassLinkingResponse;
}

uint64_t getEnumTagSinglePayload for BankConnectWebServicePassUnlinkRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_243750950);
}

uint64_t __swift_get_extra_inhabitant_indexTm_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for BankConnectConsent();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for BankConnectWebServicePassUnlinkRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_243750A28);
}

uint64_t __swift_store_extra_inhabitant_indexTm_0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for BankConnectConsent();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for BankConnectWebServicePassUnlinkResponse()
{
  return &type metadata for BankConnectWebServicePassUnlinkResponse;
}

ValueMetadata *type metadata accessor for BankConnectWebServicePassDetails()
{
  return &type metadata for BankConnectWebServicePassDetails;
}

void sub_243750B18(id *a1)
{
  id v1 = objc_msgSend(*a1, sel_lastUpdatedAt);
  sub_2439573A0();
}

void sub_243750B78(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  id v3 = (id)sub_243957350();
  objc_msgSend(v2, sel_setLastUpdatedAt_, v3);
}

id static ManagedInternalAccountBalance.fetchRequest()()
{
  v3.receiver = (id)swift_getObjCClassFromMetadata();
  v3.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit29ManagedInternalAccountBalance;
  id v0 = objc_msgSendSuper2(&v3, sel_fetchRequest);
  id v1 = (void *)sub_243958630();
  objc_msgSend(v0, sel_setRelationshipKeyPathsForPrefetching_, v1);

  return v0;
}

id static ManagedInternalAccountBalance.fetchRequest(for:)(long long *a1)
{
  long long v9 = *a1;
  uint64_t v1 = *((void *)a1 + 2);
  uint64_t v2 = *((void *)a1 + 3);
  v13.receiver = (id)swift_getObjCClassFromMetadata();
  v13.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit29ManagedInternalAccountBalance;
  id v3 = objc_msgSendSuper2(&v13, sel_fetchRequest);
  id v4 = (void *)sub_243958630();
  objc_msgSend(v3, sel_setRelationshipKeyPathsForPrefetching_, v4);

  long long v10 = v9;
  uint64_t v11 = v1;
  uint64_t v12 = v2;
  id v5 = _s10FinanceKit29ManagedInternalAccountBalanceC012predicateForE8Balances3forSo11NSPredicateCAA014FullyQualifiedE10IdentifierV_tFZ_0((uint64_t *)&v10);
  objc_msgSend(v3, sel_setPredicate_, v5);

  objc_msgSend(v3, sel_setReturnsObjectsAsFaults_, 0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C9900);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_243960A20;
  sub_24337C218(0, (unint64_t *)&qword_268D9F750);
  swift_getKeyPath();
  *(void *)(v6 + 32) = sub_243958BA0();
  *(void *)&long long v10 = v6;
  sub_243958670();
  uint64_t v7 = (void *)sub_243958630();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setSortDescriptors_, v7);

  return v3;
}

unint64_t static ManagedInternalAccountBalance.existingAccountBalance(withID:in:)(uint64_t a1, uint64_t a2)
{
  v12.receiver = (id)swift_getObjCClassFromMetadata();
  v12.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit29ManagedInternalAccountBalance;
  id v4 = objc_msgSendSuper2(&v12, sel_fetchRequest);
  id v5 = (void *)sub_243958630();
  objc_msgSend(v4, sel_setRelationshipKeyPathsForPrefetching_, v5);

  sub_24337C218(0, (unint64_t *)&qword_26B0C9140);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E30);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_24395EAE0;
  uint64_t v7 = sub_243957430();
  *(void *)(v6 + 56) = sub_24337C218(0, &qword_268D97D68);
  *(void *)(v6 + 64) = sub_2433DB624();
  *(void *)(v6 + 32) = v7;
  uint64_t v8 = (void *)sub_243958A00();
  objc_msgSend(v4, sel_setPredicate_, v8);

  unint64_t result = sub_243958DC0();
  if (v2)
  {

    return a2;
  }
  unint64_t v10 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    a2 = sub_243959550();
    unint64_t result = swift_bridgeObjectRelease();
    if (!a2) {
      goto LABEL_9;
    }
  }
  else
  {
    a2 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!a2)
    {
LABEL_9:
      swift_bridgeObjectRelease();

      return a2;
    }
  }
  if ((v10 & 0xC000000000000001) != 0)
  {
    id v11 = (id)MEMORY[0x24567E5D0](0, v10);
    goto LABEL_8;
  }
  if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v11 = *(id *)(v10 + 32);
LABEL_8:
    a2 = (uint64_t)v11;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t static ManagedInternalAccountBalance.predicateForAccountBalance(withID:)()
{
  return sub_243751344();
}

unint64_t static ManagedInternalAccountBalance.latestAccountBalance(forAccountID:in:)(uint64_t a1, uint64_t a2)
{
  v17.receiver = (id)swift_getObjCClassFromMetadata();
  v17.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit29ManagedInternalAccountBalance;
  id v4 = objc_msgSendSuper2(&v17, sel_fetchRequest);
  id v5 = (void *)sub_243958630();
  objc_msgSend(v4, sel_setRelationshipKeyPathsForPrefetching_, v5);

  sub_24337C218(0, (unint64_t *)&qword_26B0C9140);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E30);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_24395EAE0;
  uint64_t v7 = sub_243957430();
  *(void *)(v6 + 56) = sub_24337C218(0, &qword_268D97D68);
  *(void *)(v6 + 64) = sub_2433DB624();
  *(void *)(v6 + 32) = v7;
  uint64_t v8 = (void *)sub_243958A00();
  objc_msgSend(v4, sel_setPredicate_, v8);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C9900);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_243960A20;
  id v10 = objc_allocWithZone(MEMORY[0x263F08B30]);
  id v11 = (void *)sub_2439582A0();
  id v12 = objc_msgSend(v10, sel_initWithKey_ascending_, v11, 0);

  *(void *)(v9 + 32) = v12;
  sub_243958670();
  sub_24337C218(0, (unint64_t *)&qword_268D9F750);
  objc_super v13 = (void *)sub_243958630();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setSortDescriptors_, v13);

  objc_msgSend(v4, sel_setFetchLimit_, 1);
  objc_msgSend(v4, sel_setReturnsObjectsAsFaults_, 0);
  unint64_t result = sub_243958DC0();
  if (v2)
  {

    return a2;
  }
  unint64_t v15 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    a2 = sub_243959550();
    unint64_t result = swift_bridgeObjectRelease();
    if (!a2) {
      goto LABEL_9;
    }
  }
  else
  {
    a2 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!a2)
    {
LABEL_9:
      swift_bridgeObjectRelease();

      return a2;
    }
  }
  if ((v15 & 0xC000000000000001) != 0)
  {
    id v16 = (id)MEMORY[0x24567E5D0](0, v15);
    goto LABEL_8;
  }
  if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v16 = *(id *)(v15 + 32);
LABEL_8:
    a2 = (uint64_t)v16;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t static ManagedInternalAccountBalance.predicateForAccountBalances(forAccountID:)()
{
  return sub_243751344();
}

uint64_t sub_243751344()
{
  sub_24337C218(0, (unint64_t *)&qword_26B0C9140);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E30);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_24395EAE0;
  uint64_t v1 = sub_243957430();
  *(void *)(v0 + 56) = sub_24337C218(0, &qword_268D97D68);
  *(void *)(v0 + 64) = sub_2433DB624();
  *(void *)(v0 + 32) = v1;
  return sub_243958A00();
}

void static ManagedInternalAccountBalance.deleteAccountBalance(withID:in:)(uint64_t a1, void *a2)
{
  v16.receiver = (id)swift_getObjCClassFromMetadata();
  v16.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit29ManagedInternalAccountBalance;
  id v4 = objc_msgSendSuper2(&v16, sel_fetchRequest);
  id v5 = (void *)sub_243958630();
  objc_msgSend(v4, sel_setRelationshipKeyPathsForPrefetching_, v5);

  sub_24337C218(0, (unint64_t *)&qword_26B0C9140);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E30);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_24395EAE0;
  uint64_t v7 = sub_243957430();
  *(void *)(v6 + 56) = sub_24337C218(0, &qword_268D97D68);
  *(void *)(v6 + 64) = sub_2433DB624();
  *(void *)(v6 + 32) = v7;
  uint64_t v8 = (void *)sub_243958A00();
  objc_msgSend(v4, sel_setPredicate_, v8);

  objc_msgSend(v4, sel_setIncludesPropertyValues_, 0);
  unint64_t v9 = sub_243958DC0();
  if (v2)
  {

    return;
  }
  unint64_t v10 = v9;
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_243959550();
    swift_bridgeObjectRelease();
    if (v14 <= 1)
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_243959550();
      swift_bridgeObjectRelease();
      if (v15) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_16:
    sub_243959540();
    __break(1u);
    return;
  }
  unint64_t v11 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v11 > 1) {
    goto LABEL_16;
  }
  if (v11)
  {
LABEL_6:
    if ((v10 & 0xC000000000000001) != 0)
    {
      id v12 = (id)MEMORY[0x24567E5D0](0, v10);
      goto LABEL_9;
    }
    if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v12 = *(id *)(v10 + 32);
LABEL_9:
      objc_super v13 = v12;
      swift_bridgeObjectRelease();
      objc_msgSend(a2, sel_deleteObject_, v13);

      return;
    }
    __break(1u);
    goto LABEL_16;
  }
LABEL_12:

  swift_bridgeObjectRelease();
}

id _s10FinanceKit29ManagedInternalAccountBalanceC012predicateForE8Balances3forSo11NSPredicateCAA014FullyQualifiedE10IdentifierV_tFZ_0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v3 = a1[3];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C9900);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_243961080;
  sub_24337C218(0, (unint64_t *)&qword_26B0C9140);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E30);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_24395EAE0;
  uint64_t v7 = MEMORY[0x263F8D310];
  *(void *)(v6 + 56) = MEMORY[0x263F8D310];
  unint64_t v8 = sub_24337BF04();
  *(void *)(v6 + 64) = v8;
  *(void *)(v6 + 32) = v2;
  *(void *)(v6 + 40) = v1;
  swift_bridgeObjectRetain();
  *(void *)(v5 + 32) = sub_243958A00();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_24395EAE0;
  *(void *)(v9 + 56) = v7;
  *(void *)(v9 + 64) = v8;
  *(void *)(v9 + 32) = v4;
  *(void *)(v9 + 40) = v3;
  swift_bridgeObjectRetain();
  *(void *)(v5 + 40) = sub_243958A00();
  sub_243958670();
  unint64_t v10 = (void *)sub_243958630();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v10);

  return v11;
}

void sub_243751888(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  id v3 = (id)sub_243957350();
  objc_msgSend(v2, sel_setLastUpdatedAt_, v3);
}

id static MapsInsightsServiceConfiguration.serviceInterface.getter()
{
  id v0 = objc_msgSend(self, sel_interfaceWithProtocol_, &unk_26F8E8A38);
  sub_2435CE590();
  return v0;
}

unint64_t static MapsInsightsServiceConfiguration.extensionPointIdentifier.getter()
{
  return 0xD000000000000022;
}

unint64_t sub_243751954()
{
  return 0xD000000000000022;
}

id sub_243751970()
{
  id v0 = objc_msgSend(self, sel_interfaceWithProtocol_, &unk_26F8E8A38);
  sub_2435CE590();
  return v0;
}

ValueMetadata *type metadata accessor for MapsInsightsServiceConfiguration()
{
  return &type metadata for MapsInsightsServiceConfiguration;
}

uint64_t MapsBrand.muid.getter()
{
  return *(void *)v0;
}

uint64_t MapsBrand.muid.setter(uint64_t result)
{
  void *v1 = result;
  return result;
}

uint64_t (*MapsBrand.muid.modify())()
{
  return nullsub_1;
}

unint64_t MapsBrand.resultProviderIdentifier.getter()
{
  return *(unsigned int *)(v0 + 8) | ((unint64_t)*(unsigned __int8 *)(v0 + 12) << 32);
}

uint64_t MapsBrand.resultProviderIdentifier.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 8) = result;
  *(unsigned char *)(v1 + 12) = BYTE4(result) & 1;
  return result;
}

uint64_t (*MapsBrand.resultProviderIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t MapsBrand.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MapsBrand.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*MapsBrand.name.modify())()
{
  return nullsub_1;
}

uint64_t MapsBrand.phoneNumber.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MapsBrand.phoneNumber.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*MapsBrand.phoneNumber.modify())()
{
  return nullsub_1;
}

uint64_t MapsBrand.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for MapsBrand();
  return sub_24337C254(v1 + *(int *)(v3 + 32), a1, &qword_26B0C98A0);
}

uint64_t type metadata accessor for MapsBrand()
{
  uint64_t result = qword_268D9F570;
  if (!qword_268D9F570) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t MapsBrand.url.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for MapsBrand();
  return sub_2433865D8(a1, v1 + *(int *)(v3 + 32), &qword_26B0C98A0);
}

uint64_t (*MapsBrand.url.modify())(void)
{
  return nullsub_1;
}

uint64_t MapsBrand.heroImageURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for MapsBrand();
  return sub_24337C254(v1 + *(int *)(v3 + 36), a1, &qword_26B0C98A0);
}

uint64_t MapsBrand.heroImageURL.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for MapsBrand();
  return sub_2433865D8(a1, v1 + *(int *)(v3 + 36), &qword_26B0C98A0);
}

uint64_t (*MapsBrand.heroImageURL.modify())(void)
{
  return nullsub_1;
}

uint64_t MapsBrand.heroImageAttributionName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for MapsBrand() + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MapsBrand.heroImageAttributionName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for MapsBrand() + 40));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*MapsBrand.heroImageAttributionName.modify())(void)
{
  return nullsub_1;
}

uint64_t MapsBrand.walletCategory.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for MapsBrand();
  uint64_t v4 = (__int16 *)(v1 + *(int *)(result + 44));
  __int16 v5 = *v4;
  LOBYTE(v4) = *((unsigned char *)v4 + 2);
  *(_WORD *)a1 = v5;
  *(unsigned char *)(a1 + 2) = (_BYTE)v4;
  return result;
}

uint64_t MapsBrand.walletCategory.setter(__int16 *a1)
{
  __int16 v2 = *a1;
  char v3 = *((unsigned char *)a1 + 2);
  uint64_t result = type metadata accessor for MapsBrand();
  uint64_t v5 = v1 + *(int *)(result + 44);
  *(_WORD *)uint64_t v5 = v2;
  *(unsigned char *)(v5 + 2) = v3;
  return result;
}

uint64_t (*MapsBrand.walletCategory.modify())(void)
{
  return nullsub_1;
}

uint64_t MapsBrand.mapsCategoryIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for MapsBrand() + 48));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MapsBrand.mapsCategoryIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for MapsBrand() + 48));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*MapsBrand.mapsCategoryIdentifier.modify())(void)
{
  return nullsub_1;
}

uint64_t MapsBrand.encodedStylingInfo.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for MapsBrand() + 52);
  uint64_t v2 = *(void *)v1;
  sub_243407784(*(void *)v1, *(void *)(v1 + 8));
  return v2;
}

uint64_t MapsBrand.encodedStylingInfo.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2 + *(int *)(type metadata accessor for MapsBrand() + 52);
  uint64_t result = sub_2433D7B74(*(void *)v5, *(void *)(v5 + 8));
  *(void *)uint64_t v5 = a1;
  *(void *)(v5 + 8) = a2;
  return result;
}

uint64_t (*MapsBrand.encodedStylingInfo.modify())(void)
{
  return nullsub_1;
}

uint64_t MapsBrand.businessChatURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for MapsBrand();
  return sub_24337C254(v1 + *(int *)(v3 + 56), a1, &qword_26B0C98A0);
}

uint64_t MapsBrand.businessChatURL.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for MapsBrand();
  return sub_2433865D8(a1, v1 + *(int *)(v3 + 56), &qword_26B0C98A0);
}

uint64_t (*MapsBrand.businessChatURL.modify())(void)
{
  return nullsub_1;
}

uint64_t MapsBrand.lastProcessedDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for MapsBrand();
  return sub_24337C254(v1 + *(int *)(v3 + 60), a1, (uint64_t *)&unk_26B0C8E20);
}

uint64_t MapsBrand.lastProcessedDate.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for MapsBrand();
  return sub_2433865D8(a1, v1 + *(int *)(v3 + 60), (uint64_t *)&unk_26B0C8E20);
}

uint64_t (*MapsBrand.lastProcessedDate.modify())(void)
{
  return nullsub_1;
}

uint64_t MapsBrand.logoURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for MapsBrand();
  return sub_24337C254(v1 + *(int *)(v3 + 64), a1, &qword_26B0C98A0);
}

uint64_t MapsBrand.logoURL.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for MapsBrand();
  return sub_2433865D8(a1, v1 + *(int *)(v3 + 64), &qword_26B0C98A0);
}

uint64_t (*MapsBrand.logoURL.modify())(void)
{
  return nullsub_1;
}

uint64_t MapsBrand.init(muid:resultProviderIdentifier:name:phoneNumber:url:heroImageURL:heroImageAttributionName:walletCategory:mapsCategoryIdentifier:encodedStylingInfo:businessChatURL:lastProcessedDate:logoURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, __int16 *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  char v41 = *((unsigned char *)a12 + 2);
  __int16 v42 = *a12;
  uint64_t v20 = (int *)type metadata accessor for MapsBrand();
  uint64_t v21 = a9 + v20[8];
  uint64_t v33 = v21;
  uint64_t v22 = sub_243957010();
  unint64_t v23 = *(void (**)(void))(*(void *)(v22 - 8) + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v23)(v21, 1, 1, v22);
  uint64_t v32 = a9 + v20[9];
  v23();
  unint64_t v24 = (void *)(a9 + v20[10]);
  void *v24 = 0;
  v24[1] = 0;
  uint64_t v25 = a9 + v20[11];
  *(_WORD *)uint64_t v25 = 0;
  *(unsigned char *)(v25 + 2) = 1;
  uint64_t v26 = (void *)(a9 + v20[12]);
  *uint64_t v26 = 0;
  v26[1] = 0;
  uint64_t v27 = a9 + v20[13];
  *(_OWORD *)uint64_t v27 = xmmword_243965F40;
  uint64_t v34 = a9 + v20[14];
  v23();
  uint64_t v28 = a9 + v20[15];
  uint64_t v29 = sub_243957400();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v28, 1, 1, v29);
  uint64_t v30 = a9 + v20[16];
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v23)(v30, 1, 1, v22);
  *(void *)a9 = a1;
  *(_DWORD *)(a9 + 8) = a2;
  *(unsigned char *)(a9 + 12) = BYTE4(a2) & 1;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  sub_2433865D8(a7, v33, &qword_26B0C98A0);
  sub_2433865D8(a8, v32, &qword_26B0C98A0);
  swift_bridgeObjectRelease();
  void *v24 = a10;
  v24[1] = a11;
  *(_WORD *)uint64_t v25 = v42;
  *(unsigned char *)(v25 + 2) = v41;
  swift_bridgeObjectRelease();
  *uint64_t v26 = a13;
  v26[1] = a14;
  sub_2433D7B74(*(void *)v27, *(void *)(v27 + 8));
  *(void *)uint64_t v27 = a15;
  *(void *)(v27 + 8) = a16;
  sub_2433865D8(a17, v34, &qword_26B0C98A0);
  sub_2433865D8(a18, v28, (uint64_t *)&unk_26B0C8E20);
  return sub_2433865D8(a19, v30, &qword_26B0C98A0);
}

unint64_t sub_2437525AC(char a1)
{
  unint64_t result = 1684632941;
  switch(a1)
  {
    case 1:
    case 6:
      unint64_t result = 0xD000000000000018;
      break;
    case 2:
      unint64_t result = 1701667182;
      break;
    case 3:
      unint64_t result = 0x6D754E656E6F6870;
      break;
    case 4:
      unint64_t result = 7107189;
      break;
    case 5:
      unint64_t result = 0x67616D496F726568;
      break;
    case 7:
      unint64_t result = 0x614374656C6C6177;
      break;
    case 8:
      unint64_t result = 0xD000000000000016;
      break;
    case 9:
      unint64_t result = 0xD000000000000012;
      break;
    case 10:
      unint64_t result = 0x7373656E69737562;
      break;
    case 11:
      unint64_t result = 0xD000000000000011;
      break;
    case 12:
      unint64_t result = 0x4C52556F676F6CLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_243752748()
{
  return sub_2437525AC(*v0);
}

uint64_t sub_243752750@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_243756DC0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_243752778(uint64_t a1)
{
  unint64_t v2 = sub_2437548D0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2437527B4(uint64_t a1)
{
  unint64_t v2 = sub_2437548D0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t MapsBrand.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F558);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2437548D0();
  sub_243959BD0();
  LOBYTE(v15) = 0;
  sub_243959890();
  if (!v2)
  {
    char v9 = *(unsigned char *)(v3 + 12);
    LOBYTE(v15) = 1;
    char v16 = v9;
    sub_2439597F0();
    LOBYTE(v15) = 2;
    sub_243959790();
    LOBYTE(v15) = 3;
    sub_243959790();
    unint64_t v10 = (int *)type metadata accessor for MapsBrand();
    LOBYTE(v15) = 4;
    sub_243957010();
    sub_243757314((unint64_t *)&unk_268D97120, MEMORY[0x263F06EA8]);
    sub_2439597D0();
    LOBYTE(v15) = 5;
    sub_2439597D0();
    LOBYTE(v15) = 6;
    sub_243959790();
    id v11 = (__int16 *)(v3 + v10[11]);
    __int16 v12 = *v11;
    LOBYTE(v11) = *((unsigned char *)v11 + 2);
    LOWORD(v15) = v12;
    BYTE2(v15) = (_BYTE)v11;
    char v16 = 7;
    sub_24369EE28();
    sub_2439597D0();
    LOBYTE(v15) = 8;
    sub_243959790();
    long long v15 = *(_OWORD *)(v3 + v10[13]);
    char v16 = 9;
    sub_2433CBF6C();
    sub_2439597D0();
    LOBYTE(v15) = 10;
    sub_2439597D0();
    v14[1] = v3 + v10[15];
    LOBYTE(v15) = 11;
    sub_243957400();
    sub_243757314(&qword_26B0C5DF0, MEMORY[0x263F07490]);
    sub_2439597D0();
    LOBYTE(v15) = 12;
    sub_2439597D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_2437534EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return MapsBrand.init(from:)(a1, a2);
}

uint64_t sub_243753504(void *a1)
{
  return MapsBrand.encode(to:)(a1);
}

BOOL _s10FinanceKit9MapsBrandV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_243957400();
  uint64_t v186 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  v182 = &v166[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v185 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D97950);
  MEMORY[0x270FA5388](v185);
  v189 = &v166[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  v184 = &v166[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  v187 = &v166[-v10];
  MEMORY[0x270FA5388](v9);
  v188 = &v166[-v11];
  uint64_t v12 = sub_243957010();
  v194 = *(void **)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  v191 = &v166[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v193 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D98EB8);
  uint64_t v14 = MEMORY[0x270FA5388](v193);
  v183 = &v166[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  v190 = &v166[-v17];
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  v192 = &v166[-v19];
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = &v166[-v20];
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
  uint64_t v23 = MEMORY[0x270FA5388](v22 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = MEMORY[0x270FA5388](&v166[-v24]);
  uint64_t v26 = MEMORY[0x270FA5388](v25);
  uint64_t v28 = &v166[-v27];
  uint64_t v29 = MEMORY[0x270FA5388](v26);
  uint64_t v30 = MEMORY[0x270FA5388](v29);
  uint64_t v31 = MEMORY[0x270FA5388](v30);
  uint64_t v32 = MEMORY[0x270FA5388](v31);
  uint64_t v34 = &v166[-v33];
  uint64_t v35 = MEMORY[0x270FA5388](v32);
  uint64_t v37 = &v166[-v36];
  uint64_t v38 = MEMORY[0x270FA5388](v35);
  uint64_t v40 = &v166[-v39];
  uint64_t v41 = MEMORY[0x270FA5388](v38);
  char v43 = &v166[-v42];
  uint64_t v44 = MEMORY[0x270FA5388](v41);
  uint64_t v52 = &v166[-v51];
  if (*(void *)v48 != *(void *)a2) {
    return 0;
  }
  char v53 = *(unsigned char *)(a2 + 12);
  if (*(unsigned char *)(v48 + 12))
  {
    if (!*(unsigned char *)(a2 + 12)) {
      return 0;
    }
  }
  else
  {
    if (*(_DWORD *)(v48 + 8) != *(_DWORD *)(a2 + 8)) {
      char v53 = 1;
    }
    if (v53) {
      return 0;
    }
  }
  uint64_t v54 = *(void *)(v48 + 24);
  uint64_t v55 = *(void *)(a2 + 24);
  if (!v54)
  {
    uint64_t v179 = v50;
    uint64_t v180 = v45;
    uint64_t v177 = v49;
    uint64_t v178 = v44;
    if (v55) {
      return 0;
    }
    goto LABEL_15;
  }
  if (!v55) {
    return 0;
  }
  uint64_t v179 = v50;
  uint64_t v180 = v45;
  uint64_t v177 = v49;
  uint64_t v178 = v44;
  if (*(void *)(v48 + 16) == *(void *)(a2 + 16) && v54 == v55) {
    goto LABEL_15;
  }
  uint64_t v175 = v3;
  uint64_t v176 = v46;
  uint64_t v181 = a2;
  uint64_t v56 = v48;
  uint64_t v57 = v47;
  char v58 = sub_243959940();
  uint64_t v47 = v57;
  uint64_t v48 = v56;
  uint64_t v3 = v175;
  uint64_t v46 = v176;
  a2 = v181;
  char v59 = v58;
  BOOL result = 0;
  if (v59)
  {
LABEL_15:
    uint64_t v61 = *(void *)(v48 + 40);
    uint64_t v62 = *(void *)(a2 + 40);
    if (v61)
    {
      if (!v62) {
        return 0;
      }
      if (*(void *)(v48 + 32) != *(void *)(a2 + 32) || v61 != v62)
      {
        uint64_t v175 = v3;
        uint64_t v176 = v46;
        uint64_t v181 = a2;
        uint64_t v63 = v48;
        uint64_t v64 = v47;
        char v65 = sub_243959940();
        uint64_t v47 = v64;
        uint64_t v48 = v63;
        uint64_t v3 = v175;
        uint64_t v46 = v176;
        a2 = v181;
        char v66 = v65;
        BOOL result = 0;
        if ((v66 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v62)
    {
      return 0;
    }
    uint64_t v170 = v47;
    uint64_t v176 = v46;
    uint64_t v171 = v28;
    uint64_t v175 = v3;
    uint64_t v67 = v48;
    uint64_t v68 = type metadata accessor for MapsBrand();
    uint64_t v69 = *(int *)(v68 + 32);
    uint64_t v173 = v67;
    uint64_t v174 = v12;
    sub_24337C254(v67 + v69, (uint64_t)v52, &qword_26B0C98A0);
    uint64_t v172 = (int *)v68;
    uint64_t v70 = *(int *)(v68 + 32);
    uint64_t v181 = a2;
    sub_24337C254(a2 + v70, (uint64_t)v43, &qword_26B0C98A0);
    uint64_t v71 = (uint64_t)&v21[*(int *)(v193 + 48)];
    sub_24337C254((uint64_t)v52, (uint64_t)v21, &qword_26B0C98A0);
    uint64_t v72 = v71;
    uint64_t v73 = v174;
    sub_24337C254((uint64_t)v43, v71, &qword_26B0C98A0);
    id v74 = v194 + 6;
    long long v75 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v194[6];
    if (v75((uint64_t)v21, 1, v73) == 1)
    {
      sub_24337C1BC((uint64_t)v43, &qword_26B0C98A0);
      uint64_t v76 = v174;
      sub_24337C1BC((uint64_t)v52, &qword_26B0C98A0);
      if (v75(v72, 1, v76) == 1)
      {
        uint64_t v77 = v75;
        sub_24337C1BC((uint64_t)v21, &qword_26B0C98A0);
        uint64_t v78 = v76;
        goto LABEL_29;
      }
    }
    else
    {
      sub_24337C254((uint64_t)v21, (uint64_t)v40, &qword_26B0C98A0);
      v169 = v75;
      if (v75(v72, 1, v73) != 1)
      {
        uint64_t v81 = (void (*)(unsigned char *, uint64_t, uint64_t))v194[4];
        v168 = v74;
        uint64_t v82 = v191;
        v81(v191, v72, v73);
        sub_243757314(&qword_268D98EC0, MEMORY[0x263F06EA8]);
        uint64_t v78 = v73;
        int v167 = sub_243958270();
        uint64_t v83 = (void (*)(unsigned char *, uint64_t))v194[1];
        uint64_t v84 = v82;
        id v74 = v168;
        v83(v84, v73);
        sub_24337C1BC((uint64_t)v43, &qword_26B0C98A0);
        sub_24337C1BC((uint64_t)v52, &qword_26B0C98A0);
        v83(v40, v73);
        sub_24337C1BC((uint64_t)v21, &qword_26B0C98A0);
        uint64_t v77 = v169;
        if ((v167 & 1) == 0) {
          return 0;
        }
LABEL_29:
        uint64_t v85 = v172;
        sub_24337C254(v173 + v172[9], (uint64_t)v37, &qword_26B0C98A0);
        sub_24337C254(v181 + v85[9], (uint64_t)v34, &qword_26B0C98A0);
        uint64_t v86 = v192;
        uint64_t v87 = (uint64_t)&v192[*(int *)(v193 + 48)];
        sub_24337C254((uint64_t)v37, (uint64_t)v192, &qword_26B0C98A0);
        sub_24337C254((uint64_t)v34, v87, &qword_26B0C98A0);
        if (v77((uint64_t)v86, 1, v78) == 1)
        {
          sub_24337C1BC((uint64_t)v34, &qword_26B0C98A0);
          sub_24337C1BC((uint64_t)v37, &qword_26B0C98A0);
          unsigned int v88 = v77(v87, 1, v174);
          uint64_t v89 = (uint64_t)v171;
          if (v88 == 1)
          {
            v169 = v77;
            v168 = v74;
            sub_24337C1BC((uint64_t)v86, &qword_26B0C98A0);
            goto LABEL_38;
          }
        }
        else
        {
          uint64_t v90 = v78;
          uint64_t v91 = v170;
          sub_24337C254((uint64_t)v86, v170, &qword_26B0C98A0);
          unsigned int v92 = v77(v87, 1, v90);
          uint64_t v89 = (uint64_t)v171;
          if (v92 != 1)
          {
            v169 = v77;
            v168 = v74;
            uint64_t v93 = v194;
            uint64_t v94 = v191;
            ((void (*)(unsigned char *, uint64_t, uint64_t))v194[4])(v191, v87, v90);
            sub_243757314(&qword_268D98EC0, MEMORY[0x263F06EA8]);
            char v95 = sub_243958270();
            uint64_t v96 = (void (*)(unsigned char *, uint64_t))v93[1];
            v96(v94, v174);
            sub_24337C1BC((uint64_t)v34, &qword_26B0C98A0);
            sub_24337C1BC((uint64_t)v37, &qword_26B0C98A0);
            v96((unsigned char *)v91, v174);
            uint64_t v85 = v172;
            sub_24337C1BC((uint64_t)v86, &qword_26B0C98A0);
            if ((v95 & 1) == 0) {
              return 0;
            }
LABEL_38:
            uint64_t v97 = v85[10];
            uint64_t v98 = v173;
            uint64_t v99 = (void *)(v173 + v97);
            uint64_t v100 = *(void *)(v173 + v97 + 8);
            uint64_t v101 = v181;
            uint64_t v102 = (void *)(v181 + v97);
            uint64_t v103 = v102[1];
            if (v100)
            {
              if (!v103) {
                return 0;
              }
              if (*v99 != *v102 || v100 != v103)
              {
                char v104 = sub_243959940();
                uint64_t v98 = v173;
                uint64_t v101 = v181;
                char v105 = v104;
                BOOL result = 0;
                if ((v105 & 1) == 0) {
                  return result;
                }
              }
            }
            else if (v103)
            {
              return 0;
            }
            uint64_t v106 = v85[11];
            int v107 = (unsigned __int16 *)(v98 + v106);
            char v108 = *(unsigned char *)(v98 + v106 + 2);
            size_t v109 = (unsigned __int16 *)(v101 + v106);
            int v110 = *(unsigned __int8 *)(v101 + v106 + 2);
            if (v108)
            {
              if (!v110) {
                return 0;
              }
            }
            else
            {
              if (*v107 != *v109) {
                LOBYTE(v110) = 1;
              }
              if (v110) {
                return 0;
              }
            }
            uint64_t v111 = v85[12];
            uint64_t v112 = (void *)(v98 + v111);
            uint64_t v113 = *(void *)(v98 + v111 + 8);
            uint64_t v114 = (void *)(v101 + v111);
            uint64_t v115 = v114[1];
            if (v113)
            {
              if (!v115) {
                return 0;
              }
              if (*v112 != *v114 || v113 != v115)
              {
                char v116 = sub_243959940();
                uint64_t v98 = v173;
                uint64_t v101 = v181;
                char v117 = v116;
                BOOL result = 0;
                if ((v117 & 1) == 0) {
                  return result;
                }
              }
            }
            else if (v115)
            {
              return 0;
            }
            uint64_t v118 = v85[13];
            uint64_t v119 = *(void *)(v98 + v118);
            unint64_t v120 = *(void *)(v98 + v118 + 8);
            uint64_t v121 = (uint64_t *)(v101 + v118);
            uint64_t v122 = *v121;
            unint64_t v123 = v121[1];
            if (v120 >> 60 == 15)
            {
              uint64_t v124 = v193;
              if (v123 >> 60 == 15) {
                goto LABEL_64;
              }
            }
            else
            {
              uint64_t v124 = v193;
              if (v123 >> 60 != 15)
              {
                sub_243407784(v119, v120);
                sub_243407784(v122, v123);
                char v125 = sub_2437A0C54(v119, v120, v122, v123);
                sub_2433D7B74(v122, v123);
                sub_2433D7B74(v119, v120);
                uint64_t v98 = v173;
                if ((v125 & 1) == 0) {
                  return 0;
                }
LABEL_64:
                long long v126 = v172;
                uint64_t v127 = v180;
                sub_24337C254(v98 + v172[14], v180, &qword_26B0C98A0);
                uint64_t v128 = v176;
                sub_24337C254(v181 + v126[14], v176, &qword_26B0C98A0);
                uint64_t v129 = v190;
                uint64_t v130 = (uint64_t)&v190[*(int *)(v124 + 48)];
                uint64_t v131 = v127;
                sub_24337C254(v127, (uint64_t)v190, &qword_26B0C98A0);
                sub_24337C254(v128, v130, &qword_26B0C98A0);
                uint64_t v132 = v174;
                uint64_t v133 = v169;
                if (v169((uint64_t)v129, 1, v174) == 1)
                {
                  sub_24337C1BC(v176, &qword_26B0C98A0);
                  sub_24337C1BC(v127, &qword_26B0C98A0);
                  uint64_t v134 = v133;
                  if (v133(v130, 1, v132) == 1)
                  {
                    sub_24337C1BC((uint64_t)v129, &qword_26B0C98A0);
LABEL_71:
                    uint64_t v139 = v172;
                    uint64_t v140 = v188;
                    sub_24337C254(v173 + v172[15], (uint64_t)v188, (uint64_t *)&unk_26B0C8E20);
                    uint64_t v141 = v187;
                    sub_24337C254(v181 + v139[15], (uint64_t)v187, (uint64_t *)&unk_26B0C8E20);
                    uint64_t v142 = v189;
                    uint64_t v143 = (uint64_t)&v189[*(int *)(v185 + 48)];
                    sub_24337C254((uint64_t)v140, (uint64_t)v189, (uint64_t *)&unk_26B0C8E20);
                    sub_24337C254((uint64_t)v141, v143, (uint64_t *)&unk_26B0C8E20);
                    uint64_t v144 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v186 + 48);
                    int v145 = v142;
                    uint64_t v146 = v175;
                    if (v144((uint64_t)v145, 1, v175) == 1)
                    {
                      sub_24337C1BC((uint64_t)v187, (uint64_t *)&unk_26B0C8E20);
                      sub_24337C1BC((uint64_t)v188, (uint64_t *)&unk_26B0C8E20);
                      if (v144(v143, 1, v146) == 1)
                      {
                        sub_24337C1BC((uint64_t)v189, (uint64_t *)&unk_26B0C8E20);
LABEL_78:
                        v153 = v172;
                        uint64_t v154 = v179;
                        sub_24337C254(v173 + v172[16], v179, &qword_26B0C98A0);
                        uint64_t v155 = v178;
                        sub_24337C254(v181 + v153[16], v178, &qword_26B0C98A0);
                        uint64_t v156 = v183;
                        uint64_t v157 = (uint64_t)&v183[*(int *)(v193 + 48)];
                        uint64_t v158 = v154;
                        sub_24337C254(v154, (uint64_t)v183, &qword_26B0C98A0);
                        uint64_t v159 = v155;
                        sub_24337C254(v155, v157, &qword_26B0C98A0);
                        if (v134((uint64_t)v156, 1, v174) == 1)
                        {
                          sub_24337C1BC(v155, &qword_26B0C98A0);
                          sub_24337C1BC(v154, &qword_26B0C98A0);
                          if (v134(v157, 1, v174) == 1)
                          {
                            sub_24337C1BC((uint64_t)v183, &qword_26B0C98A0);
                            return 1;
                          }
                          goto LABEL_83;
                        }
                        sub_24337C254((uint64_t)v183, v177, &qword_26B0C98A0);
                        if (v134(v157, 1, v174) == 1)
                        {
                          sub_24337C1BC(v155, &qword_26B0C98A0);
                          sub_24337C1BC(v154, &qword_26B0C98A0);
                          ((void (*)(uint64_t, uint64_t))v194[1])(v177, v174);
LABEL_83:
                          uint64_t v79 = &qword_268D98EB8;
                          uint64_t v80 = v183;
                          goto LABEL_35;
                        }
                        uint64_t v160 = v194;
                        uint64_t v161 = v191;
                        uint64_t v162 = v174;
                        ((void (*)(unsigned char *, uint64_t, uint64_t))v194[4])(v191, v157, v174);
                        sub_243757314(&qword_268D98EC0, MEMORY[0x263F06EA8]);
                        uint64_t v163 = v177;
                        char v164 = sub_243958270();
                        uint64_t v165 = (void (*)(unsigned char *, uint64_t))v160[1];
                        v165(v161, v162);
                        sub_24337C1BC(v159, &qword_26B0C98A0);
                        sub_24337C1BC(v158, &qword_26B0C98A0);
                        v165((unsigned char *)v163, v162);
                        sub_24337C1BC((uint64_t)v183, &qword_26B0C98A0);
                        return (v164 & 1) != 0;
                      }
                    }
                    else
                    {
                      sub_24337C254((uint64_t)v189, (uint64_t)v184, (uint64_t *)&unk_26B0C8E20);
                      if (v144(v143, 1, v146) != 1)
                      {
                        uint64_t v147 = v186;
                        uint64_t v148 = v182;
                        uint64_t v149 = v175;
                        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v186 + 32))(v182, v143, v175);
                        sub_243757314((unint64_t *)&unk_268DA2730, MEMORY[0x263F07490]);
                        uint64_t v150 = v184;
                        char v151 = sub_243958270();
                        uint64_t v152 = *(void (**)(unsigned char *, uint64_t))(v147 + 8);
                        v152(v148, v149);
                        sub_24337C1BC((uint64_t)v187, (uint64_t *)&unk_26B0C8E20);
                        sub_24337C1BC((uint64_t)v188, (uint64_t *)&unk_26B0C8E20);
                        v152(v150, v149);
                        sub_24337C1BC((uint64_t)v189, (uint64_t *)&unk_26B0C8E20);
                        if ((v151 & 1) == 0) {
                          return 0;
                        }
                        goto LABEL_78;
                      }
                      sub_24337C1BC((uint64_t)v187, (uint64_t *)&unk_26B0C8E20);
                      sub_24337C1BC((uint64_t)v188, (uint64_t *)&unk_26B0C8E20);
                      (*(void (**)(unsigned char *, uint64_t))(v186 + 8))(v184, v175);
                    }
                    uint64_t v79 = &qword_268D97950;
                    uint64_t v80 = v189;
LABEL_35:
                    sub_24337C1BC((uint64_t)v80, v79);
                    return 0;
                  }
                }
                else
                {
                  sub_24337C254((uint64_t)v129, v89, &qword_26B0C98A0);
                  uint64_t v134 = v133;
                  if (v133(v130, 1, v132) != 1)
                  {
                    uint64_t v135 = v194;
                    uint64_t v136 = v191;
                    ((void (*)(unsigned char *, uint64_t, uint64_t))v194[4])(v191, v130, v132);
                    sub_243757314(&qword_268D98EC0, MEMORY[0x263F06EA8]);
                    char v137 = sub_243958270();
                    long long v138 = (void (*)(unsigned char *, uint64_t))v135[1];
                    v138(v136, v132);
                    sub_24337C1BC(v176, &qword_26B0C98A0);
                    sub_24337C1BC(v131, &qword_26B0C98A0);
                    v138((unsigned char *)v89, v132);
                    sub_24337C1BC((uint64_t)v190, &qword_26B0C98A0);
                    if ((v137 & 1) == 0) {
                      return 0;
                    }
                    goto LABEL_71;
                  }
                  sub_24337C1BC(v176, &qword_26B0C98A0);
                  sub_24337C1BC(v127, &qword_26B0C98A0);
                  ((void (*)(uint64_t, uint64_t))v194[1])(v89, v132);
                  uint64_t v129 = v190;
                }
                uint64_t v79 = &qword_268D98EB8;
                uint64_t v80 = v129;
                goto LABEL_35;
              }
            }
            sub_243407784(v119, v120);
            sub_243407784(v122, v123);
            sub_2433D7B74(v119, v120);
            sub_2433D7B74(v122, v123);
            return 0;
          }
          sub_24337C1BC((uint64_t)v34, &qword_26B0C98A0);
          sub_24337C1BC((uint64_t)v37, &qword_26B0C98A0);
          ((void (*)(uint64_t, uint64_t))v194[1])(v91, v90);
        }
        uint64_t v79 = &qword_268D98EB8;
        uint64_t v80 = v86;
        goto LABEL_35;
      }
      sub_24337C1BC((uint64_t)v43, &qword_26B0C98A0);
      sub_24337C1BC((uint64_t)v52, &qword_26B0C98A0);
      ((void (*)(unsigned char *, uint64_t))v194[1])(v40, v73);
    }
    uint64_t v79 = &qword_268D98EB8;
    uint64_t v80 = v21;
    goto LABEL_35;
  }
  return result;
}

unint64_t sub_2437548D0()
{
  unint64_t result = qword_268D9F560;
  if (!qword_268D9F560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F560);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for MapsBrand(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(_DWORD *)(a1 + 8) = *((_DWORD *)a2 + 2);
    *(unsigned char *)(a1 + 12) = *((unsigned char *)a2 + 12);
    uint64_t v7 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v7;
    uint64_t v8 = a2[5];
    uint64_t v9 = a3[8];
    __dst = (void *)(a1 + v9);
    uint64_t v10 = (char *)a2 + v9;
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v8;
    uint64_t v11 = sub_243957010();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v16 = v12;
    uint64_t v17 = a3[9];
    uint64_t v18 = (char *)v4 + v17;
    uint64_t v19 = (char *)a2 + v17;
    if (v13((char *)a2 + v17, 1, v11))
    {
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v18, v19, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v18, 0, 1, v11);
    }
    uint64_t v21 = a3[10];
    uint64_t v22 = a3[11];
    uint64_t v23 = (void *)((char *)v4 + v21);
    uint64_t v24 = (uint64_t *)((char *)a2 + v21);
    uint64_t v25 = v24[1];
    *uint64_t v23 = *v24;
    v23[1] = v25;
    uint64_t v26 = (char *)v4 + v22;
    uint64_t v27 = (uint64_t)a2 + v22;
    v26[2] = *(unsigned char *)(v27 + 2);
    *(_WORD *)uint64_t v26 = *(_WORD *)v27;
    uint64_t v28 = a3[12];
    uint64_t v29 = a3[13];
    uint64_t v30 = (void *)((char *)v4 + v28);
    uint64_t v31 = (uint64_t *)((char *)a2 + v28);
    uint64_t v32 = v31[1];
    void *v30 = *v31;
    v30[1] = v32;
    uint64_t v33 = (char *)v4 + v29;
    uint64_t v34 = (uint64_t *)((char *)a2 + v29);
    unint64_t v35 = *(uint64_t *)((char *)a2 + v29 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v35 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
    }
    else
    {
      uint64_t v36 = *v34;
      sub_243403DD0(*v34, v35);
      *(void *)uint64_t v33 = v36;
      *((void *)v33 + 1) = v35;
    }
    uint64_t v37 = a3[14];
    uint64_t v38 = (char *)v4 + v37;
    uint64_t v39 = (char *)a2 + v37;
    if (v13((char *)a2 + v37, 1, v11))
    {
      uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
      memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v38, v39, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v38, 0, 1, v11);
    }
    uint64_t v41 = a3[15];
    uint64_t v42 = (char *)v4 + v41;
    char v43 = (char *)a2 + v41;
    uint64_t v44 = sub_243957400();
    uint64_t v45 = *(void *)(v44 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
    {
      uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
      memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v42, v43, v44);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
    }
    uint64_t v47 = a3[16];
    uint64_t v48 = (char *)v4 + v47;
    uint64_t v49 = (char *)a2 + v47;
    if (v13(v49, 1, v11))
    {
      uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
      memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v48, v49, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v48, 0, 1, v11);
    }
  }
  return v4;
}

uint64_t destroy for MapsBrand(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[8];
  uint64_t v5 = sub_243957010();
  uint64_t v17 = *(void *)(v5 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
  if (!v6(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + a2[9];
  if (!v6(v7, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v7, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = (uint64_t *)(a1 + a2[13]);
  unint64_t v9 = v8[1];
  if (v9 >> 60 != 15) {
    sub_2433807F0(*v8, v9);
  }
  uint64_t v10 = a1 + a2[14];
  if (!v6(v10, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v10, v5);
  }
  uint64_t v11 = a1 + a2[15];
  uint64_t v12 = sub_243957400();
  uint64_t v13 = *(void *)(v12 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  uint64_t v14 = a1 + a2[16];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v14, 1, v5);
  if (!result)
  {
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 8);
    return v16(v14, v5);
  }
  return result;
}

uint64_t initializeWithCopy for MapsBrand(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  uint64_t v8 = a3[8];
  __dst = (void *)(a1 + v8);
  unint64_t v9 = (const void *)(a2 + v8);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v10 = sub_243957010();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v14 = v11;
  uint64_t v15 = a3[9];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  if (v12((const void *)(a2 + v15), 1, v10))
  {
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v16, v17, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v16, 0, 1, v10);
  }
  uint64_t v19 = a3[10];
  uint64_t v20 = a3[11];
  uint64_t v21 = (void *)(a1 + v19);
  uint64_t v22 = (void *)(a2 + v19);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  uint64_t v24 = a1 + v20;
  uint64_t v25 = a2 + v20;
  *(unsigned char *)(v24 + 2) = *(unsigned char *)(v25 + 2);
  *(_WORD *)uint64_t v24 = *(_WORD *)v25;
  uint64_t v26 = a3[12];
  uint64_t v27 = a3[13];
  uint64_t v28 = (void *)(a1 + v26);
  uint64_t v29 = (void *)(a2 + v26);
  uint64_t v30 = v29[1];
  *uint64_t v28 = *v29;
  v28[1] = v30;
  uint64_t v31 = a1 + v27;
  uint64_t v32 = (uint64_t *)(a2 + v27);
  unint64_t v33 = *(void *)(a2 + v27 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v33 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
  }
  else
  {
    uint64_t v34 = *v32;
    sub_243403DD0(*v32, v33);
    *(void *)uint64_t v31 = v34;
    *(void *)(v31 + 8) = v33;
  }
  uint64_t v35 = a3[14];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (const void *)(a2 + v35);
  if (v12((const void *)(a2 + v35), 1, v10))
  {
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v36, v37, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v36, 0, 1, v10);
  }
  uint64_t v39 = a3[15];
  uint64_t v40 = (void *)(a1 + v39);
  uint64_t v41 = (const void *)(a2 + v39);
  uint64_t v42 = sub_243957400();
  uint64_t v43 = *(void *)(v42 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
  {
    uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
    memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v43 + 16))(v40, v41, v42);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
  }
  uint64_t v45 = a3[16];
  uint64_t v46 = (void *)(a1 + v45);
  uint64_t v47 = (const void *)(a2 + v45);
  if (v12(v47, 1, v10))
  {
    uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v46, v47, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v46, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithCopy for MapsBrand(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  int v6 = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(_DWORD *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[8];
  uint64_t v8 = (void *)(a1 + v7);
  unint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_243957010();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = a3[9];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  int v19 = v12((void *)(a1 + v16), 1, v10);
  int v20 = v12(v18, 1, v10);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v17, v18, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v17, v10);
LABEL_12:
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v17, v18, v10);
LABEL_13:
  uint64_t v22 = a3[10];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[11];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = (__int16 *)(a2 + v25);
  __int16 v28 = *v27;
  *(unsigned char *)(v26 + 2) = *((unsigned char *)v27 + 2);
  *(_WORD *)uint64_t v26 = v28;
  uint64_t v29 = a3[12];
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = (void *)(a2 + v29);
  void *v30 = *v31;
  v30[1] = v31[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v32 = a3[13];
  unint64_t v33 = (uint64_t *)(a1 + v32);
  uint64_t v34 = (uint64_t *)(a2 + v32);
  unint64_t v35 = *(void *)(a2 + v32 + 8);
  if (*(void *)(a1 + v32 + 8) >> 60 == 15)
  {
    if (v35 >> 60 != 15)
    {
      uint64_t v36 = *v34;
      sub_243403DD0(v36, v35);
      *unint64_t v33 = v36;
      v33[1] = v35;
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v35 >> 60 == 15)
  {
    sub_243424FE8((uint64_t)v33);
LABEL_18:
    *(_OWORD *)unint64_t v33 = *(_OWORD *)v34;
    goto LABEL_20;
  }
  uint64_t v37 = *v34;
  sub_243403DD0(v37, v35);
  uint64_t v38 = *v33;
  unint64_t v39 = v33[1];
  *unint64_t v33 = v37;
  v33[1] = v35;
  sub_2433807F0(v38, v39);
LABEL_20:
  uint64_t v40 = a3[14];
  uint64_t v41 = (void *)(a1 + v40);
  uint64_t v42 = (void *)(a2 + v40);
  int v43 = v12((void *)(a1 + v40), 1, v10);
  int v44 = v12(v42, 1, v10);
  uint64_t v63 = v11;
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v41, v42, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v41, 0, 1, v10);
      goto LABEL_26;
    }
    goto LABEL_25;
  }
  if (v44)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v41, v10);
LABEL_25:
    uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_26;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v41, v42, v10);
LABEL_26:
  uint64_t v64 = a3;
  uint64_t v46 = a3[15];
  uint64_t v47 = (void *)(a1 + v46);
  uint64_t v48 = (void *)(a2 + v46);
  uint64_t v49 = sub_243957400();
  uint64_t v50 = *(void *)(v49 - 8);
  uint64_t v51 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v50 + 48);
  int v52 = v51(v47, 1, v49);
  int v53 = v51(v48, 1, v49);
  if (v52)
  {
    uint64_t v54 = v12;
    if (!v53)
    {
      (*(void (**)(void *, void *, uint64_t))(v50 + 16))(v47, v48, v49);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
      goto LABEL_32;
    }
    goto LABEL_31;
  }
  uint64_t v54 = v12;
  if (v53)
  {
    (*(void (**)(void *, uint64_t))(v50 + 8))(v47, v49);
LABEL_31:
    uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
    memcpy(v47, v48, *(void *)(*(void *)(v55 - 8) + 64));
    goto LABEL_32;
  }
  (*(void (**)(void *, void *, uint64_t))(v50 + 24))(v47, v48, v49);
LABEL_32:
  uint64_t v56 = v64[16];
  uint64_t v57 = (void *)(a1 + v56);
  char v58 = (void *)(a2 + v56);
  int v59 = v54((void *)(a1 + v56), 1, v10);
  int v60 = v54(v58, 1, v10);
  if (!v59)
  {
    if (!v60)
    {
      (*(void (**)(void *, void *, uint64_t))(v63 + 24))(v57, v58, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v63 + 8))(v57, v10);
    goto LABEL_37;
  }
  if (v60)
  {
LABEL_37:
    uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(v57, v58, *(void *)(*(void *)(v61 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v63 + 16))(v57, v58, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v63 + 56))(v57, 0, 1, v10);
  return a1;
}

uint64_t initializeWithTake for MapsBrand(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  uint64_t v7 = a3[8];
  uint64_t v8 = (void *)(a1 + v7);
  unint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_243957010();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[9];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  if (v12((const void *)(a2 + v14), 1, v10))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v15, v16, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  uint64_t v18 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(_WORD *)uint64_t v19 = *(_WORD *)v20;
  *(unsigned char *)(v19 + 2) = *(unsigned char *)(v20 + 2);
  uint64_t v21 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v21) = *(_OWORD *)(a2 + v21);
  uint64_t v22 = a3[14];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (const void *)(a2 + v22);
  uint64_t v37 = v12;
  if (v12((const void *)(a2 + v22), 1, v10))
  {
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v23, v24, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v23, 0, 1, v10);
  }
  uint64_t v26 = a3[15];
  uint64_t v27 = (void *)(a1 + v26);
  __int16 v28 = (const void *)(a2 + v26);
  uint64_t v29 = sub_243957400();
  uint64_t v30 = *(void *)(v29 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
  {
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
    memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v30 + 32))(v27, v28, v29);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
  }
  uint64_t v32 = a3[16];
  unint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (const void *)(a2 + v32);
  if (v37(v34, 1, v10))
  {
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v33, v34, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v33, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithTake for MapsBrand(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[8];
  unint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = sub_243957010();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  uint64_t v17 = a3[9];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  int v20 = v13((void *)(a1 + v17), 1, v11);
  int v21 = v13(v19, 1, v11);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v18, v19, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v18, 0, 1, v11);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v21)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v18, v11);
LABEL_12:
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v18, v19, v11);
LABEL_13:
  uint64_t v23 = a3[10];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (uint64_t *)(a2 + v23);
  uint64_t v27 = *v25;
  uint64_t v26 = v25[1];
  void *v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[11];
  uint64_t v29 = a3[12];
  uint64_t v30 = a1 + v28;
  uint64_t v31 = a2 + v28;
  *(_WORD *)uint64_t v30 = *(_WORD *)v31;
  *(unsigned char *)(v30 + 2) = *(unsigned char *)(v31 + 2);
  uint64_t v32 = (void *)(a1 + v29);
  unint64_t v33 = (uint64_t *)(a2 + v29);
  uint64_t v35 = *v33;
  uint64_t v34 = v33[1];
  *uint64_t v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  uint64_t v36 = a3[13];
  uint64_t v37 = a1 + v36;
  uint64_t v38 = a2 + v36;
  unint64_t v39 = *(void *)(a1 + v36 + 8);
  if (v39 >> 60 == 15)
  {
LABEL_16:
    *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
    goto LABEL_18;
  }
  unint64_t v40 = *(void *)(v38 + 8);
  if (v40 >> 60 == 15)
  {
    sub_243424FE8(v37);
    goto LABEL_16;
  }
  uint64_t v41 = *(void *)v37;
  *(void *)uint64_t v37 = *(void *)v38;
  *(void *)(v37 + 8) = v40;
  sub_2433807F0(v41, v39);
LABEL_18:
  uint64_t v42 = a3[14];
  int v43 = (void *)(a1 + v42);
  int v44 = (void *)(a2 + v42);
  int v45 = v13((void *)(a1 + v42), 1, v11);
  int v46 = v13(v44, 1, v11);
  uint64_t v65 = v12;
  if (v45)
  {
    if (!v46)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v43, v44, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v43, 0, 1, v11);
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  if (v46)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v43, v11);
LABEL_23:
    uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
    goto LABEL_24;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v43, v44, v11);
LABEL_24:
  char v66 = a3;
  uint64_t v48 = a3[15];
  uint64_t v49 = (void *)(a1 + v48);
  uint64_t v50 = (void *)(a2 + v48);
  uint64_t v51 = sub_243957400();
  uint64_t v52 = *(void *)(v51 - 8);
  int v53 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v52 + 48);
  int v54 = v53(v49, 1, v51);
  int v55 = v53(v50, 1, v51);
  if (v54)
  {
    uint64_t v56 = v13;
    if (!v55)
    {
      (*(void (**)(void *, void *, uint64_t))(v52 + 32))(v49, v50, v51);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
      goto LABEL_30;
    }
    goto LABEL_29;
  }
  uint64_t v56 = v13;
  if (v55)
  {
    (*(void (**)(void *, uint64_t))(v52 + 8))(v49, v51);
LABEL_29:
    uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
    memcpy(v49, v50, *(void *)(*(void *)(v57 - 8) + 64));
    goto LABEL_30;
  }
  (*(void (**)(void *, void *, uint64_t))(v52 + 40))(v49, v50, v51);
LABEL_30:
  uint64_t v58 = v66[16];
  int v59 = (void *)(a1 + v58);
  int v60 = (void *)(a2 + v58);
  int v61 = v56((void *)(a1 + v58), 1, v11);
  int v62 = v56(v60, 1, v11);
  if (!v61)
  {
    if (!v62)
    {
      (*(void (**)(void *, void *, uint64_t))(v65 + 40))(v59, v60, v11);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v65 + 8))(v59, v11);
    goto LABEL_35;
  }
  if (v62)
  {
LABEL_35:
    uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v65 + 32))(v59, v60, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v65 + 56))(v59, 0, 1, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for MapsBrand(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2437567E4);
}

uint64_t sub_2437567E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    uint64_t v10 = *(void *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == a2)
    {
      uint64_t v11 = v9;
      uint64_t v12 = a1 + *(int *)(a3 + 32);
      uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
      return v13(v12, a2, v11);
    }
    else
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
      int v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
      uint64_t v16 = v14;
      uint64_t v17 = a1 + *(int *)(a3 + 60);
      return v15(v17, a2, v16);
    }
  }
}

uint64_t storeEnumTagSinglePayload for MapsBrand(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_243756938);
}

uint64_t sub_243756938(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 24) = a2;
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 32);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 60);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_243756A6C()
{
  sub_243444850(319, (unint64_t *)&qword_26B0C9138, MEMORY[0x263F06EA8]);
  if (v0 <= 0x3F)
  {
    sub_243444850(319, (unint64_t *)&qword_26B0C92A0, MEMORY[0x263F07490]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unsigned char *storeEnumTagSinglePayload for MapsBrand.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *uint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x243756C80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MapsBrand.CodingKeys()
{
  return &type metadata for MapsBrand.CodingKeys;
}

unint64_t sub_243756CBC()
{
  unint64_t result = qword_268D9F580;
  if (!qword_268D9F580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F580);
  }
  return result;
}

unint64_t sub_243756D14()
{
  unint64_t result = qword_268D9F588;
  if (!qword_268D9F588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F588);
  }
  return result;
}

unint64_t sub_243756D6C()
{
  unint64_t result = qword_268D9F590;
  if (!qword_268D9F590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F590);
  }
  return result;
}

uint64_t sub_243756DC0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1684632941 && a2 == 0xE400000000000000;
  if (v2 || (sub_243959940() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000002439AFA40 || (sub_243959940() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_243959940() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6D754E656E6F6870 && a2 == 0xEB00000000726562 || (sub_243959940() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000 || (sub_243959940() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x67616D496F726568 && a2 == 0xEC0000004C525565 || (sub_243959940() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000002439AC920 || (sub_243959940() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x614374656C6C6177 && a2 == 0xEE0079726F676574 || (sub_243959940() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000002439AC960 || (sub_243959940() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000002439AC980 || (sub_243959940() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x7373656E69737562 && a2 == 0xEF4C525574616843 || (sub_243959940() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002439AC9A0 || (sub_243959940() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x4C52556F676F6CLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    char v6 = sub_243959940();
    swift_bridgeObjectRelease();
    if (v6) {
      return 12;
    }
    else {
      return 13;
    }
  }
}

uint64_t sub_243757314(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id PendingApplePayOrderImporter.__allocating_init(store:)(uint64_t a1)
{
  int v3 = (char *)objc_allocWithZone(v1);
  *(void *)&v3[OBJC_IVAR____TtC10FinanceKit28PendingApplePayOrderImporter_store] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id PendingApplePayOrderImporter.init(store:)(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR____TtC10FinanceKit28PendingApplePayOrderImporter_store] = a1;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for PendingApplePayOrderImporter();
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t type metadata accessor for PendingApplePayOrderImporter()
{
  return self;
}

id sub_243757470()
{
  return sub_24375858C();
}

void sub_24375750C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_243957010();
  uint64_t v52 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v6 = (char *)v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(a1, sel_orderTypeIdentifier);
  uint64_t v8 = sub_2439582D0();

  id v9 = objc_msgSend(a1, sel_orderIdentifier);
  uint64_t v10 = sub_2439582D0();

  if (qword_26B0C7290 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_243957B10();
  uint64_t v12 = __swift_project_value_buffer(v11, (uint64_t)qword_26B0C7278);
  id v13 = a1;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  id v14 = v13;
  uint64_t v53 = v12;
  uint64_t v15 = sub_243957AF0();
  os_log_type_t v16 = sub_243958AD0();
  int v17 = v16;
  BOOL v18 = os_log_type_enabled(v15, v16);
  uint64_t v50 = v8;
  uint64_t v51 = v10;
  if (v18)
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v49 = v2;
    uint64_t v20 = v19;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v48 = v21;
    *(_DWORD *)uint64_t v20 = 136315651;
    v45[1] = v20 + 4;
    id v54 = 0;
    unint64_t v55 = 0xE000000000000000;
    v56[0] = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    os_log_t v47 = v15;
    sub_243959330();
    swift_bridgeObjectRelease();
    id v54 = (id)0xD000000000000016;
    unint64_t v55 = 0x80000002439AB360;
    swift_bridgeObjectRetain();
    int v46 = v17;
    sub_243958460();
    swift_bridgeObjectRelease();
    sub_243958460();
    swift_bridgeObjectRetain();
    sub_243958460();
    swift_bridgeObjectRelease();
    sub_243958460();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v54 = (id)sub_2433781FC((uint64_t)v54, v55, v56);
    sub_2439590C0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2080;
    id v22 = objc_msgSend(v14, sel_webServiceBaseURL);
    sub_243956F90();

    sub_2436839B0();
    uint64_t v23 = sub_2439598D0();
    unint64_t v25 = v24;
    (*(void (**)(char *, uint64_t))(v52 + 8))(v6, v4);
    id v54 = (id)sub_2433781FC(v23, v25, v56);
    sub_2439590C0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 22) = 2085;
    id v26 = objc_msgSend(v14, sel_authenticationToken);
    uint64_t v27 = sub_2439582D0();
    unint64_t v29 = v28;

    id v54 = (id)sub_2433781FC(v27, v29, v56);
    sub_2439590C0();

    swift_bridgeObjectRelease();
    os_log_t v30 = v47;
    _os_log_impl(&dword_243363000, v47, (os_log_type_t)v46, "Saving pending Apple Pay order %s with webServiceURL=%s, authenticationToken=%{sensitive}s", (uint8_t *)v20, 0x20u);
    uint64_t v31 = v48;
    swift_arrayDestroy();
    MEMORY[0x245680100](v31, -1, -1);
    uint64_t v32 = v20;
    uint64_t v2 = v49;
    MEMORY[0x245680100](v32, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  id v33 = objc_msgSend(*(id *)(*(void *)(v2 + OBJC_IVAR____TtC10FinanceKit28PendingApplePayOrderImporter_store) + 16), sel_newBackgroundContext);
  uint64_t v34 = MEMORY[0x270FA5388](v33);
  v45[-2] = v34;
  v45[-1] = v14;
  uint64_t v35 = MEMORY[0x270FA5388](v34);
  v45[-4] = sub_24375868C;
  v45[-3] = v36;
  v45[-2] = v35;
  sub_24349EE64();
  sub_243958D90();

  id v37 = v54;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v38 = v37;
  unint64_t v39 = sub_243957AF0();
  os_log_type_t v40 = sub_243958AD0();
  if (os_log_type_enabled(v39, v40))
  {
    uint64_t v41 = swift_slowAlloc();
    uint64_t v42 = (void *)swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    *(_DWORD *)uint64_t v41 = 136315394;
    uint64_t v53 = v41 + 4;
    id v54 = 0;
    unint64_t v55 = 0xE000000000000000;
    v56[0] = v43;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_243959330();
    swift_bridgeObjectRelease();
    id v54 = (id)0xD000000000000016;
    unint64_t v55 = 0x80000002439AB360;
    swift_bridgeObjectRetain();
    sub_243958460();
    swift_bridgeObjectRelease();
    sub_243958460();
    swift_bridgeObjectRetain();
    sub_243958460();
    swift_bridgeObjectRelease();
    sub_243958460();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v54 = (id)sub_2433781FC((uint64_t)v54, v55, v56);
    sub_2439590C0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v41 + 12) = 2112;
    id v54 = v38;
    id v44 = v38;
    sub_2439590C0();
    void *v42 = v38;

    _os_log_impl(&dword_243363000, v39, v40, "Saved pending Apple Pay order %s with ID %@", (uint8_t *)v41, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CAB0);
    swift_arrayDestroy();
    MEMORY[0x245680100](v42, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x245680100](v43, -1, -1);
    MEMORY[0x245680100](v41, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
}

void sub_243758040()
{
  id v1 = objc_msgSend(*(id *)(*(void *)(v0 + OBJC_IVAR____TtC10FinanceKit28PendingApplePayOrderImporter_store) + 16), sel_newBackgroundContext);
  sub_24349EE64();
  sub_243958D90();
}

void sub_2437580FC(void *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  uint64_t v32 = a3;
  v35[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v6 = sub_243957010();
  uint64_t v33 = *(void *)(v6 - 8);
  uint64_t v34 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ManagedPendingApplePayOrder();
  id v9 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, a1);
  id v10 = objc_msgSend(a2, sel_transactionIdentifier);
  if (!v10)
  {
    sub_2439582D0();
    id v10 = (id)sub_2439582A0();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v9, sel_setTransactionIdentifier_, v10);

  id v11 = objc_msgSend(a2, sel_orderTypeIdentifier);
  uint64_t v12 = sub_2439582D0();
  uint64_t v14 = v13;

  unint64_t v15 = sub_2435EDB70(v12, v14, (uint64_t)a1);
  if (v3)
  {

    swift_bridgeObjectRelease();
  }
  else
  {
    os_log_t v30 = v8;
    if (v15)
    {
      id v16 = (id)v15;
      swift_bridgeObjectRelease();
    }
    else
    {
      type metadata accessor for ManagedOrderType();
      id v16 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, a1);
      int v17 = (void *)sub_2439582A0();
      objc_msgSend(v16, sel_setOrderTypeIdentifier_, v17);
      swift_bridgeObjectRelease();
    }
    id v31 = v16;
    objc_msgSend(v9, sel_setOrderType_, v16);
    id v18 = objc_msgSend(a2, sel_orderTypeIdentifier);
    if (!v18)
    {
      sub_2439582D0();
      id v18 = (id)sub_2439582A0();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v9, sel_setOrderTypeIdentifier_, v18);

    id v19 = objc_msgSend(a2, sel_orderIdentifier);
    uint64_t v20 = (uint64_t)v30;
    if (!v19)
    {
      sub_2439582D0();
      id v19 = (id)sub_2439582A0();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v9, sel_setOrderIdentifier_, v19);

    id v21 = objc_msgSend(a2, sel_authenticationToken);
    id v22 = v31;
    if (!v21)
    {
      sub_2439582D0();
      id v21 = (id)sub_2439582A0();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v9, sel_setAuthenticationToken_, v21);

    id v23 = objc_msgSend(a2, sel_webServiceBaseURL);
    sub_243956F90();

    id v24 = sub_2435F9CD4(v22, v20, (uint64_t)a1);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v20, v34);
    objc_msgSend(v9, sel_setOrderWebService_, v24);

    v35[0] = 0;
    if (objc_msgSend(a1, sel_save_, v35))
    {
      id v25 = v35[0];
      id v26 = v9;
      id v27 = objc_msgSend(v26, sel_objectID);

      *uint64_t v32 = v27;
    }
    else
    {
      id v28 = v35[0];
      sub_243956E10();

      swift_willThrow();
    }
  }
}

id PendingApplePayOrderImporter.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PendingApplePayOrderImporter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_24375858C()
{
  if (qword_26B0C7200 != -1) {
    swift_once();
  }
  id v1 = (uint64_t *)(qword_26B0C75D0 + 16);
  objc_super v2 = (os_unfair_lock_s *)(qword_26B0C75D0 + 24);
  swift_retain();
  os_unfair_lock_lock(v2);
  sub_2436E3E4C(v1, &v9);
  os_unfair_lock_unlock(v2);
  if (v0) {
    return (id)swift_release();
  }
  uint64_t v4 = v9;
  swift_release();
  uint64_t v5 = *(void *)(v4 + 16);
  swift_retain();
  swift_release();
  uint64_t v6 = (objc_class *)type metadata accessor for PendingApplePayOrderImporter();
  uint64_t v7 = (char *)objc_allocWithZone(v6);
  *(void *)&v7[OBJC_IVAR____TtC10FinanceKit28PendingApplePayOrderImporter_store] = v5;
  v8.receiver = v7;
  v8.super_class = v6;
  return objc_msgSendSuper2(&v8, sel_init);
}

void sub_24375868C(void *a1@<X8>)
{
  sub_2437580FC(*(void **)(v1 + 16), *(void **)(v1 + 24), a1);
}

void sub_2437586A8(void *a1@<X8>)
{
}

void sub_2437586C0(void *a1@<X8>)
{
  sub_2433771B4(*(void (**)(uint64_t *__return_ptr))(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
  if (!v2) {
    *a1 = v4;
  }
}

uint64_t method lookup function for PendingApplePayOrderImporter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for PendingApplePayOrderImporter);
}

uint64_t dispatch thunk of PendingApplePayOrderImporter.__allocating_init(store:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of static PendingApplePayOrderImporter.makeImporter()()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of PendingApplePayOrderImporter.insertOrUpdatePendingApplePayOrder(orderDetails:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of PendingApplePayOrderImporter.insertPendingApplePayOrder(orderDetails:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x70))();
}

void sub_2437587C4(void *a1@<X8>)
{
}

id static InternalTransactionQuery.predicateFor(account:)(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C9910);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_24395EAD0;
  *(void *)(v2 + 56) = MEMORY[0x263F8D310];
  *(void *)(v2 + 32) = 0xD000000000000024;
  *(void *)(v2 + 40) = 0x80000002439B0AC0;
  uint64_t v3 = sub_243957490();
  *(void *)(v2 + 88) = v3;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v2 + 64));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16))(boxed_opaque_existential_0, a1, v3);
  uint64_t v5 = (void *)sub_2439582A0();
  uint64_t v6 = (void *)sub_243958630();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(self, sel_predicateWithFormat_argumentArray_, v5, v6);

  return v7;
}

uint64_t sub_243758914()
{
  uint64_t result = type metadata accessor for FinanceXPCSession.SessionType();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

id *sub_2437589CC()
{
  swift_release();
  unint64_t v1 = (char *)v0 + *((void *)*v0 + 15);
  uint64_t v2 = type metadata accessor for FinanceXPCSession.SessionType();
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_243379EA8(*(uint64_t *)((char *)v0 + *((void *)*v0 + 16)));
  return v0;
}

uint64_t sub_243758AB4()
{
  sub_2437589CC();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FinanceXPCSession()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FinanceXPCSession.SessionType()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_243758B3C()
{
  uint64_t result = sub_243957BA0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_243758BCC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = sub_243957BA0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_243758CC4(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (!result)
  {
    uint64_t v3 = sub_243957BA0();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *sub_243758D3C(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_243957BA0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_243758DF0(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 - 8);
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, a3);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(v5 + 64));
    }
    else
    {
      uint64_t v6 = sub_243957BA0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *sub_243758EF8(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_243957BA0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_243758FAC(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 - 8);
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, a3);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(v5 + 64));
    }
    else
    {
      uint64_t v6 = sub_243957BA0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

id static Query.predicateFor(id:)(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C9910);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_24395EAD0;
  *(void *)(v2 + 56) = MEMORY[0x263F8D310];
  *(void *)(v2 + 32) = 25705;
  *(void *)(v2 + 40) = 0xE200000000000000;
  uint64_t v3 = sub_243957490();
  *(void *)(v2 + 88) = v3;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v2 + 64));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16))(boxed_opaque_existential_0, a1, v3);
  uint64_t v5 = (void *)sub_2439582A0();
  uint64_t v6 = (void *)sub_243958630();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(self, sel_predicateWithFormat_argumentArray_, v5, v6);

  return v7;
}

id static Query.predicateFor(ids:)(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C9910);
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = MEMORY[0x263F8D310];
  *(_OWORD *)(v2 + 16) = xmmword_24395EAD0;
  *(void *)(v2 + 56) = v3;
  *(void *)(v2 + 32) = 25705;
  *(void *)(v2 + 40) = 0xE200000000000000;
  *(void *)(v2 + 88) = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9D3D0);
  *(void *)(v2 + 64) = a1;
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)sub_2439582A0();
  uint64_t v5 = (void *)sub_243958630();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(self, sel_predicateWithFormat_argumentArray_, v4, v5);

  return v6;
}

id static InternalAccountQuery.predicateFor(id:)(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C9910);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_24395EAD0;
  *(void *)(v2 + 56) = MEMORY[0x263F8D310];
  *(void *)(v2 + 32) = 0xD000000000000016;
  *(void *)(v2 + 40) = 0x80000002439B0B40;
  uint64_t v3 = sub_243957490();
  *(void *)(v2 + 88) = v3;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v2 + 64));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16))(boxed_opaque_existential_0, a1, v3);
  uint64_t v5 = (void *)sub_2439582A0();
  id v6 = (void *)sub_243958630();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(self, sel_predicateWithFormat_argumentArray_, v5, v6);

  return v7;
}

id static InternalAccountQuery.predicateFor(ids:)(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C9910);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_24395EAD0;
  *(void *)(v2 + 56) = MEMORY[0x263F8D310];
  *(void *)(v2 + 32) = 0xD000000000000016;
  *(void *)(v2 + 40) = 0x80000002439B0B40;
  *(void *)(v2 + 88) = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9D3D0);
  *(void *)(v2 + 64) = a1;
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)sub_2439582A0();
  uint64_t v4 = (void *)sub_243958630();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(self, sel_predicateWithFormat_argumentArray_, v3, v4);

  return v5;
}

uint64_t FormatterConfiguration.init(locale:calendar:timeZone:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_243957560();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a4, a1, v8);
  uint64_t v9 = type metadata accessor for FormatterConfiguration();
  uint64_t v10 = a4 + *(int *)(v9 + 20);
  uint64_t v11 = sub_2439576F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10, a2, v11);
  uint64_t v12 = a4 + *(int *)(v9 + 24);
  uint64_t v13 = sub_243957740();
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32);

  return v14(v12, a3, v13);
}

uint64_t type metadata accessor for FormatterConfiguration()
{
  uint64_t result = qword_268D9F5F0;
  if (!qword_268D9F5F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t static FormatterConfiguration.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (MEMORY[0x24567C750]())
  {
    uint64_t v4 = type metadata accessor for FormatterConfiguration();
    if (MEMORY[0x24567C8B0](a1 + *(int *)(v4 + 20), a2 + *(int *)(v4 + 20)))
    {
      JUMPOUT(0x24567C9A0);
    }
  }
  return 0;
}

uint64_t FormatterConfiguration.locale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_243957560();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t FormatterConfiguration.locale.setter(uint64_t a1)
{
  uint64_t v3 = sub_243957560();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*FormatterConfiguration.locale.modify())()
{
  return nullsub_1;
}

uint64_t FormatterConfiguration.calendar.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatterConfiguration() + 20);
  uint64_t v4 = sub_2439576F0();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t FormatterConfiguration.calendar.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatterConfiguration() + 20);
  uint64_t v4 = sub_2439576F0();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*FormatterConfiguration.calendar.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatterConfiguration.timeZone.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatterConfiguration() + 24);
  uint64_t v4 = sub_243957740();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t FormatterConfiguration.timeZone.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatterConfiguration() + 24);
  uint64_t v4 = sub_243957740();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*FormatterConfiguration.timeZone.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatterConfiguration.hash(into:)()
{
  return sub_2439581D0();
}

uint64_t sub_243759B9C()
{
  uint64_t v1 = 0x7261646E656C6163;
  if (*v0 != 1) {
    uint64_t v1 = 0x656E6F5A656D6974;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x656C61636F6CLL;
  }
}

uint64_t sub_243759BF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24375B754(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_243759C1C(uint64_t a1)
{
  unint64_t v2 = sub_243759F10();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_243759C58(uint64_t a1)
{
  unint64_t v2 = sub_243759F10();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FormatterConfiguration.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F5A0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_243759F10();
  sub_243959BD0();
  v8[15] = 0;
  sub_243957560();
  sub_24375AA4C(&qword_268D9F5B0, MEMORY[0x263F07690]);
  sub_243959860();
  if (!v1)
  {
    type metadata accessor for FormatterConfiguration();
    v8[14] = 1;
    sub_2439576F0();
    sub_24375AA4C(&qword_268D9F5B8, MEMORY[0x263F07920]);
    sub_243959860();
    v8[13] = 2;
    sub_243957740();
    sub_24375AA4C(&qword_268D9F5C0, MEMORY[0x263F079C8]);
    sub_243959860();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_243759F10()
{
  unint64_t result = qword_268D9F5A8;
  if (!qword_268D9F5A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F5A8);
  }
  return result;
}

uint64_t FormatterConfiguration.hashValue.getter()
{
  return sub_243959B40();
}

uint64_t FormatterConfiguration.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v23 = sub_243957740();
  uint64_t v21 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  id v24 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_2439576F0();
  uint64_t v25 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_243957560();
  uint64_t v26 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v29 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F5C8);
  uint64_t v27 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_243759F10();
  id v31 = v9;
  uint64_t v13 = v32;
  sub_243959BA0();
  if (v13) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v14 = v27;
  uint64_t v15 = v28;
  uint64_t v32 = v12;
  char v35 = 0;
  sub_24375AA4C(&qword_268D9F5D0, MEMORY[0x263F07690]);
  sub_2439596F0();
  id v16 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
  int v17 = v29;
  uint64_t v29 = (char *)v6;
  v16(v32, v17, v6);
  char v34 = 1;
  sub_24375AA4C(&qword_268D9F5D8, MEMORY[0x263F07920]);
  sub_2439596F0();
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(&v32[*(int *)(v10 + 20)], v5, v15);
  char v33 = 2;
  sub_24375AA4C(&qword_268D9F5E0, MEMORY[0x263F079C8]);
  uint64_t v18 = v23;
  sub_2439596F0();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v31, v30);
  uint64_t v19 = (uint64_t)v32;
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(&v32[*(int *)(v10 + 24)], v24, v18);
  sub_243674A44(v19, v22);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_243674AA8(v19);
}

uint64_t sub_24375A610@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatterConfiguration.init(from:)(a1, a2);
}

uint64_t sub_24375A628(void *a1)
{
  return FormatterConfiguration.encode(to:)(a1);
}

uint64_t sub_24375A640()
{
  return sub_243959B40();
}

uint64_t sub_24375A788()
{
  return sub_2439581D0();
}

uint64_t sub_24375A8C0()
{
  return sub_243959B40();
}

uint64_t sub_24375AA04()
{
  return sub_24375AA4C(&qword_268D9F5E8, (void (*)(uint64_t))type metadata accessor for FormatterConfiguration);
}

uint64_t sub_24375AA4C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24375AA94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((MEMORY[0x24567C750]() & 1) != 0
    && (MEMORY[0x24567C8B0](a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20)) & 1) != 0)
  {
    JUMPOUT(0x24567C9A0);
  }
  return 0;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatterConfiguration(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_243957560();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_2439576F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_243957740();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for FormatterConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_243957560();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_2439576F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_243957740();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t initializeWithCopy for FormatterConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_243957560();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_2439576F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_243957740();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for FormatterConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_243957560();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_2439576F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_243957740();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for FormatterConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_243957560();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_2439576F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_243957740();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for FormatterConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_243957560();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_2439576F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_243957740();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatterConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24375B18C);
}

uint64_t sub_24375B18C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_243957560();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_2439576F0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_243957740();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for FormatterConfiguration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24375B2EC);
}

uint64_t sub_24375B2EC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_243957560();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_2439576F0();
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_243957740();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

uint64_t sub_24375B444()
{
  uint64_t result = sub_243957560();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_2439576F0();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_243957740();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FormatterConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24375B614);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatterConfiguration.CodingKeys()
{
  return &type metadata for FormatterConfiguration.CodingKeys;
}

unint64_t sub_24375B650()
{
  unint64_t result = qword_268D9F600;
  if (!qword_268D9F600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F600);
  }
  return result;
}

unint64_t sub_24375B6A8()
{
  unint64_t result = qword_268D9F608;
  if (!qword_268D9F608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F608);
  }
  return result;
}

unint64_t sub_24375B700()
{
  unint64_t result = qword_268D9F610;
  if (!qword_268D9F610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F610);
  }
  return result;
}

uint64_t sub_24375B754(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000;
  if (v2 || (sub_243959940() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7261646E656C6163 && a2 == 0xE800000000000000 || (sub_243959940() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656E6F5A656D6974 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_243959940();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t TransactionMerchantInformation.merchantCategoryCode.getter()
{
  return *v0 | (*((unsigned __int8 *)v0 + 2) << 16);
}

uint64_t TransactionMerchantInformation.merchantCategoryCode.setter(uint64_t result)
{
  *(_WORD *)uint64_t v1 = result;
  *(unsigned char *)(v1 + 2) = BYTE2(result) & 1;
  return result;
}

uint64_t (*TransactionMerchantInformation.merchantCategoryCode.modify())()
{
  return nullsub_1;
}

uint64_t TransactionMerchantInformation.standardIndustrialClassificationCode.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TransactionMerchantInformation.standardIndustrialClassificationCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*TransactionMerchantInformation.standardIndustrialClassificationCode.modify())()
{
  return nullsub_1;
}

uint64_t TransactionMerchantInformation.categoryDescription.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TransactionMerchantInformation.categoryDescription.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*TransactionMerchantInformation.categoryDescription.modify())()
{
  return nullsub_1;
}

uint64_t TransactionMerchantInformation.merchantName.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TransactionMerchantInformation.merchantName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

uint64_t (*TransactionMerchantInformation.merchantName.modify())()
{
  return nullsub_1;
}

uint64_t TransactionMerchantInformation.merchantNumber.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TransactionMerchantInformation.merchantNumber.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a2;
  return result;
}

uint64_t (*TransactionMerchantInformation.merchantNumber.modify())()
{
  return nullsub_1;
}

void *TransactionMerchantInformation.merchantAddress.getter()
{
  uint64_t v1 = *(void **)(v0 + 72);
  id v2 = v1;
  return v1;
}

void TransactionMerchantInformation.merchantAddress.setter(uint64_t a1)
{
  *(void *)(v1 + 72) = a1;
}

void (*TransactionMerchantInformation.merchantAddress.modify(void *a1))(uint64_t a1, char a2)
{
  id v2 = *(void **)(v1 + 72);
  *a1 = v2;
  a1[1] = v1;
  id v3 = v2;
  return sub_24375BBAC;
}

void sub_24375BBAC(uint64_t a1, char a2)
{
  id v2 = *(void **)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  if (a2)
  {
    unsigned int v4 = *(void **)(v3 + 72);
    id v5 = v2;

    *(void *)(v3 + 72) = v2;
  }
  else
  {

    *(void *)(v3 + 72) = v2;
  }
}

uint64_t TransactionMerchantInformation.init(merchantCategoryCode:standardIndustrialClassificationCode:categoryDescription:merchantName:merchantNumber:merchantAddress:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  *(_WORD *)a9 = result;
  *(unsigned char *)(a9 + 2) = BYTE2(result) & 1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(void *)(a9 + 64) = a10;
  *(void *)(a9 + 72) = a11;
  return result;
}

void TransactionMerchantInformation.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 48);
  id v4 = *(id *)(v0 + 64);
  id v5 = *(void **)(v0 + 72);
  if (*(unsigned char *)(v0 + 2) == 1)
  {
    sub_243959AF0();
    if (v1) {
      goto LABEL_3;
    }
  }
  else
  {
    id v7 = *(id *)(v0 + 64);
    sub_243959AF0();
    id v4 = v7;
    sub_243959B00();
    if (v1)
    {
LABEL_3:
      sub_243959AF0();
      swift_bridgeObjectRetain();
      sub_2439581F0();
      swift_bridgeObjectRelease();
      if (v2) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  sub_243959AF0();
  if (v2)
  {
LABEL_4:
    sub_243959AF0();
    swift_bridgeObjectRetain();
    sub_2439581F0();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  sub_243959AF0();
  if (v3)
  {
LABEL_5:
    sub_243959AF0();
    swift_bridgeObjectRetain();
    sub_2439581F0();
    swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_6;
    }
LABEL_14:
    sub_243959AF0();
    if (v5) {
      goto LABEL_7;
    }
LABEL_15:
    sub_243959AF0();
    return;
  }
LABEL_13:
  sub_243959AF0();
  if (!v4) {
    goto LABEL_14;
  }
LABEL_6:
  sub_243959AF0();
  swift_bridgeObjectRetain();
  sub_2439581F0();
  swift_bridgeObjectRelease();
  if (!v5) {
    goto LABEL_15;
  }
LABEL_7:
  sub_243959AF0();
  id v6 = v5;
  sub_243958E90();
}

unint64_t sub_24375BE50(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000024;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
    case 4:
      unint64_t result = 0x746E61686372656DLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24375BF24()
{
  return sub_24375BE50(*v0);
}

uint64_t sub_24375BF2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24375E530(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24375BF54(uint64_t a1)
{
  unint64_t v2 = sub_24375DE58();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24375BF90(uint64_t a1)
{
  unint64_t v2 = sub_24375DE58();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TransactionMerchantInformation.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F618);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[1];
  uint64_t v21 = v1[2];
  uint64_t v22 = v7;
  uint64_t v8 = v1[3];
  uint64_t v19 = v1[4];
  uint64_t v20 = v8;
  uint64_t v9 = v1[5];
  uint64_t v17 = v1[6];
  uint64_t v18 = v9;
  uint64_t v10 = v1[8];
  uint64_t v15 = v1[7];
  uint64_t v16 = v10;
  uint64_t v14 = v1[9];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24375DE58();
  sub_243959BD0();
  char v30 = 0;
  uint64_t v11 = v23;
  sub_2439597E0();
  if (!v11)
  {
    char v29 = 1;
    sub_243959790();
    char v28 = 2;
    sub_243959790();
    char v27 = 3;
    sub_243959790();
    char v26 = 4;
    sub_243959790();
    uint64_t v24 = v14;
    char v25 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268D9E1D8);
    sub_2436D0654(&qword_268D9E1E0);
    sub_2439597D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t TransactionMerchantInformation.hashValue.getter()
{
  return sub_243959B40();
}

uint64_t TransactionMerchantInformation.init(from:)@<X0>(void *a1@<X0>, _WORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F628);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24375DE58();
  sub_243959BA0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    char v40 = 0;
    int v9 = sub_243959670();
    char v39 = 1;
    uint64_t v10 = sub_243959620();
    uint64_t v13 = v12;
    uint64_t v32 = v10;
    int v33 = v9;
    char v38 = 2;
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_243959620();
    uint64_t v16 = v15;
    uint64_t v30 = v14;
    id v31 = a2;
    char v37 = 3;
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_243959620();
    uint64_t v19 = v18;
    uint64_t v28 = v17;
    uint64_t v29 = v6;
    char v36 = 4;
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_243959620();
    uint64_t v22 = v21;
    uint64_t v27 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268D9E1D8);
    char v35 = 5;
    sub_2436D0654(&qword_268D9E1F0);
    swift_bridgeObjectRetain();
    sub_243959660();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v5);
    id v23 = v34;
    id v24 = v34;
    char v25 = v31;
    char v26 = BYTE2(v33);
    _WORD *v31 = v33;
    *((unsigned char *)v25 + 2) = v26 & 1;
    *((void *)v25 + 1) = v32;
    *((void *)v25 + 2) = v13;
    *((void *)v25 + 3) = v30;
    *((void *)v25 + 4) = v16;
    *((void *)v25 + 5) = v28;
    *((void *)v25 + 6) = v19;
    *((void *)v25 + 7) = v27;
    *((void *)v25 + 8) = v22;
    *((void *)v25 + 9) = v23;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24375C6E4@<X0>(void *a1@<X0>, _WORD *a2@<X8>)
{
  return TransactionMerchantInformation.init(from:)(a1, a2);
}

uint64_t sub_24375C6FC(void *a1)
{
  return TransactionMerchantInformation.encode(to:)(a1);
}

uint64_t sub_24375C714()
{
  return sub_243959B40();
}

uint64_t sub_24375C794()
{
  return sub_243959B40();
}

long long *TransactionMerchantInformation.init(_:)@<X0>(long long *result@<X0>, uint64_t a2@<X8>)
{
  long long v3 = result[7];
  long long v71 = result[6];
  long long v72 = v3;
  long long v4 = result[9];
  long long v73 = result[8];
  long long v74 = v4;
  long long v5 = result[3];
  long long v67 = result[2];
  long long v68 = v5;
  long long v6 = result[5];
  long long v69 = result[4];
  long long v70 = v6;
  long long v7 = result[1];
  long long v65 = *result;
  long long v66 = v7;
  if (!*((void *)&v65 + 1)
    || ((uint64_t v8 = HIBYTE(*((void *)&v65 + 1)) & 0xFLL,
         uint64_t v9 = v65 & 0xFFFFFFFFFFFFLL,
         (*((void *)&v65 + 1) & 0x2000000000000000) != 0)
      ? (uint64_t v10 = HIBYTE(*((void *)&v65 + 1)) & 0xFLL)
      : (uint64_t v10 = v65 & 0xFFFFFFFFFFFFLL),
        !v10))
  {
    __int16 v14 = 0;
    LOBYTE(v13) = 1;
    goto LABEL_49;
  }
  if ((*((void *)&v65 + 1) & 0x1000000000000000) == 0)
  {
    if ((*((void *)&v65 + 1) & 0x2000000000000000) == 0)
    {
      if ((v65 & 0x1000000000000000) != 0) {
        uint64_t v11 = (unsigned __int8 *)((*((void *)&v65 + 1) & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v11 = (unsigned __int8 *)sub_243959400();
      }
      unsigned int v12 = sub_24375D450(v11, v9, 10);
      LODWORD(v13) = HIWORD(v12) & 1;
      goto LABEL_46;
    }
    uint64_t v55 = v65;
    uint64_t v56 = *((void *)&v65 + 1) & 0xFFFFFFFFFFFFFFLL;
    if (v65 == 43)
    {
      if (!v8) {
        goto LABEL_62;
      }
      if (v8 == 1) {
        goto LABEL_33;
      }
      unsigned int v12 = (BYTE1(v65) - 48);
      if (v12 > 9) {
        goto LABEL_33;
      }
      if (v8 != 2)
      {
        if ((BYTE2(v65) - 48) > 9u) {
          goto LABEL_33;
        }
        LOWORD(v12) = 10 * v12 + (BYTE2(v65) - 48);
        uint64_t v16 = v8 - 3;
        if (v16)
        {
          uint64_t v17 = (unsigned __int8 *)&v55 + 3;
          while (1)
          {
            unsigned int v18 = *v17 - 48;
            if (v18 > 9) {
              goto LABEL_33;
            }
            int v19 = (__int16)(10 * v12);
            if (v19 != 10 * (__int16)v12) {
              goto LABEL_33;
            }
            unsigned int v12 = v19 + v18;
            if ((__int16)(v19 + v18) != v12) {
              goto LABEL_33;
            }
            LODWORD(v13) = 0;
            ++v17;
            if (!--v16) {
              goto LABEL_46;
            }
          }
        }
      }
    }
    else
    {
      if (v65 == 45)
      {
        if (v8)
        {
          if (v8 != 1)
          {
            unsigned int v15 = (BYTE1(v65) - 48);
            if (v15 <= 9)
            {
              if (v8 == 2)
              {
                LODWORD(v13) = 0;
                unsigned int v12 = -v15;
                goto LABEL_46;
              }
              if ((BYTE2(v65) - 48) <= 9u)
              {
                LOWORD(v12) = -10 * v15 - (BYTE2(v65) - 48);
                uint64_t v24 = v8 - 3;
                if (!v24) {
                  goto LABEL_45;
                }
                char v40 = (unsigned __int8 *)&v55 + 3;
                while (1)
                {
                  unsigned int v41 = *v40 - 48;
                  if (v41 > 9) {
                    break;
                  }
                  int v42 = (__int16)(10 * v12);
                  if (v42 != 10 * (__int16)v12) {
                    break;
                  }
                  unsigned int v12 = v42 - v41;
                  if ((__int16)(v42 - v41) != v12) {
                    break;
                  }
                  LODWORD(v13) = 0;
                  ++v40;
                  if (!--v24) {
                    goto LABEL_46;
                  }
                }
              }
            }
          }
LABEL_33:
          LOWORD(v12) = 0;
          LODWORD(v13) = 1;
          goto LABEL_46;
        }
        __break(1u);
LABEL_62:
        __break(1u);
        return result;
      }
      if (!v8) {
        goto LABEL_33;
      }
      unsigned int v12 = (v65 - 48);
      if (v12 > 9) {
        goto LABEL_33;
      }
      if (v8 != 1)
      {
        if ((BYTE1(v65) - 48) > 9u) {
          goto LABEL_33;
        }
        LOWORD(v12) = 10 * v12 + (BYTE1(v65) - 48);
        uint64_t v20 = v8 - 2;
        if (v20)
        {
          uint64_t v21 = (unsigned __int8 *)&v55 + 2;
          while (1)
          {
            unsigned int v22 = *v21 - 48;
            if (v22 > 9) {
              goto LABEL_33;
            }
            int v23 = (__int16)(10 * v12);
            if (v23 != 10 * (__int16)v12) {
              goto LABEL_33;
            }
            unsigned int v12 = v23 + v22;
            if ((__int16)(v23 + v22) != v12) {
              goto LABEL_33;
            }
            LODWORD(v13) = 0;
            ++v21;
            if (!--v20) {
              goto LABEL_46;
            }
          }
        }
      }
    }
LABEL_45:
    LODWORD(v13) = 0;
    goto LABEL_46;
  }
  swift_bridgeObjectRetain();
  unsigned int v12 = sub_24375D0F4(v65, *((uint64_t *)&v65 + 1), 10);
  swift_bridgeObjectRelease();
  LODWORD(v13) = HIWORD(v12) & 1;
LABEL_46:
  if (v13) {
    __int16 v14 = 0;
  }
  else {
    __int16 v14 = v12;
  }
LABEL_49:
  uint64_t v25 = *((void *)&v66 + 1);
  uint64_t v26 = v66;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v27 = *((void *)&v67 + 1);
  uint64_t v54 = v67;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v28 = *((void *)&v68 + 1);
  uint64_t v53 = v68;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v29 = *((void *)&v69 + 1);
  uint64_t v52 = v69;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v30 = *((void *)&v70 + 1);
  if (*((void *)&v70 + 1) == 1)
  {
    uint64_t result = (long long *)sub_24375DEAC((uint64_t)&v65);
    id v31 = 0;
  }
  else
  {
    __int16 v49 = v14;
    char v50 = v13;
    uint64_t v47 = v29;
    uint64_t v48 = v26;
    uint64_t v32 = v74;
    uint64_t v51 = a2;
    uint64_t v44 = *((void *)&v73 + 1);
    uint64_t v45 = *((void *)&v74 + 1);
    uint64_t v33 = v73;
    uint64_t v43 = *((void *)&v72 + 1);
    uint64_t v34 = v28;
    uint64_t v35 = v27;
    uint64_t v36 = v25;
    uint64_t v38 = *((void *)&v71 + 1);
    uint64_t v37 = v72;
    uint64_t v39 = v71;
    uint64_t v13 = v70;
    uint64_t v46 = v70;
    sub_24337C218(0, (unint64_t *)&qword_268D990A8);
    uint64_t v55 = v13;
    uint64_t v56 = v30;
    uint64_t v57 = v39;
    uint64_t v58 = v38;
    uint64_t v59 = v37;
    uint64_t v25 = v36;
    uint64_t v27 = v35;
    uint64_t v28 = v34;
    uint64_t v60 = v43;
    uint64_t v61 = v33;
    uint64_t v62 = v44;
    uint64_t v63 = v32;
    uint64_t v64 = v45;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    id v31 = sub_24375CCEC(&v55);
    sub_24375DEAC((uint64_t)&v65);
    __int16 v14 = v49;
    LOBYTE(v13) = v50;
    uint64_t v29 = v47;
    uint64_t v26 = v48;
    a2 = v51;
    uint64_t result = (long long *)sub_2434C90E0(v46, v30);
  }
  *(_WORD *)a2 = v14;
  *(unsigned char *)(a2 + 2) = v13;
  *(void *)(a2 + 8) = v26;
  *(void *)(a2 + 16) = v25;
  *(void *)(a2 + 24) = v54;
  *(void *)(a2 + 32) = v27;
  *(void *)(a2 + 40) = v53;
  *(void *)(a2 + 48) = v28;
  *(void *)(a2 + 56) = v52;
  *(void *)(a2 + 64) = v29;
  *(void *)(a2 + 72) = v31;
  return result;
}

void *sub_24375CCEC(void *a1)
{
  uint64_t v1 = a1[1];
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[5];
  uint64_t v4 = a1[7];
  uint64_t v5 = a1[9];
  id v6 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  long long v7 = v6;
  if (v1)
  {
    id v8 = v6;
    swift_bridgeObjectRetain();
    uint64_t v9 = (void *)sub_2439582A0();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_setStreet_, v9);

    if (!v2) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  id v14 = v6;
  if (v2)
  {
LABEL_3:
    swift_bridgeObjectRetain();
    uint64_t v10 = (void *)sub_2439582A0();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setCity_, v10);
  }
LABEL_4:
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = (void *)sub_2439582A0();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setState_, v11);
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    unsigned int v12 = (void *)sub_2439582A0();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setPostalCode_, v12);
  }
  swift_bridgeObjectRelease();
  if (v5)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v13 = (void *)sub_2439582A0();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setISOCountryCode_, v13);
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

void *sub_24375CEF8(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C71D0);
  uint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  long long v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_24375CF60(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_2439584E0();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x24567D720](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

unsigned __int8 *sub_24375CFDC(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_24375D1D4(a1, a2, a3);
}

unsigned __int8 *sub_24375CFF4(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_24375D450(a1, a2, a3);
}

unsigned __int8 *sub_24375D00C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_243958510();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_24375D704();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    unint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    unint64_t v7 = (unsigned __int8 *)sub_243959400();
  }
LABEL_7:
  uint64_t v11 = sub_24375D1D4(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_24375D0F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_243958510();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_24375D704();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    unint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    unint64_t v7 = (unsigned __int8 *)sub_243959400();
  }
LABEL_7:
  unsigned int v11 = sub_24375D450(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11 & 0x1FFFF;
}

unsigned __int8 *sub_24375D1D4(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  unsigned int v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

unsigned __int8 *sub_24375D450(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v16 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v17 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v18 = a3 + 55;
        }
        else
        {
          unsigned __int8 v17 = 97;
          unsigned __int8 v18 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v19 = a3 + 48;
        }
        else {
          unsigned __int8 v19 = 58;
        }
        if (result)
        {
          LOWORD(v8) = 0;
          char v20 = result + 1;
          do
          {
            unsigned int v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                unsigned __int16 v12 = 0;
                int v13 = 1;
                if (v21 < 0x61 || v21 >= v17) {
                  return (unsigned __int8 *)(v12 | (v13 << 16));
                }
                char v22 = -87;
              }
              else
              {
                char v22 = -55;
              }
            }
            else
            {
              char v22 = -48;
            }
            int v23 = (__int16)v8 * (__int16)a3;
            __int16 v24 = v23;
            if ((__int16)v23 != v23) {
              goto LABEL_72;
            }
            int v8 = (__int16)v23 + (v21 + v22);
            if ((__int16)(v24 + (v21 + v22)) != v8) {
              goto LABEL_72;
            }
            ++v20;
            --v16;
          }
          while (v16);
LABEL_48:
          int v13 = 0;
          unsigned __int16 v12 = v8;
          return (unsigned __int8 *)(v12 | (v13 << 16));
        }
        goto LABEL_71;
      }
LABEL_72:
      unsigned __int16 v12 = 0;
      int v13 = 1;
      return (unsigned __int8 *)(v12 | (v13 << 16));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        unsigned __int8 v25 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v26 = a3 + 55;
        }
        else
        {
          unsigned __int8 v25 = 97;
          unsigned __int8 v26 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v27 = a3 + 48;
        }
        else {
          unsigned __int8 v27 = 58;
        }
        if (result)
        {
          LOWORD(v28) = 0;
          do
          {
            unsigned int v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                unsigned __int16 v12 = 0;
                int v13 = 1;
                if (v29 < 0x61 || v29 >= v25) {
                  return (unsigned __int8 *)(v12 | (v13 << 16));
                }
                char v30 = -87;
              }
              else
              {
                char v30 = -55;
              }
            }
            else
            {
              char v30 = -48;
            }
            int v31 = (__int16)v28 * (__int16)a3;
            __int16 v32 = v31;
            if ((__int16)v31 != v31) {
              goto LABEL_72;
            }
            int v28 = (__int16)v31 + (v29 + v30);
            if ((__int16)(v32 + (v29 + v30)) != v28) {
              goto LABEL_72;
            }
            ++result;
            --a2;
          }
          while (a2);
          int v13 = 0;
          unsigned __int16 v12 = v28;
          return (unsigned __int8 *)(v12 | (v13 << 16));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      uint64_t v4 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v5 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = a3 + 55;
        }
        else
        {
          unsigned __int8 v5 = 97;
          unsigned __int8 v6 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v7 = a3 + 48;
        }
        else {
          unsigned __int8 v7 = 58;
        }
        if (result)
        {
          LOWORD(v8) = 0;
          uint64_t v9 = result + 1;
          while (1)
          {
            unsigned int v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                unsigned __int16 v12 = 0;
                int v13 = 1;
                if (v10 < 0x61 || v10 >= v5) {
                  return (unsigned __int8 *)(v12 | (v13 << 16));
                }
                char v11 = -87;
              }
              else
              {
                char v11 = -55;
              }
            }
            else
            {
              char v11 = -48;
            }
            int v14 = (__int16)v8 * (__int16)a3;
            __int16 v15 = v14;
            if ((__int16)v14 != v14) {
              goto LABEL_72;
            }
            int v8 = (__int16)v14 - (v10 + v11);
            if ((__int16)(v15 - (v10 + v11)) != v8) {
              goto LABEL_72;
            }
            ++v9;
            if (!--v4) {
              goto LABEL_48;
            }
          }
        }
LABEL_71:
        unsigned __int16 v12 = 0;
        int v13 = 0;
        return (unsigned __int8 *)(v12 | (v13 << 16));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_24375D704()
{
  unint64_t v0 = sub_243958520();
  uint64_t v4 = sub_24375D784(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_24375D784(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_24375D8DC(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      char v11 = sub_24375CEF8(v9, 0);
      unint64_t v12 = sub_24375D9DC((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_243959400();
LABEL_4:
        JUMPOUT(0x24567D650);
      }
    }
    else
    {
      char v11 = (void *)MEMORY[0x263F8EE78];
    }
    uint64_t v13 = MEMORY[0x24567D650](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x24567D650]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

uint64_t sub_24375D8DC(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_24375CF60(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_24375CF60(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return MEMORY[0x270F9D808](a1, a2, a3, a4);
  }
  __break(1u);
  return MEMORY[0x270F9D808](a1, a2, a3, a4);
}

unint64_t sub_24375D9DC(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    void v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_24375CF60(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_2439584D0();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_243959400();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_24375CF60(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_2439584A0();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

BOOL _s10FinanceKit30TransactionMerchantInformationV2eeoiySbAC_ACtFZ_0(unsigned __int16 *a1, unsigned __int16 *a2)
{
  char v4 = *((unsigned char *)a1 + 2);
  uint64_t v5 = *((void *)a1 + 1);
  uint64_t v6 = *((void *)a1 + 2);
  uint64_t v7 = *((void *)a1 + 3);
  uint64_t v9 = *((void *)a1 + 4);
  uint64_t v8 = *((void *)a1 + 5);
  uint64_t v11 = *((void *)a1 + 6);
  uint64_t v10 = *((void *)a1 + 7);
  uint64_t v13 = *((void *)a1 + 8);
  unint64_t v12 = (void *)*((void *)a1 + 9);
  uint64_t v14 = *((void *)a2 + 2);
  uint64_t v16 = *((void *)a2 + 3);
  uint64_t v15 = *((void *)a2 + 4);
  uint64_t v18 = *((void *)a2 + 5);
  uint64_t v17 = *((void *)a2 + 6);
  uint64_t v20 = *((void *)a2 + 7);
  uint64_t v19 = *((void *)a2 + 8);
  uint64_t v21 = (void *)*((void *)a2 + 9);
  if (v4)
  {
    if (!*((unsigned char *)a2 + 2)) {
      return 0;
    }
  }
  else
  {
    if (*a1 == *a2) {
      char v22 = *((unsigned char *)a2 + 2);
    }
    else {
      char v22 = 1;
    }
    if (v22) {
      return 0;
    }
  }
  if (!v6)
  {
    if (v14) {
      return 0;
    }
    goto LABEL_15;
  }
  if (!v14) {
    return 0;
  }
  if (v5 == *((void *)a2 + 1) && v6 == v14) {
    goto LABEL_15;
  }
  __int16 v49 = (void *)*((void *)a2 + 9);
  uint64_t v50 = v10;
  uint64_t v47 = v12;
  uint64_t v48 = *((void *)a2 + 8);
  uint64_t v23 = v13;
  uint64_t v24 = *((void *)a2 + 7);
  char v25 = sub_243959940();
  uint64_t v20 = v24;
  unint64_t v12 = v47;
  uint64_t v19 = v48;
  uint64_t v13 = v23;
  uint64_t v21 = v49;
  uint64_t v10 = v50;
  char v26 = v25;
  BOOL result = 0;
  if (v26)
  {
LABEL_15:
    if (v9)
    {
      if (!v15) {
        return 0;
      }
      if (v7 != v16 || v9 != v15)
      {
        int v28 = v12;
        uint64_t v29 = v13;
        uint64_t v30 = v19;
        uint64_t v31 = v20;
        char v32 = sub_243959940();
        uint64_t v20 = v31;
        uint64_t v19 = v30;
        uint64_t v13 = v29;
        unint64_t v12 = v28;
        char v33 = v32;
        BOOL result = 0;
        if ((v33 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v15)
    {
      return 0;
    }
    if (v11)
    {
      if (!v17) {
        return 0;
      }
      if (v8 != v18 || v11 != v17)
      {
        uint64_t v34 = v12;
        uint64_t v35 = v13;
        uint64_t v36 = v19;
        uint64_t v37 = v20;
        char v38 = sub_243959940();
        uint64_t v20 = v37;
        uint64_t v19 = v36;
        uint64_t v13 = v35;
        unint64_t v12 = v34;
        char v39 = v38;
        BOOL result = 0;
        if ((v39 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v17)
    {
      return 0;
    }
    if (v13)
    {
      if (!v19) {
        return 0;
      }
      if (v10 != v20 || v13 != v19)
      {
        char v40 = v12;
        char v41 = sub_243959940();
        unint64_t v12 = v40;
        char v42 = v41;
        BOOL result = 0;
        if ((v42 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v19)
    {
      return 0;
    }
    if (v12)
    {
      if (!v21) {
        return 0;
      }
      uint64_t v43 = v12;
      sub_24337C218(0, qword_26B0C9018);
      id v44 = v43;
      id v45 = v21;
      char v46 = sub_243958E80();

      return (v46 & 1) != 0;
    }
    return !v21;
  }
  return result;
}

unint64_t sub_24375DE58()
{
  unint64_t result = qword_268D9F620;
  if (!qword_268D9F620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F620);
  }
  return result;
}

uint64_t sub_24375DEAC(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 88);
  uint64_t v4 = *(void *)(a1 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2434C90E0(v4, v3);
  return a1;
}

unint64_t sub_24375DF78()
{
  unint64_t result = qword_268D9F630;
  if (!qword_268D9F630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F630);
  }
  return result;
}

id sub_24375DFCC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  unint64_t v2 = *(void **)(a1 + 72);
  *a2 = v2;
  return v2;
}

void sub_24375DFD8(id *a1, uint64_t a2)
{
  id v3 = *a1;
  uint64_t v4 = *(void **)(a2 + 72);
  id v5 = *a1;

  *(void *)(a2 + 72) = v3;
}

void destroy for TransactionMerchantInformation(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v2 = *(void **)(a1 + 72);
}

uint64_t initializeWithCopy for TransactionMerchantInformation(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  uint64_t v7 = *(void **)(a2 + 72);
  *(void *)(a1 + 72) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v8 = v7;
  return a1;
}

uint64_t assignWithCopy for TransactionMerchantInformation(uint64_t a1, __int16 *a2)
{
  __int16 v4 = *a2;
  *(unsigned char *)(a1 + 2) = *((unsigned char *)a2 + 2);
  *(_WORD *)a1 = v4;
  *(void *)(a1 + 8) = *((void *)a2 + 1);
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *((void *)a2 + 3);
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *((void *)a2 + 7);
  *(void *)(a1 + 64) = *((void *)a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void **)(a1 + 72);
  uint64_t v6 = (void *)*((void *)a2 + 9);
  *(void *)(a1 + 72) = v6;
  id v7 = v6;

  return a1;
}

uint64_t assignWithTake for TransactionMerchantInformation(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  id v7 = *(void **)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);

  return a1;
}

uint64_t getEnumTagSinglePayload for TransactionMerchantInformation(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 80)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TransactionMerchantInformation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TransactionMerchantInformation()
{
  return &type metadata for TransactionMerchantInformation;
}

unsigned char *storeEnumTagSinglePayload for TransactionMerchantInformation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24375E3F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TransactionMerchantInformation.CodingKeys()
{
  return &type metadata for TransactionMerchantInformation.CodingKeys;
}

unint64_t sub_24375E42C()
{
  unint64_t result = qword_268D9F638;
  if (!qword_268D9F638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F638);
  }
  return result;
}

unint64_t sub_24375E484()
{
  unint64_t result = qword_268D9F640;
  if (!qword_268D9F640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F640);
  }
  return result;
}

unint64_t sub_24375E4DC()
{
  unint64_t result = qword_268D9F648;
  if (!qword_268D9F648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F648);
  }
  return result;
}

uint64_t sub_24375E530(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x80000002439B0B60 || (sub_243959940() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000024 && a2 == 0x80000002439B0B80 || (sub_243959940() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000002439B0BB0 || (sub_243959940() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746E61686372656DLL && a2 == 0xEC000000656D614ELL || (sub_243959940() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746E61686372656DLL && a2 == 0xEE007265626D754ELL || (sub_243959940() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000002439B0BD0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v5 = sub_243959940();
    swift_bridgeObjectRelease();
    if (v5) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

FinanceKit::BankConnectOfflineLab::SharingPreference __swiftcall BankConnectOfflineLab.SharingPreference.init(permission:visibility:)(Swift::Bool permission, Swift::Bool visibility)
{
  Swift::Bool *v2 = permission;
  v2[1] = visibility;
  result.permission = permission;
  return result;
}

uint64_t sub_24375E7CC()
{
  if (*v0) {
    return 0x696C696269736976;
  }
  else {
    return 0x697373696D726570;
  }
}

uint64_t sub_24375E80C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24375F008(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24375E834(uint64_t a1)
{
  unint64_t v2 = sub_24375EA18();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24375E870(uint64_t a1)
{
  unint64_t v2 = sub_24375EA18();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t BankConnectOfflineLab.SharingPreference.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F650);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v10 = *(unsigned __int8 *)(v1 + 1);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24375EA18();
  sub_243959BD0();
  char v12 = 0;
  sub_243959820();
  if (!v2)
  {
    char v11 = 1;
    sub_243959820();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_24375EA18()
{
  unint64_t result = qword_268D9F658;
  if (!qword_268D9F658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F658);
  }
  return result;
}

uint64_t BankConnectOfflineLab.SharingPreference.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F660);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24375EA18();
  sub_243959BA0();
  if (!v2)
  {
    char v14 = 0;
    char v9 = sub_2439596B0();
    char v13 = 1;
    char v10 = sub_2439596B0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9 & 1;
    a2[1] = v10 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_24375EC14@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return BankConnectOfflineLab.SharingPreference.init(from:)(a1, a2);
}

uint64_t sub_24375EC2C(void *a1)
{
  return BankConnectOfflineLab.SharingPreference.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for BankConnectOfflineLab()
{
  return &type metadata for BankConnectOfflineLab;
}

uint64_t getEnumTagSinglePayload for BankConnectOfflineLab.SharingPreference(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 65281 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65281 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65281;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for BankConnectOfflineLab.SharingPreference(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24375EDC4);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BankConnectOfflineLab.SharingPreference()
{
  return &type metadata for BankConnectOfflineLab.SharingPreference;
}

unsigned char *storeEnumTagSinglePayload for BankConnectOfflineLab.SharingPreference.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24375EEC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BankConnectOfflineLab.SharingPreference.CodingKeys()
{
  return &type metadata for BankConnectOfflineLab.SharingPreference.CodingKeys;
}

unint64_t sub_24375EF04()
{
  unint64_t result = qword_268D9F668;
  if (!qword_268D9F668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F668);
  }
  return result;
}

unint64_t sub_24375EF5C()
{
  unint64_t result = qword_268D9F670;
  if (!qword_268D9F670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F670);
  }
  return result;
}

unint64_t sub_24375EFB4()
{
  unint64_t result = qword_268D9F678;
  if (!qword_268D9F678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F678);
  }
  return result;
}

uint64_t sub_24375F008(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x697373696D726570 && a2 == 0xEA00000000006E6FLL;
  if (v2 || (sub_243959940() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_243959940();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t dispatch thunk of Query.predicate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_24375F17C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_delegate;
  swift_beginAccess();
  return MEMORY[0x245680210](v1);
}

uint64_t sub_24375F21C()
{
  return swift_unknownObjectRelease();
}

void (*sub_24375F278(void *a1))(void **a1, char a2)
{
  int v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_delegate;
  v3[4] = v1;
  v3[5] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  v3[3] = MEMORY[0x245680210](v5);
  return sub_24363AD5C;
}

id sub_24375F2FC(uint64_t a1, uint64_t a2)
{
  return sub_2437625D8(a1, a2, 10);
}

id sub_24375F3B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  swift_unknownObjectWeakInit();
  uint64_t v18 = MEMORY[0x263F8EE78];
  *(void *)&v10[OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_transactions] = MEMORY[0x263F8EE78];
  *(void *)&v10[OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_monthlyTransactionGroups] = v18;
  *(void *)&v10[OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_yearlyTransactionGroups] = v18;
  uint64_t v19 = &v10[OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_primaryAccountIdentifier];
  *(void *)uint64_t v19 = a1;
  *((void *)v19 + 1) = a2;
  *(void *)&v10[OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_store] = a3;
  *(void *)&v10[OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_context] = a4;
  sub_243674A44(a5, (uint64_t)&v10[OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_formatterConfiguration]);
  uint64_t v20 = &v10[OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_now];
  *(void *)uint64_t v20 = a6;
  *((void *)v20 + 1) = a7;
  *(void *)&v10[OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_fixedNumberOfLatestTransactions] = a8;
  *(void *)&v10[OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_transactionExporter] = a9;
  *(void *)&v10[OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_transactionChangesObserver] = a10;
  v24.receiver = v10;
  v24.super_class = (Class)type metadata accessor for TransactionsAndGroupsProvider();
  id v21 = objc_msgSendSuper2(&v24, sel_init);
  sub_243763A44(a5, (uint64_t (*)(void))type metadata accessor for FormatterConfiguration);
  return v21;
}

void sub_24375F50C()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_transactionChangesObserver];
  *(void *)(v1 + 32) = &off_26F8C52D8;
  swift_unknownObjectWeakAssign();
  id v2 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v2, sel_addObserver_selector_name_object_, v1, sel_contextDidMergeChangesObjectIDsNotificationWithNotification_, *MEMORY[0x263EFF038], *(void *)(v1 + 16));

  int v3 = *(void **)&v0[OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_context];
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v0;
  v7[4] = sub_243762840;
  v7[5] = v4;
  v7[0] = MEMORY[0x263EF8330];
  v7[1] = 1107296256;
  long long v7[2] = sub_2433FAFC4;
  v7[3] = &block_descriptor_21;
  uint64_t v5 = _Block_copy(v7);
  char v6 = v0;
  swift_release();
  objc_msgSend(v3, sel_performBlock_, v5);
  _Block_release(v5);
}

id TransactionsAndGroupsProvider.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void TransactionsAndGroupsProvider.init()()
{
}

id TransactionsAndGroupsProvider.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TransactionsAndGroupsProvider();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_24375F86C()
{
  id v1 = *(void **)&v0[OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_context];
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v0;
  v5[4] = sub_243763AB4;
  v5[5] = v2;
  v5[0] = MEMORY[0x263EF8330];
  v5[1] = 1107296256;
  long long v5[2] = sub_2433FAFC4;
  v5[3] = &block_descriptor_19;
  int v3 = _Block_copy(v5);
  uint64_t v4 = v0;
  swift_release();
  objc_msgSend(v1, sel_performBlock_, v3);
  _Block_release(v3);
}

void sub_24375F94C(char *a1)
{
  v95[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C7F80);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v85 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
  MEMORY[0x270FA5388](v5 - 8);
  BOOL v7 = (char *)v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_243957400();
  uint64_t v8 = *(void *)(v94 - 8);
  MEMORY[0x270FA5388](v94);
  char v10 = (char *)v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_243956820();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  char v14 = (char *)v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void **)&a1[OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_context];
  id v16 = objc_msgSend(self, sel_currentQueryGenerationToken);
  v95[0] = 0;
  uint64_t v93 = v15;
  LODWORD(v15) = objc_msgSend(v15, sel_setQueryGenerationFromToken_error_, v16, v95);

  id v17 = v95[0];
  if (v15)
  {
    uint64_t v87 = v4;
    unsigned int v88 = v7;
    uint64_t v90 = v11;
    uint64_t v92 = v12;
    uint64_t v18 = &a1[OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_formatterConfiguration];
    uint64_t v89 = &v18[*(int *)(type metadata accessor for FormatterConfiguration() + 20)];
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268D9F760);
    uint64_t v19 = sub_2439576D0();
    uint64_t v20 = *(void *)(v19 - 8);
    uint64_t v21 = v20;
    uint64_t v91 = v14;
    uint64_t v22 = *(void *)(v20 + 72);
    unint64_t v23 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_24395EAD0;
    unint64_t v25 = v24 + v23;
    char v26 = a1;
    unint64_t v27 = *(void (**)(unint64_t, void, uint64_t))(v21 + 104);
    v27(v25, *MEMORY[0x263F078A0], v19);
    unint64_t v28 = v25 + v22;
    uint64_t v29 = v91;
    v27(v28, *MEMORY[0x263F078A8], v19);
    id v30 = v17;
    sub_24368A548(v24);
    swift_setDeallocating();
    swift_arrayDestroy();
    uint64_t v31 = swift_deallocClassInstance();
    char v32 = a1;
    (*(void (**)(uint64_t))&a1[OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_now])(v31);
    sub_2439575D0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v94);
    uint64_t v33 = sub_2439567B0();
    if (v34 & 1) != 0 || (v35 = v33, uint64_t v36 = sub_243956790(), (v37))
    {
      if (qword_268D96B78 != -1) {
        swift_once();
      }
      uint64_t v51 = sub_243957B10();
      __swift_project_value_buffer(v51, (uint64_t)qword_268D9B250);
      uint64_t v52 = sub_243957AF0();
      os_log_type_t v53 = sub_243958AF0();
      BOOL v54 = os_log_type_enabled(v52, v53);
      uint64_t v55 = v92;
      uint64_t v56 = v90;
      if (v54)
      {
        uint64_t v57 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v57 = 0;
        MEMORY[0x245680100](v57, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v55 + 8))(v29, v56);
      uint64_t v58 = (uint64_t)v32;
    }
    else
    {
      uint64_t v94 = v36;
      type metadata accessor for ManagedInternalTransaction();
      uint64_t v38 = *(void *)&v26[OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_primaryAccountIdentifier];
      uint64_t v39 = *(void *)&v26[OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_primaryAccountIdentifier + 8];
      LOBYTE(v95[0]) = 1;
      static ManagedInternalTransaction.latestTransactionDate(externalAccountId:source:in:)(v38, v39, v95, (uint64_t)v88);
      uint64_t v89 = (char *)v39;
      uint64_t v59 = v94;
      uint64_t v86 = sub_243760594(v35, v94, (uint64_t)v88);
      uint64_t v60 = v38;
      uint64_t v61 = v38;
      uint64_t v62 = (uint64_t)v89;
      uint64_t v63 = (void *)sub_243762E90(v61, (uint64_t)v89, v35, v59, (uint64_t)v88);
      uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268D98700);
      unint64_t v65 = sub_243958DC0();
      uint64_t v66 = sub_243402DCC(v65);
      v85[1] = v64;
      uint64_t v67 = v60;
      uint64_t v68 = v66;
      swift_bridgeObjectRelease();
      uint64_t v69 = MEMORY[0x263F8EE78];
      if (!v68) {
        uint64_t v68 = MEMORY[0x263F8EE78];
      }
      id v70 = v32;
      uint64_t v94 = sub_243762204(v68);
      swift_bridgeObjectRelease();

      uint64_t v71 = v67;
      uint64_t v72 = (uint64_t)v88;
      id v73 = sub_2437633E8(v71, v62, (uint64_t)v88);
      unint64_t v74 = sub_243958DC0();
      uint64_t v75 = sub_243402DCC(v74);
      swift_bridgeObjectRelease();
      if (!v75) {
        uint64_t v75 = v69;
      }
      id v76 = v70;
      uint64_t v77 = sub_243762408(v75);
      swift_bridgeObjectRelease();

      uint64_t v78 = sub_243958800();
      uint64_t v79 = (uint64_t)v87;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v87, 1, 1, v78);
      sub_2439587B0();
      id v80 = v76;
      uint64_t v81 = sub_2439587A0();
      uint64_t v82 = (void *)swift_allocObject();
      uint64_t v83 = MEMORY[0x263F8F500];
      v82[2] = v81;
      v82[3] = v83;
      uint64_t v84 = v86;
      v82[4] = v80;
      v82[5] = v84;
      v82[6] = v94;
      v82[7] = v77;
      sub_24363A9D4(v79, (uint64_t)&unk_268D9F778, (uint64_t)v82);
      swift_release();
      sub_2434038E8(v72);
      (*(void (**)(char *, uint64_t))(v92 + 8))(v91, v90);
      uint64_t v58 = (uint64_t)v80;
    }
    sub_243760314(v58);
  }
  else
  {
    id v40 = v95[0];
    char v41 = (void *)sub_243956E10();

    swift_willThrow();
    if (qword_268D96B78 != -1) {
      swift_once();
    }
    uint64_t v42 = sub_243957B10();
    __swift_project_value_buffer(v42, (uint64_t)qword_268D9B250);
    id v43 = v41;
    id v44 = v41;
    id v45 = sub_243957AF0();
    os_log_type_t v46 = sub_243958AF0();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = (uint8_t *)swift_slowAlloc();
      uint64_t v48 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v47 = 138412290;
      id v49 = v41;
      uint64_t v50 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v95[0] = v50;
      sub_2439590C0();
      *uint64_t v48 = v50;

      _os_log_impl(&dword_243363000, v45, v46, "Failed to fetch latest transactions: %@.", v47, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CAB0);
      swift_arrayDestroy();
      MEMORY[0x245680100](v48, -1, -1);
      MEMORY[0x245680100](v47, -1, -1);
    }
    else
    {
    }
  }
}

void sub_243760314(uint64_t a1)
{
  v16[1] = *(id *)MEMORY[0x263EF8340];
  id v1 = *(void **)(a1 + OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_context);
  v16[0] = 0;
  unsigned int v2 = objc_msgSend(v1, sel_setQueryGenerationFromToken_error_, 0, v16);
  id v3 = v16[0];
  if (v2)
  {
    id v4 = v3;
  }
  else
  {
    id v5 = v16[0];
    uint64_t v6 = (void *)sub_243956E10();

    swift_willThrow();
    if (qword_268D96B78 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_243957B10();
    __swift_project_value_buffer(v7, (uint64_t)qword_268D9B250);
    id v8 = v6;
    id v9 = v6;
    char v10 = sub_243957AF0();
    os_log_type_t v11 = sub_243958AF0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 138412290;
      id v14 = v6;
      uint64_t v15 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v16[0] = v15;
      sub_2439590C0();
      *uint64_t v13 = v15;

      __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CAB0);
      swift_arrayDestroy();
      MEMORY[0x245680100](v13, -1, -1);
      MEMORY[0x245680100](v12, -1, -1);
    }
    else
    {
    }
  }
}

uint64_t sub_243760594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = v3;
  uint64_t v9 = type metadata accessor for ManagedInternalTransaction.MonthYearFormatter();
  MEMORY[0x270FA5388](v9 - 8);
  os_log_type_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void **)&v5[OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_primaryAccountIdentifier];
  uint64_t v13 = *(void *)&v5[OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_primaryAccountIdentifier + 8];
  sub_2439574D0();
  uint64_t v14 = type metadata accessor for FormatterConfiguration();
  sub_243957630();
  sub_243957720();
  uint64_t v15 = 100 * a2;
  if ((unsigned __int128)(a2 * (__int128)100) >> 64 != (100 * a2) >> 63)
  {
    __break(1u);
    goto LABEL_16;
  }
  BOOL v16 = __OFADD__(v15, a1);
  id v17 = (void *)(v15 + a1);
  if (v16)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v43 = v14;
  uint64_t v47 = v17;
  uint64_t v44 = (uint64_t)v17;
  uint64_t v18 = sub_2439598D0();
  uint64_t v20 = v19;
  sub_243763A44((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ManagedInternalTransaction.MonthYearFormatter);
  id v21 = sub_243762D00((uint64_t)v12, v13, v18, v20, a3);
  swift_bridgeObjectRelease();
  uint64_t v22 = (uint64_t)v12;
  uint64_t v12 = sub_243762B74((uint64_t)v21, 0, 1);

  type metadata accessor for ManagedInternalTransaction();
  unint64_t v23 = sub_243958DC0();
  uint64_t v45 = v4;
  if (v4)
  {

    return (uint64_t)v12;
  }
  uint64_t v39 = v13;
  uint64_t v40 = v22;
  uint64_t v41 = a3;
  uint64_t v42 = v5;
  uint64_t v47 = (void *)v23;
  if (!(v23 >> 62))
  {
    uint64_t v24 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    goto LABEL_7;
  }
LABEL_17:
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_243959550();
LABEL_7:
  uint64_t v25 = *(void *)&v42[OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_fixedNumberOfLatestTransactions];
  uint64_t result = swift_bridgeObjectRelease();
  if (v24 >= v25)
  {
    uint64_t v35 = v12;
    goto LABEL_13;
  }
  BOOL v16 = __OFSUB__(v25, v24);
  uint64_t v27 = v25 - v24;
  if (!v16)
  {
    sub_2439574D0();
    sub_243957630();
    sub_243957720();
    uint64_t v46 = v44;
    uint64_t v28 = sub_2439598D0();
    uint64_t v30 = v29;
    sub_243763A44((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ManagedInternalTransaction.MonthYearFormatter);
    id v31 = sub_243762D00(v40, v39, v28, v30, v41);
    swift_bridgeObjectRelease();
    id v32 = sub_243762B74((uint64_t)v31, v27, 0);

    uint64_t v33 = v45;
    unint64_t v34 = sub_243958DC0();
    uint64_t v35 = v12;
    if (v33)
    {
      uint64_t v12 = v47;

      swift_bridgeObjectRelease();
      return (uint64_t)v12;
    }
    sub_2433A78B0(v34);

LABEL_13:
    uint64_t v36 = v42;
    unint64_t v37 = swift_bridgeObjectRetain();
    uint64_t v12 = (void *)sub_2437620B8(v37, (uint64_t)v36);
    swift_bridgeObjectRelease_n();

    return (uint64_t)v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_243760944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  void v7[6] = a5;
  sub_2439587B0();
  v7[9] = sub_2439587A0();
  uint64_t v9 = sub_243958700();
  return MEMORY[0x270FA2498](sub_2437609E0, v9, v8);
}

uint64_t sub_2437609E0()
{
  uint64_t v1 = v0[8];
  uint64_t v3 = v0[6];
  uint64_t v2 = v0[7];
  uint64_t v4 = v0[5];
  swift_release();
  *(void *)(v4 + OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_transactions) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v4 + OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_monthlyTransactionGroups) = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v4 + OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_yearlyTransactionGroups) = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = v4 + OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_delegate;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x245680210](v5);
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    sub_24337C218(0, &qword_268D9F780);
    swift_bridgeObjectRetain();
    uint64_t v8 = (void *)sub_243958630();
    swift_bridgeObjectRelease();
    sub_24337C218(0, &qword_268D9F788);
    swift_bridgeObjectRetain();
    uint64_t v9 = (void *)sub_243958630();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v10 = (void *)sub_243958630();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_didUpdateLatestTransactions_monthlyTransactionGroups_yearlyTransactionGroups_, v8, v9, v10);
    swift_unknownObjectRelease();
  }
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

id sub_243760BBC(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v102 = (char *)&v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v87 - v9;
  uint64_t v11 = sub_243957400();
  uint64_t v103 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v87 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  char v104 = (char *)&v87 - v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C5B90);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v106 = (char *)&v87 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C5B88);
  MEMORY[0x270FA5388](v18 - 8);
  char v105 = (char *)&v87 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_243956820();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v108 = v20;
  uint64_t v109 = v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v87 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = (id)MEMORY[0x270FA5388](v22);
  int v107 = (char *)&v87 - v26;
  uint64_t v27 = HIBYTE(a2) & 0xF;
  uint64_t v28 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v29 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v29 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v29) {
    goto LABEL_68;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v33 = (uint64_t)sub_24375D00C(a1, a2, 10);
    char v82 = v81;
    swift_bridgeObjectRelease();
    if ((v82 & 1) == 0) {
      goto LABEL_36;
    }
    goto LABEL_68;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((a1 & 0x1000000000000000) != 0) {
      uint64_t v30 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v30 = (unsigned __int8 *)sub_243959400();
    }
    id v31 = sub_24375CFDC(v30, v28, 10);
    if ((v32 & 1) == 0)
    {
      uint64_t v33 = (uint64_t)v31;
LABEL_36:
      unint64_t v92 = a2;
      uint64_t v100 = v24;
      uint64_t v101 = a3;
      uint64_t v93 = v14;
      uint64_t v94 = a1;
      uint64_t v38 = sub_2439576F0();
      uint64_t v39 = *(void *)(v38 - 8);
      uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v39 + 56);
      uint64_t v91 = v38;
      uint64_t v98 = v39 + 56;
      uint64_t v99 = v40;
      ((void (*)(char *, uint64_t, uint64_t))v40)(v105, 1, 1);
      uint64_t v41 = sub_243957740();
      uint64_t v42 = *(void *)(v41 - 8);
      uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 56);
      uint64_t v96 = v42 + 56;
      uint64_t v97 = v43;
      v43(v106, 1, 1, v41);
      uint64_t v90 = v33 / 100;
      uint64_t v89 = v33 % 100;
      sub_243956810();
      uint64_t v44 = v11;
      type metadata accessor for FormatterConfiguration();
      sub_243957660();
      uint64_t v45 = v103;
      uint64_t v46 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v103 + 48);
      int v47 = v46(v10, 1, v11);
      char v95 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v46;
      if (v47 == 1)
      {
        uint64_t v88 = v11;
        sub_2434038E8((uint64_t)v10);
        if (qword_268D96B78 != -1) {
          swift_once();
        }
        uint64_t v48 = sub_243957B10();
        __swift_project_value_buffer(v48, (uint64_t)qword_268D9B250);
        id v49 = sub_243957AF0();
        os_log_type_t v50 = sub_243958AF0();
        BOOL v51 = os_log_type_enabled(v49, v50);
        uint64_t v52 = v91;
        if (v51)
        {
          uint64_t v53 = swift_slowAlloc();
          *(_DWORD *)uint64_t v53 = 134218240;
          v110[0] = v89;
          sub_2439590C0();
          *(_WORD *)(v53 + 12) = 2048;
          v110[0] = v90;
          sub_2439590C0();
          _os_log_impl(&dword_243363000, v49, v50, "Failed to make group start date from %ld & %ld.", (uint8_t *)v53, 0x16u);
          MEMORY[0x245680100](v53, -1, -1);
        }

        sub_2439573F0();
        uint64_t v44 = v88;
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v104, v10, v11);
        uint64_t v52 = v91;
      }
      v99(v105, 1, 1, v52);
      v97(v106, 1, 1, v41);
      BOOL v54 = v100;
      sub_243956810();
      uint64_t v55 = (uint64_t)v102;
      sub_243957670();
      uint64_t v56 = v109 + 8;
      uint64_t v57 = *(void (**)(char *, uint64_t))(v109 + 8);
      v57(v54, v108);
      int v58 = v95(v55, 1, v44);
      uint64_t v59 = v44;
      uint64_t v109 = v56;
      if (v58 == 1)
      {
        sub_2434038E8(v55);
        uint64_t v60 = v103;
        uint64_t v61 = v93;
        if (qword_268D96B78 != -1) {
          swift_once();
        }
        uint64_t v62 = sub_243957B10();
        __swift_project_value_buffer(v62, (uint64_t)qword_268D9B250);
        uint64_t v63 = sub_243957AF0();
        os_log_type_t v64 = sub_243958AF0();
        if (os_log_type_enabled(v63, v64))
        {
          uint64_t v65 = swift_slowAlloc();
          *(_DWORD *)uint64_t v65 = 134218240;
          v110[0] = v89;
          sub_2439590C0();
          *(_WORD *)(v65 + 12) = 2048;
          v110[0] = v90;
          sub_2439590C0();
          _os_log_impl(&dword_243363000, v63, v64, "Failed to make group end date from %ld & %ld.", (uint8_t *)v65, 0x16u);
          MEMORY[0x245680100](v65, -1, -1);
        }

        sub_2439573F0();
      }
      else
      {
        uint64_t v60 = v103;
        uint64_t v61 = v93;
        (*(void (**)(char *, uint64_t, uint64_t))(v103 + 32))(v93, v55, v44);
      }
      id v66 = objc_allocWithZone((Class)FKPaymentTransactionGroup);
      swift_bridgeObjectRetain();
      uint64_t v67 = v104;
      uint64_t v68 = (void *)sub_243957350();
      uint64_t v69 = (void *)sub_243957350();
      id v70 = (void *)sub_2439582A0();
      swift_bridgeObjectRelease();
      id v71 = objc_msgSend(v66, sel_initWithStartDate_endDate_transactionCount_type_bankConnectSectionIdentifier_, v68, v69, v101, 0, v70);

      uint64_t v72 = *(void (**)(char *, uint64_t))(v60 + 8);
      v72(v61, v59);
      v72(v67, v59);
      v57(v107, v108);
      return v71;
    }
LABEL_68:
    if (qword_268D96B78 != -1) {
      swift_once();
    }
    uint64_t v83 = sub_243957B10();
    __swift_project_value_buffer(v83, (uint64_t)qword_268D9B250);
    uint64_t v84 = sub_243957AF0();
    os_log_type_t v85 = sub_243958AF0();
    if (os_log_type_enabled(v84, v85))
    {
      uint64_t v86 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v86 = 0;
      _os_log_impl(&dword_243363000, v84, v85, "Could not decode monthAndYear into an integer", v86, 2u);
      MEMORY[0x245680100](v86, -1, -1);
    }

    return objc_msgSend(objc_allocWithZone((Class)FKPaymentTransactionGroup), sel_init);
  }
  v110[0] = a1;
  v110[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (a1 == 43)
  {
    if (!v27) {
      goto LABEL_77;
    }
    if (v27 == 1) {
      goto LABEL_75;
    }
    if ((BYTE1(a1) - 48) <= 9u)
    {
      uint64_t v33 = (BYTE1(a1) - 48);
      if (v27 == 2) {
        goto LABEL_34;
      }
      if ((BYTE2(a1) - 48) <= 9u)
      {
        uint64_t v33 = 10 * (BYTE1(a1) - 48) + (BYTE2(a1) - 48);
        uint64_t v34 = v27 - 3;
        if (v27 != 3)
        {
          uint64_t v35 = (unsigned __int8 *)v110 + 3;
          while (1)
          {
            unsigned int v36 = *v35 - 48;
            if (v36 > 9) {
              goto LABEL_32;
            }
            uint64_t v37 = 10 * v33;
            if ((unsigned __int128)(v33 * (__int128)10) >> 64 != (10 * v33) >> 63) {
              goto LABEL_32;
            }
            uint64_t v33 = v37 + v36;
            if (__OFADD__(v37, v36)) {
              goto LABEL_32;
            }
            LOBYTE(v27) = 0;
            ++v35;
            if (!--v34) {
              goto LABEL_35;
            }
          }
        }
        goto LABEL_34;
      }
    }
LABEL_32:
    uint64_t v33 = 0;
    LOBYTE(v27) = 1;
    goto LABEL_35;
  }
  if (a1 != 45)
  {
    if (!v27 || (a1 - 48) > 9u) {
      goto LABEL_32;
    }
    uint64_t v33 = (a1 - 48);
    if (v27 == 1)
    {
LABEL_34:
      LOBYTE(v27) = 0;
      goto LABEL_35;
    }
    if ((BYTE1(a1) - 48) <= 9u)
    {
      uint64_t v33 = 10 * (a1 - 48) + (BYTE1(a1) - 48);
      uint64_t v73 = v27 - 2;
      if (v27 != 2)
      {
        unint64_t v74 = (unsigned __int8 *)v110 + 2;
        while (1)
        {
          unsigned int v75 = *v74 - 48;
          if (v75 > 9) {
            goto LABEL_32;
          }
          uint64_t v76 = 10 * v33;
          if ((unsigned __int128)(v33 * (__int128)10) >> 64 != (10 * v33) >> 63) {
            goto LABEL_32;
          }
          uint64_t v33 = v76 + v75;
          if (__OFADD__(v76, v75)) {
            goto LABEL_32;
          }
          LOBYTE(v27) = 0;
          ++v74;
          if (!--v73) {
            goto LABEL_35;
          }
        }
      }
      goto LABEL_34;
    }
    goto LABEL_32;
  }
  if (v27)
  {
    if (v27 != 1)
    {
      if ((BYTE1(a1) - 48) > 9u) {
        goto LABEL_32;
      }
      if (v27 == 2)
      {
        LOBYTE(v27) = 0;
        uint64_t v33 = -(uint64_t)(BYTE1(a1) - 48);
        goto LABEL_35;
      }
      if ((BYTE2(a1) - 48) > 9u) {
        goto LABEL_32;
      }
      uint64_t v33 = -10 * (BYTE1(a1) - 48) - (BYTE2(a1) - 48);
      uint64_t v77 = v27 - 3;
      if (v27 != 3)
      {
        uint64_t v78 = (unsigned __int8 *)v110 + 3;
        while (1)
        {
          unsigned int v79 = *v78 - 48;
          if (v79 > 9) {
            goto LABEL_32;
          }
          uint64_t v80 = 10 * v33;
          if ((unsigned __int128)(v33 * (__int128)10) >> 64 != (10 * v33) >> 63) {
            goto LABEL_32;
          }
          uint64_t v33 = v80 - v79;
          if (__OFSUB__(v80, v79)) {
            goto LABEL_32;
          }
          LOBYTE(v27) = 0;
          ++v78;
          if (!--v77) {
            goto LABEL_35;
          }
        }
      }
      goto LABEL_34;
    }
LABEL_75:
    uint64_t v33 = 0;
LABEL_35:
    if ((v27 & 1) == 0) {
      goto LABEL_36;
    }
    goto LABEL_68;
  }
  __break(1u);
LABEL_77:
  __break(1u);
  return result;
}

id sub_24376185C(uint64_t a1, uint64_t a2)
{
  uint64_t v65 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v62 = (char *)v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v54 - v6;
  uint64_t v8 = sub_243957400();
  uint64_t v68 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  os_log_type_t v64 = (char *)v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v54 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C5B90);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C5B88);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_243956820();
  uint64_t v69 = *(void *)(v67 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v67);
  uint64_t v61 = (char *)v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)v54 - v21;
  uint64_t v23 = sub_2439576F0();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v59 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 56);
  uint64_t v60 = v23;
  uint64_t v58 = v24 + 56;
  v59(v18, 1, 1);
  uint64_t v25 = sub_243957740();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56);
  uint64_t v56 = v26 + 56;
  uint64_t v57 = v27;
  v27(v15, 1, 1, v25);
  uint64_t v28 = a1;
  sub_243956810();
  uint64_t v29 = &v66[OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_formatterConfiguration];
  uint64_t v30 = &v29[*(int *)(type metadata accessor for FormatterConfiguration() + 20)];
  uint64_t v63 = v22;
  uint64_t v31 = v68;
  v54[1] = v30;
  sub_243957660();
  uint64_t v55 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48);
  int v32 = v55(v7, 1, v8);
  id v66 = v12;
  if (v32 == 1)
  {
    v54[0] = v8;
    sub_2434038E8((uint64_t)v7);
    if (qword_268D96B78 != -1) {
      swift_once();
    }
    uint64_t v33 = sub_243957B10();
    __swift_project_value_buffer(v33, (uint64_t)qword_268D9B250);
    uint64_t v34 = sub_243957AF0();
    os_log_type_t v35 = sub_243958AF0();
    if (os_log_type_enabled(v34, v35))
    {
      unsigned int v36 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)unsigned int v36 = 134217984;
      uint64_t v70 = v28;
      sub_2439590C0();
      _os_log_impl(&dword_243363000, v34, v35, "Failed to make group start date for %ld", v36, 0xCu);
      MEMORY[0x245680100](v36, -1, -1);
    }

    sub_2439573F0();
    uint64_t v8 = v54[0];
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v12, v7, v8);
  }
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v59)(v18, 1, 1, v60);
  v57(v15, 1, 1, v25);
  uint64_t v37 = v61;
  sub_243956810();
  uint64_t v38 = (uint64_t)v62;
  sub_243957670();
  uint64_t v39 = *(void (**)(char *, uint64_t))(v69 + 8);
  v69 += 8;
  v39(v37, v67);
  if (v55((char *)v38, 1, v8) == 1)
  {
    sub_2434038E8(v38);
    uint64_t v40 = v68;
    uint64_t v41 = v64;
    if (qword_268D96B78 != -1) {
      swift_once();
    }
    uint64_t v42 = sub_243957B10();
    __swift_project_value_buffer(v42, (uint64_t)qword_268D9B250);
    uint64_t v43 = sub_243957AF0();
    os_log_type_t v44 = sub_243958AF0();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v45 = 134217984;
      uint64_t v70 = v28;
      sub_2439590C0();
      _os_log_impl(&dword_243363000, v43, v44, "Failed to make group end date for %ld", v45, 0xCu);
      MEMORY[0x245680100](v45, -1, -1);
    }

    sub_2439573F0();
  }
  else
  {
    uint64_t v40 = v68;
    uint64_t v41 = v64;
    (*(void (**)(char *, uint64_t, uint64_t))(v68 + 32))(v64, v38, v8);
  }
  uint64_t v70 = v28;
  sub_2439598D0();
  id v46 = objc_allocWithZone((Class)FKPaymentTransactionGroup);
  int v47 = v66;
  uint64_t v48 = (void *)sub_243957350();
  id v49 = (void *)sub_243957350();
  os_log_type_t v50 = (void *)sub_2439582A0();
  swift_bridgeObjectRelease();
  id v51 = objc_msgSend(v46, sel_initWithStartDate_endDate_transactionCount_type_bankConnectSectionIdentifier_, v48, v49, v65, 1, v50);

  uint64_t v52 = *(void (**)(char *, uint64_t))(v40 + 8);
  v52(v41, v8);
  v52(v47, v8);
  v39(v63, v67);
  return v51;
}

uint64_t sub_2437620B8(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x263F8EE78];
    if (!v4) {
      break;
    }
    uint64_t v9 = MEMORY[0x263F8EE78];
    uint64_t result = sub_243959450();
    if (v4 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v6 = 0;
    a2 = *(void *)(a2 + OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_transactionExporter);
    while (v4 != v6)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v7 = (id)MEMORY[0x24567E5D0](v6, a1);
      }
      else {
        id v7 = *(id *)(a1 + 8 * v6 + 32);
      }
      uint64_t v8 = v7;
      ++v6;
      sub_2433EC6E0(v7, 1);

      sub_243959420();
      sub_243959460();
      sub_243959470();
      sub_243959430();
      if (v4 == v6) {
        return v9;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_243959550();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_243762204(uint64_t a1)
{
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v14 = MEMORY[0x263F8EE78];
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = 0;
    while (1)
    {
      uint64_t v5 = *(void *)(a1 + 8 * v4 + 32);
      if (*(void *)(v5 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v6 = sub_24341A73C(0x646E4168746E6F6DLL, 0xEC00000072616559);
        if (v7)
        {
          sub_24337BE00(*(void *)(v5 + 56) + 32 * v6, (uint64_t)v13);
          if (swift_dynamicCast())
          {
            if (*(void *)(v5 + 16))
            {
              unint64_t v8 = sub_24341A73C(0x746E756F63, 0xE500000000000000);
              if (v9)
              {
                sub_24337BE00(*(void *)(v5 + 56) + 32 * v8, (uint64_t)v13);
                if (swift_dynamicCast())
                {
                  sub_243760BBC(v11, v12, v11);
                  swift_bridgeObjectRelease();
                  uint64_t v10 = swift_bridgeObjectRelease();
                  MEMORY[0x24567D890](v10);
                  if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                    sub_243958680();
                  }
                  sub_2439586B0();
                  sub_243958670();
                  goto LABEL_4;
                }
              }
            }
            swift_bridgeObjectRelease();
          }
        }
        swift_bridgeObjectRelease();
      }
LABEL_4:
      if (v3 == ++v4)
      {
        swift_bridgeObjectRelease();
        return v14;
      }
    }
  }
  return result;
}

uint64_t sub_243762408(uint64_t a1)
{
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v13 = MEMORY[0x263F8EE78];
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v3; ++i)
    {
      uint64_t v5 = *(void *)(a1 + 8 * i + 32);
      if (*(void *)(v5 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v6 = sub_24341A73C(1918985593, 0xE400000000000000);
        if ((v7 & 1) != 0
          && (sub_24337BE00(*(void *)(v5 + 56) + 32 * v6, (uint64_t)v12), (swift_dynamicCast() & 1) != 0)
          && *(void *)(v5 + 16)
          && (unint64_t v8 = sub_24341A73C(0x746E756F63, 0xE500000000000000), (v9 & 1) != 0)
          && (sub_24337BE00(*(void *)(v5 + 56) + 32 * v8, (uint64_t)v12), (swift_dynamicCast() & 1) != 0))
        {
          sub_24376185C(v11, v11);
          uint64_t v10 = swift_bridgeObjectRelease();
          MEMORY[0x24567D890](v10);
          if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_243958680();
          }
          sub_2439586B0();
          sub_243958670();
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
    }
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

id sub_2437625D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x270FA5388](v6);
  unint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B0C7F68 != -1) {
    swift_once();
  }
  uint64_t v9 = *((void *)off_26B0C7F60 + 2);
  uint64_t v10 = *(void **)(v9 + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  id v11 = objc_msgSend(v10, sel_newBackgroundContext);
  sub_2439574D0();
  sub_243957630();
  sub_243957720();
  if (qword_26B0C7690 != -1) {
    swift_once();
  }
  unint64_t v12 = off_26B0C7970;
  type metadata accessor for ManagedTransactionExporter();
  uint64_t v13 = (void *)swift_allocObject();
  void v13[5] = type metadata accessor for BankConnectService();
  v13[6] = &protocol witness table for BankConnectService;
  void v13[2] = v12;
  uint64_t v14 = *(void **)(*((void *)off_26B0C7F60 + 2) + 16);
  swift_retain();
  id v15 = objc_msgSend(v14, sel_viewContext);
  type metadata accessor for TransactionChangesObserver();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 32) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v16 + 16) = v15;
  id v17 = objc_allocWithZone((Class)type metadata accessor for TransactionsAndGroupsProvider());
  return sub_24375F3B0(a1, a2, v9, (uint64_t)v11, (uint64_t)v8, (uint64_t)sub_24375F358, 0, a3, (uint64_t)v13, v16);
}

uint64_t sub_243762808()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_243762840()
{
  sub_24375F94C(*(char **)(v0 + 16));
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

uint64_t type metadata accessor for TransactionsAndGroupsProvider()
{
  uint64_t result = qword_268D9F6E0;
  if (!qword_268D9F6E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24376289C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x245680210](v3);
  *a2 = result;
  return result;
}

uint64_t sub_2437628F4()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_24376294C()
{
  return type metadata accessor for TransactionsAndGroupsProvider();
}

uint64_t sub_243762954()
{
  uint64_t result = type metadata accessor for FormatterConfiguration();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t method lookup function for TransactionsAndGroupsProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for TransactionsAndGroupsProvider);
}

uint64_t dispatch thunk of TransactionsAndGroupsProvider.delegate.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x100))();
}

uint64_t dispatch thunk of TransactionsAndGroupsProvider.delegate.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x108))();
}

uint64_t dispatch thunk of TransactionsAndGroupsProvider.delegate.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x110))();
}

uint64_t dispatch thunk of static TransactionsAndGroupsProvider.makeProvider(primaryAccountIdentifier:)()
{
  return (*(uint64_t (**)(void))(v0 + 280))();
}

uint64_t dispatch thunk of static TransactionsAndGroupsProvider.makeProvider(primaryAccountIdentifier:fixedNumberOfLatestTransactions:)()
{
  return (*(uint64_t (**)(void))(v0 + 288))();
}

uint64_t dispatch thunk of TransactionsAndGroupsProvider.performFetchAndStartObservingNotifications()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x130))();
}

id sub_243762B74(uint64_t a1, uint64_t a2, char a3)
{
  type metadata accessor for ManagedInternalTransaction();
  v11.receiver = (id)swift_getObjCClassFromMetadata();
  v11.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit26ManagedInternalTransaction;
  id v6 = objc_msgSendSuper2(&v11, sel_fetchRequest);
  uint64_t v7 = (void *)sub_243958630();
  objc_msgSend(v6, sel_setRelationshipKeyPathsForPrefetching_, v7);

  objc_msgSend(v6, sel_setPredicate_, a1);
  swift_getKeyPath();
  _s10FinanceKit26ManagedInternalTransactionC27transactionsSortDescriptors9ascending27withKeyPathForSortingByDateSaySo16NSSortDescriptorCGSb_s0kL0CyAC10Foundation0P0VGtFZ_0(0);
  swift_release();
  sub_24337C218(0, (unint64_t *)&qword_268D9F750);
  unint64_t v8 = (void *)sub_243958630();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setSortDescriptors_, v8);

  objc_msgSend(v6, sel_setReturnsObjectsAsFaults_, 0);
  uint64_t v9 = (void *)sub_243958630();
  objc_msgSend(v6, sel_setRelationshipKeyPathsForPrefetching_, v9);

  if ((a3 & 1) == 0) {
    objc_msgSend(v6, sel_setFetchLimit_, a2);
  }
  return v6;
}

id sub_243762D00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C9900);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_243967E10;
  *(void *)(v10 + 32) = _s10FinanceKit26ManagedInternalTransactionC012predicateForE021withExternalAccountID04passB6CutoffSo11NSPredicateCSS_10Foundation4DateVSgtFZ_0(a1, a2, a5);
  sub_24337C218(0, (unint64_t *)&qword_26B0C9140);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E30);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_24395EAE0;
  *(void *)(v11 + 56) = MEMORY[0x263F8D310];
  *(void *)(v11 + 64) = sub_24337BF04();
  *(void *)(v11 + 32) = a3;
  *(void *)(v11 + 40) = a4;
  swift_bridgeObjectRetain();
  *(void *)(v10 + 40) = sub_243958A00();
  *(void *)(v10 + 48) = sub_243958A00();
  sub_243958670();
  unint64_t v12 = (void *)sub_243958630();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v12);

  return v13;
}

uint64_t sub_243762E90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_243958D80();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v11 = type metadata accessor for ManagedInternalTransaction.MonthYearFormatter();
  MEMORY[0x270FA5388](v11 - 8);
  id v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ManagedInternalTransaction();
  id v14 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_entityName);
  sub_2439582D0();

  id v15 = objc_allocWithZone(MEMORY[0x263EFF260]);
  uint64_t v16 = (void *)sub_2439582A0();
  swift_bridgeObjectRelease();
  id v17 = objc_msgSend(v15, sel_initWithEntityName_, v16);

  sub_2439574D0();
  type metadata accessor for FormatterConfiguration();
  sub_243957630();
  uint64_t result = sub_243957720();
  uint64_t v19 = 100 * a4;
  if ((unsigned __int128)(a4 * (__int128)100) >> 64 == (100 * a4) >> 63)
  {
    BOOL v20 = __OFADD__(v19, a3);
    uint64_t v21 = v19 + a3;
    if (!v20)
    {
      uint64_t v44 = v21;
      uint64_t v22 = sub_2439598D0();
      uint64_t v24 = v23;
      sub_243763A44((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ManagedInternalTransaction.MonthYearFormatter);
      id v25 = sub_243762D00(a1, a2, v22, v24, a5);
      swift_bridgeObjectRelease();
      objc_msgSend(v17, sel_setPredicate_, v25);

      __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C9910);
      uint64_t v26 = swift_allocObject();
      long long v43 = xmmword_24395EAE0;
      uint64_t v27 = MEMORY[0x263F8D310];
      *(_OWORD *)(v26 + 16) = xmmword_24395EAE0;
      *(void *)(v26 + 56) = v27;
      strcpy((char *)(v26 + 32), "monthAndYear");
      *(unsigned char *)(v26 + 45) = 0;
      *(_WORD *)(v26 + 46) = -5120;
      uint64_t v28 = (void *)sub_243958630();
      swift_bridgeObjectRelease();
      objc_msgSend(v17, sel_setPropertiesToGroupBy_, v28);

      objc_msgSend(v17, sel_setResultType_, 2);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C9900);
      uint64_t v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = xmmword_243960A20;
      sub_24337C218(0, (unint64_t *)&qword_268D9F750);
      swift_getKeyPath();
      *(void *)(v29 + 32) = sub_243958BA0();
      uint64_t v44 = v29;
      sub_243958670();
      uint64_t v30 = (void *)sub_243958630();
      swift_bridgeObjectRelease();
      objc_msgSend(v17, sel_setSortDescriptors_, v30);

      id v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF248]), sel_init);
      sub_243958D70();
      sub_243958DE0();
      id v32 = v31;
      uint64_t v33 = (void *)sub_2439582A0();
      objc_msgSend(v32, sel_setName_, v33);

      uint64_t v34 = swift_allocObject();
      *(_OWORD *)(v34 + 16) = v43;
      uint64_t v35 = sub_24337C218(0, &qword_268D97A60);
      swift_getKeyPath();
      uint64_t v36 = sub_243958A50();
      *(void *)(v34 + 56) = v35;
      *(void *)(v34 + 32) = v36;
      uint64_t v37 = (void *)sub_2439582A0();
      uint64_t v38 = (void *)sub_243958630();
      swift_bridgeObjectRelease();
      id v39 = objc_msgSend(self, sel_expressionForFunction_arguments_, v37, v38);

      objc_msgSend(v32, sel_setExpression_, v39);
      uint64_t v40 = swift_allocObject();
      *(_OWORD *)(v40 + 16) = xmmword_24395EAD0;
      *(void *)(v40 + 56) = MEMORY[0x263F8D310];
      strcpy((char *)(v40 + 32), "monthAndYear");
      *(unsigned char *)(v40 + 45) = 0;
      *(_WORD *)(v40 + 46) = -5120;
      *(void *)(v40 + 88) = sub_24337C218(0, (unint64_t *)&unk_268D9F790);
      *(void *)(v40 + 64) = v32;
      id v41 = v32;
      uint64_t v42 = (void *)sub_243958630();
      swift_bridgeObjectRelease();
      objc_msgSend(v17, sel_setPropertiesToFetch_, v42);

      return (uint64_t)v17;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_2437633E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_243958D80();
  MEMORY[0x270FA5388](v6 - 8);
  type metadata accessor for ManagedInternalTransaction();
  id v7 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_entityName);
  sub_2439582D0();

  id v8 = objc_allocWithZone(MEMORY[0x263EFF260]);
  uint64_t v9 = (void *)sub_2439582A0();
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(v8, sel_initWithEntityName_, v9);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C9900);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_243961080;
  *(void *)(v11 + 32) = _s10FinanceKit26ManagedInternalTransactionC012predicateForE021withExternalAccountID04passB6CutoffSo11NSPredicateCSS_10Foundation4DateVSgtFZ_0(a1, a2, a3);
  sub_24337C218(0, (unint64_t *)&qword_26B0C9140);
  *(void *)(v11 + 40) = sub_243958A00();
  sub_243958670();
  uint64_t v12 = (void *)sub_243958630();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v12);

  objc_msgSend(v10, sel_setPredicate_, v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C9910);
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = MEMORY[0x263F8D310];
  *(_OWORD *)(v14 + 16) = xmmword_24395EAE0;
  *(void *)(v14 + 56) = v15;
  *(void *)(v14 + 32) = 1918985593;
  *(void *)(v14 + 40) = 0xE400000000000000;
  uint64_t v16 = (void *)sub_243958630();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setPropertiesToGroupBy_, v16);

  objc_msgSend(v10, sel_setResultType_, 2);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_243960A20;
  sub_24337C218(0, (unint64_t *)&qword_268D9F750);
  swift_getKeyPath();
  *(void *)(v17 + 32) = sub_243958BA0();
  sub_243958670();
  uint64_t v18 = (void *)sub_243958630();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setSortDescriptors_, v18);

  id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF248]), sel_init);
  sub_243958D70();
  sub_243958DE0();
  id v20 = v19;
  uint64_t v21 = (void *)sub_2439582A0();
  objc_msgSend(v20, sel_setName_, v21);

  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_24395EAE0;
  uint64_t v23 = sub_24337C218(0, &qword_268D97A60);
  swift_getKeyPath();
  uint64_t v24 = sub_243958A50();
  *(void *)(v22 + 56) = v23;
  *(void *)(v22 + 32) = v24;
  id v25 = (void *)sub_2439582A0();
  uint64_t v26 = (void *)sub_243958630();
  swift_bridgeObjectRelease();
  id v27 = objc_msgSend(self, sel_expressionForFunction_arguments_, v25, v26);

  objc_msgSend(v20, sel_setExpression_, v27);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_24395EAD0;
  *(void *)(v28 + 56) = MEMORY[0x263F8D310];
  *(void *)(v28 + 32) = 1918985593;
  *(void *)(v28 + 40) = 0xE400000000000000;
  *(void *)(v28 + 88) = sub_24337C218(0, (unint64_t *)&unk_268D9F790);
  *(void *)(v28 + 64) = v20;
  id v29 = v20;
  uint64_t v30 = (void *)sub_243958630();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setPropertiesToFetch_, v30);

  return v10;
}

id sub_2437638E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_243762D00(a1, a2, a3, a4, a5);
}

uint64_t sub_243763910()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_243763968(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  id v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *id v10 = v2;
  v10[1] = sub_24337AF78;
  return sub_243760944(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_243763A44(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_243763ABC(uint64_t a1)
{
  uint64_t v20 = a1 + 56;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a1 + 56);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  uint64_t v8 = (void *)MEMORY[0x263F8EE78];
  if (!v4) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v9 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  for (unint64_t i = v9 | (v7 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v7 << 6))
  {
    uint64_t v14 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    swift_bridgeObjectRetain();
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_24377644C(0, v8[2] + 1, 1, v8);
      uint64_t v8 = (void *)result;
    }
    unint64_t v18 = v8[2];
    unint64_t v17 = v8[3];
    if (v18 >= v17 >> 1)
    {
      uint64_t result = (uint64_t)sub_24377644C((void *)(v17 > 1), v18 + 1, 1, v8);
      uint64_t v8 = (void *)result;
    }
    v8[2] = v18 + 1;
    id v19 = &v8[2 * v18];
    v19[4] = v15;
    v19[5] = v16;
    if (v4) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v11 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v11 >= v5) {
      goto LABEL_27;
    }
    unint64_t v12 = *(void *)(v20 + 8 * v11);
    ++v7;
    if (!v12)
    {
      int64_t v7 = v11 + 1;
      if (v11 + 1 >= v5) {
        goto LABEL_27;
      }
      unint64_t v12 = *(void *)(v20 + 8 * v7);
      if (!v12)
      {
        int64_t v7 = v11 + 2;
        if (v11 + 2 >= v5) {
          goto LABEL_27;
        }
        unint64_t v12 = *(void *)(v20 + 8 * v7);
        if (!v12)
        {
          int64_t v7 = v11 + 3;
          if (v11 + 3 >= v5) {
            goto LABEL_27;
          }
          unint64_t v12 = *(void *)(v20 + 8 * v7);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v4 = (v12 - 1) & v12;
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v5)
  {
LABEL_27:
    swift_release();
    return (uint64_t)v8;
  }
  unint64_t v12 = *(void *)(v20 + 8 * v13);
  if (v12)
  {
    int64_t v7 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v7 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v7 >= v5) {
      goto LABEL_27;
    }
    unint64_t v12 = *(void *)(v20 + 8 * v7);
    ++v13;
    if (v12) {
      goto LABEL_20;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

void *sub_243763CB8(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = sub_243959550())
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE78];
    uint64_t v4 = 4;
    while (1)
    {
      id v5 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x24567E5D0](v4 - 4, a1) : *(id *)(a1 + 8 * v4);
      uint64_t v6 = v5;
      uint64_t v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1)) {
        break;
      }
      id v8 = objc_msgSend(v5, sel_issuerCountryCode);
      if (v8)
      {
        unint64_t v9 = v8;
        uint64_t v10 = sub_2439582D0();
        uint64_t v12 = v11;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v3 = sub_24377644C(0, v3[2] + 1, 1, v3);
        }
        unint64_t v14 = v3[2];
        unint64_t v13 = v3[3];
        if (v14 >= v13 >> 1) {
          uint64_t v3 = sub_24377644C((void *)(v13 > 1), v14 + 1, 1, v3);
        }
        v3[2] = v14 + 1;
        uint64_t v15 = &v3[2 * v14];
        _OWORD v15[4] = v10;
        _OWORD v15[5] = v12;
      }
      else
      {
      }
      ++v4;
      if (v7 == v2) {
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  uint64_t v3 = (void *)MEMORY[0x263F8EE78];
LABEL_19:
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t BankConnectPassMatcher.__allocating_init(taskQueueProvider:configurationProvider:webClientProvider:assetManager:institutionMatchingCache:softwareLibrary:)(long long *a1, long long *a2, long long *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  sub_2433A857C(a1, v12 + 16);
  sub_2433A857C(a2, v12 + 56);
  sub_2433A857C(a3, v12 + 96);
  *(void *)(v12 + 136) = a4;
  *(void *)(v12 + 144) = a5;
  sub_24337BF80(a6, v12 + 152, &qword_268D9F7A0);
  return v12;
}

uint64_t BankConnectPassMatcher.init(taskQueueProvider:configurationProvider:webClientProvider:assetManager:institutionMatchingCache:softwareLibrary:)(long long *a1, long long *a2, long long *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_2433A857C(a1, v6 + 16);
  sub_2433A857C(a2, v6 + 56);
  sub_2433A857C(a3, v6 + 96);
  *(void *)(v6 + 136) = a4;
  *(void *)(v6 + 144) = a5;
  sub_24337BF80(a6, v6 + 152, &qword_268D9F7A0);
  return v6;
}

uint64_t BankConnectPassMatcher.institution(for:)(uint64_t a1, uint64_t a2)
{
  v3[14] = a2;
  v3[15] = v2;
  v3[13] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268D97830);
  v3[16] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_243764004, 0, 0);
}

uint64_t sub_243764004()
{
  uint64_t v2 = *(void **)(v0 + 112);
  unint64_t v1 = *(void **)(v0 + 120);
  uint64_t v3 = v1[5];
  uint64_t v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v3);
  id v5 = objc_msgSend(v2, sel_serialNumber);
  uint64_t v6 = sub_2439582D0();
  uint64_t v8 = v7;

  *(void *)(v0 + 136) = v8;
  *(void *)(v0 + 80) = v6;
  *(void *)(v0 + 88) = v8;
  *(unsigned char *)(v0 + 96) = 1;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 + 8) + **(int **)(v4 + 8));
  unint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v9;
  *unint64_t v9 = v0;
  v9[1] = sub_243764160;
  return v11(v0 + 80, v3, v4);
}

uint64_t sub_243764160(uint64_t a1)
{
  *(void *)(*(void *)v1 + 152) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_243764280, 0, 0);
}

uint64_t sub_243764280()
{
  uint64_t v1 = v0[19];
  uint64_t v3 = (void *)v0[14];
  uint64_t v2 = v0[15];
  uint64_t v4 = swift_allocObject();
  v0[20] = v4;
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v3;
  sub_243662D20();
  swift_retain();
  id v5 = v3;
  if (v1)
  {
    swift_getObjectType();
    uint64_t v6 = sub_243958700();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  return MEMORY[0x270FA2498](sub_243764344, v6, v8);
}

uint64_t sub_243764344()
{
  uint64_t v2 = v0[19];
  uint64_t v1 = v0[20];
  uint64_t v3 = v0[16];
  v0[2] = v0;
  v0[7] = v3;
  v0[3] = sub_243764404;
  uint64_t v4 = swift_continuation_init();
  sub_2434E33E0(v4, v2, (uint64_t)&unk_268D9F7B8, v1);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_243764404()
{
  uint64_t v1 = *v0;
  uint64_t v2 = (*v0)[6];
  (*v0)[21] = v2;
  if (v2)
  {
    uint64_t v3 = v1[19];
    swift_willThrow();
    uint64_t v4 = sub_2437645C0;
    uint64_t v5 = v3;
  }
  else
  {
    sub_24337BF80(v1[16], v1[13], &qword_268D97830);
    swift_release();
    uint64_t v4 = sub_243764550;
    uint64_t v5 = 0;
  }
  return MEMORY[0x270FA2498](v4, v5, 0);
}

uint64_t sub_243764550()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2437645C0()
{
  swift_release();
  return MEMORY[0x270FA2498](sub_243764628, 0, 0);
}

uint64_t sub_243764628()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_243764698(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[5] = a2;
  v3[6] = a3;
  v3[4] = a1;
  return MEMORY[0x270FA2498](sub_24376472C, 0, 0);
}

uint64_t sub_24376472C()
{
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  if (qword_26B0C7DF8 != -1) {
    swift_once();
  }
  uint64_t v1 = _os_activity_create(&dword_243363000, "bankConnect/passMatcher", (os_activity_t)qword_26B0C7DF0, OS_ACTIVITY_FLAG_DEFAULT);
  *(void *)(v0 + 56) = v1;
  os_activity_scope_enter(v1, (os_activity_scope_state_t)(v0 + 16));
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 64) = v2;
  *(void *)uint64_t v2 = v0;
  *(void *)(v2 + 8) = sub_243764870;
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v2 + 40) = *(void *)(v0 + 48);
  *(_OWORD *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_243764C00, 0, 0);
}

uint64_t sub_243764870()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_243764A4C;
  }
  else {
    uint64_t v2 = sub_2437649B0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2437649B0()
{
  os_activity_scope_leave(v0 + 1);
  swift_unknownObjectRelease();
  uint64_t v1 = (uint64_t (*)(void))v0->opaque[1];
  return v1();
}

uint64_t sub_243764A4C()
{
  os_activity_scope_leave(v0 + 1);
  swift_unknownObjectRelease();
  uint64_t v1 = (uint64_t (*)(void))v0->opaque[1];
  return v1();
}

uint64_t sub_243764AE8()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_243764B28(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_24337AF78;
  *(_OWORD *)(v4 + 40) = v5;
  *(void *)(v4 + 32) = a1;
  return MEMORY[0x270FA2498](sub_24376472C, 0, 0);
}

uint64_t sub_243764BDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  return MEMORY[0x270FA2498](sub_243764C00, 0, 0);
}

uint64_t sub_243764C00()
{
  id v19 = v0;
  if (qword_268D96B78 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[5];
  uint64_t v2 = sub_243957B10();
  __swift_project_value_buffer(v2, (uint64_t)qword_268D9B250);
  id v3 = v1;
  uint64_t v4 = sub_243957AF0();
  os_log_type_t v5 = sub_243958B10();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = (void *)v0[5];
  if (v6)
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v18 = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    id v10 = objc_msgSend(v7, sel_primaryAccountIdentifier);
    uint64_t v11 = sub_2439582D0();
    unint64_t v13 = v12;

    v0[2] = sub_2433781FC(v11, v13, &v18);
    sub_2439590C0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_243363000, v4, v5, "Fetching institution for payment pass with fpanID: %s.", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245680100](v9, -1, -1);
    MEMORY[0x245680100](v8, -1, -1);
  }
  else
  {
  }
  unint64_t v14 = (void *)swift_task_alloc();
  v0[6] = v14;
  *unint64_t v14 = v0;
  v14[1] = sub_243446ADC;
  uint64_t v15 = v0[5];
  uint64_t v16 = v0[3];
  return sub_243764E44(v16, v15);
}

uint64_t sub_243764E44(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  uint64_t v5 = type metadata accessor for Institution(0);
  v3[6] = v5;
  v3[7] = *(void *)(v5 - 8);
  unsigned char v3[8] = swift_task_alloc();
  BOOL v6 = (void *)swift_task_alloc();
  v3[9] = v6;
  *BOOL v6 = v3;
  v6[1] = sub_243764F3C;
  return sub_24376C920(a2);
}

uint64_t sub_243764F3C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(*v2 + 80) = a1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return MEMORY[0x270FA2498](sub_24376508C, 0, 0);
  }
}

uint64_t sub_24376508C()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(unsigned __int8 *)(v0[7] + 80);
    sub_24376F7D4(v1 + ((v3 + 32) & ~v3), v0[8], type metadata accessor for Institution);
    if (v2 == 1)
    {
      uint64_t v4 = (void *)v0[4];
      swift_bridgeObjectRelease();
      id v5 = objc_msgSend(v4, sel_associatedApplicationIdentifiers);
      uint64_t v6 = sub_2439588E0();
      v0[11] = v6;

      id v7 = objc_msgSend(v4, sel_associatedStoreIdentifiers);
      sub_2434CA0D8();
      uint64_t v8 = sub_243958650();
      v0[12] = v8;

      uint64_t v9 = (void *)swift_task_alloc();
      v0[13] = v9;
      *uint64_t v9 = v0;
      v9[1] = sub_2437654A0;
      uint64_t v10 = v0[8];
      uint64_t v11 = v0[5];
      v9[39] = v8;
      v9[40] = v11;
      v9[37] = v10;
      v9[38] = v6;
      return MEMORY[0x270FA2498](sub_24376A264, 0, 0);
    }
    if (qword_268D96B78 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_243957B10();
    __swift_project_value_buffer(v19, (uint64_t)qword_268D9B250);
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_243957AF0();
    os_log_type_t v21 = sub_243958AF0();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 134349056;
      swift_bridgeObjectRelease();
      v0[2] = v2;
      sub_2439590C0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_243363000, v20, v21, "More than one (%{public}ld) institutions matched to pass, aborting matching.", v22, 0xCu);
      MEMORY[0x245680100](v22, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v23 = v0[7];
    uint64_t v24 = v0[6];
    uint64_t v25 = v0[3];
    sub_24376F83C(v0[8], type metadata accessor for Institution);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56))(v25, 1, 1, v24);
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_268D96B78 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_243957B10();
    __swift_project_value_buffer(v12, (uint64_t)qword_268D9B250);
    unint64_t v13 = sub_243957AF0();
    os_log_type_t v14 = sub_243958B10();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl(&dword_243363000, v13, v14, "No institution matched, returning nil.", v15, 2u);
      MEMORY[0x245680100](v15, -1, -1);
    }
    uint64_t v16 = v0[6];
    uint64_t v17 = v0[7];
    uint64_t v18 = v0[3];

    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(v18, 1, 1, v16);
  }
  swift_task_dealloc();
  uint64_t v26 = (uint64_t (*)(void))v0[1];
  return v26();
}

uint64_t sub_2437654A0(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 112) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v1)
  {
    id v5 = sub_2437656EC;
  }
  else
  {
    *(unsigned char *)(v4 + 120) = a1 & 1;
    id v5 = sub_24376560C;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_24376560C()
{
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v4 = *(void *)(v0 + 24);
  if (*(unsigned char *)(v0 + 120) == 1)
  {
    sub_24376F89C(v1, *(void *)(v0 + 24), type metadata accessor for Institution);
    uint64_t v5 = 0;
  }
  else
  {
    sub_24376F83C(v1, type metadata accessor for Institution);
    uint64_t v5 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v4, v5, 1, v3);
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_2437656EC()
{
  sub_24376F83C(*(void *)(v0 + 64), type metadata accessor for Institution);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t BankConnectPassMatcher.institutions(for:)(uint64_t a1)
{
  *(void *)(v2 + 120) = a1;
  *(void *)(v2 + 128) = v1;
  return MEMORY[0x270FA2498](sub_24376578C, 0, 0);
}

uint64_t sub_24376578C()
{
  unint64_t v2 = *(void *)(v0 + 120);
  uint64_t v1 = *(void **)(v0 + 128);
  uint64_t v3 = v1[5];
  uint64_t v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v3);
  uint64_t v5 = sub_2436A4B98(v2, v0 + 104, (SEL *)&selRef_serialNumber);
  uint64_t v6 = sub_2433FA098(v5);
  *(void *)(v0 + 136) = v6;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 80) = v6;
  *(void *)(v0 + 88) = 0;
  *(unsigned char *)(v0 + 96) = 2;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 + 8) + **(int **)(v4 + 8));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_2437658E4;
  return v9(v0 + 80, v3, v4);
}

uint64_t sub_2437658E4(uint64_t a1)
{
  *(void *)(*(void *)v1 + 152) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_243765A04, 0, 0);
}

uint64_t sub_243765A04()
{
  uint64_t v1 = v0[19];
  uint64_t v3 = v0[15];
  uint64_t v2 = v0[16];
  uint64_t v4 = swift_allocObject();
  v0[20] = v4;
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v3;
  sub_243662D20();
  swift_retain();
  swift_bridgeObjectRetain();
  if (v1)
  {
    swift_getObjectType();
    uint64_t v5 = sub_243958700();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  return MEMORY[0x270FA2498](sub_243765ACC, v5, v7);
}

uint64_t sub_243765ACC()
{
  uint64_t v2 = v0[19];
  uint64_t v1 = v0[20];
  v0[2] = v0;
  v0[7] = v0 + 14;
  v0[3] = sub_243765B8C;
  uint64_t v3 = swift_continuation_init();
  sub_2434E3648(v3, v2, (uint64_t)&unk_268D9F7D0, v1);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_243765B8C()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 168) = v2;
  if (v2)
  {
    uint64_t v3 = v1[19];
    swift_willThrow();
    uint64_t v4 = sub_243765D30;
    uint64_t v5 = v3;
  }
  else
  {
    v1[22] = v1[14];
    swift_release();
    uint64_t v4 = sub_243765CC8;
    uint64_t v5 = 0;
  }
  return MEMORY[0x270FA2498](v4, v5, 0);
}

uint64_t sub_243765CC8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 176);
  return v1(v2);
}

uint64_t sub_243765D30()
{
  swift_release();
  return MEMORY[0x270FA2498](sub_243765D98, 0, 0);
}

uint64_t sub_243765D98()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_243765DFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_243765E20, 0, 0);
}

uint64_t sub_243765E20()
{
  uint64_t v5 = (uint64_t (*)(const char *, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_268D9B790
                                                                                + dword_268D9B790);
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[5] = v1;
  void *v1 = v0;
  v1[1] = sub_243765EF0;
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  return v5("bankConnect/passesMatcher", 25, 2, v2, v3);
}

uint64_t sub_243765EF0(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  if (!v1) {
    **(void **)(v4 + 16) = a1;
  }
  uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
  return v6();
}

uint64_t sub_243766040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[5] = a2;
  v3[6] = a3;
  v3[4] = a1;
  return MEMORY[0x270FA2498](sub_243766064, 0, 0);
}

uint64_t sub_243766064()
{
  uint64_t v34 = v0;
  if (qword_268D96B78 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_243957B10();
  __swift_project_value_buffer(v1, (uint64_t)qword_268D9B250);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_243957AF0();
  os_log_type_t v3 = sub_243958B10();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[6];
  if (v4)
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v32 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    if (v5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_243959550();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v9 = MEMORY[0x263F8EE78];
    os_log_type_t v30 = v3;
    uint64_t v29 = v7;
    if (v8)
    {
      uint64_t v33 = MEMORY[0x263F8EE78];
      uint64_t result = sub_2434CCA2C(0, v8 & ~(v8 >> 63), 0);
      if (v8 < 0)
      {
        __break(1u);
        return result;
      }
      id v27 = v6;
      uint64_t v28 = v2;
      uint64_t v11 = 0;
      uint64_t v9 = v33;
      unint64_t v12 = v5 & 0xC000000000000001;
      uint64_t v31 = v0[6] + 32;
      do
      {
        if (v12) {
          id v13 = (id)MEMORY[0x24567E5D0](v11, v0[6]);
        }
        else {
          id v13 = *(id *)(v31 + 8 * v11);
        }
        id v14 = v13;
        id v15 = objc_msgSend(v14, sel_primaryAccountIdentifier);
        uint64_t v16 = sub_2439582D0();
        uint64_t v18 = v17;

        uint64_t v33 = v9;
        unint64_t v20 = *(void *)(v9 + 16);
        unint64_t v19 = *(void *)(v9 + 24);
        if (v20 >= v19 >> 1)
        {
          sub_2434CCA2C(v19 > 1, v20 + 1, 1);
          uint64_t v9 = v33;
        }
        ++v11;
        *(void *)(v9 + 16) = v20 + 1;
        uint64_t v21 = v9 + 16 * v20;
        *(void *)(v21 + 32) = v16;
        *(void *)(v21 + 40) = v18;
      }
      while (v8 != v11);
      uint64_t v6 = v27;
      uint64_t v2 = v28;
    }
    v0[2] = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C7148);
    sub_2433BCCE4();
    uint64_t v22 = sub_243958230();
    unint64_t v24 = v23;
    swift_bridgeObjectRelease();
    v0[3] = sub_2433781FC(v22, v24, &v32);
    sub_2439590C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_243363000, v2, v30, "Fetching institutions for payment passes with fpanIDs: %s.", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245680100](v29, -1, -1);
    MEMORY[0x245680100](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v25 = (void *)swift_task_alloc();
  v0[7] = v25;
  void *v25 = v0;
  v25[1] = sub_243766404;
  uint64_t v26 = v0[6];
  return sub_243766574(v26);
}

uint64_t sub_243766404(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 64) = a1;
    return MEMORY[0x270FA2498](sub_243766550, 0, 0);
  }
}

uint64_t sub_243766550()
{
  **(void **)(v0 + 32) = *(void *)(v0 + 64);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_243766574(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v4 = type metadata accessor for InstitutionWithPass();
  v2[4] = v4;
  v2[5] = *(void *)(v4 - 8);
  v2[6] = swift_task_alloc();
  v2[7] = swift_task_alloc();
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  uint64_t v5 = (void *)swift_task_alloc();
  v2[10] = v5;
  void *v5 = v2;
  v5[1] = sub_243766698;
  return sub_2437678A4(a1);
}

uint64_t sub_243766698(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 88) = a1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return MEMORY[0x270FA2498](sub_2437667FC, 0, 0);
  }
}

uint64_t sub_2437667FC()
{
  uint64_t v58 = v0;
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 96) = v2;
  if (v2)
  {
    unint64_t v3 = *(void *)(v0 + 16);
    if (v3 >> 62) {
      goto LABEL_36;
    }
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
      *(void *)(v0 + 104) = v4;
      *(_DWORD *)(v0 + 176) = *(_DWORD *)(*(void *)(v0 + 40) + 80);
      uint64_t v5 = MEMORY[0x263F8EE78];
      *(void *)(v0 + 112) = 0;
      *(void *)(v0 + 120) = v5;
      if (*(void *)(v1 + 16)) {
        break;
      }
LABEL_35:
      __break(1u);
LABEL_36:
      swift_bridgeObjectRetain();
      uint64_t v4 = sub_243959550();
      swift_bridgeObjectRelease();
      uint64_t v1 = *(void *)(v0 + 88);
    }
    unint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = *(void *)(v0 + 104);
      uint64_t v8 = *(void *)(v0 + 72);
      uint64_t v9 = v1 + ((*(unsigned __int8 *)(v0 + 176) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 176));
      uint64_t v10 = *(void *)(*(void *)(v0 + 40) + 72);
      *(void *)(v0 + 128) = v10;
      sub_24376F7D4(v9 + v10 * v6, v8, (uint64_t (*)(void))type metadata accessor for InstitutionWithPass);
      if (v7) {
        break;
      }
LABEL_19:
      if (qword_268D96B78 != -1) {
        swift_once();
      }
      uint64_t v26 = *(void *)(v0 + 72);
      uint64_t v28 = *(void *)(v0 + 48);
      uint64_t v27 = *(void *)(v0 + 56);
      uint64_t v29 = sub_243957B10();
      __swift_project_value_buffer(v29, (uint64_t)qword_268D9B250);
      sub_24376F7D4(v26, v27, (uint64_t (*)(void))type metadata accessor for InstitutionWithPass);
      sub_24376F7D4(v26, v28, (uint64_t (*)(void))type metadata accessor for InstitutionWithPass);
      os_log_type_t v30 = sub_243957AF0();
      os_log_type_t v31 = sub_243958AF0();
      BOOL v32 = os_log_type_enabled(v30, v31);
      uint64_t v34 = *(void *)(v0 + 48);
      uint64_t v33 = *(void *)(v0 + 56);
      if (v32)
      {
        uint64_t v56 = *(void *)(v0 + 32);
        uint64_t v35 = swift_slowAlloc();
        uint64_t v36 = swift_slowAlloc();
        uint64_t v57 = v36;
        *(_DWORD *)uint64_t v35 = 136315394;
        uint64_t v38 = *(void *)(v33 + 16);
        unint64_t v37 = *(void *)(v33 + 24);
        swift_bridgeObjectRetain();
        *(void *)(v35 + 4) = sub_2433781FC(v38, v37, &v57);
        swift_bridgeObjectRelease();
        sub_24376F83C(v33, (uint64_t (*)(void))type metadata accessor for InstitutionWithPass);
        *(_WORD *)(v35 + 12) = 2080;
        id v39 = (uint64_t *)(v34 + *(int *)(v56 + 20));
        uint64_t v40 = *v39;
        unint64_t v41 = v39[1];
        swift_bridgeObjectRetain();
        *(void *)(v35 + 14) = sub_2433781FC(v40, v41, &v57);
        swift_bridgeObjectRelease();
        sub_24376F83C(v34, (uint64_t (*)(void))type metadata accessor for InstitutionWithPass);
        _os_log_impl(&dword_243363000, v30, v31, "Institution %s was matched with a non-existing pass %s", (uint8_t *)v35, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x245680100](v36, -1, -1);
        MEMORY[0x245680100](v35, -1, -1);
      }
      else
      {
        sub_24376F83C(*(void *)(v0 + 56), (uint64_t (*)(void))type metadata accessor for InstitutionWithPass);
        sub_24376F83C(v34, (uint64_t (*)(void))type metadata accessor for InstitutionWithPass);
      }

      uint64_t v42 = *(void *)(v0 + 96);
      uint64_t v43 = *(void *)(v0 + 112) + 1;
      sub_24376F83C(*(void *)(v0 + 72), (uint64_t (*)(void))type metadata accessor for InstitutionWithPass);
      if (v43 == v42) {
        goto LABEL_31;
      }
      unint64_t v6 = *(void *)(v0 + 112) + 1;
      uint64_t v44 = MEMORY[0x263F8EE78];
      *(void *)(v0 + 112) = v6;
      *(void *)(v0 + 120) = v44;
      uint64_t v1 = *(void *)(v0 + 88);
      if (v6 >= *(void *)(v1 + 16)) {
        goto LABEL_35;
      }
    }
    uint64_t v11 = (uint64_t *)(*(void *)(v0 + 72) + *(int *)(*(void *)(v0 + 32) + 20));
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    swift_bridgeObjectRetain();
    uint64_t v14 = 0;
    while (1)
    {
      uint64_t v15 = *(void *)(v0 + 16);
      if ((v15 & 0xC000000000000001) != 0) {
        id v16 = (id)MEMORY[0x24567E5D0](v14);
      }
      else {
        id v16 = *(id *)(v15 + 8 * v14 + 32);
      }
      uint64_t v17 = v16;
      *(void *)(v0 + 136) = v16;
      uint64_t v18 = v14 + 1;
      if (__OFADD__(v14, 1))
      {
        __break(1u);
        goto LABEL_35;
      }
      id v19 = objc_msgSend(v16, sel_serialNumber);
      uint64_t v20 = sub_2439582D0();
      uint64_t v22 = v21;

      if (v20 == v13 && v22 == v12) {
        break;
      }
      char v24 = sub_243959940();
      swift_bridgeObjectRelease();
      if (v24) {
        goto LABEL_28;
      }
      uint64_t v25 = *(void *)(v0 + 104);

      ++v14;
      if (v18 == v25)
      {
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
    }
    swift_bridgeObjectRelease();
LABEL_28:
    swift_bridgeObjectRelease();
    id v45 = v17;
    id v46 = objc_msgSend(v45, sel_associatedApplicationIdentifiers);
    uint64_t v47 = sub_2439588E0();
    *(void *)(v0 + 144) = v47;

    id v48 = objc_msgSend(v45, sel_associatedStoreIdentifiers);
    sub_2434CA0D8();
    uint64_t v49 = sub_243958650();
    *(void *)(v0 + 152) = v49;

    os_log_type_t v50 = (void *)swift_task_alloc();
    *(void *)(v0 + 160) = v50;
    void *v50 = v0;
    v50[1] = sub_243766DE0;
    uint64_t v51 = *(void *)(v0 + 72);
    uint64_t v52 = *(void *)(v0 + 24);
    v50[39] = v49;
    v50[40] = v52;
    v50[37] = v51;
    v50[38] = v47;
    return MEMORY[0x270FA2498](sub_24376A264, 0, 0);
  }
  else
  {
LABEL_31:
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v53 = *(uint64_t (**)(uint64_t))(v0 + 8);
    uint64_t v54 = MEMORY[0x263F8EE78];
    return v53(v54);
  }
}

uint64_t sub_243766DE0(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 168) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_2437675DC;
  }
  else
  {
    *(unsigned char *)(v4 + 180) = a1 & 1;
    uint64_t v5 = sub_243766F68;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_243766F68()
{
  uint64_t v63 = v0;
  if (*(unsigned char *)(v0 + 180))
  {
    sub_24376F7D4(*(void *)(v0 + 72), *(void *)(v0 + 64), (uint64_t (*)(void))type metadata accessor for InstitutionWithPass);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v2 = *(void *)(v0 + 120);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
LABEL_39:
    }
      unint64_t v2 = sub_243777930(0, *(void *)(v2 + 16) + 1, 1, v2);
    unint64_t v4 = *(void *)(v2 + 16);
    unint64_t v3 = *(void *)(v2 + 24);
    if (v4 >= v3 >> 1) {
      unint64_t v2 = sub_243777930(v3 > 1, v4 + 1, 1, v2);
    }
    uint64_t v5 = *(void *)(v0 + 128);
    unint64_t v6 = *(void **)(v0 + 136);
    uint64_t v7 = *(unsigned __int8 *)(v0 + 176);
    uint64_t v8 = *(void *)(v0 + 64);
    *(void *)(v2 + 16) = v4 + 1;
    sub_24376F89C(v8, v2 + ((v7 + 32) & ~v7) + v5 * v4, (uint64_t (*)(void))type metadata accessor for InstitutionWithPass);
  }
  else
  {
    uint64_t v9 = *(void **)(v0 + 136);

    unint64_t v2 = *(void *)(v0 + 120);
  }
  uint64_t v10 = *(void *)(v0 + 96);
  uint64_t v11 = *(void *)(v0 + 112) + 1;
  sub_24376F83C(*(void *)(v0 + 72), (uint64_t (*)(void))type metadata accessor for InstitutionWithPass);
  if (v11 == v10)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = *(uint64_t (**)(unint64_t))(v0 + 8);
    return v12(v2);
  }
  else
  {
    unint64_t v61 = v2;
    while (1)
    {
      unint64_t v14 = *(void *)(v0 + 112) + 1;
      *(void *)(v0 + 112) = v14;
      *(void *)(v0 + 120) = v2;
      uint64_t v15 = *(void *)(v0 + 88);
      if (v14 >= *(void *)(v15 + 16))
      {
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
      uint64_t v16 = *(void *)(v0 + 104);
      uint64_t v17 = *(void *)(v0 + 72);
      uint64_t v18 = v15 + ((*(unsigned __int8 *)(v0 + 176) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 176));
      uint64_t v19 = *(void *)(*(void *)(v0 + 40) + 72);
      *(void *)(v0 + 128) = v19;
      sub_24376F7D4(v18 + v19 * v14, v17, (uint64_t (*)(void))type metadata accessor for InstitutionWithPass);
      if (v16) {
        break;
      }
LABEL_26:
      if (qword_268D96B78 != -1) {
        swift_once();
      }
      uint64_t v34 = *(void *)(v0 + 72);
      uint64_t v36 = *(void *)(v0 + 48);
      uint64_t v35 = *(void *)(v0 + 56);
      uint64_t v37 = sub_243957B10();
      __swift_project_value_buffer(v37, (uint64_t)qword_268D9B250);
      sub_24376F7D4(v34, v35, (uint64_t (*)(void))type metadata accessor for InstitutionWithPass);
      sub_24376F7D4(v34, v36, (uint64_t (*)(void))type metadata accessor for InstitutionWithPass);
      uint64_t v38 = sub_243957AF0();
      os_log_type_t v39 = sub_243958AF0();
      BOOL v40 = os_log_type_enabled(v38, v39);
      uint64_t v42 = *(void *)(v0 + 48);
      uint64_t v41 = *(void *)(v0 + 56);
      if (v40)
      {
        uint64_t v60 = *(void *)(v0 + 32);
        uint64_t v43 = swift_slowAlloc();
        uint64_t v44 = swift_slowAlloc();
        uint64_t v62 = v44;
        *(_DWORD *)uint64_t v43 = 136315394;
        uint64_t v45 = *(void *)(v41 + 16);
        unint64_t v46 = *(void *)(v41 + 24);
        swift_bridgeObjectRetain();
        *(void *)(v43 + 4) = sub_2433781FC(v45, v46, &v62);
        swift_bridgeObjectRelease();
        sub_24376F83C(v41, (uint64_t (*)(void))type metadata accessor for InstitutionWithPass);
        *(_WORD *)(v43 + 12) = 2080;
        uint64_t v47 = (uint64_t *)(v42 + *(int *)(v60 + 20));
        uint64_t v48 = *v47;
        unint64_t v49 = v47[1];
        swift_bridgeObjectRetain();
        *(void *)(v43 + 14) = sub_2433781FC(v48, v49, &v62);
        swift_bridgeObjectRelease();
        sub_24376F83C(v42, (uint64_t (*)(void))type metadata accessor for InstitutionWithPass);
        _os_log_impl(&dword_243363000, v38, v39, "Institution %s was matched with a non-existing pass %s", (uint8_t *)v43, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x245680100](v44, -1, -1);
        unint64_t v2 = v61;
        MEMORY[0x245680100](v43, -1, -1);
      }
      else
      {
        sub_24376F83C(*(void *)(v0 + 56), (uint64_t (*)(void))type metadata accessor for InstitutionWithPass);
        sub_24376F83C(v42, (uint64_t (*)(void))type metadata accessor for InstitutionWithPass);
      }

      uint64_t v50 = *(void *)(v0 + 96);
      uint64_t v51 = *(void *)(v0 + 112) + 1;
      sub_24376F83C(*(void *)(v0 + 72), (uint64_t (*)(void))type metadata accessor for InstitutionWithPass);
      if (v51 == v50) {
        goto LABEL_8;
      }
    }
    uint64_t v20 = (uint64_t *)(*(void *)(v0 + 72) + *(int *)(*(void *)(v0 + 32) + 20));
    uint64_t v22 = *v20;
    uint64_t v21 = v20[1];
    swift_bridgeObjectRetain();
    uint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *(void *)(v0 + 16);
      if ((v24 & 0xC000000000000001) != 0) {
        id v25 = (id)MEMORY[0x24567E5D0](v23);
      }
      else {
        id v25 = *(id *)(v24 + 8 * v23 + 32);
      }
      uint64_t v26 = v25;
      *(void *)(v0 + 136) = v25;
      unint64_t v2 = v23 + 1;
      if (__OFADD__(v23, 1))
      {
        __break(1u);
        goto LABEL_38;
      }
      id v27 = objc_msgSend(v25, sel_serialNumber);
      uint64_t v28 = sub_2439582D0();
      uint64_t v30 = v29;

      if (v28 == v22 && v30 == v21) {
        break;
      }
      char v32 = sub_243959940();
      swift_bridgeObjectRelease();
      if (v32) {
        goto LABEL_34;
      }
      uint64_t v33 = *(void *)(v0 + 104);

      ++v23;
      if (v2 == v33)
      {
        swift_bridgeObjectRelease();
        unint64_t v2 = v61;
        goto LABEL_26;
      }
    }
    swift_bridgeObjectRelease();
LABEL_34:
    swift_bridgeObjectRelease();
    id v52 = v26;
    id v53 = objc_msgSend(v52, sel_associatedApplicationIdentifiers);
    uint64_t v54 = sub_2439588E0();
    *(void *)(v0 + 144) = v54;

    id v55 = objc_msgSend(v52, sel_associatedStoreIdentifiers);
    sub_2434CA0D8();
    uint64_t v56 = sub_243958650();
    *(void *)(v0 + 152) = v56;

    uint64_t v57 = (void *)swift_task_alloc();
    *(void *)(v0 + 160) = v57;
    void *v57 = v0;
    v57[1] = sub_243766DE0;
    uint64_t v58 = *(void *)(v0 + 72);
    uint64_t v59 = *(void *)(v0 + 24);
    v57[39] = v56;
    v57[40] = v59;
    v57[37] = v58;
    v57[38] = v54;
    return MEMORY[0x270FA2498](sub_24376A264, 0, 0);
  }
}

uint64_t sub_2437675DC()
{
  uint64_t v1 = (void *)v0[17];
  uint64_t v2 = v0[9];

  sub_24376F83C(v2, (uint64_t (*)(void))type metadata accessor for InstitutionWithPass);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t BankConnectPassMatcher.deinit()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
  __swift_destroy_boxed_opaque_existential_0(v0 + 96);
  swift_release();
  swift_release();
  sub_24337C1BC(v0 + 152, &qword_268D9F7A0);
  return v0;
}

uint64_t BankConnectPassMatcher.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
  __swift_destroy_boxed_opaque_existential_0(v0 + 96);
  swift_release();
  swift_release();
  sub_24337C1BC(v0 + 152, &qword_268D9F7A0);

  return swift_deallocClassInstance();
}

uint64_t sub_243767748(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_24337AF78;
  return BankConnectPassMatcher.institution(for:)(a1, a2);
}

uint64_t sub_2437677F4(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_243373554;
  v5[15] = a1;
  v5[16] = v4;
  return MEMORY[0x270FA2498](sub_24376578C, 0, 0);
}

uint64_t sub_2437678A4(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  v2[7] = type metadata accessor for RawBankConnectData.InstitutionsResponseWithExpiration(0);
  v2[8] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for RawBankConnectData.InstitutionForPassResponse(0);
  v2[9] = v3;
  v2[10] = *(void *)(v3 - 8);
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  v2[14] = type metadata accessor for RawBankConnectData.InstitutionsForPassesResponseWithExpiration(0);
  v2[15] = swift_task_alloc();
  v2[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F820);
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for InstitutionWithPass();
  v2[21] = v4;
  v2[22] = *(void *)(v4 - 8);
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268D98A50);
  v2[25] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for RawBankConnectData.Institution(0);
  v2[26] = v5;
  v2[27] = *(void *)(v5 - 8);
  v2[28] = swift_task_alloc();
  v2[29] = swift_task_alloc();
  v2[30] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_243767B50, 0, 0);
}

uint64_t sub_243767B50()
{
  uint64_t v1 = (void *)v0[6];
  swift_retain();
  unint64_t v2 = swift_bridgeObjectRetain();
  v0[31] = sub_24376EF8C(v2, v1);
  v0[32] = 0;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[33] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_243767C1C;
  return sub_24376B1CC();
}

uint64_t sub_243767C1C()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_243767D18, 0, 0);
}

uint64_t sub_243767D18()
{
  unint64_t v2 = v0[31];
  unint64_t v3 = sub_243372E08(MEMORY[0x263F8EE78]);
  uint64_t v4 = v0[31];
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v5 = sub_243959550();
    swift_bridgeObjectRelease();
    v0[34] = v5;
    if (v5)
    {
LABEL_3:
      if (v5 >= 1)
      {
        uint64_t v6 = *(void *)(v0[6] + 144);
        uint64_t v7 = v0[31];
        uint64_t v8 = v0[32];
        v0[37] = v3;
        v0[38] = 0;
        v0[35] = v6;
        v0[36] = v8;
        if ((v7 & 0xC000000000000001) != 0)
        {
          id v9 = (id)MEMORY[0x24567E5D0](0);
          uint64_t v6 = v0[35];
        }
        else
        {
          id v9 = *(id *)(v7 + 32);
        }
        v0[39] = v9;
        id v10 = objc_msgSend(v9, sel_serialNumber);
        uint64_t v11 = sub_2439582D0();
        uint64_t v13 = v12;

        v0[40] = v11;
        v0[41] = v13;
        return MEMORY[0x270FA2498](sub_2437683E8, v6, 0);
      }
      goto LABEL_32;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v0[34] = v5;
    if (v5) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
  v0[45] = v3;
  unint64_t v14 = v0[31];
  uint64_t v15 = swift_bridgeObjectRetain();
  uint64_t v16 = sub_2433F9594(v15);
  unint64_t v1 = sub_24376F270(v14, v16);
  v0[46] = v1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int64_t v17 = *(void *)(v3 + 16);
  uint64_t v4 = MEMORY[0x263F8EE78];
  if (v17)
  {
    unint64_t v51 = v1;
    uint64_t v58 = v0[21];
    uint64_t v59 = v0[22];
    uint64_t v56 = v0[19];
    uint64_t v57 = v0[20];
    uint64_t v54 = v0[17];
    uint64_t v55 = v0[18];
    uint64_t v53 = v0[16];
    uint64_t v66 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_2434CD47C(0, v17, 0);
    uint64_t v18 = sub_2438CB5C8(v3);
    int v20 = v19;
    char v22 = v21 & 1;
    unint64_t v52 = v3 + 64;
    uint64_t v64 = v66;
    unint64_t v61 = v0;
    int64_t v62 = v17 - 1;
    unint64_t v60 = v3;
    while (1)
    {
      uint64_t v23 = v0[24];
      id v25 = (uint64_t *)v0[19];
      uint64_t v24 = (uint64_t *)v0[20];
      uint64_t v28 = v0 + 17;
      uint64_t v26 = (void *)v0[17];
      id v27 = (uint64_t *)v28[1];
      uint64_t v29 = (uint64_t)v24 + *(int *)(v53 + 48);
      int v63 = v20;
      uint64_t v30 = sub_24376EEBC(v29, v18, v20, v22 & 1, v3);
      uint64_t *v24 = v30;
      *(void *)(v57 + 8) = v31;
      uint64_t *v25 = v30;
      *(void *)(v56 + 8) = v31;
      sub_24376F7D4(v29, (uint64_t)v25 + *(int *)(v53 + 48), type metadata accessor for RawBankConnectData.Institution);
      sub_24337BF80((uint64_t)v25, (uint64_t)v27, &qword_268D9F820);
      swift_bridgeObjectRetain();
      sub_24337C1BC((uint64_t)v24, &qword_268D9F820);
      uint64_t v32 = *(int *)(v53 + 48);
      uint64_t v33 = (void *)((char *)v26 + v32);
      uint64_t v34 = (uint64_t)v27 + v32;
      uint64_t v35 = *v27;
      unint64_t v1 = *(void *)(v55 + 8);
      sub_24376F7D4((uint64_t)v27 + v32, (uint64_t)v26 + v32, type metadata accessor for RawBankConnectData.Institution);
      Institution.init(fromRaw:)(v33, v23);
      uint64_t v36 = (uint64_t)v26 + *(int *)(v53 + 48);
      *uint64_t v26 = v35;
      *(void *)(v54 + 8) = v1;
      sub_24376F7D4(v34, v36, type metadata accessor for RawBankConnectData.Institution);
      uint64_t v37 = (void *)(v23 + *(int *)(v58 + 20));
      *uint64_t v37 = v35;
      v37[1] = v1;
      swift_bridgeObjectRetain();
      sub_24376F83C(v36, type metadata accessor for RawBankConnectData.Institution);
      sub_24337C1BC((uint64_t)v27, &qword_268D9F820);
      uint64_t v4 = v64;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2434CD47C(0, *(void *)(v64 + 16) + 1, 1);
        uint64_t v4 = v66;
      }
      unint64_t v39 = *(void *)(v4 + 16);
      unint64_t v38 = *(void *)(v4 + 24);
      unint64_t v3 = v60;
      uint64_t v0 = v61;
      if (v39 >= v38 >> 1)
      {
        sub_2434CD47C(v38 > 1, v39 + 1, 1);
        uint64_t v4 = v66;
      }
      uint64_t v40 = v61[24];
      *(void *)(v4 + 16) = v39 + 1;
      sub_24376F89C(v40, v4+ ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80))+ *(void *)(v59 + 72) * v39, (uint64_t (*)(void))type metadata accessor for InstitutionWithPass);
      if (v18 < 0 || v18 >= -(-1 << *(unsigned char *)(v60 + 32))) {
        break;
      }
      if (((*(void *)(v52 + (((unint64_t)v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
        goto LABEL_30;
      }
      if (*(_DWORD *)(v60 + 36) != v63) {
        goto LABEL_31;
      }
      uint64_t v41 = sub_2439591C0();
      if (!v62)
      {
        swift_bridgeObjectRelease();
        unint64_t v1 = v51;
        goto LABEL_24;
      }
      uint64_t v18 = v41;
      uint64_t v64 = v4;
      char v22 = 0;
      int v20 = *(_DWORD *)(v60 + 36);
      --v62;
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    swift_bridgeObjectRetain();
    uint64_t v48 = sub_243959550();
    swift_bridgeObjectRelease();
    if (!v48) {
      goto LABEL_34;
    }
    goto LABEL_26;
  }
LABEL_24:
  v0[47] = v4;
  if (v1 >> 62) {
    goto LABEL_33;
  }
  if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_34:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v49 = (uint64_t (*)(uint64_t))v0[1];
    return v49(v4);
  }
LABEL_26:
  uint64_t v42 = (void *)v0[6];
  uint64_t v43 = v42[15];
  uint64_t v44 = v42[16];
  __swift_project_boxed_opaque_existential_1(v42 + 12, v43);
  uint64_t v45 = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 8))(v43, v44);
  v0[48] = v45;
  uint64_t v65 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t))((char *)&dword_268DA2C70 + dword_268DA2C70);
  swift_bridgeObjectRetain();
  swift_retain();
  unint64_t v46 = (void *)swift_task_alloc();
  v0[49] = v46;
  void *v46 = v0;
  v46[1] = sub_243769188;
  uint64_t v47 = v0[15];
  return v65(v47, v45, v45, v1);
}

uint64_t sub_2437683E8()
{
  int64_t v17 = v0;
  if (qword_268D96B90 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_243957B10();
  v0[42] = v1;
  __swift_project_value_buffer(v1, (uint64_t)qword_268D9B298);
  swift_bridgeObjectRetain_n();
  unint64_t v2 = sub_243957AF0();
  os_log_type_t v3 = sub_243958AD0();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[41];
  if (v4)
  {
    uint64_t v6 = v0[40];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v16 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v7 + 4) = sub_2433781FC(v6, v5, &v16);
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_243363000, v2, v3, "Retrieving institutions response from cache for pass serial: %s", (uint8_t *)v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245680100](v8, -1, -1);
    MEMORY[0x245680100](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v10 = v0[40];
  uint64_t v9 = v0[41];
  uint64_t v12 = v0[35];
  uint64_t v11 = v0[36];
  uint64_t v13 = (void *)swift_task_alloc();
  void v13[2] = v10;
  v13[3] = v9;
  v13[4] = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F830);
  sub_243958D90();
  v0[43] = v11;
  if (v11)
  {
    swift_task_dealloc();
    unint64_t v14 = sub_243768638;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    v0[44] = 0;
    unint64_t v14 = sub_24376881C;
  }
  return MEMORY[0x270FA2498](v14, 0, 0);
}

uint64_t sub_243768638()
{
  if (qword_268D96B78 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[43];
  __swift_project_value_buffer(v0[42], (uint64_t)qword_268D9B250);
  id v2 = v1;
  id v3 = v1;
  BOOL v4 = sub_243957AF0();
  os_log_type_t v5 = sub_243958AF0();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = (void *)v0[43];
  if (v6)
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138412290;
    id v10 = v7;
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v8 + 4) = v11;
    *uint64_t v9 = v11;

    _os_log_impl(&dword_243363000, v4, v5, "Error obtaining cached response with error: %@.", (uint8_t *)v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CAB0);
    swift_arrayDestroy();
    MEMORY[0x245680100](v9, -1, -1);
    MEMORY[0x245680100](v8, -1, -1);
  }
  else
  {
  }
  swift_bridgeObjectRelease();
  v0[2] = 1;
  v0[44] = 0;
  return MEMORY[0x270FA2498](sub_24376881C, 0, 0);
}

uint64_t sub_24376881C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1 == 1)
  {

LABEL_10:
    uint64_t v8 = *(void **)(v0 + 296);
LABEL_11:
    uint64_t v9 = *(void *)(v0 + 304) + 1;
    if (v9 == *(void *)(v0 + 272))
    {
      swift_bridgeObjectRelease();
      *(void *)(v0 + 360) = v8;
      unint64_t v10 = *(void *)(v0 + 248);
      uint64_t v11 = swift_bridgeObjectRetain();
      uint64_t v12 = sub_2433F9594(v11);
      unint64_t v13 = sub_24376F270(v10, v12);
      *(void *)(v0 + 368) = v13;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int64_t v14 = v8[2];
      uint64_t v15 = MEMORY[0x263F8EE78];
      if (v14)
      {
        unint64_t v83 = v13;
        uint64_t v90 = *(void *)(v0 + 168);
        uint64_t v91 = *(void *)(v0 + 176);
        uint64_t v88 = *(void *)(v0 + 152);
        uint64_t v89 = *(void *)(v0 + 160);
        uint64_t v86 = *(void *)(v0 + 136);
        uint64_t v87 = *(void *)(v0 + 144);
        uint64_t v85 = *(void *)(v0 + 128);
        uint64_t v98 = MEMORY[0x263F8EE78];
        swift_bridgeObjectRetain();
        sub_2434CD47C(0, v14, 0);
        uint64_t v16 = sub_2438CB5C8(v8);
        int v18 = v17;
        char v20 = v19 & 1;
        uint64_t v84 = v8 + 8;
        uint64_t v96 = v98;
        uint64_t v93 = v0;
        int64_t v94 = v14 - 1;
        unint64_t v92 = v8;
        while (1)
        {
          uint64_t v21 = *(void *)(v0 + 192);
          uint64_t v23 = *(uint64_t **)(v0 + 152);
          char v22 = *(uint64_t **)(v0 + 160);
          uint64_t v26 = v0 + 136;
          uint64_t v24 = *(void **)(v0 + 136);
          id v25 = *(uint64_t **)(v26 + 8);
          uint64_t v27 = (uint64_t)v22 + *(int *)(v85 + 48);
          int v95 = v18;
          uint64_t v28 = sub_24376EEBC(v27, v16, v18, v20 & 1, (uint64_t)v8);
          uint64_t *v22 = v28;
          *(void *)(v89 + 8) = v29;
          *uint64_t v23 = v28;
          *(void *)(v88 + 8) = v29;
          sub_24376F7D4(v27, (uint64_t)v23 + *(int *)(v85 + 48), type metadata accessor for RawBankConnectData.Institution);
          sub_24337BF80((uint64_t)v23, (uint64_t)v25, &qword_268D9F820);
          swift_bridgeObjectRetain();
          sub_24337C1BC((uint64_t)v22, &qword_268D9F820);
          uint64_t v30 = *(int *)(v85 + 48);
          uint64_t v31 = (void *)((char *)v24 + v30);
          uint64_t v32 = (uint64_t)v25 + v30;
          uint64_t v33 = *v25;
          unint64_t v13 = *(void *)(v87 + 8);
          sub_24376F7D4((uint64_t)v25 + v30, (uint64_t)v24 + v30, type metadata accessor for RawBankConnectData.Institution);
          Institution.init(fromRaw:)(v31, v21);
          uint64_t v34 = (uint64_t)v24 + *(int *)(v85 + 48);
          void *v24 = v33;
          *(void *)(v86 + 8) = v13;
          sub_24376F7D4(v32, v34, type metadata accessor for RawBankConnectData.Institution);
          uint64_t v35 = (void *)(v21 + *(int *)(v90 + 20));
          void *v35 = v33;
          v35[1] = v13;
          swift_bridgeObjectRetain();
          sub_24376F83C(v34, type metadata accessor for RawBankConnectData.Institution);
          sub_24337C1BC((uint64_t)v25, &qword_268D9F820);
          uint64_t v15 = v96;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_2434CD47C(0, *(void *)(v96 + 16) + 1, 1);
            uint64_t v15 = v98;
          }
          unint64_t v37 = *(void *)(v15 + 16);
          unint64_t v36 = *(void *)(v15 + 24);
          uint64_t v8 = v92;
          uint64_t v0 = v93;
          if (v37 >= v36 >> 1)
          {
            sub_2434CD47C(v36 > 1, v37 + 1, 1);
            uint64_t v15 = v98;
          }
          uint64_t v38 = *(void *)(v93 + 192);
          *(void *)(v15 + 16) = v37 + 1;
          sub_24376F89C(v38, v15+ ((*(unsigned __int8 *)(v91 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80))+ *(void *)(v91 + 72) * v37, (uint64_t (*)(void))type metadata accessor for InstitutionWithPass);
          if (v16 < 0 || v16 >= -(-1 << *((unsigned char *)v92 + 32))) {
            break;
          }
          if (((*(void *)((char *)v84 + (((unint64_t)v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v16) & 1) == 0) {
            goto LABEL_51;
          }
          if (*((_DWORD *)v92 + 9) != v95) {
            goto LABEL_52;
          }
          uint64_t v39 = sub_2439591C0();
          if (!v94)
          {
            swift_bridgeObjectRelease();
            unint64_t v13 = v83;
            goto LABEL_27;
          }
          uint64_t v16 = v39;
          uint64_t v96 = v15;
          char v20 = 0;
          int v18 = *((_DWORD *)v92 + 9);
          --v94;
        }
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        __break(1u);
      }
      else
      {
LABEL_27:
        *(void *)(v0 + 376) = v15;
        if (!(v13 >> 62))
        {
          if (!*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
LABEL_54:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            char v82 = *(uint64_t (**)(uint64_t))(v0 + 8);
            return v82(v15);
          }
LABEL_29:
          uint64_t v43 = *(void **)(v0 + 48);
          uint64_t v45 = v43[15];
          uint64_t v44 = v43[16];
          __swift_project_boxed_opaque_existential_1(v43 + 12, v45);
          uint64_t v46 = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 8))(v45, v44);
          *(void *)(v0 + 384) = v46;
          uint64_t v97 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t))((char *)&dword_268DA2C70
                                                                                    + dword_268DA2C70);
          swift_bridgeObjectRetain();
          swift_retain();
          uint64_t v47 = (void *)swift_task_alloc();
          *(void *)(v0 + 392) = v47;
          void *v47 = v0;
          v47[1] = sub_243769188;
          uint64_t v48 = *(void *)(v0 + 120);
          return v97(v48, v46, v46, v13);
        }
      }
      swift_bridgeObjectRetain();
      uint64_t v81 = sub_243959550();
      swift_bridgeObjectRelease();
      if (!v81) {
        goto LABEL_54;
      }
      goto LABEL_29;
    }
    uint64_t v40 = *(void *)(v0 + 352);
    *(void *)(v0 + 296) = v8;
    *(void *)(v0 + 304) = v9;
    *(void *)(v0 + 288) = v40;
    uint64_t v41 = *(void *)(v0 + 248);
    if ((v41 & 0xC000000000000001) != 0) {
      id v42 = (id)MEMORY[0x24567E5D0]();
    }
    else {
      id v42 = *(id *)(v41 + 8 * v9 + 32);
    }
    *(void *)(v0 + 312) = v42;
    uint64_t v50 = *(void *)(v0 + 280);
    id v51 = objc_msgSend(v42, sel_serialNumber);
    uint64_t v52 = sub_2439582D0();
    uint64_t v54 = v53;

    *(void *)(v0 + 320) = v52;
    *(void *)(v0 + 328) = v54;
    uint64_t v55 = sub_2437683E8;
    uint64_t v56 = v50;
    uint64_t v57 = 0;
    return MEMORY[0x270FA2498](v55, v56, v57);
  }
  if (!v1)
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 216) + 56))(*(void *)(v0 + 200), 1, 1, *(void *)(v0 + 208));
LABEL_9:
    uint64_t v7 = *(void *)(v0 + 200);

    sub_24337C1BC(v7, &qword_268D98A50);
    goto LABEL_10;
  }
  if (*(void *)(v1 + 16))
  {
    uint64_t v2 = *(unsigned __int8 *)(*(void *)(v0 + 216) + 80);
    sub_24376F7D4(v1 + ((v2 + 32) & ~v2), *(void *)(v0 + 200), type metadata accessor for RawBankConnectData.Institution);
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v3 = 1;
  }
  uint64_t v4 = *(void *)(v0 + 208);
  uint64_t v5 = *(void *)(v0 + 216);
  uint64_t v6 = *(void *)(v0 + 200);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v6, v3, 1, v4);
  sub_24376F7C4(v1);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4) == 1) {
    goto LABEL_9;
  }
  uint64_t v58 = *(void **)(v0 + 312);
  uint64_t v59 = *(void *)(v0 + 296);
  uint64_t v61 = *(void *)(v0 + 232);
  uint64_t v60 = *(void *)(v0 + 240);
  sub_24376F89C(*(void *)(v0 + 200), v60, type metadata accessor for RawBankConnectData.Institution);
  id v62 = objc_msgSend(v58, sel_serialNumber);
  uint64_t v63 = sub_2439582D0();
  uint64_t v65 = v64;

  sub_24376F7D4(v60, v61, type metadata accessor for RawBankConnectData.Institution);
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v0 + 32) = v59;
  unint64_t v67 = sub_24341A73C(v63, v65);
  uint64_t v68 = *(void *)(v59 + 16);
  BOOL v69 = (v56 & 1) == 0;
  uint64_t v55 = (uint64_t (*)())(v68 + v69);
  if (__OFADD__(v68, v69))
  {
    __break(1u);
    goto LABEL_58;
  }
  char v70 = v56;
  if (*(void *)(*(void *)(v0 + 296) + 24) >= (uint64_t)v55)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      sub_2434D9C90();
    }
    goto LABEL_45;
  }
  sub_2434D64F0((uint64_t)v55, isUniquelyReferenced_nonNull_native);
  unint64_t v71 = sub_24341A73C(v63, v65);
  if ((v70 & 1) == (v72 & 1))
  {
    unint64_t v67 = v71;
LABEL_45:
    uint64_t v8 = *(void **)(v0 + 32);
    uint64_t v73 = *(void *)(v0 + 232);
    uint64_t v74 = *(void *)(v0 + 216);
    if (v70)
    {
      sub_2435ACA88(v73, v8[7] + *(void *)(v74 + 72) * v67);
LABEL_49:
      unsigned int v79 = *(void **)(v0 + 312);
      uint64_t v80 = *(void *)(v0 + 240);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      sub_24376F83C(v80, type metadata accessor for RawBankConnectData.Institution);
      goto LABEL_11;
    }
    v8[(v67 >> 6) + 8] |= 1 << v67;
    unsigned int v75 = (uint64_t *)(v8[6] + 16 * v67);
    *unsigned int v75 = v63;
    v75[1] = v65;
    uint64_t v55 = (uint64_t (*)())sub_24376F89C(v73, v8[7] + *(void *)(v74 + 72) * v67, type metadata accessor for RawBankConnectData.Institution);
    uint64_t v76 = v8[2];
    BOOL v77 = __OFADD__(v76, 1);
    uint64_t v78 = v76 + 1;
    if (!v77)
    {
      v8[2] = v78;
      swift_bridgeObjectRetain();
      goto LABEL_49;
    }
LABEL_58:
    __break(1u);
    return MEMORY[0x270FA2498](v55, v56, v57);
  }
  return sub_243959A00();
}

uint64_t sub_243769188()
{
  *(void *)(*(void *)v1 + 400) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_243769EE8;
  }
  else
  {
    uint64_t v2 = sub_2437692C8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2437692C8()
{
  uint64_t v1 = *(uint64_t **)(v0 + 120);
  uint64_t v2 = *v1;
  *(void *)(v0 + 408) = *v1;
  uint64_t v3 = *(void *)(v2 + 16);
  *(void *)(v0 + 416) = v3;
  if (v3)
  {
    uint64_t v4 = *(void *)(v0 + 216);
    uint64_t v6 = *(void *)(v0 + 72);
    uint64_t v5 = *(void *)(v0 + 80);
    uint64_t v7 = *(void *)(v0 + 104);
    uint64_t v8 = *(int *)(*(void *)(v0 + 112) + 20);
    *(_DWORD *)(v0 + 456) = v8;
    int v9 = *(_DWORD *)(v5 + 80);
    *(_DWORD *)(v0 + 460) = v9;
    *(void *)(v0 + 424) = *(void *)(v5 + 72);
    *(void *)(v0 + 432) = 0;
    uint64_t v10 = *(void *)(v0 + 56);
    uint64_t v11 = *(uint64_t **)(v0 + 64);
    uint64_t v12 = v2 + ((v9 + 32) & ~(unint64_t)v9);
    uint64_t v13 = (uint64_t)v1 + v8;
    swift_bridgeObjectRetain();
    sub_24376F7D4(v12, v7, type metadata accessor for RawBankConnectData.InstitutionForPassResponse);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268D99FA8);
    unint64_t v14 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_24395EAE0;
    sub_24376F7D4(v7, v15 + v14, type metadata accessor for RawBankConnectData.Institution);
    sub_24337C254(v13, (uint64_t)v11 + *(int *)(v10 + 20), (uint64_t *)&unk_26B0C8E20);
    *uint64_t v11 = v15;
    uint64_t v16 = (uint64_t *)(v7 + *(int *)(v6 + 20));
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    *(void *)(v0 + 440) = v17;
    swift_bridgeObjectRetain();
    char v19 = (void *)swift_task_alloc();
    *(void *)(v0 + 448) = v19;
    *char v19 = v0;
    v19[1] = sub_243769774;
    uint64_t v20 = *(void *)(v0 + 64);
    return sub_24376BF2C(v20, v18, v17);
  }
  else
  {
    uint64_t v22 = MEMORY[0x263F8EE78];
    int64_t v23 = *(void *)(MEMORY[0x263F8EE78] + 16);
    if (v23)
    {
      uint64_t v24 = *(void *)(v0 + 176);
      uint64_t v44 = *(void *)(v0 + 168);
      uint64_t v45 = MEMORY[0x263F8EE78];
      uint64_t v26 = *(void *)(v0 + 72);
      uint64_t v25 = *(void *)(v0 + 80);
      sub_2434CD47C(0, v23, 0);
      uint64_t v27 = v22 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
      uint64_t v28 = *(void *)(v25 + 72);
      uint64_t v29 = v45;
      do
      {
        uint64_t v30 = *(uint64_t **)(v0 + 224);
        uint64_t v31 = *(void *)(v0 + 184);
        uint64_t v32 = *(void *)(v0 + 104);
        sub_24376F7D4(v27, v32, type metadata accessor for RawBankConnectData.InstitutionForPassResponse);
        sub_24376F7D4(v32, (uint64_t)v30, type metadata accessor for RawBankConnectData.Institution);
        Institution.init(fromRaw:)(v30, v31);
        uint64_t v33 = (uint64_t *)(v32 + *(int *)(v26 + 20));
        uint64_t v35 = *v33;
        uint64_t v34 = v33[1];
        unint64_t v36 = (void *)(v31 + *(int *)(v44 + 20));
        *unint64_t v36 = v35;
        v36[1] = v34;
        swift_bridgeObjectRetain();
        sub_24376F83C(v32, type metadata accessor for RawBankConnectData.InstitutionForPassResponse);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2434CD47C(0, *(void *)(v29 + 16) + 1, 1);
          uint64_t v29 = v45;
        }
        unint64_t v38 = *(void *)(v29 + 16);
        unint64_t v37 = *(void *)(v29 + 24);
        if (v38 >= v37 >> 1)
        {
          sub_2434CD47C(v37 > 1, v38 + 1, 1);
          uint64_t v29 = v45;
        }
        uint64_t v39 = *(void *)(v0 + 184);
        *(void *)(v29 + 16) = v38 + 1;
        sub_24376F89C(v39, v29+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(void *)(v24 + 72) * v38, (uint64_t (*)(void))type metadata accessor for InstitutionWithPass);
        v27 += v28;
        --v23;
      }
      while (v23);
    }
    uint64_t v40 = *(void *)(v0 + 376);
    uint64_t v41 = *(void *)(v0 + 120);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRetain();
    uint64_t v42 = swift_bridgeObjectRetain();
    sub_2433A78EC(v42);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24376F83C(v41, type metadata accessor for RawBankConnectData.InstitutionsForPassesResponseWithExpiration);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v43 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v43(v40);
  }
}

uint64_t sub_243769774()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 64);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_24376F83C(v1, type metadata accessor for RawBankConnectData.InstitutionsResponseWithExpiration);
  return MEMORY[0x270FA2498](sub_2437698BC, 0, 0);
}

uint64_t sub_2437698BC()
{
  uint64_t v1 = *(void *)(v0 + 416);
  uint64_t v2 = *(void *)(v0 + 432) + 1;
  sub_24376F83C(*(void *)(v0 + 104), type metadata accessor for RawBankConnectData.InstitutionForPassResponse);
  if (v2 == v1)
  {
    uint64_t v3 = *(uint64_t **)(v0 + 120);
    swift_bridgeObjectRelease();
    uint64_t v4 = *v3;
    uint64_t v5 = *(void *)(*v3 + 16);
    uint64_t v6 = MEMORY[0x263F8EE78];
    uint64_t v57 = MEMORY[0x263F8EE78];
    uint64_t result = swift_bridgeObjectRetain();
    if (v5)
    {
      unint64_t v8 = 0;
      uint64_t v9 = *(void *)(v0 + 208);
      uint64_t v10 = *(void *)(v0 + 80);
      uint64_t v53 = v9;
      uint64_t v55 = v5;
      while (v8 < *(void *)(v4 + 16))
      {
        uint64_t v11 = *(void *)(v0 + 96);
        unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
        uint64_t v13 = *(void *)(v10 + 72);
        sub_24376F7D4(v4 + v12 + v13 * v8, v11, type metadata accessor for RawBankConnectData.InstitutionForPassResponse);
        uint64_t v14 = *(void *)(v0 + 96);
        if (*(unsigned char *)(v11 + *(int *)(v9 + 44)))
        {
          sub_24376F89C(v14, *(void *)(v0 + 88), type metadata accessor for RawBankConnectData.InstitutionForPassResponse);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_2434CD4B8(0, *(void *)(v6 + 16) + 1, 1);
            uint64_t v6 = v57;
          }
          unint64_t v16 = *(void *)(v6 + 16);
          unint64_t v15 = *(void *)(v6 + 24);
          if (v16 >= v15 >> 1)
          {
            sub_2434CD4B8(v15 > 1, v16 + 1, 1);
            uint64_t v6 = v57;
          }
          uint64_t v17 = *(void *)(v0 + 88);
          *(void *)(v6 + 16) = v16 + 1;
          uint64_t result = sub_24376F89C(v17, v6 + v12 + v16 * v13, type metadata accessor for RawBankConnectData.InstitutionForPassResponse);
          uint64_t v9 = v53;
          uint64_t v5 = v55;
        }
        else
        {
          uint64_t result = sub_24376F83C(v14, type metadata accessor for RawBankConnectData.InstitutionForPassResponse);
        }
        if (v5 == ++v8) {
          goto LABEL_16;
        }
      }
      __break(1u);
    }
    else
    {
LABEL_16:
      swift_bridgeObjectRelease();
      int64_t v33 = *(void *)(v6 + 16);
      if (v33)
      {
        uint64_t v34 = *(void *)(v0 + 176);
        uint64_t v35 = *(void *)(v0 + 80);
        uint64_t v54 = *(void *)(v0 + 72);
        uint64_t v56 = *(void *)(v0 + 168);
        uint64_t v58 = MEMORY[0x263F8EE78];
        sub_2434CD47C(0, v33, 0);
        uint64_t v36 = v6 + ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80));
        uint64_t v37 = *(void *)(v35 + 72);
        uint64_t v38 = v58;
        do
        {
          uint64_t v39 = *(uint64_t **)(v0 + 224);
          uint64_t v40 = *(void *)(v0 + 184);
          uint64_t v41 = *(void *)(v0 + 104);
          sub_24376F7D4(v36, v41, type metadata accessor for RawBankConnectData.InstitutionForPassResponse);
          sub_24376F7D4(v41, (uint64_t)v39, type metadata accessor for RawBankConnectData.Institution);
          Institution.init(fromRaw:)(v39, v40);
          uint64_t v42 = (uint64_t *)(v41 + *(int *)(v54 + 20));
          uint64_t v44 = *v42;
          uint64_t v43 = v42[1];
          uint64_t v45 = (void *)(v40 + *(int *)(v56 + 20));
          *uint64_t v45 = v44;
          v45[1] = v43;
          swift_bridgeObjectRetain();
          sub_24376F83C(v41, type metadata accessor for RawBankConnectData.InstitutionForPassResponse);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_2434CD47C(0, *(void *)(v38 + 16) + 1, 1);
            uint64_t v38 = v58;
          }
          unint64_t v47 = *(void *)(v38 + 16);
          unint64_t v46 = *(void *)(v38 + 24);
          if (v47 >= v46 >> 1)
          {
            sub_2434CD47C(v46 > 1, v47 + 1, 1);
            uint64_t v38 = v58;
          }
          uint64_t v48 = *(void *)(v0 + 184);
          *(void *)(v38 + 16) = v47 + 1;
          sub_24376F89C(v48, v38+ ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(void *)(v34 + 72) * v47, (uint64_t (*)(void))type metadata accessor for InstitutionWithPass);
          v36 += v37;
          --v33;
        }
        while (v33);
      }
      uint64_t v49 = *(void *)(v0 + 376);
      uint64_t v50 = *(void *)(v0 + 120);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRetain();
      uint64_t v51 = swift_bridgeObjectRetain();
      sub_2433A78EC(v51);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24376F83C(v50, type metadata accessor for RawBankConnectData.InstitutionsForPassesResponseWithExpiration);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v52 = *(uint64_t (**)(uint64_t))(v0 + 8);
      return v52(v49);
    }
  }
  else
  {
    uint64_t v18 = *(void *)(v0 + 424);
    uint64_t v19 = *(void *)(v0 + 432) + 1;
    *(void *)(v0 + 432) = v19;
    uint64_t v20 = *(void *)(v0 + 216);
    uint64_t v21 = *(void *)(v0 + 104);
    int64_t v23 = *(uint64_t **)(v0 + 64);
    uint64_t v22 = *(void *)(v0 + 72);
    uint64_t v24 = *(void *)(v0 + 56);
    uint64_t v25 = *(void *)(v0 + 120) + *(int *)(v0 + 456);
    sub_24376F7D4(*(void *)(v0 + 408)+ ((*(unsigned __int8 *)(v0 + 460) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 460))+ v18 * v19, v21, type metadata accessor for RawBankConnectData.InstitutionForPassResponse);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268D99FA8);
    unint64_t v26 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_24395EAE0;
    sub_24376F7D4(v21, v27 + v26, type metadata accessor for RawBankConnectData.Institution);
    sub_24337C254(v25, (uint64_t)v23 + *(int *)(v24 + 20), (uint64_t *)&unk_26B0C8E20);
    *int64_t v23 = v27;
    uint64_t v28 = (uint64_t *)(v21 + *(int *)(v22 + 20));
    uint64_t v30 = *v28;
    uint64_t v29 = v28[1];
    *(void *)(v0 + 440) = v29;
    swift_bridgeObjectRetain();
    uint64_t v31 = (void *)swift_task_alloc();
    *(void *)(v0 + 448) = v31;
    void *v31 = v0;
    v31[1] = sub_243769774;
    uint64_t v32 = *(void *)(v0 + 64);
    return sub_24376BF2C(v32, v30, v29);
  }
  return result;
}

uint64_t sub_243769EE8()
{
  swift_release();
  if (qword_268D96B78 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[50];
  uint64_t v2 = sub_243957B10();
  __swift_project_value_buffer(v2, (uint64_t)qword_268D9B250);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_243957AF0();
  os_log_type_t v6 = sub_243958AF0();
  BOOL v7 = os_log_type_enabled(v5, v6);
  unint64_t v8 = (void *)v0[50];
  if (v7)
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138412290;
    id v11 = v8;
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v12;
    sub_2439590C0();
    *uint64_t v10 = v12;

    _os_log_impl(&dword_243363000, v5, v6, "Failed to fetch the institutions via batch endpoint: %@.", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CAB0);
    swift_arrayDestroy();
    MEMORY[0x245680100](v10, -1, -1);
    MEMORY[0x245680100](v9, -1, -1);
  }
  else
  {
  }
  uint64_t v13 = v0[50];

  sub_24346B3AC();
  swift_allocError();
  *(void *)uint64_t v14 = v13;
  *(void *)(v14 + 8) = 0;
  *(unsigned char *)(v14 + 16) = 1;
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_24376A1D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[39] = a3;
  v4[40] = v3;
  v4[37] = a1;
  v4[38] = a2;
  return MEMORY[0x270FA2498](sub_24376A264, 0, 0);
}

uint64_t sub_24376A264()
{
  __int16 v2 = *(_WORD *)(*(void *)(v1 + 296) + 34);
  if ((v2 & 4) != 0)
  {
    uint64_t v4 = 1;
    goto LABEL_50;
  }
  if ((v2 & 2) == 0)
  {
LABEL_3:
    uint64_t v3 = *(void *)(v1 + 296);
    if (*(_WORD *)(v3 + 34))
    {
      uint64_t v4 = *(void *)(v3 + 72);
      if (!v4) {
        goto LABEL_50;
      }
      uint64_t v24 = *(void *)(v4 + 16);
      if (v24)
      {
        uint64_t v25 = (void **)(v1 + 272);
        uint64_t v26 = swift_bridgeObjectRetain() + 40;
        while (1)
        {
          id v27 = objc_allocWithZone(MEMORY[0x263F01858]);
          swift_bridgeObjectRetain();
          uint64_t v28 = (void *)sub_2439582A0();
          uint64_t *v25 = 0;
          id v29 = objc_msgSend(v27, sel_initWithBundleIdentifier_error_, v28, v25);

          uint64_t v30 = *v25;
          if (v29) {
            break;
          }
          v26 += 16;
          id v31 = v30;
          uint64_t v32 = (void *)sub_243956E10();

          swift_willThrow();
          swift_bridgeObjectRelease();
          if (!--v24)
          {
            swift_bridgeObjectRelease();
            uint64_t v4 = 0;
            goto LABEL_50;
          }
        }
        id v42 = v30;

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v4 = 1;
        goto LABEL_50;
      }
    }
    uint64_t v4 = 0;
LABEL_50:
    uint64_t v43 = *(uint64_t (**)(uint64_t))(v1 + 8);
    return v43(v4);
  }
  uint64_t v53 = v1 + 144;
  uint64_t v55 = (long long *)(v1 + 184);
  uint64_t v5 = *(void *)(v1 + 304);
  uint64_t v8 = *(void *)(v5 + 56);
  uint64_t v7 = v5 + 56;
  uint64_t v6 = v8;
  uint64_t v56 = (void *)v1;
  uint64_t v9 = (void **)(v1 + 280);
  uint64_t v10 = -1;
  uint64_t v11 = -1 << *(unsigned char *)(*(void *)(v1 + 304) + 32);
  if (-v11 < 64) {
    uint64_t v10 = ~(-1 << -(char)v11);
  }
  uint64_t v1 = v10 & v6;
  int64_t v12 = (unint64_t)(63 - v11) >> 6;
  swift_bridgeObjectRetain();
  int64_t v13 = 0;
  if (!v1) {
    goto LABEL_10;
  }
LABEL_9:
  for (v1 &= v1 - 1; ; uint64_t v1 = (v15 - 1) & v15)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = (void *)sub_2439582A0();
    swift_bridgeObjectRelease();
    uint64_t v18 = self;
    *uint64_t v9 = 0;
    id v19 = objc_msgSend(v18, sel_bundleRecordWithApplicationIdentifier_error_, v17, v9);

    uint64_t v20 = *v9;
    if (v19)
    {
      uint64_t v1 = (uint64_t)v56;
      id v23 = v20;

      swift_release();
      uint64_t v4 = 1;
      goto LABEL_50;
    }
    id v21 = v20;
    uint64_t v22 = (void *)sub_243956E10();

    uint64_t v0 = (uint64_t)v22;
    swift_willThrow();

    if (v1) {
      goto LABEL_9;
    }
LABEL_10:
    int64_t v14 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
LABEL_59:
      __break(1u);
      goto LABEL_60;
    }
    if (v14 >= v12) {
      goto LABEL_38;
    }
    uint64_t v15 = *(void *)(v7 + 8 * v14);
    ++v13;
    if (!v15)
    {
      int64_t v13 = v14 + 1;
      if (v14 + 1 >= v12) {
        goto LABEL_38;
      }
      uint64_t v15 = *(void *)(v7 + 8 * v13);
      if (!v15)
      {
        int64_t v13 = v14 + 2;
        if (v14 + 2 >= v12) {
          goto LABEL_38;
        }
        uint64_t v15 = *(void *)(v7 + 8 * v13);
        if (!v15)
        {
          int64_t v13 = v14 + 3;
          if (v14 + 3 >= v12) {
            goto LABEL_38;
          }
          uint64_t v15 = *(void *)(v7 + 8 * v13);
          if (!v15)
          {
            int64_t v13 = v14 + 4;
            if (v14 + 4 >= v12) {
              goto LABEL_38;
            }
            uint64_t v15 = *(void *)(v7 + 8 * v13);
            if (!v15) {
              break;
            }
          }
        }
      }
    }
LABEL_27:
    ;
  }
  int64_t v16 = v14 + 5;
  if (v16 < v12)
  {
    uint64_t v15 = *(void *)(v7 + 8 * v16);
    if (!v15)
    {
      while (1)
      {
        int64_t v13 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          goto LABEL_59;
        }
        if (v13 >= v12) {
          goto LABEL_38;
        }
        uint64_t v15 = *(void *)(v7 + 8 * v13);
        ++v16;
        if (v15) {
          goto LABEL_27;
        }
      }
    }
    int64_t v13 = v16;
    goto LABEL_27;
  }
LABEL_38:
  uint64_t v1 = (uint64_t)v56;
  uint64_t v33 = v56[40];
  swift_release();
  sub_24337C254(v33 + 152, (uint64_t)v55, &qword_268D9F7A0);
  if (!v56[26])
  {
    sub_24337C1BC((uint64_t)v55, &qword_268D9F7A0);
    if (qword_268D96B78 != -1) {
      swift_once();
    }
    uint64_t v38 = sub_243957B10();
    __swift_project_value_buffer(v38, (uint64_t)qword_268D9B250);
    uint64_t v39 = sub_243957AF0();
    os_log_type_t v40 = sub_243958B10();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v41 = 0;
      _os_log_impl(&dword_243363000, v39, v40, "Unable to validate associatedStoreIdentifiers, softwareLibrary unavailable on this platform.", v41, 2u);
      MEMORY[0x245680100](v41, -1, -1);
    }

    goto LABEL_3;
  }
  unint64_t v34 = v56[39];
  uint64_t v0 = v53;
  sub_2433A857C(v55, v53);
  if (!(v34 >> 62))
  {
    uint64_t v35 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    goto LABEL_41;
  }
LABEL_60:
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_243959550();
LABEL_41:
  *(void *)(v1 + 328) = v35;
  uint64_t v36 = *(void *)(v1 + 312);
  if (!v35)
  {
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0(v0);
    goto LABEL_3;
  }
  if ((v36 & 0xC000000000000001) != 0) {
    id v37 = (id)MEMORY[0x24567E5D0](0);
  }
  else {
    id v37 = *(id *)(v36 + 32);
  }
  uint64_t v45 = v37;
  *(void *)(v1 + 336) = v37;
  *(void *)(v1 + 344) = 1;
  sub_24338E428(v0, v1 + 24);
  *(void *)(v1 + 16) = v45;
  id v46 = v45;
  uint64_t v47 = *(void *)(v1 + 48);
  uint64_t v48 = *(void *)(v1 + 56);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 24), v47);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C9900);
  uint64_t v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = xmmword_243960A20;
  uint64_t v50 = *(void **)(v1 + 16);
  *(void *)(v49 + 32) = v50;
  uint64_t v57 = v49;
  sub_243958670();
  *(void *)(v1 + 352) = v57;
  uint64_t v54 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 + 8) + **(int **)(v48 + 8));
  id v51 = v50;
  uint64_t v52 = (void *)swift_task_alloc();
  *(void *)(v1 + 360) = v52;
  *uint64_t v52 = v1;
  v52[1] = sub_24376A8F8;
  return v54(v57, v47, v48);
}

uint64_t sub_24376A8F8(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 368) = a1;
  *(void *)(v3 + 376) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_24376AEE0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_24376AA48;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_24376AA48()
{
  uint64_t v1 = *(void *)(v0 + 368);
  if (*(void *)(v1 + 16))
  {
    sub_24338E428(v1 + 32, v0 + 104);
  }
  else
  {
    *(void *)(v0 + 136) = 0;
    *(_OWORD *)(v0 + 104) = 0u;
    *(_OWORD *)(v0 + 120) = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*(void *)(v0 + 128))
  {
    sub_24337C1BC(v0 + 104, &qword_268D9F818);
LABEL_11:
    sub_24376F750(v0 + 16);

    goto LABEL_12;
  }
  sub_2433A857C((long long *)(v0 + 104), v0 + 224);
  uint64_t v2 = *(void *)(v0 + 248);
  uint64_t v3 = *(void *)(v0 + 256);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 224), v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();
  sub_24338E428(v0 + 224, v0 + 64);
  if (!v5)
  {
    __swift_destroy_boxed_opaque_existential_0(v0 + 64);
    __swift_destroy_boxed_opaque_existential_0(v0 + 224);
    goto LABEL_11;
  }
  uint64_t v6 = *(void **)(v0 + 336);
  uint64_t v7 = *(void *)(v0 + 88);
  uint64_t v8 = *(void *)(v0 + 96);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 64), v7);
  char v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
  __swift_destroy_boxed_opaque_existential_0(v0 + 64);
  __swift_destroy_boxed_opaque_existential_0(v0 + 224);
  sub_24376F750(v0 + 16);

  if ((v9 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0(v0 + 144);
    goto LABEL_8;
  }
LABEL_12:
  uint64_t v11 = *(void *)(v0 + 344);
  uint64_t v12 = *(void *)(v0 + 312);
  if (v11 == *(void *)(v0 + 328))
  {
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0(v0 + 144);
    uint64_t v13 = *(void *)(v0 + 296);
    if ((*(_WORD *)(v13 + 34) & 1) == 0) {
      goto LABEL_14;
    }
    uint64_t v10 = *(void *)(v13 + 72);
    if (!v10) {
      goto LABEL_23;
    }
    uint64_t v15 = *(void *)(v10 + 16);
    if (!v15)
    {
LABEL_14:
      uint64_t v10 = 0;
      goto LABEL_23;
    }
    int64_t v16 = (void **)(v0 + 272);
    uint64_t v17 = swift_bridgeObjectRetain() + 40;
    while (1)
    {
      id v18 = objc_allocWithZone(MEMORY[0x263F01858]);
      swift_bridgeObjectRetain();
      id v19 = (void *)sub_2439582A0();
      *int64_t v16 = 0;
      id v20 = objc_msgSend(v18, sel_initWithBundleIdentifier_error_, v19, v0 + 272);

      id v21 = *v16;
      if (v20) {
        break;
      }
      v17 += 16;
      id v22 = v21;
      id v23 = (void *)sub_243956E10();

      swift_willThrow();
      swift_bridgeObjectRelease();
      if (!--v15)
      {
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
    }
    id v34 = v21;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_8:
    uint64_t v10 = 1;
LABEL_23:
    uint64_t v24 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v24(v10);
  }
  if ((v12 & 0xC000000000000001) != 0) {
    id v14 = (id)MEMORY[0x24567E5D0](*(void *)(v0 + 344));
  }
  else {
    id v14 = *(id *)(v12 + 8 * v11 + 32);
  }
  uint64_t v26 = v14;
  *(void *)(v0 + 336) = v14;
  *(void *)(v0 + 344) = v11 + 1;
  if (__OFADD__(v11, 1)) {
    __break(1u);
  }
  sub_24338E428(v0 + 144, v0 + 24);
  *(void *)(v0 + 16) = v26;
  id v27 = v26;
  uint64_t v28 = *(void *)(v0 + 48);
  uint64_t v29 = *(void *)(v0 + 56);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 24), v28);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C9900);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_243960A20;
  id v31 = *(void **)(v0 + 16);
  *(void *)(v30 + 32) = v31;
  uint64_t v36 = v30;
  sub_243958670();
  *(void *)(v0 + 352) = v36;
  uint64_t v35 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 + 8) + **(int **)(v29 + 8));
  id v32 = v31;
  uint64_t v33 = (void *)swift_task_alloc();
  *(void *)(v0 + 360) = v33;
  *uint64_t v33 = v0;
  v33[1] = sub_24376A8F8;
  return v35(v36, v28, v29);
}

uint64_t sub_24376AEE0()
{
  swift_bridgeObjectRelease();
  sub_24376F750((uint64_t)(v0 + 2));
  swift_bridgeObjectRelease();
  if (qword_268D96B78 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[47];
  uint64_t v2 = (void *)v0[42];
  uint64_t v3 = sub_243957B10();
  __swift_project_value_buffer(v3, (uint64_t)qword_268D9B250);
  id v4 = v2;
  id v5 = v1;
  id v6 = v4;
  id v7 = v1;
  uint64_t v8 = sub_243957AF0();
  os_log_type_t v9 = sub_243958AF0();
  BOOL v10 = os_log_type_enabled(v8, v9);
  uint64_t v11 = (void *)v0[47];
  uint64_t v12 = (void *)v0[42];
  if (v10)
  {
    uint64_t v13 = swift_slowAlloc();
    id v14 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 138412546;
    v0[36] = v12;
    id v15 = v12;
    sub_2439590C0();
    *id v14 = v12;

    *(_WORD *)(v13 + 12) = 2112;
    id v16 = v11;
    uint64_t v17 = _swift_stdlib_bridgeErrorToNSError();
    v0[33] = v17;
    sub_2439590C0();
    v14[1] = v17;

    _os_log_impl(&dword_243363000, v8, v9, "Failed to determine if %@ was installed with error: %@.", (uint8_t *)v13, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CAB0);
    swift_arrayDestroy();
    MEMORY[0x245680100](v14, -1, -1);
    MEMORY[0x245680100](v13, -1, -1);
  }
  else
  {
  }
  uint64_t v18 = v0[47];
  id v19 = (void *)v0[42];

  sub_24346B3AC();
  swift_allocError();
  *(void *)uint64_t v20 = v18;
  *(void *)(v20 + 8) = 0;
  *(unsigned char *)(v20 + 16) = 1;
  swift_willThrow();

  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 18));
  id v21 = (uint64_t (*)(void))v0[1];
  return v21(0);
}

uint64_t sub_24376B1CC()
{
  v1[3] = v0;
  uint64_t v2 = sub_243957400();
  v1[4] = v2;
  v1[5] = *(void *)(v2 - 8);
  v1[6] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24376B28C, 0, 0);
}

uint64_t sub_24376B28C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 24) + 144);
  *(void *)(v0 + 56) = v1;
  sub_2439573B0();
  return MEMORY[0x270FA2498](sub_24376B300, v1, 0);
}

uint64_t sub_24376B300()
{
  sub_2438FE8E8(v0[6]);
  v0[8] = 0;
  (*(void (**)(void, void))(v0[5] + 8))(v0[6], v0[4]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_24376B3D0()
{
  if (qword_268D96B78 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[8];
  uint64_t v2 = sub_243957B10();
  __swift_project_value_buffer(v2, (uint64_t)qword_268D9B250);
  id v3 = v1;
  id v4 = v1;
  id v5 = sub_243957AF0();
  os_log_type_t v6 = sub_243958AF0();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = (void *)v0[8];
  if (v7)
  {
    os_log_type_t v9 = (uint8_t *)swift_slowAlloc();
    BOOL v10 = (void *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v9 = 138412290;
    id v11 = v8;
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    v0[2] = v12;
    sub_2439590C0();
    *BOOL v10 = v12;

    _os_log_impl(&dword_243363000, v5, v6, "Error removing expired cached responses: %@", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CAB0);
    swift_arrayDestroy();
    MEMORY[0x245680100](v10, -1, -1);
    MEMORY[0x245680100](v9, -1, -1);
  }
  else
  {
  }
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_24376B5DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  return MEMORY[0x270FA2498](sub_24376B600, 0, 0);
}

uint64_t sub_24376B600()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 48) + 144);
  *(void *)(v0 + 56) = v1;
  return MEMORY[0x270FA2498](sub_24376B624, v1, 0);
}

uint64_t sub_24376B624()
{
  sub_2438FE148(v0[4], v0[5]);
  v0[8] = 0;
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_24376B6DC()
{
  if (qword_268D96B78 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 64);
  uint64_t v2 = sub_243957B10();
  __swift_project_value_buffer(v2, (uint64_t)qword_268D9B250);
  id v3 = v1;
  id v4 = v1;
  id v5 = sub_243957AF0();
  os_log_type_t v6 = sub_243958AF0();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = *(void **)(v0 + 64);
  if (v7)
  {
    os_log_type_t v9 = (uint8_t *)swift_slowAlloc();
    BOOL v10 = (void *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v9 = 138412290;
    id v11 = v8;
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v12;
    sub_2439590C0();
    *BOOL v10 = v12;

    _os_log_impl(&dword_243363000, v5, v6, "Error obtaining cached response with error: %@.", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CAB0);
    swift_arrayDestroy();
    MEMORY[0x245680100](v10, -1, -1);
    MEMORY[0x245680100](v9, -1, -1);
  }
  else
  {
  }
  **(void **)(v0 + 24) = 1;
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_24376B8EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[9] = a2;
  v3[10] = a3;
  unsigned char v3[8] = a1;
  return MEMORY[0x270FA2498](sub_24376B910, 0, 0);
}

uint64_t sub_24376B910()
{
  unint64_t v1 = v0[10];
  uint64_t v2 = sub_243763CB8(v1);
  uint64_t v3 = sub_2433FA098((uint64_t)v2);
  swift_bridgeObjectRelease();
  id v4 = sub_243638648(v3);
  uint64_t v36 = v0;
  v0[11] = v4;
  swift_bridgeObjectRelease();
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_243959550();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v6 = MEMORY[0x263F8EE78];
  if (v5)
  {
    uint64_t v44 = MEMORY[0x263F8EE78];
    uint64_t result = sub_2434CD4F4(0, v5 & ~(v5 >> 63), 0);
    if (v5 < 0)
    {
      __break(1u);
      return result;
    }
    id v34 = v4;
    uint64_t v8 = 0;
    uint64_t v6 = v44;
    unint64_t v37 = v1 & 0xC000000000000001;
    uint64_t v35 = v36[10] + 32;
    uint64_t v38 = v5;
    do
    {
      if (v37) {
        id v9 = (id)MEMORY[0x24567E5D0](v8, v36[10]);
      }
      else {
        id v9 = *(id *)(v35 + 8 * v8);
      }
      BOOL v10 = v9;
      id v11 = objc_msgSend(v9, sel_passTypeIdentifier);
      uint64_t v12 = sub_2439582D0();
      uint64_t v42 = v13;
      uint64_t v43 = v12;

      id v14 = objc_msgSend(v10, sel_serialNumber);
      uint64_t v15 = sub_2439582D0();
      uint64_t v40 = v16;
      uint64_t v41 = v15;

      id v17 = objc_msgSend(v10, sel_associatedApplicationIdentifiers);
      uint64_t v18 = sub_2439588E0();

      uint64_t v39 = sub_243763ABC(v18);
      swift_bridgeObjectRelease();
      id v19 = objc_msgSend(v10, sel_associatedStoreIdentifiers);
      sub_2434CA0D8();
      unint64_t v20 = sub_243958650();

      uint64_t v21 = sub_2436A4B98(v20, (uint64_t)(v36 + 7), (SEL *)&selRef_stringValue);
      swift_bridgeObjectRelease();
      id v22 = objc_msgSend(v10, sel_primaryPaymentApplicationPaymentType);
      uint64_t v23 = sub_2439582D0();
      uint64_t v25 = v24;

      id v26 = objc_msgSend(v10, sel_organizationName);
      uint64_t v27 = sub_2439582D0();
      uint64_t v29 = v28;

      unint64_t v31 = *(void *)(v44 + 16);
      unint64_t v30 = *(void *)(v44 + 24);
      if (v31 >= v30 >> 1) {
        sub_2434CD4F4(v30 > 1, v31 + 1, 1);
      }
      ++v8;
      *(void *)(v44 + 16) = v31 + 1;
      id v32 = (void *)(v44 + 80 * v31);
      v32[4] = v43;
      void v32[5] = v42;
      v32[6] = v41;
      v32[7] = v40;
      v32[8] = v39;
      v32[9] = v21;
      v32[10] = v23;
      v32[11] = v25;
      v32[12] = v27;
      v32[13] = v29;
    }
    while (v38 != v8);
    id v4 = v34;
  }
  v36[12] = v6;
  v36[5] = &type metadata for BankConnectWebServiceInstitutionsForPassesRequest;
  v36[6] = &protocol witness table for BankConnectWebServiceInstitutionsForPassesRequest;
  v36[2] = v4;
  v36[3] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v33 = (void *)swift_task_alloc();
  v36[13] = v33;
  *uint64_t v33 = v36;
  v33[1] = sub_24376BCE0;
  return sub_2438D2F24((uint64_t)(v36 + 2), 1u, 0, 1);
}

uint64_t sub_24376BCE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)*v4;
  v5[14] = a1;
  v5[15] = a2;
  v5[16] = a3;
  v5[17] = v3;
  swift_task_dealloc();
  if (v3)
  {
    uint64_t v6 = sub_24376BEB4;
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(v5 + 2));
    uint64_t v6 = sub_24376BE00;
  }
  return MEMORY[0x270FA2498](v6, 0, 0);
}

uint64_t sub_24376BE00()
{
  sub_24358A224(*(void **)(v0 + 128), *(void **)(v0 + 64));
  unint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 112);

  sub_2433807F0(v2, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_24376BEB4()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24376BF2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  v4[9] = type metadata accessor for RawBankConnectData.InstitutionsResponseWithExpiration(0);
  v4[10] = swift_task_alloc();
  v4[11] = swift_task_alloc();
  v4[12] = swift_task_alloc();
  v4[13] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
  v4[14] = swift_task_alloc();
  v4[15] = swift_task_alloc();
  uint64_t v5 = sub_243957400();
  v4[16] = v5;
  v4[17] = *(void *)(v5 - 8);
  v4[18] = swift_task_alloc();
  v4[19] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24376C090, 0, 0);
}

uint64_t sub_24376C090()
{
  uint64_t v25 = v0;
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[9];
  sub_24337C254(v0[5] + *(int *)(v4 + 20), v3, (uint64_t *)&unk_26B0C8E20);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_24337C1BC(v0[15], (uint64_t *)&unk_26B0C8E20);
LABEL_8:
    if (qword_268D96B78 != -1) {
      swift_once();
    }
    uint64_t v11 = v0[12];
    uint64_t v12 = v0[5];
    uint64_t v13 = sub_243957B10();
    __swift_project_value_buffer(v13, (uint64_t)qword_268D9B250);
    sub_24376F7D4(v12, v11, type metadata accessor for RawBankConnectData.InstitutionsResponseWithExpiration);
    id v14 = sub_243957AF0();
    os_log_type_t v15 = sub_243958AE0();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = v0[14];
      uint64_t v17 = v0[12];
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v24 = v19;
      *(_DWORD *)uint64_t v18 = 136315138;
      sub_24337C254(v17 + *(int *)(v4 + 20), v16, (uint64_t *)&unk_26B0C8E20);
      uint64_t v20 = sub_243958370();
      v0[2] = sub_2433781FC(v20, v21, &v24);
      sub_2439590C0();
      swift_bridgeObjectRelease();
      sub_24376F83C(v17, type metadata accessor for RawBankConnectData.InstitutionsResponseWithExpiration);
      _os_log_impl(&dword_243363000, v14, v15, "Response expiration not valid. Expiration: %s.", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245680100](v19, -1, -1);
      MEMORY[0x245680100](v18, -1, -1);
    }
    else
    {
      sub_24376F83C(v0[12], type metadata accessor for RawBankConnectData.InstitutionsResponseWithExpiration);
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v22 = (uint64_t (*)(void))v0[1];
    return v22();
  }
  uint64_t v5 = v0[18];
  uint64_t v6 = v0[16];
  uint64_t v7 = v0[17];
  (*(void (**)(void, void, uint64_t))(v7 + 32))(v0[19], v0[15], v6);
  sub_2439573B0();
  char v8 = sub_243957360();
  id v9 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v0[20] = v9;
  v0[21] = (v7 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v9(v5, v6);
  if ((v8 & 1) == 0)
  {
    v9(v0[19], v0[16]);
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v0[8] + 144);
  v0[22] = v10;
  return MEMORY[0x270FA2498](sub_24376C444, v10, 0);
}

uint64_t sub_24376C444()
{
  sub_2438FDA84(v0[5], v0[6], v0[7]);
  v0[23] = 0;
  return MEMORY[0x270FA2498](sub_24376C4D8, 0, 0);
}

uint64_t sub_24376C4D8()
{
  (*(void (**)(void, void))(v0 + 160))(*(void *)(v0 + 152), *(void *)(v0 + 128));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24376C594()
{
  uint64_t v28 = v0;
  if (qword_268D96B78 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[5];
  uint64_t v2 = (void *)v0[23];
  uint64_t v3 = v0[11];
  uint64_t v4 = sub_243957B10();
  __swift_project_value_buffer(v4, (uint64_t)qword_268D9B250);
  sub_24376F7D4(v1, v3, type metadata accessor for RawBankConnectData.InstitutionsResponseWithExpiration);
  id v5 = v2;
  id v6 = v2;
  uint64_t v7 = sub_243957AF0();
  os_log_type_t v8 = sub_243958AF0();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = (void *)v0[23];
  uint64_t v11 = (void (*)(uint64_t, uint64_t))v0[20];
  uint64_t v12 = v0[19];
  uint64_t v13 = v0[16];
  uint64_t v14 = v0[11];
  if (v9)
  {
    uint64_t v26 = v0[19];
    uint64_t v15 = v0[10];
    uint64_t v25 = (void (*)(uint64_t, uint64_t))v0[20];
    uint64_t v16 = swift_slowAlloc();
    uint64_t v23 = (void *)swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    uint64_t v27 = v24;
    *(_DWORD *)uint64_t v16 = 136315394;
    sub_24376F7D4(v14, v15, type metadata accessor for RawBankConnectData.InstitutionsResponseWithExpiration);
    uint64_t v17 = sub_243958370();
    v0[3] = sub_2433781FC(v17, v18, &v27);
    sub_2439590C0();
    swift_bridgeObjectRelease();
    sub_24376F83C(v14, type metadata accessor for RawBankConnectData.InstitutionsResponseWithExpiration);
    *(_WORD *)(v16 + 12) = 2112;
    id v19 = v10;
    uint64_t v20 = _swift_stdlib_bridgeErrorToNSError();
    v0[4] = v20;
    sub_2439590C0();
    *uint64_t v23 = v20;

    _os_log_impl(&dword_243363000, v7, v8, "Failed to add response: %s to cache for with error: %@.", (uint8_t *)v16, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CAB0);
    swift_arrayDestroy();
    MEMORY[0x245680100](v23, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x245680100](v24, -1, -1);
    MEMORY[0x245680100](v16, -1, -1);

    v25(v26, v13);
  }
  else
  {

    sub_24376F83C(v14, type metadata accessor for RawBankConnectData.InstitutionsResponseWithExpiration);
    v11(v12, v13);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_24376C920(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  v2[6] = *(void *)(type metadata accessor for Institution(0) - 8);
  v2[7] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C7F80);
  v2[8] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for RawBankConnectData.Institution(0);
  v2[9] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[10] = v4;
  v2[11] = *(void *)(v4 + 64);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  type metadata accessor for RawBankConnectData.InstitutionsResponseWithExpiration(0);
  v2[16] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24376CAC4, 0, 0);
}

uint64_t sub_24376CAC4()
{
  id v1 = objc_msgSend(*(id *)(v0 + 32), sel_issuerCountryCode);
  if (!v1)
  {
    if (qword_268D96B78 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_243957B10();
    __swift_project_value_buffer(v18, (uint64_t)qword_268D9B250);
    id v19 = sub_243957AF0();
    os_log_type_t v20 = sub_243958AF0();
    if (os_log_type_enabled(v19, v20))
    {
      unint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v21 = 0;
      _os_log_impl(&dword_243363000, v19, v20, "Pass doesn't have a issuer country code, unable to determine eligibility. Aborting.", v21, 2u);
      MEMORY[0x245680100](v21, -1, -1);
    }

    sub_24346B3AC();
    uint64_t v23 = (void *)swift_allocError();
    *(void *)uint64_t v22 = 0xD000000000000032;
    uint64_t v24 = "Payment pass doesn't have the issuer country code.";
LABEL_14:
    *(void *)(v22 + 8) = (unint64_t)(v24 - 32) | 0x8000000000000000;
    *(unsigned char *)(v22 + 16) = 0;
    swift_willThrow();
    if (qword_268D96B78 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_243957B10();
    __swift_project_value_buffer(v25, (uint64_t)qword_268D9B250);
    id v26 = v23;
    id v27 = v23;
    uint64_t v28 = sub_243957AF0();
    os_log_type_t v29 = sub_243958AF0();
    if (os_log_type_enabled(v28, v29))
    {
      unint64_t v30 = (uint8_t *)swift_slowAlloc();
      unint64_t v31 = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v30 = 138412290;
      id v32 = v23;
      uint64_t v33 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 16) = v33;
      sub_2439590C0();
      void *v31 = v33;

      _os_log_impl(&dword_243363000, v28, v29, "Failed to fetch the institutions: %@.", v30, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CAB0);
      swift_arrayDestroy();
      MEMORY[0x245680100](v31, -1, -1);
      MEMORY[0x245680100](v30, -1, -1);
    }
    else
    {
    }
    sub_24346B3AC();
    swift_allocError();
    *(void *)uint64_t v36 = v23;
    *(void *)(v36 + 8) = 0;
    *(unsigned char *)(v36 + 16) = 1;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v37 = *(uint64_t (**)(void))(v0 + 8);
    return v37();
  }
  uint64_t v2 = v1;
  uint64_t v3 = *(void **)(v0 + 40);
  uint64_t v4 = sub_2439582D0();
  uint64_t v6 = v5;

  *(void *)(v0 + 136) = v4;
  *(void *)(v0 + 144) = v6;
  uint64_t v7 = v3 + 7;
  uint64_t v8 = v3[10];
  uint64_t v9 = v3[11];
  __swift_project_boxed_opaque_existential_1(v7, v8);
  if ((*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8))(v4, v6, v8, v9))
  {
    uint64_t v10 = *(void **)(v0 + 32);
    id v11 = objc_msgSend(v10, sel_associatedApplicationIdentifiers);
    uint64_t v12 = sub_2439588E0();

    uint64_t v13 = sub_243763ABC(v12);
    *(void *)(v0 + 152) = v13;
    swift_bridgeObjectRelease();
    id v14 = objc_msgSend(v10, sel_associatedStoreIdentifiers);
    sub_2434CA0D8();
    unint64_t v15 = sub_243958650();
    *(void *)(v0 + 160) = v15;

    if (*(void *)(v13 + 16))
    {
LABEL_6:
      uint64_t v16 = (void *)swift_task_alloc();
      *(void *)(v0 + 168) = v16;
      *uint64_t v16 = v0;
      v16[1] = sub_24376D198;
      return sub_24376B1CC();
    }
    if (v15 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v38 = sub_243959550();
      swift_bridgeObjectRelease();
      if (v38) {
        goto LABEL_6;
      }
    }
    else if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_268D96B78 != -1) {
      swift_once();
    }
    uint64_t v39 = sub_243957B10();
    __swift_project_value_buffer(v39, (uint64_t)qword_268D9B250);
    uint64_t v40 = sub_243957AF0();
    os_log_type_t v41 = sub_243958AF0();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v42 = 0;
      _os_log_impl(&dword_243363000, v40, v41, "Failed to fetch the institutions. Payment pass doesn't have any associatedApplicationIdentifiers or associatedStoreIdentifiers.", v42, 2u);
      MEMORY[0x245680100](v42, -1, -1);
    }

    sub_24346B3AC();
    uint64_t v23 = (void *)swift_allocError();
    *(void *)uint64_t v22 = 0xD000000000000059;
    uint64_t v24 = "Payment pass doesn't have the associated app identifiers or associated store identifiers.";
    goto LABEL_14;
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v34 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v35 = MEMORY[0x263F8EE78];
  return v34(v35);
}

uint64_t sub_24376D198()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24376D294, 0, 0);
}

uint64_t sub_24376D294()
{
  id v1 = objc_msgSend(*(id *)(v0 + 32), sel_serialNumber);
  uint64_t v2 = sub_2439582D0();
  uint64_t v4 = v3;

  *(void *)(v0 + 176) = v2;
  *(void *)(v0 + 184) = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 192) = v5;
  void *v5 = v0;
  v5[1] = sub_24376D380;
  uint64_t v6 = *(void *)(v0 + 40);
  v5[5] = v4;
  void v5[6] = v6;
  v5[3] = v0 + 24;
  v5[4] = v2;
  return MEMORY[0x270FA2498](sub_24376B600, 0, 0);
}

uint64_t sub_24376D380()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24376D47C, 0, 0);
}

uint64_t sub_24376D47C()
{
  uint64_t v1 = v0[3];
  if (v1 == 1)
  {
    uint64_t v3 = (void *)v0[4];
    uint64_t v2 = (void *)v0[5];
    uint64_t v4 = v2[15];
    uint64_t v5 = v2[16];
    __swift_project_boxed_opaque_existential_1(v2 + 12, v4);
    v0[25] = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
    uint64_t v44 = (char *)&dword_268DA2C78 + dword_268DA2C78;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    id v6 = v3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v7 = (void *)swift_task_alloc();
    v0[26] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_24376DA80;
    __asm { BR              X8; sub_2438CF9F8 }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v1) {
    goto LABEL_27;
  }
  uint64_t v8 = v1;
  uint64_t v9 = MEMORY[0x263F8EE78];
  uint64_t v47 = MEMORY[0x263F8EE78];
  uint64_t v10 = *(void *)(v8 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v43 = v8;
  if (!v10)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    if (*(void *)(v9 + 16))
    {
      uint64_t v23 = v0[13];
      uint64_t v24 = v9;
      uint64_t v25 = v0[8];
      uint64_t v26 = v0[5];
      uint64_t v27 = *(unsigned __int8 *)(v0[10] + 80);
      uint64_t v28 = v24 + ((v27 + 32) & ~v27);
      uint64_t v29 = sub_243958800();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v25, 1, 1, v29);
      sub_24376F7D4(v28, v23, type metadata accessor for RawBankConnectData.Institution);
      uint64_t v30 = (v27 + 40) & ~v27;
      unint64_t v31 = (void *)swift_allocObject();
      v31[2] = 0;
      v31[3] = 0;
      v31[4] = v26;
      sub_24376F89C(v23, (uint64_t)v31 + v30, type metadata accessor for RawBankConnectData.Institution);
      swift_retain();
      sub_24363A9D4(v25, (uint64_t)&unk_268D9F870, (uint64_t)v31);
      swift_release();
      int64_t v32 = *(void *)(v24 + 16);
      if (v32)
      {
        uint64_t v33 = v0[10];
        uint64_t v34 = v0[6];
        uint64_t v48 = MEMORY[0x263F8EE78];
        sub_2434CD3D4(0, v32, 0);
        uint64_t v46 = *(void *)(v33 + 72);
        uint64_t v35 = v48;
        do
        {
          unint64_t v37 = (uint64_t *)v0[12];
          uint64_t v36 = v0[13];
          uint64_t v38 = v0[7];
          sub_24376F7D4(v28, v36, type metadata accessor for RawBankConnectData.Institution);
          sub_24376F7D4(v36, (uint64_t)v37, type metadata accessor for RawBankConnectData.Institution);
          Institution.init(fromRaw:)(v37, v38);
          sub_24376F83C(v36, type metadata accessor for RawBankConnectData.Institution);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_2434CD3D4(0, *(void *)(v35 + 16) + 1, 1);
            uint64_t v35 = v48;
          }
          unint64_t v40 = *(void *)(v35 + 16);
          unint64_t v39 = *(void *)(v35 + 24);
          if (v40 >= v39 >> 1)
          {
            sub_2434CD3D4(v39 > 1, v40 + 1, 1);
            uint64_t v35 = v48;
          }
          uint64_t v41 = v0[7];
          *(void *)(v35 + 16) = v40 + 1;
          sub_24376F89C(v41, v35+ ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(void *)(v34 + 72) * v40, type metadata accessor for Institution);
          v28 += v46;
          --v32;
        }
        while (v32);
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_28;
      }
    }
    swift_release();
LABEL_27:
    swift_bridgeObjectRelease();
    uint64_t v35 = MEMORY[0x263F8EE78];
LABEL_28:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v42 = (uint64_t (*)(uint64_t))v0[1];
    return v42(v35);
  }
  unint64_t v12 = 0;
  uint64_t v13 = v0[9];
  uint64_t v14 = v0[10];
  uint64_t v45 = v10;
  while (v12 < *(void *)(v8 + 16))
  {
    uint64_t v15 = v9;
    uint64_t v16 = v0[15];
    unint64_t v17 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    uint64_t v18 = *(void *)(v14 + 72);
    sub_24376F7D4(v8 + v17 + v18 * v12, v16, type metadata accessor for RawBankConnectData.Institution);
    uint64_t v19 = v0[15];
    if (*(unsigned char *)(v16 + *(int *)(v13 + 44)))
    {
      sub_24376F89C(v19, v0[14], type metadata accessor for RawBankConnectData.Institution);
      uint64_t v9 = v15;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2434CD410(0, *(void *)(v15 + 16) + 1, 1);
        uint64_t v9 = v47;
      }
      unint64_t v21 = *(void *)(v9 + 16);
      unint64_t v20 = *(void *)(v9 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_2434CD410(v20 > 1, v21 + 1, 1);
        uint64_t v9 = v47;
      }
      uint64_t v22 = v0[14];
      *(void *)(v9 + 16) = v21 + 1;
      uint64_t result = sub_24376F89C(v22, v9 + v17 + v21 * v18, type metadata accessor for RawBankConnectData.Institution);
      uint64_t v8 = v43;
      uint64_t v10 = v45;
    }
    else
    {
      uint64_t result = sub_24376F83C(v19, type metadata accessor for RawBankConnectData.Institution);
      uint64_t v9 = v15;
    }
    if (v10 == ++v12) {
      goto LABEL_17;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24376DA80()
{
  uint64_t v2 = (void *)*v1;
  v2[27] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_24376E214, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = (void *)swift_task_alloc();
    v2[28] = v3;
    *uint64_t v3 = v2;
    v3[1] = sub_24376DC20;
    uint64_t v4 = v2[22];
    uint64_t v5 = v2[23];
    uint64_t v6 = v2[16];
    return sub_24376BF2C(v6, v4, v5);
  }
}

uint64_t sub_24376DC20()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_24376DD38, 0, 0);
}

uint64_t sub_24376DD38()
{
  uint64_t v1 = (uint64_t *)v0[16];
  swift_release();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  sub_24376F83C((uint64_t)v1, type metadata accessor for RawBankConnectData.InstitutionsResponseWithExpiration);
  if (!v2) {
    goto LABEL_23;
  }
  uint64_t v3 = MEMORY[0x263F8EE78];
  uint64_t v40 = MEMORY[0x263F8EE78];
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v37 = v2;
  if (!v4)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    if (*(void *)(v3 + 16))
    {
      uint64_t v17 = v0[13];
      uint64_t v18 = v3;
      uint64_t v19 = v0[8];
      uint64_t v20 = v0[5];
      uint64_t v21 = *(unsigned __int8 *)(v0[10] + 80);
      uint64_t v22 = v18 + ((v21 + 32) & ~v21);
      uint64_t v23 = sub_243958800();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v19, 1, 1, v23);
      sub_24376F7D4(v22, v17, type metadata accessor for RawBankConnectData.Institution);
      uint64_t v24 = (v21 + 40) & ~v21;
      uint64_t v25 = (void *)swift_allocObject();
      v25[2] = 0;
      v25[3] = 0;
      v25[4] = v20;
      sub_24376F89C(v17, (uint64_t)v25 + v24, type metadata accessor for RawBankConnectData.Institution);
      swift_retain();
      sub_24363A9D4(v19, (uint64_t)&unk_268D9F870, (uint64_t)v25);
      swift_release();
      int64_t v26 = *(void *)(v18 + 16);
      if (v26)
      {
        uint64_t v27 = v0[10];
        uint64_t v28 = v0[6];
        uint64_t v41 = MEMORY[0x263F8EE78];
        sub_2434CD3D4(0, v26, 0);
        uint64_t v39 = *(void *)(v27 + 72);
        uint64_t v29 = v41;
        do
        {
          unint64_t v31 = (uint64_t *)v0[12];
          uint64_t v30 = v0[13];
          uint64_t v32 = v0[7];
          sub_24376F7D4(v22, v30, type metadata accessor for RawBankConnectData.Institution);
          sub_24376F7D4(v30, (uint64_t)v31, type metadata accessor for RawBankConnectData.Institution);
          Institution.init(fromRaw:)(v31, v32);
          sub_24376F83C(v30, type metadata accessor for RawBankConnectData.Institution);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_2434CD3D4(0, *(void *)(v29 + 16) + 1, 1);
            uint64_t v29 = v41;
          }
          unint64_t v34 = *(void *)(v29 + 16);
          unint64_t v33 = *(void *)(v29 + 24);
          if (v34 >= v33 >> 1)
          {
            sub_2434CD3D4(v33 > 1, v34 + 1, 1);
            uint64_t v29 = v41;
          }
          uint64_t v35 = v0[7];
          *(void *)(v29 + 16) = v34 + 1;
          sub_24376F89C(v35, v29+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(void *)(v28 + 72) * v34, type metadata accessor for Institution);
          v22 += v39;
          --v26;
        }
        while (v26);
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_24;
      }
    }
    swift_release();
LABEL_23:
    swift_bridgeObjectRelease();
    uint64_t v29 = MEMORY[0x263F8EE78];
LABEL_24:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v36 = (uint64_t (*)(uint64_t))v0[1];
    return v36(v29);
  }
  unint64_t v6 = 0;
  uint64_t v7 = v0[9];
  uint64_t v8 = v0[10];
  uint64_t v38 = v4;
  while (v6 < *(void *)(v2 + 16))
  {
    uint64_t v9 = v3;
    uint64_t v10 = v0[15];
    unint64_t v11 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v12 = *(void *)(v8 + 72);
    sub_24376F7D4(v2 + v11 + v12 * v6, v10, type metadata accessor for RawBankConnectData.Institution);
    uint64_t v13 = v0[15];
    if (*(unsigned char *)(v10 + *(int *)(v7 + 44)))
    {
      sub_24376F89C(v13, v0[14], type metadata accessor for RawBankConnectData.Institution);
      uint64_t v3 = v9;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2434CD410(0, *(void *)(v9 + 16) + 1, 1);
        uint64_t v3 = v40;
      }
      unint64_t v15 = *(void *)(v3 + 16);
      unint64_t v14 = *(void *)(v3 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_2434CD410(v14 > 1, v15 + 1, 1);
        uint64_t v3 = v40;
      }
      uint64_t v16 = v0[14];
      *(void *)(v3 + 16) = v15 + 1;
      uint64_t result = sub_24376F89C(v16, v3 + v11 + v15 * v12, type metadata accessor for RawBankConnectData.Institution);
      uint64_t v2 = v37;
      uint64_t v4 = v38;
    }
    else
    {
      uint64_t result = sub_24376F83C(v13, type metadata accessor for RawBankConnectData.Institution);
      uint64_t v3 = v9;
    }
    if (v4 == ++v6) {
      goto LABEL_13;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24376E214()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = (void *)v0[27];
  if (qword_268D96B78 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_243957B10();
  __swift_project_value_buffer(v2, (uint64_t)qword_268D9B250);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_243957AF0();
  os_log_type_t v6 = sub_243958AF0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    id v9 = v1;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[2] = v10;
    sub_2439590C0();
    void *v8 = v10;

    _os_log_impl(&dword_243363000, v5, v6, "Failed to fetch the institutions: %@.", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CAB0);
    swift_arrayDestroy();
    MEMORY[0x245680100](v8, -1, -1);
    MEMORY[0x245680100](v7, -1, -1);
  }
  else
  {
  }
  sub_24346B3AC();
  swift_allocError();
  *(void *)uint64_t v11 = v1;
  *(void *)(v11 + 8) = 0;
  *(unsigned char *)(v11 + 16) = 1;
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_24376E4B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[15] = a8;
  unsigned char v8[16] = v10;
  v8[13] = a6;
  v8[14] = a7;
  v8[11] = a4;
  v8[12] = a5;
  char v8[9] = a2;
  v8[10] = a3;
  v8[8] = a1;
  return MEMORY[0x270FA2498](sub_24376E4F0, 0, 0);
}

uint64_t sub_24376E4F0()
{
  uint64_t v1 = v0[15];
  unint64_t v2 = v0[16];
  id v3 = (void *)v0[12];
  uint64_t v23 = v0[14];
  uint64_t v24 = v0[13];
  uint64_t v4 = v0[10];
  uint64_t v5 = v0[11];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C81B8);
  uint64_t v6 = swift_allocObject();
  v0[17] = v6;
  *(_OWORD *)(v6 + 16) = xmmword_24395EAE0;
  *(void *)(v6 + 32) = v4;
  *(void *)(v6 + 40) = v5;
  swift_bridgeObjectRetain();
  id v7 = objc_msgSend(v3, sel_passTypeIdentifier);
  uint64_t v22 = sub_2439582D0();
  uint64_t v9 = v8;

  v0[18] = v9;
  uint64_t v10 = sub_2436A4B98(v2, (uint64_t)(v0 + 7), (SEL *)&selRef_stringValue);
  v0[19] = v10;
  id v11 = objc_msgSend(v3, sel_primaryPaymentApplicationPaymentType);
  uint64_t v21 = sub_2439582D0();
  uint64_t v13 = v12;

  v0[20] = v13;
  id v14 = objc_msgSend(v3, sel_organizationName);
  uint64_t v15 = sub_2439582D0();
  uint64_t v17 = v16;

  v0[21] = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v0[5] = &type metadata for BankConnectWebServiceInstitutionsRequest;
  v0[6] = &protocol witness table for BankConnectWebServiceInstitutionsRequest;
  uint64_t v18 = (void *)swift_allocObject();
  v0[2] = v18;
  v18[2] = v6;
  v18[3] = v22;
  v18[4] = v9;
  v18[5] = v24;
  v18[6] = v23;
  v18[7] = v1;
  v18[8] = v10;
  v18[9] = v21;
  v18[10] = v13;
  v18[11] = v15;
  v18[12] = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v19 = (void *)swift_task_alloc();
  v0[22] = v19;
  *uint64_t v19 = v0;
  v19[1] = sub_24376E754;
  return sub_2438D2F24((uint64_t)(v0 + 2), 1u, 0, 1);
}

uint64_t sub_24376E754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)*v4;
  v5[23] = a1;
  v5[24] = a2;
  v5[25] = a3;
  v5[26] = v3;
  swift_task_dealloc();
  if (v3)
  {
    uint64_t v6 = sub_24376E970;
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(v5 + 2));
    uint64_t v6 = sub_24376E874;
  }
  return MEMORY[0x270FA2498](v6, 0, 0);
}

uint64_t sub_24376E874()
{
  sub_2435892E4(*(void **)(v0 + 200), *(void **)(v0 + 64));
  unint64_t v1 = *(void *)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 184);

  sub_2433807F0(v2, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_24376E970()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24376EA34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  long long v5[2] = a4;
  v5[3] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
  v5[4] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24376EAC8, 0, 0);
}

uint64_t sub_24376EAC8()
{
  v0[5] = *(void *)(v0[2] + 136);
  unint64_t v1 = (void *)swift_task_alloc();
  v0[6] = v1;
  void *v1 = v0;
  v1[1] = sub_24376EB6C;
  uint64_t v3 = v0[3];
  uint64_t v2 = v0[4];
  return BankConnectInstitutionAssetManager.requestInstitutionLogo(for:)(v2, v3);
}

uint64_t sub_24376EB6C()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24376EC68, 0, 0);
}

uint64_t sub_24376EC68()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = sub_243957010();
  int v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2);
  sub_24337C1BC(v1, &qword_26B0C98A0);
  if (v3 == 1)
  {
    uint64_t v4 = (uint64_t *)v0[3];
    uint64_t v6 = *v4;
    uint64_t v5 = v4[1];
    uint64_t v7 = (void *)swift_task_alloc();
    v0[7] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_24376EDAC;
    return BankConnectInstitutionAssetManager.deleteAsset(forInstitutionID:)(v6, v5);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
}

uint64_t sub_24376EDAC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24376EEBC(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  if (a2 < 0 || 1 << *(unsigned char *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a5 + 8 * ((unint64_t)a2 >> 6) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    uint64_t v6 = result;
    uint64_t v7 = *(void *)(a5 + 56);
    uint64_t v8 = *(void *)(*(void *)(a5 + 48) + 16 * a2);
    uint64_t v9 = type metadata accessor for RawBankConnectData.Institution(0);
    sub_24376F7D4(v7 + *(void *)(*(void *)(v9 - 8) + 72) * a2, v6, type metadata accessor for RawBankConnectData.Institution);
    swift_bridgeObjectRetain();
    return v8;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_24376EF8C(unint64_t a1, void *a2)
{
  unint64_t v2 = a1;
  uint64_t v28 = MEMORY[0x263F8EE78];
  if (a1 >> 62) {
    goto LABEL_24;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      unint64_t v4 = 0;
      uint64_t v26 = v2 & 0xFFFFFFFFFFFFFF8;
      unint64_t v27 = v2 & 0xC000000000000001;
      uint64_t v24 = v3;
      while (v27)
      {
        id v5 = (id)MEMORY[0x24567E5D0](v4, v2);
LABEL_9:
        uint64_t v6 = v5;
        unint64_t v7 = v4 + 1;
        if (__OFADD__(v4, 1)) {
          goto LABEL_23;
        }
        id v8 = objc_msgSend(v5, sel_issuerCountryCode);
        if (v8)
        {
          uint64_t v9 = v8;
          unint64_t v10 = v2;
          uint64_t v11 = sub_2439582D0();
          uint64_t v13 = v12;

          uint64_t v15 = a2[10];
          uint64_t v14 = a2[11];
          __swift_project_boxed_opaque_existential_1(a2 + 7, v15);
          LOBYTE(v9) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 8))(v11, v13, v15, v14);
          swift_bridgeObjectRelease();
          if ((v9 & 1) == 0)
          {

            unint64_t v2 = v10;
            uint64_t v3 = v24;
            goto LABEL_5;
          }
          id v16 = objc_msgSend(v6, sel_associatedApplicationIdentifiers);
          uint64_t v17 = sub_2439588E0();

          uint64_t v18 = sub_243763ABC(v17);
          swift_bridgeObjectRelease();
          id v19 = objc_msgSend(v6, sel_associatedStoreIdentifiers);
          sub_2434CA0D8();
          unint64_t v20 = sub_243958650();

          uint64_t v21 = *(void *)(v18 + 16);
          swift_bridgeObjectRelease();
          if (v21)
          {
            swift_bridgeObjectRelease();
            unint64_t v2 = v10;
            uint64_t v3 = v24;
LABEL_18:
            sub_243959420();
            sub_243959460();
            sub_243959470();
            sub_243959430();
            goto LABEL_5;
          }
          if (v20 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v22 = sub_243959550();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v22 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          unint64_t v2 = v10;
          swift_bridgeObjectRelease();
          uint64_t v3 = v24;
          if (v22) {
            goto LABEL_18;
          }
        }

LABEL_5:
        ++v4;
        if (v7 == v3) {
          return v28;
        }
      }
      if (v4 < *(void *)(v26 + 16)) {
        break;
      }
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      uint64_t v3 = sub_243959550();
      if (!v3) {
        return MEMORY[0x263F8EE78];
      }
    }
    id v5 = *(id *)(v2 + 8 * v4 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x263F8EE78];
}

uint64_t sub_24376F270(unint64_t a1, uint64_t a2)
{
  uint64_t v14 = MEMORY[0x263F8EE78];
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      unint64_t v4 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v5 = (id)MEMORY[0x24567E5D0](v4, a1);
LABEL_9:
        uint64_t v6 = v5;
        unint64_t v7 = v4 + 1;
        if (__OFADD__(v4, 1)) {
          goto LABEL_15;
        }
        id v8 = objc_msgSend(v5, sel_serialNumber);
        uint64_t v9 = sub_2439582D0();
        uint64_t v11 = v10;

        LOBYTE(v8) = sub_2434BD634(v9, v11, a2);
        swift_bridgeObjectRelease();
        if (v8)
        {
        }
        else
        {
          sub_243959420();
          sub_243959460();
          sub_243959470();
          sub_243959430();
        }
        ++v4;
        if (v7 == v3) {
          return v14;
        }
      }
      if (v4 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      uint64_t v3 = sub_243959550();
      if (!v3) {
        return MEMORY[0x263F8EE78];
      }
    }
    id v5 = *(id *)(a1 + 8 * v4 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x263F8EE78];
}

uint64_t sub_24376F3F8()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24376F438(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_2433A9E8C;
  *(_OWORD *)(v4 + 24) = v5;
  *(void *)(v4 + 16) = a1;
  return MEMORY[0x270FA2498](sub_243765E20, 0, 0);
}

uint64_t dispatch thunk of BankConnectPassMatching.institution(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 8) + **(int **)(a4 + 8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_2433A9E8C;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of BankConnectPassMatching.institutions(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 16) + **(int **)(a3 + 16));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_24340BEA8;
  return v9(a1, a2, a3);
}

uint64_t type metadata accessor for BankConnectPassMatcher()
{
  return self;
}

uint64_t method lookup function for BankConnectPassMatcher(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for BankConnectPassMatcher);
}

uint64_t dispatch thunk of BankConnectPassMatcher.__allocating_init(taskQueueProvider:configurationProvider:webClientProvider:assetManager:institutionMatchingCache:softwareLibrary:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_24376F750(uint64_t a1)
{
  return a1;
}

void sub_24376F7A4(uint64_t *a1@<X8>)
{
  sub_2438FE374(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), a1);
}

uint64_t sub_24376F7C4(uint64_t result)
{
  if (result != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24376F7D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24376F83C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24376F89C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24376F904()
{
  uint64_t v1 = type metadata accessor for RawBankConnectData.Institution(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v5 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = v0 + v3 + *(int *)(v1 + 24);
  uint64_t v7 = type metadata accessor for RawBankConnectData.Institution.Icons(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    uint64_t v23 = v4;
    uint64_t v8 = sub_243957010();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (!v10(v6, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v6, v8);
    }
    uint64_t v11 = v6 + *(int *)(v7 + 20);
    unsigned int v12 = v10(v11, 1, v8);
    uint64_t v4 = v23;
    uint64_t v3 = (v2 + 40) & ~v2;
    if (!v12) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v11, v8);
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = v5 + *(int *)(v1 + 52);
  uint64_t v14 = (int *)type metadata accessor for RawBankConnectData.TermsAndConditions();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v14 - 1) + 48))(v13, 1, v14))
  {
    uint64_t v15 = v3;
    swift_bridgeObjectRelease();
    uint64_t v16 = v13 + v14[5];
    uint64_t v17 = sub_243957010();
    uint64_t v18 = *(void *)(v17 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17)) {
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
    }
    uint64_t v19 = v13 + v14[6];
    uint64_t v20 = sub_243957400();
    uint64_t v21 = *(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8);
    v21(v19, v20);
    v21(v13 + v14[7], v20);
    uint64_t v3 = v15;
  }

  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_24376FC80(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for RawBankConnectData.Institution(0) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_24337AF78;
  return sub_24376EA34(a1, v5, v6, v7, v8);
}

uint64_t sub_24376FD7C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 104, 7);
}

uint64_t sub_24376FDE4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v16 = MEMORY[0x263F8EE78];
    sub_2434CCA2C(0, v1, 0);
    uint64_t v2 = v16;
    uint64_t v4 = (uint64_t *)(a1 + 56);
    do
    {
      uint64_t v5 = *(v4 - 3);
      uint64_t v6 = *(v4 - 2);
      uint64_t v7 = *(v4 - 1);
      uint64_t v8 = *v4;
      swift_bridgeObjectRetain();
      uint64_t v9 = MEMORY[0x24567D630](v5, v6, v7, v8);
      uint64_t v11 = v10;
      swift_bridgeObjectRelease();
      unint64_t v13 = *(void *)(v16 + 16);
      unint64_t v12 = *(void *)(v16 + 24);
      if (v13 >= v12 >> 1) {
        sub_2434CCA2C(v12 > 1, v13 + 1, 1);
      }
      *(void *)(v16 + 16) = v13 + 1;
      uint64_t v14 = v16 + 16 * v13;
      *(void *)(v14 + 32) = v9;
      *(void *)(v14 + 40) = v11;
      v4 += 4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void *CNMutablePostalAddress.init(rawAddress:)(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[4];
  uint64_t v4 = a1[6];
  uint64_t v5 = a1[8];
  uint64_t v18 = a1[10];
  uint64_t v19 = a1[12];
  id v6 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  uint64_t v7 = v6;
  if (v1)
  {
    id v8 = v6;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C7148);
    sub_2433BCCE4();
    sub_243958230();
    swift_bridgeObjectRelease();
    uint64_t v9 = (void *)sub_2439582A0();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_setStreet_, v9);

    if (!v2) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  id v16 = v6;
  if (v2)
  {
LABEL_3:
    swift_bridgeObjectRetain();
    uint64_t v10 = (void *)sub_2439582A0();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setCity_, v10);
  }
LABEL_4:
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = (void *)sub_2439582A0();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setSubLocality_, v11);
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    unint64_t v12 = (void *)sub_2439582A0();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setState_, v12);
  }
  if (v5)
  {
    swift_bridgeObjectRetain();
    unint64_t v13 = (void *)sub_2439582A0();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setSubAdministrativeArea_, v13);
  }
  if (v18)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = (void *)sub_2439582A0();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setPostalCode_, v14);
  }
  swift_bridgeObjectRelease();
  if (v19)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v15 = (void *)sub_2439582A0();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setISOCountryCode_, v15);
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t RawAddress.init(_:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_street);
  uint64_t v5 = sub_2439582D0();
  unint64_t v7 = v6;

  swift_bridgeObjectRelease();
  uint64_t v8 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0) {
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v8)
  {
    id v9 = objc_msgSend(a1, sel_street);
    uint64_t v10 = sub_2439582D0();
    unint64_t v12 = v11;

    v82[0] = 10;
    v82[1] = 0xE100000000000000;
    MEMORY[0x270FA5388](v13);
    v74[2] = v82;
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_2437718E4(0x7FFFFFFFFFFFFFFFLL, 1, sub_243771EE4, (uint64_t)v74, v10, v12);
    swift_bridgeObjectRelease();
    uint64_t v15 = sub_24376FDE4(v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = 0;
  }
  uint64_t v81 = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v16 = objc_msgSend(a1, sel_city);
  uint64_t v17 = sub_2439582D0();
  unint64_t v19 = v18;

  swift_bridgeObjectRelease();
  uint64_t v20 = HIBYTE(v19) & 0xF;
  if ((v19 & 0x2000000000000000) == 0) {
    uint64_t v20 = v17 & 0xFFFFFFFFFFFFLL;
  }
  if (v20)
  {
    id v21 = objc_msgSend(a1, sel_city);
    uint64_t v80 = sub_2439582D0();
    uint64_t v23 = v22;
  }
  else
  {
    uint64_t v80 = 0;
    uint64_t v23 = 0;
  }
  uint64_t v79 = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v24 = objc_msgSend(a1, sel_subLocality);
  uint64_t v25 = sub_2439582D0();
  unint64_t v27 = v26;

  swift_bridgeObjectRelease();
  uint64_t v28 = HIBYTE(v27) & 0xF;
  if ((v27 & 0x2000000000000000) == 0) {
    uint64_t v28 = v25 & 0xFFFFFFFFFFFFLL;
  }
  if (v28)
  {
    id v29 = objc_msgSend(a1, sel_subLocality);
    uint64_t v78 = sub_2439582D0();
    uint64_t v31 = v30;
  }
  else
  {
    uint64_t v78 = 0;
    uint64_t v31 = 0;
  }
  uint64_t v77 = v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v32 = objc_msgSend(a1, sel_state);
  uint64_t v33 = sub_2439582D0();
  unint64_t v35 = v34;

  swift_bridgeObjectRelease();
  uint64_t v36 = HIBYTE(v35) & 0xF;
  if ((v35 & 0x2000000000000000) == 0) {
    uint64_t v36 = v33 & 0xFFFFFFFFFFFFLL;
  }
  if (v36)
  {
    id v37 = objc_msgSend(a1, sel_state);
    uint64_t v76 = sub_2439582D0();
    uint64_t v39 = v38;
  }
  else
  {
    uint64_t v76 = 0;
    uint64_t v39 = 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v40 = objc_msgSend(a1, sel_subAdministrativeArea);
  uint64_t v41 = sub_2439582D0();
  unint64_t v43 = v42;

  swift_bridgeObjectRelease();
  uint64_t v44 = HIBYTE(v43) & 0xF;
  if ((v43 & 0x2000000000000000) == 0) {
    uint64_t v44 = v41 & 0xFFFFFFFFFFFFLL;
  }
  if (v44)
  {
    id v45 = objc_msgSend(a1, sel_subAdministrativeArea);
    uint64_t v75 = sub_2439582D0();
    uint64_t v47 = v46;
  }
  else
  {
    uint64_t v75 = 0;
    uint64_t v47 = 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v48 = objc_msgSend(a1, sel_postalCode);
  uint64_t v49 = sub_2439582D0();
  unint64_t v51 = v50;

  swift_bridgeObjectRelease();
  uint64_t v52 = HIBYTE(v51) & 0xF;
  if ((v51 & 0x2000000000000000) == 0) {
    uint64_t v52 = v49 & 0xFFFFFFFFFFFFLL;
  }
  if (v52)
  {
    id v53 = objc_msgSend(a1, sel_postalCode);
    uint64_t v54 = sub_2439582D0();
    uint64_t v56 = v55;
  }
  else
  {
    uint64_t v54 = 0;
    uint64_t v56 = 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v57 = objc_msgSend(a1, sel_ISOCountryCode);
  uint64_t v58 = sub_2439582D0();
  unint64_t v60 = v59;

  swift_bridgeObjectRelease();
  uint64_t v61 = HIBYTE(v60) & 0xF;
  if ((v60 & 0x2000000000000000) == 0) {
    uint64_t v61 = v58 & 0xFFFFFFFFFFFFLL;
  }
  if (v61)
  {
    id v62 = objc_msgSend(a1, sel_ISOCountryCode);
    uint64_t v63 = sub_2439582D0();
    uint64_t v65 = v64;
  }
  else
  {

    uint64_t v63 = 0;
    uint64_t v65 = 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v66 = v77;
  swift_bridgeObjectRelease();
  uint64_t v67 = v79;
  swift_bridgeObjectRelease();
  uint64_t v68 = v81;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v70 = v80;
  *a2 = v68;
  a2[1] = v70;
  uint64_t v71 = v78;
  a2[2] = v67;
  a2[3] = v71;
  uint64_t v72 = v76;
  a2[4] = v66;
  a2[5] = v72;
  uint64_t v73 = v75;
  a2[6] = v39;
  a2[7] = v73;
  a2[8] = v47;
  a2[9] = v54;
  a2[10] = v56;
  a2[11] = v63;
  a2[12] = v65;
  return result;
}

uint64_t RawAddress.addressLines.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RawAddress.addressLines.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t (*RawAddress.addressLines.modify())()
{
  return nullsub_1;
}

uint64_t RawAddress.locality.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawAddress.locality.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*RawAddress.locality.modify())()
{
  return nullsub_1;
}

uint64_t RawAddress.subLocality.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawAddress.subLocality.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*RawAddress.subLocality.modify())()
{
  return nullsub_1;
}

uint64_t RawAddress.administrativeArea.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawAddress.administrativeArea.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

uint64_t (*RawAddress.administrativeArea.modify())()
{
  return nullsub_1;
}

uint64_t RawAddress.subAdministrativeArea.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawAddress.subAdministrativeArea.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a2;
  return result;
}

uint64_t (*RawAddress.subAdministrativeArea.modify())()
{
  return nullsub_1;
}

uint64_t RawAddress.postalCode.getter()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawAddress.postalCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = a2;
  return result;
}

uint64_t (*RawAddress.postalCode.modify())()
{
  return nullsub_1;
}

uint64_t RawAddress.countryCode.getter()
{
  uint64_t v1 = *(void *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawAddress.countryCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 88) = a1;
  *(void *)(v2 + 96) = a2;
  return result;
}

uint64_t (*RawAddress.countryCode.modify())()
{
  return nullsub_1;
}

__n128 RawAddress.init(addressLines:locality:subLocality:administrativeArea:subAdministrativeArea:postalCode:countryCode:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, __n128 a11, uint64_t a12)
{
  __n128 result = a11;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(_OWORD *)(a9 + 64) = a10;
  *(__n128 *)(a9 + 80) = a11;
  *(void *)(a9 + 96) = a12;
  return result;
}

uint64_t RawAddress.hash(into:)()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[8];
  uint64_t v12 = v0[10];
  uint64_t v6 = v0[12];
  if (*v0)
  {
    sub_243959AF0();
    sub_243959AE0();
    uint64_t v7 = *(void *)(v1 + 16);
    if (v7)
    {
      uint64_t v11 = v6;
      swift_bridgeObjectRetain();
      uint64_t v8 = v1 + 40;
      do
      {
        swift_bridgeObjectRetain();
        sub_2439581F0();
        swift_bridgeObjectRelease();
        v8 += 16;
        --v7;
      }
      while (v7);
      swift_bridgeObjectRelease();
      uint64_t v6 = v11;
    }
    if (v2)
    {
LABEL_7:
      sub_243959AF0();
      swift_bridgeObjectRetain();
      sub_2439581F0();
      swift_bridgeObjectRelease();
      uint64_t v9 = v12;
      if (v3) {
        goto LABEL_8;
      }
      goto LABEL_17;
    }
  }
  else
  {
    sub_243959AF0();
    if (v2) {
      goto LABEL_7;
    }
  }
  sub_243959AF0();
  uint64_t v9 = v12;
  if (v3)
  {
LABEL_8:
    sub_243959AF0();
    swift_bridgeObjectRetain();
    sub_2439581F0();
    swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_9;
    }
    goto LABEL_18;
  }
LABEL_17:
  sub_243959AF0();
  if (v4)
  {
LABEL_9:
    sub_243959AF0();
    swift_bridgeObjectRetain();
    sub_2439581F0();
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_10;
    }
    goto LABEL_19;
  }
LABEL_18:
  sub_243959AF0();
  if (v5)
  {
LABEL_10:
    sub_243959AF0();
    swift_bridgeObjectRetain();
    sub_2439581F0();
    swift_bridgeObjectRelease();
    if (v9) {
      goto LABEL_11;
    }
LABEL_20:
    sub_243959AF0();
    if (v6) {
      goto LABEL_12;
    }
    return sub_243959AF0();
  }
LABEL_19:
  sub_243959AF0();
  if (!v9) {
    goto LABEL_20;
  }
LABEL_11:
  sub_243959AF0();
  swift_bridgeObjectRetain();
  sub_2439581F0();
  swift_bridgeObjectRelease();
  if (!v6) {
    return sub_243959AF0();
  }
LABEL_12:
  sub_243959AF0();
  swift_bridgeObjectRetain();
  sub_2439581F0();

  return swift_bridgeObjectRelease();
}

unint64_t sub_243770D4C(char a1)
{
  unint64_t result = 0x4C73736572646461;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7974696C61636F6CLL;
      break;
    case 2:
      unint64_t result = 0x6C61636F4C627573;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD000000000000015;
      break;
    case 5:
      unint64_t result = 0x6F436C6174736F70;
      break;
    case 6:
      unint64_t result = 0x437972746E756F63;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_243770E5C()
{
  return sub_243770D4C(*v0);
}

uint64_t sub_243770E64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2437725B8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_243770E8C(uint64_t a1)
{
  unint64_t v2 = sub_243772228();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_243770EC8(uint64_t a1)
{
  unint64_t v2 = sub_243772228();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t RawAddress.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F880);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  v16[11] = v1[2];
  v16[12] = v8;
  uint64_t v10 = v1[3];
  v16[9] = v1[4];
  v16[10] = v10;
  uint64_t v11 = v1[5];
  v16[7] = v1[6];
  v16[8] = v11;
  uint64_t v12 = v1[8];
  v16[5] = v1[7];
  v16[6] = v12;
  uint64_t v13 = v1[9];
  v16[3] = v1[10];
  v16[4] = v13;
  uint64_t v14 = v1[12];
  v16[1] = v1[11];
  id v16[2] = v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_243772228();
  sub_243959BD0();
  uint64_t v24 = v9;
  char v23 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C7148);
  sub_243388214(&qword_268D97378);
  sub_2439597D0();
  if (!v2)
  {
    char v22 = 1;
    sub_243959790();
    char v21 = 2;
    sub_243959790();
    char v20 = 3;
    sub_243959790();
    char v19 = 4;
    sub_243959790();
    char v18 = 5;
    sub_243959790();
    char v17 = 6;
    sub_243959790();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t RawAddress.hashValue.getter()
{
  return sub_243959B40();
}

uint64_t RawAddress.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F890);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_243772228();
  sub_243959BA0();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C7148);
    char v52 = 0;
    sub_243388214((unint64_t *)&qword_268D973B8);
    sub_243959660();
    id v45 = a2;
    uint64_t v10 = v53;
    char v51 = 1;
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_243959620();
    uint64_t v44 = v10;
    char v50 = 2;
    uint64_t v13 = v12;
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_243959620();
    uint64_t v16 = v15;
    uint64_t v42 = v14;
    uint64_t v43 = v13;
    char v49 = 3;
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_243959620();
    uint64_t v41 = v16;
    char v48 = 4;
    uint64_t v18 = v17;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_243959620();
    uint64_t v21 = v20;
    uint64_t v37 = v19;
    uint64_t v38 = v11;
    uint64_t v39 = v18;
    char v47 = 5;
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_243959620();
    uint64_t v24 = v23;
    char v46 = 6;
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_243959620();
    uint64_t v27 = v26;
    uint64_t v28 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v36 = v25;
    v28(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    id v29 = v45;
    uint64_t v30 = v38;
    *id v45 = v44;
    v29[1] = v30;
    uint64_t v31 = v42;
    v29[2] = v43;
    v29[3] = v31;
    uint64_t v32 = v40;
    v29[4] = v41;
    v29[5] = v32;
    uint64_t v33 = v37;
    v29[6] = v39;
    v29[7] = v33;
    v29[8] = v21;
    v29[9] = v22;
    uint64_t v34 = v36;
    v29[10] = v24;
    v29[11] = v34;
    v29[12] = v27;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2437717E0()
{
  return sub_243959B40();
}

uint64_t sub_24377184C()
{
  return sub_243959B40();
}

uint64_t sub_2437718B4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return RawAddress.init(from:)(a1, a2);
}

uint64_t sub_2437718CC(void *a1)
{
  return RawAddress.encode(to:)(a1);
}

uint64_t sub_2437718E4(uint64_t a1, char a2, uint64_t (*a3)(void *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  v50[3] = a4;
  if (a1 < 0) {
    goto LABEL_42;
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = MEMORY[0x263F8EE78];
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = 15;
  uint64_t v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (uint64_t v12 = HIBYTE(a6) & 0xF) : (uint64_t v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0) {
      uint64_t v11 = a5 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0) {
      uint64_t v30 = 11;
    }
    sub_243771D88(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_39:
    swift_release();
    return (uint64_t)v13;
  }
  uint64_t v42 = a1;
  uint64_t v43 = v10;
  unint64_t v48 = 4 * v12;
  uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  unint64_t v14 = 15;
  unint64_t v15 = 15;
  unint64_t v16 = 15;
  while (1)
  {
    v50[0] = sub_243958500();
    v50[1] = v17;
    char v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    char v19 = v18;
    swift_bridgeObjectRelease();
    if (v19) {
      break;
    }
    unint64_t v14 = sub_243958410();
LABEL_9:
    if (v48 == v14 >> 14) {
      goto LABEL_29;
    }
  }
  if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    unint64_t v14 = sub_243958410();
    *(void *)(v47 + 16) = v14;
    unint64_t v15 = v14;
    unint64_t v16 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v15 >> 14) {
    goto LABEL_41;
  }
  uint64_t v20 = sub_243958520();
  uint64_t v44 = v21;
  uint64_t v45 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v13 = sub_243776C78(0, v13[2] + 1, 1, v13);
  }
  unint64_t v27 = v13[2];
  unint64_t v26 = v13[3];
  if (v27 >= v26 >> 1) {
    uint64_t v13 = sub_243776C78((void *)(v26 > 1), v27 + 1, 1, v13);
  }
  void v13[2] = v27 + 1;
  uint64_t v28 = &v13[4 * v27];
  v28[4] = v45;
  v28[5] = v23;
  v28[6] = v25;
  v28[7] = v44;
  *(void *)(v43 + 16) = v13;
  uint64_t v29 = sub_243958410();
  unint64_t v14 = v29;
  *(void *)(v47 + 16) = v29;
  if (v13[2] != v42)
  {
    unint64_t v15 = v29;
    unint64_t v16 = v29;
    goto LABEL_9;
  }
  unint64_t v16 = v29;
  unint64_t v15 = v29;
LABEL_29:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_39;
  }
  if (v48 >= v16 >> 14)
  {
    uint64_t v31 = sub_243958520();
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v13 = sub_243776C78(0, v13[2] + 1, 1, v13);
    }
    unint64_t v39 = v13[2];
    unint64_t v38 = v13[3];
    if (v39 >= v38 >> 1) {
      uint64_t v13 = sub_243776C78((void *)(v38 > 1), v39 + 1, 1, v13);
    }
    void v13[2] = v39 + 1;
    uint64_t v40 = &v13[4 * v39];
    v40[4] = v31;
    v40[5] = v33;
    v40[6] = v35;
    v40[7] = v37;
    *(void *)(v43 + 16) = v13;
    goto LABEL_38;
  }
LABEL_41:
  sub_243959530();
  __break(1u);
LABEL_42:
  uint64_t result = sub_243959530();
  __break(1u);
  return result;
}

uint64_t sub_243771D88(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4 = *(void *)(a2 + 16) >> 14;
  int v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1) {
    return v5 ^ 1u;
  }
  if (a1 >> 14 >= v4)
  {
    uint64_t v7 = sub_243958520();
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    unint64_t v14 = *(void **)(a4 + 16);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v14 = sub_243776C78(0, v14[2] + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    unint64_t v17 = v14[2];
    unint64_t v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      unint64_t v14 = sub_243776C78((void *)(v16 > 1), v17 + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    void v14[2] = v17 + 1;
    char v18 = &v14[4 * v17];
    v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  uint64_t result = sub_243959530();
  __break(1u);
  return result;
}

uint64_t sub_243771EE4(void *a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1]) {
    return 1;
  }
  else {
    return sub_243959940() & 1;
  }
}

BOOL _s10FinanceKit10RawAddressV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void **)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v12 = *(void *)(a1 + 56);
  uint64_t v11 = *(void *)(a1 + 64);
  uint64_t v13 = *(void *)(a1 + 72);
  uint64_t v14 = *(void *)(a1 + 80);
  uint64_t v71 = *(void *)(a1 + 88);
  uint64_t v72 = *(void *)(a1 + 96);
  unint64_t v15 = *(void **)a2;
  uint64_t v17 = *(void *)(a2 + 8);
  uint64_t v16 = *(void *)(a2 + 16);
  uint64_t v19 = *(void *)(a2 + 24);
  uint64_t v18 = *(void *)(a2 + 32);
  uint64_t v20 = *(void *)(a2 + 40);
  uint64_t v21 = *(void *)(a2 + 48);
  uint64_t v22 = *(void *)(a2 + 56);
  uint64_t v23 = *(void *)(a2 + 64);
  uint64_t v25 = *(void *)(a2 + 72);
  uint64_t v24 = *(void *)(a2 + 80);
  uint64_t v27 = *(void *)(a2 + 88);
  uint64_t v26 = *(void *)(a2 + 96);
  uint64_t v70 = v27;
  if (v4)
  {
    if (!v15) {
      return 0;
    }
    uint64_t v51 = v26;
    uint64_t v52 = v16;
    uint64_t v62 = v22;
    uint64_t v64 = v10;
    uint64_t v58 = v11;
    uint64_t v60 = v23;
    uint64_t v55 = v25;
    uint64_t v56 = v12;
    uint64_t v53 = v14;
    uint64_t v54 = v24;
    uint64_t v28 = v13;
    uint64_t v67 = v21;
    uint64_t v29 = v20;
    uint64_t v30 = v7;
    uint64_t v31 = v8;
    uint64_t v32 = v18;
    uint64_t v33 = v19;
    uint64_t v34 = v5;
    uint64_t v35 = v6;
    uint64_t v36 = v17;
    char v37 = sub_243474994(v4, v15);
    uint64_t v17 = v36;
    uint64_t v6 = v35;
    uint64_t v5 = v34;
    uint64_t v19 = v33;
    uint64_t v18 = v32;
    uint64_t v8 = v31;
    uint64_t v7 = v30;
    uint64_t v20 = v29;
    uint64_t v10 = v64;
    uint64_t v21 = v67;
    uint64_t v13 = v28;
    uint64_t v16 = v52;
    uint64_t v14 = v53;
    uint64_t v24 = v54;
    uint64_t v25 = v55;
    uint64_t v12 = v56;
    uint64_t v11 = v58;
    uint64_t v23 = v60;
    uint64_t v22 = v62;
    if ((v37 & 1) == 0) {
      return 0;
    }
  }
  else
  {
    uint64_t v51 = v26;
    if (v15) {
      return 0;
    }
  }
  if (!v5)
  {
    if (v16) {
      return 0;
    }
LABEL_13:
    if (v7)
    {
      if (!v18) {
        return 0;
      }
      if (v8 != v19 || v7 != v18)
      {
        uint64_t v66 = v20;
        uint64_t v69 = v21;
        uint64_t v41 = v13;
        char v42 = sub_243959940();
        uint64_t v20 = v66;
        uint64_t v21 = v69;
        uint64_t v13 = v41;
        char v43 = v42;
        BOOL result = 0;
        if ((v43 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v18)
    {
      return 0;
    }
    if (v9)
    {
      if (!v21) {
        return 0;
      }
      if (v10 != v20 || v9 != v21)
      {
        uint64_t v44 = v13;
        char v45 = sub_243959940();
        uint64_t v13 = v44;
        char v46 = v45;
        BOOL result = 0;
        if ((v46 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v21)
    {
      return 0;
    }
    if (v11)
    {
      if (!v23) {
        return 0;
      }
      if (v12 != v22 || v11 != v23)
      {
        uint64_t v47 = v13;
        char v48 = sub_243959940();
        uint64_t v13 = v47;
        char v49 = v48;
        BOOL result = 0;
        if ((v49 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v23)
    {
      return 0;
    }
    if (v14)
    {
      if (!v24) {
        return 0;
      }
      if (v13 != v25 || v14 != v24)
      {
        char v50 = sub_243959940();
        BOOL result = 0;
        if ((v50 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v24)
    {
      return 0;
    }
    if (v72) {
      return v51 && (v71 == v70 && v72 == v51 || (sub_243959940() & 1) != 0);
    }
    return !v51;
  }
  if (!v16) {
    return 0;
  }
  if (v6 == v17 && v5 == v16) {
    goto LABEL_13;
  }
  uint64_t v65 = v20;
  uint64_t v68 = v21;
  uint64_t v61 = v13;
  uint64_t v63 = v7;
  uint64_t v57 = v19;
  uint64_t v59 = v18;
  char v38 = sub_243959940();
  uint64_t v19 = v57;
  uint64_t v18 = v59;
  uint64_t v7 = v63;
  uint64_t v20 = v65;
  uint64_t v21 = v68;
  uint64_t v13 = v61;
  char v39 = v38;
  BOOL result = 0;
  if (v39) {
    goto LABEL_13;
  }
  return result;
}

unint64_t sub_243772228()
{
  unint64_t result = qword_268D9F888;
  if (!qword_268D9F888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F888);
  }
  return result;
}

unint64_t sub_243772280()
{
  unint64_t result = qword_268D9F898;
  if (!qword_268D9F898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F898);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for RawAddress(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 104)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RawAddress(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 104) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RawAddress()
{
  return &type metadata for RawAddress;
}

unsigned char *storeEnumTagSinglePayload for RawAddress.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x243772478);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RawAddress.CodingKeys()
{
  return &type metadata for RawAddress.CodingKeys;
}

unint64_t sub_2437724B4()
{
  unint64_t result = qword_268D9F8A0;
  if (!qword_268D9F8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F8A0);
  }
  return result;
}

unint64_t sub_24377250C()
{
  unint64_t result = qword_268D9F8A8;
  if (!qword_268D9F8A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F8A8);
  }
  return result;
}

unint64_t sub_243772564()
{
  unint64_t result = qword_268D9F8B0;
  if (!qword_268D9F8B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F8B0);
  }
  return result;
}

uint64_t sub_2437725B8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4C73736572646461 && a2 == 0xEC00000073656E69;
  if (v2 || (sub_243959940() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7974696C61636F6CLL && a2 == 0xE800000000000000 || (sub_243959940() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C61636F4C627573 && a2 == 0xEB00000000797469 || (sub_243959940() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000002439B0F60 || (sub_243959940() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000002439B0F80 || (sub_243959940() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6F436C6174736F70 && a2 == 0xEA00000000006564 || (sub_243959940() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x437972746E756F63 && a2 == 0xEB0000000065646FLL)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_243959940();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_2437728E8()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_243772920()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_243772930(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v19 = a1;
  uint64_t v20 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9A0B0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = MEMORY[0x263F8EE78];
  if (v10)
  {
    uint64_t v21 = MEMORY[0x263F8EE78];
    sub_2434CCD74(0, v10, 0);
    uint64_t v11 = v21;
    uint64_t v12 = *(void *)(type metadata accessor for Order.ContentItem(0) - 8);
    uint64_t v13 = a3 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    uint64_t v18 = *(void *)(v12 + 72);
    while (1)
    {
      v19(v13);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v21 = v11;
      unint64_t v15 = *(void *)(v11 + 16);
      unint64_t v14 = *(void *)(v11 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_2434CCD74(v14 > 1, v15 + 1, 1);
        uint64_t v11 = v21;
      }
      *(void *)(v11 + 16) = v15 + 1;
      sub_24337BF80((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v15, &qword_268D9A0B0);
      v13 += v18;
      if (!--v10) {
        return v11;
      }
    }
    swift_release();
  }
  return v11;
}

uint64_t sub_243772B24(void (*a1)(_OWORD *__return_ptr, _OWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x263F8EE78];
  if (v5)
  {
    uint64_t v40 = MEMORY[0x263F8EE78];
    sub_2434CCDE0(0, v5, 0);
    uint64_t v6 = v40;
    for (unint64_t i = (_OWORD *)(a3 + 32); ; i += 8)
    {
      --v5;
      long long v10 = i[5];
      long long v11 = i[3];
      long long v36 = i[4];
      long long v37 = v10;
      long long v12 = i[5];
      long long v13 = i[7];
      long long v38 = i[6];
      long long v39 = v13;
      long long v14 = i[1];
      v33[0] = *i;
      v33[1] = v14;
      long long v15 = i[3];
      long long v17 = *i;
      long long v16 = i[1];
      long long v34 = i[2];
      long long v35 = v15;
      v31[4] = v36;
      v31[5] = v12;
      long long v18 = i[7];
      v31[6] = v38;
      v31[7] = v18;
      v31[0] = v17;
      v31[1] = v16;
      v31[2] = v34;
      v31[3] = v11;
      sub_2434EA274((uint64_t)v33);
      a1(v32, v31);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      sub_2435C89F8((uint64_t)v33);
      long long v25 = v32[2];
      long long v26 = v32[3];
      long long v29 = v32[6];
      long long v30 = v32[7];
      long long v27 = v32[4];
      long long v28 = v32[5];
      long long v23 = v32[0];
      long long v24 = v32[1];
      uint64_t v40 = v6;
      unint64_t v20 = *(void *)(v6 + 16);
      unint64_t v19 = *(void *)(v6 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_2434CCDE0(v19 > 1, v20 + 1, 1);
        uint64_t v6 = v40;
      }
      *(void *)(v6 + 16) = v20 + 1;
      uint64_t v21 = (_OWORD *)(v6 + (v20 << 7));
      v21[4] = v25;
      v21[5] = v26;
      void v21[2] = v23;
      v21[3] = v24;
      v21[8] = v29;
      v21[9] = v30;
      v21[6] = v27;
      v21[7] = v28;
      if (!v5) {
        return v6;
      }
    }
    sub_2435C89F8((uint64_t)v33);
    swift_release();
  }
  return v6;
}

uint64_t sub_243772CC4(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_243772D2C(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for Order.Return, (void (*)(BOOL, unint64_t, uint64_t))sub_2434CD160, (uint64_t (*)(void))type metadata accessor for RawOrderReturn, (uint64_t (*)(void))type metadata accessor for Order.Return);
}

uint64_t sub_243772D2C(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), void (*a6)(BOOL, unint64_t, uint64_t), uint64_t (*a7)(void), uint64_t (*a8)(void))
{
  long long v27 = a8;
  long long v28 = a1;
  uint64_t v11 = v8;
  uint64_t v29 = a2;
  uint64_t v13 = a5(0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13 - 8);
  long long v16 = (char *)&v24 - v15;
  unint64_t v17 = *(void *)(a3 + 16);
  uint64_t v18 = MEMORY[0x263F8EE78];
  if (v17)
  {
    uint64_t v30 = MEMORY[0x263F8EE78];
    long long v25 = a6;
    a6(0, v17, 0);
    uint64_t v18 = v30;
    uint64_t v19 = *(void *)(a7(0) - 8);
    uint64_t v20 = a3 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    uint64_t v26 = *(void *)(v19 + 72);
    while (1)
    {
      v28(v20);
      if (v11) {
        break;
      }
      uint64_t v11 = 0;
      uint64_t v30 = v18;
      unint64_t v22 = *(void *)(v18 + 16);
      unint64_t v21 = *(void *)(v18 + 24);
      if (v22 >= v21 >> 1)
      {
        v25(v21 > 1, v22 + 1, 1);
        uint64_t v18 = v30;
      }
      *(void *)(v18 + 16) = v22 + 1;
      sub_24377F1E4((uint64_t)v16, v18+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v22, v27);
      v20 += v26;
      if (!--v17) {
        return v18;
      }
    }
    swift_release();
  }
  return v18;
}

uint64_t sub_243772F3C(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_243772D2C(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for Order.Fulfillment, (void (*)(BOOL, unint64_t, uint64_t))sub_2434CD124, (uint64_t (*)(void))type metadata accessor for RawOrderFulfillment, (uint64_t (*)(void))type metadata accessor for Order.Fulfillment);
}

uint64_t sub_243772FA4(void (*a1)(void *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x263F8EE78];
  if (v5)
  {
    uint64_t v37 = MEMORY[0x263F8EE78];
    sub_2434CD1D8(0, v5, 0);
    uint64_t v6 = v37;
    uint64_t v8 = (uint64_t *)(a3 + 40);
    while (1)
    {
      uint64_t v9 = *v8;
      int v10 = *((_DWORD *)v8 + 2);
      uint64_t v11 = v8[4];
      uint64_t v12 = v8[5];
      v27[0] = *(v8 - 1);
      v27[1] = v9;
      int v28 = v10;
      long long v29 = *(_OWORD *)((char *)v8 + 12);
      uint64_t v30 = v11;
      uint64_t v31 = v12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a1(v32, v27);
      if (v4) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = v32[0];
      uint64_t v13 = v32[1];
      int v15 = v33;
      long long v16 = v34;
      uint64_t v17 = v35;
      uint64_t v18 = v36;
      uint64_t v37 = v6;
      unint64_t v20 = *(void *)(v6 + 16);
      unint64_t v19 = *(void *)(v6 + 24);
      if (v20 >= v19 >> 1)
      {
        long long v25 = v34;
        uint64_t v24 = v35;
        uint64_t v22 = v36;
        sub_2434CD1D8(v19 > 1, v20 + 1, 1);
        uint64_t v18 = v22;
        uint64_t v17 = v24;
        long long v16 = v25;
        uint64_t v6 = v37;
      }
      *(void *)(v6 + 16) = v20 + 1;
      uint64_t v21 = v6 + 56 * v20;
      *(void *)(v21 + 32) = v14;
      *(void *)(v21 + 40) = v13;
      *(_DWORD *)(v21 + 48) = v15;
      *(_OWORD *)(v21 + 52) = v16;
      *(void *)(v21 + 72) = v17;
      *(void *)(v21 + 80) = v18;
      v8 += 7;
      --v5;
      uint64_t v4 = 0;
      if (!v5) {
        return v6;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_243773134(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_243772D2C(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for Order.PaymentTransaction, (void (*)(BOOL, unint64_t, uint64_t))sub_2434CD19C, (uint64_t (*)(void))type metadata accessor for RawOrderPaymentTransaction, (uint64_t (*)(void))type metadata accessor for Order.PaymentTransaction);
}

uint64_t sub_24377319C(void (*a1)(_OWORD *__return_ptr, id *), uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  if (a3 >> 62) {
    goto LABEL_18;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v7 = MEMORY[0x263F8EE78];
    if (!v6) {
      return v7;
    }
    uint64_t v20 = MEMORY[0x263F8EE78];
    uint64_t result = sub_2434CD5F8(0, v6 & ~(v6 >> 63), 0);
    if (v6 < 0) {
      break;
    }
    uint64_t v9 = 0;
    uint64_t v7 = v20;
    while (v6 != v9)
    {
      if ((a3 & 0xC000000000000001) != 0) {
        id v10 = (id)MEMORY[0x24567E5D0](v9, a3);
      }
      else {
        id v10 = *(id *)(a3 + 8 * v9 + 32);
      }
      uint64_t v11 = v10;
      id v18 = v10;
      a1(v19, &v18);
      if (v4)
      {
        swift_release();

        return v7;
      }
      uint64_t v4 = 0;

      uint64_t v20 = v7;
      unint64_t v13 = *(void *)(v7 + 16);
      unint64_t v12 = *(void *)(v7 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_2434CD5F8(v12 > 1, v13 + 1, 1);
        uint64_t v7 = v20;
      }
      ++v9;
      *(void *)(v7 + 16) = v13 + 1;
      uint64_t v14 = (_OWORD *)(v7 + 48 * v13);
      long long v15 = v19[0];
      long long v16 = v19[2];
      void v14[3] = v19[1];
      v14[4] = v16;
      void v14[2] = v15;
      if (v6 == v9) {
        return v7;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_243959550();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t BankConnectLinkingDateQueryCalculator.init(dataSource:calendar:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_2433A857C(a1, a3);
  uint64_t v5 = a3 + *(int *)(type metadata accessor for BankConnectLinkingDateQueryCalculator() + 20);
  uint64_t v6 = sub_2439576F0();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);

  return v7(v5, a2, v6);
}

uint64_t type metadata accessor for BankConnectLinkingDateQueryCalculator()
{
  uint64_t result = qword_268D9F8D0;
  if (!qword_268D9F8D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t BankConnectLinkingDateQueryCalculator.linkingDateQueries(forTransactionsFrom:now:calculation:)(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  *(void *)(v4 + 32) = a2;
  *(void *)(v4 + 40) = v3;
  *(void *)(v4 + 24) = a1;
  uint64_t v6 = sub_243957400();
  *(void *)(v4 + 48) = v6;
  *(void *)(v4 + 56) = *(void *)(v6 - 8);
  *(void *)(v4 + 64) = swift_task_alloc();
  *(void *)(v4 + 72) = swift_task_alloc();
  *(void *)(v4 + 80) = swift_task_alloc();
  *(void *)(v4 + 88) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
  *(void *)(v4 + 96) = swift_task_alloc();
  *(void *)(v4 + 104) = swift_task_alloc();
  *(unsigned char *)(v4 + 160) = *a3;
  return MEMORY[0x270FA2498](sub_243773538, 0, 0);
}

uint64_t sub_243773538()
{
  unint64_t v1 = *(void *)(v0 + 24);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_243959550();
    *(void *)(v0 + 112) = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_11:
    char v11 = *(unsigned char *)(v0 + 160);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    if (v11) {
      uint64_t v12 = sub_2437747D4();
    }
    else {
      uint64_t v12 = sub_243774324();
    }
    uint64_t v13 = v12;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void *)(v0 + 32);
    uint64_t v15 = swift_task_alloc();
    *(void *)(v15 + 16) = v14;
    uint64_t v16 = sub_243772D2C((void (*)(uint64_t))sub_243775C38, v15, v13, v0 + 16, (uint64_t (*)(void))type metadata accessor for BankConnectTransactionsDataLoader.DateQuery, (void (*)(BOOL, unint64_t, uint64_t))sub_2434CC9B4, MEMORY[0x263F062D0], (uint64_t (*)(void))type metadata accessor for BankConnectTransactionsDataLoader.DateQuery);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v17(v16);
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  *(void *)(v0 + 112) = v2;
  if (!v2) {
    goto LABEL_11;
  }
LABEL_3:
  uint64_t v4 = *(void *)(v0 + 24);
  *(void *)(v0 + 120) = MEMORY[0x263F8EE88];
  if ((v4 & 0xC000000000000001) != 0)
  {
    id v5 = (id)MEMORY[0x24567E5D0](0);
  }
  else
  {
    if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    id v5 = *(id *)(v4 + 32);
  }
  id v6 = v5;
  *(void *)(v0 + 128) = v5;
  *(void *)(v0 + 136) = 1;
  uint64_t v7 = *(void **)(v0 + 40);
  uint64_t v8 = v7[3];
  uint64_t v9 = v7[4];
  __swift_project_boxed_opaque_existential_1(v7, v8);
  id v18 = (uint64_t (*)(id, uint64_t, uint64_t))(*(void *)(v9 + 8) + **(int **)(v9 + 8));
  id v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v10;
  *id v10 = v0;
  v10[1] = sub_243773904;
  return v18(v6, v8, v9);
}

uint64_t sub_243773904(uint64_t a1)
{
  *(void *)(*(void *)v1 + 152) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_243773A04, 0, 0);
}

void sub_243773A04()
{
  unint64_t v1 = *(void *)(v0 + 152);
  if (v1 >> 62) {
    goto LABEL_22;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  for (uint64_t i = swift_bridgeObjectRetain(); v2; uint64_t i = *(void *)(v0 + 152))
  {
    uint64_t v4 = 0;
    unint64_t v5 = v1 & 0xC000000000000001;
    unint64_t v1 = MEMORY[0x263F8EE78];
    uint64_t v72 = i + 32;
    uint64_t v74 = v2;
    while (1)
    {
      id v6 = v5 ? (id)MEMORY[0x24567E5D0](v4, *(void *)(v0 + 152)) : *(id *)(v72 + 8 * v4);
      uint64_t v7 = v6;
      uint64_t v8 = v4 + 1;
      if (__OFADD__(v4, 1)) {
        break;
      }
      id v9 = objc_msgSend(v6, sel_transactionDate);
      if (v9)
      {
        id v10 = v9;
        sub_2439573A0();

        uint64_t v11 = 0;
      }
      else
      {
        uint64_t v11 = 1;
      }
      uint64_t v12 = *(void *)(v0 + 96);
      uint64_t v14 = *(void *)(v0 + 48);
      uint64_t v13 = *(void *)(v0 + 56);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v12, v11, 1, v14);

      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v12, 1, v14) == 1)
      {
        sub_24337C1BC(*(void *)(v0 + 96), (uint64_t *)&unk_26B0C8E20);
      }
      else
      {
        unint64_t v16 = *(void *)(v0 + 80);
        unint64_t v15 = *(void *)(v0 + 88);
        uint64_t v17 = *(void *)(v0 + 48);
        id v18 = *(void (**)(unint64_t, unint64_t, uint64_t))(*(void *)(v0 + 56) + 32);
        v18(v15, *(void *)(v0 + 96), v17);
        v18(v16, v15, v17);
        if (swift_isUniquelyReferenced_nonNull_native()) {
          unint64_t v19 = v1;
        }
        else {
          unint64_t v19 = sub_243776048(0, *(void *)(v1 + 16) + 1, 1, v1, &qword_268D99EF8, MEMORY[0x263F07490], MEMORY[0x263F07490]);
        }
        unint64_t v21 = *(void *)(v19 + 16);
        unint64_t v20 = *(void *)(v19 + 24);
        if (v21 >= v20 >> 1) {
          unint64_t v19 = sub_243776048(v20 > 1, v21 + 1, 1, v19, &qword_268D99EF8, MEMORY[0x263F07490], MEMORY[0x263F07490]);
        }
        unint64_t v22 = *(void *)(v0 + 80);
        uint64_t v23 = *(void *)(v0 + 48);
        uint64_t v24 = *(void *)(v0 + 56);
        *(void *)(v19 + 16) = v21 + 1;
        unint64_t v1 = v19;
        v18(v19+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(void *)(v24 + 72) * v21, v22, v23);
        uint64_t v2 = v74;
      }
      ++v4;
      if (v8 == v2) {
        goto LABEL_24;
      }
    }
    __break(1u);
LABEL_22:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_243959550();
  }
  unint64_t v1 = MEMORY[0x263F8EE78];
LABEL_24:
  swift_bridgeObjectRelease_n();
  uint64_t v25 = *(void *)(v0 + 56);
  uint64_t v69 = *(void *)(v1 + 16);
  if (v69)
  {
    uint64_t v26 = 0;
    unint64_t v68 = v1 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
    uint64_t v71 = *(void *)(v25 + 72);
    uint64_t v75 = *(void (**)(uint64_t, unint64_t, uint64_t))(v25 + 16);
    uint64_t v27 = *(void *)(v0 + 120);
    while (1)
    {
      uint64_t v33 = *(void *)(v0 + 104);
      uint64_t v35 = *(void *)(v0 + 48);
      uint64_t v34 = *(void *)(v0 + 56);
      v75(v33, v68 + v26 * v71, v35);
      uint64_t v67 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56);
      v67(v33, 0, 1, v35);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v33, 1, v35) == 1) {
        break;
      }
      uint64_t v70 = v26;
      (*(void (**)(void, void, void))(*(void *)(v0 + 56) + 32))(*(void *)(v0 + 72), *(void *)(v0 + 104), *(void *)(v0 + 48));
      sub_24377F19C((unint64_t *)&qword_268D974C8, MEMORY[0x263F07490]);
      swift_bridgeObjectRetain();
      uint64_t v36 = sub_2439581C0();
      uint64_t v37 = -1 << *(unsigned char *)(v27 + 32);
      unint64_t v38 = v36 & ~v37;
      uint64_t v39 = v27;
      uint64_t v40 = v27 + 56;
      if ((*(void *)(v27 + 56 + ((v38 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v38))
      {
        uint64_t v41 = ~v37;
        while (1)
        {
          uint64_t v42 = *(void *)(v0 + 64);
          uint64_t v44 = *(void *)(v0 + 48);
          uint64_t v43 = *(void *)(v0 + 56);
          v75(v42, *(void *)(v39 + 48) + v38 * v71, v44);
          sub_24377F19C((unint64_t *)&unk_268DA2730, MEMORY[0x263F07490]);
          char v45 = sub_243958270();
          char v46 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
          v46(v42, v44);
          if (v45) {
            break;
          }
          unint64_t v38 = (v38 + 1) & v41;
          if (((*(void *)(v40 + ((v38 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v38) & 1) == 0) {
            goto LABEL_26;
          }
        }
        uint64_t v47 = *(void *)(v0 + 72);
        uint64_t v48 = *(void *)(v0 + 48);
        uint64_t v27 = v39;
        swift_bridgeObjectRelease();
        v46(v47, v48);
      }
      else
      {
LABEL_26:
        uint64_t v29 = *(void *)(v0 + 64);
        unint64_t v28 = *(void *)(v0 + 72);
        uint64_t v31 = *(void *)(v0 + 48);
        uint64_t v30 = *(void *)(v0 + 56);
        swift_bridgeObjectRelease();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v75(v29, v28, v31);
        sub_24377C224(v29, v38, isUniquelyReferenced_nonNull_native);
        uint64_t v27 = v39;
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v30 + 8))(v28, v31);
      }
      uint64_t v26 = v70 + 1;
      if (v70 + 1 == v69)
      {
        v67(*(void *)(v0 + 104), 1, 1, *(void *)(v0 + 48));
        break;
      }
    }
  }
  else
  {
    uint64_t v27 = *(void *)(v0 + 120);
    (*(void (**)(void, uint64_t, uint64_t, void))(v25 + 56))(*(void *)(v0 + 104), 1, 1, *(void *)(v0 + 48));
  }
  char v49 = *(void **)(v0 + 128);
  uint64_t v50 = *(void *)(v0 + 136);
  uint64_t v51 = *(void *)(v0 + 112);
  swift_bridgeObjectRelease();

  if (v50 == v51)
  {
    char v52 = *(unsigned char *)(v0 + 160);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    if (v52) {
      uint64_t v53 = sub_2437747D4();
    }
    else {
      uint64_t v53 = sub_243774324();
    }
    uint64_t v57 = v53;
    swift_bridgeObjectRelease();
    uint64_t v63 = *(void *)(v0 + 32);
    uint64_t v64 = swift_task_alloc();
    *(void *)(v64 + 16) = v63;
    uint64_t v65 = sub_243772D2C((void (*)(uint64_t))sub_243775C38, v64, v57, v0 + 16, (uint64_t (*)(void))type metadata accessor for BankConnectTransactionsDataLoader.DateQuery, (void (*)(BOOL, unint64_t, uint64_t))sub_2434CC9B4, MEMORY[0x263F062D0], (uint64_t (*)(void))type metadata accessor for BankConnectTransactionsDataLoader.DateQuery);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v66 = *(void (**)(uint64_t))(v0 + 8);
    v66(v65);
    return;
  }
  unint64_t v54 = *(void *)(v0 + 136);
  *(void *)(v0 + 120) = v27;
  uint64_t v55 = *(void *)(v0 + 24);
  if ((v55 & 0xC000000000000001) != 0)
  {
    id v56 = (id)MEMORY[0x24567E5D0](v54);
  }
  else
  {
    if (v54 >= *(void *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_54:
      __break(1u);
      return;
    }
    id v56 = *(id *)(v55 + 8 * v54 + 32);
  }
  id v58 = v56;
  *(void *)(v0 + 128) = v56;
  *(void *)(v0 + 136) = v54 + 1;
  if (__OFADD__(v54, 1))
  {
    __break(1u);
    goto LABEL_54;
  }
  uint64_t v59 = *(void **)(v0 + 40);
  uint64_t v60 = v59[3];
  uint64_t v61 = v59[4];
  __swift_project_boxed_opaque_existential_1(v59, v60);
  uint64_t v73 = (void (*)(id, uint64_t, uint64_t))(*(void *)(v61 + 8) + **(int **)(v61 + 8));
  uint64_t v62 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v62;
  *uint64_t v62 = v0;
  v62[1] = sub_243773904;
  v73(v58, v60, v61);
}

uint64_t sub_243774324()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
  uint64_t v2 = MEMORY[0x270FA5388](v1 - 8);
  uint64_t v37 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  unint64_t v5 = (char *)&v29 - v4;
  uint64_t v6 = sub_243957400();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  id v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v35 = (uint64_t)&v29 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v34 = (char *)&v29 - v14;
  MEMORY[0x270FA5388](v13);
  unint64_t v16 = (char *)&v29 - v15;
  uint64_t v17 = swift_bridgeObjectRetain();
  id v18 = (void *)sub_243638050(v17);
  swift_bridgeObjectRelease();
  uint64_t v39 = v18;
  sub_243775F60(&v39);
  if (v0) {
    goto LABEL_13;
  }
  uint64_t v38 = 0;
  unint64_t v19 = v39;
  unint64_t v20 = v39[2];
  if (!v20)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    goto LABEL_8;
  }
  uint64_t v30 = v10;
  uint64_t v36 = v16;
  unint64_t v21 = (char *)v39 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v32(v5, v21, v6);
  uint64_t v33 = *(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56);
  v33(v5, 0, 1, v6);
  uint64_t v31 = *(unsigned int (**)(char *, uint64_t))(v7 + 48);
  if (v31(v5, 1) == 1)
  {
LABEL_8:
    swift_release();
    sub_24337C1BC((uint64_t)v5, (uint64_t *)&unk_26B0C8E20);
    return MEMORY[0x263F8EE78];
  }
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v29(v36, v5, v6);
  if (v20 <= v19[2])
  {
    unint64_t v22 = &v21[*(void *)(v7 + 72) * (v20 - 1)];
    uint64_t v23 = (uint64_t)v37;
    v32(v37, v22, v6);
    v33((char *)v23, 0, 1, v6);
    swift_release();
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v31)(v23, 1, v6) != 1)
    {
      uint64_t v26 = v34;
      v29(v34, (char *)v23, v6);
      __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F9E8);
      sub_2439565D0();
      uint64_t v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_24395EAE0;
      Date.advancedByDays(_:)(-2, v35);
      uint64_t v27 = v36;
      Date.advancedByDays(_:)(3, (uint64_t)v30);
      sub_243956590();
      unint64_t v28 = *(void (**)(char *, uint64_t))(v7 + 8);
      v28(v26, v6);
      v28(v27, v6);
      return v24;
    }
    sub_24337C1BC(v23, (uint64_t *)&unk_26B0C8E20);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v36, v6);
    return MEMORY[0x263F8EE78];
  }
  __break(1u);
LABEL_13:
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_2437747D4()
{
  uint64_t v0 = sub_243957570();
  uint64_t v165 = *(char **)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v162 = (char *)v110 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = sub_2439576F0();
  char v164 = *(char **)(v139 - 8);
  MEMORY[0x270FA5388](v139);
  long long v138 = (char *)v110 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C5B90);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v163 = (char *)v110 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C5B88);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v141 = (char *)v110 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Duration();
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v136 = (char *)v110 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v140 = (char *)v110 - v10;
  uint64_t v11 = sub_2439565D0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v112 = (char *)v110 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v111 = (char *)v110 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  unint64_t v120 = (char *)v110 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v122 = (char *)v110 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v144 = (char *)v110 - v21;
  uint64_t v168 = sub_243957400();
  uint64_t v22 = *(void *)(v168 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v168);
  char v117 = (char *)v110 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  char v116 = (char *)v110 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v135 = (char *)v110 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v31 = (char *)v110 - v30;
  MEMORY[0x270FA5388](v29);
  int v167 = (char *)v110 - v32;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
  uint64_t v34 = MEMORY[0x270FA5388](v33 - 8);
  uint64_t v36 = (char *)v110 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = MEMORY[0x270FA5388](v34);
  char v137 = (char *)v110 - v38;
  MEMORY[0x270FA5388](v37);
  uint64_t v142 = (char *)v110 - v39;
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D99E88);
  uint64_t v41 = MEMORY[0x270FA5388](v40 - 8);
  uint64_t v113 = (char *)v110 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  uint64_t v115 = (char *)v110 - v44;
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  uint64_t v134 = (uint64_t)v110 - v46;
  MEMORY[0x270FA5388](v45);
  uint64_t v119 = v12;
  uint64_t v47 = *(void (**)(void))(v12 + 56);
  uint64_t v145 = (uint64_t)v110 - v48;
  uint64_t v133 = v12 + 56;
  uint64_t v132 = v47;
  v47();
  uint64_t v49 = swift_bridgeObjectRetain();
  uint64_t v50 = (void *)sub_243638050(v49);
  swift_bridgeObjectRelease();
  v169 = v50;
  uint64_t v51 = v166;
  sub_243775F60(&v169);
  if (v51)
  {
LABEL_31:
    uint64_t result = swift_release();
    __break(1u);
    return result;
  }
  v110[2] = 0;
  uint64_t v52 = v169[2];
  if (v52)
  {
    uint64_t v129 = v36;
    unint64_t v54 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
    uint64_t v53 = v22 + 16;
    uint64_t v131 = v54;
    unint64_t v55 = (*(unsigned __int8 *)(v53 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 64);
    v110[1] = v169;
    id v56 = (char *)v169 + v55;
    uint64_t v125 = *(void *)(v53 + 56);
    uint64_t v166 = (char **)(v53 + 16);
    uint64_t v160 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v164 + 56);
    uint64_t v161 = v53 + 32;
    unsigned int v159 = *MEMORY[0x263F07718];
    uint64_t v158 = (void (**)(char *, void, uint64_t))(v165 + 104);
    uint64_t v157 = (void (**)(char *, uint64_t))(v165 + 8);
    uint64_t v156 = (void (**)(char *, uint64_t))(v164 + 8);
    uint64_t v124 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v119 + 48);
    uint64_t v143 = (void (**)(uint64_t, char *, uint64_t))(v119 + 32);
    uint64_t v114 = (void (**)(char *, char *, uint64_t))(v119 + 16);
    uint64_t v118 = (void (**)(char *, uint64_t))(v119 + 8);
    unint64_t v123 = (void (**)(char *, uint64_t))(v53 - 8);
    unint64_t v121 = MEMORY[0x263F8EE78];
    uint64_t v130 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v53 + 40);
    v110[0] = (v53 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v57 = v163;
    id v58 = v141;
    uint64_t v59 = v142;
    uint64_t v127 = v11;
    uint64_t v126 = v53;
    uint64_t v155 = v31;
    uint64_t v60 = (char **)(v53 + 32);
    while (1)
    {
      uint64_t v61 = v11;
      v153 = v56;
      uint64_t v154 = v52;
      uint64_t v62 = v0;
      uint64_t v63 = v59;
      uint64_t v64 = v168;
      v131(v59, v56, v168);
      uint64_t v128 = *v130;
      v128(v63, 0, 1, v64);
      uint64_t v165 = *v60;
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v165)(v63, 1, v64) == 1)
      {
        uint64_t v99 = v145;
        uint64_t v100 = (uint64_t)v113;
        unint64_t v98 = v121;
        uint64_t v11 = v61;
        goto LABEL_21;
      }
      char v164 = *v166;
      ((void (*)(char *, char *, uint64_t))v164)(v167, v63, v168);
      uint64_t v65 = v162;
      uint64_t v66 = v139;
      uint64_t v152 = *v160;
      v152(v58, 1, 1, v139);
      uint64_t v67 = sub_243957740();
      uint64_t v68 = *(void *)(v67 - 8);
      uint64_t v150 = *(void (**)(char *, uint64_t, uint64_t))(v68 + 56);
      uint64_t v151 = v67;
      uint64_t v149 = v68 + 56;
      v150(v57, 1, 1);
      uint64_t v69 = v140;
      sub_243956810();
      uint64_t v148 = *v158;
      v148(v65, v159, v62);
      uint64_t v70 = v138;
      sub_243957580();
      uint64_t v71 = (uint64_t)v69;
      uint64_t v72 = v70;
      uint64_t v147 = *v157;
      v147(v65, v62);
      uint64_t v73 = v137;
      sub_243957670();
      uint64_t v0 = v62;
      uint64_t v74 = v66;
      uint64_t v75 = v66;
      uint64_t v76 = v168;
      uint64_t v146 = *v156;
      v146(v72, v75);
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v165)(v73, 1, v76) == 1) {
        break;
      }
      ((void (*)(char *, char *, uint64_t))v164)(v155, v73, v76);
      sub_24377F24C(v71, (uint64_t (*)(void))type metadata accessor for Duration);
      v152(v58, 1, 1, v74);
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v150)(v163, 1, 1, v151);
      uint64_t v77 = (uint64_t)v136;
      sub_243956810();
      uint64_t v78 = v162;
      v148(v162, v159, v0);
      sub_243957580();
      v147(v78, v0);
      uint64_t v79 = v129;
      sub_243957670();
      v146(v72, v74);
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v165)(v79, 1, v76) == 1) {
        goto LABEL_30;
      }
      ((void (*)(char *, char *, uint64_t))v164)(v135, v79, v168);
      sub_24377F24C(v77, (uint64_t (*)(void))type metadata accessor for Duration);
      uint64_t v80 = v144;
      sub_243956590();
      uint64_t v81 = v145;
      uint64_t v82 = v134;
      sub_2435C574C(v145, v134);
      uint64_t v11 = v127;
      if ((*v124)(v82, 1, v127) == 1)
      {
        (*v123)(v167, v168);
        sub_24337C1BC(v81, &qword_268D99E88);
        sub_24337C1BC(v82, &qword_268D99E88);
        (*v143)(v81, v80, v11);
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v132)(v81, 0, 1, v11);
      }
      else
      {
        unint64_t v83 = *v143;
        uint64_t v84 = v122;
        (*v143)((uint64_t)v122, (char *)v82, v11);
        uint64_t v85 = v80;
        if (sub_243956570())
        {
          sub_2439565A0();
          sub_243956580();
          uint64_t v86 = (uint64_t)v115;
          sub_243956590();
          uint64_t v87 = v84;
          uint64_t v88 = *v118;
          (*v118)(v87, v11);
          v88(v85, v11);
          (*v123)(v167, v168);
          uint64_t v89 = v145;
          sub_24337C1BC(v145, &qword_268D99E88);
          ((void (*)(uint64_t, void, uint64_t, uint64_t))v132)(v86, 0, 1, v11);
          sub_24337BF80(v86, v89, &qword_268D99E88);
        }
        else
        {
          (*v114)(v120, v84, v11);
          unint64_t v90 = v121;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v90 = sub_243776048(0, *(void *)(v90 + 16) + 1, 1, v90, &qword_268D9F9E8, MEMORY[0x263F062D0], MEMORY[0x263F062D0]);
          }
          unint64_t v92 = *(void *)(v90 + 16);
          unint64_t v91 = *(void *)(v90 + 24);
          uint64_t v93 = v119;
          if (v92 >= v91 >> 1)
          {
            uint64_t v97 = sub_243776048(v91 > 1, v92 + 1, 1, v90, &qword_268D9F9E8, MEMORY[0x263F062D0], MEMORY[0x263F062D0]);
            uint64_t v93 = v119;
            unint64_t v90 = v97;
          }
          *(void *)(v90 + 16) = v92 + 1;
          uint64_t v94 = v93;
          unint64_t v95 = (*(unsigned __int8 *)(v93 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80);
          unint64_t v121 = v90;
          v83(v90 + v95 + *(void *)(v93 + 72) * v92, v120, v11);
          (*(void (**)(char *, uint64_t))(v94 + 8))(v122, v11);
          (*v123)(v167, v168);
          uint64_t v96 = v145;
          sub_24337C1BC(v145, &qword_268D99E88);
          v83(v96, v144, v11);
          ((void (*)(uint64_t, void, uint64_t, uint64_t))v132)(v96, 0, 1, v11);
        }
      }
      uint64_t v57 = v163;
      id v58 = v141;
      id v56 = &v153[v125];
      uint64_t v52 = v154 - 1;
      uint64_t v59 = v142;
      if (v154 == 1)
      {
        unint64_t v98 = v121;
        v128(v142, 1, 1, v168);
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  unint64_t v98 = MEMORY[0x263F8EE78];
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v142, 1, 1, v168);
LABEL_20:
  uint64_t v99 = v145;
  uint64_t v100 = (uint64_t)v113;
LABEL_21:
  swift_release();
  sub_2435C574C(v99, v100);
  uint64_t v101 = v119;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v119 + 48))(v100, 1, v11) == 1)
  {
    sub_24337C1BC(v99, &qword_268D99E88);
    uint64_t v99 = v100;
  }
  else
  {
    uint64_t v102 = *(void (**)(char *, uint64_t, uint64_t))(v101 + 32);
    uint64_t v103 = v111;
    v102(v111, v100, v11);
    (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v112, v103, v11);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v98 = sub_243776048(0, *(void *)(v98 + 16) + 1, 1, v98, &qword_268D9F9E8, MEMORY[0x263F062D0], MEMORY[0x263F062D0]);
    }
    unint64_t v105 = *(void *)(v98 + 16);
    unint64_t v104 = *(void *)(v98 + 24);
    uint64_t v106 = v119;
    if (v105 >= v104 >> 1)
    {
      uint64_t v109 = sub_243776048(v104 > 1, v105 + 1, 1, v98, &qword_268D9F9E8, MEMORY[0x263F062D0], MEMORY[0x263F062D0]);
      uint64_t v106 = v119;
      unint64_t v98 = v109;
    }
    *(void *)(v98 + 16) = v105 + 1;
    uint64_t v107 = v106;
    v102((char *)(v98+ ((*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80))+ *(void *)(v106 + 72) * v105), (uint64_t)v112, v11);
    (*(void (**)(char *, uint64_t))(v107 + 8))(v111, v11);
  }
  sub_24337C1BC(v99, &qword_268D99E88);
  return v98;
}

uint64_t sub_243775AB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_243957400();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_2439565D0();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v13 + 16))(v12, a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  return sub_243775C58((uint64_t)v12, v9, a3);
}

uint64_t sub_243775C38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_243775AB8(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_243775C58@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_243957400();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for BankConnectTransactionsDataLoader.DateQuery();
  uint64_t v14 = *(void (**)(void))(v7 + 56);
  uint64_t v22 = a3 + *(int *)(v13 + 20);
  v14();
  sub_2439565A0();
  sub_243956580();
  uint64_t v15 = a2;
  LOBYTE(a3) = sub_243957370();
  uint64_t v16 = *(void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v17 = v9;
  uint64_t v18 = 1;
  v16(v17, v6);
  if (a3)
  {
    sub_243956580();
    uint64_t v18 = 0;
  }
  v16(v15, v6);
  uint64_t v19 = sub_2439565D0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(a1, v19);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v14)(v12, v18, 1, v6);
  return sub_2433AA680((uint64_t)v12, v22);
}

uint64_t static BankConnectLinkingDateQueryCalculator.Error.== infix(_:_:)()
{
  return 1;
}

uint64_t BankConnectLinkingDateQueryCalculator.Error.hash(into:)()
{
  return sub_243959AE0();
}

uint64_t BankConnectLinkingDateQueryCalculator.Error.hashValue.getter()
{
  return sub_243959B40();
}

BOOL static BankConnectLinkingDateQueryCalculator.Calculation.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t BankConnectLinkingDateQueryCalculator.Calculation.hash(into:)()
{
  return sub_243959AE0();
}

uint64_t BankConnectLinkingDateQueryCalculator.Calculation.hashValue.getter()
{
  return sub_243959B40();
}

uint64_t sub_243775F60(void **a1)
{
  uint64_t v2 = *(void *)(sub_243957400() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_2439383E4(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  uint64_t result = sub_243777BC4(v6);
  *a1 = v3;
  return result;
}

char *sub_243776008(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_243777414(a1, a2, a3, a4, &qword_26B0C71D0);
}

uint64_t sub_243776014(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_243776048(a1, a2, a3, a4, &qword_268D97018, (uint64_t (*)(void))type metadata accessor for InternalAccount, (uint64_t (*)(void))type metadata accessor for InternalAccount);
}

uint64_t sub_243776048(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = _swift_stdlib_malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_243959530();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_24377F040(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_2437762C8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_243776048(a1, a2, a3, a4, &qword_268D99EF8, MEMORY[0x263F07490], MEMORY[0x263F07490]);
}

void *sub_2437762FC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F920);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24377E0C8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_24377640C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_243776048(a1, a2, a3, a4, &qword_268D9A078, (uint64_t (*)(void))type metadata accessor for AccountMatchResult, (uint64_t (*)(void))type metadata accessor for AccountMatchResult);
}

char *sub_243776440(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_243777414(a1, a2, a3, a4, &qword_268D9A138);
}

void *sub_24377644C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C81B8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24377DEE0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_24377655C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F2F0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24377E1D4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_24377666C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_243776B48(a1, a2, a3, a4, &qword_268D978F8);
}

uint64_t sub_243776680(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_243776048(a1, a2, a3, a4, &qword_268D9F978, MEMORY[0x263F06EA8], MEMORY[0x263F06EA8]);
}

void *sub_2437766B4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_243777808(a1, a2, a3, a4, &qword_268D9A0E8);
}

char *sub_2437766C8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F970);
      uint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      int64_t v12 = v11 - 32;
      if (v11 < 32) {
        int64_t v12 = v11 - 31;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = v12 & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x263F8EE78];
      uint64_t v13 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 32]) {
          memmove(v13, a4 + 32, 2 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_24377E2C8(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2437767D4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_243776048(a1, a2, a3, a4, &qword_268D99F18, MEMORY[0x263F07508], MEMORY[0x263F07508]);
}

void *sub_243776808(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F9D0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      int64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      int64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_24377E5C8(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_24377692C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_243776988(a1, a2, a3, a4, &qword_268D9F8F8, &qword_268D9A918);
}

uint64_t sub_243776940(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_243776048(a1, a2, a3, a4, &qword_268D99FD0, (uint64_t (*)(void))type metadata accessor for BankConnectConsent, (uint64_t (*)(void))type metadata accessor for BankConnectConsent);
}

void *sub_243776974(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_243776988(a1, a2, a3, a4, &qword_268D9F928, &qword_268D9A990);
}

void *sub_243776988(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v13 = (void *)swift_allocObject();
      int64_t v14 = _swift_stdlib_malloc_size(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 1;
      }
      void v13[2] = v11;
      v13[3] = 2 * (v15 >> 5);
      uint64_t v16 = v13 + 4;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x263F8EE78];
      uint64_t v16 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[4 * v11 + 4]) {
          memmove(v16, a4 + 4, 32 * v11);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24377E6B8(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_243776AA4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_243776048(a1, a2, a3, a4, &qword_268D99F08, type metadata accessor for InternalTransaction, type metadata accessor for InternalTransaction);
}

void *sub_243776AD8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_243776988(a1, a2, a3, a4, &qword_268D9F968, &qword_268D9A9B0);
}

uint64_t sub_243776AEC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_243776048(a1, a2, a3, a4, &qword_268D9A0F0, type metadata accessor for InternalAccountBalance, type metadata accessor for InternalAccountBalance);
}

void *sub_243776B20(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_243776988(a1, a2, a3, a4, &qword_268D9F910, &qword_268D9A968);
}

void *sub_243776B34(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_243776B48(a1, a2, a3, a4, &qword_268D9F9B8);
}

void *sub_243776B48(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v11 = (void *)swift_allocObject();
      size_t v12 = _swift_stdlib_malloc_size(v11);
      void v11[2] = v9;
      void v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
      uint64_t v13 = v11 + 4;
      if (v6)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[3 * v9 + 4]) {
          memmove(v13, a4 + 4, 24 * v9);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v11 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_24377EC74(0, v9, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_243776C78(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F9C8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24377DFD4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_243776D88(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_268D9A100);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_24377EB7C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_243776EB0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_243776048(a1, a2, a3, a4, &qword_268D9F9C0, (uint64_t (*)(void))type metadata accessor for ManagedConsentDeleter.Metadata, (uint64_t (*)(void))type metadata accessor for ManagedConsentDeleter.Metadata);
}

uint64_t sub_243776EE4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_243776048(a1, a2, a3, a4, &qword_268D9A290, (uint64_t (*)(void))type metadata accessor for BankConnectAccountChange, (uint64_t (*)(void))type metadata accessor for BankConnectAccountChange);
}

void *sub_243776F18(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F9A8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24377E3B4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_243777028(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_268D99718);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24377E7C0(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_243777138(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_243777160(a1, a2, a3, a4, &qword_268D9F980, &qword_268D9F988);
}

void *sub_24377714C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_243777160(a1, a2, a3, a4, &qword_268D9F990, &qword_268D9F998);
}

void *sub_243777160(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v13 = (void *)swift_allocObject();
      int64_t v14 = _swift_stdlib_malloc_size(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 17;
      }
      void v13[2] = v11;
      v13[3] = 2 * (v15 >> 4);
      uint64_t v16 = v13 + 4;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x263F8EE78];
      uint64_t v16 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[2 * v11 + 4]) {
          memmove(v16, a4 + 4, 16 * v11);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24377E4C0(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_24377727C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_243776B48(a1, a2, a3, a4, &qword_268D9F918);
}

uint64_t sub_243777290(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_243776048(a1, a2, a3, a4, &qword_268D9A0B8, type metadata accessor for Order.ContentItem, type metadata accessor for Order.ContentItem);
}

void *sub_2437772C4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C8E40);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24377E8AC(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2437773D4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_243776048(a1, a2, a3, a4, &qword_268D9F908, type metadata accessor for Transaction.Insight, type metadata accessor for Transaction.Insight);
}

char *sub_243777408(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_243777414(a1, a2, a3, a4, &qword_268D9F8E8);
}

char *sub_243777414(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = *((void *)a4 + 3);
  int64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v8 = a2;
    }
LABEL_8:
    int64_t v9 = *((void *)a4 + 2);
    if (v8 <= v9) {
      int64_t v10 = *((void *)a4 + 2);
    }
    else {
      int64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      int64_t v11 = (char *)swift_allocObject();
      size_t v12 = _swift_stdlib_malloc_size(v11);
      *((void *)v11 + 2) = v9;
      *((void *)v11 + 3) = 2 * v12 - 64;
      uint64_t v13 = v11 + 32;
      if (v6)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[v9 + 32]) {
          memmove(v13, a4 + 32, v9);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v11 = (char *)MEMORY[0x263F8EE78];
      uint64_t v13 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_24377ED68(0, v9, v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_24377750C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F960);
      int64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      size_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x263F8EE78];
      size_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_24377EE50(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_24377762C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F958);
      int64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      size_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4]) {
          memmove(v12, a4 + 4, 56 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x263F8EE78];
      size_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_24377EF48(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_243777758(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_243776048(a1, a2, a3, a4, &qword_268D9F948, type metadata accessor for MapsSuggestionsOrderPickup, type metadata accessor for MapsSuggestionsOrderPickup);
}

uint64_t sub_24377778C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_243776048(a1, a2, a3, a4, &qword_268D9F938, (uint64_t (*)(void))type metadata accessor for RawOrderPickupFulfillment, (uint64_t (*)(void))type metadata accessor for RawOrderPickupFulfillment);
}

uint64_t sub_2437777C0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_243776048(a1, a2, a3, a4, &qword_268D9F930, (uint64_t (*)(void))type metadata accessor for RawOrderShippingFulfillment, (uint64_t (*)(void))type metadata accessor for RawOrderShippingFulfillment);
}

void *sub_2437777F4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_243777808(a1, a2, a3, a4, &qword_268D99FE8);
}

void *sub_243777808(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      size_t v11 = (void *)swift_allocObject();
      int64_t v12 = _swift_stdlib_malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 25;
      }
      void v11[2] = v9;
      void v11[3] = 2 * (v13 >> 3);
      int64_t v14 = v11 + 4;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      size_t v11 = (void *)MEMORY[0x263F8EE78];
      int64_t v14 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v9 + 4]) {
          memmove(v14, a4 + 4, 8 * v9);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24377E998(0, v9, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

char *sub_243777924(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_243777414(a1, a2, a3, a4, &qword_268D99F48);
}

uint64_t sub_243777930(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_243776048(a1, a2, a3, a4, &qword_268D99F98, (uint64_t (*)(void))type metadata accessor for InstitutionWithPass, (uint64_t (*)(void))type metadata accessor for InstitutionWithPass);
}

void *sub_243777964(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_268D99F68);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 + 95;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 7);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[16 * v8 + 4]) {
          memmove(v13, a4 + 4, v8 << 7);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24377EA88(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_243777A74(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_268D9A0C8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24377E8AC(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_243777B84(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_243776048(a1, a2, a3, a4, &qword_268D9A0F8, (uint64_t (*)(void))type metadata accessor for PIIRedactionRegex, (uint64_t (*)(void))type metadata accessor for PIIRedactionRegex);
}

char *sub_243777BB8(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_243777414(a1, a2, a3, a4, &qword_268D9F900);
}

uint64_t sub_243777BC4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_243957400();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v134 = (char *)&v129 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v149 = (char *)&v129 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v144 = (char *)&v129 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v145 = (char *)&v129 - v12;
  uint64_t v13 = a1[1];
  uint64_t result = sub_2439598C0();
  if (result >= v13)
  {
    if (v13 < 0) {
      goto LABEL_138;
    }
    if (v13) {
      return sub_2437786A8(0, v13, 1, a1);
    }
    return result;
  }
  if (v13 >= 0) {
    uint64_t v15 = v13;
  }
  else {
    uint64_t v15 = v13 + 1;
  }
  if (v13 < -1) {
    goto LABEL_146;
  }
  uint64_t v147 = v4;
  uint64_t v130 = result;
  char v137 = (void *)v5;
  if (v13 < 2)
  {
    size_t v19 = (char *)MEMORY[0x263F8EE78];
    unint64_t v136 = MEMORY[0x263F8EE78]
         + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v129 = MEMORY[0x263F8EE78];
    if (v13 != 1)
    {
      unint64_t v21 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_104:
      if (v21 >= 2)
      {
        uint64_t v123 = *a1;
        do
        {
          unint64_t v124 = v21 - 2;
          if (v21 < 2) {
            goto LABEL_133;
          }
          if (!v123) {
            goto LABEL_145;
          }
          uint64_t v125 = *(void *)&v19[16 * v124 + 32];
          uint64_t v126 = *(void *)&v19[16 * v21 + 24];
          sub_243778994(v123 + v137[9] * v125, v123 + v137[9] * *(void *)&v19[16 * v21 + 16], v123 + v137[9] * v126, v136);
          if (v2) {
            break;
          }
          if (v126 < v125) {
            goto LABEL_134;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            size_t v19 = sub_2439383BC((uint64_t)v19);
          }
          if (v124 >= *((void *)v19 + 2)) {
            goto LABEL_135;
          }
          uint64_t v127 = &v19[16 * v124 + 32];
          *(void *)uint64_t v127 = v125;
          *((void *)v127 + 1) = v126;
          unint64_t v128 = *((void *)v19 + 2);
          if (v21 > v128) {
            goto LABEL_136;
          }
          memmove(&v19[16 * v21 + 16], &v19[16 * v21 + 32], 16 * (v128 - v21));
          *((void *)v19 + 2) = v128 - 1;
          unint64_t v21 = v128 - 1;
        }
        while (v128 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v129 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v16 = v15 >> 1;
    uint64_t v17 = sub_2439586A0();
    *(void *)(v17 + 16) = v16;
    unint64_t v18 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v129 = v17;
    unint64_t v136 = v17 + v18;
  }
  BOOL v20 = 0;
  uint64_t v142 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v143 = v5 + 16;
  uint64_t v152 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  size_t v19 = (char *)MEMORY[0x263F8EE78];
  uint64_t v148 = a1;
  while (1)
  {
    unint64_t v22 = v20 + 1;
    uint64_t v135 = v20;
    if ((uint64_t)(v20 + 1) >= v13)
    {
      uint64_t v33 = (void (*)(void, void, void))v20;
      uint64_t v35 = (uint64_t)(v20 + 1);
      a1 = v148;
    }
    else
    {
      uint64_t v23 = v147;
      uint64_t v24 = *v148;
      uint64_t v25 = v137[9];
      uint64_t v26 = *v148 + v25 * (void)v22;
      uint64_t v151 = v25;
      uint64_t v140 = v24;
      uint64_t v27 = (void (*)(char *, uint64_t, uint64_t))v137[2];
      v27(v145, v26, v147);
      uint64_t v150 = v13;
      uint64_t v28 = v144;
      v27(v144, v24 + v25 * (void)v135, v23);
      uint64_t v29 = v145;
      LODWORD(v146) = sub_243957360();
      uint64_t v30 = (void (*)(char *, uint64_t))v137[1];
      uint64_t v31 = v28;
      uint64_t v13 = v150;
      v30(v31, v23);
      uint64_t v32 = v23;
      uint64_t v33 = (void (*)(void, void, void))v135;
      v30(v29, v32);
      uint64_t v34 = v151;
      uint64_t v35 = (uint64_t)v33 + 2;
      if ((uint64_t)v33 + 2 < v13)
      {
        uint64_t v131 = v19;
        uint64_t v132 = v2;
        uint64_t v141 = v151 * (void)v22;
        uint64_t v36 = v140;
        uint64_t v37 = v151 * v35;
        while (1)
        {
          uint64_t v38 = v35;
          uint64_t v39 = v145;
          uint64_t v40 = v147;
          v27(v145, v36 + v37, v147);
          uint64_t v41 = v144;
          v27(v144, v36 + v141, v40);
          int v42 = sub_243957360();
          v30(v41, v40);
          v30(v39, v40);
          if ((v146 ^ v42)) {
            break;
          }
          uint64_t v35 = v38 + 1;
          uint64_t v34 = v151;
          v36 += v151;
          if (v150 == v38 + 1)
          {
            uint64_t v13 = v150;
            uint64_t v35 = v150;
            size_t v19 = v131;
            uint64_t v2 = v132;
            uint64_t v33 = (void (*)(void, void, void))v135;
            goto LABEL_23;
          }
        }
        size_t v19 = v131;
        uint64_t v2 = v132;
        uint64_t v35 = v38;
        uint64_t v33 = (void (*)(void, void, void))v135;
        uint64_t v13 = v150;
        uint64_t v34 = v151;
      }
LABEL_23:
      a1 = v148;
      if (v146)
      {
        if (v35 < (uint64_t)v33) {
          goto LABEL_139;
        }
        if ((uint64_t)v33 < v35)
        {
          uint64_t v131 = v19;
          uint64_t v132 = v2;
          uint64_t v43 = 0;
          uint64_t v44 = v34 * (v35 - 1);
          uint64_t v45 = (uint64_t)v33;
          uint64_t v46 = v35 * v34;
          uint64_t v47 = v45;
          uint64_t v48 = v45 * v34;
          uint64_t v49 = v140;
          do
          {
            if (v47 != v35 + v43 - 1)
            {
              if (!v49) {
                goto LABEL_144;
              }
              uint64_t v51 = v49 + v44;
              uint64_t v146 = (char *)*v152;
              ((void (*)(char *, uint64_t, uint64_t))v146)(v134, v49 + v48, v147);
              if (v48 < v44 || v49 + v48 >= (unint64_t)(v49 + v46))
              {
                uint64_t v50 = v147;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                uint64_t v50 = v147;
                if (v48 != v44) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              ((void (*)(uint64_t, char *, uint64_t))v146)(v51, v134, v50);
              a1 = v148;
              uint64_t v49 = v140;
              uint64_t v34 = v151;
            }
            ++v47;
            --v43;
            v44 -= v34;
            v46 -= v34;
            v48 += v34;
          }
          while (v47 < v35 + v43);
          size_t v19 = v131;
          uint64_t v2 = v132;
          uint64_t v33 = (void (*)(void, void, void))v135;
          uint64_t v13 = v150;
        }
      }
    }
    if (v35 < v13)
    {
      if (__OFSUB__(v35, v33)) {
        goto LABEL_137;
      }
      if (v35 - (uint64_t)v33 < v130) {
        break;
      }
    }
LABEL_55:
    if (v35 < (uint64_t)v33) {
      goto LABEL_132;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v146 = (char *)v35;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      size_t v19 = sub_243937E44(0, *((void *)v19 + 2) + 1, 1, v19);
    }
    unint64_t v72 = *((void *)v19 + 2);
    unint64_t v71 = *((void *)v19 + 3);
    unint64_t v21 = v72 + 1;
    if (v72 >= v71 >> 1) {
      size_t v19 = sub_243937E44((char *)(v71 > 1), v72 + 1, 1, v19);
    }
    *((void *)v19 + 2) = v21;
    uint64_t v73 = v19 + 32;
    uint64_t v74 = &v19[16 * v72 + 32];
    uint64_t v75 = v146;
    *(void *)uint64_t v74 = v33;
    *((void *)v74 + 1) = v75;
    if (v72)
    {
      while (1)
      {
        unint64_t v76 = v21 - 1;
        if (v21 >= 4)
        {
          uint64_t v81 = &v73[16 * v21];
          uint64_t v82 = *((void *)v81 - 8);
          uint64_t v83 = *((void *)v81 - 7);
          BOOL v87 = __OFSUB__(v83, v82);
          uint64_t v84 = v83 - v82;
          if (v87) {
            goto LABEL_121;
          }
          uint64_t v86 = *((void *)v81 - 6);
          uint64_t v85 = *((void *)v81 - 5);
          BOOL v87 = __OFSUB__(v85, v86);
          uint64_t v79 = v85 - v86;
          char v80 = v87;
          if (v87) {
            goto LABEL_122;
          }
          unint64_t v88 = v21 - 2;
          uint64_t v89 = &v73[16 * v21 - 32];
          uint64_t v91 = *(void *)v89;
          uint64_t v90 = *((void *)v89 + 1);
          BOOL v87 = __OFSUB__(v90, v91);
          uint64_t v92 = v90 - v91;
          if (v87) {
            goto LABEL_124;
          }
          BOOL v87 = __OFADD__(v79, v92);
          uint64_t v93 = v79 + v92;
          if (v87) {
            goto LABEL_127;
          }
          if (v93 >= v84)
          {
            uint64_t v111 = &v73[16 * v76];
            uint64_t v113 = *(void *)v111;
            uint64_t v112 = *((void *)v111 + 1);
            BOOL v87 = __OFSUB__(v112, v113);
            uint64_t v114 = v112 - v113;
            if (v87) {
              goto LABEL_131;
            }
            BOOL v104 = v79 < v114;
            goto LABEL_92;
          }
        }
        else
        {
          if (v21 != 3)
          {
            uint64_t v105 = *((void *)v19 + 4);
            uint64_t v106 = *((void *)v19 + 5);
            BOOL v87 = __OFSUB__(v106, v105);
            uint64_t v98 = v106 - v105;
            char v99 = v87;
            goto LABEL_86;
          }
          uint64_t v78 = *((void *)v19 + 4);
          uint64_t v77 = *((void *)v19 + 5);
          BOOL v87 = __OFSUB__(v77, v78);
          uint64_t v79 = v77 - v78;
          char v80 = v87;
        }
        if (v80) {
          goto LABEL_123;
        }
        unint64_t v88 = v21 - 2;
        uint64_t v94 = &v73[16 * v21 - 32];
        uint64_t v96 = *(void *)v94;
        uint64_t v95 = *((void *)v94 + 1);
        BOOL v97 = __OFSUB__(v95, v96);
        uint64_t v98 = v95 - v96;
        char v99 = v97;
        if (v97) {
          goto LABEL_126;
        }
        uint64_t v100 = &v73[16 * v76];
        uint64_t v102 = *(void *)v100;
        uint64_t v101 = *((void *)v100 + 1);
        BOOL v87 = __OFSUB__(v101, v102);
        uint64_t v103 = v101 - v102;
        if (v87) {
          goto LABEL_129;
        }
        if (__OFADD__(v98, v103)) {
          goto LABEL_130;
        }
        if (v98 + v103 >= v79)
        {
          BOOL v104 = v79 < v103;
LABEL_92:
          if (v104) {
            unint64_t v76 = v88;
          }
          goto LABEL_94;
        }
LABEL_86:
        if (v99) {
          goto LABEL_125;
        }
        uint64_t v107 = &v73[16 * v76];
        uint64_t v109 = *(void *)v107;
        uint64_t v108 = *((void *)v107 + 1);
        BOOL v87 = __OFSUB__(v108, v109);
        uint64_t v110 = v108 - v109;
        if (v87) {
          goto LABEL_128;
        }
        if (v110 < v98) {
          goto LABEL_14;
        }
LABEL_94:
        unint64_t v115 = v76 - 1;
        if (v76 - 1 >= v21)
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        uint64_t v116 = *a1;
        if (!*a1) {
          goto LABEL_143;
        }
        char v117 = v19;
        uint64_t v118 = &v73[16 * v115];
        uint64_t v119 = *(void *)v118;
        unint64_t v120 = &v73[16 * v76];
        uint64_t v121 = *((void *)v120 + 1);
        sub_243778994(v116 + v137[9] * *(void *)v118, v116 + v137[9] * *(void *)v120, v116 + v137[9] * v121, v136);
        if (v2) {
          goto LABEL_115;
        }
        if (v121 < v119) {
          goto LABEL_118;
        }
        if (v76 > *((void *)v117 + 2)) {
          goto LABEL_119;
        }
        *(void *)uint64_t v118 = v119;
        *(void *)&v73[16 * v115 + 8] = v121;
        unint64_t v122 = *((void *)v117 + 2);
        if (v76 >= v122) {
          goto LABEL_120;
        }
        size_t v19 = v117;
        unint64_t v21 = v122 - 1;
        memmove(&v73[16 * v76], v120 + 16, 16 * (v122 - 1 - v76));
        *((void *)v117 + 2) = v122 - 1;
        a1 = v148;
        if (v122 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v21 = 1;
LABEL_14:
    uint64_t v13 = a1[1];
    BOOL v20 = v146;
    if ((uint64_t)v146 >= v13) {
      goto LABEL_104;
    }
  }
  if (__OFADD__(v33, v130)) {
    goto LABEL_140;
  }
  if ((uint64_t)v33 + v130 >= v13) {
    uint64_t v52 = v13;
  }
  else {
    uint64_t v52 = (uint64_t)v33 + v130;
  }
  if (v52 >= (uint64_t)v33)
  {
    if (v35 != v52)
    {
      uint64_t v131 = v19;
      uint64_t v132 = v2;
      uint64_t v53 = v137[9];
      long long v138 = (void (*)(char *, uint64_t, uint64_t))v137[2];
      uint64_t v139 = v53;
      uint64_t v54 = v53 * (v35 - 1);
      uint64_t v55 = v35 * v53;
      uint64_t v56 = v147;
      uint64_t v133 = v52;
      do
      {
        uint64_t v58 = 0;
        uint64_t v146 = (char *)v35;
        uint64_t v140 = v55;
        uint64_t v141 = v54;
        while (1)
        {
          uint64_t v59 = *a1;
          uint64_t v150 = v55 + v58;
          uint64_t v151 = (uint64_t)v33;
          uint64_t v60 = v55 + v58 + v59;
          uint64_t v61 = v145;
          uint64_t v62 = v138;
          v138(v145, v60, v56);
          uint64_t v63 = v54 + v58 + v59;
          uint64_t v64 = a1;
          uint64_t v65 = v144;
          v62(v144, v63, v56);
          LOBYTE(v62) = sub_243957360();
          uint64_t v66 = *v142;
          (*v142)(v65, v56);
          v66(v61, v56);
          if ((v62 & 1) == 0) {
            break;
          }
          uint64_t v67 = *v64;
          if (!*v64) {
            goto LABEL_142;
          }
          uint64_t v55 = v140;
          uint64_t v54 = v141;
          uint64_t v68 = (char *)(v67 + v141 + v58);
          uint64_t v69 = *v152;
          uint64_t v56 = v147;
          (*v152)(v149, v67 + v140 + v58, v147);
          swift_arrayInitWithTakeFrontToBack();
          v69(v68, (uint64_t)v149, v56);
          v58 -= v139;
          uint64_t v33 = (void (*)(void, void, void))(v151 + 1);
          uint64_t v57 = v146;
          a1 = v148;
          if (v146 == (char *)(v151 + 1)) {
            goto LABEL_48;
          }
        }
        uint64_t v57 = v146;
        uint64_t v56 = v147;
        a1 = v64;
        uint64_t v55 = v140;
        uint64_t v54 = v141;
LABEL_48:
        uint64_t v35 = (uint64_t)(v57 + 1);
        v54 += v139;
        v55 += v139;
        uint64_t v33 = (void (*)(void, void, void))v135;
      }
      while (v35 != v133);
      uint64_t v35 = v133;
      size_t v19 = v131;
      uint64_t v2 = v132;
    }
    goto LABEL_55;
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  uint64_t result = sub_243959530();
  __break(1u);
  return result;
}

uint64_t sub_2437786A8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v33 = a1;
  uint64_t v7 = sub_243957400();
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v43 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v39 = (char *)&v31 - v11;
  uint64_t result = MEMORY[0x270FA5388](v10);
  uint64_t v38 = (char *)&v31 - v14;
  uint64_t v41 = a3;
  uint64_t v32 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void (**)(void, void, void))(v13 + 16);
    uint64_t v15 = v13 + 16;
    uint64_t v17 = *(void *)(v15 + 56);
    uint64_t v34 = (uint64_t (**)(char *, uint64_t))(v15 - 8);
    uint64_t v35 = (void (*)(char *, uint64_t, uint64_t))v16;
    uint64_t v36 = a4;
    uint64_t v37 = v15;
    int v42 = (uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 16);
    uint64_t v46 = v17 * (v41 - 1);
    uint64_t v40 = v17;
    uint64_t v45 = v17 * v41;
LABEL_5:
    uint64_t v18 = 0;
    uint64_t v44 = v33;
    while (1)
    {
      uint64_t v19 = *a4;
      uint64_t v20 = v45 + v18 + *a4;
      unint64_t v21 = v38;
      unint64_t v22 = v35;
      v35(v38, v20, v7);
      uint64_t v23 = v7;
      uint64_t v24 = v39;
      v22(v39, v46 + v18 + v19, v23);
      LOBYTE(v19) = sub_243957360();
      uint64_t v25 = *v34;
      uint64_t v26 = v24;
      uint64_t v7 = v23;
      (*v34)(v26, v23);
      uint64_t v27 = v21;
      a4 = v36;
      uint64_t result = v25(v27, v23);
      if ((v19 & 1) == 0)
      {
LABEL_4:
        v46 += v40;
        v45 += v40;
        if (++v41 == v32) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v28 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v29 = (char *)(v28 + v46 + v18);
      uint64_t v30 = *v42;
      (*v42)(v43, v28 + v45 + v18, v23);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = v30(v29, (uint64_t)v43, v23);
      v18 -= v40;
      if (v41 == ++v44) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_243778994(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v61 = sub_243957400();
  uint64_t v8 = *(void *)(v61 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v61);
  uint64_t v60 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v59 = (char *)&v51 - v11;
  uint64_t v13 = *(void *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_71;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_72;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v13;
  unint64_t v64 = a1;
  unint64_t v63 = a4;
  uint64_t v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v34 = a4 + v18;
      unint64_t v62 = a4 + v18;
      unint64_t v64 = a2;
      if (v18 >= 1 && a1 < a2)
      {
        uint64_t v36 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
        uint64_t v58 = v8 + 16;
        uint64_t v54 = (void (**)(char *, uint64_t))(v8 + 8);
        uint64_t v55 = v36;
        uint64_t v37 = -v13;
        unint64_t v52 = a4;
        uint64_t v53 = -v13;
        uint64_t v56 = (void (*)(void, void, void))a1;
        uint64_t v38 = v61;
        do
        {
          unint64_t v57 = a3 + v37;
          unint64_t v39 = a3;
          uint64_t v40 = v59;
          uint64_t v41 = v55;
          v55(v59, v34 + v37, v38);
          unint64_t v42 = a2 + v37;
          uint64_t v43 = v60;
          v41(v60, v42, v38);
          LOBYTE(v41) = sub_243957360();
          uint64_t v44 = *v54;
          (*v54)(v43, v38);
          v44(v40, v38);
          if (v41)
          {
            uint64_t v37 = v53;
            a3 = v57;
            if (v39 < a2 || v57 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v46 = v52;
              uint64_t v47 = v56;
            }
            else
            {
              BOOL v45 = v39 == a2;
              unint64_t v46 = v52;
              uint64_t v47 = v56;
              if (!v45) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v64 += v37;
          }
          else
          {
            unint64_t v48 = v62;
            v62 += v53;
            a3 = v57;
            BOOL v49 = v39 < v48 || v57 >= v48;
            uint64_t v37 = v53;
            if (v49)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v42 = a2;
              unint64_t v46 = v52;
              uint64_t v47 = v56;
            }
            else
            {
              uint64_t v47 = v56;
              if (v39 != v48) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v42 = a2;
              unint64_t v46 = v52;
            }
          }
          unint64_t v34 = v62;
          if (v62 <= v46) {
            break;
          }
          a2 = v42;
        }
        while (v42 > (unint64_t)v47);
      }
      goto LABEL_69;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v57 = a4 + v17;
    unint64_t v62 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      uint64_t v20 = *(void (**)(void, void, void))(v8 + 16);
      uint64_t v58 = v8 + 16;
      uint64_t v55 = (void (*)(char *, unint64_t, uint64_t))(v8 + 8);
      uint64_t v56 = v20;
      do
      {
        uint64_t v21 = v13;
        unint64_t v22 = a3;
        uint64_t v23 = v59;
        unint64_t v24 = a4;
        uint64_t v25 = v61;
        uint64_t v26 = (void (*)(char *, unint64_t, uint64_t))v56;
        v56(v59, a2, v61);
        uint64_t v27 = v60;
        v26(v60, v24, v25);
        LOBYTE(v24) = sub_243957360();
        uint64_t v28 = *(void (**)(char *, uint64_t))v55;
        (*(void (**)(char *, uint64_t))v55)(v27, v25);
        v28(v23, v25);
        unint64_t v29 = v64;
        if (v24)
        {
          uint64_t v13 = v21;
          unint64_t v30 = a2 + v21;
          if (v64 < a2 || v64 >= v30)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v22;
          }
          else
          {
            a3 = v22;
            if (v64 == a2) {
              unint64_t v29 = a2;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        else
        {
          uint64_t v13 = v21;
          unint64_t v32 = v63 + v21;
          if (v64 < v63 || v64 >= v32)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v22;
          }
          else
          {
            a3 = v22;
            if (v64 != v63) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v63 = v32;
          unint64_t v30 = a2;
        }
        unint64_t v64 = v29 + v13;
        a4 = v63;
        if (v63 >= v57) {
          break;
        }
        a2 = v30;
      }
      while (v30 < a3);
    }
LABEL_69:
    sub_243937F58(&v64, &v63, (uint64_t *)&v62);
    return 1;
  }
LABEL_73:
  uint64_t result = sub_2439595A0();
  __break(1u);
  return result;
}

void *sub_243778F48()
{
  return sub_243778F68(MEMORY[0x263F07508], &qword_268D9F940);
}

void *sub_243778F68(uint64_t (*a1)(void), uint64_t *a2)
{
  uint64_t v4 = v2;
  uint64_t v5 = a1(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v8 = (char *)&v25 - v7;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v9 = *v2;
  uint64_t v10 = sub_2439592E0();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_30:
    *uint64_t v4 = v11;
    return result;
  }
  uint64_t result = (void *)(v10 + 56);
  unint64_t v13 = (unint64_t)((1 << *(unsigned char *)(v11 + 32)) + 63) >> 6;
  uint64_t v26 = v4;
  uint64_t v27 = (const void *)(v9 + 56);
  if (v11 != v9 || (unint64_t)result >= v9 + 56 + 8 * v13) {
    uint64_t result = memmove(result, v27, 8 * v13);
  }
  int64_t v15 = 0;
  *(void *)(v11 + 16) = *(void *)(v9 + 16);
  uint64_t v16 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & *(void *)(v9 + 56);
  int64_t v28 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      unint64_t v19 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v20 = v19 | (v15 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v22 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v22);
    ++v15;
    if (!v23)
    {
      int64_t v15 = v22 + 1;
      if (v22 + 1 >= v28) {
        goto LABEL_28;
      }
      unint64_t v23 = *((void *)v27 + v15);
      if (!v23)
      {
        int64_t v15 = v22 + 2;
        if (v22 + 2 >= v28) {
          goto LABEL_28;
        }
        unint64_t v23 = *((void *)v27 + v15);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v18 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v15 << 6);
LABEL_12:
    unint64_t v21 = *(void *)(v6 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(void *)(v9 + 48) + v21, v5);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(void *)(v11 + 48) + v21, v8, v5);
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v28)
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t v4 = v26;
    goto LABEL_30;
  }
  unint64_t v23 = *((void *)v27 + v24);
  if (v23)
  {
    int64_t v15 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v15 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v15);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_243779218()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268D9D5A8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2439592E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    unint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2437793CC(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_2439592E0();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v2 = v5;
    return result;
  }
  uint64_t result = (void *)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    uint64_t result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v7 + 8 * v10);
      if (!v18)
      {
        int64_t v10 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v7 + 8 * v10);
        if (!v18) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v5 + 48) + v16) = *(unsigned char *)(*(void *)(v3 + 48) + v16);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v7 + 8 * v19);
  if (v18)
  {
    int64_t v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_243779558()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F950);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2439592E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v13) {
      goto LABEL_28;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24)
      {
        int64_t v9 = v23 + 2;
        if (v23 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v24 = *(void *)(v6 + 8 * v9);
        if (!v24) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 56 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    uint64_t v18 = *(void *)(v4 + 48) + v16;
    long long v19 = *(_OWORD *)(v17 + 8);
    long long v20 = *(_OWORD *)(v17 + 24);
    long long v21 = *(_OWORD *)(v17 + 40);
    *(void *)uint64_t v18 = *(void *)v17;
    *(_OWORD *)(v18 + 8) = v19;
    *(_OWORD *)(v18 + 24) = v20;
    *(_OWORD *)(v18 + 40) = v21;
    id v22 = *((id *)&v21 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 3;
  if (v25 >= v13) {
    goto LABEL_28;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_243779758()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for MapsSuggestionsOrderPickup(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F8E0);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_2439592E0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
LABEL_25:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t result = (void *)(v7 + 56);
  uint64_t v10 = v6 + 56;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v10 + 8 * v11) {
    uint64_t result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  }
  int64_t v12 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v6 + 56);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_9;
    }
    int64_t v20 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v16) {
      goto LABEL_25;
    }
    unint64_t v21 = *(void *)(v10 + 8 * v20);
    ++v12;
    if (!v21)
    {
      int64_t v12 = v20 + 1;
      if (v20 + 1 >= v16) {
        goto LABEL_25;
      }
      unint64_t v21 = *(void *)(v10 + 8 * v12);
      if (!v21)
      {
        int64_t v12 = v20 + 2;
        if (v20 + 2 >= v16) {
          goto LABEL_25;
        }
        unint64_t v21 = *(void *)(v10 + 8 * v12);
        if (!v21) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v15 = (v21 - 1) & v21;
    unint64_t v18 = __clz(__rbit64(v21)) + (v12 << 6);
LABEL_9:
    unint64_t v19 = *(void *)(v3 + 72) * v18;
    sub_2433FA640(*(void *)(v6 + 48) + v19, (uint64_t)v5);
    uint64_t result = (void *)sub_24377F1E4((uint64_t)v5, *(void *)(v8 + 48) + v19, type metadata accessor for MapsSuggestionsOrderPickup);
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v16) {
    goto LABEL_25;
  }
  unint64_t v21 = *(void *)(v10 + 8 * v22);
  if (v21)
  {
    int64_t v12 = v22;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v12 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v12 >= v16) {
      goto LABEL_25;
    }
    unint64_t v21 = *(void *)(v10 + 8 * v12);
    ++v22;
    if (v21) {
      goto LABEL_24;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_2437799A8(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_2439592E0();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    uint64_t *v2 = v5;
    return result;
  }
  id result = (id)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20)
      {
        int64_t v10 = v19 + 2;
        if (v19 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v20 = *(void *)(v7 + 8 * v10);
        if (!v20) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    unint64_t v18 = *(void **)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v14) {
    goto LABEL_28;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_243779B4C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F8F0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2439592E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_243779CE0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_2439562C0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F9A0);
  uint64_t v7 = sub_2439592F0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  unint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_24377F19C(&qword_268D98230, MEMORY[0x263F06038]);
    uint64_t result = sub_2439581C0();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_24377A090()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_243957490();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F940);
  uint64_t v7 = sub_2439592F0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  unint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_24377F19C(&qword_268D9D500, MEMORY[0x263F07508]);
    uint64_t result = sub_2439581C0();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_24377A440()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_243957400();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F9E0);
  uint64_t v7 = sub_2439592F0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  unint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_24377F19C((unint64_t *)&qword_268D974C8, MEMORY[0x263F07490]);
    uint64_t result = sub_2439581C0();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_24377A7F0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268D9D5A8);
  uint64_t v3 = sub_2439592F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_243959AD0();
    swift_bridgeObjectRetain();
    sub_2439581F0();
    uint64_t result = sub_243959B40();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *uint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_24377AAA0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F9D8);
  uint64_t result = sub_2439592F0();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
    sub_243959AD0();
    sub_243959AE0();
    uint64_t result = sub_243959B40();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_24377AD1C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C5B98);
  uint64_t v3 = sub_2439592F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    char v19 = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    sub_243959AD0();
    sub_2439581F0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_243959B40();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(unsigned char *)(*(void *)(v4 + 48) + v13) = v19;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_24377AFE4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F950);
  uint64_t v3 = sub_2439592F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_45:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v37 = v1;
  uint64_t v38 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v39 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  uint64_t v40 = v2;
  uint64_t v41 = v4;
  while (1)
  {
    if (v7)
    {
      uint64_t v42 = (v7 - 1) & v7;
      int64_t v43 = v10;
      unint64_t v13 = __clz(__rbit64(v7)) | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
    if (v14 >= v39) {
      goto LABEL_43;
    }
    unint64_t v15 = *(void *)(v38 + 8 * v14);
    int64_t v16 = v10 + 1;
    if (!v15)
    {
      int64_t v16 = v10 + 2;
      if (v10 + 2 >= v39) {
        goto LABEL_43;
      }
      unint64_t v15 = *(void *)(v38 + 8 * v16);
      if (!v15)
      {
        int64_t v16 = v10 + 3;
        if (v10 + 3 >= v39) {
          goto LABEL_43;
        }
        unint64_t v15 = *(void *)(v38 + 8 * v16);
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    uint64_t v42 = (v15 - 1) & v15;
    int64_t v43 = v16;
    unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
LABEL_24:
    int64_t v18 = (uint64_t *)(*(void *)(v2 + 48) + 56 * v13);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    uint64_t v21 = v18[2];
    uint64_t v22 = v18[3];
    uint64_t v23 = v18[4];
    uint64_t v24 = v18[5];
    BOOL v25 = (void *)v18[6];
    sub_243959AD0();
    if (v19)
    {
      sub_243959AF0();
      id v26 = v25;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v27 = v20;
      sub_2439581F0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v27 = v20;
      sub_243959AF0();
      id v28 = v25;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    if (v22)
    {
      sub_243959AF0();
      swift_bridgeObjectRetain();
      sub_2439581F0();
      swift_bridgeObjectRelease();
      if (v24) {
        goto LABEL_29;
      }
    }
    else
    {
      sub_243959AF0();
      if (v24)
      {
LABEL_29:
        sub_243959AF0();
        swift_bridgeObjectRetain();
        sub_2439581F0();
        swift_bridgeObjectRelease();
        if (v25) {
          goto LABEL_30;
        }
        goto LABEL_33;
      }
    }
    sub_243959AF0();
    if (v25)
    {
LABEL_30:
      sub_243959AF0();
      id v29 = v25;
      sub_243958E90();

      goto LABEL_34;
    }
LABEL_33:
    sub_243959AF0();
LABEL_34:
    uint64_t result = sub_243959B40();
    uint64_t v4 = v41;
    uint64_t v30 = -1 << *(unsigned char *)(v41 + 32);
    unint64_t v31 = result & ~v30;
    unint64_t v32 = v31 >> 6;
    if (((-1 << v31) & ~*(void *)(v8 + 8 * (v31 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v31) & ~*(void *)(v8 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v33 = 0;
      unint64_t v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        BOOL v35 = v32 == v34;
        if (v32 == v34) {
          unint64_t v32 = 0;
        }
        v33 |= v35;
        uint64_t v36 = *(void *)(v8 + 8 * v32);
      }
      while (v36 == -1);
      unint64_t v11 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    int64_t v12 = (void *)(*(void *)(v41 + 48) + 56 * v11);
    *int64_t v12 = v27;
    v12[1] = v19;
    void v12[2] = v21;
    v12[3] = v22;
    void v12[4] = v23;
    v12[5] = v24;
    v12[6] = v25;
    ++*(void *)(v41 + 16);
    uint64_t v2 = v40;
    unint64_t v7 = v42;
    int64_t v10 = v43;
  }
  uint64_t v17 = v10 + 4;
  if (v10 + 4 >= v39)
  {
LABEL_43:
    uint64_t result = swift_release_n();
    uint64_t v1 = v37;
    goto LABEL_45;
  }
  unint64_t v15 = *(void *)(v38 + 8 * v17);
  if (v15)
  {
    int64_t v16 = v10 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v16 >= v39) {
      goto LABEL_43;
    }
    unint64_t v15 = *(void *)(v38 + 8 * v16);
    ++v17;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_47:
  __break(1u);
  return result;
}

uint64_t sub_24377B3F8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for MapsSuggestionsOrderPickup(0);
  uint64_t v34 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F8E0);
  uint64_t v6 = sub_2439592F0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v7;
    return result;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v9 = *(void *)(v5 + 56);
  uint64_t v30 = v0;
  uint64_t v31 = v5 + 56;
  if (v8 < 64) {
    uint64_t v10 = ~(-1 << v8);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & v9;
  int64_t v32 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 56;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v11)
    {
      unint64_t v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v32) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v31 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v32) {
        goto LABEL_33;
      }
      unint64_t v19 = *(void *)(v31 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v32) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v31 + 8 * v14);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v11 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    uint64_t v21 = *(void *)(v5 + 48);
    uint64_t v22 = *(void *)(v34 + 72);
    sub_2433FA640(v21 + v22 * v17, (uint64_t)v4);
    sub_243959AD0();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2439581F0();
    sub_2439581F0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_2439581F0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_243959B40();
    uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v15 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t result = sub_24377F1E4((uint64_t)v4, *(void *)(v7 + 48) + v15 * v22, type metadata accessor for MapsSuggestionsOrderPickup);
    ++*(void *)(v7 + 16);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v32)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v30;
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v31 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v32) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v31 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_24377B7B8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v5 = sub_2439592F0();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v3 = v6;
    return result;
  }
  uint64_t v29 = v2;
  uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v8 = v4 + 56;
  if (v7 < 64) {
    uint64_t v9 = ~(-1 << v7);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v4 + 56);
  int64_t v11 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v12 = v5 + 56;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v19 = *(void *)(v8 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v8 + 8 * v14);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    id v21 = *(id *)(*(void *)(v4 + 48) + 8 * v17);
    uint64_t result = sub_243958E70();
    uint64_t v22 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v6 + 48) + 8 * v15) = v21;
    ++*(void *)(v6 + 16);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v11)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v3 = v29;
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v8 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_24377BA30()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F8F0);
  uint64_t result = sub_2439592F0();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
    sub_243959AD0();
    sub_243959AE0();
    uint64_t result = sub_243959B40();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_24377BCAC(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_2439562C0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388]();
  unint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_2437D4848();
  }
  else
  {
    if (v11 > v10)
    {
      sub_243778F68(MEMORY[0x263F06038], &qword_268D9F9A0);
      goto LABEL_12;
    }
    sub_243779CE0();
  }
  uint64_t v12 = *v3;
  sub_24377F19C(&qword_268D98230, MEMORY[0x263F06038]);
  uint64_t v13 = sub_2439581C0();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    int64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_24377F19C(&qword_268D96F58, MEMORY[0x263F06038]);
      char v21 = sub_243958270();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_2439599F0();
  __break(1u);
  return result;
}

uint64_t sub_24377BF68(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_243957490();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_2437D4C44();
  }
  else
  {
    if (v11 > v10)
    {
      sub_243778F68(MEMORY[0x263F07508], &qword_268D9F940);
      goto LABEL_12;
    }
    sub_24377A090();
  }
  uint64_t v12 = *v3;
  sub_24377F19C(&qword_268D9D500, MEMORY[0x263F07508]);
  uint64_t v13 = sub_2439581C0();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    int64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_24377F19C(&qword_268D96FF0, MEMORY[0x263F07508]);
      char v21 = sub_243958270();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_2439599F0();
  __break(1u);
  return result;
}

uint64_t sub_24377C224(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_243957400();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_2437D5040();
  }
  else
  {
    if (v11 > v10)
    {
      sub_243778F68(MEMORY[0x263F07490], &qword_268D9F9E0);
      goto LABEL_12;
    }
    sub_24377A440();
  }
  uint64_t v12 = *v3;
  sub_24377F19C((unint64_t *)&qword_268D974C8, MEMORY[0x263F07490]);
  uint64_t v13 = sub_2439581C0();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    int64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_24377F19C((unint64_t *)&unk_268DA2730, MEMORY[0x263F07490]);
      char v21 = sub_243958270();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_2439599F0();
  __break(1u);
  return result;
}

unint64_t sub_24377C4E4()
{
  unint64_t result = qword_268D9F8C0;
  if (!qword_268D9F8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F8C0);
  }
  return result;
}

unint64_t sub_24377C53C()
{
  unint64_t result = qword_268D9F8C8;
  if (!qword_268D9F8C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9F8C8);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for BankConnectLinkingDateQueryCalculator(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    uint64_t v8 = *(int *)(a3 + 20);
    unint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_2439576F0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return v4;
}

uint64_t destroy for BankConnectLinkingDateQueryCalculator(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_0(a1);
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_2439576F0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for BankConnectLinkingDateQueryCalculator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_2439576F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t *assignWithCopy for BankConnectLinkingDateQueryCalculator(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_2439576F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for BankConnectLinkingDateQueryCalculator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_2439576F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for BankConnectLinkingDateQueryCalculator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_destroy_boxed_opaque_existential_0(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_2439576F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for BankConnectLinkingDateQueryCalculator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24377C964);
}

uint64_t sub_24377C964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_2439576F0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for BankConnectLinkingDateQueryCalculator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24377CA28);
}

uint64_t sub_24377CA28(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_2439576F0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_24377CAD0()
{
  uint64_t result = sub_2439576F0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for BankConnectLinkingDateQueryCalculator.Error(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24377CC04);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for BankConnectLinkingDateQueryCalculator.Error()
{
  return &type metadata for BankConnectLinkingDateQueryCalculator.Error;
}

unsigned char *storeEnumTagSinglePayload for BankConnectLinkingDateQueryCalculator.Calculation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24377CD08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BankConnectLinkingDateQueryCalculator.Calculation()
{
  return &type metadata for BankConnectLinkingDateQueryCalculator.Calculation;
}

uint64_t sub_24377CD40(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_2437D543C();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_243779218();
      goto LABEL_22;
    }
    sub_24377A7F0();
  }
  uint64_t v11 = *v4;
  sub_243959AD0();
  sub_2439581F0();
  uint64_t result = sub_243959B40();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_243959940(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_2439599F0();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_243959940();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  char v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *char v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_24377CEDC(uint64_t result, unint64_t a2, char a3)
{
  int v5 = result & 1;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_2437D571C();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_2437793CC(&qword_268D9F9D8);
      goto LABEL_14;
    }
    sub_24377AAA0();
  }
  uint64_t v8 = *v3;
  sub_243959AD0();
  sub_243959AE0();
  uint64_t result = sub_243959B40();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (((v5 == 0) ^ *(unsigned __int8 *)(v10 + a2)))
    {
LABEL_13:
      uint64_t result = sub_2439599F0();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (((v5 == 0) ^ *(unsigned __int8 *)(v10 + a2))) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v12 + 48) + a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

void sub_24377D054(uint64_t a1, unint64_t a2, char a3)
{
}

void sub_24377D088(uint64_t a1, unint64_t a2, char a3)
{
}

void sub_24377D0BC(uint64_t a1, unint64_t a2, char a3, void (*a4)(uint64_t), void (*a5)(void), uint64_t *a6)
{
  unint64_t v10 = *(void *)(*v6 + 16);
  unint64_t v11 = *(void *)(*v6 + 24);
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v12 = v10 + 1;
  if (a3)
  {
    a4(v12);
  }
  else
  {
    if (v11 > v10)
    {
      sub_2437799A8(a6);
      goto LABEL_14;
    }
    sub_24377B7B8(v12, a6);
  }
  uint64_t v13 = *v6;
  uint64_t v14 = sub_243958E70();
  uint64_t v15 = -1 << *(unsigned char *)(v13 + 32);
  a2 = v14 & ~v15;
  if ((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    a5(0);
    id v16 = *(id *)(*(void *)(v13 + 48) + 8 * a2);
    char v17 = sub_243958E80();

    if (v17)
    {
LABEL_13:
      sub_2439599F0();
      __break(1u);
    }
    else
    {
      uint64_t v18 = ~v15;
      while (1)
      {
        a2 = (a2 + 1) & v18;
        if (((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v19 = *(id *)(*(void *)(v13 + 48) + 8 * a2);
        char v20 = sub_243958E80();

        if (v20) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v21 = *v6;
  *(void *)(*v6 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v21 + 48) + 8 * a2) = a1;
  uint64_t v22 = *(void *)(v21 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v21 + 16) = v24;
  }
}

void sub_24377D248(uint64_t a1, unint64_t a2, char a3)
{
}

void sub_24377D27C(uint64_t a1, unint64_t a2, char a3)
{
}

uint64_t sub_24377D2B0(uint64_t result, unint64_t a2, char a3)
{
  unsigned int v4 = v3;
  int v6 = result & 1;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  char v19 = result & 1;
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_19;
  }
  if (a3)
  {
    sub_2437D5A04();
  }
  else
  {
    if (v8 > v7)
    {
      uint64_t result = (uint64_t)sub_2437793CC(&qword_26B0C5B98);
      goto LABEL_19;
    }
    sub_24377AD1C();
  }
  uint64_t v9 = *v3;
  sub_243959AD0();
  if (v6) {
    unint64_t v10 = 0xEE00617461642D6CLL;
  }
  else {
    unint64_t v10 = 0xED0000617461446CLL;
  }
  sub_2439581F0();
  swift_bridgeObjectRelease();
  uint64_t result = sub_243959B40();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  a2 = result & ~v11;
  if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v12 = ~v11;
    do
    {
      unint64_t v13 = *(unsigned char *)(*(void *)(v9 + 48) + a2) ? 0xEE00617461642D6CLL : 0xED0000617461446CLL;
      if (v13 == v10) {
        goto LABEL_22;
      }
      char v14 = sub_243959940();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v14) {
        goto LABEL_23;
      }
      a2 = (a2 + 1) & v12;
    }
    while (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_19:
  uint64_t v15 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v15 + 48) + a2) = v19;
  uint64_t v16 = *(void *)(v15 + 16);
  BOOL v17 = __OFADD__(v16, 1);
  uint64_t v18 = v16 + 1;
  if (!v17)
  {
    *(void *)(v15 + 16) = v18;
    return result;
  }
  __break(1u);
LABEL_22:
  swift_bridgeObjectRelease_n();
LABEL_23:
  uint64_t result = sub_2439599F0();
  __break(1u);
  return result;
}

void sub_24377D4B8(void *a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_43;
  }
  if (a3)
  {
    sub_2437D5D00();
  }
  else
  {
    if (v7 > v6)
    {
      sub_243779558();
      goto LABEL_43;
    }
    sub_24377AFE4();
  }
  uint64_t v8 = *v3;
  sub_243959AD0();
  Order.ShippingRecipient.hash(into:)();
  uint64_t v9 = sub_243959B40();
  uint64_t v10 = v8;
  uint64_t v11 = -1 << *(unsigned char *)(v8 + 32);
  a2 = v9 & ~v11;
  uint64_t v12 = v8 + 56;
  if ((*(void *)(v12 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v13 = ~v11;
    uint64_t v14 = a1[1];
    uint64_t v47 = *a1;
    uint64_t v15 = a1[3];
    uint64_t v43 = a1[2];
    uint64_t v39 = a1[4];
    uint64_t v44 = a1[5];
    uint64_t v45 = v10;
    uint64_t v40 = (void *)a1[6];
    uint64_t v46 = v15;
    do
    {
      uint64_t v16 = (void *)(*(void *)(v10 + 48) + 56 * a2);
      uint64_t v18 = v16[1];
      uint64_t v17 = v16[2];
      uint64_t v20 = v16[3];
      uint64_t v19 = v16[4];
      uint64_t v22 = v16[5];
      uint64_t v21 = (void *)v16[6];
      if (v18)
      {
        if (!v14) {
          goto LABEL_11;
        }
        if (*v16 != v47 || v18 != v14)
        {
          char v24 = sub_243959940();
          uint64_t v10 = v45;
          uint64_t v15 = v46;
          if ((v24 & 1) == 0) {
            goto LABEL_11;
          }
        }
      }
      else if (v14)
      {
        goto LABEL_11;
      }
      if (v20)
      {
        if (!v15) {
          goto LABEL_11;
        }
        if (v17 != v43 || v20 != v15)
        {
          char v26 = sub_243959940();
          uint64_t v10 = v45;
          uint64_t v15 = v46;
          if ((v26 & 1) == 0) {
            goto LABEL_11;
          }
        }
      }
      else if (v15)
      {
        goto LABEL_11;
      }
      if (v22)
      {
        if (!v44) {
          goto LABEL_11;
        }
        if (v19 != v39 || v22 != v44)
        {
          char v28 = sub_243959940();
          uint64_t v10 = v45;
          uint64_t v15 = v46;
          if ((v28 & 1) == 0) {
            goto LABEL_11;
          }
        }
      }
      else if (v44)
      {
        goto LABEL_11;
      }
      if (v21)
      {
        if (v40)
        {
          sub_24337C218(0, &qword_26B0C8EC8);
          swift_bridgeObjectRetain();
          id v29 = v21;
          id v30 = v40;
          id v31 = v29;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v32 = sub_243958E80();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          uint64_t v10 = v45;
          uint64_t v15 = v46;
          if (v32)
          {
LABEL_42:
            sub_2439599F0();
            __break(1u);
            break;
          }
        }
      }
      else if (!v40)
      {
        goto LABEL_42;
      }
LABEL_11:
      a2 = (a2 + 1) & v13;
    }
    while (((*(void *)(v12 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_43:
  uint64_t v33 = *v41;
  *(void *)(*v41 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t v34 = *(void *)(v33 + 48) + 56 * a2;
  long long v35 = *((_OWORD *)a1 + 1);
  *(_OWORD *)uint64_t v34 = *(_OWORD *)a1;
  *(_OWORD *)(v34 + 16) = v35;
  *(_OWORD *)(v34 + 32) = *((_OWORD *)a1 + 2);
  *(void *)(v34 + 48) = a1[6];
  uint64_t v36 = *(void *)(v33 + 16);
  BOOL v37 = __OFADD__(v36, 1);
  uint64_t v38 = v36 + 1;
  if (v37) {
    __break(1u);
  }
  else {
    *(void *)(v33 + 16) = v38;
  }
}

void sub_24377D7FC(uint64_t a1, unint64_t a2, char a3)
{
}

uint64_t sub_24377D830(void *a1, unint64_t a2, char a3)
{
  unsigned int v4 = v3;
  uint64_t v8 = type metadata accessor for MapsSuggestionsOrderPickup(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (uint64_t *)((char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v12 = *(void *)(*v4 + 16);
  unint64_t v13 = *(void *)(*v4 + 24);
  if (v13 > v12 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_2437D612C();
  }
  else
  {
    if (v13 > v12)
    {
      sub_243779758();
      goto LABEL_12;
    }
    sub_24377B3F8();
  }
  uint64_t v14 = *v4;
  sub_243959AD0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2439581F0();
  sub_2439581F0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2439581F0();
  swift_bridgeObjectRelease();
  uint64_t v15 = sub_243959B40();
  uint64_t v16 = -1 << *(unsigned char *)(v14 + 32);
  a2 = v15 & ~v16;
  if ((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v25 = v8;
    uint64_t v17 = ~v16;
    uint64_t v18 = *(void *)(v9 + 72);
    do
    {
      sub_2433FA640(*(void *)(v14 + 48) + v18 * a2, (uint64_t)v11);
      char v19 = _s10FinanceKit26MapsSuggestionsOrderPickupV2eeoiySbAC_ACtFZ_0(v11, a1);
      sub_24377F24C((uint64_t)v11, type metadata accessor for MapsSuggestionsOrderPickup);
      if (v19) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v17;
    }
    while (((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v20 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_24377F1E4((uint64_t)a1, *(void *)(v20 + 48) + *(void *)(v9 + 72) * a2, type metadata accessor for MapsSuggestionsOrderPickup);
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (!v23)
  {
    *(void *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_2439599F0();
  __break(1u);
  return result;
}

void sub_24377DAB8(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v8 = v6 + 1;
  if (a3)
  {
    sub_2437D6520(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_2437799A8(&qword_268D9B620);
      goto LABEL_14;
    }
    sub_24377B7B8(v8, &qword_268D9B620);
  }
  uint64_t v9 = *v3;
  uint64_t v10 = sub_243958E70();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  a2 = v10 & ~v11;
  if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_24337C218(0, (unint64_t *)&qword_268D99970);
    id v12 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
    char v13 = sub_243958E80();

    if (v13)
    {
LABEL_13:
      sub_2439599F0();
      __break(1u);
    }
    else
    {
      uint64_t v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v15 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
        char v16 = sub_243958E80();

        if (v16) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v17 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v17 + 48) + 8 * a2) = a1;
  uint64_t v18 = *(void *)(v17 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19) {
    __break(1u);
  }
  else {
    *(void *)(v17 + 16) = v20;
  }
}

void sub_24377DC58(uint64_t a1, unint64_t a2, char a3)
{
}

void sub_24377DC8C(uint64_t a1, unint64_t a2, char a3)
{
}

void sub_24377DCC0(uint64_t a1, unint64_t a2, char a3)
{
}

void sub_24377DCF4(uint64_t a1, unint64_t a2, char a3)
{
}

void sub_24377DD28(uint64_t a1, unint64_t a2, char a3)
{
}

void sub_24377DD5C(uint64_t a1, unint64_t a2, char a3)
{
}

uint64_t sub_24377DD90(uint64_t result, unint64_t a2, char a3)
{
  int v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_2437D6810();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_243779B4C();
      goto LABEL_14;
    }
    sub_24377BA30();
  }
  uint64_t v8 = *v3;
  sub_243959AD0();
  sub_243959AE0();
  uint64_t result = sub_243959B40();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(unsigned __int8 *)(v10 + a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_2439599F0();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(unsigned __int8 *)(v10 + a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v12 + 48) + a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_24377DEE0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_2439595A0();
  __break(1u);
  return result;
}

uint64_t sub_24377DFD4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_2439595A0();
  __break(1u);
  return result;
}

uint64_t sub_24377E0C8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_268D9D038);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_2439595A0();
  __break(1u);
  return result;
}

uint64_t sub_24377E1D4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_2439595A0();
  __break(1u);
  return result;
}

char *sub_24377E2C8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 2 * a1 + 32);
    size_t v6 = 2 * v4;
    unint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_2439595A0();
  __break(1u);
  return result;
}

uint64_t sub_24377E3B4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F9B0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_2439595A0();
  __break(1u);
  return result;
}

uint64_t sub_24377E4C0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 16 * a1 + 32;
    unint64_t v7 = a3 + 16 * v5;
    if (v6 >= v7 || v6 + 16 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_2439595A0();
  __break(1u);
  return result;
}

char *sub_24377E5C8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 24 * a1 + 32);
    size_t v6 = 24 * v4;
    unint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_2439595A0();
  __break(1u);
  return result;
}

uint64_t sub_24377E6B8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 32 * a1 + 32;
    unint64_t v7 = a3 + 32 * v5;
    if (v6 >= v7 || v6 + 32 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_2439595A0();
  __break(1u);
  return result;
}

char *sub_24377E7C0(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 32 * a1 + 32);
    size_t v6 = 32 * v4;
    unint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_2439595A0();
  __break(1u);
  return result;
}

char *sub_24377E8AC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    unint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_2439595A0();
  __break(1u);
  return result;
}

uint64_t sub_24377E998(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_2439595A0();
  __break(1u);
  return result;
}

uint64_t sub_24377EA88(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + (a1 << 7) + 32;
    unint64_t v6 = a3 + (v4 << 7);
    if (v5 >= v6 || v5 + (v4 << 7) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_2439595A0();
  __break(1u);
  return result;
}

uint64_t sub_24377EB7C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_2439595A0();
  __break(1u);
  return result;
}

uint64_t sub_24377EC74(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_2439595A0();
  __break(1u);
  return result;
}

char *sub_24377ED68(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)sub_2439595A0();
  __break(1u);
  return result;
}

uint64_t sub_24377EE50(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_2439595A0();
  __break(1u);
  return result;
}

uint64_t sub_24377EF48(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 56 * a1 + 32;
    unint64_t v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_2439595A0();
  __break(1u);
  return result;
}

uint64_t sub_24377F040(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_2439595A0();
  __break(1u);
  return result;
}

uint64_t sub_24377F19C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24377F1E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24377F24C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t RelativeDateFormatStyle.format(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_243957400();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2439573B0();
  (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(a3 + 16))(a1, v9, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t dispatch thunk of RelativeDateFormatStyle.format(_:now:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t *PIIStringProcessor.__allocating_init(regexCollectionProvider:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  uint64_t v6 = sub_24377F9E0(v5, v1, v3, v4);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v6;
}

uint64_t PIIStringProcessor.redact(from:forCountryCodes:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = type metadata accessor for PIIRedactionRegex();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9 - 8);
  unint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v4[5];
  uint64_t v14 = v4[6];
  __swift_project_boxed_opaque_existential_1(v4 + 2, v13);
  uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_24377F794(v15, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(v16 + 16);
  if (v17)
  {
    uint64_t v23 = a1;
    uint64_t v24 = a2;
    uint64_t v18 = v16 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v19 = *(void *)(v10 + 72);
    swift_bridgeObjectRetain();
    BOOL v20 = 0;
    do
    {
      sub_2434C2560(v18, (uint64_t)v12);
      BOOL v20 = v20 || sub_24377FAE4(&v23, (uint64_t)v12);
      sub_2434C25C4((uint64_t)v12);
      v18 += v19;
      --v17;
    }
    while (v17);
    uint64_t result = swift_bridgeObjectRelease();
    if (v20)
    {
      a1 = v23;
      a2 = v24;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRetain();
    }
    *(void *)a4 = a1;
    *(void *)(a4 + 8) = a2;
    *(unsigned char *)(a4 + 16) = v20;
  }
  else
  {
    swift_bridgeObjectRelease();
    *(void *)a4 = a1;
    *(void *)(a4 + 8) = a2;
    *(unsigned char *)(a4 + 16) = 0;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t *PIIStringProcessor.init(regexCollectionProvider:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v7);
  uint64_t v9 = sub_2433EE2D4((uint64_t)v7, v1, v3, v4);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v9;
}

uint64_t PIIStringProcessor.deinit()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return v0;
}

uint64_t PIIStringProcessor.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t sub_24377F764@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return PIIStringProcessor.redact(from:forCountryCodes:)(*a1, a1[1], a2, a3);
}

uint64_t sub_24377F794(uint64_t a1, uint64_t a2)
{
  uint64_t v24 = a2;
  uint64_t v4 = type metadata accessor for PIIRedactionRegex();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v26 = (uint64_t)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v23 - v8;
  MEMORY[0x270FA5388](v7);
  unint64_t v12 = (char *)&v23 - v11;
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v27 = MEMORY[0x263F8EE78];
  uint64_t v14 = *(void *)(a1 + 16);
  if (v14)
  {
    uint64_t v23 = v2;
    uint64_t v15 = *(void *)(v10 + 72);
    unint64_t v25 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v16 = a1 + v25;
    uint64_t v17 = MEMORY[0x263F8EE78];
    while (1)
    {
      sub_2434C2560(v16, (uint64_t)v12);
      uint64_t v18 = *(void *)(*(void *)&v12[*(int *)(v4 + 32)] + 16);
      sub_2434C2560((uint64_t)v12, (uint64_t)v9);
      if (!v18) {
        break;
      }
      uint64_t v19 = *(void *)&v9[*(int *)(v4 + 32)];
      swift_bridgeObjectRetain();
      char v20 = sub_243947CFC(v24, v19);
      swift_bridgeObjectRelease();
      sub_2434C25C4((uint64_t)v9);
      if ((v20 & 1) == 0) {
        goto LABEL_9;
      }
      sub_2434C25C4((uint64_t)v12);
LABEL_4:
      v16 += v15;
      if (!--v14) {
        return v27;
      }
    }
    sub_2434C25C4((uint64_t)v9);
LABEL_9:
    sub_2437805E8((uint64_t)v12, v26);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_2434CCBCC(0, *(void *)(v17 + 16) + 1, 1);
    }
    uint64_t v17 = v27;
    unint64_t v22 = *(void *)(v27 + 16);
    unint64_t v21 = *(void *)(v27 + 24);
    if (v22 >= v21 >> 1)
    {
      sub_2434CCBCC(v21 > 1, v22 + 1, 1);
      uint64_t v17 = v27;
    }
    *(void *)(v17 + 16) = v22 + 1;
    sub_2437805E8(v26, v17 + v25 + v22 * v15);
    goto LABEL_4;
  }
  return result;
}

uint64_t *sub_24377F9E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (uint64_t *)swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, a3);
  v10[5] = a3;
  v10[6] = a4;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v10 + 2);
  (*(void (**)(uint64_t *, char *, uint64_t))(v7 + 32))(boxed_opaque_existential_0, v9, a3);
  return v10;
}

BOOL sub_24377FAE4(uint64_t *a1, uint64_t a2)
{
  uint64_t v87 = sub_2439578D0();
  uint64_t v4 = *(void *)(v87 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v87);
  uint64_t v86 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v83 = (char *)&v62 - v7;
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F9F0);
  MEMORY[0x270FA5388](v64);
  uint64_t v68 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F9F8);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v67 = (uint64_t)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9FA00);
  uint64_t v11 = MEMORY[0x270FA5388](v66);
  uint64_t v65 = (uint64_t)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v84 = (uint64_t *)((char *)&v62 - v13);
  uint64_t v14 = sub_2439578E0();
  uint64_t v85 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  unint64_t v71 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9FA08);
  uint64_t v16 = *(void *)(v70 - 8);
  MEMORY[0x270FA5388](v70);
  uint64_t v69 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D99DC8);
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  unint64_t v21 = (char *)&v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *a1;
  uint64_t v23 = a1[1];
  char v80 = a1;
  uint64_t v88 = v22;
  uint64_t v89 = v23;
  uint64_t v79 = type metadata accessor for PIIRedactionRegex();
  uint64_t v24 = a2;
  swift_bridgeObjectRetain();
  sub_243957910();
  sub_24358D9A4();
  sub_24378048C();
  uint64_t v25 = sub_243958210();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  swift_bridgeObjectRelease();
  uint64_t v26 = *(char **)(v25 + 16);
  if (!v26) {
    goto LABEL_23;
  }
  unint64_t v76 = v25 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  uint64_t v75 = v16 + 16;
  uint64_t v77 = (void (**)(char *, uint64_t))(v85 + 8);
  unint64_t v72 = (void (**)(char *, uint64_t))(v16 + 8);
  uint64_t v81 = (void (**)(char *, char *, uint64_t))(v4 + 32);
  uint64_t v82 = (void (**)(char *))(v4 + 16);
  uint64_t v27 = (void (**)(char *, uint64_t))(v4 + 8);
  swift_bridgeObjectRetain();
  unint64_t v63 = v26;
  char v28 = v84;
  id v29 = v71;
  uint64_t v30 = v70;
  id v31 = v69;
  uint64_t v73 = v25;
  uint64_t v74 = v16;
  while (1)
  {
    if ((uint64_t)v26 > *(void *)(v25 + 16))
    {
      __break(1u);
LABEL_20:
      swift_bridgeObjectRelease_n();
      uint64_t v26 = v63;
      return v26 != 0;
    }
    uint64_t v35 = *(void *)(v16 + 72);
    uint64_t v78 = v26 - 1;
    (*(void (**)(char *, unint64_t, uint64_t))(v16 + 16))(v31, v76 + v35 * (void)(v26 - 1), v30);
    sub_243957940();
    uint64_t v36 = sub_2439578B0();
    BOOL v37 = v31;
    uint64_t v38 = *v77;
    (*v77)(v29, v14);
    if (v36 >= 2) {
      break;
    }
    sub_243957930();
    char v32 = (uint64_t *)(v24 + *(int *)(v79 + 28));
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    uint64_t v88 = v34;
    uint64_t v89 = v33;
    sub_2437804E8();
    sub_2439583D0();
    (*v72)(v37, v30);
    id v31 = v37;
LABEL_4:
    uint64_t v25 = v73;
    uint64_t v16 = v74;
    uint64_t v26 = v78;
    if (!v78) {
      goto LABEL_20;
    }
  }
  sub_243957940();
  sub_2437805A4(&qword_268D9FA20);
  uint64_t v26 = v29;
  sub_243958970();
  uint64_t v39 = v88;
  if (v88 >= 1)
  {
    uint64_t v88 = 1;
    uint64_t v89 = v39;
    uint64_t v40 = (uint64_t)v68;
    sub_2439589B0();
    v38(v29, v14);
    uint64_t v41 = v67;
    sub_24337BF80(v40, v67, &qword_268D9F9F0);
    uint64_t v42 = v65;
    sub_24378053C(v41, v65);
    uint64_t v43 = *(void *)(v41 + 8);
    sub_24337C1BC(v41, &qword_268D9F9F0);
    uint64_t v44 = v66;
    *(void *)(v42 + *(int *)(v66 + 36)) = v43;
    sub_24337BF80(v42, (uint64_t)v28, &qword_268D9FA00);
    uint64_t v45 = (uint64_t *)((char *)v28 + *(int *)(v44 + 36));
    uint64_t v46 = *v28;
    if (*v45 != *v28)
    {
      uint64_t v85 = sub_2437805A4(&qword_268D9FA28);
      do
      {
        sub_243958220();
        uint64_t v90 = *v45;
        uint64_t v50 = v28[1];
        uint64_t v88 = v46;
        uint64_t v89 = v50;
        sub_243958950();
        uint64_t v51 = (void (*)(uint64_t *, void))sub_2439589C0();
        unint64_t v52 = v83;
        uint64_t v53 = v87;
        (*v82)(v83);
        v51(&v88, 0);
        uint64_t v54 = v86;
        (*v81)(v86, v52, v53);
        sub_2439578C0();
        if (v55)
        {
          if (qword_268D96B98 != -1) {
            swift_once();
          }
          uint64_t v56 = sub_243957B10();
          __swift_project_value_buffer(v56, (uint64_t)qword_268D9B2B0);
          unint64_t v57 = sub_243957AF0();
          os_log_type_t v58 = sub_243958AF0();
          BOOL v59 = os_log_type_enabled(v57, v58);
          char v28 = v84;
          if (v59)
          {
            uint64_t v60 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v60 = 0;
            _os_log_impl(&dword_243363000, v57, v58, "Range of a match group is not available", v60, 2u);
            MEMORY[0x245680100](v60, -1, -1);
          }

          (*v27)(v86, v87);
        }
        else
        {
          uint64_t v47 = (uint64_t *)(v24 + *(int *)(v79 + 28));
          uint64_t v49 = *v47;
          uint64_t v48 = v47[1];
          uint64_t v88 = v49;
          uint64_t v89 = v48;
          sub_2437804E8();
          sub_2439583D0();
          (*v27)(v54, v53);
          char v28 = v84;
        }
        uint64_t v46 = *v28;
      }
      while (*v45 != *v28);
    }
    sub_24337C1BC((uint64_t)v28, &qword_268D9FA00);
    id v31 = v69;
    uint64_t v30 = v70;
    (*v72)(v69, v70);
    id v29 = v71;
    goto LABEL_4;
  }
  __break(1u);
LABEL_23:
  swift_bridgeObjectRelease();
  return v26 != 0;
}

uint64_t type metadata accessor for PIIStringProcessor()
{
  return self;
}

uint64_t method lookup function for PIIStringProcessor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for PIIStringProcessor);
}

uint64_t dispatch thunk of PIIStringProcessor.__allocating_init(regexCollectionProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

unint64_t sub_24378048C()
{
  unint64_t result = qword_268D9FA10;
  if (!qword_268D9FA10)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268D99DC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FA10);
  }
  return result;
}

unint64_t sub_2437804E8()
{
  unint64_t result = qword_268D9FA18;
  if (!qword_268D9FA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FA18);
  }
  return result;
}

uint64_t sub_24378053C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9F9F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2437805A4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2439578E0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2437805E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PIIRedactionRegex();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void static RawBankConnectData.DoubleString.== infix(_:_:)()
{
}

uint64_t RawBankConnectData.DoubleString.init(value:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  *(void *)a4 = result;
  *(void *)(a4 + 8) = a2;
  *(_DWORD *)(a4 + 16) = a3;
  return result;
}

uint64_t RawBankConnectData.DoubleString.value.getter()
{
  return *(void *)v0;
}

uint64_t RawBankConnectData.DoubleString.value.setter(uint64_t result, uint64_t a2, int a3)
{
  *(void *)uint64_t v3 = result;
  *(void *)(v3 + 8) = a2;
  *(_DWORD *)(v3 + 16) = a3;
  return result;
}

uint64_t (*RawBankConnectData.DoubleString.value.modify())()
{
  return nullsub_1;
}

uint64_t RawBankConnectData.DoubleString.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D98350);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_243959B90();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v20, v20[3]);
    sub_243959950();
    uint64_t v8 = sub_243957560();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
    uint64_t v9 = sub_243958FD0();
    unint64_t v11 = v10;
    unint64_t v13 = v12;
    sub_2433FE36C((uint64_t)v7);
    if (v13 & 0x100000000) != 0 || (sub_243958FB0())
    {
      uint64_t v18 = 0;
      unint64_t v19 = 0xE000000000000000;
      sub_243959330();
      swift_bridgeObjectRelease();
      uint64_t v18 = 39;
      unint64_t v19 = 0xE100000000000000;
      sub_243958460();
      swift_bridgeObjectRelease();
      sub_243958460();
      sub_2439593D0();
      swift_allocError();
      sub_243959380();
      swift_bridgeObjectRelease();
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
    }
    else
    {
      unint64_t v21 = v13 >> 16;
      swift_bridgeObjectRelease();
      unint64_t v16 = HIDWORD(v11);
      unint64_t v17 = HIWORD(v11);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
      *(void *)a2 = v9;
      *(_DWORD *)(a2 + 8) = v11;
      *(_WORD *)(a2 + 12) = v16;
      *(_WORD *)(a2 + 14) = v17;
      *(_WORD *)(a2 + 16) = v13;
      *(_WORD *)(a2 + 18) = v21;
    }
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t RawBankConnectData.DoubleString.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_243959BC0();
  sub_243958EF0();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_243959990();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

uint64_t RawBankConnectData.DoubleString.hash(into:)()
{
  return sub_243958FA0();
}

uint64_t RawBankConnectData.DoubleString.hashValue.getter()
{
  return sub_243959B40();
}

uint64_t sub_243780AD0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return RawBankConnectData.DoubleString.init(from:)(a1, a2);
}

uint64_t sub_243780AE8(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_243959BC0();
  sub_243958EF0();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_243959990();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

void sub_243780BB0()
{
}

uint64_t sub_243780BC8()
{
  return sub_243959B40();
}

uint64_t sub_243780C24()
{
  return sub_243958FA0();
}

uint64_t sub_243780C30()
{
  return sub_243959B40();
}

unint64_t sub_243780C8C()
{
  unint64_t result = qword_268D9FA30;
  if (!qword_268D9FA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FA30);
  }
  return result;
}

ValueMetadata *type metadata accessor for RawBankConnectData.DoubleString()
{
  return &type metadata for RawBankConnectData.DoubleString;
}

uint64_t CredentialCenterKeyVault.accessGroupName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CredentialCenterKeyVault.serviceName.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

void *CredentialCenterKeyVault.__allocating_init(accessGroupName:serviceName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t result = (void *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  result[5] = a4;
  return result;
}

void *CredentialCenterKeyVault.init(accessGroupName:serviceName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  long long v4[2] = a1;
  v4[3] = a2;
  v4[4] = a3;
  v4[5] = a4;
  return v4;
}

void CredentialCenterKeyVault.currentKey()(uint64_t a1@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9FA38);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CredentialCenterKey();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  unint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = CredentialCenterKeyVault.keys()();
  if (!v2)
  {
    if (!*(void *)(v11 + 16))
    {
      swift_bridgeObjectRelease();
LABEL_9:
      CredentialCenterKeyVault.createKey()(a1);
      return;
    }
    v16[4] = v1;
    uint64_t v17 = v8;
    uint64_t v18 = a1;
    uint64_t v20 = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268D9FA40);
    v16[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9FA48);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_24395EAE0;
    swift_getKeyPath();
    sub_243782D64(&qword_268D9FA50, MEMORY[0x263F07508]);
    sub_2439568A0();
    uint64_t v19 = v12;
    id v16[2] = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9FA58);
    v16[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9FA60);
    sub_2433D9388(&qword_268D9FA68, &qword_268D9FA58);
    sub_2433D9388(&qword_268D9FA70, &qword_268D9FA60);
    sub_2433D9388(&qword_268D9FA78, &qword_268D9FA48);
    uint64_t v13 = sub_243958530();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v14 = v17;
    if (*(void *)(v13 + 16))
    {
      sub_2437816B8(v13 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80)), (uint64_t)v6);
      uint64_t v15 = 0;
      a1 = v18;
    }
    else
    {
      a1 = v18;
      uint64_t v15 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v6, v15, 1, v7);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v6, 1, v7) == 1)
    {
      sub_24337C1BC((uint64_t)v6, &qword_268D9FA38);
      goto LABEL_9;
    }
    sub_243781BDC((uint64_t)v6, (uint64_t)v10);
    sub_243781BDC((uint64_t)v10, a1);
  }
}

uint64_t type metadata accessor for CredentialCenterKey()
{
  uint64_t result = qword_268D9FAA0;
  if (!qword_268D9FAA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t CredentialCenterKeyVault.keys()()
{
  v62[40] = *(CFTypeRef *)MEMORY[0x263EF8340];
  uint64_t v1 = type metadata accessor for CredentialCenterKey();
  v53[0] = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v59 = (uint64_t)v53 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268D984E8);
  uint64_t inited = swift_initStackObject();
  uint64_t v4 = (id *)MEMORY[0x263F171B8];
  *(_OWORD *)(inited + 16) = xmmword_24396E320;
  id v57 = *v4;
  *(void *)(inited + 32) = v57;
  id v55 = (id)*MEMORY[0x263F171C8];
  id v5 = v55;
  type metadata accessor for CFString(0);
  *(void *)(inited + 40) = v5;
  id v56 = (id)*MEMORY[0x263F16E80];
  id v6 = v56;
  *(void *)(inited + 64) = v7;
  *(void *)(inited + 72) = v6;
  uint64_t v58 = v7;
  uint64_t v8 = v0[2];
  uint64_t v54 = v0[3];
  uint64_t v9 = v54;
  uint64_t v10 = MEMORY[0x263F8D310];
  *(void *)(inited + 80) = v8;
  *(void *)(inited + 88) = v9;
  uint64_t v11 = (void *)*MEMORY[0x263F17090];
  *(void *)(inited + 104) = v10;
  *(void *)(inited + 112) = v11;
  uint64_t v12 = v0[4];
  uint64_t v13 = v0[5];
  uint64_t v14 = (void **)MEMORY[0x263F170B0];
  *(void *)(inited + 120) = v12;
  *(void *)(inited + 128) = v13;
  uint64_t v15 = *v14;
  *(void *)(inited + 144) = v10;
  *(void *)(inited + 152) = v15;
  uint64_t v16 = MEMORY[0x263F8D4F8];
  *(unsigned char *)(inited + 160) = 1;
  uint64_t v17 = (void *)*MEMORY[0x263F17400];
  *(void *)(inited + 184) = v16;
  *(void *)(inited + 192) = v17;
  uint64_t v18 = (void *)*MEMORY[0x263F17408];
  uint64_t v19 = (void **)MEMORY[0x263F17520];
  *(void *)(inited + 200) = *MEMORY[0x263F17408];
  uint64_t v20 = *v19;
  *(void *)(inited + 224) = v7;
  *(void *)(inited + 232) = v20;
  unint64_t v21 = (void **)MEMORY[0x263F17518];
  *(unsigned char *)(inited + 240) = 1;
  uint64_t v22 = *v21;
  *(void *)(inited + 264) = v16;
  *(void *)(inited + 272) = v22;
  *(void *)(inited + 304) = v16;
  *(unsigned char *)(inited + 280) = 1;
  id v23 = v57;
  id v24 = v55;
  id v25 = v56;
  swift_bridgeObjectRetain();
  id v26 = v11;
  swift_bridgeObjectRetain();
  id v27 = v15;
  id v28 = v17;
  id v29 = v18;
  id v30 = v20;
  id v31 = v22;
  sub_243371AA0(inited);
  v62[0] = 0;
  sub_243782D64((unint64_t *)&qword_268D96EA8, type metadata accessor for CFString);
  CFDictionaryRef v32 = (const __CFDictionary *)sub_243958180();
  swift_bridgeObjectRelease();
  OSStatus v33 = SecItemCopyMatching(v32, v62);

  uint64_t v34 = MEMORY[0x263F8EE78];
  if (v33 == -25300) {
    goto LABEL_19;
  }
  if (v33)
  {
    CFStringRef v45 = SecCopyErrorMessageString(v33, 0);
    if (v45)
    {
      uint64_t v46 = (__CFString *)v45;
      uint64_t v34 = sub_2439582D0();
      uint64_t v48 = v47;
    }
    else
    {
      LODWORD(v61) = v33;
      uint64_t v34 = sub_2439598D0();
      uint64_t v48 = v51;
    }
    sub_243781C40();
    swift_allocError();
    *(void *)uint64_t v49 = v34;
    *(void *)(v49 + 8) = v48;
    char v50 = 2;
    goto LABEL_18;
  }
  if (!v62[0]
    || (CFTypeRef v61 = v62[0],
        swift_unknownObjectRetain(),
        __swift_instantiateConcreteTypeFromMangledName(&qword_268D9FA88),
        (swift_dynamicCast() & 1) == 0))
  {
    sub_243781C40();
    swift_allocError();
    *(void *)uint64_t v49 = 0xD000000000000029;
    *(void *)(v49 + 8) = 0x80000002439B1120;
    char v50 = 1;
LABEL_18:
    *(unsigned char *)(v49 + 16) = v50;
    swift_willThrow();
    goto LABEL_19;
  }
  uint64_t v35 = v60;
  int64_t v36 = *(void *)(v60 + 16);
  if (v36)
  {
    CFTypeRef v61 = (CFTypeRef)v34;
    sub_2434CD514(0, v36, 0);
    uint64_t v37 = 0;
    uint64_t v34 = (uint64_t)v61;
    uint64_t v39 = v53[0];
    uint64_t v38 = v53[1];
    uint64_t v40 = v59;
    while (1)
    {
      uint64_t v41 = *(void *)(v35 + 8 * v37 + 32);
      swift_bridgeObjectRetain_n();
      sub_243781C94(v41, v40);
      if (v38) {
        break;
      }
      swift_bridgeObjectRelease();
      CFTypeRef v61 = (CFTypeRef)v34;
      unint64_t v43 = *(void *)(v34 + 16);
      unint64_t v42 = *(void *)(v34 + 24);
      if (v43 >= v42 >> 1)
      {
        sub_2434CD514(v42 > 1, v43 + 1, 1);
        uint64_t v34 = (uint64_t)v61;
      }
      ++v37;
      *(void *)(v34 + 16) = v43 + 1;
      uint64_t v44 = v34
          + ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))
          + *(void *)(v39 + 72) * v43;
      uint64_t v40 = v59;
      sub_243781BDC(v59, v44);
      if (v36 == v37) {
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_11:
    swift_bridgeObjectRelease();
  }
LABEL_19:
  swift_unknownObjectRelease();
  return v34;
}

uint64_t sub_2437816B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CredentialCenterKey();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void CredentialCenterKeyVault.createKey()(uint64_t a1@<X8>)
{
  uint64_t v66 = a1;
  uint64_t v3 = sub_243957F50();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v4 = sub_243957F30();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CredentialCenterKey();
  uint64_t v9 = v8 - 8;
  uint64_t v64 = v8 - 8;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_243957480();
  sub_243957F40();
  sub_243957F20();
  sub_243957EF0();
  uint64_t v62 = v1;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *(_OWORD *)&v11[*(int *)(v9 + 28)] = v67;
  sub_243781BDC((uint64_t)v11, a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268D984E8);
  uint64_t inited = swift_initStackObject();
  uint64_t v13 = (void **)MEMORY[0x263F171B8];
  *(_OWORD *)(inited + 16) = xmmword_24398AFC0;
  uint64_t v14 = *v13;
  *(void *)(inited + 32) = *v13;
  id v63 = (id)*MEMORY[0x263F171C8];
  id v15 = v63;
  type metadata accessor for CFString(0);
  *(void *)(inited + 40) = v15;
  uint64_t v16 = (void *)*MEMORY[0x263F16E80];
  *(void *)(inited + 64) = v17;
  *(void *)(inited + 72) = v16;
  uint64_t v65 = v17;
  uint64_t v18 = v68[3];
  uint64_t v19 = MEMORY[0x263F8D310];
  *(void *)(inited + 80) = v68[2];
  *(void *)(inited + 88) = v18;
  uint64_t v20 = (void *)*MEMORY[0x263F16E90];
  *(void *)(inited + 104) = v19;
  *(void *)(inited + 112) = v20;
  unint64_t v21 = (void *)*MEMORY[0x263F16E98];
  *(void *)(inited + 120) = *MEMORY[0x263F16E98];
  uint64_t v22 = (void *)*MEMORY[0x263F16F38];
  *(void *)(inited + 144) = v17;
  *(void *)(inited + 152) = v22;
  uint64_t v23 = MEMORY[0x263F8D4F8];
  *(unsigned char *)(inited + 160) = 1;
  id v24 = (void *)*MEMORY[0x263F16ED8];
  *(void *)(inited + 184) = v23;
  *(void *)(inited + 192) = v24;
  id v25 = v14;
  id v26 = v63;
  id v27 = v16;
  swift_bridgeObjectRetain();
  id v28 = v20;
  id v29 = v21;
  id v30 = v22;
  id v31 = v24;
  uint64_t v32 = v66;
  *(void *)(inited + 200) = sub_243957420();
  *(void *)(inited + 208) = v33;
  uint64_t v34 = (void *)*MEMORY[0x263F17090];
  uint64_t v35 = MEMORY[0x263F8D310];
  *(void *)(inited + 224) = MEMORY[0x263F8D310];
  *(void *)(inited + 232) = v34;
  uint64_t v36 = v68[5];
  *(void *)(inited + 240) = v68[4];
  *(void *)(inited + 248) = v36;
  uint64_t v68 = (void *)*MEMORY[0x263F170B0];
  uint64_t v37 = v68;
  *(void *)(inited + 264) = v35;
  *(void *)(inited + 272) = v37;
  *(unsigned char *)(inited + 280) = 1;
  uint64_t v38 = (void *)*MEMORY[0x263F175A8];
  uint64_t v39 = MEMORY[0x263F8D4F8];
  *(void *)(inited + 304) = MEMORY[0x263F8D4F8];
  *(void *)(inited + 312) = v38;
  uint64_t v40 = (uint64_t *)(v32 + *(int *)(v64 + 28));
  uint64_t v41 = *v40;
  unint64_t v42 = v40[1];
  unint64_t v43 = (void **)MEMORY[0x263F17520];
  *(void *)(inited + 320) = v41;
  *(void *)(inited + 328) = v42;
  uint64_t v44 = *v43;
  *(void *)(inited + 344) = MEMORY[0x263F06F78];
  *(void *)(inited + 352) = v44;
  CFStringRef v45 = (void **)MEMORY[0x263F17518];
  *(unsigned char *)(inited + 360) = 1;
  uint64_t v46 = *v45;
  *(void *)(inited + 384) = v39;
  *(void *)(inited + 392) = v46;
  *(void *)(inited + 424) = v39;
  *(unsigned char *)(inited + 400) = 1;
  id v47 = v34;
  swift_bridgeObjectRetain();
  uint64_t v48 = v68;
  id v49 = v38;
  sub_243403DD0(v41, v42);
  id v50 = v44;
  id v51 = v46;
  sub_243371AA0(inited);
  sub_243782D64((unint64_t *)&qword_268D96EA8, type metadata accessor for CFString);
  CFDictionaryRef v52 = (const __CFDictionary *)sub_243958180();
  swift_bridgeObjectRelease();
  OSStatus v53 = SecItemAdd(v52, 0);

  if (v53)
  {
    CFStringRef v54 = SecCopyErrorMessageString(v53, 0);
    if (v54)
    {
      id v55 = (__CFString *)v54;
      uint64_t v56 = sub_2439582D0();
      uint64_t v58 = v57;
    }
    else
    {
      LODWORD(v67) = v53;
      uint64_t v56 = sub_2439598D0();
      uint64_t v58 = v59;
    }
    sub_243781C40();
    swift_allocError();
    *(void *)uint64_t v60 = v56;
    *(void *)(v60 + 8) = v58;
    *(unsigned char *)(v60 + 16) = 2;
    swift_willThrow();
    sub_243782C78(v66);
  }
}

uint64_t sub_243781BDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CredentialCenterKey();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_243781C40()
{
  unint64_t result = qword_268D9FA80;
  if (!qword_268D9FA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FA80);
  }
  return result;
}

uint64_t sub_243781C94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C7270);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_243957490();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)*MEMORY[0x263F16ED8];
  if (!*(void *)(a1 + 16))
  {
    long long v30 = 0u;
    long long v31 = 0u;
    goto LABEL_9;
  }
  id v12 = v11;
  uint64_t v13 = sub_24341AA54(v12);
  if ((v14 & 1) == 0)
  {
    long long v30 = 0u;
    long long v31 = 0u;

    goto LABEL_9;
  }
  sub_24337BE00(*(void *)(a1 + 56) + 32 * v13, (uint64_t)&v30);

  if (!*((void *)&v31 + 1))
  {
LABEL_9:
    swift_bridgeObjectRelease();
    sub_24337C1BC((uint64_t)&v30, &qword_26B0C5CA0);
LABEL_10:
    sub_243781C40();
    swift_allocError();
    *(void *)uint64_t v16 = v11;
    *(void *)(v16 + 8) = 0;
    *(unsigned char *)(v16 + 16) = 0;
    id v17 = v11;
    return swift_willThrow();
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_243957410();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    swift_bridgeObjectRelease();
    sub_24337C1BC((uint64_t)v6, &qword_26B0C7270);
    sub_243781C40();
    swift_allocError();
    *(void *)uint64_t v15 = 0xD00000000000001DLL;
    *(void *)(v15 + 8) = 0x80000002439B11D0;
    *(unsigned char *)(v15 + 16) = 1;
    return swift_willThrow();
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(a2, v10, v7);
  uint64_t v19 = (void *)*MEMORY[0x263F175A8];
  if (*(void *)(a1 + 16))
  {
    id v20 = v19;
    uint64_t v21 = sub_24341AA54(v20);
    if (v22)
    {
      sub_24337BE00(*(void *)(a1 + 56) + 32 * v21, (uint64_t)&v30);
    }
    else
    {
      long long v30 = 0u;
      long long v31 = 0u;
    }
  }
  else
  {
    long long v30 = 0u;
    long long v31 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v31 + 1))
  {
    if (swift_dynamicCast())
    {
      uint64_t v23 = v29[0];
      uint64_t v24 = v29[1];
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      uint64_t result = type metadata accessor for CredentialCenterKey();
      id v25 = (void *)(a2 + *(int *)(result + 20));
      void *v25 = v23;
      v25[1] = v24;
      return result;
    }
  }
  else
  {
    sub_24337C1BC((uint64_t)&v30, &qword_26B0C5CA0);
  }
  sub_243781C40();
  swift_allocError();
  *(void *)uint64_t v26 = v19;
  *(void *)(v26 + 8) = 0;
  *(unsigned char *)(v26 + 16) = 0;
  id v27 = v19;
  swift_willThrow();
  id v28 = *(void (**)(char *, uint64_t))(v8 + 8);
  v28(v10, v7);
  return ((uint64_t (*)(uint64_t, uint64_t))v28)(a2, v7);
}

uint64_t CredentialCenterKeyVault.key(with:)@<X0>(uint64_t a1@<X8>)
{
  result[45] = *(CFTypeRef *)MEMORY[0x263EF8340];
  __swift_instantiateConcreteTypeFromMangledName(&qword_268D984E8);
  uint64_t inited = swift_initStackObject();
  uint64_t v3 = (void **)MEMORY[0x263F171B8];
  *(_OWORD *)(inited + 16) = xmmword_2439648B0;
  uint64_t v48 = *v3;
  *(void *)(inited + 32) = *v3;
  uint64_t v4 = *MEMORY[0x263F171C8];
  uint64_t v46 = (void *)*MEMORY[0x263F171C8];
  type metadata accessor for CFString(0);
  uint64_t v5 = (void **)MEMORY[0x263F16E80];
  *(void *)(inited + 40) = v4;
  id v47 = *v5;
  *(void *)(inited + 64) = v6;
  *(void *)(inited + 72) = v47;
  uint64_t v7 = v1[3];
  uint64_t v8 = MEMORY[0x263F8D310];
  *(void *)(inited + 80) = v1[2];
  *(void *)(inited + 88) = v7;
  uint64_t v9 = (void *)*MEMORY[0x263F17090];
  *(void *)(inited + 104) = v8;
  *(void *)(inited + 112) = v9;
  uint64_t v10 = v1[4];
  uint64_t v11 = v1[5];
  *(void *)(inited + 120) = v10;
  *(void *)(inited + 128) = v11;
  id v12 = (void *)*MEMORY[0x263F170B0];
  *(void *)(inited + 144) = v8;
  *(void *)(inited + 152) = v12;
  uint64_t v13 = MEMORY[0x263F8D4F8];
  *(unsigned char *)(inited + 160) = 1;
  char v14 = (void *)*MEMORY[0x263F17400];
  *(void *)(inited + 184) = v13;
  *(void *)(inited + 192) = v14;
  uint64_t v15 = (void *)*MEMORY[0x263F17410];
  *(void *)(inited + 200) = *MEMORY[0x263F17410];
  uint64_t v16 = (void *)*MEMORY[0x263F17520];
  *(void *)(inited + 224) = v6;
  *(void *)(inited + 232) = v16;
  *(unsigned char *)(inited + 240) = 1;
  id v17 = (void *)*MEMORY[0x263F17518];
  *(void *)(inited + 264) = v13;
  *(void *)(inited + 272) = v17;
  *(unsigned char *)(inited + 280) = 1;
  uint64_t v18 = (void *)*MEMORY[0x263F16ED8];
  *(void *)(inited + 304) = v13;
  *(void *)(inited + 312) = v18;
  id v19 = v48;
  id v20 = v46;
  id v21 = v47;
  swift_bridgeObjectRetain();
  id v22 = v9;
  swift_bridgeObjectRetain();
  id v23 = v12;
  id v24 = v14;
  id v25 = v15;
  id v26 = v16;
  id v27 = v17;
  id v28 = v18;
  uint64_t v29 = sub_243957420();
  *(void *)(inited + 344) = MEMORY[0x263F8D310];
  *(void *)(inited + 320) = v29;
  *(void *)(inited + 328) = v30;
  sub_243371AA0(inited);
  result[0] = 0;
  sub_243782D64((unint64_t *)&qword_268D96EA8, type metadata accessor for CFString);
  CFDictionaryRef v31 = (const __CFDictionary *)sub_243958180();
  swift_bridgeObjectRelease();
  OSStatus v32 = SecItemCopyMatching(v31, result);

  if (v32 == -25300)
  {
    uint64_t v34 = type metadata accessor for CredentialCenterKey();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(a1, 1, 1, v34);
    return swift_unknownObjectRelease();
  }
  if (v32)
  {
    CFStringRef v35 = SecCopyErrorMessageString(v32, 0);
    if (v35)
    {
      uint64_t v36 = (__CFString *)v35;
      uint64_t v37 = sub_2439582D0();
      unint64_t v39 = v38;
    }
    else
    {
      uint64_t v37 = sub_2439598D0();
      unint64_t v39 = v42;
    }
    sub_243781C40();
    swift_allocError();
    *(void *)uint64_t v40 = v37;
    char v41 = 2;
    goto LABEL_14;
  }
  if (!result[0]
    || (swift_unknownObjectRetain(),
        __swift_instantiateConcreteTypeFromMangledName(&qword_268D9FA90),
        (swift_dynamicCast() & 1) == 0))
  {
    sub_243781C40();
    swift_allocError();
    *(void *)uint64_t v40 = 0xD000000000000025;
    unint64_t v39 = 0x80000002439B1150;
    char v41 = 1;
LABEL_14:
    *(void *)(v40 + 8) = v39;
    *(unsigned char *)(v40 + 16) = v41;
    swift_willThrow();
    return swift_unknownObjectRelease();
  }
  sub_243781C94(v49, a1);
  if (!v45)
  {
    uint64_t v33 = type metadata accessor for CredentialCenterKey();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(a1, 0, 1, v33);
  }
  return swift_unknownObjectRelease();
}

uint64_t CredentialCenterKey.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_243957F50();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_243957F30();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_243957480();
  sub_243957F40();
  sub_243957F20();
  sub_243957EF0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v7 = v11[2];
  uint64_t v8 = v11[3];
  uint64_t result = type metadata accessor for CredentialCenterKey();
  uint64_t v10 = (void *)(a1 + *(int *)(result + 20));
  *uint64_t v10 = v7;
  v10[1] = v8;
  return result;
}

uint64_t CredentialCenterKeyVault.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CredentialCenterKeyVault.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_2437826A0()
{
  return CredentialCenterKeyVault.keys()();
}

void sub_2437826C4(uint64_t a1@<X8>)
{
}

uint64_t sub_2437826E8@<X0>(uint64_t a1@<X8>)
{
  return CredentialCenterKeyVault.key(with:)(a1);
}

uint64_t CredentialCenterKey.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_243957490();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t CredentialCenterKey.symmetricKey.getter()
{
  uint64_t v1 = type metadata accessor for CredentialCenterKey();
  sub_243403DD0(*(void *)(v0 + *(int *)(v1 + 20)), *(void *)(v0 + *(int *)(v1 + 20) + 8));
  return sub_243957F10();
}

uint64_t CredentialCenterKey.hash(into:)()
{
  sub_243957490();
  sub_243782D64(&qword_268D9D500, MEMORY[0x263F07508]);
  sub_2439581D0();
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for CredentialCenterKey() + 20));
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  sub_243403DD0(*v1, v3);
  sub_2439570D0();

  return sub_2433807F0(v2, v3);
}

uint64_t static CredentialCenterKey.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((sub_243957450() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = *(int *)(type metadata accessor for CredentialCenterKey() + 20);
  uint64_t v5 = *(void *)(a1 + v4);
  unint64_t v6 = *(void *)(a1 + v4 + 8);
  uint64_t v7 = (uint64_t *)(a2 + v4);
  uint64_t v8 = *v7;
  unint64_t v9 = v7[1];

  return sub_2437A0C54(v5, v6, v8, v9);
}

uint64_t CredentialCenterKey.hashValue.getter()
{
  sub_243959AD0();
  sub_243957490();
  sub_243782D64(&qword_268D9D500, MEMORY[0x263F07508]);
  sub_2439581D0();
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for CredentialCenterKey() + 20));
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  sub_243403DD0(*v1, v3);
  sub_2439570D0();
  sub_2433807F0(v2, v3);
  return sub_243959B40();
}

uint64_t sub_2437829C0(uint64_t a1)
{
  sub_243959AD0();
  sub_243957490();
  sub_243782D64(&qword_268D9D500, MEMORY[0x263F07508]);
  sub_2439581D0();
  unint64_t v3 = (uint64_t *)(v1 + *(int *)(a1 + 20));
  uint64_t v4 = *v3;
  unint64_t v5 = v3[1];
  sub_243403DD0(*v3, v5);
  sub_2439570D0();
  sub_2433807F0(v4, v5);
  return sub_243959B40();
}

uint64_t sub_243782A88(uint64_t a1, uint64_t a2)
{
  sub_243957490();
  sub_243782D64(&qword_268D9D500, MEMORY[0x263F07508]);
  sub_2439581D0();
  uint64_t v4 = (uint64_t *)(v2 + *(int *)(a2 + 20));
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  sub_243403DD0(*v4, v6);
  sub_2439570D0();

  return sub_2433807F0(v5, v6);
}

uint64_t sub_243782B44(uint64_t a1, uint64_t a2)
{
  sub_243959AD0();
  sub_243957490();
  sub_243782D64(&qword_268D9D500, MEMORY[0x263F07508]);
  sub_2439581D0();
  uint64_t v4 = (uint64_t *)(v2 + *(int *)(a2 + 20));
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  sub_243403DD0(*v4, v6);
  sub_2439570D0();
  sub_2433807F0(v5, v6);
  return sub_243959B40();
}

uint64_t sub_243782C08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((sub_243957450() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = *(void *)(a1 + v6);
  unint64_t v8 = *(void *)(a1 + v6 + 8);
  unint64_t v9 = (uint64_t *)(a2 + v6);
  uint64_t v10 = *v9;
  unint64_t v11 = v9[1];

  return sub_2437A0C54(v7, v8, v10, v11);
}

uint64_t sub_243782C78(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CredentialCenterKey();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_243782CD4()
{
  return sub_243782D64(&qword_268D9D500, MEMORY[0x263F07508]);
}

uint64_t sub_243782D1C()
{
  return sub_243782D64(&qword_268D9FA98, (void (*)(uint64_t))type metadata accessor for CredentialCenterKey);
}

uint64_t sub_243782D64(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t dispatch thunk of CredentialCenterKeyVaultProtocol.keys()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CredentialCenterKeyVaultProtocol.currentKey()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of CredentialCenterKeyVaultProtocol.key(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t type metadata accessor for CredentialCenterKeyVault()
{
  return self;
}

uint64_t method lookup function for CredentialCenterKeyVault(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CredentialCenterKeyVault);
}

uint64_t dispatch thunk of CredentialCenterKeyVault.__allocating_init(accessGroupName:serviceName:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t *initializeBufferWithCopyOfBuffer for CredentialCenterKey(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_243957490();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    unint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = *v10;
    unint64_t v12 = v10[1];
    sub_243403DD0(*v10, v12);
    *unint64_t v9 = v11;
    v9[1] = v12;
  }
  return a1;
}

uint64_t destroy for CredentialCenterKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_243957490();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  int v5 = (uint64_t *)(a1 + *(int *)(a2 + 20));
  uint64_t v6 = *v5;
  unint64_t v7 = v5[1];

  return sub_2433807F0(v6, v7);
}

uint64_t initializeWithCopy for CredentialCenterKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_243957490();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (uint64_t *)(a1 + v7);
  unint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v10 = *v9;
  unint64_t v11 = v9[1];
  sub_243403DD0(*v9, v11);
  uint64_t *v8 = v10;
  v8[1] = v11;
  return a1;
}

uint64_t assignWithCopy for CredentialCenterKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_243957490();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (uint64_t *)(a1 + v7);
  unint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v10 = *v9;
  unint64_t v11 = v9[1];
  sub_243403DD0(*v9, v11);
  uint64_t v12 = *v8;
  unint64_t v13 = v8[1];
  uint64_t *v8 = v10;
  v8[1] = v11;
  sub_2433807F0(v12, v13);
  return a1;
}

uint64_t initializeWithTake for CredentialCenterKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_243957490();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for CredentialCenterKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_243957490();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void *)(a1 + v7);
  unint64_t v9 = *(void *)(a1 + v7 + 8);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  sub_2433807F0(v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for CredentialCenterKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24378320C);
}

uint64_t sub_24378320C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_243957490();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8) >> 60;
    if (((4 * v10) & 0xC) != 0) {
      return 16 - ((4 * v10) & 0xC | (v10 >> 2));
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for CredentialCenterKey(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2437832F4);
}

uint64_t sub_2437832F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_243957490();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    unint64_t v11 = (void *)(a1 + *(int *)(a4 + 20));
    *unint64_t v11 = 0;
    v11[1] = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * a2) << 60;
  }
  return result;
}

uint64_t sub_2437833C0()
{
  uint64_t result = sub_243957490();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t FinanceStore.setOrderNotificationsEnabled(_:for:)(char a1, uint64_t *a2)
{
  *(void *)(v3 + 16) = v2;
  *(unsigned char *)(v3 + 88) = a1;
  *(void *)(v3 + 24) = type metadata accessor for FinanceStore.Message();
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = *a2;
  *(void *)(v3 + 32) = v5;
  *(void *)(v3 + 40) = v6;
  *(_OWORD *)(v3 + 48) = *(_OWORD *)(a2 + 1);
  *(void *)(v3 + 64) = a2[3];
  return MEMORY[0x270FA2498](sub_243783504, 0, 0);
}

uint64_t sub_243783504()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v4 = *(void *)(v0 + 32);
  char v5 = *(unsigned char *)(v0 + 88);
  *(void *)uint64_t v4 = *(void *)(v0 + 40);
  *(void *)(v4 + 8) = v3;
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = v2;
  *(unsigned char *)(v4 + 32) = v5;
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = (uint64_t (*)(uint64_t))((char *)&dword_268D98530 + dword_268D98530);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_2437835F8;
  uint64_t v7 = *(void *)(v0 + 32);
  return v9(v7);
}

uint64_t sub_2437835F8()
{
  uint64_t v2 = *(void *)(*v1 + 32);
  uint64_t v3 = *v1;
  *(void *)(v3 + 80) = v0;
  swift_task_dealloc();
  sub_2433FC8AC(v2);
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_24378375C, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
}

uint64_t sub_24378375C()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void InternalAccount.init(_:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v112 = a2;
  uint64_t v3 = type metadata accessor for Actions();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v114 = (uint64_t)&v100 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D97360);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v100 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v109 = (char *)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  unint64_t v13 = (char *)&v100 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v115 = (uint64_t)&v100 - v14;
  uint64_t v15 = sub_243957490();
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v18 = (char *)&v100 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  id v20 = (char *)&v100 - v19;
  id v21 = objc_msgSend(a1, sel_publicAccountObject);
  id v22 = [v21 id];

  uint64_t v110 = v20;
  sub_243957460();

  id v23 = objc_msgSend(a1, sel_accountId);
  uint64_t v24 = sub_2439582D0();
  uint64_t v26 = v25;

  id v27 = objc_msgSend(a1, sel_institutionId);
  uint64_t v28 = sub_2439582D0();
  uint64_t v30 = v29;

  *(void *)&long long v138 = v24;
  *((void *)&v138 + 1) = v26;
  uint64_t v139 = v28;
  uint64_t v140 = v30;
  id v31 = objc_msgSend(a1, sel_consentID);
  uint64_t v111 = v18;
  sub_243957460();

  id v32 = objc_msgSend(a1, sel_fpanIds);
  uint64_t v108 = sub_243958650();

  id v33 = objc_msgSend(a1, sel_externalAccountId);
  if (v33)
  {
    uint64_t v34 = v33;
    uint64_t v107 = sub_2439582D0();
    uint64_t v106 = v35;
  }
  else
  {
    uint64_t v107 = 0;
    uint64_t v106 = 0;
  }
  id v36 = objc_msgSend(a1, sel_publicAccountObject);
  ManagedAccount.accountType.getter(&v137);

  char v136 = v137;
  ManagedInternalAccount.accountNumber.getter((uint64_t)v134);
  v132[0] = v134[0];
  v132[1] = v134[1];
  char v133 = v135;
  id v37 = objc_msgSend(a1, sel_publicAccountObject);
  id v38 = objc_msgSend(v37, sel_displayName);

  uint64_t v105 = sub_2439582D0();
  uint64_t v104 = v39;

  id v40 = objc_msgSend(a1, sel_publicAccountObject);
  id v41 = objc_msgSend(v40, sel_accountDescription);

  if (v41)
  {
    uint64_t v103 = sub_2439582D0();
    uint64_t v102 = v42;
  }
  else
  {
    uint64_t v103 = 0;
    uint64_t v102 = 0;
  }
  uint64_t v113 = v7;
  ManagedInternalAccount.accountStatus.getter(&v131);
  id v43 = objc_msgSend(a1, sel_publicAccountObject);
  id v44 = objc_msgSend(v43, sel_currency);

  uint64_t v101 = sub_2439582D0();
  uint64_t v100 = v45;

  id v46 = objc_msgSend(a1, sel_publicAccountObject);
  id v47 = objc_msgSend(v46, sel_creditLimitAmountValue);
  if (v47)
  {
    uint64_t v48 = v47;
    objc_msgSend(v47, sel_decimalValue);
    uint64_t v49 = v128;
    uint64_t v50 = *((void *)&v127 + 1);
    uint64_t v51 = v127;
    id v52 = objc_msgSend(v46, sel_currency);
    uint64_t v53 = sub_2439582D0();
    uint64_t v55 = v54;
  }
  else
  {

    uint64_t v51 = 0;
    uint64_t v50 = 0;
    uint64_t v49 = 0;
    uint64_t v53 = 0;
    uint64_t v55 = 0;
  }
  *(void *)&long long v127 = v51;
  *((void *)&v127 + 1) = v50;
  uint64_t v128 = v49;
  uint64_t v129 = v53;
  uint64_t v130 = v55;
  id v56 = objc_msgSend(a1, sel_publicAccountObject);
  id v57 = objc_msgSend(v56, sel_nextPaymentDate);

  if (v57)
  {
    sub_2439573A0();

    uint64_t v58 = sub_243957400();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v13, 0, 1, v58);
  }
  else
  {
    uint64_t v59 = sub_243957400();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v13, 1, 1, v59);
  }
  sub_2433D7C84((uint64_t)v13, v115);
  id v60 = objc_msgSend(a1, sel_publicAccountObject);
  id v61 = objc_msgSend(v60, sel_minimumPaymentAmountValue);
  if (v61)
  {
    uint64_t v62 = v61;
    objc_msgSend(v61, sel_decimalValue);
    uint64_t v63 = v124;
    uint64_t v64 = *((void *)&v123 + 1);
    uint64_t v65 = v123;
    id v66 = objc_msgSend(v60, sel_currency);
    uint64_t v67 = sub_2439582D0();
    uint64_t v69 = v68;
  }
  else
  {

    uint64_t v65 = 0;
    uint64_t v64 = 0;
    uint64_t v63 = 0;
    uint64_t v67 = 0;
    uint64_t v69 = 0;
  }
  *(void *)&long long v123 = v65;
  *((void *)&v123 + 1) = v64;
  uint64_t v124 = v63;
  uint64_t v125 = v67;
  uint64_t v126 = v69;
  id v70 = objc_msgSend(a1, sel_publicAccountObject);
  id v71 = objc_msgSend(v70, sel_overduePaymentAmountValue);
  if (v71)
  {
    unint64_t v72 = v71;
    objc_msgSend(v71, sel_decimalValue);
    uint64_t v73 = v120;
    uint64_t v74 = *((void *)&v119 + 1);
    uint64_t v75 = v119;
    id v76 = objc_msgSend(v70, sel_currency);
    uint64_t v77 = sub_2439582D0();
    uint64_t v79 = v78;
  }
  else
  {

    uint64_t v75 = 0;
    uint64_t v74 = 0;
    uint64_t v73 = 0;
    uint64_t v77 = 0;
    uint64_t v79 = 0;
  }
  *(void *)&long long v119 = v75;
  *((void *)&v119 + 1) = v74;
  uint64_t v120 = v73;
  uint64_t v121 = v77;
  uint64_t v122 = v79;
  char v80 = (void *)ManagedInternalAccount.latestAccountBalanceObject.getter();
  if (v80)
  {
    id v81 = v80;
    uint64_t v82 = (uint64_t)v113;
    InternalAccountBalance.init(_:)(v81, (uint64_t)v113);
    uint64_t v83 = type metadata accessor for InternalAccountBalance(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56))(v82, 0, 1, v83);
  }
  else
  {
    uint64_t v84 = type metadata accessor for InternalAccountBalance(0);
    uint64_t v82 = (uint64_t)v113;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v84 - 8) + 56))(v113, 1, 1, v84);
  }
  uint64_t v85 = v114;
  Actions.init(_:)(objc_msgSend(a1, sel_actionsObject), v114);
  char v86 = objc_msgSend(a1, sel_isAccountEnabled);
  char v87 = objc_msgSend(a1, sel_isAccountMismatched);
  sub_24378711C(objc_msgSend(a1, sel_lastAccountRefreshFailureValue), &v118);
  sub_24378711C(objc_msgSend(a1, sel_lastTransactionsRefreshFailureValue), &v117);
  unsigned int v88 = objc_msgSend(a1, sel_originTypeValue);
  if (v88 > 3)
  {
    __break(1u);
  }
  else
  {
    char v116 = v88;
    id v89 = objc_msgSend(a1, sel_publicAccountObject);
    id v90 = objc_msgSend(v89, sel_institutionName);

    uint64_t v91 = sub_2439582D0();
    uint64_t v93 = v92;

    char v94 = objc_msgSend(a1, sel_thirdPartyShareable);
    id v95 = objc_msgSend(a1, (SEL)&selRef_type + 3);
    id v96 = objc_msgSend(v95, sel_openingDate);

    if (v96)
    {
      uint64_t v97 = (uint64_t)v109;
      sub_2439573A0();

      uint64_t v98 = sub_243957400();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v98 - 8) + 56))(v97, 0, 1, v98);
    }
    else
    {
      uint64_t v99 = sub_243957400();
      uint64_t v97 = (uint64_t)v109;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v99 - 8) + 56))(v109, 1, 1, v99);
    }
    InternalAccount.init(id:fullyQualifiedAccountIdentifier:consentID:fpanIds:externalAccountId:accountType:accountNumber:displayName:accountDescription:accountStatus:currency:creditLimit:nextPaymentDate:minimumPaymentAmount:overduePaymentAmount:accountBalance:actions:isAccountEnabled:isAccountMismatched:accountRefreshFailure:transactionsRefreshFailure:originType:institutionName:thirdPartyShareable:openingDate:)((uint64_t)v110, &v138, (uint64_t)v111, v108, v107, v106, &v136, v132, v112, v105, v104, v103, v102, &v131, v101, v100, &v127, v115, &v123,
      &v119,
      v82,
      v85,
      v86,
      v87,
      &v118,
      &v117,
      &v116,
      v91,
      v93,
      v94,
      v97);
  }
}

void sub_2437842D0(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_externalAccountId);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_2439582D0();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_243784338(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  if (*(void *)(a1 + 8)) {
    uint64_t v3 = sub_2439582A0();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  objc_msgSend(v2, sel_setExternalAccountId_);
}

void ManagedInternalAccount.fullyQualifiedAccountIdentifier.getter(uint64_t *a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_accountId);
  uint64_t v4 = sub_2439582D0();
  uint64_t v6 = v5;

  id v7 = objc_msgSend(v1, sel_institutionId);
  uint64_t v8 = sub_2439582D0();
  uint64_t v10 = v9;

  *a1 = v4;
  a1[1] = v6;
  a1[2] = v8;
  a1[3] = v10;
}

void ManagedInternalAccount.id.getter()
{
  id v1 = objc_msgSend(v0, sel_publicAccountObject);
  id v2 = [v1 id];

  sub_243957460();
}

void ManagedInternalAccount.accountType.getter(unsigned char *a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_publicAccountObject);
  ManagedAccount.accountType.getter(a1);
}

void ManagedInternalAccount.accountStatus.getter(char *a1@<X8>)
{
  id v2 = v1;
  id v4 = objc_msgSend(v2, sel_accountStatusValue);
  if (!v4)
  {
    char v7 = 4;
    goto LABEL_5;
  }
  uint64_t v5 = v4;
  id v6 = objc_msgSend(v4, sel_integerValue);
  if ((unint64_t)v6 < 4)
  {
    char v7 = (char)v6;

LABEL_5:
    *a1 = v7;
    return;
  }
  sub_243959330();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v5, sel_description);
  sub_2439582D0();

  sub_243958460();
  swift_bridgeObjectRelease();
  sub_243959540();
  __break(1u);
}

void ManagedInternalAccount.accountNumber.getter(uint64_t a1@<X8>)
{
  id v2 = v1;
  AccountNumberSchemeType.init(rawValue:)((Swift::Int16)objc_msgSend(v2, sel_accountNumberSchemeTypeValue));
  if (v8 == 6)
  {
    sub_243959330();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_accountNumberSchemeTypeValue);
    sub_2439598D0();
    sub_243958460();
    swift_bridgeObjectRelease();
    sub_243959540();
    __break(1u);
  }
  else
  {
    id v4 = objc_msgSend(v2, sel_accountNumberValue);
    uint64_t v5 = sub_2439582D0();
    uint64_t v7 = v6;

    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = v8;
  }
}

uint64_t ManagedInternalAccount.displayName.getter()
{
  return sub_2437869C4((SEL *)&selRef_displayName);
}

uint64_t ManagedInternalAccount.accountDescription.getter()
{
  id v1 = objc_msgSend(v0, sel_publicAccountObject);
  id v2 = objc_msgSend(v1, sel_accountDescription);

  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_2439582D0();

  return v3;
}

unint64_t ManagedInternalAccount.latestAccountBalanceObject.getter()
{
  uint64_t v1 = sub_243957490();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  id v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_msgSend(v0, sel_managedObjectContext);
  if (!v5) {
    return 0;
  }
  uint64_t v6 = v5;
  type metadata accessor for ManagedInternalAccountBalance();
  id v7 = objc_msgSend(v0, sel_publicAccountObject);
  id v8 = [v7 id];

  sub_243957460();
  unint64_t v9 = static ManagedInternalAccountBalance.latestAccountBalance(forAccountID:in:)((uint64_t)v4, (uint64_t)v6);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);

  return v9;
}

uint64_t ManagedInternalAccount.nextPaymentDate.getter@<X0>(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_publicAccountObject);
  id v4 = objc_msgSend(v3, sel_nextPaymentDate);

  if (v4)
  {
    sub_2439573A0();

    uint64_t v5 = sub_243957400();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a1;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = sub_243957400();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a1;
    uint64_t v9 = 1;
  }

  return v6(v8, v9, 1, v7);
}

void ManagedInternalAccount.creditLimit.getter(void *a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_publicAccountObject);
  id v4 = objc_msgSend(v3, sel_creditLimitAmountValue);
  if (v4)
  {
    uint64_t v5 = v4;
    objc_msgSend(v4, sel_decimalValue);
    uint64_t v6 = v15;
    uint64_t v7 = v14;
    uint64_t v8 = v13;
    id v9 = objc_msgSend(v3, sel_currency);
    uint64_t v10 = sub_2439582D0();
    uint64_t v12 = v11;
  }
  else
  {

    uint64_t v8 = 0;
    uint64_t v7 = 0;
    uint64_t v6 = 0;
    uint64_t v10 = 0;
    uint64_t v12 = 0;
  }
  *a1 = v8;
  a1[1] = v7;
  a1[2] = v6;
  a1[3] = v10;
  a1[4] = v12;
}

void ManagedInternalAccount.minimumPaymentAmount.getter(void *a1@<X8>)
{
}

void ManagedInternalAccount.overduePaymentAmount.getter(void *a1@<X8>)
{
}

void sub_243784D34(SEL *a1@<X0>, void *a2@<X8>)
{
  id v5 = objc_msgSend(v2, sel_publicAccountObject);
  id v6 = [v5 *a1];
  if (v6)
  {
    uint64_t v7 = v6;
    objc_msgSend(v6, sel_decimalValue);
    uint64_t v8 = v17;
    uint64_t v9 = v16;
    uint64_t v10 = v15;
    id v11 = objc_msgSend(v5, sel_currency);
    uint64_t v12 = sub_2439582D0();
    uint64_t v14 = v13;
  }
  else
  {

    uint64_t v10 = 0;
    uint64_t v9 = 0;
    uint64_t v8 = 0;
    uint64_t v12 = 0;
    uint64_t v14 = 0;
  }
  *a2 = v10;
  a2[1] = v9;
  a2[2] = v8;
  a2[3] = v12;
  a2[4] = v14;
}

id sub_243784E2C@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_originTypeValue);
  *a2 = (_WORD)result;
  return result;
}

id sub_243784E60(__int16 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setOriginTypeValue_, *a1);
}

id sub_243784E74@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_thirdPartyShareable);
  *a2 = (_BYTE)result;
  return result;
}

id sub_243784EA8(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setThirdPartyShareable_, *a1);
}

void static ManagedInternalAccount.migrate(_:to:)(void *a1, void *a2)
{
  uint64_t v4 = sub_243957490();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (void *)sub_2439582A0();
  id v9 = objc_msgSend(a2, sel_mutableSetValueForKeyPath_, v8);

  objc_msgSend(v9, sel_addObject_, a1);
  id v10 = [a2 id];
  sub_243957460();

  id v11 = (void *)sub_243957430();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  objc_msgSend(a1, sel_setConsentID_, v11);
}

void ManagedInternalAccount.lastAccountRefreshFailure.setter(unsigned char *a1)
{
}

id ManagedInternalAccount.__allocating_init(_:consent:context:)(uint64_t a1, void *a2, void *a3)
{
  id v5 = sub_2437886F4(a1, a2, a3);

  return v5;
}

{
  objc_class *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  id v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  char *v42;
  id v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  id v49;
  void *v50;
  id v51;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  id v62;

  id v60 = a2;
  uint64_t v6 = sub_243957400();
  id v56 = *(void *)(v6 - 8);
  id v57 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v55 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D97360);
  MEMORY[0x270FA5388](v8 - 8);
  id v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = (void *)type metadata accessor for InternalAccountBalance(0);
  id v61 = *(v11 - 1);
  uint64_t v62 = v11;
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v54 = (uint64_t)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v58 = (uint64_t)&v53 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v59 = (uint64_t)&v53 - v16;
  unsigned int v17 = (int *)type metadata accessor for InternalAccount();
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v20 = type metadata accessor for Actions();
  MEMORY[0x270FA5388](v20 - 8);
  id v22 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v23 = objc_msgSend(objc_allocWithZone(v3), sel_initWithContext_, a3);
  uint64_t v24 = (void *)sub_2439582A0();
  objc_msgSend(v23, sel_setAccountId_, v24);

  uint64_t v25 = (void *)sub_2439582A0();
  objc_msgSend(v23, sel_setInstitutionId_, v25);

  uint64_t v26 = (void *)sub_243957430();
  objc_msgSend(v23, sel_setConsentID_, v26);

  id v27 = (void *)sub_243958630();
  objc_msgSend(v23, sel_setFpanIds_, v27);

  if (*(void *)(a1 + v17[8] + 8))
  {
    swift_bridgeObjectRetain();
    uint64_t v28 = (void *)sub_2439582A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v28 = 0;
  }
  objc_msgSend(v23, sel_setExternalAccountId_, v28);

  uint64_t v29 = *(unsigned __int8 *)(a1 + v17[10] + 16);
  swift_bridgeObjectRetain();
  uint64_t v30 = (void *)sub_2439582A0();
  objc_msgSend(v23, sel_setAccountNumberValue_, v30);

  objc_msgSend(v23, sel_setAccountNumberSchemeTypeValue_, v29);
  swift_bridgeObjectRelease();
  type metadata accessor for ManagedAccountActions();
  sub_243789C98(a1 + v17[20], (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for Actions);
  id v31 = a3;
  id v32 = sub_2437C4980((uint64_t)v22, (uint64_t)v31);

  objc_msgSend(v23, sel_setActionsObject_, v32);
  id v33 = 0;
  if (*(unsigned char *)(a1 + v17[13]) != 4) {
    id v33 = (void *)sub_243958930();
  }
  objc_msgSend(v23, sel_setAccountStatusValue_, v33);

  objc_msgSend(v23, sel_setOriginTypeValue_, *(unsigned __int8 *)(a1 + v17[25]));
  objc_msgSend(v23, sel_setThirdPartyShareable_, *(unsigned __int8 *)(a1 + v17[27]));
  objc_msgSend(v23, sel_setIsAccountEnabled_, *(unsigned __int8 *)(a1 + v17[21]));
  type metadata accessor for ManagedAccount();
  sub_243789C98(a1, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for InternalAccount);
  uint64_t v34 = v31;
  uint64_t v35 = v60;
  id v36 = ManagedAccount.__allocating_init(_:consent:context:)((uint64_t)v19, v35, v34);
  objc_msgSend(v23, sel_setPublicAccountObject_, v36);

  id v37 = (void *)sub_2439582A0();
  id v38 = objc_msgSend(v35, sel_mutableSetValueForKeyPath_, v37);

  objc_msgSend(v38, sel_addObject_, v23);
  sub_24337C254(a1 + v17[19], (uint64_t)v10, &qword_268D97360);
  if ((*(unsigned int (**)(char *, uint64_t, id))(v61 + 48))(v10, 1, v62) == 1)
  {

    sub_243789D68(a1, (uint64_t (*)(void))type metadata accessor for InternalAccount);
    sub_24337C1BC((uint64_t)v10, &qword_268D97360);
  }
  else
  {
    uint64_t v39 = v59;
    sub_243789D00((uint64_t)v10, v59, type metadata accessor for InternalAccountBalance);
    id v40 = v58;
    sub_243789C98(v39, v58, type metadata accessor for InternalAccountBalance);
    uint64_t v62 = v23;
    id v41 = v34;
    uint64_t v42 = v55;
    sub_2439573B0();
    id v43 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ManagedInternalAccountBalance()), sel_initWithContext_, v41);
    id v44 = (void *)sub_243957350();
    objc_msgSend(v43, sel_setLastUpdatedAt_, v44);

    type metadata accessor for ManagedAccountBalance();
    uint64_t v45 = v40;
    id v46 = v54;
    sub_243789C98(v45, v54, type metadata accessor for InternalAccountBalance);
    id v47 = v62;
    uint64_t v48 = v41;
    uint64_t v49 = sub_2433BEFB4(v46, v47, (uint64_t)v48);

    objc_msgSend(v43, sel_setPublicAccountBalanceObject_, v49);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v42, v57);
    sub_243789D68(v58, type metadata accessor for InternalAccountBalance);

    uint64_t v50 = (void *)sub_2439582A0();
    uint64_t v51 = objc_msgSend(v47, sel_mutableSetValueForKeyPath_, v50);

    objc_msgSend(v51, sel_addObject_, v43);
    sub_243789D68(v59, type metadata accessor for InternalAccountBalance);
    sub_243789D68(a1, (uint64_t (*)(void))type metadata accessor for InternalAccount);
  }
  return v23;
}

id ManagedInternalAccount.__allocating_init(_:consent:context:)(void *a1, void *a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v84 = sub_243957400();
  uint64_t v81 = *(void *)(v84 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v84);
  uint64_t v83 = &v73[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  char v80 = &v73[-v11];
  MEMORY[0x270FA5388](v10);
  uint64_t v82 = &v73[-v12];
  uint64_t v13 = sub_243957490();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = &v73[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = type metadata accessor for Institution(0);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = &v73[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v20 = objc_allocWithZone(v4);
  id v78 = a3;
  id v21 = objc_msgSend(v20, sel_initWithContext_, a3);
  id v79 = a1;
  id v22 = objc_msgSend(a1, sel_accountIdentifier);
  if (!v22)
  {
    sub_2439582D0();
    id v22 = (id)sub_2439582A0();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v21, sel_setAccountId_, v22);

  Institution.init(_:)(objc_msgSend(a2, sel_institutionObject), (uint64_t)v19);
  swift_bridgeObjectRetain();
  sub_243789D68((uint64_t)v19, type metadata accessor for Institution);
  id v23 = (void *)sub_2439582A0();
  swift_bridgeObjectRelease();
  objc_msgSend(v21, sel_setInstitutionId_, v23);

  id v24 = [a2 id];
  sub_243957460();

  uint64_t v25 = (void *)sub_243957430();
  uint64_t v26 = *(void (**)(unsigned char *, uint64_t))(v14 + 8);
  v26(v16, v13);
  objc_msgSend(v21, sel_setConsentID_, v25);

  type metadata accessor for ManagedAccountActions();
  id v27 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v28 = v78;
  id v29 = objc_msgSend(v27, sel_initWithContext_, v78);
  objc_msgSend(v21, sel_setActionsObject_, v29);

  id v30 = objc_allocWithZone((Class)type metadata accessor for ManagedAccount());
  id v31 = v79;
  id v32 = a2;
  id v33 = v28;
  id v34 = objc_msgSend(v30, sel_initWithContext_, v33);
  sub_243957480();
  uint64_t v35 = (void *)sub_243957430();
  v26(v16, v13);
  objc_msgSend(v34, sel_setId_, v35);

  sub_2433EA754(v34, v32, v31);
  objc_msgSend(v21, sel_setPublicAccountObject_, v34);

  objc_msgSend(v21, sel_setIsAccountSyncable_, 0);
  _s10FinanceKit22ManagedInternalAccountC6update_7consent09withAppleE0yAC_AA0C7ConsentCSo07FKAppleE0CtFZ_0(v21, v32, v31);
  id v36 = (void *)sub_2439582A0();
  id v79 = v32;
  id v37 = objc_msgSend(v32, sel_mutableSetValueForKeyPath_, v36);

  objc_msgSend(v37, sel_addObject_, v21);
  type metadata accessor for ManagedInternalAccountBalance();
  id v38 = v21;
  id v39 = v31;
  id v77 = v33;
  id v40 = sub_2433B853C(v39, v38, v77);
  id v41 = (void *)sub_2439582A0();
  id v78 = v38;
  id v42 = objc_msgSend(v38, sel_mutableSetValueForKeyPath_, v41);

  objc_msgSend(v42, sel_addObject_, v40);
  id v76 = v40;
  id v43 = objc_msgSend(v40, sel_lastUpdatedAt);
  id v44 = v82;
  sub_2439573A0();

  if (qword_26B0C7E58 != -1) {
    swift_once();
  }
  uint64_t v45 = sub_243957B10();
  __swift_project_value_buffer(v45, (uint64_t)qword_26B0C7E40);
  id v46 = v80;
  uint64_t v47 = v81;
  uint64_t v48 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v81 + 16);
  uint64_t v49 = v84;
  v48(v80, v44, v84);
  uint64_t v50 = v83;
  v48(v83, v44, v49);
  id v51 = v39;
  id v52 = sub_243957AF0();
  os_log_type_t v53 = sub_243958B10();
  int v54 = v53;
  if (os_log_type_enabled(v52, v53))
  {
    uint64_t v55 = swift_slowAlloc();
    uint64_t v75 = swift_slowAlloc();
    uint64_t v86 = v75;
    *(_DWORD *)uint64_t v55 = 136315650;
    id v56 = objc_msgSend(v51, sel_accountIdentifier);
    int v74 = v54;
    id v57 = v56;
    uint64_t v58 = v46;
    uint64_t v59 = sub_2439582D0();
    uint64_t v60 = v47;
    unint64_t v62 = v61;

    uint64_t v85 = sub_2433781FC(v59, v62, &v86);
    sub_2439590C0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v55 + 12) = 2080;
    sub_243788FE4((unint64_t *)&qword_268D98A70, MEMORY[0x263F07490]);
    uint64_t v63 = v84;
    uint64_t v64 = sub_2439598D0();
    uint64_t v85 = sub_2433781FC(v64, v65, &v86);
    sub_2439590C0();
    swift_bridgeObjectRelease();
    id v66 = *(void (**)(unsigned char *, uint64_t))(v60 + 8);
    v66(v58, v63);
    *(_WORD *)(v55 + 22) = 2048;
    uint64_t v67 = v83;
    sub_243957380();
    uint64_t v85 = v68;
    sub_2439590C0();
    v66(v67, v63);
    _os_log_impl(&dword_243363000, v52, (os_log_type_t)v74, "Inserted new balance for account: %s lastUpdateAt: %s (%f ms)", (uint8_t *)v55, 0x20u);
    uint64_t v69 = v75;
    swift_arrayDestroy();
    MEMORY[0x245680100](v69, -1, -1);
    MEMORY[0x245680100](v55, -1, -1);

    id v70 = v78;
    v66(v82, v63);
  }
  else
  {

    id v70 = v78;
    id v71 = *(void (**)(unsigned char *, uint64_t))(v47 + 8);
    v71(v50, v49);
    v71(v46, v49);

    v71(v44, v49);
  }
  return v70;
}

void ManagedInternalAccount.setTransactionRelationship(_:)(uint64_t a1)
{
}

void ManagedInternalAccount.accountMatchingType.setter(unsigned char *a1)
{
  if (*a1 == 5) {
    uint64_t v2 = 0;
  }
  else {
    uint64_t v2 = sub_243958930();
  }
  id v3 = (id)v2;
  objc_msgSend(v1, sel_setAccountMatchingTypeValue_);
}

void ManagedInternalAccount.setAccountBalanceRelationship(_:)(uint64_t a1)
{
}

void sub_2437859DC(uint64_t a1)
{
  id v3 = (void *)sub_2439582A0();
  id v4 = objc_msgSend(v1, sel_mutableSetValueForKeyPath_, v3);

  objc_msgSend(v4, sel_addObject_, a1);
}

void sub_243785A6C(id *a1)
{
  id v1 = objc_msgSend(*a1, sel_consentID);
  sub_243957460();
}

void sub_243785ACC(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_fpanIds);
  uint64_t v4 = sub_243958650();

  *a2 = v4;
}

void sub_243785B28(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24337C254(a1, (uint64_t)v10, (uint64_t *)&unk_26B0C8E20);
  uint64_t v11 = *a2;
  uint64_t v12 = sub_243957400();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) != 1)
  {
    uint64_t v14 = (void *)sub_243957350();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
  }
  objc_msgSend(v11, *a5, v14);
}

void sub_243785C5C(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_accountPaymentInformationData);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_2439570C0();
    unint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v7 = 0xF000000000000000;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_243785CC4(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  if (*(void *)(a1 + 8) >> 60 == 15) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = sub_2439570A0();
  }
  id v4 = (id)v3;
  objc_msgSend(v2, sel_setAccountPaymentInformationData_);
}

id ManagedInternalAccount.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedInternalAccount.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)swift_getObjectType();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedInternalAccount.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ManagedInternalAccount.validateForInsert()()
{
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ManagedInternalAccount.validateForUpdate()()
{
}

id sub_243785F4C(SEL *a1)
{
  v13[1] = *(id *)MEMORY[0x263EF8340];
  v12.super_class = (Class)swift_getObjectType();
  v13[0] = 0;
  v12.receiver = v1;
  if (objc_msgSendSuper2(&v12, *a1, v13))
  {
    id v3 = v13[0];
    id result = objc_msgSend(v1, sel_originTypeValue);
    if (result <= 3) {
      return result;
    }
    id v5 = v1;
    id v6 = objc_msgSend(v5, sel_description);
    uint64_t v7 = sub_2439582D0();
    uint64_t v9 = v8;

    sub_2433C09D4();
    swift_allocError();
    *(void *)uint64_t v10 = v7;
    *(void *)(v10 + 8) = v9;
    *(_OWORD *)(v10 + 16) = xmmword_24398B160;
    *(unsigned char *)(v10 + 32) = 0;
  }
  else
  {
    id v11 = v13[0];
    sub_243956E10();
  }
  return (id)swift_willThrow();
}

uint64_t sub_243786098(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  id v5 = a1;
  a4();

  return 1;
}

uint64_t ManagedInternalAccount.accountNumber.setter(uint64_t a1)
{
  uint64_t v2 = *(unsigned __int8 *)(a1 + 16);
  swift_bridgeObjectRetain();
  id v3 = (void *)sub_2439582A0();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setAccountNumberValue_, v3);

  objc_msgSend(v1, sel_setAccountNumberSchemeTypeValue_, v2);

  return swift_bridgeObjectRelease();
}

id ManagedInternalAccount.originType.setter(unsigned __int8 *a1)
{
  return objc_msgSend(v1, sel_setOriginTypeValue_, *a1);
}

uint64_t ManagedInternalAccount.currency.getter()
{
  return sub_2437869C4((SEL *)&selRef_currency);
}

uint64_t sub_2437869C4(SEL *a1)
{
  id v3 = objc_msgSend(v1, sel_publicAccountObject);
  id v4 = [v3 *a1];

  uint64_t v5 = sub_2439582D0();
  return v5;
}

void ManagedInternalAccount.latestAccountBalance.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = (void *)ManagedInternalAccount.latestAccountBalanceObject.getter();
  if (v2)
  {
    id v6 = v2;
    InternalAccountBalance.init(_:)(v6, a1);
    uint64_t v3 = type metadata accessor for InternalAccountBalance(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(a1, 0, 1, v3);
  }
  else
  {
    uint64_t v4 = type metadata accessor for InternalAccountBalance(0);
    uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
    v5(a1, 1, 1, v4);
  }
}

void ManagedInternalAccount.actions.getter(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_actionsObject);

  Actions.init(_:)(v3, a1);
}

void ManagedInternalAccount.lastAccountRefreshFailure.getter(char *a1@<X8>)
{
}

void ManagedInternalAccount.lastTransactionsRefreshFailure.getter(char *a1@<X8>)
{
}

void sub_243786B8C(SEL *a1@<X0>, char *a2@<X8>)
{
  id v4 = [v2 *a1];

  sub_24378711C(v4, a2);
}

id ManagedInternalAccount.originType.getter@<X0>(unsigned char *a1@<X8>)
{
  id result = objc_msgSend(v1, sel_originTypeValue);
  if (result > 3) {
    __break(1u);
  }
  else {
    *a1 = (_BYTE)result;
  }
  return result;
}

id FKAccount.init(_:)(void *a1)
{
  uint64_t v2 = type metadata accessor for InternalAccount();
  MEMORY[0x270FA5388](v2 - 8);
  id v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = a1;
  InternalAccount.init(_:)(v5, (uint64_t)v4);
  id v6 = FKAccount.init(from:)(v4);

  return v6;
}

void sub_243786CA8(unsigned char *a1, void **a2)
{
  uint64_t v2 = *a2;
  if (*a1 == 4) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = sub_243958930();
  }
  id v4 = (id)v3;
  objc_msgSend(v2, sel_setAccountStatusValue_);
}

uint64_t sub_243786D14(uint64_t a1, void **a2)
{
  uint64_t v2 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v3 = *a2;
  swift_bridgeObjectRetain();
  id v4 = (void *)sub_2439582A0();
  objc_msgSend(v3, sel_setAccountNumberValue_, v4);

  objc_msgSend(v3, sel_setAccountNumberSchemeTypeValue_, v2);

  return swift_bridgeObjectRelease();
}

uint64_t (*ManagedInternalAccount.accountNumber.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  ManagedInternalAccount.accountNumber.getter(a1);
  return sub_243786DE4;
}

uint64_t sub_243786DE4(uint64_t a1, char a2)
{
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  swift_bridgeObjectRetain();
  id v5 = (void *)sub_2439582A0();
  id v6 = *(void **)(a1 + 24);
  if (a2)
  {
    objc_msgSend(v6, sel_setAccountNumberValue_, v5);

    objc_msgSend(v6, sel_setAccountNumberSchemeTypeValue_, v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setAccountNumberValue_, v5);

    objc_msgSend(v6, sel_setAccountNumberSchemeTypeValue_, v4);
  }

  return swift_bridgeObjectRelease();
}

void ManagedInternalAccount.accountMatchingType.getter(char *a1@<X8>)
{
  uint64_t v2 = v1;
  id v4 = objc_msgSend(v2, sel_accountMatchingTypeValue);
  if (!v4)
  {
    char v7 = 5;
    goto LABEL_5;
  }
  id v5 = v4;
  id v6 = objc_msgSend(v4, sel_integerValue);
  if ((unint64_t)v6 < 5)
  {
    char v7 = (char)v6;

LABEL_5:
    *a1 = v7;
    return;
  }
  sub_243959330();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v5, sel_description);
  sub_2439582D0();

  sub_243958460();
  swift_bridgeObjectRelease();
  sub_243959540();
  __break(1u);
}

void sub_243786FEC(unsigned char *a1, void **a2)
{
  uint64_t v2 = *a2;
  if (*a1 == 5) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = sub_243958930();
  }
  id v4 = (id)v3;
  objc_msgSend(v2, sel_setAccountMatchingTypeValue_);
}

void (*ManagedInternalAccount.accountMatchingType.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  ManagedInternalAccount.accountMatchingType.getter((char *)(a1 + 8));
  return sub_2437870AC;
}

void sub_2437870AC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8) == 5) {
    uint64_t v2 = 0;
  }
  else {
    uint64_t v2 = sub_243958930();
  }
  id v3 = (id)v2;
  objc_msgSend(*(id *)a1, sel_setAccountMatchingTypeValue_);
}

void sub_24378711C(void *a1@<X0>, char *a2@<X8>)
{
  if (!a1)
  {
    char v5 = 2;
LABEL_8:
    *a2 = v5;
    return;
  }
  id v3 = a1;
  id v4 = objc_msgSend(v3, sel_integerValue);
  if (!v4)
  {
    char v5 = 0;
LABEL_7:

    goto LABEL_8;
  }
  if (v4 == (id)1)
  {
    char v5 = 1;
    goto LABEL_7;
  }
  sub_243959330();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_integerValue);
  sub_2439598D0();
  sub_243958460();
  swift_bridgeObjectRelease();
  sub_243959540();
  __break(1u);
}

void (*ManagedInternalAccount.lastAccountRefreshFailure.modify(uint64_t a1))(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = v1;
  sub_24378711C(objc_msgSend(v1, sel_lastAccountRefreshFailureValue), (char *)(a1 + 8));
  return sub_2437872A8;
}

void sub_2437872A8(uint64_t a1, uint64_t a2)
{
}

void sub_2437872B4(unsigned char *a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  id v6 = *a2;
  if (*a1 == 2) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = sub_243958930();
  }
  id v8 = (id)v7;
  [v6 *a5];
}

void ManagedInternalAccount.lastTransactionsRefreshFailure.setter(unsigned char *a1)
{
}

void sub_243787330(unsigned char *a1, SEL *a2)
{
  if (*a1 == 2) {
    uint64_t v4 = 0;
  }
  else {
    uint64_t v4 = sub_243958930();
  }
  id v5 = (id)v4;
  [v2 *a2];
}

void (*ManagedInternalAccount.lastTransactionsRefreshFailure.modify(uint64_t a1))(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = v1;
  sub_24378711C(objc_msgSend(v1, sel_lastTransactionsRefreshFailureValue), (char *)(a1 + 8));
  return sub_243787408;
}

void sub_243787408(uint64_t a1, uint64_t a2)
{
}

void sub_243787414(uint64_t a1, uint64_t a2, SEL *a3)
{
  if (*(unsigned char *)(a1 + 8) == 2) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = sub_243958930();
  }
  id v6 = (id)v5;
  [*(id *)a1 *a3];
}

id (*ManagedInternalAccount.originType.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v2 = v1;
  *(void *)a1 = v2;
  id result = (id (*)(uint64_t))objc_msgSend(v2, sel_originTypeValue);
  if (result > 3)
  {
    __break(1u);
  }
  else
  {
    *(unsigned char *)(a1 + 8) = (_BYTE)result;
    return sub_2437874F0;
  }
  return result;
}

id sub_2437874F0(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setOriginTypeValue_, *(unsigned __int8 *)(a1 + 8));
}

void ManagedInternalAccount.transactions.getter()
{
  uint64_t v1 = type metadata accessor for InternalTransaction(0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v1 - 8);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v23 - v6;
  uint64_t v8 = sub_243956E30();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  id v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = objc_msgSend(v0, sel_transactionObjects);
  uint64_t v13 = (uint64_t)objc_msgSend(v12, sel_count);
  uint64_t v32 = MEMORY[0x263F8EE78];
  sub_2434CCC58(0, v13 & ~(v13 >> 63), 0);
  id v14 = v12;
  sub_243958E00();

  if (v13 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return;
  }
  id v24 = v14;
  uint64_t v25 = v9;
  uint64_t v26 = v7;
  if (v13)
  {
    sub_243788FE4((unint64_t *)&qword_268D9B448, MEMORY[0x263F06DC0]);
    do
    {
      sub_2439590B0();
      if (!v31) {
        goto LABEL_18;
      }
      sub_24337BE00((uint64_t)&v30, (uint64_t)&v28);
      type metadata accessor for ManagedInternalTransaction();
      swift_dynamicCast();
      InternalTransaction.init(_:)(v27, (uint64_t)v5);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v30);
      uint64_t v15 = v32;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2434CCC58(0, *(void *)(v15 + 16) + 1, 1);
        uint64_t v15 = v32;
      }
      unint64_t v17 = *(void *)(v15 + 16);
      unint64_t v16 = *(void *)(v15 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_2434CCC58(v16 > 1, v17 + 1, 1);
        uint64_t v15 = v32;
      }
      *(void *)(v15 + 16) = v17 + 1;
      sub_243789D00((uint64_t)v5, v15+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(void *)(v2 + 72) * v17, type metadata accessor for InternalTransaction);
    }
    while (--v13);
  }
  sub_243788FE4((unint64_t *)&qword_268D9B448, MEMORY[0x263F06DC0]);
  sub_2439590B0();
  uint64_t v18 = (uint64_t)v26;
  uint64_t v19 = v24;
  while (v29)
  {
    sub_24337BEE4(&v28, &v30);
    sub_24337BE00((uint64_t)&v30, (uint64_t)&v28);
    type metadata accessor for ManagedInternalTransaction();
    swift_dynamicCast();
    InternalTransaction.init(_:)(v27, v18);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v30);
    uint64_t v20 = v32;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_2434CCC58(0, *(void *)(v20 + 16) + 1, 1);
      uint64_t v20 = v32;
    }
    unint64_t v22 = *(void *)(v20 + 16);
    unint64_t v21 = *(void *)(v20 + 24);
    if (v22 >= v21 >> 1)
    {
      sub_2434CCC58(v21 > 1, v22 + 1, 1);
      uint64_t v20 = v32;
    }
    *(void *)(v20 + 16) = v22 + 1;
    sub_243789D00(v18, v20+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(void *)(v2 + 72) * v22, type metadata accessor for InternalTransaction);
    sub_2439590B0();
  }
  (*(void (**)(char *, uint64_t))(v25 + 8))(v11, v8);
  sub_24337C1BC((uint64_t)&v28, &qword_26B0C5CA0);
}

uint64_t static ManagedInternalAccount.entityName.getter()
{
  return 0x6C616E7265746E49;
}

void sub_2437879D4()
{
  qword_268D9FAB8 = MEMORY[0x263F8EE80];
}

uint64_t static ManagedInternalAccount.mappedKeyPaths.getter()
{
  if (qword_268D96C00 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static ManagedInternalAccount.mappedKeyPaths.setter(uint64_t a1)
{
  if (qword_268D96C00 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_268D9FAB8 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static ManagedInternalAccount.mappedKeyPaths.modify())()
{
  if (qword_268D96C00 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_243787B68()
{
  return 0x6C616E7265746E49;
}

uint64_t sub_243787B8C()
{
  if (qword_268D96C00 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

void _s10FinanceKit22ManagedInternalAccountC6update_4withyAC_AA0cE5MatchCtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = sub_243957400();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  id v39 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  id v40 = (char *)&v38 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
  MEMORY[0x270FA5388](v9 - 8);
  id v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = objc_msgSend(a1, sel_accountId);
  uint64_t v13 = sub_2439582D0();
  uint64_t v15 = v14;

  id v16 = objc_msgSend(a2, sel_accountID);
  uint64_t v17 = sub_2439582D0();
  uint64_t v19 = v18;

  if (v13 == v17 && v15 == v19)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v20 = sub_243959940();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0)
    {
      __break(1u);
      goto LABEL_16;
    }
  }
  id v21 = objc_msgSend(a1, sel_institutionId);
  uint64_t v22 = sub_2439582D0();
  uint64_t v24 = v23;

  id v25 = objc_msgSend(a2, sel_institutionID);
  uint64_t v26 = sub_2439582D0();
  uint64_t v28 = v27;

  if (v22 != v26 || v24 != v28)
  {
    char v29 = sub_243959940();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v29) {
      goto LABEL_9;
    }
LABEL_16:
    __break(1u);
    return;
  }
  swift_bridgeObjectRelease_n();
LABEL_9:
  objc_msgSend(a1, sel_setAccountMatchObject_, a2);
  id v30 = objc_msgSend(a2, sel_fpanID);
  objc_msgSend(a1, sel_setExternalAccountId_, v30);

  ManagedAccountMatch.matchingType.getter(&v41);
  uint64_t v31 = (void *)sub_243958930();
  objc_msgSend(a1, sel_setAccountMatchingTypeValue_, v31);

  objc_msgSend(a1, sel_setIsAccountMismatched_, objc_msgSend(a2, sel_isMismatched));
  id v32 = objc_msgSend(a1, sel_earliestAccountValidationStartDate);
  if (v32)
  {
    id v33 = v32;
    uint64_t v34 = (uint64_t)v40;
    sub_2439573A0();

    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v11, v34, v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v11, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4) != 1)
    {
      sub_24337C1BC((uint64_t)v11, (uint64_t *)&unk_26B0C8E20);
      return;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v11, 1, 1, v4);
    uint64_t v34 = (uint64_t)v40;
  }
  sub_24337C1BC((uint64_t)v11, (uint64_t *)&unk_26B0C8E20);
  uint64_t v35 = v39;
  sub_2439573B0();
  Date.advancedByDays(_:)(1, v34);
  id v36 = *(void (**)(char *, uint64_t))(v5 + 8);
  v36(v35, v4);
  id v37 = (void *)sub_243957350();
  v36((char *)v34, v4);
  objc_msgSend(a1, sel_setEarliestAccountValidationStartDate_, v37);
}

void _s10FinanceKit22ManagedInternalAccountC6update_7consent09withAppleE0yAC_AA0C7ConsentCSo07FKAppleE0CtFZ_0(void *a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = objc_msgSend(v5, sel_accountIdentifier);
  sub_2439582D0();

  swift_bridgeObjectRetain();
  uint64_t v7 = (void *)sub_2439582A0();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setAccountNumberValue_, v7);

  objc_msgSend(a1, sel_setAccountNumberSchemeTypeValue_, 5);
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setAccountNumberSchemeTypeValue_, 5);
  objc_msgSend(v5, sel_status);
  uint64_t v8 = (void *)sub_243958930();
  objc_msgSend(a1, sel_setAccountStatusValue_, v8);

  id v9 = objc_msgSend(v5, sel_type);
  if ((unint64_t)v9 >= 3)
  {
    sub_243959540();
    __break(1u);
  }
  else
  {
    objc_msgSend(a1, sel_setOriginTypeValue_, ((_BYTE)v9 + 1));
    objc_msgSend(a1, sel_setThirdPartyShareable_, 1);
    id v10 = objc_msgSend(a1, sel_publicAccountObject);
    sub_2433EA754(v10, a2, v5);
  }
}

uint64_t _s10FinanceKit22ManagedInternalAccountC6update_7consent07withRawE0yAC_AA0C7ConsentCAA0I15BankConnectDataO0E0OtFZ_0(void *a1, void *a2, uint64_t a3)
{
  id v32 = a2;
  uint64_t v5 = type metadata accessor for RawBankConnectData.Actions();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for RawBankConnectData.LiabilityAccount(0);
  MEMORY[0x270FA5388](v31);
  id v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for RawBankConnectData.AssetAccount(0);
  MEMORY[0x270FA5388](v30);
  id v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for RawBankConnectData.Account(0);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v30 - v16;
  RawBankConnectData.Account.fpanIds.getter();
  uint64_t v18 = (void *)sub_243958630();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setFpanIds_, v18);

  sub_243789C98(a3, (uint64_t)v17, type metadata accessor for RawBankConnectData.Account);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_243789D00((uint64_t)v17, (uint64_t)v9, type metadata accessor for RawBankConnectData.LiabilityAccount);
    char v19 = v9[40];
    swift_bridgeObjectRetain();
    char v20 = type metadata accessor for RawBankConnectData.LiabilityAccount;
    uint64_t v21 = (uint64_t)v9;
  }
  else
  {
    sub_243789D00((uint64_t)v17, (uint64_t)v11, type metadata accessor for RawBankConnectData.AssetAccount);
    char v19 = v11[40];
    swift_bridgeObjectRetain();
    char v20 = type metadata accessor for RawBankConnectData.AssetAccount;
    uint64_t v21 = (uint64_t)v11;
  }
  sub_243789D68(v21, v20);
  swift_bridgeObjectRetain();
  uint64_t v22 = (void *)sub_2439582A0();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setAccountNumberValue_, v22);

  objc_msgSend(a1, sel_setAccountNumberSchemeTypeValue_, (0x4030201uLL >> (8 * v19)) & 7);
  swift_bridgeObjectRelease();
  RawBankConnectData.Account.accountStatus.getter(&v33);
  if (v33 == 4) {
    uint64_t v23 = 0;
  }
  else {
    uint64_t v23 = (void *)sub_243958930();
  }
  objc_msgSend(a1, sel_setAccountStatusValue_, v23);

  sub_243789C98(a3, (uint64_t)v15, type metadata accessor for RawBankConnectData.Account);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_243789D00((uint64_t)v15, (uint64_t)v9, type metadata accessor for RawBankConnectData.LiabilityAccount);
    uint64_t v24 = v9[*(int *)(v31 + 64)];
    id v25 = type metadata accessor for RawBankConnectData.LiabilityAccount;
    uint64_t v26 = (uint64_t)v9;
  }
  else
  {
    sub_243789D00((uint64_t)v15, (uint64_t)v11, type metadata accessor for RawBankConnectData.AssetAccount);
    uint64_t v24 = v11[*(int *)(v30 + 48)];
    id v25 = type metadata accessor for RawBankConnectData.AssetAccount;
    uint64_t v26 = (uint64_t)v11;
  }
  sub_243789D68(v26, v25);
  objc_msgSend(a1, sel_setThirdPartyShareable_, v24);
  id v27 = objc_msgSend(a1, sel_publicAccountObject);
  _s10FinanceKit14ManagedAccountC6update_7consent07withRawD0yAC_AA0C7ConsentCAA0H15BankConnectDataO0D0OtFZ_0(v27, v32, a3);

  id v28 = objc_msgSend(a1, sel_actionsObject);
  RawBankConnectData.Account.actions.getter((uint64_t)v7);
  _s10FinanceKit21ManagedAccountActionsC6update_5usingyAC_AA18RawBankConnectDataO0E0VtFZ_0(v28, (uint64_t)v7);

  return sub_243789D68((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for RawBankConnectData.Actions);
}

id sub_2437886F4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = v3;
  id v79 = a2;
  uint64_t v7 = sub_243957400();
  uint64_t v77 = *(void *)(v7 - 8);
  uint64_t v78 = v7;
  MEMORY[0x270FA5388](v7);
  id v76 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_243957490();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v80 = v9;
  uint64_t v81 = v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Institution(0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = type metadata accessor for RawBankConnectData.LiabilityAccount(0);
  MEMORY[0x270FA5388](v71);
  uint64_t v17 = (char *)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = type metadata accessor for RawBankConnectData.AssetAccount(0);
  MEMORY[0x270FA5388](v70);
  char v19 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for RawBankConnectData.Account(0);
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  uint64_t v74 = (uint64_t)&v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v75 = (uint64_t)&v69 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  id v27 = (char *)&v69 - v26;
  MEMORY[0x270FA5388](v25);
  char v29 = (char *)&v69 - v28;
  id v30 = objc_allocWithZone(v4);
  uint64_t v73 = a3;
  id v31 = objc_msgSend(v30, sel_initWithContext_, a3);
  uint64_t v82 = a1;
  sub_243789C98(a1, (uint64_t)v29, type metadata accessor for RawBankConnectData.Account);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_243789D00((uint64_t)v29, (uint64_t)v17, type metadata accessor for RawBankConnectData.LiabilityAccount);
    id v32 = v31;
    swift_bridgeObjectRetain();
    char v33 = type metadata accessor for RawBankConnectData.LiabilityAccount;
    uint64_t v34 = (uint64_t)v17;
  }
  else
  {
    sub_243789D00((uint64_t)v29, (uint64_t)v19, type metadata accessor for RawBankConnectData.AssetAccount);
    id v35 = v31;
    swift_bridgeObjectRetain();
    char v33 = type metadata accessor for RawBankConnectData.AssetAccount;
    uint64_t v34 = (uint64_t)v19;
  }
  sub_243789D68(v34, v33);
  id v36 = (void *)sub_2439582A0();
  swift_bridgeObjectRelease();
  objc_msgSend(v31, sel_setAccountId_, v36);

  id v37 = v79;
  Institution.init(_:)(objc_msgSend(v79, sel_institutionObject), (uint64_t)v15);
  swift_bridgeObjectRetain();
  sub_243789D68((uint64_t)v15, type metadata accessor for Institution);
  uint64_t v38 = (void *)sub_2439582A0();
  swift_bridgeObjectRelease();
  objc_msgSend(v31, sel_setInstitutionId_, v38);

  id v39 = [v37 id];
  sub_243957460();

  id v40 = (void *)sub_243957430();
  char v41 = *(void (**)(char *, uint64_t))(v81 + 8);
  v81 += 8;
  unint64_t v72 = v41;
  v41(v12, v80);
  objc_msgSend(v31, sel_setConsentID_, v40);

  objc_msgSend(v31, sel_setOriginTypeValue_, 0);
  sub_243789C98(v82, (uint64_t)v27, type metadata accessor for RawBankConnectData.Account);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_243789D00((uint64_t)v27, (uint64_t)v17, type metadata accessor for RawBankConnectData.LiabilityAccount);
    uint64_t v42 = v17[*(int *)(v71 + 64)];
    id v43 = type metadata accessor for RawBankConnectData.LiabilityAccount;
    uint64_t v44 = (uint64_t)v17;
  }
  else
  {
    sub_243789D00((uint64_t)v27, (uint64_t)v19, type metadata accessor for RawBankConnectData.AssetAccount);
    uint64_t v42 = v19[*(int *)(v70 + 48)];
    id v43 = type metadata accessor for RawBankConnectData.AssetAccount;
    uint64_t v44 = (uint64_t)v19;
  }
  sub_243789D68(v44, v43);
  objc_msgSend(v31, sel_setThirdPartyShareable_, v42);
  type metadata accessor for ManagedAccountActions();
  id v45 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v46 = v73;
  id v47 = objc_msgSend(v45, sel_initWithContext_, v73);
  objc_msgSend(v31, sel_setActionsObject_, v47);

  uint64_t v48 = v82;
  uint64_t v49 = v75;
  sub_243789C98(v82, v75, type metadata accessor for RawBankConnectData.Account);
  id v50 = objc_allocWithZone((Class)type metadata accessor for ManagedAccount());
  id v51 = v79;
  id v52 = v46;
  id v53 = objc_msgSend(v50, (SEL)&selRef_updateSequenceNumber, v52);
  sub_243957480();
  int v54 = (void *)sub_243957430();
  v72(v12, v80);
  objc_msgSend(v53, sel_setId_, v54);

  _s10FinanceKit14ManagedAccountC6update_7consent07withRawD0yAC_AA0C7ConsentCAA0H15BankConnectDataO0D0OtFZ_0(v53, v51, v49);
  sub_243789D68(v49, type metadata accessor for RawBankConnectData.Account);
  objc_msgSend(v31, sel_setPublicAccountObject_, v53);

  _s10FinanceKit22ManagedInternalAccountC6update_7consent07withRawE0yAC_AA0C7ConsentCAA0I15BankConnectDataO0E0OtFZ_0(v31, v51, v48);
  uint64_t v55 = (void *)sub_2439582A0();
  id v56 = objc_msgSend(v51, sel_mutableSetValueForKeyPath_, v55);

  objc_msgSend(v56, sel_addObject_, v31);
  sub_243789C98(v48, v49, type metadata accessor for RawBankConnectData.Account);
  id v57 = v31;
  id v58 = v52;
  uint64_t v59 = v76;
  sub_2439573B0();
  id v60 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ManagedInternalAccountBalance()), sel_initWithContext_, v58);
  unint64_t v61 = (void *)sub_243957350();
  objc_msgSend(v60, sel_setLastUpdatedAt_, v61);

  type metadata accessor for ManagedAccountBalance();
  uint64_t v62 = v74;
  sub_243789C98(v49, v74, type metadata accessor for RawBankConnectData.Account);
  id v63 = v57;
  id v64 = v58;
  id v65 = sub_2433BF6D8(v62, v63, (uint64_t)v64);

  objc_msgSend(v60, sel_setPublicAccountBalanceObject_, v65);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v59, v78);
  sub_243789D68(v49, type metadata accessor for RawBankConnectData.Account);

  id v66 = (void *)sub_2439582A0();
  id v67 = objc_msgSend(v63, sel_mutableSetValueForKeyPath_, v66);

  objc_msgSend(v67, sel_addObject_, v60);
  sub_243789D68(v82, type metadata accessor for RawBankConnectData.Account);
  return v63;
}

uint64_t sub_243788FE4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_24378902C(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_24378904C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_institutionId()
{
  return sel_institutionId;
}

void sub_243789064(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_243789084(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_243789094(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  id v3 = (id)sub_243957430();
  objc_msgSend(v2, sel_setConsentID_, v3);
}

char *keypath_get_selector_fpanIds()
{
  return sel_fpanIds;
}

void sub_243789100(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  id v3 = (id)sub_243958630();
  objc_msgSend(v2, sel_setFpanIds_, v3);
}

char *keypath_get_selector_externalAccountId()
{
  return sel_externalAccountId;
}

char *keypath_get_selector_accountNumberValue()
{
  return sel_accountNumberValue;
}

void sub_243789184(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_2437891A4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_accountNumberSchemeTypeValue()
{
  return sel_accountNumberSchemeTypeValue;
}

id sub_2437891BC@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_accountNumberSchemeTypeValue);
  *a2 = (_WORD)result;
  return result;
}

id sub_2437891F0(__int16 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAccountNumberSchemeTypeValue_, *a1);
}

char *keypath_get_selector_accountStatusValue()
{
  return sel_accountStatusValue;
}

id sub_243789210@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_accountStatusValue);
  *a2 = result;
  return result;
}

id sub_24378924C(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAccountStatusValue_, *a1);
}

char *keypath_get_selector_isAccountEnabled()
{
  return sel_isAccountEnabled;
}

id sub_24378926C@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_isAccountEnabled);
  *a2 = (_BYTE)result;
  return result;
}

id sub_2437892A0(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIsAccountEnabled_, *a1);
}

char *keypath_get_selector_isAccountSyncable()
{
  return sel_isAccountSyncable;
}

id sub_2437892C0@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_isAccountSyncable);
  *a2 = (_BYTE)result;
  return result;
}

id sub_2437892F4(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIsAccountSyncable_, *a1);
}

char *keypath_get_selector_isAccountMismatched()
{
  return sel_isAccountMismatched;
}

id sub_243789314@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_isAccountMismatched);
  *a2 = (_BYTE)result;
  return result;
}

id sub_243789348(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIsAccountMismatched_, *a1);
}

char *keypath_get_selector_accountMatchingTypeValue()
{
  return sel_accountMatchingTypeValue;
}

id sub_243789368@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_accountMatchingTypeValue);
  *a2 = result;
  return result;
}

id sub_2437893A4(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAccountMatchingTypeValue_, *a1);
}

char *keypath_get_selector_lastAccountRefreshDate()
{
  return sel_lastAccountRefreshDate;
}

uint64_t sub_2437893C4@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2433BE2CC(a1, (SEL *)&selRef_lastAccountRefreshDate, a2);
}

void sub_2437893E4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_lastPaymentInfoRefreshDate()
{
  return sel_lastPaymentInfoRefreshDate;
}

uint64_t sub_243789410@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2433BE2CC(a1, (SEL *)&selRef_lastPaymentInfoRefreshDate, a2);
}

void sub_243789430(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_lastTransactionsRefreshDate()
{
  return sel_lastTransactionsRefreshDate;
}

uint64_t sub_24378945C@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2433BE2CC(a1, (SEL *)&selRef_lastTransactionsRefreshDate, a2);
}

void sub_24378947C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_accountRequestAttemptCount()
{
  return sel_accountRequestAttemptCount;
}

id sub_2437894A8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_accountRequestAttemptCount);
  *a2 = result;
  return result;
}

id sub_2437894DC(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAccountRequestAttemptCount_, *a1);
}

char *keypath_get_selector_lastAccountRequestAttemptDate()
{
  return sel_lastAccountRequestAttemptDate;
}

uint64_t sub_2437894FC@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2433BE2CC(a1, (SEL *)&selRef_lastAccountRequestAttemptDate, a2);
}

void sub_24378951C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_earliestAccountRequestStartDate()
{
  return sel_earliestAccountRequestStartDate;
}

uint64_t sub_243789548@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2433BE2CC(a1, (SEL *)&selRef_earliestAccountRequestStartDate, a2);
}

void sub_243789568(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_transactionsRequestAttemptCount()
{
  return sel_transactionsRequestAttemptCount;
}

id sub_243789594@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_transactionsRequestAttemptCount);
  *a2 = result;
  return result;
}

id sub_2437895C8(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setTransactionsRequestAttemptCount_, *a1);
}

char *keypath_get_selector_lastTransactionsRequestAttemptDate()
{
  return sel_lastTransactionsRequestAttemptDate;
}

uint64_t sub_2437895E8@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2433BE2CC(a1, (SEL *)&selRef_lastTransactionsRequestAttemptDate, a2);
}

void sub_243789608(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_earliestTransactionsRequestStartDate()
{
  return sel_earliestTransactionsRequestStartDate;
}

uint64_t sub_243789634@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2433BE2CC(a1, (SEL *)&selRef_earliestTransactionsRequestStartDate, a2);
}

void sub_243789654(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_historicalTransactionsRequestAttemptCount()
{
  return sel_historicalTransactionsRequestAttemptCount;
}

id sub_243789680@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_historicalTransactionsRequestAttemptCount);
  *a2 = result;
  return result;
}

id sub_2437896B4(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setHistoricalTransactionsRequestAttemptCount_, *a1);
}

char *keypath_get_selector_lastHistoricalTransactionsRequestAttemptDate()
{
  return sel_lastHistoricalTransactionsRequestAttemptDate;
}

uint64_t sub_2437896D4@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2433BE2CC(a1, (SEL *)&selRef_lastHistoricalTransactionsRequestAttemptDate, a2);
}

void sub_2437896F4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_earliestHistoricalTransactionsRequestStartDate()
{
  return sel_earliestHistoricalTransactionsRequestStartDate;
}

uint64_t sub_243789720@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2433BE2CC(a1, (SEL *)&selRef_earliestHistoricalTransactionsRequestStartDate, a2);
}

void sub_243789740(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_oldestFetchedHistoricalTransactionTimestamp()
{
  return sel_oldestFetchedHistoricalTransactionTimestamp;
}

uint64_t sub_24378976C@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2433BE2CC(a1, (SEL *)&selRef_oldestFetchedHistoricalTransactionTimestamp, a2);
}

void sub_24378978C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_earliestAccountValidationStartDate()
{
  return sel_earliestAccountValidationStartDate;
}

uint64_t sub_2437897B8@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2433BE2CC(a1, (SEL *)&selRef_earliestAccountValidationStartDate, a2);
}

void sub_2437897D8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_actionsObject()
{
  return sel_actionsObject;
}

id sub_243789804@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_actionsObject);
  *a2 = result;
  return result;
}

id sub_243789840(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setActionsObject_, *a1);
}

char *keypath_get_selector_accountPaymentInformationData()
{
  return sel_accountPaymentInformationData;
}

char *keypath_get_selector_accountMatchObject()
{
  return sel_accountMatchObject;
}

id sub_243789874@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_accountMatchObject);
  *a2 = result;
  return result;
}

id sub_2437898B0(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAccountMatchObject_, *a1);
}

char *keypath_get_selector_publicAccountObject()
{
  return sel_publicAccountObject;
}

id sub_2437898D0@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_publicAccountObject);
  *a2 = result;
  return result;
}

id sub_24378990C(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPublicAccountObject_, *a1);
}

id sub_243789920@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_transactionObjects);
  *a2 = result;
  return result;
}

id sub_24378995C(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setTransactionObjects_, *a1);
}

char *keypath_get_selector_accountBalanceObjects()
{
  return sel_accountBalanceObjects;
}

id sub_24378997C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_accountBalanceObjects);
  *a2 = result;
  return result;
}

id sub_2437899B8(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAccountBalanceObjects_, *a1);
}

id sub_2437899CC@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_originTypeValue);
  *a2 = (_WORD)result;
  return result;
}

id sub_243789A00(__int16 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setOriginTypeValue_, *a1);
}

char *keypath_get_selector_labRequestObject()
{
  return sel_labRequestObject;
}

id sub_243789A20@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_labRequestObject);
  *a2 = result;
  return result;
}

id sub_243789A5C(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setLabRequestObject_, *a1);
}

id sub_243789A70@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_thirdPartyShareable);
  *a2 = (_BYTE)result;
  return result;
}

id sub_243789AA4(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setThirdPartyShareable_, *a1);
}

void sub_243789AB8(unsigned char *a1@<X8>)
{
  ManagedInternalAccount.accountStatus.getter(&v2);
  *a1 = v2;
}

void sub_243789AF8(uint64_t a1@<X8>)
{
  ManagedInternalAccount.accountNumber.getter((uint64_t)v4);
  uint64_t v2 = v4[1];
  char v3 = v5;
  *(void *)a1 = v4[0];
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = v3;
}

void sub_243789B40(unsigned char *a1@<X8>)
{
  ManagedInternalAccount.accountMatchingType.getter(&v2);
  *a1 = v2;
}

void sub_243789B80(id *a1@<X0>, unsigned char *a2@<X8>)
{
}

void sub_243789B8C(unsigned char *a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_243789BAC(id *a1@<X0>, unsigned char *a2@<X8>)
{
}

void keypath_get_76Tm(id *a1@<X0>, SEL *a2@<X3>, unsigned char *a3@<X8>)
{
  sub_24378711C([*a1 *a2], &v4);
  *a3 = v4;
}

void sub_243789C04(unsigned char *a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id sub_243789C24@<X0>(unsigned char *a1@<X8>)
{
  id result = ManagedInternalAccount.originType.getter(&v3);
  *a1 = v3;
  return result;
}

id sub_243789C60(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setOriginTypeValue_, *a1);
}

uint64_t type metadata accessor for ManagedInternalAccount()
{
  return self;
}

uint64_t sub_243789C98(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_243789D00(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_243789D68(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t InstitutionPrivacyLabels.init(rawValue:)@<X0>(uint64_t result@<X0>, _WORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t InstitutionPrivacyLabels.init(fromRawPrivacyLabels:)@<X0>(uint64_t a1@<X0>, _WORD *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    __int16 v4 = 0;
    uint64_t v5 = (char *)(a1 + 32);
    do
    {
      uint64_t v6 = *v5++;
      v4 |= word_24398B43C[v6];
      --v3;
    }
    while (v3);
  }
  else
  {
    __int16 v4 = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t InstitutionPrivacyLabels.rawValue.getter()
{
  return *v0;
}

void static InstitutionPrivacyLabels.contactDetails.getter(_WORD *a1@<X8>)
{
  *a1 = 1;
}

void static InstitutionPrivacyLabels.accountDetails.getter(_WORD *a1@<X8>)
{
  *a1 = 2;
}

void static InstitutionPrivacyLabels.balances.getter(_WORD *a1@<X8>)
{
  *a1 = 4;
}

void static InstitutionPrivacyLabels.transactions.getter(_WORD *a1@<X8>)
{
  *a1 = 8;
}

void static InstitutionPrivacyLabels.paymentDetails.getter(_WORD *a1@<X8>)
{
  *a1 = 16;
}

void static InstitutionPrivacyLabels.scheduledPayments.getter(_WORD *a1@<X8>)
{
  *a1 = 32;
}

void static InstitutionPrivacyLabels.rewards.getter(_WORD *a1@<X8>)
{
  *a1 = 64;
}

void sub_243789E88()
{
  int v0 = (unsigned __int16)word_26F8AE16A;
  if (((unsigned __int16)word_26F8AE16A & ~(unsigned __int16)word_26F8AE168) == 0) {
    int v0 = 0;
  }
  int v1 = v0 | (unsigned __int16)word_26F8AE168;
  int v2 = (unsigned __int16)word_26F8AE16C;
  if (((unsigned __int16)word_26F8AE16C & ~v1) == 0) {
    int v2 = 0;
  }
  int v3 = v2 | v1;
  int v4 = (unsigned __int16)word_26F8AE16E;
  if (((unsigned __int16)word_26F8AE16E & ~v3) == 0) {
    int v4 = 0;
  }
  int v5 = v4 | v3;
  int v6 = (unsigned __int16)word_26F8AE170;
  if (((unsigned __int16)word_26F8AE170 & ~v5) == 0) {
    int v6 = 0;
  }
  int v7 = v6 | v5;
  int v8 = (unsigned __int16)word_26F8AE172;
  if (((unsigned __int16)word_26F8AE172 & ~v7) == 0) {
    int v8 = 0;
  }
  int v9 = v8 | v7;
  __int16 v10 = word_26F8AE174;
  if (((unsigned __int16)word_26F8AE174 & ~v9) == 0) {
    __int16 v10 = 0;
  }
  word_268D9FAC0 = v10 | v9;
}

uint64_t static InstitutionPrivacyLabels.allLabels.getter@<X0>(_WORD *a1@<X8>)
{
  if (qword_268D96C08 != -1) {
    uint64_t result = swift_once();
  }
  *a1 = word_268D9FAC0;
  return result;
}

uint64_t sub_243789F5C()
{
  return sub_2439585F0();
}

uint64_t sub_243789FBC()
{
  return sub_2439585A0();
}

unint64_t sub_24378A010()
{
  unint64_t result = qword_268D9FAC8;
  if (!qword_268D9FAC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FAC8);
  }
  return result;
}

unint64_t sub_24378A068()
{
  unint64_t result = qword_268D9FAD0;
  if (!qword_268D9FAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FAD0);
  }
  return result;
}

unint64_t sub_24378A0C0()
{
  unint64_t result = qword_268D9FAD8;
  if (!qword_268D9FAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FAD8);
  }
  return result;
}

unint64_t sub_24378A118()
{
  unint64_t result = qword_268D9FAE0;
  if (!qword_268D9FAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FAE0);
  }
  return result;
}

ValueMetadata *type metadata accessor for InstitutionPrivacyLabels()
{
  return &type metadata for InstitutionPrivacyLabels;
}

void *ManagedAccountPaymentInfoImporter.insertOrUpdateAccountPaymentInfo(_:with:context:key:)(_OWORD *a1)
{
  long long v2 = a1[1];
  v5[0] = *a1;
  v5[1] = v2;
  long long v3 = a1[3];
  long long v5[2] = a1[2];
  v5[3] = v3;
  v5[4] = a1[4];
  unint64_t result = sub_24378A67C((uint64_t *)v5);
  if (!v1)
  {
    int v6 = v5;
    MEMORY[0x270FA5388](result);
    sub_243958D90();
    swift_bridgeObjectRelease();
    return *(void **)&v5[0];
  }
  return result;
}

BOOL static ManagedAccountPaymentInfoImporterError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ManagedAccountPaymentInfoImporterError.hash(into:)()
{
  return sub_243959AE0();
}

uint64_t ManagedAccountPaymentInfoImporterError.hashValue.getter()
{
  return sub_243959B40();
}

void sub_24378A338(uint64_t a1@<X5>, uint64_t a2@<X6>, uint64_t *a3@<X8>)
{
  type metadata accessor for ManagedInternalAccount();
  sub_243958D90();
  if (!v3)
  {
    uint64_t v7 = sub_24367B140(a1, a2);
    uint64_t v9 = v8;
    __int16 v10 = (void *)sub_2439570A0();
    objc_msgSend(v11, sel_setAccountPaymentInformationData_, v10);

    *a3 = v7;
    a3[1] = v9;
  }
}

uint64_t static ManagedAccountPaymentInfoImporter.existingEnabledAccount(with:context:)()
{
  type metadata accessor for ManagedInternalAccount();
  uint64_t result = sub_243958D90();
  if (!v0) {
    return v2;
  }
  return result;
}

void sub_24378A498(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  type metadata accessor for ManagedInternalAccount();
  *(void *)&long long v19 = a1;
  *((void *)&v19 + 1) = a2;
  uint64_t v20 = a3;
  uint64_t v21 = a4;
  uint64_t v11 = (void *)static ManagedInternalAccount.existingAccount(with:in:)(&v19);
  if (!v5)
  {
    uint64_t v12 = v11;
    if (v11)
    {
      if (objc_msgSend(v11, sel_isAccountEnabled))
      {
        *a5 = v12;
      }
      else
      {
        if (qword_268D96B78 != -1) {
          swift_once();
        }
        uint64_t v14 = sub_243957B10();
        __swift_project_value_buffer(v14, (uint64_t)qword_268D9B250);
        uint64_t v15 = sub_243957AF0();
        os_log_type_t v16 = sub_243958AD0();
        if (os_log_type_enabled(v15, v16))
        {
          uint64_t v17 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v17 = 0;
          _os_log_impl(&dword_243363000, v15, v16, "Unable to update account, account is disabled", v17, 2u);
          MEMORY[0x245680100](v17, -1, -1);
        }

        sub_24378AAA8();
        swift_allocError();
        *uint64_t v18 = 1;
        swift_willThrow();
      }
    }
    else
    {
      sub_24378AAA8();
      swift_allocError();
      *uint64_t v13 = 0;
      swift_willThrow();
    }
  }
}

uint64_t ManagedAccountPaymentInfoImporter.deinit()
{
  return v0;
}

uint64_t ManagedAccountPaymentInfoImporter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void *sub_24378A67C(uint64_t *a1)
{
  uint64_t v1 = a1[4];
  long long v2 = *(_OWORD *)(a1 + 5);
  uint64_t v3 = a1[7];
  uint64_t v4 = a1[8];
  uint64_t v5 = a1[9];
  long long v24 = v2;
  if (!a1[1])
  {
    __int16 v10 = (void *)MEMORY[0x263F8EE78];
    if (!(void)v2) {
      goto LABEL_12;
    }
    goto LABEL_7;
  }
  long long v23 = *(_OWORD *)(a1 + 1);
  uint64_t v25 = a1[9];
  uint64_t v6 = a1[7];
  uint64_t v7 = a1[8];
  uint64_t v8 = *a1;
  uint64_t v9 = a1[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __int16 v10 = sub_24377750C(0, 1, 1, MEMORY[0x263F8EE78]);
  unint64_t v12 = v10[2];
  unint64_t v11 = v10[3];
  if (v12 >= v11 >> 1) {
    __int16 v10 = sub_24377750C((void *)(v11 > 1), v12 + 1, 1, v10);
  }
  void v10[2] = v12 + 1;
  uint64_t v13 = &v10[5 * v12];
  v13[4] = v8;
  *(_OWORD *)(v13 + 5) = v23;
  v13[7] = v9;
  *((unsigned char *)v13 + 64) = 0;
  uint64_t v4 = v7;
  uint64_t v3 = v6;
  uint64_t v5 = v25;
  if ((void)v24)
  {
LABEL_7:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      __int16 v10 = sub_24377750C(0, v10[2] + 1, 1, v10);
    }
    unint64_t v15 = v10[2];
    unint64_t v14 = v10[3];
    long long v16 = v24;
    if (v15 >= v14 >> 1)
    {
      uint64_t v22 = sub_24377750C((void *)(v14 > 1), v15 + 1, 1, v10);
      long long v16 = v24;
      __int16 v10 = v22;
    }
    void v10[2] = v15 + 1;
    uint64_t v17 = &v10[5 * v15];
    v17[4] = v1;
    *(_OWORD *)(v17 + 5) = v16;
    v17[7] = v3;
    *((unsigned char *)v17 + 64) = 1;
  }
LABEL_12:
  if (v5)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      __int16 v10 = sub_24377750C(0, v10[2] + 1, 1, v10);
    }
    unint64_t v19 = v10[2];
    unint64_t v18 = v10[3];
    if (v19 >= v18 >> 1) {
      __int16 v10 = sub_24377750C((void *)(v18 > 1), v19 + 1, 1, v10);
    }
    void v10[2] = v19 + 1;
    uint64_t v20 = &v10[5 * v19];
    void v20[4] = v4;
    v20[5] = v5;
    v20[6] = 0;
    v20[7] = 0;
    *((unsigned char *)v20 + 64) = 2;
  }
  return v10;
}

void sub_24378A8D0(uint64_t *a1@<X8>)
{
  sub_24378A338(*(void *)(v1 + 56), *(void *)(v1 + 64), a1);
}

void sub_24378A8F8(void *a1@<X8>)
{
}

unint64_t sub_24378A914()
{
  unint64_t result = qword_268D9FAE8;
  if (!qword_268D9FAE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FAE8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ManagedAccountPaymentInfoImporterError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24378AA34);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ManagedAccountPaymentInfoImporterError()
{
  return &type metadata for ManagedAccountPaymentInfoImporterError;
}

uint64_t type metadata accessor for ManagedAccountPaymentInfoImporter()
{
  return self;
}

uint64_t method lookup function for ManagedAccountPaymentInfoImporter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ManagedAccountPaymentInfoImporter);
}

unint64_t sub_24378AAA8()
{
  unint64_t result = qword_268D9FAF0;
  if (!qword_268D9FAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FAF0);
  }
  return result;
}

void sub_24378AAFC(void *a1@<X8>)
{
  sub_24378A498(v1[2], v1[3], v1[4], v1[5], a1);
}

uint64_t BankConnectService.loadGrantedAccounts(forConsentID:)(uint64_t a1, uint64_t a2)
{
  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  v3[13] = type metadata accessor for BankConnectService.Message();
  v3[14] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24378ABB8, 0, 0);
}

uint64_t sub_24378ABB8()
{
  uint64_t v1 = (void *)v0[14];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[10];
  v0[15] = *(void *)(v0[12] + 16);
  void *v1 = v3;
  v1[1] = v2;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  return MEMORY[0x270FA2498](sub_2433C20BC, 0, 0);
}

uint64_t BankConnectService.scheduleHistoricalTransactionTask(for:)(uint64_t *a1)
{
  *(void *)(v2 + 80) = v1;
  *(void *)(v2 + 88) = type metadata accessor for BankConnectService.Message();
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = *a1;
  *(void *)(v2 + 96) = v4;
  *(void *)(v2 + 104) = v5;
  *(_OWORD *)(v2 + 112) = *(_OWORD *)(a1 + 1);
  *(void *)(v2 + 128) = a1[3];
  return MEMORY[0x270FA2498](sub_24378ACF0, 0, 0);
}

uint64_t sub_24378ACF0()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[13];
  uint64_t v4 = v0[14];
  uint64_t v5 = (void *)v0[12];
  v0[17] = *(void *)(v0[10] + 16);
  void *v5 = v3;
  v5[1] = v4;
  long long v5[2] = v1;
  v5[3] = v2;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return MEMORY[0x270FA2498](sub_2433C24AC, 0, 0);
}

uint64_t sub_24378AD94(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_24337AF78;
  return BankConnectService.loadGrantedAccounts(forConsentID:)(a1, a2);
}

uint64_t sub_24378AE3C(uint64_t *a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_2433A9E8C;
  return BankConnectService.scheduleHistoricalTransactionTask(for:)(a1);
}

uint64_t dispatch thunk of BankConnectConnectionFinanceDataLoading.loadGrantedAccounts(forConsentID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 8) + **(int **)(a4 + 8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_24337AF78;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of BankConnectConnectionFinanceDataLoading.scheduleHistoricalTransactionTask(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 16) + **(int **)(a3 + 16));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_2433A9E8C;
  return v9(a1, a2, a3);
}

uint64_t static BankConnectSharedSymmetricKeyManagerError.== infix(_:_:)()
{
  return 1;
}

uint64_t BankConnectSharedSymmetricKeyManagerError.hash(into:)()
{
  return sub_243959AE0();
}

uint64_t BankConnectSharedSymmetricKeyManagerError.hashValue.getter()
{
  return sub_243959B40();
}

uint64_t BankConnectSharedSymmetricKeyManager.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t BankConnectSharedSymmetricKeyManager.init()()
{
  return v0;
}

uint64_t BankConnectSharedSymmetricKeyManager.key.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9FB28);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_24378B2B4((uint64_t)v5);
  if (!v1)
  {
    uint64_t v7 = sub_243957F30();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) == 1)
    {
      sub_24378B8A4(a1);
      return sub_24378BC8C((uint64_t)v5);
    }
    else
    {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v5, v7);
    }
  }
  return result;
}

uint64_t sub_24378B2B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v42 = *MEMORY[0x263EF8340];
  if (qword_268D96B78 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_243957B10();
  __swift_project_value_buffer(v2, (uint64_t)qword_268D9B250);
  uint64_t v3 = sub_243957AF0();
  os_log_type_t v4 = sub_243958AD0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_243363000, v3, v4, "Attempting to obtain existing shared key.", v5, 2u);
    MEMORY[0x245680100](v5, -1, -1);
  }

  unint64_t v6 = sub_24378BFF0();
  uint64_t v7 = (void *)*MEMORY[0x263F17520];
  uint64_t v41 = MEMORY[0x263F8D4F8];
  LOBYTE(v40) = 1;
  sub_24337BEE4(&v40, result);
  id v8 = v7;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v38 = v6;
  sub_2434EC820(result, v8, isUniquelyReferenced_nonNull_native);

  swift_bridgeObjectRelease();
  result[0] = 0;
  type metadata accessor for CFString(0);
  sub_24341CD24();
  CFDictionaryRef v10 = (const __CFDictionary *)sub_243958180();
  swift_bridgeObjectRelease();
  OSStatus v11 = SecItemCopyMatching(v10, result);

  if (v11 != -25300)
  {
    if (v11)
    {
      long long v24 = sub_243957AF0();
      os_log_type_t v25 = sub_243958AF0();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = (uint8_t *)swift_slowAlloc();
        uint64_t v27 = swift_slowAlloc();
        *(void *)&long long v40 = v27;
        *(_DWORD *)uint64_t v26 = 136315138;
        CFStringRef v28 = SecCopyErrorMessageString(v11, 0);
        if (v28)
        {
          char v29 = (__CFString *)v28;
          uint64_t v30 = sub_2439582D0();
          unint64_t v32 = v31;
        }
        else
        {
          uint64_t v30 = sub_2439598D0();
          unint64_t v32 = v33;
        }
        uint64_t v38 = sub_2433781FC(v30, v32, (uint64_t *)&v40);
        sub_2439590C0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_243363000, v24, v25, "keychain error: %s", v26, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x245680100](v27, -1, -1);
        MEMORY[0x245680100](v26, -1, -1);
      }

      sub_2439582D0();
      uint64_t v34 = v11;
      id v35 = objc_allocWithZone(MEMORY[0x263F087E8]);
      id v36 = (void *)sub_2439582A0();
      swift_bridgeObjectRelease();
      objc_msgSend(v35, sel_initWithDomain_code_userInfo_, v36, v34, 0, v38);
    }
    else
    {
      uint64_t v12 = sub_243957AF0();
      int v13 = sub_243958AD0();
      if (os_log_type_enabled(v12, (os_log_type_t)v13))
      {
        unint64_t v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v14 = 0;
        _os_log_impl(&dword_243363000, v12, (os_log_type_t)v13, "Obtained existing shared key.", v14, 2u);
        MEMORY[0x245680100](v14, -1, -1);
      }

      if (result[0])
      {
        swift_unknownObjectRetain();
        if (swift_dynamicCast())
        {
          long long v15 = v40;
          long long v16 = sub_243957AF0();
          os_log_type_t v17 = sub_243958AD0();
          if (os_log_type_enabled(v16, v17))
          {
            unint64_t v18 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)unint64_t v18 = 0;
            _os_log_impl(&dword_243363000, v16, v17, "Creating key with key data.", v18, 2u);
            MEMORY[0x245680100](v18, -1, -1);
          }

          long long v40 = v15;
          sub_243957F10();
          uint64_t v19 = sub_243957F30();
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(a1, 0, 1, v19);
          return swift_unknownObjectRelease();
        }
      }
      sub_24378C14C();
      swift_allocError();
    }
    swift_willThrow();
    return swift_unknownObjectRelease();
  }
  uint64_t v20 = sub_243957AF0();
  os_log_type_t v21 = sub_243958AD0();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v22 = 0;
    _os_log_impl(&dword_243363000, v20, v21, "BankConnect shared key does not exist.", v22, 2u);
    MEMORY[0x245680100](v22, -1, -1);
  }

  uint64_t v23 = sub_243957F30();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(a1, 1, 1, v23);
  return swift_unknownObjectRelease();
}

uint64_t sub_24378B8A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_243957F50();
  MEMORY[0x270FA5388](v2 - 8);
  if (qword_268D96B78 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_243957B10();
  __swift_project_value_buffer(v3, (uint64_t)qword_268D9B250);
  os_log_type_t v4 = sub_243957AF0();
  os_log_type_t v5 = sub_243958AD0();
  if (os_log_type_enabled(v4, v5))
  {
    unint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v6 = 0;
    _os_log_impl(&dword_243363000, v4, v5, "Creating new shared key", v6, 2u);
    MEMORY[0x245680100](v6, -1, -1);
  }

  sub_243957F40();
  sub_243957F20();
  uint64_t v7 = MEMORY[0x263F06F78];
  sub_243957EF0();
  long long v8 = v25;
  uint64_t v9 = sub_243957AF0();
  os_log_type_t v10 = sub_243958AD0();
  if (os_log_type_enabled(v9, v10))
  {
    OSStatus v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)OSStatus v11 = 0;
    _os_log_impl(&dword_243363000, v9, v10, "Adding newly created key to keychain.", v11, 2u);
    MEMORY[0x245680100](v11, -1, -1);
  }

  sub_24378BFF0();
  uint64_t v12 = (void *)*MEMORY[0x263F175A8];
  uint64_t v26 = v7;
  long long v25 = v8;
  sub_24337BEE4(&v25, v24);
  id v13 = v12;
  sub_243403DD0(v8, *((unint64_t *)&v8 + 1));
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_2434EC820(v24, v13, isUniquelyReferenced_nonNull_native);

  swift_bridgeObjectRelease();
  long long v15 = (void *)*MEMORY[0x263F16F38];
  uint64_t v26 = MEMORY[0x263F8D4F8];
  LOBYTE(v25) = 1;
  sub_24337BEE4(&v25, v24);
  id v16 = v15;
  char v17 = swift_isUniquelyReferenced_nonNull_native();
  sub_2434EC820(v24, v16, v17);

  swift_bridgeObjectRelease();
  type metadata accessor for CFString(0);
  sub_24341CD24();
  CFDictionaryRef v18 = (const __CFDictionary *)sub_243958180();
  swift_bridgeObjectRelease();
  OSStatus v19 = SecItemAdd(v18, 0);

  if (!v19) {
    return sub_2433807F0(v8, *((unint64_t *)&v8 + 1));
  }
  sub_2439582D0();
  id v20 = objc_allocWithZone(MEMORY[0x263F087E8]);
  os_log_type_t v21 = (void *)sub_2439582A0();
  swift_bridgeObjectRelease();
  objc_msgSend(v20, sel_initWithDomain_code_userInfo_, v21, v19, 0);

  swift_willThrow();
  sub_2433807F0(v8, *((unint64_t *)&v8 + 1));
  uint64_t v22 = sub_243957F30();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(a1, v22);
}

uint64_t sub_24378BC8C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9FB28);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t BankConnectSharedSymmetricKeyManager.deinit()
{
  return v0;
}

uint64_t BankConnectSharedSymmetricKeyManager.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_24378BD08()
{
  unint64_t result = qword_268D9FB30;
  if (!qword_268D9FB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FB30);
  }
  return result;
}

uint64_t sub_24378BD5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9FB28);
  MEMORY[0x270FA5388](v3 - 8);
  os_log_type_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_24378B2B4((uint64_t)v5);
  if (!v1)
  {
    uint64_t v7 = sub_243957F30();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) == 1)
    {
      sub_24378B8A4(a1);
      return sub_24378BC8C((uint64_t)v5);
    }
    else
    {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v5, v7);
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for BankConnectSharedSymmetricKeyManagerError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24378BF40);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for BankConnectSharedSymmetricKeyManagerError()
{
  return &type metadata for BankConnectSharedSymmetricKeyManagerError;
}

uint64_t dispatch thunk of BankConnectSharedSymmetricKeyManaging.key.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t type metadata accessor for BankConnectSharedSymmetricKeyManager()
{
  return self;
}

uint64_t method lookup function for BankConnectSharedSymmetricKeyManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for BankConnectSharedSymmetricKeyManager);
}

uint64_t dispatch thunk of BankConnectSharedSymmetricKeyManager.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

unint64_t sub_24378BFF0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_268D984E8);
  uint64_t inited = swift_initStackObject();
  uint64_t v1 = (void **)MEMORY[0x263F171B8];
  *(_OWORD *)(inited + 16) = xmmword_243961090;
  uint64_t v2 = *v1;
  *(void *)(inited + 32) = *v1;
  int v3 = (void *)*MEMORY[0x263F171C8];
  type metadata accessor for CFString(0);
  *(void *)(inited + 40) = v3;
  unsigned int v4 = (void *)*MEMORY[0x263F16E80];
  uint64_t v5 = MEMORY[0x263F8D310];
  *(void *)(inited + 64) = v6;
  *(void *)(inited + 72) = v4;
  *(void *)(inited + 80) = 0xD000000000000012;
  *(void *)(inited + 88) = 0x80000002439A5990;
  uint64_t v7 = (void *)*MEMORY[0x263F17090];
  *(void *)(inited + 104) = v5;
  *(void *)(inited + 112) = v7;
  *(void *)(inited + 120) = 0xD000000000000021;
  *(void *)(inited + 128) = 0x80000002439ABD80;
  uint64_t v8 = (void *)*MEMORY[0x263F16ED8];
  *(void *)(inited + 144) = v5;
  *(void *)(inited + 152) = v8;
  *(void *)(inited + 160) = 0xD00000000000002CLL;
  *(void *)(inited + 168) = 0x80000002439B1850;
  uint64_t v9 = (void *)*MEMORY[0x263F16E90];
  *(void *)(inited + 184) = v5;
  *(void *)(inited + 192) = v9;
  os_log_type_t v10 = (void *)*MEMORY[0x263F16ED0];
  *(void *)(inited + 224) = v6;
  *(void *)(inited + 200) = v10;
  id v11 = v2;
  id v12 = v3;
  id v13 = v4;
  id v14 = v7;
  id v15 = v8;
  id v16 = v9;
  id v17 = v10;
  return sub_243371AA0(inited);
}

unint64_t sub_24378C14C()
{
  unint64_t result = qword_268D9FB38;
  if (!qword_268D9FB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FB38);
  }
  return result;
}

uint64_t sub_24378C1A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_243957400();
  uint64_t v30 = *(void *)(v4 - 8);
  uint64_t v31 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D97EF8);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  os_log_type_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  id v13 = (unsigned __int8 *)&v30 - v12;
  MEMORY[0x270FA5388](v11);
  id v15 = (unsigned __int8 *)&v30 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9FBC8);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  OSStatus v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v20 = &v19[*(int *)(v17 + 56)];
  sub_24337C254(a1, (uint64_t)v19, &qword_268D97EF8);
  sub_24337C254(a2, (uint64_t)v20, &qword_268D97EF8);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_24337C254((uint64_t)v19, (uint64_t)v15, &qword_268D97EF8);
    if (swift_getEnumCaseMultiPayload()) {
      goto LABEL_11;
    }
    char v24 = *v15 == *v20;
LABEL_9:
    sub_24337C1BC((uint64_t)v19, &qword_268D97EF8);
    return v24 & 1;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_24337C254((uint64_t)v19, (uint64_t)v10, &qword_268D97EF8);
    if (swift_getEnumCaseMultiPayload() != 2)
    {
      (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v31);
      goto LABEL_11;
    }
    uint64_t v25 = v30;
    uint64_t v26 = v20;
    uint64_t v27 = v31;
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v6, v26, v31);
    char v24 = sub_243957390();
    CFStringRef v28 = *(void (**)(char *, uint64_t))(v25 + 8);
    v28(v6, v27);
    v28(v10, v27);
    goto LABEL_9;
  }
  sub_24337C254((uint64_t)v19, (uint64_t)v13, &qword_268D97EF8);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
LABEL_11:
    sub_24337C1BC((uint64_t)v19, &qword_268D9FBC8);
    char v24 = 0;
    return v24 & 1;
  }
  BOOL v22 = *v13 == *v20;
  char v23 = v20[1] ^ v13[1] ^ 1;
  sub_24337C1BC((uint64_t)v19, &qword_268D97EF8);
  char v24 = v22 & v23;
  return v24 & 1;
}

uint64_t sub_24378C4D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_243957400();
  uint64_t v28 = *(void *)(v4 - 8);
  uint64_t v29 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D97E88);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  os_log_type_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  id v13 = (char *)&v28 - v12;
  MEMORY[0x270FA5388](v11);
  id v15 = (unsigned __int8 *)&v28 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9FBD8);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  OSStatus v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v20 = &v19[*(int *)(v17 + 56)];
  sub_24337C254(a1, (uint64_t)v19, &qword_268D97E88);
  sub_24337C254(a2, (uint64_t)v20, &qword_268D97E88);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_24337C254((uint64_t)v19, (uint64_t)v15, &qword_268D97E88);
    if (swift_getEnumCaseMultiPayload()) {
      goto LABEL_11;
    }
    char v23 = *v15 == *v20;
LABEL_9:
    BOOL v22 = &qword_268D97E88;
    goto LABEL_12;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_24337C254((uint64_t)v19, (uint64_t)v10, &qword_268D97E88);
    if (swift_getEnumCaseMultiPayload() != 2)
    {
      (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v29);
      goto LABEL_11;
    }
    uint64_t v25 = v28;
    uint64_t v24 = v29;
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v6, v20, v29);
    char v23 = sub_243957390();
    uint64_t v26 = *(void (**)(char *, uint64_t))(v25 + 8);
    v26(v6, v24);
    v26(v10, v24);
    goto LABEL_9;
  }
  sub_24337C254((uint64_t)v19, (uint64_t)v13, &qword_268D97E88);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
LABEL_11:
    char v23 = 0;
    BOOL v22 = &qword_268D9FBD8;
    goto LABEL_12;
  }
  BOOL v22 = &qword_268D97E88;
  char v23 = sub_243959AC0();
LABEL_12:
  sub_24337C1BC((uint64_t)v19, v22);
  return v23 & 1;
}

uint64_t sub_24378C7DC(uint64_t a1, uint64_t a2)
{
  return sub_24378C804(a1, a2, &qword_268D97E78, &qword_268D9FBE0);
}

uint64_t sub_24378C7F0(uint64_t a1, uint64_t a2)
{
  return sub_24378C804(a1, a2, &qword_268D97EE8, &qword_268D9FBD0);
}

uint64_t sub_24378C804(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v8 = sub_243957400();
  uint64_t v34 = *(void *)(v8 - 8);
  uint64_t v35 = v8;
  MEMORY[0x270FA5388](v8);
  os_log_type_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (unsigned __int8 *)&v33 - v16;
  MEMORY[0x270FA5388](v15);
  OSStatus v19 = (unsigned __int8 *)&v33 - v18;
  id v36 = a4;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(a4);
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  char v23 = (char *)&v33 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = &v23[*(int *)(v21 + 56)];
  sub_24337C254(a1, (uint64_t)v23, a3);
  sub_24337C254(a2, (uint64_t)v24, a3);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_24337C254((uint64_t)v23, (uint64_t)v19, a3);
    if (!swift_getEnumCaseMultiPayload())
    {
      BOOL v26 = *v19 == *v24;
LABEL_7:
      char v27 = v26;
      goto LABEL_12;
    }
LABEL_14:
    char v27 = 0;
    uint64_t v31 = v36;
    goto LABEL_15;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_24337C254((uint64_t)v23, (uint64_t)v17, a3);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      BOOL v26 = *v17 == *v24;
      goto LABEL_7;
    }
    goto LABEL_14;
  }
  sub_24337C254((uint64_t)v23, (uint64_t)v14, a3);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    (*(void (**)(char *, uint64_t))(v34 + 8))(v14, v35);
    goto LABEL_14;
  }
  uint64_t v29 = v34;
  uint64_t v28 = v35;
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v10, v24, v35);
  char v27 = sub_243957390();
  uint64_t v30 = *(void (**)(char *, uint64_t))(v29 + 8);
  v30(v10, v28);
  v30(v14, v28);
LABEL_12:
  uint64_t v31 = a3;
LABEL_15:
  sub_24337C1BC((uint64_t)v23, v31);
  return v27 & 1;
}

void Order.ShippingFulfillment.StatusValues.init(order:orderContent:fulfillment:)(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v42 = a4;
  uint64_t v7 = (int *)type metadata accessor for Order.ShippingFulfillment.StatusValues(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v37 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D97EF0);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D97EF8);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v22 = a1;
  id v23 = a2;
  LOBYTE(a1) = ManagedOrderShippingFulfillment.status.getter();
  char v24 = ManagedOrderShippingFulfillment.shippingType.getter();
  id v39 = v23;
  id v40 = v22;
  Order.Fulfillment.DisplayStatus<>.init(order:orderContent:shippingStatus:shippingType:)(v22, v23, a1, v24 & 1, v21);
  uint64_t v38 = v18;
  ManagedOrderShippingFulfillment.estimatedDeliveryWindow.getter(v18);
  id v25 = objc_msgSend(a3, sel_deliveryDate);
  if (v25)
  {
    BOOL v26 = v25;
    sub_2439573A0();

    uint64_t v27 = sub_243957400();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v15, 0, 1, v27);
  }
  else
  {
    uint64_t v28 = sub_243957400();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v15, 1, 1, v28);
  }
  uint64_t v41 = v15;
  id v29 = objc_msgSend(a3, sel_shippedDate);
  if (v29)
  {
    uint64_t v30 = v29;
    sub_2439573A0();

    uint64_t v31 = sub_243957400();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v13, 0, 1, v31);
  }
  else
  {
    uint64_t v31 = sub_243957400();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v13, 1, 1, v31);
  }
  uint64_t v32 = (uint64_t)&v9[v7[5]];
  uint64_t v33 = type metadata accessor for Order.FulfillmentWindow(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v32, 1, 1, v33);
  uint64_t v34 = (uint64_t)&v9[v7[6]];
  sub_243957400();
  uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56);
  v35(v34, 1, 1, v31);
  uint64_t v36 = (uint64_t)&v9[v7[7]];
  v35(v36, 1, 1, v31);
  sub_24379636C((uint64_t)v21, (uint64_t)v9);
  sub_2433865D8((uint64_t)v38, v32, &qword_268D97EF0);
  sub_2433865D8((uint64_t)v41, v34, (uint64_t *)&unk_26B0C8E20);
  sub_2433865D8((uint64_t)v13, v36, (uint64_t *)&unk_26B0C8E20);
  sub_243796434((uint64_t)v9, v42, type metadata accessor for Order.ShippingFulfillment.StatusValues);
}

uint64_t Order.ShippingFulfillment.StatusValues.init(orderContent:fulfillment:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v35 = a1;
  uint64_t v36 = a3;
  uint64_t v5 = type metadata accessor for Order.ShippingFulfillment.StatusValues(0);
  uint64_t v6 = (int *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = v12;
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v32 - v13;
  uint64_t v34 = (uint64_t)&v32 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D97EF0);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for RawECommerceOrderContent(0);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D97EF8);
  MEMORY[0x270FA5388](v21 - 8);
  id v23 = (char *)&v32 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2437964BC(a1, (uint64_t)v20, type metadata accessor for RawECommerceOrderContent);
  char v38 = *(unsigned char *)(a2 + 40);
  char v24 = (int *)type metadata accessor for RawOrderShippingFulfillment();
  char v37 = *(unsigned char *)(a2 + v24[18]);
  Order.Fulfillment.DisplayStatus<>.init(orderContent:shippingStatus:shippingType:)((uint64_t)v20, &v38, &v37, v23);
  RawOrderShippingFulfillment.estimatedDeliveryWindow.getter(v17);
  sub_24337C254(a2 + v24[15], (uint64_t)v14, (uint64_t *)&unk_26B0C8E20);
  sub_24337C254(a2 + v24[17], (uint64_t)v12, (uint64_t *)&unk_26B0C8E20);
  uint64_t v25 = (uint64_t)&v8[v6[7]];
  uint64_t v26 = type metadata accessor for Order.FulfillmentWindow(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 1, 1, v26);
  uint64_t v27 = (uint64_t)&v8[v6[8]];
  uint64_t v28 = sub_243957400();
  id v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56);
  v29(v27, 1, 1, v28);
  uint64_t v30 = (uint64_t)&v8[v6[9]];
  v29(v30, 1, 1, v28);
  sub_24379636C((uint64_t)v23, (uint64_t)v8);
  sub_2433865D8((uint64_t)v17, v25, &qword_268D97EF0);
  sub_2433865D8(v34, v27, (uint64_t *)&unk_26B0C8E20);
  sub_2433865D8((uint64_t)v33, v30, (uint64_t *)&unk_26B0C8E20);
  sub_243796434((uint64_t)v8, v36, type metadata accessor for Order.ShippingFulfillment.StatusValues);
  sub_2437963D4(a2, (uint64_t (*)(void))type metadata accessor for RawOrderShippingFulfillment);
  return sub_2437963D4(v35, type metadata accessor for RawECommerceOrderContent);
}

uint64_t Order.ShippingFulfillment.StatusFormatter.init(configuration:formatShippedAndDeliveryDates:useRelativeDateFormatting:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X8>)
{
  sub_243796434(a1, a4, (uint64_t (*)(void))type metadata accessor for FormatterConfiguration);
  uint64_t result = type metadata accessor for Order.ShippingFulfillment.StatusFormatter(0);
  *(unsigned char *)(a4 + *(int *)(result + 20)) = a2;
  *(unsigned char *)(a4 + *(int *)(result + 24)) = a3;
  return result;
}

uint64_t Order.ShippingFulfillment.StatusFormatter.format(_:now:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for Order.ShippingFulfillment.StatusValues(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D97EF8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (unsigned __int8 *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24337C254(a1, (uint64_t)v10, &qword_268D97EF8);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_24337C1BC((uint64_t)v10, &qword_268D97EF8);
    goto LABEL_8;
  }
  int v11 = *v10;
  if ((v11 - 2) < 2)
  {
    uint64_t v12 = sub_243791AD8(a1, a2);
    goto LABEL_14;
  }
  if (v11 == 4)
  {
    if (*(unsigned char *)(v2 + *(int *)(type metadata accessor for Order.ShippingFulfillment.StatusFormatter(0) + 20)) != 1) {
      goto LABEL_8;
    }
    uint64_t v12 = sub_24379155C(a1, a2);
LABEL_14:
    uint64_t v14 = v12;
    uint64_t v16 = v13;
    sub_2437964BC(a1, (uint64_t)v7, type metadata accessor for Order.ShippingFulfillment.StatusValues);
    if (v16) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  if (v11 == 5
    && *(unsigned char *)(v2 + *(int *)(type metadata accessor for Order.ShippingFulfillment.StatusFormatter(0) + 20)) == 1)
  {
    uint64_t v12 = sub_2437917C0(a1, a2);
    goto LABEL_14;
  }
LABEL_8:
  sub_2437964BC(a1, (uint64_t)v7, type metadata accessor for Order.ShippingFulfillment.StatusValues);
LABEL_9:
  uint64_t v14 = Order.Fulfillment.DisplayStatus<>.localizedTitle.getter();
LABEL_10:
  sub_2437963D4((uint64_t)v7, type metadata accessor for Order.ShippingFulfillment.StatusValues);
  return v14;
}

uint64_t sub_24378D57C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v120 = a2;
  uint64_t v94 = type metadata accessor for SingleDateFormatter();
  MEMORY[0x270FA5388](v94);
  uint64_t v95 = (uint64_t)&v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_2439576F0();
  uint64_t v100 = *(void *)(v102 - 8);
  MEMORY[0x270FA5388](v102);
  uint64_t v99 = (char *)&v92 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_243956820();
  uint64_t v110 = *(void *)(v118 - 8);
  MEMORY[0x270FA5388](v118);
  uint64_t v98 = (char *)&v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x270FA5388](v8);
  uint64_t v107 = (uint64_t)&v92 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = type metadata accessor for FullDateFormatter();
  uint64_t v10 = MEMORY[0x270FA5388](v106);
  uint64_t v105 = (char *)&v92 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v108 = (uint64_t)&v92 - v12;
  uint64_t v13 = type metadata accessor for Duration();
  MEMORY[0x270FA5388](v13 - 8);
  char v116 = (char *)&v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = type metadata accessor for TimeWindow(0);
  uint64_t v15 = MEMORY[0x270FA5388](v115);
  uint64_t v103 = (uint64_t)&v92 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v109 = (uint64_t)&v92 - v17;
  uint64_t v114 = (void (*)(char *, uint64_t))type metadata accessor for Order.FulfillmentWindow(0);
  MEMORY[0x270FA5388](v114);
  uint64_t v117 = (uint64_t)&v92 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = type metadata accessor for EndOfPickupWindowFormatter();
  MEMORY[0x270FA5388](v111);
  uint64_t v20 = (char *)&v92 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_243957400();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v97 = (uint64_t)&v92 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v96 = (uint64_t)&v92 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  id v29 = (char *)&v92 - v28;
  MEMORY[0x270FA5388](v27);
  uint64_t v31 = (char *)&v92 - v30;
  Order.FulfillmentWindow.endDate.getter((uint64_t)&v92 - v30);
  uint64_t v104 = v3 + *(int *)(v8 + 20);
  uint64_t v32 = a1;
  int v101 = Order.FulfillmentWindow.isSingleDateWindow(calendar:)();
  LOBYTE(a1) = sub_243957360();
  uint64_t v112 = v3;
  sub_2437964BC(v3, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for EndOfPickupWindowFormatter);
  uint64_t v113 = v22;
  uint64_t v33 = v31;
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v29, v31, v21);
  uint64_t v119 = v21;
  if (a1)
  {
    uint64_t v93 = v8;
    uint64_t v34 = *(void (**)(char *, uint64_t))(v22 + 8);
    v34(v29, v21);
    sub_2437963D4((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for EndOfPickupWindowFormatter);
  }
  else
  {
    char v35 = sub_2439575A0();
    uint64_t v34 = *(void (**)(char *, uint64_t))(v22 + 8);
    v34(v29, v21);
    sub_2437963D4((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for EndOfPickupWindowFormatter);
    if ((v35 & 1) == 0)
    {
      v34(v33, v119);
      return 0;
    }
    uint64_t v93 = v8;
  }
  uint64_t v36 = (uint64_t)v33;
  uint64_t v37 = v32;
  uint64_t v38 = v117;
  sub_2437964BC(v37, v117, type metadata accessor for Order.FulfillmentWindow);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v40 = v118;
  uint64_t v41 = v115;
  uint64_t v42 = (uint64_t)v116;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v114 = v34;
    uint64_t v43 = v109;
    sub_2437964BC(v38, v109, type metadata accessor for TimeWindow);
    sub_2437964BC(v43 + *(int *)(v41 + 20), v42, (uint64_t (*)(void))type metadata accessor for Duration);
    sub_243956790();
    char v45 = v44;
    id v46 = *(void (**)(uint64_t, uint64_t))(v110 + 8);
    v46(v42, v40);
    sub_2437963D4(v43, type metadata accessor for TimeWindow);
    if ((v45 & 1) == 0) {
      goto LABEL_17;
    }
    uint64_t v63 = v103;
    sub_2437964BC(v38, v103, type metadata accessor for TimeWindow);
    sub_2437964BC(v63 + *(int *)(v41 + 20), v42, (uint64_t (*)(void))type metadata accessor for Duration);
    sub_2439567B0();
    char v65 = v64;
    v46(v42, v40);
    id v47 = type metadata accessor for TimeWindow;
    sub_2437963D4(v63, type metadata accessor for TimeWindow);
    uint64_t v34 = v114;
    if ((v65 & 1) == 0)
    {
LABEL_17:
      v114((char *)v36, v119);
      sub_2437963D4(v38, type metadata accessor for TimeWindow);
      return 0;
    }
  }
  else
  {
    id v47 = type metadata accessor for Order.FulfillmentWindow;
  }
  sub_2437963D4(v38, v47);
  uint64_t v48 = v112;
  if (*(unsigned char *)(v112 + *(int *)(v111 + 20)) == 1)
  {
    uint64_t v49 = v104;
    if (sub_2439575A0())
    {
      id v50 = (void (*)(uint64_t, uint64_t))v34;
      if (qword_26B0C7FA0 != -1) {
        swift_once();
      }
      id v51 = (void *)qword_26B0C7F98;
      id v52 = (void *)sub_2439582A0();
      id v53 = (void *)sub_2439582A0();
      int v54 = (void *)sub_2439582A0();
      id v55 = objc_msgSend(v51, sel_localizedStringForKey_value_table_, v52, v53, v54);

      uint64_t v56 = sub_2439582D0();
      v50(v36, v119);
    }
    else if (sub_2439575F0())
    {
      if (v101)
      {
        id v67 = (void (*)(uint64_t, uint64_t))v34;
        if (qword_26B0C7FA0 != -1) {
          swift_once();
        }
        uint64_t v68 = (void *)qword_26B0C7F98;
      }
      else
      {
        id v67 = (void (*)(uint64_t, uint64_t))v34;
        if (qword_26B0C7FA0 != -1) {
          swift_once();
        }
        uint64_t v68 = (void *)qword_26B0C7F98;
      }
      uint64_t v83 = (void *)sub_2439582A0();
      uint64_t v84 = (void *)sub_2439582A0();
      uint64_t v85 = (void *)sub_2439582A0();
      id v86 = objc_msgSend(v68, sel_localizedStringForKey_value_table_, v83, v84, v85);

      uint64_t v56 = sub_2439582D0();
      v67(v36, v119);
    }
    else
    {
      uint64_t v69 = v100;
      uint64_t v70 = v99;
      (*(void (**)(char *, uint64_t, uint64_t))(v100 + 16))(v99, v49, v102);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268D9F760);
      uint64_t v71 = sub_2439576D0();
      unint64_t v72 = (void (*)(uint64_t, uint64_t))v34;
      uint64_t v73 = *(void *)(v71 - 8);
      unint64_t v74 = (*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80);
      uint64_t v75 = swift_allocObject();
      *(_OWORD *)(v75 + 16) = xmmword_24395EAE0;
      (*(void (**)(unint64_t, void, uint64_t))(v73 + 104))(v75 + v74, *MEMORY[0x263F07870], v71);
      sub_24368A548(v75);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      uint64_t v76 = v96;
      Date.noon.getter(v96);
      uint64_t v77 = v97;
      Date.noon.getter(v97);
      uint64_t v78 = v98;
      sub_2439575C0();
      swift_bridgeObjectRelease();
      uint64_t v79 = v77;
      uint64_t v80 = v119;
      v72(v79, v119);
      uint64_t v114 = (void (*)(char *, uint64_t))v72;
      v72(v76, v80);
      (*(void (**)(char *, uint64_t))(v69 + 8))(v70, v102);
      uint64_t v81 = sub_243956740();
      LOBYTE(v71) = v82;
      (*(void (**)(char *, uint64_t))(v110 + 8))(v78, v118);
      if ((v71 & 1) != 0 || (unint64_t)(v81 - 7) < 0xFFFFFFFFFFFFFFFBLL)
      {
        uint64_t v87 = v95;
        sub_2437964BC(v48, v95, (uint64_t (*)(void))type metadata accessor for FormatterConfiguration);
        *(unsigned char *)(v87 + *(int *)(v94 + 20)) = 0;
        uint64_t v88 = SingleDateFormatter.format(_:now:)(v36, v120);
        uint64_t v90 = v89;
        sub_2437963D4(v87, (uint64_t (*)(void))type metadata accessor for SingleDateFormatter);
        if (v101) {
          uint64_t v91 = sub_2439050F0(v88, v90);
        }
        else {
          uint64_t v91 = sub_243905270(v88, v90);
        }
        uint64_t v56 = v91;
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v56 = sub_243790038(v36, v101 & 1);
      }
      v114((char *)v36, v119);
    }
  }
  else
  {
    uint64_t v57 = v107;
    sub_2437964BC(v112, v107, (uint64_t (*)(void))type metadata accessor for FormatterConfiguration);
    uint64_t v58 = (uint64_t)v105;
    sub_2439574D0();
    sub_243957630();
    sub_243957720();
    sub_2433F6F94(v57, v58);
    *(unsigned char *)(v58 + *(int *)(v106 + 20)) = 0;
    uint64_t v59 = v108;
    sub_243796434(v58, v108, (uint64_t (*)(void))type metadata accessor for FullDateFormatter);
    uint64_t v60 = FullDateFormatter.format(_:now:)(v36, v120);
    uint64_t v62 = v61;
    sub_2437963D4(v59, (uint64_t (*)(void))type metadata accessor for FullDateFormatter);
    uint64_t v56 = sub_243905270(v60, v62);
    swift_bridgeObjectRelease();
    v34((char *)v36, v119);
  }
  return v56;
}

uint64_t sub_24378E384(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v125 = a2;
  uint64_t v97 = type metadata accessor for SingleDateFormatter();
  MEMORY[0x270FA5388](v97);
  uint64_t v98 = (uint64_t)&v97 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_2439576F0();
  uint64_t v103 = *(void *)(v104 - 8);
  MEMORY[0x270FA5388](v104);
  uint64_t v102 = (char *)&v97 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_243956820();
  uint64_t v111 = *(void *)(v7 - 8);
  uint64_t v112 = v7;
  MEMORY[0x270FA5388](v7);
  int v101 = (char *)&v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x270FA5388](v9);
  uint64_t v109 = (uint64_t)&v97 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = type metadata accessor for FullDateFormatter();
  uint64_t v11 = MEMORY[0x270FA5388](v108);
  uint64_t v107 = (char *)&v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v110 = (uint64_t)&v97 - v13;
  uint64_t v14 = type metadata accessor for Duration();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v119 = (char *)&v97 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = type metadata accessor for TimeWindow(0);
  uint64_t v16 = MEMORY[0x270FA5388](v118);
  uint64_t v120 = (char *)&v97 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v117 = (uint64_t)&v97 - v18;
  uint64_t v116 = type metadata accessor for Order.FulfillmentWindow(0);
  MEMORY[0x270FA5388](v116);
  uint64_t v121 = (uint64_t)&v97 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = type metadata accessor for EndOfDeliveryWindowFormatter();
  MEMORY[0x270FA5388](v113);
  uint64_t v21 = (char *)&v97 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_243957400();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v100 = (uint64_t)&v97 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v99 = (uint64_t)&v97 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v30 = (char *)&v97 - v29;
  MEMORY[0x270FA5388](v28);
  uint64_t v32 = (char *)&v97 - v31;
  Order.FulfillmentWindow.endDate.getter((uint64_t)&v97 - v31);
  uint64_t v106 = v3 + *(int *)(v9 + 20);
  uint64_t v33 = a1;
  int v105 = Order.FulfillmentWindow.isSingleDateWindow(calendar:)();
  LOBYTE(a1) = sub_243957360();
  uint64_t v124 = v3;
  sub_2437964BC(v3, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for EndOfDeliveryWindowFormatter);
  uint64_t v115 = v23;
  uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v23 + 16);
  uint64_t v122 = v32;
  v34(v30, v32, v22);
  if (a1)
  {
    long long v123 = *(void (**)(char *, uint64_t))(v23 + 8);
    v123(v30, v22);
    sub_2437963D4((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for EndOfDeliveryWindowFormatter);
  }
  else
  {
    char v35 = sub_2439575A0();
    long long v123 = *(void (**)(char *, uint64_t))(v23 + 8);
    v123(v30, v22);
    sub_2437963D4((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for EndOfDeliveryWindowFormatter);
    if ((v35 & 1) == 0)
    {
      v123(v122, v22);
      return 0;
    }
  }
  uint64_t v114 = v22;
  uint64_t v36 = v121;
  sub_2437964BC(v33, v121, type metadata accessor for Order.FulfillmentWindow);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v38 = v124;
  uint64_t v40 = (uint64_t)v119;
  uint64_t v39 = (uint64_t)v120;
  uint64_t v41 = v117;
  uint64_t v42 = v118;
  if (EnumCaseMultiPayload == 1)
  {
    sub_2437964BC(v36, v117, type metadata accessor for TimeWindow);
    sub_2437964BC(v41 + *(int *)(v42 + 20), v40, (uint64_t (*)(void))type metadata accessor for Duration);
    sub_243956790();
    char v44 = v43;
    uint64_t v45 = v112;
    id v46 = *(void (**)(uint64_t, uint64_t))(v111 + 8);
    v46(v40, v112);
    if ((v44 & 1) == 0)
    {
      uint64_t v47 = (uint64_t)v122;
      uint64_t v48 = sub_2434515E8((uint64_t)v122);
      sub_2437963D4(v41, type metadata accessor for TimeWindow);
      v123((char *)v47, v114);
      uint64_t v49 = v36;
LABEL_17:
      sub_2437963D4(v49, type metadata accessor for TimeWindow);
      return v48;
    }
    uint64_t v67 = v40;
    uint64_t v53 = v114;
    sub_2437963D4(v41, type metadata accessor for TimeWindow);
    sub_2437964BC(v36, v39, type metadata accessor for TimeWindow);
    sub_2437964BC(v39 + *(int *)(v42 + 20), v67, (uint64_t (*)(void))type metadata accessor for Duration);
    sub_2439567B0();
    uint64_t v68 = v39;
    char v70 = v69;
    v46(v67, v45);
    if ((v70 & 1) == 0)
    {
      uint64_t v71 = (uint64_t)v122;
      uint64_t v48 = sub_24344F920((uint64_t)v122, v125);
      sub_2437963D4(v68, type metadata accessor for TimeWindow);
      v123((char *)v71, v53);
      uint64_t v49 = v36;
      goto LABEL_17;
    }
    id v50 = type metadata accessor for TimeWindow;
    sub_2437963D4(v68, type metadata accessor for TimeWindow);
    uint64_t v51 = (uint64_t)v122;
    uint64_t v52 = v113;
    uint64_t v38 = v124;
  }
  else
  {
    id v50 = type metadata accessor for Order.FulfillmentWindow;
    uint64_t v51 = (uint64_t)v122;
    uint64_t v52 = v113;
    uint64_t v53 = v114;
  }
  sub_2437963D4(v36, v50);
  if (*(unsigned char *)(v38 + *(int *)(v52 + 20)) == 1)
  {
    uint64_t v54 = v106;
    if (sub_2439575A0())
    {
      if (qword_26B0C7FA0 != -1) {
        swift_once();
      }
      id v55 = (void *)qword_26B0C7F98;
      uint64_t v56 = (void *)sub_2439582A0();
      uint64_t v57 = (void *)sub_2439582A0();
      uint64_t v58 = (void *)sub_2439582A0();
      id v59 = objc_msgSend(v55, sel_localizedStringForKey_value_table_, v56, v57, v58);

      uint64_t v48 = sub_2439582D0();
    }
    else if (sub_2439575F0())
    {
      if (v105)
      {
        if (qword_26B0C7FA0 != -1) {
          swift_once();
        }
        unint64_t v72 = (void *)qword_26B0C7F98;
      }
      else
      {
        if (qword_26B0C7FA0 != -1) {
          swift_once();
        }
        unint64_t v72 = (void *)qword_26B0C7F98;
      }
      uint64_t v87 = (void *)sub_2439582A0();
      uint64_t v88 = (void *)sub_2439582A0();
      uint64_t v89 = (void *)sub_2439582A0();
      id v90 = objc_msgSend(v72, sel_localizedStringForKey_value_table_, v87, v88, v89);

      uint64_t v48 = sub_2439582D0();
    }
    else
    {
      uint64_t v73 = v103;
      unint64_t v74 = v102;
      uint64_t v75 = v104;
      (*(void (**)(char *, uint64_t, uint64_t))(v103 + 16))(v102, v54, v104);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268D9F760);
      uint64_t v76 = sub_2439576D0();
      uint64_t v77 = *(void *)(v76 - 8);
      unint64_t v78 = (*(unsigned __int8 *)(v77 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
      uint64_t v79 = swift_allocObject();
      *(_OWORD *)(v79 + 16) = xmmword_24395EAE0;
      (*(void (**)(unint64_t, void, uint64_t))(v77 + 104))(v79 + v78, *MEMORY[0x263F07870], v76);
      sub_24368A548(v79);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      uint64_t v80 = v99;
      Date.noon.getter(v99);
      uint64_t v81 = v100;
      Date.noon.getter(v100);
      char v82 = v101;
      sub_2439575C0();
      swift_bridgeObjectRelease();
      uint64_t v83 = v81;
      uint64_t v84 = (void (*)(uint64_t, uint64_t))v123;
      v123((char *)v83, v53);
      v84(v80, v53);
      (*(void (**)(char *, uint64_t))(v73 + 8))(v74, v75);
      uint64_t v85 = sub_243956740();
      LOBYTE(v76) = v86;
      (*(void (**)(char *, uint64_t))(v111 + 8))(v82, v112);
      if ((v76 & 1) != 0 || (unint64_t)(v85 - 7) < 0xFFFFFFFFFFFFFFFBLL)
      {
        uint64_t v92 = v98;
        sub_2437964BC(v124, v98, (uint64_t (*)(void))type metadata accessor for FormatterConfiguration);
        *(unsigned char *)(v92 + *(int *)(v97 + 20)) = 0;
        uint64_t v93 = SingleDateFormatter.format(_:now:)(v51, v125);
        uint64_t v95 = v94;
        sub_2437963D4(v92, (uint64_t (*)(void))type metadata accessor for SingleDateFormatter);
        if (v105) {
          uint64_t v96 = sub_24344F620(v93, v95);
        }
        else {
          uint64_t v96 = sub_24344F7A0(v93, v95);
        }
        uint64_t v48 = v96;
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v48 = sub_2437908B4(v51, v105 & 1);
      }
    }
  }
  else
  {
    uint64_t v60 = v109;
    sub_2437964BC(v38, v109, (uint64_t (*)(void))type metadata accessor for FormatterConfiguration);
    uint64_t v61 = (uint64_t)v107;
    sub_2439574D0();
    sub_243957630();
    sub_243957720();
    sub_2433F6F94(v60, v61);
    *(unsigned char *)(v61 + *(int *)(v108 + 20)) = 0;
    uint64_t v62 = v61;
    uint64_t v63 = v110;
    sub_243796434(v62, v110, (uint64_t (*)(void))type metadata accessor for FullDateFormatter);
    uint64_t v64 = FullDateFormatter.format(_:now:)(v51, v125);
    uint64_t v66 = v65;
    sub_2437963D4(v63, (uint64_t (*)(void))type metadata accessor for FullDateFormatter);
    uint64_t v48 = sub_24344F7A0(v64, v66);
    swift_bridgeObjectRelease();
  }
  v123((char *)v51, v53);
  return v48;
}

uint64_t sub_24378F1BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_243957400();
  uint64_t v35 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v34 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for SingleDateFormatter();
  MEMORY[0x270FA5388](v36);
  uint64_t v33 = (uint64_t)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FullDateFormatter();
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v32 - v14;
  sub_243796524((unint64_t *)&qword_268D97D28, MEMORY[0x263F07490]);
  uint64_t v16 = a2;
  uint64_t v17 = a1;
  uint64_t v18 = 0;
  if ((sub_243958240() & 1) == 0)
  {
    uint64_t v19 = v10;
    uint64_t v20 = v36;
    uint64_t v21 = type metadata accessor for ShippedDateFormatter(0);
    uint64_t v22 = v37;
    if (*(unsigned char *)(v37 + *(int *)(v21 + 20)) == 1)
    {
      if (sub_243957600()) {
        return sub_243793660();
      }
      if (sub_2439575A0()) {
        return sub_2437937B4();
      }
      uint64_t v24 = v33;
      sub_2437964BC(v22, v33, (uint64_t (*)(void))type metadata accessor for FormatterConfiguration);
      *(unsigned char *)(v24 + *(int *)(v20 + 20)) = 0;
      uint64_t v29 = (uint64_t)v34;
      sub_2439573B0();
      uint64_t v25 = SingleDateFormatter.format(_:now:)(v17, v29);
      uint64_t v27 = v30;
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v29, v4);
      uint64_t v28 = type metadata accessor for SingleDateFormatter;
    }
    else
    {
      sub_2437964BC(v37, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatterConfiguration);
      sub_2439574D0();
      sub_243957630();
      sub_243957720();
      sub_2433F6F94((uint64_t)v9, (uint64_t)v13);
      v13[*(int *)(v19 + 20)] = 0;
      uint64_t v24 = (uint64_t)v15;
      sub_243796434((uint64_t)v13, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FullDateFormatter);
      uint64_t v25 = FullDateFormatter.format(_:now:)(v17, v16);
      uint64_t v27 = v26;
      uint64_t v28 = type metadata accessor for FullDateFormatter;
    }
    sub_2437963D4(v24, (uint64_t (*)(void))v28);
    uint64_t v18 = sub_243793908(v25, v27);
    swift_bridgeObjectRelease();
  }
  return v18;
}

uint64_t sub_24378F5A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_243957400();
  uint64_t v38 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v37 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for SingleDateFormatter();
  MEMORY[0x270FA5388](v35);
  uint64_t v36 = (uint64_t)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FullDateFormatter();
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v34 - v16;
  sub_243796524((unint64_t *)&qword_268D97D28, MEMORY[0x263F07490]);
  uint64_t v39 = a2;
  uint64_t v18 = a1;
  uint64_t v19 = 0;
  if ((sub_243958240() & 1) == 0)
  {
    if (*(unsigned char *)(v3 + *(int *)(type metadata accessor for DeliveryDateFormatter(0) + 20)) == 1)
    {
      if (sub_243957600())
      {
        if (qword_26B0C7FA0 == -1) {
          goto LABEL_9;
        }
        goto LABEL_13;
      }
      if (sub_2439575A0())
      {
        if (qword_26B0C7FA0 == -1)
        {
LABEL_9:
          uint64_t v25 = (void *)qword_26B0C7F98;
          uint64_t v26 = (void *)sub_2439582A0();
          uint64_t v27 = (void *)sub_2439582A0();
          uint64_t v28 = (void *)sub_2439582A0();
          id v29 = objc_msgSend(v25, sel_localizedStringForKey_value_table_, v26, v27, v28);

          uint64_t v19 = sub_2439582D0();
          return v19;
        }
LABEL_13:
        swift_once();
        goto LABEL_9;
      }
      uint64_t v30 = v36;
      sub_2437964BC(v3, v36, (uint64_t (*)(void))type metadata accessor for FormatterConfiguration);
      *(unsigned char *)(v30 + *(int *)(v35 + 20)) = 0;
      uint64_t v31 = (uint64_t)v37;
      sub_2439573B0();
      uint64_t v20 = SingleDateFormatter.format(_:now:)(v18, v31);
      uint64_t v22 = v32;
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v31, v6);
      uint64_t v23 = type metadata accessor for SingleDateFormatter;
      uint64_t v24 = v30;
    }
    else
    {
      sub_2437964BC(v3, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatterConfiguration);
      sub_2439574D0();
      sub_243957630();
      sub_243957720();
      sub_2433F6F94((uint64_t)v11, (uint64_t)v15);
      v15[*(int *)(v12 + 20)] = 0;
      sub_243796434((uint64_t)v15, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FullDateFormatter);
      uint64_t v20 = FullDateFormatter.format(_:now:)(v18, v39);
      uint64_t v22 = v21;
      uint64_t v23 = type metadata accessor for FullDateFormatter;
      uint64_t v24 = (uint64_t)v17;
    }
    sub_2437963D4(v24, (uint64_t (*)(void))v23);
    uint64_t v19 = sub_243792B38(v20, v22);
    swift_bridgeObjectRelease();
  }
  return v19;
}

uint64_t sub_24378FAEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_243957400();
  uint64_t v38 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v37 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for SingleDateFormatter();
  MEMORY[0x270FA5388](v35);
  uint64_t v36 = (uint64_t)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FullDateFormatter();
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v34 - v16;
  sub_243796524((unint64_t *)&qword_268D97D28, MEMORY[0x263F07490]);
  uint64_t v39 = a2;
  uint64_t v18 = a1;
  uint64_t v19 = 0;
  if ((sub_243958240() & 1) == 0)
  {
    if (*(unsigned char *)(v3 + *(int *)(type metadata accessor for PickedUpDateFormatter(0) + 20)) == 1)
    {
      if (sub_243957600())
      {
        if (qword_26B0C7FA0 == -1) {
          goto LABEL_9;
        }
        goto LABEL_13;
      }
      if (sub_2439575A0())
      {
        if (qword_26B0C7FA0 == -1)
        {
LABEL_9:
          uint64_t v25 = (void *)qword_26B0C7F98;
          uint64_t v26 = (void *)sub_2439582A0();
          uint64_t v27 = (void *)sub_2439582A0();
          uint64_t v28 = (void *)sub_2439582A0();
          id v29 = objc_msgSend(v25, sel_localizedStringForKey_value_table_, v26, v27, v28);

          uint64_t v19 = sub_2439582D0();
          return v19;
        }
LABEL_13:
        swift_once();
        goto LABEL_9;
      }
      uint64_t v30 = v36;
      sub_2437964BC(v3, v36, (uint64_t (*)(void))type metadata accessor for FormatterConfiguration);
      *(unsigned char *)(v30 + *(int *)(v35 + 20)) = 0;
      uint64_t v31 = (uint64_t)v37;
      sub_2439573B0();
      uint64_t v20 = SingleDateFormatter.format(_:now:)(v18, v31);
      uint64_t v22 = v32;
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v31, v6);
      uint64_t v23 = type metadata accessor for SingleDateFormatter;
      uint64_t v24 = v30;
    }
    else
    {
      sub_2437964BC(v3, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatterConfiguration);
      sub_2439574D0();
      sub_243957630();
      sub_243957720();
      sub_2433F6F94((uint64_t)v11, (uint64_t)v15);
      v15[*(int *)(v12 + 20)] = 0;
      sub_243796434((uint64_t)v15, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FullDateFormatter);
      uint64_t v20 = FullDateFormatter.format(_:now:)(v18, v39);
      uint64_t v22 = v21;
      uint64_t v23 = type metadata accessor for FullDateFormatter;
      uint64_t v24 = (uint64_t)v17;
    }
    sub_2437963D4(v24, (uint64_t (*)(void))v23);
    uint64_t v19 = sub_2433F26EC(v20, v22);
    swift_bridgeObjectRelease();
  }
  return v19;
}

uint64_t sub_243790038(uint64_t a1, char a2)
{
  uint64_t v91 = a1;
  uint64_t v4 = sub_2439576D0();
  uint64_t v89 = *(void *)(v4 - 8);
  uint64_t v90 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v88 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_243957570();
  uint64_t v84 = *(void *)(v6 - 8);
  uint64_t v85 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v83 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2439576F0();
  uint64_t v86 = *(void *)(v8 - 8);
  uint64_t v87 = v8;
  MEMORY[0x270FA5388](v8);
  char v82 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for EndOfPickupWindowFormatter();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v81 = (uint64_t (**)())((char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v80 = (uint64_t (**)())((char *)&v71 - v15);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v79 = (uint64_t (**)())((char *)&v71 - v17);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v75 = (uint64_t)&v71 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v72 = (uint64_t)&v71 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v71 - v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v71 - v25;
  uint64_t v27 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x270FA5388](v27 - 8);
  id v29 = (char *)&v71 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v78 = v29;
  uint64_t v30 = type metadata accessor for WeekdayCustomFormatter();
  uint64_t v31 = (int *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v76 = (char *)&v71 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2437964BC(v2, (uint64_t)v29, (uint64_t (*)(void))type metadata accessor for FormatterConfiguration);
  sub_2437964BC(v2, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for EndOfPickupWindowFormatter);
  unint64_t v33 = (*(unsigned __int8 *)(v11 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v34 = swift_allocObject();
  uint64_t v77 = v34;
  *(unsigned char *)(v34 + 16) = a2;
  sub_243796434((uint64_t)v26, v34 + v33, (uint64_t (*)(void))type metadata accessor for EndOfPickupWindowFormatter);
  sub_2437964BC(v2, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for EndOfPickupWindowFormatter);
  uint64_t v35 = swift_allocObject();
  uint64_t v74 = v35;
  *(unsigned char *)(v35 + 16) = a2;
  sub_243796434((uint64_t)v24, v35 + v33, (uint64_t (*)(void))type metadata accessor for EndOfPickupWindowFormatter);
  uint64_t v36 = v72;
  sub_2437964BC(v2, v72, (uint64_t (*)(void))type metadata accessor for EndOfPickupWindowFormatter);
  uint64_t v37 = swift_allocObject();
  uint64_t v73 = v37;
  *(unsigned char *)(v37 + 16) = a2;
  sub_243796434(v36, v37 + v33, (uint64_t (*)(void))type metadata accessor for EndOfPickupWindowFormatter);
  uint64_t v38 = v75;
  sub_2437964BC(v2, v75, (uint64_t (*)(void))type metadata accessor for EndOfPickupWindowFormatter);
  uint64_t v39 = swift_allocObject();
  uint64_t v72 = v39;
  *(unsigned char *)(v39 + 16) = a2;
  sub_243796434(v38, v39 + v33, (uint64_t (*)(void))type metadata accessor for EndOfPickupWindowFormatter);
  uint64_t v40 = (uint64_t)v79;
  sub_2437964BC(v2, (uint64_t)v79, (uint64_t (*)(void))type metadata accessor for EndOfPickupWindowFormatter);
  uint64_t v41 = swift_allocObject();
  uint64_t v75 = v41;
  *(unsigned char *)(v41 + 16) = a2;
  sub_243796434(v40, v41 + v33, (uint64_t (*)(void))type metadata accessor for EndOfPickupWindowFormatter);
  uint64_t v42 = (uint64_t)v80;
  sub_2437964BC(v2, (uint64_t)v80, (uint64_t (*)(void))type metadata accessor for EndOfPickupWindowFormatter);
  uint64_t v43 = swift_allocObject();
  *(unsigned char *)(v43 + 16) = a2;
  sub_243796434(v42, v43 + v33, (uint64_t (*)(void))type metadata accessor for EndOfPickupWindowFormatter);
  uint64_t v44 = (uint64_t)v76;
  uint64_t v45 = (uint64_t)v81;
  sub_2437964BC(v2, (uint64_t)v81, (uint64_t (*)(void))type metadata accessor for EndOfPickupWindowFormatter);
  uint64_t v46 = swift_allocObject();
  *(unsigned char *)(v46 + 16) = a2;
  sub_243796434(v45, v46 + v33, (uint64_t (*)(void))type metadata accessor for EndOfPickupWindowFormatter);
  sub_243796434((uint64_t)v78, v44, (uint64_t (*)(void))type metadata accessor for FormatterConfiguration);
  uint64_t v47 = (uint64_t (**)())(v44 + v31[7]);
  uint64_t v48 = (uint64_t (*)())v77;
  uint64_t v81 = v47;
  void *v47 = sub_243798B7C;
  v47[1] = v48;
  uint64_t v49 = (uint64_t (**)())(v44 + v31[8]);
  id v50 = (uint64_t (*)())v74;
  *uint64_t v49 = sub_243798BC0;
  v49[1] = v50;
  uint64_t v51 = (uint64_t (**)())(v44 + v31[9]);
  uint64_t v52 = (uint64_t (*)())v73;
  uint64_t v80 = v51;
  void *v51 = sub_243798C04;
  v51[1] = v52;
  uint64_t v53 = (uint64_t (**)())(v44 + v31[10]);
  uint64_t v54 = v72;
  uint64_t v79 = v53;
  *uint64_t v53 = sub_243798C48;
  v53[1] = (uint64_t (*)())v54;
  id v55 = (uint64_t (**)())(v44 + v31[11]);
  uint64_t v56 = v75;
  void *v55 = sub_243798C8C;
  v55[1] = (uint64_t (*)())v56;
  uint64_t v57 = (uint64_t (**)())(v44 + v31[12]);
  void *v57 = sub_243798CD0;
  v57[1] = (uint64_t (*)())v43;
  uint64_t v58 = (uint64_t (**)())(v44 + v31[13]);
  *uint64_t v58 = sub_243798E88;
  v58[1] = (uint64_t (*)())v46;
  uint64_t v60 = v83;
  uint64_t v59 = v84;
  uint64_t v61 = v85;
  (*(void (**)(char *, void, uint64_t))(v84 + 104))(v83, *MEMORY[0x263F07718], v85);
  uint64_t v62 = v82;
  sub_243957580();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v61);
  uint64_t v63 = v88;
  uint64_t v64 = v89;
  uint64_t v65 = v90;
  (*(void (**)(char *, void, uint64_t))(v89 + 104))(v88, *MEMORY[0x263F078E8], v90);
  uint64_t v66 = v62;
  uint64_t v67 = sub_2439576E0();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v63, v65);
  uint64_t v68 = (*(uint64_t (**)(char *, uint64_t))(v86 + 8))(v66, v87);
  switch(v67)
  {
    case 1:
      uint64_t v49 = v81;
      break;
    case 2:
      break;
    case 3:
      uint64_t v49 = v80;
      break;
    case 4:
      uint64_t v49 = v79;
      break;
    case 5:
      uint64_t v49 = v55;
      break;
    case 6:
      uint64_t v49 = v57;
      break;
    case 7:
      uint64_t v49 = v58;
      break;
    default:
      sub_243959540();
      __break(1u);
      JUMPOUT(0x243790898);
  }
  uint64_t v69 = ((uint64_t (*)(uint64_t))*v49)(v68);
  sub_2437963D4(v44, (uint64_t (*)(void))type metadata accessor for WeekdayCustomFormatter);
  return v69;
}

uint64_t sub_2437908B4(uint64_t a1, char a2)
{
  uint64_t v91 = a1;
  uint64_t v4 = sub_2439576D0();
  uint64_t v89 = *(void *)(v4 - 8);
  uint64_t v90 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v88 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_243957570();
  uint64_t v84 = *(void *)(v6 - 8);
  uint64_t v85 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v83 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2439576F0();
  uint64_t v86 = *(void *)(v8 - 8);
  uint64_t v87 = v8;
  MEMORY[0x270FA5388](v8);
  char v82 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for EndOfDeliveryWindowFormatter();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v81 = (uint64_t (**)())((char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v80 = (uint64_t (**)())((char *)&v71 - v15);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v79 = (uint64_t (**)())((char *)&v71 - v17);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v75 = (uint64_t)&v71 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v72 = (uint64_t)&v71 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v71 - v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v71 - v25;
  uint64_t v27 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x270FA5388](v27 - 8);
  id v29 = (char *)&v71 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v78 = v29;
  uint64_t v30 = type metadata accessor for WeekdayCustomFormatter();
  uint64_t v31 = (int *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v76 = (char *)&v71 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2437964BC(v2, (uint64_t)v29, (uint64_t (*)(void))type metadata accessor for FormatterConfiguration);
  sub_2437964BC(v2, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for EndOfDeliveryWindowFormatter);
  unint64_t v33 = (*(unsigned __int8 *)(v11 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v34 = swift_allocObject();
  uint64_t v77 = v34;
  *(unsigned char *)(v34 + 16) = a2;
  sub_243796434((uint64_t)v26, v34 + v33, (uint64_t (*)(void))type metadata accessor for EndOfDeliveryWindowFormatter);
  sub_2437964BC(v2, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for EndOfDeliveryWindowFormatter);
  uint64_t v35 = swift_allocObject();
  uint64_t v74 = v35;
  *(unsigned char *)(v35 + 16) = a2;
  sub_243796434((uint64_t)v24, v35 + v33, (uint64_t (*)(void))type metadata accessor for EndOfDeliveryWindowFormatter);
  uint64_t v36 = v72;
  sub_2437964BC(v2, v72, (uint64_t (*)(void))type metadata accessor for EndOfDeliveryWindowFormatter);
  uint64_t v37 = swift_allocObject();
  uint64_t v73 = v37;
  *(unsigned char *)(v37 + 16) = a2;
  sub_243796434(v36, v37 + v33, (uint64_t (*)(void))type metadata accessor for EndOfDeliveryWindowFormatter);
  uint64_t v38 = v75;
  sub_2437964BC(v2, v75, (uint64_t (*)(void))type metadata accessor for EndOfDeliveryWindowFormatter);
  uint64_t v39 = swift_allocObject();
  uint64_t v72 = v39;
  *(unsigned char *)(v39 + 16) = a2;
  sub_243796434(v38, v39 + v33, (uint64_t (*)(void))type metadata accessor for EndOfDeliveryWindowFormatter);
  uint64_t v40 = (uint64_t)v79;
  sub_2437964BC(v2, (uint64_t)v79, (uint64_t (*)(void))type metadata accessor for EndOfDeliveryWindowFormatter);
  uint64_t v41 = swift_allocObject();
  uint64_t v75 = v41;
  *(unsigned char *)(v41 + 16) = a2;
  sub_243796434(v40, v41 + v33, (uint64_t (*)(void))type metadata accessor for EndOfDeliveryWindowFormatter);
  uint64_t v42 = (uint64_t)v80;
  sub_2437964BC(v2, (uint64_t)v80, (uint64_t (*)(void))type metadata accessor for EndOfDeliveryWindowFormatter);
  uint64_t v43 = swift_allocObject();
  *(unsigned char *)(v43 + 16) = a2;
  sub_243796434(v42, v43 + v33, (uint64_t (*)(void))type metadata accessor for EndOfDeliveryWindowFormatter);
  uint64_t v44 = (uint64_t)v76;
  uint64_t v45 = (uint64_t)v81;
  sub_2437964BC(v2, (uint64_t)v81, (uint64_t (*)(void))type metadata accessor for EndOfDeliveryWindowFormatter);
  uint64_t v46 = swift_allocObject();
  *(unsigned char *)(v46 + 16) = a2;
  sub_243796434(v45, v46 + v33, (uint64_t (*)(void))type metadata accessor for EndOfDeliveryWindowFormatter);
  sub_243796434((uint64_t)v78, v44, (uint64_t (*)(void))type metadata accessor for FormatterConfiguration);
  uint64_t v47 = (uint64_t (**)())(v44 + v31[7]);
  uint64_t v48 = (uint64_t (*)())v77;
  uint64_t v81 = v47;
  void *v47 = sub_243798960;
  v47[1] = v48;
  uint64_t v49 = (uint64_t (**)())(v44 + v31[8]);
  id v50 = (uint64_t (*)())v74;
  *uint64_t v49 = sub_2437989A4;
  v49[1] = v50;
  uint64_t v51 = (uint64_t (**)())(v44 + v31[9]);
  uint64_t v52 = (uint64_t (*)())v73;
  uint64_t v80 = v51;
  void *v51 = sub_2437989E8;
  v51[1] = v52;
  uint64_t v53 = (uint64_t (**)())(v44 + v31[10]);
  uint64_t v54 = v72;
  uint64_t v79 = v53;
  *uint64_t v53 = sub_243798A2C;
  v53[1] = (uint64_t (*)())v54;
  id v55 = (uint64_t (**)())(v44 + v31[11]);
  uint64_t v56 = v75;
  void *v55 = sub_243798A70;
  v55[1] = (uint64_t (*)())v56;
  uint64_t v57 = (uint64_t (**)())(v44 + v31[12]);
  void *v57 = sub_243798AB4;
  v57[1] = (uint64_t (*)())v43;
  uint64_t v58 = (uint64_t (**)())(v44 + v31[13]);
  *uint64_t v58 = sub_243798AF8;
  v58[1] = (uint64_t (*)())v46;
  uint64_t v60 = v83;
  uint64_t v59 = v84;
  uint64_t v61 = v85;
  (*(void (**)(char *, void, uint64_t))(v84 + 104))(v83, *MEMORY[0x263F07718], v85);
  uint64_t v62 = v82;
  sub_243957580();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v61);
  uint64_t v63 = v88;
  uint64_t v64 = v89;
  uint64_t v65 = v90;
  (*(void (**)(char *, void, uint64_t))(v89 + 104))(v88, *MEMORY[0x263F078E8], v90);
  uint64_t v66 = v62;
  uint64_t v67 = sub_2439576E0();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v63, v65);
  uint64_t v68 = (*(uint64_t (**)(char *, uint64_t))(v86 + 8))(v66, v87);
  switch(v67)
  {
    case 1:
      uint64_t v49 = v81;
      break;
    case 2:
      break;
    case 3:
      uint64_t v49 = v80;
      break;
    case 4:
      uint64_t v49 = v79;
      break;
    case 5:
      uint64_t v49 = v55;
      break;
    case 6:
      uint64_t v49 = v57;
      break;
    case 7:
      uint64_t v49 = v58;
      break;
    default:
      sub_243959540();
      __break(1u);
      JUMPOUT(0x243791114);
  }
  uint64_t v69 = ((uint64_t (*)(uint64_t))*v49)(v68);
  sub_2437963D4(v44, (uint64_t (*)(void))type metadata accessor for WeekdayCustomFormatter);
  return v69;
}

uint64_t Order.ShippingFulfillment.StatusValues.displayStatus.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24337C254(v1, a1, &qword_268D97EF8);
}

uint64_t Order.ShippingFulfillment.StatusValues.displayStatus.setter(uint64_t a1)
{
  return sub_2433865D8(a1, v1, &qword_268D97EF8);
}

uint64_t (*Order.ShippingFulfillment.StatusValues.displayStatus.modify())()
{
  return nullsub_1;
}

uint64_t Order.ShippingFulfillment.StatusValues.deliveryWindow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Order.ShippingFulfillment.StatusValues(0);
  return sub_24337C254(v1 + *(int *)(v3 + 20), a1, &qword_268D97EF0);
}

uint64_t Order.ShippingFulfillment.StatusValues.deliveryWindow.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Order.ShippingFulfillment.StatusValues(0);
  return sub_2433865D8(a1, v1 + *(int *)(v3 + 20), &qword_268D97EF0);
}

uint64_t (*Order.ShippingFulfillment.StatusValues.deliveryWindow.modify())(void)
{
  return nullsub_1;
}

uint64_t Order.ShippingFulfillment.StatusValues.deliveryDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Order.ShippingFulfillment.StatusValues(0);
  return sub_24337C254(v1 + *(int *)(v3 + 24), a1, (uint64_t *)&unk_26B0C8E20);
}

uint64_t Order.ShippingFulfillment.StatusValues.deliveryDate.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Order.ShippingFulfillment.StatusValues(0);
  return sub_2433865D8(a1, v1 + *(int *)(v3 + 24), (uint64_t *)&unk_26B0C8E20);
}

uint64_t (*Order.ShippingFulfillment.StatusValues.deliveryDate.modify())(void)
{
  return nullsub_1;
}

uint64_t Order.ShippingFulfillment.StatusValues.shippedDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Order.ShippingFulfillment.StatusValues(0);
  return sub_24337C254(v1 + *(int *)(v3 + 28), a1, (uint64_t *)&unk_26B0C8E20);
}

uint64_t Order.ShippingFulfillment.StatusValues.shippedDate.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Order.ShippingFulfillment.StatusValues(0);
  return sub_2433865D8(a1, v1 + *(int *)(v3 + 28), (uint64_t *)&unk_26B0C8E20);
}

uint64_t (*Order.ShippingFulfillment.StatusValues.shippedDate.modify())(void)
{
  return nullsub_1;
}

uint64_t Order.ShippingFulfillment.StatusValues.init(displayStatus:deliveryWindow:deliveryDate:shippedDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9 = (int *)type metadata accessor for Order.ShippingFulfillment.StatusValues(0);
  uint64_t v10 = a5 + v9[5];
  uint64_t v11 = type metadata accessor for Order.FulfillmentWindow(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  uint64_t v12 = a5 + v9[6];
  uint64_t v13 = sub_243957400();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
  v14(v12, 1, 1, v13);
  uint64_t v15 = a5 + v9[7];
  v14(v15, 1, 1, v13);
  sub_24379636C(a1, a5);
  sub_2433865D8(a2, v10, &qword_268D97EF0);
  sub_2433865D8(a3, v12, (uint64_t *)&unk_26B0C8E20);
  return sub_2433865D8(a4, v15, (uint64_t *)&unk_26B0C8E20);
}

uint64_t sub_24379155C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for DeliveryDateFormatter(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_243957400();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Order.ShippingFulfillment.StatusValues(0);
  sub_24337C254(a1 + *(int *)(v15 + 24), (uint64_t)v10, (uint64_t *)&unk_26B0C8E20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_24337C1BC((uint64_t)v10, (uint64_t *)&unk_26B0C8E20);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    sub_2437964BC(v2, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatterConfiguration);
    v7[*(int *)(v5 + 20)] = *(unsigned char *)(v2
                                     + *(int *)(type metadata accessor for Order.ShippingFulfillment.StatusFormatter(0)
                                              + 24));
    uint64_t v16 = sub_24378F5A0((uint64_t)v14, a2);
    sub_2437963D4((uint64_t)v7, type metadata accessor for DeliveryDateFormatter);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  return v16;
}

uint64_t sub_2437917C0(uint64_t a1, uint64_t a2)
{
  uint64_t v24 = a2;
  uint64_t v3 = type metadata accessor for ShippedDateFormatter(0);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D97EF8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_243957400();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Order.ShippingFulfillment.StatusValues(0);
  sub_24337C254(a1 + *(int *)(v16 + 28), (uint64_t)v11, (uint64_t *)&unk_26B0C8E20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    uint64_t v17 = (uint64_t *)&unk_26B0C8E20;
    uint64_t v18 = (uint64_t)v11;
LABEL_6:
    sub_24337C1BC(v18, v17);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
  sub_24337C254(a1, (uint64_t)v8, &qword_268D97EF8);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    uint64_t v17 = &qword_268D97EF8;
    uint64_t v18 = (uint64_t)v8;
    goto LABEL_6;
  }
  char v19 = v8[1];
  uint64_t v20 = v23;
  sub_2437964BC(v23, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FormatterConfiguration);
  v5[*(int *)(v3 + 20)] = *(unsigned char *)(v20
                                   + *(int *)(type metadata accessor for Order.ShippingFulfillment.StatusFormatter(0)
                                            + 24));
  v5[*(int *)(v3 + 24)] = v19;
  uint64_t v21 = sub_24378F1BC((uint64_t)v15, v24);
  sub_2437963D4((uint64_t)v5, type metadata accessor for ShippedDateFormatter);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return v21;
}

uint64_t sub_243791AD8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for EndOfDeliveryWindowFormatter();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D97EF0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Order.FulfillmentWindow(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Order.ShippingFulfillment.StatusValues(0);
  sub_24337C254(a1 + *(int *)(v15 + 20), (uint64_t)v10, &qword_268D97EF0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_24337C1BC((uint64_t)v10, &qword_268D97EF0);
    return 0;
  }
  else
  {
    sub_243796434((uint64_t)v10, (uint64_t)v14, type metadata accessor for Order.FulfillmentWindow);
    sub_2437964BC(v2, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatterConfiguration);
    v7[*(int *)(v5 + 20)] = *(unsigned char *)(v2
                                     + *(int *)(type metadata accessor for Order.ShippingFulfillment.StatusFormatter(0)
                                              + 24));
    uint64_t v16 = sub_24378E384((uint64_t)v14, a2);
    sub_2437963D4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for EndOfDeliveryWindowFormatter);
    sub_2437963D4((uint64_t)v14, type metadata accessor for Order.FulfillmentWindow);
  }
  return v16;
}

uint64_t Order.ShippingFulfillment.StatusFormatter.hash(into:)()
{
  return sub_243959AF0();
}

uint64_t static Order.ShippingFulfillment.StatusFormatter.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((MEMORY[0x24567C750]() & 1) != 0
    && (uint64_t v4 = type metadata accessor for FormatterConfiguration(),
        (MEMORY[0x24567C8B0](a1 + *(int *)(v4 + 20), a2 + *(int *)(v4 + 20)) & 1) != 0)
    && (MEMORY[0x24567C9A0](a1 + *(int *)(v4 + 24), a2 + *(int *)(v4 + 24)) & 1) != 0
    && (uint64_t v5 = type metadata accessor for Order.ShippingFulfillment.StatusFormatter(0),
        *(unsigned __int8 *)(a1 + *(int *)(v5 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(v5 + 20))))
  {
    char v6 = *(unsigned char *)(a1 + *(int *)(v5 + 24)) ^ *(unsigned char *)(a2 + *(int *)(v5 + 24)) ^ 1;
  }
  else
  {
    char v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_243791F50()
{
  unint64_t v1 = 0xD00000000000001DLL;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000019;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x72756769666E6F63;
  }
}

uint64_t sub_243791FC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2437987D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_243791FEC(uint64_t a1)
{
  unint64_t v2 = sub_24379656C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_243792028(uint64_t a1)
{
  unint64_t v2 = sub_24379656C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Order.ShippingFulfillment.StatusFormatter.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9FB40);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24379656C();
  sub_243959BD0();
  v8[15] = 0;
  type metadata accessor for FormatterConfiguration();
  sub_243796524((unint64_t *)&unk_268DA22C0, (void (*)(uint64_t))type metadata accessor for FormatterConfiguration);
  sub_243959860();
  if (!v1)
  {
    type metadata accessor for Order.ShippingFulfillment.StatusFormatter(0);
    v8[14] = 1;
    sub_243959820();
    v8[13] = 2;
    sub_243959820();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t Order.ShippingFulfillment.StatusFormatter.hashValue.getter()
{
  return sub_243959B40();
}

uint64_t Order.ShippingFulfillment.StatusFormatter.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v4 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x270FA5388](v4);
  uint64_t v20 = (uint64_t)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9FB50);
  uint64_t v18 = *(void *)(v6 - 8);
  uint64_t v19 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Order.ShippingFulfillment.StatusFormatter(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24379656C();
  sub_243959BA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v12 = v18;
  uint64_t v13 = (uint64_t)v11;
  char v23 = 0;
  sub_243796524(&qword_268D97EB8, (void (*)(uint64_t))type metadata accessor for FormatterConfiguration);
  uint64_t v14 = v19;
  sub_2439596F0();
  sub_243796434(v20, v13, (uint64_t (*)(void))type metadata accessor for FormatterConfiguration);
  char v22 = 1;
  *(unsigned char *)(v13 + *(int *)(v9 + 20)) = sub_2439596B0() & 1;
  char v21 = 2;
  char v15 = sub_2439596B0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v14);
  *(unsigned char *)(v13 + *(int *)(v9 + 24)) = v15 & 1;
  sub_2437964BC(v13, v17, type metadata accessor for Order.ShippingFulfillment.StatusFormatter);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_2437963D4(v13, type metadata accessor for Order.ShippingFulfillment.StatusFormatter);
}

uint64_t sub_24379271C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = Order.ShippingFulfillment.StatusFormatter.format(_:now:)(a1, a2);
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_243792744@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_243957400();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2439573B0();
  uint64_t v8 = Order.ShippingFulfillment.StatusFormatter.format(_:now:)(a1, (uint64_t)v7);
  uint64_t v10 = v9;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *a2 = v8;
  a2[1] = v10;
  return result;
}

uint64_t sub_24379282C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Order.ShippingFulfillment.StatusFormatter.init(from:)(a1, a2);
}

uint64_t sub_243792844(void *a1)
{
  return Order.ShippingFulfillment.StatusFormatter.encode(to:)(a1);
}

uint64_t sub_243792860()
{
  return sub_243959AF0();
}

uint64_t sub_2437929C0()
{
  return sub_243959B40();
}

uint64_t sub_243792B38(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E30);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_24395EAE0;
  *(void *)(v4 + 56) = MEMORY[0x263F8D310];
  *(void *)(v4 + 64) = sub_24337BF04();
  *(void *)(v4 + 32) = a1;
  *(void *)(v4 + 40) = a2;
  uint64_t v5 = qword_26B0C7FA0;
  swift_bridgeObjectRetain();
  if (v5 != -1) {
    swift_once();
  }
  uint64_t v6 = (void *)qword_26B0C7F98;
  uint64_t v7 = (void *)sub_2439582A0();
  uint64_t v8 = (void *)sub_2439582A0();
  uint64_t v9 = (void *)sub_2439582A0();
  id v10 = objc_msgSend(v6, sel_localizedStringForKey_value_table_, v7, v8, v9);

  sub_2439582D0();
  uint64_t v11 = sub_243958310();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_243792CB8(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9FC90);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2437994B4();
  sub_243959BD0();
  v8[15] = 0;
  type metadata accessor for FormatterConfiguration();
  sub_243796524((unint64_t *)&unk_268DA22C0, (void (*)(uint64_t))type metadata accessor for FormatterConfiguration);
  sub_243959860();
  if (!v1)
  {
    type metadata accessor for DeliveryDateFormatter(0);
    v8[14] = 1;
    sub_243959820();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_243792E6C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v4 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x270FA5388](v4);
  uint64_t v19 = (uint64_t)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9FC80);
  uint64_t v17 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DeliveryDateFormatter(0);
  MEMORY[0x270FA5388](v8);
  id v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2439574D0();
  sub_243957630();
  sub_243957720();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2437994B4();
  sub_243959BA0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    uint64_t v16 = (uint64_t (*)(void))type metadata accessor for FormatterConfiguration;
  }
  else
  {
    uint64_t v12 = v17;
    uint64_t v11 = v18;
    char v22 = 0;
    sub_243796524(&qword_268D97EB8, (void (*)(uint64_t))type metadata accessor for FormatterConfiguration);
    sub_2439596F0();
    sub_2433F6F94(v19, (uint64_t)v10);
    char v21 = 1;
    uint64_t v13 = v20;
    char v14 = sub_2439596B0();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v13);
    v10[*(int *)(v8 + 20)] = v14 & 1;
    sub_2437964BC((uint64_t)v10, v11, type metadata accessor for DeliveryDateFormatter);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    uint64_t v16 = type metadata accessor for DeliveryDateFormatter;
  }
  return sub_2437963D4((uint64_t)v10, v16);
}

uint64_t sub_243793178(uint64_t a1)
{
  unint64_t v2 = sub_2437994B4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2437931B4(uint64_t a1)
{
  unint64_t v2 = sub_2437994B4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2437931F0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24379432C(a1, (uint64_t (*)(uint64_t, char *))sub_24378F5A0, a2);
}

uint64_t sub_243793208@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_243792E6C(a1, a2);
}

uint64_t sub_243793220(void *a1)
{
  return sub_243792CB8(a1);
}

uint64_t sub_243793238()
{
  return sub_243959B40();
}

uint64_t sub_2437933A4()
{
  return sub_243959AF0();
}

uint64_t sub_2437934F8()
{
  return sub_243959B40();
}

uint64_t sub_243793660()
{
  if (*(unsigned char *)(v0 + *(int *)(type metadata accessor for ShippedDateFormatter(0) + 24)) == 1)
  {
    if (qword_26B0C7FA0 != -1) {
      swift_once();
    }
    uint64_t v1 = (void *)qword_26B0C7F98;
  }
  else
  {
    if (qword_26B0C7FA0 != -1) {
      swift_once();
    }
    uint64_t v1 = (void *)qword_26B0C7F98;
  }
  unint64_t v2 = (void *)sub_2439582A0();
  uint64_t v3 = (void *)sub_2439582A0();
  uint64_t v4 = (void *)sub_2439582A0();
  id v5 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, v3, v4);

  uint64_t v6 = sub_2439582D0();
  return v6;
}

uint64_t sub_2437937B4()
{
  if (*(unsigned char *)(v0 + *(int *)(type metadata accessor for ShippedDateFormatter(0) + 24)) == 1)
  {
    if (qword_26B0C7FA0 != -1) {
      swift_once();
    }
    uint64_t v1 = (void *)qword_26B0C7F98;
  }
  else
  {
    if (qword_26B0C7FA0 != -1) {
      swift_once();
    }
    uint64_t v1 = (void *)qword_26B0C7F98;
  }
  unint64_t v2 = (void *)sub_2439582A0();
  uint64_t v3 = (void *)sub_2439582A0();
  uint64_t v4 = (void *)sub_2439582A0();
  id v5 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, v3, v4);

  uint64_t v6 = sub_2439582D0();
  return v6;
}

uint64_t sub_243793908(uint64_t a1, uint64_t a2)
{
  int v5 = *(unsigned __int8 *)(v2 + *(int *)(type metadata accessor for ShippedDateFormatter(0) + 24));
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E30);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_24395EAE0;
  *(void *)(v6 + 56) = MEMORY[0x263F8D310];
  *(void *)(v6 + 64) = sub_24337BF04();
  *(void *)(v6 + 32) = a1;
  *(void *)(v6 + 40) = a2;
  uint64_t v7 = qword_26B0C7FA0;
  swift_bridgeObjectRetain();
  if (v5 == 1)
  {
    if (v7 == -1) {
      goto LABEL_5;
    }
    goto LABEL_6;
  }
  if (v7 != -1) {
LABEL_6:
  }
    swift_once();
LABEL_5:
  uint64_t v8 = (void *)qword_26B0C7F98;
  uint64_t v9 = (void *)sub_2439582A0();
  id v10 = (void *)sub_2439582A0();
  uint64_t v11 = (void *)sub_2439582A0();
  id v12 = objc_msgSend(v8, sel_localizedStringForKey_value_table_, v9, v10, v11);

  sub_2439582D0();
  uint64_t v13 = sub_243958310();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_243793B40(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9FC78);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_243799460();
  sub_243959BD0();
  v11[15] = 0;
  type metadata accessor for FormatterConfiguration();
  sub_243796524((unint64_t *)&unk_268DA22C0, (void (*)(uint64_t))type metadata accessor for FormatterConfiguration);
  sub_243959860();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for ShippedDateFormatter(0);
    v11[14] = 1;
    sub_243959820();
    v11[13] = *(unsigned char *)(v3 + *(int *)(v9 + 24));
    v11[12] = 2;
    sub_2437062D4();
    sub_243959860();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_243793D3C()
{
  return sub_243959B40();
}

uint64_t sub_243793EB8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v16 = a2;
  uint64_t v4 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x270FA5388](v4);
  uint64_t v19 = (uint64_t)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9FC68);
  uint64_t v17 = *(void *)(v6 - 8);
  uint64_t v18 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ShippedDateFormatter(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2439574D0();
  sub_243957630();
  sub_243957720();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_243799460();
  sub_243959BA0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    char v15 = (uint64_t (*)(void))type metadata accessor for FormatterConfiguration;
  }
  else
  {
    uint64_t v12 = v17;
    char v23 = 0;
    sub_243796524(&qword_268D97EB8, (void (*)(uint64_t))type metadata accessor for FormatterConfiguration);
    uint64_t v13 = v18;
    sub_2439596F0();
    sub_2433F6F94(v19, (uint64_t)v11);
    char v22 = 1;
    v11[*(int *)(v9 + 20)] = sub_2439596B0() & 1;
    char v20 = 2;
    sub_2437063D0();
    sub_2439596F0();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v13);
    v11[*(int *)(v9 + 24)] = v21;
    sub_2437964BC((uint64_t)v11, v16, type metadata accessor for ShippedDateFormatter);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    char v15 = type metadata accessor for ShippedDateFormatter;
  }
  return sub_2437963D4((uint64_t)v11, v15);
}

uint64_t sub_243794200()
{
  unint64_t v1 = 0xD000000000000019;
  if (*v0 != 1) {
    unint64_t v1 = 0x676E697070696873;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x72756769666E6F63;
  }
}

uint64_t sub_243794274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_243799920(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24379429C(uint64_t a1)
{
  unint64_t v2 = sub_243799460();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2437942D8(uint64_t a1)
{
  unint64_t v2 = sub_243799460();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_243794314@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24379432C(a1, (uint64_t (*)(uint64_t, char *))sub_24378F1BC, a2);
}

uint64_t sub_24379432C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, char *)@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_243957400();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2439573B0();
  uint64_t v10 = a2(a1, v9);
  uint64_t v12 = v11;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *a3 = v10;
  a3[1] = v12;
  return result;
}

uint64_t sub_243794424@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_243793EB8(a1, a2);
}

uint64_t sub_24379443C(void *a1)
{
  return sub_243793B40(a1);
}

uint64_t sub_243794458()
{
  return sub_243959AE0();
}

uint64_t sub_2437945B8()
{
  return sub_243959B40();
}

uint64_t sub_243794734(char a1)
{
  if (a1)
  {
    if (qword_26B0C7FA0 != -1) {
      swift_once();
    }
    unint64_t v1 = (void *)qword_26B0C7F98;
  }
  else
  {
    if (qword_26B0C7FA0 != -1) {
      swift_once();
    }
    unint64_t v1 = (void *)qword_26B0C7F98;
  }
  unint64_t v2 = (void *)sub_2439582A0();
  uint64_t v3 = (void *)sub_2439582A0();
  uint64_t v4 = (void *)sub_2439582A0();
  id v5 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, v3, v4);

  uint64_t v6 = sub_2439582D0();
  return v6;
}

uint64_t sub_243794870(char a1)
{
  if (a1)
  {
    if (qword_26B0C7FA0 != -1) {
      swift_once();
    }
    unint64_t v1 = (void *)qword_26B0C7F98;
  }
  else
  {
    if (qword_26B0C7FA0 != -1) {
      swift_once();
    }
    unint64_t v1 = (void *)qword_26B0C7F98;
  }
  unint64_t v2 = (void *)sub_2439582A0();
  uint64_t v3 = (void *)sub_2439582A0();
  uint64_t v4 = (void *)sub_2439582A0();
  id v5 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, v3, v4);

  uint64_t v6 = sub_2439582D0();
  return v6;
}

uint64_t sub_2437949AC(char a1)
{
  if (a1)
  {
    if (qword_26B0C7FA0 != -1) {
      swift_once();
    }
    unint64_t v1 = (void *)qword_26B0C7F98;
  }
  else
  {
    if (qword_26B0C7FA0 != -1) {
      swift_once();
    }
    unint64_t v1 = (void *)qword_26B0C7F98;
  }
  unint64_t v2 = (void *)sub_2439582A0();
  uint64_t v3 = (void *)sub_2439582A0();
  uint64_t v4 = (void *)sub_2439582A0();
  id v5 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, v3, v4);

  uint64_t v6 = sub_2439582D0();
  return v6;
}

uint64_t sub_243794AE8(char a1)
{
  if (a1)
  {
    if (qword_26B0C7FA0 != -1) {
      swift_once();
    }
    unint64_t v1 = (void *)qword_26B0C7F98;
  }
  else
  {
    if (qword_26B0C7FA0 != -1) {
      swift_once();
    }
    unint64_t v1 = (void *)qword_26B0C7F98;
  }
  unint64_t v2 = (void *)sub_2439582A0();
  uint64_t v3 = (void *)sub_2439582A0();
  uint64_t v4 = (void *)sub_2439582A0();
  id v5 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, v3, v4);

  uint64_t v6 = sub_2439582D0();
  return v6;
}

uint64_t sub_243794C24(char a1)
{
  if (a1)
  {
    if (qword_26B0C7FA0 != -1) {
      swift_once();
    }
    unint64_t v1 = (void *)qword_26B0C7F98;
  }
  else
  {
    if (qword_26B0C7FA0 != -1) {
      swift_once();
    }
    unint64_t v1 = (void *)qword_26B0C7F98;
  }
  unint64_t v2 = (void *)sub_2439582A0();
  uint64_t v3 = (void *)sub_2439582A0();
  uint64_t v4 = (void *)sub_2439582A0();
  id v5 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, v3, v4);

  uint64_t v6 = sub_2439582D0();
  return v6;
}

uint64_t sub_243794D60(char a1)
{
  if (a1)
  {
    if (qword_26B0C7FA0 != -1) {
      swift_once();
    }
    unint64_t v1 = (void *)qword_26B0C7F98;
  }
  else
  {
    if (qword_26B0C7FA0 != -1) {
      swift_once();
    }
    unint64_t v1 = (void *)qword_26B0C7F98;
  }
  unint64_t v2 = (void *)sub_2439582A0();
  uint64_t v3 = (void *)sub_2439582A0();
  uint64_t v4 = (void *)sub_2439582A0();
  id v5 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, v3, v4);

  uint64_t v6 = sub_2439582D0();
  return v6;
}

uint64_t sub_243794E9C(char a1)
{
  if (a1)
  {
    if (qword_26B0C7FA0 != -1) {
      swift_once();
    }
    unint64_t v1 = (void *)qword_26B0C7F98;
  }
  else
  {
    if (qword_26B0C7FA0 != -1) {
      swift_once();
    }
    unint64_t v1 = (void *)qword_26B0C7F98;
  }
  unint64_t v2 = (void *)sub_2439582A0();
  uint64_t v3 = (void *)sub_2439582A0();
  uint64_t v4 = (void *)sub_2439582A0();
  id v5 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, v3, v4);

  uint64_t v6 = sub_2439582D0();
  return v6;
}

uint64_t sub_243794FD8(char a1)
{
  if (a1)
  {
    if (qword_26B0C7FA0 != -1) {
      swift_once();
    }
    unint64_t v1 = (void *)qword_26B0C7F98;
  }
  else
  {
    if (qword_26B0C7FA0 != -1) {
      swift_once();
    }
    unint64_t v1 = (void *)qword_26B0C7F98;
  }
  unint64_t v2 = (void *)sub_2439582A0();
  uint64_t v3 = (void *)sub_2439582A0();
  uint64_t v4 = (void *)sub_2439582A0();
  id v5 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, v3, v4);

  uint64_t v6 = sub_2439582D0();
  return v6;
}

uint64_t sub_243795114(char a1)
{
  if (a1)
  {
    if (qword_26B0C7FA0 != -1) {
      swift_once();
    }
    unint64_t v1 = (void *)qword_26B0C7F98;
  }
  else
  {
    if (qword_26B0C7FA0 != -1) {
      swift_once();
    }
    unint64_t v1 = (void *)qword_26B0C7F98;
  }
  unint64_t v2 = (void *)sub_2439582A0();
  uint64_t v3 = (void *)sub_2439582A0();
  uint64_t v4 = (void *)sub_2439582A0();
  id v5 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, v3, v4);

  uint64_t v6 = sub_2439582D0();
  return v6;
}

uint64_t sub_243795250(char a1)
{
  if (a1)
  {
    if (qword_26B0C7FA0 != -1) {
      swift_once();
    }
    unint64_t v1 = (void *)qword_26B0C7F98;
  }
  else
  {
    if (qword_26B0C7FA0 != -1) {
      swift_once();
    }
    unint64_t v1 = (void *)qword_26B0C7F98;
  }
  unint64_t v2 = (void *)sub_2439582A0();
  uint64_t v3 = (void *)sub_2439582A0();
  uint64_t v4 = (void *)sub_2439582A0();
  id v5 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, v3, v4);

  uint64_t v6 = sub_2439582D0();
  return v6;
}

uint64_t sub_24379538C(char a1)
{
  if (a1)
  {
    if (qword_26B0C7FA0 != -1) {
      swift_once();
    }
    unint64_t v1 = (void *)qword_26B0C7F98;
  }
  else
  {
    if (qword_26B0C7FA0 != -1) {
      swift_once();
    }
    unint64_t v1 = (void *)qword_26B0C7F98;
  }
  unint64_t v2 = (void *)sub_2439582A0();
  uint64_t v3 = (void *)sub_2439582A0();
  uint64_t v4 = (void *)sub_2439582A0();
  id v5 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, v3, v4);

  uint64_t v6 = sub_2439582D0();
  return v6;
}

uint64_t sub_2437954C8(char a1)
{
  if (a1)
  {
    if (qword_26B0C7FA0 != -1) {
      swift_once();
    }
    unint64_t v1 = (void *)qword_26B0C7F98;
  }
  else
  {
    if (qword_26B0C7FA0 != -1) {
      swift_once();
    }
    unint64_t v1 = (void *)qword_26B0C7F98;
  }
  unint64_t v2 = (void *)sub_2439582A0();
  uint64_t v3 = (void *)sub_2439582A0();
  uint64_t v4 = (void *)sub_2439582A0();
  id v5 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, v3, v4);

  uint64_t v6 = sub_2439582D0();
  return v6;
}

uint64_t sub_243795604(char a1)
{
  if (a1)
  {
    if (qword_26B0C7FA0 != -1) {
      swift_once();
    }
    unint64_t v1 = (void *)qword_26B0C7F98;
  }
  else
  {
    if (qword_26B0C7FA0 != -1) {
      swift_once();
    }
    unint64_t v1 = (void *)qword_26B0C7F98;
  }
  unint64_t v2 = (void *)sub_2439582A0();
  uint64_t v3 = (void *)sub_2439582A0();
  uint64_t v4 = (void *)sub_2439582A0();
  id v5 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, v3, v4);

  uint64_t v6 = sub_2439582D0();
  return v6;
}

uint64_t sub_243795740(char a1)
{
  if (a1)
  {
    if (qword_26B0C7FA0 != -1) {
      swift_once();
    }
    unint64_t v1 = (void *)qword_26B0C7F98;
  }
  else
  {
    if (qword_26B0C7FA0 != -1) {
      swift_once();
    }
    unint64_t v1 = (void *)qword_26B0C7F98;
  }
  unint64_t v2 = (void *)sub_2439582A0();
  uint64_t v3 = (void *)sub_2439582A0();
  uint64_t v4 = (void *)sub_2439582A0();
  id v5 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, v3, v4);

  uint64_t v6 = sub_2439582D0();
  return v6;
}

uint64_t sub_24379587C(uint64_t a1, uint64_t a2)
{
  if ((MEMORY[0x24567C750]() & 1) != 0
    && (uint64_t v4 = type metadata accessor for FormatterConfiguration(),
        (MEMORY[0x24567C8B0](a1 + *(int *)(v4 + 20), a2 + *(int *)(v4 + 20)) & 1) != 0)
    && (MEMORY[0x24567C9A0](a1 + *(int *)(v4 + 24), a2 + *(int *)(v4 + 24)) & 1) != 0
    && (uint64_t v5 = type metadata accessor for ShippedDateFormatter(0),
        *(unsigned __int8 *)(a1 + *(int *)(v5 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(v5 + 20))))
  {
    char v6 = *(unsigned char *)(a1 + *(int *)(v5 + 24)) ^ *(unsigned char *)(a2 + *(int *)(v5 + 24)) ^ 1;
  }
  else
  {
    char v6 = 0;
  }
  return v6 & 1;
}

BOOL _s10FinanceKit5OrderV19ShippingFulfillmentV12StatusValuesV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_243957400();
  uint64_t v87 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v77 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D97950);
  uint64_t v6 = MEMORY[0x270FA5388](v85);
  uint64_t v78 = (uint64_t)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v84 = (uint64_t)&v72 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v76 = (uint64_t)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  char v82 = (char *)&v72 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v81 = (char *)&v72 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v79 = (uint64_t)&v72 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v86 = (uint64_t)&v72 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v83 = (uint64_t)&v72 - v20;
  uint64_t v21 = type metadata accessor for Order.FulfillmentWindow(0);
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v80 = (uint64_t)&v72 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D980E8);
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)&v72 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D97EF0);
  uint64_t v28 = MEMORY[0x270FA5388](v27 - 8);
  uint64_t v30 = (char *)&v72 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x270FA5388](v28);
  unint64_t v33 = (char *)&v72 - v32;
  MEMORY[0x270FA5388](v31);
  uint64_t v35 = (char *)&v72 - v34;
  if ((sub_24378C1A0(a1, a2) & 1) == 0) {
    return 0;
  }
  uint64_t v75 = v4;
  uint64_t v36 = type metadata accessor for Order.ShippingFulfillment.StatusValues(0);
  uint64_t v37 = *(int *)(v36 + 20);
  uint64_t v72 = a1;
  sub_24337C254(a1 + v37, (uint64_t)v35, &qword_268D97EF0);
  uint64_t v73 = a2;
  uint64_t v74 = v36;
  sub_24337C254(a2 + *(int *)(v36 + 20), (uint64_t)v33, &qword_268D97EF0);
  uint64_t v38 = (uint64_t)&v26[*(int *)(v24 + 48)];
  sub_24337C254((uint64_t)v35, (uint64_t)v26, &qword_268D97EF0);
  sub_24337C254((uint64_t)v33, v38, &qword_268D97EF0);
  uint64_t v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
  if (v39((uint64_t)v26, 1, v21) == 1)
  {
    sub_24337C1BC((uint64_t)v33, &qword_268D97EF0);
    sub_24337C1BC((uint64_t)v35, &qword_268D97EF0);
    if (v39(v38, 1, v21) == 1)
    {
      sub_24337C1BC((uint64_t)v26, &qword_268D97EF0);
      goto LABEL_9;
    }
LABEL_7:
    uint64_t v40 = &qword_268D980E8;
    uint64_t v41 = (uint64_t)v26;
LABEL_22:
    sub_24337C1BC(v41, v40);
    return 0;
  }
  sub_24337C254((uint64_t)v26, (uint64_t)v30, &qword_268D97EF0);
  if (v39(v38, 1, v21) == 1)
  {
    sub_24337C1BC((uint64_t)v33, &qword_268D97EF0);
    sub_24337C1BC((uint64_t)v35, &qword_268D97EF0);
    sub_2437963D4((uint64_t)v30, type metadata accessor for Order.FulfillmentWindow);
    goto LABEL_7;
  }
  uint64_t v42 = v80;
  sub_243796434(v38, v80, type metadata accessor for Order.FulfillmentWindow);
  char v43 = _s10FinanceKit5OrderV17FulfillmentWindowO2eeoiySbAE_AEtFZ_0((uint64_t)v30, v42);
  sub_2437963D4(v42, type metadata accessor for Order.FulfillmentWindow);
  sub_24337C1BC((uint64_t)v33, &qword_268D97EF0);
  sub_24337C1BC((uint64_t)v35, &qword_268D97EF0);
  sub_2437963D4((uint64_t)v30, type metadata accessor for Order.FulfillmentWindow);
  sub_24337C1BC((uint64_t)v26, &qword_268D97EF0);
  if ((v43 & 1) == 0) {
    return 0;
  }
LABEL_9:
  uint64_t v44 = v74;
  uint64_t v45 = v72;
  uint64_t v46 = v83;
  sub_24337C254(v72 + *(int *)(v74 + 24), v83, (uint64_t *)&unk_26B0C8E20);
  uint64_t v47 = v73;
  uint64_t v48 = v86;
  sub_24337C254(v73 + *(int *)(v44 + 24), v86, (uint64_t *)&unk_26B0C8E20);
  uint64_t v49 = v84;
  uint64_t v50 = v84 + *(int *)(v85 + 48);
  sub_24337C254(v46, v84, (uint64_t *)&unk_26B0C8E20);
  sub_24337C254(v48, v50, (uint64_t *)&unk_26B0C8E20);
  uint64_t v51 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v87 + 48);
  uint64_t v52 = v75;
  if (v51(v49, 1, v75) != 1)
  {
    uint64_t v56 = v79;
    sub_24337C254(v49, v79, (uint64_t *)&unk_26B0C8E20);
    int v57 = v51(v50, 1, v52);
    uint64_t v55 = (uint64_t)v82;
    if (v57 != 1)
    {
      uint64_t v58 = v87;
      uint64_t v59 = v56;
      uint64_t v60 = v77;
      (*(void (**)(char *, uint64_t, uint64_t))(v87 + 32))(v77, v50, v52);
      sub_243796524((unint64_t *)&unk_268DA2730, MEMORY[0x263F07490]);
      char v61 = sub_243958270();
      uint64_t v62 = *(void (**)(char *, uint64_t))(v58 + 8);
      v62(v60, v75);
      sub_24337C1BC(v86, (uint64_t *)&unk_26B0C8E20);
      sub_24337C1BC(v83, (uint64_t *)&unk_26B0C8E20);
      v62((char *)v59, v75);
      uint64_t v52 = v75;
      sub_24337C1BC(v84, (uint64_t *)&unk_26B0C8E20);
      uint64_t v54 = (uint64_t)v81;
      if ((v61 & 1) == 0) {
        return 0;
      }
      goto LABEL_16;
    }
    sub_24337C1BC(v86, (uint64_t *)&unk_26B0C8E20);
    sub_24337C1BC(v46, (uint64_t *)&unk_26B0C8E20);
    (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v56, v52);
    goto LABEL_14;
  }
  sub_24337C1BC(v48, (uint64_t *)&unk_26B0C8E20);
  sub_24337C1BC(v46, (uint64_t *)&unk_26B0C8E20);
  int v53 = v51(v50, 1, v52);
  uint64_t v54 = (uint64_t)v81;
  uint64_t v55 = (uint64_t)v82;
  if (v53 != 1)
  {
LABEL_14:
    uint64_t v40 = &qword_268D97950;
    uint64_t v41 = v49;
    goto LABEL_22;
  }
  sub_24337C1BC(v49, (uint64_t *)&unk_26B0C8E20);
LABEL_16:
  uint64_t v63 = v74;
  sub_24337C254(v45 + *(int *)(v74 + 28), v54, (uint64_t *)&unk_26B0C8E20);
  sub_24337C254(v47 + *(int *)(v63 + 28), v55, (uint64_t *)&unk_26B0C8E20);
  uint64_t v64 = v78;
  uint64_t v65 = v78 + *(int *)(v85 + 48);
  sub_24337C254(v54, v78, (uint64_t *)&unk_26B0C8E20);
  sub_24337C254(v55, v65, (uint64_t *)&unk_26B0C8E20);
  if (v51(v64, 1, v52) == 1)
  {
    sub_24337C1BC(v55, (uint64_t *)&unk_26B0C8E20);
    sub_24337C1BC(v54, (uint64_t *)&unk_26B0C8E20);
    if (v51(v65, 1, v52) == 1)
    {
      sub_24337C1BC(v64, (uint64_t *)&unk_26B0C8E20);
      return 1;
    }
    goto LABEL_21;
  }
  uint64_t v66 = v76;
  sub_24337C254(v64, v76, (uint64_t *)&unk_26B0C8E20);
  if (v51(v65, 1, v52) == 1)
  {
    sub_24337C1BC(v55, (uint64_t *)&unk_26B0C8E20);
    sub_24337C1BC(v54, (uint64_t *)&unk_26B0C8E20);
    (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v66, v52);
LABEL_21:
    uint64_t v40 = &qword_268D97950;
    uint64_t v41 = v64;
    goto LABEL_22;
  }
  uint64_t v68 = v87;
  uint64_t v69 = v77;
  (*(void (**)(char *, uint64_t, uint64_t))(v87 + 32))(v77, v65, v52);
  sub_243796524((unint64_t *)&unk_268DA2730, MEMORY[0x263F07490]);
  char v70 = sub_243958270();
  uint64_t v71 = *(void (**)(char *, uint64_t))(v68 + 8);
  v71(v69, v52);
  sub_24337C1BC(v55, (uint64_t *)&unk_26B0C8E20);
  sub_24337C1BC(v54, (uint64_t *)&unk_26B0C8E20);
  v71((char *)v66, v52);
  sub_24337C1BC(v64, (uint64_t *)&unk_26B0C8E20);
  return (v70 & 1) != 0;
}

uint64_t type metadata accessor for Order.ShippingFulfillment.StatusValues(uint64_t a1)
{
  return sub_24338E938(a1, (uint64_t *)&unk_268D9FB80);
}

uint64_t sub_24379636C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D97EF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2437963D4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_243796434(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for Order.ShippingFulfillment.StatusFormatter(uint64_t a1)
{
  return sub_24338E938(a1, (uint64_t *)&unk_268D9FBA0);
}

uint64_t sub_2437964BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_243796524(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24379656C()
{
  unint64_t result = qword_268D9FB48;
  if (!qword_268D9FB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FB48);
  }
  return result;
}

uint64_t sub_2437965C0(uint64_t a1)
{
  uint64_t result = sub_243796524(&qword_268D9FB58, (void (*)(uint64_t))type metadata accessor for Order.ShippingFulfillment.StatusFormatter);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_243796618()
{
  return sub_243796524(&qword_268D9FB60, (void (*)(uint64_t))type metadata accessor for Order.ShippingFulfillment.StatusFormatter);
}

uint64_t sub_243796660()
{
  return sub_243796524(&qword_268D9FB68, (void (*)(uint64_t))type metadata accessor for Order.ShippingFulfillment.StatusFormatter);
}

uint64_t sub_2437966A8()
{
  return sub_243796524(&qword_268D9FB70, (void (*)(uint64_t))type metadata accessor for Order.ShippingFulfillment.StatusFormatter);
}

uint64_t sub_2437966F0()
{
  return sub_243796524(&qword_268D9FB78, (void (*)(uint64_t))type metadata accessor for Order.ShippingFulfillment.StatusFormatter);
}

uint64_t *_s12StatusValuesVwCP_0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D97EF8);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v8 = sub_243957400();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    }
    uint64_t v10 = a3[5];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = type metadata accessor for Order.FulfillmentWindow(0);
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D97EF0);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v17 = sub_243957400();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v11, v12, v17);
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v18 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
        uint64_t v19 = &v11[v18];
        uint64_t v20 = &v12[v18];
        uint64_t v21 = sub_243956820();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    uint64_t v22 = a3[6];
    uint64_t v23 = (char *)a1 + v22;
    uint64_t v24 = (char *)a2 + v22;
    uint64_t v25 = sub_243957400();
    uint64_t v26 = *(void *)(v25 - 8);
    uint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
    if (v27(v24, 1, v25))
    {
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
      memcpy(v23, v24, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
    uint64_t v29 = a3[7];
    uint64_t v30 = (char *)a1 + v29;
    uint64_t v31 = (char *)a2 + v29;
    if (v27(v31, 1, v25))
    {
      uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v30, v31, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v30, 0, 1, v25);
    }
  }
  return a1;
}

uint64_t _s12StatusValuesVwxx_0(uint64_t a1, int *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_268D97EF8);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v4 = sub_243957400();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = type metadata accessor for Order.FulfillmentWindow(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v8 = sub_243957400();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v5, v8);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v9 = v5 + *(int *)(type metadata accessor for TimeWindow(0) + 20);
      uint64_t v10 = sub_243956820();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
    }
  }
  uint64_t v11 = a1 + a2[6];
  uint64_t v12 = sub_243957400();
  uint64_t v17 = *(void *)(v12 - 8);
  uint64_t v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
  if (!v13(v11, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v11, v12);
  }
  uint64_t v14 = a1 + a2[7];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v13)(v14, 1, v12);
  if (!result)
  {
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 8);
    return v16(v14, v12);
  }
  return result;
}

char *_s12StatusValuesVwcp_0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D97EF8);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v7 = sub_243957400();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for Order.FulfillmentWindow(0);
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D97EF0);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v15 = sub_243957400();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v9, v10, v15);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v16 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
      uint64_t v17 = &v9[v16];
      uint64_t v18 = &v10[v16];
      uint64_t v19 = sub_243956820();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v20 = a3[6];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  uint64_t v23 = sub_243957400();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  if (v25(v22, 1, v23))
  {
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
    memcpy(v21, v22, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  uint64_t v27 = a3[7];
  uint64_t v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  if (v25(v29, 1, v23))
  {
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
    memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v28, v29, v23);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v28, 0, 1, v23);
  }
  return a1;
}

char *_s12StatusValuesVwca_0(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_24337C1BC((uint64_t)a1, &qword_268D97EF8);
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D97EF8);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v7 = sub_243957400();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for Order.FulfillmentWindow(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v17 = sub_243957400();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v9, v10, v17);
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v18 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
        uint64_t v19 = &v9[v18];
        uint64_t v20 = &v10[v18];
        uint64_t v21 = sub_243956820();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_17;
    }
LABEL_11:
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D97EF0);
    memcpy(v9, v10, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_17;
  }
  if (v15)
  {
    sub_2437963D4((uint64_t)v9, type metadata accessor for Order.FulfillmentWindow);
    goto LABEL_11;
  }
  if (a1 != a2)
  {
    sub_2437963D4((uint64_t)v9, type metadata accessor for Order.FulfillmentWindow);
    int v23 = swift_getEnumCaseMultiPayload();
    uint64_t v24 = sub_243957400();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v9, v10, v24);
    if (v23 == 1)
    {
      uint64_t v25 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
      uint64_t v26 = &v9[v25];
      uint64_t v27 = &v10[v25];
      uint64_t v28 = sub_243956820();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_17:
  uint64_t v29 = a3[6];
  uint64_t v30 = &a1[v29];
  uint64_t v31 = &a2[v29];
  uint64_t v32 = sub_243957400();
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48);
  int v35 = v34(v30, 1, v32);
  int v36 = v34(v31, 1, v32);
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  if (v36)
  {
    (*(void (**)(char *, uint64_t))(v33 + 8))(v30, v32);
LABEL_22:
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
    memcpy(v30, v31, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_23;
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 24))(v30, v31, v32);
LABEL_23:
  uint64_t v38 = a3[7];
  uint64_t v39 = &a1[v38];
  uint64_t v40 = &a2[v38];
  int v41 = v34(&a1[v38], 1, v32);
  int v42 = v34(v40, 1, v32);
  if (!v41)
  {
    if (!v42)
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 24))(v39, v40, v32);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v33 + 8))(v39, v32);
    goto LABEL_28;
  }
  if (v42)
  {
LABEL_28:
    uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
    memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v39, v40, v32);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v39, 0, 1, v32);
  return a1;
}

char *_s12StatusValuesVwtk_0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D97EF8);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v7 = sub_243957400();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for Order.FulfillmentWindow(0);
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D97EF0);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v15 = sub_243957400();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v9, v10, v15);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v16 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
      uint64_t v17 = &v9[v16];
      uint64_t v18 = &v10[v16];
      uint64_t v19 = sub_243956820();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v20 = a3[6];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  uint64_t v23 = sub_243957400();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  if (v25(v22, 1, v23))
  {
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
    memcpy(v21, v22, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  uint64_t v27 = a3[7];
  uint64_t v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  if (v25(v29, 1, v23))
  {
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
    memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v28, v29, v23);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v28, 0, 1, v23);
  }
  return a1;
}

char *_s12StatusValuesVwta_0(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_24337C1BC((uint64_t)a1, &qword_268D97EF8);
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D97EF8);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v7 = sub_243957400();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for Order.FulfillmentWindow(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v17 = sub_243957400();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v9, v10, v17);
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v18 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
        uint64_t v19 = &v9[v18];
        uint64_t v20 = &v10[v18];
        uint64_t v21 = sub_243956820();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_17;
    }
LABEL_11:
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D97EF0);
    memcpy(v9, v10, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_17;
  }
  if (v15)
  {
    sub_2437963D4((uint64_t)v9, type metadata accessor for Order.FulfillmentWindow);
    goto LABEL_11;
  }
  if (a1 != a2)
  {
    sub_2437963D4((uint64_t)v9, type metadata accessor for Order.FulfillmentWindow);
    int v23 = swift_getEnumCaseMultiPayload();
    uint64_t v24 = sub_243957400();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v9, v10, v24);
    if (v23 == 1)
    {
      uint64_t v25 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
      uint64_t v26 = &v9[v25];
      uint64_t v27 = &v10[v25];
      uint64_t v28 = sub_243956820();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_17:
  uint64_t v29 = a3[6];
  uint64_t v30 = &a1[v29];
  uint64_t v31 = &a2[v29];
  uint64_t v32 = sub_243957400();
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48);
  int v35 = v34(v30, 1, v32);
  int v36 = v34(v31, 1, v32);
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v30, v31, v32);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  if (v36)
  {
    (*(void (**)(char *, uint64_t))(v33 + 8))(v30, v32);
LABEL_22:
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
    memcpy(v30, v31, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_23;
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 40))(v30, v31, v32);
LABEL_23:
  uint64_t v38 = a3[7];
  uint64_t v39 = &a1[v38];
  uint64_t v40 = &a2[v38];
  int v41 = v34(&a1[v38], 1, v32);
  int v42 = v34(v40, 1, v32);
  if (!v41)
  {
    if (!v42)
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 40))(v39, v40, v32);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v33 + 8))(v39, v32);
    goto LABEL_28;
  }
  if (v42)
  {
LABEL_28:
    uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
    memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v39, v40, v32);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v39, 0, 1, v32);
  return a1;
}

uint64_t _s12StatusValuesVwet_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2437981C4);
}

uint64_t sub_2437981C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D97EF8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D97EF0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
  int v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t _s12StatusValuesVwst_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_243798330);
}

uint64_t sub_243798330(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D97EF8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D97EF0);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

void sub_243798494()
{
  sub_2437985D0();
  if (v0 <= 0x3F)
  {
    sub_2433F5A58(319, &qword_268D980B8, (void (*)(uint64_t))type metadata accessor for Order.FulfillmentWindow);
    if (v1 <= 0x3F)
    {
      sub_2433F5A58(319, (unint64_t *)&qword_26B0C92A0, MEMORY[0x263F07490]);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_2437985D0()
{
  if (!qword_268D9FB90)
  {
    sub_24379862C();
    unint64_t v0 = type metadata accessor for Order.Fulfillment.DisplayStatus();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D9FB90);
    }
  }
}

unint64_t sub_24379862C()
{
  unint64_t result = qword_268D9FB98;
  if (!qword_268D9FB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FB98);
  }
  return result;
}

uint64_t _s15StatusFormatterVwet_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_2Tm_0);
}

uint64_t _s15StatusFormatterVwst_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_3Tm_0);
}

ValueMetadata *_s15StatusFormatterV10CodingKeysOMa_0()
{
  return &_s15StatusFormatterV10CodingKeysON_0;
}

unint64_t sub_2437986D4()
{
  unint64_t result = qword_268D9FBB0;
  if (!qword_268D9FBB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FBB0);
  }
  return result;
}

unint64_t sub_24379872C()
{
  unint64_t result = qword_268D9FBB8;
  if (!qword_268D9FBB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FBB8);
  }
  return result;
}

unint64_t sub_243798784()
{
  unint64_t result = qword_268D9FBC0;
  if (!qword_268D9FBC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FBC0);
  }
  return result;
}

uint64_t sub_2437987D8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x72756769666E6F63 && a2 == 0xED00006E6F697461;
  if (v2 || (sub_243959940() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000002439B1880 || (sub_243959940() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000002439A4D40)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_243959940();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_243798948()
{
  return objectdestroyTm_8((uint64_t (*)(void))type metadata accessor for EndOfDeliveryWindowFormatter);
}

uint64_t sub_243798960()
{
  return sub_243798EB4((uint64_t (*)(void))type metadata accessor for EndOfDeliveryWindowFormatter, (uint64_t (*)(uint64_t, uint64_t))sub_243794870);
}

uint64_t sub_24379898C()
{
  return objectdestroyTm_8((uint64_t (*)(void))type metadata accessor for EndOfDeliveryWindowFormatter);
}

uint64_t sub_2437989A4()
{
  return sub_243798EB4((uint64_t (*)(void))type metadata accessor for EndOfDeliveryWindowFormatter, (uint64_t (*)(uint64_t, uint64_t))sub_243794AE8);
}

uint64_t sub_2437989D0()
{
  return objectdestroyTm_8((uint64_t (*)(void))type metadata accessor for EndOfDeliveryWindowFormatter);
}

uint64_t sub_2437989E8()
{
  return sub_243798EB4((uint64_t (*)(void))type metadata accessor for EndOfDeliveryWindowFormatter, (uint64_t (*)(uint64_t, uint64_t))sub_243794D60);
}

uint64_t sub_243798A14()
{
  return objectdestroyTm_8((uint64_t (*)(void))type metadata accessor for EndOfDeliveryWindowFormatter);
}

uint64_t sub_243798A2C()
{
  return sub_243798EB4((uint64_t (*)(void))type metadata accessor for EndOfDeliveryWindowFormatter, (uint64_t (*)(uint64_t, uint64_t))sub_243794FD8);
}

uint64_t sub_243798A58()
{
  return objectdestroyTm_8((uint64_t (*)(void))type metadata accessor for EndOfDeliveryWindowFormatter);
}

uint64_t sub_243798A70()
{
  return sub_243798EB4((uint64_t (*)(void))type metadata accessor for EndOfDeliveryWindowFormatter, (uint64_t (*)(uint64_t, uint64_t))sub_243795250);
}

uint64_t sub_243798A9C()
{
  return objectdestroyTm_8((uint64_t (*)(void))type metadata accessor for EndOfDeliveryWindowFormatter);
}

uint64_t sub_243798AB4()
{
  return sub_243798EB4((uint64_t (*)(void))type metadata accessor for EndOfDeliveryWindowFormatter, (uint64_t (*)(uint64_t, uint64_t))sub_2437954C8);
}

uint64_t sub_243798AE0()
{
  return objectdestroyTm_8((uint64_t (*)(void))type metadata accessor for EndOfDeliveryWindowFormatter);
}

uint64_t sub_243798AF8()
{
  return sub_243798EB4((uint64_t (*)(void))type metadata accessor for EndOfDeliveryWindowFormatter, (uint64_t (*)(uint64_t, uint64_t))sub_243795740);
}

uint64_t type metadata accessor for DeliveryDateFormatter(uint64_t a1)
{
  return sub_24338E938(a1, (uint64_t *)&unk_268D9FBF8);
}

uint64_t type metadata accessor for ShippedDateFormatter(uint64_t a1)
{
  return sub_24338E938(a1, (uint64_t *)&unk_268D9FBE8);
}

uint64_t sub_243798B64()
{
  return objectdestroyTm_8((uint64_t (*)(void))type metadata accessor for EndOfPickupWindowFormatter);
}

uint64_t sub_243798B7C()
{
  return sub_243798EB4((uint64_t (*)(void))type metadata accessor for EndOfPickupWindowFormatter, (uint64_t (*)(uint64_t, uint64_t))sub_243794734);
}

uint64_t sub_243798BA8()
{
  return objectdestroyTm_8((uint64_t (*)(void))type metadata accessor for EndOfPickupWindowFormatter);
}

uint64_t sub_243798BC0()
{
  return sub_243798EB4((uint64_t (*)(void))type metadata accessor for EndOfPickupWindowFormatter, (uint64_t (*)(uint64_t, uint64_t))sub_2437949AC);
}

uint64_t sub_243798BEC()
{
  return objectdestroyTm_8((uint64_t (*)(void))type metadata accessor for EndOfPickupWindowFormatter);
}

uint64_t sub_243798C04()
{
  return sub_243798EB4((uint64_t (*)(void))type metadata accessor for EndOfPickupWindowFormatter, (uint64_t (*)(uint64_t, uint64_t))sub_243794C24);
}

uint64_t sub_243798C30()
{
  return objectdestroyTm_8((uint64_t (*)(void))type metadata accessor for EndOfPickupWindowFormatter);
}

uint64_t sub_243798C48()
{
  return sub_243798EB4((uint64_t (*)(void))type metadata accessor for EndOfPickupWindowFormatter, (uint64_t (*)(uint64_t, uint64_t))sub_243794E9C);
}

uint64_t sub_243798C74()
{
  return objectdestroyTm_8((uint64_t (*)(void))type metadata accessor for EndOfPickupWindowFormatter);
}

uint64_t sub_243798C8C()
{
  return sub_243798EB4((uint64_t (*)(void))type metadata accessor for EndOfPickupWindowFormatter, (uint64_t (*)(uint64_t, uint64_t))sub_243795114);
}

uint64_t sub_243798CB8()
{
  return objectdestroyTm_8((uint64_t (*)(void))type metadata accessor for EndOfPickupWindowFormatter);
}

uint64_t sub_243798CD0()
{
  return sub_243798EB4((uint64_t (*)(void))type metadata accessor for EndOfPickupWindowFormatter, (uint64_t (*)(uint64_t, uint64_t))sub_24379538C);
}

uint64_t sub_243798CFC()
{
  return objectdestroyTm_8((uint64_t (*)(void))type metadata accessor for EndOfPickupWindowFormatter);
}

uint64_t objectdestroyTm_8(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(a1(0) - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 17) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  uint64_t v7 = v1 + v4;
  uint64_t v8 = sub_243957560();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = type metadata accessor for FormatterConfiguration();
  uint64_t v10 = v7 + *(int *)(v9 + 20);
  uint64_t v11 = sub_2439576F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = v7 + *(int *)(v9 + 24);
  uint64_t v13 = sub_243957740();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);

  return MEMORY[0x270FA0238](v1, v5, v6);
}

uint64_t sub_243798E88()
{
  return sub_243798EB4((uint64_t (*)(void))type metadata accessor for EndOfPickupWindowFormatter, (uint64_t (*)(uint64_t, uint64_t))sub_243795604);
}

uint64_t sub_243798EB4(uint64_t (*a1)(void), uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(a1(0) - 8);
  uint64_t v4 = *(unsigned __int8 *)(v2 + 16);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v3 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return a2(v4, v5);
}

uint64_t sub_243798F34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_2Tm_1);
}

uint64_t sub_243798F4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_3Tm_1);
}

uint64_t sub_243798F64()
{
  uint64_t result = type metadata accessor for FormatterConfiguration();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_243798FFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_2Tm_2);
}

uint64_t sub_243799014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_3Tm_2);
}

uint64_t sub_24379902C()
{
  uint64_t result = type metadata accessor for FormatterConfiguration();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2437990C0()
{
  return sub_243796524(&qword_268D9FC08, (void (*)(uint64_t))type metadata accessor for DeliveryDateFormatter);
}

uint64_t sub_243799108()
{
  return sub_243796524(&qword_268D9FC10, (void (*)(uint64_t))type metadata accessor for DeliveryDateFormatter);
}

uint64_t sub_243799150()
{
  return sub_243796524(&qword_268D9FC18, (void (*)(uint64_t))type metadata accessor for DeliveryDateFormatter);
}

uint64_t sub_243799198()
{
  return sub_243796524(&qword_268D9FC20, (void (*)(uint64_t))type metadata accessor for DeliveryDateFormatter);
}

uint64_t sub_2437991E0(uint64_t a1)
{
  uint64_t result = sub_243796524(&qword_268D9FC28, (void (*)(uint64_t))type metadata accessor for DeliveryDateFormatter);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_243799238(uint64_t a1)
{
  uint64_t result = sub_243796524(&qword_268D9FC30, (void (*)(uint64_t))type metadata accessor for DeliveryDateFormatter);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_243799290()
{
  return sub_243796524(&qword_268D9FC38, (void (*)(uint64_t))type metadata accessor for ShippedDateFormatter);
}

uint64_t sub_2437992D8()
{
  return sub_243796524(&qword_268D9FC40, (void (*)(uint64_t))type metadata accessor for ShippedDateFormatter);
}

uint64_t sub_243799320()
{
  return sub_243796524(&qword_268D9FC48, (void (*)(uint64_t))type metadata accessor for ShippedDateFormatter);
}

uint64_t sub_243799368()
{
  return sub_243796524(&qword_268D9FC50, (void (*)(uint64_t))type metadata accessor for ShippedDateFormatter);
}

uint64_t sub_2437993B0(uint64_t a1)
{
  uint64_t result = sub_243796524(&qword_268D9FC58, (void (*)(uint64_t))type metadata accessor for ShippedDateFormatter);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_243799408(uint64_t a1)
{
  uint64_t result = sub_243796524(&qword_268D9FC60, (void (*)(uint64_t))type metadata accessor for ShippedDateFormatter);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_243799460()
{
  unint64_t result = qword_268D9FC70;
  if (!qword_268D9FC70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FC70);
  }
  return result;
}

unint64_t sub_2437994B4()
{
  unint64_t result = qword_268D9FC88;
  if (!qword_268D9FC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FC88);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DeliveryDateFormatter.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2437995D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeliveryDateFormatter.CodingKeys()
{
  return &type metadata for DeliveryDateFormatter.CodingKeys;
}

unsigned char *_s15StatusFormatterV10CodingKeysOwst_0_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2437996D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShippedDateFormatter.CodingKeys()
{
  return &type metadata for ShippedDateFormatter.CodingKeys;
}

unint64_t sub_243799714()
{
  unint64_t result = qword_268D9FC98;
  if (!qword_268D9FC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FC98);
  }
  return result;
}

unint64_t sub_24379976C()
{
  unint64_t result = qword_268D9FCA0;
  if (!qword_268D9FCA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FCA0);
  }
  return result;
}

unint64_t sub_2437997C4()
{
  unint64_t result = qword_268D9FCA8;
  if (!qword_268D9FCA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FCA8);
  }
  return result;
}

unint64_t sub_24379981C()
{
  unint64_t result = qword_268D9FCB0;
  if (!qword_268D9FCB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FCB0);
  }
  return result;
}

unint64_t sub_243799874()
{
  unint64_t result = qword_268D9FCB8;
  if (!qword_268D9FCB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FCB8);
  }
  return result;
}

unint64_t sub_2437998CC()
{
  unint64_t result = qword_268D9FCC0;
  if (!qword_268D9FCC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FCC0);
  }
  return result;
}

uint64_t sub_243799920(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x72756769666E6F63 && a2 == 0xED00006E6F697461;
  if (v2 || (sub_243959940() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000002439A4D40 || (sub_243959940() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x676E697070696873 && a2 == 0xEC00000065707954)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_243959940();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ManagedInstitutionDeleter.deleteAll(context:)(NSManagedObjectContext context)
{
  type metadata accessor for ManagedInstitution();
  v19.receiver = (id)swift_getObjCClassFromMetadata();
  v19.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit18ManagedInstitution;
  id v3 = objc_msgSendSuper2(&v19, sel_fetchRequest);
  uint64_t v4 = sub_243958DC0();
  if (!v1)
  {
    unint64_t v13 = v4;

    if (v13 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v14 = sub_243959550();
      swift_bridgeObjectRelease();
      if (!v14) {
        goto LABEL_17;
      }
    }
    else
    {
      uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v14) {
        goto LABEL_17;
      }
    }
    if (v14 < 1)
    {
      __break(1u);
      return;
    }
    for (uint64_t i = 0; i != v14; ++i)
    {
      if ((v13 & 0xC000000000000001) != 0) {
        id v16 = (id)MEMORY[0x24567E5D0](i, v13);
      }
      else {
        id v16 = *(id *)(v13 + 8 * i + 32);
      }
      uint64_t v17 = v16;
      [(objc_class *)context.super.isa deleteObject:v16];
    }
LABEL_17:
    swift_bridgeObjectRelease();
    return;
  }

  if (qword_268D96B78 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_243957B10();
  __swift_project_value_buffer(v5, (uint64_t)qword_268D9B250);
  id v6 = v1;
  id v7 = v1;
  uint64_t v8 = sub_243957AF0();
  os_log_type_t v9 = sub_243958AF0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 138412290;
    id v12 = v1;
    uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
    sub_2439590C0();
    *uint64_t v11 = v18;

    _os_log_impl(&dword_243363000, v8, v9, "Could not delete institution: %@", v10, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CAB0);
    swift_arrayDestroy();
    MEMORY[0x245680100](v11, -1, -1);
    MEMORY[0x245680100](v10, -1, -1);
  }
  else
  {
  }
  swift_willThrow();
}

ValueMetadata *type metadata accessor for ManagedInstitutionDeleter()
{
  return &type metadata for ManagedInstitutionDeleter;
}

CLLocation __swiftcall CLLocation.init(rawLocation:)(FinanceKit::RawLocation rawLocation)
{
  uint64_t v1 = *(void *)&rawLocation.altitude.is_nil;
  uint64_t v2 = sub_243957400();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v6 = *(double *)v1;
  double v7 = *(double *)(v1 + 8);
  if (*(unsigned char *)(v1 + 24)) {
    double v8 = 0.0;
  }
  else {
    double v8 = *(double *)(v1 + 16);
  }
  id v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  sub_2439573F0();
  uint64_t v10 = (void *)sub_243957350();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v11 = (objc_class *)objc_msgSend(v9, sel_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_timestamp_, v10, v6, v7, v8, 0.0, 1.0);

  unint64_t v13 = v11;
  result._internal = v12;
  result.super.isa = v13;
  return result;
}

FinanceKit::RawLocation __swiftcall RawLocation.init(_:)(CLLocation a1)
{
  Class isa = a1.super.isa;
  uint64_t v3 = v1;
  [(objc_class *)a1.super.isa coordinate];
  uint64_t v5 = v4;
  [(objc_class *)isa coordinate];
  uint64_t v7 = v6;
  [(objc_class *)isa altitude];
  uint64_t v9 = v8;

  *(void *)uint64_t v3 = v5;
  *(void *)(v3 + 8) = v7;
  *(void *)(v3 + 16) = v9;
  *(unsigned char *)(v3 + 24) = 0;
  result.altitude.value = v13;
  result.longitude = v12;
  result.latitude = v11;
  result.altitude.is_nil = v10;
  return result;
}

double RawLocation.latitude.getter()
{
  return *(double *)v0;
}

void RawLocation.latitude.setter(double a1)
{
  double *v1 = a1;
}

uint64_t (*RawLocation.latitude.modify())()
{
  return nullsub_1;
}

double RawLocation.longitude.getter()
{
  return *(double *)(v0 + 8);
}

void RawLocation.longitude.setter(double a1)
{
  *(double *)(v1 + 8) = a1;
}

uint64_t (*RawLocation.longitude.modify())()
{
  return nullsub_1;
}

uint64_t RawLocation.altitude.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t RawLocation.altitude.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 16) = result;
  *(unsigned char *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t (*RawLocation.altitude.modify())()
{
  return nullsub_1;
}

FinanceKit::RawLocation __swiftcall RawLocation.init(latitude:longitude:altitude:)(Swift::Double latitude, Swift::Double longitude, Swift::Double_optional altitude)
{
  *(Swift::Double *)uint64_t v4 = latitude;
  *(Swift::Double *)(v4 + 8) = longitude;
  *(void *)(v4 + 16) = *(void *)&altitude.is_nil;
  *(unsigned char *)(v4 + 24) = v3 & 1;
  result.altitude.value = altitude.value;
  result.altitude.is_nil = altitude.is_nil;
  result.longitude = longitude;
  result.latitude = latitude;
  return result;
}

uint64_t sub_243799FFC()
{
  uint64_t v1 = 0x64757469676E6F6CLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x6564757469746C61;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x656475746974616CLL;
  }
}

uint64_t sub_24379A050@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24379A7B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24379A078(uint64_t a1)
{
  unint64_t v2 = sub_24379A4F4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24379A0B4(uint64_t a1)
{
  unint64_t v2 = sub_24379A4F4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t RawLocation.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9FCC8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[1] = *(void *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24379A4F4();
  sub_243959BD0();
  char v12 = 0;
  sub_243959830();
  if (!v2)
  {
    char v11 = 1;
    sub_243959830();
    char v10 = 2;
    sub_2439597B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t RawLocation.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9FCD8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24379A4F4();
  sub_243959BA0();
  if (!v2)
  {
    char v20 = 0;
    sub_2439596C0();
    uint64_t v10 = v9;
    char v19 = 1;
    sub_2439596C0();
    uint64_t v12 = v11;
    char v18 = 2;
    uint64_t v14 = sub_243959640();
    char v16 = v15;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(void *)a2 = v10;
    *(void *)(a2 + 8) = v12;
    *(void *)(a2 + 16) = v14;
    *(unsigned char *)(a2 + 24) = v16 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_24379A47C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return RawLocation.init(from:)(a1, a2);
}

uint64_t sub_24379A494(void *a1)
{
  return RawLocation.encode(to:)(a1);
}

uint64_t _s10FinanceKit11RawLocationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 != *(double *)a2 || *(double *)(a1 + 8) != *(double *)(a2 + 8)) {
    return 0;
  }
  char v3 = *(unsigned char *)(a2 + 24);
  if (*(unsigned char *)(a1 + 24))
  {
    if ((*(unsigned char *)(a2 + 24) & 1) == 0) {
      return 0;
    }
  }
  else
  {
    if (*(double *)(a1 + 16) != *(double *)(a2 + 16)) {
      char v3 = 1;
    }
    if (v3) {
      return 0;
    }
  }
  return 1;
}

unint64_t sub_24379A4F4()
{
  unint64_t result = qword_268D9FCD0;
  if (!qword_268D9FCD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FCD0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for RawLocation(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for RawLocation(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 25) = v3;
  return result;
}

ValueMetadata *type metadata accessor for RawLocation()
{
  return &type metadata for RawLocation;
}

unsigned char *storeEnumTagSinglePayload for RawLocation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24379A674);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RawLocation.CodingKeys()
{
  return &type metadata for RawLocation.CodingKeys;
}

unint64_t sub_24379A6B0()
{
  unint64_t result = qword_268D9FCE0;
  if (!qword_268D9FCE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FCE0);
  }
  return result;
}

unint64_t sub_24379A708()
{
  unint64_t result = qword_268D9FCE8;
  if (!qword_268D9FCE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FCE8);
  }
  return result;
}

unint64_t sub_24379A760()
{
  unint64_t result = qword_268D9FCF0;
  if (!qword_268D9FCF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FCF0);
  }
  return result;
}

uint64_t sub_24379A7B4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656475746974616CLL && a2 == 0xE800000000000000;
  if (v2 || (sub_243959940() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065 || (sub_243959940() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6564757469746C61 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_243959940();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

id ManagedInternalTransaction.bankMerchantInformationInsight.getter()
{
  id v1 = objc_msgSend(v0, sel_insightsObject);
  id v2 = objc_msgSend(v1, sel_bankMerchantInformationInsightObject);

  return v2;
}

uint64_t ManagedBankMerchantInformationInsight.merchantCategoryCodeValue.getter()
{
  id v1 = (void *)sub_2439582A0();
  objc_msgSend(v0, sel_willAccessValueForKey_, v1);

  id v2 = (void *)sub_2439582A0();
  id v3 = objc_msgSend(v0, sel_primitiveValueForKey_, v2);

  if (v3)
  {
    sub_243959140();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v11, 0, sizeof(v11));
  }
  sub_2433C090C((uint64_t)v11, (uint64_t)v12);
  if (v13)
  {
    if (swift_dynamicCast())
    {
      int v4 = 0;
      uint64_t v5 = v10;
      goto LABEL_9;
    }
  }
  else
  {
    sub_2433C0974((uint64_t)v12);
  }
  uint64_t v5 = 0;
  int v4 = 1;
LABEL_9:
  char v6 = (void *)sub_2439582A0();
  objc_msgSend(v0, sel_didAccessValueForKey_, v6);

  if (v5 < -32768) {
    int v7 = 1;
  }
  else {
    int v7 = v4;
  }
  if (v5 >= 0x8000) {
    int v7 = 1;
  }
  int v8 = (unsigned __int16)v5;
  if (v7) {
    int v8 = 0;
  }
  return v8 | (v7 << 16);
}

void TransactionMerchantInformation.init(_:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  int v4 = ManagedBankMerchantInformationInsight.merchantCategoryCodeValue.getter();
  id v5 = objc_msgSend(a1, sel_standardIndustrialClassificationCode);
  if (v5)
  {
    char v6 = v5;
    uint64_t v7 = sub_2439582D0();
    uint64_t v25 = v8;
    uint64_t v27 = v7;
  }
  else
  {
    uint64_t v25 = 0;
    uint64_t v27 = 0;
  }
  id v9 = objc_msgSend(a1, sel_categoryDescription, v25, v27);
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = sub_2439582D0();
    uint64_t v13 = v12;
  }
  else
  {
    uint64_t v11 = 0;
    uint64_t v13 = 0;
  }
  id v14 = objc_msgSend(a1, sel_merchantName);
  if (v14)
  {
    char v15 = v14;
    uint64_t v16 = sub_2439582D0();
    uint64_t v18 = v17;
  }
  else
  {
    uint64_t v16 = 0;
    uint64_t v18 = 0;
  }
  id v19 = objc_msgSend(a1, sel_merchantNumber);
  if (v19)
  {
    char v20 = v19;
    uint64_t v21 = sub_2439582D0();
    uint64_t v23 = v22;
  }
  else
  {
    uint64_t v21 = 0;
    uint64_t v23 = 0;
  }
  id v24 = objc_msgSend(a1, sel_merchantAddress);

  *(_WORD *)a2 = v4;
  *(unsigned char *)(a2 + 2) = BYTE2(v4) & 1;
  *(void *)(a2 + 8) = v28;
  *(void *)(a2 + 16) = v26;
  *(void *)(a2 + 24) = v11;
  *(void *)(a2 + 32) = v13;
  *(void *)(a2 + 40) = v16;
  *(void *)(a2 + 48) = v18;
  *(void *)(a2 + 56) = v21;
  *(void *)(a2 + 64) = v23;
  *(void *)(a2 + 72) = v24;
}

void sub_24379AC50(int a1)
{
  id v3 = (void *)sub_2439582A0();
  objc_msgSend(v1, sel_willChangeValueForKey_, v3);

  if ((a1 & 0x10000) != 0) {
    uint64_t v4 = 0;
  }
  else {
    uint64_t v4 = sub_243959AA0();
  }
  id v5 = (void *)sub_2439582A0();
  objc_msgSend(v1, sel_setPrimitiveValue_forKey_, v4, v5);
  swift_unknownObjectRelease();

  id v6 = (id)sub_2439582A0();
  objc_msgSend(v1, sel_didChangeValueForKey_, v6);
}

id ManagedBankMerchantInformationInsight.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedBankMerchantInformationInsight.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)swift_getObjectType();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedBankMerchantInformationInsight.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id ManagedBankMerchantInformationInsight.__allocating_init(insight:context:)(uint64_t a1, void *a2)
{
  char v4 = *(unsigned char *)(a1 + 2);
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v14 = *(void *)(a1 + 40);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 56);
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v11 = *(void **)(a1 + 72);
  unsigned __int16 v16 = *(_WORD *)a1;
  char v17 = v4;
  uint64_t v18 = v6;
  uint64_t v19 = v5;
  uint64_t v20 = v15;
  uint64_t v21 = v7;
  uint64_t v22 = v14;
  uint64_t v23 = v8;
  uint64_t v24 = v10;
  uint64_t v25 = v9;
  uint64_t v26 = v11;
  id v12 = objc_msgSend(objc_allocWithZone(v2), sel_initWithContext_, a2);
  ManagedBankMerchantInformationInsight.update(with:)(&v16);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v12;
}

id ManagedBankMerchantInformationInsight.update(with:)(unsigned __int16 *a1)
{
  int v2 = *a1;
  int v3 = *((unsigned __int8 *)a1 + 2);
  uint64_t v4 = *((void *)a1 + 2);
  uint64_t v13 = *((void *)a1 + 1);
  uint64_t v5 = *((void *)a1 + 4);
  uint64_t v7 = *((void *)a1 + 8);
  uint64_t v6 = *((void *)a1 + 9);
  if (*((void *)a1 + 6)) {
    uint64_t v8 = (void *)sub_2439582A0();
  }
  else {
    uint64_t v8 = 0;
  }
  objc_msgSend(v1, sel_setMerchantName_, v8, v13);

  if (v5) {
    uint64_t v9 = (void *)sub_2439582A0();
  }
  else {
    uint64_t v9 = 0;
  }
  objc_msgSend(v1, sel_setCategoryDescription_, v9);

  sub_24379AC50(v2 | (v3 << 16));
  if (v7) {
    uint64_t v10 = (void *)sub_2439582A0();
  }
  else {
    uint64_t v10 = 0;
  }
  objc_msgSend(v1, sel_setMerchantNumber_, v10);

  if (v4) {
    uint64_t v11 = (void *)sub_2439582A0();
  }
  else {
    uint64_t v11 = 0;
  }
  objc_msgSend(v1, sel_setStandardIndustrialClassificationCode_, v11);

  return objc_msgSend(v1, sel_setMerchantAddress_, v6);
}

id static ManagedBankMerchantInformationInsight.fetchRequest()()
{
  v2.receiver = (id)swift_getObjCClassFromMetadata();
  v2.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit37ManagedBankMerchantInformationInsight;
  id v0 = objc_msgSendSuper2(&v2, sel_fetchRequest);

  return v0;
}

char *keypath_get_selector_categoryDescription()
{
  return sel_categoryDescription;
}

void sub_24379B140(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_24379B160(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_merchantAddress()
{
  return sel_merchantAddress;
}

id sub_24379B18C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_merchantAddress);
  *a2 = result;
  return result;
}

id sub_24379B1C8(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setMerchantAddress_, *a1);
}

uint64_t sub_24379B1DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = ManagedBankMerchantInformationInsight.merchantCategoryCodeValue.getter();
  *(_WORD *)a1 = result;
  *(unsigned char *)(a1 + 2) = BYTE2(result) & 1;
  return result;
}

void sub_24379B210(unsigned __int16 *a1)
{
}

void sub_24379B248(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_24379B268(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_merchantNumber()
{
  return sel_merchantNumber;
}

void sub_24379B294(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_24379B2B4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_standardIndustrialClassificationCode()
{
  return sel_standardIndustrialClassificationCode;
}

void sub_24379B2E0(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_24379B300(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

uint64_t type metadata accessor for ManagedBankMerchantInformationInsight()
{
  return self;
}

uint64_t RawMerchant.address.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = v1[9];
  uint64_t v12 = v1[10];
  uint64_t v13 = v1[11];
  uint64_t v14 = v1[12];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  a1[10] = v12;
  a1[11] = v13;
  a1[12] = v14;
  return sub_2435CC3EC(v2);
}

__n128 RawMerchant.address.setter(long long *a1)
{
  long long v8 = a1[1];
  long long v9 = *a1;
  long long v7 = a1[2];
  long long v5 = a1[4];
  long long v6 = a1[3];
  __n128 v4 = (__n128)a1[5];
  uint64_t v2 = *((void *)a1 + 12);
  sub_2435E8D60(*(void *)v1);
  *(_OWORD *)uint64_t v1 = v9;
  *(_OWORD *)(v1 + 16) = v8;
  *(_OWORD *)(v1 + 32) = v7;
  *(_OWORD *)(v1 + 48) = v6;
  __n128 result = v4;
  *(_OWORD *)(v1 + 64) = v5;
  *(__n128 *)(v1 + 80) = v4;
  *(void *)(v1 + 96) = v2;
  return result;
}

uint64_t (*RawMerchant.address.modify())()
{
  return nullsub_1;
}

uint64_t RawMerchant.businessChatURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RawMerchant() + 20);

  return sub_2433B998C(v3, a1);
}

uint64_t type metadata accessor for RawMerchant()
{
  uint64_t result = qword_26B0C6BA0;
  if (!qword_26B0C6BA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t RawMerchant.businessChatURL.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RawMerchant() + 20);

  return sub_2433D0F50(a1, v3);
}

uint64_t (*RawMerchant.businessChatURL.modify())(void)
{
  return nullsub_1;
}

uint64_t RawMerchant.contactURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RawMerchant() + 24);

  return sub_2433B998C(v3, a1);
}

uint64_t RawMerchant.contactURL.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RawMerchant() + 24);

  return sub_2433D0F50(a1, v3);
}

uint64_t (*RawMerchant.contactURL.modify())(void)
{
  return nullsub_1;
}

uint64_t RawMerchant.displayName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for RawMerchant() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawMerchant.displayName.setter(uint64_t a1, uint64_t a2)
{
  long long v5 = (void *)(v2 + *(int *)(type metadata accessor for RawMerchant() + 28));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*RawMerchant.displayName.modify())(void)
{
  return nullsub_1;
}

uint64_t RawMerchant.emailAddress.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for RawMerchant() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawMerchant.emailAddress.setter(uint64_t a1, uint64_t a2)
{
  long long v5 = (void *)(v2 + *(int *)(type metadata accessor for RawMerchant() + 32));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*RawMerchant.emailAddress.modify())(void)
{
  return nullsub_1;
}

uint64_t RawMerchant.logo.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for RawMerchant() + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawMerchant.logo.setter(uint64_t a1, uint64_t a2)
{
  long long v5 = (void *)(v2 + *(int *)(type metadata accessor for RawMerchant() + 36));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*RawMerchant.logo.modify())(void)
{
  return nullsub_1;
}

uint64_t RawMerchant.merchantIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for RawMerchant() + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawMerchant.merchantIdentifier.setter(uint64_t a1, uint64_t a2)
{
  long long v5 = (void *)(v2 + *(int *)(type metadata accessor for RawMerchant() + 40));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*RawMerchant.merchantIdentifier.modify())(void)
{
  return nullsub_1;
}

uint64_t RawMerchant.phoneNumber.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for RawMerchant() + 44));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawMerchant.phoneNumber.setter(uint64_t a1, uint64_t a2)
{
  long long v5 = (void *)(v2 + *(int *)(type metadata accessor for RawMerchant() + 44));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*RawMerchant.phoneNumber.modify())(void)
{
  return nullsub_1;
}

uint64_t RawMerchant.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RawMerchant() + 48);
  uint64_t v4 = sub_243957010();
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t RawMerchant.url.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RawMerchant() + 48);
  uint64_t v4 = sub_243957010();
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*RawMerchant.url.modify())(void)
{
  return nullsub_1;
}

uint64_t RawMerchant.init(address:businessChatURL:contactURL:displayName:emailAddress:logo:merchantIdentifier:phoneNumber:url:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  long long v35 = a1[1];
  long long v36 = *a1;
  long long v33 = a1[3];
  long long v34 = a1[2];
  long long v31 = a1[5];
  long long v32 = a1[4];
  uint64_t v17 = *((void *)a1 + 12);
  uint64_t v18 = (int *)type metadata accessor for RawMerchant();
  uint64_t v19 = a9 + v18[5];
  uint64_t v20 = sub_243957010();
  uint64_t v37 = *(void *)(v20 - 8);
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56);
  v21(v19, 1, 1, v20);
  uint64_t v22 = a9 + v18[6];
  v21(v22, 1, 1, v20);
  uint64_t v23 = (void *)(a9 + v18[8]);
  *uint64_t v23 = 0;
  v23[1] = 0;
  uint64_t v24 = (void *)(a9 + v18[9]);
  void *v24 = 0;
  v24[1] = 0;
  uint64_t v25 = (void *)(a9 + v18[11]);
  void *v25 = 0;
  v25[1] = 0;
  *(_OWORD *)a9 = v36;
  *(_OWORD *)(a9 + 16) = v35;
  *(_OWORD *)(a9 + 32) = v34;
  *(_OWORD *)(a9 + 48) = v33;
  *(_OWORD *)(a9 + 64) = v32;
  *(_OWORD *)(a9 + 80) = v31;
  *(void *)(a9 + 96) = v17;
  sub_2433D0F50(a2, v19);
  sub_2433D0F50(a3, v22);
  uint64_t v26 = (void *)(a9 + v18[7]);
  *uint64_t v26 = a4;
  v26[1] = a5;
  swift_bridgeObjectRelease();
  *uint64_t v23 = a6;
  v23[1] = a7;
  swift_bridgeObjectRelease();
  void *v24 = a8;
  v24[1] = a10;
  uint64_t v27 = (void *)(a9 + v18[10]);
  *uint64_t v27 = a11;
  v27[1] = a12;
  swift_bridgeObjectRelease();
  void *v25 = a13;
  v25[1] = a14;
  uint64_t v28 = a9 + v18[12];
  uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v37 + 32);

  return v29(v28, a15, v20);
}

unint64_t sub_24379BDD8(char a1)
{
  unint64_t result = 0x73736572646461;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7373656E69737562;
      break;
    case 2:
      unint64_t result = 0x55746361746E6F63;
      break;
    case 3:
      unint64_t result = 0x4E79616C70736964;
      break;
    case 4:
      unint64_t result = 0x6464416C69616D65;
      break;
    case 5:
      unint64_t result = 1869049708;
      break;
    case 6:
      unint64_t result = 0xD000000000000012;
      break;
    case 7:
      unint64_t result = 0x6D754E656E6F6870;
      break;
    case 8:
      unint64_t result = 7107189;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24379BF14()
{
  return sub_24379BDD8(*v0);
}

uint64_t sub_24379BF1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24379F408(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24379BF44(uint64_t a1)
{
  unint64_t v2 = sub_24379D9D0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24379BF80(uint64_t a1)
{
  unint64_t v2 = sub_24379D9D0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t RawMerchant.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9FCF8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  long long v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24379D9D0();
  sub_243959BD0();
  uint64_t v9 = *(void *)(v3 + 96);
  long long v10 = *(_OWORD *)(v3 + 16);
  v14[0] = *(_OWORD *)v3;
  v14[1] = v10;
  long long v11 = *(_OWORD *)(v3 + 48);
  void v14[2] = *(_OWORD *)(v3 + 32);
  void v14[3] = v11;
  long long v12 = *(_OWORD *)(v3 + 80);
  v14[4] = *(_OWORD *)(v3 + 64);
  void v14[5] = v12;
  uint64_t v15 = v9;
  char v16 = 0;
  sub_24344E030();
  sub_2439597D0();
  if (!v2)
  {
    type metadata accessor for RawMerchant();
    LOBYTE(v14[0]) = 1;
    sub_243957010();
    sub_2436285AC((unint64_t *)&unk_268D97120);
    sub_2439597D0();
    LOBYTE(v14[0]) = 2;
    sub_2439597D0();
    LOBYTE(v14[0]) = 3;
    sub_243959810();
    LOBYTE(v14[0]) = 4;
    sub_243959790();
    LOBYTE(v14[0]) = 5;
    sub_243959790();
    LOBYTE(v14[0]) = 6;
    sub_243959810();
    LOBYTE(v14[0]) = 7;
    sub_243959790();
    LOBYTE(v14[0]) = 8;
    sub_243959860();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t RawMerchant.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v55 = a2;
  uint64_t v3 = sub_243957010();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v56 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  long long v11 = (char *)&v54 - v10;
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9FD08);
  uint64_t v57 = *(void *)(v58 - 8);
  MEMORY[0x270FA5388](v58);
  uint64_t v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (int *)type metadata accessor for RawMerchant();
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v17 = 1;
  *(_OWORD *)(v17 + 8) = 0u;
  *(_OWORD *)(v17 + 24) = 0u;
  *(_OWORD *)(v17 + 40) = 0u;
  *(_OWORD *)(v17 + 56) = 0u;
  *(_OWORD *)(v17 + 72) = 0u;
  *(_OWORD *)(v17 + 88) = 0u;
  uint64_t v18 = (uint64_t)&v17[*(int *)(v15 + 20)];
  uint64_t v54 = v4;
  uint64_t v19 = *(void (**)(void))(v4 + 56);
  uint64_t v66 = v18;
  v19();
  uint64_t v67 = &v17[v14[6]];
  v19();
  uint64_t v20 = &v17[v14[8]];
  *(void *)uint64_t v20 = 0;
  *((void *)v20 + 1) = 0;
  uint64_t v65 = v20;
  uint64_t v21 = &v17[v14[9]];
  *(void *)uint64_t v21 = 0;
  *((void *)v21 + 1) = 0;
  uint64_t v64 = v21;
  uint64_t v22 = &v17[v14[11]];
  *(void *)uint64_t v22 = 0;
  *((void *)v22 + 1) = 0;
  uint64_t v60 = v14;
  char v61 = v22;
  uint64_t v23 = a1[3];
  uint64_t v62 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v23);
  sub_24379D9D0();
  uint64_t v59 = v13;
  uint64_t v24 = v63;
  sub_243959BA0();
  if (v24)
  {
    uint64_t v25 = v66;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v62);
    sub_2435E8D60(*(void *)v17);
    sub_24337C1BC(v25, &qword_26B0C98A0);
    sub_24337C1BC((uint64_t)v67, &qword_26B0C98A0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v75 = 0;
    sub_24344DFDC();
    sub_243959660();
    uint64_t v26 = v74;
    long long v27 = v69;
    *(_OWORD *)uint64_t v17 = v68;
    *((_OWORD *)v17 + 1) = v27;
    long long v28 = v71;
    *((_OWORD *)v17 + 2) = v70;
    *((_OWORD *)v17 + 3) = v28;
    long long v29 = v73;
    *((_OWORD *)v17 + 4) = v72;
    *((_OWORD *)v17 + 5) = v29;
    *((void *)v17 + 12) = v26;
    LOBYTE(v68) = 1;
    uint64_t v30 = sub_2436285AC(&qword_268D97150);
    sub_243959660();
    sub_2433D0F50((uint64_t)v11, v66);
    LOBYTE(v68) = 2;
    uint64_t v31 = v3;
    sub_243959660();
    uint64_t v63 = v30;
    sub_2433D0F50((uint64_t)v9, (uint64_t)v67);
    LOBYTE(v68) = 3;
    uint64_t v32 = sub_2439596A0();
    long long v34 = (uint64_t *)v61;
    uint64_t v33 = (uint64_t)v62;
    long long v35 = v60;
    long long v36 = (uint64_t *)&v17[v60[7]];
    *long long v36 = v32;
    v36[1] = v37;
    LOBYTE(v68) = 4;
    uint64_t v38 = sub_243959620();
    uint64_t v40 = v39;
    int v41 = (uint64_t *)v65;
    swift_bridgeObjectRelease();
    *int v41 = v38;
    v41[1] = v40;
    LOBYTE(v68) = 5;
    uint64_t v42 = sub_243959620();
    uint64_t v44 = v43;
    uint64_t v45 = (uint64_t *)v64;
    swift_bridgeObjectRelease();
    *uint64_t v45 = v42;
    v45[1] = v44;
    LOBYTE(v68) = 6;
    uint64_t v46 = sub_2439596A0();
    uint64_t v47 = (uint64_t *)&v17[v35[10]];
    uint64_t *v47 = v46;
    v47[1] = v48;
    LOBYTE(v68) = 7;
    uint64_t v49 = sub_243959620();
    uint64_t v51 = v50;
    swift_bridgeObjectRelease();
    uint64_t *v34 = v49;
    v34[1] = v51;
    LOBYTE(v68) = 8;
    uint64_t v52 = v58;
    sub_2439596F0();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v59, v52);
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(&v17[v35[12]], v56, v31);
    sub_24379DA24((uint64_t)v17, v55);
    __swift_destroy_boxed_opaque_existential_0(v33);
    return sub_2435CC350((uint64_t)v17);
  }
}

uint64_t sub_24379CAFC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return RawMerchant.init(from:)(a1, a2);
}

uint64_t sub_24379CB14(void *a1)
{
  return RawMerchant.encode(to:)(a1);
}

void RawMerchant.init(_:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v55 - v8;
  uint64_t v10 = (int *)type metadata accessor for RawMerchant();
  uint64_t v11 = a2 + v10[5];
  uint64_t v12 = sub_243957010();
  uint64_t v13 = *(void (**)(void))(*(void *)(v12 - 8) + 56);
  uint64_t v55 = v11;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v13)(v11, 1, 1, v12);
  uint64_t v56 = a2 + v10[6];
  v13();
  uint64_t v14 = a2 + v10[8];
  *(_OWORD *)uint64_t v14 = 0u;
  uint64_t v57 = (uint64_t *)(a2 + v10[9]);
  *(_OWORD *)uint64_t v57 = 0u;
  uint64_t v58 = (uint64_t *)(a2 + v10[11]);
  *(_OWORD *)uint64_t v58 = 0u;
  id v15 = objc_msgSend(a1, sel_address);
  if (v15)
  {
    RawAddress.init(_:)(v15, (uint64_t *)v59);
    long long v16 = v59[0];
    long long v17 = v59[1];
    long long v18 = v59[2];
    long long v19 = v59[3];
    long long v20 = v59[4];
    long long v21 = v59[5];
    uint64_t v22 = v60;
  }
  else
  {
    uint64_t v22 = 0;
    long long v16 = xmmword_243969030;
    long long v18 = 0uLL;
    long long v19 = 0uLL;
    long long v20 = 0uLL;
    long long v21 = 0uLL;
    long long v17 = 0uLL;
  }
  *(_OWORD *)a2 = v16;
  *(_OWORD *)(a2 + 16) = v17;
  *(_OWORD *)(a2 + 32) = v18;
  *(_OWORD *)(a2 + 48) = v19;
  *(_OWORD *)(a2 + 64) = v20;
  *(_OWORD *)(a2 + 80) = v21;
  *(void *)(a2 + 96) = v22;
  id v23 = objc_msgSend(a1, sel_businessChatURL);
  if (v23)
  {
    uint64_t v24 = v23;
    sub_243956F90();

    uint64_t v25 = 0;
  }
  else
  {
    uint64_t v25 = 1;
  }
  uint64_t v26 = 1;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v13)(v9, v25, 1, v12);
  sub_2433D0F50((uint64_t)v9, v55);
  id v27 = objc_msgSend(a1, sel_contactURL);
  if (v27)
  {
    long long v28 = v27;
    sub_243956F90();

    uint64_t v26 = 0;
  }
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v13)(v7, v26, 1, v12);
  sub_2433D0F50((uint64_t)v7, v56);
  id v29 = objc_msgSend(a1, sel_displayName);
  uint64_t v30 = sub_2439574B0();
  Swift::String v31 = LocalizedString.localizedString(for:)((Swift::OpaquePointer)v30);

  swift_bridgeObjectRelease();
  *(Swift::String *)(a2 + v10[7]) = v31;
  id v32 = objc_msgSend(a1, sel_emailAddress);
  if (v32)
  {
    uint64_t v33 = v32;
    uint64_t v34 = sub_2439582D0();
    uint64_t v36 = v35;
  }
  else
  {
    uint64_t v34 = 0;
    uint64_t v36 = 0;
  }
  swift_bridgeObjectRelease();
  *(void *)uint64_t v14 = v34;
  *(void *)(v14 + 8) = v36;
  id v37 = objc_msgSend(a1, sel_logoName);
  if (v37)
  {
    uint64_t v38 = v37;
    uint64_t v39 = sub_2439582D0();
    uint64_t v41 = v40;
  }
  else
  {
    uint64_t v39 = 0;
    uint64_t v41 = 0;
  }
  uint64_t v42 = v57;
  swift_bridgeObjectRelease();
  uint64_t *v42 = v39;
  v42[1] = v41;
  id v43 = objc_msgSend(a1, sel_merchantIdentifier);
  uint64_t v44 = sub_2439582D0();
  uint64_t v46 = v45;

  uint64_t v47 = (uint64_t *)(a2 + v10[10]);
  uint64_t *v47 = v44;
  v47[1] = v46;
  id v48 = objc_msgSend(a1, sel_phoneNumber);
  if (v48)
  {
    uint64_t v49 = v48;
    uint64_t v50 = sub_2439582D0();
    uint64_t v52 = v51;
  }
  else
  {
    uint64_t v50 = 0;
    uint64_t v52 = 0;
  }
  int v53 = v58;
  swift_bridgeObjectRelease();
  *int v53 = v50;
  v53[1] = v52;
  id v54 = [a1 url];
  sub_243956F90();
}

uint64_t _s10FinanceKit11RawMerchantV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v122 = sub_243957010();
  uint64_t v128 = *(void *)(v122 - 8);
  MEMORY[0x270FA5388](v122);
  uint64_t v115 = (char *)&v105 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D98EB8);
  uint64_t v5 = MEMORY[0x270FA5388](v126);
  uint64_t v116 = (uint64_t)&v105 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v123 = (uint64_t)&v105 - v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v105 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v117 = (uint64_t)&v105 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  MEMORY[0x270FA5388](v16);
  uint64_t v127 = (uint64_t)&v105 - v20;
  uint64_t v21 = *a1;
  uint64_t v22 = a1[1];
  uint64_t v23 = a1[2];
  uint64_t v24 = a1[3];
  uint64_t v25 = a1[4];
  uint64_t v26 = a1[5];
  uint64_t v27 = a1[6];
  uint64_t v28 = a1[7];
  id v29 = (int *)a1[8];
  uint64_t v30 = a1[9];
  uint64_t v31 = a1[10];
  uint64_t v32 = a1[11];
  uint64_t v120 = a1;
  uint64_t v121 = a2;
  uint64_t v33 = a1[12];
  uint64_t v34 = *a2;
  uint64_t v35 = a2[1];
  uint64_t v36 = a2[2];
  uint64_t v37 = a2[3];
  uint64_t v38 = a2[4];
  uint64_t v39 = a2[5];
  uint64_t v40 = a2[7];
  uint64_t v132 = (int *)a2[6];
  uint64_t v41 = a2[8];
  uint64_t v42 = a2[9];
  uint64_t v131 = a2[10];
  uint64_t v129 = a2[11];
  uint64_t v130 = a2[12];
  uint64_t v43 = v21;
  uint64_t v124 = v32;
  uint64_t v125 = v24;
  if (v21 == 1)
  {
    uint64_t v119 = v18;
    uint64_t v109 = v17;
    uint64_t v110 = v19;
    uint64_t v108 = v11;
    uint64_t v44 = v30;
    if (v34 == 1) {
      goto LABEL_8;
    }
LABEL_6:
    uint64_t v134 = v43;
    uint64_t v135 = v22;
    uint64_t v136 = v23;
    uint64_t v137 = v125;
    uint64_t v138 = v25;
    uint64_t v139 = v26;
    uint64_t v140 = v27;
    uint64_t v141 = v28;
    uint64_t v142 = v29;
    uint64_t v143 = v44;
    uint64_t v144 = v31;
    uint64_t v145 = v124;
    uint64_t v146 = v33;
    uint64_t v147 = v34;
    uint64_t v148 = v35;
    uint64_t v149 = v36;
    uint64_t v150 = v37;
    uint64_t v151 = v38;
    uint64_t v152 = v39;
    v153 = v132;
    uint64_t v154 = v40;
    uint64_t v155 = v41;
    uint64_t v156 = v42;
    uint64_t v157 = v131;
    uint64_t v158 = v129;
    uint64_t v159 = v130;
    sub_2435CC3EC(v34);
    sub_24379F808(&v134);
    goto LABEL_20;
  }
  uint64_t v134 = v21;
  uint64_t v135 = v22;
  uint64_t v136 = v23;
  uint64_t v137 = v24;
  uint64_t v138 = v25;
  uint64_t v139 = v26;
  uint64_t v140 = v27;
  uint64_t v141 = v28;
  uint64_t v142 = v29;
  uint64_t v143 = v30;
  uint64_t v144 = v31;
  uint64_t v145 = v32;
  uint64_t v146 = v33;
  uint64_t v113 = v29;
  uint64_t v114 = v33;
  uint64_t v118 = v31;
  uint64_t v111 = v25;
  uint64_t v112 = v27;
  uint64_t v45 = v23;
  if (v34 == 1)
  {
    uint64_t v44 = v30;
    uint64_t v107 = v21;
    uint64_t v127 = v39;
    uint64_t v128 = v40;
    uint64_t v126 = v38;
    uint64_t v122 = v36;
    uint64_t v123 = v37;
    uint64_t v120 = (uint64_t *)v41;
    uint64_t v121 = (uint64_t *)v35;
    uint64_t v46 = v114;
    uint64_t v119 = v42;
    uint64_t v117 = 1;
    swift_bridgeObjectRetain();
    uint64_t v106 = v45;
    swift_bridgeObjectRetain();
    uint64_t v47 = v111;
    swift_bridgeObjectRetain();
    uint64_t v48 = v112;
    swift_bridgeObjectRetain();
    uint64_t v49 = v113;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v34 = v117;
    uint64_t v31 = v118;
    uint64_t v42 = v119;
    uint64_t v41 = (uint64_t)v120;
    uint64_t v35 = (uint64_t)v121;
    uint64_t v36 = v122;
    uint64_t v37 = v123;
    uint64_t v38 = v126;
    uint64_t v39 = v127;
    uint64_t v40 = v128;
    uint64_t v33 = v46;
    id v29 = v49;
    uint64_t v27 = v48;
    uint64_t v25 = v47;
    uint64_t v23 = v106;
    uint64_t v43 = v107;
    goto LABEL_6;
  }
  uint64_t v119 = v18;
  uint64_t v109 = v17;
  uint64_t v110 = v19;
  uint64_t v108 = v11;
  v133[0] = v34;
  v133[1] = v35;
  v133[2] = v36;
  v133[3] = v37;
  v133[4] = v38;
  v133[5] = v39;
  v133[6] = v132;
  v133[7] = v40;
  v133[8] = v41;
  v133[9] = v42;
  v133[10] = v131;
  v133[11] = v129;
  v133[12] = v130;
  BOOL v50 = _s10FinanceKit10RawAddressV2eeoiySbAC_ACtFZ_0((uint64_t)&v134, (uint64_t)v133);
  uint64_t v132 = v142;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v50) {
    goto LABEL_20;
  }
LABEL_8:
  uint64_t v51 = type metadata accessor for RawMerchant();
  uint64_t v52 = v120;
  uint64_t v53 = v127;
  sub_2433B998C((uint64_t)v120 + *(int *)(v51 + 20), v127);
  uint64_t v132 = (int *)v51;
  id v54 = v121;
  uint64_t v55 = v119;
  sub_2433B998C((uint64_t)v121 + *(int *)(v51 + 20), v119);
  uint64_t v56 = v123;
  uint64_t v57 = v123 + *(int *)(v126 + 48);
  sub_2433B998C(v53, v123);
  sub_2433B998C(v55, v57);
  uint64_t v58 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v128 + 48);
  uint64_t v59 = v122;
  if (v58(v56, 1, v122) == 1)
  {
    sub_24337C1BC(v55, &qword_26B0C98A0);
    sub_24337C1BC(v53, &qword_26B0C98A0);
    if (v58(v57, 1, v59) != 1) {
      goto LABEL_19;
    }
    uint64_t v60 = v58;
    sub_24337C1BC(v56, &qword_26B0C98A0);
    uint64_t v61 = v59;
  }
  else
  {
    uint64_t v62 = v117;
    sub_2433B998C(v56, v117);
    if (v58(v57, 1, v59) == 1)
    {
      sub_24337C1BC(v119, &qword_26B0C98A0);
      sub_24337C1BC(v127, &qword_26B0C98A0);
      (*(void (**)(uint64_t, uint64_t))(v128 + 8))(v62, v59);
      goto LABEL_19;
    }
    uint64_t v60 = v58;
    uint64_t v63 = v128;
    uint64_t v61 = v59;
    uint64_t v64 = v115;
    (*(void (**)(char *, uint64_t, uint64_t))(v128 + 32))(v115, v57, v61);
    sub_2436285AC(&qword_268D98EC0);
    LODWORD(v131) = sub_243958270();
    uint64_t v65 = *(void (**)(char *, uint64_t))(v63 + 8);
    v65(v64, v61);
    sub_24337C1BC(v119, &qword_26B0C98A0);
    sub_24337C1BC(v127, &qword_26B0C98A0);
    v65((char *)v62, v61);
    sub_24337C1BC(v123, &qword_26B0C98A0);
    if ((v131 & 1) == 0) {
      goto LABEL_20;
    }
  }
  uint64_t v66 = v132;
  uint64_t v67 = v110;
  sub_2433B998C((uint64_t)v52 + v132[6], v110);
  uint64_t v68 = v109;
  sub_2433B998C((uint64_t)v54 + v66[6], v109);
  uint64_t v56 = v116;
  uint64_t v69 = v116 + *(int *)(v126 + 48);
  sub_2433B998C(v67, v116);
  sub_2433B998C(v68, v69);
  if (v60(v56, 1, v61) == 1)
  {
    sub_24337C1BC(v68, &qword_26B0C98A0);
    sub_24337C1BC(v67, &qword_26B0C98A0);
    if (v60(v69, 1, v61) == 1)
    {
      sub_24337C1BC(v56, &qword_26B0C98A0);
      goto LABEL_23;
    }
LABEL_19:
    sub_24337C1BC(v56, &qword_268D98EB8);
    goto LABEL_20;
  }
  uint64_t v70 = (uint64_t)v108;
  sub_2433B998C(v56, (uint64_t)v108);
  if (v60(v69, 1, v61) == 1)
  {
    sub_24337C1BC(v109, &qword_26B0C98A0);
    sub_24337C1BC(v110, &qword_26B0C98A0);
    (*(void (**)(uint64_t, uint64_t))(v128 + 8))(v70, v61);
    goto LABEL_19;
  }
  uint64_t v73 = v128;
  uint64_t v74 = v115;
  (*(void (**)(char *, uint64_t, uint64_t))(v128 + 32))(v115, v69, v61);
  sub_2436285AC(&qword_268D98EC0);
  char v75 = sub_243958270();
  uint64_t v76 = *(void (**)(char *, uint64_t))(v73 + 8);
  v76(v74, v61);
  sub_24337C1BC(v109, &qword_26B0C98A0);
  sub_24337C1BC(v110, &qword_26B0C98A0);
  v76((char *)v70, v61);
  sub_24337C1BC(v56, &qword_26B0C98A0);
  if ((v75 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_23:
  uint64_t v77 = v132[7];
  uint64_t v78 = *(uint64_t *)((char *)v52 + v77);
  uint64_t v79 = *(uint64_t *)((char *)v52 + v77 + 8);
  uint64_t v80 = (uint64_t *)((char *)v54 + v77);
  if (v78 != *v80 || v79 != v80[1])
  {
    char v81 = sub_243959940();
    char v71 = 0;
    if ((v81 & 1) == 0) {
      return v71 & 1;
    }
  }
  uint64_t v82 = v132[8];
  uint64_t v83 = (uint64_t *)((char *)v52 + v82);
  uint64_t v84 = *(uint64_t *)((char *)v52 + v82 + 8);
  uint64_t v85 = (uint64_t *)((char *)v54 + v82);
  uint64_t v86 = v85[1];
  if (v84)
  {
    if (!v86) {
      goto LABEL_20;
    }
    if (*v83 != *v85 || v84 != v86)
    {
      char v87 = sub_243959940();
      char v71 = 0;
      if ((v87 & 1) == 0) {
        return v71 & 1;
      }
    }
  }
  else if (v86)
  {
    goto LABEL_20;
  }
  uint64_t v88 = v132[9];
  uint64_t v89 = (uint64_t *)((char *)v52 + v88);
  uint64_t v90 = *(uint64_t *)((char *)v52 + v88 + 8);
  uint64_t v91 = (uint64_t *)((char *)v54 + v88);
  uint64_t v92 = v91[1];
  if (v90)
  {
    if (!v92) {
      goto LABEL_20;
    }
    if (*v89 != *v91 || v90 != v92)
    {
      char v93 = sub_243959940();
      char v71 = 0;
      if ((v93 & 1) == 0) {
        return v71 & 1;
      }
    }
  }
  else if (v92)
  {
    goto LABEL_20;
  }
  uint64_t v94 = v132[10];
  uint64_t v95 = *(uint64_t *)((char *)v52 + v94);
  uint64_t v96 = *(uint64_t *)((char *)v52 + v94 + 8);
  uint64_t v97 = (uint64_t *)((char *)v54 + v94);
  if (v95 != *v97 || v96 != v97[1])
  {
    char v98 = sub_243959940();
    char v71 = 0;
    if ((v98 & 1) == 0) {
      return v71 & 1;
    }
  }
  uint64_t v99 = v132[11];
  uint64_t v100 = (uint64_t *)((char *)v52 + v99);
  uint64_t v101 = *(uint64_t *)((char *)v52 + v99 + 8);
  uint64_t v102 = (uint64_t *)((char *)v54 + v99);
  uint64_t v103 = v102[1];
  if (!v101)
  {
    if (!v103)
    {
LABEL_50:
      char v71 = MEMORY[0x24567C1E0]((char *)v52 + v132[12], (char *)v54 + v132[12]);
      return v71 & 1;
    }
    goto LABEL_20;
  }
  if (!v103)
  {
LABEL_20:
    char v71 = 0;
    return v71 & 1;
  }
  if (*v100 == *v102 && v101 == v103) {
    goto LABEL_50;
  }
  char v104 = sub_243959940();
  char v71 = 0;
  if (v104) {
    goto LABEL_50;
  }
  return v71 & 1;
}

unint64_t sub_24379D9D0()
{
  unint64_t result = qword_268D9FD00;
  if (!qword_268D9FD00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FD00);
  }
  return result;
}

uint64_t sub_24379DA24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RawMerchant();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *initializeBufferWithCopyOfBuffer for RawMerchant(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (*a2 == 1)
    {
      long long v7 = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 80) = v7;
      *(void *)(a1 + 96) = a2[12];
      long long v8 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v8;
      long long v9 = *((_OWORD *)a2 + 3);
      *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 48) = v9;
    }
    else
    {
      uint64_t v11 = a2[1];
      uint64_t v12 = a2[2];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v11;
      uint64_t v13 = a2[3];
      uint64_t v14 = a2[4];
      *(void *)(a1 + 16) = v12;
      *(void *)(a1 + 24) = v13;
      uint64_t v15 = a2[5];
      uint64_t v16 = a2[6];
      *(void *)(a1 + 32) = v14;
      *(void *)(a1 + 40) = v15;
      uint64_t v17 = a2[7];
      uint64_t v18 = a2[8];
      *(void *)(a1 + 48) = v16;
      *(void *)(a1 + 56) = v17;
      uint64_t v19 = a2[9];
      uint64_t v20 = a2[10];
      *(void *)(a1 + 64) = v18;
      *(void *)(a1 + 72) = v19;
      uint64_t v21 = a2[11];
      uint64_t v22 = a2[12];
      *(void *)(a1 + 80) = v20;
      *(void *)(a1 + 88) = v21;
      *(void *)(a1 + 96) = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t v23 = a3[5];
    uint64_t v24 = (char *)v4 + v23;
    uint64_t v25 = (char *)a2 + v23;
    uint64_t v26 = sub_243957010();
    uint64_t v27 = *(void *)(v26 - 8);
    uint64_t v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
    if (v28(v25, 1, v26))
    {
      uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
      memcpy(v24, v25, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    uint64_t v30 = a3[6];
    uint64_t v31 = (char *)v4 + v30;
    uint64_t v32 = (char *)a2 + v30;
    if (v28((char *)a2 + v30, 1, v26))
    {
      uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
      memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v31, v32, v26);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v31, 0, 1, v26);
    }
    uint64_t v34 = a3[7];
    uint64_t v35 = a3[8];
    uint64_t v36 = (void *)((char *)v4 + v34);
    uint64_t v37 = (uint64_t *)((char *)a2 + v34);
    uint64_t v38 = v37[1];
    *uint64_t v36 = *v37;
    v36[1] = v38;
    uint64_t v39 = (void *)((char *)v4 + v35);
    uint64_t v40 = (uint64_t *)((char *)a2 + v35);
    uint64_t v41 = v40[1];
    void *v39 = *v40;
    v39[1] = v41;
    uint64_t v42 = a3[9];
    uint64_t v43 = a3[10];
    uint64_t v44 = (void *)((char *)v4 + v42);
    uint64_t v45 = (uint64_t *)((char *)a2 + v42);
    uint64_t v46 = v45[1];
    *uint64_t v44 = *v45;
    v44[1] = v46;
    uint64_t v47 = (void *)((char *)v4 + v43);
    uint64_t v48 = (uint64_t *)((char *)a2 + v43);
    uint64_t v49 = v48[1];
    void *v47 = *v48;
    v47[1] = v49;
    uint64_t v50 = a3[11];
    uint64_t v51 = a3[12];
    uint64_t v52 = (void *)((char *)v4 + v50);
    uint64_t v53 = (uint64_t *)((char *)a2 + v50);
    uint64_t v54 = v53[1];
    *uint64_t v52 = *v53;
    v52[1] = v54;
    uint64_t v55 = (char *)v4 + v51;
    uint64_t v56 = (uint64_t)a2 + v51;
    uint64_t v57 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v57(v55, v56, v26);
  }
  return v4;
}

uint64_t destroy for RawMerchant(void *a1, int *a2)
{
  if (*a1 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = (char *)a1 + a2[5];
  uint64_t v5 = sub_243957010();
  uint64_t v11 = *(void *)(v5 - 8);
  uint64_t v6 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (!v6(v4, 1, v5)) {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v4, v5);
  }
  long long v7 = (char *)a1 + a2[6];
  if (!v6(v7, 1, v5)) {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v8 = (char *)a1 + a2[12];
  long long v9 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);

  return v9(v8, v5);
}

uint64_t initializeWithCopy for RawMerchant(uint64_t a1, uint64_t a2, int *a3)
{
  if (*(void *)a2 == 1)
  {
    long long v6 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v6;
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    long long v8 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v8;
  }
  else
  {
    uint64_t v9 = *(void *)(a2 + 8);
    uint64_t v10 = *(void *)(a2 + 16);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v9;
    uint64_t v11 = *(void *)(a2 + 24);
    uint64_t v12 = *(void *)(a2 + 32);
    *(void *)(a1 + 16) = v10;
    *(void *)(a1 + 24) = v11;
    uint64_t v13 = *(void *)(a2 + 40);
    uint64_t v14 = *(void *)(a2 + 48);
    *(void *)(a1 + 32) = v12;
    *(void *)(a1 + 40) = v13;
    uint64_t v15 = *(void *)(a2 + 56);
    uint64_t v16 = *(void *)(a2 + 64);
    *(void *)(a1 + 48) = v14;
    *(void *)(a1 + 56) = v15;
    uint64_t v17 = *(void *)(a2 + 72);
    uint64_t v18 = *(void *)(a2 + 80);
    *(void *)(a1 + 64) = v16;
    *(void *)(a1 + 72) = v17;
    uint64_t v19 = *(void *)(a2 + 88);
    uint64_t v20 = *(void *)(a2 + 96);
    *(void *)(a1 + 80) = v18;
    *(void *)(a1 + 88) = v19;
    *(void *)(a1 + 96) = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v21 = a3[5];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (const void *)(a2 + v21);
  uint64_t v24 = sub_243957010();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48);
  if (v26(v23, 1, v24))
  {
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(v22, v23, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v25 + 16))(v22, v23, v24);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  uint64_t v28 = a3[6];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (const void *)(a2 + v28);
  if (v26((const void *)(a2 + v28), 1, v24))
  {
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v25 + 16))(v29, v30, v24);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v29, 0, 1, v24);
  }
  uint64_t v32 = a3[7];
  uint64_t v33 = a3[8];
  uint64_t v34 = (void *)(a1 + v32);
  uint64_t v35 = (void *)(a2 + v32);
  uint64_t v36 = v35[1];
  void *v34 = *v35;
  v34[1] = v36;
  uint64_t v37 = (void *)(a1 + v33);
  uint64_t v38 = (void *)(a2 + v33);
  uint64_t v39 = v38[1];
  *uint64_t v37 = *v38;
  v37[1] = v39;
  uint64_t v40 = a3[9];
  uint64_t v41 = a3[10];
  uint64_t v42 = (void *)(a1 + v40);
  uint64_t v43 = (void *)(a2 + v40);
  uint64_t v44 = v43[1];
  void *v42 = *v43;
  v42[1] = v44;
  uint64_t v45 = (void *)(a1 + v41);
  uint64_t v46 = (void *)(a2 + v41);
  uint64_t v47 = v46[1];
  *uint64_t v45 = *v46;
  v45[1] = v47;
  uint64_t v48 = a3[11];
  uint64_t v49 = a3[12];
  uint64_t v50 = (void *)(a1 + v48);
  uint64_t v51 = (void *)(a2 + v48);
  uint64_t v52 = v51[1];
  void *v50 = *v51;
  v50[1] = v52;
  uint64_t v53 = a1 + v49;
  uint64_t v54 = a2 + v49;
  uint64_t v55 = *(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v55(v53, v54, v24);
  return a1;
}

uint64_t assignWithCopy for RawMerchant(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *a2;
  if (v6 == 1)
  {
    if (v7 == 1)
    {
      long long v8 = *(_OWORD *)a2;
      long long v9 = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
      *(_OWORD *)(a1 + 32) = v9;
      *(_OWORD *)a1 = v8;
      long long v10 = *((_OWORD *)a2 + 3);
      long long v11 = *((_OWORD *)a2 + 4);
      long long v12 = *((_OWORD *)a2 + 5);
      *(void *)(a1 + 96) = a2[12];
      *(_OWORD *)(a1 + 64) = v11;
      *(_OWORD *)(a1 + 80) = v12;
      *(_OWORD *)(a1 + 48) = v10;
    }
    else
    {
      *(void *)a1 = v7;
      *(void *)(a1 + 8) = a2[1];
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = a2[3];
      *(void *)(a1 + 32) = a2[4];
      *(void *)(a1 + 40) = a2[5];
      *(void *)(a1 + 48) = a2[6];
      *(void *)(a1 + 56) = a2[7];
      *(void *)(a1 + 64) = a2[8];
      *(void *)(a1 + 72) = a2[9];
      *(void *)(a1 + 80) = a2[10];
      *(void *)(a1 + 88) = a2[11];
      *(void *)(a1 + 96) = a2[12];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v7 == 1)
  {
    sub_243731720(a1);
    long long v14 = *((_OWORD *)a2 + 1);
    long long v13 = *((_OWORD *)a2 + 2);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v14;
    *(_OWORD *)(a1 + 32) = v13;
    long long v16 = *((_OWORD *)a2 + 4);
    long long v15 = *((_OWORD *)a2 + 5);
    long long v17 = *((_OWORD *)a2 + 3);
    *(void *)(a1 + 96) = a2[12];
    *(_OWORD *)(a1 + 64) = v16;
    *(_OWORD *)(a1 + 80) = v15;
    *(_OWORD *)(a1 + 48) = v17;
  }
  else
  {
    *(void *)a1 = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = a2[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = a2[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = a2[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = a2[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 72) = a2[9];
    *(void *)(a1 + 80) = a2[10];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 88) = a2[11];
    *(void *)(a1 + 96) = a2[12];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v18 = a3[5];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_243957010();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23(v20, 1, v21);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(void *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v25)
  {
    (*(void (**)(void *, uint64_t))(v22 + 8))(v19, v21);
LABEL_13:
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(v19, v20, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, char *, uint64_t))(v22 + 24))(v19, v20, v21);
LABEL_14:
  uint64_t v27 = a3[6];
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (char *)a2 + v27;
  int v30 = v23((void *)(a1 + v27), 1, v21);
  int v31 = v23(v29, 1, v21);
  if (!v30)
  {
    if (!v31)
    {
      (*(void (**)(void *, char *, uint64_t))(v22 + 24))(v28, v29, v21);
      goto LABEL_20;
    }
    (*(void (**)(void *, uint64_t))(v22 + 8))(v28, v21);
    goto LABEL_19;
  }
  if (v31)
  {
LABEL_19:
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(void *, char *, uint64_t))(v22 + 16))(v28, v29, v21);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v28, 0, 1, v21);
LABEL_20:
  uint64_t v33 = a3[7];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (uint64_t *)((char *)a2 + v33);
  void *v34 = *v35;
  v34[1] = v35[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v36 = a3[8];
  uint64_t v37 = (void *)(a1 + v36);
  uint64_t v38 = (uint64_t *)((char *)a2 + v36);
  *uint64_t v37 = *v38;
  v37[1] = v38[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v39 = a3[9];
  uint64_t v40 = (void *)(a1 + v39);
  uint64_t v41 = (uint64_t *)((char *)a2 + v39);
  *uint64_t v40 = *v41;
  v40[1] = v41[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v42 = a3[10];
  uint64_t v43 = (void *)(a1 + v42);
  uint64_t v44 = (uint64_t *)((char *)a2 + v42);
  void *v43 = *v44;
  v43[1] = v44[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v45 = a3[11];
  uint64_t v46 = (void *)(a1 + v45);
  uint64_t v47 = (uint64_t *)((char *)a2 + v45);
  void *v46 = *v47;
  v46[1] = v47[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 24))(a1 + a3[12], (uint64_t)a2 + a3[12], v21);
  return a1;
}

uint64_t initializeWithTake for RawMerchant(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  long long v8 = *(_OWORD *)(a2 + 48);
  uint64_t v9 = a3[5];
  long long v10 = (void *)(a1 + v9);
  long long v11 = (const void *)(a2 + v9);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  uint64_t v12 = sub_243957010();
  uint64_t v13 = *(void *)(v12 - 8);
  long long v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
  if (v14(v11, 1, v12))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v16 = a3[6];
  long long v17 = (void *)(a1 + v16);
  uint64_t v18 = (const void *)(a2 + v16);
  if (v14((const void *)(a2 + v16), 1, v12))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    uint64_t v20 = *(void (**)(void *, const void *, uint64_t))(v13 + 32);
  }
  else
  {
    uint64_t v20 = *(void (**)(void *, const void *, uint64_t))(v13 + 32);
    v20(v17, v18, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v17, 0, 1, v12);
  }
  uint64_t v21 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v21) = *(_OWORD *)(a2 + v21);
  uint64_t v22 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v22) = *(_OWORD *)(a2 + v22);
  uint64_t v23 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  v20((void *)(a1 + v23), (const void *)(a2 + v23), v12);
  return a1;
}

uint64_t assignWithTake for RawMerchant(uint64_t a1, uint64_t a2, int *a3)
{
  if (*(void *)a1 == 1) {
    goto LABEL_4;
  }
  if (*(void *)a2 == 1)
  {
    sub_243731720(a1);
LABEL_4:
    long long v6 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v6;
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    long long v8 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v8;
    goto LABEL_6;
  }
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v14;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v15 = a3[5];
  uint64_t v16 = (void *)(a1 + v15);
  long long v17 = (void *)(a2 + v15);
  uint64_t v18 = sub_243957010();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 32))(v16, v17, v18);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v22)
  {
    (*(void (**)(void *, uint64_t))(v19 + 8))(v16, v18);
LABEL_11:
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(void *, void *, uint64_t))(v19 + 40))(v16, v17, v18);
LABEL_12:
  uint64_t v24 = a3[6];
  int v25 = (void *)(a1 + v24);
  uint64_t v26 = (void *)(a2 + v24);
  int v27 = v20((void *)(a1 + v24), 1, v18);
  int v28 = v20(v26, 1, v18);
  if (!v27)
  {
    if (!v28)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 40))(v25, v26, v18);
      goto LABEL_18;
    }
    (*(void (**)(void *, uint64_t))(v19 + 8))(v25, v18);
    goto LABEL_17;
  }
  if (v28)
  {
LABEL_17:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(void *, void *, uint64_t))(v19 + 32))(v25, v26, v18);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v25, 0, 1, v18);
LABEL_18:
  uint64_t v30 = a3[7];
  int v31 = (void *)(a1 + v30);
  uint64_t v32 = (uint64_t *)(a2 + v30);
  uint64_t v34 = *v32;
  uint64_t v33 = v32[1];
  void *v31 = v34;
  v31[1] = v33;
  swift_bridgeObjectRelease();
  uint64_t v35 = a3[8];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (uint64_t *)(a2 + v35);
  uint64_t v39 = *v37;
  uint64_t v38 = v37[1];
  *uint64_t v36 = v39;
  v36[1] = v38;
  swift_bridgeObjectRelease();
  uint64_t v40 = a3[9];
  uint64_t v41 = (void *)(a1 + v40);
  uint64_t v42 = (uint64_t *)(a2 + v40);
  uint64_t v44 = *v42;
  uint64_t v43 = v42[1];
  *uint64_t v41 = v44;
  v41[1] = v43;
  swift_bridgeObjectRelease();
  uint64_t v45 = a3[10];
  uint64_t v46 = (void *)(a1 + v45);
  uint64_t v47 = (uint64_t *)(a2 + v45);
  uint64_t v49 = *v47;
  uint64_t v48 = v47[1];
  void *v46 = v49;
  v46[1] = v48;
  swift_bridgeObjectRelease();
  uint64_t v50 = a3[11];
  uint64_t v51 = (void *)(a1 + v50);
  uint64_t v52 = (uint64_t *)(a2 + v50);
  uint64_t v54 = *v52;
  uint64_t v53 = v52[1];
  void *v51 = v54;
  v51[1] = v53;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 40))(a1 + a3[12], a2 + a3[12], v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for RawMerchant(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24379EE88);
}

uint64_t sub_24379EE88(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + a3[5];
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v12 = *(void *)(a1 + a3[7] + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
  else
  {
    uint64_t v13 = sub_243957010();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + a3[12];
    return v14(v16, a2, v15);
  }
}

uint64_t storeEnumTagSinglePayload for RawMerchant(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24379EFD4);
}

uint64_t sub_24379EFD4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + a4[5];
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[7] + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v13 = sub_243957010();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + a4[12];
    return v14(v16, a2, a2, v15);
  }
  return result;
}

void sub_24379F10C()
{
  sub_24347DD84();
  if (v0 <= 0x3F)
  {
    sub_243957010();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unsigned char *storeEnumTagSinglePayload for RawMerchant.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24379F2C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RawMerchant.CodingKeys()
{
  return &type metadata for RawMerchant.CodingKeys;
}

unint64_t sub_24379F304()
{
  unint64_t result = qword_268D9FD10;
  if (!qword_268D9FD10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FD10);
  }
  return result;
}

unint64_t sub_24379F35C()
{
  unint64_t result = qword_268D9FD18;
  if (!qword_268D9FD18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FD18);
  }
  return result;
}

unint64_t sub_24379F3B4()
{
  unint64_t result = qword_268D9FD20;
  if (!qword_268D9FD20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FD20);
  }
  return result;
}

uint64_t sub_24379F408(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73736572646461 && a2 == 0xE700000000000000;
  if (v2 || (sub_243959940() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7373656E69737562 && a2 == 0xEF4C525574616843 || (sub_243959940() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x55746361746E6F63 && a2 == 0xEA00000000004C52 || (sub_243959940() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61 || (sub_243959940() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6464416C69616D65 && a2 == 0xEC00000073736572 || (sub_243959940() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1869049708 && a2 == 0xE400000000000000 || (sub_243959940() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000002439AB560 || (sub_243959940() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6D754E656E6F6870 && a2 == 0xEB00000000726562 || (sub_243959940() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_243959940();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t *sub_24379F808(uint64_t *a1)
{
  uint64_t v2 = a1[13];
  sub_2435E8D60(*a1);
  sub_2435E8D60(v2);
  return a1;
}

uint64_t ManagedInstitutionImporter.__allocating_init()()
{
  return swift_allocObject();
}

id ManagedInstitutionImporter.insertOrUpdateInstitution(_:context:)(uint64_t *a1, void *a2)
{
  uint64_t v5 = type metadata accessor for Institution(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = (id)type metadata accessor for ManagedInstitution();
  uint64_t v9 = (void *)static ManagedInstitution.existingInstitution(withInstitutionID:in:)(*a1, a1[1], (uint64_t)a2);
  if (!v2)
  {
    uint64_t v10 = v9;
    if (v9)
    {
      id v8 = v9;
      _s10FinanceKit18ManagedInstitutionC6update_4with7contextyAC_AA0D0VSo22NSManagedObjectContextCtFZ_0(v8, (uint64_t)a1, a2);
    }
    else
    {
      sub_2437A0588((uint64_t)a1, (uint64_t)v7, type metadata accessor for Institution);
      id v8 = ManagedInstitution.__allocating_init(_:context:)((uint64_t)v7, a2);
    }
    sub_2437A004C((uint64_t)a1 + *(int *)(v5 + 60), v8, (uint64_t)a2);
  }
  return v8;
}

uint64_t ManagedInstitutionImporter.init()()
{
  return v0;
}

uint64_t *ManagedInstitutionImporter.insertOrUpdateInstitution(_:context:)(uint64_t *a1, void *a2)
{
  uint64_t v73 = a2;
  uint64_t v3 = type metadata accessor for BankConnectTermsAndConditions();
  uint64_t v70 = *(void *)(v3 - 8);
  char v71 = (int *)v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v63 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v65 = (uint64_t)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_243957400();
  uint64_t v68 = *(uint64_t (**)())(v62 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v62);
  uint64_t v64 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v69 = (char *)&v55 - v9;
  uint64_t v10 = type metadata accessor for RawBankConnectData.TermsAndConditions();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v66 = v10;
  uint64_t v67 = v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v55 - v15;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D99850);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C8CE0);
  MEMORY[0x270FA5388](v20 - 8);
  int v22 = (char *)&v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for RawBankConnectData.Institution(0);
  MEMORY[0x270FA5388](v23);
  int v25 = (char *)&v55 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ManagedInstitution();
  uint64_t v26 = a1;
  int v27 = v72;
  int v28 = (void *)static ManagedInstitution.existingInstitution(withInstitutionID:in:)(*a1, a1[1], (uint64_t)v73);
  if (!v27)
  {
    id v60 = v28;
    uint64_t v61 = 0;
    long long v72 = v22;
    uint64_t v58 = (uint64_t *)v14;
    if (v28)
    {
      id v59 = v28;
      _s10FinanceKit18ManagedInstitutionC6update_4with7contextyAC_AA18RawBankConnectDataO0D0VSo22NSManagedObjectContextCtFZ_0(v59, (uint64_t)a1, v73);
    }
    else
    {
      sub_2437A0588((uint64_t)a1, (uint64_t)v25, type metadata accessor for RawBankConnectData.Institution);
      id v59 = (id)ManagedInstitution.__allocating_init(_:context:)((uint64_t)v25, v73);
    }
    uint64_t v29 = v70;
    uint64_t v30 = v67;
    int v31 = v68;
    uint64_t v32 = (uint64_t)v16;
    uint64_t v33 = (uint64_t)a1 + *(int *)(v23 + 52);
    uint64_t v34 = (uint64_t)v19;
    sub_24337C254(v33, (uint64_t)v19, &qword_268D99850);
    uint64_t v35 = 1;
    uint64_t v36 = v66;
    int v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48))(v19, 1, v66);
    uint64_t v38 = v69;
    uint64_t v39 = (uint64_t)v72;
    if (v37 != 1)
    {
      uint64_t v68 = type metadata accessor for RawBankConnectData.TermsAndConditions;
      sub_2437A0470(v34, v32, (uint64_t (*)(void))type metadata accessor for RawBankConnectData.TermsAndConditions);
      uint64_t v40 = v32;
      uint64_t v67 = v32;
      uint64_t v41 = v58;
      sub_2437A0588(v40, (uint64_t)v58, (uint64_t (*)(void))type metadata accessor for RawBankConnectData.TermsAndConditions);
      uint64_t v42 = *v41;
      uint64_t v56 = v41[1];
      uint64_t v57 = v42;
      uint64_t v43 = (char *)v41 + *(int *)(v36 + 24);
      uint64_t v44 = (void (*)(char *, char *, uint64_t))*((void *)v31 + 2);
      uint64_t v45 = v36;
      uint64_t v46 = v62;
      v44(v38, v43, v62);
      uint64_t v47 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*((void *)v31 + 7);
      v47(v65, 1, 1, v46);
      v44(v64, (char *)v41 + *(int *)(v45 + 28), v46);
      uint64_t v29 = v70;
      uint64_t v48 = v63;
      uint64_t v49 = (uint64_t)&v63[v71[6]];
      v47(v49, 1, 1, v46);
      uint64_t v50 = v56;
      *(void *)uint64_t v48 = v57;
      *((void *)v48 + 1) = v50;
      uint64_t v51 = (void (*)(char *, char *, uint64_t))*((void *)v31 + 4);
      v51(&v48[v71[5]], v69, v46);
      swift_bridgeObjectRetain();
      sub_2433AA680(v65, v49);
      v51(&v48[v71[7]], v64, v46);
      sub_2437A0470((uint64_t)v48, v39, (uint64_t (*)(void))type metadata accessor for BankConnectTermsAndConditions);
      uint64_t v52 = v68;
      sub_2437A0528((uint64_t)v41, (uint64_t (*)(void))v68);
      sub_2437A0528(v67, (uint64_t (*)(void))v52);
      uint64_t v35 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v29 + 56))(v39, v35, 1, v71);
    uint64_t v26 = (uint64_t *)v59;
    uint64_t v53 = v61;
    sub_2437A004C(v39, v59, (uint64_t)v73);
    sub_2437A0410(v39);
    if (v53) {
  }
    }
  return v26;
}

uint64_t ManagedInstitutionImporter.deinit()
{
  return v0;
}

uint64_t ManagedInstitutionImporter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

id sub_2437A004C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v35 = (void *)a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C8CE0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for BankConnectTermsAndConditions();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (uint64_t *)((char *)&v33 - v15);
  sub_24337C254(a1, (uint64_t)v9, &qword_26B0C8CE0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_2437A0410((uint64_t)v9);
    return objc_msgSend(a2, sel_setTermsAndConditionsObject_, 0);
  }
  else
  {
    uint64_t v18 = (uint64_t)v14;
    id v34 = a2;
    sub_2437A0470((uint64_t)v9, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for BankConnectTermsAndConditions);
    uint64_t v19 = (objc_class *)type metadata accessor for ManagedBankConnectTermsAndConditions();
    uint64_t v20 = *v16;
    uint64_t v21 = v16[1];
    swift_bridgeObjectRetain();
    int v22 = v35;
    unint64_t v23 = static ManagedBankConnectTermsAndConditions.existingTermsAndConditions(withID:in:)(v20, v21, (uint64_t)v35);
    if (v4)
    {
      sub_2437A0528((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for BankConnectTermsAndConditions);
      return (id)swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v24 = (void *)v23;
      swift_bridgeObjectRelease();
      if (v24)
      {
        id v25 = v24;
        uint64_t v26 = (void *)sub_243957350();
        objc_msgSend(v25, sel_setPublishedAt_, v26);

        int v27 = (void *)sub_243957350();
        objc_msgSend(v25, sel_setInEffectOn_, v27);

        objc_msgSend(v34, sel_setTermsAndConditionsObject_, v25);
      }
      else
      {
        sub_2437A0588((uint64_t)v16, v18, (uint64_t (*)(void))type metadata accessor for BankConnectTermsAndConditions);
        id v28 = objc_allocWithZone(v19);
        id v29 = v22;
        id v25 = objc_msgSend(v28, sel_initWithContext_, v29);
        uint64_t v30 = (void *)sub_2439582A0();
        objc_msgSend(v25, sel_setId_, v30);

        int v31 = (void *)sub_243957350();
        objc_msgSend(v25, sel_setPublishedAt_, v31);

        uint64_t v32 = (void *)sub_243957350();
        objc_msgSend(v25, sel_setInEffectOn_, v32);

        sub_2437A0528(v18, (uint64_t (*)(void))type metadata accessor for BankConnectTermsAndConditions);
        objc_msgSend(v34, sel_setTermsAndConditionsObject_, v25);
      }

      return (id)sub_2437A0528((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for BankConnectTermsAndConditions);
    }
  }
}

uint64_t sub_2437A0410(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C8CE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2437A0470(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for ManagedInstitutionImporter()
{
  return self;
}

uint64_t method lookup function for ManagedInstitutionImporter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ManagedInstitutionImporter);
}

uint64_t dispatch thunk of ManagedInstitutionImporter.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t sub_2437A0528(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2437A0588(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t static ApplePayTransactionIdentifier.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_2437A0C54(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8));
}

uint64_t ApplePayTransactionIdentifier.init(hexEncoded:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = _s10Foundation4DataV10FinanceKitE10hexEncodedACSgSS_tcfC_0(a1, a2);
  if (v5 >> 60 == 15) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = result;
  }
  unint64_t v7 = 0xF000000000000000;
  if (v5 >> 60 != 15) {
    unint64_t v7 = v5;
  }
  *a3 = v6;
  a3[1] = v7;
  return result;
}

uint64_t ApplePayTransactionIdentifier.init(data:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t ApplePayTransactionIdentifier.data.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_243403DD0(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t ApplePayTransactionIdentifier.data.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2433807F0(*(void *)v2, *(void *)(v2 + 8));
  *(void *)uint64_t v2 = a1;
  *(void *)(v2 + 8) = a2;
  return result;
}

uint64_t (*ApplePayTransactionIdentifier.data.modify())()
{
  return nullsub_1;
}

uint64_t ApplePayTransactionIdentifier.hexEncodedString.getter()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  sub_243403DD0(v1, v2);
  uint64_t v3 = sub_243406488(v1, v2);
  sub_2433807F0(v1, v2);
  return v3;
}

uint64_t ApplePayTransactionIdentifier.hash(into:)()
{
  uint64_t v2 = *v0;
  unint64_t v1 = v0[1];
  sub_243403DD0(v2, v1);
  sub_2439570D0();

  return sub_2433807F0(v2, v1);
}

uint64_t ApplePayTransactionIdentifier.hashValue.getter()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  sub_243959AD0();
  sub_243403DD0(v1, v2);
  sub_2439570D0();
  sub_2433807F0(v1, v2);
  return sub_243959B40();
}

uint64_t ApplePayTransactionIdentifier.description.getter()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  sub_243403DD0(v1, v2);
  uint64_t v3 = sub_243406488(v1, v2);
  sub_2433807F0(v1, v2);
  return v3;
}

uint64_t sub_2437A0850@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  unint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_243403DD0(a2, a3);
      uint64_t v10 = (char *)sub_2439566C0();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_2439566F0();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_2439566E0();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x2437A0AB4);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_2433807F0(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      uint64_t v17 = (char *)sub_2439566C0();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_2439566F0();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_2439566E0();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_2437A0AC4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t __s1 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  sub_2437A0850((uint64_t)&__s1, a3, a4, &v7);
  if (!v4) {
    char v5 = v7;
  }
  return v5 & 1;
}

uint64_t sub_2437A0B9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_2439566C0();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_2439566F0();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_2439566E0();
  sub_2437A0850(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_2437A0C54(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        JUMPOUT(0x2437A0EBCLL);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_27;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v17 = 1;
            }
            else
            {
              switch(a2 >> 62)
              {
                case 1uLL:
                  if (a1 >> 32 < (int)a1) {
                    goto LABEL_29;
                  }
                  sub_243403DD0(a3, a4);
                  sub_243403DD0(a1, a2);
                  char v17 = sub_2437A0B9C((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
                  sub_2433807F0(a3, a4);
                  uint64_t v18 = a1;
                  unint64_t v19 = a2;
                  break;
                case 2uLL:
                  uint64_t v20 = a2 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v21 = *(void *)(a1 + 16);
                  uint64_t v22 = *(void *)(a1 + 24);
                  sub_243403DD0(a3, a4);
                  swift_retain();
                  swift_retain();
                  char v17 = sub_2437A0B9C(v21, v22, v20, a3, a4);
                  sub_2433807F0(a3, a4);
                  swift_release();
                  swift_release();
                  return v17 & 1;
                case 3uLL:
                  sub_243403DD0(a3, a4);
                  uint64_t v16 = 0;
                  uint64_t v15 = 0;
                  goto LABEL_22;
                default:
                  sub_243403DD0(a3, a4);
                  uint64_t v15 = a2 & 0xFFFFFFFFFFFFFFLL;
                  uint64_t v16 = a1;
LABEL_22:
                  char v17 = sub_2437A0AC4(v16, v15, a3, a4);
                  uint64_t v18 = a3;
                  unint64_t v19 = a4;
                  break;
              }
              sub_2433807F0(v18, v19);
            }
          }
          else
          {
            char v17 = 0;
          }
          return v17 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_28;
        case 3uLL:
          char v17 = v8 == 0;
          return v17 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

unint64_t sub_2437A0EF0()
{
  unint64_t result = qword_268D9FD28;
  if (!qword_268D9FD28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FD28);
  }
  return result;
}

ValueMetadata *type metadata accessor for ApplePayTransactionIdentifier()
{
  return &type metadata for ApplePayTransactionIdentifier;
}

uint64_t sub_2437A0F54(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for RawOrderFulfillment();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = MEMORY[0x263F8EE78];
  if (v7)
  {
    v16[1] = v1;
    uint64_t v17 = MEMORY[0x263F8EE78];
    sub_2434CD2D4(0, v7, 0);
    uint64_t v8 = v17;
    uint64_t v9 = (unint64_t *)(a1 + 32);
    do
    {
      unint64_t v11 = *v9++;
      unint64_t v10 = v11;
      if ((v11 & 0x8000000000000000) != 0)
      {
        id v12 = (id)(v10 & 0x7FFFFFFFFFFFFFFFLL);
        ManagedOrderPickupFulfillment.rawOrderPickupFulfillment.getter((uint64_t)v6);
      }
      else
      {
        id v12 = (id)v10;
        ManagedOrderShippingFulfillment.rawOrderShippingFulfillment.getter((uint64_t)v6);
      }
      swift_storeEnumTagMultiPayload();

      uint64_t v17 = v8;
      unint64_t v14 = *(void *)(v8 + 16);
      unint64_t v13 = *(void *)(v8 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_2434CD2D4(v13 > 1, v14 + 1, 1);
        uint64_t v8 = v17;
      }
      *(void *)(v8 + 16) = v14 + 1;
      sub_2437A6D0C((uint64_t)v6, v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v14, (uint64_t (*)(void))type metadata accessor for RawOrderFulfillment);
      --v7;
    }
    while (v7);
  }
  return v8;
}

uint64_t sub_2437A1118(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for RawOrderReturn();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4 - 8);
  int64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    if (!v8) {
      return v9;
    }
    uint64_t v18 = MEMORY[0x263F8EE78];
    uint64_t result = sub_2434CD298(0, v8 & ~(v8 >> 63), 0);
    if (v8 < 0) {
      break;
    }
    uint64_t v11 = 0;
    uint64_t v9 = v18;
    uint64_t v16 = v2;
    unint64_t v17 = a1 & 0xC000000000000001;
    uint64_t v2 = a1;
    while (v8 != v11)
    {
      if (v17) {
        id v12 = (id)MEMORY[0x24567E5D0](v11, a1);
      }
      else {
        id v12 = *(id *)(a1 + 8 * v11 + 32);
      }
      unint64_t v13 = v12;
      ManagedOrderReturn.rawOrderReturn.getter((uint64_t)v7);

      uint64_t v18 = v9;
      unint64_t v15 = *(void *)(v9 + 16);
      unint64_t v14 = *(void *)(v9 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_2434CD298(v14 > 1, v15 + 1, 1);
        uint64_t v9 = v18;
      }
      ++v11;
      *(void *)(v9 + 16) = v15 + 1;
      sub_2437A6D0C((uint64_t)v7, v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v15, (uint64_t (*)(void))type metadata accessor for RawOrderReturn);
      a1 = v2;
      if (v8 == v11) {
        return v9;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_243959550();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_2437A131C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for RawOrderPickupFulfillment();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for RawOrderShippingFulfillment();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for RawOrderFulfillment();
  uint64_t v9 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = MEMORY[0x263F8EE78];
  if (v12)
  {
    v23[1] = v1;
    uint64_t v26 = MEMORY[0x263F8EE78];
    sub_2434CD370(0, v12, 0);
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v24 = *(void *)(v9 + 72);
    do
    {
      sub_2437A6D74(v14, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for RawOrderFulfillment);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_2437A6D0C((uint64_t)v11, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for RawOrderPickupFulfillment);
        unsigned int v15 = v5[8];
        sub_2437A6DDC((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for RawOrderPickupFulfillment);
        LOBYTE(v16) = (v15 & 0x1F) == 3;
        BOOL v17 = v15 >= 5;
      }
      else
      {
        sub_2437A6D0C((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for RawOrderShippingFulfillment);
        unsigned int v18 = v8[40];
        sub_2437A6DDC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for RawOrderShippingFulfillment);
        BOOL v17 = v18 >= 7;
        unsigned int v16 = (0x24u >> v18) & 1;
      }
      if (v17) {
        char v19 = 1;
      }
      else {
        char v19 = v16;
      }
      uint64_t v13 = v26;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2434CD370(0, *(void *)(v13 + 16) + 1, 1);
        uint64_t v13 = v26;
      }
      unint64_t v21 = *(void *)(v13 + 16);
      unint64_t v20 = *(void *)(v13 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_2434CD370(v20 > 1, v21 + 1, 1);
        uint64_t v13 = v26;
      }
      *(void *)(v13 + 16) = v21 + 1;
      *(unsigned char *)(v13 + v21 + 32) = v19;
      v14 += v24;
      --v12;
    }
    while (v12);
  }
  return v13;
}

uint64_t sub_2437A1614(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_2434CD370(0, v1, 0);
    uint64_t v2 = v11;
    uint64_t v4 = *(void *)(type metadata accessor for RawOrderReturn() - 8);
    uint64_t v5 = *(void *)(v4 + 72);
    uint64_t v6 = (unsigned __int8 *)(a1
                           + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))
                           + 8);
    do
    {
      unsigned int v7 = *v6;
      unint64_t v9 = *(void *)(v11 + 16);
      unint64_t v8 = *(void *)(v11 + 24);
      if (v9 >= v8 >> 1) {
        sub_2434CD370(v8 > 1, v9 + 1, 1);
      }
      v6 += v5;
      *(void *)(v11 + 16) = v9 + 1;
      *(unsigned char *)(v11 + v9 + 32) = v7 > 3;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_2437A1744(unint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v38 = (uint64_t)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for RawOrderApplication();
  uint64_t v36 = *(void *)(v6 - 8);
  uint64_t v37 = v6;
  MEMORY[0x270FA5388](v6);
  unint64_t v8 = (void *)((char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1 >> 62) {
    goto LABEL_21;
  }
  uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v10 = MEMORY[0x263F8EE78];
    if (!v9) {
      return v10;
    }
    uint64_t v39 = MEMORY[0x263F8EE78];
    uint64_t result = sub_2434CD550(0, v9 & ~(v9 >> 63), 0);
    if (v9 < 0) {
      break;
    }
    uint64_t v12 = 0;
    uint64_t v10 = v39;
    v32[1] = v2;
    unint64_t v33 = a1 & 0xC000000000000001;
    uint64_t v34 = v9;
    unint64_t v35 = a1;
    while (v9 != v12)
    {
      if (v33) {
        id v13 = (id)MEMORY[0x24567E5D0](v12, a1);
      }
      else {
        id v13 = *(id *)(a1 + 8 * v12 + 32);
      }
      uint64_t v14 = v13;
      id v15 = objc_msgSend(v13, sel_storeIdentifier);
      id v16 = objc_msgSend(v14, sel_launchURL);
      if (v16)
      {
        BOOL v17 = v16;
        uint64_t v18 = v38;
        sub_243956F90();

        uint64_t v19 = sub_243957010();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 0, 1, v19);
      }
      else
      {
        uint64_t v20 = sub_243957010();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v38, 1, 1, v20);
      }
      id v21 = objc_msgSend(v14, sel_customProductPageIdentifier);
      if (v21)
      {
        uint64_t v22 = v21;
        uint64_t v23 = sub_2439582D0();
        uint64_t v25 = v24;
      }
      else
      {
        uint64_t v23 = 0;
        uint64_t v25 = 0;
      }
      uint64_t v26 = v37;
      uint64_t v27 = (uint64_t)v8 + *(int *)(v37 + 20);
      uint64_t v28 = sub_243957010();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v27, 1, 1, v28);
      char v29 = (void *)((char *)v8 + *(int *)(v26 + 24));
      *char v29 = 0;
      v29[1] = 0;
      void *v8 = v15;
      sub_2433865D8(v38, v27, &qword_26B0C98A0);

      swift_bridgeObjectRelease();
      *char v29 = v23;
      v29[1] = v25;
      uint64_t v39 = v10;
      unint64_t v31 = *(void *)(v10 + 16);
      unint64_t v30 = *(void *)(v10 + 24);
      unint64_t v2 = v31 + 1;
      if (v31 >= v30 >> 1)
      {
        sub_2434CD550(v30 > 1, v31 + 1, 1);
        uint64_t v10 = v39;
      }
      ++v12;
      *(void *)(v10 + 16) = v2;
      sub_2437A6D0C((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(void *)(v36 + 72) * v31, (uint64_t (*)(void))type metadata accessor for RawOrderApplication);
      uint64_t v9 = v34;
      a1 = v35;
      if (v34 == v12) {
        return v10;
      }
    }
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_243959550();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_2437A1B00(uint64_t a1)
{
  uint64_t v26 = type metadata accessor for RawOrderPickupFulfillment();
  MEMORY[0x270FA5388](v26);
  uint64_t v25 = (uint64_t)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for RawOrderShippingFulfillment();
  MEMORY[0x270FA5388](v24);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for RawOrderFulfillment();
  uint64_t v6 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  unint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x263F8EE78];
  if (v9)
  {
    uint64_t v23 = v1;
    uint64_t v29 = MEMORY[0x263F8EE78];
    sub_2434CCA2C(0, v9, 0);
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v27 = *(void *)(v6 + 72);
    do
    {
      sub_2437A6D74(v11, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for RawOrderFulfillment);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v12 = v25;
        sub_2437A6D0C((uint64_t)v8, v25, (uint64_t (*)(void))type metadata accessor for RawOrderPickupFulfillment);
        id v13 = (uint64_t *)(v12 + *(int *)(v26 + 60));
        uint64_t v15 = *v13;
        uint64_t v14 = v13[1];
        swift_bridgeObjectRetain();
        id v16 = type metadata accessor for RawOrderPickupFulfillment;
        uint64_t v17 = v12;
      }
      else
      {
        sub_2437A6D0C((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for RawOrderShippingFulfillment);
        uint64_t v18 = &v5[*(int *)(v24 + 64)];
        uint64_t v15 = *(void *)v18;
        uint64_t v14 = *((void *)v18 + 1);
        swift_bridgeObjectRetain();
        id v16 = type metadata accessor for RawOrderShippingFulfillment;
        uint64_t v17 = (uint64_t)v5;
      }
      sub_2437A6DDC(v17, (uint64_t (*)(void))v16);
      uint64_t v10 = v29;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2434CCA2C(0, *(void *)(v10 + 16) + 1, 1);
        uint64_t v10 = v29;
      }
      unint64_t v20 = *(void *)(v10 + 16);
      unint64_t v19 = *(void *)(v10 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_2434CCA2C(v19 > 1, v20 + 1, 1);
        uint64_t v10 = v29;
      }
      *(void *)(v10 + 16) = v20 + 1;
      uint64_t v21 = v10 + 16 * v20;
      *(void *)(v21 + 32) = v15;
      *(void *)(v21 + 40) = v14;
      v11 += v27;
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t sub_2437A1E0C(void *(*a1)(uint64_t *__return_ptr, long long *), uint64_t a2, uint64_t a3)
{
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v12 = MEMORY[0x263F8EE78];
  uint64_t v6 = *(void *)(a3 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v6; ++i)
    {
      long long v11 = *(_OWORD *)(a3 + 16 * i + 32);
      int64_t v9 = a1(&v10, &v11);
      if (v3)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      if (v10)
      {
        MEMORY[0x24567D890](v9);
        if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_243958680();
        }
        sub_2439586B0();
        sub_243958670();
      }
    }
    swift_bridgeObjectRelease();
    return v12;
  }
  return result;
}

unint64_t sub_2437A1F38(void (*a1)(id *), uint64_t a2, unint64_t a3)
{
  uint64_t v28 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9FEF0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for MapsSuggestionsOrderPickup(0);
  uint64_t v23 = *(void *)(v27 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v27);
  uint64_t v26 = (uint64_t)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v22 = (uint64_t)&v21 - v10;
  if (a3 >> 62) {
    goto LABEL_20;
  }
  uint64_t v11 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v11; uint64_t v11 = sub_243959550())
  {
    uint64_t v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
    unint64_t v25 = a3 & 0xC000000000000001;
    unint64_t v12 = MEMORY[0x263F8EE78];
    uint64_t v13 = 4;
    unint64_t v21 = a3;
    while (1)
    {
      id v14 = v25 ? (id)MEMORY[0x24567E5D0](v13 - 4, a3) : *(id *)(a3 + 8 * v13);
      uint64_t v15 = v14;
      uint64_t v16 = v13 - 3;
      if (__OFADD__(v13 - 4, 1)) {
        break;
      }
      id v29 = v14;
      v28(&v29);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v12;
      }

      if ((*v24)(v7, 1, v27) == 1)
      {
        sub_24337C1BC((uint64_t)v7, &qword_268D9FEF0);
      }
      else
      {
        uint64_t v17 = v22;
        sub_2437A6D0C((uint64_t)v7, v22, type metadata accessor for MapsSuggestionsOrderPickup);
        sub_2437A6D0C(v17, v26, type metadata accessor for MapsSuggestionsOrderPickup);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v12 = sub_243777758(0, *(void *)(v12 + 16) + 1, 1, v12);
        }
        unint64_t v19 = *(void *)(v12 + 16);
        unint64_t v18 = *(void *)(v12 + 24);
        if (v19 >= v18 >> 1) {
          unint64_t v12 = sub_243777758(v18 > 1, v19 + 1, 1, v12);
        }
        *(void *)(v12 + 16) = v19 + 1;
        sub_2437A6D0C(v26, v12+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(void *)(v23 + 72) * v19, type metadata accessor for MapsSuggestionsOrderPickup);
        a3 = v21;
      }
      ++v13;
      if (v16 == v11)
      {
        swift_bridgeObjectRelease();
        return v12;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE78];
}

unint64_t sub_2437A228C(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v34 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_243957400();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  unint64_t v33 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  unint64_t v30 = (char *)v25 - v13;
  uint64_t v14 = *(void *)(a3 + 16);
  if (!v14) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v15 = *(void *)(type metadata accessor for RawOrderFulfillment() - 8);
  uint64_t v16 = v10;
  uint64_t v17 = a3 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  unint64_t v18 = (unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  uint64_t v27 = v16;
  uint64_t v32 = (void (**)(char *, char *, uint64_t))(v16 + 32);
  uint64_t v31 = *(void *)(v15 + 72);
  v25[1] = a3;
  swift_bridgeObjectRetain();
  unint64_t v19 = MEMORY[0x263F8EE78];
  uint64_t v28 = v9;
  id v29 = a1;
  uint64_t v26 = v18;
  do
  {
    a1(v17);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v19;
    }
    if ((*v18)(v8, 1, v9) == 1)
    {
      sub_24337C1BC((uint64_t)v8, (uint64_t *)&unk_26B0C8E20);
    }
    else
    {
      unint64_t v20 = *v32;
      unint64_t v21 = v30;
      (*v32)(v30, v8, v9);
      v20(v33, v21, v9);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v19 = sub_2437762C8(0, *(void *)(v19 + 16) + 1, 1, v19);
      }
      unint64_t v23 = *(void *)(v19 + 16);
      unint64_t v22 = *(void *)(v19 + 24);
      if (v23 >= v22 >> 1) {
        unint64_t v19 = sub_2437762C8(v22 > 1, v23 + 1, 1, v19);
      }
      *(void *)(v19 + 16) = v23 + 1;
      uint64_t v9 = v28;
      v20((char *)(v19+ ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))+ *(void *)(v27 + 72) * v23), v33, v28);
      a1 = v29;
      unint64_t v18 = v26;
    }
    v17 += v31;
    --v14;
  }
  while (v14);
  swift_bridgeObjectRelease();
  return v19;
}

void *sub_2437A25C8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v2 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
  uint64_t v3 = (void *)MEMORY[0x263F8EE78];
  do
  {
    uint64_t v5 = *v2;
    if (*v2)
    {
      uint64_t v6 = *(v2 - 1);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v3 = sub_24377644C(0, v3[2] + 1, 1, v3);
      }
      unint64_t v8 = v3[2];
      unint64_t v7 = v3[3];
      if (v8 >= v7 >> 1) {
        uint64_t v3 = sub_24377644C((void *)(v7 > 1), v8 + 1, 1, v3);
      }
      v3[2] = v8 + 1;
      uint64_t v4 = &v3[2 * v8];
      v4[4] = v6;
      v4[5] = v5;
    }
    v2 += 16;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

void *sub_2437A26CC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v3 = type metadata accessor for RawOrderPaymentTransaction();
  uint64_t v4 = a1
     + ((*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80));
  uint64_t v5 = *(void *)(*(void *)(v3 - 8) + 72);
  swift_bridgeObjectRetain();
  uint64_t v6 = (void *)MEMORY[0x263F8EE78];
  do
  {
    unint64_t v8 = (uint64_t *)(v4 + *(int *)(v3 + 40));
    uint64_t v9 = v8[1];
    if (v9)
    {
      uint64_t v10 = *v8;
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v6 = sub_24377644C(0, v6[2] + 1, 1, v6);
      }
      unint64_t v12 = v6[2];
      unint64_t v11 = v6[3];
      if (v12 >= v11 >> 1) {
        uint64_t v6 = sub_24377644C((void *)(v11 > 1), v12 + 1, 1, v6);
      }
      void v6[2] = v12 + 1;
      unint64_t v7 = &v6[2 * v12];
      v7[4] = v10;
      v7[5] = v9;
    }
    v4 += v5;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v6;
}

void *sub_2437A2844(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v3 = type metadata accessor for RawOrderReturn();
  uint64_t v4 = a1
     + ((*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80));
  uint64_t v5 = *(void *)(*(void *)(v3 - 8) + 72);
  swift_bridgeObjectRetain();
  uint64_t v6 = (void *)MEMORY[0x263F8EE78];
  do
  {
    unint64_t v8 = (uint64_t *)(v4 + *(int *)(v3 + 56));
    uint64_t v9 = v8[1];
    if (v9)
    {
      uint64_t v10 = *v8;
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v6 = sub_24377644C(0, v6[2] + 1, 1, v6);
      }
      unint64_t v12 = v6[2];
      unint64_t v11 = v6[3];
      if (v12 >= v11 >> 1) {
        uint64_t v6 = sub_24377644C((void *)(v11 > 1), v12 + 1, 1, v6);
      }
      void v6[2] = v12 + 1;
      unint64_t v7 = &v6[2 * v12];
      v7[4] = v10;
      v7[5] = v9;
    }
    v4 += v5;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_2437A29BC(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  if (*(void *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 5; ; ++i)
  {
    uint64_t v4 = i - 3;
    if (__OFADD__(i - 4, 1)) {
      break;
    }
    BOOL v6 = *(void *)(a2 + 8 * i) == result;
    BOOL v5 = v6;
    BOOL v6 = v6 || v4 == v2;
    if (v6) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

uint64_t RawECommerceOrderContent.ContentItem.lineItems.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for RawOrderReturn();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (uint64_t *)((char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for RawOrderPickupFulfillment();
  MEMORY[0x270FA5388](v5 - 8);
  unint64_t v7 = (uint64_t *)((char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for RawOrderShippingFulfillment();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (uint64_t *)((char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for RawOrderFulfillment();
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v26 - v15;
  uint64_t v17 = type metadata accessor for RawECommerceOrderContent.ContentItem(0);
  MEMORY[0x270FA5388](v17);
  unint64_t v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2437A6D74(v1, (uint64_t)v19, type metadata accessor for RawECommerceOrderContent.ContentItem);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2437A6D0C((uint64_t)v19, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for RawOrderReturn);
    uint64_t v20 = *v4;
    swift_bridgeObjectRetain();
    unint64_t v21 = type metadata accessor for RawOrderReturn;
    uint64_t v22 = (uint64_t)v4;
  }
  else
  {
    sub_2437A6D0C((uint64_t)v19, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for RawOrderFulfillment);
    sub_2437A6D74((uint64_t)v16, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for RawOrderFulfillment);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2437A6D0C((uint64_t)v14, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for RawOrderPickupFulfillment);
      uint64_t v20 = *v7;
      swift_bridgeObjectRetain();
      unint64_t v23 = type metadata accessor for RawOrderPickupFulfillment;
      uint64_t v24 = (uint64_t)v7;
    }
    else
    {
      sub_2437A6D0C((uint64_t)v14, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for RawOrderShippingFulfillment);
      uint64_t v20 = *v10;
      swift_bridgeObjectRetain();
      unint64_t v23 = type metadata accessor for RawOrderShippingFulfillment;
      uint64_t v24 = (uint64_t)v10;
    }
    sub_2437A6DDC(v24, (uint64_t (*)(void))v23);
    unint64_t v21 = type metadata accessor for RawOrderFulfillment;
    uint64_t v22 = (uint64_t)v16;
  }
  sub_2437A6DDC(v22, (uint64_t (*)(void))v21);
  return v20;
}

uint64_t RawECommerceOrderContent.fullyQualifiedOrderIdentifier.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for RawECommerceOrderContent(0);
  uint64_t v4 = *(int *)(v3 + 24);
  uint64_t v5 = (uint64_t *)(v1 + *(int *)(v3 + 20));
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  uint64_t v8 = v1 + v4;
  uint64_t v9 = *(void *)(v1 + v4);
  uint64_t v10 = *(void *)(v8 + 8);
  *a1 = v7;
  a1[1] = v6;
  a1[2] = v9;
  a1[3] = v10;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t RawECommerceOrderContent.showsAsActiveUntilDate.getter@<X0>(uint64_t a1@<X8>)
{
  if (RawECommerceOrderContent.isActive.getter())
  {
    uint64_t v2 = sub_243957400();
    uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
    uint64_t v4 = v2;
    uint64_t v5 = a1;
    uint64_t v6 = 1;
  }
  else
  {
    sub_2437AA628(a1);
    uint64_t v7 = sub_243957400();
    uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v4 = v7;
    uint64_t v5 = a1;
    uint64_t v6 = 0;
  }

  return v3(v5, v6, 1, v4);
}

uint64_t RawECommerceOrderContent.automaticUpdatesEnabledUntilDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v172 = (char *)a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CC60);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v166 = (char *)&v159 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v192 = type metadata accessor for RawOrderReturn();
  uint64_t v4 = *(void *)(v192 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v192);
  uint64_t v180 = (uint64_t)&v159 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v159 - v8;
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v201 = (uint64_t)&v159 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v159 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9FD30);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  v203 = (char *)&v159 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  v190 = (char *)&v159 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v195 = (uint64_t)&v159 - v20;
  MEMORY[0x270FA5388](v19);
  v202 = (uint64_t *)((char *)&v159 - v21);
  uint64_t v173 = sub_243957400();
  uint64_t v197 = *(void *)(v173 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v173);
  v198 = (char *)&v159 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v193 = (char *)&v159 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v170 = (uint64_t)&v159 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  v189 = (char *)&v159 - v29;
  MEMORY[0x270FA5388](v28);
  v191 = (char *)&v159 - v30;
  uint64_t v176 = type metadata accessor for RawECommerceOrderContent(0);
  uint64_t v31 = MEMORY[0x270FA5388](v176);
  uint64_t v169 = (uint64_t)&v159 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v177 = (uint64_t)&v159 - v34;
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v185 = (uint64_t)&v159 - v36;
  MEMORY[0x270FA5388](v35);
  uint64_t v179 = (uint64_t)&v159 - v37;
  uint64_t v194 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
  uint64_t v165 = *(void *)(v194 - 8);
  uint64_t v38 = MEMORY[0x270FA5388](v194);
  uint64_t v199 = (uint64_t)&v159 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  v200 = (char *)&v159 - v41;
  uint64_t v42 = MEMORY[0x270FA5388](v40);
  uint64_t v168 = (uint64_t)&v159 - v43;
  uint64_t v44 = MEMORY[0x270FA5388](v42);
  int v167 = (char *)&v159 - v45;
  uint64_t v46 = MEMORY[0x270FA5388](v44);
  uint64_t v161 = (uint64_t)&v159 - v47;
  uint64_t v48 = MEMORY[0x270FA5388](v46);
  uint64_t v50 = (char *)&v159 - v49;
  uint64_t v51 = MEMORY[0x270FA5388](v48);
  uint64_t v53 = (char *)&v159 - v52;
  uint64_t v54 = MEMORY[0x270FA5388](v51);
  uint64_t v178 = (char *)&v159 - v55;
  uint64_t v56 = MEMORY[0x270FA5388](v54);
  v196 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v159 - v57);
  uint64_t v58 = MEMORY[0x270FA5388](v56);
  id v60 = (char *)&v159 - v59;
  uint64_t v61 = MEMORY[0x270FA5388](v58);
  uint64_t v63 = (char *)&v159 - v62;
  uint64_t v64 = MEMORY[0x270FA5388](v61);
  uint64_t v66 = (char *)&v159 - v65;
  MEMORY[0x270FA5388](v64);
  uint64_t v68 = (char *)&v159 - v67;
  uint64_t v69 = RawECommerceOrderContent.isActive.getter();
  if (v69)
  {
    uint64_t v70 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v197 + 56);
    uint64_t v71 = (uint64_t)v172;
    uint64_t v72 = v173;
    return v70(v71, 1, 1, v72);
  }
  v184 = v60;
  uint64_t v175 = v53;
  uint64_t v160 = v63;
  uint64_t v171 = v66;
  uint64_t v162 = v50;
  uint64_t v74 = v176;
  uint64_t v75 = *(void *)(v1 + *(int *)(v176 + 68));
  MEMORY[0x270FA5388](v69);
  *(&v159 - 2) = v1;
  swift_bridgeObjectRetain();
  unint64_t v76 = sub_2437A228C((void (*)(void))sub_2437B9A08, (uint64_t)(&v159 - 4), v75);
  swift_bridgeObjectRelease();
  sub_2435781A4(v76, v68);
  swift_bridgeObjectRelease();
  uint64_t v77 = *(void *)(v1 + *(int *)(v74 + 64));
  uint64_t v164 = v1;
  sub_2437A6D74(v1, v179, type metadata accessor for RawECommerceOrderContent);
  uint64_t v78 = *(void *)(v77 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v163 = v68;
  uint64_t v79 = v192;
  uint64_t v80 = v173;
  uint64_t v81 = (uint64_t)v178;
  uint64_t v204 = v78;
  uint64_t v82 = (uint64_t)v196;
  if (v78)
  {
    unint64_t v83 = 0;
    while (v83 < *(void *)(v77 + 16))
    {
      unint64_t v84 = v83 + 1;
      sub_2437A6D74(v77+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v83, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for RawOrderReturn);
      if (v13[8] > 3u)
      {
        uint64_t v87 = (uint64_t)v13;
        uint64_t v85 = (unsigned int (*)(void, void, void))v202;
        sub_2437A6D0C(v87, (uint64_t)v202, (uint64_t (*)(void))type metadata accessor for RawOrderReturn);
        uint64_t v86 = v79;
        uint64_t v186 = *(void (**)(unsigned int (*)(void, void, void), void, uint64_t, uint64_t))(v4 + 56);
        v186(v85, 0, 1, v79);
        goto LABEL_12;
      }
      uint64_t result = sub_2437A6DDC((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for RawOrderReturn);
      unint64_t v83 = v84;
      if (v204 == v84) {
        goto LABEL_10;
      }
    }
    goto LABEL_63;
  }
LABEL_10:
  uint64_t v85 = (unsigned int (*)(void, void, void))v202;
  uint64_t v86 = v79;
  uint64_t v186 = *(void (**)(unsigned int (*)(void, void, void), void, uint64_t, uint64_t))(v4 + 56);
  v186((unsigned int (*)(void, void, void))v202, 1, 1, v79);
  unint64_t v84 = v204;
LABEL_12:
  uint64_t v88 = v195;
  sub_24337BF80((uint64_t)v85, v195, &qword_268D9FD30);
  v187 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  uint64_t v188 = v4 + 48;
  int v89 = v187(v88, 1, v86);
  uint64_t v90 = v201;
  if (v89 == 1)
  {
    uint64_t v91 = (uint64_t)v184;
    v196 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v197 + 56);
    v196(v184, 1, 1, v80);
    uint64_t v92 = *(void **)(v197 + 48);
    uint64_t v93 = (v197 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  }
  else
  {
    sub_2437A6D0C(v88, v201, (uint64_t (*)(void))type metadata accessor for RawOrderReturn);
    sub_24337C254(v90 + *(int *)(v86 + 40), v82, (uint64_t *)&unk_26B0C8E20);
    uint64_t v94 = v185;
    sub_2437A6D74(v179, v185, type metadata accessor for RawECommerceOrderContent);
    uint64_t v93 = (v197 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
    v202 = *(void **)(v197 + 48);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v202)(v82, 1, v80) == 1)
    {
      uint64_t v95 = (uint64_t)v184;
      (*(void (**)(char *, uint64_t, uint64_t))(v197 + 16))(v184, v94 + *(int *)(v176 + 48), v80);
      sub_24337C1BC(v82, (uint64_t *)&unk_26B0C8E20);
    }
    else
    {
      uint64_t v95 = (uint64_t)v184;
      (*(void (**)(char *, uint64_t, uint64_t))(v197 + 32))(v184, v82, v80);
    }
    uint64_t v96 = v94;
    uint64_t v91 = v95;
    sub_2437A6DDC(v96, type metadata accessor for RawECommerceOrderContent);
    sub_2437A6DDC(v201, (uint64_t (*)(void))type metadata accessor for RawOrderReturn);
    v196 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v197 + 56);
    v196((char *)v95, 0, 1, v80);
    uint64_t v92 = v202;
  }
  uint64_t v201 = v93;
  v202 = v92;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v92)(v91, 1, v80) != 1)
  {
    char v104 = *(void (**)(char *, char *, uint64_t))(v197 + 32);
    uint64_t v105 = v91;
    uint64_t v106 = v197 + 32;
    uint64_t v195 = v197 + 32;
    v183 = v104;
    uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v104)(v191, v105, v80);
    v184 = (char *)(v4 + 56);
    uint64_t v174 = (void (**)(char *, uint64_t, uint64_t))(v106 - 16);
    uint64_t v185 = v106 + 24;
    v182 = (void (**)(char *, uint64_t))(v106 - 24);
    uint64_t v107 = (uint64_t)v203;
    uint64_t v108 = (uint64_t)v190;
    uint64_t v181 = v4;
    while (v84 == v204)
    {
LABEL_28:
      uint64_t v111 = v192;
      v186((unsigned int (*)(void, void, void))v108, 1, 1, v192);
      unint64_t v84 = v204;
LABEL_30:
      sub_24337BF80(v108, v107, &qword_268D9FD30);
      if (v187(v107, 1, v111) == 1)
      {
        v196((char *)v81, 1, 1, v80);
        uint64_t v112 = v183;
      }
      else
      {
        uint64_t v113 = v180;
        sub_2437A6D0C(v107, v180, (uint64_t (*)(void))type metadata accessor for RawOrderReturn);
        uint64_t v114 = v80;
        uint64_t v115 = (uint64_t)v175;
        sub_24337C254(v113 + *(int *)(v111 + 40), (uint64_t)v175, (uint64_t *)&unk_26B0C8E20);
        uint64_t v116 = v177;
        sub_2437A6D74(v179, v177, type metadata accessor for RawECommerceOrderContent);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v202)(v115, 1, v114) == 1)
        {
          uint64_t v117 = v178;
          (*v174)(v178, v116 + *(int *)(v176 + 48), v114);
          sub_24337C1BC(v115, (uint64_t *)&unk_26B0C8E20);
          uint64_t v80 = v114;
          uint64_t v81 = (uint64_t)v117;
          uint64_t v112 = v183;
        }
        else
        {
          uint64_t v118 = v178;
          uint64_t v112 = v183;
          v183(v178, (char *)v115, v114);
          uint64_t v80 = v114;
          uint64_t v81 = (uint64_t)v118;
          uint64_t v113 = v180;
        }
        sub_2437A6DDC(v116, type metadata accessor for RawECommerceOrderContent);
        sub_2437A6DDC(v113, (uint64_t (*)(void))type metadata accessor for RawOrderReturn);
        v196((char *)v81, 0, 1, v80);
      }
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v202)(v81, 1, v80) == 1)
      {
        sub_24337C1BC(v81, (uint64_t *)&unk_26B0C8E20);
        uint64_t v123 = v112;
        uint64_t v97 = (uint64_t)v160;
        v123(v160, v191, v80);
        v196((char *)v97, 0, 1, v80);
        swift_bridgeObjectRelease();
        uint64_t v98 = v164;
        uint64_t v99 = v170;
        uint64_t v100 = v193;
        uint64_t v103 = (uint64_t)v171;
        uint64_t v101 = (uint64_t)v200;
        uint64_t v102 = v179;
        goto LABEL_40;
      }
      uint64_t v119 = v189;
      v112(v189, (char *)v81, v80);
      sub_2437B99A4((unint64_t *)&qword_268D97D28, MEMORY[0x263F07490]);
      uint64_t v120 = v191;
      char v121 = sub_243958240();
      uint64_t v122 = *v182;
      if (v121)
      {
        v122(v120, v80);
        uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v112)(v120, v119, v80);
      }
      else
      {
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v122)(v119, v80);
      }
      uint64_t v107 = (uint64_t)v203;
      uint64_t v108 = (uint64_t)v190;
      uint64_t v4 = v181;
    }
    while (v84 < *(void *)(v77 + 16))
    {
      unint64_t v109 = v84 + 1;
      sub_2437A6D74(v77+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v84, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for RawOrderReturn);
      if (v9[8] > 3u)
      {
        sub_2437A6D0C((uint64_t)v9, v108, (uint64_t (*)(void))type metadata accessor for RawOrderReturn);
        uint64_t v111 = v192;
        v186((unsigned int (*)(void, void, void))v108, 0, 1, v192);
        ++v84;
        uint64_t v107 = (uint64_t)v203;
        goto LABEL_30;
      }
      uint64_t result = sub_2437A6DDC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for RawOrderReturn);
      ++v84;
      BOOL v110 = v204 == v109;
      uint64_t v107 = (uint64_t)v203;
      if (v110) {
        goto LABEL_28;
      }
    }
    __break(1u);
LABEL_63:
    __break(1u);
    return result;
  }
  sub_24337C1BC(v91, (uint64_t *)&unk_26B0C8E20);
  uint64_t v97 = (uint64_t)v160;
  v196(v160, 1, 1, v80);
  swift_bridgeObjectRelease();
  uint64_t v98 = v164;
  uint64_t v99 = v170;
  uint64_t v100 = v193;
  uint64_t v101 = (uint64_t)v200;
  uint64_t v102 = v179;
  uint64_t v103 = (uint64_t)v171;
LABEL_40:
  sub_2437A6DDC(v102, type metadata accessor for RawECommerceOrderContent);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v202)(v97, 1, v80) == 1)
  {
    sub_24337C1BC(v97, (uint64_t *)&unk_26B0C8E20);
    uint64_t v124 = 1;
    uint64_t v125 = v197;
  }
  else
  {
    Date.noon.getter(v99);
    uint64_t v126 = *(void (**)(uint64_t, uint64_t))(v197 + 8);
    v126(v97, v80);
    Date.advancedByDays(_:)(1, v103);
    v126(v99, v80);
    uint64_t v125 = v197;
    uint64_t v124 = 0;
  }
  uint64_t v127 = v176;
  uint64_t v128 = (uint64_t)v166;
  uint64_t v129 = v125 + 56;
  v196((char *)v103, v124, 1, v80);
  sub_24337C254(v98 + *(int *)(v127 + 60), v128, &qword_268D9CC60);
  uint64_t v130 = type metadata accessor for RawOrderReturnInfo();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v130 - 8) + 48))(v128, 1, v130) == 1)
  {
    uint64_t v131 = &qword_268D9CC60;
    uint64_t v132 = v128;
LABEL_47:
    sub_24337C1BC(v132, v131);
    uint64_t v134 = 1;
    uint64_t v135 = (uint64_t)v162;
    goto LABEL_49;
  }
  uint64_t v133 = v161;
  sub_24337C254(v128 + *(int *)(v130 + 28), v161, (uint64_t *)&unk_26B0C8E20);
  sub_2437A6DDC(v128, (uint64_t (*)(void))type metadata accessor for RawOrderReturnInfo);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v202)(v133, 1, v80) == 1)
  {
    uint64_t v131 = (uint64_t *)&unk_26B0C8E20;
    uint64_t v132 = v133;
    goto LABEL_47;
  }
  Date.noon.getter(v99);
  uint64_t v136 = *(void (**)(uint64_t, uint64_t))(v197 + 8);
  v136(v133, v80);
  uint64_t v137 = (uint64_t)v162;
  Date.advancedByDays(_:)(5, (uint64_t)v162);
  uint64_t v138 = v99;
  uint64_t v135 = v137;
  v136(v138, v80);
  uint64_t v134 = 0;
LABEL_49:
  uint64_t v139 = v165;
  uint64_t v195 = v129;
  v196((char *)v135, v134, 1, v80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268D9FD38);
  uint64_t v140 = *(void *)(v139 + 72);
  unint64_t v141 = (*(unsigned __int8 *)(v139 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v139 + 80);
  uint64_t v142 = swift_allocObject();
  *(_OWORD *)(v142 + 16) = xmmword_243961D00;
  uint64_t v204 = v142;
  uint64_t v143 = v142 + v141;
  sub_24337C254((uint64_t)v163, v142 + v141, (uint64_t *)&unk_26B0C8E20);
  sub_24337C254((uint64_t)v171, v143 + v140, (uint64_t *)&unk_26B0C8E20);
  sub_24337C254(v135, v143 + 2 * v140, (uint64_t *)&unk_26B0C8E20);
  uint64_t v144 = (void (**)(char *, uint64_t, uint64_t))(v197 + 32);
  uint64_t v145 = MEMORY[0x263F8EE78];
  uint64_t v146 = 3;
  v203 = (char *)v143;
  do
  {
    sub_24337C254(v143, v101, (uint64_t *)&unk_26B0C8E20);
    uint64_t v147 = v101;
    uint64_t v148 = v199;
    sub_24337BF80(v147, v199, (uint64_t *)&unk_26B0C8E20);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v202)(v148, 1, v80) == 1)
    {
      sub_24337C1BC(v148, (uint64_t *)&unk_26B0C8E20);
    }
    else
    {
      uint64_t v149 = *v144;
      (*v144)(v100, v148, v80);
      v149(v198, (uint64_t)v100, v80);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v145 = sub_2437762C8(0, *(void *)(v145 + 16) + 1, 1, v145);
      }
      uint64_t v150 = v197;
      unint64_t v152 = *(void *)(v145 + 16);
      unint64_t v151 = *(void *)(v145 + 24);
      if (v152 >= v151 >> 1)
      {
        uint64_t v153 = sub_2437762C8(v151 > 1, v152 + 1, 1, v145);
        uint64_t v150 = v197;
        uint64_t v145 = v153;
      }
      *(void *)(v145 + 16) = v152 + 1;
      v149((char *)(v145+ ((*(unsigned __int8 *)(v150 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v150 + 80))+ *(void *)(v150 + 72) * v152), (uint64_t)v198, v80);
      uint64_t v100 = v193;
    }
    uint64_t v101 = (uint64_t)v200;
    v143 += v140;
    --v146;
  }
  while (v146);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v154 = v167;
  sub_2435781A4(v145, v167);
  swift_bridgeObjectRelease();
  uint64_t v155 = v168;
  sub_24337C254((uint64_t)v154, v168, (uint64_t *)&unk_26B0C8E20);
  uint64_t v156 = v169;
  sub_2437A6D74(v164, v169, type metadata accessor for RawECommerceOrderContent);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v202)(v155, 1, v80) == 1)
  {
    uint64_t v157 = v170;
    Date.noon.getter(v170);
    uint64_t v158 = (uint64_t)v172;
    Date.advancedByDays(_:)(1, (uint64_t)v172);
    (*(void (**)(uint64_t, uint64_t))(v197 + 8))(v157, v80);
    sub_2437A6DDC(v156, type metadata accessor for RawECommerceOrderContent);
    sub_24337C1BC((uint64_t)v154, (uint64_t *)&unk_26B0C8E20);
    sub_24337C1BC((uint64_t)v162, (uint64_t *)&unk_26B0C8E20);
    sub_24337C1BC((uint64_t)v171, (uint64_t *)&unk_26B0C8E20);
    sub_24337C1BC((uint64_t)v163, (uint64_t *)&unk_26B0C8E20);
    sub_24337C1BC(v155, (uint64_t *)&unk_26B0C8E20);
  }
  else
  {
    sub_2437A6DDC(v156, type metadata accessor for RawECommerceOrderContent);
    sub_24337C1BC((uint64_t)v154, (uint64_t *)&unk_26B0C8E20);
    sub_24337C1BC((uint64_t)v162, (uint64_t *)&unk_26B0C8E20);
    sub_24337C1BC((uint64_t)v171, (uint64_t *)&unk_26B0C8E20);
    sub_24337C1BC((uint64_t)v163, (uint64_t *)&unk_26B0C8E20);
    uint64_t v158 = (uint64_t)v172;
    (*v144)(v172, v155, v80);
  }
  return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v196)(v158, 0, 1, v80);
}

_WORD *RawECommerceOrderContent.DecodingConfiguration.init(schemaVersion:)@<X0>(_WORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_WORD *)a2 = *result;
  *(unsigned char *)(a2 + 2) = 0;
  return result;
}

uint64_t RawECommerceOrderContent.init(from:configuration:)@<X0>(void *a1@<X0>, unsigned __int16 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v166 = a1;
  uint64_t v139 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v137 = (uint64_t)&v132 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CC58);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v136 = (uint64_t)&v132 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CC60);
  MEMORY[0x270FA5388](v8 - 8);
  *(void *)&long long v140 = (char *)&v132 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_243957010();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v138 = (char *)&v132 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  *(void *)&long long v141 = (char *)&v132 - v14;
  uint64_t v159 = sub_243957400();
  uint64_t v162 = *(void *)(v159 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v159);
  *(void *)&long long v142 = (char *)&v132 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  *(void *)&long long v143 = (char *)&v132 - v17;
  uint64_t v146 = type metadata accessor for RawMerchant();
  MEMORY[0x270FA5388](v146);
  uint64_t v147 = (char *)&v132 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9FD40);
  uint64_t v150 = *(void *)(v145 - 8);
  MEMORY[0x270FA5388](v145);
  unint64_t v151 = (char *)&v132 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (int *)type metadata accessor for RawECommerceOrderContent(0);
  uint64_t v21 = (int *)MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v132 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v24 = *a2;
  int v174 = *((unsigned __int8 *)a2 + 2);
  uint64_t v25 = &v23[v21[7]];
  *(void *)uint64_t v25 = 0;
  *((void *)v25 + 1) = 0;
  uint64_t v165 = (uint64_t *)v25;
  uint64_t v144 = v21[8];
  v23[v144] = 2;
  uint64_t v26 = &v23[v21[10]];
  *(void *)uint64_t v26 = 0;
  *((void *)v26 + 1) = 0;
  uint64_t v163 = (uint64_t *)v26;
  uint64_t v27 = (uint64_t *)&v23[v21[14]];
  *((_OWORD *)v27 + 3) = 0u;
  *((_OWORD *)v27 + 4) = 0u;
  *((_OWORD *)v27 + 1) = 0u;
  *((_OWORD *)v27 + 2) = 0u;
  uint64_t v158 = v27;
  *(_OWORD *)uint64_t v27 = 0u;
  uint64_t v28 = (uint64_t)&v23[v21[15]];
  uint64_t v29 = type metadata accessor for RawOrderReturnInfo();
  uint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56);
  uint64_t v157 = v28;
  v30(v28, 1, 1, v29);
  uint64_t v31 = (uint64_t *)&v23[v20[18]];
  *(_OWORD *)uint64_t v31 = xmmword_243974C10;
  *((_OWORD *)v31 + 1) = 0u;
  *((_OWORD *)v31 + 2) = 0u;
  *((_OWORD *)v31 + 3) = 0u;
  uint64_t v156 = v31;
  *((_OWORD *)v31 + 4) = 0u;
  uint64_t v32 = &v23[v20[22]];
  *((void *)v32 + 6) = 0;
  *((_OWORD *)v32 + 1) = 0u;
  *((_OWORD *)v32 + 2) = 0u;
  unint64_t v152 = (uint64_t *)v32;
  *(_OWORD *)uint64_t v32 = 0u;
  uint64_t v33 = (uint64_t)&v23[v20[23]];
  uint64_t v34 = type metadata accessor for RawOrderProvider();
  uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56);
  uint64_t v153 = v33;
  v35(v33, 1, 1, v34);
  uint64_t v36 = (uint64_t)&v23[v20[24]];
  uint64_t v148 = v11;
  uint64_t v39 = *(void (**)(void))(v11 + 56);
  uint64_t v37 = v11 + 56;
  uint64_t v38 = v39;
  uint64_t v154 = v36;
  uint64_t v149 = v10;
  v39();
  uint64_t v40 = &v23[v20[25]];
  *(void *)uint64_t v40 = 0;
  *((void *)v40 + 1) = 0;
  uint64_t v155 = v40;
  uint64_t v160 = v20;
  uint64_t v161 = v23;
  uint64_t v41 = v20[26];
  int v42 = v24;
  *(_WORD *)&v23[v41] = v24;
  uint64_t v43 = v151;
  __swift_project_boxed_opaque_existential_1(v166, v166[3]);
  sub_2437AEC2C();
  id v44 = v164;
  sub_243959BA0();
  if (v44)
  {
    id v164 = v44;
    uint64_t v49 = v159;
    uint64_t v48 = v160;
    uint64_t v50 = (uint64_t)v161;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v166);
    int v51 = 0;
    int v52 = 0;
    LODWORD(v150) = 0;
    LODWORD(v151) = 0;
    int v53 = 0;
    int v54 = 0;
    int v55 = 0;
    int v56 = 0;
    goto LABEL_4;
  }
  uint64_t v45 = v144;
  uint64_t v135 = v29;
  uint64_t v132 = v34;
  uint64_t v133 = v38;
  uint64_t v134 = v37;
  LOBYTE(v169) = 0;
  sub_2437B99A4(&qword_268D9FD50, (void (*)(uint64_t))type metadata accessor for RawMerchant);
  uint64_t v46 = v147;
  uint64_t v47 = v145;
  sub_2439596F0();
  LODWORD(v146) = v42;
  uint64_t v58 = (uint64_t)v46;
  uint64_t v50 = (uint64_t)v161;
  sub_2437A6D0C(v58, (uint64_t)v161, (uint64_t (*)(void))type metadata accessor for RawMerchant);
  LOBYTE(v169) = 1;
  uint64_t v59 = v43;
  uint64_t v60 = sub_2439596A0();
  uint64_t v49 = v159;
  uint64_t v48 = v160;
  uint64_t v61 = (uint64_t *)(v50 + v160[5]);
  *uint64_t v61 = v60;
  v61[1] = v62;
  LOBYTE(v169) = 2;
  uint64_t v63 = sub_2439596A0();
  uint64_t v64 = v150;
  uint64_t v65 = (uint64_t *)(v50 + v48[6]);
  *uint64_t v65 = v63;
  v65[1] = v66;
  LOBYTE(v169) = 3;
  uint64_t v67 = sub_243959620();
  uint64_t v68 = v165;
  *uint64_t v165 = v67;
  v68[1] = v69;
  LOBYTE(v167) = 4;
  sub_2437AEC80();
  sub_243959660();
  *(unsigned char *)(v50 + v45) = v169;
  LOBYTE(v167) = 5;
  sub_2437AECD4();
  sub_2439596F0();
  *(unsigned char *)(v50 + v48[9]) = v169;
  LOBYTE(v169) = 6;
  uint64_t v71 = sub_243959620();
  uint64_t v72 = v163;
  *uint64_t v163 = v71;
  v72[1] = v73;
  LOBYTE(v169) = 7;
  sub_2437B99A4(&qword_26B0C5B80, MEMORY[0x263F07490]);
  sub_2439596F0();
  id v164 = 0;
  uint64_t v74 = v50 + v48[11];
  uint64_t v147 = *(char **)(v162 + 32);
  ((void (*)(uint64_t, void, uint64_t))v147)(v74, v143, v49);
  LOBYTE(v169) = 8;
  id v75 = v164;
  sub_2439596F0();
  id v164 = v75;
  if (v75)
  {
    (*(void (**)(char *, uint64_t))(v64 + 8))(v59, v47);
    int v52 = 0;
    LODWORD(v150) = 0;
    LODWORD(v151) = 0;
    LODWORD(v147) = 1;
    int v51 = 1;
    uint64_t v70 = v166;
LABEL_22:
    int v53 = 0;
    goto LABEL_23;
  }
  ((void (*)(uint64_t, void, uint64_t))v147)(v50 + v48[12], v142, v49);
  LOBYTE(v169) = 9;
  sub_2437B99A4(&qword_268D97150, MEMORY[0x263F06EA8]);
  unint64_t v76 = v59;
  id v77 = v164;
  sub_2439596F0();
  id v164 = v77;
  if (v77)
  {
    (*(void (**)(char *, uint64_t))(v150 + 8))(v59, v47);
    LODWORD(v150) = 0;
    LODWORD(v151) = 0;
    LODWORD(v147) = 1;
    int v51 = 1;
    int v52 = 1;
LABEL_39:
    uint64_t v70 = v166;
    uint64_t v49 = v159;
    uint64_t v48 = v160;
    uint64_t v50 = (uint64_t)v161;
    goto LABEL_22;
  }
  uint64_t v78 = &v161[v160[13]];
  uint64_t v147 = *(char **)(v148 + 32);
  ((void (*)(char *, void, uint64_t))v147)(v78, v141, v149);
  char v175 = 10;
  LOWORD(v167) = v146;
  id v79 = v164;
  char v80 = sub_243959750();
  id v164 = v79;
  if (v79)
  {

    id v164 = 0;
    long long v81 = 0uLL;
LABEL_32:
    long long v82 = 0uLL;
    long long v83 = 0uLL;
    long long v84 = 0uLL;
    long long v85 = 0uLL;
    goto LABEL_33;
  }
  long long v81 = 0uLL;
  if (v80) {
    goto LABEL_32;
  }
  sub_2437AEE74();
  id v93 = v164;
  sub_243959600();
  id v164 = v93;
  if (v93) {
    goto LABEL_34;
  }
  long long v81 = v169;
  long long v82 = v170;
  long long v83 = v171;
  long long v84 = v172;
  long long v85 = v173;
LABEL_33:
  uint64_t v86 = v158;
  *(_OWORD *)uint64_t v158 = v81;
  *((_OWORD *)v86 + 1) = v82;
  *((_OWORD *)v86 + 2) = v83;
  *((_OWORD *)v86 + 3) = v84;
  *((_OWORD *)v86 + 4) = v85;
  LOBYTE(v169) = 11;
  sub_2437B99A4(&qword_268D9FD68, (void (*)(uint64_t))type metadata accessor for RawOrderReturnInfo);
  id v87 = v164;
  sub_243959660();
  id v164 = v87;
  if (v87)
  {
LABEL_34:
    (*(void (**)(char *, uint64_t))(v150 + 8))(v59, v47);
LABEL_37:
    LODWORD(v151) = 0;
    LODWORD(v147) = 1;
    int v51 = 1;
    int v52 = 1;
    uint64_t v92 = (uint64_t *)&v174;
LABEL_38:
    *((_DWORD *)v92 - 64) = 1;
    goto LABEL_39;
  }
  sub_2433865D8(v140, v157, &qword_268D9CC60);
  type metadata accessor for RawOrderReturn.DecodingConfiguration();
  uint64_t v88 = swift_allocObject();
  uint64_t v89 = MEMORY[0x263F8EE88];
  *(void *)(v88 + 16) = MEMORY[0x263F8EE88];
  uint64_t v146 = v88;
  id v90 = v164;
  uint64_t v91 = sub_2437A831C(12, v88, &qword_268D9FDE0, (void (*)(void))sub_2437B984C);
  id v164 = v90;
  if (v90)
  {
    (*(void (**)(char *, uint64_t))(v150 + 8))(v59, v47);
    swift_release();
    goto LABEL_37;
  }
  uint64_t v94 = MEMORY[0x263F8EE78];
  if (v91) {
    uint64_t v95 = v91;
  }
  else {
    uint64_t v95 = MEMORY[0x263F8EE78];
  }
  *(void *)&v161[v160[16]] = v95;
  type metadata accessor for RawOrderFulfillment.DecodingConfiguration();
  uint64_t v96 = swift_allocObject();
  *(void *)(v96 + 16) = v89;
  uint64_t v144 = v96;
  id v97 = v164;
  uint64_t v98 = sub_2437A831C(13, v96, &qword_268D9FDF8, (void (*)(void))sub_2437B97A8);
  id v164 = v97;
  if (v97)
  {
    swift_release();
    (*(void (**)(char *, uint64_t))(v150 + 8))(v59, v47);
    swift_release();
    LODWORD(v147) = 1;
    int v51 = 1;
    int v52 = 1;
    LODWORD(v150) = 1;
    uint64_t v92 = &v176;
    goto LABEL_38;
  }
  if (v98) {
    uint64_t v99 = v98;
  }
  else {
    uint64_t v99 = v94;
  }
  *(void *)&v161[v160[17]] = v99;
  LOBYTE(v167) = 14;
  sub_2437AED28();
  id v100 = v164;
  sub_243959660();
  id v164 = v100;
  if (v100) {
    goto LABEL_52;
  }
  long long v143 = v169;
  long long v142 = v170;
  long long v141 = v171;
  long long v140 = v172;
  long long v101 = v173;
  uint64_t v102 = v156;
  sub_2434C90E0(*v156, v156[1]);
  long long v103 = v142;
  *(_OWORD *)uint64_t v102 = v143;
  *((_OWORD *)v102 + 1) = v103;
  long long v104 = v140;
  *((_OWORD *)v102 + 2) = v141;
  *((_OWORD *)v102 + 3) = v104;
  *((_OWORD *)v102 + 4) = v101;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268D9B5A0);
  LOBYTE(v167) = 15;
  sub_24358517C(&qword_268D9B5A8, (void (*)(void))sub_2435850D4);
  id v105 = v164;
  sub_243959660();
  id v164 = v105;
  if (v105)
  {
LABEL_52:
    (*(void (**)(char *, uint64_t))(v150 + 8))(v59, v47);
    swift_release();
    swift_release();
    int v54 = 0;
    int v55 = 0;
    int v56 = 0;
LABEL_53:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v166);
    uint64_t v50 = (uint64_t)v161;
    sub_2437A6DDC((uint64_t)v161, (uint64_t (*)(void))type metadata accessor for RawMerchant);
    uint64_t v48 = v160;
    swift_bridgeObjectRelease();
    int v51 = 1;
    int v52 = 1;
    LODWORD(v150) = 1;
    LODWORD(v151) = 1;
    int v53 = 1;
    uint64_t v49 = v159;
LABEL_24:
    swift_bridgeObjectRelease();
LABEL_4:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v51) {
      (*(void (**)(uint64_t, uint64_t))(v162 + 8))(v50 + v48[11], v49);
    }
    if (v52) {
      (*(void (**)(uint64_t, uint64_t))(v162 + 8))(v50 + v48[12], v49);
    }
    if (v150) {
      (*(void (**)(uint64_t, uint64_t))(v148 + 8))(v50 + v48[13], v149);
    }
    sub_24364AE5C(*v158, v158[1], v158[2], v158[3], v158[4], v158[5]);
    sub_24337C1BC(v157, &qword_268D9CC60);
    if (v151) {
      swift_bridgeObjectRelease();
    }
    if (v53) {
      swift_bridgeObjectRelease();
    }
    sub_2434C90E0(*v156, v156[1]);
    if (v54)
    {
      swift_bridgeObjectRelease();
      if (!v55)
      {
LABEL_16:
        if (!v56)
        {
LABEL_18:
          sub_24364CC94(*v152, v152[1], v152[2], v152[3], v152[4]);
          sub_24337C1BC(v153, &qword_268D9CC58);
          sub_24337C1BC(v154, &qword_26B0C98A0);
          return swift_bridgeObjectRelease();
        }
LABEL_17:
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
    }
    else if (!v55)
    {
      goto LABEL_16;
    }
    swift_bridgeObjectRelease();
    if (!v56) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  uint64_t v106 = v169;
  if (!(void)v169) {
    uint64_t v106 = v94;
  }
  *(void *)&v161[v160[19]] = v106;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268D9FD78);
  LOBYTE(v167) = 18;
  sub_2437AED7C();
  id v107 = v164;
  sub_243959660();
  id v164 = v107;
  if (v107)
  {
    (*(void (**)(char *, uint64_t))(v150 + 8))(v59, v47);
    swift_release();
    swift_release();
    int v55 = 0;
    int v56 = 0;
    int v54 = 1;
    goto LABEL_53;
  }
  uint64_t v108 = v169;
  if (!(void)v169) {
    uint64_t v108 = v94;
  }
  *(void *)&v161[v160[20]] = v108;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C7148);
  LOBYTE(v167) = 19;
  sub_243388214((unint64_t *)&qword_268D973B8);
  id v109 = v164;
  sub_243959660();
  id v164 = v109;
  if (v109)
  {
    (*(void (**)(char *, uint64_t))(v150 + 8))(v59, v47);
    swift_release();
    swift_release();
    int v56 = 0;
    int v54 = 1;
    int v55 = 1;
    goto LABEL_53;
  }
  uint64_t v110 = v169;
  if (!(void)v169) {
    uint64_t v110 = v94;
  }
  *(void *)&v161[v160[21]] = v110;
  LOBYTE(v167) = 20;
  sub_2437AEE20();
  id v111 = v164;
  sub_243959660();
  id v164 = v111;
  if (v111) {
    goto LABEL_67;
  }
  long long v143 = v169;
  long long v142 = v170;
  long long v141 = v171;
  uint64_t v112 = v172;
  uint64_t v113 = v152;
  sub_24364CC94(*v152, v152[1], v152[2], v152[3], v152[4]);
  long long v114 = v142;
  *(_OWORD *)uint64_t v113 = v143;
  *((_OWORD *)v113 + 1) = v114;
  *((_OWORD *)v113 + 2) = v141;
  v113[6] = v112;
  LOBYTE(v169) = 21;
  sub_2437B99A4(&qword_268D9FD98, (void (*)(uint64_t))type metadata accessor for RawOrderProvider);
  id v115 = v164;
  sub_243959660();
  id v164 = v115;
  if (v115
    || (sub_2433865D8(v136, v153, &qword_268D9CC58),
        LOBYTE(v169) = 22,
        id v116 = v164,
        sub_243959660(),
        (id v164 = v116) != 0))
  {
LABEL_67:
    (*(void (**)(char *, uint64_t))(v150 + 8))(v76, v47);
    swift_release();
    swift_release();
LABEL_68:
    int v54 = 1;
    int v55 = 1;
    int v56 = 1;
    goto LABEL_53;
  }
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v148 + 48))(v137, 1, v149) != 1)
  {
    ((void (*)(char *, uint64_t, uint64_t))v147)(v138, v137, v149);
    uint64_t v122 = sub_243956FE0();
    if (v123)
    {
      *(void *)&long long v169 = v122;
      *((void *)&v169 + 1) = v123;
      uint64_t v167 = 0x7370747468;
      unint64_t v168 = 0xE500000000000000;
      sub_24337C168();
      uint64_t v124 = sub_243959100();
      swift_bridgeObjectRelease();
      char v125 = v174;
      if (!v124) {
        char v125 = 1;
      }
      if (v125) {
        goto LABEL_76;
      }
    }
    else if (v174)
    {
LABEL_76:
      uint64_t v126 = v154;
      sub_24337C1BC(v154, &qword_26B0C98A0);
      uint64_t v127 = v149;
      (*(void (**)(uint64_t, char *, uint64_t))(v148 + 16))(v126, v138, v149);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v133)(v126, 0, 1, v127);
      LOBYTE(v169) = 23;
      id v128 = v164;
      uint64_t v129 = sub_2439596A0();
      id v164 = v128;
      if (v128)
      {
        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v148 + 8))(v138, v149);
        (*(void (**)(char *, uint64_t))(v150 + 8))(v76, v47);
        goto LABEL_68;
      }
      uint64_t v118 = v129;
      uint64_t v119 = v130;
      if (sub_243958400() >= 16)
      {
        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v148 + 8))(v138, v149);
        (*(void (**)(char *, uint64_t))(v150 + 8))(v76, v47);
        goto LABEL_71;
      }
      swift_bridgeObjectRelease();
      LOBYTE(v169) = 23;
      sub_2439593D0();
      uint64_t v131 = (void *)swift_allocError();
      sub_2433D9388(&qword_268D9FDA0, &qword_268D9FD40);
LABEL_80:
      sub_243959390();
      id v164 = v131;
      swift_willThrow();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v148 + 8))(v138, v149);
      (*(void (**)(char *, uint64_t))(v150 + 8))(v76, v47);
      LODWORD(v147) = 1;
      int v51 = 1;
      int v52 = 1;
      LODWORD(v150) = 1;
      LODWORD(v151) = 1;
      uint64_t v70 = v166;
      uint64_t v49 = v159;
      uint64_t v48 = v160;
      uint64_t v50 = (uint64_t)v161;
      int v53 = 1;
LABEL_23:
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v70);
      sub_2437A6DDC(v50, (uint64_t (*)(void))type metadata accessor for RawMerchant);
      swift_bridgeObjectRelease();
      int v54 = v53;
      int v55 = v53;
      int v56 = v53;
      if ((v147 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_24;
    }
    LOBYTE(v169) = 22;
    sub_2439593D0();
    uint64_t v131 = (void *)swift_allocError();
    sub_2433D9388(&qword_268D9FDA0, &qword_268D9FD40);
    goto LABEL_80;
  }
  (*(void (**)(char *, uint64_t))(v150 + 8))(v76, v47);
  swift_release();
  swift_release();
  sub_24337C1BC(v137, &qword_26B0C98A0);
  uint64_t v117 = v154;
  sub_24337C1BC(v154, &qword_26B0C98A0);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v133)(v117, 1, 1, v149);
  uint64_t v118 = 0;
  uint64_t v119 = 0;
LABEL_71:
  uint64_t v120 = v155;
  swift_bridgeObjectRelease();
  *uint64_t v120 = v118;
  v120[1] = v119;
  uint64_t v121 = (uint64_t)v161;
  sub_2437A6D74((uint64_t)v161, v139, type metadata accessor for RawECommerceOrderContent);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v166);
  return sub_2437A6DDC(v121, type metadata accessor for RawECommerceOrderContent);
}

uint64_t RawECommerceOrderContent.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9FDB0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2437AEC2C();
  sub_243959BD0();
  LOBYTE(v23) = 0;
  type metadata accessor for RawMerchant();
  sub_2437B99A4(&qword_268D9FDB8, (void (*)(uint64_t))type metadata accessor for RawMerchant);
  sub_243959860();
  if (!v2)
  {
    uint64_t v9 = (int *)type metadata accessor for RawECommerceOrderContent(0);
    LOBYTE(v23) = 1;
    sub_243959810();
    LOBYTE(v23) = 2;
    sub_243959810();
    LOBYTE(v23) = 3;
    sub_243959790();
    LOBYTE(v23) = *(unsigned char *)(v3 + v9[8]);
    LOBYTE(v29) = 4;
    sub_2437AEEC8();
    sub_2439597D0();
    LOBYTE(v23) = *(unsigned char *)(v3 + v9[9]);
    LOBYTE(v29) = 5;
    sub_2437AEF1C();
    sub_243959860();
    LOBYTE(v23) = 6;
    sub_243959790();
    LOBYTE(v23) = 7;
    sub_243957400();
    sub_2437B99A4(&qword_26B0C5DF0, MEMORY[0x263F07490]);
    sub_243959860();
    LOBYTE(v23) = 8;
    sub_243959860();
    LOBYTE(v23) = 9;
    uint64_t v10 = sub_243957010();
    sub_2437B99A4((unint64_t *)&unk_268D97120, MEMORY[0x263F06EA8]);
    sub_243959860();
    v22[1] = v10;
    int v11 = *(unsigned __int16 *)(v3 + v9[26]);
    uint64_t v12 = (long long *)(v3 + v9[14]);
    long long v13 = v12[1];
    long long v23 = *v12;
    long long v24 = v13;
    long long v14 = v12[3];
    long long v25 = v12[2];
    long long v26 = v14;
    long long v27 = v12[4];
    char v30 = 10;
    int v28 = v11;
    __int16 v29 = v11;
    sub_2437AEF70();
    sub_243959780();
    LOBYTE(v23) = 11;
    type metadata accessor for RawOrderReturnInfo();
    sub_2437B99A4(&qword_268D9FDD8, (void (*)(uint64_t))type metadata accessor for RawOrderReturnInfo);
    sub_2439597D0();
    if (*(void *)(*(void *)(v3 + v9[16]) + 16))
    {
      *(void *)&long long v23 = *(void *)(v3 + v9[16]);
      LOBYTE(v29) = 12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_268D9FDE0);
      sub_2437AEFC4();
      sub_243959860();
    }
    if (*(void *)(*(void *)(v3 + v9[17]) + 16))
    {
      *(void *)&long long v23 = *(void *)(v3 + v9[17]);
      LOBYTE(v29) = 13;
      __swift_instantiateConcreteTypeFromMangledName(&qword_268D9FDF8);
      sub_2437AF068();
      sub_243959860();
    }
    uint64_t v16 = (long long *)(v3 + v9[18]);
    long long v17 = v16[1];
    long long v23 = *v16;
    long long v24 = v17;
    long long v18 = v16[3];
    long long v25 = v16[2];
    long long v26 = v18;
    long long v27 = v16[4];
    LOBYTE(v29) = 14;
    sub_2437AF10C();
    sub_2439597D0();
    if (*(void *)(*(void *)(v3 + v9[19]) + 16))
    {
      *(void *)&long long v23 = *(void *)(v3 + v9[19]);
      LOBYTE(v29) = 15;
      __swift_instantiateConcreteTypeFromMangledName(&qword_268D9B5A0);
      sub_24358517C(&qword_268D9B5C8, (void (*)(void))sub_2435851EC);
      sub_243959860();
    }
    LOBYTE(v23) = 17;
    sub_2437AF160();
    sub_243959860();
    if (*(void *)(*(void *)(v3 + v9[20]) + 16))
    {
      *(void *)&long long v23 = *(void *)(v3 + v9[20]);
      LOBYTE(v29) = 18;
      __swift_instantiateConcreteTypeFromMangledName(&qword_268D9FD78);
      sub_2437AF1B4();
      sub_243959860();
    }
    if (*(void *)(*(void *)(v3 + v9[21]) + 16))
    {
      *(void *)&long long v23 = *(void *)(v3 + v9[21]);
      LOBYTE(v29) = 19;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C7148);
      sub_243388214(&qword_268D97378);
      sub_243959860();
    }
    uint64_t v19 = (long long *)(v3 + v9[22]);
    uint64_t v20 = *((void *)v19 + 6);
    long long v21 = v19[1];
    long long v23 = *v19;
    long long v24 = v21;
    long long v25 = v19[2];
    *(void *)&long long v26 = v20;
    LOBYTE(v29) = 20;
    sub_2437AF258();
    sub_2439597D0();
    LOBYTE(v23) = 21;
    type metadata accessor for RawOrderProvider();
    sub_2437B99A4(&qword_268D9FE38, (void (*)(uint64_t))type metadata accessor for RawOrderProvider);
    sub_2439597D0();
    LOBYTE(v23) = 22;
    sub_2439597D0();
    LOBYTE(v23) = 23;
    sub_243959790();
    LOWORD(v23) = v28;
    LOBYTE(v29) = 24;
    sub_2437AF2AC();
    sub_243959860();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

FinanceKit::RawOrderStatus_optional __swiftcall RawOrderStatus.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_2439595E0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

uint64_t RawOrderStatus.rawValue.getter()
{
  uint64_t v1 = 0x6574656C706D6F63;
  if (*v0 != 1) {
    uint64_t v1 = 0x656C6C65636E6163;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1852141679;
  }
}

uint64_t sub_2437A6968(char *a1, unsigned __int8 *a2)
{
  return sub_243470920(*a1, *a2);
}

uint64_t sub_2437A6974()
{
  return sub_243959B40();
}

uint64_t sub_2437A6A18()
{
  sub_2439581F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2437A6AA8()
{
  return sub_243959B40();
}

FinanceKit::RawOrderStatus_optional sub_2437A6B48(Swift::String *a1)
{
  return RawOrderStatus.init(rawValue:)(*a1);
}

void sub_2437A6B54(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = 0x6574656C706D6F63;
  if (v2 != 1) {
    uint64_t v4 = 0x656C6C65636E6163;
  }
  BOOL v5 = v2 == 0;
  if (*v1) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = 1852141679;
  }
  if (!v5) {
    unint64_t v3 = 0xE900000000000064;
  }
  *a1 = v6;
  a1[1] = v3;
}

uint64_t sub_2437A6BB4()
{
  return sub_2439585D0();
}

uint64_t sub_2437A6C14()
{
  return sub_243958580();
}

BOOL static RawOrderError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t RawOrderError.hash(into:)()
{
  return sub_243959AE0();
}

uint64_t RawOrderError.hashValue.getter()
{
  return sub_243959B40();
}

uint64_t type metadata accessor for RawECommerceOrderContent.ContentItem(uint64_t a1)
{
  return sub_24338E938(a1, (uint64_t *)&unk_268D9FE78);
}

uint64_t sub_2437A6D0C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2437A6D74(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2437A6DDC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for RawECommerceOrderContent(uint64_t a1)
{
  return sub_24338E938(a1, (uint64_t *)&unk_26B0C6C48);
}

uint64_t RawECommerceOrderContent.merchant.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2437A6D74(v1, a1, (uint64_t (*)(void))type metadata accessor for RawMerchant);
}

uint64_t RawECommerceOrderContent.merchant.setter(uint64_t a1)
{
  return sub_2437AF300(a1, v1);
}

uint64_t (*RawECommerceOrderContent.merchant.modify())()
{
  return nullsub_1;
}

uint64_t RawECommerceOrderContent.orderTypeIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawECommerceOrderContent.orderTypeIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 20));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*RawECommerceOrderContent.orderTypeIdentifier.modify())(void)
{
  return nullsub_1;
}

uint64_t RawECommerceOrderContent.orderIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawECommerceOrderContent.orderIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 24));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*RawECommerceOrderContent.orderIdentifier.modify())(void)
{
  return nullsub_1;
}

uint64_t RawECommerceOrderContent.orderNumber.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawECommerceOrderContent.orderNumber.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 28));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*RawECommerceOrderContent.orderNumber.modify())(void)
{
  return nullsub_1;
}

uint64_t RawECommerceOrderContent.changeNotifications.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for RawECommerceOrderContent(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t RawECommerceOrderContent.changeNotifications.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for RawECommerceOrderContent(0);
  *(unsigned char *)(v1 + *(int *)(result + 32)) = v2;
  return result;
}

uint64_t (*RawECommerceOrderContent.changeNotifications.modify())(void)
{
  return nullsub_1;
}

uint64_t RawECommerceOrderContent.status.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for RawECommerceOrderContent(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t RawECommerceOrderContent.status.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for RawECommerceOrderContent(0);
  *(unsigned char *)(v1 + *(int *)(result + 36)) = v2;
  return result;
}

uint64_t (*RawECommerceOrderContent.status.modify())(void)
{
  return nullsub_1;
}

uint64_t RawECommerceOrderContent.statusDescription.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawECommerceOrderContent.statusDescription.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 40));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*RawECommerceOrderContent.statusDescription.modify())(void)
{
  return nullsub_1;
}

uint64_t RawECommerceOrderContent.createdAt.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 44);
  uint64_t v4 = sub_243957400();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t RawECommerceOrderContent.createdAt.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 44);
  uint64_t v4 = sub_243957400();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*RawECommerceOrderContent.createdAt.modify())(void)
{
  return nullsub_1;
}

uint64_t RawECommerceOrderContent.updatedAt.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 48);
  uint64_t v4 = sub_243957400();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t RawECommerceOrderContent.updatedAt.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 48);
  uint64_t v4 = sub_243957400();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*RawECommerceOrderContent.updatedAt.modify())(void)
{
  return nullsub_1;
}

uint64_t RawECommerceOrderContent.orderManagementURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 52);
  uint64_t v4 = sub_243957010();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t RawECommerceOrderContent.orderManagementURL.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 52);
  uint64_t v4 = sub_243957010();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*RawECommerceOrderContent.orderManagementURL.modify())(void)
{
  return nullsub_1;
}

uint64_t RawECommerceOrderContent.payment.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 56));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  uint64_t v10 = v3[6];
  uint64_t v11 = v3[7];
  uint64_t v13 = v3[8];
  uint64_t v12 = v3[9];
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
  a1[8] = v13;
  a1[9] = v12;
  return sub_2436AA67C(v4, v5, v6, v7, v8, v9);
}

__n128 RawECommerceOrderContent.payment.setter(__n128 *a1)
{
  __n128 v9 = *a1;
  __n128 v7 = a1[2];
  __n128 v8 = a1[1];
  __n128 v6 = a1[3];
  unint64_t v2 = a1[4].n128_u64[0];
  unint64_t v3 = a1[4].n128_u64[1];
  uint64_t v4 = (__n128 *)(v1 + *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 56));
  sub_24364AE5C(v4->n128_u64[0], v4->n128_i64[1], v4[1].n128_i64[0], v4[1].n128_i64[1], v4[2].n128_i64[0], v4[2].n128_i64[1]);
  *uint64_t v4 = v9;
  v4[1] = v8;
  __n128 result = v6;
  void v4[2] = v7;
  v4[3] = v6;
  v4[4].n128_u64[0] = v2;
  v4[4].n128_u64[1] = v3;
  return result;
}

uint64_t (*RawECommerceOrderContent.payment.modify())(void)
{
  return nullsub_1;
}

uint64_t RawECommerceOrderContent.returnInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for RawECommerceOrderContent(0);
  return sub_24337C254(v1 + *(int *)(v3 + 60), a1, &qword_268D9CC60);
}

uint64_t RawECommerceOrderContent.returnInfo.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for RawECommerceOrderContent(0);
  return sub_2433865D8(a1, v1 + *(int *)(v3 + 60), &qword_268D9CC60);
}

uint64_t (*RawECommerceOrderContent.returnInfo.modify())(void)
{
  return nullsub_1;
}

uint64_t RawECommerceOrderContent.returns.getter()
{
  type metadata accessor for RawECommerceOrderContent(0);

  return swift_bridgeObjectRetain();
}

uint64_t RawECommerceOrderContent.fulfillments.getter()
{
  type metadata accessor for RawECommerceOrderContent(0);

  return swift_bridgeObjectRetain();
}

uint64_t RawECommerceOrderContent.customer.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 72));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  uint64_t v10 = v3[6];
  uint64_t v11 = v3[7];
  uint64_t v13 = v3[8];
  uint64_t v12 = v3[9];
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
  a1[8] = v13;
  a1[9] = v12;
  return sub_2434C8F20(v4, v5);
}

__n128 RawECommerceOrderContent.customer.setter(long long *a1)
{
  long long v9 = *a1;
  long long v7 = a1[2];
  long long v8 = a1[1];
  __n128 v6 = (__n128)a1[3];
  uint64_t v2 = *((void *)a1 + 8);
  uint64_t v3 = *((void *)a1 + 9);
  uint64_t v4 = v1 + *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 72);
  sub_2434C90E0(*(void *)v4, *(void *)(v4 + 8));
  *(_OWORD *)uint64_t v4 = v9;
  *(_OWORD *)(v4 + 16) = v8;
  __n128 result = v6;
  *(_OWORD *)(v4 + 32) = v7;
  *(__n128 *)(v4 + 48) = v6;
  *(void *)(v4 + 64) = v2;
  *(void *)(v4 + 72) = v3;
  return result;
}

uint64_t (*RawECommerceOrderContent.customer.modify())(void)
{
  return nullsub_1;
}

uint64_t RawECommerceOrderContent.lineItems.getter()
{
  type metadata accessor for RawECommerceOrderContent(0);

  return swift_bridgeObjectRetain();
}

uint64_t RawECommerceOrderContent.lineItems.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 76);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*RawECommerceOrderContent.lineItems.modify())(void)
{
  return nullsub_1;
}

uint64_t RawECommerceOrderContent.associatedApplications.getter()
{
  type metadata accessor for RawECommerceOrderContent(0);

  return swift_bridgeObjectRetain();
}

uint64_t RawECommerceOrderContent.associatedApplications.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 80);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*RawECommerceOrderContent.associatedApplications.modify())(void)
{
  return nullsub_1;
}

uint64_t RawECommerceOrderContent.associatedApplicationIdentifiers.getter()
{
  type metadata accessor for RawECommerceOrderContent(0);

  return swift_bridgeObjectRetain();
}

uint64_t RawECommerceOrderContent.associatedApplicationIdentifiers.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 84);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*RawECommerceOrderContent.associatedApplicationIdentifiers.modify())(void)
{
  return nullsub_1;
}

uint64_t RawECommerceOrderContent.barcode.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 88));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  uint64_t v10 = v3[6];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;

  return sub_2435D89BC(v4, v5, v6, v7, v8);
}

__n128 RawECommerceOrderContent.barcode.setter(long long *a1)
{
  long long v6 = a1[1];
  long long v7 = *a1;
  __n128 v5 = (__n128)a1[2];
  uint64_t v2 = *((void *)a1 + 6);
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 88));
  sub_24364CC94(*v3, v3[1], v3[2], v3[3], v3[4]);
  *(_OWORD *)uint64_t v3 = v7;
  *((_OWORD *)v3 + 1) = v6;
  __n128 result = v5;
  *((__n128 *)v3 + 2) = v5;
  v3[6] = v2;
  return result;
}

uint64_t (*RawECommerceOrderContent.barcode.modify())(void)
{
  return nullsub_1;
}

uint64_t RawECommerceOrderContent.orderProvider.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for RawECommerceOrderContent(0);
  return sub_24337C254(v1 + *(int *)(v3 + 92), a1, &qword_268D9CC58);
}

uint64_t RawECommerceOrderContent.orderProvider.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for RawECommerceOrderContent(0);
  return sub_2433865D8(a1, v1 + *(int *)(v3 + 92), &qword_268D9CC58);
}

uint64_t (*RawECommerceOrderContent.orderProvider.modify())(void)
{
  return nullsub_1;
}

uint64_t RawECommerceOrderContent.webServiceURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for RawECommerceOrderContent(0);
  return sub_24337C254(v1 + *(int *)(v3 + 96), a1, &qword_26B0C98A0);
}

uint64_t RawECommerceOrderContent.authenticationToken.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 100));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawECommerceOrderContent.schemaVersion.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for RawECommerceOrderContent(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 104));
  return result;
}

uint64_t RawECommerceOrderContent.schemaVersion.setter(__int16 *a1)
{
  __int16 v2 = *a1;
  uint64_t result = type metadata accessor for RawECommerceOrderContent(0);
  *(_WORD *)(v1 + *(int *)(result + 104)) = v2;
  return result;
}

uint64_t (*RawECommerceOrderContent.schemaVersion.modify())(void)
{
  return nullsub_1;
}

uint64_t RawECommerceOrderContent.init(orderTypeIdentifier:orderIdentifier:status:merchant:orderManagementURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  char v35 = *a5;
  uint64_t v13 = (int *)type metadata accessor for RawECommerceOrderContent(0);
  long long v14 = (void *)(a8 + v13[7]);
  *long long v14 = 0;
  v14[1] = 0;
  uint64_t v15 = v13[8];
  *(unsigned char *)(a8 + v15) = 2;
  uint64_t v16 = (void *)(a8 + v13[10]);
  *uint64_t v16 = 0;
  v16[1] = 0;
  long long v17 = (_OWORD *)(a8 + v13[14]);
  v17[3] = 0u;
  v17[4] = 0u;
  v17[1] = 0u;
  v17[2] = 0u;
  *long long v17 = 0u;
  uint64_t v18 = a8 + v13[15];
  uint64_t v19 = type metadata accessor for RawOrderReturnInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  uint64_t v20 = (_OWORD *)(a8 + v13[18]);
  *uint64_t v20 = xmmword_243974C10;
  v20[1] = 0u;
  void v20[2] = 0u;
  v20[3] = 0u;
  void v20[4] = 0u;
  uint64_t v21 = a8 + v13[22];
  *(void *)(v21 + 48) = 0;
  *(_OWORD *)(v21 + 16) = 0u;
  *(_OWORD *)(v21 + 32) = 0u;
  *(_OWORD *)uint64_t v21 = 0u;
  uint64_t v22 = a8 + v13[23];
  uint64_t v23 = type metadata accessor for RawOrderProvider();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 1, 1, v23);
  uint64_t v24 = a8 + v13[24];
  uint64_t v25 = sub_243957010();
  uint64_t v26 = *(void *)(v25 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v24, 1, 1, v25);
  long long v27 = (void *)(a8 + v13[25]);
  *long long v27 = 0;
  v27[1] = 0;
  *(_WORD *)(a8 + v13[26]) = 1;
  int v28 = (void *)(a8 + v13[5]);
  *int v28 = a1;
  v28[1] = a2;
  __int16 v29 = (void *)(a8 + v13[6]);
  *__int16 v29 = a3;
  v29[1] = a4;
  *(unsigned char *)(a8 + v13[9]) = v35;
  sub_2437A6D74(a6, a8, (uint64_t (*)(void))type metadata accessor for RawMerchant);
  uint64_t v30 = MEMORY[0x263F8EE78];
  *(void *)(a8 + v13[19]) = MEMORY[0x263F8EE78];
  *(void *)(a8 + v13[17]) = v30;
  *(void *)(a8 + v13[16]) = v30;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(a8 + v13[13], a7, v25);
  uint64_t v31 = a8 + v13[11];
  sub_2439573B0();
  uint64_t v32 = a8 + v13[12];
  uint64_t v33 = sub_243957400();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16))(v32, v31, v33);
  *(void *)(a8 + v13[20]) = v30;
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(a7, v25);
  uint64_t result = sub_2437A6DDC(a6, (uint64_t (*)(void))type metadata accessor for RawMerchant);
  *(void *)(a8 + v13[21]) = v30;
  *(unsigned char *)(a8 + v15) = 0;
  return result;
}

uint64_t sub_2437A831C(uint64_t a1, uint64_t a2, uint64_t *a3, void (*a4)(void))
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_268D9FD40);
  char v7 = sub_243959750();
  if (v4)
  {

    return 0;
  }
  else if (v7)
  {
    return 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a3);
    a4();
    sub_243959600();
    return v9;
  }
}

uint64_t sub_2437A83F0(char a1)
{
  uint64_t result = 0x746E61686372656DLL;
  switch(a1)
  {
    case 1:
    case 4:
    case 23:
      uint64_t result = 0xD000000000000013;
      break;
    case 2:
      uint64_t result = 0x656449726564726FLL;
      break;
    case 3:
      uint64_t result = 0x6D754E726564726FLL;
      break;
    case 5:
      uint64_t result = 0x737574617473;
      break;
    case 6:
      uint64_t result = 0xD000000000000011;
      break;
    case 7:
      unsigned int v3 = 1634038371;
      goto LABEL_8;
    case 8:
      unsigned int v3 = 1633972341;
LABEL_8:
      uint64_t result = v3 | 0x4164657400000000;
      break;
    case 9:
      uint64_t result = 0xD000000000000012;
      break;
    case 10:
      uint64_t result = 0x746E656D796170;
      break;
    case 11:
      uint64_t result = 0x6E496E7275746572;
      break;
    case 12:
      uint64_t result = 0x736E7275746572;
      break;
    case 13:
      uint64_t result = 0x6D6C6C69666C7566;
      break;
    case 14:
      uint64_t result = 0x72656D6F74737563;
      break;
    case 15:
      uint64_t result = 0x6D657449656E696CLL;
      break;
    case 16:
      uint64_t result = 0x6976726553626577;
      break;
    case 17:
      uint64_t result = 0x707954726564726FLL;
      break;
    case 18:
      uint64_t result = 0xD000000000000016;
      break;
    case 19:
      uint64_t result = 0xD000000000000020;
      break;
    case 20:
      uint64_t result = 0x65646F63726162;
      break;
    case 21:
      uint64_t result = 0x6F7250726564726FLL;
      break;
    case 22:
      uint64_t result = 0x6976726553626577;
      break;
    case 24:
      uint64_t result = 0x6556616D65686373;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2437A8710(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_2437A83F0(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_2437A83F0(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_243959940();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2437A879C()
{
  char v1 = *v0;
  sub_243959AD0();
  sub_2437A83F0(v1);
  sub_2439581F0();
  swift_bridgeObjectRelease();
  return sub_243959B40();
}

uint64_t sub_2437A8800()
{
  sub_2437A83F0(*v0);
  sub_2439581F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2437A8854()
{
  char v1 = *v0;
  sub_243959AD0();
  sub_2437A83F0(v1);
  sub_2439581F0();
  swift_bridgeObjectRelease();
  return sub_243959B40();
}

uint64_t sub_2437A88B4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2437AF3B8();
  *a1 = result;
  return result;
}

uint64_t sub_2437A88E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2437A83F0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2437A8910()
{
  return sub_2437A83F0(*v0);
}

uint64_t sub_2437A8918@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2437AF3B8();
  *a1 = result;
  return result;
}

uint64_t sub_2437A8940(uint64_t a1)
{
  unint64_t v2 = sub_2437AEC2C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2437A897C(uint64_t a1)
{
  unint64_t v2 = sub_2437AEC2C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t RawECommerceOrderContent.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v4 = type metadata accessor for RawECommerceOrderContent(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9FD40);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2437AEC2C();
  sub_243959BA0();
  if (!v2)
  {
    long long v17 = v6;
    uint64_t v11 = v18;
    LOBYTE(v20) = 24;
    sub_24372E5F8();
    sub_2439596F0();
    unsigned __int16 v12 = v19[0];
    if (SLOWORD(v19[0]) <= 1)
    {
      LOBYTE(v19[0]) = 17;
      sub_24372E64C();
      sub_2439596F0();
      sub_24338E428((uint64_t)a1, (uint64_t)v19);
      unsigned __int16 v20 = v12;
      char v21 = 0;
      uint64_t v15 = (uint64_t)v17;
      RawECommerceOrderContent.init(from:configuration:)(v19, &v20, (uint64_t)v17);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      sub_2437A6D0C(v15, v11, type metadata accessor for RawECommerceOrderContent);
    }
    else
    {
      sub_24372E6A0();
      swift_allocError();
      *uint64_t v13 = v12;
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

void RawECommerceOrderContent.DecodingConfiguration.schemaVersion.getter(_WORD *a1@<X8>)
{
  *a1 = *v1;
}

_WORD *RawECommerceOrderContent.DecodingConfiguration.schemaVersion.setter(_WORD *result)
{
  _WORD *v1 = *result;
  return result;
}

uint64_t (*RawECommerceOrderContent.DecodingConfiguration.schemaVersion.modify())()
{
  return nullsub_1;
}

uint64_t RawECommerceOrderContent.DecodingConfiguration.allowsInsecureHTTPURLs.getter()
{
  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t RawECommerceOrderContent.DecodingConfiguration.allowsInsecureHTTPURLs.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 2) = result;
  return result;
}

uint64_t (*RawECommerceOrderContent.DecodingConfiguration.allowsInsecureHTTPURLs.modify())()
{
  return nullsub_1;
}

uint64_t sub_2437A8CC0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return RawECommerceOrderContent.init(from:)(a1, a2);
}

uint64_t sub_2437A8CD8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v3 = *(unsigned char *)(a2 + 2);
  unsigned __int16 v5 = *(_WORD *)a2;
  char v6 = v3;
  return RawECommerceOrderContent.init(from:configuration:)(a1, &v5, a3);
}

uint64_t sub_2437A8D0C(void *a1)
{
  return RawECommerceOrderContent.encode(to:)(a1);
}

FinanceKit::RawOrderStatus __swiftcall RawOrderStatus.init(_:)(FinanceKit::RawOrderStatus result)
{
  unsigned char *v1 = *(unsigned char *)result;
  return result;
}

uint64_t RawECommerceOrderContent.init(order:orderContent:)@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v124 = (char *)&v109 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CC60);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v118 = (uint64_t)&v109 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)type metadata accessor for RawECommerceOrderContent(0);
  uint64_t v11 = (uint64_t *)(a3 + v10[7]);
  *uint64_t v11 = 0;
  v11[1] = 0;
  uint64_t v113 = v11;
  unsigned __int16 v12 = (uint64_t *)(a3 + v10[10]);
  *unsigned __int16 v12 = 0;
  v12[1] = 0;
  uint64_t v119 = v12;
  uint64_t v13 = a3 + v10[14];
  *(_OWORD *)(v13 + 48) = 0u;
  *(_OWORD *)(v13 + 64) = 0u;
  *(_OWORD *)(v13 + 16) = 0u;
  *(_OWORD *)(v13 + 32) = 0u;
  *(_OWORD *)uint64_t v13 = 0u;
  uint64_t v14 = a3 + v10[15];
  uint64_t v15 = type metadata accessor for RawOrderReturnInfo();
  uint64_t v16 = *(void *)(v15 - 8);
  long long v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
  uint64_t v117 = v14;
  uint64_t v116 = v15;
  id v115 = v17;
  uint64_t v114 = v16 + 56;
  ((void (*)(uint64_t, uint64_t, uint64_t))v17)(v14, 1, 1);
  uint64_t v18 = a3 + v10[18];
  *(_OWORD *)uint64_t v18 = xmmword_243974C10;
  *(_OWORD *)(v18 + 16) = 0u;
  *(_OWORD *)(v18 + 32) = 0u;
  *(_OWORD *)(v18 + 48) = 0u;
  *(_OWORD *)(v18 + 64) = 0u;
  uint64_t v19 = (uint64_t *)(a3 + v10[22]);
  v19[6] = 0;
  *((_OWORD *)v19 + 1) = 0u;
  *((_OWORD *)v19 + 2) = 0u;
  *(_OWORD *)uint64_t v19 = 0u;
  uint64_t v20 = a3 + v10[23];
  uint64_t v21 = type metadata accessor for RawOrderProvider();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
  uint64_t v22 = a3 + v10[24];
  uint64_t v23 = sub_243957010();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56);
  uint64_t v123 = v22;
  uint64_t v122 = v23;
  uint64_t v121 = v25;
  uint64_t v120 = v24 + 56;
  ((void (*)(uint64_t, uint64_t, uint64_t))v25)(v22, 1, 1);
  uint64_t v26 = v10[25];
  uint64_t v127 = a3;
  long long v27 = (uint64_t *)(a3 + v26);
  *long long v27 = 0;
  v27[1] = 0;
  *(void *)&long long v126 = a2;
  id v28 = objc_msgSend(a2, sel_associatedApplicationIdentifiers);
  if (v28)
  {
    __int16 v29 = v28;
    uint64_t v30 = sub_243958650();
  }
  else
  {
    uint64_t v30 = MEMORY[0x263F8EE78];
  }
  uint64_t v31 = v127;
  *(void *)(v127 + v10[21]) = v30;
  unint64_t v32 = ManagedECommerceOrderContent.associatedApplications.getter();
  uint64_t v33 = sub_2437A1744(v32);
  uint64_t v112 = 0;
  swift_bridgeObjectRelease();
  *(void *)(v31 + v10[20]) = v33;
  id v34 = objc_msgSend(a1, sel_authenticationToken);
  if (v34)
  {
    char v35 = v34;
    uint64_t v36 = sub_2439582D0();
    uint64_t v38 = v37;
  }
  else
  {
    uint64_t v36 = 0;
    uint64_t v38 = 0;
  }
  id v125 = a1;
  swift_bridgeObjectRelease();
  *long long v27 = v36;
  v27[1] = v38;
  id v39 = objc_msgSend((id)v126, sel_barcode);
  if (v39)
  {
    ManagedOrderBarcode.rawOrderBarcode.getter((uint64_t)&v128);

    uint64_t v40 = *((void *)&v128 + 1);
    *(void *)&long long v111 = v128;
    uint64_t v41 = v129;
    uint64_t v42 = *((void *)&v129 + 1);
    id v39 = (id)*((void *)&v130 + 1);
    uint64_t v44 = v130;
    uint64_t v43 = v131;
  }
  else
  {
    *(void *)&long long v111 = 0;
    uint64_t v40 = 0;
    uint64_t v41 = 0;
    uint64_t v42 = 0;
    uint64_t v44 = 0;
    uint64_t v43 = 0;
  }
  sub_24364CC94(*v19, v19[1], v19[2], v19[3], v19[4]);
  *uint64_t v19 = v111;
  v19[1] = v40;
  v19[2] = v41;
  _OWORD v19[3] = v42;
  v19[4] = v44;
  void v19[5] = (uint64_t)v39;
  v19[6] = v43;
  uint64_t v45 = (void *)v126;
  ManagedECommerceOrderContent.changeNotifications.getter(&v128);
  uint64_t v46 = v127;
  *(unsigned char *)(v127 + v10[8]) = v128;
  id v47 = objc_msgSend(v45, sel_createdDate);
  sub_2439573A0();

  id v48 = v45;
  RawOrderCustomer.init(_:)(v48, (uint64_t *)&v128);
  long long v126 = v128;
  long long v111 = v129;
  long long v110 = v130;
  long long v109 = v131;
  uint64_t v49 = v132;
  uint64_t v50 = v133;
  sub_2434C90E0(*(void *)v18, *(void *)(v18 + 8));
  long long v51 = v111;
  *(_OWORD *)uint64_t v18 = v126;
  *(_OWORD *)(v18 + 16) = v51;
  long long v52 = v109;
  *(_OWORD *)(v18 + 32) = v110;
  *(_OWORD *)(v18 + 48) = v52;
  *(void *)(v18 + 64) = v49;
  *(void *)(v18 + 72) = v50;
  unint64_t v53 = ManagedECommerceOrderContent.shippingFulfillments.getter();
  uint64_t v54 = v112;
  uint64_t v55 = sub_2433CC418(v53);
  swift_bridgeObjectRelease();
  *(void *)&long long v128 = v55;
  unint64_t v56 = ManagedECommerceOrderContent.pickupFulfillments.getter();
  uint64_t v57 = sub_2433CC558(v56);
  swift_bridgeObjectRelease();
  sub_2433A6F8C(v57);
  sub_2433CDC64((void **)&v128);
  uint64_t v58 = sub_2437A0F54(v128);
  swift_bridgeObjectRelease();
  *(void *)(v46 + v10[17]) = v58;
  unint64_t v59 = ManagedECommerceOrderContent.lineItems.getter();
  uint64_t v60 = sub_2435D56F8(v59);
  *(void *)&long long v126 = v54;
  swift_bridgeObjectRelease();
  *(void *)(v46 + v10[19]) = v60;
  RawMerchant.init(_:)(objc_msgSend(v48, sel_merchant), v46);
  id v61 = v125;
  id v62 = objc_msgSend(v125, sel_orderIdentifier);
  uint64_t v63 = sub_2439582D0();
  uint64_t v65 = v64;

  uint64_t v66 = (uint64_t *)(v46 + v10[6]);
  *uint64_t v66 = v63;
  v66[1] = v65;
  id v67 = objc_msgSend(v48, sel_orderManagementURL);
  sub_243956F90();

  id v68 = objc_msgSend(v48, sel_orderNumber);
  if (v68)
  {
    uint64_t v69 = v68;
    uint64_t v70 = sub_2439582D0();
    uint64_t v72 = v71;
  }
  else
  {
    uint64_t v70 = 0;
    uint64_t v72 = 0;
  }
  uint64_t v73 = v113;
  swift_bridgeObjectRelease();
  *uint64_t v73 = v70;
  v73[1] = v72;
  uint64_t v74 = v61;
  id v75 = objc_msgSend(v61, sel_orderTypeIdentifier);
  uint64_t v76 = sub_2439582D0();
  uint64_t v78 = v77;

  id v79 = (uint64_t *)(v127 + v10[5]);
  uint64_t *v79 = v76;
  v79[1] = v78;
  id v80 = objc_msgSend(v48, sel_payment);
  if (v80)
  {
    RawOrderPayment.init(_:)(v80, &v128);
    uint64_t v113 = (uint64_t *)v128;
    uint64_t v112 = DWORD2(v129);
    *(void *)&long long v111 = v130;
    uint64_t v81 = v131;
    *(void *)&long long v110 = *((void *)&v130 + 1);
    uint64_t v82 = *((void *)&v131 + 1);
    uint64_t v83 = v132;
    uint64_t v84 = v133;
    uint64_t v86 = *((void *)&v128 + 1);
    uint64_t v85 = v129;
  }
  else
  {
    uint64_t v113 = 0;
    uint64_t v86 = 0;
    uint64_t v85 = 0;
    uint64_t v112 = 0;
    *(void *)&long long v111 = 0;
    *(void *)&long long v110 = 0;
    uint64_t v81 = 0;
    uint64_t v82 = 0;
    uint64_t v83 = 0;
    uint64_t v84 = 0;
  }
  sub_24364AE5C(*(void *)v13, *(void *)(v13 + 8), *(void *)(v13 + 16), *(void *)(v13 + 24), *(void *)(v13 + 32), *(void *)(v13 + 40));
  *(void *)uint64_t v13 = v113;
  *(void *)(v13 + 8) = v86;
  uint64_t v87 = v112;
  *(void *)(v13 + 16) = v85;
  *(void *)(v13 + 24) = v87;
  uint64_t v88 = v110;
  *(void *)(v13 + 32) = v111;
  *(void *)(v13 + 40) = v88;
  *(void *)(v13 + 48) = v81;
  *(void *)(v13 + 56) = v82;
  *(void *)(v13 + 64) = v83;
  *(void *)(v13 + 72) = v84;
  id v89 = objc_msgSend(v48, sel_returnInfo);
  if (v89)
  {
    id v90 = v89;
    uint64_t v91 = v118;
    RawOrderReturnInfo.init(_:)(v90, v118);
    v115(v91, 0, 1, v116);
  }
  else
  {
    uint64_t v91 = v118;
    v115(v118, 1, 1, v116);
  }
  uint64_t v92 = (uint64_t)v124;
  sub_2433865D8(v91, v117, &qword_268D9CC60);
  unint64_t v93 = ManagedECommerceOrderContent.returns.getter();
  uint64_t v94 = sub_2437A1118(v93);
  swift_bridgeObjectRelease();
  uint64_t v95 = v127;
  *(void *)(v127 + v10[16]) = v94;
  *(_WORD *)(v95 + v10[26]) = (unsigned __int16)objc_msgSend(v48, sel_schemaVersion);
  ManagedECommerceOrderContent.status.getter(&v128);
  *(unsigned char *)(v95 + v10[9]) = v128;
  id v96 = objc_msgSend(v48, sel_statusDescription);
  if (v96)
  {
    id v97 = v96;
    uint64_t v98 = sub_2439574B0();
    Swift::String v99 = LocalizedString.localizedString(for:)((Swift::OpaquePointer)v98);
    uint64_t countAndFlagsBits = v99._countAndFlagsBits;
    object = v99._object;

    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t countAndFlagsBits = 0;
    object = 0;
  }
  uint64_t v102 = v119;
  swift_bridgeObjectRelease();
  *uint64_t v102 = countAndFlagsBits;
  v102[1] = (uint64_t)object;
  id v103 = objc_msgSend(v48, sel_updatedDate);
  sub_2439573A0();

  id v104 = objc_msgSend(v74, sel_orderWebService);
  if (v104)
  {
    id v105 = v104;
    id v106 = objc_msgSend(v104, sel_baseURL);

    sub_243956F90();
    uint64_t v107 = 0;
  }
  else
  {
    uint64_t v107 = 1;
  }

  v121(v92, v107, 1, v122);
  return sub_2433865D8(v92, v123, &qword_26B0C98A0);
}

FinanceKit::RawOrderChangeNotificationsValue __swiftcall RawOrderChangeNotificationsValue.init(_:)(FinanceKit::RawOrderChangeNotificationsValue result)
{
  unsigned char *v1 = *(unsigned char *)result;
  return result;
}

Swift::Void __swiftcall RawECommerceOrderContent.clearFulfillments()()
{
  uint64_t v1 = *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 68);
  swift_bridgeObjectRelease();
  *(void *)(v0 + v1) = MEMORY[0x263F8EE78];
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> RawECommerceOrderContent.setFulfillments(_:)(Swift::OpaquePointer a1)
{
  uint64_t v2 = v1;
  v12[3] = MEMORY[0x263F8EE88];
  uint64_t v4 = sub_2437A1B00((uint64_t)a1._rawValue);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 40);
    while (1)
    {
      uint64_t v8 = *(v6 - 1);
      uint64_t v7 = *v6;
      swift_bridgeObjectRetain();
      char v9 = sub_243581000(v12, v8, v7);
      swift_bridgeObjectRelease();
      if ((v9 & 1) == 0) {
        break;
      }
      v6 += 2;
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2437AF364();
    swift_allocError();
    *uint64_t v11 = 2;
    swift_willThrow();
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    swift_bridgeObjectRelease();
    uint64_t v10 = *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 68);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(Swift::OpaquePointer *)(v2 + v10) = a1;
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> RawECommerceOrderContent.setReturns(_:)(Swift::OpaquePointer a1)
{
  uint64_t v4 = type metadata accessor for RawOrderReturn();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  _OWORD v19[3] = MEMORY[0x263F8EE88];
  uint64_t v9 = *((void *)a1._rawValue + 2);
  if (v9)
  {
    v18[0] = v1;
    v18[1] = v2;
    uint64_t v10 = (uint64_t *)&v8[*(int *)(v5 + 64)];
    uint64_t v11 = (char *)a1._rawValue
        + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v12 = *(void *)(v6 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_2437A6D74((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for RawOrderReturn);
      uint64_t v13 = *v10;
      uint64_t v14 = v10[1];
      swift_bridgeObjectRetain();
      sub_2437A6DDC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for RawOrderReturn);
      char v15 = sub_243581000(v19, v13, v14);
      swift_bridgeObjectRelease();
      if ((v15 & 1) == 0) {
        break;
      }
      v11 += v12;
      if (!--v9)
      {
        swift_bridgeObjectRelease();
        uint64_t v1 = v18[0];
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2437AF364();
    swift_allocError();
    *long long v17 = 3;
    swift_willThrow();
  }
  else
  {
LABEL_6:
    swift_bridgeObjectRelease();
    uint64_t v16 = *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(Swift::OpaquePointer *)(v1 + v16) = a1;
  }
}

uint64_t RawECommerceOrderContent.setAutomaticUpdatesInfo(webServiceURL:authenticationToken:allowHTTP:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result = sub_2437AF40C(a1, a2, a3, a4);
  if (!v5)
  {
    uint64_t v10 = type metadata accessor for RawECommerceOrderContent(0);
    uint64_t v11 = v4 + *(int *)(v10 + 96);
    sub_24337C1BC(v11, &qword_26B0C98A0);
    uint64_t v12 = sub_243957010();
    uint64_t v13 = *(void *)(v12 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v11, a1, v12);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
    uint64_t v14 = (uint64_t *)(v4 + *(int *)(v10 + 100));
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v14 = a2;
    v14[1] = a3;
  }
  return result;
}

uint64_t RawECommerceOrderContent.versionIdentifier.getter@<X0>(void *a1@<X8>)
{
  char v3 = (int *)type metadata accessor for RawECommerceOrderContent(0);
  uint64_t v4 = v3[6];
  uint64_t v5 = (uint64_t *)(v1 + v3[5]);
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  uint64_t v9 = *(void *)(v1 + v4);
  uint64_t v8 = *(void *)(v1 + v4 + 8);
  uint64_t v10 = v1 + v3[12];
  uint64_t v11 = (char *)a1 + *(int *)(type metadata accessor for Order.VersionIdentifier() + 20);
  uint64_t v12 = sub_243957400();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v11, v10, v12);
  *a1 = v7;
  a1[1] = v6;
  a1[2] = v9;
  a1[3] = v8;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t RawECommerceOrderContent.imageNames.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CC58);
  MEMORY[0x270FA5388](v1 - 8);
  char v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for RawOrderProvider();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = RawECommerceOrderContent.lineItemsImageNames.getter();
  uint64_t v8 = (uint64_t *)(v0 + *(int *)(type metadata accessor for RawMerchant() + 36));
  uint64_t v9 = v8[1];
  if (v9)
  {
    uint64_t v10 = *v8;
    swift_bridgeObjectRetain();
    sub_243581000(&v18, v10, v9);
    swift_bridgeObjectRelease();
  }
  uint64_t v11 = type metadata accessor for RawECommerceOrderContent(0);
  sub_24337C254(v0 + *(int *)(v11 + 92), (uint64_t)v3, &qword_268D9CC58);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_24337C1BC((uint64_t)v3, &qword_268D9CC58);
  }
  else
  {
    sub_2437A6D0C((uint64_t)v3, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for RawOrderProvider);
    uint64_t v12 = v7[4];
    uint64_t v13 = v7[5];
    swift_bridgeObjectRetain();
    sub_243581000(&v18, v12, v13);
    swift_bridgeObjectRelease();
    uint64_t v14 = v7[2];
    uint64_t v15 = v7[3];
    swift_bridgeObjectRetain();
    sub_243581000(&v18, v14, v15);
    swift_bridgeObjectRelease();
    sub_2437A6DDC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for RawOrderProvider);
  }
  return v19;
}

uint64_t RawECommerceOrderContent.lineItemsImageNames.getter()
{
  uint64_t v1 = type metadata accessor for RawOrderPickupFulfillment();
  MEMORY[0x270FA5388](v1 - 8);
  char v3 = (void *)((char *)v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for RawOrderShippingFulfillment();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (void *)((char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for RawOrderFulfillment();
  v42[0] = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = MEMORY[0x263F8EE88];
  uint64_t v43 = type metadata accessor for RawECommerceOrderContent(0);
  uint64_t v44 = v0;
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = sub_2437A25C8(v10);
  v42[1] = 0;
  swift_bridgeObjectRelease();
  uint64_t v12 = v11[2];
  if (v12)
  {
    uint64_t v13 = v11 + 5;
    do
    {
      uint64_t v14 = *(v13 - 1);
      uint64_t v15 = *v13;
      swift_bridgeObjectRetain();
      sub_243581000(&v45, v14, v15);
      swift_bridgeObjectRelease();
      v13 += 2;
      --v12;
    }
    while (v12);
  }
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(v44 + *(int *)(v43 + 68));
  uint64_t v17 = MEMORY[0x263F8EE78];
  uint64_t v45 = MEMORY[0x263F8EE78];
  uint64_t v18 = *(void *)(v16 + 16);
  if (v18)
  {
    uint64_t v19 = v16 + ((*(unsigned __int8 *)(v42[0] + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42[0] + 80));
    uint64_t v20 = *(void *)(v42[0] + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_2437A6D74(v19, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for RawOrderFulfillment);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_2437A6D0C((uint64_t)v9, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for RawOrderPickupFulfillment);
        uint64_t v21 = *v3;
        swift_bridgeObjectRetain();
        uint64_t v22 = type metadata accessor for RawOrderPickupFulfillment;
        uint64_t v23 = (uint64_t)v3;
      }
      else
      {
        sub_2437A6D0C((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for RawOrderShippingFulfillment);
        uint64_t v21 = *v6;
        swift_bridgeObjectRetain();
        uint64_t v22 = type metadata accessor for RawOrderShippingFulfillment;
        uint64_t v23 = (uint64_t)v6;
      }
      sub_2437A6DDC(v23, (uint64_t (*)(void))v22);
      sub_2433A7A9C(v21);
      v19 += v20;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease();
    uint64_t v24 = v45;
    uint64_t v17 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v24 = MEMORY[0x263F8EE78];
  }
  uint64_t v25 = sub_2437A25C8(v24);
  swift_bridgeObjectRelease();
  uint64_t v26 = v25[2];
  if (v26)
  {
    long long v27 = v25 + 5;
    do
    {
      uint64_t v28 = *(v27 - 1);
      uint64_t v29 = *v27;
      swift_bridgeObjectRetain();
      sub_243581000(&v45, v28, v29);
      swift_bridgeObjectRelease();
      v27 += 2;
      --v26;
    }
    while (v26);
  }
  swift_bridgeObjectRelease();
  uint64_t v30 = *(void *)(v44 + *(int *)(v43 + 64));
  uint64_t v45 = v17;
  uint64_t v31 = *(void *)(v30 + 16);
  if (v31)
  {
    uint64_t v32 = *(void *)(type metadata accessor for RawOrderReturn() - 8);
    unint64_t v33 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
    uint64_t v34 = *(void *)(v32 + 72);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v35 = swift_bridgeObjectRetain();
      sub_2433A7A9C(v35);
      v33 += v34;
      --v31;
    }
    while (v31);
    swift_bridgeObjectRelease();
    uint64_t v17 = v45;
  }
  uint64_t v36 = sub_2437A25C8(v17);
  swift_bridgeObjectRelease();
  uint64_t v37 = v36[2];
  if (v37)
  {
    uint64_t v38 = v36 + 5;
    do
    {
      uint64_t v39 = *(v38 - 1);
      uint64_t v40 = *v38;
      swift_bridgeObjectRetain();
      sub_243581000(&v45, v39, v40);
      swift_bridgeObjectRelease();
      v38 += 2;
      --v37;
    }
    while (v37);
  }
  swift_bridgeObjectRelease();
  return v46;
}

uint64_t RawECommerceOrderContent.receiptNames.getter()
{
  if (!*(void *)(v0 + *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 56) + 40)) {
    return MEMORY[0x263F8EE88];
  }
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = sub_2437A26CC(v1);
  swift_bridgeObjectRelease();
  uint64_t v3 = sub_2433FA098((uint64_t)v2);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t RawECommerceOrderContent.returnLabelNames.getter()
{
  type metadata accessor for RawECommerceOrderContent(0);
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_2437A2844(v0);
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_2433FA098((uint64_t)v1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t RawECommerceOrderContent.isActive.getter()
{
  uint64_t v1 = type metadata accessor for RawOrderReturn();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for RawECommerceOrderContent(0);
  if (*(unsigned char *)(v0 + *(int *)(v5 + 36)))
  {
    if (*(unsigned char *)(v0 + *(int *)(v5 + 36)) != 1) {
      return 0;
    }
    uint64_t v6 = *(void *)(v0 + *(int *)(v5 + 64));
    uint64_t v7 = *(void *)(v6 + 16);
    if (!v7) {
      return 0;
    }
    uint64_t v8 = v6 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v9 = *(void *)(v2 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_2437A6D74(v8, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for RawOrderReturn);
      unsigned int v10 = v4[8];
      sub_2437A6DDC((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for RawOrderReturn);
      if (v10 <= 3) {
        break;
      }
      v8 += v9;
      if (!--v7)
      {
        swift_bridgeObjectRelease();
        return 0;
      }
    }
    swift_bridgeObjectRelease();
    return 1;
  }
  uint64_t v12 = swift_bridgeObjectRetain();
  uint64_t v13 = sub_2437A131C(v12);
  swift_bridgeObjectRelease();
  uint64_t v23 = v13;
  uint64_t v14 = swift_bridgeObjectRetain();
  uint64_t v15 = sub_2437A1614(v14);
  swift_bridgeObjectRelease();
  sub_2433A7764(v15);
  uint64_t result = v23;
  uint64_t v17 = *(void *)(v23 + 16);
  if (!v17 || *(unsigned char *)(v23 + 32) != 1)
  {
    uint64_t v11 = 1;
    swift_bridgeObjectRelease();
    return v11;
  }
  if (v17 == 1)
  {
    uint64_t v11 = 0;
    swift_bridgeObjectRelease();
    return v11;
  }
  uint64_t v18 = 33;
  while (1)
  {
    uint64_t v19 = v18 - 31;
    if (__OFADD__(v18 - 32, 1)) {
      break;
    }
    int v20 = *(unsigned __int8 *)(v23 + v18++);
    if (v20 != 1 || v19 == v17)
    {
      uint64_t v11 = v20 ^ 1u;
      swift_bridgeObjectRelease();
      return v11;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2437AA628@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v199 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9FEE8);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v187 = (uint64_t)&v185 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  v203 = (char *)&v185 - v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v193 = (uint64_t)&v185 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v201 = (char *)&v185 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v209 = (uint64_t)&v185 - v12;
  uint64_t v234 = type metadata accessor for RawOrderReturn();
  uint64_t v13 = *(void *)(v234 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v234);
  uint64_t v225 = (uint64_t)&v185 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v185 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  v228 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v185 - v20);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v185 - v21;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9FD30);
  uint64_t v24 = MEMORY[0x270FA5388](v23 - 8);
  uint64_t v224 = (uint64_t)&v185 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  v226 = (char *)&v185 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  v233 = (uint64_t *)((char *)&v185 - v29);
  MEMORY[0x270FA5388](v28);
  uint64_t v31 = (char *)&v185 - v30;
  uint64_t v229 = sub_243957400();
  uint64_t v32 = *(void *)(v229 - 8);
  uint64_t v33 = MEMORY[0x270FA5388](v229);
  uint64_t v188 = (char *)&v185 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v192 = (char *)&v185 - v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  v202 = (char *)&v185 - v38;
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v195 = (uint64_t)&v185 - v40;
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  v218 = (char *)&v185 - v42;
  MEMORY[0x270FA5388](v41);
  v227 = (char *)&v185 - v43;
  uint64_t v44 = type metadata accessor for RawECommerceOrderContent(0);
  uint64_t v45 = MEMORY[0x270FA5388](v44);
  uint64_t v189 = (uint64_t)&v185 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = MEMORY[0x270FA5388](v45);
  uint64_t v194 = (uint64_t)&v185 - v48;
  uint64_t v49 = MEMORY[0x270FA5388](v47);
  uint64_t v212 = (uint64_t)&v185 - v50;
  uint64_t v51 = MEMORY[0x270FA5388](v49);
  uint64_t v219 = (uint64_t)&v185 - v52;
  MEMORY[0x270FA5388](v51);
  uint64_t v54 = (char *)&v185 - v53;
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
  uint64_t v56 = MEMORY[0x270FA5388](v55 - 8);
  uint64_t v190 = (uint64_t)&v185 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = MEMORY[0x270FA5388](v56);
  uint64_t v60 = (char *)&v185 - v59;
  uint64_t v61 = MEMORY[0x270FA5388](v58);
  v198 = (char *)&v185 - v62;
  uint64_t v63 = MEMORY[0x270FA5388](v61);
  uint64_t v191 = (uint64_t)&v185 - v64;
  uint64_t v65 = MEMORY[0x270FA5388](v63);
  uint64_t v196 = (uint64_t)&v185 - v66;
  uint64_t v67 = MEMORY[0x270FA5388](v65);
  uint64_t v197 = (char *)&v185 - v68;
  uint64_t v69 = MEMORY[0x270FA5388](v67);
  uint64_t v204 = (char *)&v185 - v70;
  uint64_t v71 = MEMORY[0x270FA5388](v69);
  uint64_t v186 = (char *)&v185 - v72;
  uint64_t v73 = MEMORY[0x270FA5388](v71);
  v231 = (char *)&v185 - v74;
  uint64_t v75 = MEMORY[0x270FA5388](v73);
  v223 = (char *)&v185 - v76;
  uint64_t v77 = MEMORY[0x270FA5388](v75);
  id v79 = (char *)&v185 - v78;
  uint64_t v80 = MEMORY[0x270FA5388](v77);
  v230 = (char *)&v185 - v81;
  uint64_t v82 = MEMORY[0x270FA5388](v80);
  v200 = (char *)&v185 - v83;
  MEMORY[0x270FA5388](v82);
  uint64_t v207 = (uint64_t)&v185 - v84;
  uint64_t v211 = v44;
  uint64_t v85 = *(void *)(v2 + *(int *)(v44 + 64));
  uint64_t v208 = v2;
  v213 = v54;
  sub_2437A6D74(v2, (uint64_t)v54, type metadata accessor for RawECommerceOrderContent);
  uint64_t v86 = *(void *)(v85 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v86)
  {
LABEL_6:
    uint64_t v90 = v234;
    v222 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v222(v31, 1, 1, v234);
    unint64_t v89 = v86;
LABEL_8:
    uint64_t v91 = (uint64_t)v31;
    uint64_t v92 = (unsigned int (*)(void, void, void))v233;
    sub_24337BF80(v91, (uint64_t)v233, &qword_268D9FD30);
    v220 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
    uint64_t v221 = v13 + 48;
    int v93 = v220((uint64_t)v92, 1, v90);
    v205 = v60;
    if (v93 == 1)
    {
      uint64_t v95 = v229;
      uint64_t v94 = (uint64_t)v230;
      v228 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56);
      v228(v230, 1, 1, v229);
      id v96 = *(void **)(v32 + 48);
      uint64_t v97 = (v32 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
    }
    else
    {
      uint64_t v98 = (uint64_t)v92;
      Swift::String v99 = v228;
      sub_2437A6D0C(v98, (uint64_t)v228, (uint64_t (*)(void))type metadata accessor for RawOrderReturn);
      uint64_t v100 = *(int *)(v90 + 40);
      long long v101 = v99;
      uint64_t v102 = v79;
      sub_24337C254((uint64_t)v99 + v100, (uint64_t)v79, (uint64_t *)&unk_26B0C8E20);
      uint64_t v103 = v219;
      sub_2437A6D74((uint64_t)v213, v219, type metadata accessor for RawECommerceOrderContent);
      id v104 = *(void **)(v32 + 48);
      uint64_t v232 = (v32 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
      v233 = v104;
      id v105 = v79;
      uint64_t v95 = v229;
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v104)(v105, 1, v229) == 1)
      {
        uint64_t v106 = (uint64_t)v102;
        uint64_t v107 = v230;
        (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v230, v103 + *(int *)(v211 + 48), v95);
        uint64_t v108 = v106;
        long long v101 = v228;
        sub_24337C1BC(v108, (uint64_t *)&unk_26B0C8E20);
      }
      else
      {
        long long v109 = v102;
        uint64_t v107 = v230;
        (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v230, v109, v95);
      }
      uint64_t v110 = v103;
      uint64_t v94 = (uint64_t)v107;
      sub_2437A6DDC(v110, type metadata accessor for RawECommerceOrderContent);
      sub_2437A6DDC((uint64_t)v101, (uint64_t (*)(void))type metadata accessor for RawOrderReturn);
      v228 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56);
      v228(v107, 0, 1, v95);
      uint64_t v97 = v232;
      id v96 = v233;
    }
    uint64_t v232 = v97;
    v233 = v96;
    unsigned int v111 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v96)(v94, 1, v95);
    uint64_t v206 = v32;
    if (v111 == 1)
    {
      sub_24337C1BC(v94, (uint64_t *)&unk_26B0C8E20);
      uint64_t v112 = (uint64_t)v200;
      v228(v200, 1, 1, v95);
      swift_bridgeObjectRelease();
      uint64_t v113 = v208;
      uint64_t v114 = v207;
      uint64_t v115 = (uint64_t)v201;
      uint64_t v116 = v205;
LABEL_35:
      sub_2437A6DDC((uint64_t)v213, type metadata accessor for RawECommerceOrderContent);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v233)(v112, 1, v95) == 1)
      {
        sub_24337C1BC(v112, (uint64_t *)&unk_26B0C8E20);
        uint64_t v135 = 1;
      }
      else
      {
        uint64_t v136 = v195;
        Date.noon.getter(v195);
        uint64_t v137 = v112;
        uint64_t v138 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
        v138(v137, v95);
        Date.advancedByDays(_:)(1, v114);
        v138(v136, v95);
        uint64_t v135 = 0;
      }
      uint64_t v139 = 1;
      v228((char *)v114, v135, 1, v95);
      uint64_t v234 = *(int *)(v211 + 68);
      uint64_t v140 = *(void *)(v113 + v234);
      unint64_t v141 = Array<A>.shippingFulfillments.getter(v140);
      uint64_t v142 = *(void *)(v141 + 16);
      unint64_t v89 = type metadata accessor for RawOrderShippingFulfillment();
      uint64_t v143 = *(void *)(v89 - 8);
      uint64_t v144 = (uint64_t)v116;
      uint64_t v145 = v209;
      if (v142)
      {
        sub_2437A6D74(v141+ ((*(unsigned __int8 *)(*(void *)(v89 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v89 - 8) + 80)), v209, (uint64_t (*)(void))type metadata accessor for RawOrderShippingFulfillment);
        uint64_t v139 = 0;
      }
      uint64_t v146 = (uint64_t)v203;
      (*(void (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v143 + 56))(v145, v139, 1, v89);
      swift_bridgeObjectRelease();
      uint64_t v147 = *(void *)(v140 + 16);
      sub_24337C254(v145, v115, &qword_268D9FEE8);
      if (v147 != 1) {
        goto LABEL_44;
      }
      uint64_t v148 = v193;
      sub_24337C254(v115, v193, &qword_268D9FEE8);
      uint64_t v149 = *(unsigned int (**)(uint64_t, uint64_t, unint64_t))(v143 + 48);
      if (v149(v148, 1, v89) == 1)
      {
        sub_24337C1BC(v148, &qword_268D9FEE8);
        uint64_t v145 = v209;
LABEL_44:
        sub_24337C1BC(v115, &qword_268D9FEE8);
        sub_24337C254(v145, v146, &qword_268D9FEE8);
LABEL_45:
        sub_24337C1BC(v146, &qword_268D9FEE8);
        int v151 = 0;
        uint64_t v152 = v229;
        uint64_t v153 = v207;
        uint64_t v154 = v202;
        uint64_t v86 = (uint64_t)v204;
        uint64_t v119 = v144;
        goto LABEL_46;
      }
      int v150 = *(unsigned __int8 *)(v148 + 40);
      sub_2437A6DDC(v148, (uint64_t (*)(void))type metadata accessor for RawOrderShippingFulfillment);
      uint64_t v145 = v209;
      if (v150 == 8) {
        goto LABEL_44;
      }
      char v181 = sub_24346E998(v150, 2);
      sub_24337C1BC(v115, &qword_268D9FEE8);
      sub_24337C254(v145, v146, &qword_268D9FEE8);
      if ((v181 & 1) == 0) {
        goto LABEL_45;
      }
      uint64_t v97 = v187;
      sub_24337BF80(v146, v187, &qword_268D9FEE8);
      unsigned int v182 = v149(v97, 1, v89);
      uint64_t v86 = (uint64_t)v204;
      uint64_t v119 = v144;
      if (v182 == 1)
      {
        sub_24337C1BC(v97, &qword_268D9FEE8);
        uint64_t v183 = (uint64_t)v186;
        uint64_t v184 = v229;
        v228(v186, 1, 1, v229);
        uint64_t v152 = v184;
        goto LABEL_71;
      }
    }
    else
    {
      uint64_t v118 = *(char **)(v32 + 32);
      uint64_t v117 = v32 + 32;
      v230 = v118;
      ((void (*)(char *, uint64_t, uint64_t))v118)(v227, v94, v95);
      uint64_t v217 = v13 + 56;
      v210 = (void (**)(char *, uint64_t, uint64_t))(v117 - 16);
      uint64_t v219 = v117 + 24;
      v215 = (void (**)(char *, uint64_t))(v117 - 24);
      uint64_t v216 = v117;
      uint64_t v119 = v234;
      uint64_t v120 = (uint64_t)v226;
      uint64_t v121 = (uint64_t)v231;
      uint64_t v214 = v86;
      while (v89 == v86)
      {
LABEL_23:
        v222((char *)v120, 1, 1, v119);
        unint64_t v89 = v86;
LABEL_25:
        uint64_t v122 = v120;
        uint64_t v123 = v224;
        sub_24337BF80(v122, v224, &qword_268D9FD30);
        if (v220(v123, 1, v119) == 1)
        {
          uint64_t v124 = (uint64_t)v223;
          uint64_t v97 = v229;
          v228(v223, 1, 1, v229);
          id v125 = v226;
        }
        else
        {
          uint64_t v126 = v123;
          uint64_t v127 = v225;
          sub_2437A6D0C(v126, v225, (uint64_t (*)(void))type metadata accessor for RawOrderReturn);
          sub_24337C254(v127 + *(int *)(v119 + 40), v121, (uint64_t *)&unk_26B0C8E20);
          uint64_t v128 = v212;
          sub_2437A6D74((uint64_t)v213, v212, type metadata accessor for RawECommerceOrderContent);
          uint64_t v97 = v229;
          if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v233)(v121, 1, v229) == 1)
          {
            uint64_t v124 = (uint64_t)v223;
            (*v210)(v223, v128 + *(int *)(v211 + 48), v97);
            sub_24337C1BC(v121, (uint64_t *)&unk_26B0C8E20);
          }
          else
          {
            uint64_t v124 = (uint64_t)v223;
            ((void (*)(char *, uint64_t, uint64_t))v230)(v223, v121, v97);
          }
          id v125 = v226;
          sub_2437A6DDC(v128, type metadata accessor for RawECommerceOrderContent);
          sub_2437A6DDC(v225, (uint64_t (*)(void))type metadata accessor for RawOrderReturn);
          v228((char *)v124, 0, 1, v97);
        }
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v233)(v124, 1, v97) == 1)
        {
          sub_24337C1BC(v124, (uint64_t *)&unk_26B0C8E20);
          uint64_t v112 = (uint64_t)v200;
          ((void (*)(char *, char *, uint64_t))v230)(v200, v227, v97);
          v228((char *)v112, 0, 1, v97);
          swift_bridgeObjectRelease();
          uint64_t v95 = v97;
          uint64_t v32 = v206;
          uint64_t v113 = v208;
          uint64_t v114 = v207;
          uint64_t v116 = v205;
          uint64_t v115 = (uint64_t)v201;
          goto LABEL_35;
        }
        long long v129 = v218;
        long long v130 = v230;
        ((void (*)(char *, uint64_t, uint64_t))v230)(v218, v124, v97);
        sub_2437B99A4((unint64_t *)&qword_268D97D28, MEMORY[0x263F07490]);
        long long v131 = v129;
        uint64_t v132 = v227;
        char v133 = sub_243958240();
        uint64_t v134 = *v215;
        if (v133)
        {
          v134(v132, v97);
          ((void (*)(char *, char *, uint64_t))v130)(v132, v131, v97);
        }
        else
        {
          v134(v131, v97);
        }
        uint64_t v119 = v234;
        uint64_t v121 = (uint64_t)v231;
        uint64_t v120 = (uint64_t)v125;
        uint64_t v86 = v214;
      }
      while (v89 < *(void *)(v85 + 16))
      {
        uint64_t v97 = v89 + 1;
        sub_2437A6D74(v85+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(void *)(v13 + 72) * v89, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for RawOrderReturn);
        if (v18[8] > 3u)
        {
          sub_2437A6D0C((uint64_t)v18, v120, (uint64_t (*)(void))type metadata accessor for RawOrderReturn);
          uint64_t v119 = v234;
          v222((char *)v120, 0, 1, v234);
          ++v89;
          uint64_t v121 = (uint64_t)v231;
          goto LABEL_25;
        }
        sub_2437A6DDC((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for RawOrderReturn);
        ++v89;
        uint64_t v119 = v234;
        if (v86 == v97) {
          goto LABEL_23;
        }
      }
      __break(1u);
    }
    uint64_t v183 = (uint64_t)v186;
    sub_24337C254(v97 + *(int *)(v89 + 68), (uint64_t)v186, (uint64_t *)&unk_26B0C8E20);
    sub_2437A6DDC(v97, (uint64_t (*)(void))type metadata accessor for RawOrderShippingFulfillment);
    uint64_t v152 = v229;
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v233)(v183, 1, v229) != 1)
    {
      int v151 = 0;
      goto LABEL_73;
    }
LABEL_71:
    int v151 = 1;
LABEL_73:
    uint64_t v153 = v207;
    uint64_t v154 = v202;
    sub_24337C1BC(v183, (uint64_t *)&unk_26B0C8E20);
LABEL_46:
    sub_24337C254(v153, v86, (uint64_t *)&unk_26B0C8E20);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v233)(v86, 1, v152) == 1)
    {
      uint64_t v155 = sub_24337C1BC(v86, (uint64_t *)&unk_26B0C8E20);
    }
    else
    {
      uint64_t v156 = v206;
      uint64_t v157 = *(void (**)(char *, uint64_t, uint64_t))(v206 + 32);
      v157(v154, v86, v152);
      if (v151)
      {
        sub_24337C1BC(v209, &qword_268D9FEE8);
        sub_24337C1BC(v153, (uint64_t *)&unk_26B0C8E20);
        return ((uint64_t (*)(uint64_t, char *, uint64_t))v157)(v199, v154, v152);
      }
      uint64_t v155 = (*(uint64_t (**)(char *, uint64_t))(v156 + 8))(v154, v152);
    }
    uint64_t v158 = *(void *)(v208 + v234);
    MEMORY[0x270FA5388](v155);
    *(&v185 - 2) = v159;
    swift_bridgeObjectRetain();
    unint64_t v160 = sub_2437A228C((void (*)(void))sub_2437B99EC, (uint64_t)(&v185 - 4), v158);
    swift_bridgeObjectRelease();
    uint64_t v161 = v197;
    sub_2435781A4(v160, v197);
    swift_bridgeObjectRelease();
    uint64_t v162 = v196;
    sub_24337C254((uint64_t)v161, v196, (uint64_t *)&unk_26B0C8E20);
    uint64_t v163 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v233;
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v233)(v162, 1, v152) == 1)
    {
      uint64_t v164 = v162;
      uint64_t v165 = v206;
      uint64_t v166 = (uint64_t)v198;
    }
    else
    {
      uint64_t v165 = v206;
      uint64_t v167 = *(void (**)(char *, uint64_t, uint64_t))(v206 + 32);
      unint64_t v168 = v192;
      v167(v192, v162, v152);
      uint64_t v169 = v191;
      sub_24337C254(v153, v191, (uint64_t *)&unk_26B0C8E20);
      int v170 = v163(v169, 1, v152);
      uint64_t v166 = (uint64_t)v198;
      if (v170 != 1)
      {
        uint64_t v177 = v188;
        v167(v188, v169, v152);
        sub_2437B99A4((unint64_t *)&qword_268D97D28, MEMORY[0x263F07490]);
        if (sub_243958250()) {
          uint64_t v178 = v177;
        }
        else {
          uint64_t v178 = v168;
        }
        (*(void (**)(uint64_t, char *, uint64_t))(v165 + 16))(v199, v178, v152);
        uint64_t v179 = *(void (**)(char *, uint64_t))(v165 + 8);
        v179(v177, v152);
        v179(v168, v152);
        sub_24337C1BC((uint64_t)v161, (uint64_t *)&unk_26B0C8E20);
        sub_24337C1BC(v209, &qword_268D9FEE8);
        uint64_t v180 = v153;
        return sub_24337C1BC(v180, (uint64_t *)&unk_26B0C8E20);
      }
      (*(void (**)(char *, uint64_t))(v165 + 8))(v168, v152);
      uint64_t v119 = (uint64_t)v205;
      uint64_t v164 = v169;
    }
    sub_24337C1BC(v164, (uint64_t *)&unk_26B0C8E20);
    sub_24337C254((uint64_t)v161, v166, (uint64_t *)&unk_26B0C8E20);
    sub_24337C254(v153, v119, (uint64_t *)&unk_26B0C8E20);
    uint64_t v171 = v194;
    sub_2437A6D74(v208, v194, type metadata accessor for RawECommerceOrderContent);
    long long v172 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v233;
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v233)(v166, 1, v152) != 1)
    {
      sub_2437A6DDC(v171, type metadata accessor for RawECommerceOrderContent);
      sub_24337C1BC(v119, (uint64_t *)&unk_26B0C8E20);
      sub_24337C1BC((uint64_t)v161, (uint64_t *)&unk_26B0C8E20);
      sub_24337C1BC(v209, &qword_268D9FEE8);
      sub_24337C1BC(v153, (uint64_t *)&unk_26B0C8E20);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v165 + 32))(v199, v166, v152);
    }
    uint64_t v173 = v190;
    sub_24337C254(v119, v190, (uint64_t *)&unk_26B0C8E20);
    uint64_t v174 = v189;
    sub_2437A6D74(v171, v189, type metadata accessor for RawECommerceOrderContent);
    if (v172(v173, 1, v152) == 1)
    {
      uint64_t v175 = v174;
      uint64_t v176 = v195;
      Date.noon.getter(v195);
      Date.advancedByDays(_:)(1, v199);
      (*(void (**)(uint64_t, uint64_t))(v165 + 8))(v176, v152);
      sub_2437A6DDC(v175, type metadata accessor for RawECommerceOrderContent);
      sub_2437A6DDC(v171, type metadata accessor for RawECommerceOrderContent);
      sub_24337C1BC(v119, (uint64_t *)&unk_26B0C8E20);
      sub_24337C1BC((uint64_t)v161, (uint64_t *)&unk_26B0C8E20);
      sub_24337C1BC(v209, &qword_268D9FEE8);
      sub_24337C1BC(v207, (uint64_t *)&unk_26B0C8E20);
      sub_24337C1BC(v173, (uint64_t *)&unk_26B0C8E20);
    }
    else
    {
      sub_2437A6DDC(v174, type metadata accessor for RawECommerceOrderContent);
      sub_2437A6DDC(v171, type metadata accessor for RawECommerceOrderContent);
      sub_24337C1BC(v119, (uint64_t *)&unk_26B0C8E20);
      sub_24337C1BC((uint64_t)v161, (uint64_t *)&unk_26B0C8E20);
      sub_24337C1BC(v209, &qword_268D9FEE8);
      sub_24337C1BC(v207, (uint64_t *)&unk_26B0C8E20);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v165 + 32))(v199, v173, v152);
    }
    uint64_t v180 = v166;
    return sub_24337C1BC(v180, (uint64_t *)&unk_26B0C8E20);
  }
  unint64_t v88 = 0;
  while (v88 < *(void *)(v85 + 16))
  {
    unint64_t v89 = v88 + 1;
    sub_2437A6D74(v85+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(void *)(v13 + 72) * v88, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for RawOrderReturn);
    if (v22[8] > 3u)
    {
      sub_2437A6D0C((uint64_t)v22, (uint64_t)v31, (uint64_t (*)(void))type metadata accessor for RawOrderReturn);
      uint64_t v90 = v234;
      v222 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
      v222(v31, 0, 1, v234);
      goto LABEL_8;
    }
    uint64_t result = sub_2437A6DDC((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for RawOrderReturn);
    unint64_t v88 = v89;
    if (v86 == v89) {
      goto LABEL_6;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2437AC008@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v72 = a3;
  uint64_t v71 = a2;
  uint64_t v75 = a1;
  uint64_t v65 = type metadata accessor for RawOrderPickupFulfillment();
  MEMORY[0x270FA5388](v65);
  uint64_t v4 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = type metadata accessor for RawECommerceOrderContent(0);
  uint64_t v5 = MEMORY[0x270FA5388](v68);
  uint64_t v67 = (uint64_t)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v64 = (uint64_t)&v60 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v62 = (uint64_t)&v60 - v9;
  uint64_t v10 = sub_243957400();
  uint64_t v73 = *(void *)(v10 - 8);
  uint64_t v74 = v10;
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v66 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v70 = (uint64_t)&v60 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v63 = (char *)&v60 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v61 = (char *)&v60 - v17;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
  uint64_t v19 = MEMORY[0x270FA5388](v18 - 8);
  uint64_t v21 = (char *)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  uint64_t v24 = (char *)&v60 - v23;
  uint64_t v25 = MEMORY[0x270FA5388](v22);
  uint64_t v27 = (char *)&v60 - v26;
  uint64_t v28 = MEMORY[0x270FA5388](v25);
  uint64_t v30 = (char *)&v60 - v29;
  MEMORY[0x270FA5388](v28);
  uint64_t v69 = (uint64_t)&v60 - v31;
  uint64_t v32 = type metadata accessor for RawOrderShippingFulfillment();
  MEMORY[0x270FA5388](v32);
  uint64_t v34 = (char *)&v60 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for RawOrderFulfillment();
  MEMORY[0x270FA5388](v35);
  uint64_t v37 = (char *)&v60 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2437A6D74(v75, (uint64_t)v37, (uint64_t (*)(void))type metadata accessor for RawOrderFulfillment);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2437A6D0C((uint64_t)v37, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for RawOrderPickupFulfillment);
    int v38 = v4[8];
    uint64_t v39 = (uint64_t)v4;
    if (v38 == 5 || v38 == 3)
    {
      sub_24337C254((uint64_t)&v4[*(int *)(v65 + 56)], (uint64_t)v21, (uint64_t *)&unk_26B0C8E20);
      uint64_t v40 = v67;
      sub_2437A6D74(v71, v67, type metadata accessor for RawECommerceOrderContent);
      uint64_t v42 = v73;
      uint64_t v41 = v74;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v21, 1, v74) == 1)
      {
        uint64_t v43 = v66;
        (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v66, v40 + *(int *)(v68 + 48), v41);
        sub_2437A6DDC(v40, type metadata accessor for RawECommerceOrderContent);
        sub_24337C1BC((uint64_t)v21, (uint64_t *)&unk_26B0C8E20);
      }
      else
      {
        sub_2437A6DDC(v40, type metadata accessor for RawECommerceOrderContent);
        uint64_t v43 = v66;
        (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v66, v21, v41);
      }
      uint64_t v52 = v72;
      uint64_t v53 = v70;
      Date.noon.getter(v70);
      uint64_t v54 = *(void (**)(char *, uint64_t))(v42 + 8);
      v54(v43, v41);
      Date.advancedByDays(_:)(1, (uint64_t)v24);
      v54((char *)v53, v41);
      uint64_t v51 = 0;
    }
    else
    {
      uint64_t v51 = 1;
      uint64_t v52 = v72;
      uint64_t v42 = v73;
      uint64_t v41 = v74;
    }
    sub_2437A6DDC(v39, (uint64_t (*)(void))type metadata accessor for RawOrderPickupFulfillment);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 56))(v24, v51, 1, v41);
    uint64_t v55 = (uint64_t)v24;
  }
  else
  {
    sub_2437A6D0C((uint64_t)v37, (uint64_t)v34, (uint64_t (*)(void))type metadata accessor for RawOrderShippingFulfillment);
    int v44 = v34[40];
    if (v44 == 7 || v44 == 5)
    {
      sub_24337C254((uint64_t)&v34[*(int *)(v32 + 60)], (uint64_t)v27, (uint64_t *)&unk_26B0C8E20);
      uint64_t v49 = v64;
      sub_2437A6D74(v71, v64, type metadata accessor for RawECommerceOrderContent);
      uint64_t v47 = v73;
      uint64_t v46 = v74;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v27, 1, v74) == 1)
      {
        uint64_t v50 = v63;
        (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v63, v49 + *(int *)(v68 + 48), v46);
        sub_2437A6DDC(v49, type metadata accessor for RawECommerceOrderContent);
        sub_24337C1BC((uint64_t)v27, (uint64_t *)&unk_26B0C8E20);
      }
      else
      {
        sub_2437A6DDC(v49, type metadata accessor for RawECommerceOrderContent);
        uint64_t v50 = v63;
        (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v63, v27, v46);
      }
      uint64_t v52 = v72;
      uint64_t v55 = v69;
      uint64_t v56 = v70;
      Date.noon.getter(v70);
      uint64_t v57 = *(void (**)(char *, uint64_t))(v47 + 8);
      v57(v50, v46);
      Date.advancedByDays(_:)(1, v55);
      v57((char *)v56, v46);
      uint64_t v58 = 0;
    }
    else if (v44 == 2)
    {
      sub_24337C254((uint64_t)&v34[*(int *)(v32 + 68)], (uint64_t)v30, (uint64_t *)&unk_26B0C8E20);
      uint64_t v45 = v62;
      sub_2437A6D74(v71, v62, type metadata accessor for RawECommerceOrderContent);
      uint64_t v47 = v73;
      uint64_t v46 = v74;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v30, 1, v74) == 1)
      {
        uint64_t v48 = v61;
        (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v61, v45 + *(int *)(v68 + 48), v46);
        sub_2437A6DDC(v45, type metadata accessor for RawECommerceOrderContent);
        sub_24337C1BC((uint64_t)v30, (uint64_t *)&unk_26B0C8E20);
      }
      else
      {
        sub_2437A6DDC(v45, type metadata accessor for RawECommerceOrderContent);
        uint64_t v48 = v61;
        (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v61, v30, v46);
      }
      uint64_t v52 = v72;
      uint64_t v55 = v69;
      Date.advancedByDays(_:)(14, v69);
      (*(void (**)(char *, uint64_t))(v47 + 8))(v48, v46);
      uint64_t v58 = 0;
    }
    else
    {
      uint64_t v58 = 1;
      uint64_t v52 = v72;
      uint64_t v47 = v73;
      uint64_t v46 = v74;
      uint64_t v55 = v69;
    }
    sub_2437A6DDC((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for RawOrderShippingFulfillment);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56))(v55, v58, 1, v46);
  }
  return sub_24337BF80(v55, v52, (uint64_t *)&unk_26B0C8E20);
}

uint64_t RawECommerceOrderContent.supportsAutomaticUpdates.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for RawECommerceOrderContent(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24337C254(v1 + *(int *)(v2 + 96), (uint64_t)v7, &qword_26B0C98A0);
  uint64_t v8 = sub_243957010();
  int v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8);
  sub_24337C1BC((uint64_t)v7, &qword_26B0C98A0);
  sub_2437A6D74(v1, (uint64_t)v4, type metadata accessor for RawECommerceOrderContent);
  if (v9 == 1)
  {
    sub_2437A6DDC((uint64_t)v4, type metadata accessor for RawECommerceOrderContent);
  }
  else
  {
    uint64_t v10 = *(void *)&v4[*(int *)(v2 + 100) + 8];
    swift_bridgeObjectRetain();
    sub_2437A6DDC((uint64_t)v4, type metadata accessor for RawECommerceOrderContent);
    if (v10)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
  }
  return 0;
}

FinanceKit::RawOrderChangeNotificationsValue_optional __swiftcall RawOrderChangeNotificationsValue.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_2439595E0();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  char *v2 = v5;
  return result;
}

void *static RawOrderChangeNotificationsValue.allCases.getter()
{
  return &unk_26F8AE4A8;
}

uint64_t RawOrderChangeNotificationsValue.rawValue.getter()
{
  if (*v0) {
    return 0xD000000000000016;
  }
  else {
    return 0x64656C62616E65;
  }
}

uint64_t sub_2437ACB50(char *a1, char *a2)
{
  return sub_243470874(*a1, *a2);
}

uint64_t sub_2437ACB5C()
{
  return sub_243959B40();
}

uint64_t sub_2437ACBE4()
{
  sub_2439581F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2437ACC58()
{
  return sub_243959B40();
}

FinanceKit::RawOrderChangeNotificationsValue_optional sub_2437ACCDC(Swift::String *a1)
{
  return RawOrderChangeNotificationsValue.init(rawValue:)(*a1);
}

void sub_2437ACCE8(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0x64656C62616E65;
  if (*v1) {
    unint64_t v2 = 0xD000000000000016;
  }
  unint64_t v3 = 0x80000002439A2D00;
  if (!*v1) {
    unint64_t v3 = 0xE700000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_2437ACD2C()
{
  return sub_2439585D0();
}

uint64_t sub_2437ACD8C()
{
  return sub_243958580();
}

void sub_2437ACDDC(void *a1@<X8>)
{
  *a1 = &unk_26F8AE4D0;
}

uint64_t _s10FinanceKit24RawECommerceOrderContentV0F4ItemO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RawOrderReturn();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for RawOrderFulfillment();
  MEMORY[0x270FA5388](v7 - 8);
  int v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for RawECommerceOrderContent.ContentItem(0);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v27 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9FEB0);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (uint64_t)&v19[*(int *)(v17 + 56)];
  sub_2437A6D74(a1, (uint64_t)v19, type metadata accessor for RawECommerceOrderContent.ContentItem);
  sub_2437A6D74(a2, v20, type metadata accessor for RawECommerceOrderContent.ContentItem);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2437A6D74((uint64_t)v19, (uint64_t)v13, type metadata accessor for RawECommerceOrderContent.ContentItem);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2437A6D0C(v20, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for RawOrderReturn);
      char v21 = static RawOrderReturn.== infix(_:_:)((uint64_t)v13, (uint64_t)v6);
      sub_2437A6DDC((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for RawOrderReturn);
      uint64_t v22 = (uint64_t)v13;
      uint64_t v23 = type metadata accessor for RawOrderReturn;
LABEL_9:
      sub_2437A6DDC(v22, (uint64_t (*)(void))v23);
      sub_2437A6DDC((uint64_t)v19, type metadata accessor for RawECommerceOrderContent.ContentItem);
      return v21 & 1;
    }
    uint64_t v24 = type metadata accessor for RawOrderReturn;
    uint64_t v25 = (uint64_t)v13;
  }
  else
  {
    sub_2437A6D74((uint64_t)v19, (uint64_t)v15, type metadata accessor for RawECommerceOrderContent.ContentItem);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_2437A6D0C(v20, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for RawOrderFulfillment);
      char v21 = static RawOrderFulfillment.== infix(_:_:)(v15, v9);
      sub_2437A6DDC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for RawOrderFulfillment);
      uint64_t v22 = (uint64_t)v15;
      uint64_t v23 = type metadata accessor for RawOrderFulfillment;
      goto LABEL_9;
    }
    uint64_t v24 = type metadata accessor for RawOrderFulfillment;
    uint64_t v25 = (uint64_t)v15;
  }
  sub_2437A6DDC(v25, (uint64_t (*)(void))v24);
  sub_24337C1BC((uint64_t)v19, &qword_268D9FEB0);
  char v21 = 0;
  return v21 & 1;
}

BOOL _s10FinanceKit24RawECommerceOrderContentV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_243957010();
  uint64_t v191 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v188 = (char *)v174 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v189 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D98EB8);
  MEMORY[0x270FA5388](v189);
  uint64_t v195 = (uint64_t)v174 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v190 = (uint64_t)v174 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v192 = (uint64_t)v174 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v193 = (uint64_t)v174 - v12;
  uint64_t v201 = type metadata accessor for RawOrderProvider();
  uint64_t v197 = *(void *)(v201 - 8);
  MEMORY[0x270FA5388](v201);
  uint64_t v194 = (void *)((char *)v174 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v196 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9FED8);
  MEMORY[0x270FA5388](v196);
  uint64_t v202 = (uint64_t)v174 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CC58);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  v198 = (void *)((char *)v174 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v199 = (uint64_t)v174 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v200 = (uint64_t)v174 - v20;
  uint64_t v21 = type metadata accessor for RawOrderReturnInfo();
  uint64_t v203 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)v174 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9FEE0);
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)v174 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CC60);
  uint64_t v28 = MEMORY[0x270FA5388](v27 - 8);
  uint64_t v30 = (char *)v174 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x270FA5388](v28);
  uint64_t v33 = (char *)v174 - v32;
  MEMORY[0x270FA5388](v31);
  uint64_t v35 = (char *)v174 - v34;
  if ((static RawMerchant.== infix(_:_:)(a1, a2) & 1) == 0) {
    return 0;
  }
  uint64_t v36 = (int *)type metadata accessor for RawECommerceOrderContent(0);
  uint64_t v37 = v36[5];
  uint64_t v38 = *(void *)(a1 + v37);
  uint64_t v39 = *(void *)(a1 + v37 + 8);
  uint64_t v40 = (void *)(a2 + v37);
  uint64_t v41 = v40[1];
  BOOL v42 = v38 == *v40;
  uint64_t v204 = v36;
  if (v42 && v39 == v41 || (v43 = sub_243959940(), v36 = v204, v44 = v43, BOOL result = 0, (v44 & 1) != 0))
  {
    uint64_t v46 = v36[6];
    uint64_t v47 = *(void *)(a1 + v46);
    uint64_t v48 = *(void *)(a1 + v46 + 8);
    uint64_t v49 = (void *)(a2 + v46);
    if (v47 == *v49 && v48 == v49[1]) {
      goto LABEL_9;
    }
    char v50 = sub_243959940();
    uint64_t v36 = v204;
    char v51 = v50;
    BOOL result = 0;
    if (v51)
    {
LABEL_9:
      uint64_t v52 = v36[7];
      uint64_t v53 = (void *)(a1 + v52);
      uint64_t v54 = *(void *)(a1 + v52 + 8);
      uint64_t v55 = (void *)(a2 + v52);
      uint64_t v56 = v55[1];
      if (v54)
      {
        if (!v56) {
          return 0;
        }
        if (*v53 != *v55 || v54 != v56)
        {
          char v57 = sub_243959940();
          uint64_t v36 = v204;
          char v58 = v57;
          BOOL result = 0;
          if ((v58 & 1) == 0) {
            return result;
          }
        }
      }
      else if (v56)
      {
        return 0;
      }
      uint64_t v59 = v36[8];
      int v60 = *(unsigned __int8 *)(a1 + v59);
      int v61 = *(unsigned __int8 *)(a2 + v59);
      if (v60 == 2)
      {
        if (v61 != 2) {
          return 0;
        }
      }
      else
      {
        if (v61 == 2) {
          return 0;
        }
        uint64_t v187 = v4;
        if (v60) {
          unint64_t v62 = 0xD000000000000016;
        }
        else {
          unint64_t v62 = 0x64656C62616E65;
        }
        if (v60) {
          unint64_t v63 = 0x80000002439A2D00;
        }
        else {
          unint64_t v63 = 0xE700000000000000;
        }
        if (v61) {
          unint64_t v64 = 0xD000000000000016;
        }
        else {
          unint64_t v64 = 0x64656C62616E65;
        }
        if (v61) {
          unint64_t v65 = 0x80000002439A2D00;
        }
        else {
          unint64_t v65 = 0xE700000000000000;
        }
        if (v62 == v64 && v63 == v65)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v4 = v187;
          uint64_t v36 = v204;
        }
        else
        {
          uint64_t v185 = v65;
          LODWORD(v186) = sub_243959940();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          BOOL result = 0;
          uint64_t v4 = v187;
          uint64_t v36 = v204;
          if ((v186 & 1) == 0) {
            return result;
          }
        }
      }
      unint64_t v66 = 0xE900000000000064;
      uint64_t v67 = 1852141679;
      uint64_t v68 = v36[9];
      int v69 = *(unsigned __int8 *)(a1 + v68);
      int v70 = *(unsigned __int8 *)(a2 + v68);
      uint64_t v187 = v4;
      if (v69)
      {
        if (v69 == 1) {
          uint64_t v71 = 0x6574656C706D6F63;
        }
        else {
          uint64_t v71 = 0x656C6C65636E6163;
        }
        unint64_t v72 = 0xE900000000000064;
      }
      else
      {
        unint64_t v72 = 0xE400000000000000;
        uint64_t v71 = 1852141679;
      }
      if (v70)
      {
        if (v70 == 1) {
          uint64_t v67 = 0x6574656C706D6F63;
        }
        else {
          uint64_t v67 = 0x656C6C65636E6163;
        }
      }
      else
      {
        unint64_t v66 = 0xE400000000000000;
      }
      if (v71 == v67 && v72 == v66)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v73 = v204;
      }
      else
      {
        uint64_t v186 = a2;
        LODWORD(v185) = sub_243959940();
        a2 = v186;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        BOOL result = 0;
        uint64_t v73 = v204;
        if ((v185 & 1) == 0) {
          return result;
        }
      }
      uint64_t v74 = v73[10];
      uint64_t v75 = (void *)(a1 + v74);
      uint64_t v76 = *(void *)(a1 + v74 + 8);
      uint64_t v77 = (void *)(a2 + v74);
      uint64_t v78 = v77[1];
      if (v76)
      {
        if (!v78) {
          return 0;
        }
        if (*v75 != *v77 || v76 != v78)
        {
          char v79 = sub_243959940();
          uint64_t v73 = v204;
          char v80 = v79;
          BOOL result = 0;
          if ((v80 & 1) == 0) {
            return result;
          }
        }
      }
      else if (v78)
      {
        return 0;
      }
      uint64_t v81 = v73;
      if ((sub_243957390() & 1) == 0
        || (sub_243957390() & 1) == 0
        || (MEMORY[0x24567C1E0](a1 + v81[13], a2 + v81[13]) & 1) == 0)
      {
        return 0;
      }
      uint64_t v82 = v81[14];
      uint64_t v83 = *(void *)(a1 + v82);
      uint64_t v84 = *(void *)(a1 + v82 + 8);
      uint64_t v86 = *(void *)(a1 + v82 + 16);
      uint64_t v85 = *(void *)(a1 + v82 + 24);
      uint64_t v88 = *(void *)(a1 + v82 + 32);
      uint64_t v87 = *(void *)(a1 + v82 + 40);
      uint64_t v90 = *(void *)(a1 + v82 + 48);
      uint64_t v89 = *(void *)(a1 + v82 + 56);
      uint64_t v91 = *(void *)(a1 + v82 + 64);
      uint64_t v92 = *(void *)(a1 + v82 + 72);
      int v93 = (uint64_t *)(a2 + v82);
      uint64_t v94 = *v93;
      v234[1] = v21;
      uint64_t v186 = v94;
      uint64_t v95 = v93[1];
      uint64_t v96 = v93[2];
      uint64_t v97 = v93[3];
      uint64_t v98 = v93[4];
      uint64_t v99 = v93[5];
      uint64_t v100 = v93[6];
      long long v101 = (int *)v93[7];
      uint64_t v185 = v93[8];
      uint64_t v102 = v93[9];
      if (v87)
      {
        uint64_t v178 = v102;
        uint64_t v215 = v83;
        uint64_t v216 = v84;
        uint64_t v217 = v86;
        uint64_t v218 = v85;
        uint64_t v219 = v88;
        uint64_t v220 = v87;
        uint64_t v221 = v90;
        uint64_t v222 = v89;
        uint64_t v223 = v91;
        uint64_t v224 = v92;
        uint64_t v184 = v83;
        uint64_t v183 = v87;
        uint64_t v182 = v88;
        uint64_t v181 = v85;
        uint64_t v180 = v86;
        uint64_t v179 = v84;
        if (v99)
        {
          LOBYTE(v205) = v186;
          uint64_t v206 = v95;
          uint64_t v207 = v96;
          LODWORD(v208) = v97;
          uint64_t v209 = v98;
          uint64_t v210 = v99;
          uint64_t v211 = v100;
          uint64_t v212 = (uint64_t)v101;
          uint64_t v213 = v185;
          uint64_t v214 = v178;
          uint64_t v186 = v91;
          uint64_t v185 = v92;
          uint64_t v177 = v90;
          uint64_t v176 = v89;
          sub_2436AA67C(v83, v84, v86, v85, v88, v87);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          LODWORD(v178) = _s10FinanceKit15RawOrderPaymentV2eeoiySbAC_ACtFZ_0((unsigned __int8 *)&v215, (unsigned __int8 *)&v205);
          uint64_t v175 = v220;
          v174[2] = v221;
          v174[1] = v222;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_24364AE5C(v184, v179, v180, v181, v182, v183);
          uint64_t v81 = v204;
          if ((v178 & 1) == 0) {
            return 0;
          }
LABEL_66:
          sub_24337C254(a1 + v81[15], (uint64_t)v35, &qword_268D9CC60);
          sub_24337C254(a2 + v81[15], (uint64_t)v33, &qword_268D9CC60);
          uint64_t v103 = (uint64_t)&v26[*(int *)(v24 + 48)];
          sub_24337C254((uint64_t)v35, (uint64_t)v26, &qword_268D9CC60);
          uint64_t v186 = v103;
          sub_24337C254((uint64_t)v33, v103, &qword_268D9CC60);
          id v104 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v203 + 48);
          if (v104((uint64_t)v26, 1, v21) == 1)
          {
            sub_24337C1BC((uint64_t)v33, &qword_268D9CC60);
            sub_24337C1BC((uint64_t)v35, &qword_268D9CC60);
            if (v104(v186, 1, v21) == 1)
            {
              sub_24337C1BC((uint64_t)v26, &qword_268D9CC60);
LABEL_77:
              uint64_t v116 = v204;
              if ((sub_243476BB8(*(void *)(a1 + v204[16]), *(void *)(a2 + v204[16])) & 1) == 0
                || (sub_243476C0C(*(void *)(a1 + v116[17]), *(void *)(a2 + v116[17])) & 1) == 0)
              {
                return 0;
              }
              uint64_t v117 = v116[18];
              uint64_t v118 = *(void *)(a1 + v117 + 8);
              uint64_t v182 = *(void *)(a1 + v117);
              uint64_t v119 = *(void *)(a1 + v117 + 16);
              uint64_t v183 = *(void *)(a1 + v117 + 24);
              uint64_t v120 = *(void *)(a1 + v117 + 32);
              uint64_t v184 = *(void *)(a1 + v117 + 40);
              uint64_t v121 = *(void *)(a1 + v117 + 48);
              uint64_t v185 = *(void *)(a1 + v117 + 56);
              uint64_t v122 = *(void *)(a1 + v117 + 64);
              uint64_t v203 = *(void *)(a1 + v117 + 72);
              uint64_t v186 = a2;
              uint64_t v123 = (uint64_t *)(a2 + v117);
              uint64_t v124 = v123[1];
              uint64_t v175 = *v123;
              uint64_t v176 = v123[2];
              uint64_t v177 = v123[3];
              uint64_t v178 = v123[4];
              uint64_t v179 = v123[5];
              uint64_t v180 = v123[6];
              uint64_t v125 = v123[8];
              uint64_t v181 = v123[7];
              uint64_t v126 = v123[9];
              if (v118 == 1)
              {
                if (v124 == 1) {
                  goto LABEL_86;
                }
              }
              else
              {
                uint64_t v215 = v182;
                uint64_t v216 = v118;
                uint64_t v217 = v119;
                uint64_t v218 = v183;
                uint64_t v219 = v120;
                uint64_t v220 = v184;
                uint64_t v221 = v121;
                uint64_t v222 = v185;
                uint64_t v223 = v122;
                uint64_t v224 = v203;
                if (v124 != 1)
                {
                  uint64_t v205 = v175;
                  uint64_t v206 = v124;
                  uint64_t v207 = v176;
                  uint64_t v208 = v177;
                  uint64_t v209 = v178;
                  uint64_t v210 = v179;
                  uint64_t v211 = v180;
                  uint64_t v212 = v181;
                  uint64_t v213 = v125;
                  uint64_t v214 = v126;
                  char v127 = _s10FinanceKit5OrderV8CustomerV2eeoiySbAE_AEtFZ_0(&v215, &v205);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if ((v127 & 1) == 0) {
                    return 0;
                  }
LABEL_86:
                  if ((sub_24347441C(*(void *)(a1 + v204[19]), *(void *)(v186 + v204[19])) & 1) == 0
                    || (sub_24347712C(*(void *)(a1 + v204[20]), *(void *)(v186 + v204[20])) & 1) == 0
                    || (sub_243474994(*(void **)(a1 + v204[21]), *(void **)(v186 + v204[21])) & 1) == 0)
                  {
                    return 0;
                  }
                  uint64_t v128 = v204[22];
                  uint64_t v129 = *(void *)(a1 + v128 + 8);
                  uint64_t v183 = *(void *)(a1 + v128);
                  uint64_t v184 = *(void *)(a1 + v128 + 16);
                  uint64_t v130 = *(void *)(a1 + v128 + 32);
                  uint64_t v185 = *(void *)(a1 + v128 + 24);
                  uint64_t v131 = *(void *)(a1 + v128 + 48);
                  uint64_t v203 = *(void *)(a1 + v128 + 40);
                  uint64_t v132 = (uint64_t *)(v186 + v128);
                  uint64_t v134 = *v132;
                  uint64_t v133 = v132[1];
                  uint64_t v136 = v132[2];
                  uint64_t v135 = v132[3];
                  uint64_t v137 = v132[4];
                  uint64_t v181 = v132[5];
                  uint64_t v182 = v132[6];
                  if (v130)
                  {
                    uint64_t v215 = v183;
                    uint64_t v216 = v129;
                    uint64_t v217 = v184;
                    uint64_t v218 = v185;
                    uint64_t v219 = v130;
                    uint64_t v220 = v203;
                    uint64_t v221 = v131;
                    if (v137)
                    {
                      uint64_t v205 = v134;
                      uint64_t v206 = v133;
                      LOBYTE(v207) = v136;
                      uint64_t v208 = v135;
                      uint64_t v209 = v137;
                      uint64_t v210 = v181;
                      uint64_t v211 = v182;
                      uint64_t v138 = v183;
                      uint64_t v139 = v184;
                      uint64_t v140 = v185;
                      sub_2435D89BC(v183, v129, v184, v185, v130);
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      LODWORD(v182) = _s10FinanceKit15RawOrderBarcodeV2eeoiySbAC_ACtFZ_0((uint64_t)&v215, (uint64_t)&v205);
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      sub_24364CC94(v138, v129, v139, v140, v130);
                      if ((v182 & 1) == 0) {
                        return 0;
                      }
LABEL_94:
                      unint64_t v141 = v204;
                      uint64_t v142 = v200;
                      sub_24337C254(a1 + v204[23], v200, &qword_268D9CC58);
                      uint64_t v143 = v199;
                      sub_24337C254(v186 + v141[23], v199, &qword_268D9CC58);
                      uint64_t v144 = v202;
                      uint64_t v145 = v202 + *(int *)(v196 + 48);
                      sub_24337C254(v142, v202, &qword_268D9CC58);
                      sub_24337C254(v143, v145, &qword_268D9CC58);
                      uint64_t v146 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v197 + 48);
                      if (v146(v144, 1, v201) == 1)
                      {
                        sub_24337C1BC(v199, &qword_268D9CC58);
                        sub_24337C1BC(v200, &qword_268D9CC58);
                        if (v146(v145, 1, v201) == 1)
                        {
                          sub_24337C1BC(v202, &qword_268D9CC58);
LABEL_97:
                          uint64_t v147 = v204;
                          uint64_t v148 = v193;
                          sub_24337C254(a1 + v204[24], v193, &qword_26B0C98A0);
                          uint64_t v149 = v192;
                          sub_24337C254(v186 + v147[24], v192, &qword_26B0C98A0);
                          uint64_t v150 = v195;
                          uint64_t v151 = v195 + *(int *)(v189 + 48);
                          sub_24337C254(v148, v195, &qword_26B0C98A0);
                          sub_24337C254(v149, v151, &qword_26B0C98A0);
                          uint64_t v152 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v191 + 48);
                          if (v152(v150, 1, v187) == 1)
                          {
                            sub_24337C1BC(v192, &qword_26B0C98A0);
                            sub_24337C1BC(v193, &qword_26B0C98A0);
                            if (v152(v151, 1, v187) == 1)
                            {
                              sub_24337C1BC(v195, &qword_26B0C98A0);
LABEL_124:
                              uint64_t v165 = v204[25];
                              uint64_t v166 = (void *)(a1 + v165);
                              uint64_t v167 = *(void *)(a1 + v165 + 8);
                              unint64_t v168 = (void *)(v186 + v165);
                              uint64_t v169 = v168[1];
                              if (v167)
                              {
                                if (v169)
                                {
                                  BOOL v42 = *v166 == *v168;
                                  int v170 = v204;
                                  uint64_t v171 = v186;
                                  if (!v42 || v167 != v169)
                                  {
                                    char v172 = sub_243959940();
                                    int v170 = v204;
                                    char v173 = v172;
                                    BOOL result = 0;
                                    if ((v173 & 1) == 0) {
                                      return result;
                                    }
                                  }
                                  return *(unsigned __int16 *)(a1 + v170[26]) == *(unsigned __int16 *)(v171 + v170[26]);
                                }
                              }
                              else
                              {
                                int v170 = v204;
                                uint64_t v171 = v186;
                                if (!v169) {
                                  return *(unsigned __int16 *)(a1 + v170[26]) == *(unsigned __int16 *)(v171 + v170[26]);
                                }
                              }
                              return 0;
                            }
                          }
                          else
                          {
                            sub_24337C254(v195, v190, &qword_26B0C98A0);
                            if (v152(v151, 1, v187) != 1)
                            {
                              uint64_t v159 = v191;
                              unint64_t v160 = v188;
                              uint64_t v161 = v187;
                              (*(void (**)(char *, uint64_t, uint64_t))(v191 + 32))(v188, v151, v187);
                              sub_2437B99A4(&qword_268D98EC0, MEMORY[0x263F06EA8]);
                              uint64_t v162 = v190;
                              char v163 = sub_243958270();
                              uint64_t v164 = *(void (**)(char *, uint64_t))(v159 + 8);
                              v164(v160, v161);
                              sub_24337C1BC(v192, &qword_26B0C98A0);
                              sub_24337C1BC(v193, &qword_26B0C98A0);
                              v164((char *)v162, v161);
                              sub_24337C1BC(v195, &qword_26B0C98A0);
                              if ((v163 & 1) == 0) {
                                return 0;
                              }
                              goto LABEL_124;
                            }
                            sub_24337C1BC(v192, &qword_26B0C98A0);
                            sub_24337C1BC(v193, &qword_26B0C98A0);
                            (*(void (**)(uint64_t, uint64_t))(v191 + 8))(v190, v187);
                          }
                          uint64_t v113 = &qword_268D98EB8;
                          uint64_t v153 = &v227;
                          goto LABEL_121;
                        }
                      }
                      else
                      {
                        sub_24337C254(v202, (uint64_t)v198, &qword_268D9CC58);
                        if (v146(v145, 1, v201) != 1)
                        {
                          uint64_t v154 = v145;
                          uint64_t v155 = v194;
                          sub_2437A6D0C(v154, (uint64_t)v194, (uint64_t (*)(void))type metadata accessor for RawOrderProvider);
                          if ((*v198 != *v155 || v198[1] != v155[1]) && (sub_243959940() & 1) == 0
                            || (v198[2] != v194[2] || v198[3] != v194[3]) && (sub_243959940() & 1) == 0
                            || (v198[4] != v194[4] || v198[5] != v194[5]) && (sub_243959940() & 1) == 0)
                          {
                            sub_2437A6DDC((uint64_t)v194, (uint64_t (*)(void))type metadata accessor for RawOrderProvider);
                            sub_24337C1BC(v199, &qword_268D9CC58);
                            sub_24337C1BC(v200, &qword_268D9CC58);
                            sub_2437A6DDC((uint64_t)v198, (uint64_t (*)(void))type metadata accessor for RawOrderProvider);
                            uint64_t v114 = v202;
                            uint64_t v113 = &qword_268D9CC58;
                            goto LABEL_75;
                          }
                          uint64_t v156 = v198;
                          uint64_t v157 = v194;
                          char v158 = MEMORY[0x24567C1E0]((char *)v198 + *(int *)(v201 + 28), (char *)v194 + *(int *)(v201 + 28));
                          sub_2437A6DDC((uint64_t)v157, (uint64_t (*)(void))type metadata accessor for RawOrderProvider);
                          sub_24337C1BC(v199, &qword_268D9CC58);
                          sub_24337C1BC(v200, &qword_268D9CC58);
                          sub_2437A6DDC((uint64_t)v156, (uint64_t (*)(void))type metadata accessor for RawOrderProvider);
                          sub_24337C1BC(v202, &qword_268D9CC58);
                          if ((v158 & 1) == 0) {
                            return 0;
                          }
                          goto LABEL_97;
                        }
                        sub_24337C1BC(v199, &qword_268D9CC58);
                        sub_24337C1BC(v200, &qword_268D9CC58);
                        sub_2437A6DDC((uint64_t)v198, (uint64_t (*)(void))type metadata accessor for RawOrderProvider);
                      }
                      uint64_t v113 = &qword_268D9FED8;
                      uint64_t v153 = v234;
LABEL_121:
                      uint64_t v114 = *(v153 - 32);
                      goto LABEL_75;
                    }
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                  }
                  else if (!v137)
                  {
                    goto LABEL_94;
                  }
                  sub_2435D89BC(v134, v133, v136, v135, v137);
                  sub_24364CC94(v183, v129, v184, v185, v130);
                  sub_24364CC94(v134, v133, v136, v135, v137);
                  return 0;
                }
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
              }
              uint64_t v215 = v182;
              uint64_t v216 = v118;
              uint64_t v217 = v119;
              uint64_t v218 = v183;
              uint64_t v219 = v120;
              uint64_t v220 = v184;
              uint64_t v221 = v121;
              uint64_t v222 = v185;
              uint64_t v223 = v122;
              uint64_t v224 = v203;
              uint64_t v225 = v175;
              uint64_t v226 = v124;
              uint64_t v227 = v176;
              uint64_t v228 = v177;
              uint64_t v229 = v178;
              uint64_t v230 = v179;
              uint64_t v231 = v180;
              uint64_t v232 = v181;
              uint64_t v233 = v125;
              v234[0] = v126;
              sub_2434C8F20(v175, v124);
              uint64_t v112 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_2434C90E0;
LABEL_71:
              sub_2437B98F0(&v215, v112);
              return 0;
            }
          }
          else
          {
            sub_24337C254((uint64_t)v26, (uint64_t)v30, &qword_268D9CC60);
            if (v104(v186, 1, v21) != 1)
            {
              sub_2437A6D0C(v186, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for RawOrderReturnInfo);
              char v115 = _s10FinanceKit18RawOrderReturnInfoV2eeoiySbAC_ACtFZ_0((uint64_t)v30, (uint64_t)v23);
              sub_2437A6DDC((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for RawOrderReturnInfo);
              sub_24337C1BC((uint64_t)v33, &qword_268D9CC60);
              sub_24337C1BC((uint64_t)v35, &qword_268D9CC60);
              sub_2437A6DDC((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for RawOrderReturnInfo);
              sub_24337C1BC((uint64_t)v26, &qword_268D9CC60);
              if ((v115 & 1) == 0) {
                return 0;
              }
              goto LABEL_77;
            }
            sub_24337C1BC((uint64_t)v33, &qword_268D9CC60);
            sub_24337C1BC((uint64_t)v35, &qword_268D9CC60);
            sub_2437A6DDC((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for RawOrderReturnInfo);
          }
          uint64_t v113 = &qword_268D9FEE0;
          uint64_t v114 = (uint64_t)v26;
LABEL_75:
          sub_24337C1BC(v114, v113);
          return 0;
        }
        uint64_t v105 = v89;
        uint64_t v106 = v90;
        uint64_t v107 = v91;
        uint64_t v204 = v101;
        uint64_t v203 = v100;
        uint64_t v108 = v98;
        uint64_t v109 = v97;
        uint64_t v110 = v96;
        uint64_t v111 = v95;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v95 = v111;
        uint64_t v96 = v110;
        uint64_t v97 = v109;
        uint64_t v98 = v108;
        uint64_t v99 = 0;
        uint64_t v100 = v203;
        long long v101 = v204;
        uint64_t v91 = v107;
        uint64_t v83 = v184;
        uint64_t v84 = v179;
        uint64_t v86 = v180;
        uint64_t v85 = v181;
        uint64_t v88 = v182;
        uint64_t v90 = v106;
        uint64_t v87 = v183;
        uint64_t v89 = v105;
        uint64_t v102 = v178;
      }
      else if (!v99)
      {
        goto LABEL_66;
      }
      uint64_t v215 = v83;
      uint64_t v216 = v84;
      uint64_t v217 = v86;
      uint64_t v218 = v85;
      uint64_t v219 = v88;
      uint64_t v220 = v87;
      uint64_t v221 = v90;
      uint64_t v222 = v89;
      uint64_t v223 = v91;
      uint64_t v224 = v92;
      uint64_t v225 = v186;
      uint64_t v226 = v95;
      uint64_t v227 = v96;
      uint64_t v228 = v97;
      uint64_t v229 = v98;
      uint64_t v230 = v99;
      uint64_t v231 = v100;
      uint64_t v232 = (uint64_t)v101;
      uint64_t v233 = v185;
      v234[0] = v102;
      sub_2436AA67C(v186, v95, v96, v97, v98, v99);
      uint64_t v112 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_24364AE5C;
      goto LABEL_71;
    }
  }
  return result;
}

unint64_t sub_2437AEC2C()
{
  unint64_t result = qword_268D9FD48;
  if (!qword_268D9FD48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FD48);
  }
  return result;
}

unint64_t sub_2437AEC80()
{
  unint64_t result = qword_268D9FD58;
  if (!qword_268D9FD58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FD58);
  }
  return result;
}

unint64_t sub_2437AECD4()
{
  unint64_t result = qword_268D9FD60;
  if (!qword_268D9FD60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FD60);
  }
  return result;
}

unint64_t sub_2437AED28()
{
  unint64_t result = qword_268D9FD70;
  if (!qword_268D9FD70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FD70);
  }
  return result;
}

unint64_t sub_2437AED7C()
{
  unint64_t result = qword_268D9FD80;
  if (!qword_268D9FD80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268D9FD78);
    sub_2437B99A4(&qword_268D9FD88, (void (*)(uint64_t))type metadata accessor for RawOrderApplication);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FD80);
  }
  return result;
}

unint64_t sub_2437AEE20()
{
  unint64_t result = qword_268D9FD90;
  if (!qword_268D9FD90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FD90);
  }
  return result;
}

unint64_t sub_2437AEE74()
{
  unint64_t result = qword_268D9FDA8;
  if (!qword_268D9FDA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FDA8);
  }
  return result;
}

unint64_t sub_2437AEEC8()
{
  unint64_t result = qword_268D9FDC0;
  if (!qword_268D9FDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FDC0);
  }
  return result;
}

unint64_t sub_2437AEF1C()
{
  unint64_t result = qword_268D9FDC8;
  if (!qword_268D9FDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FDC8);
  }
  return result;
}

unint64_t sub_2437AEF70()
{
  unint64_t result = qword_268D9FDD0;
  if (!qword_268D9FDD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FDD0);
  }
  return result;
}

unint64_t sub_2437AEFC4()
{
  unint64_t result = qword_268D9FDE8;
  if (!qword_268D9FDE8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268D9FDE0);
    sub_2437B99A4(&qword_268D9FDF0, (void (*)(uint64_t))type metadata accessor for RawOrderReturn);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FDE8);
  }
  return result;
}

unint64_t sub_2437AF068()
{
  unint64_t result = qword_268D9FE00;
  if (!qword_268D9FE00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268D9FDF8);
    sub_2437B99A4(&qword_268D9FE08, (void (*)(uint64_t))type metadata accessor for RawOrderFulfillment);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FE00);
  }
  return result;
}

unint64_t sub_2437AF10C()
{
  unint64_t result = qword_268D9FE10;
  if (!qword_268D9FE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FE10);
  }
  return result;
}

unint64_t sub_2437AF160()
{
  unint64_t result = qword_268D9FE18;
  if (!qword_268D9FE18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FE18);
  }
  return result;
}

unint64_t sub_2437AF1B4()
{
  unint64_t result = qword_268D9FE20;
  if (!qword_268D9FE20)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268D9FD78);
    sub_2437B99A4(&qword_268D9FE28, (void (*)(uint64_t))type metadata accessor for RawOrderApplication);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FE20);
  }
  return result;
}

unint64_t sub_2437AF258()
{
  unint64_t result = qword_268D9FE30;
  if (!qword_268D9FE30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FE30);
  }
  return result;
}

unint64_t sub_2437AF2AC()
{
  unint64_t result = qword_268D9FE40;
  if (!qword_268D9FE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FE40);
  }
  return result;
}

uint64_t sub_2437AF300(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RawMerchant();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_2437AF364()
{
  unint64_t result = qword_268D9FE48;
  if (!qword_268D9FE48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FE48);
  }
  return result;
}

uint64_t sub_2437AF3B8()
{
  unint64_t v0 = sub_2439599B0();
  swift_bridgeObjectRelease();
  if (v0 >= 0x19) {
    return 25;
  }
  else {
    return v0;
  }
}

uint64_t sub_2437AF40C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_243956FE0();
  if (v5 && (sub_24337C168(), uint64_t v6 = sub_243959100(), swift_bridgeObjectRelease(), !v6) || (a4 & 1) != 0)
  {
    uint64_t result = sub_243958400();
    if (result >= 16) {
      return result;
    }
    char v7 = 1;
  }
  else
  {
    char v7 = 0;
  }
  sub_2437AF364();
  swift_allocError();
  *uint64_t v9 = v7;
  return swift_willThrow();
}

unint64_t sub_2437AF504()
{
  unint64_t result = qword_268D9FE50;
  if (!qword_268D9FE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FE50);
  }
  return result;
}

unint64_t sub_2437AF55C()
{
  unint64_t result = qword_268D9FE58;
  if (!qword_268D9FE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FE58);
  }
  return result;
}

unint64_t sub_2437AF5B4()
{
  unint64_t result = qword_268D9FE60;
  if (!qword_268D9FE60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FE60);
  }
  return result;
}

uint64_t sub_2437AF608()
{
  return sub_2433D9388(&qword_268D9FE68, &qword_268D9FE70);
}

unsigned char *storeEnumTagSinglePayload for RawOrderStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2437AF710);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RawOrderStatus()
{
  return &type metadata for RawOrderStatus;
}

unsigned char *storeEnumTagSinglePayload for RawOrderError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2437AF814);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RawOrderError()
{
  return &type metadata for RawOrderError;
}

void *initializeBufferWithCopyOfBuffer for RawECommerceOrderContent(uint64_t a1, uint64_t *a2, int *a3)
{
  unsigned int v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (void *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (*a2 == 1)
    {
      long long v7 = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 80) = v7;
      *(void *)(a1 + 96) = a2[12];
      long long v8 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v8;
      long long v9 = *((_OWORD *)a2 + 3);
      *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 48) = v9;
    }
    else
    {
      uint64_t v11 = a2[1];
      uint64_t v12 = a2[2];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v11;
      uint64_t v13 = a2[3];
      uint64_t v14 = a2[4];
      *(void *)(a1 + 16) = v12;
      *(void *)(a1 + 24) = v13;
      uint64_t v15 = a2[5];
      uint64_t v16 = a2[6];
      *(void *)(a1 + 32) = v14;
      *(void *)(a1 + 40) = v15;
      uint64_t v17 = a2[7];
      uint64_t v18 = a2[8];
      *(void *)(a1 + 48) = v16;
      *(void *)(a1 + 56) = v17;
      uint64_t v19 = a2[9];
      uint64_t v20 = a2[10];
      *(void *)(a1 + 64) = v18;
      *(void *)(a1 + 72) = v19;
      uint64_t v21 = a2[11];
      uint64_t v22 = a2[12];
      *(void *)(a1 + 80) = v20;
      *(void *)(a1 + 88) = v21;
      *(void *)(a1 + 96) = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t v23 = (int *)type metadata accessor for RawMerchant();
    uint64_t v24 = v23[5];
    uint64_t v25 = (char *)v4 + v24;
    uint64_t v26 = (char *)a2 + v24;
    uint64_t v27 = sub_243957010();
    uint64_t v28 = *(void *)(v27 - 8);
    uint64_t v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
    if (v29(v26, 1, v27))
    {
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
      memcpy(v25, v26, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
    uint64_t v31 = v23[6];
    uint64_t v32 = (char *)v4 + v31;
    uint64_t v33 = (char *)a2 + v31;
    uint64_t v156 = a3;
    uint64_t v157 = v29;
    uint64_t v159 = v27;
    if (v29((char *)a2 + v31, 1, v27))
    {
      uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
      memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v32, v33, v27);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v32, 0, 1, v27);
    }
    uint64_t v35 = v28;
    uint64_t v36 = v23[7];
    uint64_t v37 = (void *)((char *)v4 + v36);
    uint64_t v38 = (uint64_t *)((char *)a2 + v36);
    uint64_t v39 = v38[1];
    *uint64_t v37 = *v38;
    v37[1] = v39;
    uint64_t v40 = v23[8];
    uint64_t v41 = (void *)((char *)v4 + v40);
    BOOL v42 = (uint64_t *)((char *)a2 + v40);
    uint64_t v43 = v42[1];
    *uint64_t v41 = *v42;
    v41[1] = v43;
    uint64_t v44 = v23[9];
    uint64_t v45 = (void *)((char *)v4 + v44);
    uint64_t v46 = (uint64_t *)((char *)a2 + v44);
    uint64_t v47 = v46[1];
    *uint64_t v45 = *v46;
    v45[1] = v47;
    uint64_t v48 = v23[10];
    uint64_t v49 = (void *)((char *)v4 + v48);
    char v50 = (uint64_t *)((char *)a2 + v48);
    uint64_t v51 = v50[1];
    *uint64_t v49 = *v50;
    v49[1] = v51;
    uint64_t v52 = v23[11];
    uint64_t v53 = (void *)((char *)v4 + v52);
    uint64_t v54 = (uint64_t *)((char *)a2 + v52);
    uint64_t v55 = v54[1];
    *uint64_t v53 = *v54;
    v53[1] = v55;
    uint64_t v56 = v23[12];
    char v57 = (char *)v4 + v56;
    char v58 = (char *)a2 + v56;
    uint64_t v155 = v35;
    uint64_t v59 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
    char v158 = v59;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v59(v57, v58, v27);
    int v60 = v156;
    uint64_t v61 = v156[5];
    uint64_t v62 = v156[6];
    unint64_t v63 = (void *)((char *)v4 + v61);
    unint64_t v64 = (uint64_t *)((char *)a2 + v61);
    uint64_t v65 = v64[1];
    void *v63 = *v64;
    v63[1] = v65;
    unint64_t v66 = (void *)((char *)v4 + v62);
    uint64_t v67 = (uint64_t *)((char *)a2 + v62);
    uint64_t v68 = v67[1];
    *unint64_t v66 = *v67;
    v66[1] = v68;
    uint64_t v69 = v156[7];
    uint64_t v70 = v156[8];
    uint64_t v71 = (void *)((char *)v4 + v69);
    unint64_t v72 = (uint64_t *)((char *)a2 + v69);
    uint64_t v73 = v72[1];
    void *v71 = *v72;
    v71[1] = v73;
    *((unsigned char *)v4 + v70) = *((unsigned char *)a2 + v70);
    uint64_t v74 = v156[10];
    *((unsigned char *)v4 + v156[9]) = *((unsigned char *)a2 + v156[9]);
    uint64_t v75 = (void *)((char *)v4 + v74);
    uint64_t v76 = (uint64_t *)((char *)a2 + v74);
    uint64_t v77 = v76[1];
    *uint64_t v75 = *v76;
    v75[1] = v77;
    uint64_t v78 = v156[11];
    uint64_t v152 = (uint64_t)a2 + v78;
    uint64_t v154 = (char *)v4 + v78;
    uint64_t v79 = sub_243957400();
    uint64_t v151 = *(void *)(v79 - 8);
    char v80 = *(void (**)(char *, uint64_t, uint64_t))(v151 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v80(v154, v152, v79);
    uint64_t v153 = (void (*)(char *, char *, uint64_t))v80;
    v80((char *)v4 + v60[12], (uint64_t)a2 + v60[12], v79);
    v158((char *)v4 + v60[13], (char *)a2 + v60[13], v159);
    uint64_t v81 = v156[14];
    uint64_t v82 = (char *)v4 + v81;
    uint64_t v83 = (char *)a2 + v81;
    uint64_t v84 = *((void *)v83 + 5);
    if (v84)
    {
      *uint64_t v82 = *v83;
      *(_OWORD *)(v82 + 8) = *(_OWORD *)(v83 + 8);
      *((_DWORD *)v82 + 6) = *((_DWORD *)v83 + 6);
      *((void *)v82 + 4) = *((void *)v83 + 4);
      *((void *)v82 + 5) = v84;
      uint64_t v85 = *((void *)v83 + 7);
      *((void *)v82 + 6) = *((void *)v83 + 6);
      *((void *)v82 + 7) = v85;
      uint64_t v86 = *((void *)v83 + 9);
      *((void *)v82 + 8) = *((void *)v83 + 8);
      *((void *)v82 + 9) = v86;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v87 = *((_OWORD *)v83 + 3);
      *((_OWORD *)v82 + 2) = *((_OWORD *)v83 + 2);
      *((_OWORD *)v82 + 3) = v87;
      *((_OWORD *)v82 + 4) = *((_OWORD *)v83 + 4);
      long long v88 = *((_OWORD *)v83 + 1);
      *(_OWORD *)uint64_t v82 = *(_OWORD *)v83;
      *((_OWORD *)v82 + 1) = v88;
    }
    uint64_t v89 = v156[15];
    uint64_t v90 = (char *)v4 + v89;
    uint64_t v91 = (char *)a2 + v89;
    uint64_t v92 = (int *)type metadata accessor for RawOrderReturnInfo();
    uint64_t v93 = *((void *)v92 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v93 + 48))(v91, 1, v92))
    {
      uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CC60);
      memcpy(v90, v91, *(void *)(*(void *)(v94 - 8) + 64));
    }
    else
    {
      uint64_t v150 = v79;
      v158(v90, v91, v159);
      uint64_t v95 = v92[5];
      uint64_t v96 = &v90[v95];
      uint64_t v97 = &v91[v95];
      uint64_t v98 = *((void *)v97 + 1);
      *(void *)uint64_t v96 = *(void *)v97;
      *((void *)v96 + 1) = v98;
      uint64_t v99 = v92[6];
      uint64_t v100 = &v90[v99];
      long long v101 = &v91[v99];
      swift_bridgeObjectRetain();
      if (v157(v101, 1, v159))
      {
        uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
        memcpy(v100, v101, *(void *)(*(void *)(v102 - 8) + 64));
      }
      else
      {
        v158(v100, v101, v159);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v155 + 56))(v100, 0, 1, v159);
      }
      uint64_t v103 = v92[7];
      id v104 = &v90[v103];
      uint64_t v105 = &v91[v103];
      int v60 = v156;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v151 + 48))(&v91[v103], 1, v150))
      {
        uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
        memcpy(v104, v105, *(void *)(*(void *)(v106 - 8) + 64));
      }
      else
      {
        v153(v104, v105, v150);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v151 + 56))(v104, 0, 1, v150);
      }
      v90[v92[8]] = v91[v92[8]];
      (*(void (**)(char *, void, uint64_t, int *))(v93 + 56))(v90, 0, 1, v92);
    }
    uint64_t v107 = v60[17];
    *(void *)((char *)v4 + v60[16]) = *(uint64_t *)((char *)a2 + v60[16]);
    *(void *)((char *)v4 + v107) = *(uint64_t *)((char *)a2 + v107);
    uint64_t v108 = v60[18];
    uint64_t v109 = (char *)v4 + v108;
    uint64_t v110 = (uint64_t)a2 + v108;
    uint64_t v111 = *(uint64_t *)((char *)a2 + v108 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v111 == 1)
    {
      long long v112 = *(_OWORD *)(v110 + 48);
      *((_OWORD *)v109 + 2) = *(_OWORD *)(v110 + 32);
      *((_OWORD *)v109 + 3) = v112;
      *((_OWORD *)v109 + 4) = *(_OWORD *)(v110 + 64);
      long long v113 = *(_OWORD *)(v110 + 16);
      *(_OWORD *)uint64_t v109 = *(_OWORD *)v110;
      *((_OWORD *)v109 + 1) = v113;
    }
    else
    {
      *(void *)uint64_t v109 = *(void *)v110;
      *((void *)v109 + 1) = v111;
      uint64_t v114 = *(void *)(v110 + 24);
      *((void *)v109 + 2) = *(void *)(v110 + 16);
      *((void *)v109 + 3) = v114;
      uint64_t v115 = *(void *)(v110 + 40);
      *((void *)v109 + 4) = *(void *)(v110 + 32);
      *((void *)v109 + 5) = v115;
      uint64_t v116 = *(void *)(v110 + 56);
      *((void *)v109 + 6) = *(void *)(v110 + 48);
      *((void *)v109 + 7) = v116;
      uint64_t v117 = *(void *)(v110 + 64);
      uint64_t v118 = *(void *)(v110 + 72);
      *((void *)v109 + 8) = v117;
      *((void *)v109 + 9) = v118;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t v119 = v60[20];
    *(void *)((char *)v4 + v60[19]) = *(uint64_t *)((char *)a2 + v60[19]);
    *(void *)((char *)v4 + v119) = *(uint64_t *)((char *)a2 + v119);
    uint64_t v120 = v60[22];
    *(void *)((char *)v4 + v60[21]) = *(uint64_t *)((char *)a2 + v60[21]);
    uint64_t v121 = (char *)v4 + v120;
    uint64_t v122 = (uint64_t)a2 + v120;
    uint64_t v123 = *(uint64_t *)((char *)a2 + v120 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v123)
    {
      uint64_t v124 = *(void *)(v122 + 8);
      *(void *)uint64_t v121 = *(void *)v122;
      *((void *)v121 + 1) = v124;
      v121[16] = *(unsigned char *)(v122 + 16);
      *((void *)v121 + 3) = *(void *)(v122 + 24);
      *((void *)v121 + 4) = v123;
      uint64_t v125 = *(void *)(v122 + 48);
      *((void *)v121 + 5) = *(void *)(v122 + 40);
      *((void *)v121 + 6) = v125;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v126 = *(_OWORD *)(v122 + 16);
      *(_OWORD *)uint64_t v121 = *(_OWORD *)v122;
      *((_OWORD *)v121 + 1) = v126;
      *((_OWORD *)v121 + 2) = *(_OWORD *)(v122 + 32);
      *((void *)v121 + 6) = *(void *)(v122 + 48);
    }
    uint64_t v127 = v159;
    uint64_t v128 = v60[23];
    uint64_t v129 = (void *)((char *)v4 + v128);
    uint64_t v130 = (uint64_t *)((char *)a2 + v128);
    uint64_t v131 = type metadata accessor for RawOrderProvider();
    uint64_t v132 = *(void *)(v131 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v132 + 48))(v130, 1, v131))
    {
      uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CC58);
      memcpy(v129, v130, *(void *)(*(void *)(v133 - 8) + 64));
    }
    else
    {
      uint64_t v134 = v130[1];
      *uint64_t v129 = *v130;
      v129[1] = v134;
      uint64_t v135 = v130[3];
      v129[2] = v130[2];
      v129[3] = v135;
      uint64_t v136 = v130[5];
      v129[4] = v130[4];
      v129[5] = v136;
      uint64_t v137 = *(int *)(v131 + 28);
      uint64_t v138 = (char *)v129 + v137;
      uint64_t v139 = (char *)v130 + v137;
      swift_bridgeObjectRetain();
      uint64_t v127 = v159;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v158(v138, v139, v159);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v132 + 56))(v129, 0, 1, v131);
    }
    uint64_t v140 = v60[24];
    unint64_t v141 = (char *)v4 + v140;
    uint64_t v142 = (char *)a2 + v140;
    if (v157((char *)a2 + v140, 1, v127))
    {
      uint64_t v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
      memcpy(v141, v142, *(void *)(*(void *)(v143 - 8) + 64));
    }
    else
    {
      v158(v141, v142, v127);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v155 + 56))(v141, 0, 1, v127);
    }
    uint64_t v144 = v60[25];
    uint64_t v145 = v60[26];
    uint64_t v146 = (void *)((char *)v4 + v144);
    uint64_t v147 = (uint64_t *)((char *)a2 + v144);
    uint64_t v148 = v147[1];
    *uint64_t v146 = *v147;
    v146[1] = v148;
    *(_WORD *)((char *)v4 + v145) = *(_WORD *)((char *)a2 + v145);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for RawECommerceOrderContent(char *a1, int *a2)
{
  if (*(void *)a1 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  unsigned int v4 = (int *)type metadata accessor for RawMerchant();
  int v5 = &a1[v4[5]];
  uint64_t v6 = sub_243957010();
  uint64_t v7 = *(void *)(v6 - 8);
  long long v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (!v8(v5, 1, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
  }
  long long v9 = &a1[v4[6]];
  uint64_t v24 = v8;
  if (!v8(v9, 1, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v7 + 8);
  v10(&a1[v4[12]], v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = &a1[a2[11]];
  uint64_t v12 = sub_243957400();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void (**)(char *, uint64_t))(v13 + 8);
  v14(v11, v12);
  v14(&a1[a2[12]], v12);
  uint64_t v23 = v10;
  v10(&a1[a2[13]], v6);
  if (*(void *)&a1[a2[14] + 40])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v15 = &a1[a2[15]];
  uint64_t v16 = type metadata accessor for RawOrderReturnInfo();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v15, 1, v16))
  {
    v23(v15, v6);
    swift_bridgeObjectRelease();
    uint64_t v17 = &v15[*(int *)(v16 + 24)];
    if (!v24(v17, 1, v6)) {
      v23(v17, v6);
    }
    uint64_t v18 = &v15[*(int *)(v16 + 28)];
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v18, 1, v12)) {
      v14(v18, v12);
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)&a1[a2[18] + 8] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)&a1[a2[22] + 32])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v19 = &a1[a2[23]];
  uint64_t v20 = type metadata accessor for RawOrderProvider();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v19, 1, v20))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v23(&v19[*(int *)(v20 + 28)], v6);
  }
  uint64_t v21 = &a1[a2[24]];
  if (!v24(v21, 1, v6)) {
    v23(v21, v6);
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RawECommerceOrderContent(uint64_t a1, uint64_t a2, int *a3)
{
  if (*(void *)a2 == 1)
  {
    long long v6 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v6;
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    long long v8 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v8;
  }
  else
  {
    uint64_t v9 = *(void *)(a2 + 8);
    uint64_t v10 = *(void *)(a2 + 16);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v9;
    uint64_t v11 = *(void *)(a2 + 24);
    uint64_t v12 = *(void *)(a2 + 32);
    *(void *)(a1 + 16) = v10;
    *(void *)(a1 + 24) = v11;
    uint64_t v13 = *(void *)(a2 + 40);
    uint64_t v14 = *(void *)(a2 + 48);
    *(void *)(a1 + 32) = v12;
    *(void *)(a1 + 40) = v13;
    uint64_t v15 = *(void *)(a2 + 56);
    uint64_t v16 = *(void *)(a2 + 64);
    *(void *)(a1 + 48) = v14;
    *(void *)(a1 + 56) = v15;
    uint64_t v17 = *(void *)(a2 + 72);
    uint64_t v18 = *(void *)(a2 + 80);
    *(void *)(a1 + 64) = v16;
    *(void *)(a1 + 72) = v17;
    uint64_t v19 = *(void *)(a2 + 88);
    uint64_t v20 = *(void *)(a2 + 96);
    *(void *)(a1 + 80) = v18;
    *(void *)(a1 + 88) = v19;
    *(void *)(a1 + 96) = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v21 = (int *)type metadata accessor for RawMerchant();
  uint64_t v22 = v21[5];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (const void *)(a2 + v22);
  uint64_t v25 = sub_243957010();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v26 + 48);
  if (v27(v24, 1, v25))
  {
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(v23, v24, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v26 + 16))(v23, v24, v25);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  uint64_t v29 = v21[6];
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = (const void *)(a2 + v29);
  uint64_t v154 = a3;
  uint64_t v155 = (unsigned int (*)(char *, uint64_t, uint64_t))v27;
  uint64_t v157 = v25;
  if (v27((const void *)(a2 + v29), 1, v25))
  {
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v26 + 16))(v30, v31, v25);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v30, 0, 1, v25);
  }
  uint64_t v33 = v26;
  uint64_t v34 = v21[7];
  uint64_t v35 = (void *)(a1 + v34);
  uint64_t v36 = (void *)(a2 + v34);
  uint64_t v37 = v36[1];
  void *v35 = *v36;
  v35[1] = v37;
  uint64_t v38 = v21[8];
  uint64_t v39 = (void *)(a1 + v38);
  uint64_t v40 = (void *)(a2 + v38);
  uint64_t v41 = v40[1];
  void *v39 = *v40;
  v39[1] = v41;
  uint64_t v42 = v21[9];
  uint64_t v43 = (void *)(a1 + v42);
  uint64_t v44 = (void *)(a2 + v42);
  uint64_t v45 = v44[1];
  void *v43 = *v44;
  v43[1] = v45;
  uint64_t v46 = v21[10];
  uint64_t v47 = (void *)(a1 + v46);
  uint64_t v48 = (void *)(a2 + v46);
  uint64_t v49 = v48[1];
  void *v47 = *v48;
  v47[1] = v49;
  uint64_t v50 = v21[11];
  uint64_t v51 = (void *)(a1 + v50);
  uint64_t v52 = (void *)(a2 + v50);
  uint64_t v53 = v52[1];
  void *v51 = *v52;
  v51[1] = v53;
  uint64_t v54 = v21[12];
  uint64_t v55 = a1 + v54;
  uint64_t v56 = a2 + v54;
  uint64_t v153 = v33;
  char v57 = *(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16);
  uint64_t v156 = v57;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v57(v55, v56, v25);
  char v58 = v154;
  uint64_t v59 = v154[5];
  uint64_t v60 = v154[6];
  uint64_t v61 = (void *)(a1 + v59);
  uint64_t v62 = (void *)(a2 + v59);
  uint64_t v63 = v62[1];
  *uint64_t v61 = *v62;
  v61[1] = v63;
  unint64_t v64 = (void *)(a1 + v60);
  uint64_t v65 = (void *)(a2 + v60);
  uint64_t v66 = v65[1];
  void *v64 = *v65;
  v64[1] = v66;
  uint64_t v67 = v154[7];
  uint64_t v68 = v154[8];
  uint64_t v69 = (void *)(a1 + v67);
  uint64_t v70 = (void *)(a2 + v67);
  uint64_t v71 = v70[1];
  *uint64_t v69 = *v70;
  v69[1] = v71;
  *(unsigned char *)(a1 + v68) = *(unsigned char *)(a2 + v68);
  uint64_t v72 = v154[10];
  *(unsigned char *)(a1 + v154[9]) = *(unsigned char *)(a2 + v154[9]);
  uint64_t v73 = (void *)(a1 + v72);
  uint64_t v74 = (void *)(a2 + v72);
  uint64_t v75 = v74[1];
  *uint64_t v73 = *v74;
  v73[1] = v75;
  uint64_t v76 = v154[11];
  uint64_t v150 = a2 + v76;
  uint64_t v152 = a1 + v76;
  uint64_t v77 = sub_243957400();
  uint64_t v149 = *(void *)(v77 - 8);
  uint64_t v78 = *(void (**)(uint64_t, uint64_t, uint64_t))(v149 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v78(v152, v150, v77);
  uint64_t v151 = (void (*)(char *, char *, uint64_t))v78;
  v78(a1 + v58[12], a2 + v58[12], v77);
  v156(a1 + v58[13], a2 + v58[13], v157);
  uint64_t v79 = v154[14];
  uint64_t v80 = a1 + v79;
  uint64_t v81 = a2 + v79;
  uint64_t v82 = *(void *)(v81 + 40);
  if (v82)
  {
    *(unsigned char *)uint64_t v80 = *(unsigned char *)v81;
    *(_OWORD *)(v80 + 8) = *(_OWORD *)(v81 + 8);
    *(_DWORD *)(v80 + 24) = *(_DWORD *)(v81 + 24);
    *(void *)(v80 + 32) = *(void *)(v81 + 32);
    *(void *)(v80 + 40) = v82;
    uint64_t v83 = *(void *)(v81 + 56);
    *(void *)(v80 + 48) = *(void *)(v81 + 48);
    *(void *)(v80 + 56) = v83;
    uint64_t v84 = *(void *)(v81 + 72);
    *(void *)(v80 + 64) = *(void *)(v81 + 64);
    *(void *)(v80 + 72) = v84;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v85 = *(_OWORD *)(v81 + 48);
    *(_OWORD *)(v80 + 32) = *(_OWORD *)(v81 + 32);
    *(_OWORD *)(v80 + 48) = v85;
    *(_OWORD *)(v80 + 64) = *(_OWORD *)(v81 + 64);
    long long v86 = *(_OWORD *)(v81 + 16);
    *(_OWORD *)uint64_t v80 = *(_OWORD *)v81;
    *(_OWORD *)(v80 + 16) = v86;
  }
  uint64_t v87 = v154[15];
  long long v88 = (char *)(a1 + v87);
  uint64_t v89 = (char *)(a2 + v87);
  uint64_t v90 = (int *)type metadata accessor for RawOrderReturnInfo();
  uint64_t v91 = *((void *)v90 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v91 + 48))(v89, 1, v90))
  {
    uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CC60);
    memcpy(v88, v89, *(void *)(*(void *)(v92 - 8) + 64));
  }
  else
  {
    uint64_t v148 = v77;
    v156((uint64_t)v88, (uint64_t)v89, v157);
    uint64_t v93 = v90[5];
    uint64_t v94 = &v88[v93];
    uint64_t v95 = &v89[v93];
    uint64_t v96 = *((void *)v95 + 1);
    *(void *)uint64_t v94 = *(void *)v95;
    *((void *)v94 + 1) = v96;
    uint64_t v97 = v90[6];
    uint64_t v98 = &v88[v97];
    uint64_t v99 = &v89[v97];
    swift_bridgeObjectRetain();
    if (v155(v99, 1, v157))
    {
      uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
      memcpy(v98, v99, *(void *)(*(void *)(v100 - 8) + 64));
    }
    else
    {
      v156((uint64_t)v98, (uint64_t)v99, v157);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v153 + 56))(v98, 0, 1, v157);
    }
    uint64_t v101 = v90[7];
    uint64_t v102 = &v88[v101];
    uint64_t v103 = &v89[v101];
    char v58 = v154;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v149 + 48))(&v89[v101], 1, v148))
    {
      uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
      memcpy(v102, v103, *(void *)(*(void *)(v104 - 8) + 64));
    }
    else
    {
      v151(v102, v103, v148);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v149 + 56))(v102, 0, 1, v148);
    }
    v88[v90[8]] = v89[v90[8]];
    (*(void (**)(char *, void, uint64_t, int *))(v91 + 56))(v88, 0, 1, v90);
  }
  uint64_t v105 = v58[17];
  *(void *)(a1 + v58[16]) = *(void *)(a2 + v58[16]);
  *(void *)(a1 + v105) = *(void *)(a2 + v105);
  uint64_t v106 = v58[18];
  uint64_t v107 = a1 + v106;
  uint64_t v108 = a2 + v106;
  uint64_t v109 = *(void *)(a2 + v106 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v109 == 1)
  {
    long long v110 = *(_OWORD *)(v108 + 48);
    *(_OWORD *)(v107 + 32) = *(_OWORD *)(v108 + 32);
    *(_OWORD *)(v107 + 48) = v110;
    *(_OWORD *)(v107 + 64) = *(_OWORD *)(v108 + 64);
    long long v111 = *(_OWORD *)(v108 + 16);
    *(_OWORD *)uint64_t v107 = *(_OWORD *)v108;
    *(_OWORD *)(v107 + 16) = v111;
  }
  else
  {
    *(void *)uint64_t v107 = *(void *)v108;
    *(void *)(v107 + 8) = v109;
    uint64_t v112 = *(void *)(v108 + 24);
    *(void *)(v107 + 16) = *(void *)(v108 + 16);
    *(void *)(v107 + 24) = v112;
    uint64_t v113 = *(void *)(v108 + 40);
    *(void *)(v107 + 32) = *(void *)(v108 + 32);
    *(void *)(v107 + 40) = v113;
    uint64_t v114 = *(void *)(v108 + 56);
    *(void *)(v107 + 48) = *(void *)(v108 + 48);
    *(void *)(v107 + 56) = v114;
    uint64_t v115 = *(void *)(v108 + 64);
    uint64_t v116 = *(void *)(v108 + 72);
    *(void *)(v107 + 64) = v115;
    *(void *)(v107 + 72) = v116;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v117 = v58[20];
  *(void *)(a1 + v58[19]) = *(void *)(a2 + v58[19]);
  *(void *)(a1 + v117) = *(void *)(a2 + v117);
  uint64_t v118 = v58[22];
  *(void *)(a1 + v58[21]) = *(void *)(a2 + v58[21]);
  uint64_t v119 = a1 + v118;
  uint64_t v120 = a2 + v118;
  uint64_t v121 = *(void *)(a2 + v118 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v121)
  {
    uint64_t v122 = *(void *)(v120 + 8);
    *(void *)uint64_t v119 = *(void *)v120;
    *(void *)(v119 + 8) = v122;
    *(unsigned char *)(v119 + 16) = *(unsigned char *)(v120 + 16);
    *(void *)(v119 + 24) = *(void *)(v120 + 24);
    *(void *)(v119 + 32) = v121;
    uint64_t v123 = *(void *)(v120 + 48);
    *(void *)(v119 + 40) = *(void *)(v120 + 40);
    *(void *)(v119 + 48) = v123;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v124 = *(_OWORD *)(v120 + 16);
    *(_OWORD *)uint64_t v119 = *(_OWORD *)v120;
    *(_OWORD *)(v119 + 16) = v124;
    *(_OWORD *)(v119 + 32) = *(_OWORD *)(v120 + 32);
    *(void *)(v119 + 48) = *(void *)(v120 + 48);
  }
  uint64_t v125 = v157;
  uint64_t v126 = v58[23];
  uint64_t v127 = (void *)(a1 + v126);
  uint64_t v128 = (void *)(a2 + v126);
  uint64_t v129 = type metadata accessor for RawOrderProvider();
  uint64_t v130 = *(void *)(v129 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v130 + 48))(v128, 1, v129))
  {
    uint64_t v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CC58);
    memcpy(v127, v128, *(void *)(*(void *)(v131 - 8) + 64));
  }
  else
  {
    uint64_t v132 = v128[1];
    *uint64_t v127 = *v128;
    v127[1] = v132;
    uint64_t v133 = v128[3];
    v127[2] = v128[2];
    v127[3] = v133;
    uint64_t v134 = v128[5];
    v127[4] = v128[4];
    v127[5] = v134;
    uint64_t v135 = *(int *)(v129 + 28);
    uint64_t v136 = (char *)v127 + v135;
    uint64_t v137 = (char *)v128 + v135;
    swift_bridgeObjectRetain();
    uint64_t v125 = v157;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v156((uint64_t)v136, (uint64_t)v137, v157);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v130 + 56))(v127, 0, 1, v129);
  }
  uint64_t v138 = v58[24];
  uint64_t v139 = (void *)(a1 + v138);
  uint64_t v140 = (const void *)(a2 + v138);
  if (v155((char *)(a2 + v138), 1, v125))
  {
    uint64_t v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(v139, v140, *(void *)(*(void *)(v141 - 8) + 64));
  }
  else
  {
    v156((uint64_t)v139, (uint64_t)v140, v125);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v153 + 56))(v139, 0, 1, v125);
  }
  uint64_t v142 = v58[25];
  uint64_t v143 = v58[26];
  uint64_t v144 = (void *)(a1 + v142);
  uint64_t v145 = (void *)(a2 + v142);
  uint64_t v146 = v145[1];
  *uint64_t v144 = *v145;
  v144[1] = v146;
  *(_WORD *)(a1 + v143) = *(_WORD *)(a2 + v143);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RawECommerceOrderContent(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *a2;
  if (v5 == 1)
  {
    if (v6 == 1)
    {
      long long v7 = *(_OWORD *)a2;
      long long v8 = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
      *(_OWORD *)(a1 + 32) = v8;
      *(_OWORD *)a1 = v7;
      long long v9 = *((_OWORD *)a2 + 3);
      long long v10 = *((_OWORD *)a2 + 4);
      long long v11 = *((_OWORD *)a2 + 5);
      *(void *)(a1 + 96) = a2[12];
      *(_OWORD *)(a1 + 64) = v10;
      *(_OWORD *)(a1 + 80) = v11;
      *(_OWORD *)(a1 + 48) = v9;
    }
    else
    {
      *(void *)a1 = v6;
      *(void *)(a1 + 8) = a2[1];
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = a2[3];
      *(void *)(a1 + 32) = a2[4];
      *(void *)(a1 + 40) = a2[5];
      *(void *)(a1 + 48) = a2[6];
      *(void *)(a1 + 56) = a2[7];
      *(void *)(a1 + 64) = a2[8];
      *(void *)(a1 + 72) = a2[9];
      *(void *)(a1 + 80) = a2[10];
      *(void *)(a1 + 88) = a2[11];
      *(void *)(a1 + 96) = a2[12];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v6 == 1)
  {
    sub_243731720(a1);
    long long v13 = *((_OWORD *)a2 + 1);
    long long v12 = *((_OWORD *)a2 + 2);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v13;
    *(_OWORD *)(a1 + 32) = v12;
    long long v15 = *((_OWORD *)a2 + 4);
    long long v14 = *((_OWORD *)a2 + 5);
    long long v16 = *((_OWORD *)a2 + 3);
    *(void *)(a1 + 96) = a2[12];
    *(_OWORD *)(a1 + 64) = v15;
    *(_OWORD *)(a1 + 80) = v14;
    *(_OWORD *)(a1 + 48) = v16;
  }
  else
  {
    *(void *)a1 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = a2[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = a2[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = a2[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = a2[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 72) = a2[9];
    *(void *)(a1 + 80) = a2[10];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 88) = a2[11];
    *(void *)(a1 + 96) = a2[12];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = (int *)type metadata accessor for RawMerchant();
  uint64_t v18 = v17[5];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_243957010();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(uint64_t (**)(void))(v22 + 48);
  int v24 = ((uint64_t (*)(void *, uint64_t, uint64_t))v23)(v19, 1, v21);
  char v172 = v23;
  int v25 = ((uint64_t (*)(char *, uint64_t, uint64_t))v23)(v20, 1, v21);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(void *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v25)
  {
    (*(void (**)(void *, uint64_t))(v22 + 8))(v19, v21);
LABEL_13:
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(v19, v20, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, char *, uint64_t))(v22 + 24))(v19, v20, v21);
LABEL_14:
  uint64_t v27 = v17[6];
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (char *)a2 + v27;
  int v30 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v23)(a1 + v27, 1, v21);
  int v31 = ((uint64_t (*)(char *, uint64_t, uint64_t))v23)(v29, 1, v21);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(void *, char *, uint64_t))(v22 + 16))(v28, v29, v21);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v28, 0, 1, v21);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (v31)
  {
    (*(void (**)(void *, uint64_t))(v22 + 8))(v28, v21);
LABEL_19:
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(void *, char *, uint64_t))(v22 + 24))(v28, v29, v21);
LABEL_20:
  uint64_t v33 = a3;
  uint64_t v34 = v21;
  uint64_t v35 = v17[7];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (uint64_t *)((char *)a2 + v35);
  *uint64_t v36 = *v37;
  v36[1] = v37[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v38 = v17[8];
  uint64_t v39 = (void *)(a1 + v38);
  uint64_t v40 = (uint64_t *)((char *)a2 + v38);
  void *v39 = *v40;
  v39[1] = v40[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v41 = v17[9];
  uint64_t v42 = (void *)(a1 + v41);
  uint64_t v43 = (uint64_t *)((char *)a2 + v41);
  void *v42 = *v43;
  v42[1] = v43[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v44 = v17[10];
  uint64_t v45 = (void *)(a1 + v44);
  uint64_t v46 = (uint64_t *)((char *)a2 + v44);
  *uint64_t v45 = *v46;
  v45[1] = v46[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v47 = v17[11];
  uint64_t v48 = (void *)(a1 + v47);
  uint64_t v49 = (uint64_t *)((char *)a2 + v47);
  *uint64_t v48 = *v49;
  v48[1] = v49[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v171 = *(void (**)(uint64_t, char *, uint64_t))(v22 + 24);
  v171(a1 + v17[12], (char *)a2 + v17[12], v21);
  uint64_t v50 = a3[5];
  uint64_t v51 = (void *)(a1 + v50);
  uint64_t v52 = (uint64_t *)((char *)a2 + v50);
  void *v51 = *v52;
  v51[1] = v52[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v53 = a3[6];
  uint64_t v54 = (void *)(a1 + v53);
  uint64_t v55 = (uint64_t *)((char *)a2 + v53);
  void *v54 = *v55;
  v54[1] = v55[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v56 = a3[7];
  char v57 = (void *)(a1 + v56);
  char v58 = (uint64_t *)((char *)a2 + v56);
  void *v57 = *v58;
  v57[1] = v58[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *(unsigned char *)(a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v59 = a3[10];
  uint64_t v60 = (void *)(a1 + v59);
  uint64_t v61 = (uint64_t *)((char *)a2 + v59);
  void *v60 = *v61;
  v60[1] = v61[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v62 = a3[11];
  uint64_t v63 = a1 + v62;
  uint64_t v64 = (uint64_t)a2 + v62;
  uint64_t v65 = sub_243957400();
  uint64_t v163 = *(void *)(v65 - 8);
  uint64_t v169 = v22;
  uint64_t v66 = *(void (**)(uint64_t, uint64_t, uint64_t))(v163 + 24);
  v66(v63, v64, v65);
  uint64_t v164 = v65;
  uint64_t v162 = (void (*)(char *, char *, uint64_t))v66;
  v66(a1 + v33[12], (uint64_t)a2 + v33[12], v65);
  uint64_t v170 = v34;
  v171(a1 + v33[13], (char *)a2 + v33[13], v34);
  uint64_t v67 = a3[14];
  uint64_t v68 = a1 + v67;
  uint64_t v69 = (uint64_t)a2 + v67;
  uint64_t v70 = *(void *)(a1 + v67 + 40);
  uint64_t v71 = *(uint64_t *)((char *)a2 + v67 + 40);
  if (v70)
  {
    if (v71)
    {
      *(unsigned char *)uint64_t v68 = *(unsigned char *)v69;
      *(_DWORD *)(v68 + 8) = *(_DWORD *)(v69 + 8);
      *(_WORD *)(v68 + 12) = *(_WORD *)(v69 + 12);
      *(_WORD *)(v68 + 14) = *(_WORD *)(v69 + 14);
      *(_WORD *)(v68 + 16) = *(_WORD *)(v69 + 16);
      *(_WORD *)(v68 + 18) = *(_WORD *)(v69 + 18);
      *(_WORD *)(v68 + 20) = *(_WORD *)(v69 + 20);
      *(_WORD *)(v68 + 22) = *(_WORD *)(v69 + 22);
      *(_WORD *)(v68 + 24) = *(_WORD *)(v69 + 24);
      *(_WORD *)(v68 + 26) = *(_WORD *)(v69 + 26);
      *(void *)(v68 + 32) = *(void *)(v69 + 32);
      *(void *)(v68 + 40) = *(void *)(v69 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v68 + 48) = *(void *)(v69 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v68 + 56) = *(void *)(v69 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v68 + 64) = *(void *)(v69 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v68 + 72) = *(void *)(v69 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_243731774(v68);
      *(_OWORD *)uint64_t v68 = *(_OWORD *)v69;
      long long v73 = *(_OWORD *)(v69 + 64);
      long long v75 = *(_OWORD *)(v69 + 16);
      long long v74 = *(_OWORD *)(v69 + 32);
      *(_OWORD *)(v68 + 48) = *(_OWORD *)(v69 + 48);
      *(_OWORD *)(v68 + 64) = v73;
      *(_OWORD *)(v68 + 16) = v75;
      *(_OWORD *)(v68 + 32) = v74;
    }
  }
  else if (v71)
  {
    *(unsigned char *)uint64_t v68 = *(unsigned char *)v69;
    long long v72 = *(_OWORD *)(v69 + 8);
    *(_DWORD *)(v68 + 24) = *(_DWORD *)(v69 + 24);
    *(_OWORD *)(v68 + 8) = v72;
    *(void *)(v68 + 32) = *(void *)(v69 + 32);
    *(void *)(v68 + 40) = *(void *)(v69 + 40);
    *(void *)(v68 + 48) = *(void *)(v69 + 48);
    *(void *)(v68 + 56) = *(void *)(v69 + 56);
    *(void *)(v68 + 64) = *(void *)(v69 + 64);
    *(void *)(v68 + 72) = *(void *)(v69 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v68 = *(_OWORD *)v69;
    long long v76 = *(_OWORD *)(v69 + 16);
    long long v77 = *(_OWORD *)(v69 + 32);
    long long v78 = *(_OWORD *)(v69 + 64);
    *(_OWORD *)(v68 + 48) = *(_OWORD *)(v69 + 48);
    *(_OWORD *)(v68 + 64) = v78;
    *(_OWORD *)(v68 + 16) = v76;
    *(_OWORD *)(v68 + 32) = v77;
  }
  uint64_t v79 = a3;
  uint64_t v80 = a3[15];
  uint64_t v81 = (unsigned char *)(a1 + v80);
  uint64_t v82 = (char *)a2 + v80;
  uint64_t v83 = (int *)type metadata accessor for RawOrderReturnInfo();
  uint64_t v84 = *((void *)v83 - 1);
  long long v85 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v84 + 48);
  int v86 = v85(v81, 1, v83);
  int v87 = v85(v82, 1, v83);
  if (!v86)
  {
    if (v87)
    {
      sub_2437A6DDC((uint64_t)v81, (uint64_t (*)(void))type metadata accessor for RawOrderReturnInfo);
      goto LABEL_35;
    }
    v171((uint64_t)v81, v82, v170);
    uint64_t v96 = v83[5];
    uint64_t v97 = &v81[v96];
    uint64_t v98 = &v82[v96];
    void *v97 = *(void *)v98;
    v97[1] = *((void *)v98 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v99 = v83[6];
    uint64_t v100 = &v82[v99];
    unint64_t v160 = &v81[v99];
    int v101 = v172();
    int v102 = ((uint64_t (*)(char *, uint64_t, uint64_t))v172)(v100, 1, v170);
    if (v101)
    {
      uint64_t v103 = v163;
      if (v102)
      {
        size_t v104 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0) - 8) + 64);
        uint64_t v105 = v160;
LABEL_46:
        memcpy(v105, v100, v104);
        goto LABEL_49;
      }
      (*(void (**)(char *, char *, uint64_t))(v169 + 16))(v160, v100, v170);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v169 + 56))(v160, 0, 1, v170);
    }
    else
    {
      uint64_t v103 = v163;
      if (v102)
      {
        (*(void (**)(char *, uint64_t))(v169 + 8))(v160, v170);
        size_t v104 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0) - 8) + 64);
        uint64_t v105 = v160;
        goto LABEL_46;
      }
      v171((uint64_t)v160, v100, v170);
    }
LABEL_49:
    uint64_t v79 = a3;
    uint64_t v110 = v83[7];
    long long v111 = &v82[v110];
    uint64_t v112 = *(uint64_t (**)(void))(v103 + 48);
    uint64_t v161 = &v81[v110];
    int __dsta = v112();
    int v113 = ((uint64_t (*)(char *, uint64_t, uint64_t))v112)(v111, 1, v164);
    if (__dsta)
    {
      if (!v113)
      {
        (*(void (**)(char *, char *, uint64_t))(v163 + 16))(v161, v111, v164);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v163 + 56))(v161, 0, 1, v164);
        goto LABEL_57;
      }
      size_t v114 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20) - 8)
                       + 64);
      uint64_t v115 = v161;
    }
    else
    {
      if (!v113)
      {
        v162(v161, v111, v164);
        goto LABEL_57;
      }
      (*(void (**)(char *, uint64_t))(v163 + 8))(v161, v164);
      size_t v114 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20) - 8)
                       + 64);
      uint64_t v115 = v161;
    }
    memcpy(v115, v111, v114);
LABEL_57:
    v81[v83[8]] = v82[v83[8]];
    goto LABEL_58;
  }
  if (v87)
  {
LABEL_35:
    uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CC60);
    memcpy(v81, v82, *(void *)(*(void *)(v95 - 8) + 64));
    goto LABEL_58;
  }
  long long v88 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v169 + 16);
  v88(v81, v82, v170);
  uint64_t v89 = v83[5];
  uint64_t v90 = &v81[v89];
  uint64_t v91 = &v82[v89];
  *uint64_t v90 = *(void *)v91;
  v90[1] = *((void *)v91 + 1);
  uint64_t v92 = v83[6];
  __dst = &v81[v92];
  uint64_t v93 = &v82[v92];
  swift_bridgeObjectRetain();
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v172)(v93, 1, v170))
  {
    uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(__dst, v93, *(void *)(*(void *)(v94 - 8) + 64));
  }
  else
  {
    v88(__dst, v93, v170);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v169 + 56))(__dst, 0, 1, v170);
  }
  uint64_t v106 = v83[7];
  uint64_t v107 = &v81[v106];
  uint64_t v108 = &v82[v106];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v163 + 48))(&v82[v106], 1, v164))
  {
    uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
    memcpy(v107, v108, *(void *)(*(void *)(v109 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v163 + 16))(v107, v108, v164);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v163 + 56))(v107, 0, 1, v164);
  }
  v81[v83[8]] = v82[v83[8]];
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v84 + 56))(v81, 0, 1, v83);
LABEL_58:
  *(void *)(a1 + v79[16]) = *(uint64_t *)((char *)a2 + v79[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v79[17]) = *(uint64_t *)((char *)a2 + v79[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v116 = v79[18];
  uint64_t v117 = a1 + v116;
  uint64_t v118 = (uint64_t)a2 + v116;
  uint64_t v119 = *(void *)(a1 + v116 + 8);
  uint64_t v120 = *(uint64_t *)((char *)a2 + v116 + 8);
  if (v119 == 1)
  {
    if (v120 == 1)
    {
      *(_OWORD *)uint64_t v117 = *(_OWORD *)v118;
      long long v121 = *(_OWORD *)(v118 + 16);
      long long v122 = *(_OWORD *)(v118 + 32);
      long long v123 = *(_OWORD *)(v118 + 64);
      *(_OWORD *)(v117 + 48) = *(_OWORD *)(v118 + 48);
      *(_OWORD *)(v117 + 64) = v123;
      *(_OWORD *)(v117 + 16) = v121;
      *(_OWORD *)(v117 + 32) = v122;
    }
    else
    {
      *(void *)uint64_t v117 = *(void *)v118;
      *(void *)(v117 + 8) = *(void *)(v118 + 8);
      *(void *)(v117 + 16) = *(void *)(v118 + 16);
      *(void *)(v117 + 24) = *(void *)(v118 + 24);
      *(void *)(v117 + 32) = *(void *)(v118 + 32);
      *(void *)(v117 + 40) = *(void *)(v118 + 40);
      *(void *)(v117 + 48) = *(void *)(v118 + 48);
      *(void *)(v117 + 56) = *(void *)(v118 + 56);
      *(void *)(v117 + 64) = *(void *)(v118 + 64);
      *(void *)(v117 + 72) = *(void *)(v118 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v120 == 1)
  {
    sub_2437317C8(v117);
    *(_OWORD *)uint64_t v117 = *(_OWORD *)v118;
    long long v124 = *(_OWORD *)(v118 + 64);
    long long v126 = *(_OWORD *)(v118 + 16);
    long long v125 = *(_OWORD *)(v118 + 32);
    *(_OWORD *)(v117 + 48) = *(_OWORD *)(v118 + 48);
    *(_OWORD *)(v117 + 64) = v124;
    *(_OWORD *)(v117 + 16) = v126;
    *(_OWORD *)(v117 + 32) = v125;
  }
  else
  {
    *(void *)uint64_t v117 = *(void *)v118;
    *(void *)(v117 + 8) = *(void *)(v118 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v117 + 16) = *(void *)(v118 + 16);
    *(void *)(v117 + 24) = *(void *)(v118 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v117 + 32) = *(void *)(v118 + 32);
    *(void *)(v117 + 40) = *(void *)(v118 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v117 + 48) = *(void *)(v118 + 48);
    *(void *)(v117 + 56) = *(void *)(v118 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v117 + 64) = *(void *)(v118 + 64);
    *(void *)(v117 + 72) = *(void *)(v118 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(void *)(a1 + v79[19]) = *(uint64_t *)((char *)a2 + v79[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v79[20]) = *(uint64_t *)((char *)a2 + v79[20]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v79[21]) = *(uint64_t *)((char *)a2 + v79[21]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v127 = v79[22];
  uint64_t v128 = a1 + v127;
  uint64_t v129 = (long long *)((char *)a2 + v127);
  uint64_t v130 = *(void *)(a1 + v127 + 32);
  uint64_t v131 = *(uint64_t *)((char *)a2 + v127 + 32);
  if (v130)
  {
    if (v131)
    {
      *(void *)uint64_t v128 = *(void *)v129;
      *(void *)(v128 + 8) = *((void *)v129 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v128 + 16) = *((unsigned char *)v129 + 16);
      *(void *)(v128 + 24) = *((void *)v129 + 3);
      *(void *)(v128 + 32) = *((void *)v129 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v128 + 40) = *((void *)v129 + 5);
      *(void *)(v128 + 48) = *((void *)v129 + 6);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_24373181C(v128);
      long long v133 = v129[1];
      long long v132 = v129[2];
      long long v134 = *v129;
      *(void *)(v128 + 48) = *((void *)v129 + 6);
      *(_OWORD *)(v128 + 16) = v133;
      *(_OWORD *)(v128 + 32) = v132;
      *(_OWORD *)uint64_t v128 = v134;
    }
  }
  else if (v131)
  {
    *(void *)uint64_t v128 = *(void *)v129;
    *(void *)(v128 + 8) = *((void *)v129 + 1);
    *(unsigned char *)(v128 + 16) = *((unsigned char *)v129 + 16);
    *(void *)(v128 + 24) = *((void *)v129 + 3);
    *(void *)(v128 + 32) = *((void *)v129 + 4);
    *(void *)(v128 + 40) = *((void *)v129 + 5);
    *(void *)(v128 + 48) = *((void *)v129 + 6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v135 = *v129;
    long long v136 = v129[1];
    long long v137 = v129[2];
    *(void *)(v128 + 48) = *((void *)v129 + 6);
    *(_OWORD *)(v128 + 16) = v136;
    *(_OWORD *)(v128 + 32) = v137;
    *(_OWORD *)uint64_t v128 = v135;
  }
  uint64_t v138 = v79[23];
  uint64_t v139 = (void *)(a1 + v138);
  uint64_t v140 = (uint64_t *)((char *)a2 + v138);
  uint64_t v141 = type metadata accessor for RawOrderProvider();
  uint64_t v142 = *(void *)(v141 - 8);
  uint64_t v143 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v142 + 48);
  int v144 = v143(v139, 1, v141);
  int v145 = v143(v140, 1, v141);
  if (v144)
  {
    if (!v145)
    {
      void *v139 = *v140;
      v139[1] = v140[1];
      v139[2] = v140[2];
      v139[3] = v140[3];
      v139[4] = v140[4];
      v139[5] = v140[5];
      uint64_t v146 = *(int *)(v141 + 28);
      uint64_t v147 = (char *)v139 + v146;
      int __dstb = (char *)v140 + v146;
      uint64_t v165 = *(void (**)(char *, char *, uint64_t))(v169 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v165(v147, __dstb, v170);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v142 + 56))(v139, 0, 1, v141);
      uint64_t v148 = v170;
      goto LABEL_78;
    }
    goto LABEL_77;
  }
  if (v145)
  {
    sub_2437A6DDC((uint64_t)v139, (uint64_t (*)(void))type metadata accessor for RawOrderProvider);
LABEL_77:
    uint64_t v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CC58);
    memcpy(v139, v140, *(void *)(*(void *)(v149 - 8) + 64));
    uint64_t v148 = v170;
    goto LABEL_78;
  }
  void *v139 = *v140;
  v139[1] = v140[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v139[2] = v140[2];
  v139[3] = v140[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v139[4] = v140[4];
  v139[5] = v140[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v148 = v170;
  v171((uint64_t)v139 + *(int *)(v141 + 28), (char *)v140 + *(int *)(v141 + 28), v170);
LABEL_78:
  uint64_t v150 = v79[24];
  uint64_t v151 = (void *)(a1 + v150);
  uint64_t v152 = (char *)a2 + v150;
  int v153 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v172)(a1 + v150, 1, v148);
  int v154 = ((uint64_t (*)(char *, uint64_t, uint64_t))v172)(v152, 1, v148);
  if (!v153)
  {
    if (!v154)
    {
      v171((uint64_t)v151, v152, v148);
      goto LABEL_84;
    }
    (*(void (**)(void *, uint64_t))(v169 + 8))(v151, v148);
    goto LABEL_83;
  }
  if (v154)
  {
LABEL_83:
    uint64_t v155 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(v151, v152, *(void *)(*(void *)(v155 - 8) + 64));
    goto LABEL_84;
  }
  (*(void (**)(void *, char *, uint64_t))(v169 + 16))(v151, v152, v148);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v169 + 56))(v151, 0, 1, v148);
LABEL_84:
  uint64_t v156 = a3[25];
  uint64_t v157 = (void *)(a1 + v156);
  char v158 = (uint64_t *)((char *)a2 + v156);
  *uint64_t v157 = *v158;
  v157[1] = v158[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + a3[26]) = *(_WORD *)((char *)a2 + a3[26]);
  return a1;
}

uint64_t initializeWithTake for RawECommerceOrderContent(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  long long v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  long long v9 = (int *)type metadata accessor for RawMerchant();
  uint64_t v10 = v9[5];
  long long v11 = (void *)(a1 + v10);
  long long v12 = (const void *)(a2 + v10);
  uint64_t v13 = sub_243957010();
  uint64_t v14 = *(void *)(v13 - 8);
  long long v15 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
  if (v15(v12, 1, v13))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v17 = v9[6];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (const void *)(a2 + v17);
  uint64_t v86 = v14;
  int v87 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v15;
  if (v15((const void *)(a2 + v17), 1, v13))
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    uint64_t v21 = *(void (**)(void *, const void *, uint64_t))(v14 + 32);
  }
  else
  {
    uint64_t v21 = *(void (**)(void *, const void *, uint64_t))(v14 + 32);
    v21(v18, v19, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v18, 0, 1, v13);
  }
  long long v88 = (void (*)(char *, char *, uint64_t))v21;
  *(_OWORD *)(a1 + v9[7]) = *(_OWORD *)(a2 + v9[7]);
  *(_OWORD *)(a1 + v9[8]) = *(_OWORD *)(a2 + v9[8]);
  *(_OWORD *)(a1 + v9[9]) = *(_OWORD *)(a2 + v9[9]);
  *(_OWORD *)(a1 + v9[10]) = *(_OWORD *)(a2 + v9[10]);
  *(_OWORD *)(a1 + v9[11]) = *(_OWORD *)(a2 + v9[11]);
  v21((void *)(a1 + v9[12]), (const void *)(a2 + v9[12]), v13);
  uint64_t v22 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v22) = *(_OWORD *)(a2 + v22);
  uint64_t v23 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v23) = *(unsigned char *)(a2 + v23);
  uint64_t v24 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v24) = *(_OWORD *)(a2 + v24);
  uint64_t v25 = a3[11];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  uint64_t v28 = sub_243957400();
  uint64_t v83 = *(void *)(v28 - 8);
  uint64_t v29 = a3;
  int v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v83 + 32);
  v30(v26, v27, v28);
  uint64_t v84 = v28;
  uint64_t v82 = (void (*)(char *, char *, uint64_t))v30;
  v30(a1 + v29[12], a2 + v29[12], v28);
  v21((void *)(a1 + v29[13]), (const void *)(a2 + v29[13]), v13);
  uint64_t v31 = v29[14];
  uint64_t v32 = v29[15];
  long long v85 = v29;
  uint64_t v33 = (_OWORD *)(a1 + v31);
  uint64_t v34 = (_OWORD *)(a2 + v31);
  long long v35 = v34[3];
  _OWORD v33[2] = v34[2];
  v33[3] = v35;
  v33[4] = v34[4];
  long long v36 = v34[1];
  *uint64_t v33 = *v34;
  v33[1] = v36;
  uint64_t v37 = (char *)(a1 + v32);
  uint64_t v38 = (char *)(a2 + v32);
  uint64_t v39 = type metadata accessor for RawOrderReturnInfo();
  uint64_t v40 = *(void *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
  {
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CC60);
    memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
    uint64_t v42 = v86;
    uint64_t v43 = v87;
    uint64_t v44 = v85;
  }
  else
  {
    v88(v37, v38, v13);
    *(_OWORD *)&v37[*(int *)(v39 + 20)] = *(_OWORD *)&v38[*(int *)(v39 + 20)];
    uint64_t v81 = v39;
    uint64_t v45 = *(int *)(v39 + 24);
    uint64_t v46 = v37;
    uint64_t v47 = &v37[v45];
    uint64_t v48 = &v38[v45];
    if (v87((uint64_t)&v38[v45], 1, v13))
    {
      uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
      memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
    }
    else
    {
      v88(v47, v48, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v47, 0, 1, v13);
    }
    uint64_t v50 = *(int *)(v81 + 28);
    uint64_t v51 = &v46[v50];
    uint64_t v52 = &v38[v50];
    uint64_t v44 = v85;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(&v38[v50], 1, v84))
    {
      uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
      memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
    }
    else
    {
      v82(v51, v52, v84);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v51, 0, 1, v84);
    }
    uint64_t v43 = v87;
    v46[*(int *)(v81 + 32)] = v38[*(int *)(v81 + 32)];
    (*(void (**)(char *, void, uint64_t))(v40 + 56))(v46, 0, 1);
    uint64_t v42 = v86;
  }
  uint64_t v54 = v44[17];
  *(void *)(a1 + v44[16]) = *(void *)(a2 + v44[16]);
  *(void *)(a1 + v54) = *(void *)(a2 + v54);
  uint64_t v55 = v44[18];
  uint64_t v56 = v44[19];
  char v57 = (_OWORD *)(a1 + v55);
  char v58 = (_OWORD *)(a2 + v55);
  long long v59 = v58[4];
  long long v60 = v58[2];
  v57[3] = v58[3];
  v57[4] = v59;
  long long v61 = v58[1];
  _OWORD *v57 = *v58;
  v57[1] = v61;
  long long v57[2] = v60;
  *(void *)(a1 + v56) = *(void *)(a2 + v56);
  uint64_t v62 = v44[21];
  *(void *)(a1 + v44[20]) = *(void *)(a2 + v44[20]);
  *(void *)(a1 + v62) = *(void *)(a2 + v62);
  uint64_t v63 = v44[22];
  uint64_t v64 = v44[23];
  uint64_t v65 = a1 + v63;
  uint64_t v66 = a2 + v63;
  long long v67 = *(_OWORD *)(v66 + 16);
  *(_OWORD *)uint64_t v65 = *(_OWORD *)v66;
  *(_OWORD *)(v65 + 16) = v67;
  long long v68 = *(_OWORD *)(v66 + 32);
  *(void *)(v65 + 48) = *(void *)(v66 + 48);
  *(_OWORD *)(v65 + 32) = v68;
  uint64_t v69 = (_OWORD *)(a1 + v64);
  uint64_t v70 = (_OWORD *)(a2 + v64);
  uint64_t v71 = type metadata accessor for RawOrderProvider();
  uint64_t v72 = *(void *)(v71 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v72 + 48))(v70, 1, v71))
  {
    uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CC58);
    memcpy(v69, v70, *(void *)(*(void *)(v73 - 8) + 64));
  }
  else
  {
    long long v74 = v70[1];
    *uint64_t v69 = *v70;
    v69[1] = v74;
    v69[2] = v70[2];
    v88((char *)v69 + *(int *)(v71 + 28), (char *)v70 + *(int *)(v71 + 28), v13);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v72 + 56))(v69, 0, 1, v71);
  }
  uint64_t v75 = v44[24];
  long long v76 = (void *)(a1 + v75);
  long long v77 = (void *)(a2 + v75);
  if (v43(a2 + v75, 1, v13))
  {
    uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(v76, v77, *(void *)(*(void *)(v78 - 8) + 64));
  }
  else
  {
    v88((char *)v76, (char *)v77, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v42 + 56))(v76, 0, 1, v13);
  }
  uint64_t v79 = v44[26];
  *(_OWORD *)(a1 + v44[25]) = *(_OWORD *)(a2 + v44[25]);
  *(_WORD *)(a1 + v79) = *(_WORD *)(a2 + v79);
  return a1;
}

uint64_t assignWithTake for RawECommerceOrderContent(uint64_t a1, uint64_t a2, int *a3)
{
  if (*(void *)a1 == 1) {
    goto LABEL_4;
  }
  if (*(void *)a2 == 1)
  {
    sub_243731720(a1);
LABEL_4:
    long long v6 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v6;
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    long long v8 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v8;
    goto LABEL_6;
  }
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v14;
  swift_bridgeObjectRelease();
LABEL_6:
  long long v15 = (int *)type metadata accessor for RawMerchant();
  uint64_t v16 = v15[5];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (const void *)(a2 + v16);
  uint64_t v19 = sub_243957010();
  uint64_t v180 = *(void *)(v19 - 8);
  uint64_t v20 = *(uint64_t (**)(void))(v180 + 48);
  int v21 = ((uint64_t (*)(void *, uint64_t, uint64_t))v20)(v17, 1, v19);
  uint64_t v181 = v19;
  uint64_t v179 = v20;
  int v22 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v20)(v18, 1, v19);
  if (v21)
  {
    if (v22)
    {
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
      memcpy(v17, v18, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v180 + 32))(v17, v18, v19);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v180 + 56))(v17, 0, 1, v19);
    }
  }
  else if (v22)
  {
    (*(void (**)(void *, uint64_t))(v180 + 8))(v17, v19);
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v180 + 40))(v17, v18, v19);
  }
  uint64_t v25 = v15[6];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (const void *)(a2 + v25);
  int v28 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v20)(a1 + v25, 1, v19);
  int v29 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v20)(v27, 1, v19);
  int v30 = a3;
  if (v28)
  {
    if (v29)
    {
      uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
      memcpy(v26, v27, *(void *)(*(void *)(v31 - 8) + 64));
      uint64_t v32 = v181;
      uint64_t v33 = v180;
    }
    else
    {
      uint64_t v33 = v180;
      uint64_t v32 = v181;
      (*(void (**)(void *, const void *, uint64_t))(v180 + 32))(v26, v27, v181);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v180 + 56))(v26, 0, 1, v181);
    }
  }
  else
  {
    uint64_t v33 = v180;
    uint64_t v32 = v181;
    if (v29)
    {
      (*(void (**)(void *, uint64_t))(v180 + 8))(v26, v181);
      uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
      memcpy(v26, v27, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v180 + 40))(v26, v27, v181);
    }
  }
  uint64_t v35 = v15[7];
  long long v36 = (void *)(a1 + v35);
  uint64_t v37 = (uint64_t *)(a2 + v35);
  uint64_t v39 = *v37;
  uint64_t v38 = v37[1];
  *long long v36 = v39;
  v36[1] = v38;
  swift_bridgeObjectRelease();
  uint64_t v40 = v15[8];
  uint64_t v41 = (void *)(a1 + v40);
  uint64_t v42 = (uint64_t *)(a2 + v40);
  uint64_t v44 = *v42;
  uint64_t v43 = v42[1];
  *uint64_t v41 = v44;
  v41[1] = v43;
  swift_bridgeObjectRelease();
  uint64_t v45 = v15[9];
  uint64_t v46 = (void *)(a1 + v45);
  uint64_t v47 = (uint64_t *)(a2 + v45);
  uint64_t v49 = *v47;
  uint64_t v48 = v47[1];
  void *v46 = v49;
  v46[1] = v48;
  swift_bridgeObjectRelease();
  uint64_t v50 = v15[10];
  uint64_t v51 = (void *)(a1 + v50);
  uint64_t v52 = (uint64_t *)(a2 + v50);
  uint64_t v54 = *v52;
  uint64_t v53 = v52[1];
  void *v51 = v54;
  v51[1] = v53;
  swift_bridgeObjectRelease();
  uint64_t v55 = v15[11];
  uint64_t v56 = (void *)(a1 + v55);
  char v57 = (uint64_t *)(a2 + v55);
  uint64_t v59 = *v57;
  uint64_t v58 = v57[1];
  void *v56 = v59;
  v56[1] = v58;
  swift_bridgeObjectRelease();
  uint64_t v178 = *(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 40);
  v178(a1 + v15[12], a2 + v15[12], v32);
  long long v60 = v30;
  uint64_t v61 = v30[5];
  uint64_t v62 = (void *)(a1 + v61);
  uint64_t v63 = (uint64_t *)(a2 + v61);
  uint64_t v65 = *v63;
  uint64_t v64 = v63[1];
  *uint64_t v62 = v65;
  v62[1] = v64;
  swift_bridgeObjectRelease();
  uint64_t v66 = v30[6];
  long long v67 = (void *)(a1 + v66);
  long long v68 = (uint64_t *)(a2 + v66);
  uint64_t v70 = *v68;
  uint64_t v69 = v68[1];
  void *v67 = v70;
  v67[1] = v69;
  swift_bridgeObjectRelease();
  uint64_t v71 = v30[7];
  uint64_t v72 = (void *)(a1 + v71);
  uint64_t v73 = (uint64_t *)(a2 + v71);
  uint64_t v75 = *v73;
  uint64_t v74 = v73[1];
  void *v72 = v75;
  v72[1] = v74;
  swift_bridgeObjectRelease();
  uint64_t v76 = v30[9];
  *(unsigned char *)(a1 + v30[8]) = *(unsigned char *)(a2 + v30[8]);
  *(unsigned char *)(a1 + v76) = *(unsigned char *)(a2 + v76);
  uint64_t v77 = v30[10];
  uint64_t v78 = (void *)(a1 + v77);
  uint64_t v79 = (uint64_t *)(a2 + v77);
  uint64_t v81 = *v79;
  uint64_t v80 = v79[1];
  void *v78 = v81;
  v78[1] = v80;
  swift_bridgeObjectRelease();
  uint64_t v82 = v30[11];
  uint64_t v83 = a1 + v82;
  uint64_t v84 = a2 + v82;
  uint64_t v85 = sub_243957400();
  uint64_t v176 = *(void *)(v85 - 8);
  uint64_t v86 = *(void (**)(uint64_t, uint64_t, uint64_t))(v176 + 40);
  v86(v83, v84, v85);
  uint64_t v177 = v85;
  __dst = (void (*)(char *, char *, uint64_t))v86;
  v86(a1 + v60[12], a2 + v60[12], v85);
  v178(a1 + v60[13], a2 + v60[13], v32);
  uint64_t v87 = v60[14];
  uint64_t v88 = a1 + v87;
  uint64_t v89 = a2 + v87;
  if (*(void *)(a1 + v87 + 40))
  {
    uint64_t v90 = *(void *)(v89 + 40);
    if (v90)
    {
      *(unsigned char *)uint64_t v88 = *(unsigned char *)v89;
      *(_DWORD *)(v88 + 8) = *(_DWORD *)(v89 + 8);
      *(_OWORD *)(v88 + 12) = *(_OWORD *)(v89 + 12);
      *(void *)(v88 + 32) = *(void *)(v89 + 32);
      *(void *)(v88 + 40) = v90;
      swift_bridgeObjectRelease();
      *(void *)(v88 + 48) = *(void *)(v89 + 48);
      swift_bridgeObjectRelease();
      *(void *)(v88 + 56) = *(void *)(v89 + 56);
      swift_bridgeObjectRelease();
      *(void *)(v88 + 64) = *(void *)(v89 + 64);
      swift_bridgeObjectRelease();
      *(void *)(v88 + 72) = *(void *)(v89 + 72);
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
    sub_243731774(v88);
  }
  long long v91 = *(_OWORD *)(v89 + 48);
  *(_OWORD *)(v88 + 32) = *(_OWORD *)(v89 + 32);
  *(_OWORD *)(v88 + 48) = v91;
  *(_OWORD *)(v88 + 64) = *(_OWORD *)(v89 + 64);
  long long v92 = *(_OWORD *)(v89 + 16);
  *(_OWORD *)uint64_t v88 = *(_OWORD *)v89;
  *(_OWORD *)(v88 + 16) = v92;
LABEL_25:
  uint64_t v93 = v60[15];
  uint64_t v94 = (unsigned char *)(a1 + v93);
  uint64_t v95 = (unsigned char *)(a2 + v93);
  uint64_t v96 = (int *)type metadata accessor for RawOrderReturnInfo();
  uint64_t v175 = (void *)*((void *)v96 - 1);
  uint64_t v97 = (uint64_t (*)(unsigned char *, uint64_t, int *))v175[6];
  int v98 = v97(v94, 1, v96);
  int v99 = v97(v95, 1, v96);
  if (!v98)
  {
    if (v99)
    {
      sub_2437A6DDC((uint64_t)v94, (uint64_t (*)(void))type metadata accessor for RawOrderReturnInfo);
      goto LABEL_31;
    }
    v178((uint64_t)v94, (uint64_t)v95, v181);
    uint64_t v104 = v96[5];
    uint64_t v105 = &v94[v104];
    uint64_t v106 = (uint64_t *)&v95[v104];
    uint64_t v108 = *v106;
    uint64_t v107 = v106[1];
    *uint64_t v105 = v108;
    v105[1] = v107;
    swift_bridgeObjectRelease();
    uint64_t v109 = v96[6];
    uint64_t v110 = &v95[v109];
    uint64_t v170 = &v94[v109];
    int v111 = v179();
    int v112 = ((uint64_t (*)(char *, uint64_t, uint64_t))v179)(v110, 1, v181);
    if (v111)
    {
      uint64_t v113 = v176;
      if (v112)
      {
        size_t v114 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0) - 8) + 64);
        uint64_t v115 = v170;
LABEL_42:
        memcpy(v115, v110, v114);
        goto LABEL_45;
      }
      (*(void (**)(char *, char *, uint64_t))(v180 + 32))(v170, v110, v181);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v180 + 56))(v170, 0, 1, v181);
    }
    else
    {
      uint64_t v113 = v176;
      if (v112)
      {
        (*(void (**)(char *, uint64_t))(v180 + 8))(v170, v181);
        size_t v114 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0) - 8) + 64);
        uint64_t v115 = v170;
        goto LABEL_42;
      }
      v178((uint64_t)v170, (uint64_t)v110, v181);
    }
LABEL_45:
    uint64_t v120 = v96[7];
    long long v121 = &v95[v120];
    long long v122 = *(uint64_t (**)(void))(v113 + 48);
    uint64_t v171 = &v94[v120];
    int v123 = v122();
    int v124 = ((uint64_t (*)(char *, uint64_t, uint64_t))v122)(v121, 1, v177);
    if (v123)
    {
      if (!v124)
      {
        (*(void (**)(char *, char *, uint64_t))(v176 + 32))(v171, v121, v177);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v176 + 56))(v171, 0, 1, v177);
        goto LABEL_53;
      }
      size_t v125 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20) - 8)
                       + 64);
      long long v126 = v171;
    }
    else
    {
      if (!v124)
      {
        __dst(v171, v121, v177);
        goto LABEL_53;
      }
      (*(void (**)(char *, uint64_t))(v176 + 8))(v171, v177);
      size_t v125 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20) - 8)
                       + 64);
      long long v126 = v171;
    }
    memcpy(v126, v121, v125);
LABEL_53:
    v94[v96[8]] = v95[v96[8]];
    goto LABEL_54;
  }
  if (v99)
  {
LABEL_31:
    uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CC60);
    memcpy(v94, v95, *(void *)(*(void *)(v103 - 8) + 64));
    goto LABEL_54;
  }
  char v172 = *(void (**)(char *, char *, uint64_t))(v180 + 32);
  v172(v94, v95, v181);
  *(_OWORD *)&v94[v96[5]] = *(_OWORD *)&v95[v96[5]];
  uint64_t v100 = v96[6];
  int __dsta = &v94[v100];
  int v101 = &v95[v100];
  if (((unsigned int (*)(unsigned char *, uint64_t, uint64_t))v179)(&v95[v100], 1, v181))
  {
    uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(__dsta, v101, *(void *)(*(void *)(v102 - 8) + 64));
  }
  else
  {
    v172(__dsta, v101, v181);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v180 + 56))(__dsta, 0, 1, v181);
  }
  uint64_t v116 = v96[7];
  uint64_t v117 = &v94[v116];
  uint64_t v118 = &v95[v116];
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v176 + 48))(&v95[v116], 1, v177))
  {
    uint64_t v119 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
    memcpy(v117, v118, *(void *)(*(void *)(v119 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v176 + 32))(v117, v118, v177);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v176 + 56))(v117, 0, 1, v177);
  }
  v94[v96[8]] = v95[v96[8]];
  ((void (*)(unsigned char *, void, uint64_t, int *))v175[7])(v94, 0, 1, v96);
LABEL_54:
  *(void *)(a1 + v60[16]) = *(void *)(a2 + v60[16]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + v60[17]) = *(void *)(a2 + v60[17]);
  swift_bridgeObjectRelease();
  uint64_t v127 = v60[18];
  uint64_t v128 = a1 + v127;
  uint64_t v129 = a2 + v127;
  if (*(void *)(a1 + v127 + 8) == 1)
  {
LABEL_57:
    long long v131 = *(_OWORD *)(v129 + 48);
    *(_OWORD *)(v128 + 32) = *(_OWORD *)(v129 + 32);
    *(_OWORD *)(v128 + 48) = v131;
    *(_OWORD *)(v128 + 64) = *(_OWORD *)(v129 + 64);
    long long v132 = *(_OWORD *)(v129 + 16);
    *(_OWORD *)uint64_t v128 = *(_OWORD *)v129;
    *(_OWORD *)(v128 + 16) = v132;
    goto LABEL_59;
  }
  uint64_t v130 = *(void *)(v129 + 8);
  if (v130 == 1)
  {
    sub_2437317C8(v128);
    goto LABEL_57;
  }
  *(void *)uint64_t v128 = *(void *)v129;
  *(void *)(v128 + 8) = v130;
  swift_bridgeObjectRelease();
  uint64_t v133 = *(void *)(v129 + 24);
  *(void *)(v128 + 16) = *(void *)(v129 + 16);
  *(void *)(v128 + 24) = v133;
  swift_bridgeObjectRelease();
  uint64_t v134 = *(void *)(v129 + 40);
  *(void *)(v128 + 32) = *(void *)(v129 + 32);
  *(void *)(v128 + 40) = v134;
  swift_bridgeObjectRelease();
  uint64_t v135 = *(void *)(v129 + 56);
  *(void *)(v128 + 48) = *(void *)(v129 + 48);
  *(void *)(v128 + 56) = v135;
  swift_bridgeObjectRelease();
  uint64_t v136 = *(void *)(v129 + 72);
  *(void *)(v128 + 64) = *(void *)(v129 + 64);
  *(void *)(v128 + 72) = v136;
  swift_bridgeObjectRelease();
LABEL_59:
  *(void *)(a1 + v60[19]) = *(void *)(a2 + v60[19]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + v60[20]) = *(void *)(a2 + v60[20]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + v60[21]) = *(void *)(a2 + v60[21]);
  swift_bridgeObjectRelease();
  uint64_t v137 = v60[22];
  uint64_t v138 = a1 + v137;
  uint64_t v139 = a2 + v137;
  if (*(void *)(a1 + v137 + 32))
  {
    if (*(void *)(v139 + 32))
    {
      uint64_t v140 = *(void *)(v139 + 8);
      *(void *)uint64_t v138 = *(void *)v139;
      *(void *)(v138 + 8) = v140;
      swift_bridgeObjectRelease();
      *(unsigned char *)(v138 + 16) = *(unsigned char *)(v139 + 16);
      uint64_t v141 = *(void *)(v139 + 32);
      *(void *)(v138 + 24) = *(void *)(v139 + 24);
      *(void *)(v138 + 32) = v141;
      swift_bridgeObjectRelease();
      uint64_t v142 = *(void *)(v139 + 48);
      *(void *)(v138 + 40) = *(void *)(v139 + 40);
      *(void *)(v138 + 48) = v142;
      swift_bridgeObjectRelease();
      goto LABEL_64;
    }
    sub_24373181C(v138);
  }
  long long v143 = *(_OWORD *)(v139 + 16);
  *(_OWORD *)uint64_t v138 = *(_OWORD *)v139;
  *(_OWORD *)(v138 + 16) = v143;
  *(_OWORD *)(v138 + 32) = *(_OWORD *)(v139 + 32);
  *(void *)(v138 + 48) = *(void *)(v139 + 48);
LABEL_64:
  uint64_t v144 = v60[23];
  int v145 = (void *)(a1 + v144);
  uint64_t v146 = (void *)(a2 + v144);
  uint64_t v147 = type metadata accessor for RawOrderProvider();
  uint64_t v148 = *(void *)(v147 - 8);
  uint64_t v149 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v148 + 48);
  int v150 = v149(v145, 1, v147);
  int v151 = v149(v146, 1, v147);
  if (v150)
  {
    if (!v151)
    {
      long long v152 = *((_OWORD *)v146 + 1);
      *(_OWORD *)int v145 = *(_OWORD *)v146;
      *((_OWORD *)v145 + 1) = v152;
      *((_OWORD *)v145 + 2) = *((_OWORD *)v146 + 2);
      uint64_t v153 = v181;
      (*(void (**)(char *, char *, uint64_t))(v180 + 32))((char *)v145 + *(int *)(v147 + 28), (char *)v146 + *(int *)(v147 + 28), v181);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v148 + 56))(v145, 0, 1, v147);
      goto LABEL_70;
    }
    goto LABEL_69;
  }
  if (v151)
  {
    sub_2437A6DDC((uint64_t)v145, (uint64_t (*)(void))type metadata accessor for RawOrderProvider);
LABEL_69:
    uint64_t v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CC58);
    memcpy(v145, v146, *(void *)(*(void *)(v154 - 8) + 64));
    uint64_t v153 = v181;
    goto LABEL_70;
  }
  uint64_t v167 = v146[1];
  *int v145 = *v146;
  v145[1] = v167;
  swift_bridgeObjectRelease();
  uint64_t v168 = v146[3];
  v145[2] = v146[2];
  v145[3] = v168;
  swift_bridgeObjectRelease();
  uint64_t v169 = v146[5];
  v145[4] = v146[4];
  v145[5] = v169;
  swift_bridgeObjectRelease();
  uint64_t v153 = v181;
  v178((uint64_t)v145 + *(int *)(v147 + 28), (uint64_t)v146 + *(int *)(v147 + 28), v181);
LABEL_70:
  uint64_t v155 = v60[24];
  uint64_t v156 = (void *)(a1 + v155);
  uint64_t v157 = (const void *)(a2 + v155);
  int v158 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v179)(a1 + v155, 1, v153);
  int v159 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v179)(v157, 1, v153);
  if (!v158)
  {
    if (!v159)
    {
      v178((uint64_t)v156, (uint64_t)v157, v153);
      goto LABEL_76;
    }
    (*(void (**)(void *, uint64_t))(v180 + 8))(v156, v153);
    goto LABEL_75;
  }
  if (v159)
  {
LABEL_75:
    uint64_t v160 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(v156, v157, *(void *)(*(void *)(v160 - 8) + 64));
    goto LABEL_76;
  }
  (*(void (**)(void *, const void *, uint64_t))(v180 + 32))(v156, v157, v153);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v180 + 56))(v156, 0, 1, v153);
LABEL_76:
  uint64_t v161 = v60[25];
  uint64_t v162 = (void *)(a1 + v161);
  uint64_t v163 = (uint64_t *)(a2 + v161);
  uint64_t v165 = *v163;
  uint64_t v164 = v163[1];
  void *v162 = v165;
  v162[1] = v164;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + v60[26]) = *(_WORD *)(a2 + v60[26]);
  return a1;
}

uint64_t getEnumTagSinglePayload for RawECommerceOrderContent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2437B3F88);
}

uint64_t sub_2437B3F88(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for RawMerchant();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_16:
    return v9(v10, a2, v8);
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v11 = *(void *)(a1 + a3[5] + 8);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
  uint64_t v13 = sub_243957400();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v8 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a3[11];
LABEL_15:
    uint64_t v10 = a1 + v15;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    goto LABEL_16;
  }
  uint64_t v16 = sub_243957010();
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a3[13];
    goto LABEL_15;
  }
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CC60);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a3[15];
    goto LABEL_15;
  }
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CC58);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a3[23];
    goto LABEL_15;
  }
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a3[24];

  return v20(v22, a2, v21);
}

uint64_t storeEnumTagSinglePayload for RawECommerceOrderContent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2437B4210);
}

uint64_t sub_2437B4210(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = type metadata accessor for RawMerchant();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_14:
    return v11(v12, a2, a2, v10);
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[5] + 8) = (a2 - 1);
    return result;
  }
  uint64_t v13 = sub_243957400();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[11];
LABEL_13:
    uint64_t v12 = a1 + v15;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_14;
  }
  uint64_t v16 = sub_243957010();
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[13];
    goto LABEL_13;
  }
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CC60);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[15];
    goto LABEL_13;
  }
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CC58);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[23];
    goto LABEL_13;
  }
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a4[24];

  return v20(v22, a2, a2, v21);
}

void sub_2437B4484()
{
  type metadata accessor for RawMerchant();
  if (v0 <= 0x3F)
  {
    sub_243957400();
    if (v1 <= 0x3F)
    {
      sub_243957010();
      if (v2 <= 0x3F)
      {
        sub_2437B46F4(319, &qword_26B0C6BD8, (void (*)(uint64_t))type metadata accessor for RawOrderReturnInfo);
        if (v3 <= 0x3F)
        {
          sub_2437B46F4(319, &qword_26B0C6BC0, (void (*)(uint64_t))type metadata accessor for RawOrderProvider);
          if (v4 <= 0x3F)
          {
            sub_2437B46F4(319, (unint64_t *)&qword_26B0C9138, MEMORY[0x263F06EA8]);
            if (v5 <= 0x3F) {
              swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

void sub_2437B46F4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2439590A0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for RawECommerceOrderContent.ContentItem(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)a1 = *a2;
      *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
      uint64_t v6 = a2[3];
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = v6;
      uint64_t v7 = a2[5];
      *(void *)(a1 + 32) = a2[4];
      *(void *)(a1 + 40) = v7;
      uint64_t v163 = (int *)type metadata accessor for RawOrderReturn();
      uint64_t v8 = v163[8];
      uint64_t v9 = (void *)(a1 + v8);
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_243957400();
      uint64_t v12 = *(void *)(v11 - 8);
      uint64_t v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v13(v10, 1, v11))
      {
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
        memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      uint64_t v34 = v163[9];
      uint64_t v35 = (void *)(a1 + v34);
      long long v36 = (char *)a2 + v34;
      if (v13((char *)a2 + v34, 1, v11))
      {
        uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
        memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v35, v36, v11);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v35, 0, 1, v11);
      }
      uint64_t v38 = v163[10];
      uint64_t v39 = (void *)(a1 + v38);
      uint64_t v40 = (char *)a2 + v38;
      if (v13((char *)a2 + v38, 1, v11))
      {
        uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
        memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v39, v40, v11);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v39, 0, 1, v11);
      }
      uint64_t v42 = v163[11];
      uint64_t v43 = (void *)(a1 + v42);
      uint64_t v44 = (uint64_t *)((char *)a2 + v42);
      uint64_t v45 = v44[1];
      void *v43 = *v44;
      v43[1] = v45;
      uint64_t v46 = v163[12];
      uint64_t v47 = (void *)(a1 + v46);
      uint64_t v48 = (uint64_t *)((char *)a2 + v46);
      uint64_t v49 = v48[1];
      void *v47 = *v48;
      v47[1] = v49;
      uint64_t v50 = v163[13];
      uint64_t v51 = (void *)(a1 + v50);
      uint64_t v52 = (uint64_t *)((char *)a2 + v50);
      uint64_t v53 = v52[1];
      void *v51 = *v52;
      v51[1] = v53;
      uint64_t v54 = v163[14];
      uint64_t v55 = (void *)(a1 + v54);
      uint64_t v56 = (uint64_t *)((char *)a2 + v54);
      uint64_t v57 = v56[1];
      void *v55 = *v56;
      v55[1] = v57;
      uint64_t v58 = v163[15];
      uint64_t v162 = a1;
      uint64_t v166 = (void *)(a1 + v58);
      uint64_t v59 = (char *)a2 + v58;
      uint64_t v60 = sub_243957010();
      uint64_t v61 = *(void *)(v60 - 8);
      uint64_t v62 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v61 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v62(v59, 1, v60))
      {
        uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
        memcpy(v166, v59, *(void *)(*(void *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v61 + 16))(v166, v59, v60);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v61 + 56))(v166, 0, 1, v60);
      }
      a1 = v162;
      uint64_t v64 = v163[16];
      uint64_t v65 = (void *)(v162 + v64);
      uint64_t v66 = (uint64_t *)((char *)a2 + v64);
      uint64_t v67 = v66[1];
      *uint64_t v65 = *v66;
      v65[1] = v67;
      swift_bridgeObjectRetain();
      goto LABEL_55;
    }
    type metadata accessor for RawOrderFulfillment();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(void *)a1 = *a2;
    if (EnumCaseMultiPayload != 1)
    {
      uint64_t v25 = a2[2];
      *(void *)(a1 + 8) = a2[1];
      *(void *)(a1 + 16) = v25;
      uint64_t v26 = a2[4];
      *(void *)(a1 + 24) = a2[3];
      *(void *)(a1 + 32) = v26;
      *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
      uint64_t v27 = a2[7];
      *(void *)(a1 + 48) = a2[6];
      *(void *)(a1 + 56) = v27;
      uint64_t v28 = a2[9];
      *(void *)(a1 + 64) = a2[8];
      *(void *)(a1 + 72) = v28;
      uint64_t v29 = a2[11];
      *(void *)(a1 + 80) = a2[10];
      *(void *)(a1 + 88) = v29;
      uint64_t v164 = (int *)type metadata accessor for RawOrderShippingFulfillment();
      uint64_t v30 = v164[11];
      __dst = (void *)(a1 + v30);
      int v159 = (char *)a2 + v30;
      uint64_t v31 = sub_243957010();
      uint64_t v32 = *(void *)(v31 - 8);
      uint64_t v160 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v32 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v160(v159, 1, v31))
      {
        uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
        memcpy(__dst, v159, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v32 + 16))(__dst, v159, v31);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56))(__dst, 0, 1, v31);
      }
      uint64_t v90 = v164[12];
      uint64_t v91 = a1 + v90;
      uint64_t v92 = (uint64_t)a2 + v90;
      uint64_t v93 = *(uint64_t *)((char *)a2 + v90 + 8);
      if (v93 == 1)
      {
        long long v94 = *(_OWORD *)(v92 + 112);
        *(_OWORD *)(v91 + 96) = *(_OWORD *)(v92 + 96);
        *(_OWORD *)(v91 + 112) = v94;
        *(_OWORD *)(v91 + 128) = *(_OWORD *)(v92 + 128);
        *(void *)(v91 + 144) = *(void *)(v92 + 144);
        long long v95 = *(_OWORD *)(v92 + 48);
        *(_OWORD *)(v91 + 32) = *(_OWORD *)(v92 + 32);
        *(_OWORD *)(v91 + 48) = v95;
        long long v96 = *(_OWORD *)(v92 + 80);
        *(_OWORD *)(v91 + 64) = *(_OWORD *)(v92 + 64);
        *(_OWORD *)(v91 + 80) = v96;
        long long v97 = *(_OWORD *)(v92 + 16);
        *(_OWORD *)uint64_t v91 = *(_OWORD *)v92;
        *(_OWORD *)(v91 + 16) = v97;
      }
      else
      {
        *(void *)uint64_t v91 = *(void *)v92;
        *(void *)(v91 + 8) = v93;
        uint64_t v98 = *(void *)(v92 + 24);
        *(void *)(v91 + 16) = *(void *)(v92 + 16);
        *(void *)(v91 + 24) = v98;
        uint64_t v99 = *(void *)(v92 + 40);
        *(void *)(v91 + 32) = *(void *)(v92 + 32);
        *(void *)(v91 + 40) = v99;
        uint64_t v100 = *(void *)(v92 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v100 == 1)
        {
          long long v101 = *(_OWORD *)(v92 + 128);
          *(_OWORD *)(v91 + 112) = *(_OWORD *)(v92 + 112);
          *(_OWORD *)(v91 + 128) = v101;
          *(void *)(v91 + 144) = *(void *)(v92 + 144);
          long long v102 = *(_OWORD *)(v92 + 64);
          *(_OWORD *)(v91 + 48) = *(_OWORD *)(v92 + 48);
          *(_OWORD *)(v91 + 64) = v102;
          long long v103 = *(_OWORD *)(v92 + 96);
          *(_OWORD *)(v91 + 80) = *(_OWORD *)(v92 + 80);
          *(_OWORD *)(v91 + 96) = v103;
        }
        else
        {
          uint64_t v119 = *(void *)(v92 + 56);
          uint64_t v120 = *(void *)(v92 + 64);
          *(void *)(v91 + 48) = v100;
          *(void *)(v91 + 56) = v119;
          uint64_t v121 = *(void *)(v92 + 72);
          uint64_t v122 = *(void *)(v92 + 80);
          *(void *)(v91 + 64) = v120;
          *(void *)(v91 + 72) = v121;
          uint64_t v123 = *(void *)(v92 + 88);
          uint64_t v124 = *(void *)(v92 + 96);
          *(void *)(v91 + 80) = v122;
          *(void *)(v91 + 88) = v123;
          uint64_t v125 = *(void *)(v92 + 104);
          uint64_t v126 = *(void *)(v92 + 112);
          *(void *)(v91 + 96) = v124;
          *(void *)(v91 + 104) = v125;
          uint64_t v127 = *(void *)(v92 + 120);
          uint64_t v128 = *(void *)(v92 + 128);
          *(void *)(v91 + 112) = v126;
          *(void *)(v91 + 120) = v127;
          uint64_t v129 = *(void *)(v92 + 136);
          uint64_t v130 = *(void *)(v92 + 144);
          *(void *)(v91 + 128) = v128;
          *(void *)(v91 + 136) = v129;
          *(void *)(v91 + 144) = v130;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
      }
      uint64_t v131 = v164[13];
      long long v132 = (void *)(a1 + v131);
      uint64_t v133 = (char *)a2 + v131;
      uint64_t v134 = sub_243957400();
      uint64_t v135 = *(void *)(v134 - 8);
      uint64_t v136 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v135 + 48);
      if (v136(v133, 1, v134))
      {
        uint64_t v137 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
        memcpy(v132, v133, *(void *)(*(void *)(v137 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v135 + 16))(v132, v133, v134);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v135 + 56))(v132, 0, 1, v134);
      }
      uint64_t v138 = v164[14];
      uint64_t v139 = (void *)(a1 + v138);
      uint64_t v140 = (char *)a2 + v138;
      uint64_t v141 = type metadata accessor for Duration();
      uint64_t v142 = *(void *)(v141 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v142 + 48))(v140, 1, v141))
      {
        uint64_t v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9BF60);
        memcpy(v139, v140, *(void *)(*(void *)(v143 - 8) + 64));
      }
      else
      {
        uint64_t v144 = sub_243956820();
        (*(void (**)(void *, char *, uint64_t))(*(void *)(v144 - 8) + 16))(v139, v140, v144);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v142 + 56))(v139, 0, 1, v141);
      }
      uint64_t v145 = v164[15];
      uint64_t v146 = (void *)(a1 + v145);
      uint64_t v147 = (char *)a2 + v145;
      if (v136((char *)a2 + v145, 1, v134))
      {
        uint64_t v148 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
        memcpy(v146, v147, *(void *)(*(void *)(v148 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v135 + 16))(v146, v147, v134);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v135 + 56))(v146, 0, 1, v134);
      }
      uint64_t v149 = v164[16];
      int v150 = (void *)(a1 + v149);
      int v151 = (uint64_t *)((char *)a2 + v149);
      uint64_t v152 = v151[1];
      *int v150 = *v151;
      v150[1] = v152;
      uint64_t v153 = v164[17];
      uint64_t v154 = (void *)(a1 + v153);
      uint64_t v155 = (char *)a2 + v153;
      swift_bridgeObjectRetain();
      if (v136(v155, 1, v134))
      {
        uint64_t v156 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
        memcpy(v154, v155, *(void *)(*(void *)(v156 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v135 + 16))(v154, v155, v134);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v135 + 56))(v154, 0, 1, v134);
      }
      *(unsigned char *)(a1 + v164[18]) = *((unsigned char *)a2 + v164[18]);
      goto LABEL_54;
    }
    uint64_t v17 = a2[4];
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v18 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v17 == 1)
    {
      long long v19 = *((_OWORD *)a2 + 7);
      *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
      *(_OWORD *)(a1 + 112) = v19;
      *(void *)(a1 + 128) = a2[16];
      long long v20 = *((_OWORD *)a2 + 3);
      *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 48) = v20;
      long long v21 = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 80) = v21;
      uint64_t v22 = a2[21];
      if (v22)
      {
LABEL_9:
        uint64_t v23 = a2[18];
        *(void *)(a1 + 136) = a2[17];
        *(void *)(a1 + 144) = v23;
        *(unsigned char *)(a1 + 152) = *((unsigned char *)a2 + 152);
        *(void *)(a1 + 160) = a2[20];
        *(void *)(a1 + 168) = v22;
        uint64_t v24 = a2[23];
        *(void *)(a1 + 176) = a2[22];
        *(void *)(a1 + 184) = v24;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_25:
        *(_OWORD *)(a1 + 192) = *((_OWORD *)a2 + 12);
        *(_OWORD *)(a1 + 202) = *(_OWORD *)((char *)a2 + 202);
        uint64_t v81 = a2[29];
        *(void *)(a1 + 224) = a2[28];
        *(void *)(a1 + 232) = v81;
        uint64_t v82 = a2[31];
        *(void *)(a1 + 240) = a2[30];
        *(void *)(a1 + 248) = v82;
        uint64_t v161 = (int *)type metadata accessor for RawOrderPickupFulfillment();
        uint64_t v83 = v161[12];
        uint64_t v84 = (void *)(a1 + v83);
        uint64_t v85 = (char *)a2 + v83;
        uint64_t v86 = sub_243957400();
        uint64_t v87 = *(void *)(v86 - 8);
        uint64_t v88 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v87 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v165 = v87;
        if (v88(v85, 1, v86))
        {
          uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
          memcpy(v84, v85, *(void *)(*(void *)(v89 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v87 + 16))(v84, v85, v86);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v87 + 56))(v84, 0, 1, v86);
        }
        uint64_t v104 = v161[13];
        uint64_t v105 = (void *)(a1 + v104);
        uint64_t v106 = (char *)a2 + v104;
        uint64_t v107 = type metadata accessor for Duration();
        uint64_t v108 = *(void *)(v107 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v108 + 48))(v106, 1, v107))
        {
          uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9BF60);
          memcpy(v105, v106, *(void *)(*(void *)(v109 - 8) + 64));
        }
        else
        {
          uint64_t v110 = sub_243956820();
          (*(void (**)(void *, char *, uint64_t))(*(void *)(v110 - 8) + 16))(v105, v106, v110);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v108 + 56))(v105, 0, 1, v107);
        }
        uint64_t v111 = v161[14];
        int v112 = (void *)(a1 + v111);
        uint64_t v113 = (char *)a2 + v111;
        if (v88((char *)a2 + v111, 1, v86))
        {
          uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
          memcpy(v112, v113, *(void *)(*(void *)(v114 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v165 + 16))(v112, v113, v86);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v165 + 56))(v112, 0, 1, v86);
        }
        uint64_t v115 = v161[15];
        uint64_t v116 = (void *)(a1 + v115);
        uint64_t v117 = (uint64_t *)((char *)a2 + v115);
        uint64_t v118 = v117[1];
        *uint64_t v116 = *v117;
        v116[1] = v118;
        swift_bridgeObjectRetain();
LABEL_54:
        swift_storeEnumTagMultiPayload();
LABEL_55:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
    }
    else
    {
      uint64_t v68 = a2[5];
      uint64_t v69 = a2[6];
      *(void *)(a1 + 32) = v17;
      *(void *)(a1 + 40) = v68;
      uint64_t v70 = a2[7];
      uint64_t v71 = a2[8];
      *(void *)(a1 + 48) = v69;
      *(void *)(a1 + 56) = v70;
      uint64_t v72 = a2[9];
      uint64_t v73 = a2[10];
      *(void *)(a1 + 64) = v71;
      *(void *)(a1 + 72) = v72;
      uint64_t v74 = a2[11];
      uint64_t v75 = a2[12];
      *(void *)(a1 + 80) = v73;
      *(void *)(a1 + 88) = v74;
      uint64_t v76 = a2[13];
      uint64_t v77 = a2[14];
      *(void *)(a1 + 96) = v75;
      *(void *)(a1 + 104) = v76;
      uint64_t v78 = a2[15];
      uint64_t v79 = a2[16];
      *(void *)(a1 + 112) = v77;
      *(void *)(a1 + 120) = v78;
      *(void *)(a1 + 128) = v79;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v22 = a2[21];
      if (v22) {
        goto LABEL_9;
      }
    }
    long long v80 = *(_OWORD *)(a2 + 19);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 17);
    *(_OWORD *)(a1 + 152) = v80;
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 21);
    *(void *)(a1 + 184) = a2[23];
    goto LABEL_25;
  }
  uint64_t v15 = *a2;
  *(void *)a1 = *a2;
  a1 = v15 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return a1;
}

uint64_t destroy for RawECommerceOrderContent.ContentItem(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v2 = (int *)type metadata accessor for RawOrderReturn();
    uint64_t v3 = a1 + v2[8];
    uint64_t v4 = sub_243957400();
    uint64_t v5 = *(void *)(v4 - 8);
    uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (!v6(v3, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    }
    uint64_t v7 = a1 + v2[9];
    if (!v6(v7, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
    }
    uint64_t v8 = a1 + v2[10];
    if (!v6(v8, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v9 = a1 + v2[15];
    uint64_t v10 = sub_243957010();
    uint64_t v11 = *(void *)(v10 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    }
LABEL_22:
    return swift_bridgeObjectRelease();
  }
  type metadata accessor for RawOrderFulfillment();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 32) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (*(void *)(a1 + 168))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v13 = (int *)type metadata accessor for RawOrderPickupFulfillment();
    uint64_t v14 = a1 + v13[12];
    uint64_t v15 = sub_243957400();
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
    if (!v17(v14, 1, v15)) {
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
    }
    uint64_t v18 = a1 + v13[13];
    uint64_t v19 = type metadata accessor for Duration();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v18, 1, v19))
    {
      uint64_t v20 = sub_243956820();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v18, v20);
    }
    uint64_t v21 = a1 + v13[14];
    if (!v17(v21, 1, v15)) {
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v21, v15);
    }
    goto LABEL_22;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v23 = (int *)type metadata accessor for RawOrderShippingFulfillment();
  uint64_t v24 = a1 + v23[11];
  uint64_t v25 = sub_243957010();
  uint64_t v26 = *(void *)(v25 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25)) {
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
  }
  uint64_t v27 = a1 + v23[12];
  if (*(void *)(v27 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v27 + 48) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v28 = a1 + v23[13];
  uint64_t v29 = sub_243957400();
  uint64_t v37 = *(void *)(v29 - 8);
  uint64_t v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48);
  if (!v30(v28, 1, v29)) {
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v28, v29);
  }
  uint64_t v31 = a1 + v23[14];
  uint64_t v32 = type metadata accessor for Duration();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 48))(v31, 1, v32))
  {
    uint64_t v33 = sub_243956820();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8))(v31, v33);
  }
  uint64_t v34 = a1 + v23[15];
  if (!v30(v34, 1, v29)) {
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v34, v29);
  }
  swift_bridgeObjectRelease();
  uint64_t v35 = a1 + v23[17];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v30)(v35, 1, v29);
  if (!result)
  {
    long long v36 = *(uint64_t (**)(uint64_t, uint64_t))(v37 + 8);
    return v36(v35, v29);
  }
  return result;
}

uint64_t initializeWithCopy for RawECommerceOrderContent.ContentItem(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    type metadata accessor for RawOrderFulfillment();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(void *)a1 = *(void *)v2;
    if (EnumCaseMultiPayload != 1)
    {
      uint64_t v24 = *(void *)(v2 + 16);
      *(void *)(a1 + 8) = *(void *)(v2 + 8);
      *(void *)(a1 + 16) = v24;
      uint64_t v25 = *(void *)(v2 + 32);
      *(void *)(a1 + 24) = *(void *)(v2 + 24);
      *(void *)(a1 + 32) = v25;
      *(unsigned char *)(a1 + 40) = *(unsigned char *)(v2 + 40);
      uint64_t v26 = *(void *)(v2 + 56);
      *(void *)(a1 + 48) = *(void *)(v2 + 48);
      *(void *)(a1 + 56) = v26;
      uint64_t v27 = *(void *)(v2 + 72);
      *(void *)(a1 + 64) = *(void *)(v2 + 64);
      *(void *)(a1 + 72) = v27;
      uint64_t v28 = *(void *)(v2 + 88);
      *(void *)(a1 + 80) = *(void *)(v2 + 80);
      *(void *)(a1 + 88) = v28;
      uint64_t v29 = type metadata accessor for RawOrderShippingFulfillment();
      uint64_t v30 = *(int *)(v29 + 44);
      __dst = (void *)(a1 + v30);
      uint64_t v162 = (int *)v29;
      uint64_t v31 = (const void *)(v2 + v30);
      uint64_t v32 = sub_243957010();
      uint64_t v33 = *(void *)(v32 - 8);
      int v159 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v33 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v159(v31, 1, v32))
      {
        uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
        memcpy(__dst, v31, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v33 + 16))(__dst, v31, v32);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(__dst, 0, 1, v32);
      }
      uint64_t v91 = v162[12];
      uint64_t v92 = a1 + v91;
      uint64_t v93 = a2 + v91;
      uint64_t v94 = *(void *)(a2 + v91 + 8);
      if (v94 == 1)
      {
        long long v95 = *(_OWORD *)(v93 + 112);
        *(_OWORD *)(v92 + 96) = *(_OWORD *)(v93 + 96);
        *(_OWORD *)(v92 + 112) = v95;
        *(_OWORD *)(v92 + 128) = *(_OWORD *)(v93 + 128);
        *(void *)(v92 + 144) = *(void *)(v93 + 144);
        long long v96 = *(_OWORD *)(v93 + 48);
        *(_OWORD *)(v92 + 32) = *(_OWORD *)(v93 + 32);
        *(_OWORD *)(v92 + 48) = v96;
        long long v97 = *(_OWORD *)(v93 + 80);
        *(_OWORD *)(v92 + 64) = *(_OWORD *)(v93 + 64);
        *(_OWORD *)(v92 + 80) = v97;
        long long v98 = *(_OWORD *)(v93 + 16);
        *(_OWORD *)uint64_t v92 = *(_OWORD *)v93;
        *(_OWORD *)(v92 + 16) = v98;
      }
      else
      {
        *(void *)uint64_t v92 = *(void *)v93;
        *(void *)(v92 + 8) = v94;
        uint64_t v99 = *(void *)(v93 + 24);
        *(void *)(v92 + 16) = *(void *)(v93 + 16);
        *(void *)(v92 + 24) = v99;
        uint64_t v100 = *(void *)(v93 + 40);
        *(void *)(v92 + 32) = *(void *)(v93 + 32);
        *(void *)(v92 + 40) = v100;
        uint64_t v101 = *(void *)(v93 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v101 == 1)
        {
          long long v102 = *(_OWORD *)(v93 + 128);
          *(_OWORD *)(v92 + 112) = *(_OWORD *)(v93 + 112);
          *(_OWORD *)(v92 + 128) = v102;
          *(void *)(v92 + 144) = *(void *)(v93 + 144);
          long long v103 = *(_OWORD *)(v93 + 64);
          *(_OWORD *)(v92 + 48) = *(_OWORD *)(v93 + 48);
          *(_OWORD *)(v92 + 64) = v103;
          long long v104 = *(_OWORD *)(v93 + 96);
          *(_OWORD *)(v92 + 80) = *(_OWORD *)(v93 + 80);
          *(_OWORD *)(v92 + 96) = v104;
        }
        else
        {
          uint64_t v120 = *(void *)(v93 + 56);
          uint64_t v121 = *(void *)(v93 + 64);
          *(void *)(v92 + 48) = v101;
          *(void *)(v92 + 56) = v120;
          uint64_t v122 = *(void *)(v93 + 72);
          uint64_t v123 = *(void *)(v93 + 80);
          *(void *)(v92 + 64) = v121;
          *(void *)(v92 + 72) = v122;
          uint64_t v124 = *(void *)(v93 + 88);
          uint64_t v125 = *(void *)(v93 + 96);
          *(void *)(v92 + 80) = v123;
          *(void *)(v92 + 88) = v124;
          uint64_t v126 = *(void *)(v93 + 104);
          uint64_t v127 = *(void *)(v93 + 112);
          *(void *)(v92 + 96) = v125;
          *(void *)(v92 + 104) = v126;
          uint64_t v128 = *(void *)(v93 + 120);
          uint64_t v129 = *(void *)(v93 + 128);
          *(void *)(v92 + 112) = v127;
          *(void *)(v92 + 120) = v128;
          uint64_t v130 = *(void *)(v93 + 136);
          uint64_t v131 = *(void *)(v93 + 144);
          *(void *)(v92 + 128) = v129;
          *(void *)(v92 + 136) = v130;
          *(void *)(v92 + 144) = v131;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
      }
      uint64_t v132 = v162[13];
      uint64_t v133 = (void *)(a1 + v132);
      uint64_t v134 = (const void *)(a2 + v132);
      uint64_t v135 = sub_243957400();
      uint64_t v136 = *(void *)(v135 - 8);
      uint64_t v137 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v136 + 48);
      if (v137(v134, 1, v135))
      {
        uint64_t v138 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
        memcpy(v133, v134, *(void *)(*(void *)(v138 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v136 + 16))(v133, v134, v135);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v136 + 56))(v133, 0, 1, v135);
      }
      uint64_t v139 = v162[14];
      uint64_t v140 = (void *)(a1 + v139);
      uint64_t v141 = (const void *)(a2 + v139);
      uint64_t v142 = type metadata accessor for Duration();
      uint64_t v143 = *(void *)(v142 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v143 + 48))(v141, 1, v142))
      {
        uint64_t v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9BF60);
        memcpy(v140, v141, *(void *)(*(void *)(v144 - 8) + 64));
      }
      else
      {
        uint64_t v145 = sub_243956820();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v145 - 8) + 16))(v140, v141, v145);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v143 + 56))(v140, 0, 1, v142);
      }
      uint64_t v146 = v162[15];
      uint64_t v147 = (void *)(a1 + v146);
      uint64_t v148 = (const void *)(a2 + v146);
      if (v137((const void *)(a2 + v146), 1, v135))
      {
        uint64_t v149 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
        memcpy(v147, v148, *(void *)(*(void *)(v149 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v136 + 16))(v147, v148, v135);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v136 + 56))(v147, 0, 1, v135);
      }
      uint64_t v150 = v162[16];
      int v151 = (void *)(a1 + v150);
      uint64_t v152 = (void *)(a2 + v150);
      uint64_t v153 = v152[1];
      *int v151 = *v152;
      v151[1] = v153;
      uint64_t v154 = v162[17];
      uint64_t v155 = (void *)(a1 + v154);
      uint64_t v156 = (const void *)(a2 + v154);
      swift_bridgeObjectRetain();
      if (v137(v156, 1, v135))
      {
        uint64_t v157 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
        memcpy(v155, v156, *(void *)(*(void *)(v157 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v136 + 16))(v155, v156, v135);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v136 + 56))(v155, 0, 1, v135);
      }
      *(unsigned char *)(a1 + v162[18]) = *(unsigned char *)(a2 + v162[18]);
      goto LABEL_52;
    }
    uint64_t v16 = *(void *)(v2 + 32);
    *(unsigned char *)(a1 + 8) = *(unsigned char *)(v2 + 8);
    uint64_t v17 = *(void *)(v2 + 24);
    *(void *)(a1 + 16) = *(void *)(v2 + 16);
    *(void *)(a1 + 24) = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v16 == 1)
    {
      long long v18 = *(_OWORD *)(v2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(v2 + 96);
      *(_OWORD *)(a1 + 112) = v18;
      *(void *)(a1 + 128) = *(void *)(v2 + 128);
      long long v19 = *(_OWORD *)(v2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(v2 + 32);
      *(_OWORD *)(a1 + 48) = v19;
      long long v20 = *(_OWORD *)(v2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(v2 + 64);
      *(_OWORD *)(a1 + 80) = v20;
      uint64_t v21 = *(void *)(v2 + 168);
      if (v21)
      {
LABEL_7:
        uint64_t v22 = *(void *)(v2 + 144);
        *(void *)(a1 + 136) = *(void *)(v2 + 136);
        *(void *)(a1 + 144) = v22;
        *(unsigned char *)(a1 + 152) = *(unsigned char *)(v2 + 152);
        *(void *)(a1 + 160) = *(void *)(v2 + 160);
        *(void *)(a1 + 168) = v21;
        uint64_t v23 = *(void *)(v2 + 184);
        *(void *)(a1 + 176) = *(void *)(v2 + 176);
        *(void *)(a1 + 184) = v23;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_23:
        *(_OWORD *)(a1 + 192) = *(_OWORD *)(v2 + 192);
        *(_OWORD *)(a1 + 202) = *(_OWORD *)(v2 + 202);
        uint64_t v82 = *(void *)(v2 + 232);
        *(void *)(a1 + 224) = *(void *)(v2 + 224);
        *(void *)(a1 + 232) = v82;
        uint64_t v83 = *(void *)(v2 + 248);
        *(void *)(a1 + 240) = *(void *)(v2 + 240);
        *(void *)(a1 + 248) = v83;
        int __dsta = (int *)type metadata accessor for RawOrderPickupFulfillment();
        uint64_t v84 = __dsta[12];
        uint64_t v85 = (void *)(a1 + v84);
        uint64_t v86 = (const void *)(v2 + v84);
        uint64_t v87 = sub_243957400();
        uint64_t v88 = *(void *)(v87 - 8);
        uint64_t v89 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v88 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v89(v86, 1, v87))
        {
          uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
          memcpy(v85, v86, *(void *)(*(void *)(v90 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v88 + 16))(v85, v86, v87);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v88 + 56))(v85, 0, 1, v87);
        }
        uint64_t v105 = __dsta[13];
        uint64_t v106 = (void *)(a1 + v105);
        uint64_t v107 = (const void *)(v2 + v105);
        uint64_t v108 = type metadata accessor for Duration();
        uint64_t v109 = *(void *)(v108 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v109 + 48))(v107, 1, v108))
        {
          uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9BF60);
          memcpy(v106, v107, *(void *)(*(void *)(v110 - 8) + 64));
        }
        else
        {
          uint64_t v111 = sub_243956820();
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v111 - 8) + 16))(v106, v107, v111);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v109 + 56))(v106, 0, 1, v108);
        }
        uint64_t v112 = __dsta[14];
        uint64_t v113 = (void *)(a1 + v112);
        uint64_t v114 = (const void *)(a2 + v112);
        if (v89((const void *)(a2 + v112), 1, v87))
        {
          uint64_t v115 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
          memcpy(v113, v114, *(void *)(*(void *)(v115 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v88 + 16))(v113, v114, v87);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v88 + 56))(v113, 0, 1, v87);
        }
        uint64_t v116 = __dsta[15];
        uint64_t v117 = (void *)(a1 + v116);
        uint64_t v118 = (void *)(a2 + v116);
        uint64_t v119 = v118[1];
        *uint64_t v117 = *v118;
        v117[1] = v119;
        swift_bridgeObjectRetain();
LABEL_52:
        swift_storeEnumTagMultiPayload();
        goto LABEL_53;
      }
    }
    else
    {
      uint64_t v69 = *(void *)(v2 + 40);
      uint64_t v70 = *(void *)(v2 + 48);
      *(void *)(a1 + 32) = v16;
      *(void *)(a1 + 40) = v69;
      uint64_t v71 = *(void *)(v2 + 56);
      uint64_t v72 = *(void *)(v2 + 64);
      *(void *)(a1 + 48) = v70;
      *(void *)(a1 + 56) = v71;
      uint64_t v73 = *(void *)(v2 + 72);
      uint64_t v74 = *(void *)(v2 + 80);
      *(void *)(a1 + 64) = v72;
      *(void *)(a1 + 72) = v73;
      uint64_t v75 = *(void *)(v2 + 88);
      uint64_t v76 = *(void *)(v2 + 96);
      *(void *)(a1 + 80) = v74;
      *(void *)(a1 + 88) = v75;
      uint64_t v77 = *(void *)(v2 + 104);
      uint64_t v78 = *(void *)(v2 + 112);
      *(void *)(a1 + 96) = v76;
      *(void *)(a1 + 104) = v77;
      uint64_t v79 = *(void *)(v2 + 120);
      uint64_t v80 = *(void *)(a2 + 128);
      *(void *)(a1 + 112) = v78;
      *(void *)(a1 + 120) = v79;
      *(void *)(a1 + 128) = v80;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v2 = a2;
      swift_bridgeObjectRetain();
      uint64_t v21 = *(void *)(a2 + 168);
      if (v21) {
        goto LABEL_7;
      }
    }
    long long v81 = *(_OWORD *)(v2 + 152);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(v2 + 136);
    *(_OWORD *)(a1 + 152) = v81;
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(v2 + 168);
    *(void *)(a1 + 184) = *(void *)(v2 + 184);
    goto LABEL_23;
  }
  *(void *)a1 = *(void *)v2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(v2 + 8);
  uint64_t v4 = *(void *)(v2 + 24);
  *(void *)(a1 + 16) = *(void *)(v2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = v2;
  uint64_t v6 = *(void *)(v2 + 32);
  uint64_t v7 = *(void *)(v2 + 40);
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  uint64_t v164 = (int *)type metadata accessor for RawOrderReturn();
  uint64_t v8 = v164[8];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(v5 + v8);
  uint64_t v11 = sub_243957400();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v35 = v164[9];
  long long v36 = (void *)(a1 + v35);
  uint64_t v37 = (const void *)(a2 + v35);
  if (v13((const void *)(a2 + v35), 1, v11))
  {
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
    memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v36, v37, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v36, 0, 1, v11);
  }
  uint64_t v39 = v164[10];
  uint64_t v40 = (void *)(a1 + v39);
  uint64_t v41 = (const void *)(a2 + v39);
  if (v13((const void *)(a2 + v39), 1, v11))
  {
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
    memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v40, v41, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v40, 0, 1, v11);
  }
  uint64_t v43 = v164[11];
  uint64_t v44 = (void *)(a1 + v43);
  uint64_t v45 = (void *)(a2 + v43);
  uint64_t v46 = v45[1];
  *uint64_t v44 = *v45;
  v44[1] = v46;
  uint64_t v47 = v164[12];
  uint64_t v48 = (void *)(a1 + v47);
  uint64_t v49 = (void *)(a2 + v47);
  uint64_t v50 = v49[1];
  *uint64_t v48 = *v49;
  v48[1] = v50;
  uint64_t v51 = v164[13];
  uint64_t v52 = (void *)(a1 + v51);
  uint64_t v53 = (void *)(a2 + v51);
  uint64_t v54 = v53[1];
  *uint64_t v52 = *v53;
  v52[1] = v54;
  uint64_t v55 = v164[14];
  uint64_t v56 = (void *)(a1 + v55);
  uint64_t v57 = (void *)(a2 + v55);
  uint64_t v58 = v57[1];
  void *v56 = *v57;
  v56[1] = v58;
  uint64_t v59 = v164[15];
  uint64_t v163 = (void *)(a1 + v59);
  uint64_t v60 = (const void *)(a2 + v59);
  uint64_t v61 = sub_243957010();
  uint64_t v62 = *(void *)(v61 - 8);
  uint64_t v63 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v62 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v63(v60, 1, v61))
  {
    uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
    memcpy(v163, v60, *(void *)(*(void *)(v64 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v62 + 16))(v163, v60, v61);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v62 + 56))(v163, 0, 1, v61);
  }
  uint64_t v65 = v164[16];
  uint64_t v66 = (void *)(a1 + v65);
  uint64_t v67 = (void *)(a2 + v65);
  uint64_t v68 = v67[1];
  *uint64_t v66 = *v67;
  v66[1] = v68;
  swift_bridgeObjectRetain();
LABEL_53:
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for RawECommerceOrderContent.ContentItem(uint64_t a1, char *a2)
{
  uint64_t v2 = a1;
  if ((char *)a1 != a2)
  {
    sub_2437A6DDC(a1, type metadata accessor for RawECommerceOrderContent.ContentItem);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v2 = *(void *)a2;
      *(unsigned char *)(v2 + 8) = a2[8];
      *(void *)(v2 + 16) = *((void *)a2 + 2);
      *(void *)(v2 + 24) = *((void *)a2 + 3);
      *(void *)(v2 + 32) = *((void *)a2 + 4);
      *(void *)(v2 + 40) = *((void *)a2 + 5);
      uint64_t v4 = (int *)type metadata accessor for RawOrderReturn();
      uint64_t v5 = v4[8];
      uint64_t v122 = v2;
      __dst = (void *)(v2 + v5);
      uint64_t v6 = &a2[v5];
      uint64_t v7 = sub_243957400();
      uint64_t v8 = *(void *)(v7 - 8);
      uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v9(v6, 1, v7))
      {
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
        memcpy(__dst, v6, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v8 + 16))(__dst, v6, v7);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(__dst, 0, 1, v7);
      }
      uint64_t v23 = v8;
      uint64_t v24 = v4[9];
      uint64_t v2 = v122;
      uint64_t v25 = (void *)(v122 + v24);
      uint64_t v26 = &a2[v24];
      if (v9(&a2[v24], 1, v7))
      {
        uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
        memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v23 + 16))(v25, v26, v7);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v25, 0, 1, v7);
      }
      uint64_t v28 = v4[10];
      uint64_t v29 = (void *)(v122 + v28);
      uint64_t v30 = &a2[v28];
      if (v9(&a2[v28], 1, v7))
      {
        uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
        memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v23 + 16))(v29, v30, v7);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v29, 0, 1, v7);
      }
      uint64_t v32 = v4[11];
      uint64_t v33 = (void *)(v122 + v32);
      uint64_t v34 = &a2[v32];
      *uint64_t v33 = *(void *)v34;
      v33[1] = *((void *)v34 + 1);
      uint64_t v35 = v4[12];
      long long v36 = (void *)(v122 + v35);
      uint64_t v37 = &a2[v35];
      *long long v36 = *(void *)v37;
      v36[1] = *((void *)v37 + 1);
      uint64_t v38 = v4[13];
      uint64_t v39 = (void *)(v122 + v38);
      uint64_t v40 = &a2[v38];
      void *v39 = *(void *)v40;
      v39[1] = *((void *)v40 + 1);
      uint64_t v41 = v4[14];
      uint64_t v42 = (void *)(v122 + v41);
      uint64_t v43 = &a2[v41];
      void *v42 = *(void *)v43;
      v42[1] = *((void *)v43 + 1);
      uint64_t v44 = v4[15];
      uint64_t v127 = (void *)(v122 + v44);
      int __dsta = v4;
      uint64_t v124 = a2;
      uint64_t v45 = &a2[v44];
      uint64_t v46 = sub_243957010();
      uint64_t v47 = *(void *)(v46 - 8);
      uint64_t v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v48(v45, 1, v46))
      {
        uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
        memcpy(v127, v45, *(void *)(*(void *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v47 + 16))(v127, v45, v46);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v47 + 56))(v127, 0, 1, v46);
      }
      uint64_t v50 = __dsta[16];
      uint64_t v51 = (void *)(v122 + v50);
      uint64_t v52 = &v124[v50];
      void *v51 = *(void *)v52;
      v51[1] = *((void *)v52 + 1);
      swift_bridgeObjectRetain();
      goto LABEL_54;
    }
    type metadata accessor for RawOrderFulfillment();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(void *)uint64_t v2 = *(void *)a2;
    if (EnumCaseMultiPayload != 1)
    {
      *(void *)(v2 + 8) = *((void *)a2 + 1);
      *(void *)(v2 + 16) = *((void *)a2 + 2);
      *(void *)(v2 + 24) = *((void *)a2 + 3);
      *(void *)(v2 + 32) = *((void *)a2 + 4);
      *(unsigned char *)(v2 + 40) = a2[40];
      *(void *)(v2 + 48) = *((void *)a2 + 6);
      *(void *)(v2 + 56) = *((void *)a2 + 7);
      *(void *)(v2 + 64) = *((void *)a2 + 8);
      *(void *)(v2 + 72) = *((void *)a2 + 9);
      *(void *)(v2 + 80) = *((void *)a2 + 10);
      *(void *)(v2 + 88) = *((void *)a2 + 11);
      uint64_t v18 = type metadata accessor for RawOrderShippingFulfillment();
      uint64_t v19 = *(int *)(v18 + 44);
      uint64_t v123 = (void *)(v2 + v19);
      uint64_t v126 = (int *)v18;
      uint64_t v121 = &a2[v19];
      uint64_t v20 = sub_243957010();
      uint64_t v21 = *(void *)(v20 - 8);
      uint64_t v120 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v120(v121, 1, v20))
      {
        uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
        memcpy(v123, v121, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v21 + 16))(v123, v121, v20);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v123, 0, 1, v20);
      }
      uint64_t v64 = v126[12];
      uint64_t v65 = v2 + v64;
      uint64_t v66 = &a2[v64];
      if (*(void *)&a2[v64 + 8] == 1)
      {
        long long v67 = *((_OWORD *)v66 + 1);
        *(_OWORD *)uint64_t v65 = *(_OWORD *)v66;
        *(_OWORD *)(v65 + 16) = v67;
        long long v68 = *((_OWORD *)v66 + 2);
        long long v69 = *((_OWORD *)v66 + 3);
        long long v70 = *((_OWORD *)v66 + 5);
        *(_OWORD *)(v65 + 64) = *((_OWORD *)v66 + 4);
        *(_OWORD *)(v65 + 80) = v70;
        *(_OWORD *)(v65 + 32) = v68;
        *(_OWORD *)(v65 + 48) = v69;
        long long v71 = *((_OWORD *)v66 + 6);
        long long v72 = *((_OWORD *)v66 + 7);
        long long v73 = *((_OWORD *)v66 + 8);
        *(void *)(v65 + 144) = *((void *)v66 + 18);
        *(_OWORD *)(v65 + 112) = v72;
        *(_OWORD *)(v65 + 128) = v73;
        *(_OWORD *)(v65 + 96) = v71;
      }
      else
      {
        *(void *)uint64_t v65 = *(void *)v66;
        *(void *)(v65 + 8) = *((void *)v66 + 1);
        *(void *)(v65 + 16) = *((void *)v66 + 2);
        *(void *)(v65 + 24) = *((void *)v66 + 3);
        *(void *)(v65 + 32) = *((void *)v66 + 4);
        *(void *)(v65 + 40) = *((void *)v66 + 5);
        uint64_t v74 = *((void *)v66 + 6);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v74 == 1)
        {
          long long v75 = *((_OWORD *)v66 + 3);
          long long v76 = *((_OWORD *)v66 + 5);
          *(_OWORD *)(v65 + 64) = *((_OWORD *)v66 + 4);
          *(_OWORD *)(v65 + 80) = v76;
          *(_OWORD *)(v65 + 48) = v75;
          long long v77 = *((_OWORD *)v66 + 6);
          long long v78 = *((_OWORD *)v66 + 7);
          long long v79 = *((_OWORD *)v66 + 8);
          *(void *)(v65 + 144) = *((void *)v66 + 18);
          *(_OWORD *)(v65 + 112) = v78;
          *(_OWORD *)(v65 + 128) = v79;
          *(_OWORD *)(v65 + 96) = v77;
        }
        else
        {
          *(void *)(v65 + 48) = v74;
          *(void *)(v65 + 56) = *((void *)v66 + 7);
          *(void *)(v65 + 64) = *((void *)v66 + 8);
          *(void *)(v65 + 72) = *((void *)v66 + 9);
          *(void *)(v65 + 80) = *((void *)v66 + 10);
          *(void *)(v65 + 88) = *((void *)v66 + 11);
          *(void *)(v65 + 96) = *((void *)v66 + 12);
          *(void *)(v65 + 104) = *((void *)v66 + 13);
          *(void *)(v65 + 112) = *((void *)v66 + 14);
          *(void *)(v65 + 120) = *((void *)v66 + 15);
          *(void *)(v65 + 128) = *((void *)v66 + 16);
          *(void *)(v65 + 136) = *((void *)v66 + 17);
          *(void *)(v65 + 144) = *((void *)v66 + 18);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
      }
      uint64_t v94 = v126[13];
      long long v95 = (void *)(v2 + v94);
      long long v96 = &a2[v94];
      uint64_t v97 = sub_243957400();
      uint64_t v98 = *(void *)(v97 - 8);
      uint64_t v99 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v98 + 48);
      if (v99(v96, 1, v97))
      {
        uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
        memcpy(v95, v96, *(void *)(*(void *)(v100 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v98 + 16))(v95, v96, v97);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v98 + 56))(v95, 0, 1, v97);
      }
      uint64_t v101 = v126[14];
      long long v102 = (void *)(v2 + v101);
      long long v103 = &a2[v101];
      uint64_t v104 = type metadata accessor for Duration();
      uint64_t v105 = *(void *)(v104 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v105 + 48))(v103, 1, v104))
      {
        uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9BF60);
        memcpy(v102, v103, *(void *)(*(void *)(v106 - 8) + 64));
      }
      else
      {
        uint64_t v107 = sub_243956820();
        (*(void (**)(void *, char *, uint64_t))(*(void *)(v107 - 8) + 16))(v102, v103, v107);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v105 + 56))(v102, 0, 1, v104);
      }
      uint64_t v108 = v126[15];
      uint64_t v109 = (void *)(v2 + v108);
      uint64_t v110 = &a2[v108];
      if (v99(&a2[v108], 1, v97))
      {
        uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
        memcpy(v109, v110, *(void *)(*(void *)(v111 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v98 + 16))(v109, v110, v97);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v98 + 56))(v109, 0, 1, v97);
      }
      uint64_t v112 = v126[16];
      uint64_t v113 = (void *)(v2 + v112);
      uint64_t v114 = &a2[v112];
      *uint64_t v113 = *(void *)v114;
      v113[1] = *((void *)v114 + 1);
      uint64_t v115 = v126[17];
      uint64_t v116 = (void *)(v2 + v115);
      uint64_t v117 = &a2[v115];
      swift_bridgeObjectRetain();
      if (v99(v117, 1, v97))
      {
        uint64_t v118 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
        memcpy(v116, v117, *(void *)(*(void *)(v118 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v98 + 16))(v116, v117, v97);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v98 + 56))(v116, 0, 1, v97);
      }
      *(unsigned char *)(v2 + v126[18]) = a2[v126[18]];
      goto LABEL_53;
    }
    *(unsigned char *)(v2 + 8) = a2[8];
    *(void *)(v2 + 16) = *((void *)a2 + 2);
    *(void *)(v2 + 24) = *((void *)a2 + 3);
    uint64_t v12 = *((void *)a2 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12 == 1)
    {
      long long v13 = *((_OWORD *)a2 + 2);
      long long v14 = *((_OWORD *)a2 + 4);
      *(_OWORD *)(v2 + 48) = *((_OWORD *)a2 + 3);
      *(_OWORD *)(v2 + 64) = v14;
      *(_OWORD *)(v2 + 32) = v13;
      long long v15 = *((_OWORD *)a2 + 5);
      long long v16 = *((_OWORD *)a2 + 6);
      long long v17 = *((_OWORD *)a2 + 7);
      *(void *)(v2 + 128) = *((void *)a2 + 16);
      *(_OWORD *)(v2 + 96) = v16;
      *(_OWORD *)(v2 + 112) = v17;
      *(_OWORD *)(v2 + 80) = v15;
      if (*((void *)a2 + 21))
      {
LABEL_8:
        *(void *)(v2 + 136) = *((void *)a2 + 17);
        *(void *)(v2 + 144) = *((void *)a2 + 18);
        *(unsigned char *)(v2 + 152) = a2[152];
        *(void *)(v2 + 160) = *((void *)a2 + 20);
        *(void *)(v2 + 168) = *((void *)a2 + 21);
        *(void *)(v2 + 176) = *((void *)a2 + 22);
        *(void *)(v2 + 184) = *((void *)a2 + 23);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_24:
        long long v56 = *((_OWORD *)a2 + 12);
        *(_OWORD *)(v2 + 202) = *(_OWORD *)(a2 + 202);
        *(_OWORD *)(v2 + 192) = v56;
        *(void *)(v2 + 224) = *((void *)a2 + 28);
        *(void *)(v2 + 232) = *((void *)a2 + 29);
        *(void *)(v2 + 240) = *((void *)a2 + 30);
        *(void *)(v2 + 248) = *((void *)a2 + 31);
        uint64_t v125 = (int *)type metadata accessor for RawOrderPickupFulfillment();
        uint64_t v57 = v125[12];
        uint64_t v58 = (void *)(v2 + v57);
        uint64_t v59 = &a2[v57];
        uint64_t v60 = sub_243957400();
        uint64_t v61 = *(void *)(v60 - 8);
        uint64_t v62 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v128 = v62;
        if (v62(v59, 1, v60))
        {
          uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
          memcpy(v58, v59, *(void *)(*(void *)(v63 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v61 + 16))(v58, v59, v60);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
        }
        uint64_t v80 = v125[13];
        long long v81 = (void *)(v2 + v80);
        uint64_t v82 = &a2[v80];
        uint64_t v83 = type metadata accessor for Duration();
        uint64_t v84 = *(void *)(v83 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48))(v82, 1, v83))
        {
          uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9BF60);
          memcpy(v81, v82, *(void *)(*(void *)(v85 - 8) + 64));
        }
        else
        {
          uint64_t v86 = sub_243956820();
          (*(void (**)(void *, char *, uint64_t))(*(void *)(v86 - 8) + 16))(v81, v82, v86);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v84 + 56))(v81, 0, 1, v83);
        }
        uint64_t v87 = v125[14];
        uint64_t v88 = (void *)(v2 + v87);
        uint64_t v89 = &a2[v87];
        if (v128(&a2[v87], 1, v60))
        {
          uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
          memcpy(v88, v89, *(void *)(*(void *)(v90 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v61 + 16))(v88, v89, v60);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v61 + 56))(v88, 0, 1, v60);
        }
        uint64_t v91 = v125[15];
        uint64_t v92 = (void *)(v2 + v91);
        uint64_t v93 = &a2[v91];
        void *v92 = *(void *)v93;
        v92[1] = *((void *)v93 + 1);
        swift_bridgeObjectRetain();
LABEL_53:
        swift_storeEnumTagMultiPayload();
LABEL_54:
        swift_storeEnumTagMultiPayload();
        return v2;
      }
    }
    else
    {
      *(void *)(v2 + 32) = v12;
      *(void *)(v2 + 40) = *((void *)a2 + 5);
      *(void *)(v2 + 48) = *((void *)a2 + 6);
      *(void *)(v2 + 56) = *((void *)a2 + 7);
      *(void *)(v2 + 64) = *((void *)a2 + 8);
      *(void *)(v2 + 72) = *((void *)a2 + 9);
      *(void *)(v2 + 80) = *((void *)a2 + 10);
      *(void *)(v2 + 88) = *((void *)a2 + 11);
      *(void *)(v2 + 96) = *((void *)a2 + 12);
      *(void *)(v2 + 104) = *((void *)a2 + 13);
      *(void *)(v2 + 112) = *((void *)a2 + 14);
      *(void *)(v2 + 120) = *((void *)a2 + 15);
      *(void *)(v2 + 128) = *((void *)a2 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (*((void *)a2 + 21)) {
        goto LABEL_8;
      }
    }
    long long v53 = *(_OWORD *)(a2 + 136);
    long long v54 = *(_OWORD *)(a2 + 152);
    long long v55 = *(_OWORD *)(a2 + 168);
    *(void *)(v2 + 184) = *((void *)a2 + 23);
    *(_OWORD *)(v2 + 152) = v54;
    *(_OWORD *)(v2 + 168) = v55;
    *(_OWORD *)(v2 + 136) = v53;
    goto LABEL_24;
  }
  return v2;
}

uint64_t initializeWithTake for RawECommerceOrderContent.ContentItem(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
    long long v4 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v4;
    uint64_t v5 = (int *)type metadata accessor for RawOrderReturn();
    uint64_t v6 = v5[8];
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (const void *)(a2 + v6);
    uint64_t v9 = sub_243957400();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
    if (v11(v8, 1, v9))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    uint64_t v33 = v5[9];
    uint64_t v34 = (void *)(a1 + v33);
    uint64_t v35 = (const void *)(a2 + v33);
    if (v11((const void *)(a2 + v33), 1, v9))
    {
      uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v34, v35, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v34, 0, 1, v9);
    }
    uint64_t v37 = v5[10];
    uint64_t v38 = (void *)(a1 + v37);
    uint64_t v39 = (const void *)(a2 + v37);
    if (v11((const void *)(a2 + v37), 1, v9))
    {
      uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
      memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v38, v39, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v38, 0, 1, v9);
    }
    *(_OWORD *)(a1 + v5[11]) = *(_OWORD *)(a2 + v5[11]);
    *(_OWORD *)(a1 + v5[12]) = *(_OWORD *)(a2 + v5[12]);
    *(_OWORD *)(a1 + v5[13]) = *(_OWORD *)(a2 + v5[13]);
    *(_OWORD *)(a1 + v5[14]) = *(_OWORD *)(a2 + v5[14]);
    uint64_t v41 = v5[15];
    uint64_t v42 = (void *)(a1 + v41);
    uint64_t v43 = (const void *)(a2 + v41);
    uint64_t v44 = sub_243957010();
    uint64_t v45 = *(void *)(v44 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
    {
      uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
      memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v45 + 32))(v42, v43, v44);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
    }
    *(_OWORD *)(a1 + v5[16]) = *(_OWORD *)(a2 + v5[16]);
  }
  else
  {
    type metadata accessor for RawOrderFulfillment();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(void *)a1 = *(void *)a2;
    if (EnumCaseMultiPayload == 1)
    {
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      long long v14 = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 96) = v14;
      *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      long long v15 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      *(_OWORD *)(a1 + 32) = v15;
      long long v16 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = v16;
      *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
      *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
      *(_OWORD *)(a1 + 202) = *(_OWORD *)(a2 + 202);
      long long v17 = *(_OWORD *)(a2 + 240);
      *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
      *(_OWORD *)(a1 + 240) = v17;
      uint64_t v18 = (int *)type metadata accessor for RawOrderPickupFulfillment();
      uint64_t v19 = v18[12];
      uint64_t v20 = (void *)(a1 + v19);
      uint64_t v21 = (const void *)(a2 + v19);
      uint64_t v22 = sub_243957400();
      uint64_t v23 = *(void *)(v22 - 8);
      uint64_t v87 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48);
      if (v87(v21, 1, v22))
      {
        uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
        memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v23 + 32))(v20, v21, v22);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      }
      uint64_t v47 = v18[13];
      uint64_t v48 = (void *)(a1 + v47);
      uint64_t v49 = (const void *)(a2 + v47);
      uint64_t v50 = type metadata accessor for Duration();
      uint64_t v51 = *(void *)(v50 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
      {
        uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9BF60);
        memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64));
      }
      else
      {
        uint64_t v66 = sub_243956820();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v66 - 8) + 32))(v48, v49, v66);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
      }
      uint64_t v67 = v18[14];
      long long v68 = (void *)(a1 + v67);
      long long v69 = (const void *)(a2 + v67);
      if (v87((const void *)(a2 + v67), 1, v22))
      {
        uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
        memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v23 + 32))(v68, v69, v22);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v68, 0, 1, v22);
      }
      *(_OWORD *)(a1 + v18[15]) = *(_OWORD *)(a2 + v18[15]);
    }
    else
    {
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
      long long v25 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = v25;
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      uint64_t v26 = (int *)type metadata accessor for RawOrderShippingFulfillment();
      uint64_t v27 = v26[11];
      uint64_t v28 = (void *)(a1 + v27);
      uint64_t v29 = (const void *)(a2 + v27);
      uint64_t v30 = sub_243957010();
      uint64_t v31 = *(void *)(v30 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
      {
        uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
        memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v31 + 32))(v28, v29, v30);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      }
      uint64_t v53 = v26[12];
      uint64_t v54 = a1 + v53;
      uint64_t v55 = a2 + v53;
      long long v56 = *(_OWORD *)(v55 + 112);
      *(_OWORD *)(v54 + 96) = *(_OWORD *)(v55 + 96);
      *(_OWORD *)(v54 + 112) = v56;
      *(_OWORD *)(v54 + 128) = *(_OWORD *)(v55 + 128);
      *(void *)(v54 + 144) = *(void *)(v55 + 144);
      long long v57 = *(_OWORD *)(v55 + 48);
      *(_OWORD *)(v54 + 32) = *(_OWORD *)(v55 + 32);
      *(_OWORD *)(v54 + 48) = v57;
      long long v58 = *(_OWORD *)(v55 + 80);
      *(_OWORD *)(v54 + 64) = *(_OWORD *)(v55 + 64);
      *(_OWORD *)(v54 + 80) = v58;
      long long v59 = *(_OWORD *)(v55 + 16);
      *(_OWORD *)uint64_t v54 = *(_OWORD *)v55;
      *(_OWORD *)(v54 + 16) = v59;
      uint64_t v60 = v26[13];
      uint64_t v61 = (void *)(a1 + v60);
      uint64_t v62 = (const void *)(a2 + v60);
      uint64_t v63 = sub_243957400();
      uint64_t v64 = *(void *)(v63 - 8);
      uint64_t v88 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v64 + 48);
      if (v88(v62, 1, v63))
      {
        uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
        memcpy(v61, v62, *(void *)(*(void *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v64 + 32))(v61, v62, v63);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
      }
      uint64_t v71 = v26[14];
      long long v72 = (void *)(a1 + v71);
      long long v73 = (const void *)(a2 + v71);
      uint64_t v74 = type metadata accessor for Duration();
      uint64_t v75 = *(void *)(v74 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v75 + 48))(v73, 1, v74))
      {
        uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9BF60);
        memcpy(v72, v73, *(void *)(*(void *)(v76 - 8) + 64));
      }
      else
      {
        uint64_t v77 = sub_243956820();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v77 - 8) + 32))(v72, v73, v77);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
      }
      uint64_t v78 = v26[15];
      long long v79 = (void *)(a1 + v78);
      uint64_t v80 = (const void *)(a2 + v78);
      if (v88((const void *)(a2 + v78), 1, v63))
      {
        uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
        memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v64 + 32))(v79, v80, v63);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v64 + 56))(v79, 0, 1, v63);
      }
      *(_OWORD *)(a1 + v26[16]) = *(_OWORD *)(a2 + v26[16]);
      uint64_t v82 = v26[17];
      uint64_t v83 = (void *)(a1 + v82);
      uint64_t v84 = (const void *)(a2 + v82);
      if (v88((const void *)(a2 + v82), 1, v63))
      {
        uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
        memcpy(v83, v84, *(void *)(*(void *)(v85 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v64 + 32))(v83, v84, v63);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v64 + 56))(v83, 0, 1, v63);
      }
      *(unsigned char *)(a1 + v26[18]) = *(unsigned char *)(a2 + v26[18]);
    }
    swift_storeEnumTagMultiPayload();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for RawECommerceOrderContent.ContentItem(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_2437A6DDC(a1, type metadata accessor for RawECommerceOrderContent.ContentItem);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      long long v4 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      *(_OWORD *)(a1 + 32) = v4;
      uint64_t v5 = (int *)type metadata accessor for RawOrderReturn();
      uint64_t v6 = v5[8];
      uint64_t v7 = (void *)(a1 + v6);
      uint64_t v8 = (const void *)(a2 + v6);
      uint64_t v9 = sub_243957400();
      uint64_t v10 = *(void *)(v9 - 8);
      uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
      if (v11(v8, 1, v9))
      {
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
        memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      uint64_t v33 = v5[9];
      uint64_t v34 = (void *)(a1 + v33);
      uint64_t v35 = (const void *)(a2 + v33);
      if (v11((const void *)(a2 + v33), 1, v9))
      {
        uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
        memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v34, v35, v9);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v34, 0, 1, v9);
      }
      uint64_t v37 = v5[10];
      uint64_t v38 = (void *)(a1 + v37);
      uint64_t v39 = (const void *)(a2 + v37);
      if (v11((const void *)(a2 + v37), 1, v9))
      {
        uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
        memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v38, v39, v9);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v38, 0, 1, v9);
      }
      *(_OWORD *)(a1 + v5[11]) = *(_OWORD *)(a2 + v5[11]);
      *(_OWORD *)(a1 + v5[12]) = *(_OWORD *)(a2 + v5[12]);
      *(_OWORD *)(a1 + v5[13]) = *(_OWORD *)(a2 + v5[13]);
      *(_OWORD *)(a1 + v5[14]) = *(_OWORD *)(a2 + v5[14]);
      uint64_t v41 = v5[15];
      uint64_t v42 = (void *)(a1 + v41);
      uint64_t v43 = (const void *)(a2 + v41);
      uint64_t v44 = sub_243957010();
      uint64_t v45 = *(void *)(v44 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
      {
        uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
        memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v45 + 32))(v42, v43, v44);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
      }
      *(_OWORD *)(a1 + v5[16]) = *(_OWORD *)(a2 + v5[16]);
    }
    else
    {
      type metadata accessor for RawOrderFulfillment();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *(void *)a1 = *(void *)a2;
      if (EnumCaseMultiPayload == 1)
      {
        *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
        long long v14 = *(_OWORD *)(a2 + 96);
        *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
        *(_OWORD *)(a1 + 96) = v14;
        *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
        *(void *)(a1 + 128) = *(void *)(a2 + 128);
        long long v15 = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
        *(_OWORD *)(a1 + 32) = v15;
        long long v16 = *(_OWORD *)(a2 + 64);
        *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 64) = v16;
        *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
        *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
        *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
        *(void *)(a1 + 184) = *(void *)(a2 + 184);
        *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
        *(_OWORD *)(a1 + 202) = *(_OWORD *)(a2 + 202);
        long long v17 = *(_OWORD *)(a2 + 240);
        *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
        *(_OWORD *)(a1 + 240) = v17;
        uint64_t v18 = (int *)type metadata accessor for RawOrderPickupFulfillment();
        uint64_t v19 = v18[12];
        uint64_t v20 = (void *)(a1 + v19);
        uint64_t v21 = (const void *)(a2 + v19);
        uint64_t v22 = sub_243957400();
        uint64_t v23 = *(void *)(v22 - 8);
        uint64_t v87 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48);
        if (v87(v21, 1, v22))
        {
          uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
          memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v23 + 32))(v20, v21, v22);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
        }
        uint64_t v47 = v18[13];
        uint64_t v48 = (void *)(a1 + v47);
        uint64_t v49 = (const void *)(a2 + v47);
        uint64_t v50 = type metadata accessor for Duration();
        uint64_t v51 = *(void *)(v50 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
        {
          uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9BF60);
          memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64));
        }
        else
        {
          uint64_t v66 = sub_243956820();
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v66 - 8) + 32))(v48, v49, v66);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
        }
        uint64_t v67 = v18[14];
        long long v68 = (void *)(a1 + v67);
        long long v69 = (const void *)(a2 + v67);
        if (v87((const void *)(a2 + v67), 1, v22))
        {
          uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
          memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v23 + 32))(v68, v69, v22);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v68, 0, 1, v22);
        }
        *(_OWORD *)(a1 + v18[15]) = *(_OWORD *)(a2 + v18[15]);
      }
      else
      {
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
        long long v25 = *(_OWORD *)(a2 + 64);
        *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 64) = v25;
        *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
        uint64_t v26 = (int *)type metadata accessor for RawOrderShippingFulfillment();
        uint64_t v27 = v26[11];
        uint64_t v28 = (void *)(a1 + v27);
        uint64_t v29 = (const void *)(a2 + v27);
        uint64_t v30 = sub_243957010();
        uint64_t v31 = *(void *)(v30 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
        {
          uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
          memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v31 + 32))(v28, v29, v30);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
        }
        uint64_t v53 = v26[12];
        uint64_t v54 = a1 + v53;
        uint64_t v55 = a2 + v53;
        long long v56 = *(_OWORD *)(v55 + 112);
        *(_OWORD *)(v54 + 96) = *(_OWORD *)(v55 + 96);
        *(_OWORD *)(v54 + 112) = v56;
        *(_OWORD *)(v54 + 128) = *(_OWORD *)(v55 + 128);
        *(void *)(v54 + 144) = *(void *)(v55 + 144);
        long long v57 = *(_OWORD *)(v55 + 48);
        *(_OWORD *)(v54 + 32) = *(_OWORD *)(v55 + 32);
        *(_OWORD *)(v54 + 48) = v57;
        long long v58 = *(_OWORD *)(v55 + 80);
        *(_OWORD *)(v54 + 64) = *(_OWORD *)(v55 + 64);
        *(_OWORD *)(v54 + 80) = v58;
        long long v59 = *(_OWORD *)(v55 + 16);
        *(_OWORD *)uint64_t v54 = *(_OWORD *)v55;
        *(_OWORD *)(v54 + 16) = v59;
        uint64_t v60 = v26[13];
        uint64_t v61 = (void *)(a1 + v60);
        uint64_t v62 = (const void *)(a2 + v60);
        uint64_t v63 = sub_243957400();
        uint64_t v64 = *(void *)(v63 - 8);
        uint64_t v88 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v64 + 48);
        if (v88(v62, 1, v63))
        {
          uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
          memcpy(v61, v62, *(void *)(*(void *)(v65 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v64 + 32))(v61, v62, v63);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
        }
        uint64_t v71 = v26[14];
        long long v72 = (void *)(a1 + v71);
        long long v73 = (const void *)(a2 + v71);
        uint64_t v74 = type metadata accessor for Duration();
        uint64_t v75 = *(void *)(v74 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v75 + 48))(v73, 1, v74))
        {
          uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9BF60);
          memcpy(v72, v73, *(void *)(*(void *)(v76 - 8) + 64));
        }
        else
        {
          uint64_t v77 = sub_243956820();
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v77 - 8) + 32))(v72, v73, v77);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
        }
        uint64_t v78 = v26[15];
        long long v79 = (void *)(a1 + v78);
        uint64_t v80 = (const void *)(a2 + v78);
        if (v88((const void *)(a2 + v78), 1, v63))
        {
          uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
          memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v64 + 32))(v79, v80, v63);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v64 + 56))(v79, 0, 1, v63);
        }
        *(_OWORD *)(a1 + v26[16]) = *(_OWORD *)(a2 + v26[16]);
        uint64_t v82 = v26[17];
        uint64_t v83 = (void *)(a1 + v82);
        uint64_t v84 = (const void *)(a2 + v82);
        if (v88((const void *)(a2 + v82), 1, v63))
        {
          uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
          memcpy(v83, v84, *(void *)(*(void *)(v85 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v64 + 32))(v83, v84, v63);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v64 + 56))(v83, 0, 1, v63);
        }
        *(unsigned char *)(a1 + v26[18]) = *(unsigned char *)(a2 + v26[18]);
      }
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2437B931C()
{
  uint64_t result = type metadata accessor for RawOrderFulfillment();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for RawOrderReturn();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RawECommerceOrderContent.DecodingConfiguration()
{
  return &type metadata for RawECommerceOrderContent.DecodingConfiguration;
}

unsigned char *storeEnumTagSinglePayload for RawOrderChangeNotificationsValue(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2437B94BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RawOrderChangeNotificationsValue()
{
  return &type metadata for RawOrderChangeNotificationsValue;
}

unsigned char *storeEnumTagSinglePayload for RawECommerceOrderContent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 24 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 24) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE7)
  {
    unsigned int v6 = ((a2 - 232) >> 8) + 1;
    *uint64_t result = a2 + 24;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2437B95C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 24;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RawECommerceOrderContent.CodingKeys()
{
  return &type metadata for RawECommerceOrderContent.CodingKeys;
}

unint64_t sub_2437B95FC()
{
  unint64_t result = qword_268D9FE88;
  if (!qword_268D9FE88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FE88);
  }
  return result;
}

unint64_t sub_2437B9654()
{
  unint64_t result = qword_268D9FE90;
  if (!qword_268D9FE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FE90);
  }
  return result;
}

unint64_t sub_2437B96AC()
{
  unint64_t result = qword_268D9FE98;
  if (!qword_268D9FE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FE98);
  }
  return result;
}

unint64_t sub_2437B9700()
{
  unint64_t result = qword_268D9FEA0;
  if (!qword_268D9FEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FEA0);
  }
  return result;
}

unint64_t sub_2437B9754()
{
  unint64_t result = qword_268D9FEA8;
  if (!qword_268D9FEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FEA8);
  }
  return result;
}

unint64_t sub_2437B97A8()
{
  unint64_t result = qword_268D9FEB8;
  if (!qword_268D9FEB8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268D9FDF8);
    sub_2437B99A4(&qword_268D9FEC0, (void (*)(uint64_t))type metadata accessor for RawOrderFulfillment);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FEB8);
  }
  return result;
}

unint64_t sub_2437B984C()
{
  unint64_t result = qword_268D9FEC8;
  if (!qword_268D9FEC8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268D9FDE0);
    sub_2437B99A4(&qword_268D9FED0, (void (*)(uint64_t))type metadata accessor for RawOrderReturn);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FEC8);
  }
  return result;
}

uint64_t *sub_2437B98F0(uint64_t *a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = a1[12];
  uint64_t v13 = a1[11];
  uint64_t v14 = a1[10];
  uint64_t v5 = a1[13];
  uint64_t v6 = a1[14];
  uint64_t v7 = a1[15];
  uint64_t v8 = a1[16];
  uint64_t v10 = a1[17];
  uint64_t v9 = a1[18];
  uint64_t v11 = a1[19];
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9]);
  a2(v14, v13, v4, v5, v6, v7, v8, v10, v9, v11);
  return a1;
}

uint64_t sub_2437B99A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2437B99EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2437AC008(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_2437B9A08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2437B99EC(a1, a2);
}

uint64_t ManagedTransaction.displayDescription.getter()
{
  id v1 = objc_msgSend(v0, sel_merchantName);
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = sub_2439582D0();
    unint64_t v5 = v4;
  }
  else
  {
    uint64_t v3 = 0;
    unint64_t v5 = 0;
  }
  id v6 = objc_msgSend(v0, sel_transactionDescription);
  uint64_t v7 = sub_2439582D0();
  unint64_t v9 = v8;

  TransactionType.init(rawValue:)((Swift::Int16)objc_msgSend(v0, sel_transactionTypeValue));
  uint64_t v10 = sub_2437B9B1C(v3, v5, v7, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_2437B9B1C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  if (!a2) {
    goto LABEL_6;
  }
  uint64_t v5 = a1;
  uint64_t v6 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v6 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v6)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
LABEL_6:
    uint64_t v7 = HIBYTE(a4) & 0xF;
    if ((a4 & 0x2000000000000000) == 0) {
      uint64_t v7 = a3 & 0xFFFFFFFFFFFFLL;
    }
    if (v7)
    {
      swift_bridgeObjectRetain();
      return a3;
    }
    else
    {
      return TransactionType.localizedDescription.getter();
    }
  }
  return v5;
}

uint64_t InternalTransaction.displayDescription.getter()
{
  uint64_t v1 = type metadata accessor for InternalTransaction(0);
  uint64_t v2 = (uint64_t *)(v0 + *(int *)(v1 + 52));
  unint64_t v3 = v2[1];
  unint64_t v4 = (uint64_t *)(v0 + *(int *)(v1 + 56));
  unint64_t v5 = v4[1];
  if (!v3) {
    goto LABEL_6;
  }
  uint64_t v6 = *v2;
  uint64_t v7 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0) {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFLL;
  }
  if (v7)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
LABEL_6:
    uint64_t v8 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0) {
      uint64_t v8 = *v4 & 0xFFFFFFFFFFFFLL;
    }
    if (v8)
    {
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
    }
    else
    {
      return TransactionType.localizedDescription.getter();
    }
  }
  return v6;
}

void sub_2437B9C80(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2433C03A0(a1, (uint64_t)v10);
  uint64_t v11 = *a2;
  uint64_t v12 = sub_243957400();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) != 1)
  {
    uint64_t v14 = (void *)sub_243957350();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
  }
  objc_msgSend(v11, *a5, v14);
}

id ManagedLabRequest.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedLabRequest.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)swift_getObjectType();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedLabRequest.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id ManagedLabRequest.__allocating_init(success:date:context:)(char a1, uint64_t a2, void *a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v22 - v11;
  uint64_t v13 = sub_243957400();
  uint64_t v23 = *(void *)(v13 - 8);
  uint64_t v14 = v23;
  if (a1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v12, a2, v13);
    uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
    v15(v12, 0, 1, v13);
    v15(v10, 1, 1, v13);
    int v16 = 0;
  }
  else
  {
    uint64_t v22 = v3;
    long long v17 = a3;
    uint64_t v18 = a2;
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
    int v16 = 1;
    v19(v12, 1, 1, v13);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v10, v18, v13);
    v19(v10, 0, 1, v13);
    a2 = v18;
    a3 = v17;
  }
  id v20 = sub_2437BA4F4((uint64_t)v12, (uint64_t)v10, v16, (uint64_t)a3);

  sub_243957400();
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(a2, v13);
  return v20;
}

id ManagedLabRequest.__allocating_init(lastSuccessDate:lastFailureDate:failedAttemptCount:context:)(uint64_t a1, uint64_t a2, int a3, void *a4)
{
  id v5 = sub_2437BA4F4(a1, a2, a3, (uint64_t)a4);

  return v5;
}

void static ManagedLabRequest.insertOrUpdate(for:success:date:context:)(void *a1, char a2, uint64_t a3, void *a4)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v29 - v13;
  uint64_t v15 = sub_243957400();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v19 = objc_msgSend(a1, sel_labRequestObject);
  if (v19)
  {
    id v32 = v19;
    if (a2)
    {
      objc_msgSend(v19, sel_setFailedAttemptCount_, 0);
      id v20 = (void *)sub_243957350();
      objc_msgSend(v32, sel_setLastSuccessDate_, v20);
    }
    else
    {
      unsigned int v24 = objc_msgSend(v19, sel_failedAttemptCount);
      if ((__int16)(v24 + 1) != v24 + 1)
      {
        __break(1u);
        return;
      }
      objc_msgSend(v32, sel_setFailedAttemptCount_);
      id v20 = (void *)sub_243957350();
      objc_msgSend(v32, sel_setLastFailureDate_, v20);
    }

    id v25 = v32;
  }
  else
  {
    id v30 = a4;
    uint64_t v31 = v4;
    id v32 = a1;
    uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
    v21(v18, a3, v15);
    if (a2)
    {
      v21(v14, (uint64_t)v18, v15);
      uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
      v22(v14, 0, 1, v15);
      v22(v12, 1, 1, v15);
      int v23 = 0;
    }
    else
    {
      uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
      int v23 = 1;
      v26(v14, 1, 1, v15);
      v21(v12, (uint64_t)v18, v15);
      v26(v12, 0, 1, v15);
    }
    id v27 = v30;
    id v28 = sub_2437BA4F4((uint64_t)v14, (uint64_t)v12, v23, (uint64_t)v27);

    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    objc_msgSend(v32, sel_setLabRequestObject_, v28);
  }
}

id static ManagedLabRequest.fetchRequest()()
{
  v2.receiver = (id)swift_getObjCClassFromMetadata();
  v2.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit17ManagedLabRequest;
  id v0 = objc_msgSendSuper2(&v2, sel_fetchRequest);

  return v0;
}

id sub_2437BA4F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  id v5 = v4;
  int v25 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C8E20);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = &v24[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = &v24[-v13];
  id v15 = objc_msgSend(objc_allocWithZone(v5), sel_initWithContext_, a4);
  uint64_t v26 = a1;
  sub_2433C03A0(a1, (uint64_t)v14);
  uint64_t v16 = sub_243957400();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  id v20 = v15;
  uint64_t v21 = 0;
  if (v19 != 1)
  {
    uint64_t v21 = (void *)sub_243957350();
    (*(void (**)(unsigned char *, uint64_t))(v17 + 8))(v14, v16);
  }
  objc_msgSend(v20, sel_setLastSuccessDate_, v21);

  sub_2433C03A0(a2, (uint64_t)v12);
  if (v18(v12, 1, v16) == 1)
  {
    uint64_t v22 = 0;
  }
  else
  {
    uint64_t v22 = (void *)sub_243957350();
    (*(void (**)(unsigned char *, uint64_t))(v17 + 8))(v12, v16);
  }
  objc_msgSend(v20, sel_setLastFailureDate_, v22);

  objc_msgSend(v20, sel_setFailedAttemptCount_, (__int16)v25);
  sub_2434038E8(a2);
  sub_2434038E8(v26);
  return v20;
}

char *keypath_get_selector_lastSuccessDate()
{
  return sel_lastSuccessDate;
}

uint64_t sub_2437BA738@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2433BE2CC(a1, (SEL *)&selRef_lastSuccessDate, a2);
}

void sub_2437BA758(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_lastFailureDate()
{
  return sel_lastFailureDate;
}

uint64_t sub_2437BA784@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2433BE2CC(a1, (SEL *)&selRef_lastFailureDate, a2);
}

void sub_2437BA7A4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_failedAttemptCount()
{
  return sel_failedAttemptCount;
}

id sub_2437BA7D0@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_failedAttemptCount);
  *a2 = (_WORD)result;
  return result;
}

id sub_2437BA804(__int16 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setFailedAttemptCount_, *a1);
}

uint64_t type metadata accessor for ManagedLabRequest()
{
  return self;
}

uint64_t RawOrderApplication.init(storeIdentifier:launchURL:customProductPageIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v10 = type metadata accessor for RawOrderApplication();
  uint64_t v11 = (uint64_t)a5 + *(int *)(v10 + 20);
  uint64_t v12 = sub_243957010();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = (void *)((char *)a5 + *(int *)(v10 + 24));
  *uint64_t v13 = 0;
  v13[1] = 0;
  *a5 = a1;
  sub_2433D0F50(a2, v11);
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v13 = a3;
  v13[1] = a4;
  return result;
}

uint64_t type metadata accessor for RawOrderApplication()
{
  uint64_t result = qword_268D9FF10;
  if (!qword_268D9FF10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t RawOrderApplication.storeIdentifier.getter()
{
  return *(void *)v0;
}

uint64_t RawOrderApplication.storeIdentifier.setter(uint64_t result)
{
  void *v1 = result;
  return result;
}

uint64_t (*RawOrderApplication.storeIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderApplication.launchURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RawOrderApplication() + 20);

  return sub_2433B998C(v3, a1);
}

uint64_t RawOrderApplication.launchURL.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RawOrderApplication() + 20);

  return sub_2433D0F50(a1, v3);
}

uint64_t (*RawOrderApplication.launchURL.modify())(void)
{
  return nullsub_1;
}

uint64_t RawOrderApplication.customProductPageIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for RawOrderApplication() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawOrderApplication.customProductPageIdentifier.setter(uint64_t a1, uint64_t a2)
{
  id v5 = (void *)(v2 + *(int *)(type metadata accessor for RawOrderApplication() + 24));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*RawOrderApplication.customProductPageIdentifier.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_2437BAB20(uint64_t a1)
{
  unint64_t v2 = sub_2437BB4F8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2437BAB5C(uint64_t a1)
{
  unint64_t v2 = sub_2437BB4F8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t RawOrderApplication.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9FEF8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2437BB4F8();
  sub_243959BD0();
  v8[15] = 0;
  sub_243959880();
  if (!v1)
  {
    type metadata accessor for RawOrderApplication();
    v8[14] = 1;
    sub_243957010();
    sub_2436285AC((unint64_t *)&unk_268D97120);
    sub_2439597D0();
    v8[13] = 2;
    sub_243959790();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t RawOrderApplication.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
  MEMORY[0x270FA5388](v3 - 8);
  id v28 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9FF08);
  uint64_t v27 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for RawOrderApplication();
  uint64_t v8 = v7 - 8;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (uint64_t *)((char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = (uint64_t)v10 + *(int *)(v8 + 28);
  uint64_t v12 = sub_243957010();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = (uint64_t *)((char *)v10 + *(int *)(v8 + 32));
  *uint64_t v13 = 0;
  v13[1] = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2437BB4F8();
  uint64_t v29 = v6;
  uint64_t v14 = v31;
  sub_243959BA0();
  if (v14)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    sub_24337C1BC(v11, &qword_26B0C98A0);
    return swift_bridgeObjectRelease();
  }
  else
  {
    unsigned int v24 = v13;
    int v25 = a1;
    uint64_t v31 = v11;
    uint64_t v16 = v27;
    uint64_t v15 = (uint64_t)v28;
    char v34 = 0;
    uint64_t v17 = v29;
    uint64_t v18 = v30;
    *uint64_t v10 = sub_243959710();
    char v33 = 1;
    sub_2436285AC(&qword_268D97150);
    sub_243959660();
    sub_2433D0F50(v15, v31);
    char v32 = 2;
    uint64_t v19 = sub_243959620();
    uint64_t v21 = v20;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v17, v18);
    uint64_t v22 = v24;
    swift_bridgeObjectRelease();
    uint64_t *v22 = v19;
    v22[1] = v21;
    sub_2437BB54C((uint64_t)v10, v26);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v25);
    return sub_243588DD4((uint64_t)v10);
  }
}

uint64_t sub_2437BB0B0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return RawOrderApplication.init(from:)(a1, a2);
}

uint64_t sub_2437BB0C8(void *a1)
{
  return RawOrderApplication.encode(to:)(a1);
}

uint64_t _s10FinanceKit19RawOrderApplicationV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = sub_243957010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D98EB8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v37 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v37 - v18;
  if (*a1 != *a2) {
    return 0;
  }
  uint64_t v37 = v7;
  uint64_t v20 = v5;
  uint64_t v21 = type metadata accessor for RawOrderApplication();
  uint64_t v22 = *(int *)(v21 + 20);
  uint64_t v39 = a1;
  sub_2433B998C((uint64_t)a1 + v22, (uint64_t)v19);
  uint64_t v38 = v21;
  uint64_t v23 = *(int *)(v21 + 20);
  uint64_t v24 = v20;
  uint64_t v40 = a2;
  sub_2433B998C((uint64_t)a2 + v23, (uint64_t)v17);
  uint64_t v25 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_2433B998C((uint64_t)v19, (uint64_t)v10);
  sub_2433B998C((uint64_t)v17, v25);
  uint64_t v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
  if (v26((uint64_t)v10, 1, v4) != 1)
  {
    sub_2433B998C((uint64_t)v10, (uint64_t)v14);
    if (v26(v25, 1, v4) != 1)
    {
      uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 32);
      id v28 = v37;
      v27(v37, v25, v4);
      sub_2436285AC(&qword_268D98EC0);
      char v29 = sub_243958270();
      uint64_t v30 = *(void (**)(char *, uint64_t))(v24 + 8);
      v30(v28, v4);
      sub_24337C1BC((uint64_t)v17, &qword_26B0C98A0);
      sub_24337C1BC((uint64_t)v19, &qword_26B0C98A0);
      v30(v14, v4);
      sub_24337C1BC((uint64_t)v10, &qword_26B0C98A0);
      if ((v29 & 1) == 0) {
        return 0;
      }
      goto LABEL_9;
    }
    sub_24337C1BC((uint64_t)v17, &qword_26B0C98A0);
    sub_24337C1BC((uint64_t)v19, &qword_26B0C98A0);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v14, v4);
LABEL_7:
    sub_24337C1BC((uint64_t)v10, &qword_268D98EB8);
    return 0;
  }
  sub_24337C1BC((uint64_t)v17, &qword_26B0C98A0);
  sub_24337C1BC((uint64_t)v19, &qword_26B0C98A0);
  if (v26(v25, 1, v4) != 1) {
    goto LABEL_7;
  }
  sub_24337C1BC((uint64_t)v10, &qword_26B0C98A0);
LABEL_9:
  uint64_t v31 = *(int *)(v38 + 24);
  char v32 = (void *)((char *)v39 + v31);
  uint64_t v33 = *(void *)((char *)v39 + v31 + 8);
  char v34 = (void *)((char *)v40 + v31);
  uint64_t v35 = v34[1];
  if (v33)
  {
    if (v35 && (*v32 == *v34 && v33 == v35 || (sub_243959940() & 1) != 0)) {
      return 1;
    }
  }
  else if (!v35)
  {
    return 1;
  }
  return 0;
}

unint64_t sub_2437BB4F8()
{
  unint64_t result = qword_268D9FF00;
  if (!qword_268D9FF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FF00);
  }
  return result;
}

uint64_t sub_2437BB54C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RawOrderApplication();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t getEnumTagSinglePayload for RawOrderApplication(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2437BB5C4);
}

uint64_t sub_2437BB5C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    int v13 = v12 - 1;
    if (v13 < 0) {
      int v13 = -1;
    }
    return (v13 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for RawOrderApplication(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2437BB6B0);
}

uint64_t sub_2437BB6B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = a2;
  }
  return result;
}

void sub_2437BB778()
{
  sub_24347DD84();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unsigned char *storeEnumTagSinglePayload for RawOrderApplication.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2437BB8E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RawOrderApplication.CodingKeys()
{
  return &type metadata for RawOrderApplication.CodingKeys;
}

unint64_t sub_2437BB924()
{
  unint64_t result = qword_268D9FF20;
  if (!qword_268D9FF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FF20);
  }
  return result;
}

unint64_t sub_2437BB97C()
{
  unint64_t result = qword_268D9FF28;
  if (!qword_268D9FF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FF28);
  }
  return result;
}

unint64_t sub_2437BB9D4()
{
  unint64_t result = qword_268D9FF30;
  if (!qword_268D9FF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FF30);
  }
  return result;
}

FinanceKit::BankConnectWebServiceTermsAndConditionsRequest __swiftcall BankConnectWebServiceTermsAndConditionsRequest.init(ids:languageIds:)(Swift::OpaquePointer ids, Swift::OpaquePointer languageIds)
{
  v2->_rawValue = ids._rawValue;
  v2[1]._rawValue = languageIds._rawValue;
  result.languageIds = languageIds;
  result.ids = ids;
  return result;
}

void *BankConnectWebServiceTermsAndConditionsRequest.pathComponents.getter()
{
  return &unk_26F8AB1B0;
}

void BankConnectWebServiceTermsAndConditionsRequest.httpMethod.getter(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t BankConnectWebServiceTermsAndConditionsRequest.jsonBody.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t BankConnectWebServiceTermsAndConditionsRequest.makeJSONEncoder()()
{
  uint64_t v0 = sub_2439564D0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_243956520();
  swift_allocObject();
  uint64_t v4 = sub_243956510();
  if (qword_268D96AD8 != -1) {
    swift_once();
  }
  uint64_t v5 = __swift_project_value_buffer(v0, (uint64_t)qword_268D98E70);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  sub_2439564F0();
  return v4;
}

uint64_t sub_2437BBBAC@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_2437BBBE8()
{
  uint64_t v0 = sub_2439564D0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_243956520();
  swift_allocObject();
  uint64_t v4 = sub_243956510();
  if (qword_268D96AD8 != -1) {
    swift_once();
  }
  uint64_t v5 = __swift_project_value_buffer(v0, (uint64_t)qword_268D98E70);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  sub_2439564F0();
  return v4;
}

void *sub_2437BBD10()
{
  return &unk_26F8AB1B0;
}

void static BankConnectWebServiceTermsAndConditionsResponse.parse(data:urlResponse:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_243956420();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  self;
  uint64_t v9 = swift_dynamicCastObjCClass();
  if (v9)
  {
    uint64_t v10 = (void *)v9;
    uint64_t v22 = v3;
    id v11 = a3;
    id v12 = objc_msgSend(v10, sel_statusCode);
    if (v12 == (id)200)
    {
      sub_243956460();
      swift_allocObject();
      sub_243956450();
      if (qword_268D96AC8 != -1) {
        swift_once();
      }
      uint64_t v13 = __swift_project_value_buffer(v5, (uint64_t)qword_268D98E50);
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v13, v5);
      sub_243956430();
      sub_2437BC020();
      uint64_t v14 = v22;
      sub_243956440();
      if (v14)
      {
        swift_release();
        type metadata accessor for FinanceNetworkError();
        sub_243568A00();
        swift_allocError();
        *uint64_t v15 = v14;
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
      }
      else
      {

        swift_release();
      }
    }
    else
    {
      id v19 = v12;
      type metadata accessor for FinanceNetworkError();
      sub_243568A00();
      swift_allocError();
      *uint64_t v20 = v19;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
    }
  }
  else
  {
    type metadata accessor for FinanceNetworkError();
    sub_243568A00();
    swift_allocError();
    uint64_t v17 = v16;
    *uint64_t v16 = sub_24337C218(0, (unint64_t *)&unk_268D9B410);
    v17[4] = sub_24337C218(0, (unint64_t *)&unk_268D9F250);
    v17[1] = (uint64_t)a3;
    swift_storeEnumTagMultiPayload();
    id v18 = a3;
    swift_willThrow();
  }
}

unint64_t sub_2437BC020()
{
  unint64_t result = qword_268D9FF38;
  if (!qword_268D9FF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FF38);
  }
  return result;
}

ValueMetadata *type metadata accessor for BankConnectWebServiceTermsAndConditionsRequest()
{
  return &type metadata for BankConnectWebServiceTermsAndConditionsRequest;
}

ValueMetadata *type metadata accessor for BankConnectWebServiceTermsAndConditionsResponse()
{
  return &type metadata for BankConnectWebServiceTermsAndConditionsResponse;
}

void *sub_2437BC098(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v2 = (void *)(a1 + 32);
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)MEMORY[0x263F8EE78];
  do
  {
    uint64_t v5 = v2[3];
    uint64_t v6 = v2[4];
    __swift_project_boxed_opaque_existential_1(v2, v5);
    uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
    if (v8)
    {
      uint64_t v9 = v7;
      uint64_t v10 = v8;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v3 = sub_24377644C(0, v3[2] + 1, 1, v3);
      }
      unint64_t v12 = v3[2];
      unint64_t v11 = v3[3];
      if (v12 >= v11 >> 1) {
        uint64_t v3 = sub_24377644C((void *)(v11 > 1), v12 + 1, 1, v3);
      }
      v3[2] = v12 + 1;
      uint64_t v4 = &v3[2 * v12];
      v4[4] = v9;
      v4[5] = v10;
    }
    v2 += 5;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

void *sub_2437BC1C4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v2 = (void *)(a1 + 32);
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)MEMORY[0x263F8EE78];
  do
  {
    uint64_t v5 = v2[3];
    uint64_t v6 = v2[4];
    __swift_project_boxed_opaque_existential_1(v2, v5);
    uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 24))(v5, v6);
    if (v8)
    {
      uint64_t v9 = v7;
      uint64_t v10 = v8;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v3 = sub_24377644C(0, v3[2] + 1, 1, v3);
      }
      unint64_t v12 = v3[2];
      unint64_t v11 = v3[3];
      if (v12 >= v11 >> 1) {
        uint64_t v3 = sub_24377644C((void *)(v11 > 1), v12 + 1, 1, v3);
      }
      v3[2] = v12 + 1;
      uint64_t v4 = &v3[2 * v12];
      v4[4] = v9;
      v4[5] = v10;
    }
    v2 += 5;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t SoftwareApplication.init(storeIdentifier:softwareLibrary:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  return sub_2433A857C(a2, (uint64_t)(a3 + 1));
}

uint64_t SoftwareApplication.isInstalled()()
{
  *(void *)(v1 + 136) = v0;
  return MEMORY[0x270FA2498](sub_2437BC320, 0, 0);
}

uint64_t sub_2437BC320()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = *(void *)(v1 + 32);
  uint64_t v3 = *(void *)(v1 + 40);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 8), v2);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C9900);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_243960A20;
  uint64_t v5 = *(void **)v1;
  *(void *)(v4 + 32) = *(void *)v1;
  uint64_t v10 = v4;
  sub_243958670();
  v0[18] = v10;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 8) + **(int **)(v3 + 8));
  id v6 = v5;
  uint64_t v7 = (void *)swift_task_alloc();
  v0[19] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_2437BC484;
  return v9(v10, v2, v3);
}

uint64_t sub_2437BC484(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 160) = a1;
  *(void *)(v3 + 168) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_2437BC70C;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_2437BC5A0;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_2437BC5A0()
{
  uint64_t v1 = *(void *)(v0 + 160);
  if (!*(void *)(v1 + 16))
  {
    *(void *)(v0 + 88) = 0;
    *(_OWORD *)(v0 + 56) = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_24338E428(v1 + 32, v0 + 56);
  swift_bridgeObjectRelease();
  if (!*(void *)(v0 + 80))
  {
LABEL_7:
    sub_24337C1BC(v0 + 56, &qword_268D9F818);
    LOBYTE(v5) = 0;
    goto LABEL_8;
  }
  sub_2433A857C((long long *)(v0 + 56), v0 + 16);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();
  sub_24338E428(v0 + 16, v0 + 96);
  if (v5)
  {
    uint64_t v6 = *(void *)(v0 + 120);
    uint64_t v7 = *(void *)(v0 + 128);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 96), v6);
    LOBYTE(v5) = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7) ^ 1;
  }
  __swift_destroy_boxed_opaque_existential_0(v0 + 96);
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
LABEL_8:
  uint64_t v8 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v8(v5 & 1);
}

uint64_t sub_2437BC70C()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t SoftwareLibrary.applicationsFor(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = ManagedECommerceOrderContent.associatedApplications.getter();
  void v9[2] = a2;
  v9[3] = a3;
  uint64_t v10 = v3;
  uint64_t v7 = sub_24377319C((void (*)(_OWORD *__return_ptr, id *))sub_2437BC7F8, (uint64_t)v9, v6);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_2437BC7F8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  return SoftwareLibrary.application(forStoreIdentifier:)((uint64_t)objc_msgSend(*a1, sel_storeIdentifier), *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t SoftwareLibrary.application(forStoreIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  id v8 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithLongLong_, a1);
  a4[4] = a2;
  a4[5] = a3;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(a4 + 1);
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(boxed_opaque_existential_0, v4, a2);
  *a4 = v8;
  return result;
}

uint64_t SoftwareLibrary.bundleIdentifiersFor(storeIdentifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[14] = a3;
  v4[15] = v3;
  v4[12] = a1;
  v4[13] = a2;
  return MEMORY[0x270FA2498](sub_2437BC918, 0, 0);
}

uint64_t sub_2437BC918()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_243959450();
    uint64_t v4 = (uint64_t *)(v1 + 32);
    do
    {
      uint64_t v5 = *v4++;
      objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v5);
      sub_243959420();
      sub_243959460();
      sub_243959470();
      sub_243959430();
      --v2;
    }
    while (v2);
    uint64_t v3 = v11;
  }
  v0[16] = v3;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v0[14] + 8) + **(int **)(v0[14] + 8));
  unint64_t v6 = (void *)swift_task_alloc();
  v0[17] = v6;
  *unint64_t v6 = v0;
  v6[1] = sub_2437BCAA8;
  uint64_t v7 = v0[14];
  uint64_t v8 = v0[13];
  return v10(v3, v8, v7);
}

uint64_t sub_2437BCAA8(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 144) = a1;
  *(void *)(v3 + 152) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_2437BCE20;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_2437BCBC4;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

void sub_2437BCBC4()
{
  uint64_t v23 = v0;
  uint64_t v1 = v0[18];
  uint64_t v2 = MEMORY[0x263F8EE78];
  uint64_t v22 = MEMORY[0x263F8EE78];
  uint64_t v3 = *(void *)(v1 + 16);
  if (v3)
  {
    unint64_t v4 = 0;
    uint64_t v5 = (long long *)(v0 + 2);
    uint64_t v20 = v1;
    uint64_t v21 = (uint64_t)(v0 + 7);
    uint64_t v6 = v1 + 32;
    uint64_t v19 = *(void *)(v1 + 16);
    while (v4 < *(void *)(v1 + 16))
    {
      sub_24338E428(v6, (uint64_t)v5);
      uint64_t v7 = v0[5];
      uint64_t v8 = v0[6];
      __swift_project_boxed_opaque_existential_1(v5, v7);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8))
      {
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
      }
      else
      {
        sub_2433A857C(v5, v21);
        uint64_t v9 = v22;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2434CD44C(0, *(void *)(v9 + 16) + 1, 1);
          uint64_t v9 = v22;
        }
        unint64_t v11 = *(void *)(v9 + 16);
        unint64_t v10 = *(void *)(v9 + 24);
        if (v11 >= v10 >> 1) {
          sub_2434CD44C(v10 > 1, v11 + 1, 1);
        }
        uint64_t v12 = v0[10];
        uint64_t v13 = v0[11];
        uint64_t v14 = __swift_mutable_project_boxed_opaque_existential_1(v21, v12);
        uint64_t v15 = *(void *)(v12 - 8);
        uint64_t v16 = swift_task_alloc();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v16, v14, v12);
        sub_2437BE274(v11, v16, &v22, v12, v13);
        __swift_destroy_boxed_opaque_existential_0(v21);
        swift_task_dealloc();
        uint64_t v3 = v19;
        uint64_t v1 = v20;
        uint64_t v5 = (long long *)(v0 + 2);
      }
      ++v4;
      v6 += 40;
      if (v3 == v4)
      {
        uint64_t v2 = v22;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v17 = sub_2437BC098(v2);
    swift_release();
    id v18 = (void (*)(void *))v0[1];
    v18(v17);
  }
}

uint64_t sub_2437BCE20()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t SoftwareLibrary.storeIdentifiersFor(bundleIdentifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 16) + **(int **)(a3 + 16));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 96) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_2437BCF88;
  return v9(a1, a2, a3);
}

uint64_t sub_2437BCF88(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[13] = a1;
  v3[14] = v1;
  swift_task_dealloc();
  if (v1)
  {
    unint64_t v4 = (uint64_t (*)(void))v3[1];
    return v4();
  }
  else
  {
    return MEMORY[0x270FA2498](sub_2437BD0BC, 0, 0);
  }
}

void sub_2437BD0BC()
{
  uint64_t v55 = v0;
  uint64_t v1 = v0[13];
  uint64_t v2 = MEMORY[0x263F8EE78];
  v54[0] = MEMORY[0x263F8EE78];
  uint64_t v3 = *(void *)(v1 + 16);
  if (!v3)
  {
LABEL_13:
    uint64_t v17 = v0[14];
    swift_bridgeObjectRelease();
    id v18 = sub_2437BC1C4(v2);
    swift_release();
    uint64_t v19 = v18[2];
    if (!v19)
    {
      swift_bridgeObjectRelease();
      uint64_t v22 = (void *)MEMORY[0x263F8EE78];
LABEL_80:
      uint64_t v49 = (void (*)(void *))v0[1];
      v49(v22);
      return;
    }
    uint64_t v53 = v0;
    uint64_t v20 = v18 + 4;
    swift_bridgeObjectRetain();
    uint64_t v21 = 0;
    uint64_t v22 = (void *)MEMORY[0x263F8EE78];
    while (1)
    {
      uint64_t v23 = &v20[2 * v21];
      uint64_t v24 = *v23;
      unint64_t v25 = v23[1];
      uint64_t v26 = HIBYTE(v25) & 0xF;
      uint64_t v27 = v24 & 0xFFFFFFFFFFFFLL;
      if ((v25 & 0x2000000000000000) != 0) {
        uint64_t v28 = HIBYTE(v25) & 0xF;
      }
      else {
        uint64_t v28 = v24 & 0xFFFFFFFFFFFFLL;
      }
      if (!v28) {
        goto LABEL_16;
      }
      if ((v25 & 0x1000000000000000) == 0) {
        break;
      }
      swift_bridgeObjectRetain();
      uint64_t v32 = (uint64_t)sub_24375D00C(v24, v25, 10);
      char v48 = v47;
      swift_bridgeObjectRelease();
      if ((v48 & 1) == 0) {
        goto LABEL_63;
      }
LABEL_16:
      if (++v21 == v19)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v0 = v53;
        goto LABEL_80;
      }
    }
    if ((v25 & 0x2000000000000000) == 0)
    {
      if ((v24 & 0x1000000000000000) != 0) {
        char v29 = (unsigned __int8 *)((v25 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        char v29 = (unsigned __int8 *)sub_243959400();
      }
      uint64_t v30 = sub_24375CFDC(v29, v27, 10);
      if (v17) {
        return;
      }
      if (v31) {
        goto LABEL_16;
      }
      uint64_t v32 = (uint64_t)v30;
LABEL_63:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v22 = sub_243777A74(0, v22[2] + 1, 1, v22);
      }
      unint64_t v43 = v22[2];
      unint64_t v42 = v22[3];
      if (v43 >= v42 >> 1) {
        uint64_t v22 = sub_243777A74((void *)(v42 > 1), v43 + 1, 1, v22);
      }
      void v22[2] = v43 + 1;
      v22[v43 + 4] = v32;
      goto LABEL_16;
    }
    v54[0] = v24;
    v54[1] = v25 & 0xFFFFFFFFFFFFFFLL;
    if (v24 == 43)
    {
      if (!v26) {
        goto LABEL_86;
      }
      if (v26 == 1) {
        goto LABEL_77;
      }
      if ((BYTE1(v24) - 48) > 9u) {
        goto LABEL_49;
      }
      uint64_t v32 = (BYTE1(v24) - 48);
      if (v26 != 2)
      {
        if ((BYTE2(v24) - 48) > 9u) {
          goto LABEL_49;
        }
        uint64_t v32 = 10 * (BYTE1(v24) - 48) + (BYTE2(v24) - 48);
        uint64_t v33 = v26 - 3;
        if (v26 != 3)
        {
          char v34 = (unsigned __int8 *)v54 + 3;
          while (1)
          {
            unsigned int v35 = *v34 - 48;
            if (v35 > 9) {
              goto LABEL_16;
            }
            uint64_t v36 = 10 * v32;
            if ((unsigned __int128)(v32 * (__int128)10) >> 64 != (10 * v32) >> 63) {
              goto LABEL_16;
            }
            uint64_t v32 = v36 + v35;
            if (__OFADD__(v36, v35)) {
              goto LABEL_16;
            }
            LOBYTE(v26) = 0;
            ++v34;
            if (!--v33) {
              goto LABEL_62;
            }
          }
        }
      }
    }
    else
    {
      if (v24 == 45)
      {
        if (!v26) {
          goto LABEL_85;
        }
        if (v26 != 1)
        {
          if ((BYTE1(v24) - 48) <= 9u)
          {
            if (v26 == 2)
            {
              LOBYTE(v26) = 0;
              uint64_t v32 = -(uint64_t)(BYTE1(v24) - 48);
              goto LABEL_62;
            }
            if ((BYTE2(v24) - 48) <= 9u)
            {
              uint64_t v32 = -10 * (BYTE1(v24) - 48) - (BYTE2(v24) - 48);
              uint64_t v41 = v26 - 3;
              if (v26 != 3)
              {
                uint64_t v44 = (unsigned __int8 *)v54 + 3;
                while (1)
                {
                  unsigned int v45 = *v44 - 48;
                  if (v45 > 9) {
                    goto LABEL_16;
                  }
                  uint64_t v46 = 10 * v32;
                  if ((unsigned __int128)(v32 * (__int128)10) >> 64 != (10 * v32) >> 63) {
                    goto LABEL_16;
                  }
                  uint64_t v32 = v46 - v45;
                  if (__OFSUB__(v46, v45)) {
                    goto LABEL_16;
                  }
                  LOBYTE(v26) = 0;
                  ++v44;
                  if (!--v41) {
                    goto LABEL_62;
                  }
                }
              }
              goto LABEL_61;
            }
          }
LABEL_49:
          uint64_t v32 = 0;
          LOBYTE(v26) = 1;
          goto LABEL_62;
        }
LABEL_77:
        uint64_t v32 = 0;
LABEL_62:
        if ((v26 & 1) == 0) {
          goto LABEL_63;
        }
        goto LABEL_16;
      }
      if (!v26 || (v24 - 48) > 9u) {
        goto LABEL_49;
      }
      uint64_t v32 = (v24 - 48);
      if (v26 != 1)
      {
        if ((BYTE1(v24) - 48) > 9u) {
          goto LABEL_49;
        }
        uint64_t v32 = 10 * (v24 - 48) + (BYTE1(v24) - 48);
        uint64_t v37 = v26 - 2;
        if (v26 != 2)
        {
          uint64_t v38 = (unsigned __int8 *)v54 + 2;
          while (1)
          {
            unsigned int v39 = *v38 - 48;
            if (v39 > 9) {
              goto LABEL_16;
            }
            uint64_t v40 = 10 * v32;
            if ((unsigned __int128)(v32 * (__int128)10) >> 64 != (10 * v32) >> 63) {
              goto LABEL_16;
            }
            uint64_t v32 = v40 + v39;
            if (__OFADD__(v40, v39)) {
              goto LABEL_16;
            }
            LOBYTE(v26) = 0;
            ++v38;
            if (!--v37) {
              goto LABEL_62;
            }
          }
        }
      }
    }
LABEL_61:
    LOBYTE(v26) = 0;
    goto LABEL_62;
  }
  unint64_t v4 = 0;
  uint64_t v5 = (long long *)(v0 + 2);
  uint64_t v51 = v1;
  uint64_t v52 = (uint64_t)(v0 + 7);
  uint64_t v6 = v1 + 32;
  uint64_t v50 = *(void *)(v1 + 16);
  while (v4 < *(void *)(v1 + 16))
  {
    sub_24338E428(v6, (uint64_t)v5);
    uint64_t v7 = v0[5];
    uint64_t v8 = v0[6];
    __swift_project_boxed_opaque_existential_1(v5, v7);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8))
    {
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
    }
    else
    {
      sub_2433A857C(v5, v52);
      uint64_t v9 = v54[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2434CD44C(0, *(void *)(v9 + 16) + 1, 1);
        uint64_t v9 = v54[0];
      }
      unint64_t v11 = *(void *)(v9 + 16);
      unint64_t v10 = *(void *)(v9 + 24);
      if (v11 >= v10 >> 1) {
        sub_2434CD44C(v10 > 1, v11 + 1, 1);
      }
      uint64_t v12 = v0[10];
      uint64_t v13 = v0[11];
      uint64_t v14 = __swift_mutable_project_boxed_opaque_existential_1(v52, v12);
      uint64_t v15 = *(void *)(v12 - 8);
      uint64_t v16 = swift_task_alloc();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v16, v14, v12);
      sub_2437BE274(v11, v16, v54, v12, v13);
      __swift_destroy_boxed_opaque_existential_0(v52);
      swift_task_dealloc();
      uint64_t v3 = v50;
      uint64_t v1 = v51;
      uint64_t v5 = (long long *)(v0 + 2);
    }
    ++v4;
    v6 += 40;
    if (v3 == v4)
    {
      uint64_t v2 = v54[0];
      goto LABEL_13;
    }
  }
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
}

uint64_t StoreSoftwareLibrary.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v0 + 112) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F7B330]), sel_init);
  return v0;
}

uint64_t StoreSoftwareLibrary.init()()
{
  swift_defaultActor_initialize();
  *(void *)(v0 + 112) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F7B330]), sel_init);
  return v0;
}

uint64_t StoreSoftwareLibrary.items(forStoreIdentifiers:)(uint64_t a1)
{
  *(void *)(v2 + 160) = a1;
  *(void *)(v2 + 168) = v1;
  return MEMORY[0x270FA2498](sub_2437BD770, v1, 0);
}

uint64_t sub_2437BD770()
{
  uint64_t v1 = *(void **)(v0[21] + 112);
  sub_243400CF4(v0[20]);
  uint64_t v2 = sub_243958630();
  v0[22] = v2;
  swift_bridgeObjectRelease();
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_2437BD8A8;
  uint64_t v3 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_2437BDC10;
  v0[13] = &block_descriptor_2;
  v0[14] = v3;
  objc_msgSend(v1, sel_getLibraryItemsForITunesStoreItemIdentifiers_completionBlock_, v2, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_2437BD8A8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 184) = v2;
  uint64_t v3 = *(void *)(v1 + 168);
  if (v2) {
    unint64_t v4 = sub_2437BDBA0;
  }
  else {
    unint64_t v4 = sub_2437BD9C8;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_2437BD9C8()
{
  uint64_t v1 = *(void *)(v0 + 120);

  if (!v1) {
    goto LABEL_11;
  }
  int64_t v2 = *(void *)(v1 + 16);
  if (!v2)
  {
    swift_bridgeObjectRelease();
LABEL_11:
    uint64_t v4 = MEMORY[0x263F8EE78];
    goto LABEL_12;
  }
  uint64_t v10 = MEMORY[0x263F8EE78];
  sub_2434CD44C(0, v2, 0);
  uint64_t v3 = v1 + 32;
  uint64_t v4 = v10;
  do
  {
    sub_24337BE00(v3, v0 + 80);
    sub_24337BE00(v0 + 80, v0 + 120);
    sub_2437BE30C();
    swift_dynamicCast();
    uint64_t v5 = *(void *)(v0 + 152);
    __swift_destroy_boxed_opaque_existential_0(v0 + 80);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_2434CD44C(0, *(void *)(v4 + 16) + 1, 1);
      uint64_t v4 = v10;
    }
    unint64_t v7 = *(void *)(v4 + 16);
    unint64_t v6 = *(void *)(v4 + 24);
    if (v7 >= v6 >> 1)
    {
      sub_2434CD44C(v6 > 1, v7 + 1, 1);
      uint64_t v4 = v10;
    }
    *(void *)(v0 + 104) = &type metadata for StoreSoftwareLibraryItem;
    *(void *)(v0 + 112) = &off_26F8C64B8;
    *(void *)(v0 + 80) = v5;
    *(void *)(v4 + 16) = v7 + 1;
    sub_2433A857C((long long *)(v0 + 80), v4 + 40 * v7 + 32);
    v3 += 32;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
LABEL_12:
  uint64_t v8 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v8(v4);
}

uint64_t sub_2437BDBA0()
{
  uint64_t v1 = *(void **)(v0 + 176);
  swift_willThrow();

  int64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2437BDC10(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C7A50);
    swift_allocError();
    void *v5 = a3;
    id v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    if (a2) {
      uint64_t v8 = sub_243958650();
    }
    else {
      uint64_t v8 = 0;
    }
    uint64_t v9 = v8;
    sub_24337BF80((uint64_t)&v9, *(void *)(*(void *)(v3 + 64) + 40), &qword_268D9FF90);
    return swift_continuation_throwingResume();
  }
}

uint64_t StoreSoftwareLibrary.items(forBundleIdentifiers:)(uint64_t a1)
{
  *(void *)(v2 + 160) = a1;
  *(void *)(v2 + 168) = v1;
  return MEMORY[0x270FA2498](sub_2437BDD18, v1, 0);
}

uint64_t sub_2437BDD18()
{
  uint64_t v1 = *(void **)(v0[21] + 112);
  sub_2434006D4(v0[20]);
  uint64_t v2 = sub_243958630();
  v0[22] = v2;
  swift_bridgeObjectRelease();
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_2437BDE50;
  uint64_t v3 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_2437BDC10;
  v0[13] = &block_descriptor_8;
  v0[14] = v3;
  objc_msgSend(v1, sel_getLibraryItemForBundleIdentifiers_completionBlock_, v2, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_2437BDE50()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 184) = v2;
  uint64_t v3 = *(void *)(v1 + 168);
  if (v2) {
    uint64_t v4 = sub_2437BE768;
  }
  else {
    uint64_t v4 = sub_2437BE764;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t StoreSoftwareLibrary.deinit()
{
  swift_defaultActor_destroy();
  return v0;
}

uint64_t StoreSoftwareLibrary.__deallocating_deinit()
{
  swift_defaultActor_destroy();

  return MEMORY[0x270FA2418](v0);
}

uint64_t StoreSoftwareLibrary.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_2437BDFDC(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_243373554;
  v5[20] = a1;
  v5[21] = v4;
  return MEMORY[0x270FA2498](sub_2437BD770, v4, 0);
}

uint64_t sub_2437BE08C(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_2435C57D4;
  v5[20] = a1;
  v5[21] = v4;
  return MEMORY[0x270FA2498](sub_2437BDD18, v4, 0);
}

uint64_t sub_2437BE13C(void *a1, void *a2)
{
  if (objc_msgSend(a1, sel_valueForProperty_, *a2))
  {
    sub_243959140();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v4, 0, sizeof(v4));
  }
  sub_24337BF80((uint64_t)v4, (uint64_t)&v5, &qword_26B0C5CA0);
  if (v6)
  {
    sub_24337BEE4(&v5, &v7);
    swift_dynamicCast();
    return v3;
  }
  else
  {
    sub_24337C1BC((uint64_t)&v5, &qword_26B0C5CA0);
    return 0;
  }
}

id sub_2437BE208()
{
  return objc_msgSend(*v0, sel_isPlaceholder);
}

uint64_t sub_2437BE22C()
{
  return sub_2437BE13C(*v0, MEMORY[0x263F7BC80]);
}

uint64_t sub_2437BE250()
{
  return sub_2437BE13C(*v0, MEMORY[0x263F7BCA0]);
}

uint64_t sub_2437BE274(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_0, a2, a4);
  uint64_t v10 = *a3;
  *(void *)(v10 + 16) = a1 + 1;
  return sub_2433A857C(&v12, v10 + 40 * a1 + 32);
}

unint64_t sub_2437BE30C()
{
  unint64_t result = qword_268D9FF60;
  if (!qword_268D9FF60)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268D9FF60);
  }
  return result;
}

uint64_t destroy for SoftwareApplication(id *a1)
{
  uint64_t v1 = (uint64_t)(a1 + 1);

  return __swift_destroy_boxed_opaque_existential_0(v1);
}

uint64_t initializeWithCopy for SoftwareApplication(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = a1 + 8;
  uint64_t v5 = a2 + 8;
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  id v9 = v3;
  v8(v4, v5, v7);
  return a1;
}

void **assignWithCopy for SoftwareApplication(void **a1, void **a2)
{
  uint64_t v4 = (uint64_t *)(a2 + 1);
  uint64_t v3 = *a2;
  uint64_t v5 = *a1;
  *a1 = *a2;
  long long v6 = (uint64_t *)(a1 + 1);
  id v7 = v3;

  __swift_assign_boxed_opaque_existential_1(v6, v4);
  return a1;
}

uint64_t assignWithTake for SoftwareApplication(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  __swift_destroy_boxed_opaque_existential_0(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for SoftwareApplication()
{
  return &type metadata for SoftwareApplication;
}

uint64_t dispatch thunk of SoftwareLibrary.items(forStoreIdentifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 8) + **(int **)(a3 + 8));
  id v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *id v7 = v3;
  v7[1] = sub_24340BEA8;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of SoftwareLibrary.items(forBundleIdentifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 16) + **(int **)(a3 + 16));
  id v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *id v7 = v3;
  v7[1] = sub_2437BE76C;
  return v9(a1, a2, a3);
}

uint64_t type metadata accessor for StoreSoftwareLibrary()
{
  return self;
}

uint64_t method lookup function for StoreSoftwareLibrary(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for StoreSoftwareLibrary);
}

uint64_t dispatch thunk of StoreSoftwareLibrary.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of SoftwareLibraryItem.isPlaceholder.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SoftwareLibraryItem.bundleIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of SoftwareLibraryItem.storeIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

ValueMetadata *type metadata accessor for StoreSoftwareLibraryItem()
{
  return &type metadata for StoreSoftwareLibraryItem;
}

void __swiftcall RawOrderBarcode.init(altText:format:message:messageEncoding:)(FinanceKit::RawOrderBarcode *__return_ptr retstr, Swift::String_optional altText, FinanceKit::RawBarcodeFormat format, Swift::String message, Swift::String messageEncoding)
{
  FinanceKit::RawBarcodeFormat v5 = *(unsigned char *)format;
  retstr->altText = altText;
  retstr->format = v5;
  retstr->message = message;
  retstr->messageEncoding = messageEncoding;
}

FinanceKit::RawBarcodeFormat_optional __swiftcall RawBarcodeFormat.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_2439595E0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

void *static RawBarcodeFormat.allCases.getter()
{
  return &unk_26F8AE578;
}

uint64_t RawBarcodeFormat.rawValue.getter()
{
  uint64_t result = 29297;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x373134666470;
      break;
    case 2:
      uint64_t result = 0x6365747A61;
      break;
    case 3:
      uint64_t result = 0x38323165646F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2437BE86C(char *a1, char *a2)
{
  return sub_24347050C(*a1, *a2);
}

uint64_t sub_2437BE878()
{
  return sub_243959B40();
}

uint64_t sub_2437BE940()
{
  sub_2439581F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2437BE9F0()
{
  return sub_243959B40();
}

FinanceKit::RawBarcodeFormat_optional sub_2437BEAB4(Swift::String *a1)
{
  return RawBarcodeFormat.init(rawValue:)(*a1);
}

void sub_2437BEAC0(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE200000000000000;
  uint64_t v3 = 29297;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x373134666470;
      goto LABEL_3;
    case 2:
      *a1 = 0x6365747A61;
      a1[1] = 0xE500000000000000;
      break;
    case 3:
      *a1 = 0x38323165646F63;
      a1[1] = 0xE700000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_2437BEB48()
{
  return sub_2439585D0();
}

uint64_t sub_2437BEBA8()
{
  return sub_243958580();
}

void sub_2437BEBF8(void *a1@<X8>)
{
  *a1 = &unk_26F8AE5A0;
}

uint64_t RawOrderBarcode.altText.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawOrderBarcode.altText.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*RawOrderBarcode.altText.modify())()
{
  return nullsub_1;
}

void RawOrderBarcode.format.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

unsigned char *RawOrderBarcode.format.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 16) = *result;
  return result;
}

uint64_t (*RawOrderBarcode.format.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderBarcode.message.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawOrderBarcode.message.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*RawOrderBarcode.message.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderBarcode.messageEncoding.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawOrderBarcode.messageEncoding.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

uint64_t (*RawOrderBarcode.messageEncoding.modify())()
{
  return nullsub_1;
}

uint64_t sub_2437BEDDC()
{
  uint64_t result = 0x74786554746C61;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x74616D726F66;
      break;
    case 2:
      uint64_t result = 0x6567617373656DLL;
      break;
    case 3:
      uint64_t result = 0x456567617373656DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2437BEE70(uint64_t a1)
{
  unint64_t v2 = sub_2437BF54C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2437BEEAC(uint64_t a1)
{
  unint64_t v2 = sub_2437BF54C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t RawOrderBarcode.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9FF98);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  long long v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v12 = *(unsigned __int8 *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  _OWORD v11[2] = *(void *)(v1 + 32);
  void v11[3] = v7;
  uint64_t v8 = *(void *)(v1 + 40);
  v11[0] = *(void *)(v1 + 48);
  v11[1] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2437BF54C();
  sub_243959BD0();
  char v18 = 0;
  uint64_t v9 = v13;
  sub_243959790();
  if (!v9)
  {
    char v17 = v12;
    char v16 = 1;
    sub_2437BF5A0();
    sub_243959860();
    char v15 = 2;
    sub_243959810();
    char v14 = 3;
    sub_243959810();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t RawOrderBarcode.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268D9FFB0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2437BF54C();
  sub_243959BA0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    char v28 = 0;
    uint64_t v10 = sub_243959620();
    uint64_t v12 = v11;
    char v26 = 1;
    sub_2437BF5F4();
    swift_bridgeObjectRetain();
    sub_2439596F0();
    uint64_t v23 = v10;
    int v22 = v27;
    char v25 = 2;
    uint64_t v13 = sub_2439596A0();
    uint64_t v15 = v14;
    uint64_t v21 = v13;
    char v24 = 3;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_2439596A0();
    uint64_t v18 = v17;
    uint64_t v19 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v20 = v16;
    v19(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)a2 = v23;
    *(void *)(a2 + 8) = v12;
    *(unsigned char *)(a2 + 16) = v22;
    *(void *)(a2 + 24) = v21;
    *(void *)(a2 + 32) = v15;
    *(void *)(a2 + 40) = v20;
    *(void *)(a2 + 48) = v18;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_2437BF3E0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return RawOrderBarcode.init(from:)(a1, a2);
}

uint64_t sub_2437BF3F8(void *a1)
{
  return RawOrderBarcode.encode(to:)(a1);
}

uint64_t _s10FinanceKit15RawOrderBarcodeV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  char v4 = *(unsigned char *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(a2 + 8);
  char v10 = *(unsigned char *)(a2 + 16);
  uint64_t v11 = *(void *)(a2 + 24);
  uint64_t v12 = *(void *)(a2 + 32);
  uint64_t v13 = *(void *)(a2 + 40);
  uint64_t v14 = *(void *)(a2 + 48);
  if (!v3)
  {
    if (!v9) {
      goto LABEL_8;
    }
    return 0;
  }
  if (!v9) {
    return 0;
  }
  if (*(void *)a1 != *(void *)a2 || v3 != v9)
  {
    char v15 = sub_243959940();
    uint64_t result = 0;
    if ((v15 & 1) == 0) {
      return result;
    }
  }
LABEL_8:
  if ((sub_24347050C(v4, v10) & 1) == 0) {
    return 0;
  }
  if (v5 == v11 && v6 == v12 || (v17 = sub_243959940(), uint64_t result = 0, (v17 & 1) != 0))
  {
    if (v7 == v13 && v8 == v14)
    {
      return 1;
    }
    else
    {
      return sub_243959940();
    }
  }
  return result;
}

unint64_t sub_2437BF54C()
{
  unint64_t result = qword_268D9FFA0;
  if (!qword_268D9FFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FFA0);
  }
  return result;
}

unint64_t sub_2437BF5A0()
{
  unint64_t result = qword_268D9FFA8;
  if (!qword_268D9FFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FFA8);
  }
  return result;
}

unint64_t sub_2437BF5F4()
{
  unint64_t result = qword_268D9FFB8;
  if (!qword_268D9FFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FFB8);
  }
  return result;
}

unint64_t sub_2437BF64C()
{
  unint64_t result = qword_268D9FFC0;
  if (!qword_268D9FFC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FFC0);
  }
  return result;
}

unint64_t sub_2437BF6A4()
{
  unint64_t result = qword_268D9FFC8;
  if (!qword_268D9FFC8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268D9FFD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FFC8);
  }
  return result;
}

ValueMetadata *type metadata accessor for RawBarcodeFormat()
{
  return &type metadata for RawBarcodeFormat;
}

ValueMetadata *type metadata accessor for RawOrderBarcode()
{
  return &type metadata for RawOrderBarcode;
}

unsigned char *_s10FinanceKit16RawBarcodeFormatOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2437BF7F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RawOrderBarcode.CodingKeys()
{
  return &type metadata for RawOrderBarcode.CodingKeys;
}

unint64_t sub_2437BF82C()
{
  unint64_t result = qword_268D9FFD8;
  if (!qword_268D9FFD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FFD8);
  }
  return result;
}

unint64_t sub_2437BF884()
{
  unint64_t result = qword_268D9FFE0;
  if (!qword_268D9FFE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FFE0);
  }
  return result;
}

unint64_t sub_2437BF8DC()
{
  unint64_t result = qword_268D9FFE8;
  if (!qword_268D9FFE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FFE8);
  }
  return result;
}

unint64_t sub_2437BF930()
{
  unint64_t result = qword_268D9FFF0;
  if (!qword_268D9FFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FFF0);
  }
  return result;
}

uint64_t MapsWalletCategory.init(rawValue:)@<X0>(uint64_t result@<X0>, _WORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t MapsWalletCategory.rawValue.getter()
{
  return *v0;
}

uint64_t sub_2437BF994()
{
  return sub_2439585F0();
}

uint64_t sub_2437BF9F4()
{
  return sub_2439585A0();
}

ValueMetadata *type metadata accessor for MapsWalletCategory()
{
  return &type metadata for MapsWalletCategory;
}

uint64_t dispatch thunk of MapsItem.muid.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of MapsItem.resultProviderIdentifier.getter(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = (*(uint64_t (**)(void))(a2 + 16))();
  return v2 | ((HIDWORD(v2) & 1) << 32);
}

uint64_t dispatch thunk of MapsItem.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of MapsItem.phoneNumber.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of MapsItem.url.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of MapsItem.heroImageURL.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of MapsItem.heroImageAttributionName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of MapsItem.walletCategory.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of MapsItem.mapsCategoryIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of MapsItem.encodedStylingInfo.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of MapsItem.businessChatURL.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of MapsItem.lastProcessedDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

unint64_t sub_2437BFB6C()
{
  unint64_t result = qword_268D9FFF8;
  if (!qword_268D9FFF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D9FFF8);
  }
  return result;
}

uint64_t sub_2437BFBC0(int *a1)
{
  unint64_t v2 = *v1;
  uint64_t v3 = (uint64_t)v1 + a1[5];
  unsigned int v4 = *(uint64_t **)((char *)v1 + a1[6]);
  char v5 = *((unsigned char *)v1 + a1[8]);
  uint64_t v6 = *__swift_project_boxed_opaque_existential_1((uint64_t **)((char *)v1 + a1[7]), *(uint64_t *)((char *)v1 + a1[7] + 24));
  id v7 = v4;
  uint64_t v8 = sub_2437C0954(v3, v4, v5, v6, v2);

  return v8;
}

void FinanceStore.accountBalanceHistory(forAccountID:since:isMonitoring:)(uint64_t a1@<X0>, void **a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = *a2;
  static DeviceInfo.deviceType.getter(&v17);
  if (v17)
  {
    __break(1u);
  }
  else
  {
    uint64_t v9 = *(void *)(v4 + 16);
    char v10 = (int *)_s37AccountBalanceHistoryIteratorProviderVMa();
    a4[3] = (uint64_t)v10;
    a4[4] = sub_2437C090C(&qword_268DA0000, (void (*)(uint64_t))_s37AccountBalanceHistoryIteratorProviderVMa);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(a4);
    uint64_t v12 = (char *)boxed_opaque_existential_0 + v10[5];
    uint64_t v13 = sub_243957490();
    uint64_t v14 = *(void *)(v13 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v12, a1, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
    char v15 = (uint64_t *)((char *)boxed_opaque_existential_0 + v10[7]);
    v15[3] = type metadata accessor for FinanceStore();
    _OWORD v15[4] = &off_26F8C2700;
    *char v15 = v4;
    uint64_t *boxed_opaque_existential_0 = v9;
    *(uint64_t *)((char *)boxed_opaque_existential_0 + v10[6]) = (uint64_t)v8;
    *((unsigned char *)boxed_opaque_existential_0 + v10[8]) = a3 & 1;
    id v16 = v8;
    swift_retain();
    swift_retain();
  }
}

uint64_t _s37AccountBalanceHistoryIteratorProviderVMa()
{
  uint64_t result = qword_268DA0028;
  if (!qword_268DA0028) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2437BFE24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_2437BFE48, 0, 0);
}

uint64_t sub_2437BFE48()
{
  id v7 = v0;
  v6[0] = 2;
  if (FinanceStore.isDataRestricted(for:)(v6))
  {
    sub_24337C0AC();
    swift_allocError();
    unsigned char *v1 = 2;
    swift_willThrow();
    unint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    uint64_t v4 = (void *)swift_task_alloc();
    v0[5] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_24340A290;
    uint64_t v5 = v0[4];
    return sub_2435083D0(v5);
  }
}

uint64_t FinanceStore.accountBalances(query:)(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return MEMORY[0x270FA2498](sub_2437BFF84, 0, 0);
}

void sub_2437BFF84()
{
  uint64_t v5 = v0;
  static DeviceInfo.deviceType.getter(&v4);
  if (v4)
  {
    __break(1u);
  }
  else
  {
    uint64_t v1 = (int8x16_t *)swift_task_alloc();
    *(void *)(v0 + 40) = v1;
    v1[1] = vextq_s8(*(int8x16_t *)(v0 + 24), *(int8x16_t *)(v0 + 24), 8uLL);
    uint64_t v3 = (void (*)(int *))((char *)&dword_268D98588 + dword_268D98588);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 48) = v2;
    void *v2 = v0;
    v2[1] = sub_2437C006C;
    v3((int *)&unk_268DA0018);
  }
}

uint64_t sub_2437C006C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 56) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x270FA2498](sub_2437C01C4, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t sub_2437C01C4()
{
  uint64_t v1 = *(void **)(v0 + 56);
  swift_task_dealloc();
  *(void *)(v0 + 16) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C7A50);
  if ((swift_dynamicCast() & 1) != 0 && *(unsigned char *)(v0 + 64) == 4) {
    return sub_243959540();
  }

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_2437C02E4(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_24337AF78;
  *(_OWORD *)(v4 + 24) = v5;
  *(void *)(v4 + 16) = a1;
  return MEMORY[0x270FA2498](sub_2437BFE48, 0, 0);
}

void FinanceStore.accountBalanceHistory(since:isMonitoring:)(void **a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = *a1;
  static DeviceInfo.deviceType.getter(&v14);
  if (v14)
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = *(void *)(v3 + 16);
    uint64_t v8 = (int *)_s37AccountBalanceHistoryIteratorProviderVMa();
    a3[3] = (uint64_t)v8;
    a3[4] = sub_2437C090C(&qword_268DA0000, (void (*)(uint64_t))_s37AccountBalanceHistoryIteratorProviderVMa);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(a3);
    char v10 = (char *)boxed_opaque_existential_0 + v8[5];
    uint64_t v11 = sub_243957490();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
    uint64_t v12 = (uint64_t *)((char *)boxed_opaque_existential_0 + v8[7]);
    v12[3] = type metadata accessor for FinanceStore();
    uint64_t v12[4] = &off_26F8C2700;
    *uint64_t v12 = v3;
    uint64_t *boxed_opaque_existential_0 = v7;
    *(uint64_t *)((char *)boxed_opaque_existential_0 + v8[6]) = (uint64_t)v6;
    *((unsigned char *)boxed_opaque_existential_0 + v8[8]) = a2 & 1;
    id v13 = v6;
    swift_retain();
    swift_retain();
  }
}

uint64_t FinanceStore.privateAccountBalances(query:)(uint64_t *a1)
{
  uint64_t v3 = *a1;
  *(void *)(v2 + 64) = v1;
  *(void *)(v2 + 72) = v3;
  *(_OWORD *)(v2 + 80) = *(_OWORD *)(a1 + 1);
  *(unsigned char *)(v2 + 57) = *((unsigned char *)a1 + 24);
  *(void *)(v2 + 96) = a1[4];
  *(unsigned char *)(v2 + 58) = *((unsigned char *)a1 + 40);
  return MEMORY[0x270FA2498](sub_2437C0530, 0, 0);
}

void sub_2437C0530()
{
  uint64_t v9 = v0;
  static DeviceInfo.deviceType.getter(&v7);
  if (v7)
  {
    __break(1u);
  }
  else
  {
    v8[0] = 2;
    if (FinanceStore.isDataRestricted(for:)(v8))
    {
      sub_24337C0AC();
      swift_allocError();
      unsigned char *v1 = 2;
      swift_willThrow();
      uint64_t v2 = *(void (**)(void))(v0 + 8);
      v2();
    }
    else
    {
      char v3 = *(unsigned char *)(v0 + 58);
      uint64_t v4 = *(void *)(v0 + 96);
      char v5 = *(unsigned char *)(v0 + 57);
      *(void *)(v0 + 16) = *(void *)(v0 + 72);
      *(_OWORD *)(v0 + 24) = *(_OWORD *)(v0 + 80);
      *(unsigned char *)(v0 + 40) = v5;
      *(void *)(v0 + 48) = v4;
      *(unsigned char *)(v0 + 56) = v3;
      uint64_t v6 = (void *)swift_task_alloc();
      *(void *)(v0 + 104) = v6;
      *uint64_t v6 = v0;
      v6[1] = sub_24340AF1C;
      sub_243507914((_OWORD *)(v0 + 16));
    }
  }
}

uint64_t sub_2437C0684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2437C0698);
}

uint64_t sub_2437C0698(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C7270);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_2437C074C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2437C0760);
}

void *sub_2437C0760(void *result, uint64_t a2, int a3, uint64_t a4)
{
  char v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C7270);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_2437C080C()
{
  sub_24352EF34();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_2437C08C4()
{
  return sub_2437C090C(&qword_268DA0038, (void (*)(uint64_t))type metadata accessor for AccountBalance);
}

uint64_t sub_2437C090C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2437C0954(uint64_t a1, void *a2, char a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v10 = *a5;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C7270);
  MEMORY[0x270FA5388](v11 - 8);
  id v13 = &v26[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v31[3] = type metadata accessor for FinanceStore();
  v31[4] = &off_26F8C2700;
  v31[0] = a4;
  sub_24340BD48(a1, (uint64_t)v13);
  sub_24338E428((uint64_t)v31, (uint64_t)v29);
  uint64_t v14 = a5[2];
  uint64_t v27 = v10;
  char v15 = (void *)(v14 + 16);
  id v16 = (os_unfair_lock_s *)(v14 + 24);
  id v17 = a2;
  swift_retain();
  os_unfair_lock_lock(v16);
  sub_24340B708(v15, &v28);
  os_unfair_lock_unlock(v16);
  uint64_t v18 = v28;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268DA0040);
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v29, v30);
  MEMORY[0x270FA5388](v20);
  int v22 = (uint64_t *)&v26[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(uint64_t *))(v23 + 16))(v22);
  uint64_t v24 = sub_2437C0B90((uint64_t)v13, (unint64_t)a2, a3, *v22, 0, 0, v18, v19);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v29);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v31);
  return v24;
}

uint64_t sub_2437C0B90(uint64_t a1, unint64_t a2, char a3, uint64_t a4, uint64_t a5, void *a6, id *a7, uint64_t a8)
{
  uint64_t v52 = a6;
  uint64_t v54 = a5;
  LOBYTE(v11) = a3;
  uint64_t v14 = sub_243958D10();
  uint64_t v55 = *(void *)(v14 - 8);
  uint64_t v56 = v14;
  MEMORY[0x270FA5388](v14);
  id v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for FinanceStore();
  uint64_t v63 = &off_26F8C2700;
  *(unsigned char *)(a8 + 16) = 0;
  *(void *)(a8 + 24) = MEMORY[0x263F8EE78];
  *(void *)(a8 + qword_268E17EB0) = 0;
  uint64_t v62 = v17;
  v61[0] = a4;
  unint64_t v18 = qword_268E17EB8;
  *(void *)(a8 + qword_268E17EB8) = 0;
  uint64_t v19 = a8 + qword_268E17EF0;
  uint64_t v20 = qword_268D96B88;
  swift_retain();
  if (v20 != -1) {
LABEL_25:
  }
    swift_once();
  uint64_t v21 = sub_243957B10();
  uint64_t v22 = __swift_project_value_buffer(v21, (uint64_t)qword_268D9B280);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v22, v21);
  uint64_t v53 = a1;
  sub_24340BD48(a1, a8 + qword_268E17ED0);
  *(unsigned char *)(a8 + 32) = v11 & 1;
  *(void *)(a8 + qword_268E17EA8) = a7;
  uint64_t v23 = (void (**)(void *@<X0>, uint64_t@<X8>))(a8 + qword_268E17EE0);
  *uint64_t v23 = sub_2437C11B4;
  v23[1] = 0;
  uint64_t v24 = *(void **)(a8 + v18);
  *(void *)(a8 + v18) = a2;
  swift_retain();

  uint64_t v25 = *__swift_project_boxed_opaque_existential_1(v61, v17);
  uint64_t v59 = v17;
  uint64_t v60 = &off_26F8C2700;
  v58[0] = v25;
  sub_24338E428((uint64_t)v58, (uint64_t)v57);
  uint64_t v26 = swift_allocObject();
  sub_2433A857C(v57, v26 + 16);
  swift_retain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v58);
  uint64_t v27 = (void *)(a8 + qword_268E17EC0);
  *uint64_t v27 = &unk_268D98578;
  v27[1] = v26;
  uint64_t v28 = *__swift_project_boxed_opaque_existential_1(v61, v62);
  uint64_t v59 = v17;
  uint64_t v60 = &off_26F8C2700;
  v58[0] = v28;
  sub_24338E428((uint64_t)v58, (uint64_t)v57);
  uint64_t v29 = swift_allocObject();
  sub_2433A857C(v57, v29 + 16);
  swift_retain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v58);
  uint64_t v30 = (void *)(a8 + qword_268E17EC8);
  void *v30 = &unk_268D9A9D0;
  v30[1] = v29;
  *(void *)(a8 + qword_268E17ED8) = v54;
  id v31 = objc_msgSend(self, sel_defaultCenter);
  sub_243958D20();

  sub_243958CF0();
  (*(void (**)(uint64_t, char *, uint64_t))(v55 + 32))(a8 + qword_268E17E98, v16, v56);
  id v32 = objc_msgSend(a7[2], sel_persistentStoreCoordinator);
  id v33 = objc_msgSend(v32, sel_persistentStores);

  sub_24340BFDC();
  unint64_t v18 = sub_243958650();

  if (!(v18 >> 62))
  {
    a1 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (a1) {
      goto LABEL_4;
    }
LABEL_15:
    swift_bridgeObjectRelease_n();
LABEL_20:
    uint64_t v41 = 0;
    uint64_t v43 = 0;
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  a1 = sub_243959550();
  if (!a1) {
    goto LABEL_15;
  }
LABEL_4:
  a2 = v18 & 0xC000000000000001;
  uint64_t v11 = 4;
  while (1)
  {
    uint64_t v19 = v11 - 4;
    if (a2) {
      char v34 = (id *)MEMORY[0x24567E5D0](v11 - 4, v18);
    }
    else {
      char v34 = (id *)*(id *)(v18 + 8 * v11);
    }
    a7 = v34;
    uint64_t v17 = v11 - 3;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    id v35 = objc_msgSend(v34, sel_configurationName);
    id v16 = (char *)sub_2439582D0();
    uint64_t v37 = v36;

    if (v16 == (char *)0x6C61636F4CLL && v37 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
    char v39 = sub_243959940();
    swift_bridgeObjectRelease();
    if (v39) {
      break;
    }

    ++v11;
    if (v17 == a1) {
      goto LABEL_15;
    }
  }
  swift_bridgeObjectRelease_n();
LABEL_18:
  id v40 = objc_msgSend(a7, sel_identifier);

  if (!v40) {
    goto LABEL_20;
  }
  uint64_t v41 = sub_2439582D0();
  uint64_t v43 = v42;

LABEL_21:
  uint64_t v44 = v52;
  uint64_t v45 = v53;
  uint64_t v46 = (uint64_t *)(a8 + qword_268E17EA0);
  uint64_t *v46 = v41;
  v46[1] = v43;
  *(void *)(a8 + qword_268E17EE8) = v44;
  uint64_t v47 = qword_26B0C7DF8;
  id v48 = v44;
  if (v47 != -1) {
    swift_once();
  }
  os_activity_t v49 = _os_activity_create(&dword_243363000, "FinancialDataAsyncIterator", (os_activity_t)qword_26B0C7DF0, OS_ACTIVITY_FLAG_DETACHED);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v61);
  sub_24340C01C(v45);
  *(void *)(a8 + qword_268E17EF8) = v49;
  return a8;
}

void sub_2437C11B4(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_2437C11E8()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t RawOrderCustomer.init(_:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_customerEmailAddress);
  if (v4)
  {
    char v5 = v4;
    uint64_t v29 = sub_2439582D0();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v29 = 0;
    uint64_t v7 = 0;
  }
  swift_bridgeObjectRetain();
  id v8 = objc_msgSend(a1, sel_customerFamilyName);
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v28 = sub_2439582D0();
    uint64_t v11 = v10;
  }
  else
  {
    uint64_t v28 = 0;
    uint64_t v11 = 0;
  }
  swift_bridgeObjectRetain();
  id v12 = objc_msgSend(a1, sel_customerGivenName);
  if (v12)
  {
    id v13 = v12;
    uint64_t v27 = sub_2439582D0();
    uint64_t v15 = v14;
  }
  else
  {
    uint64_t v27 = 0;
    uint64_t v15 = 0;
  }
  swift_bridgeObjectRetain();
  id v16 = objc_msgSend(a1, sel_customerOrganizationName);
  if (v16)
  {
    uint64_t v17 = v16;
    uint64_t v18 = sub_2439582D0();
    uint64_t v20 = v19;
  }
  else
  {
    uint64_t v18 = 0;
    uint64_t v20 = 0;
  }
  swift_bridgeObjectRetain();
  id v21 = objc_msgSend(a1, sel_customerPhoneNumber);
  if (v21)
  {
    uint64_t v22 = v21;
    uint64_t v23 = sub_2439582D0();
    uint64_t v25 = v24;
  }
  else
  {

    uint64_t v23 = 0;
    uint64_t v25 = 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v28;
  a2[1] = v11;
  a2[2] = v27;
  a2[3] = v15;
  a2[4] = v18;
  a2[5] = v20;
  a2[6] = v29;
  a2[7] = v7;
  a2[8] = v23;
  a2[9] = v25;
  return result;
}

uint64_t RawOrderCustomer.familyName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawOrderCustomer.familyName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*RawOrderCustomer.familyName.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderCustomer.givenName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawOrderCustomer.givenName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*RawOrderCustomer.givenName.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderCustomer.organizationName.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawOrderCustomer.organizationName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*RawOrderCustomer.organizationName.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderCustomer.emailAddress.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawOrderCustomer.emailAddress.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

uint64_t (*RawOrderCustomer.emailAddress.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderCustomer.phoneNumber.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawOrderCustomer.phoneNumber.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  return result;
}

uint64_t (*RawOrderCustomer.phoneNumber.modify())()
{
  return nullsub_1;
}

void __swiftcall RawOrderCustomer.init(familyName:givenName:organizationName:emailAddress:phoneNumber:)(FinanceKit::RawOrderCustomer *__return_ptr retstr, Swift::String_optional familyName, Swift::String_optional givenName, Swift::String_optional organizationName, Swift::String_optional emailAddress, Swift::String_optional phoneNumber)
{
  retstr->familyName = familyName;
  retstr->givenName = givenName;
  retstr->organizationName = organizationName;
  retstr->emailAddress = emailAddress;
  retstr->phoneNumber = phoneNumber;
}

unint64_t sub_2437C16C8()
{
  unint64_t result = 0x614E796C696D6166;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6D614E6E65766967;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0x6464416C69616D65;
      break;
    case 4:
      unint64_t result = 0x6D754E656E6F6870;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2437C1790(uint64_t a1)
{
  unint64_t v2 = sub_2437C1E2C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2437C17CC(uint64_t a1)
{
  unint64_t v2 = sub_2437C1E2C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t RawOrderCustomer.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268DA0048);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[2];
  v13[7] = v1[3];
  v13[8] = v7;
  uint64_t v8 = v1[4];
  void v13[5] = v1[5];
  v13[6] = v8;
  uint64_t v9 = v1[6];
  v13[3] = v1[7];
  v13[4] = v9;
  uint64_t v10 = v1[8];
  v13[1] = v1[9];
  id v13[2] = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2437C1E2C();
  sub_243959BD0();
  char v18 = 0;
  uint64_t v11 = v13[9];
  sub_243959790();
  if (!v11)
  {
    char v17 = 1;
    sub_243959790();
    char v16 = 2;
    sub_243959790();
    char v15 = 3;
    sub_243959790();
    char v14 = 4;
    sub_243959790();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t RawOrderCustomer.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268DA0058);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2437C1E2C();
  sub_243959BA0();
  if (!v2)
  {
    char v40 = 0;
    uint64_t v10 = sub_243959620();
    uint64_t v12 = v11;
    char v39 = 1;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_243959620();
    uint64_t v15 = v14;
    uint64_t v33 = v13;
    uint64_t v34 = v10;
    char v38 = 2;
    swift_bridgeObjectRetain();
    uint64_t v35 = v15;
    uint64_t v16 = sub_243959620();
    uint64_t v18 = v17;
    uint64_t v31 = v16;
    id v32 = a2;
    char v37 = 3;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_243959620();
    uint64_t v21 = v20;
    uint64_t v30 = v19;
    char v36 = 4;
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_243959620();
    uint64_t v24 = v23;
    uint64_t v25 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v29 = v22;
    v25(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v26 = v32;
    uint64_t v27 = v35;
    *id v32 = v34;
    v26[1] = v12;
    v26[2] = v33;
    v26[3] = v27;
    v26[4] = v31;
    v26[5] = v18;
    v26[6] = v30;
    v26[7] = v21;
    v26[8] = v29;
    v26[9] = v24;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2437C1DFC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return RawOrderCustomer.init(from:)(a1, a2);
}

uint64_t sub_2437C1E14(void *a1)
{
  return RawOrderCustomer.encode(to:)(a1);
}

unint64_t sub_2437C1E2C()
{
  unint64_t result = qword_268DA0050;
  if (!qword_268DA0050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268DA0050);
  }
  return result;
}

ValueMetadata *type metadata accessor for RawOrderCustomer()
{
  return &type metadata for RawOrderCustomer;
}

unsigned char *storeEnumTagSinglePayload for RawOrderCustomer.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2437C1F5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RawOrderCustomer.CodingKeys()
{
  return &type metadata for RawOrderCustomer.CodingKeys;
}

unint64_t sub_2437C1F98()
{
  unint64_t result = qword_268DA0060;
  if (!qword_268DA0060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268DA0060);
  }
  return result;
}

unint64_t sub_2437C1FF0()
{
  unint64_t result = qword_268DA0068;
  if (!qword_268DA0068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268DA0068);
  }
  return result;
}

unint64_t sub_2437C2048()
{
  unint64_t result = qword_268DA0070;
  if (!qword_268DA0070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268DA0070);
  }
  return result;
}

uint64_t NotificationAttachmentStore.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08830]), sel_initWithFilePresenter_, 0);
  return v0;
}

uint64_t static NotificationAttachmentStoreError.== infix(_:_:)()
{
  return 1;
}

uint64_t NotificationAttachmentStoreError.hash(into:)()
{
  return sub_243959AE0();
}

uint64_t NotificationAttachmentStoreError.hashValue.getter()
{
  return sub_243959B40();
}

uint64_t NotificationAttachmentStore.init()()
{
  *(void *)(v0 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08830]), sel_initWithFilePresenter_, 0);
  return v0;
}

uint64_t sub_2437C219C(uint64_t a1)
{
  uint64_t v2 = sub_243957010();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v6 = *(void (**)(char *))(a1 + 32);
  sub_243956F90();
  v6(v5);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_2437C2280@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v27 = a1;
  unint64_t v28 = a2;
  uint64_t v26 = a5;
  uint64_t v7 = sub_243957010();
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v25 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)v23 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v23 - v14;
  v23[1] = *(void *)(a3 + 16);
  if (a4)
  {
    strcpy((char *)v29, "fulfillment_");
    BYTE5(v29[1]) = 0;
    HIWORD(v29[1]) = -5120;
    uint64_t v16 = (char *)v23 - v14;
    sub_243958460();
    uint64_t v17 = v29[1];
    v23[0] = v29[0];
    uint64_t v15 = v16;
    sub_2437C3638((uint64_t)v10);
    sub_243956F10();
    sub_243956F20();
    uint64_t v18 = *(void (**)(char *, uint64_t))(v24 + 8);
    uint64_t v19 = v10;
    uint64_t v20 = v25;
    v18(v19, v25);
    v29[0] = v23[0];
    v29[1] = v17;
    swift_bridgeObjectRetain();
    sub_243958460();
    sub_243956F20();
    swift_bridgeObjectRelease();
    v18(v13, v20);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2437C3638((uint64_t)v10);
    sub_243956F10();
    sub_243956F20();
    uint64_t v18 = *(void (**)(char *, uint64_t))(v24 + 8);
    uint64_t v21 = v10;
    uint64_t v20 = v25;
    v18(v21, v25);
    v29[0] = 0x6567616D69;
    v29[1] = 0xE500000000000000;
    sub_243958460();
    sub_243956F20();
    swift_bridgeObjectRelease();
    v18(v13, v20);
  }
  sub_2437C2810(v27, v28, (uint64_t)v15, v26);
  return ((uint64_t (*)(char *, uint64_t))v18)(v15, v20);
}

uint64_t sub_2437C25C0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  v22[3] = a4;
  uint64_t v23 = a5;
  uint64_t v26 = a1;
  unint64_t v27 = a2;
  uint64_t v25 = a6;
  void v22[2] = *v6;
  uint64_t v24 = sub_243957010();
  uint64_t v8 = *(void *)(v24 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v24);
  uint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)v22 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v22 - v15;
  v22[1] = *(void *)(a3 + 24);
  uint64_t v28 = 0x5F6E7275746572;
  unint64_t v29 = 0xE700000000000000;
  sub_243958460();
  unint64_t v17 = v29;
  uint64_t v23 = v28;
  sub_2437C3638((uint64_t)v11);
  sub_243956F10();
  sub_243956F20();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v19 = v11;
  uint64_t v20 = v24;
  v18(v19, v24);
  uint64_t v28 = v23;
  unint64_t v29 = v17;
  swift_bridgeObjectRetain();
  sub_243958460();
  sub_243956F20();
  swift_bridgeObjectRelease();
  v18(v14, v20);
  swift_bridgeObjectRelease();
  sub_2437C2810(v26, v27, (uint64_t)v16, v25);
  return ((uint64_t (*)(char *, uint64_t))v18)(v16, v20);
}

void sub_2437C2810(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v26 = a2;
  uint64_t v24 = a4;
  v29[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v7 = sub_243957010();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend(self, sel_defaultManager);
  v29[0] = 0;
  id v27 = *(id *)(v4 + 16);
  sub_243956F60();
  uint64_t v12 = sub_243956F00();
  uint64_t v22 = v8;
  uint64_t v23 = v7;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v25 = a3;
  uint64_t v13 = (void *)sub_243956F00();
  uint64_t v14 = (void *)swift_allocObject();
  void v14[2] = v11;
  void v14[3] = a1;
  unint64_t v15 = v26;
  v14[4] = v26;
  void v14[5] = v29;
  uint64_t v16 = (void *)swift_allocObject();
  void v16[2] = sub_2437C3CAC;
  v16[3] = v14;
  aBlock[4] = sub_2437C3CC8;
  aBlock[5] = v16;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_2437C2C74;
  aBlock[3] = &block_descriptor_39;
  unint64_t v17 = _Block_copy(aBlock);
  id v18 = v11;
  swift_retain();
  sub_243403DD0(a1, v15);
  swift_release();
  aBlock[0] = 0;
  id v19 = v27;
  objc_msgSend(v27, sel_coordinateWritingItemAtURL_options_writingItemAtURL_options_error_byAccessor_, v12, 0, v13, 8, aBlock, v17);
  _Block_release(v17);

  id v20 = aBlock[0];
  LOBYTE(v12) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v12) {
    __break(1u);
  }
  if (v20 || v29[0])
  {
    sub_2437C3C18();
    swift_allocError();
    swift_willThrow();

    swift_release();
  }
  else
  {

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v24, v25, v23);
    swift_release();
  }
}

void sub_2437C2B6C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void **a6)
{
  v13[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v8 = (void *)sub_243956F00();
  v13[0] = 0;
  LODWORD(a3) = objc_msgSend(a3, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v8, 1, 0, v13);

  if (a3)
  {
    id v9 = v13[0];
    sub_2439570E0();
  }
  else
  {
    id v10 = v13[0];
    uint64_t v11 = sub_243956E10();

    swift_willThrow();
    uint64_t v12 = *a6;
    *a6 = (void *)v11;
  }
}

uint64_t sub_2437C2C74(uint64_t a1)
{
  uint64_t v2 = sub_243957010();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  unsigned int v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v12 - v7;
  id v9 = *(void (**)(char *, char *))(a1 + 32);
  sub_243956F90();
  sub_243956F90();
  v9(v8, v6);
  id v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v6, v2);
  return ((uint64_t (*)(char *, uint64_t))v10)(v8, v2);
}

void sub_2437C2DB0()
{
  v42[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v35 = sub_243957010();
  uint64_t v0 = *(void *)(v35 - 8);
  uint64_t v1 = MEMORY[0x270FA5388](v35);
  uint64_t v34 = (char *)v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)v29 - v4;
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v29 - v6;
  sub_2437C3638((uint64_t)v5);
  sub_243956F10();
  sub_243956F20();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v0 + 8);
  uint64_t v32 = v0 + 8;
  uint64_t v30 = v8;
  v8(v5, v35);
  sub_2437C3638((uint64_t)v34);
  sub_243956F10();
  id v9 = objc_msgSend(self, sel_defaultManager);
  v42[0] = 0;
  uint64_t v10 = v33;
  id v11 = *(id *)(v33 + 16);
  uint64_t v31 = v7;
  uint64_t v12 = sub_243956F00();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v9;
  *(void *)(v13 + 24) = v42;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_2437C3BB8;
  *(void *)(v14 + 24) = v13;
  v29[1] = v13;
  char v40 = sub_2437C3BD0;
  uint64_t v41 = v14;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v37 = 1107296256;
  char v38 = sub_2437C219C;
  char v39 = &block_descriptor_22;
  unint64_t v15 = _Block_copy(&aBlock);
  id v16 = v9;
  swift_retain();
  swift_release();
  id aBlock = 0;
  objc_msgSend(v11, sel_coordinateWritingItemAtURL_options_error_byAccessor_, v12, 1, &aBlock, v15);
  _Block_release(v15);

  id v17 = aBlock;
  LOBYTE(v12) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v12)
  {
    __break(1u);
LABEL_8:
    __break(1u);
  }
  id v18 = *(id *)(v10 + 16);
  id v19 = (void *)sub_243956F00();
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v16;
  *(void *)(v20 + 24) = v42;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = sub_2437C3C00;
  *(void *)(v21 + 24) = v20;
  char v40 = sub_2437C3D04;
  uint64_t v41 = v21;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v37 = 1107296256;
  char v38 = sub_2437C219C;
  char v39 = &block_descriptor_30;
  uint64_t v22 = _Block_copy(&aBlock);
  id v23 = v16;
  swift_retain();
  swift_release();
  id aBlock = v17;
  objc_msgSend(v18, sel_coordinateWritingItemAtURL_options_error_byAccessor_, v19, 1, &aBlock, v22);
  _Block_release(v22);

  id v24 = aBlock;
  LOBYTE(v18) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v18) {
    goto LABEL_8;
  }
  if (v24 || v42[0])
  {
    sub_2437C3C18();
    swift_allocError();
    swift_willThrow();

    uint64_t v27 = v35;
    uint64_t v28 = v30;
    v30(v34, v35);
    v28(v31, v27);

    swift_release();
    swift_release();
  }
  else
  {

    uint64_t v25 = v35;
    unint64_t v26 = v30;
    v30(v34, v35);
    v26(v31, v25);

    swift_release();
    swift_release();
  }
}

void sub_2437C3358(uint64_t a1, void *a2, void **a3)
{
  v12[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v5 = (void *)sub_243956F00();
  v12[0] = 0;
  LODWORD(a2) = objc_msgSend(a2, sel_removeItemAtURL_error_, v5, v12);

  id v6 = v12[0];
  if (a2)
  {
    id v7 = v6;
  }
  else
  {
    id v8 = v12[0];
    id v9 = (void *)sub_243956E10();

    swift_willThrow();
    sub_2437C3C18();
    uint64_t v10 = swift_allocError();

    id v11 = *a3;
    *a3 = (void *)v10;
  }
}

void sub_2437C3484(uint64_t a1, void *a2, void **a3)
{
  v19[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v5 = (void *)sub_243956F00();
  v19[0] = 0;
  id v6 = objc_msgSend(a2, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v5, 0, 4, v19);

  id v7 = v19[0];
  if (!v6) {
    goto LABEL_7;
  }
  id v18 = v19[0];
  sub_243957010();
  uint64_t v8 = sub_243958650();
  id v9 = v18;

  uint64_t v10 = *(void *)(v8 + 16);
  swift_bridgeObjectRelease();
  if (v10) {
    return;
  }
  id v11 = (void *)sub_243956F00();
  v19[0] = 0;
  unsigned int v12 = objc_msgSend(a2, sel_removeItemAtURL_error_, v11, v19);

  id v7 = v19[0];
  if (v12)
  {
    id v13 = v7;
  }
  else
  {
LABEL_7:
    id v14 = v7;
    unint64_t v15 = (void *)sub_243956E10();

    swift_willThrow();
    sub_2437C3C18();
    uint64_t v16 = swift_allocError();

    id v17 = *a3;
    *a3 = (void *)v16;
  }
}

uint64_t sub_2437C3638@<X0>(uint64_t a1@<X8>)
{
  uint64_t v19 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
  uint64_t v2 = MEMORY[0x270FA5388](v1 - 8);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  id v6 = (char *)&v16 - v5;
  uint64_t v7 = sub_243957010();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  id v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  id v13 = (char *)&v16 - v12;
  static URL.libraryURL.getter((uint64_t)v4);
  id v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v18(v4, 1, v7) == 1)
  {
    sub_2433C1A80((uint64_t)v4);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  }
  else
  {
    id v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v17(v11, v4, v7);
    sub_243956F20();
    id v14 = *(void (**)(char *, uint64_t))(v8 + 8);
    v14(v11, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    if (v18(v6, 1, v7) != 1)
    {
      v17(v13, v6, v7);
      sub_243956F20();
      return ((uint64_t (*)(char *, uint64_t))v14)(v13, v7);
    }
  }
  sub_2433C1A80((uint64_t)v6);
  uint64_t result = sub_243959540();
  __break(1u);
  return result;
}

uint64_t NotificationAttachmentStore.deinit()
{
  return v0;
}

uint64_t NotificationAttachmentStore.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_2437C3998()
{
  unint64_t result = qword_268DA0078;
  if (!qword_268DA0078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268DA0078);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for NotificationAttachmentStoreError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2437C3A88);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationAttachmentStoreError()
{
  return &type metadata for NotificationAttachmentStoreError;
}

uint64_t type metadata accessor for NotificationAttachmentStore()
{
  return self;
}

uint64_t method lookup function for NotificationAttachmentStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for NotificationAttachmentStore);
}

uint64_t dispatch thunk of NotificationAttachmentStore.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of NotificationAttachmentStore.store(image:for:fulfillmentIdentifier:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of NotificationAttachmentStore.store(image:for:returnIdentifier:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t sub_2437C3B80()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_2437C3BB8(uint64_t a1)
{
  sub_2437C3358(a1, *(void **)(v1 + 16), *(void ***)(v1 + 24));
}

uint64_t sub_2437C3BC0()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2437C3BD0()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

void sub_2437C3C00(uint64_t a1)
{
  sub_2437C3484(a1, *(void **)(v1 + 16), *(void ***)(v1 + 24));
}

uint64_t sub_2437C3C08()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

unint64_t sub_2437C3C18()
{
  unint64_t result = qword_268DA0080[0];
  if (!qword_268DA0080[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_268DA0080);
  }
  return result;
}

uint64_t sub_2437C3C6C()
{
  sub_2433807F0(*(void *)(v0 + 24), *(void *)(v0 + 32));

  return MEMORY[0x270FA0238](v0, 48, 7);
}

void sub_2437C3CAC(uint64_t a1, uint64_t a2)
{
  sub_2437C2B6C(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void ***)(v2 + 40));
}

uint64_t sub_2437C3CB8()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2437C3CC8()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

id ManagedAccountActions.__allocating_init(_:context:)(uint64_t a1, void *a2)
{
  id v3 = sub_2437C4980(a1, (uint64_t)a2);

  return v3;
}

{
  objc_class *v2;
  id v5;

  uint64_t v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithContext_, a2);
  _s10FinanceKit21ManagedAccountActionsC6update_5usingyAC_AA18RawBankConnectDataO0E0VtFZ_0(v5, a1);

  sub_2437C4EEC(a1, (uint64_t (*)(void))type metadata accessor for RawBankConnectData.Actions);
  return v5;
}

void sub_2437C42D8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2433B998C(a1, (uint64_t)v10);
  id v11 = *a2;
  uint64_t v12 = sub_243957010();
  uint64_t v13 = *(void *)(v12 - 8);
  id v14 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) != 1)
  {
    id v14 = (void *)sub_243956F00();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
  }
  objc_msgSend(v11, *a5, v14);
}

id ManagedAccountActions.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedAccountActions.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)swift_getObjectType();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedAccountActions.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void _s10FinanceKit21ManagedAccountActionsC6update_5usingyAC_AA18RawBankConnectDataO0E0VtFZ_0(void *a1, uint64_t a2)
{
  id v30 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v29 = (uint64_t)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v29 - v7;
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  id v11 = (char *)&v29 - v10;
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  id v14 = (char *)&v29 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v29 - v15;
  sub_2433B998C(a2, (uint64_t)&v29 - v15);
  uint64_t v17 = sub_243957010();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  uint64_t v20 = 0;
  if (v19(v16, 1, v17) != 1)
  {
    uint64_t v20 = (void *)sub_243956F00();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v16, v17);
  }
  objc_msgSend(v30, sel_setTransferFunds_, v20);

  uint64_t v21 = (int *)type metadata accessor for RawBankConnectData.Actions();
  sub_2433B998C(a2 + v21[5], (uint64_t)v14);
  uint64_t v22 = 0;
  if (v19(v14, 1, v17) != 1)
  {
    uint64_t v22 = (void *)sub_243956F00();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v14, v17);
  }
  id v23 = v30;
  objc_msgSend(v30, sel_setPayNow_, v22);

  sub_2433B998C(a2 + v21[6], (uint64_t)v11);
  if (v19(v11, 1, v17) == 1)
  {
    id v24 = 0;
  }
  else
  {
    id v24 = (void *)sub_243956F00();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v11, v17);
  }
  objc_msgSend(v23, sel_setDigitalServicing_, v24);

  sub_2433B998C(a2 + v21[7], (uint64_t)v8);
  if (v19(v8, 1, v17) == 1)
  {
    uint64_t v25 = 0;
  }
  else
  {
    uint64_t v25 = (void *)sub_243956F00();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v17);
  }
  objc_msgSend(v23, sel_setPostInstallment_, v25);

  uint64_t v26 = a2 + v21[8];
  uint64_t v27 = v29;
  sub_2433B998C(v26, v29);
  if (v19((char *)v27, 1, v17) == 1)
  {
    uint64_t v28 = 0;
  }
  else
  {
    uint64_t v28 = (void *)sub_243956F00();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v27, v17);
  }
  objc_msgSend(v23, sel_setRedeemRewards_, v28);
}

id sub_2437C4980(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v37 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  char v36 = (char *)&v35 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v35 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v35 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v35 - v17;
  id v19 = objc_msgSend(objc_allocWithZone(v3), sel_initWithContext_, a2);
  uint64_t v38 = a1;
  sub_2433B998C(a1, (uint64_t)v18);
  uint64_t v20 = sub_243957010();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  int v23 = v22(v18, 1, v20);
  id v24 = v19;
  uint64_t v25 = 0;
  if (v23 != 1)
  {
    uint64_t v25 = (void *)sub_243956F00();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v20);
  }
  objc_msgSend(v24, sel_setTransferFunds_, v25);

  uint64_t v26 = (int *)type metadata accessor for Actions();
  uint64_t v27 = v38;
  sub_2433B998C(v38 + v26[5], (uint64_t)v16);
  uint64_t v28 = 0;
  if (v22(v16, 1, v20) != 1)
  {
    uint64_t v28 = (void *)sub_243956F00();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v16, v20);
  }
  objc_msgSend(v24, sel_setPayNow_, v28);

  sub_2433B998C(v27 + v26[6], (uint64_t)v13);
  if (v22(v13, 1, v20) == 1)
  {
    uint64_t v29 = 0;
  }
  else
  {
    uint64_t v29 = (void *)sub_243956F00();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v13, v20);
  }
  uint64_t v31 = (uint64_t)v36;
  uint64_t v30 = (uint64_t)v37;
  objc_msgSend(v24, sel_setDigitalServicing_, v29);

  sub_2433B998C(v27 + v26[7], v31);
  if (v22((char *)v31, 1, v20) == 1)
  {
    uint64_t v32 = 0;
  }
  else
  {
    uint64_t v32 = (void *)sub_243956F00();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v31, v20);
  }
  objc_msgSend(v24, sel_setPostInstallment_, v32);

  sub_2433B998C(v27 + v26[8], v30);
  if (v22((char *)v30, 1, v20) == 1)
  {
    uint64_t v33 = 0;
  }
  else
  {
    uint64_t v33 = (void *)sub_243956F00();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v30, v20);
  }
  objc_msgSend(v24, sel_setRedeemRewards_, v33);

  sub_2437C4EEC(v27, (uint64_t (*)(void))type metadata accessor for Actions);
  return v24;
}

uint64_t sub_2437C4D88@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_243496B14(a1, (SEL *)&selRef_transferFunds, a2);
}

void sub_2437C4DA8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_2437C4DC8@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_243496B14(a1, (SEL *)&selRef_payNow, a2);
}

void sub_2437C4DE8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_2437C4E08@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_243496B14(a1, (SEL *)&selRef_digitalServicing, a2);
}

void sub_2437C4E28(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_2437C4E48@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_243496B14(a1, (SEL *)&selRef_postInstallment, a2);
}

void sub_2437C4E68(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_2437C4E88@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_243496B14(a1, (SEL *)&selRef_redeemRewards, a2);
}

void sub_2437C4EA8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

uint64_t type metadata accessor for ManagedAccountActions()
{
  return self;
}

uint64_t sub_2437C4EEC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t FinanceAppExtensionConfiguration.init(connectionHandler:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t FinanceAppExtensionConfiguration.connectionHandler.getter()
{
  uint64_t v1 = *v0;
  swift_retain();
  return v1;
}

Swift::Bool __swiftcall FinanceAppExtensionConfiguration.accept(connection:)(NSXPCConnection connection)
{
  uint64_t v3 = *v1;
  type metadata accessor for ServiceToClientXPCConnection();
  sub_24348C430(v7);
  uint64_t v4 = connection.super.isa;
  uint64_t v5 = sub_24354D010(v4, (uint64_t)v7);

  v3(v5);
  swift_release();
  return 1;
}

void *sub_2437C503C(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_2437C5078(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t type metadata accessor for FinanceAppExtensionConfiguration()
{
  return __swift_instantiateGenericMetadata();
}

Swift::Void __swiftcall FinancialDataTCC.setGranted(_:forBundleID:)(Swift::Bool _, Swift::String forBundleID)
{
  if (*MEMORY[0x263F7C560])
  {
    object = forBundleID._object;
    uint64_t countAndFlagsBits = forBundleID._countAndFlagsBits;
    uint64_t v5 = qword_268D96B88;
    id v6 = (id)*MEMORY[0x263F7C560];
    if (v5 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_243957B10();
    __swift_project_value_buffer(v7, (uint64_t)qword_268D9B280);
    swift_bridgeObjectRetain_n();
    uint64_t v8 = sub_243957AF0();
    os_log_type_t v9 = sub_243958AF0();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v16 = v15;
      *(_DWORD *)uint64_t v10 = 136315394;
      if (_) {
        uint64_t v11 = 0x676E696C62616E45;
      }
      else {
        uint64_t v11 = 0x6E696C6261736944;
      }
      if (_) {
        unint64_t v12 = 0xE800000000000000;
      }
      else {
        unint64_t v12 = 0xE900000000000067;
      }
      sub_2433781FC(v11, v12, &v16);
      sub_2439590C0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v10 + 12) = 2080;
      swift_bridgeObjectRetain();
      sub_2433781FC(countAndFlagsBits, (unint64_t)object, &v16);
      sub_2439590C0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_243363000, v8, v9, "%s access for %s", (uint8_t *)v10, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245680100](v15, -1, -1);
      MEMORY[0x245680100](v10, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    id v13 = v6;
    uint64_t v14 = (void *)sub_2439582A0();
    TCCAccessSetForBundleId();
  }
  else
  {
    __break(1u);
  }
}

FinanceKit::PrivacySettingsTCCInfo_optional __swiftcall FinancialDataTCC.tccInfo(forBundleID:)(Swift::String forBundleID)
{
  object = forBundleID._object;
  uint64_t countAndFlagsBits = forBundleID._countAndFlagsBits;
  uint64_t v4 = v1;
  uint64_t v5 = (void *)sub_2439582A0();
  id v6 = (void *)TCCAccessCopyInformationForBundleId();

  if (v6)
  {
    id v7 = v6;
    uint64_t v17 = 0;
    sub_2437C5EA8();
    sub_243958640();
  }
  if (qword_268D96B88 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_243957B10();
  __swift_project_value_buffer(v8, (uint64_t)qword_268D9B280);
  swift_bridgeObjectRetain_n();
  os_log_type_t v9 = sub_243957AF0();
  os_log_type_t v10 = sub_243958AF0();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v17 = v12;
    *(_DWORD *)uint64_t v11 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)&long long v16 = sub_2433781FC(countAndFlagsBits, (unint64_t)object, &v17);
    sub_2439590C0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_243363000, v9, v10, "Unable to retrieve financialData for %s.", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245680100](v12, -1, -1);
    MEMORY[0x245680100](v11, -1, -1);
  }
  else
  {

    uint64_t v13 = swift_bridgeObjectRelease_n();
  }
  *(void *)uint64_t v4 = 0;
  *(void *)(v4 + 8) = 0;
  *(unsigned char *)(v4 + 16) = 0;
  result.value.bundleID._object = v14;
  result.value.bundleID._uint64_t countAndFlagsBits = v13;
  result.value.granted = v15;
  return result;
}

void FinancialDataTCC.allFinancialDataTCCInfos()()
{
  if (*MEMORY[0x263F7C560])
  {
    id v0 = (id)*MEMORY[0x263F7C560];
    uint64_t v1 = (void *)TCCAccessCopyInformation();
    if (v1)
    {
      id v2 = v1;
      sub_2437C5EA8();
      sub_243958640();
    }
    if (qword_268D96B88 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_243957B10();
    __swift_project_value_buffer(v3, (uint64_t)qword_268D9B280);
    uint64_t v4 = sub_243957AF0();
    os_log_type_t v5 = sub_243958AF0();
    if (os_log_type_enabled(v4, v5))
    {
      id v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v6 = 0;
      _os_log_impl(&dword_243363000, v4, v5, "Unable to retrieve financial data TCC info.", v6, 2u);
      MEMORY[0x245680100](v6, -1, -1);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_2437C5D7C()
{
  if (*MEMORY[0x263F7C4D8])
  {
    id v1 = (id)*MEMORY[0x263F7C4D8];
    if (objc_msgSend(v0, sel___swift_objectForKeyedSubscript_, v1))
    {
      sub_243959140();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v2, 0, sizeof(v2));
    }
    sub_2433C090C((uint64_t)v2, (uint64_t)v3);
    if (v4)
    {
      swift_dynamicCast();
    }
    else
    {

      sub_2433C0974((uint64_t)v3);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_2437C5E60()
{
}

unint64_t sub_2437C5E78(uint64_t a1, uint64_t a2)
{
  return (unint64_t)FinancialDataTCC.tccInfo(forBundleID:)(*(Swift::String *)&a1);
}

void sub_2437C5E90(Swift::Bool a1, uint64_t a2, uint64_t a3)
{
}

unint64_t sub_2437C5EA8()
{
  unint64_t result = qword_268D9ADB8;
  if (!qword_268D9ADB8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268D9ADB8);
  }
  return result;
}

uint64_t dispatch thunk of PrivacySettingsTCCCoordinating.allFinancialDataTCCInfos()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PrivacySettingsTCCCoordinating.tccInfo(forBundleID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of PrivacySettingsTCCCoordinating.setGranted(_:forBundleID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

ValueMetadata *type metadata accessor for PrivacySettingsTCCInfo()
{
  return &type metadata for PrivacySettingsTCCInfo;
}

ValueMetadata *type metadata accessor for FinancialDataTCC()
{
  return &type metadata for FinancialDataTCC;
}

uint64_t sub_2437C5F44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_243958800();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_2439587F0();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_24337C1BC(a1, (uint64_t *)&unk_26B0C7F80);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_243958700();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t BankConnectInstitutionAssetManager.requestInstitutionLogo(for:)(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C98A0);
  v3[7] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268D9B8B0);
  unsigned char v3[8] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for RawBankConnectData.Institution.Icons(0);
  v3[9] = v4;
  v3[10] = *(void *)(v4 - 8);
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  v3[14] = type metadata accessor for RawBankConnectData.Institution(0);
  v3[15] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2437C623C, v2, 0);
}

uint64_t sub_2437C623C()
{
  uint64_t v45 = v0;
  if (qword_268D96B78 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[5];
  uint64_t v3 = sub_243957B10();
  __swift_project_value_buffer(v3, (uint64_t)qword_268D9B250);
  sub_2437CB20C(v2, v1, type metadata accessor for RawBankConnectData.Institution);
  uint64_t v4 = sub_243957AF0();
  os_log_type_t v5 = sub_243958AD0();
  BOOL v6 = os_log_type_enabled(v4, v5);
  id v7 = (uint64_t *)v0[15];
  if (v6)
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v44 = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v10 = *v7;
    unint64_t v11 = v7[1];
    swift_bridgeObjectRetain();
    v0[3] = sub_2433781FC(v10, v11, &v44);
    sub_2439590C0();
    swift_bridgeObjectRelease();
    sub_2437CB82C((uint64_t)v7, type metadata accessor for RawBankConnectData.Institution);
    _os_log_impl(&dword_243363000, v4, v5, "requestInstitutionLogo for institution ID: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245680100](v9, -1, -1);
    MEMORY[0x245680100](v8, -1, -1);
  }
  else
  {
    sub_2437CB82C(v0[15], type metadata accessor for RawBankConnectData.Institution);
  }

  uint64_t v13 = v0[9];
  uint64_t v12 = v0[10];
  uint64_t v14 = v0[8];
  sub_24337C254(v0[5] + *(int *)(v0[14] + 24), v14, &qword_268D9B8B0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v14, 1, v13) == 1)
  {
    sub_24337C1BC(v0[8], &qword_268D9B8B0);
    Swift::Bool v15 = sub_243957AF0();
    os_log_type_t v16 = sub_243958AD0();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl(&dword_243363000, v15, v16, "requestInstitutionLogo: No icon payload.", v17, 2u);
      MEMORY[0x245680100](v17, -1, -1);
    }
    uint64_t v18 = v0[4];

    uint64_t v19 = sub_243957010();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
    goto LABEL_23;
  }
  sub_2437CB1A8(v0[8], v0[13]);
  uint64_t result = GSMainScreenScaleFactor();
  if ((~LODWORD(v21) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v21 <= -9.2234e18)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v21 >= 9.2234e18)
  {
LABEL_28:
    __break(1u);
    return result;
  }
  uint64_t v22 = v0[13];
  if ((uint64_t)v21 != 2) {
    v22 += *(int *)(v0[9] + 20);
  }
  uint64_t v23 = v0[7];
  sub_24337C254(v22, v23, &qword_26B0C98A0);
  uint64_t v24 = sub_243957010();
  v0[16] = v24;
  uint64_t v25 = *(void *)(v24 - 8);
  v0[17] = v25;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) == 1)
  {
    uint64_t v26 = v0[12];
    uint64_t v27 = v0[13];
    sub_24337C1BC(v0[7], &qword_26B0C98A0);
    sub_2437CB20C(v27, v26, type metadata accessor for RawBankConnectData.Institution.Icons);
    uint64_t v28 = sub_243957AF0();
    os_log_type_t v29 = sub_243958AF0();
    BOOL v30 = os_log_type_enabled(v28, v29);
    uint64_t v32 = v0[12];
    uint64_t v31 = v0[13];
    if (v30)
    {
      uint64_t v33 = v0[11];
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      uint64_t v44 = v43;
      *(_DWORD *)uint64_t v34 = 136315138;
      sub_2437CB20C(v32, v33, type metadata accessor for RawBankConnectData.Institution.Icons);
      uint64_t v35 = sub_243958370();
      v0[2] = sub_2433781FC(v35, v36, &v44);
      sub_2439590C0();
      swift_bridgeObjectRelease();
      sub_2437CB82C(v32, type metadata accessor for RawBankConnectData.Institution.Icons);
      _os_log_impl(&dword_243363000, v28, v29, "icon URL for screen scale is required in icons: %s", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245680100](v43, -1, -1);
      MEMORY[0x245680100](v34, -1, -1);
    }
    else
    {

      sub_2437CB82C(v32, type metadata accessor for RawBankConnectData.Institution.Icons);
    }
    sub_2437CB82C(v31, type metadata accessor for RawBankConnectData.Institution.Icons);
    (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v25 + 56))(v0[4], 1, 1, v24);
LABEL_23:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v42 = (uint64_t (*)(void))v0[1];
    return v42();
  }
  uint64_t v37 = (uint64_t *)v0[5];
  (*(void (**)(void, void, uint64_t))(v25 + 32))(v0[4], v0[7], v24);
  uint64_t v39 = *v37;
  uint64_t v38 = v37[1];
  char v40 = (void *)swift_task_alloc();
  v0[18] = v40;
  *char v40 = v0;
  v40[1] = sub_2437C6924;
  uint64_t v41 = v0[4];
  return BankConnectInstitutionAssetManager.requestAsset(assetURL:institutionID:)(v41, v39, v38);
}

uint64_t sub_2437C6924()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2437C6A34, v1, 0);
}

uint64_t sub_2437C6A34()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[4];
  sub_2437CB82C(v0[13], type metadata accessor for RawBankConnectData.Institution.Icons);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56))(v3, 0, 1, v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t BankConnectInstitutionAssetManager.deleteAsset(forInstitutionID:)(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return MEMORY[0x270FA2498](sub_2437C6B40, v2, 0);
}

uint64_t sub_2437C6B40()
{
  uint64_t v17 = v0;
  if (qword_268D96B78 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_243957B10();
  __swift_project_value_buffer(v1, (uint64_t)qword_268D9B250);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_243957AF0();
  os_log_type_t v3 = sub_243958AD0();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[4];
  if (v4)
  {
    uint64_t v6 = v0[3];
    id v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v16 = v8;
    *(_DWORD *)id v7 = 136315138;
    swift_bridgeObjectRetain();
    v0[2] = sub_2433781FC(v6, v5, &v16);
    sub_2439590C0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_243363000, v2, v3, "Asset deletion requested for institution id: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245680100](v8, -1, -1);
    MEMORY[0x245680100](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v9 = v0[3];
  uint64_t v10 = v0[4];
  id v11 = objc_msgSend(*(id *)(*(void *)(v0[5] + 112) + 16), sel_newBackgroundContext);
  uint64_t v12 = (void *)swift_task_alloc();
  id v12[2] = v9;
  v12[3] = v10;
  uint64_t v12[4] = v11;
  uint64_t v13 = (void *)swift_task_alloc();
  id v13[2] = sub_2437CB274;
  v13[3] = v12;
  v13[4] = v11;
  sub_243958D90();

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t static BankConnectInstitutionAssetManagerError.== infix(_:_:)()
{
  return 1;
}

uint64_t BankConnectInstitutionAssetManagerError.hash(into:)()
{
  return sub_243959AE0();
}

uint64_t BankConnectInstitutionAssetManagerError.hashValue.getter()
{
  return sub_243959B40();
}

uint64_t BankConnectInstitutionAssetManager.__allocating_init(store:webServiceClientProvider:)(uint64_t a1, long long *a2)
{
  uint64_t v4 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v4 + 160) = sub_243373004(MEMORY[0x263F8EE78]);
  *(void *)(v4 + 112) = a1;
  sub_2433A857C(a2, v4 + 120);
  return v4;
}

uint64_t BankConnectInstitutionAssetManager.init(store:webServiceClientProvider:)(uint64_t a1, long long *a2)
{
  swift_defaultActor_initialize();
  *(void *)(v2 + 160) = sub_243373004(MEMORY[0x263F8EE78]);
  *(void *)(v2 + 112) = a1;
  sub_2433A857C(a2, v2 + 120);
  return v2;
}

uint64_t BankConnectInstitutionAssetManager.requestAsset(assetURL:institutionID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[19] = a3;
  v4[20] = v3;
  v4[17] = a1;
  v4[18] = a2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C7F80);
  v4[21] = swift_task_alloc();
  uint64_t v5 = sub_243957010();
  v4[22] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[23] = v6;
  v4[24] = *(void *)(v6 + 64);
  v4[25] = swift_task_alloc();
  v4[26] = swift_task_alloc();
  v4[27] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2437C721C, v3, 0);
}

uint64_t sub_2437C721C()
{
  uint64_t v75 = v0;
  if (qword_268D96B78 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[27];
  uint64_t v3 = v0[22];
  uint64_t v4 = v0[23];
  uint64_t v5 = sub_243957B10();
  v0[28] = __swift_project_value_buffer(v5, (uint64_t)qword_268D9B250);
  long long v72 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v72(v2, v1, v3);
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_243957AF0();
  os_log_type_t v7 = sub_243958AD0();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v9 = v0[27];
  uint64_t v11 = v0[22];
  uint64_t v10 = v0[23];
  unint64_t v12 = v0[19];
  if (v8)
  {
    uint64_t v65 = v0[27];
    uint64_t v13 = v0[18];
    uint64_t v14 = swift_slowAlloc();
    uint64_t v68 = swift_slowAlloc();
    uint64_t v74 = v68;
    *(_DWORD *)uint64_t v14 = 136315394;
    swift_bridgeObjectRetain();
    v0[15] = sub_2433781FC(v13, v12, &v74);
    sub_2439590C0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v14 + 12) = 2080;
    sub_2437CB438((unint64_t *)&qword_268D97A00, 255, MEMORY[0x263F06EA8]);
    uint64_t v15 = sub_2439598D0();
    v0[16] = sub_2433781FC(v15, v16, &v74);
    sub_2439590C0();
    swift_bridgeObjectRelease();
    uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v17(v65, v11);
    _os_log_impl(&dword_243363000, v6, v7, "Asset requested for institution id: %s url: %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x245680100](v68, -1, -1);
    MEMORY[0x245680100](v14, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v17(v9, v11);
  }

  uint64_t v18 = v0[20] + 160;
  swift_beginAccess();
  if (*(void *)(*(void *)v18 + 16))
  {
    uint64_t v20 = v0[18];
    uint64_t v19 = v0[19];
    swift_bridgeObjectRetain();
    sub_24341A73C(v20, v19);
    if (v21)
    {
      uint64_t v22 = v0[25];
      uint64_t v23 = v0[22];
      uint64_t v24 = v0[17];
      swift_endAccess();
      swift_bridgeObjectRelease();
      v72(v22, v24, v23);
      swift_bridgeObjectRetain_n();
      uint64_t v25 = sub_243957AF0();
      os_log_type_t v26 = sub_243958AD0();
      BOOL v27 = os_log_type_enabled(v25, v26);
      uint64_t v28 = v0[25];
      uint64_t v29 = v0[22];
      unint64_t v30 = v0[19];
      if (v27)
      {
        uint64_t v31 = v0[18];
        uint64_t v32 = swift_slowAlloc();
        uint64_t v73 = swift_slowAlloc();
        uint64_t v74 = v73;
        *(_DWORD *)uint64_t v32 = 136315394;
        swift_bridgeObjectRetain();
        v0[13] = sub_2433781FC(v31, v30, &v74);
        sub_2439590C0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v32 + 12) = 2080;
        sub_2437CB438((unint64_t *)&qword_268D97A00, 255, MEMORY[0x263F06EA8]);
        uint64_t v33 = sub_2439598D0();
        v0[14] = sub_2433781FC(v33, v34, &v74);
        sub_2439590C0();
        swift_bridgeObjectRelease();
        v17(v28, v29);
        _os_log_impl(&dword_243363000, v25, v26, "Already downloading asset for: %s url: %s. Returning.", (uint8_t *)v32, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x245680100](v73, -1, -1);
        MEMORY[0x245680100](v32, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        v17(v28, v29);
      }

      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v61 = (uint64_t (*)(void))v0[1];
      return v61();
    }
    swift_bridgeObjectRelease();
  }
  unint64_t v35 = v0[19];
  uint64_t v36 = v0[18];
  swift_endAccess();
  uint64_t v37 = sub_2437C7D48(v36, v35);
  uint64_t v70 = v38;
  uint64_t v71 = v37;
  if (v38) {
    sub_2437C813C();
  }
  uint64_t v39 = v0[26];
  uint64_t v41 = v0[23];
  uint64_t v40 = v0[24];
  uint64_t v42 = v0[21];
  uint64_t v43 = v0[22];
  uint64_t v63 = v43;
  uint64_t v64 = v39;
  uint64_t v44 = v0[19];
  uint64_t v66 = v0[20];
  uint64_t v45 = v0[17];
  uint64_t v69 = v0[18];
  v0[29] = os_transaction_create();
  uint64_t type = v42;
  sub_2439587E0();
  uint64_t v46 = sub_243958800();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v42, 0, 1, v46);
  v72(v39, v45, v43);
  uint64_t v48 = sub_2437CB438(&qword_268DA0128, v47, (void (*)(uint64_t))type metadata accessor for BankConnectInstitutionAssetManager);
  unint64_t v49 = (*(unsigned __int8 *)(v41 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
  unint64_t v50 = (v40 + v49 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v51 = (v50 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v52 = (char *)swift_allocObject();
  *((void *)v52 + 2) = v66;
  *((void *)v52 + 3) = v48;
  *((void *)v52 + 4) = v66;
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 32))(&v52[v49], v64, v63);
  uint64_t v53 = (uint64_t *)&v52[v50];
  *uint64_t v53 = v71;
  v53[1] = v70;
  *(void *)&v52[v51] = 0x4014000000000000;
  uint64_t v54 = (uint64_t *)&v52[(v51 + 15) & 0xFFFFFFFFFFFFFFF8];
  uint64_t *v54 = v69;
  v54[1] = v44;
  swift_retain_n();
  swift_bridgeObjectRetain();
  uint64_t v55 = sub_2437C5F44(type, (uint64_t)&unk_268DA0130, (uint64_t)v52);
  v0[30] = v55;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v74 = *(void *)v18;
  *(void *)uint64_t v18 = 0x8000000000000000;
  sub_2434ED430(v55, v69, v44, isUniquelyReferenced_nonNull_native);
  *(void *)uint64_t v18 = v74;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  long long v57 = (void *)swift_task_alloc();
  v0[31] = v57;
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C7A50);
  void *v57 = v0;
  v57[1] = sub_2437C7AA4;
  uint64_t v59 = MEMORY[0x263F8EE60] + 8;
  uint64_t v60 = MEMORY[0x263F8E4E0];
  return MEMORY[0x270FA1FB8](v0 + 11, v55, v59, v58, v60);
}

uint64_t sub_2437C7AA4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 160);
  swift_task_dealloc();
  sub_2437CB42C(*(id *)(v1 + 88), *(unsigned char *)(v1 + 96));
  return MEMORY[0x270FA2498](sub_2437C7BD8, v2, 0);
}

uint64_t sub_2437C7BD8()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[18];
  swift_beginAccess();
  sub_2434EBE70(v2, v1);
  swift_endAccess();
  swift_release();
  uint64_t v3 = sub_243957AF0();
  os_log_type_t v4 = sub_243958AD0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_243363000, v3, v4, "Releasing transaction for institution logo download.", v5, 2u);
    MEMORY[0x245680100](v5, -1, -1);

    swift_release();
  }
  else
  {
    swift_release();
  }
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_2437C7D48(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  if (qword_268D96B78 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_243957B10();
  __swift_project_value_buffer(v6, (uint64_t)qword_268D9B250);
  swift_bridgeObjectRetain_n();
  os_log_type_t v7 = sub_243957AF0();
  os_log_type_t v8 = sub_243958AD0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v23 = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    swift_bridgeObjectRetain();
    v22[0] = sub_2433781FC(a1, a2, &v23);
    sub_2439590C0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_243363000, v7, v8, "Asset data store etag request for id: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245680100](v10, -1, -1);
    MEMORY[0x245680100](v9, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  id v11 = objc_msgSend(*(id *)(*(void *)(v3 + 112) + 16), sel_newBackgroundContext);
  MEMORY[0x270FA5388](v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268D97478);
  sub_243958D90();
  uint64_t v13 = v23;
  uint64_t v12 = v24;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v14 = sub_243957AF0();
  os_log_type_t v15 = sub_243958AD0();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = a1;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136315394;
    v22[0] = v18;
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_2433781FC(v16, a2, v22);
    sub_2439590C0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v17 + 12) = 2080;
    uint64_t v23 = v13;
    uint64_t v24 = v12;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_243958370();
    uint64_t v23 = sub_2433781FC(v19, v20, v22);
    sub_2439590C0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_243363000, v14, v15, "Asset data store etag request for id: %s returning %s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x245680100](v18, -1, -1);
    MEMORY[0x245680100](v17, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  return v13;
}

void sub_2437C813C()
{
  id v1 = objc_msgSend(*(id *)(*(void *)(v0 + 112) + 16), sel_newBackgroundContext);
  sub_243958D90();
}

uint64_t BankConnectInstitutionAssetManager.downloadAssetIfNecessary(fromAssetURL:institutionID:etag:timeoutSeconds:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  uint64_t v30 = a4;
  uint64_t v31 = a5;
  uint64_t v32 = a2;
  uint64_t v33 = a3;
  uint64_t v8 = sub_243957010();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8);
  id v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B0C7F80);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2439587E0();
  uint64_t v15 = sub_243958800();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 0, 1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  uint64_t v17 = sub_2437CB438(&qword_268DA0128, v16, (void (*)(uint64_t))type metadata accessor for BankConnectInstitutionAssetManager);
  unint64_t v18 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v19 = (v10 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = (v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  char v21 = (char *)swift_allocObject();
  uint64_t v22 = v29;
  *((void *)v21 + 2) = v29;
  *((void *)v21 + 3) = v17;
  *((void *)v21 + 4) = v22;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v21[v18], v11, v8);
  uint64_t v23 = &v21[v19];
  uint64_t v24 = v31;
  *(void *)uint64_t v23 = v30;
  *((void *)v23 + 1) = v24;
  *(double *)&v21[v20] = a6;
  uint64_t v25 = &v21[(v20 + 15) & 0xFFFFFFFFFFFFFFF8];
  uint64_t v26 = v33;
  *(void *)uint64_t v25 = v32;
  *((void *)v25 + 1) = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain_n();
  return sub_2437C5F44((uint64_t)v14, (uint64_t)&unk_268DA0138, (uint64_t)v21);
}

uint64_t BankConnectInstitutionAssetManager.assetData(forInstitutionID:)(uint64_t a1, uint64_t a2)
{
  v3[7] = a2;
  unsigned char v3[8] = v2;
  v3[6] = a1;
  return MEMORY[0x270FA2498](sub_2437C86C4, v2, 0);
}

uint64_t sub_2437C86C4()
{
  uint64_t v26 = v0;
  if (qword_268D96B78 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_243957B10();
  __swift_project_value_buffer(v1, (uint64_t)qword_268D9B250);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_243957AF0();
  os_log_type_t v3 = sub_243958AD0();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[7];
  if (v4)
  {
    uint64_t v24 = v0[6];
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v25 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    swift_bridgeObjectRetain();
    v0[5] = sub_2433781FC(v24, v5, &v25);
    sub_2439590C0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_243363000, v2, v3, "Asset data request for institution id: %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245680100](v7, -1, -1);
    MEMORY[0x245680100](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v8 = v0[8];
  swift_beginAccess();
  uint64_t v9 = *(void *)(v8 + 160);
  if (*(void *)(v9 + 16))
  {
    uint64_t v11 = v0[6];
    uint64_t v10 = v0[7];
    swift_bridgeObjectRetain();
    unint64_t v12 = sub_24341A73C(v11, v10);
    if (v13)
    {
      uint64_t v14 = *(void *)(*(void *)(v9 + 56) + 8 * v12);
      v0[9] = v14;
      swift_endAccess();
      swift_retain();
      swift_bridgeObjectRelease();
      uint64_t v15 = (void *)swift_task_alloc();
      v0[10] = v15;
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0C7A50);
      *uint64_t v15 = v0;
      v15[1] = sub_2437C8A64;
      uint64_t v17 = MEMORY[0x263F8EE60] + 8;
      uint64_t v18 = MEMORY[0x263F8E4E0];
      return MEMORY[0x270FA1FA8](v16, v14, v17, v16, v18);
    }
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_endAccess();
  }
  uint64_t v19 = sub_2437C8C80(v0[6], v0[7]);
  if (v20 >> 60 == 15)
  {
    sub_2437CB594();
    swift_allocError();
    swift_willThrow();
    char v21 = (uint64_t (*)(void))v0[1];
    return v21();
  }
  else
  {
    uint64_t v22 = (uint64_t (*)(uint64_t))v0[1];
    return v22(v19);
  }
}

uint64_t sub_2437C8A64()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 64);
    swift_release();
    BOOL v4 = sub_2437C8C68;
    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 64);
    BOOL v4 = sub_2437C8B88;
  }
  return MEMORY[0x270FA2498](v4, v5, 0);
}

uint64_t sub_2437C8B88()
{
  swift_release();
  uint64_t v1 = sub_2437C8C80(v0[6], v0[7]);
  if (v2 >> 60 == 15)
  {
    sub_2437CB594();
    swift_allocError();
    swift_willThrow();
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
  else
  {
    uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
    return v5(v1);
  }
}

uint64_t sub_2437C8C68()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2437C8C80(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  if (qword_268D96B78 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_243957B10();
  __swift_project_value_buffer(v6, (uint64_t)qword_268D9B250);
  swift_bridgeObjectRetain_n();
  uint64_t v7 = sub_243957AF0();
  os_log_type_t v8 = sub_243958AD0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    v25[0] = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    swift_bridgeObjectRetain();
    sub_2433781FC(a1, a2, v25);
    sub_2439590C0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_243363000, v7, v8, "Asset data store request data for id: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245680100](v10, -1, -1);
    MEMORY[0x245680100](v9, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  id v11 = objc_msgSend(*(id *)(*(void *)(v3 + 112) + 16), sel_newBackgroundContext);
  MEMORY[0x270FA5388](v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268D9A6F8);
  sub_243958D90();
  uint64_t v12 = v25[0];
  unint64_t v13 = v25[1];
  swift_bridgeObjectRetain();
  if (v13 >> 60 == 15)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_243957AF0();
    os_log_type_t v15 = sub_243958AD0();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      v25[0] = v17;
      *(_DWORD *)uint64_t v16 = 136315138;
      swift_bridgeObjectRetain();
      sub_2433781FC(a1, a2, v25);
      sub_2439590C0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_243363000, v14, v15, "No asset data for id: %s", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245680100](v17, -1, -1);
      MEMORY[0x245680100](v16, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }

    return 0;
  }
  else
  {
    sub_243407784(v12, v13);
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_243957AF0();
    os_log_type_t v19 = sub_243958AD0();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v24 = a1;
      uint64_t v20 = swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      v25[0] = v21;
      *(_DWORD *)uint64_t v20 = 134218242;
      uint64_t v22 = v21;
      switch(v13 >> 62)
      {
        case 1uLL:
          if (!__OFSUB__(HIDWORD(v12), v12)) {
            goto LABEL_17;
          }
          __break(1u);
LABEL_20:
          __break(1u);
          JUMPOUT(0x2437C91CCLL);
        case 2uLL:
          if (!__OFSUB__(*(void *)(v12 + 24), *(void *)(v12 + 16))) {
            goto LABEL_17;
          }
          goto LABEL_20;
        default:
LABEL_17:
          sub_2439590C0();
          *(_WORD *)(v20 + 12) = 2080;
          swift_bridgeObjectRetain();
          sub_2433781FC(v24, a2, v25);
          sub_2439590C0();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_243363000, v18, v19, "Returning %ld bytes from asset store for : %s", (uint8_t *)v20, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x245680100](v22, -1, -1);
          MEMORY[0x245680100](v20, -1, -1);

          sub_2433D7B74(v12, v13);
          break;
      }
    }
    else
    {
      sub_2433D7B74(v12, v13);

      swift_bridgeObjectRelease_n();
    }
  }
  return v12;
}

void sub_2437C91DC(uint64_t a1, uint64_t a2, void *a3)
{
  v9[1] = *(id *)MEMORY[0x263EF8340];
  type metadata accessor for ManagedInstitutionAsset();
  static ManagedInstitutionAsset.deleteAsset(institutionID:context:)(a1, a2, a3);
  if (!v3)
  {
    v9[0] = 0;
    if (objc_msgSend(a3, sel_save_, v9))
    {
      id v7 = v9[0];
    }
    else
    {
      id v8 = v9[0];
      sub_243956E10();

      swift_willThrow();
    }
  }
}

uint64_t sub_2437C92BC(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v9 + 144) = a9;
  *(void *)(v9 + 152) = v14;
  *(double *)(v9 + 136) = a1;
  *(void *)(v9 + 120) = a7;
  *(void *)(v9 + 128) = a8;
  *(void *)(v9 + 104) = a5;
  *(void *)(v9 + 112) = a6;
  *(void *)(v9 + 160) = type metadata accessor for BankConnectWebServiceInstitutionLogoRequest();
  *(void *)(v9 + 168) = swift_task_alloc();
  uint64_t v11 = sub_243957010();
  *(void *)(v9 + 176) = v11;
  *(void *)(v9 + 184) = *(void *)(v11 - 8);
  *(void *)(v9 + 192) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2437C93C4, a5, 0);
}

uint64_t sub_2437C93C4()
{
  uint64_t v39 = v0;
  if (qword_268D96B78 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[23];
  uint64_t v1 = v0[24];
  uint64_t v3 = v0[22];
  uint64_t v4 = v0[14];
  uint64_t v5 = sub_243957B10();
  v0[25] = __swift_project_value_buffer(v5, (uint64_t)qword_268D9B250);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v6(v1, v4, v3);
  swift_bridgeObjectRetain_n();
  id v7 = sub_243957AF0();
  os_log_type_t v8 = sub_243958AD0();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v11 = v0[23];
  uint64_t v10 = v0[24];
  uint64_t v12 = v0[22];
  if (v9)
  {
    uint64_t v13 = v0[17];
    uint64_t v34 = v0[16];
    uint64_t v33 = v0[15];
    os_log_type_t typea = v8;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    uint64_t v38 = v35;
    *(_DWORD *)uint64_t v14 = 136315650;
    sub_2437CB438((unint64_t *)&qword_268D97A00, 255, MEMORY[0x263F06EA8]);
    uint64_t v15 = sub_2439598D0();
    v0[9] = sub_2433781FC(v15, v16, &v38);
    sub_2439590C0();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    *(_WORD *)(v14 + 12) = 2080;
    v0[6] = v33;
    v0[7] = v34;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_268D97478);
    uint64_t v17 = sub_243958370();
    v0[11] = sub_2433781FC(v17, v18, &v38);
    sub_2439590C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v14 + 22) = 2048;
    v0[12] = v13;
    sub_2439590C0();
    _os_log_impl(&dword_243363000, v7, typea, "downloadAssetIfNecessary called for url: %s etag: %s timeoutSeconds: %f).", (uint8_t *)v14, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x245680100](v35, -1, -1);
    MEMORY[0x245680100](v14, -1, -1);
  }
  else
  {
    (*(void (**)(void, void))(v11 + 8))(v0[24], v0[22]);
    swift_bridgeObjectRelease_n();
  }

  uint64_t v19 = v0[21];
  uint64_t v20 = v0[20];
  uint64_t v21 = v0[17];
  uint64_t v23 = v0[15];
  uint64_t v22 = v0[16];
  uint64_t v24 = (void *)v0[13];
  v6(v19, v0[14], v0[22]);
  uint64_t v25 = (void *)(v19 + *(int *)(v20 + 20));
  void *v25 = v23;
  v25[1] = v22;
  *(void *)(v19 + *(int *)(v20 + 24)) = v21;
  uint64_t v26 = v24[18];
  uint64_t v27 = v24[19];
  __swift_project_boxed_opaque_existential_1(v24 + 15, v26);
  uint64_t v28 = *(uint64_t (**)(uint64_t, uint64_t))(v27 + 8);
  swift_bridgeObjectRetain();
  uint64_t v29 = v28(v26, v27);
  v0[26] = v29;
  uint64_t v30 = swift_task_alloc();
  v0[27] = v30;
  *(void *)(v30 + 16) = v29;
  *(void *)(v30 + 24) = v19;
  uint64_t type = (uint64_t (*)(uint64_t, int *))((char *)&dword_268DA2E50 + dword_268DA2E50);
  uint64_t v31 = (void *)swift_task_alloc();
  v0[28] = v31;
  void *v31 = v0;
  v31[1] = sub_2437C980C;
  return type((uint64_t)(v0 + 2), (int *)&unk_268DA0160);
}

uint64_t sub_2437C980C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 232) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 104);
  if (v0) {
    uint64_t v4 = sub_2437C9CD4;
  }
  else {
    uint64_t v4 = sub_2437C9954;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_2437C9954()
{
  uint64_t v22 = v0;
  uint64_t v1 = v0[2];
  unint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[5];
  swift_bridgeObjectRetain_n();
  if (v4 == 1)
  {
    uint64_t v5 = sub_243957AF0();
    os_log_type_t v6 = sub_243958AD0();
    BOOL v7 = os_log_type_enabled(v5, v6);
    unint64_t v8 = v0[19];
    if (v7)
    {
      uint64_t v9 = v0[18];
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      uint64_t v21 = v11;
      *(_DWORD *)uint64_t v10 = 136315138;
      swift_bridgeObjectRetain();
      v0[10] = sub_2433781FC(v9, v8, &v21);
      sub_2439590C0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_243363000, v5, v6, "downloadAssetIfNecessary: asset is unchanged for institution id: %s", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245680100](v11, -1, -1);
      MEMORY[0x245680100](v10, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
    swift_release();
  }
  else
  {
    sub_24358DB40(v1, v2, v3, v4);
    uint64_t v12 = sub_243957AF0();
    os_log_type_t v13 = sub_243958AD0();
    BOOL v14 = os_log_type_enabled(v12, v13);
    unint64_t v15 = v0[19];
    if (v14)
    {
      uint64_t v19 = v0[18];
      unint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      uint64_t v21 = v20;
      *(_DWORD *)unint64_t v16 = 136315138;
      swift_bridgeObjectRetain();
      v0[8] = sub_2433781FC(v19, v15, &v21);
      sub_2439590C0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_243363000, v12, v13, "downloadAssetIfNecessary: received modified data for institution id: %s", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245680100](v20, -1, -1);
      MEMORY[0x245680100](v16, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    sub_2437C9E20(v1, v2, v3, v4, v0[18], v0[19]);
    swift_release();
    sub_24358DB84(v1, v2, v3, v4);
    sub_2433807F0(v1, v2);
    swift_bridgeObjectRelease();
  }
  sub_2437CB82C(v0[21], (uint64_t (*)(void))type metadata accessor for BankConnectWebServiceInstitutionLogoRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_2437C9CD4()
{
  uint64_t v1 = *(void *)(v0 + 168);
  swift_release();
  sub_2437CB82C(v1, (uint64_t (*)(void))type metadata accessor for BankConnectWebServiceInstitutionLogoRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2437C9D6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  os_log_type_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *os_log_type_t v6 = v3;
  v6[1] = sub_24337AF78;
  return BankConnectWebServiceClient.institutionLogo(for:)(a1, a3);
}

void sub_2437C9E20(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v7 = v6;
  if (qword_268D96B78 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_243957B10();
  __swift_project_value_buffer(v13, (uint64_t)qword_268D9B250);
  swift_bridgeObjectRetain();
  sub_243403DD0(a1, a2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_243403DD0(a1, a2);
  swift_bridgeObjectRetain();
  BOOL v14 = sub_243957AF0();
  os_log_type_t v15 = sub_243958AD0();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v28 = v7;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    v30[0] = v27;
    *(_DWORD *)uint64_t v16 = 136315650;
    swift_bridgeObjectRetain();
    v29[0] = sub_2433781FC(a5, a6, v30);
    sub_2439590C0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v16 + 12) = 2048;
    switch(a2 >> 62)
    {
      case 1uLL:
        sub_2433807F0(a1, a2);
        if (__OFSUB__(HIDWORD(a1), a1))
        {
          __break(1u);
          JUMPOUT(0x2437CA530);
        }
        return;
      case 2uLL:
        uint64_t v18 = *(void *)(a1 + 16);
        uint64_t v17 = *(void *)(a1 + 24);
        sub_2433807F0(a1, a2);
        if (__OFSUB__(v17, v18))
        {
          __break(1u);
          goto LABEL_11;
        }
        break;
      default:
LABEL_11:
        sub_2433807F0(a1, a2);
        break;
    }
    sub_2439590C0();
    sub_2433807F0(a1, a2);
    *(_WORD *)(v16 + 22) = 2080;
    v29[1] = a4;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_268D97478);
    uint64_t v19 = sub_243958370();
    v29[0] = sub_2433781FC(v19, v20, v30);
    sub_2439590C0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_243363000, v14, v15, "Asset data store insertOrUpdate for id: %s %ld bytes etag: %s", (uint8_t *)v16, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x245680100](v27, -1, -1);
    MEMORY[0x245680100](v16, -1, -1);

    uint64_t v7 = v28;
  }
  else
  {
    sub_2433807F0(a1, a2);
    swift_bridgeObjectRelease_n();
    sub_2433807F0(a1, a2);

    swift_bridgeObjectRelease_n();
  }
  id v21 = objc_msgSend(*(id *)(*(void *)(v7 + 112) + 16), sel_newBackgroundContext, v27);
  uint64_t v26 = MEMORY[0x270FA5388](v21);
  MEMORY[0x270FA5388](v26);
  sub_243958D90();

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_243957AF0();
  os_log_type_t v23 = sub_243958AD0();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    v29[0] = v25;
    *(_DWORD *)uint64_t v24 = 136315138;
    swift_bridgeObjectRetain();
    v30[0] = sub_2433781FC(a5, a6, v29);
    sub_2439590C0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_243363000, v22, v23, "Asset saved for id: %s", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245680100](v25, -1, -1);
    MEMORY[0x245680100](v24, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t BankConnectInstitutionAssetManager.deinit()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 120);
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t BankConnectInstitutionAssetManager.__deallocating_deinit()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 120);
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();

  return MEMORY[0x270FA2418](v0);
}

uint64_t BankConnectInstitutionAssetManager.unownedExecutor.getter()
{
  return v0;
}

void sub_2437CA5CC(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  type metadata accessor for ManagedInstitutionAsset();
  uint64_t v9 = (void *)static ManagedInstitutionAsset.existingAsset(withInstitutionID:in:)(a1, a2, a3);
  if (v4)
  {
    if (qword_268D96B78 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_243957B10();
    __swift_project_value_buffer(v10, (uint64_t)qword_268D9B250);
    swift_bridgeObjectRetain();
    id v11 = v4;
    swift_bridgeObjectRetain();
    id v12 = v4;
    uint64_t v13 = sub_243957AF0();
    os_log_type_t v14 = sub_243958AF0();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      uint64_t v16 = (void *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      uint64_t v25 = v17;
      *(_DWORD *)uint64_t v15 = 136315394;
      swift_bridgeObjectRetain();
      sub_2433781FC(a1, a2, &v25);
      sub_2439590C0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v15 + 12) = 2112;
      id v18 = v4;
      uint64_t v24 = _swift_stdlib_bridgeErrorToNSError();
      sub_2439590C0();
      *uint64_t v16 = v24;

      _os_log_impl(&dword_243363000, v13, v14, "Error obtaining asset data for id: %s: %@", (uint8_t *)v15, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CAB0);
      swift_arrayDestroy();
      MEMORY[0x245680100](v16, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x245680100](v17, -1, -1);
      MEMORY[0x245680100](v15, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v21 = 0;
    goto LABEL_10;
  }
  uint64_t v19 = v9;
  if (!v9)
  {
    uint64_t v21 = 0;
LABEL_10:
    unint64_t v23 = 0xF000000000000000;
    goto LABEL_11;
  }
  id v20 = objc_msgSend(v9, sel_data);
  uint64_t v21 = sub_2439570C0();
  unint64_t v23 = v22;

LABEL_11:
  *a4 = v21;
  a4[1] = v23;
}

void sub_2437CA8CC(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  type metadata accessor for ManagedInstitutionAsset();
  uint64_t v9 = (void *)static ManagedInstitutionAsset.existingAsset(withInstitutionID:in:)(a1, a2, a3);
  if (v4)
  {
    if (qword_268D96B78 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_243957B10();
    __swift_project_value_buffer(v10, (uint64_t)qword_268D9B250);
    swift_bridgeObjectRetain();
    id v11 = v4;
    swift_bridgeObjectRetain();
    id v12 = v4;
    uint64_t v13 = sub_243957AF0();
    os_log_type_t v14 = sub_243958AF0();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      uint64_t v16 = (void *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      uint64_t v26 = v17;
      *(_DWORD *)uint64_t v15 = 136315394;
      swift_bridgeObjectRetain();
      sub_2433781FC(a1, a2, &v26);
      sub_2439590C0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v15 + 12) = 2112;
      id v18 = v4;
      uint64_t v25 = _swift_stdlib_bridgeErrorToNSError();
      sub_2439590C0();
      *uint64_t v16 = v25;

      _os_log_impl(&dword_243363000, v13, v14, "Error obtaining etag for id: %s: %@", (uint8_t *)v15, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CAB0);
      swift_arrayDestroy();
      MEMORY[0x245680100](v16, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x245680100](v17, -1, -1);
      MEMORY[0x245680100](v15, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    goto LABEL_10;
  }
  uint64_t v19 = v9;
  if (!v9)
  {
LABEL_10:
    *a4 = 0;
    a4[1] = 0;
    return;
  }
  id v20 = objc_msgSend(v9, sel_etag);
  if (v20)
  {
    uint64_t v21 = v20;
    uint64_t v22 = sub_2439582D0();
    uint64_t v24 = v23;
  }
  else
  {

    uint64_t v22 = 0;
    uint64_t v24 = 0;
  }
  *a4 = v22;
  a4[1] = v24;
}

void sub_2437CABD4(uint64_t a1, uint64_t a2, void *a3)
{
  v16[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v7 = sub_243957400();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ManagedInstitutionAsset();
  unint64_t v11 = static ManagedInstitutionAsset.existingAsset(withInstitutionID:in:)(a1, a2, (uint64_t)a3);
  if (!v3)
  {
    id v12 = (void *)v11;
    if (v11)
    {
      sub_2439573B0();
      uint64_t v13 = (void *)sub_243957350();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      objc_msgSend(v12, sel_setLastRequestDate_, v13);

      v16[0] = 0;
      if (objc_msgSend(a3, sel_save_, v16))
      {
        id v14 = v16[0];
      }
      else
      {
        id v15 = v16[0];
        sub_243956E10();

        swift_willThrow();
      }
    }
  }
}

void sub_2437CAD8C(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, unint64_t a8)
{
  v36[1] = *(id *)MEMORY[0x263EF8340];
  type metadata accessor for ManagedInstitutionAsset();
  id v14 = (void *)static ManagedInstitutionAsset.existingAsset(withInstitutionID:in:)(a1, a2, (uint64_t)a3);
  if (v8)
  {
    uint64_t v15 = a1;
    if (qword_268D96B78 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_243957B10();
    __swift_project_value_buffer(v16, (uint64_t)qword_268D9B250);
    swift_bridgeObjectRetain();
    id v17 = v8;
    swift_bridgeObjectRetain();
    id v18 = v8;
    uint64_t v19 = sub_243957AF0();
    os_log_type_t v20 = sub_243958AF0();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v32 = a6;
      uint64_t v21 = swift_slowAlloc();
      uint64_t v30 = (void *)swift_slowAlloc();
      uint64_t v31 = (void *)swift_slowAlloc();
      v36[0] = v31;
      *(_DWORD *)uint64_t v21 = 136315394;
      swift_bridgeObjectRetain();
      sub_2433781FC(v15, a2, (uint64_t *)v36);
      sub_2439590C0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v21 + 12) = 2112;
      id v22 = v8;
      uint64_t v35 = _swift_stdlib_bridgeErrorToNSError();
      sub_2439590C0();
      void *v30 = v35;

      os_log_type_t v23 = v20;
      a1 = v15;
      _os_log_impl(&dword_243363000, v19, v23, "Query for existing asset failed for id: %s. Error: %@", (uint8_t *)v21, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_268D9CAB0);
      swift_arrayDestroy();
      MEMORY[0x245680100](v30, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x245680100](v31, -1, -1);
      uint64_t v24 = v21;
      a6 = v32;
      MEMORY[0x245680100](v24, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      a1 = v15;
    }
    goto LABEL_10;
  }
  uint64_t v25 = v14;
  if (!v14)
  {
LABEL_10:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_243403DD0(a7, a8);

    uint64_t v25 = 0;
    goto LABEL_12;
  }
  id v26 = v14;
  if (a6) {
    a6 = (void *)sub_2439582A0();
  }
  objc_msgSend(v25, sel_setEtag_, a6);

  uint64_t v27 = (void *)sub_2439570A0();
  objc_msgSend(v25, sel_setData_, v27);

LABEL_12:
  v36[0] = 0;
  if (objc_msgSend(a3, sel_save_, v36))
  {
    id v28 = v36[0];
  }
  else
  {
    id v29 = v36[0];
    sub_243956E10();

    swift_willThrow();
  }
}

uint64_t sub_2437CB1A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RawBankConnectData.Institution.Icons(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2437CB20C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_2437CB274()
{
  sub_2437C91DC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t type metadata accessor for BankConnectInstitutionAssetManager()
{
  return self;
}

uint64_t sub_2437CB2BC(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_243957010() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = v1[2];
  uint64_t v9 = v1[3];
  uint64_t v10 = v1[4];
  uint64_t v11 = (uint64_t)v1 + v5;
  double v12 = *(double *)((char *)v1 + v7);
  uint64_t v13 = *(void *)((char *)v1 + v6);
  uint64_t v14 = *(void *)((char *)v1 + v6 + 8);
  uint64_t v15 = *(void *)((char *)v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v16;
  *uint64_t v16 = v2;
  v16[1] = sub_2433A9E8C;
  return sub_2437C92BC(v12, a1, v8, v9, v10, v11, v13, v14, v15);
}

void sub_2437CB42C(id a1, char a2)
{
  if (a2) {
}
  }

uint64_t sub_2437CB438(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t objectdestroyTm_9()
{
  uint64_t v1 = sub_243957010();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
     + 16;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, v6, v5);
}

unint64_t sub_2437CB594()
{
  unint64_t result = qword_268DA0148;
  if (!qword_268DA0148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268DA0148);
  }
  return result;
}