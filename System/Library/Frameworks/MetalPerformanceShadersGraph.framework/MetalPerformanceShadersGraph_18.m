void mlir::mps::arithmeticUnaryTileKernelType<(mlir::mps::arithmeticOp)9>(uint64_t **a1, uint64_t **a2, const void **a3, const void **a4, float16x4_t a5)
{
  uint64_t ElementType;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  const void *v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  const void *v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t *v22;
  const void *v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t *v26;
  const void *v27;
  int64_t v28;
  char *v29;
  char *v30;
  const void *v31;
  int64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  const void *v35;
  int64_t v36;
  char *v37;
  char *v38;
  const void *v39;
  int64_t v40;
  uint64_t *v41;
  uint64_t *v42;
  const void *v43;
  int64_t v44;
  char *v45;
  char *v46;
  const void *v47;
  int64_t v48;
  uint64_t *v49;
  uint64_t *v50;
  const void *v51;
  int64_t v52;
  char *v53;
  char *v54;
  const void *v55;
  int64_t v56;
  uint64_t *v57;
  uint64_t *v58;
  const void *v59;
  int64_t v60;
  char *v61;
  char *v62;
  const void *v63;
  int64_t v64;
  uint64_t *v65;
  uint64_t *v66;
  const void *v67;
  int64_t v68;
  char *v69;
  char *v70;
  const void *v71;
  int64_t v72;
  uint64_t *v73;
  uint64_t *v74;
  const void *v75;
  int64_t v76;
  char *v77;
  char *v78;
  const void *v79;
  int64_t v80;
  uint64_t *v81;
  uint64_t *v82;
  const void *v83;
  int64_t v84;
  uint64_t *v85;
  uint64_t *v86;
  const void *v87;
  int64_t v88;
  uint64_t *v89;
  uint64_t *v90;
  const void *v91;
  int64_t v92;
  char *v93;
  char *v94;
  const void *v95;
  int64_t v96;
  uint64_t *v97;
  uint64_t *v98;
  const void *v99;
  int64_t v100;
  char *v101;
  char *v102;
  const void *v103;
  int64_t v104;
  uint64_t *v105;
  uint64_t *v106;
  const void *v107;
  int64_t v108;
  char *v109;
  char *v110;
  const void *v111;
  int64_t v112;
  uint64_t *v113;
  uint64_t *v114;
  const void *v115;
  int64_t v116;
  char *v117;
  char *v118;
  void *v119[3];
  void *v120[3];
  void *v121[3];
  uint64_t *v122[3];
  void *v123;
  void *v124;
  char *v125;
  uint64_t *v126;
  uint64_t *v127;
  uint64_t *v128;
  void *v129;
  void *v130;
  char *v131;
  uint64_t *v132;
  uint64_t *v133;
  uint64_t *v134;
  void *v135;
  void *v136;
  char *v137;
  uint64_t *v138;
  uint64_t *v139;
  uint64_t *v140;
  void *v141;
  void *v142;
  char *v143;
  uint64_t *v144;
  uint64_t *v145;
  uint64_t *v146;
  void *v147;
  void *v148;
  char *v149;
  uint64_t *v150;
  uint64_t *v151;
  uint64_t *v152;
  void *v153;
  void *v154;
  char *v155;
  uint64_t *v156;
  uint64_t *v157;
  uint64_t *v158;
  void *v159;
  void *v160;
  char *v161;
  uint64_t *v162;
  uint64_t *v163;
  uint64_t *v164;
  void *v165;
  void *v166;
  char *v167;
  uint64_t *v168;
  uint64_t *v169;
  uint64_t *v170;
  void *v171;
  void *v172;
  char *v173;
  uint64_t *v174;
  uint64_t *v175;
  uint64_t *v176;
  void *__p;
  void *v178;
  char *v179;
  uint64_t *v180;
  uint64_t *v181;
  uint64_t *v182;
  void *v183;
  void *v184;
  char *v185;
  uint64_t *v186;
  uint64_t *v187;
  uint64_t *v188;
  uint64_t *v189;
  uint64_t *v190;
  uint64_t *v191;
  uint64_t *v192;
  uint64_t *v193;
  uint64_t *v194;
  uint64_t *v195;
  uint64_t *v196;
  uint64_t *v197;
  uint64_t *v198;
  uint64_t *v199;
  uint64_t *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t Value;
  uint64_t v205;

  Value = *(void *)**a1;
  ElementType = mlir::TensorType::getElementType((mlir::TensorType *)&Value);
  v205 = ElementType;
  v203 = *(void *)**a2;
  v11 = mlir::TensorType::getElementType((mlir::TensorType *)&v203);
  v203 = v11;
  Value = v11;
  v12 = *(void **)(*(void *)v11 + 136);
  if (v12 == &mlir::detail::TypeIDResolver<mlir::ComplexType,void>::id)
  {
    v202 = v11;
    if (*(_UNKNOWN **)(*(void *)ElementType + 136) == &mlir::detail::TypeIDResolver<mlir::ComplexType,void>::id) {
      v13 = ElementType;
    }
    else {
      v13 = 0;
    }
    v201 = v13;
    Value = mlir::AffineMapAttr::getValue((mlir::AffineMapAttr *)&v202);
    v205 = mlir::AffineMapAttr::getValue((mlir::AffineMapAttr *)&v201);
  }
  if (mlir::Type::isF32((mlir::Type *)&Value) && mlir::Type::isF32((mlir::Type *)&v205))
  {
    if (v12 == &mlir::detail::TypeIDResolver<mlir::ComplexType,void>::id)
    {
      v198 = 0;
      v199 = 0;
      v200 = 0;
      v79 = *a3;
      v80 = (unsigned char *)a3[1] - (unsigned char *)*a3;
      if (v80)
      {
        if (v80 < 0) {
          goto LABEL_169;
        }
        v81 = (uint64_t *)operator new(v80);
        v82 = &v81[v80 >> 3];
        v198 = v81;
        v200 = v82;
        memcpy(v81, v79, v80);
        v199 = v82;
      }
      v195 = 0;
      v196 = 0;
      v197 = 0;
      v83 = *a4;
      v84 = (unsigned char *)a4[1] - (unsigned char *)*a4;
      if (v84)
      {
        if (v84 < 0) {
          goto LABEL_169;
        }
        v85 = (uint64_t *)operator new(v84);
        v86 = &v85[v84 >> 3];
        v195 = v85;
        v197 = v86;
        memcpy(v85, v83, v84);
        v196 = v86;
      }
      mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)9>(a1, a2, &v198, &v195);
      if (v195)
      {
        v196 = v195;
        operator delete(v195);
      }
      v22 = v198;
      if (v198)
      {
        v199 = v198;
        goto LABEL_167;
      }
      return;
    }
    v192 = 0;
    v193 = 0;
    v194 = 0;
    v14 = *a3;
    v15 = (unsigned char *)a3[1] - (unsigned char *)*a3;
    if (v15)
    {
      if (v15 < 0) {
        goto LABEL_169;
      }
      v16 = (uint64_t *)operator new(v15);
      v17 = &v16[v15 >> 3];
      v192 = v16;
      v194 = v17;
      memcpy(v16, v14, v15);
      v193 = v17;
    }
    v189 = 0;
    v190 = 0;
    v191 = 0;
    v18 = *a4;
    v19 = (unsigned char *)a4[1] - (unsigned char *)*a4;
    if (!v19) {
      goto LABEL_15;
    }
    if ((v19 & 0x8000000000000000) == 0)
    {
      v20 = (uint64_t *)operator new(v19);
      v21 = &v20[v19 >> 3];
      v189 = v20;
      v191 = v21;
      memcpy(v20, v18, v19);
      v190 = v21;
LABEL_15:
      mlir::mps::arithmeticUnaryTileBaseKernel<float,float,(mlir::mps::arithmeticOp)9>(a1, a2, &v192, &v189);
      if (v189)
      {
        v190 = v189;
        operator delete(v189);
      }
      v22 = v192;
      if (v192)
      {
        v193 = v192;
LABEL_167:
        operator delete(v22);
        return;
      }
      return;
    }
LABEL_169:
    abort();
  }
  if (!mlir::Type::isF32((mlir::Type *)&Value) || !mlir::Type::isF16((mlir::Type *)&v205))
  {
    if (mlir::Type::isF16((mlir::Type *)&Value) && mlir::Type::isF16((mlir::Type *)&v205))
    {
      if (v12 != &mlir::detail::TypeIDResolver<mlir::ComplexType,void>::id)
      {
        v168 = 0;
        v169 = 0;
        v170 = 0;
        v31 = *a3;
        v32 = (unsigned char *)a3[1] - (unsigned char *)*a3;
        if (v32)
        {
          if (v32 < 0) {
            goto LABEL_169;
          }
          v33 = (uint64_t *)operator new(v32);
          v34 = &v33[v32 >> 3];
          v168 = v33;
          v170 = v34;
          memcpy(v33, v31, v32);
          v169 = v34;
        }
        v165 = 0;
        v166 = 0;
        v167 = 0;
        v35 = *a4;
        v36 = (unsigned char *)a4[1] - (unsigned char *)*a4;
        if (v36)
        {
          if (v36 < 0) {
            goto LABEL_169;
          }
          v37 = (char *)operator new(v36);
          v38 = &v37[8 * (v36 >> 3)];
          v165 = v37;
          v167 = v38;
          memcpy(v37, v35, v36);
          v166 = v38;
        }
        mlir::mps::arithmeticUnaryTileBaseKernel<half,half,(mlir::mps::arithmeticOp)9>(a1, a2, &v168, (uint64_t **)&v165);
        if (v165)
        {
          v166 = v165;
          operator delete(v165);
        }
        v22 = v168;
        if (v168)
        {
          v169 = v168;
          goto LABEL_167;
        }
        return;
      }
      v175 = 0;
      v174 = 0;
      v176 = 0;
      v103 = *a3;
      v104 = (unsigned char *)a3[1] - (unsigned char *)*a3;
      if (v104)
      {
        if (v104 < 0) {
          goto LABEL_169;
        }
        v105 = (uint64_t *)operator new(v104);
        v106 = &v105[v104 >> 3];
        v174 = v105;
        v176 = v106;
        memcpy(v105, v103, v104);
        v175 = v106;
      }
      v171 = 0;
      v172 = 0;
      v173 = 0;
      v107 = *a4;
      v108 = (unsigned char *)a4[1] - (unsigned char *)*a4;
      if (v108)
      {
        if (v108 < 0) {
          goto LABEL_169;
        }
        v109 = (char *)operator new(v108);
        v110 = &v109[8 * (v108 >> 3)];
        v171 = v109;
        v173 = v110;
        memcpy(v109, v107, v108);
        v172 = v110;
      }
      mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<half,(void *)0>,(mlir::mps::arithmeticOp)9>(a1, a2, &v174, (uint64_t **)&v171);
      if (v171)
      {
        v172 = v171;
        operator delete(v171);
      }
      v22 = v174;
      if (v174)
      {
        v175 = v174;
        goto LABEL_167;
      }
      return;
    }
    if (!mlir::Type::isF16((mlir::Type *)&Value) || !mlir::Type::isF32((mlir::Type *)&v205))
    {
      if (mlir::Type::isF32((mlir::Type *)&Value) && mlir::Type::isBF16((mlir::Type *)&v205))
      {
        v150 = 0;
        v151 = 0;
        v152 = 0;
        v47 = *a3;
        v48 = (unsigned char *)a3[1] - (unsigned char *)*a3;
        if (v48)
        {
          if (v48 < 0) {
            goto LABEL_169;
          }
          v49 = (uint64_t *)operator new(v48);
          v50 = &v49[v48 >> 3];
          v150 = v49;
          v152 = v50;
          memcpy(v49, v47, v48);
          v151 = v50;
        }
        v147 = 0;
        v148 = 0;
        v149 = 0;
        v51 = *a4;
        v52 = (unsigned char *)a4[1] - (unsigned char *)*a4;
        if (v52)
        {
          if (v52 < 0) {
            goto LABEL_169;
          }
          v53 = (char *)operator new(v52);
          v54 = &v53[8 * (v52 >> 3)];
          v147 = v53;
          v149 = v54;
          memcpy(v53, v51, v52);
          v148 = v54;
        }
        mlir::mps::arithmeticUnaryTileBaseKernel<__emulated_bf16,float,(mlir::mps::arithmeticOp)9>(a1, a2, &v150, (uint64_t **)&v147);
        if (v147)
        {
          v148 = v147;
          operator delete(v147);
        }
        v22 = v150;
        if (v150)
        {
          v151 = v150;
          goto LABEL_167;
        }
        return;
      }
      if (mlir::Type::isBF16((mlir::Type *)&Value) && mlir::Type::isBF16((mlir::Type *)&v205))
      {
        v144 = 0;
        v145 = 0;
        v146 = 0;
        v55 = *a3;
        v56 = (unsigned char *)a3[1] - (unsigned char *)*a3;
        if (v56)
        {
          if (v56 < 0) {
            goto LABEL_169;
          }
          v57 = (uint64_t *)operator new(v56);
          v58 = &v57[v56 >> 3];
          v144 = v57;
          v146 = v58;
          memcpy(v57, v55, v56);
          v145 = v58;
        }
        v141 = 0;
        v142 = 0;
        v143 = 0;
        v59 = *a4;
        v60 = (unsigned char *)a4[1] - (unsigned char *)*a4;
        if (v60)
        {
          if (v60 < 0) {
            goto LABEL_169;
          }
          v61 = (char *)operator new(v60);
          v62 = &v61[8 * (v60 >> 3)];
          v141 = v61;
          v143 = v62;
          memcpy(v61, v59, v60);
          v142 = v62;
        }
        mlir::mps::arithmeticUnaryTileBaseKernel<__emulated_bf16,__emulated_bf16,(mlir::mps::arithmeticOp)9>(a1, a2, &v144, (uint64_t **)&v141);
        if (v141)
        {
          v142 = v141;
          operator delete(v141);
        }
        v22 = v144;
        if (v144)
        {
          v145 = v144;
          goto LABEL_167;
        }
        return;
      }
      if (mlir::Type::isBF16((mlir::Type *)&Value) && mlir::Type::isF32((mlir::Type *)&v205))
      {
        v138 = 0;
        v139 = 0;
        v140 = 0;
        v63 = *a3;
        v64 = (unsigned char *)a3[1] - (unsigned char *)*a3;
        if (v64)
        {
          if (v64 < 0) {
            goto LABEL_169;
          }
          v65 = (uint64_t *)operator new(v64);
          v66 = &v65[v64 >> 3];
          v138 = v65;
          v140 = v66;
          memcpy(v65, v63, v64);
          v139 = v66;
        }
        v135 = 0;
        v136 = 0;
        v137 = 0;
        v67 = *a4;
        v68 = (unsigned char *)a4[1] - (unsigned char *)*a4;
        if (v68)
        {
          if (v68 < 0) {
            goto LABEL_169;
          }
          v69 = (char *)operator new(v68);
          v70 = &v69[8 * (v68 >> 3)];
          v135 = v69;
          v137 = v70;
          memcpy(v69, v67, v68);
          v136 = v70;
        }
        mlir::mps::arithmeticUnaryTileBaseKernel<float,__emulated_bf16,(mlir::mps::arithmeticOp)9>(a1, a2, &v138, (uint64_t **)&v135);
        if (v135)
        {
          v136 = v135;
          operator delete(v135);
        }
        v22 = v138;
        if (v138)
        {
          v139 = v138;
          goto LABEL_167;
        }
        return;
      }
      if (mlir::Type::isInteger((mlir::Type *)&Value, 64))
      {
        v132 = 0;
        v133 = 0;
        v134 = 0;
        v71 = *a3;
        v72 = (unsigned char *)a3[1] - (unsigned char *)*a3;
        if (v72)
        {
          if (v72 < 0) {
            goto LABEL_169;
          }
          v73 = (uint64_t *)operator new(v72);
          v74 = &v73[v72 >> 3];
          v132 = v73;
          v134 = v74;
          memcpy(v73, v71, v72);
          v133 = v74;
        }
        v129 = 0;
        v130 = 0;
        v131 = 0;
        v75 = *a4;
        v76 = (unsigned char *)a4[1] - (unsigned char *)*a4;
        if (v76)
        {
          if (v76 < 0) {
            goto LABEL_169;
          }
          v77 = (char *)operator new(v76);
          v78 = &v77[8 * (v76 >> 3)];
          v129 = v77;
          v131 = v78;
          memcpy(v77, v75, v76);
          v130 = v78;
        }
        mlir::mps::arithmeticUnaryTileBaseKernel<long long,long long,(mlir::mps::arithmeticOp)9>(a1, a2, &v132, (uint64_t **)&v129);
        if (v129)
        {
          v130 = v129;
          operator delete(v129);
        }
        v22 = v132;
        if (v132)
        {
          v133 = v132;
          goto LABEL_167;
        }
        return;
      }
      if (!mlir::Type::isInteger((mlir::Type *)&Value, 32))
      {
        if (mlir::Type::isInteger((mlir::Type *)&Value, 16))
        {
          std::vector<long long>::vector(v122, (uint64_t)a3);
          std::vector<long long>::vector(v121, (uint64_t)a4);
          mlir::mps::arithmeticUnaryTileBaseKernel<short,short,(mlir::mps::arithmeticOp)9>(a1, a2, v122, (uint64_t **)v121);
          if (v121[0])
          {
            v121[1] = v121[0];
            operator delete(v121[0]);
          }
          v22 = v122[0];
          if (v122[0])
          {
            v122[1] = v122[0];
            goto LABEL_167;
          }
        }
        else
        {
          if (!mlir::Type::isInteger((mlir::Type *)&Value, 8) && !mlir::Type::isInteger((mlir::Type *)&Value, 1)) {
            mlir::mps::arithmeticUnaryTileKernelType<(mlir::mps::arithmeticOp)6>((mlir::Type *)&v203);
          }
          std::vector<long long>::vector(v120, (uint64_t)a3);
          std::vector<long long>::vector(v119, (uint64_t)a4);
          mlir::mps::arithmeticUnaryTileBaseKernel<signed char,signed char,(mlir::mps::arithmeticOp)9>(a1, a2, (uint64_t **)v120, (uint64_t **)v119);
          if (v119[0])
          {
            v119[1] = v119[0];
            operator delete(v119[0]);
          }
          v22 = (uint64_t *)v120[0];
          if (v120[0])
          {
            v120[1] = v120[0];
            goto LABEL_167;
          }
        }
        return;
      }
      v126 = 0;
      v127 = 0;
      v128 = 0;
      v95 = *a3;
      v96 = (unsigned char *)a3[1] - (unsigned char *)*a3;
      if (v96)
      {
        if (v96 < 0) {
          goto LABEL_169;
        }
        v97 = (uint64_t *)operator new(v96);
        v98 = &v97[v96 >> 3];
        v126 = v97;
        v128 = v98;
        memcpy(v97, v95, v96);
        v127 = v98;
      }
      v123 = 0;
      v124 = 0;
      v125 = 0;
      v99 = *a4;
      v100 = (unsigned char *)a4[1] - (unsigned char *)*a4;
      if (v100)
      {
        if (v100 < 0) {
          goto LABEL_169;
        }
        v101 = (char *)operator new(v100);
        v102 = &v101[8 * (v100 >> 3)];
        v123 = v101;
        v125 = v102;
        memcpy(v101, v99, v100);
        v124 = v102;
      }
      mlir::mps::arithmeticUnaryTileBaseKernel<int,int,(mlir::mps::arithmeticOp)9>(a1, a2, &v126, (uint64_t **)&v123);
      if (v123)
      {
        v124 = v123;
        operator delete(v123);
      }
      v22 = v126;
      if (v126)
      {
        v127 = v126;
        goto LABEL_167;
      }
      return;
    }
    if (v12 != &mlir::detail::TypeIDResolver<mlir::ComplexType,void>::id)
    {
      v156 = 0;
      v157 = 0;
      v158 = 0;
      v39 = *a3;
      v40 = (unsigned char *)a3[1] - (unsigned char *)*a3;
      if (v40)
      {
        if (v40 < 0) {
          goto LABEL_169;
        }
        v41 = (uint64_t *)operator new(v40);
        v42 = &v41[v40 >> 3];
        v156 = v41;
        v158 = v42;
        memcpy(v41, v39, v40);
        v157 = v42;
      }
      v153 = 0;
      v154 = 0;
      v155 = 0;
      v43 = *a4;
      v44 = (unsigned char *)a4[1] - (unsigned char *)*a4;
      if (v44)
      {
        if (v44 < 0) {
          goto LABEL_169;
        }
        v45 = (char *)operator new(v44);
        v46 = &v45[8 * (v44 >> 3)];
        v153 = v45;
        v155 = v46;
        memcpy(v45, v43, v44);
        v154 = v46;
      }
      mlir::mps::arithmeticUnaryTileBaseKernel<float,half,(mlir::mps::arithmeticOp)9>(a1, a2, &v156, (uint64_t **)&v153);
      if (v153)
      {
        v154 = v153;
        operator delete(v153);
      }
      v22 = v156;
      if (v156)
      {
        v157 = v156;
        goto LABEL_167;
      }
      return;
    }
    v162 = 0;
    v163 = 0;
    v164 = 0;
    v111 = *a3;
    v112 = (unsigned char *)a3[1] - (unsigned char *)*a3;
    if (v112)
    {
      if (v112 < 0) {
        goto LABEL_169;
      }
      v113 = (uint64_t *)operator new(v112);
      v114 = &v113[v112 >> 3];
      v162 = v113;
      v164 = v114;
      memcpy(v113, v111, v112);
      v163 = v114;
    }
    v159 = 0;
    v160 = 0;
    v161 = 0;
    v115 = *a4;
    v116 = (unsigned char *)a4[1] - (unsigned char *)*a4;
    if (v116)
    {
      if (v116 < 0) {
        goto LABEL_169;
      }
      v117 = (char *)operator new(v116);
      v118 = &v117[8 * (v116 >> 3)];
      v159 = v117;
      v161 = v118;
      memcpy(v117, v115, v116);
      v160 = v118;
    }
    mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<half,(void *)0>,(mlir::mps::arithmeticOp)9>(a1, a2, &v162, (uint64_t **)&v159);
    if (v159)
    {
      v160 = v159;
      operator delete(v159);
    }
    v22 = v162;
    if (v162)
    {
      v163 = v162;
      goto LABEL_167;
    }
    return;
  }
  if (v12 == &mlir::detail::TypeIDResolver<mlir::ComplexType,void>::id)
  {
    v186 = 0;
    v187 = 0;
    v188 = 0;
    v87 = *a3;
    v88 = (unsigned char *)a3[1] - (unsigned char *)*a3;
    if (v88)
    {
      if (v88 < 0) {
        goto LABEL_169;
      }
      v89 = (uint64_t *)operator new(v88);
      v90 = &v89[v88 >> 3];
      v186 = v89;
      v188 = v90;
      memcpy(v89, v87, v88);
      v187 = v90;
    }
    v184 = 0;
    v183 = 0;
    v185 = 0;
    v91 = *a4;
    v92 = (unsigned char *)a4[1] - (unsigned char *)*a4;
    if (v92)
    {
      if (v92 < 0) {
        goto LABEL_169;
      }
      v93 = (char *)operator new(v92);
      v94 = &v93[8 * (v92 >> 3)];
      v183 = v93;
      v185 = v94;
      memcpy(v93, v91, v92);
      v184 = v94;
    }
    mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)9>(a1, a2, &v186, (uint64_t **)&v183, a5);
    if (v183)
    {
      v184 = v183;
      operator delete(v183);
    }
    v22 = v186;
    if (v186)
    {
      v187 = v186;
      goto LABEL_167;
    }
    return;
  }
  v181 = 0;
  v180 = 0;
  v182 = 0;
  v23 = *a3;
  v24 = (unsigned char *)a3[1] - (unsigned char *)*a3;
  if (v24)
  {
    if (v24 < 0) {
      goto LABEL_169;
    }
    v25 = (uint64_t *)operator new(v24);
    v26 = &v25[v24 >> 3];
    v180 = v25;
    v182 = v26;
    memcpy(v25, v23, v24);
    v181 = v26;
  }
  v178 = 0;
  __p = 0;
  v179 = 0;
  v27 = *a4;
  v28 = (unsigned char *)a4[1] - (unsigned char *)*a4;
  if (v28)
  {
    if (v28 < 0) {
      goto LABEL_169;
    }
    v29 = (char *)operator new(v28);
    v30 = &v29[8 * (v28 >> 3)];
    __p = v29;
    v179 = v30;
    memcpy(v29, v27, v28);
    v178 = v30;
  }
  mlir::mps::arithmeticUnaryTileBaseKernel<half,float,(mlir::mps::arithmeticOp)9>(a1, a2, &v180, (uint64_t **)&__p);
  if (__p)
  {
    v178 = __p;
    operator delete(__p);
  }
  v22 = v180;
  if (v180)
  {
    v181 = v180;
    goto LABEL_167;
  }
}

void mlir::mps::arithmeticUnaryTileKernelType<(mlir::mps::arithmeticOp)10>(uint64_t **a1, uint64_t **a2, const void **a3, const void **a4)
{
  uint64_t Value = *(void *)**a1;
  uint64_t ElementType = mlir::TensorType::getElementType((mlir::TensorType *)&Value);
  uint64_t v203 = ElementType;
  uint64_t v201 = *(void *)**a2;
  uint64_t v9 = mlir::TensorType::getElementType((mlir::TensorType *)&v201);
  uint64_t v201 = v9;
  uint64_t Value = v9;
  v10 = *(void **)(*(void *)v9 + 136);
  if (v10 == &mlir::detail::TypeIDResolver<mlir::ComplexType,void>::id)
  {
    uint64_t v200 = v9;
    if (*(_UNKNOWN **)(*(void *)ElementType + 136) == &mlir::detail::TypeIDResolver<mlir::ComplexType,void>::id) {
      uint64_t v11 = ElementType;
    }
    else {
      uint64_t v11 = 0;
    }
    uint64_t v199 = v11;
    uint64_t Value = mlir::AffineMapAttr::getValue((mlir::AffineMapAttr *)&v200);
    uint64_t v203 = mlir::AffineMapAttr::getValue((mlir::AffineMapAttr *)&v199);
  }
  if (mlir::Type::isF32((mlir::Type *)&Value) && mlir::Type::isF32((mlir::Type *)&v203))
  {
    if (v10 == &mlir::detail::TypeIDResolver<mlir::ComplexType,void>::id)
    {
      v196 = 0;
      v197 = 0;
      v198 = 0;
      v77 = *a3;
      int64_t v78 = (unsigned char *)a3[1] - (unsigned char *)*a3;
      if (v78)
      {
        if (v78 < 0) {
          goto LABEL_169;
        }
        v79 = (uint64_t *)operator new(v78);
        v80 = &v79[v78 >> 3];
        v196 = v79;
        v198 = v80;
        memcpy(v79, v77, v78);
        v197 = v80;
      }
      v193 = 0;
      v194 = 0;
      v195 = 0;
      v81 = *a4;
      int64_t v82 = (unsigned char *)a4[1] - (unsigned char *)*a4;
      if (v82)
      {
        if (v82 < 0) {
          goto LABEL_169;
        }
        v83 = (uint64_t *)operator new(v82);
        v84 = &v83[v82 >> 3];
        v193 = v83;
        v195 = v84;
        memcpy(v83, v81, v82);
        v194 = v84;
      }
      mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)10>(a1, a2, &v196, &v193);
      if (v193)
      {
        v194 = v193;
        operator delete(v193);
      }
      v20 = v196;
      if (v196)
      {
        v197 = v196;
        goto LABEL_167;
      }
      return;
    }
    v190 = 0;
    v191 = 0;
    v192 = 0;
    v12 = *a3;
    int64_t v13 = (unsigned char *)a3[1] - (unsigned char *)*a3;
    if (v13)
    {
      if (v13 < 0) {
        goto LABEL_169;
      }
      v14 = (uint64_t *)operator new(v13);
      v15 = &v14[v13 >> 3];
      v190 = v14;
      v192 = v15;
      memcpy(v14, v12, v13);
      v191 = v15;
    }
    v187 = 0;
    v188 = 0;
    v189 = 0;
    v16 = *a4;
    int64_t v17 = (unsigned char *)a4[1] - (unsigned char *)*a4;
    if (!v17) {
      goto LABEL_15;
    }
    if ((v17 & 0x8000000000000000) == 0)
    {
      v18 = (uint64_t *)operator new(v17);
      v19 = &v18[v17 >> 3];
      v187 = v18;
      v189 = v19;
      memcpy(v18, v16, v17);
      v188 = v19;
LABEL_15:
      mlir::mps::arithmeticUnaryTileBaseKernel<float,float,(mlir::mps::arithmeticOp)10>(a1, a2, &v190, &v187);
      if (v187)
      {
        v188 = v187;
        operator delete(v187);
      }
      v20 = v190;
      if (v190)
      {
        v191 = v190;
LABEL_167:
        operator delete(v20);
        return;
      }
      return;
    }
LABEL_169:
    abort();
  }
  if (!mlir::Type::isF32((mlir::Type *)&Value) || !mlir::Type::isF16((mlir::Type *)&v203))
  {
    if (mlir::Type::isF16((mlir::Type *)&Value) && mlir::Type::isF16((mlir::Type *)&v203))
    {
      if (v10 != &mlir::detail::TypeIDResolver<mlir::ComplexType,void>::id)
      {
        v166 = 0;
        v167 = 0;
        v168 = 0;
        v29 = *a3;
        int64_t v30 = (unsigned char *)a3[1] - (unsigned char *)*a3;
        if (v30)
        {
          if (v30 < 0) {
            goto LABEL_169;
          }
          v31 = (uint64_t *)operator new(v30);
          v32 = (char *)&v31[v30 >> 3];
          v166 = v31;
          v168 = v32;
          memcpy(v31, v29, v30);
          v167 = (uint64_t *)v32;
        }
        v163 = 0;
        v164 = 0;
        v165 = 0;
        v33 = *a4;
        int64_t v34 = (unsigned char *)a4[1] - (unsigned char *)*a4;
        if (v34)
        {
          if (v34 < 0) {
            goto LABEL_169;
          }
          v35 = (char *)operator new(v34);
          v36 = &v35[8 * (v34 >> 3)];
          v163 = v35;
          v165 = v36;
          memcpy(v35, v33, v34);
          v164 = v36;
        }
        mlir::mps::arithmeticUnaryTileBaseKernel<half,half,(mlir::mps::arithmeticOp)10>(a1, a2, (uint64_t)&v166, (uint64_t **)&v163);
        if (v163)
        {
          v164 = v163;
          operator delete(v163);
        }
        v20 = v166;
        if (v166)
        {
          v167 = v166;
          goto LABEL_167;
        }
        return;
      }
      v173 = 0;
      v172 = 0;
      v174 = 0;
      v101 = *a3;
      int64_t v102 = (unsigned char *)a3[1] - (unsigned char *)*a3;
      if (v102)
      {
        if (v102 < 0) {
          goto LABEL_169;
        }
        v103 = (uint64_t *)operator new(v102);
        v104 = &v103[v102 >> 3];
        v172 = v103;
        v174 = v104;
        memcpy(v103, v101, v102);
        v173 = v104;
      }
      v169 = 0;
      v170 = 0;
      v171 = 0;
      v105 = *a4;
      int64_t v106 = (unsigned char *)a4[1] - (unsigned char *)*a4;
      if (v106)
      {
        if (v106 < 0) {
          goto LABEL_169;
        }
        v107 = (char *)operator new(v106);
        v108 = &v107[8 * (v106 >> 3)];
        v169 = v107;
        v171 = v108;
        memcpy(v107, v105, v106);
        v170 = v108;
      }
      mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<half,(void *)0>,(mlir::mps::arithmeticOp)10>(a1, a2, &v172, (uint64_t **)&v169);
      if (v169)
      {
        v170 = v169;
        operator delete(v169);
      }
      v20 = v172;
      if (v172)
      {
        v173 = v172;
        goto LABEL_167;
      }
      return;
    }
    if (!mlir::Type::isF16((mlir::Type *)&Value) || !mlir::Type::isF32((mlir::Type *)&v203))
    {
      if (mlir::Type::isF32((mlir::Type *)&Value) && mlir::Type::isBF16((mlir::Type *)&v203))
      {
        v148 = 0;
        v149 = 0;
        v150 = 0;
        v45 = *a3;
        int64_t v46 = (unsigned char *)a3[1] - (unsigned char *)*a3;
        if (v46)
        {
          if (v46 < 0) {
            goto LABEL_169;
          }
          v47 = (uint64_t *)operator new(v46);
          v48 = &v47[v46 >> 3];
          v148 = v47;
          v150 = v48;
          memcpy(v47, v45, v46);
          v149 = v48;
        }
        v145 = 0;
        v146 = 0;
        v147 = 0;
        v49 = *a4;
        int64_t v50 = (unsigned char *)a4[1] - (unsigned char *)*a4;
        if (v50)
        {
          if (v50 < 0) {
            goto LABEL_169;
          }
          v51 = (char *)operator new(v50);
          v52 = &v51[8 * (v50 >> 3)];
          v145 = v51;
          v147 = v52;
          memcpy(v51, v49, v50);
          v146 = v52;
        }
        mlir::mps::arithmeticUnaryTileBaseKernel<__emulated_bf16,float,(mlir::mps::arithmeticOp)10>(a1, a2, &v148, (uint64_t **)&v145);
        if (v145)
        {
          v146 = v145;
          operator delete(v145);
        }
        v20 = v148;
        if (v148)
        {
          v149 = v148;
          goto LABEL_167;
        }
        return;
      }
      if (mlir::Type::isBF16((mlir::Type *)&Value) && mlir::Type::isBF16((mlir::Type *)&v203))
      {
        v142 = 0;
        v143 = 0;
        v144 = 0;
        v53 = *a3;
        int64_t v54 = (unsigned char *)a3[1] - (unsigned char *)*a3;
        if (v54)
        {
          if (v54 < 0) {
            goto LABEL_169;
          }
          v55 = (uint64_t *)operator new(v54);
          v56 = &v55[v54 >> 3];
          v142 = v55;
          v144 = v56;
          memcpy(v55, v53, v54);
          v143 = v56;
        }
        v139 = 0;
        v140 = 0;
        v141 = 0;
        v57 = *a4;
        int64_t v58 = (unsigned char *)a4[1] - (unsigned char *)*a4;
        if (v58)
        {
          if (v58 < 0) {
            goto LABEL_169;
          }
          v59 = (char *)operator new(v58);
          v60 = &v59[8 * (v58 >> 3)];
          v139 = v59;
          v141 = v60;
          memcpy(v59, v57, v58);
          v140 = v60;
        }
        mlir::mps::arithmeticUnaryTileBaseKernel<__emulated_bf16,__emulated_bf16,(mlir::mps::arithmeticOp)10>(a1, a2, &v142, (uint64_t **)&v139);
        if (v139)
        {
          v140 = v139;
          operator delete(v139);
        }
        v20 = v142;
        if (v142)
        {
          v143 = v142;
          goto LABEL_167;
        }
        return;
      }
      if (mlir::Type::isBF16((mlir::Type *)&Value) && mlir::Type::isF32((mlir::Type *)&v203))
      {
        v136 = 0;
        v137 = 0;
        v138 = 0;
        v61 = *a3;
        int64_t v62 = (unsigned char *)a3[1] - (unsigned char *)*a3;
        if (v62)
        {
          if (v62 < 0) {
            goto LABEL_169;
          }
          v63 = (uint64_t *)operator new(v62);
          v64 = &v63[v62 >> 3];
          v136 = v63;
          v138 = v64;
          memcpy(v63, v61, v62);
          v137 = v64;
        }
        v133 = 0;
        v134 = 0;
        v135 = 0;
        v65 = *a4;
        int64_t v66 = (unsigned char *)a4[1] - (unsigned char *)*a4;
        if (v66)
        {
          if (v66 < 0) {
            goto LABEL_169;
          }
          v67 = (char *)operator new(v66);
          v68 = &v67[8 * (v66 >> 3)];
          v133 = v67;
          v135 = v68;
          memcpy(v67, v65, v66);
          v134 = v68;
        }
        mlir::mps::arithmeticUnaryTileBaseKernel<float,__emulated_bf16,(mlir::mps::arithmeticOp)10>(a1, a2, &v136, (uint64_t **)&v133);
        if (v133)
        {
          v134 = v133;
          operator delete(v133);
        }
        v20 = v136;
        if (v136)
        {
          v137 = v136;
          goto LABEL_167;
        }
        return;
      }
      if (mlir::Type::isInteger((mlir::Type *)&Value, 64))
      {
        v130 = 0;
        v131 = 0;
        v132 = 0;
        v69 = *a3;
        int64_t v70 = (unsigned char *)a3[1] - (unsigned char *)*a3;
        if (v70)
        {
          if (v70 < 0) {
            goto LABEL_169;
          }
          v71 = (uint64_t *)operator new(v70);
          v72 = &v71[v70 >> 3];
          v130 = v71;
          v132 = v72;
          memcpy(v71, v69, v70);
          v131 = v72;
        }
        v127 = 0;
        v128 = 0;
        v129 = 0;
        v73 = *a4;
        int64_t v74 = (unsigned char *)a4[1] - (unsigned char *)*a4;
        if (v74)
        {
          if (v74 < 0) {
            goto LABEL_169;
          }
          v75 = (char *)operator new(v74);
          v76 = &v75[8 * (v74 >> 3)];
          v127 = v75;
          v129 = v76;
          memcpy(v75, v73, v74);
          v128 = v76;
        }
        mlir::mps::arithmeticUnaryTileBaseKernel<long long,long long,(mlir::mps::arithmeticOp)10>(a1, a2, &v130, (uint64_t **)&v127);
        if (v127)
        {
          v128 = v127;
          operator delete(v127);
        }
        v20 = v130;
        if (v130)
        {
          v131 = v130;
          goto LABEL_167;
        }
        return;
      }
      if (!mlir::Type::isInteger((mlir::Type *)&Value, 32))
      {
        if (mlir::Type::isInteger((mlir::Type *)&Value, 16))
        {
          std::vector<long long>::vector(v120, (uint64_t)a3);
          std::vector<long long>::vector(v119, (uint64_t)a4);
          mlir::mps::arithmeticUnaryTileBaseKernel<short,short,(mlir::mps::arithmeticOp)10>(a1, a2, v120, (uint64_t **)v119);
          if (v119[0])
          {
            v119[1] = v119[0];
            operator delete(v119[0]);
          }
          v20 = v120[0];
          if (v120[0])
          {
            v120[1] = v120[0];
            goto LABEL_167;
          }
        }
        else
        {
          if (!mlir::Type::isInteger((mlir::Type *)&Value, 8) && !mlir::Type::isInteger((mlir::Type *)&Value, 1)) {
            mlir::mps::arithmeticUnaryTileKernelType<(mlir::mps::arithmeticOp)6>((mlir::Type *)&v201);
          }
          std::vector<long long>::vector(v118, (uint64_t)a3);
          std::vector<long long>::vector(v117, (uint64_t)a4);
          mlir::mps::arithmeticUnaryTileBaseKernel<signed char,signed char,(mlir::mps::arithmeticOp)10>(a1, a2, (uint64_t **)v118, (uint64_t **)v117);
          if (v117[0])
          {
            v117[1] = v117[0];
            operator delete(v117[0]);
          }
          v20 = (uint64_t *)v118[0];
          if (v118[0])
          {
            v118[1] = v118[0];
            goto LABEL_167;
          }
        }
        return;
      }
      v124 = 0;
      v125 = 0;
      v126 = 0;
      v93 = *a3;
      int64_t v94 = (unsigned char *)a3[1] - (unsigned char *)*a3;
      if (v94)
      {
        if (v94 < 0) {
          goto LABEL_169;
        }
        v95 = (uint64_t *)operator new(v94);
        v96 = &v95[v94 >> 3];
        v124 = v95;
        v126 = v96;
        memcpy(v95, v93, v94);
        v125 = v96;
      }
      v121 = 0;
      v122 = 0;
      v123 = 0;
      v97 = *a4;
      int64_t v98 = (unsigned char *)a4[1] - (unsigned char *)*a4;
      if (v98)
      {
        if (v98 < 0) {
          goto LABEL_169;
        }
        v99 = (char *)operator new(v98);
        v100 = &v99[8 * (v98 >> 3)];
        v121 = v99;
        v123 = v100;
        memcpy(v99, v97, v98);
        v122 = v100;
      }
      mlir::mps::arithmeticUnaryTileBaseKernel<int,int,(mlir::mps::arithmeticOp)10>(a1, a2, &v124, (uint64_t **)&v121);
      if (v121)
      {
        v122 = v121;
        operator delete(v121);
      }
      v20 = v124;
      if (v124)
      {
        v125 = v124;
        goto LABEL_167;
      }
      return;
    }
    if (v10 != &mlir::detail::TypeIDResolver<mlir::ComplexType,void>::id)
    {
      v154 = 0;
      v155 = 0;
      v156 = 0;
      v37 = *a3;
      int64_t v38 = (unsigned char *)a3[1] - (unsigned char *)*a3;
      if (v38)
      {
        if (v38 < 0) {
          goto LABEL_169;
        }
        v39 = (uint64_t *)operator new(v38);
        v40 = &v39[v38 >> 3];
        v154 = v39;
        v156 = v40;
        memcpy(v39, v37, v38);
        v155 = v40;
      }
      v151 = 0;
      v152 = 0;
      v153 = 0;
      v41 = *a4;
      int64_t v42 = (unsigned char *)a4[1] - (unsigned char *)*a4;
      if (v42)
      {
        if (v42 < 0) {
          goto LABEL_169;
        }
        v43 = (char *)operator new(v42);
        v44 = &v43[8 * (v42 >> 3)];
        v151 = v43;
        v153 = v44;
        memcpy(v43, v41, v42);
        v152 = v44;
      }
      mlir::mps::arithmeticUnaryTileBaseKernel<float,half,(mlir::mps::arithmeticOp)10>(a1, a2, &v154, (uint64_t **)&v151);
      if (v151)
      {
        v152 = v151;
        operator delete(v151);
      }
      v20 = v154;
      if (v154)
      {
        v155 = v154;
        goto LABEL_167;
      }
      return;
    }
    v160 = 0;
    v161 = 0;
    v162 = 0;
    v109 = *a3;
    int64_t v110 = (unsigned char *)a3[1] - (unsigned char *)*a3;
    if (v110)
    {
      if (v110 < 0) {
        goto LABEL_169;
      }
      v111 = (uint64_t *)operator new(v110);
      v112 = &v111[v110 >> 3];
      v160 = v111;
      v162 = v112;
      memcpy(v111, v109, v110);
      v161 = v112;
    }
    v157 = 0;
    v158 = 0;
    v159 = 0;
    v113 = *a4;
    int64_t v114 = (unsigned char *)a4[1] - (unsigned char *)*a4;
    if (v114)
    {
      if (v114 < 0) {
        goto LABEL_169;
      }
      v115 = (char *)operator new(v114);
      v116 = &v115[8 * (v114 >> 3)];
      v157 = v115;
      v159 = v116;
      memcpy(v115, v113, v114);
      v158 = v116;
    }
    mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<half,(void *)0>,(mlir::mps::arithmeticOp)10>(a1, a2, &v160, (uint64_t **)&v157);
    if (v157)
    {
      v158 = v157;
      operator delete(v157);
    }
    v20 = v160;
    if (v160)
    {
      v161 = v160;
      goto LABEL_167;
    }
    return;
  }
  if (v10 == &mlir::detail::TypeIDResolver<mlir::ComplexType,void>::id)
  {
    v184 = 0;
    v185 = 0;
    v186 = 0;
    v85 = *a3;
    int64_t v86 = (unsigned char *)a3[1] - (unsigned char *)*a3;
    if (v86)
    {
      if (v86 < 0) {
        goto LABEL_169;
      }
      v87 = (uint64_t *)operator new(v86);
      v88 = &v87[v86 >> 3];
      v184 = v87;
      v186 = v88;
      memcpy(v87, v85, v86);
      v185 = v88;
    }
    v182 = 0;
    v181 = 0;
    v183 = 0;
    v89 = *a4;
    int64_t v90 = (unsigned char *)a4[1] - (unsigned char *)*a4;
    if (v90)
    {
      if (v90 < 0) {
        goto LABEL_169;
      }
      v91 = (char *)operator new(v90);
      v92 = &v91[8 * (v90 >> 3)];
      v181 = v91;
      v183 = v92;
      memcpy(v91, v89, v90);
      v182 = v92;
    }
    mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)10>(a1, a2, &v184, (uint64_t **)&v181);
    if (v181)
    {
      v182 = v181;
      operator delete(v181);
    }
    v20 = v184;
    if (v184)
    {
      v185 = v184;
      goto LABEL_167;
    }
    return;
  }
  v179 = 0;
  v178 = 0;
  v180 = 0;
  v21 = *a3;
  int64_t v22 = (unsigned char *)a3[1] - (unsigned char *)*a3;
  if (v22)
  {
    if (v22 < 0) {
      goto LABEL_169;
    }
    v23 = (uint64_t *)operator new(v22);
    v24 = (char *)&v23[v22 >> 3];
    v178 = v23;
    v180 = v24;
    memcpy(v23, v21, v22);
    v179 = (uint64_t *)v24;
  }
  v176 = 0;
  __p = 0;
  v177 = 0;
  v25 = *a4;
  int64_t v26 = (unsigned char *)a4[1] - (unsigned char *)*a4;
  if (v26)
  {
    if (v26 < 0) {
      goto LABEL_169;
    }
    v27 = (char *)operator new(v26);
    v28 = &v27[8 * (v26 >> 3)];
    __p = v27;
    v177 = v28;
    memcpy(v27, v25, v26);
    v176 = v28;
  }
  mlir::mps::arithmeticUnaryTileBaseKernel<half,float,(mlir::mps::arithmeticOp)10>(a1, a2, (uint64_t)&v178, (uint64_t **)&__p);
  if (__p)
  {
    v176 = __p;
    operator delete(__p);
  }
  v20 = v178;
  if (v178)
  {
    v179 = v178;
    goto LABEL_167;
  }
}

void mlir::mps::arithmeticUnaryTileKernelType<(mlir::mps::arithmeticOp)11>(uint64_t **a1, uint64_t **a2, const void **a3, const void **a4, float16x4_t a5)
{
  uint64_t Value = *(void *)**a1;
  uint64_t ElementType = mlir::TensorType::getElementType((mlir::TensorType *)&Value);
  uint64_t v205 = ElementType;
  uint64_t v203 = *(void *)**a2;
  uint64_t v11 = mlir::TensorType::getElementType((mlir::TensorType *)&v203);
  uint64_t v203 = v11;
  uint64_t Value = v11;
  v12 = *(void **)(*(void *)v11 + 136);
  if (v12 == &mlir::detail::TypeIDResolver<mlir::ComplexType,void>::id)
  {
    uint64_t v202 = v11;
    if (*(_UNKNOWN **)(*(void *)ElementType + 136) == &mlir::detail::TypeIDResolver<mlir::ComplexType,void>::id) {
      uint64_t v13 = ElementType;
    }
    else {
      uint64_t v13 = 0;
    }
    uint64_t v201 = v13;
    uint64_t Value = mlir::AffineMapAttr::getValue((mlir::AffineMapAttr *)&v202);
    uint64_t v205 = mlir::AffineMapAttr::getValue((mlir::AffineMapAttr *)&v201);
  }
  if (mlir::Type::isF32((mlir::Type *)&Value) && mlir::Type::isF32((mlir::Type *)&v205))
  {
    if (v12 == &mlir::detail::TypeIDResolver<mlir::ComplexType,void>::id)
    {
      v198 = 0;
      uint64_t v199 = 0;
      uint64_t v200 = 0;
      v79 = *a3;
      int64_t v80 = (unsigned char *)a3[1] - (unsigned char *)*a3;
      if (v80)
      {
        if (v80 < 0) {
          goto LABEL_169;
        }
        v81 = (uint64_t *)operator new(v80);
        int64_t v82 = &v81[v80 >> 3];
        v198 = v81;
        uint64_t v200 = v82;
        memcpy(v81, v79, v80);
        uint64_t v199 = v82;
      }
      v195 = 0;
      v196 = 0;
      v197 = 0;
      v83 = *a4;
      int64_t v84 = (unsigned char *)a4[1] - (unsigned char *)*a4;
      if (v84)
      {
        if (v84 < 0) {
          goto LABEL_169;
        }
        v85 = (uint64_t *)operator new(v84);
        int64_t v86 = &v85[v84 >> 3];
        v195 = v85;
        v197 = v86;
        memcpy(v85, v83, v84);
        v196 = v86;
      }
      mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)11>(a1, a2, &v198, &v195);
      if (v195)
      {
        v196 = v195;
        operator delete(v195);
      }
      int64_t v22 = v198;
      if (v198)
      {
        uint64_t v199 = v198;
        goto LABEL_167;
      }
      return;
    }
    v192 = 0;
    v193 = 0;
    v194 = 0;
    v14 = *a3;
    int64_t v15 = (unsigned char *)a3[1] - (unsigned char *)*a3;
    if (v15)
    {
      if (v15 < 0) {
        goto LABEL_169;
      }
      v16 = (uint64_t *)operator new(v15);
      int64_t v17 = &v16[v15 >> 3];
      v192 = v16;
      v194 = v17;
      memcpy(v16, v14, v15);
      v193 = v17;
    }
    v189 = 0;
    v190 = 0;
    v191 = 0;
    v18 = *a4;
    int64_t v19 = (unsigned char *)a4[1] - (unsigned char *)*a4;
    if (!v19) {
      goto LABEL_15;
    }
    if ((v19 & 0x8000000000000000) == 0)
    {
      v20 = (uint64_t *)operator new(v19);
      v21 = &v20[v19 >> 3];
      v189 = v20;
      v191 = v21;
      memcpy(v20, v18, v19);
      v190 = v21;
LABEL_15:
      mlir::mps::arithmeticUnaryTileBaseKernel<float,float,(mlir::mps::arithmeticOp)11>(a1, a2, &v192, &v189);
      if (v189)
      {
        v190 = v189;
        operator delete(v189);
      }
      int64_t v22 = v192;
      if (v192)
      {
        v193 = v192;
LABEL_167:
        operator delete(v22);
        return;
      }
      return;
    }
LABEL_169:
    abort();
  }
  if (!mlir::Type::isF32((mlir::Type *)&Value) || !mlir::Type::isF16((mlir::Type *)&v205))
  {
    if (mlir::Type::isF16((mlir::Type *)&Value) && mlir::Type::isF16((mlir::Type *)&v205))
    {
      if (v12 != &mlir::detail::TypeIDResolver<mlir::ComplexType,void>::id)
      {
        v168 = 0;
        v169 = 0;
        v170 = 0;
        v31 = *a3;
        int64_t v32 = (unsigned char *)a3[1] - (unsigned char *)*a3;
        if (v32)
        {
          if (v32 < 0) {
            goto LABEL_169;
          }
          v33 = (uint64_t *)operator new(v32);
          int64_t v34 = &v33[v32 >> 3];
          v168 = v33;
          v170 = v34;
          memcpy(v33, v31, v32);
          v169 = v34;
        }
        v165 = 0;
        v166 = 0;
        v167 = 0;
        v35 = *a4;
        int64_t v36 = (unsigned char *)a4[1] - (unsigned char *)*a4;
        if (v36)
        {
          if (v36 < 0) {
            goto LABEL_169;
          }
          v37 = (char *)operator new(v36);
          int64_t v38 = &v37[8 * (v36 >> 3)];
          v165 = v37;
          v167 = v38;
          memcpy(v37, v35, v36);
          v166 = v38;
        }
        mlir::mps::arithmeticUnaryTileBaseKernel<half,half,(mlir::mps::arithmeticOp)11>(a1, a2, &v168, (uint64_t **)&v165);
        if (v165)
        {
          v166 = v165;
          operator delete(v165);
        }
        int64_t v22 = v168;
        if (v168)
        {
          v169 = v168;
          goto LABEL_167;
        }
        return;
      }
      v175 = 0;
      v174 = 0;
      v176 = 0;
      v103 = *a3;
      int64_t v104 = (unsigned char *)a3[1] - (unsigned char *)*a3;
      if (v104)
      {
        if (v104 < 0) {
          goto LABEL_169;
        }
        v105 = (uint64_t *)operator new(v104);
        int64_t v106 = &v105[v104 >> 3];
        v174 = v105;
        v176 = v106;
        memcpy(v105, v103, v104);
        v175 = v106;
      }
      v171 = 0;
      v172 = 0;
      v173 = 0;
      v107 = *a4;
      int64_t v108 = (unsigned char *)a4[1] - (unsigned char *)*a4;
      if (v108)
      {
        if (v108 < 0) {
          goto LABEL_169;
        }
        v109 = (char *)operator new(v108);
        int64_t v110 = &v109[8 * (v108 >> 3)];
        v171 = v109;
        v173 = v110;
        memcpy(v109, v107, v108);
        v172 = v110;
      }
      mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<half,(void *)0>,(mlir::mps::arithmeticOp)11>(a1, a2, &v174, (uint64_t **)&v171);
      if (v171)
      {
        v172 = v171;
        operator delete(v171);
      }
      int64_t v22 = v174;
      if (v174)
      {
        v175 = v174;
        goto LABEL_167;
      }
      return;
    }
    if (!mlir::Type::isF16((mlir::Type *)&Value) || !mlir::Type::isF32((mlir::Type *)&v205))
    {
      if (mlir::Type::isF32((mlir::Type *)&Value) && mlir::Type::isBF16((mlir::Type *)&v205))
      {
        v150 = 0;
        v151 = 0;
        v152 = 0;
        v47 = *a3;
        int64_t v48 = (unsigned char *)a3[1] - (unsigned char *)*a3;
        if (v48)
        {
          if (v48 < 0) {
            goto LABEL_169;
          }
          v49 = (uint64_t *)operator new(v48);
          int64_t v50 = &v49[v48 >> 3];
          v150 = v49;
          v152 = v50;
          memcpy(v49, v47, v48);
          v151 = v50;
        }
        v147 = 0;
        v148 = 0;
        v149 = 0;
        v51 = *a4;
        int64_t v52 = (unsigned char *)a4[1] - (unsigned char *)*a4;
        if (v52)
        {
          if (v52 < 0) {
            goto LABEL_169;
          }
          v53 = (char *)operator new(v52);
          int64_t v54 = &v53[8 * (v52 >> 3)];
          v147 = v53;
          v149 = v54;
          memcpy(v53, v51, v52);
          v148 = v54;
        }
        mlir::mps::arithmeticUnaryTileBaseKernel<__emulated_bf16,float,(mlir::mps::arithmeticOp)11>(a1, a2, &v150, (uint64_t **)&v147);
        if (v147)
        {
          v148 = v147;
          operator delete(v147);
        }
        int64_t v22 = v150;
        if (v150)
        {
          v151 = v150;
          goto LABEL_167;
        }
        return;
      }
      if (mlir::Type::isBF16((mlir::Type *)&Value) && mlir::Type::isBF16((mlir::Type *)&v205))
      {
        v144 = 0;
        v145 = 0;
        v146 = 0;
        v55 = *a3;
        int64_t v56 = (unsigned char *)a3[1] - (unsigned char *)*a3;
        if (v56)
        {
          if (v56 < 0) {
            goto LABEL_169;
          }
          v57 = (uint64_t *)operator new(v56);
          int64_t v58 = &v57[v56 >> 3];
          v144 = v57;
          v146 = v58;
          memcpy(v57, v55, v56);
          v145 = v58;
        }
        v141 = 0;
        v142 = 0;
        v143 = 0;
        v59 = *a4;
        int64_t v60 = (unsigned char *)a4[1] - (unsigned char *)*a4;
        if (v60)
        {
          if (v60 < 0) {
            goto LABEL_169;
          }
          v61 = (char *)operator new(v60);
          int64_t v62 = &v61[8 * (v60 >> 3)];
          v141 = v61;
          v143 = v62;
          memcpy(v61, v59, v60);
          v142 = v62;
        }
        mlir::mps::arithmeticUnaryTileBaseKernel<__emulated_bf16,__emulated_bf16,(mlir::mps::arithmeticOp)11>(a1, a2, &v144, (uint64_t **)&v141);
        if (v141)
        {
          v142 = v141;
          operator delete(v141);
        }
        int64_t v22 = v144;
        if (v144)
        {
          v145 = v144;
          goto LABEL_167;
        }
        return;
      }
      if (mlir::Type::isBF16((mlir::Type *)&Value) && mlir::Type::isF32((mlir::Type *)&v205))
      {
        v138 = 0;
        v139 = 0;
        v140 = 0;
        v63 = *a3;
        int64_t v64 = (unsigned char *)a3[1] - (unsigned char *)*a3;
        if (v64)
        {
          if (v64 < 0) {
            goto LABEL_169;
          }
          v65 = (uint64_t *)operator new(v64);
          int64_t v66 = &v65[v64 >> 3];
          v138 = v65;
          v140 = v66;
          memcpy(v65, v63, v64);
          v139 = v66;
        }
        v135 = 0;
        v136 = 0;
        v137 = 0;
        v67 = *a4;
        int64_t v68 = (unsigned char *)a4[1] - (unsigned char *)*a4;
        if (v68)
        {
          if (v68 < 0) {
            goto LABEL_169;
          }
          v69 = (char *)operator new(v68);
          int64_t v70 = &v69[8 * (v68 >> 3)];
          v135 = v69;
          v137 = v70;
          memcpy(v69, v67, v68);
          v136 = v70;
        }
        mlir::mps::arithmeticUnaryTileBaseKernel<float,__emulated_bf16,(mlir::mps::arithmeticOp)11>(a1, a2, &v138, (uint64_t **)&v135);
        if (v135)
        {
          v136 = v135;
          operator delete(v135);
        }
        int64_t v22 = v138;
        if (v138)
        {
          v139 = v138;
          goto LABEL_167;
        }
        return;
      }
      if (mlir::Type::isInteger((mlir::Type *)&Value, 64))
      {
        v132 = 0;
        v133 = 0;
        v134 = 0;
        v71 = *a3;
        int64_t v72 = (unsigned char *)a3[1] - (unsigned char *)*a3;
        if (v72)
        {
          if (v72 < 0) {
            goto LABEL_169;
          }
          v73 = (uint64_t *)operator new(v72);
          int64_t v74 = &v73[v72 >> 3];
          v132 = v73;
          v134 = v74;
          memcpy(v73, v71, v72);
          v133 = v74;
        }
        v129 = 0;
        v130 = 0;
        v131 = 0;
        v75 = *a4;
        int64_t v76 = (unsigned char *)a4[1] - (unsigned char *)*a4;
        if (v76)
        {
          if (v76 < 0) {
            goto LABEL_169;
          }
          v77 = (char *)operator new(v76);
          int64_t v78 = &v77[8 * (v76 >> 3)];
          v129 = v77;
          v131 = v78;
          memcpy(v77, v75, v76);
          v130 = v78;
        }
        mlir::mps::arithmeticUnaryTileBaseKernel<long long,long long,(mlir::mps::arithmeticOp)7>(a1, a2, &v132, (uint64_t **)&v129);
        if (v129)
        {
          v130 = v129;
          operator delete(v129);
        }
        int64_t v22 = v132;
        if (v132)
        {
          v133 = v132;
          goto LABEL_167;
        }
        return;
      }
      if (!mlir::Type::isInteger((mlir::Type *)&Value, 32))
      {
        if (mlir::Type::isInteger((mlir::Type *)&Value, 16))
        {
          std::vector<long long>::vector(v122, (uint64_t)a3);
          std::vector<long long>::vector(v121, (uint64_t)a4);
          mlir::mps::arithmeticUnaryTileBaseKernel<short,short,(mlir::mps::arithmeticOp)7>(a1, a2, v122, (uint64_t **)v121);
          if (v121[0])
          {
            v121[1] = v121[0];
            operator delete(v121[0]);
          }
          int64_t v22 = v122[0];
          if (v122[0])
          {
            v122[1] = v122[0];
            goto LABEL_167;
          }
        }
        else
        {
          if (!mlir::Type::isInteger((mlir::Type *)&Value, 8) && !mlir::Type::isInteger((mlir::Type *)&Value, 1)) {
            mlir::mps::arithmeticUnaryTileKernelType<(mlir::mps::arithmeticOp)6>((mlir::Type *)&v203);
          }
          std::vector<long long>::vector(v120, (uint64_t)a3);
          std::vector<long long>::vector(v119, (uint64_t)a4);
          mlir::mps::arithmeticUnaryTileBaseKernel<signed char,signed char,(mlir::mps::arithmeticOp)7>(a1, a2, (uint64_t **)v120, (uint64_t **)v119);
          if (v119[0])
          {
            v119[1] = v119[0];
            operator delete(v119[0]);
          }
          int64_t v22 = (uint64_t *)v120[0];
          if (v120[0])
          {
            v120[1] = v120[0];
            goto LABEL_167;
          }
        }
        return;
      }
      v126 = 0;
      v127 = 0;
      v128 = 0;
      v95 = *a3;
      int64_t v96 = (unsigned char *)a3[1] - (unsigned char *)*a3;
      if (v96)
      {
        if (v96 < 0) {
          goto LABEL_169;
        }
        v97 = (uint64_t *)operator new(v96);
        int64_t v98 = &v97[v96 >> 3];
        v126 = v97;
        v128 = v98;
        memcpy(v97, v95, v96);
        v127 = v98;
      }
      v123 = 0;
      v124 = 0;
      v125 = 0;
      v99 = *a4;
      int64_t v100 = (unsigned char *)a4[1] - (unsigned char *)*a4;
      if (v100)
      {
        if (v100 < 0) {
          goto LABEL_169;
        }
        v101 = (char *)operator new(v100);
        int64_t v102 = &v101[8 * (v100 >> 3)];
        v123 = v101;
        v125 = v102;
        memcpy(v101, v99, v100);
        v124 = v102;
      }
      mlir::mps::arithmeticUnaryTileBaseKernel<int,int,(mlir::mps::arithmeticOp)7>(a1, a2, &v126, (uint64_t **)&v123);
      if (v123)
      {
        v124 = v123;
        operator delete(v123);
      }
      int64_t v22 = v126;
      if (v126)
      {
        v127 = v126;
        goto LABEL_167;
      }
      return;
    }
    if (v12 != &mlir::detail::TypeIDResolver<mlir::ComplexType,void>::id)
    {
      v156 = 0;
      v157 = 0;
      v158 = 0;
      v39 = *a3;
      int64_t v40 = (unsigned char *)a3[1] - (unsigned char *)*a3;
      if (v40)
      {
        if (v40 < 0) {
          goto LABEL_169;
        }
        v41 = (uint64_t *)operator new(v40);
        int64_t v42 = &v41[v40 >> 3];
        v156 = v41;
        v158 = v42;
        memcpy(v41, v39, v40);
        v157 = v42;
      }
      v153 = 0;
      v154 = 0;
      v155 = 0;
      v43 = *a4;
      int64_t v44 = (unsigned char *)a4[1] - (unsigned char *)*a4;
      if (v44)
      {
        if (v44 < 0) {
          goto LABEL_169;
        }
        v45 = (char *)operator new(v44);
        int64_t v46 = &v45[8 * (v44 >> 3)];
        v153 = v45;
        v155 = v46;
        memcpy(v45, v43, v44);
        v154 = v46;
      }
      mlir::mps::arithmeticUnaryTileBaseKernel<float,half,(mlir::mps::arithmeticOp)11>(a1, a2, &v156, (uint64_t **)&v153);
      if (v153)
      {
        v154 = v153;
        operator delete(v153);
      }
      int64_t v22 = v156;
      if (v156)
      {
        v157 = v156;
        goto LABEL_167;
      }
      return;
    }
    v162 = 0;
    v163 = 0;
    v164 = 0;
    v111 = *a3;
    int64_t v112 = (unsigned char *)a3[1] - (unsigned char *)*a3;
    if (v112)
    {
      if (v112 < 0) {
        goto LABEL_169;
      }
      v113 = (uint64_t *)operator new(v112);
      int64_t v114 = &v113[v112 >> 3];
      v162 = v113;
      v164 = v114;
      memcpy(v113, v111, v112);
      v163 = v114;
    }
    v159 = 0;
    v160 = 0;
    v161 = 0;
    v115 = *a4;
    int64_t v116 = (unsigned char *)a4[1] - (unsigned char *)*a4;
    if (v116)
    {
      if (v116 < 0) {
        goto LABEL_169;
      }
      v117 = (char *)operator new(v116);
      v118 = &v117[8 * (v116 >> 3)];
      v159 = v117;
      v161 = v118;
      memcpy(v117, v115, v116);
      v160 = v118;
    }
    mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<half,(void *)0>,(mlir::mps::arithmeticOp)11>(a1, a2, &v162, (uint64_t **)&v159);
    if (v159)
    {
      v160 = v159;
      operator delete(v159);
    }
    int64_t v22 = v162;
    if (v162)
    {
      v163 = v162;
      goto LABEL_167;
    }
    return;
  }
  if (v12 == &mlir::detail::TypeIDResolver<mlir::ComplexType,void>::id)
  {
    v186 = 0;
    v187 = 0;
    v188 = 0;
    v87 = *a3;
    int64_t v88 = (unsigned char *)a3[1] - (unsigned char *)*a3;
    if (v88)
    {
      if (v88 < 0) {
        goto LABEL_169;
      }
      v89 = (uint64_t *)operator new(v88);
      int64_t v90 = &v89[v88 >> 3];
      v186 = v89;
      v188 = v90;
      memcpy(v89, v87, v88);
      v187 = v90;
    }
    v184 = 0;
    v183 = 0;
    v185 = 0;
    v91 = *a4;
    int64_t v92 = (unsigned char *)a4[1] - (unsigned char *)*a4;
    if (v92)
    {
      if (v92 < 0) {
        goto LABEL_169;
      }
      v93 = (char *)operator new(v92);
      int64_t v94 = &v93[8 * (v92 >> 3)];
      v183 = v93;
      v185 = v94;
      memcpy(v93, v91, v92);
      v184 = v94;
    }
    mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)11>(a1, a2, &v186, (uint64_t **)&v183, a5);
    if (v183)
    {
      v184 = v183;
      operator delete(v183);
    }
    int64_t v22 = v186;
    if (v186)
    {
      v187 = v186;
      goto LABEL_167;
    }
    return;
  }
  v181 = 0;
  v180 = 0;
  v182 = 0;
  v23 = *a3;
  int64_t v24 = (unsigned char *)a3[1] - (unsigned char *)*a3;
  if (v24)
  {
    if (v24 < 0) {
      goto LABEL_169;
    }
    v25 = (uint64_t *)operator new(v24);
    int64_t v26 = &v25[v24 >> 3];
    v180 = v25;
    v182 = v26;
    memcpy(v25, v23, v24);
    v181 = v26;
  }
  v178 = 0;
  __p = 0;
  v179 = 0;
  v27 = *a4;
  int64_t v28 = (unsigned char *)a4[1] - (unsigned char *)*a4;
  if (v28)
  {
    if (v28 < 0) {
      goto LABEL_169;
    }
    v29 = (char *)operator new(v28);
    int64_t v30 = &v29[8 * (v28 >> 3)];
    __p = v29;
    v179 = v30;
    memcpy(v29, v27, v28);
    v178 = v30;
  }
  mlir::mps::arithmeticUnaryTileBaseKernel<half,float,(mlir::mps::arithmeticOp)11>(a1, a2, &v180, (uint64_t **)&__p);
  if (__p)
  {
    v178 = __p;
    operator delete(__p);
  }
  int64_t v22 = v180;
  if (v180)
  {
    v181 = v180;
    goto LABEL_167;
  }
}

void mlir::mps::arithmeticUnaryTileKernelType<(mlir::mps::arithmeticOp)12>(uint64_t **a1, uint64_t **a2, const void **a3, const void **a4, double a5)
{
  uint64_t Value = *(void *)**a1;
  uint64_t ElementType = mlir::TensorType::getElementType((mlir::TensorType *)&Value);
  uint64_t v205 = ElementType;
  uint64_t v203 = *(void *)**a2;
  uint64_t v11 = mlir::TensorType::getElementType((mlir::TensorType *)&v203);
  uint64_t v203 = v11;
  uint64_t Value = v11;
  v12 = *(void **)(*(void *)v11 + 136);
  if (v12 == &mlir::detail::TypeIDResolver<mlir::ComplexType,void>::id)
  {
    uint64_t v202 = v11;
    if (*(_UNKNOWN **)(*(void *)ElementType + 136) == &mlir::detail::TypeIDResolver<mlir::ComplexType,void>::id) {
      uint64_t v13 = ElementType;
    }
    else {
      uint64_t v13 = 0;
    }
    uint64_t v201 = v13;
    uint64_t Value = mlir::AffineMapAttr::getValue((mlir::AffineMapAttr *)&v202);
    uint64_t v205 = mlir::AffineMapAttr::getValue((mlir::AffineMapAttr *)&v201);
  }
  if (mlir::Type::isF32((mlir::Type *)&Value) && mlir::Type::isF32((mlir::Type *)&v205))
  {
    if (v12 == &mlir::detail::TypeIDResolver<mlir::ComplexType,void>::id)
    {
      v198 = 0;
      uint64_t v199 = 0;
      uint64_t v200 = 0;
      v79 = *a3;
      int64_t v80 = (unsigned char *)a3[1] - (unsigned char *)*a3;
      if (v80)
      {
        if (v80 < 0) {
          goto LABEL_169;
        }
        v81 = (uint64_t *)operator new(v80);
        int64_t v82 = &v81[v80 >> 3];
        v198 = v81;
        uint64_t v200 = v82;
        memcpy(v81, v79, v80);
        uint64_t v199 = v82;
      }
      v195 = 0;
      v196 = 0;
      v197 = 0;
      v83 = *a4;
      int64_t v84 = (unsigned char *)a4[1] - (unsigned char *)*a4;
      if (v84)
      {
        if (v84 < 0) {
          goto LABEL_169;
        }
        v85 = (uint64_t *)operator new(v84);
        int64_t v86 = &v85[v84 >> 3];
        v195 = v85;
        v197 = v86;
        memcpy(v85, v83, v84);
        v196 = v86;
      }
      mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)12>(a1, a2, &v198, &v195);
      if (v195)
      {
        v196 = v195;
        operator delete(v195);
      }
      int64_t v22 = v198;
      if (v198)
      {
        uint64_t v199 = v198;
        goto LABEL_167;
      }
      return;
    }
    v192 = 0;
    v193 = 0;
    v194 = 0;
    v14 = *a3;
    int64_t v15 = (unsigned char *)a3[1] - (unsigned char *)*a3;
    if (v15)
    {
      if (v15 < 0) {
        goto LABEL_169;
      }
      v16 = (uint64_t *)operator new(v15);
      int64_t v17 = &v16[v15 >> 3];
      v192 = v16;
      v194 = v17;
      memcpy(v16, v14, v15);
      v193 = v17;
    }
    v189 = 0;
    v190 = 0;
    v191 = 0;
    v18 = *a4;
    int64_t v19 = (unsigned char *)a4[1] - (unsigned char *)*a4;
    if (!v19) {
      goto LABEL_15;
    }
    if ((v19 & 0x8000000000000000) == 0)
    {
      v20 = (uint64_t *)operator new(v19);
      v21 = &v20[v19 >> 3];
      v189 = v20;
      v191 = v21;
      memcpy(v20, v18, v19);
      v190 = v21;
LABEL_15:
      mlir::mps::arithmeticUnaryTileBaseKernel<float,float,(mlir::mps::arithmeticOp)12>(a1, a2, &v192, &v189);
      if (v189)
      {
        v190 = v189;
        operator delete(v189);
      }
      int64_t v22 = v192;
      if (v192)
      {
        v193 = v192;
LABEL_167:
        operator delete(v22);
        return;
      }
      return;
    }
LABEL_169:
    abort();
  }
  if (!mlir::Type::isF32((mlir::Type *)&Value) || !mlir::Type::isF16((mlir::Type *)&v205))
  {
    if (mlir::Type::isF16((mlir::Type *)&Value) && mlir::Type::isF16((mlir::Type *)&v205))
    {
      if (v12 != &mlir::detail::TypeIDResolver<mlir::ComplexType,void>::id)
      {
        v168 = 0;
        v169 = 0;
        v170 = 0;
        v31 = *a3;
        int64_t v32 = (unsigned char *)a3[1] - (unsigned char *)*a3;
        if (v32)
        {
          if (v32 < 0) {
            goto LABEL_169;
          }
          v33 = (uint64_t *)operator new(v32);
          int64_t v34 = &v33[v32 >> 3];
          v168 = v33;
          v170 = v34;
          memcpy(v33, v31, v32);
          v169 = v34;
        }
        v165 = 0;
        v166 = 0;
        v167 = 0;
        v35 = *a4;
        int64_t v36 = (unsigned char *)a4[1] - (unsigned char *)*a4;
        if (v36)
        {
          if (v36 < 0) {
            goto LABEL_169;
          }
          v37 = (char *)operator new(v36);
          int64_t v38 = &v37[8 * (v36 >> 3)];
          v165 = v37;
          v167 = v38;
          memcpy(v37, v35, v36);
          v166 = v38;
        }
        mlir::mps::arithmeticUnaryTileBaseKernel<half,half,(mlir::mps::arithmeticOp)12>(a1, a2, &v168, (uint64_t **)&v165);
        if (v165)
        {
          v166 = v165;
          operator delete(v165);
        }
        int64_t v22 = v168;
        if (v168)
        {
          v169 = v168;
          goto LABEL_167;
        }
        return;
      }
      v175 = 0;
      v174 = 0;
      v176 = 0;
      v103 = *a3;
      int64_t v104 = (unsigned char *)a3[1] - (unsigned char *)*a3;
      if (v104)
      {
        if (v104 < 0) {
          goto LABEL_169;
        }
        v105 = (uint64_t *)operator new(v104);
        int64_t v106 = &v105[v104 >> 3];
        v174 = v105;
        v176 = v106;
        memcpy(v105, v103, v104);
        v175 = v106;
      }
      v171 = 0;
      v172 = 0;
      v173 = 0;
      v107 = *a4;
      int64_t v108 = (unsigned char *)a4[1] - (unsigned char *)*a4;
      if (v108)
      {
        if (v108 < 0) {
          goto LABEL_169;
        }
        v109 = (char *)operator new(v108);
        int64_t v110 = &v109[8 * (v108 >> 3)];
        v171 = v109;
        v173 = v110;
        memcpy(v109, v107, v108);
        v172 = v110;
      }
      mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<half,(void *)0>,(mlir::mps::arithmeticOp)12>(a1, a2, &v174, (uint64_t **)&v171, a5);
      if (v171)
      {
        v172 = v171;
        operator delete(v171);
      }
      int64_t v22 = v174;
      if (v174)
      {
        v175 = v174;
        goto LABEL_167;
      }
      return;
    }
    if (!mlir::Type::isF16((mlir::Type *)&Value) || !mlir::Type::isF32((mlir::Type *)&v205))
    {
      if (mlir::Type::isF32((mlir::Type *)&Value) && mlir::Type::isBF16((mlir::Type *)&v205))
      {
        v150 = 0;
        v151 = 0;
        v152 = 0;
        v47 = *a3;
        int64_t v48 = (unsigned char *)a3[1] - (unsigned char *)*a3;
        if (v48)
        {
          if (v48 < 0) {
            goto LABEL_169;
          }
          v49 = (uint64_t *)operator new(v48);
          int64_t v50 = &v49[v48 >> 3];
          v150 = v49;
          v152 = v50;
          memcpy(v49, v47, v48);
          v151 = v50;
        }
        v147 = 0;
        v148 = 0;
        v149 = 0;
        v51 = *a4;
        int64_t v52 = (unsigned char *)a4[1] - (unsigned char *)*a4;
        if (v52)
        {
          if (v52 < 0) {
            goto LABEL_169;
          }
          v53 = (char *)operator new(v52);
          int64_t v54 = &v53[8 * (v52 >> 3)];
          v147 = v53;
          v149 = v54;
          memcpy(v53, v51, v52);
          v148 = v54;
        }
        mlir::mps::arithmeticUnaryTileBaseKernel<__emulated_bf16,float,(mlir::mps::arithmeticOp)12>(a1, a2, &v150, (uint64_t **)&v147);
        if (v147)
        {
          v148 = v147;
          operator delete(v147);
        }
        int64_t v22 = v150;
        if (v150)
        {
          v151 = v150;
          goto LABEL_167;
        }
        return;
      }
      if (mlir::Type::isBF16((mlir::Type *)&Value) && mlir::Type::isBF16((mlir::Type *)&v205))
      {
        v144 = 0;
        v145 = 0;
        v146 = 0;
        v55 = *a3;
        int64_t v56 = (unsigned char *)a3[1] - (unsigned char *)*a3;
        if (v56)
        {
          if (v56 < 0) {
            goto LABEL_169;
          }
          v57 = (uint64_t *)operator new(v56);
          int64_t v58 = &v57[v56 >> 3];
          v144 = v57;
          v146 = v58;
          memcpy(v57, v55, v56);
          v145 = v58;
        }
        v141 = 0;
        v142 = 0;
        v143 = 0;
        v59 = *a4;
        int64_t v60 = (unsigned char *)a4[1] - (unsigned char *)*a4;
        if (v60)
        {
          if (v60 < 0) {
            goto LABEL_169;
          }
          v61 = (char *)operator new(v60);
          int64_t v62 = &v61[8 * (v60 >> 3)];
          v141 = v61;
          v143 = v62;
          memcpy(v61, v59, v60);
          v142 = v62;
        }
        mlir::mps::arithmeticUnaryTileBaseKernel<__emulated_bf16,__emulated_bf16,(mlir::mps::arithmeticOp)12>(a1, a2, &v144, (uint64_t **)&v141);
        if (v141)
        {
          v142 = v141;
          operator delete(v141);
        }
        int64_t v22 = v144;
        if (v144)
        {
          v145 = v144;
          goto LABEL_167;
        }
        return;
      }
      if (mlir::Type::isBF16((mlir::Type *)&Value) && mlir::Type::isF32((mlir::Type *)&v205))
      {
        v138 = 0;
        v139 = 0;
        v140 = 0;
        v63 = *a3;
        int64_t v64 = (unsigned char *)a3[1] - (unsigned char *)*a3;
        if (v64)
        {
          if (v64 < 0) {
            goto LABEL_169;
          }
          v65 = (uint64_t *)operator new(v64);
          int64_t v66 = &v65[v64 >> 3];
          v138 = v65;
          v140 = v66;
          memcpy(v65, v63, v64);
          v139 = v66;
        }
        v135 = 0;
        v136 = 0;
        v137 = 0;
        v67 = *a4;
        int64_t v68 = (unsigned char *)a4[1] - (unsigned char *)*a4;
        if (v68)
        {
          if (v68 < 0) {
            goto LABEL_169;
          }
          v69 = (char *)operator new(v68);
          int64_t v70 = &v69[8 * (v68 >> 3)];
          v135 = v69;
          v137 = v70;
          memcpy(v69, v67, v68);
          v136 = v70;
        }
        mlir::mps::arithmeticUnaryTileBaseKernel<float,__emulated_bf16,(mlir::mps::arithmeticOp)12>(a1, a2, &v138, (uint64_t **)&v135);
        if (v135)
        {
          v136 = v135;
          operator delete(v135);
        }
        int64_t v22 = v138;
        if (v138)
        {
          v139 = v138;
          goto LABEL_167;
        }
        return;
      }
      if (mlir::Type::isInteger((mlir::Type *)&Value, 64))
      {
        v132 = 0;
        v133 = 0;
        v134 = 0;
        v71 = *a3;
        int64_t v72 = (unsigned char *)a3[1] - (unsigned char *)*a3;
        if (v72)
        {
          if (v72 < 0) {
            goto LABEL_169;
          }
          v73 = (uint64_t *)operator new(v72);
          int64_t v74 = &v73[v72 >> 3];
          v132 = v73;
          v134 = v74;
          memcpy(v73, v71, v72);
          v133 = v74;
        }
        v129 = 0;
        v130 = 0;
        v131 = 0;
        v75 = *a4;
        int64_t v76 = (unsigned char *)a4[1] - (unsigned char *)*a4;
        if (v76)
        {
          if (v76 < 0) {
            goto LABEL_169;
          }
          v77 = (char *)operator new(v76);
          int64_t v78 = &v77[8 * (v76 >> 3)];
          v129 = v77;
          v131 = v78;
          memcpy(v77, v75, v76);
          v130 = v78;
        }
        mlir::mps::arithmeticUnaryTileBaseKernel<long long,long long,(mlir::mps::arithmeticOp)12>(a1, a2, &v132, (uint64_t **)&v129);
        if (v129)
        {
          v130 = v129;
          operator delete(v129);
        }
        int64_t v22 = v132;
        if (v132)
        {
          v133 = v132;
          goto LABEL_167;
        }
        return;
      }
      if (!mlir::Type::isInteger((mlir::Type *)&Value, 32))
      {
        if (mlir::Type::isInteger((mlir::Type *)&Value, 16))
        {
          std::vector<long long>::vector(v122, (uint64_t)a3);
          std::vector<long long>::vector(v121, (uint64_t)a4);
          mlir::mps::arithmeticUnaryTileBaseKernel<short,short,(mlir::mps::arithmeticOp)12>(a1, a2, v122, (uint64_t **)v121);
          if (v121[0])
          {
            v121[1] = v121[0];
            operator delete(v121[0]);
          }
          int64_t v22 = v122[0];
          if (v122[0])
          {
            v122[1] = v122[0];
            goto LABEL_167;
          }
        }
        else
        {
          if (!mlir::Type::isInteger((mlir::Type *)&Value, 8) && !mlir::Type::isInteger((mlir::Type *)&Value, 1)) {
            mlir::mps::arithmeticUnaryTileKernelType<(mlir::mps::arithmeticOp)6>((mlir::Type *)&v203);
          }
          std::vector<long long>::vector(v120, (uint64_t)a3);
          std::vector<long long>::vector(v119, (uint64_t)a4);
          mlir::mps::arithmeticUnaryTileBaseKernel<signed char,signed char,(mlir::mps::arithmeticOp)12>(a1, a2, (uint64_t **)v120, (uint64_t **)v119);
          if (v119[0])
          {
            v119[1] = v119[0];
            operator delete(v119[0]);
          }
          int64_t v22 = (uint64_t *)v120[0];
          if (v120[0])
          {
            v120[1] = v120[0];
            goto LABEL_167;
          }
        }
        return;
      }
      v126 = 0;
      v127 = 0;
      v128 = 0;
      v95 = *a3;
      int64_t v96 = (unsigned char *)a3[1] - (unsigned char *)*a3;
      if (v96)
      {
        if (v96 < 0) {
          goto LABEL_169;
        }
        v97 = (uint64_t *)operator new(v96);
        int64_t v98 = &v97[v96 >> 3];
        v126 = v97;
        v128 = v98;
        memcpy(v97, v95, v96);
        v127 = v98;
      }
      v123 = 0;
      v124 = 0;
      v125 = 0;
      v99 = *a4;
      int64_t v100 = (unsigned char *)a4[1] - (unsigned char *)*a4;
      if (v100)
      {
        if (v100 < 0) {
          goto LABEL_169;
        }
        v101 = (char *)operator new(v100);
        int64_t v102 = &v101[8 * (v100 >> 3)];
        v123 = v101;
        v125 = v102;
        memcpy(v101, v99, v100);
        v124 = v102;
      }
      mlir::mps::arithmeticUnaryTileBaseKernel<int,int,(mlir::mps::arithmeticOp)12>(a1, a2, &v126, (uint64_t **)&v123);
      if (v123)
      {
        v124 = v123;
        operator delete(v123);
      }
      int64_t v22 = v126;
      if (v126)
      {
        v127 = v126;
        goto LABEL_167;
      }
      return;
    }
    if (v12 != &mlir::detail::TypeIDResolver<mlir::ComplexType,void>::id)
    {
      v156 = 0;
      v157 = 0;
      v158 = 0;
      v39 = *a3;
      int64_t v40 = (unsigned char *)a3[1] - (unsigned char *)*a3;
      if (v40)
      {
        if (v40 < 0) {
          goto LABEL_169;
        }
        v41 = (uint64_t *)operator new(v40);
        int64_t v42 = &v41[v40 >> 3];
        v156 = v41;
        v158 = v42;
        memcpy(v41, v39, v40);
        v157 = v42;
      }
      v153 = 0;
      v154 = 0;
      v155 = 0;
      v43 = *a4;
      int64_t v44 = (unsigned char *)a4[1] - (unsigned char *)*a4;
      if (v44)
      {
        if (v44 < 0) {
          goto LABEL_169;
        }
        v45 = (char *)operator new(v44);
        int64_t v46 = &v45[8 * (v44 >> 3)];
        v153 = v45;
        v155 = v46;
        memcpy(v45, v43, v44);
        v154 = v46;
      }
      mlir::mps::arithmeticUnaryTileBaseKernel<float,half,(mlir::mps::arithmeticOp)12>(a1, a2, &v156, (uint64_t **)&v153);
      if (v153)
      {
        v154 = v153;
        operator delete(v153);
      }
      int64_t v22 = v156;
      if (v156)
      {
        v157 = v156;
        goto LABEL_167;
      }
      return;
    }
    v162 = 0;
    v163 = 0;
    v164 = 0;
    v111 = *a3;
    int64_t v112 = (unsigned char *)a3[1] - (unsigned char *)*a3;
    if (v112)
    {
      if (v112 < 0) {
        goto LABEL_169;
      }
      v113 = (uint64_t *)operator new(v112);
      int64_t v114 = &v113[v112 >> 3];
      v162 = v113;
      v164 = v114;
      memcpy(v113, v111, v112);
      v163 = v114;
    }
    v159 = 0;
    v160 = 0;
    v161 = 0;
    v115 = *a4;
    int64_t v116 = (unsigned char *)a4[1] - (unsigned char *)*a4;
    if (v116)
    {
      if (v116 < 0) {
        goto LABEL_169;
      }
      v117 = (char *)operator new(v116);
      v118 = &v117[8 * (v116 >> 3)];
      v159 = v117;
      v161 = v118;
      memcpy(v117, v115, v116);
      v160 = v118;
    }
    mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<half,(void *)0>,(mlir::mps::arithmeticOp)12>(a1, a2, &v162, (uint64_t **)&v159);
    if (v159)
    {
      v160 = v159;
      operator delete(v159);
    }
    int64_t v22 = v162;
    if (v162)
    {
      v163 = v162;
      goto LABEL_167;
    }
    return;
  }
  if (v12 == &mlir::detail::TypeIDResolver<mlir::ComplexType,void>::id)
  {
    v186 = 0;
    v187 = 0;
    v188 = 0;
    v87 = *a3;
    int64_t v88 = (unsigned char *)a3[1] - (unsigned char *)*a3;
    if (v88)
    {
      if (v88 < 0) {
        goto LABEL_169;
      }
      v89 = (uint64_t *)operator new(v88);
      int64_t v90 = &v89[v88 >> 3];
      v186 = v89;
      v188 = v90;
      memcpy(v89, v87, v88);
      v187 = v90;
    }
    v184 = 0;
    v183 = 0;
    v185 = 0;
    v91 = *a4;
    int64_t v92 = (unsigned char *)a4[1] - (unsigned char *)*a4;
    if (v92)
    {
      if (v92 < 0) {
        goto LABEL_169;
      }
      v93 = (char *)operator new(v92);
      int64_t v94 = &v93[8 * (v92 >> 3)];
      v183 = v93;
      v185 = v94;
      memcpy(v93, v91, v92);
      v184 = v94;
    }
    mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)12>(a1, a2, &v186, (uint64_t **)&v183, a5);
    if (v183)
    {
      v184 = v183;
      operator delete(v183);
    }
    int64_t v22 = v186;
    if (v186)
    {
      v187 = v186;
      goto LABEL_167;
    }
    return;
  }
  v181 = 0;
  v180 = 0;
  v182 = 0;
  v23 = *a3;
  int64_t v24 = (unsigned char *)a3[1] - (unsigned char *)*a3;
  if (v24)
  {
    if (v24 < 0) {
      goto LABEL_169;
    }
    v25 = (uint64_t *)operator new(v24);
    int64_t v26 = &v25[v24 >> 3];
    v180 = v25;
    v182 = v26;
    memcpy(v25, v23, v24);
    v181 = v26;
  }
  v178 = 0;
  __p = 0;
  v179 = 0;
  v27 = *a4;
  int64_t v28 = (unsigned char *)a4[1] - (unsigned char *)*a4;
  if (v28)
  {
    if (v28 < 0) {
      goto LABEL_169;
    }
    v29 = (char *)operator new(v28);
    int64_t v30 = &v29[8 * (v28 >> 3)];
    __p = v29;
    v179 = v30;
    memcpy(v29, v27, v28);
    v178 = v30;
  }
  mlir::mps::arithmeticUnaryTileBaseKernel<half,float,(mlir::mps::arithmeticOp)12>(a1, a2, &v180, (uint64_t **)&__p);
  if (__p)
  {
    v178 = __p;
    operator delete(__p);
  }
  int64_t v22 = v180;
  if (v180)
  {
    v181 = v180;
    goto LABEL_167;
  }
}

void mlir::mps::arithmeticUnaryTileKernelType<(mlir::mps::arithmeticOp)13>(uint64_t **a1, uint64_t **a2, const void **a3, const void **a4, float16x4_t a5)
{
  uint64_t Value = *(void *)**a1;
  uint64_t ElementType = mlir::TensorType::getElementType((mlir::TensorType *)&Value);
  uint64_t v205 = ElementType;
  uint64_t v203 = *(void *)**a2;
  uint64_t v11 = mlir::TensorType::getElementType((mlir::TensorType *)&v203);
  uint64_t v203 = v11;
  uint64_t Value = v11;
  v12 = *(void **)(*(void *)v11 + 136);
  if (v12 == &mlir::detail::TypeIDResolver<mlir::ComplexType,void>::id)
  {
    uint64_t v202 = v11;
    if (*(_UNKNOWN **)(*(void *)ElementType + 136) == &mlir::detail::TypeIDResolver<mlir::ComplexType,void>::id) {
      uint64_t v13 = ElementType;
    }
    else {
      uint64_t v13 = 0;
    }
    uint64_t v201 = v13;
    uint64_t Value = mlir::AffineMapAttr::getValue((mlir::AffineMapAttr *)&v202);
    uint64_t v205 = mlir::AffineMapAttr::getValue((mlir::AffineMapAttr *)&v201);
  }
  if (mlir::Type::isF32((mlir::Type *)&Value) && mlir::Type::isF32((mlir::Type *)&v205))
  {
    if (v12 == &mlir::detail::TypeIDResolver<mlir::ComplexType,void>::id)
    {
      v198 = 0;
      uint64_t v199 = 0;
      uint64_t v200 = 0;
      v79 = *a3;
      int64_t v80 = (unsigned char *)a3[1] - (unsigned char *)*a3;
      if (v80)
      {
        if (v80 < 0) {
          goto LABEL_169;
        }
        v81 = (uint64_t *)operator new(v80);
        int64_t v82 = &v81[v80 >> 3];
        v198 = v81;
        uint64_t v200 = v82;
        memcpy(v81, v79, v80);
        uint64_t v199 = v82;
      }
      v195 = 0;
      v196 = 0;
      v197 = 0;
      v83 = *a4;
      int64_t v84 = (unsigned char *)a4[1] - (unsigned char *)*a4;
      if (v84)
      {
        if (v84 < 0) {
          goto LABEL_169;
        }
        v85 = (uint64_t *)operator new(v84);
        int64_t v86 = &v85[v84 >> 3];
        v195 = v85;
        v197 = v86;
        memcpy(v85, v83, v84);
        v196 = v86;
      }
      mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)13>(a1, a2, &v198, &v195);
      if (v195)
      {
        v196 = v195;
        operator delete(v195);
      }
      int64_t v22 = v198;
      if (v198)
      {
        uint64_t v199 = v198;
        goto LABEL_167;
      }
      return;
    }
    v192 = 0;
    v193 = 0;
    v194 = 0;
    v14 = *a3;
    int64_t v15 = (unsigned char *)a3[1] - (unsigned char *)*a3;
    if (v15)
    {
      if (v15 < 0) {
        goto LABEL_169;
      }
      v16 = (uint64_t *)operator new(v15);
      int64_t v17 = &v16[v15 >> 3];
      v192 = v16;
      v194 = v17;
      memcpy(v16, v14, v15);
      v193 = v17;
    }
    v189 = 0;
    v190 = 0;
    v191 = 0;
    v18 = *a4;
    int64_t v19 = (unsigned char *)a4[1] - (unsigned char *)*a4;
    if (!v19) {
      goto LABEL_15;
    }
    if ((v19 & 0x8000000000000000) == 0)
    {
      v20 = (uint64_t *)operator new(v19);
      v21 = &v20[v19 >> 3];
      v189 = v20;
      v191 = v21;
      memcpy(v20, v18, v19);
      v190 = v21;
LABEL_15:
      mlir::mps::arithmeticUnaryTileBaseKernel<float,float,(mlir::mps::arithmeticOp)13>(a1, a2, &v192, &v189);
      if (v189)
      {
        v190 = v189;
        operator delete(v189);
      }
      int64_t v22 = v192;
      if (v192)
      {
        v193 = v192;
LABEL_167:
        operator delete(v22);
        return;
      }
      return;
    }
LABEL_169:
    abort();
  }
  if (!mlir::Type::isF32((mlir::Type *)&Value) || !mlir::Type::isF16((mlir::Type *)&v205))
  {
    if (mlir::Type::isF16((mlir::Type *)&Value) && mlir::Type::isF16((mlir::Type *)&v205))
    {
      if (v12 != &mlir::detail::TypeIDResolver<mlir::ComplexType,void>::id)
      {
        v168 = 0;
        v169 = 0;
        v170 = 0;
        v31 = *a3;
        int64_t v32 = (unsigned char *)a3[1] - (unsigned char *)*a3;
        if (v32)
        {
          if (v32 < 0) {
            goto LABEL_169;
          }
          v33 = (uint64_t *)operator new(v32);
          int64_t v34 = &v33[v32 >> 3];
          v168 = v33;
          v170 = v34;
          memcpy(v33, v31, v32);
          v169 = v34;
        }
        v165 = 0;
        v166 = 0;
        v167 = 0;
        v35 = *a4;
        int64_t v36 = (unsigned char *)a4[1] - (unsigned char *)*a4;
        if (v36)
        {
          if (v36 < 0) {
            goto LABEL_169;
          }
          v37 = (char *)operator new(v36);
          int64_t v38 = &v37[8 * (v36 >> 3)];
          v165 = v37;
          v167 = v38;
          memcpy(v37, v35, v36);
          v166 = v38;
        }
        mlir::mps::arithmeticUnaryTileBaseKernel<half,half,(mlir::mps::arithmeticOp)13>(a1, a2, &v168, (uint64_t **)&v165);
        if (v165)
        {
          v166 = v165;
          operator delete(v165);
        }
        int64_t v22 = v168;
        if (v168)
        {
          v169 = v168;
          goto LABEL_167;
        }
        return;
      }
      v175 = 0;
      v174 = 0;
      v176 = 0;
      v103 = *a3;
      int64_t v104 = (unsigned char *)a3[1] - (unsigned char *)*a3;
      if (v104)
      {
        if (v104 < 0) {
          goto LABEL_169;
        }
        v105 = (uint64_t *)operator new(v104);
        int64_t v106 = &v105[v104 >> 3];
        v174 = v105;
        v176 = v106;
        memcpy(v105, v103, v104);
        v175 = v106;
      }
      v171 = 0;
      v172 = 0;
      v173 = 0;
      v107 = *a4;
      int64_t v108 = (unsigned char *)a4[1] - (unsigned char *)*a4;
      if (v108)
      {
        if (v108 < 0) {
          goto LABEL_169;
        }
        v109 = (char *)operator new(v108);
        int64_t v110 = &v109[8 * (v108 >> 3)];
        v171 = v109;
        v173 = v110;
        memcpy(v109, v107, v108);
        v172 = v110;
      }
      mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<half,(void *)0>,(mlir::mps::arithmeticOp)13>(a1, a2, &v174, (uint64_t **)&v171);
      if (v171)
      {
        v172 = v171;
        operator delete(v171);
      }
      int64_t v22 = v174;
      if (v174)
      {
        v175 = v174;
        goto LABEL_167;
      }
      return;
    }
    if (!mlir::Type::isF16((mlir::Type *)&Value) || !mlir::Type::isF32((mlir::Type *)&v205))
    {
      if (mlir::Type::isF32((mlir::Type *)&Value) && mlir::Type::isBF16((mlir::Type *)&v205))
      {
        v150 = 0;
        v151 = 0;
        v152 = 0;
        v47 = *a3;
        int64_t v48 = (unsigned char *)a3[1] - (unsigned char *)*a3;
        if (v48)
        {
          if (v48 < 0) {
            goto LABEL_169;
          }
          v49 = (uint64_t *)operator new(v48);
          int64_t v50 = &v49[v48 >> 3];
          v150 = v49;
          v152 = v50;
          memcpy(v49, v47, v48);
          v151 = v50;
        }
        v147 = 0;
        v148 = 0;
        v149 = 0;
        v51 = *a4;
        int64_t v52 = (unsigned char *)a4[1] - (unsigned char *)*a4;
        if (v52)
        {
          if (v52 < 0) {
            goto LABEL_169;
          }
          v53 = (char *)operator new(v52);
          int64_t v54 = &v53[8 * (v52 >> 3)];
          v147 = v53;
          v149 = v54;
          memcpy(v53, v51, v52);
          v148 = v54;
        }
        mlir::mps::arithmeticUnaryTileBaseKernel<__emulated_bf16,float,(mlir::mps::arithmeticOp)13>(a1, a2, &v150, (uint64_t **)&v147);
        if (v147)
        {
          v148 = v147;
          operator delete(v147);
        }
        int64_t v22 = v150;
        if (v150)
        {
          v151 = v150;
          goto LABEL_167;
        }
        return;
      }
      if (mlir::Type::isBF16((mlir::Type *)&Value) && mlir::Type::isBF16((mlir::Type *)&v205))
      {
        v144 = 0;
        v145 = 0;
        v146 = 0;
        v55 = *a3;
        int64_t v56 = (unsigned char *)a3[1] - (unsigned char *)*a3;
        if (v56)
        {
          if (v56 < 0) {
            goto LABEL_169;
          }
          v57 = (uint64_t *)operator new(v56);
          int64_t v58 = &v57[v56 >> 3];
          v144 = v57;
          v146 = v58;
          memcpy(v57, v55, v56);
          v145 = v58;
        }
        v141 = 0;
        v142 = 0;
        v143 = 0;
        v59 = *a4;
        int64_t v60 = (unsigned char *)a4[1] - (unsigned char *)*a4;
        if (v60)
        {
          if (v60 < 0) {
            goto LABEL_169;
          }
          v61 = (char *)operator new(v60);
          int64_t v62 = &v61[8 * (v60 >> 3)];
          v141 = v61;
          v143 = v62;
          memcpy(v61, v59, v60);
          v142 = v62;
        }
        mlir::mps::arithmeticUnaryTileBaseKernel<short,short,(mlir::mps::arithmeticOp)7>(a1, a2, &v144, (uint64_t **)&v141);
        if (v141)
        {
          v142 = v141;
          operator delete(v141);
        }
        int64_t v22 = v144;
        if (v144)
        {
          v145 = v144;
          goto LABEL_167;
        }
        return;
      }
      if (mlir::Type::isBF16((mlir::Type *)&Value) && mlir::Type::isF32((mlir::Type *)&v205))
      {
        v138 = 0;
        v139 = 0;
        v140 = 0;
        v63 = *a3;
        int64_t v64 = (unsigned char *)a3[1] - (unsigned char *)*a3;
        if (v64)
        {
          if (v64 < 0) {
            goto LABEL_169;
          }
          v65 = (uint64_t *)operator new(v64);
          int64_t v66 = &v65[v64 >> 3];
          v138 = v65;
          v140 = v66;
          memcpy(v65, v63, v64);
          v139 = v66;
        }
        v135 = 0;
        v136 = 0;
        v137 = 0;
        v67 = *a4;
        int64_t v68 = (unsigned char *)a4[1] - (unsigned char *)*a4;
        if (v68)
        {
          if (v68 < 0) {
            goto LABEL_169;
          }
          v69 = (char *)operator new(v68);
          int64_t v70 = &v69[8 * (v68 >> 3)];
          v135 = v69;
          v137 = v70;
          memcpy(v69, v67, v68);
          v136 = v70;
        }
        mlir::mps::arithmeticUnaryTileBaseKernel<float,__emulated_bf16,(mlir::mps::arithmeticOp)13>(a1, a2, &v138, (uint64_t **)&v135);
        if (v135)
        {
          v136 = v135;
          operator delete(v135);
        }
        int64_t v22 = v138;
        if (v138)
        {
          v139 = v138;
          goto LABEL_167;
        }
        return;
      }
      if (mlir::Type::isInteger((mlir::Type *)&Value, 64))
      {
        v132 = 0;
        v133 = 0;
        v134 = 0;
        v71 = *a3;
        int64_t v72 = (unsigned char *)a3[1] - (unsigned char *)*a3;
        if (v72)
        {
          if (v72 < 0) {
            goto LABEL_169;
          }
          v73 = (uint64_t *)operator new(v72);
          int64_t v74 = &v73[v72 >> 3];
          v132 = v73;
          v134 = v74;
          memcpy(v73, v71, v72);
          v133 = v74;
        }
        v129 = 0;
        v130 = 0;
        v131 = 0;
        v75 = *a4;
        int64_t v76 = (unsigned char *)a4[1] - (unsigned char *)*a4;
        if (v76)
        {
          if (v76 < 0) {
            goto LABEL_169;
          }
          v77 = (char *)operator new(v76);
          int64_t v78 = &v77[8 * (v76 >> 3)];
          v129 = v77;
          v131 = v78;
          memcpy(v77, v75, v76);
          v130 = v78;
        }
        mlir::mps::arithmeticUnaryTileBaseKernel<long long,long long,(mlir::mps::arithmeticOp)13>(a1, a2, &v132, (uint64_t **)&v129);
        if (v129)
        {
          v130 = v129;
          operator delete(v129);
        }
        int64_t v22 = v132;
        if (v132)
        {
          v133 = v132;
          goto LABEL_167;
        }
        return;
      }
      if (!mlir::Type::isInteger((mlir::Type *)&Value, 32))
      {
        if (mlir::Type::isInteger((mlir::Type *)&Value, 16))
        {
          std::vector<long long>::vector(v122, (uint64_t)a3);
          std::vector<long long>::vector(v121, (uint64_t)a4);
          mlir::mps::arithmeticUnaryTileBaseKernel<short,short,(mlir::mps::arithmeticOp)7>(a1, a2, v122, (uint64_t **)v121);
          if (v121[0])
          {
            v121[1] = v121[0];
            operator delete(v121[0]);
          }
          int64_t v22 = v122[0];
          if (v122[0])
          {
            v122[1] = v122[0];
            goto LABEL_167;
          }
        }
        else
        {
          if (!mlir::Type::isInteger((mlir::Type *)&Value, 8) && !mlir::Type::isInteger((mlir::Type *)&Value, 1)) {
            mlir::mps::arithmeticUnaryTileKernelType<(mlir::mps::arithmeticOp)6>((mlir::Type *)&v203);
          }
          std::vector<long long>::vector(v120, (uint64_t)a3);
          std::vector<long long>::vector(v119, (uint64_t)a4);
          mlir::mps::arithmeticUnaryTileBaseKernel<signed char,signed char,(mlir::mps::arithmeticOp)7>(a1, a2, (uint64_t **)v120, (uint64_t **)v119);
          if (v119[0])
          {
            v119[1] = v119[0];
            operator delete(v119[0]);
          }
          int64_t v22 = (uint64_t *)v120[0];
          if (v120[0])
          {
            v120[1] = v120[0];
            goto LABEL_167;
          }
        }
        return;
      }
      v126 = 0;
      v127 = 0;
      v128 = 0;
      v95 = *a3;
      int64_t v96 = (unsigned char *)a3[1] - (unsigned char *)*a3;
      if (v96)
      {
        if (v96 < 0) {
          goto LABEL_169;
        }
        v97 = (uint64_t *)operator new(v96);
        int64_t v98 = &v97[v96 >> 3];
        v126 = v97;
        v128 = v98;
        memcpy(v97, v95, v96);
        v127 = v98;
      }
      v123 = 0;
      v124 = 0;
      v125 = 0;
      v99 = *a4;
      int64_t v100 = (unsigned char *)a4[1] - (unsigned char *)*a4;
      if (v100)
      {
        if (v100 < 0) {
          goto LABEL_169;
        }
        v101 = (char *)operator new(v100);
        int64_t v102 = &v101[8 * (v100 >> 3)];
        v123 = v101;
        v125 = v102;
        memcpy(v101, v99, v100);
        v124 = v102;
      }
      mlir::mps::arithmeticUnaryTileBaseKernel<int,int,(mlir::mps::arithmeticOp)7>(a1, a2, &v126, (uint64_t **)&v123);
      if (v123)
      {
        v124 = v123;
        operator delete(v123);
      }
      int64_t v22 = v126;
      if (v126)
      {
        v127 = v126;
        goto LABEL_167;
      }
      return;
    }
    if (v12 != &mlir::detail::TypeIDResolver<mlir::ComplexType,void>::id)
    {
      v156 = 0;
      v157 = 0;
      v158 = 0;
      v39 = *a3;
      int64_t v40 = (unsigned char *)a3[1] - (unsigned char *)*a3;
      if (v40)
      {
        if (v40 < 0) {
          goto LABEL_169;
        }
        v41 = (uint64_t *)operator new(v40);
        int64_t v42 = &v41[v40 >> 3];
        v156 = v41;
        v158 = v42;
        memcpy(v41, v39, v40);
        v157 = v42;
      }
      v153 = 0;
      v154 = 0;
      v155 = 0;
      v43 = *a4;
      int64_t v44 = (unsigned char *)a4[1] - (unsigned char *)*a4;
      if (v44)
      {
        if (v44 < 0) {
          goto LABEL_169;
        }
        v45 = (char *)operator new(v44);
        int64_t v46 = &v45[8 * (v44 >> 3)];
        v153 = v45;
        v155 = v46;
        memcpy(v45, v43, v44);
        v154 = v46;
      }
      mlir::mps::arithmeticUnaryTileBaseKernel<float,half,(mlir::mps::arithmeticOp)13>(a1, a2, &v156, (uint64_t **)&v153);
      if (v153)
      {
        v154 = v153;
        operator delete(v153);
      }
      int64_t v22 = v156;
      if (v156)
      {
        v157 = v156;
        goto LABEL_167;
      }
      return;
    }
    v162 = 0;
    v163 = 0;
    v164 = 0;
    v111 = *a3;
    int64_t v112 = (unsigned char *)a3[1] - (unsigned char *)*a3;
    if (v112)
    {
      if (v112 < 0) {
        goto LABEL_169;
      }
      v113 = (uint64_t *)operator new(v112);
      int64_t v114 = &v113[v112 >> 3];
      v162 = v113;
      v164 = v114;
      memcpy(v113, v111, v112);
      v163 = v114;
    }
    v159 = 0;
    v160 = 0;
    v161 = 0;
    v115 = *a4;
    int64_t v116 = (unsigned char *)a4[1] - (unsigned char *)*a4;
    if (v116)
    {
      if (v116 < 0) {
        goto LABEL_169;
      }
      v117 = (char *)operator new(v116);
      v118 = &v117[8 * (v116 >> 3)];
      v159 = v117;
      v161 = v118;
      memcpy(v117, v115, v116);
      v160 = v118;
    }
    mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<half,(void *)0>,(mlir::mps::arithmeticOp)13>(a1, a2, &v162, (uint64_t **)&v159);
    if (v159)
    {
      v160 = v159;
      operator delete(v159);
    }
    int64_t v22 = v162;
    if (v162)
    {
      v163 = v162;
      goto LABEL_167;
    }
    return;
  }
  if (v12 == &mlir::detail::TypeIDResolver<mlir::ComplexType,void>::id)
  {
    v186 = 0;
    v187 = 0;
    v188 = 0;
    v87 = *a3;
    int64_t v88 = (unsigned char *)a3[1] - (unsigned char *)*a3;
    if (v88)
    {
      if (v88 < 0) {
        goto LABEL_169;
      }
      v89 = (uint64_t *)operator new(v88);
      int64_t v90 = &v89[v88 >> 3];
      v186 = v89;
      v188 = v90;
      memcpy(v89, v87, v88);
      v187 = v90;
    }
    v184 = 0;
    v183 = 0;
    v185 = 0;
    v91 = *a4;
    int64_t v92 = (unsigned char *)a4[1] - (unsigned char *)*a4;
    if (v92)
    {
      if (v92 < 0) {
        goto LABEL_169;
      }
      v93 = (char *)operator new(v92);
      int64_t v94 = &v93[8 * (v92 >> 3)];
      v183 = v93;
      v185 = v94;
      memcpy(v93, v91, v92);
      v184 = v94;
    }
    mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)13>(a1, a2, &v186, (uint64_t **)&v183, a5);
    if (v183)
    {
      v184 = v183;
      operator delete(v183);
    }
    int64_t v22 = v186;
    if (v186)
    {
      v187 = v186;
      goto LABEL_167;
    }
    return;
  }
  v181 = 0;
  v180 = 0;
  v182 = 0;
  v23 = *a3;
  int64_t v24 = (unsigned char *)a3[1] - (unsigned char *)*a3;
  if (v24)
  {
    if (v24 < 0) {
      goto LABEL_169;
    }
    v25 = (uint64_t *)operator new(v24);
    int64_t v26 = &v25[v24 >> 3];
    v180 = v25;
    v182 = v26;
    memcpy(v25, v23, v24);
    v181 = v26;
  }
  v178 = 0;
  __p = 0;
  v179 = 0;
  v27 = *a4;
  int64_t v28 = (unsigned char *)a4[1] - (unsigned char *)*a4;
  if (v28)
  {
    if (v28 < 0) {
      goto LABEL_169;
    }
    v29 = (char *)operator new(v28);
    int64_t v30 = &v29[8 * (v28 >> 3)];
    __p = v29;
    v179 = v30;
    memcpy(v29, v27, v28);
    v178 = v30;
  }
  mlir::mps::arithmeticUnaryTileBaseKernel<half,float,(mlir::mps::arithmeticOp)13>(a1, a2, &v180, (uint64_t **)&__p);
  if (__p)
  {
    v178 = __p;
    operator delete(__p);
  }
  int64_t v22 = v180;
  if (v180)
  {
    v181 = v180;
    goto LABEL_167;
  }
}

void mlir::mps::arithmeticUnaryTileKernelType<(mlir::mps::arithmeticOp)14>(uint64_t **a1, uint64_t **a2, const void **a3, const void **a4, double a5)
{
  uint64_t Value = *(void *)**a1;
  uint64_t ElementType = mlir::TensorType::getElementType((mlir::TensorType *)&Value);
  uint64_t v206 = ElementType;
  uint64_t v204 = *(void *)**a2;
  uint64_t v11 = mlir::TensorType::getElementType((mlir::TensorType *)&v204);
  uint64_t v204 = v11;
  uint64_t Value = v11;
  v12 = *(void **)(*(void *)v11 + 136);
  if (v12 == &mlir::detail::TypeIDResolver<mlir::ComplexType,void>::id)
  {
    uint64_t v203 = v11;
    if (*(_UNKNOWN **)(*(void *)ElementType + 136) == &mlir::detail::TypeIDResolver<mlir::ComplexType,void>::id) {
      uint64_t v13 = ElementType;
    }
    else {
      uint64_t v13 = 0;
    }
    uint64_t v202 = v13;
    uint64_t Value = mlir::AffineMapAttr::getValue((mlir::AffineMapAttr *)&v203);
    uint64_t v206 = mlir::AffineMapAttr::getValue((mlir::AffineMapAttr *)&v202);
  }
  if (mlir::Type::isF32((mlir::Type *)&Value) && mlir::Type::isF32((mlir::Type *)&v206))
  {
    if (v12 == &mlir::detail::TypeIDResolver<mlir::ComplexType,void>::id)
    {
      uint64_t v199 = 0;
      uint64_t v200 = 0;
      uint64_t v201 = 0;
      int64_t v80 = *a3;
      int64_t v81 = (unsigned char *)a3[1] - (unsigned char *)*a3;
      if (v81)
      {
        if (v81 < 0) {
          goto LABEL_169;
        }
        int64_t v82 = (uint64_t *)operator new(v81);
        v83 = &v82[v81 >> 3];
        uint64_t v199 = v82;
        uint64_t v201 = v83;
        memcpy(v82, v80, v81);
        uint64_t v200 = v83;
      }
      v196 = 0;
      v197 = 0;
      v198 = 0;
      int64_t v84 = *a4;
      int64_t v85 = (unsigned char *)a4[1] - (unsigned char *)*a4;
      if (v85)
      {
        if (v85 < 0) {
          goto LABEL_169;
        }
        int64_t v86 = (uint64_t *)operator new(v85);
        v87 = &v86[v85 >> 3];
        v196 = v86;
        v198 = v87;
        memcpy(v86, v84, v85);
        v197 = v87;
      }
      mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)14>(a1, a2, &v199, &v196);
      if (v196)
      {
        v197 = v196;
        operator delete(v196);
      }
      int64_t v22 = v199;
      if (v199)
      {
        uint64_t v200 = v199;
        goto LABEL_167;
      }
      return;
    }
    v193 = 0;
    v194 = 0;
    v195 = 0;
    v14 = *a3;
    int64_t v15 = (unsigned char *)a3[1] - (unsigned char *)*a3;
    if (v15)
    {
      if (v15 < 0) {
        goto LABEL_169;
      }
      v16 = (uint64_t *)operator new(v15);
      int64_t v17 = &v16[v15 >> 3];
      v193 = v16;
      v195 = v17;
      memcpy(v16, v14, v15);
      v194 = v17;
    }
    v190 = 0;
    v191 = 0;
    v192 = 0;
    v18 = *a4;
    int64_t v19 = (unsigned char *)a4[1] - (unsigned char *)*a4;
    if (!v19) {
      goto LABEL_15;
    }
    if ((v19 & 0x8000000000000000) == 0)
    {
      v20 = (uint64_t *)operator new(v19);
      v21 = &v20[v19 >> 3];
      v190 = v20;
      v192 = v21;
      memcpy(v20, v18, v19);
      v191 = v21;
LABEL_15:
      mlir::mps::arithmeticUnaryTileBaseKernel<float,float,(mlir::mps::arithmeticOp)14>((uint64_t)a1, a2, &v193, &v190);
      if (v190)
      {
        v191 = v190;
        operator delete(v190);
      }
      int64_t v22 = v193;
      if (v193)
      {
        v194 = v193;
LABEL_167:
        operator delete(v22);
        return;
      }
      return;
    }
LABEL_169:
    abort();
  }
  if (!mlir::Type::isF32((mlir::Type *)&Value) || !mlir::Type::isF16((mlir::Type *)&v206))
  {
    if (mlir::Type::isF16((mlir::Type *)&Value) && mlir::Type::isF16((mlir::Type *)&v206))
    {
      if (v12 != &mlir::detail::TypeIDResolver<mlir::ComplexType,void>::id)
      {
        v169 = 0;
        v170 = 0;
        v171 = 0;
        int64_t v32 = *a3;
        int64_t v33 = (unsigned char *)a3[1] - (unsigned char *)*a3;
        if (v33)
        {
          if (v33 < 0) {
            goto LABEL_169;
          }
          int64_t v34 = (uint64_t *)operator new(v33);
          v35 = &v34[v33 >> 3];
          v169 = v34;
          v171 = v35;
          memcpy(v34, v32, v33);
          v170 = v35;
        }
        v166 = 0;
        v167 = 0;
        v168 = 0;
        int64_t v36 = *a4;
        int64_t v37 = (unsigned char *)a4[1] - (unsigned char *)*a4;
        if (v37)
        {
          if (v37 < 0) {
            goto LABEL_169;
          }
          int64_t v38 = (char *)operator new(v37);
          v39 = &v38[8 * (v37 >> 3)];
          v166 = v38;
          v168 = v39;
          memcpy(v38, v36, v37);
          v167 = v39;
        }
        mlir::mps::arithmeticUnaryTileBaseKernel<half,half,(mlir::mps::arithmeticOp)14>(a1, a2, &v169, (uint64_t **)&v166);
        if (v166)
        {
          v167 = v166;
          operator delete(v166);
        }
        int64_t v22 = v169;
        if (v169)
        {
          v170 = v169;
          goto LABEL_167;
        }
        return;
      }
      v176 = 0;
      v175 = 0;
      v177 = 0;
      int64_t v104 = *a3;
      int64_t v105 = (unsigned char *)a3[1] - (unsigned char *)*a3;
      if (v105)
      {
        if (v105 < 0) {
          goto LABEL_169;
        }
        int64_t v106 = (uint64_t *)operator new(v105);
        v107 = &v106[v105 >> 3];
        v175 = v106;
        v177 = v107;
        memcpy(v106, v104, v105);
        v176 = v107;
      }
      v172 = 0;
      v173 = 0;
      v174 = 0;
      int64_t v108 = *a4;
      int64_t v109 = (unsigned char *)a4[1] - (unsigned char *)*a4;
      if (v109)
      {
        if (v109 < 0) {
          goto LABEL_169;
        }
        int64_t v110 = (char *)operator new(v109);
        v111 = &v110[8 * (v109 >> 3)];
        v172 = v110;
        v174 = v111;
        memcpy(v110, v108, v109);
        v173 = v111;
      }
      mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<half,(void *)0>,(mlir::mps::arithmeticOp)14>(a1, a2, &v175, (uint64_t **)&v172);
      if (v172)
      {
        v173 = v172;
        operator delete(v172);
      }
      int64_t v22 = v175;
      if (v175)
      {
        v176 = v175;
        goto LABEL_167;
      }
      return;
    }
    if (!mlir::Type::isF16((mlir::Type *)&Value) || !mlir::Type::isF32((mlir::Type *)&v206))
    {
      if (mlir::Type::isF32((mlir::Type *)&Value) && mlir::Type::isBF16((mlir::Type *)&v206))
      {
        v151 = 0;
        v152 = 0;
        v153 = 0;
        int64_t v48 = *a3;
        int64_t v49 = (unsigned char *)a3[1] - (unsigned char *)*a3;
        if (v49)
        {
          if (v49 < 0) {
            goto LABEL_169;
          }
          int64_t v50 = (uint64_t *)operator new(v49);
          v51 = &v50[v49 >> 3];
          v151 = v50;
          v153 = v51;
          memcpy(v50, v48, v49);
          v152 = v51;
        }
        v148 = 0;
        v149 = 0;
        v150 = 0;
        int64_t v52 = *a4;
        int64_t v53 = (unsigned char *)a4[1] - (unsigned char *)*a4;
        if (v53)
        {
          if (v53 < 0) {
            goto LABEL_169;
          }
          int64_t v54 = (char *)operator new(v53);
          v55 = &v54[8 * (v53 >> 3)];
          v148 = v54;
          v150 = v55;
          memcpy(v54, v52, v53);
          v149 = v55;
        }
        mlir::mps::arithmeticUnaryTileBaseKernel<__emulated_bf16,float,(mlir::mps::arithmeticOp)14>(a1, a2, &v151, (uint64_t **)&v148);
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        int64_t v22 = v151;
        if (v151)
        {
          v152 = v151;
          goto LABEL_167;
        }
        return;
      }
      if (mlir::Type::isBF16((mlir::Type *)&Value) && mlir::Type::isBF16((mlir::Type *)&v206))
      {
        v145 = 0;
        v146 = 0;
        v147 = 0;
        int64_t v56 = *a3;
        int64_t v57 = (unsigned char *)a3[1] - (unsigned char *)*a3;
        if (v57)
        {
          if (v57 < 0) {
            goto LABEL_169;
          }
          int64_t v58 = (uint64_t *)operator new(v57);
          v59 = &v58[v57 >> 3];
          v145 = v58;
          v147 = v59;
          memcpy(v58, v56, v57);
          v146 = v59;
        }
        v142 = 0;
        v143 = 0;
        v144 = 0;
        int64_t v60 = *a4;
        int64_t v61 = (unsigned char *)a4[1] - (unsigned char *)*a4;
        if (v61)
        {
          if (v61 < 0) {
            goto LABEL_169;
          }
          int64_t v62 = (char *)operator new(v61);
          v63 = &v62[8 * (v61 >> 3)];
          v142 = v62;
          v144 = v63;
          memcpy(v62, v60, v61);
          v143 = v63;
        }
        mlir::mps::arithmeticUnaryTileBaseKernel<__emulated_bf16,__emulated_bf16,(mlir::mps::arithmeticOp)14>(a1, a2, &v145, (uint64_t **)&v142);
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        int64_t v22 = v145;
        if (v145)
        {
          v146 = v145;
          goto LABEL_167;
        }
        return;
      }
      if (mlir::Type::isBF16((mlir::Type *)&Value) && mlir::Type::isF32((mlir::Type *)&v206))
      {
        v139 = 0;
        v140 = 0;
        v141 = 0;
        int64_t v64 = *a3;
        int64_t v65 = (unsigned char *)a3[1] - (unsigned char *)*a3;
        if (v65)
        {
          if (v65 < 0) {
            goto LABEL_169;
          }
          int64_t v66 = (uint64_t *)operator new(v65);
          v67 = (char *)&v66[v65 >> 3];
          v139 = v66;
          v141 = v67;
          memcpy(v66, v64, v65);
          v140 = (uint64_t *)v67;
        }
        v136 = 0;
        v137 = 0;
        v138 = 0;
        int64_t v68 = *a4;
        int64_t v69 = (unsigned char *)a4[1] - (unsigned char *)*a4;
        if (v69)
        {
          if (v69 < 0) {
            goto LABEL_169;
          }
          int64_t v70 = (char *)operator new(v69);
          v71 = &v70[8 * (v69 >> 3)];
          v136 = v70;
          v138 = v71;
          memcpy(v70, v68, v69);
          v137 = v71;
        }
        mlir::mps::arithmeticUnaryTileBaseKernel<float,__emulated_bf16,(mlir::mps::arithmeticOp)14>((uint64_t)a1, a2, (uint64_t)&v139, (uint64_t **)&v136);
        if (v136)
        {
          v137 = v136;
          operator delete(v136);
        }
        int64_t v22 = v139;
        if (v139)
        {
          v140 = v139;
          goto LABEL_167;
        }
        return;
      }
      if (mlir::Type::isInteger((mlir::Type *)&Value, 64))
      {
        v133 = 0;
        v134 = 0;
        v135 = 0;
        int64_t v72 = *a3;
        int64_t v73 = (unsigned char *)a3[1] - (unsigned char *)*a3;
        if (v73)
        {
          if (v73 < 0) {
            goto LABEL_169;
          }
          int64_t v74 = (uint64_t *)operator new(v73);
          v75 = &v74[v73 >> 3];
          v133 = v74;
          v135 = v75;
          memcpy(v74, v72, v73);
          v134 = v75;
        }
        v130 = 0;
        v131 = 0;
        v132 = 0;
        int64_t v76 = *a4;
        int64_t v77 = (unsigned char *)a4[1] - (unsigned char *)*a4;
        if (v77)
        {
          if (v77 < 0) {
            goto LABEL_169;
          }
          int64_t v78 = (char *)operator new(v77);
          v79 = &v78[8 * (v77 >> 3)];
          v130 = v78;
          v132 = v79;
          memcpy(v78, v76, v77);
          v131 = v79;
        }
        mlir::mps::arithmeticUnaryTileBaseKernel<long long,long long,(mlir::mps::arithmeticOp)13>(a1, a2, &v133, (uint64_t **)&v130);
        if (v130)
        {
          v131 = v130;
          operator delete(v130);
        }
        int64_t v22 = v133;
        if (v133)
        {
          v134 = v133;
          goto LABEL_167;
        }
        return;
      }
      if (!mlir::Type::isInteger((mlir::Type *)&Value, 32))
      {
        if (mlir::Type::isInteger((mlir::Type *)&Value, 16))
        {
          std::vector<long long>::vector(v123, (uint64_t)a3);
          std::vector<long long>::vector(v122, (uint64_t)a4);
          mlir::mps::arithmeticUnaryTileBaseKernel<short,short,(mlir::mps::arithmeticOp)7>(a1, a2, v123, (uint64_t **)v122);
          if (v122[0])
          {
            v122[1] = v122[0];
            operator delete(v122[0]);
          }
          int64_t v22 = v123[0];
          if (v123[0])
          {
            v123[1] = v123[0];
            goto LABEL_167;
          }
        }
        else
        {
          if (!mlir::Type::isInteger((mlir::Type *)&Value, 8) && !mlir::Type::isInteger((mlir::Type *)&Value, 1)) {
            mlir::mps::arithmeticUnaryTileKernelType<(mlir::mps::arithmeticOp)6>((mlir::Type *)&v204);
          }
          std::vector<long long>::vector(v121, (uint64_t)a3);
          std::vector<long long>::vector(v120, (uint64_t)a4);
          mlir::mps::arithmeticUnaryTileBaseKernel<signed char,signed char,(mlir::mps::arithmeticOp)7>(a1, a2, (uint64_t **)v121, (uint64_t **)v120);
          if (v120[0])
          {
            v120[1] = v120[0];
            operator delete(v120[0]);
          }
          int64_t v22 = (uint64_t *)v121[0];
          if (v121[0])
          {
            v121[1] = v121[0];
            goto LABEL_167;
          }
        }
        return;
      }
      v127 = 0;
      v128 = 0;
      v129 = 0;
      int64_t v96 = *a3;
      int64_t v97 = (unsigned char *)a3[1] - (unsigned char *)*a3;
      if (v97)
      {
        if (v97 < 0) {
          goto LABEL_169;
        }
        int64_t v98 = (uint64_t *)operator new(v97);
        v99 = &v98[v97 >> 3];
        v127 = v98;
        v129 = v99;
        memcpy(v98, v96, v97);
        v128 = v99;
      }
      v124 = 0;
      v125 = 0;
      v126 = 0;
      int64_t v100 = *a4;
      int64_t v101 = (unsigned char *)a4[1] - (unsigned char *)*a4;
      if (v101)
      {
        if (v101 < 0) {
          goto LABEL_169;
        }
        int64_t v102 = (char *)operator new(v101);
        v103 = &v102[8 * (v101 >> 3)];
        v124 = v102;
        v126 = v103;
        memcpy(v102, v100, v101);
        v125 = v103;
      }
      mlir::mps::arithmeticUnaryTileBaseKernel<int,int,(mlir::mps::arithmeticOp)7>(a1, a2, &v127, (uint64_t **)&v124);
      if (v124)
      {
        v125 = v124;
        operator delete(v124);
      }
      int64_t v22 = v127;
      if (v127)
      {
        v128 = v127;
        goto LABEL_167;
      }
      return;
    }
    if (v12 != &mlir::detail::TypeIDResolver<mlir::ComplexType,void>::id)
    {
      v157 = 0;
      v158 = 0;
      v159 = 0;
      int64_t v40 = *a3;
      int64_t v41 = (unsigned char *)a3[1] - (unsigned char *)*a3;
      if (v41)
      {
        if (v41 < 0) {
          goto LABEL_169;
        }
        int64_t v42 = (uint64_t *)operator new(v41);
        v43 = &v42[v41 >> 3];
        v157 = v42;
        v159 = v43;
        memcpy(v42, v40, v41);
        v158 = v43;
      }
      v154 = 0;
      v155 = 0;
      v156 = 0;
      int64_t v44 = *a4;
      int64_t v45 = (unsigned char *)a4[1] - (unsigned char *)*a4;
      if (v45)
      {
        if (v45 < 0) {
          goto LABEL_169;
        }
        int64_t v46 = (char *)operator new(v45);
        v47 = &v46[8 * (v45 >> 3)];
        v154 = v46;
        v156 = v47;
        memcpy(v46, v44, v45);
        v155 = v47;
      }
      mlir::mps::arithmeticUnaryTileBaseKernel<float,half,(mlir::mps::arithmeticOp)14>((uint64_t)a1, a2, &v157, (uint64_t **)&v154);
      if (v154)
      {
        v155 = v154;
        operator delete(v154);
      }
      int64_t v22 = v157;
      if (v157)
      {
        v158 = v157;
        goto LABEL_167;
      }
      return;
    }
    v163 = 0;
    v164 = 0;
    v165 = 0;
    int64_t v112 = *a3;
    int64_t v113 = (unsigned char *)a3[1] - (unsigned char *)*a3;
    if (v113)
    {
      if (v113 < 0) {
        goto LABEL_169;
      }
      int64_t v114 = (uint64_t *)operator new(v113);
      v115 = &v114[v113 >> 3];
      v163 = v114;
      v165 = v115;
      memcpy(v114, v112, v113);
      v164 = v115;
    }
    v160 = 0;
    v161 = 0;
    v162 = 0;
    int64_t v116 = *a4;
    int64_t v117 = (unsigned char *)a4[1] - (unsigned char *)*a4;
    if (v117)
    {
      if (v117 < 0) {
        goto LABEL_169;
      }
      v118 = (char *)operator new(v117);
      v119 = &v118[8 * (v117 >> 3)];
      v160 = v118;
      v162 = v119;
      memcpy(v118, v116, v117);
      v161 = v119;
    }
    mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<half,(void *)0>,(mlir::mps::arithmeticOp)14>((uint64_t)a1, a2, &v163, (uint64_t **)&v160);
    if (v160)
    {
      v161 = v160;
      operator delete(v160);
    }
    int64_t v22 = v163;
    if (v163)
    {
      v164 = v163;
      goto LABEL_167;
    }
    return;
  }
  if (v12 == &mlir::detail::TypeIDResolver<mlir::ComplexType,void>::id)
  {
    v187 = 0;
    v188 = 0;
    v189 = 0;
    int64_t v88 = *a3;
    int64_t v89 = (unsigned char *)a3[1] - (unsigned char *)*a3;
    if (v89)
    {
      if (v89 < 0) {
        goto LABEL_169;
      }
      int64_t v90 = (uint64_t *)operator new(v89);
      v91 = &v90[v89 >> 3];
      v187 = v90;
      v189 = v91;
      memcpy(v90, v88, v89);
      v188 = v91;
    }
    v185 = 0;
    v184 = 0;
    v186 = 0;
    int64_t v92 = *a4;
    int64_t v93 = (unsigned char *)a4[1] - (unsigned char *)*a4;
    if (v93)
    {
      if (v93 < 0) {
        goto LABEL_169;
      }
      int64_t v94 = (char *)operator new(v93);
      v95 = &v94[8 * (v93 >> 3)];
      v184 = v94;
      v186 = v95;
      memcpy(v94, v92, v93);
      v185 = v95;
    }
    mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)14>(a1, a2, &v187, (uint64_t **)&v184, a5, v23);
    if (v184)
    {
      v185 = v184;
      operator delete(v184);
    }
    int64_t v22 = v187;
    if (v187)
    {
      v188 = v187;
      goto LABEL_167;
    }
    return;
  }
  v182 = 0;
  v181 = 0;
  v183 = 0;
  int64_t v24 = *a3;
  int64_t v25 = (unsigned char *)a3[1] - (unsigned char *)*a3;
  if (v25)
  {
    if (v25 < 0) {
      goto LABEL_169;
    }
    int64_t v26 = (uint64_t *)operator new(v25);
    v27 = &v26[v25 >> 3];
    v181 = v26;
    v183 = v27;
    memcpy(v26, v24, v25);
    v182 = v27;
  }
  v179 = 0;
  __p = 0;
  v180 = 0;
  int64_t v28 = *a4;
  int64_t v29 = (unsigned char *)a4[1] - (unsigned char *)*a4;
  if (v29)
  {
    if (v29 < 0) {
      goto LABEL_169;
    }
    int64_t v30 = (char *)operator new(v29);
    v31 = &v30[8 * (v29 >> 3)];
    __p = v30;
    v180 = v31;
    memcpy(v30, v28, v29);
    v179 = v31;
  }
  mlir::mps::arithmeticUnaryTileBaseKernel<half,float,(mlir::mps::arithmeticOp)14>(a1, a2, &v181, (uint64_t **)&__p);
  if (__p)
  {
    v179 = __p;
    operator delete(__p);
  }
  int64_t v22 = v181;
  if (v181)
  {
    v182 = v181;
    goto LABEL_167;
  }
}

uint64_t mlir::mps::CPUNDArrayArithmeticUnaryKernel::CPUNDArrayArithmeticUnaryKernel(uint64_t result, int a2, double a3)
{
  *(_DWORD *)(result + 16) = a2;
  *(double *)(result + 24) = a3;
  *(void *)result = mlir::mps::CPUNDArrayArithmeticUnaryKernel::arithmeticUnaryTileKernel;
  *(void *)(result + 8) = 4;
  return result;
}

void *mlir::mps::recurseTransposeImpl(void *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void **a15, size_t a16)
{
  unsigned int v25 = result;
  uint64_t v16 = *(unsigned int *)(a4 + 8 * a11);
  if (*(_DWORD *)(a4 + 8 * a11))
  {
    uint64_t v17 = *(void *)(a9 + 8 * *(void *)(a6 + 8 * a11));
    uint64_t v18 = a12;
    size_t v19 = a16 * a12;
    do
    {
      if ((int)(v25 - 1) <= a11)
      {
        result = memcpy(*a15, (const void *)(*(void *)(a13 + 40) + v19), a16);
        *a15 = (char *)*a15 + a16;
      }
      else
      {
        result = (void *)mlir::mps::recurseTransposeImpl(v25, a2, a3, a4, a5, a6, a7);
      }
      v19 += v17 * a16;
      v18 += v17;
      --v16;
    }
    while (v16);
  }
  return result;
}

void mlir::mps::transpose(mlir::AffineBinaryOpExpr *this, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v4 = *((void *)this + 2);
  if (!v4) {
    return;
  }
  uint64_t v9 = *((void *)this + 3);
  uint64_t v10 = *((void *)this + 4);
  uint64_t v55 = *(void *)(a2 + 32);
  uint64_t v56 = *(void *)(a2 + 24);
  if (*((unsigned __int8 *)this + 58) | *(unsigned __int8 *)(a2 + 58)
    || *(_UNKNOWN **)(*(void *)mlir::AffineBinaryOpExpr::getRHS(this) + 136) == &mlir::detail::TypeIDResolver<mlir::ComplexType,void>::id
    || *(_UNKNOWN **)(*(void *)mlir::AffineBinaryOpExpr::getRHS((mlir::AffineBinaryOpExpr *)a2) + 136) == &mlir::detail::TypeIDResolver<mlir::ComplexType,void>::id)
  {
    goto LABEL_50;
  }
  long long v91 = 0u;
  memset(v92, 0, 48);
  long long v89 = 0u;
  long long v90 = 0u;
  long long v87 = 0u;
  long long v88 = 0u;
  long long v85 = 0u;
  long long v86 = 0u;
  long long v83 = 0u;
  long long v84 = 0u;
  long long v81 = 0u;
  long long v82 = 0u;
  long long v80 = 0u;
  int64_t v11 = *((void *)this + 2);
  if (v11 < 1) {
    goto LABEL_13;
  }
  if ((unint64_t)v11 < 4)
  {
    unint64_t v12 = 0;
LABEL_11:
    unint64_t v19 = v11 - v12;
    v20 = &v92[8 * v12 - 16];
    do
      *v20++ = v11 + ~*(void *)(a3 - 8 + 8 * v19--);
    while (v19);
    goto LABEL_13;
  }
  int64x2_t v13 = vdupq_n_s64(v11);
  unint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  v14 = (int8x16_t *)(a3 + 8 * v11 - 16);
  int64_t v15 = (int64x2_t *)v92;
  unint64_t v16 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    int8x16_t v17 = vmvnq_s8(*v14);
    int8x16_t v18 = vmvnq_s8(v14[-1]);
    v15[-1] = vaddq_s64(v13, (int64x2_t)vextq_s8(v17, v17, 8uLL));
    int64x2_t *v15 = vaddq_s64(v13, (int64x2_t)vextq_s8(v18, v18, 8uLL));
    v14 -= 2;
    v15 += 2;
    v16 -= 4;
  }
  while (v16);
  if (v11 != v12) {
    goto LABEL_11;
  }
LABEL_13:
  uint64_t v54 = v10;
  RHS = (void *)mlir::AffineBinaryOpExpr::getRHS(this);
  uint64_t v23 = *((void *)this + 3);
  unint64_t v22 = *((void *)this + 4);
  long long v58 = 0u;
  long long v59 = 0u;
  long long v60 = 0u;
  long long v61 = 0u;
  long long v62 = 0u;
  long long v63 = 0u;
  long long v64 = 0u;
  long long v65 = 0u;
  long long v66 = 0u;
  long long v67 = 0u;
  long long v68 = 0u;
  if (v22 <= 8)
  {
    int64_t v24 = RHS;
    DWORD1(v58) = ((unsigned __int16)v22 << 16) | 0x8000;
    LODWORD(v67) = mlir::mps::getBNNSDataType(RHS);
    mlir::mps::getDataSize(v24);
    if (v22)
    {
      uint64_t v25 = v23 + 8 * v22;
      *((void *)&v58 + 1) = *(void *)(v25 - 8);
      unint64_t v26 = v22 - 1;
      if (v22 != 1)
      {
        *(void *)&long long v59 = *(void *)(v25 - 16);
        if (v22 != 2)
        {
          uint64_t v27 = v23 + 8 * v22;
          *((void *)&v59 + 1) = *(void *)(v27 - 24);
          if (v22 != 3)
          {
            *(void *)&long long v60 = *(void *)(v27 - 32);
            if (v22 != 4)
            {
              uint64_t v28 = v23 + 8 * v22;
              *((void *)&v60 + 1) = *(void *)(v28 - 40);
              if (v22 != 5)
              {
                *(void *)&long long v61 = *(void *)(v28 - 48);
                if (v22 != 6)
                {
                  uint64_t v29 = v23 + 8 * v22;
                  *((void *)&v61 + 1) = *(void *)(v29 - 56);
                  if (v22 != 7) {
                    *(void *)&long long v62 = *(void *)(v29 - 64);
                  }
                }
              }
            }
          }
        }
      }
      *((void *)&v62 + 1) = 1;
      if (v22 >= 2)
      {
        int64_t v30 = (uint64_t *)&v63;
        uint64_t v31 = 1;
        do
        {
          v31 *= *(v30 - 9);
          *v30++ = v31;
          --v26;
        }
        while (v26);
      }
    }
    else
    {
      *((void *)&v62 + 1) = 1;
    }
    *((void *)&v66 + 1) = 0;
    *(void *)((char *)&v68 + 4) = 1065353216;
    if (*((void *)this + 4) <= 3uLL) {
      DWORD1(v58) = v22 << 16;
    }
  }
  long long v77 = v66;
  long long v78 = v67;
  long long v79 = v68;
  long long v73 = v62;
  long long v74 = v63;
  long long v75 = v64;
  long long v76 = v65;
  long long __p = v58;
  long long v70 = v59;
  long long v71 = v60;
  long long v72 = v61;
  int64_t v32 = (void *)mlir::AffineBinaryOpExpr::getRHS((mlir::AffineBinaryOpExpr *)a2);
  uint64_t v33 = *(void *)(a2 + 24);
  unint64_t v34 = *(void *)(a2 + 32);
  long long v35 = 0uLL;
  long long v58 = 0u;
  long long v59 = 0u;
  long long v60 = 0u;
  long long v61 = 0u;
  long long v62 = 0u;
  long long v63 = 0u;
  long long v64 = 0u;
  long long v65 = 0u;
  long long v66 = 0u;
  long long v67 = 0u;
  long long v68 = 0u;
  if (v34 <= 8)
  {
    int64_t v36 = v32;
    uint64_t v53 = v33;
    DWORD1(v58) = ((unsigned __int16)v34 << 16) | 0x8000;
    LODWORD(v67) = mlir::mps::getBNNSDataType(v32);
    mlir::mps::getDataSize(v36);
    if (v34)
    {
      uint64_t v37 = v53 + 8 * v34;
      *((void *)&v58 + 1) = *(void *)(v37 - 8);
      unint64_t v38 = v34 - 1;
      if (v34 != 1)
      {
        *(void *)&long long v59 = *(void *)(v37 - 16);
        if (v34 != 2)
        {
          uint64_t v39 = v53 + 8 * v34;
          *((void *)&v59 + 1) = *(void *)(v39 - 24);
          if (v34 != 3)
          {
            *(void *)&long long v60 = *(void *)(v39 - 32);
            if (v34 != 4)
            {
              uint64_t v40 = v53 + 8 * v34;
              *((void *)&v60 + 1) = *(void *)(v40 - 40);
              if (v34 != 5)
              {
                *(void *)&long long v61 = *(void *)(v40 - 48);
                if (v34 != 6)
                {
                  uint64_t v41 = v53 + 8 * v34;
                  *((void *)&v61 + 1) = *(void *)(v41 - 56);
                  if (v34 != 7) {
                    *(void *)&long long v62 = *(void *)(v41 - 64);
                  }
                }
              }
            }
          }
        }
      }
      *((void *)&v62 + 1) = 1;
      long long v35 = 0uLL;
      if (v34 >= 2)
      {
        int64_t v42 = (uint64_t *)&v63;
        uint64_t v43 = 1;
        do
        {
          v43 *= *(v42 - 9);
          *v42++ = v43;
          --v38;
        }
        while (v38);
      }
    }
    else
    {
      *((void *)&v62 + 1) = 1;
      long long v35 = 0uLL;
    }
    *((void *)&v66 + 1) = 0;
    *(void *)((char *)&v68 + 4) = 1065353216;
    if (*(void *)(a2 + 32) <= 3uLL) {
      DWORD1(v58) = v34 << 16;
    }
  }
  long long v88 = v66;
  long long v89 = v67;
  long long v90 = v68;
  long long v84 = v62;
  long long v85 = v63;
  long long v86 = v64;
  long long v87 = v65;
  long long v80 = v58;
  long long v81 = v59;
  long long v82 = v60;
  long long v83 = v61;
  long long v58 = v35;
  long long v59 = v35;
  LODWORD(v58) = 1;
  int64_t v44 = (void *)MEMORY[0x1852FCB10](&__p, &v58);
  if (!v44
    || (int64_t v45 = v44,
        int v46 = BNNSFilterApply(v44, *((const void **)this + 5), *(void **)(a2 + 40)),
        BNNSFilterDestroy(v45),
        v46))
  {
    uint64_t v10 = v54;
LABEL_50:
    long long __p = 0uLL;
    *(void *)&long long v70 = 0;
    std::vector<long long>::__append((uint64_t)&__p, v4);
    uint64_t v47 = __p;
    if (v4 >= 1)
    {
      uint64_t v48 = 1;
      int64_t v49 = v4;
      do
      {
        *(void *)(v47 - 8 + 8 * v49) = v48;
        v48 *= *(void *)(v9 - 8 + 8 * v49--);
      }
      while (v49);
    }
    int64_t v57 = *(void **)(a2 + 40);
    uint64_t v50 = (*((void *)&__p + 1) - v47) >> 3;
    *(void *)&long long v58 = mlir::AffineBinaryOpExpr::getRHS(this);
    size_t v51 = 1;
    if (!mlir::Type::isInteger((mlir::Type *)&v58, 1)) {
      size_t v51 = (unint64_t)(mlir::mps::getElementsAttrElementBitWidth(*(void **)this) + 7) >> 3;
    }
    mlir::mps::recurseTransposeImpl((void *)v4, v9, v10, v56, v55, a3, a4, v52, v47, v50, 0, 0, (uint64_t)this, a2, &v57, v51);
    if ((void)__p)
    {
      *((void *)&__p + 1) = __p;
      operator delete((void *)__p);
    }
  }
}

BOOL mlir::mps::doBNNSConv2D(const void **this, uint64_t **a2, void **a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, unint64_t a10, unint64_t a11, unint64_t a12, unint64_t a13, unint64_t a14, unint64_t a15)
{
  if (*(_UNKNOWN **)(*(void *)mlir::AffineBinaryOpExpr::getRHS((mlir::AffineBinaryOpExpr *)this) + 136) == &mlir::detail::TypeIDResolver<mlir::ComplexType,void>::id
    || *(_UNKNOWN **)(*(void *)mlir::AffineBinaryOpExpr::getRHS((mlir::AffineBinaryOpExpr *)a2) + 136) == &mlir::detail::TypeIDResolver<mlir::ComplexType,void>::id)
  {
    return 0;
  }
  BOOL v23 = *(_UNKNOWN **)(*(void *)mlir::AffineBinaryOpExpr::getRHS((mlir::AffineBinaryOpExpr *)a3) + 136) != &mlir::detail::TypeIDResolver<mlir::ComplexType,void>::id
     && *((unsigned char *)this + 58) == 0;
  if (!v23 || *((unsigned char *)a2 + 58) != 0) {
    return 0;
  }
  int BNNSDataType = mlir::mps::getBNNSDataType(*this);
  int v27 = mlir::mps::getBNNSDataType(*a2);
  int v28 = mlir::mps::getBNNSDataType(*a3);
  BOOL result = 0;
  if (BNNSDataType == v27 && BNNSDataType == v28)
  {
    if (this[2])
    {
      uint64_t v29 = (uint64_t *)this[3];
      uint64_t v51 = v29[3];
      uint64_t v52 = v29[2];
      uint64_t v30 = *v29;
      uint64_t v50 = *((void *)this[3] + 1);
    }
    else
    {
      uint64_t v52 = 1;
      uint64_t v50 = 1;
      uint64_t v51 = 1;
      uint64_t v30 = 1;
    }
    size_t batch_size = v30;
    if (a3[2])
    {
      uint64_t v31 = a3[3];
      uint64_t v32 = v31[3];
      uint64_t v34 = v31[1];
      uint64_t v33 = v31[2];
      uint64_t v46 = v34;
      uint64_t v47 = v32;
    }
    else
    {
      uint64_t v47 = 1;
      uint64_t v46 = 1;
      uint64_t v33 = 1;
    }
    uint64_t v49 = v33;
    if (a2[2])
    {
      long long v35 = a2[3];
      uint64_t v45 = *v35;
      uint64_t v44 = v35[3];
      uint64_t v36 = v35[1];
      uint64_t v37 = v35[2];
    }
    else
    {
      uint64_t v44 = 1;
      uint64_t v45 = 1;
      uint64_t v36 = 1;
      uint64_t v37 = 1;
    }
    uint64_t v43 = v37;
    unint64_t v38 = v36 * a4;
    memset(v126, 0, 32);
    v126[0] = 1;
    bzero(&v62, 0x230uLL);
    int v39 = mlir::mps::getBNNSDataType(*this);
    v53[0] = 0x3000000000000;
    v53[1] = v51;
    v53[2] = v52;
    v53[3] = v50;
    int64x2_t v54 = vdupq_n_s64(1uLL);
    int64x2_t v55 = v54;
    uint64_t v56 = 1;
    long long v57 = 0u;
    long long v58 = 0u;
    long long v59 = 0u;
    long long v60 = 0u;
    uint64_t v61 = 0;
    int v62 = v39;
    uint64_t v63 = 0;
    int v64 = 65568;
    uint64_t v65 = 1065353216;
    uint64_t v40 = a2[5];
    uint64_t v66 = 0x4000000000000;
    uint64_t v67 = v44;
    uint64_t v68 = v43;
    unint64_t v69 = v38 / a4;
    uint64_t v70 = v45;
    int64x2_t v71 = v54;
    int64x2_t v72 = v54;
    long long v76 = 0u;
    long long v75 = 0u;
    long long v74 = 0u;
    long long v73 = 0u;
    long long v77 = v40;
    int v78 = BNNSDataType;
    uint64_t v79 = 0;
    int v80 = BNNSDataType;
    uint64_t v81 = 1065353216;
    uint64_t v82 = 0x3000000000000;
    uint64_t v83 = v47;
    uint64_t v84 = v49;
    uint64_t v85 = v46;
    int64x2_t v86 = v54;
    int64x2_t v87 = v54;
    long long v89 = 0u;
    long long v90 = 0u;
    long long v91 = 0u;
    long long v92 = 0u;
    uint64_t v88 = 1;
    uint64_t v93 = 0;
    int v94 = BNNSDataType;
    uint64_t v95 = 0;
    int v96 = BNNSDataType;
    uint64_t v97 = 1065353216;
    uint64_t v98 = 0x1000000000000;
    uint64_t v99 = v45;
    int64x2_t v100 = v54;
    int64x2_t v101 = v54;
    int64x2_t v102 = v54;
    uint64_t v103 = 1;
    long long v107 = 0u;
    long long v106 = 0u;
    long long v105 = 0u;
    long long v104 = 0u;
    uint64_t v108 = 0;
    int v109 = BNNSDataType;
    uint64_t v110 = 0;
    int v111 = BNNSDataType;
    uint64_t v112 = 1065353216;
    long long v114 = 0u;
    long long v115 = 0u;
    long long v113 = 0u;
    uint64_t v116 = a7;
    uint64_t v117 = a8;
    uint64_t v118 = a5;
    uint64_t v119 = a6;
    long long v120 = 0u;
    unint64_t v121 = a4;
    unint64_t v122 = a11;
    unint64_t v123 = a12;
    unint64_t v124 = a13;
    unint64_t v125 = a14;
    uint64_t v41 = (void *)MEMORY[0x1852FCB00](v53, v126);
    int v42 = BNNSFilterApplyBatch(v41, batch_size, this[5], v50 * v52 * v51, a3[5], v46 * v47 * v49);
    BNNSFilterDestroy(v41);
    return v42 == 0;
  }
  return result;
}

void mlir::mps::recurseNonZeroImpl(mlir::AffineBinaryOpExpr *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = 0;
  uint64_t v9 = a2 + 1;
  uint64_t v10 = (void *)(a4 + 16);
  while (1)
  {
    unint64_t v11 = *((void *)a1 + 2);
    uint64_t v12 = 1;
    uint64_t v13 = (v11 & (a2 >> 63)) + a2;
    if (v13 >= 0 && v11) {
      uint64_t v12 = *(void *)(*((void *)a1 + 3) + 8 * v13);
    }
    if (v8 >= v12) {
      break;
    }
    v14 = *(int **)a3;
    *(void *)(*(void *)a3 + 8 * a2) = v8;
    if (*((void *)a1 + 2) - 1 == a2)
    {
      uint64_t v38 = 0;
      uint64_t v15 = *(unsigned int *)(a3 + 8);
      if (v15)
      {
        uint64_t v16 = 0;
        uint64_t v17 = 0;
        int8x16_t v18 = (void *)*((void *)a1 + 8);
        if (v15 == 1) {
          goto LABEL_14;
        }
        uint64_t v19 = 0;
        uint64_t v20 = 0;
        uint64_t v16 = v15 & 0xFFFFFFFE;
        v21 = v14 + 2;
        unint64_t v22 = v18 + 1;
        uint64_t v23 = v16;
        do
        {
          v19 += *(v22 - 1) * *(v21 - 1);
          v20 += *v22 * *v21;
          v21 += 2;
          v22 += 2;
          v23 -= 2;
        }
        while (v23);
        uint64_t v17 = v20 + v19;
        if (v16 != v15)
        {
LABEL_14:
          uint64_t v24 = v15 - v16;
          uint64_t v25 = 2 * v16;
          unint64_t v26 = &v18[(unint64_t)v25 / 2];
          int v27 = (uint64_t *)&v14[v25];
          do
          {
            uint64_t v29 = *v27++;
            uint64_t v28 = v29;
            uint64_t v30 = *v26++;
            v17 += v30 * v28;
            --v24;
          }
          while (v24);
        }
      }
      else
      {
        uint64_t v17 = *(unsigned int *)(a3 + 8);
      }
      uint64_t v31 = (void *)*((void *)a1 + 5);
      uint64_t RHS = mlir::AffineBinaryOpExpr::getRHS(a1);
      if (mlir::Type::isInteger((mlir::Type *)&RHS, 1)) {
        size_t v32 = 1;
      }
      else {
        size_t v32 = (unint64_t)(mlir::mps::getElementsAttrElementBitWidth(*(void **)a1) + 7) >> 3;
      }
      memcpy(&v38, (char *)v31 + v17, v32);
      if (v38)
      {
        uint64_t v33 = *(unsigned int *)(a3 + 8);
        if (v33)
        {
          uint64_t v34 = *(int **)a3;
          unsigned int v35 = *(_DWORD *)(a4 + 8);
          uint64_t v36 = 8 * v33;
          do
          {
            int v37 = *v34;
            if (v35 >= *(_DWORD *)(a4 + 12))
            {
              llvm::SmallVectorBase<unsigned int>::grow_pod(a4, v10, v35 + 1, 4);
              unsigned int v35 = *(_DWORD *)(a4 + 8);
            }
            *(_DWORD *)(*(void *)a4 + 4 * v35) = v37;
            unsigned int v35 = *(_DWORD *)(a4 + 8) + 1;
            *(_DWORD *)(a4 + 8) = v35;
            v34 += 2;
            v36 -= 8;
          }
          while (v36);
        }
      }
    }
    else
    {
      mlir::mps::recurseNonZeroImpl(a1, v9, a3, a4);
    }
    ++v8;
  }
}

void mlir::mps::computeNonZeroIndices(mlir::mps *this@<X0>, uint64_t a2@<X8>)
{
  v17[32] = *MEMORY[0x1E4F143B8];
  __src = (void *)mlir::AffineBinaryOpExpr::getRHS(this);
  if (!mlir::Type::isInteger((mlir::Type *)&__src, 1)
    && (unint64_t)(mlir::mps::getElementsAttrElementBitWidth(*(void **)this) - 65) <= 0xFFFFFFFFFFFFFFB7)
  {
    *(unsigned char *)a2 = 0;
    *(unsigned char *)(a2 + 272) = 0;
    return;
  }
  __src = v17;
  uint64_t v16 = 0x4000000000;
  unint64_t v5 = *((void *)this + 2);
  unint64_t v11 = v14;
  int v13 = 4;
  if (v5 < 5)
  {
    if (!v5) {
      goto LABEL_9;
    }
    size_t v7 = 8 * v5;
    v6 = v14;
  }
  else
  {
    int v12 = 0;
    llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v11, v14, v5, 8);
    v6 = v11;
    size_t v7 = 8 * v5;
  }
  bzero(v6, v7);
LABEL_9:
  int v12 = v5;
  mlir::mps::recurseNonZeroImpl(this, 0, (uint64_t)&v11, (uint64_t)&__src);
  *(void *)a2 = a2 + 16;
  *(void *)(a2 + 8) = 0x4000000000;
  int v8 = v16;
  if (v16 && &__src != (void **)a2)
  {
    if (__src == v17)
    {
      unsigned int v10 = v16;
      if (v16 < 0x41
        || (llvm::SmallVectorBase<unsigned int>::grow_pod(a2, (void *)(a2 + 16), v16, 4),
            (unsigned int v10 = v16) != 0))
      {
        memcpy(*(void **)a2, __src, 4 * v10);
      }
      *(_DWORD *)(a2 + 8) = v8;
    }
    else
    {
      *(void *)a2 = __src;
      int v9 = HIDWORD(v16);
      *(_DWORD *)(a2 + 8) = v8;
      *(_DWORD *)(a2 + 12) = v9;
      __src = v17;
      HIDWORD(v16) = 0;
    }
    LODWORD(v16) = 0;
  }
  *(unsigned char *)(a2 + 272) = 1;
  if (v11 != v14) {
    free(v11);
  }
  if (__src != v17) {
    free(__src);
  }
}

uint64_t mlir::mps::writeConstantData(llvm::raw_ostream *a1, uint64_t a2, uint64_t a3)
{
  mlir::mps::CPUNDArray::CPUNDArray(v6, a2, a3);
  uint64_t v4 = mlir::mps::writeConstantData(a1, v6);
  if (v8 && v7) {
    free(v7);
  }
  if (__p)
  {
    unsigned int v10 = __p;
    operator delete(__p);
  }
  return v4;
}

uint64_t mlir::mps::writeConstantData(llvm::raw_ostream *a1, void **a2)
{
  v3 = a1;
  uint64_t v4 = (const char *)a2[5];
  if (!*((unsigned char *)a2 + 58))
  {
    size_t v6 = (size_t)a2[6];
    size_t v7 = (const char *)a2[5];
LABEL_5:
    llvm::raw_ostream::write(a1, v7, v6);
    goto LABEL_15;
  }
  uint64_t RHS = mlir::AffineBinaryOpExpr::getRHS((mlir::AffineBinaryOpExpr *)a2);
  if (mlir::Type::isInteger((mlir::Type *)&RHS, 1))
  {
    unint64_t ElementsAttrElementBitWidth = 8;
    goto LABEL_12;
  }
  unint64_t ElementsAttrElementBitWidth = mlir::mps::getElementsAttrElementBitWidth(*a2);
  if (ElementsAttrElementBitWidth >= 8)
  {
LABEL_12:
    uint64_t Value = (uint64_t *)mlir::ArrayAttr::getValue((mlir::ArrayAttr *)a2);
    if (mlir::ShapedType::getNumElements(Value, v18))
    {
      unint64_t v19 = 0;
      size_t v20 = ElementsAttrElementBitWidth >> 3;
      do
      {
        llvm::raw_ostream::write(v3, v4, v20);
        ++v19;
        v21 = (uint64_t *)mlir::ArrayAttr::getValue((mlir::ArrayAttr *)a2);
      }
      while (v19 < mlir::ShapedType::getNumElements(v21, v22));
    }
    goto LABEL_15;
  }
  int v8 = *(unsigned __int8 *)a2[5];
  int v9 = (uint64_t *)mlir::ArrayAttr::getValue((mlir::ArrayAttr *)a2);
  if (mlir::ShapedType::getNumElements(v9, v10))
  {
    unint64_t v11 = 0;
    unsigned int v12 = 0;
    unsigned int v13 = 0;
    unsigned int v14 = v8 & ~(-1 << ElementsAttrElementBitWidth);
    do
    {
      v13 |= v14 << v12;
      v12 += ElementsAttrElementBitWidth;
      if (v12 >= 8)
      {
        char v25 = v13;
        llvm::raw_ostream::write(v3, &v25, 1uLL);
        unsigned int v13 = v14 >> (ElementsAttrElementBitWidth - (v12 - 8));
        v12 -= 8;
      }
      ++v11;
      uint64_t v15 = (uint64_t *)mlir::ArrayAttr::getValue((mlir::ArrayAttr *)a2);
    }
    while (v11 < mlir::ShapedType::getNumElements(v15, v16));
    if (v12)
    {
      char v26 = v13;
      size_t v7 = &v26;
      a1 = v3;
      size_t v6 = 1;
      goto LABEL_5;
    }
  }
LABEL_15:
  if (*((void *)v3 + 4) != *((void *)v3 + 2)) {
    llvm::raw_ostream::flush_nonempty(v3);
  }
  return (*(uint64_t (**)(llvm::raw_ostream *))(*(void *)v3 + 80))(v3)
       + *((void *)v3 + 4)
       - *((void *)v3 + 2);
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)0>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v17 = 1;
    char v18 = 1;
LABEL_7:
    uint64_t v19 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v17 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v18 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v18 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v19 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v58 = v19;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v20 = 0;
    uint64_t v57 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v22 = *(void *)(v4 + 16);
  uint64_t v23 = v22 - 4;
  if (v22 >= 4)
  {
    if (v23 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t v57 = 0;
    }
    else {
      uint64_t v57 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v24 = v22 - 3;
    goto LABEL_26;
  }
  if (v22 == 3)
  {
    uint64_t v24 = 0;
    uint64_t v57 = 0;
LABEL_26:
    if (v24 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    }
    uint64_t v27 = v22 - 2;
    goto LABEL_31;
  }
  if (v22 < 2)
  {
    uint64_t v25 = 0;
    uint64_t v20 = 0;
    uint64_t v57 = 0;
    uint64_t result = 0;
    uint64_t v26 = 0;
    if (v22 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v27 = 0;
  uint64_t result = 0;
  uint64_t v57 = 0;
LABEL_31:
  if (v27 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v27) == 1) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = *(void *)(*(void *)(v4 + 64) + 8 * v27);
  }
  uint64_t v25 = v22 - 1;
LABEL_36:
  if (v25 > (int)v22 - 1)
  {
LABEL_37:
    uint64_t v26 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v31 = 0;
    uint64_t v56 = 0;
    uint64_t v32 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v25) != 1)
  {
    uint64_t v26 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v26 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v28 = *(void *)(v5 + 16);
  uint64_t v29 = v28 - 4;
  if (v28 >= 4)
  {
    if (v29 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v56 = 0;
    }
    else {
      uint64_t v56 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v30 = v28 - 3;
    goto LABEL_56;
  }
  if (v28 == 3)
  {
    uint64_t v30 = 0;
    uint64_t v56 = 0;
LABEL_56:
    if (v30 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v30) == 1) {
      uint64_t v32 = 0;
    }
    else {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v30);
    }
    uint64_t v35 = v28 - 2;
    goto LABEL_61;
  }
  if (v28 >= 2)
  {
    uint64_t v35 = 0;
    uint64_t v32 = 0;
    uint64_t v56 = 0;
LABEL_61:
    if (v35 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v35) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v35);
    }
    uint64_t v33 = v28 - 1;
    goto LABEL_66;
  }
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v56 = 0;
  uint64_t v32 = 0;
  uint64_t v34 = 0;
  if (v28 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v33 <= (int)v28 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v33) != 1)
    {
      uint64_t v34 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v34 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v38 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v34 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v36 = 0;
    if (v18) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v18) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v37 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v38 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v39 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v38 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v39 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v58 >= 1)
  {
    uint64_t v40 = 0;
    uint64_t v41 = (float32x2_t *)(**(void **)a3 + *(void *)(v4 + 40));
    int v42 = (float32x2_t *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v43 = (float32x2_t *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v17 >= 1)
      {
        uint64_t v44 = 0;
        uint64_t v45 = v41;
        uint64_t v46 = v42;
        uint64_t v47 = v43;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v48 = 0;
            uint64_t v49 = v45;
            uint64_t v50 = v46;
            uint64_t v51 = v47;
            do
            {
              uint64_t v52 = v10;
              uint64_t v53 = v49;
              int64x2_t v54 = v50;
              int64x2_t v55 = v51;
              if (v10 >= 1)
              {
                do
                {
                  float32x2_t *v55 = vadd_f32(*v53, *v54);
                  int64x2_t v55 = (float32x2_t *)((char *)v55 + v39);
                  int64x2_t v54 = (float32x2_t *)((char *)v54 + v34);
                  uint64_t v53 = (float32x2_t *)((char *)v53 + v26);
                  --v52;
                }
                while (v52);
              }
              ++v48;
              uint64_t v51 = (float32x2_t *)((char *)v51 + v38);
              uint64_t v50 = (float32x2_t *)((char *)v50 + v31);
              uint64_t v49 = (float32x2_t *)((char *)v49 + v20);
            }
            while (v48 != v13);
          }
          ++v44;
          uint64_t v47 = (float32x2_t *)((char *)v47 + v37);
          uint64_t v46 = (float32x2_t *)((char *)v46 + v32);
          uint64_t v45 = (float32x2_t *)((char *)v45 + result);
        }
        while (v44 != v17);
      }
      ++v40;
      uint64_t v43 = (float32x2_t *)((char *)v43 + v36);
      int v42 = (float32x2_t *)((char *)v42 + v56);
      uint64_t v41 = (float32x2_t *)((char *)v41 + v57);
    }
    while (v40 != v58);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<float,float,float,(mlir::mps::arithmeticOp)0>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v17 = 1;
    char v18 = 1;
LABEL_7:
    uint64_t v19 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v17 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v18 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v18 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v19 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v58 = v19;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v20 = 0;
    uint64_t v57 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v22 = *(void *)(v4 + 16);
  uint64_t v23 = v22 - 4;
  if (v22 >= 4)
  {
    if (v23 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t v57 = 0;
    }
    else {
      uint64_t v57 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v24 = v22 - 3;
    goto LABEL_26;
  }
  if (v22 == 3)
  {
    uint64_t v24 = 0;
    uint64_t v57 = 0;
LABEL_26:
    if (v24 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    }
    uint64_t v27 = v22 - 2;
    goto LABEL_31;
  }
  if (v22 < 2)
  {
    uint64_t v25 = 0;
    uint64_t v20 = 0;
    uint64_t v57 = 0;
    uint64_t result = 0;
    uint64_t v26 = 0;
    if (v22 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v27 = 0;
  uint64_t result = 0;
  uint64_t v57 = 0;
LABEL_31:
  if (v27 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v27) == 1) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = *(void *)(*(void *)(v4 + 64) + 8 * v27);
  }
  uint64_t v25 = v22 - 1;
LABEL_36:
  if (v25 > (int)v22 - 1)
  {
LABEL_37:
    uint64_t v26 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v31 = 0;
    uint64_t v56 = 0;
    uint64_t v32 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v25) != 1)
  {
    uint64_t v26 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v26 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v28 = *(void *)(v5 + 16);
  uint64_t v29 = v28 - 4;
  if (v28 >= 4)
  {
    if (v29 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v56 = 0;
    }
    else {
      uint64_t v56 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v30 = v28 - 3;
    goto LABEL_56;
  }
  if (v28 == 3)
  {
    uint64_t v30 = 0;
    uint64_t v56 = 0;
LABEL_56:
    if (v30 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v30) == 1) {
      uint64_t v32 = 0;
    }
    else {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v30);
    }
    uint64_t v35 = v28 - 2;
    goto LABEL_61;
  }
  if (v28 >= 2)
  {
    uint64_t v35 = 0;
    uint64_t v32 = 0;
    uint64_t v56 = 0;
LABEL_61:
    if (v35 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v35) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v35);
    }
    uint64_t v33 = v28 - 1;
    goto LABEL_66;
  }
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v56 = 0;
  uint64_t v32 = 0;
  uint64_t v34 = 0;
  if (v28 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v33 <= (int)v28 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v33) != 1)
    {
      uint64_t v34 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v34 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v38 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v34 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v36 = 0;
    if (v18) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v18) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v37 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v38 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v39 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v38 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v39 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v58 >= 1)
  {
    uint64_t v40 = 0;
    uint64_t v41 = (float *)(**(void **)a3 + *(void *)(v4 + 40));
    int v42 = (float *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v43 = (float *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v17 >= 1)
      {
        uint64_t v44 = 0;
        uint64_t v45 = v41;
        uint64_t v46 = v42;
        uint64_t v47 = v43;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v48 = 0;
            uint64_t v49 = v45;
            uint64_t v50 = v46;
            uint64_t v51 = v47;
            do
            {
              uint64_t v52 = v10;
              uint64_t v53 = v49;
              int64x2_t v54 = v50;
              int64x2_t v55 = v51;
              if (v10 >= 1)
              {
                do
                {
                  float *v55 = *v53 + *v54;
                  int64x2_t v55 = (float *)((char *)v55 + v39);
                  int64x2_t v54 = (float *)((char *)v54 + v34);
                  uint64_t v53 = (float *)((char *)v53 + v26);
                  --v52;
                }
                while (v52);
              }
              ++v48;
              uint64_t v51 = (float *)((char *)v51 + v38);
              uint64_t v50 = (float *)((char *)v50 + v31);
              uint64_t v49 = (float *)((char *)v49 + v20);
            }
            while (v48 != v13);
          }
          ++v44;
          uint64_t v47 = (float *)((char *)v47 + v37);
          uint64_t v46 = (float *)((char *)v46 + v32);
          uint64_t v45 = (float *)((char *)v45 + result);
        }
        while (v44 != v17);
      }
      ++v40;
      uint64_t v43 = (float *)((char *)v43 + v36);
      int v42 = (float *)((char *)v42 + v56);
      uint64_t v41 = (float *)((char *)v41 + v57);
    }
    while (v40 != v58);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)0>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4, float16x4_t a5)
{
  uint64_t v5 = **a1;
  uint64_t v6 = (*a1)[1];
  uint64_t v7 = **a2;
  uint64_t v8 = *(void *)(v7 + 16);
  uint64_t v9 = v8 - 1;
  if (v8 <= 0)
  {
    uint64_t v12 = v8 - 2;
    uint64_t v11 = 1;
    goto LABEL_5;
  }
  uint64_t v10 = *(void *)(v7 + 24);
  uint64_t v11 = *(void *)(v10 + 8 * v9);
  if (v8 == 1)
  {
    uint64_t v12 = -1;
LABEL_5:
    uint64_t v13 = v8 - 3;
    uint64_t v14 = 1;
    char v15 = 1;
LABEL_6:
    uint64_t v16 = v8 - 4;
    char v17 = 1;
    uint64_t v18 = 1;
    char v19 = 1;
LABEL_7:
    uint64_t v20 = 1;
    goto LABEL_8;
  }
  uint64_t v12 = v8 - 2;
  uint64_t v14 = *(void *)(v10 + 8 * (v8 - 2));
  if ((unint64_t)v8 <= 2)
  {
    uint64_t v12 = 0;
    char v15 = 0;
    uint64_t v13 = -1;
    goto LABEL_6;
  }
  uint64_t v13 = v8 - 3;
  uint64_t v18 = *(void *)(v10 + 8 * (v8 - 3));
  if (v8 == 3)
  {
    char v15 = 0;
    uint64_t v13 = 0;
    char v19 = 0;
    uint64_t v16 = -1;
    uint64_t v12 = 1;
    char v17 = 1;
    goto LABEL_7;
  }
  char v17 = 0;
  char v15 = 0;
  char v19 = 0;
  uint64_t v16 = v8 - 4;
  uint64_t v20 = *(void *)(v10 + 8 * (v8 - 4));
LABEL_8:
  uint64_t v59 = v20;
  if (*(unsigned char *)(v5 + 58))
  {
    uint64_t v21 = 0;
    uint64_t v58 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v23 = *(void *)(v5 + 16);
  uint64_t v24 = v23 - 4;
  if (v23 >= 4)
  {
    if (v24 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v24) == 1) {
      uint64_t v58 = 0;
    }
    else {
      uint64_t v58 = *(void *)(*(void *)(v5 + 64) + 8 * v24);
    }
    uint64_t v25 = v23 - 3;
    goto LABEL_26;
  }
  if (v23 == 3)
  {
    uint64_t v25 = 0;
    uint64_t v58 = 0;
LABEL_26:
    if (v25 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v25) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v5 + 64) + 8 * v25);
    }
    uint64_t v28 = v23 - 2;
    goto LABEL_31;
  }
  if (v23 < 2)
  {
    uint64_t v26 = 0;
    uint64_t v21 = 0;
    uint64_t v58 = 0;
    uint64_t result = 0;
    uint64_t v27 = 0;
    if (v23 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v28 = 0;
  uint64_t result = 0;
  uint64_t v58 = 0;
LABEL_31:
  if (v28 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
    uint64_t v21 = 0;
  }
  else {
    uint64_t v21 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
  }
  uint64_t v26 = v23 - 1;
LABEL_36:
  if (v26 > (int)v23 - 1)
  {
LABEL_37:
    uint64_t v27 = 0;
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v32 = 0;
    uint64_t v57 = 0;
    uint64_t v33 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v5 + 24) + 8 * v26) != 1)
  {
    uint64_t v27 = *(void *)(*(void *)(v5 + 64) + 8 * v26);
    if (*(unsigned char *)(v6 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v27 = 0;
LABEL_46:
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v29 = *(void *)(v6 + 16);
  uint64_t v30 = v29 - 4;
  if (v29 >= 4)
  {
    if (v30 > (int)v29 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v30) == 1) {
      uint64_t v57 = 0;
    }
    else {
      uint64_t v57 = *(void *)(*(void *)(v6 + 64) + 8 * v30);
    }
    uint64_t v31 = v29 - 3;
    goto LABEL_56;
  }
  if (v29 == 3)
  {
    uint64_t v31 = 0;
    uint64_t v57 = 0;
LABEL_56:
    if (v31 > (int)v29 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v31) == 1) {
      uint64_t v33 = 0;
    }
    else {
      uint64_t v33 = *(void *)(*(void *)(v6 + 64) + 8 * v31);
    }
    uint64_t v36 = v29 - 2;
    goto LABEL_61;
  }
  if (v29 >= 2)
  {
    uint64_t v36 = 0;
    uint64_t v33 = 0;
    uint64_t v57 = 0;
LABEL_61:
    if (v36 > (int)v29 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v36) == 1) {
      uint64_t v32 = 0;
    }
    else {
      uint64_t v32 = *(void *)(*(void *)(v6 + 64) + 8 * v36);
    }
    uint64_t v34 = v29 - 1;
    goto LABEL_66;
  }
  uint64_t v34 = 0;
  uint64_t v32 = 0;
  uint64_t v57 = 0;
  uint64_t v33 = 0;
  uint64_t v35 = 0;
  if (v29 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v34 <= (int)v29 - 1)
  {
    if (*(void *)(*(void *)(v6 + 24) + 8 * v34) != 1)
    {
      uint64_t v35 = *(void *)(*(void *)(v6 + 64) + 8 * v34);
      if (!*(unsigned char *)(v7 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v35 = 0;
LABEL_78:
    if (!*(unsigned char *)(v7 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v39 = 0;
    uint64_t v37 = 0;
    uint64_t v38 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v35 = 0;
  if (*(unsigned char *)(v7 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v17 & 1) != 0 || v16 > (int)v8 - 1 || *(void *)(*(void *)(v7 + 24) + 8 * v16) == 1)
  {
    uint64_t v37 = 0;
    if (v19) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v37 = *(void *)(*(void *)(v7 + 64) + 8 * v16);
    if (v19) {
      goto LABEL_98;
    }
  }
  if (v13 > (int)v8 - 1 || *(void *)(*(void *)(v7 + 24) + 8 * v13) == 1)
  {
LABEL_98:
    uint64_t v38 = 0;
    if (v15) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v38 = *(void *)(*(void *)(v7 + 64) + 8 * v13);
  if (v15) {
    goto LABEL_101;
  }
LABEL_99:
  if (v12 <= (int)v8 - 1 && *(void *)(*(void *)(v7 + 24) + 8 * v12) != 1)
  {
    uint64_t v39 = *(void *)(*(void *)(v7 + 64) + 8 * v12);
    if (v8 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v40 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v39 = 0;
  if (v8 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v9 > (int)v8 - 1 || *(void *)(*(void *)(v7 + 24) + 8 * v9) == 1) {
    goto LABEL_80;
  }
  uint64_t v40 = *(void *)(*(void *)(v7 + 64) + 8 * v9);
LABEL_81:
  if (v59 >= 1)
  {
    uint64_t v41 = 0;
    int v42 = (__int32 *)(**(void **)a3 + *(void *)(v5 + 40));
    uint64_t v43 = (float32x2_t *)(*(void *)(*(void *)a3 + 8) + *(void *)(v6 + 40));
    uint64_t v44 = (double *)(**a4 + *(void *)(v7 + 40));
    do
    {
      if (v18 >= 1)
      {
        uint64_t v45 = 0;
        uint64_t v46 = v42;
        uint64_t v47 = v43;
        uint64_t v48 = v44;
        do
        {
          if (v14 >= 1)
          {
            uint64_t v49 = 0;
            uint64_t v50 = v46;
            uint64_t v51 = v47;
            uint64_t v52 = v48;
            do
            {
              uint64_t v53 = v11;
              int64x2_t v54 = v50;
              int64x2_t v55 = v51;
              uint64_t v56 = v52;
              if (v11 >= 1)
              {
                do
                {
                  a5.i32[0] = *v54;
                  a5 = (float16x4_t)vadd_f32(*v55, (float32x2_t)*(_OWORD *)&vcvtq_f32_f16(a5));
                  double *v56 = *(double *)&a5;
                  uint64_t v56 = (double *)((char *)v56 + v40);
                  int64x2_t v55 = (float32x2_t *)((char *)v55 + v35);
                  int64x2_t v54 = (__int32 *)((char *)v54 + v27);
                  --v53;
                }
                while (v53);
              }
              ++v49;
              uint64_t v52 = (double *)((char *)v52 + v39);
              uint64_t v51 = (float32x2_t *)((char *)v51 + v32);
              uint64_t v50 = (__int32 *)((char *)v50 + v21);
            }
            while (v49 != v14);
          }
          ++v45;
          uint64_t v48 = (double *)((char *)v48 + v38);
          uint64_t v47 = (float32x2_t *)((char *)v47 + v33);
          uint64_t v46 = (__int32 *)((char *)v46 + result);
        }
        while (v45 != v18);
      }
      ++v41;
      uint64_t v44 = (double *)((char *)v44 + v37);
      uint64_t v43 = (float32x2_t *)((char *)v43 + v57);
      int v42 = (__int32 *)((char *)v42 + v58);
    }
    while (v41 != v59);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<half,float,float,(mlir::mps::arithmeticOp)0>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v17 = 1;
    char v18 = 1;
LABEL_7:
    uint64_t v19 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v17 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v18 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v18 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v19 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v64 = v19;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v20 = 0;
    uint64_t v63 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v22 = *(void *)(v4 + 16);
  uint64_t v23 = v22 - 4;
  if (v22 >= 4)
  {
    if (v23 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t v63 = 0;
    }
    else {
      uint64_t v63 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v24 = v22 - 3;
    goto LABEL_26;
  }
  if (v22 == 3)
  {
    uint64_t v24 = 0;
    uint64_t v63 = 0;
LABEL_26:
    if (v24 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    }
    uint64_t v27 = v22 - 2;
    goto LABEL_31;
  }
  if (v22 < 2)
  {
    uint64_t v25 = 0;
    uint64_t v20 = 0;
    uint64_t v63 = 0;
    uint64_t result = 0;
    uint64_t v26 = 0;
    if (v22 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v27 = 0;
  uint64_t result = 0;
  uint64_t v63 = 0;
LABEL_31:
  if (v27 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v27) == 1) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = *(void *)(*(void *)(v4 + 64) + 8 * v27);
  }
  uint64_t v25 = v22 - 1;
LABEL_36:
  if (v25 > (int)v22 - 1)
  {
LABEL_37:
    uint64_t v26 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v31 = 0;
    uint64_t v62 = 0;
    uint64_t v32 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v25) != 1)
  {
    uint64_t v26 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v26 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v28 = *(void *)(v5 + 16);
  uint64_t v29 = v28 - 4;
  if (v28 >= 4)
  {
    if (v29 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v62 = 0;
    }
    else {
      uint64_t v62 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v30 = v28 - 3;
    goto LABEL_56;
  }
  if (v28 == 3)
  {
    uint64_t v30 = 0;
    uint64_t v62 = 0;
LABEL_56:
    if (v30 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v30) == 1) {
      uint64_t v32 = 0;
    }
    else {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v30);
    }
    uint64_t v35 = v28 - 2;
    goto LABEL_61;
  }
  if (v28 >= 2)
  {
    uint64_t v35 = 0;
    uint64_t v32 = 0;
    uint64_t v62 = 0;
LABEL_61:
    if (v35 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v35) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v35);
    }
    uint64_t v33 = v28 - 1;
    goto LABEL_66;
  }
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v62 = 0;
  uint64_t v32 = 0;
  uint64_t v34 = 0;
  if (v28 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v33 <= (int)v28 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v33) != 1)
    {
      uint64_t v34 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v34 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v38 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v34 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v36 = 0;
    if (v18) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v18) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v37 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v38 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v39 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v38 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v39 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v64 >= 1)
  {
    uint64_t v40 = 0;
    uint64_t v41 = (__int16 *)(**(void **)a3 + *(void *)(v4 + 40));
    int v42 = (float *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v43 = (float *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v17 >= 1)
      {
        uint64_t v44 = 0;
        uint64_t v45 = v41;
        uint64_t v46 = v42;
        uint64_t v47 = v43;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v48 = 0;
            uint64_t v49 = v45;
            uint64_t v50 = v46;
            uint64_t v51 = v47;
            do
            {
              uint64_t v52 = v10;
              uint64_t v53 = v49;
              int64x2_t v54 = v50;
              int64x2_t v55 = v51;
              if (v10 >= 1)
              {
                do
                {
                  _H0 = *v53;
                  __asm { FCVT            S0, H0 }
                  float *v55 = *v54 + _S0;
                  int64x2_t v55 = (float *)((char *)v55 + v39);
                  int64x2_t v54 = (float *)((char *)v54 + v34);
                  uint64_t v53 = (__int16 *)((char *)v53 + v26);
                  --v52;
                }
                while (v52);
              }
              ++v48;
              uint64_t v51 = (float *)((char *)v51 + v38);
              uint64_t v50 = (float *)((char *)v50 + v31);
              uint64_t v49 = (__int16 *)((char *)v49 + v20);
            }
            while (v48 != v13);
          }
          ++v44;
          uint64_t v47 = (float *)((char *)v47 + v37);
          uint64_t v46 = (float *)((char *)v46 + v32);
          uint64_t v45 = (__int16 *)((char *)v45 + result);
        }
        while (v44 != v17);
      }
      ++v40;
      uint64_t v43 = (float *)((char *)v43 + v36);
      int v42 = (float *)((char *)v42 + v62);
      uint64_t v41 = (__int16 *)((char *)v41 + v63);
    }
    while (v40 != v64);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)0>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4, double a5, float16x4_t a6)
{
  uint64_t v6 = **a1;
  uint64_t v7 = (*a1)[1];
  uint64_t v8 = **a2;
  uint64_t v9 = *(void *)(v8 + 16);
  uint64_t v10 = v9 - 1;
  if (v9 <= 0)
  {
    uint64_t v13 = v9 - 2;
    uint64_t v12 = 1;
    goto LABEL_5;
  }
  uint64_t v11 = *(void *)(v8 + 24);
  uint64_t v12 = *(void *)(v11 + 8 * v10);
  if (v9 == 1)
  {
    uint64_t v13 = -1;
LABEL_5:
    uint64_t v14 = v9 - 3;
    uint64_t v15 = 1;
    char v16 = 1;
LABEL_6:
    uint64_t v17 = v9 - 4;
    char v18 = 1;
    uint64_t v19 = 1;
    char v20 = 1;
LABEL_7:
    uint64_t v21 = 1;
    goto LABEL_8;
  }
  uint64_t v13 = v9 - 2;
  uint64_t v15 = *(void *)(v11 + 8 * (v9 - 2));
  if ((unint64_t)v9 <= 2)
  {
    uint64_t v13 = 0;
    char v16 = 0;
    uint64_t v14 = -1;
    goto LABEL_6;
  }
  uint64_t v14 = v9 - 3;
  uint64_t v19 = *(void *)(v11 + 8 * (v9 - 3));
  if (v9 == 3)
  {
    char v16 = 0;
    uint64_t v14 = 0;
    char v20 = 0;
    uint64_t v17 = -1;
    uint64_t v13 = 1;
    char v18 = 1;
    goto LABEL_7;
  }
  char v18 = 0;
  char v16 = 0;
  char v20 = 0;
  uint64_t v17 = v9 - 4;
  uint64_t v21 = *(void *)(v11 + 8 * (v9 - 4));
LABEL_8:
  uint64_t v60 = v21;
  if (*(unsigned char *)(v6 + 58))
  {
    uint64_t v22 = 0;
    uint64_t v59 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v24 = *(void *)(v6 + 16);
  uint64_t v25 = v24 - 4;
  if (v24 >= 4)
  {
    if (v25 > (int)v24 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v25) == 1) {
      uint64_t v59 = 0;
    }
    else {
      uint64_t v59 = *(void *)(*(void *)(v6 + 64) + 8 * v25);
    }
    uint64_t v26 = v24 - 3;
    goto LABEL_26;
  }
  if (v24 == 3)
  {
    uint64_t v26 = 0;
    uint64_t v59 = 0;
LABEL_26:
    if (v26 > (int)v24 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v26) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v6 + 64) + 8 * v26);
    }
    uint64_t v29 = v24 - 2;
    goto LABEL_31;
  }
  if (v24 < 2)
  {
    uint64_t v27 = 0;
    uint64_t v22 = 0;
    uint64_t v59 = 0;
    uint64_t result = 0;
    uint64_t v28 = 0;
    if (v24 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v29 = 0;
  uint64_t result = 0;
  uint64_t v59 = 0;
LABEL_31:
  if (v29 > (int)v24 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v29) == 1) {
    uint64_t v22 = 0;
  }
  else {
    uint64_t v22 = *(void *)(*(void *)(v6 + 64) + 8 * v29);
  }
  uint64_t v27 = v24 - 1;
LABEL_36:
  if (v27 > (int)v24 - 1)
  {
LABEL_37:
    uint64_t v28 = 0;
    if (!*(unsigned char *)(v7 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v33 = 0;
    uint64_t v58 = 0;
    uint64_t v34 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v6 + 24) + 8 * v27) != 1)
  {
    uint64_t v28 = *(void *)(*(void *)(v6 + 64) + 8 * v27);
    if (*(unsigned char *)(v7 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v28 = 0;
LABEL_46:
  if (*(unsigned char *)(v7 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v30 = *(void *)(v7 + 16);
  uint64_t v31 = v30 - 4;
  if (v30 >= 4)
  {
    if (v31 > (int)v30 - 1 || *(void *)(*(void *)(v7 + 24) + 8 * v31) == 1) {
      uint64_t v58 = 0;
    }
    else {
      uint64_t v58 = *(void *)(*(void *)(v7 + 64) + 8 * v31);
    }
    uint64_t v32 = v30 - 3;
    goto LABEL_56;
  }
  if (v30 == 3)
  {
    uint64_t v32 = 0;
    uint64_t v58 = 0;
LABEL_56:
    if (v32 > (int)v30 - 1 || *(void *)(*(void *)(v7 + 24) + 8 * v32) == 1) {
      uint64_t v34 = 0;
    }
    else {
      uint64_t v34 = *(void *)(*(void *)(v7 + 64) + 8 * v32);
    }
    uint64_t v37 = v30 - 2;
    goto LABEL_61;
  }
  if (v30 >= 2)
  {
    uint64_t v37 = 0;
    uint64_t v34 = 0;
    uint64_t v58 = 0;
LABEL_61:
    if (v37 > (int)v30 - 1 || *(void *)(*(void *)(v7 + 24) + 8 * v37) == 1) {
      uint64_t v33 = 0;
    }
    else {
      uint64_t v33 = *(void *)(*(void *)(v7 + 64) + 8 * v37);
    }
    uint64_t v35 = v30 - 1;
    goto LABEL_66;
  }
  uint64_t v35 = 0;
  uint64_t v33 = 0;
  uint64_t v58 = 0;
  uint64_t v34 = 0;
  uint64_t v36 = 0;
  if (v30 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v35 <= (int)v30 - 1)
  {
    if (*(void *)(*(void *)(v7 + 24) + 8 * v35) != 1)
    {
      uint64_t v36 = *(void *)(*(void *)(v7 + 64) + 8 * v35);
      if (!*(unsigned char *)(v8 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v36 = 0;
LABEL_78:
    if (!*(unsigned char *)(v8 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v40 = 0;
    uint64_t v38 = 0;
    uint64_t v39 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v36 = 0;
  if (*(unsigned char *)(v8 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v18 & 1) != 0 || v17 > (int)v9 - 1 || *(void *)(*(void *)(v8 + 24) + 8 * v17) == 1)
  {
    uint64_t v38 = 0;
    if (v20) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v38 = *(void *)(*(void *)(v8 + 64) + 8 * v17);
    if (v20) {
      goto LABEL_98;
    }
  }
  if (v14 > (int)v9 - 1 || *(void *)(*(void *)(v8 + 24) + 8 * v14) == 1)
  {
LABEL_98:
    uint64_t v39 = 0;
    if (v16) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v39 = *(void *)(*(void *)(v8 + 64) + 8 * v14);
  if (v16) {
    goto LABEL_101;
  }
LABEL_99:
  if (v13 <= (int)v9 - 1 && *(void *)(*(void *)(v8 + 24) + 8 * v13) != 1)
  {
    uint64_t v40 = *(void *)(*(void *)(v8 + 64) + 8 * v13);
    if (v9 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v41 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v40 = 0;
  if (v9 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v10 > (int)v9 - 1 || *(void *)(*(void *)(v8 + 24) + 8 * v10) == 1) {
    goto LABEL_80;
  }
  uint64_t v41 = *(void *)(*(void *)(v8 + 64) + 8 * v10);
LABEL_81:
  if (v60 >= 1)
  {
    uint64_t v42 = 0;
    uint64_t v43 = (float32x2_t *)(**(void **)a3 + *(void *)(v6 + 40));
    uint64_t v44 = (__int32 *)(*(void *)(*(void *)a3 + 8) + *(void *)(v7 + 40));
    uint64_t v45 = (float32x2_t *)(**a4 + *(void *)(v8 + 40));
    do
    {
      if (v19 >= 1)
      {
        uint64_t v46 = 0;
        uint64_t v47 = v43;
        uint64_t v48 = v44;
        uint64_t v49 = v45;
        do
        {
          if (v15 >= 1)
          {
            uint64_t v50 = 0;
            uint64_t v51 = v47;
            uint64_t v52 = v48;
            uint64_t v53 = v49;
            do
            {
              uint64_t v54 = v12;
              int64x2_t v55 = v51;
              uint64_t v56 = v52;
              uint64_t v57 = v53;
              if (v12 >= 1)
              {
                do
                {
                  a6.i32[0] = *v56;
                  a6 = (float16x4_t)vcvtq_f32_f16(a6).u64[0];
                  float32x2_t *v57 = vadd_f32(*v55, (float32x2_t)a6);
                  uint64_t v57 = (float32x2_t *)((char *)v57 + v41);
                  uint64_t v56 = (__int32 *)((char *)v56 + v36);
                  int64x2_t v55 = (float32x2_t *)((char *)v55 + v28);
                  --v54;
                }
                while (v54);
              }
              ++v50;
              uint64_t v53 = (float32x2_t *)((char *)v53 + v40);
              uint64_t v52 = (__int32 *)((char *)v52 + v33);
              uint64_t v51 = (float32x2_t *)((char *)v51 + v22);
            }
            while (v50 != v15);
          }
          ++v46;
          uint64_t v49 = (float32x2_t *)((char *)v49 + v39);
          uint64_t v48 = (__int32 *)((char *)v48 + v34);
          uint64_t v47 = (float32x2_t *)((char *)v47 + result);
        }
        while (v46 != v19);
      }
      ++v42;
      uint64_t v45 = (float32x2_t *)((char *)v45 + v38);
      uint64_t v44 = (__int32 *)((char *)v44 + v58);
      uint64_t v43 = (float32x2_t *)((char *)v43 + v59);
    }
    while (v42 != v60);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<float,half,float,(mlir::mps::arithmeticOp)0>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v17 = 1;
    char v18 = 1;
LABEL_7:
    uint64_t v19 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v17 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v18 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v18 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v19 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v64 = v19;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v20 = 0;
    uint64_t v63 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v22 = *(void *)(v4 + 16);
  uint64_t v23 = v22 - 4;
  if (v22 >= 4)
  {
    if (v23 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t v63 = 0;
    }
    else {
      uint64_t v63 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v24 = v22 - 3;
    goto LABEL_26;
  }
  if (v22 == 3)
  {
    uint64_t v24 = 0;
    uint64_t v63 = 0;
LABEL_26:
    if (v24 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    }
    uint64_t v27 = v22 - 2;
    goto LABEL_31;
  }
  if (v22 < 2)
  {
    uint64_t v25 = 0;
    uint64_t v20 = 0;
    uint64_t v63 = 0;
    uint64_t result = 0;
    uint64_t v26 = 0;
    if (v22 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v27 = 0;
  uint64_t result = 0;
  uint64_t v63 = 0;
LABEL_31:
  if (v27 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v27) == 1) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = *(void *)(*(void *)(v4 + 64) + 8 * v27);
  }
  uint64_t v25 = v22 - 1;
LABEL_36:
  if (v25 > (int)v22 - 1)
  {
LABEL_37:
    uint64_t v26 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v31 = 0;
    uint64_t v62 = 0;
    uint64_t v32 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v25) != 1)
  {
    uint64_t v26 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v26 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v28 = *(void *)(v5 + 16);
  uint64_t v29 = v28 - 4;
  if (v28 >= 4)
  {
    if (v29 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v62 = 0;
    }
    else {
      uint64_t v62 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v30 = v28 - 3;
    goto LABEL_56;
  }
  if (v28 == 3)
  {
    uint64_t v30 = 0;
    uint64_t v62 = 0;
LABEL_56:
    if (v30 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v30) == 1) {
      uint64_t v32 = 0;
    }
    else {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v30);
    }
    uint64_t v35 = v28 - 2;
    goto LABEL_61;
  }
  if (v28 >= 2)
  {
    uint64_t v35 = 0;
    uint64_t v32 = 0;
    uint64_t v62 = 0;
LABEL_61:
    if (v35 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v35) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v35);
    }
    uint64_t v33 = v28 - 1;
    goto LABEL_66;
  }
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v62 = 0;
  uint64_t v32 = 0;
  uint64_t v34 = 0;
  if (v28 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v33 <= (int)v28 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v33) != 1)
    {
      uint64_t v34 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v34 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v38 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v34 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v36 = 0;
    if (v18) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v18) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v37 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v38 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v39 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v38 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v39 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v64 >= 1)
  {
    uint64_t v40 = 0;
    uint64_t v41 = (float *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v42 = (__int16 *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v43 = (float *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v17 >= 1)
      {
        uint64_t v44 = 0;
        uint64_t v45 = v41;
        uint64_t v46 = v42;
        uint64_t v47 = v43;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v48 = 0;
            uint64_t v49 = v45;
            uint64_t v50 = v46;
            uint64_t v51 = v47;
            do
            {
              uint64_t v52 = v10;
              uint64_t v53 = v49;
              uint64_t v54 = v50;
              int64x2_t v55 = v51;
              if (v10 >= 1)
              {
                do
                {
                  _H1 = *v54;
                  __asm { FCVT            S1, H1 }
                  float *v55 = *v53 + _S1;
                  int64x2_t v55 = (float *)((char *)v55 + v39);
                  uint64_t v54 = (__int16 *)((char *)v54 + v34);
                  uint64_t v53 = (float *)((char *)v53 + v26);
                  --v52;
                }
                while (v52);
              }
              ++v48;
              uint64_t v51 = (float *)((char *)v51 + v38);
              uint64_t v50 = (__int16 *)((char *)v50 + v31);
              uint64_t v49 = (float *)((char *)v49 + v20);
            }
            while (v48 != v13);
          }
          ++v44;
          uint64_t v47 = (float *)((char *)v47 + v37);
          uint64_t v46 = (__int16 *)((char *)v46 + v32);
          uint64_t v45 = (float *)((char *)v45 + result);
        }
        while (v44 != v17);
      }
      ++v40;
      uint64_t v43 = (float *)((char *)v43 + v36);
      uint64_t v42 = (__int16 *)((char *)v42 + v62);
      uint64_t v41 = (float *)((char *)v41 + v63);
    }
    while (v40 != v64);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<__emulated_bf16,float,float,(mlir::mps::arithmeticOp)0>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v17 = 1;
    char v18 = 1;
LABEL_7:
    uint64_t v19 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v17 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v18 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v18 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v19 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v58 = v19;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v20 = 0;
    uint64_t v56 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v22 = *(void *)(v4 + 16);
  uint64_t v23 = v22 - 4;
  if (v22 >= 4)
  {
    if (v23 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t v56 = 0;
    }
    else {
      uint64_t v56 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v24 = v22 - 3;
    goto LABEL_26;
  }
  if (v22 == 3)
  {
    uint64_t v24 = 0;
    uint64_t v56 = 0;
LABEL_26:
    if (v24 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    }
    uint64_t v27 = v22 - 2;
    goto LABEL_31;
  }
  if (v22 < 2)
  {
    uint64_t v25 = 0;
    uint64_t v20 = 0;
    uint64_t v56 = 0;
    uint64_t result = 0;
    uint64_t v26 = 0;
    if (v22 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v27 = 0;
  uint64_t result = 0;
  uint64_t v56 = 0;
LABEL_31:
  if (v27 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v27) == 1) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = *(void *)(*(void *)(v4 + 64) + 8 * v27);
  }
  uint64_t v25 = v22 - 1;
LABEL_36:
  if (v25 > (int)v22 - 1)
  {
LABEL_37:
    uint64_t v26 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v31 = 0;
    uint64_t v55 = 0;
    uint64_t v32 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v25) != 1)
  {
    uint64_t v26 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v26 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v28 = *(void *)(v5 + 16);
  uint64_t v29 = v28 - 4;
  if (v28 >= 4)
  {
    if (v29 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v30 = v28 - 3;
    goto LABEL_56;
  }
  if (v28 == 3)
  {
    uint64_t v30 = 0;
    uint64_t v55 = 0;
LABEL_56:
    if (v30 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v30) == 1) {
      uint64_t v32 = 0;
    }
    else {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v30);
    }
    uint64_t v35 = v28 - 2;
    goto LABEL_61;
  }
  if (v28 >= 2)
  {
    uint64_t v35 = 0;
    uint64_t v32 = 0;
    uint64_t v55 = 0;
LABEL_61:
    if (v35 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v35) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v35);
    }
    uint64_t v33 = v28 - 1;
    goto LABEL_66;
  }
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v55 = 0;
  uint64_t v32 = 0;
  uint64_t v34 = 0;
  if (v28 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v33 <= (int)v28 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v33) != 1)
    {
      uint64_t v34 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v34 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v37 = 0;
    uint64_t v57 = 0;
    uint64_t v36 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v34 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v57 = 0;
    if (v18) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v57 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v18) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v36 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v38 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v37 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v38 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v58 >= 1)
  {
    uint64_t v39 = 0;
    uint64_t v40 = (unsigned __int16 *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v41 = (float *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v42 = (float *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v17 >= 1)
      {
        uint64_t v43 = 0;
        uint64_t v44 = v40;
        uint64_t v45 = v41;
        uint64_t v46 = v42;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v47 = 0;
            uint64_t v48 = v44;
            uint64_t v49 = v45;
            uint64_t v50 = v46;
            do
            {
              uint64_t v51 = v10;
              uint64_t v52 = v48;
              uint64_t v53 = v49;
              uint64_t v54 = v50;
              if (v10 >= 1)
              {
                do
                {
                  *uint64_t v54 = *v53 + COERCE_FLOAT(*v52 << 16);
                  uint64_t v54 = (float *)((char *)v54 + v38);
                  uint64_t v53 = (float *)((char *)v53 + v34);
                  uint64_t v52 = (unsigned __int16 *)((char *)v52 + v26);
                  --v51;
                }
                while (v51);
              }
              ++v47;
              uint64_t v50 = (float *)((char *)v50 + v37);
              uint64_t v49 = (float *)((char *)v49 + v31);
              uint64_t v48 = (unsigned __int16 *)((char *)v48 + v20);
            }
            while (v47 != v13);
          }
          ++v43;
          uint64_t v46 = (float *)((char *)v46 + v36);
          uint64_t v45 = (float *)((char *)v45 + v32);
          uint64_t v44 = (unsigned __int16 *)((char *)v44 + result);
        }
        while (v43 != v17);
      }
      ++v39;
      uint64_t v42 = (float *)((char *)v42 + v57);
      uint64_t v41 = (float *)((char *)v41 + v55);
      uint64_t v40 = (unsigned __int16 *)((char *)v40 + v56);
    }
    while (v39 != v58);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<float,__emulated_bf16,float,(mlir::mps::arithmeticOp)0>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v17 = 1;
    char v18 = 1;
LABEL_7:
    uint64_t v19 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v17 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v18 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v18 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v19 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v58 = v19;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v20 = 0;
    uint64_t v56 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v22 = *(void *)(v4 + 16);
  uint64_t v23 = v22 - 4;
  if (v22 >= 4)
  {
    if (v23 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t v56 = 0;
    }
    else {
      uint64_t v56 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v24 = v22 - 3;
    goto LABEL_26;
  }
  if (v22 == 3)
  {
    uint64_t v24 = 0;
    uint64_t v56 = 0;
LABEL_26:
    if (v24 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    }
    uint64_t v27 = v22 - 2;
    goto LABEL_31;
  }
  if (v22 < 2)
  {
    uint64_t v25 = 0;
    uint64_t v20 = 0;
    uint64_t v56 = 0;
    uint64_t result = 0;
    uint64_t v26 = 0;
    if (v22 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v27 = 0;
  uint64_t result = 0;
  uint64_t v56 = 0;
LABEL_31:
  if (v27 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v27) == 1) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = *(void *)(*(void *)(v4 + 64) + 8 * v27);
  }
  uint64_t v25 = v22 - 1;
LABEL_36:
  if (v25 > (int)v22 - 1)
  {
LABEL_37:
    uint64_t v26 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v31 = 0;
    uint64_t v55 = 0;
    uint64_t v32 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v25) != 1)
  {
    uint64_t v26 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v26 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v28 = *(void *)(v5 + 16);
  uint64_t v29 = v28 - 4;
  if (v28 >= 4)
  {
    if (v29 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v30 = v28 - 3;
    goto LABEL_56;
  }
  if (v28 == 3)
  {
    uint64_t v30 = 0;
    uint64_t v55 = 0;
LABEL_56:
    if (v30 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v30) == 1) {
      uint64_t v32 = 0;
    }
    else {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v30);
    }
    uint64_t v35 = v28 - 2;
    goto LABEL_61;
  }
  if (v28 >= 2)
  {
    uint64_t v35 = 0;
    uint64_t v32 = 0;
    uint64_t v55 = 0;
LABEL_61:
    if (v35 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v35) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v35);
    }
    uint64_t v33 = v28 - 1;
    goto LABEL_66;
  }
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v55 = 0;
  uint64_t v32 = 0;
  uint64_t v34 = 0;
  if (v28 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v33 <= (int)v28 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v33) != 1)
    {
      uint64_t v34 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v34 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v37 = 0;
    uint64_t v57 = 0;
    uint64_t v36 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v34 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v57 = 0;
    if (v18) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v57 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v18) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v36 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v38 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v37 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v38 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v58 >= 1)
  {
    uint64_t v39 = 0;
    uint64_t v40 = (float *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v41 = (unsigned __int16 *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v42 = (float *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v17 >= 1)
      {
        uint64_t v43 = 0;
        uint64_t v44 = v40;
        uint64_t v45 = v41;
        uint64_t v46 = v42;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v47 = 0;
            uint64_t v48 = v44;
            uint64_t v49 = v45;
            uint64_t v50 = v46;
            do
            {
              uint64_t v51 = v10;
              uint64_t v52 = v48;
              uint64_t v53 = v49;
              uint64_t v54 = v50;
              if (v10 >= 1)
              {
                do
                {
                  *uint64_t v54 = *v52 + COERCE_FLOAT(*v53 << 16);
                  uint64_t v54 = (float *)((char *)v54 + v38);
                  uint64_t v53 = (unsigned __int16 *)((char *)v53 + v34);
                  uint64_t v52 = (float *)((char *)v52 + v26);
                  --v51;
                }
                while (v51);
              }
              ++v47;
              uint64_t v50 = (float *)((char *)v50 + v37);
              uint64_t v49 = (unsigned __int16 *)((char *)v49 + v31);
              uint64_t v48 = (float *)((char *)v48 + v20);
            }
            while (v47 != v13);
          }
          ++v43;
          uint64_t v46 = (float *)((char *)v46 + v36);
          uint64_t v45 = (unsigned __int16 *)((char *)v45 + v32);
          uint64_t v44 = (float *)((char *)v44 + result);
        }
        while (v43 != v17);
      }
      ++v39;
      uint64_t v42 = (float *)((char *)v42 + v57);
      uint64_t v41 = (unsigned __int16 *)((char *)v41 + v55);
      uint64_t v40 = (float *)((char *)v40 + v56);
    }
    while (v39 != v58);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<half,(void *)0>,(mlir::mps::arithmeticOp)0>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v17 = 1;
    char v18 = 1;
LABEL_7:
    uint64_t v19 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v17 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v18 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v18 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v19 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v59 = v19;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v20 = 0;
    uint64_t v58 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v22 = *(void *)(v4 + 16);
  uint64_t v23 = v22 - 4;
  if (v22 >= 4)
  {
    if (v23 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t v58 = 0;
    }
    else {
      uint64_t v58 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v24 = v22 - 3;
    goto LABEL_26;
  }
  if (v22 == 3)
  {
    uint64_t v24 = 0;
    uint64_t v58 = 0;
LABEL_26:
    if (v24 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    }
    uint64_t v27 = v22 - 2;
    goto LABEL_31;
  }
  if (v22 < 2)
  {
    uint64_t v25 = 0;
    uint64_t v20 = 0;
    uint64_t v58 = 0;
    uint64_t result = 0;
    uint64_t v26 = 0;
    if (v22 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v27 = 0;
  uint64_t result = 0;
  uint64_t v58 = 0;
LABEL_31:
  if (v27 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v27) == 1) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = *(void *)(*(void *)(v4 + 64) + 8 * v27);
  }
  uint64_t v25 = v22 - 1;
LABEL_36:
  if (v25 > (int)v22 - 1)
  {
LABEL_37:
    uint64_t v26 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v31 = 0;
    uint64_t v57 = 0;
    uint64_t v32 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v25) != 1)
  {
    uint64_t v26 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v26 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v28 = *(void *)(v5 + 16);
  uint64_t v29 = v28 - 4;
  if (v28 >= 4)
  {
    if (v29 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v57 = 0;
    }
    else {
      uint64_t v57 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v30 = v28 - 3;
    goto LABEL_56;
  }
  if (v28 == 3)
  {
    uint64_t v30 = 0;
    uint64_t v57 = 0;
LABEL_56:
    if (v30 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v30) == 1) {
      uint64_t v32 = 0;
    }
    else {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v30);
    }
    uint64_t v35 = v28 - 2;
    goto LABEL_61;
  }
  if (v28 >= 2)
  {
    uint64_t v35 = 0;
    uint64_t v32 = 0;
    uint64_t v57 = 0;
LABEL_61:
    if (v35 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v35) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v35);
    }
    uint64_t v33 = v28 - 1;
    goto LABEL_66;
  }
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v57 = 0;
  uint64_t v32 = 0;
  uint64_t v34 = 0;
  if (v28 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v33 <= (int)v28 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v33) != 1)
    {
      uint64_t v34 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v34 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v38 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v34 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v36 = 0;
    if (v18) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v18) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v37 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v38 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v39 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v38 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v39 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v59 >= 1)
  {
    uint64_t v40 = 0;
    uint64_t v41 = (short float *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v42 = (short float *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v43 = (short float *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v17 >= 1)
      {
        uint64_t v44 = 0;
        uint64_t v45 = v41;
        uint64_t v46 = v42;
        uint64_t v47 = v43;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v48 = 0;
            uint64_t v49 = v45;
            uint64_t v50 = v46;
            uint64_t v51 = v47;
            do
            {
              uint64_t v52 = v10;
              uint64_t v53 = v49;
              uint64_t v54 = v50;
              uint64_t v55 = v51;
              if (v10 >= 1)
              {
                do
                {
                  short float v56 = v53[1] + v54[1];
                  short float *v55 = *v53 + *v54;
                  v55[1] = v56;
                  uint64_t v55 = (short float *)((char *)v55 + v39);
                  uint64_t v54 = (short float *)((char *)v54 + v34);
                  uint64_t v53 = (short float *)((char *)v53 + v26);
                  --v52;
                }
                while (v52);
              }
              ++v48;
              uint64_t v51 = (short float *)((char *)v51 + v38);
              uint64_t v50 = (short float *)((char *)v50 + v31);
              uint64_t v49 = (short float *)((char *)v49 + v20);
            }
            while (v48 != v13);
          }
          ++v44;
          uint64_t v47 = (short float *)((char *)v47 + v37);
          uint64_t v46 = (short float *)((char *)v46 + v32);
          uint64_t v45 = (short float *)((char *)v45 + result);
        }
        while (v44 != v17);
      }
      ++v40;
      uint64_t v43 = (short float *)((char *)v43 + v36);
      uint64_t v42 = (short float *)((char *)v42 + v57);
      uint64_t v41 = (short float *)((char *)v41 + v58);
    }
    while (v40 != v59);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<half,half,half,(mlir::mps::arithmeticOp)0>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v17 = 1;
    char v18 = 1;
LABEL_7:
    uint64_t v19 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v17 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v18 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v18 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v19 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v58 = v19;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v20 = 0;
    uint64_t v57 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v22 = *(void *)(v4 + 16);
  uint64_t v23 = v22 - 4;
  if (v22 >= 4)
  {
    if (v23 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t v57 = 0;
    }
    else {
      uint64_t v57 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v24 = v22 - 3;
    goto LABEL_26;
  }
  if (v22 == 3)
  {
    uint64_t v24 = 0;
    uint64_t v57 = 0;
LABEL_26:
    if (v24 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    }
    uint64_t v27 = v22 - 2;
    goto LABEL_31;
  }
  if (v22 < 2)
  {
    uint64_t v25 = 0;
    uint64_t v20 = 0;
    uint64_t v57 = 0;
    uint64_t result = 0;
    uint64_t v26 = 0;
    if (v22 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v27 = 0;
  uint64_t result = 0;
  uint64_t v57 = 0;
LABEL_31:
  if (v27 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v27) == 1) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = *(void *)(*(void *)(v4 + 64) + 8 * v27);
  }
  uint64_t v25 = v22 - 1;
LABEL_36:
  if (v25 > (int)v22 - 1)
  {
LABEL_37:
    uint64_t v26 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v31 = 0;
    uint64_t v56 = 0;
    uint64_t v32 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v25) != 1)
  {
    uint64_t v26 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v26 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v28 = *(void *)(v5 + 16);
  uint64_t v29 = v28 - 4;
  if (v28 >= 4)
  {
    if (v29 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v56 = 0;
    }
    else {
      uint64_t v56 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v30 = v28 - 3;
    goto LABEL_56;
  }
  if (v28 == 3)
  {
    uint64_t v30 = 0;
    uint64_t v56 = 0;
LABEL_56:
    if (v30 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v30) == 1) {
      uint64_t v32 = 0;
    }
    else {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v30);
    }
    uint64_t v35 = v28 - 2;
    goto LABEL_61;
  }
  if (v28 >= 2)
  {
    uint64_t v35 = 0;
    uint64_t v32 = 0;
    uint64_t v56 = 0;
LABEL_61:
    if (v35 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v35) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v35);
    }
    uint64_t v33 = v28 - 1;
    goto LABEL_66;
  }
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v56 = 0;
  uint64_t v32 = 0;
  uint64_t v34 = 0;
  if (v28 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v33 <= (int)v28 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v33) != 1)
    {
      uint64_t v34 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v34 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v38 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v34 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v36 = 0;
    if (v18) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v18) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v37 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v38 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v39 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v38 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v39 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v58 >= 1)
  {
    uint64_t v40 = 0;
    uint64_t v41 = (short float *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v42 = (short float *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v43 = (short float *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v17 >= 1)
      {
        uint64_t v44 = 0;
        uint64_t v45 = v41;
        uint64_t v46 = v42;
        uint64_t v47 = v43;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v48 = 0;
            uint64_t v49 = v45;
            uint64_t v50 = v46;
            uint64_t v51 = v47;
            do
            {
              uint64_t v52 = v10;
              uint64_t v53 = v49;
              uint64_t v54 = v50;
              uint64_t v55 = v51;
              if (v10 >= 1)
              {
                do
                {
                  short float *v55 = *v53 + *v54;
                  uint64_t v55 = (short float *)((char *)v55 + v39);
                  uint64_t v54 = (short float *)((char *)v54 + v34);
                  uint64_t v53 = (short float *)((char *)v53 + v26);
                  --v52;
                }
                while (v52);
              }
              ++v48;
              uint64_t v51 = (short float *)((char *)v51 + v38);
              uint64_t v50 = (short float *)((char *)v50 + v31);
              uint64_t v49 = (short float *)((char *)v49 + v20);
            }
            while (v48 != v13);
          }
          ++v44;
          uint64_t v47 = (short float *)((char *)v47 + v37);
          uint64_t v46 = (short float *)((char *)v46 + v32);
          uint64_t v45 = (short float *)((char *)v45 + result);
        }
        while (v44 != v17);
      }
      ++v40;
      uint64_t v43 = (short float *)((char *)v43 + v36);
      uint64_t v42 = (short float *)((char *)v42 + v56);
      uint64_t v41 = (short float *)((char *)v41 + v57);
    }
    while (v40 != v58);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<__emulated_bf16,__emulated_bf16,__emulated_bf16,(mlir::mps::arithmeticOp)0>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v59 = 1;
    char v17 = 1;
LABEL_7:
    uint64_t v18 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v59 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v17 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v17 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v58 = v18;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v19 = 0;
    uint64_t v56 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v21 = *(void *)(v4 + 16);
  uint64_t v22 = v21 - 4;
  if (v21 >= 4)
  {
    if (v22 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
      uint64_t v56 = 0;
    }
    else {
      uint64_t v56 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
    }
    uint64_t v23 = v21 - 3;
    goto LABEL_26;
  }
  if (v21 == 3)
  {
    uint64_t v23 = 0;
    uint64_t v56 = 0;
LABEL_26:
    if (v23 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v26 = v21 - 2;
    goto LABEL_31;
  }
  if (v21 < 2)
  {
    uint64_t v24 = 0;
    uint64_t v19 = 0;
    uint64_t v56 = 0;
    uint64_t result = 0;
    uint64_t v25 = 0;
    if (v21 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v26 = 0;
  uint64_t result = 0;
  uint64_t v56 = 0;
LABEL_31:
  if (v26 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v26) == 1) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = *(void *)(*(void *)(v4 + 64) + 8 * v26);
  }
  uint64_t v24 = v21 - 1;
LABEL_36:
  if (v24 > (int)v21 - 1)
  {
LABEL_37:
    uint64_t v25 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v30 = 0;
    uint64_t v55 = 0;
    uint64_t v31 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v24) != 1)
  {
    uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v25 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v27 = *(void *)(v5 + 16);
  uint64_t v28 = v27 - 4;
  if (v27 >= 4)
  {
    if (v28 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v29 = v27 - 3;
    goto LABEL_56;
  }
  if (v27 == 3)
  {
    uint64_t v29 = 0;
    uint64_t v55 = 0;
LABEL_56:
    if (v29 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v34 = v27 - 2;
    goto LABEL_61;
  }
  if (v27 >= 2)
  {
    uint64_t v34 = 0;
    uint64_t v31 = 0;
    uint64_t v55 = 0;
LABEL_61:
    if (v34 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v34) == 1) {
      uint64_t v30 = 0;
    }
    else {
      uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v34);
    }
    uint64_t v32 = v27 - 1;
    goto LABEL_66;
  }
  uint64_t v32 = 0;
  uint64_t v30 = 0;
  uint64_t v55 = 0;
  uint64_t v31 = 0;
  uint64_t v33 = 0;
  if (v27 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v32 <= (int)v27 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v32) != 1)
    {
      uint64_t v33 = *(void *)(*(void *)(v5 + 64) + 8 * v32);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v33 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v36 = 0;
    uint64_t v57 = 0;
    uint64_t v35 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v33 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v57 = 0;
    if (v17) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v57 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v17) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v35 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v35 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v37 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v36 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v58 >= 1)
  {
    uint64_t v38 = 0;
    uint64_t v39 = (unsigned __int16 *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v40 = (unsigned __int16 *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v41 = (_WORD *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v59 >= 1)
      {
        uint64_t v42 = 0;
        uint64_t v43 = v39;
        uint64_t v44 = v40;
        uint64_t v45 = v41;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v46 = 0;
            uint64_t v47 = v43;
            uint64_t v48 = v44;
            uint64_t v49 = v45;
            do
            {
              uint64_t v50 = v10;
              uint64_t v51 = v47;
              uint64_t v52 = v48;
              uint64_t v53 = v49;
              if (v10 >= 1)
              {
                do
                {
                  float v54 = COERCE_FLOAT(*v51 << 16) + COERCE_FLOAT(*v52 << 16);
                  _WORD *v53 = HIWORD(COERCE_UNSIGNED_INT(v54 + (float)(COERCE_FLOAT(LODWORD(v54) & 0xFF800000) * 0.0039062)));
                  uint64_t v53 = (_WORD *)((char *)v53 + v37);
                  uint64_t v52 = (unsigned __int16 *)((char *)v52 + v33);
                  uint64_t v51 = (unsigned __int16 *)((char *)v51 + v25);
                  --v50;
                }
                while (v50);
              }
              ++v46;
              uint64_t v49 = (_WORD *)((char *)v49 + v36);
              uint64_t v48 = (unsigned __int16 *)((char *)v48 + v30);
              uint64_t v47 = (unsigned __int16 *)((char *)v47 + v19);
            }
            while (v46 != v13);
          }
          ++v42;
          uint64_t v45 = (_WORD *)((char *)v45 + v35);
          uint64_t v44 = (unsigned __int16 *)((char *)v44 + v31);
          uint64_t v43 = (unsigned __int16 *)((char *)v43 + result);
        }
        while (v42 != v59);
      }
      ++v38;
      uint64_t v41 = (_WORD *)((char *)v41 + v57);
      uint64_t v40 = (unsigned __int16 *)((char *)v40 + v55);
      uint64_t v39 = (unsigned __int16 *)((char *)v39 + v56);
    }
    while (v38 != v58);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<long long,long long,long long,(mlir::mps::arithmeticOp)0>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v57 = 1;
    char v17 = 1;
LABEL_7:
    uint64_t v18 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v57 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v17 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v17 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v19 = 0;
    uint64_t v55 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v21 = *(void *)(v4 + 16);
  uint64_t v22 = v21 - 4;
  if (v21 >= 4)
  {
    if (v22 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
    }
    uint64_t v23 = v21 - 3;
    goto LABEL_26;
  }
  if (v21 == 3)
  {
    uint64_t v23 = 0;
    uint64_t v55 = 0;
LABEL_26:
    if (v23 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v26 = v21 - 2;
    goto LABEL_31;
  }
  if (v21 < 2)
  {
    uint64_t v24 = 0;
    uint64_t v19 = 0;
    uint64_t v55 = 0;
    uint64_t result = 0;
    uint64_t v25 = 0;
    if (v21 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v26 = 0;
  uint64_t result = 0;
  uint64_t v55 = 0;
LABEL_31:
  if (v26 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v26) == 1) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = *(void *)(*(void *)(v4 + 64) + 8 * v26);
  }
  uint64_t v24 = v21 - 1;
LABEL_36:
  if (v24 > (int)v21 - 1)
  {
LABEL_37:
    uint64_t v25 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v30 = 0;
    uint64_t v54 = 0;
    uint64_t v31 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v24) != 1)
  {
    uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v25 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v27 = *(void *)(v5 + 16);
  uint64_t v28 = v27 - 4;
  if (v27 >= 4)
  {
    if (v28 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v54 = 0;
    }
    else {
      uint64_t v54 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v29 = v27 - 3;
    goto LABEL_56;
  }
  if (v27 == 3)
  {
    uint64_t v29 = 0;
    uint64_t v54 = 0;
LABEL_56:
    if (v29 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v34 = v27 - 2;
    goto LABEL_61;
  }
  if (v27 >= 2)
  {
    uint64_t v34 = 0;
    uint64_t v31 = 0;
    uint64_t v54 = 0;
LABEL_61:
    if (v34 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v34) == 1) {
      uint64_t v30 = 0;
    }
    else {
      uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v34);
    }
    uint64_t v32 = v27 - 1;
    goto LABEL_66;
  }
  uint64_t v32 = 0;
  uint64_t v30 = 0;
  uint64_t v54 = 0;
  uint64_t v31 = 0;
  uint64_t v33 = 0;
  if (v27 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v32 <= (int)v27 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v32) != 1)
    {
      uint64_t v33 = *(void *)(*(void *)(v5 + 64) + 8 * v32);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v33 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v36 = 0;
    uint64_t v56 = 0;
    uint64_t v35 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v33 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v56 = 0;
    if (v17) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v56 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v17) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v35 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v35 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v37 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v36 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v18 >= 1)
  {
    uint64_t v38 = 0;
    uint64_t v39 = (void *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v40 = (void *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v41 = (void *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v57 >= 1)
      {
        uint64_t v42 = 0;
        uint64_t v43 = v39;
        uint64_t v44 = v40;
        uint64_t v45 = v41;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v46 = 0;
            uint64_t v47 = v43;
            uint64_t v48 = v44;
            uint64_t v49 = v45;
            do
            {
              uint64_t v50 = v10;
              uint64_t v51 = v47;
              uint64_t v52 = v48;
              uint64_t v53 = v49;
              if (v10 >= 1)
              {
                do
                {
                  void *v53 = *v52 + *v51;
                  uint64_t v53 = (void *)((char *)v53 + v37);
                  uint64_t v52 = (void *)((char *)v52 + v33);
                  uint64_t v51 = (void *)((char *)v51 + v25);
                  --v50;
                }
                while (v50);
              }
              ++v46;
              uint64_t v49 = (void *)((char *)v49 + v36);
              uint64_t v48 = (void *)((char *)v48 + v30);
              uint64_t v47 = (void *)((char *)v47 + v19);
            }
            while (v46 != v13);
          }
          ++v42;
          uint64_t v45 = (void *)((char *)v45 + v35);
          uint64_t v44 = (void *)((char *)v44 + v31);
          uint64_t v43 = (void *)((char *)v43 + result);
        }
        while (v42 != v57);
      }
      ++v38;
      uint64_t v41 = (void *)((char *)v41 + v56);
      uint64_t v40 = (void *)((char *)v40 + v54);
      uint64_t v39 = (void *)((char *)v39 + v55);
    }
    while (v38 != v18);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<int,int,int,(mlir::mps::arithmeticOp)0>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v57 = 1;
    char v17 = 1;
LABEL_7:
    uint64_t v18 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v57 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v17 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v17 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v19 = 0;
    uint64_t v55 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v21 = *(void *)(v4 + 16);
  uint64_t v22 = v21 - 4;
  if (v21 >= 4)
  {
    if (v22 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
    }
    uint64_t v23 = v21 - 3;
    goto LABEL_26;
  }
  if (v21 == 3)
  {
    uint64_t v23 = 0;
    uint64_t v55 = 0;
LABEL_26:
    if (v23 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v26 = v21 - 2;
    goto LABEL_31;
  }
  if (v21 < 2)
  {
    uint64_t v24 = 0;
    uint64_t v19 = 0;
    uint64_t v55 = 0;
    uint64_t result = 0;
    uint64_t v25 = 0;
    if (v21 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v26 = 0;
  uint64_t result = 0;
  uint64_t v55 = 0;
LABEL_31:
  if (v26 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v26) == 1) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = *(void *)(*(void *)(v4 + 64) + 8 * v26);
  }
  uint64_t v24 = v21 - 1;
LABEL_36:
  if (v24 > (int)v21 - 1)
  {
LABEL_37:
    uint64_t v25 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v30 = 0;
    uint64_t v54 = 0;
    uint64_t v31 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v24) != 1)
  {
    uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v25 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v27 = *(void *)(v5 + 16);
  uint64_t v28 = v27 - 4;
  if (v27 >= 4)
  {
    if (v28 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v54 = 0;
    }
    else {
      uint64_t v54 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v29 = v27 - 3;
    goto LABEL_56;
  }
  if (v27 == 3)
  {
    uint64_t v29 = 0;
    uint64_t v54 = 0;
LABEL_56:
    if (v29 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v34 = v27 - 2;
    goto LABEL_61;
  }
  if (v27 >= 2)
  {
    uint64_t v34 = 0;
    uint64_t v31 = 0;
    uint64_t v54 = 0;
LABEL_61:
    if (v34 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v34) == 1) {
      uint64_t v30 = 0;
    }
    else {
      uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v34);
    }
    uint64_t v32 = v27 - 1;
    goto LABEL_66;
  }
  uint64_t v32 = 0;
  uint64_t v30 = 0;
  uint64_t v54 = 0;
  uint64_t v31 = 0;
  uint64_t v33 = 0;
  if (v27 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v32 <= (int)v27 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v32) != 1)
    {
      uint64_t v33 = *(void *)(*(void *)(v5 + 64) + 8 * v32);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v33 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v36 = 0;
    uint64_t v56 = 0;
    uint64_t v35 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v33 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v56 = 0;
    if (v17) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v56 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v17) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v35 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v35 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v37 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v36 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v18 >= 1)
  {
    uint64_t v38 = 0;
    uint64_t v39 = (_DWORD *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v40 = (_DWORD *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v41 = (_DWORD *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v57 >= 1)
      {
        uint64_t v42 = 0;
        uint64_t v43 = v39;
        uint64_t v44 = v40;
        uint64_t v45 = v41;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v46 = 0;
            uint64_t v47 = v43;
            uint64_t v48 = v44;
            uint64_t v49 = v45;
            do
            {
              uint64_t v50 = v10;
              uint64_t v51 = v47;
              uint64_t v52 = v48;
              uint64_t v53 = v49;
              if (v10 >= 1)
              {
                do
                {
                  _DWORD *v53 = *v52 + *v51;
                  uint64_t v53 = (_DWORD *)((char *)v53 + v37);
                  uint64_t v52 = (_DWORD *)((char *)v52 + v33);
                  uint64_t v51 = (_DWORD *)((char *)v51 + v25);
                  --v50;
                }
                while (v50);
              }
              ++v46;
              uint64_t v49 = (_DWORD *)((char *)v49 + v36);
              uint64_t v48 = (_DWORD *)((char *)v48 + v30);
              uint64_t v47 = (_DWORD *)((char *)v47 + v19);
            }
            while (v46 != v13);
          }
          ++v42;
          uint64_t v45 = (_DWORD *)((char *)v45 + v35);
          uint64_t v44 = (_DWORD *)((char *)v44 + v31);
          uint64_t v43 = (_DWORD *)((char *)v43 + result);
        }
        while (v42 != v57);
      }
      ++v38;
      uint64_t v41 = (_DWORD *)((char *)v41 + v56);
      uint64_t v40 = (_DWORD *)((char *)v40 + v54);
      uint64_t v39 = (_DWORD *)((char *)v39 + v55);
    }
    while (v38 != v18);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<short,short,short,(mlir::mps::arithmeticOp)0>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v57 = 1;
    char v17 = 1;
LABEL_7:
    uint64_t v18 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v57 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v17 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v17 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v19 = 0;
    uint64_t v55 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v21 = *(void *)(v4 + 16);
  uint64_t v22 = v21 - 4;
  if (v21 >= 4)
  {
    if (v22 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
    }
    uint64_t v23 = v21 - 3;
    goto LABEL_26;
  }
  if (v21 == 3)
  {
    uint64_t v23 = 0;
    uint64_t v55 = 0;
LABEL_26:
    if (v23 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v26 = v21 - 2;
    goto LABEL_31;
  }
  if (v21 < 2)
  {
    uint64_t v24 = 0;
    uint64_t v19 = 0;
    uint64_t v55 = 0;
    uint64_t result = 0;
    uint64_t v25 = 0;
    if (v21 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v26 = 0;
  uint64_t result = 0;
  uint64_t v55 = 0;
LABEL_31:
  if (v26 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v26) == 1) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = *(void *)(*(void *)(v4 + 64) + 8 * v26);
  }
  uint64_t v24 = v21 - 1;
LABEL_36:
  if (v24 > (int)v21 - 1)
  {
LABEL_37:
    uint64_t v25 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v30 = 0;
    uint64_t v54 = 0;
    uint64_t v31 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v24) != 1)
  {
    uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v25 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v27 = *(void *)(v5 + 16);
  uint64_t v28 = v27 - 4;
  if (v27 >= 4)
  {
    if (v28 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v54 = 0;
    }
    else {
      uint64_t v54 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v29 = v27 - 3;
    goto LABEL_56;
  }
  if (v27 == 3)
  {
    uint64_t v29 = 0;
    uint64_t v54 = 0;
LABEL_56:
    if (v29 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v34 = v27 - 2;
    goto LABEL_61;
  }
  if (v27 >= 2)
  {
    uint64_t v34 = 0;
    uint64_t v31 = 0;
    uint64_t v54 = 0;
LABEL_61:
    if (v34 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v34) == 1) {
      uint64_t v30 = 0;
    }
    else {
      uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v34);
    }
    uint64_t v32 = v27 - 1;
    goto LABEL_66;
  }
  uint64_t v32 = 0;
  uint64_t v30 = 0;
  uint64_t v54 = 0;
  uint64_t v31 = 0;
  uint64_t v33 = 0;
  if (v27 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v32 <= (int)v27 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v32) != 1)
    {
      uint64_t v33 = *(void *)(*(void *)(v5 + 64) + 8 * v32);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v33 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v36 = 0;
    uint64_t v56 = 0;
    uint64_t v35 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v33 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v56 = 0;
    if (v17) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v56 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v17) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v35 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v35 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v37 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v36 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v18 >= 1)
  {
    uint64_t v38 = 0;
    uint64_t v39 = (_WORD *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v40 = (_WORD *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v41 = (_WORD *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v57 >= 1)
      {
        uint64_t v42 = 0;
        uint64_t v43 = v39;
        uint64_t v44 = v40;
        uint64_t v45 = v41;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v46 = 0;
            uint64_t v47 = v43;
            uint64_t v48 = v44;
            uint64_t v49 = v45;
            do
            {
              uint64_t v50 = v10;
              uint64_t v51 = v47;
              uint64_t v52 = v48;
              uint64_t v53 = v49;
              if (v10 >= 1)
              {
                do
                {
                  _WORD *v53 = *v52 + *v51;
                  uint64_t v53 = (_WORD *)((char *)v53 + v37);
                  uint64_t v52 = (_WORD *)((char *)v52 + v33);
                  uint64_t v51 = (_WORD *)((char *)v51 + v25);
                  --v50;
                }
                while (v50);
              }
              ++v46;
              uint64_t v49 = (_WORD *)((char *)v49 + v36);
              uint64_t v48 = (_WORD *)((char *)v48 + v30);
              uint64_t v47 = (_WORD *)((char *)v47 + v19);
            }
            while (v46 != v13);
          }
          ++v42;
          uint64_t v45 = (_WORD *)((char *)v45 + v35);
          uint64_t v44 = (_WORD *)((char *)v44 + v31);
          uint64_t v43 = (_WORD *)((char *)v43 + result);
        }
        while (v42 != v57);
      }
      ++v38;
      uint64_t v41 = (_WORD *)((char *)v41 + v56);
      uint64_t v40 = (_WORD *)((char *)v40 + v54);
      uint64_t v39 = (_WORD *)((char *)v39 + v55);
    }
    while (v38 != v18);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<signed char,signed char,signed char,(mlir::mps::arithmeticOp)0>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v57 = 1;
    char v17 = 1;
LABEL_7:
    uint64_t v18 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v57 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v17 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v17 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v19 = 0;
    uint64_t v55 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v21 = *(void *)(v4 + 16);
  uint64_t v22 = v21 - 4;
  if (v21 >= 4)
  {
    if (v22 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
    }
    uint64_t v23 = v21 - 3;
    goto LABEL_26;
  }
  if (v21 == 3)
  {
    uint64_t v23 = 0;
    uint64_t v55 = 0;
LABEL_26:
    if (v23 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v26 = v21 - 2;
    goto LABEL_31;
  }
  if (v21 < 2)
  {
    uint64_t v24 = 0;
    uint64_t v19 = 0;
    uint64_t v55 = 0;
    uint64_t result = 0;
    uint64_t v25 = 0;
    if (v21 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v26 = 0;
  uint64_t result = 0;
  uint64_t v55 = 0;
LABEL_31:
  if (v26 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v26) == 1) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = *(void *)(*(void *)(v4 + 64) + 8 * v26);
  }
  uint64_t v24 = v21 - 1;
LABEL_36:
  if (v24 > (int)v21 - 1)
  {
LABEL_37:
    uint64_t v25 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v30 = 0;
    uint64_t v54 = 0;
    uint64_t v31 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v24) != 1)
  {
    uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v25 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v27 = *(void *)(v5 + 16);
  uint64_t v28 = v27 - 4;
  if (v27 >= 4)
  {
    if (v28 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v54 = 0;
    }
    else {
      uint64_t v54 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v29 = v27 - 3;
    goto LABEL_56;
  }
  if (v27 == 3)
  {
    uint64_t v29 = 0;
    uint64_t v54 = 0;
LABEL_56:
    if (v29 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v34 = v27 - 2;
    goto LABEL_61;
  }
  if (v27 >= 2)
  {
    uint64_t v34 = 0;
    uint64_t v31 = 0;
    uint64_t v54 = 0;
LABEL_61:
    if (v34 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v34) == 1) {
      uint64_t v30 = 0;
    }
    else {
      uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v34);
    }
    uint64_t v32 = v27 - 1;
    goto LABEL_66;
  }
  uint64_t v32 = 0;
  uint64_t v30 = 0;
  uint64_t v54 = 0;
  uint64_t v31 = 0;
  uint64_t v33 = 0;
  if (v27 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v32 <= (int)v27 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v32) != 1)
    {
      uint64_t v33 = *(void *)(*(void *)(v5 + 64) + 8 * v32);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v33 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v36 = 0;
    uint64_t v56 = 0;
    uint64_t v35 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v33 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v56 = 0;
    if (v17) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v56 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v17) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v35 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v35 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v37 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v36 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v18 >= 1)
  {
    uint64_t v38 = 0;
    uint64_t v39 = (unsigned char *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v40 = (unsigned char *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v41 = (unsigned char *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v57 >= 1)
      {
        uint64_t v42 = 0;
        uint64_t v43 = v39;
        uint64_t v44 = v40;
        uint64_t v45 = v41;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v46 = 0;
            uint64_t v47 = v43;
            uint64_t v48 = v44;
            uint64_t v49 = v45;
            do
            {
              uint64_t v50 = v10;
              uint64_t v51 = v47;
              uint64_t v52 = v48;
              uint64_t v53 = v49;
              if (v10 >= 1)
              {
                do
                {
                  unsigned char *v53 = *v52 + *v51;
                  v53 += v37;
                  v52 += v33;
                  v51 += v25;
                  --v50;
                }
                while (v50);
              }
              ++v46;
              v49 += v36;
              v48 += v30;
              v47 += v19;
            }
            while (v46 != v13);
          }
          ++v42;
          v45 += v35;
          v44 += v31;
          v43 += result;
        }
        while (v42 != v57);
      }
      ++v38;
      v41 += v56;
      v40 += v54;
      v39 += v55;
    }
    while (v38 != v18);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)1>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v17 = 1;
    char v18 = 1;
LABEL_7:
    uint64_t v19 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v17 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v18 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v18 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v19 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v58 = v19;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v20 = 0;
    uint64_t v57 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v22 = *(void *)(v4 + 16);
  uint64_t v23 = v22 - 4;
  if (v22 >= 4)
  {
    if (v23 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t v57 = 0;
    }
    else {
      uint64_t v57 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v24 = v22 - 3;
    goto LABEL_26;
  }
  if (v22 == 3)
  {
    uint64_t v24 = 0;
    uint64_t v57 = 0;
LABEL_26:
    if (v24 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    }
    uint64_t v27 = v22 - 2;
    goto LABEL_31;
  }
  if (v22 < 2)
  {
    uint64_t v25 = 0;
    uint64_t v20 = 0;
    uint64_t v57 = 0;
    uint64_t result = 0;
    uint64_t v26 = 0;
    if (v22 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v27 = 0;
  uint64_t result = 0;
  uint64_t v57 = 0;
LABEL_31:
  if (v27 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v27) == 1) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = *(void *)(*(void *)(v4 + 64) + 8 * v27);
  }
  uint64_t v25 = v22 - 1;
LABEL_36:
  if (v25 > (int)v22 - 1)
  {
LABEL_37:
    uint64_t v26 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v31 = 0;
    uint64_t v56 = 0;
    uint64_t v32 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v25) != 1)
  {
    uint64_t v26 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v26 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v28 = *(void *)(v5 + 16);
  uint64_t v29 = v28 - 4;
  if (v28 >= 4)
  {
    if (v29 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v56 = 0;
    }
    else {
      uint64_t v56 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v30 = v28 - 3;
    goto LABEL_56;
  }
  if (v28 == 3)
  {
    uint64_t v30 = 0;
    uint64_t v56 = 0;
LABEL_56:
    if (v30 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v30) == 1) {
      uint64_t v32 = 0;
    }
    else {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v30);
    }
    uint64_t v35 = v28 - 2;
    goto LABEL_61;
  }
  if (v28 >= 2)
  {
    uint64_t v35 = 0;
    uint64_t v32 = 0;
    uint64_t v56 = 0;
LABEL_61:
    if (v35 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v35) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v35);
    }
    uint64_t v33 = v28 - 1;
    goto LABEL_66;
  }
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v56 = 0;
  uint64_t v32 = 0;
  uint64_t v34 = 0;
  if (v28 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v33 <= (int)v28 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v33) != 1)
    {
      uint64_t v34 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v34 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v38 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v34 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v36 = 0;
    if (v18) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v18) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v37 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v38 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v39 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v38 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v39 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v58 >= 1)
  {
    uint64_t v40 = 0;
    uint64_t v41 = (float32x2_t *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v42 = (float32x2_t *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v43 = (float32x2_t *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v17 >= 1)
      {
        uint64_t v44 = 0;
        uint64_t v45 = v41;
        uint64_t v46 = v42;
        uint64_t v47 = v43;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v48 = 0;
            uint64_t v49 = v45;
            uint64_t v50 = v46;
            uint64_t v51 = v47;
            do
            {
              uint64_t v52 = v10;
              uint64_t v53 = v49;
              uint64_t v54 = v50;
              uint64_t v55 = v51;
              if (v10 >= 1)
              {
                do
                {
                  float32x2_t *v55 = vsub_f32(*v53, *v54);
                  uint64_t v55 = (float32x2_t *)((char *)v55 + v39);
                  uint64_t v54 = (float32x2_t *)((char *)v54 + v34);
                  uint64_t v53 = (float32x2_t *)((char *)v53 + v26);
                  --v52;
                }
                while (v52);
              }
              ++v48;
              uint64_t v51 = (float32x2_t *)((char *)v51 + v38);
              uint64_t v50 = (float32x2_t *)((char *)v50 + v31);
              uint64_t v49 = (float32x2_t *)((char *)v49 + v20);
            }
            while (v48 != v13);
          }
          ++v44;
          uint64_t v47 = (float32x2_t *)((char *)v47 + v37);
          uint64_t v46 = (float32x2_t *)((char *)v46 + v32);
          uint64_t v45 = (float32x2_t *)((char *)v45 + result);
        }
        while (v44 != v17);
      }
      ++v40;
      uint64_t v43 = (float32x2_t *)((char *)v43 + v36);
      uint64_t v42 = (float32x2_t *)((char *)v42 + v56);
      uint64_t v41 = (float32x2_t *)((char *)v41 + v57);
    }
    while (v40 != v58);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<float,float,float,(mlir::mps::arithmeticOp)1>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v17 = 1;
    char v18 = 1;
LABEL_7:
    uint64_t v19 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v17 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v18 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v18 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v19 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v58 = v19;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v20 = 0;
    uint64_t v57 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v22 = *(void *)(v4 + 16);
  uint64_t v23 = v22 - 4;
  if (v22 >= 4)
  {
    if (v23 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t v57 = 0;
    }
    else {
      uint64_t v57 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v24 = v22 - 3;
    goto LABEL_26;
  }
  if (v22 == 3)
  {
    uint64_t v24 = 0;
    uint64_t v57 = 0;
LABEL_26:
    if (v24 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    }
    uint64_t v27 = v22 - 2;
    goto LABEL_31;
  }
  if (v22 < 2)
  {
    uint64_t v25 = 0;
    uint64_t v20 = 0;
    uint64_t v57 = 0;
    uint64_t result = 0;
    uint64_t v26 = 0;
    if (v22 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v27 = 0;
  uint64_t result = 0;
  uint64_t v57 = 0;
LABEL_31:
  if (v27 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v27) == 1) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = *(void *)(*(void *)(v4 + 64) + 8 * v27);
  }
  uint64_t v25 = v22 - 1;
LABEL_36:
  if (v25 > (int)v22 - 1)
  {
LABEL_37:
    uint64_t v26 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v31 = 0;
    uint64_t v56 = 0;
    uint64_t v32 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v25) != 1)
  {
    uint64_t v26 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v26 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v28 = *(void *)(v5 + 16);
  uint64_t v29 = v28 - 4;
  if (v28 >= 4)
  {
    if (v29 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v56 = 0;
    }
    else {
      uint64_t v56 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v30 = v28 - 3;
    goto LABEL_56;
  }
  if (v28 == 3)
  {
    uint64_t v30 = 0;
    uint64_t v56 = 0;
LABEL_56:
    if (v30 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v30) == 1) {
      uint64_t v32 = 0;
    }
    else {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v30);
    }
    uint64_t v35 = v28 - 2;
    goto LABEL_61;
  }
  if (v28 >= 2)
  {
    uint64_t v35 = 0;
    uint64_t v32 = 0;
    uint64_t v56 = 0;
LABEL_61:
    if (v35 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v35) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v35);
    }
    uint64_t v33 = v28 - 1;
    goto LABEL_66;
  }
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v56 = 0;
  uint64_t v32 = 0;
  uint64_t v34 = 0;
  if (v28 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v33 <= (int)v28 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v33) != 1)
    {
      uint64_t v34 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v34 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v38 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v34 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v36 = 0;
    if (v18) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v18) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v37 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v38 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v39 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v38 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v39 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v58 >= 1)
  {
    uint64_t v40 = 0;
    uint64_t v41 = (float *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v42 = (float *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v43 = (float *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v17 >= 1)
      {
        uint64_t v44 = 0;
        uint64_t v45 = v41;
        uint64_t v46 = v42;
        uint64_t v47 = v43;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v48 = 0;
            uint64_t v49 = v45;
            uint64_t v50 = v46;
            uint64_t v51 = v47;
            do
            {
              uint64_t v52 = v10;
              uint64_t v53 = v49;
              uint64_t v54 = v50;
              uint64_t v55 = v51;
              if (v10 >= 1)
              {
                do
                {
                  float *v55 = *v53 - *v54;
                  uint64_t v55 = (float *)((char *)v55 + v39);
                  uint64_t v54 = (float *)((char *)v54 + v34);
                  uint64_t v53 = (float *)((char *)v53 + v26);
                  --v52;
                }
                while (v52);
              }
              ++v48;
              uint64_t v51 = (float *)((char *)v51 + v38);
              uint64_t v50 = (float *)((char *)v50 + v31);
              uint64_t v49 = (float *)((char *)v49 + v20);
            }
            while (v48 != v13);
          }
          ++v44;
          uint64_t v47 = (float *)((char *)v47 + v37);
          uint64_t v46 = (float *)((char *)v46 + v32);
          uint64_t v45 = (float *)((char *)v45 + result);
        }
        while (v44 != v17);
      }
      ++v40;
      uint64_t v43 = (float *)((char *)v43 + v36);
      uint64_t v42 = (float *)((char *)v42 + v56);
      uint64_t v41 = (float *)((char *)v41 + v57);
    }
    while (v40 != v58);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)1>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4, float16x4_t a5)
{
  uint64_t v5 = **a1;
  uint64_t v6 = (*a1)[1];
  uint64_t v7 = **a2;
  uint64_t v8 = *(void *)(v7 + 16);
  uint64_t v9 = v8 - 1;
  if (v8 <= 0)
  {
    uint64_t v12 = v8 - 2;
    uint64_t v11 = 1;
    goto LABEL_5;
  }
  uint64_t v10 = *(void *)(v7 + 24);
  uint64_t v11 = *(void *)(v10 + 8 * v9);
  if (v8 == 1)
  {
    uint64_t v12 = -1;
LABEL_5:
    uint64_t v13 = v8 - 3;
    uint64_t v14 = 1;
    char v15 = 1;
LABEL_6:
    uint64_t v16 = v8 - 4;
    char v17 = 1;
    uint64_t v18 = 1;
    char v19 = 1;
LABEL_7:
    uint64_t v20 = 1;
    goto LABEL_8;
  }
  uint64_t v12 = v8 - 2;
  uint64_t v14 = *(void *)(v10 + 8 * (v8 - 2));
  if ((unint64_t)v8 <= 2)
  {
    uint64_t v12 = 0;
    char v15 = 0;
    uint64_t v13 = -1;
    goto LABEL_6;
  }
  uint64_t v13 = v8 - 3;
  uint64_t v18 = *(void *)(v10 + 8 * (v8 - 3));
  if (v8 == 3)
  {
    char v15 = 0;
    uint64_t v13 = 0;
    char v19 = 0;
    uint64_t v16 = -1;
    uint64_t v12 = 1;
    char v17 = 1;
    goto LABEL_7;
  }
  char v17 = 0;
  char v15 = 0;
  char v19 = 0;
  uint64_t v16 = v8 - 4;
  uint64_t v20 = *(void *)(v10 + 8 * (v8 - 4));
LABEL_8:
  uint64_t v59 = v20;
  if (*(unsigned char *)(v5 + 58))
  {
    uint64_t v21 = 0;
    uint64_t v58 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v23 = *(void *)(v5 + 16);
  uint64_t v24 = v23 - 4;
  if (v23 >= 4)
  {
    if (v24 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v24) == 1) {
      uint64_t v58 = 0;
    }
    else {
      uint64_t v58 = *(void *)(*(void *)(v5 + 64) + 8 * v24);
    }
    uint64_t v25 = v23 - 3;
    goto LABEL_26;
  }
  if (v23 == 3)
  {
    uint64_t v25 = 0;
    uint64_t v58 = 0;
LABEL_26:
    if (v25 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v25) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v5 + 64) + 8 * v25);
    }
    uint64_t v28 = v23 - 2;
    goto LABEL_31;
  }
  if (v23 < 2)
  {
    uint64_t v26 = 0;
    uint64_t v21 = 0;
    uint64_t v58 = 0;
    uint64_t result = 0;
    uint64_t v27 = 0;
    if (v23 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v28 = 0;
  uint64_t result = 0;
  uint64_t v58 = 0;
LABEL_31:
  if (v28 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
    uint64_t v21 = 0;
  }
  else {
    uint64_t v21 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
  }
  uint64_t v26 = v23 - 1;
LABEL_36:
  if (v26 > (int)v23 - 1)
  {
LABEL_37:
    uint64_t v27 = 0;
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v32 = 0;
    uint64_t v57 = 0;
    uint64_t v33 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v5 + 24) + 8 * v26) != 1)
  {
    uint64_t v27 = *(void *)(*(void *)(v5 + 64) + 8 * v26);
    if (*(unsigned char *)(v6 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v27 = 0;
LABEL_46:
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v29 = *(void *)(v6 + 16);
  uint64_t v30 = v29 - 4;
  if (v29 >= 4)
  {
    if (v30 > (int)v29 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v30) == 1) {
      uint64_t v57 = 0;
    }
    else {
      uint64_t v57 = *(void *)(*(void *)(v6 + 64) + 8 * v30);
    }
    uint64_t v31 = v29 - 3;
    goto LABEL_56;
  }
  if (v29 == 3)
  {
    uint64_t v31 = 0;
    uint64_t v57 = 0;
LABEL_56:
    if (v31 > (int)v29 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v31) == 1) {
      uint64_t v33 = 0;
    }
    else {
      uint64_t v33 = *(void *)(*(void *)(v6 + 64) + 8 * v31);
    }
    uint64_t v36 = v29 - 2;
    goto LABEL_61;
  }
  if (v29 >= 2)
  {
    uint64_t v36 = 0;
    uint64_t v33 = 0;
    uint64_t v57 = 0;
LABEL_61:
    if (v36 > (int)v29 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v36) == 1) {
      uint64_t v32 = 0;
    }
    else {
      uint64_t v32 = *(void *)(*(void *)(v6 + 64) + 8 * v36);
    }
    uint64_t v34 = v29 - 1;
    goto LABEL_66;
  }
  uint64_t v34 = 0;
  uint64_t v32 = 0;
  uint64_t v57 = 0;
  uint64_t v33 = 0;
  uint64_t v35 = 0;
  if (v29 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v34 <= (int)v29 - 1)
  {
    if (*(void *)(*(void *)(v6 + 24) + 8 * v34) != 1)
    {
      uint64_t v35 = *(void *)(*(void *)(v6 + 64) + 8 * v34);
      if (!*(unsigned char *)(v7 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v35 = 0;
LABEL_78:
    if (!*(unsigned char *)(v7 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v39 = 0;
    uint64_t v37 = 0;
    uint64_t v38 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v35 = 0;
  if (*(unsigned char *)(v7 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v17 & 1) != 0 || v16 > (int)v8 - 1 || *(void *)(*(void *)(v7 + 24) + 8 * v16) == 1)
  {
    uint64_t v37 = 0;
    if (v19) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v37 = *(void *)(*(void *)(v7 + 64) + 8 * v16);
    if (v19) {
      goto LABEL_98;
    }
  }
  if (v13 > (int)v8 - 1 || *(void *)(*(void *)(v7 + 24) + 8 * v13) == 1)
  {
LABEL_98:
    uint64_t v38 = 0;
    if (v15) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v38 = *(void *)(*(void *)(v7 + 64) + 8 * v13);
  if (v15) {
    goto LABEL_101;
  }
LABEL_99:
  if (v12 <= (int)v8 - 1 && *(void *)(*(void *)(v7 + 24) + 8 * v12) != 1)
  {
    uint64_t v39 = *(void *)(*(void *)(v7 + 64) + 8 * v12);
    if (v8 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v40 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v39 = 0;
  if (v8 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v9 > (int)v8 - 1 || *(void *)(*(void *)(v7 + 24) + 8 * v9) == 1) {
    goto LABEL_80;
  }
  uint64_t v40 = *(void *)(*(void *)(v7 + 64) + 8 * v9);
LABEL_81:
  if (v59 >= 1)
  {
    uint64_t v41 = 0;
    uint64_t v42 = (__int32 *)(**(void **)a3 + *(void *)(v5 + 40));
    uint64_t v43 = (float32x2_t *)(*(void *)(*(void *)a3 + 8) + *(void *)(v6 + 40));
    uint64_t v44 = (double *)(**a4 + *(void *)(v7 + 40));
    do
    {
      if (v18 >= 1)
      {
        uint64_t v45 = 0;
        uint64_t v46 = v42;
        uint64_t v47 = v43;
        uint64_t v48 = v44;
        do
        {
          if (v14 >= 1)
          {
            uint64_t v49 = 0;
            uint64_t v50 = v46;
            uint64_t v51 = v47;
            uint64_t v52 = v48;
            do
            {
              uint64_t v53 = v11;
              uint64_t v54 = v50;
              uint64_t v55 = v51;
              uint64_t v56 = v52;
              if (v11 >= 1)
              {
                do
                {
                  a5.i32[0] = *v54;
                  a5 = (float16x4_t)vsub_f32((float32x2_t)*(_OWORD *)&vcvtq_f32_f16(a5), *v55);
                  double *v56 = *(double *)&a5;
                  uint64_t v56 = (double *)((char *)v56 + v40);
                  uint64_t v55 = (float32x2_t *)((char *)v55 + v35);
                  uint64_t v54 = (__int32 *)((char *)v54 + v27);
                  --v53;
                }
                while (v53);
              }
              ++v49;
              uint64_t v52 = (double *)((char *)v52 + v39);
              uint64_t v51 = (float32x2_t *)((char *)v51 + v32);
              uint64_t v50 = (__int32 *)((char *)v50 + v21);
            }
            while (v49 != v14);
          }
          ++v45;
          uint64_t v48 = (double *)((char *)v48 + v38);
          uint64_t v47 = (float32x2_t *)((char *)v47 + v33);
          uint64_t v46 = (__int32 *)((char *)v46 + result);
        }
        while (v45 != v18);
      }
      ++v41;
      uint64_t v44 = (double *)((char *)v44 + v37);
      uint64_t v43 = (float32x2_t *)((char *)v43 + v57);
      uint64_t v42 = (__int32 *)((char *)v42 + v58);
    }
    while (v41 != v59);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<half,float,float,(mlir::mps::arithmeticOp)1>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v17 = 1;
    char v18 = 1;
LABEL_7:
    uint64_t v19 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v17 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v18 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v18 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v19 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v64 = v19;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v20 = 0;
    uint64_t v63 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v22 = *(void *)(v4 + 16);
  uint64_t v23 = v22 - 4;
  if (v22 >= 4)
  {
    if (v23 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t v63 = 0;
    }
    else {
      uint64_t v63 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v24 = v22 - 3;
    goto LABEL_26;
  }
  if (v22 == 3)
  {
    uint64_t v24 = 0;
    uint64_t v63 = 0;
LABEL_26:
    if (v24 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    }
    uint64_t v27 = v22 - 2;
    goto LABEL_31;
  }
  if (v22 < 2)
  {
    uint64_t v25 = 0;
    uint64_t v20 = 0;
    uint64_t v63 = 0;
    uint64_t result = 0;
    uint64_t v26 = 0;
    if (v22 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v27 = 0;
  uint64_t result = 0;
  uint64_t v63 = 0;
LABEL_31:
  if (v27 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v27) == 1) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = *(void *)(*(void *)(v4 + 64) + 8 * v27);
  }
  uint64_t v25 = v22 - 1;
LABEL_36:
  if (v25 > (int)v22 - 1)
  {
LABEL_37:
    uint64_t v26 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v31 = 0;
    uint64_t v62 = 0;
    uint64_t v32 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v25) != 1)
  {
    uint64_t v26 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v26 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v28 = *(void *)(v5 + 16);
  uint64_t v29 = v28 - 4;
  if (v28 >= 4)
  {
    if (v29 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v62 = 0;
    }
    else {
      uint64_t v62 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v30 = v28 - 3;
    goto LABEL_56;
  }
  if (v28 == 3)
  {
    uint64_t v30 = 0;
    uint64_t v62 = 0;
LABEL_56:
    if (v30 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v30) == 1) {
      uint64_t v32 = 0;
    }
    else {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v30);
    }
    uint64_t v35 = v28 - 2;
    goto LABEL_61;
  }
  if (v28 >= 2)
  {
    uint64_t v35 = 0;
    uint64_t v32 = 0;
    uint64_t v62 = 0;
LABEL_61:
    if (v35 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v35) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v35);
    }
    uint64_t v33 = v28 - 1;
    goto LABEL_66;
  }
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v62 = 0;
  uint64_t v32 = 0;
  uint64_t v34 = 0;
  if (v28 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v33 <= (int)v28 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v33) != 1)
    {
      uint64_t v34 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v34 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v38 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v34 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v36 = 0;
    if (v18) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v18) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v37 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v38 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v39 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v38 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v39 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v64 >= 1)
  {
    uint64_t v40 = 0;
    uint64_t v41 = (__int16 *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v42 = (float *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v43 = (float *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v17 >= 1)
      {
        uint64_t v44 = 0;
        uint64_t v45 = v41;
        uint64_t v46 = v42;
        uint64_t v47 = v43;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v48 = 0;
            uint64_t v49 = v45;
            uint64_t v50 = v46;
            uint64_t v51 = v47;
            do
            {
              uint64_t v52 = v10;
              uint64_t v53 = v49;
              uint64_t v54 = v50;
              uint64_t v55 = v51;
              if (v10 >= 1)
              {
                do
                {
                  _H0 = *v53;
                  __asm { FCVT            S0, H0 }
                  float *v55 = _S0 - *v54;
                  uint64_t v55 = (float *)((char *)v55 + v39);
                  uint64_t v54 = (float *)((char *)v54 + v34);
                  uint64_t v53 = (__int16 *)((char *)v53 + v26);
                  --v52;
                }
                while (v52);
              }
              ++v48;
              uint64_t v51 = (float *)((char *)v51 + v38);
              uint64_t v50 = (float *)((char *)v50 + v31);
              uint64_t v49 = (__int16 *)((char *)v49 + v20);
            }
            while (v48 != v13);
          }
          ++v44;
          uint64_t v47 = (float *)((char *)v47 + v37);
          uint64_t v46 = (float *)((char *)v46 + v32);
          uint64_t v45 = (__int16 *)((char *)v45 + result);
        }
        while (v44 != v17);
      }
      ++v40;
      uint64_t v43 = (float *)((char *)v43 + v36);
      uint64_t v42 = (float *)((char *)v42 + v62);
      uint64_t v41 = (__int16 *)((char *)v41 + v63);
    }
    while (v40 != v64);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)1>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4, double a5, float16x4_t a6)
{
  uint64_t v6 = **a1;
  uint64_t v7 = (*a1)[1];
  uint64_t v8 = **a2;
  uint64_t v9 = *(void *)(v8 + 16);
  uint64_t v10 = v9 - 1;
  if (v9 <= 0)
  {
    uint64_t v13 = v9 - 2;
    uint64_t v12 = 1;
    goto LABEL_5;
  }
  uint64_t v11 = *(void *)(v8 + 24);
  uint64_t v12 = *(void *)(v11 + 8 * v10);
  if (v9 == 1)
  {
    uint64_t v13 = -1;
LABEL_5:
    uint64_t v14 = v9 - 3;
    uint64_t v15 = 1;
    char v16 = 1;
LABEL_6:
    uint64_t v17 = v9 - 4;
    char v18 = 1;
    uint64_t v19 = 1;
    char v20 = 1;
LABEL_7:
    uint64_t v21 = 1;
    goto LABEL_8;
  }
  uint64_t v13 = v9 - 2;
  uint64_t v15 = *(void *)(v11 + 8 * (v9 - 2));
  if ((unint64_t)v9 <= 2)
  {
    uint64_t v13 = 0;
    char v16 = 0;
    uint64_t v14 = -1;
    goto LABEL_6;
  }
  uint64_t v14 = v9 - 3;
  uint64_t v19 = *(void *)(v11 + 8 * (v9 - 3));
  if (v9 == 3)
  {
    char v16 = 0;
    uint64_t v14 = 0;
    char v20 = 0;
    uint64_t v17 = -1;
    uint64_t v13 = 1;
    char v18 = 1;
    goto LABEL_7;
  }
  char v18 = 0;
  char v16 = 0;
  char v20 = 0;
  uint64_t v17 = v9 - 4;
  uint64_t v21 = *(void *)(v11 + 8 * (v9 - 4));
LABEL_8:
  uint64_t v60 = v21;
  if (*(unsigned char *)(v6 + 58))
  {
    uint64_t v22 = 0;
    uint64_t v59 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v24 = *(void *)(v6 + 16);
  uint64_t v25 = v24 - 4;
  if (v24 >= 4)
  {
    if (v25 > (int)v24 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v25) == 1) {
      uint64_t v59 = 0;
    }
    else {
      uint64_t v59 = *(void *)(*(void *)(v6 + 64) + 8 * v25);
    }
    uint64_t v26 = v24 - 3;
    goto LABEL_26;
  }
  if (v24 == 3)
  {
    uint64_t v26 = 0;
    uint64_t v59 = 0;
LABEL_26:
    if (v26 > (int)v24 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v26) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v6 + 64) + 8 * v26);
    }
    uint64_t v29 = v24 - 2;
    goto LABEL_31;
  }
  if (v24 < 2)
  {
    uint64_t v27 = 0;
    uint64_t v22 = 0;
    uint64_t v59 = 0;
    uint64_t result = 0;
    uint64_t v28 = 0;
    if (v24 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v29 = 0;
  uint64_t result = 0;
  uint64_t v59 = 0;
LABEL_31:
  if (v29 > (int)v24 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v29) == 1) {
    uint64_t v22 = 0;
  }
  else {
    uint64_t v22 = *(void *)(*(void *)(v6 + 64) + 8 * v29);
  }
  uint64_t v27 = v24 - 1;
LABEL_36:
  if (v27 > (int)v24 - 1)
  {
LABEL_37:
    uint64_t v28 = 0;
    if (!*(unsigned char *)(v7 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v33 = 0;
    uint64_t v58 = 0;
    uint64_t v34 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v6 + 24) + 8 * v27) != 1)
  {
    uint64_t v28 = *(void *)(*(void *)(v6 + 64) + 8 * v27);
    if (*(unsigned char *)(v7 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v28 = 0;
LABEL_46:
  if (*(unsigned char *)(v7 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v30 = *(void *)(v7 + 16);
  uint64_t v31 = v30 - 4;
  if (v30 >= 4)
  {
    if (v31 > (int)v30 - 1 || *(void *)(*(void *)(v7 + 24) + 8 * v31) == 1) {
      uint64_t v58 = 0;
    }
    else {
      uint64_t v58 = *(void *)(*(void *)(v7 + 64) + 8 * v31);
    }
    uint64_t v32 = v30 - 3;
    goto LABEL_56;
  }
  if (v30 == 3)
  {
    uint64_t v32 = 0;
    uint64_t v58 = 0;
LABEL_56:
    if (v32 > (int)v30 - 1 || *(void *)(*(void *)(v7 + 24) + 8 * v32) == 1) {
      uint64_t v34 = 0;
    }
    else {
      uint64_t v34 = *(void *)(*(void *)(v7 + 64) + 8 * v32);
    }
    uint64_t v37 = v30 - 2;
    goto LABEL_61;
  }
  if (v30 >= 2)
  {
    uint64_t v37 = 0;
    uint64_t v34 = 0;
    uint64_t v58 = 0;
LABEL_61:
    if (v37 > (int)v30 - 1 || *(void *)(*(void *)(v7 + 24) + 8 * v37) == 1) {
      uint64_t v33 = 0;
    }
    else {
      uint64_t v33 = *(void *)(*(void *)(v7 + 64) + 8 * v37);
    }
    uint64_t v35 = v30 - 1;
    goto LABEL_66;
  }
  uint64_t v35 = 0;
  uint64_t v33 = 0;
  uint64_t v58 = 0;
  uint64_t v34 = 0;
  uint64_t v36 = 0;
  if (v30 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v35 <= (int)v30 - 1)
  {
    if (*(void *)(*(void *)(v7 + 24) + 8 * v35) != 1)
    {
      uint64_t v36 = *(void *)(*(void *)(v7 + 64) + 8 * v35);
      if (!*(unsigned char *)(v8 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v36 = 0;
LABEL_78:
    if (!*(unsigned char *)(v8 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v40 = 0;
    uint64_t v38 = 0;
    uint64_t v39 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v36 = 0;
  if (*(unsigned char *)(v8 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v18 & 1) != 0 || v17 > (int)v9 - 1 || *(void *)(*(void *)(v8 + 24) + 8 * v17) == 1)
  {
    uint64_t v38 = 0;
    if (v20) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v38 = *(void *)(*(void *)(v8 + 64) + 8 * v17);
    if (v20) {
      goto LABEL_98;
    }
  }
  if (v14 > (int)v9 - 1 || *(void *)(*(void *)(v8 + 24) + 8 * v14) == 1)
  {
LABEL_98:
    uint64_t v39 = 0;
    if (v16) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v39 = *(void *)(*(void *)(v8 + 64) + 8 * v14);
  if (v16) {
    goto LABEL_101;
  }
LABEL_99:
  if (v13 <= (int)v9 - 1 && *(void *)(*(void *)(v8 + 24) + 8 * v13) != 1)
  {
    uint64_t v40 = *(void *)(*(void *)(v8 + 64) + 8 * v13);
    if (v9 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v41 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v40 = 0;
  if (v9 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v10 > (int)v9 - 1 || *(void *)(*(void *)(v8 + 24) + 8 * v10) == 1) {
    goto LABEL_80;
  }
  uint64_t v41 = *(void *)(*(void *)(v8 + 64) + 8 * v10);
LABEL_81:
  if (v60 >= 1)
  {
    uint64_t v42 = 0;
    uint64_t v43 = (float32x2_t *)(**(void **)a3 + *(void *)(v6 + 40));
    uint64_t v44 = (__int32 *)(*(void *)(*(void *)a3 + 8) + *(void *)(v7 + 40));
    uint64_t v45 = (float32x2_t *)(**a4 + *(void *)(v8 + 40));
    do
    {
      if (v19 >= 1)
      {
        uint64_t v46 = 0;
        uint64_t v47 = v43;
        uint64_t v48 = v44;
        uint64_t v49 = v45;
        do
        {
          if (v15 >= 1)
          {
            uint64_t v50 = 0;
            uint64_t v51 = v47;
            uint64_t v52 = v48;
            uint64_t v53 = v49;
            do
            {
              uint64_t v54 = v12;
              uint64_t v55 = v51;
              uint64_t v56 = v52;
              uint64_t v57 = v53;
              if (v12 >= 1)
              {
                do
                {
                  a6.i32[0] = *v56;
                  a6 = (float16x4_t)vcvtq_f32_f16(a6).u64[0];
                  float32x2_t *v57 = vsub_f32(*v55, (float32x2_t)a6);
                  uint64_t v57 = (float32x2_t *)((char *)v57 + v41);
                  uint64_t v56 = (__int32 *)((char *)v56 + v36);
                  uint64_t v55 = (float32x2_t *)((char *)v55 + v28);
                  --v54;
                }
                while (v54);
              }
              ++v50;
              uint64_t v53 = (float32x2_t *)((char *)v53 + v40);
              uint64_t v52 = (__int32 *)((char *)v52 + v33);
              uint64_t v51 = (float32x2_t *)((char *)v51 + v22);
            }
            while (v50 != v15);
          }
          ++v46;
          uint64_t v49 = (float32x2_t *)((char *)v49 + v39);
          uint64_t v48 = (__int32 *)((char *)v48 + v34);
          uint64_t v47 = (float32x2_t *)((char *)v47 + result);
        }
        while (v46 != v19);
      }
      ++v42;
      uint64_t v45 = (float32x2_t *)((char *)v45 + v38);
      uint64_t v44 = (__int32 *)((char *)v44 + v58);
      uint64_t v43 = (float32x2_t *)((char *)v43 + v59);
    }
    while (v42 != v60);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<float,half,float,(mlir::mps::arithmeticOp)1>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v17 = 1;
    char v18 = 1;
LABEL_7:
    uint64_t v19 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v17 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v18 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v18 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v19 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v64 = v19;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v20 = 0;
    uint64_t v63 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v22 = *(void *)(v4 + 16);
  uint64_t v23 = v22 - 4;
  if (v22 >= 4)
  {
    if (v23 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t v63 = 0;
    }
    else {
      uint64_t v63 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v24 = v22 - 3;
    goto LABEL_26;
  }
  if (v22 == 3)
  {
    uint64_t v24 = 0;
    uint64_t v63 = 0;
LABEL_26:
    if (v24 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    }
    uint64_t v27 = v22 - 2;
    goto LABEL_31;
  }
  if (v22 < 2)
  {
    uint64_t v25 = 0;
    uint64_t v20 = 0;
    uint64_t v63 = 0;
    uint64_t result = 0;
    uint64_t v26 = 0;
    if (v22 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v27 = 0;
  uint64_t result = 0;
  uint64_t v63 = 0;
LABEL_31:
  if (v27 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v27) == 1) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = *(void *)(*(void *)(v4 + 64) + 8 * v27);
  }
  uint64_t v25 = v22 - 1;
LABEL_36:
  if (v25 > (int)v22 - 1)
  {
LABEL_37:
    uint64_t v26 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v31 = 0;
    uint64_t v62 = 0;
    uint64_t v32 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v25) != 1)
  {
    uint64_t v26 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v26 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v28 = *(void *)(v5 + 16);
  uint64_t v29 = v28 - 4;
  if (v28 >= 4)
  {
    if (v29 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v62 = 0;
    }
    else {
      uint64_t v62 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v30 = v28 - 3;
    goto LABEL_56;
  }
  if (v28 == 3)
  {
    uint64_t v30 = 0;
    uint64_t v62 = 0;
LABEL_56:
    if (v30 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v30) == 1) {
      uint64_t v32 = 0;
    }
    else {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v30);
    }
    uint64_t v35 = v28 - 2;
    goto LABEL_61;
  }
  if (v28 >= 2)
  {
    uint64_t v35 = 0;
    uint64_t v32 = 0;
    uint64_t v62 = 0;
LABEL_61:
    if (v35 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v35) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v35);
    }
    uint64_t v33 = v28 - 1;
    goto LABEL_66;
  }
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v62 = 0;
  uint64_t v32 = 0;
  uint64_t v34 = 0;
  if (v28 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v33 <= (int)v28 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v33) != 1)
    {
      uint64_t v34 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v34 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v38 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v34 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v36 = 0;
    if (v18) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v18) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v37 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v38 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v39 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v38 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v39 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v64 >= 1)
  {
    uint64_t v40 = 0;
    uint64_t v41 = (float *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v42 = (__int16 *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v43 = (float *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v17 >= 1)
      {
        uint64_t v44 = 0;
        uint64_t v45 = v41;
        uint64_t v46 = v42;
        uint64_t v47 = v43;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v48 = 0;
            uint64_t v49 = v45;
            uint64_t v50 = v46;
            uint64_t v51 = v47;
            do
            {
              uint64_t v52 = v10;
              uint64_t v53 = v49;
              uint64_t v54 = v50;
              uint64_t v55 = v51;
              if (v10 >= 1)
              {
                do
                {
                  _H1 = *v54;
                  __asm { FCVT            S1, H1 }
                  float *v55 = *v53 - _S1;
                  uint64_t v55 = (float *)((char *)v55 + v39);
                  uint64_t v54 = (__int16 *)((char *)v54 + v34);
                  uint64_t v53 = (float *)((char *)v53 + v26);
                  --v52;
                }
                while (v52);
              }
              ++v48;
              uint64_t v51 = (float *)((char *)v51 + v38);
              uint64_t v50 = (__int16 *)((char *)v50 + v31);
              uint64_t v49 = (float *)((char *)v49 + v20);
            }
            while (v48 != v13);
          }
          ++v44;
          uint64_t v47 = (float *)((char *)v47 + v37);
          uint64_t v46 = (__int16 *)((char *)v46 + v32);
          uint64_t v45 = (float *)((char *)v45 + result);
        }
        while (v44 != v17);
      }
      ++v40;
      uint64_t v43 = (float *)((char *)v43 + v36);
      uint64_t v42 = (__int16 *)((char *)v42 + v62);
      uint64_t v41 = (float *)((char *)v41 + v63);
    }
    while (v40 != v64);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<__emulated_bf16,float,float,(mlir::mps::arithmeticOp)1>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v17 = 1;
    char v18 = 1;
LABEL_7:
    uint64_t v19 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v17 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v18 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v18 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v19 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v58 = v19;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v20 = 0;
    uint64_t v56 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v22 = *(void *)(v4 + 16);
  uint64_t v23 = v22 - 4;
  if (v22 >= 4)
  {
    if (v23 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t v56 = 0;
    }
    else {
      uint64_t v56 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v24 = v22 - 3;
    goto LABEL_26;
  }
  if (v22 == 3)
  {
    uint64_t v24 = 0;
    uint64_t v56 = 0;
LABEL_26:
    if (v24 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    }
    uint64_t v27 = v22 - 2;
    goto LABEL_31;
  }
  if (v22 < 2)
  {
    uint64_t v25 = 0;
    uint64_t v20 = 0;
    uint64_t v56 = 0;
    uint64_t result = 0;
    uint64_t v26 = 0;
    if (v22 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v27 = 0;
  uint64_t result = 0;
  uint64_t v56 = 0;
LABEL_31:
  if (v27 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v27) == 1) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = *(void *)(*(void *)(v4 + 64) + 8 * v27);
  }
  uint64_t v25 = v22 - 1;
LABEL_36:
  if (v25 > (int)v22 - 1)
  {
LABEL_37:
    uint64_t v26 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v31 = 0;
    uint64_t v55 = 0;
    uint64_t v32 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v25) != 1)
  {
    uint64_t v26 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v26 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v28 = *(void *)(v5 + 16);
  uint64_t v29 = v28 - 4;
  if (v28 >= 4)
  {
    if (v29 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v30 = v28 - 3;
    goto LABEL_56;
  }
  if (v28 == 3)
  {
    uint64_t v30 = 0;
    uint64_t v55 = 0;
LABEL_56:
    if (v30 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v30) == 1) {
      uint64_t v32 = 0;
    }
    else {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v30);
    }
    uint64_t v35 = v28 - 2;
    goto LABEL_61;
  }
  if (v28 >= 2)
  {
    uint64_t v35 = 0;
    uint64_t v32 = 0;
    uint64_t v55 = 0;
LABEL_61:
    if (v35 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v35) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v35);
    }
    uint64_t v33 = v28 - 1;
    goto LABEL_66;
  }
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v55 = 0;
  uint64_t v32 = 0;
  uint64_t v34 = 0;
  if (v28 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v33 <= (int)v28 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v33) != 1)
    {
      uint64_t v34 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v34 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v37 = 0;
    uint64_t v57 = 0;
    uint64_t v36 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v34 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v57 = 0;
    if (v18) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v57 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v18) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v36 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v38 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v37 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v38 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v58 >= 1)
  {
    uint64_t v39 = 0;
    uint64_t v40 = (unsigned __int16 *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v41 = (float *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v42 = (float *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v17 >= 1)
      {
        uint64_t v43 = 0;
        uint64_t v44 = v40;
        uint64_t v45 = v41;
        uint64_t v46 = v42;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v47 = 0;
            uint64_t v48 = v44;
            uint64_t v49 = v45;
            uint64_t v50 = v46;
            do
            {
              uint64_t v51 = v10;
              uint64_t v52 = v48;
              uint64_t v53 = v49;
              uint64_t v54 = v50;
              if (v10 >= 1)
              {
                do
                {
                  *uint64_t v54 = COERCE_FLOAT(*v52 << 16) - *v53;
                  uint64_t v54 = (float *)((char *)v54 + v38);
                  uint64_t v53 = (float *)((char *)v53 + v34);
                  uint64_t v52 = (unsigned __int16 *)((char *)v52 + v26);
                  --v51;
                }
                while (v51);
              }
              ++v47;
              uint64_t v50 = (float *)((char *)v50 + v37);
              uint64_t v49 = (float *)((char *)v49 + v31);
              uint64_t v48 = (unsigned __int16 *)((char *)v48 + v20);
            }
            while (v47 != v13);
          }
          ++v43;
          uint64_t v46 = (float *)((char *)v46 + v36);
          uint64_t v45 = (float *)((char *)v45 + v32);
          uint64_t v44 = (unsigned __int16 *)((char *)v44 + result);
        }
        while (v43 != v17);
      }
      ++v39;
      uint64_t v42 = (float *)((char *)v42 + v57);
      uint64_t v41 = (float *)((char *)v41 + v55);
      uint64_t v40 = (unsigned __int16 *)((char *)v40 + v56);
    }
    while (v39 != v58);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<float,__emulated_bf16,float,(mlir::mps::arithmeticOp)1>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v17 = 1;
    char v18 = 1;
LABEL_7:
    uint64_t v19 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v17 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v18 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v18 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v19 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v58 = v19;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v20 = 0;
    uint64_t v56 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v22 = *(void *)(v4 + 16);
  uint64_t v23 = v22 - 4;
  if (v22 >= 4)
  {
    if (v23 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t v56 = 0;
    }
    else {
      uint64_t v56 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v24 = v22 - 3;
    goto LABEL_26;
  }
  if (v22 == 3)
  {
    uint64_t v24 = 0;
    uint64_t v56 = 0;
LABEL_26:
    if (v24 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    }
    uint64_t v27 = v22 - 2;
    goto LABEL_31;
  }
  if (v22 < 2)
  {
    uint64_t v25 = 0;
    uint64_t v20 = 0;
    uint64_t v56 = 0;
    uint64_t result = 0;
    uint64_t v26 = 0;
    if (v22 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v27 = 0;
  uint64_t result = 0;
  uint64_t v56 = 0;
LABEL_31:
  if (v27 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v27) == 1) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = *(void *)(*(void *)(v4 + 64) + 8 * v27);
  }
  uint64_t v25 = v22 - 1;
LABEL_36:
  if (v25 > (int)v22 - 1)
  {
LABEL_37:
    uint64_t v26 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v31 = 0;
    uint64_t v55 = 0;
    uint64_t v32 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v25) != 1)
  {
    uint64_t v26 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v26 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v28 = *(void *)(v5 + 16);
  uint64_t v29 = v28 - 4;
  if (v28 >= 4)
  {
    if (v29 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v30 = v28 - 3;
    goto LABEL_56;
  }
  if (v28 == 3)
  {
    uint64_t v30 = 0;
    uint64_t v55 = 0;
LABEL_56:
    if (v30 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v30) == 1) {
      uint64_t v32 = 0;
    }
    else {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v30);
    }
    uint64_t v35 = v28 - 2;
    goto LABEL_61;
  }
  if (v28 >= 2)
  {
    uint64_t v35 = 0;
    uint64_t v32 = 0;
    uint64_t v55 = 0;
LABEL_61:
    if (v35 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v35) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v35);
    }
    uint64_t v33 = v28 - 1;
    goto LABEL_66;
  }
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v55 = 0;
  uint64_t v32 = 0;
  uint64_t v34 = 0;
  if (v28 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v33 <= (int)v28 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v33) != 1)
    {
      uint64_t v34 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v34 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v37 = 0;
    uint64_t v57 = 0;
    uint64_t v36 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v34 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v57 = 0;
    if (v18) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v57 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v18) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v36 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v38 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v37 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v38 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v58 >= 1)
  {
    uint64_t v39 = 0;
    uint64_t v40 = (float *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v41 = (unsigned __int16 *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v42 = (float *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v17 >= 1)
      {
        uint64_t v43 = 0;
        uint64_t v44 = v40;
        uint64_t v45 = v41;
        uint64_t v46 = v42;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v47 = 0;
            uint64_t v48 = v44;
            uint64_t v49 = v45;
            uint64_t v50 = v46;
            do
            {
              uint64_t v51 = v10;
              uint64_t v52 = v48;
              uint64_t v53 = v49;
              uint64_t v54 = v50;
              if (v10 >= 1)
              {
                do
                {
                  *uint64_t v54 = *v52 - COERCE_FLOAT(*v53 << 16);
                  uint64_t v54 = (float *)((char *)v54 + v38);
                  uint64_t v53 = (unsigned __int16 *)((char *)v53 + v34);
                  uint64_t v52 = (float *)((char *)v52 + v26);
                  --v51;
                }
                while (v51);
              }
              ++v47;
              uint64_t v50 = (float *)((char *)v50 + v37);
              uint64_t v49 = (unsigned __int16 *)((char *)v49 + v31);
              uint64_t v48 = (float *)((char *)v48 + v20);
            }
            while (v47 != v13);
          }
          ++v43;
          uint64_t v46 = (float *)((char *)v46 + v36);
          uint64_t v45 = (unsigned __int16 *)((char *)v45 + v32);
          uint64_t v44 = (float *)((char *)v44 + result);
        }
        while (v43 != v17);
      }
      ++v39;
      uint64_t v42 = (float *)((char *)v42 + v57);
      uint64_t v41 = (unsigned __int16 *)((char *)v41 + v55);
      uint64_t v40 = (float *)((char *)v40 + v56);
    }
    while (v39 != v58);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<half,(void *)0>,(mlir::mps::arithmeticOp)1>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v17 = 1;
    char v18 = 1;
LABEL_7:
    uint64_t v19 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v17 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v18 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v18 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v19 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v59 = v19;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v20 = 0;
    uint64_t v58 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v22 = *(void *)(v4 + 16);
  uint64_t v23 = v22 - 4;
  if (v22 >= 4)
  {
    if (v23 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t v58 = 0;
    }
    else {
      uint64_t v58 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v24 = v22 - 3;
    goto LABEL_26;
  }
  if (v22 == 3)
  {
    uint64_t v24 = 0;
    uint64_t v58 = 0;
LABEL_26:
    if (v24 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    }
    uint64_t v27 = v22 - 2;
    goto LABEL_31;
  }
  if (v22 < 2)
  {
    uint64_t v25 = 0;
    uint64_t v20 = 0;
    uint64_t v58 = 0;
    uint64_t result = 0;
    uint64_t v26 = 0;
    if (v22 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v27 = 0;
  uint64_t result = 0;
  uint64_t v58 = 0;
LABEL_31:
  if (v27 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v27) == 1) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = *(void *)(*(void *)(v4 + 64) + 8 * v27);
  }
  uint64_t v25 = v22 - 1;
LABEL_36:
  if (v25 > (int)v22 - 1)
  {
LABEL_37:
    uint64_t v26 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v31 = 0;
    uint64_t v57 = 0;
    uint64_t v32 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v25) != 1)
  {
    uint64_t v26 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v26 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v28 = *(void *)(v5 + 16);
  uint64_t v29 = v28 - 4;
  if (v28 >= 4)
  {
    if (v29 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v57 = 0;
    }
    else {
      uint64_t v57 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v30 = v28 - 3;
    goto LABEL_56;
  }
  if (v28 == 3)
  {
    uint64_t v30 = 0;
    uint64_t v57 = 0;
LABEL_56:
    if (v30 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v30) == 1) {
      uint64_t v32 = 0;
    }
    else {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v30);
    }
    uint64_t v35 = v28 - 2;
    goto LABEL_61;
  }
  if (v28 >= 2)
  {
    uint64_t v35 = 0;
    uint64_t v32 = 0;
    uint64_t v57 = 0;
LABEL_61:
    if (v35 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v35) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v35);
    }
    uint64_t v33 = v28 - 1;
    goto LABEL_66;
  }
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v57 = 0;
  uint64_t v32 = 0;
  uint64_t v34 = 0;
  if (v28 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v33 <= (int)v28 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v33) != 1)
    {
      uint64_t v34 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v34 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v38 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v34 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v36 = 0;
    if (v18) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v18) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v37 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v38 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v39 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v38 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v39 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v59 >= 1)
  {
    uint64_t v40 = 0;
    uint64_t v41 = (short float *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v42 = (short float *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v43 = (short float *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v17 >= 1)
      {
        uint64_t v44 = 0;
        uint64_t v45 = v41;
        uint64_t v46 = v42;
        uint64_t v47 = v43;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v48 = 0;
            uint64_t v49 = v45;
            uint64_t v50 = v46;
            uint64_t v51 = v47;
            do
            {
              uint64_t v52 = v10;
              uint64_t v53 = v49;
              uint64_t v54 = v50;
              uint64_t v55 = v51;
              if (v10 >= 1)
              {
                do
                {
                  short float v56 = v53[1] - v54[1];
                  short float *v55 = *v53 - *v54;
                  v55[1] = v56;
                  uint64_t v55 = (short float *)((char *)v55 + v39);
                  uint64_t v54 = (short float *)((char *)v54 + v34);
                  uint64_t v53 = (short float *)((char *)v53 + v26);
                  --v52;
                }
                while (v52);
              }
              ++v48;
              uint64_t v51 = (short float *)((char *)v51 + v38);
              uint64_t v50 = (short float *)((char *)v50 + v31);
              uint64_t v49 = (short float *)((char *)v49 + v20);
            }
            while (v48 != v13);
          }
          ++v44;
          uint64_t v47 = (short float *)((char *)v47 + v37);
          uint64_t v46 = (short float *)((char *)v46 + v32);
          uint64_t v45 = (short float *)((char *)v45 + result);
        }
        while (v44 != v17);
      }
      ++v40;
      uint64_t v43 = (short float *)((char *)v43 + v36);
      uint64_t v42 = (short float *)((char *)v42 + v57);
      uint64_t v41 = (short float *)((char *)v41 + v58);
    }
    while (v40 != v59);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<half,half,half,(mlir::mps::arithmeticOp)1>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v17 = 1;
    char v18 = 1;
LABEL_7:
    uint64_t v19 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v17 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v18 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v18 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v19 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v58 = v19;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v20 = 0;
    uint64_t v57 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v22 = *(void *)(v4 + 16);
  uint64_t v23 = v22 - 4;
  if (v22 >= 4)
  {
    if (v23 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t v57 = 0;
    }
    else {
      uint64_t v57 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v24 = v22 - 3;
    goto LABEL_26;
  }
  if (v22 == 3)
  {
    uint64_t v24 = 0;
    uint64_t v57 = 0;
LABEL_26:
    if (v24 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    }
    uint64_t v27 = v22 - 2;
    goto LABEL_31;
  }
  if (v22 < 2)
  {
    uint64_t v25 = 0;
    uint64_t v20 = 0;
    uint64_t v57 = 0;
    uint64_t result = 0;
    uint64_t v26 = 0;
    if (v22 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v27 = 0;
  uint64_t result = 0;
  uint64_t v57 = 0;
LABEL_31:
  if (v27 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v27) == 1) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = *(void *)(*(void *)(v4 + 64) + 8 * v27);
  }
  uint64_t v25 = v22 - 1;
LABEL_36:
  if (v25 > (int)v22 - 1)
  {
LABEL_37:
    uint64_t v26 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v31 = 0;
    uint64_t v56 = 0;
    uint64_t v32 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v25) != 1)
  {
    uint64_t v26 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v26 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v28 = *(void *)(v5 + 16);
  uint64_t v29 = v28 - 4;
  if (v28 >= 4)
  {
    if (v29 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v56 = 0;
    }
    else {
      uint64_t v56 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v30 = v28 - 3;
    goto LABEL_56;
  }
  if (v28 == 3)
  {
    uint64_t v30 = 0;
    uint64_t v56 = 0;
LABEL_56:
    if (v30 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v30) == 1) {
      uint64_t v32 = 0;
    }
    else {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v30);
    }
    uint64_t v35 = v28 - 2;
    goto LABEL_61;
  }
  if (v28 >= 2)
  {
    uint64_t v35 = 0;
    uint64_t v32 = 0;
    uint64_t v56 = 0;
LABEL_61:
    if (v35 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v35) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v35);
    }
    uint64_t v33 = v28 - 1;
    goto LABEL_66;
  }
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v56 = 0;
  uint64_t v32 = 0;
  uint64_t v34 = 0;
  if (v28 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v33 <= (int)v28 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v33) != 1)
    {
      uint64_t v34 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v34 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v38 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v34 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v36 = 0;
    if (v18) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v18) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v37 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v38 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v39 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v38 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v39 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v58 >= 1)
  {
    uint64_t v40 = 0;
    uint64_t v41 = (short float *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v42 = (short float *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v43 = (short float *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v17 >= 1)
      {
        uint64_t v44 = 0;
        uint64_t v45 = v41;
        uint64_t v46 = v42;
        uint64_t v47 = v43;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v48 = 0;
            uint64_t v49 = v45;
            uint64_t v50 = v46;
            uint64_t v51 = v47;
            do
            {
              uint64_t v52 = v10;
              uint64_t v53 = v49;
              uint64_t v54 = v50;
              uint64_t v55 = v51;
              if (v10 >= 1)
              {
                do
                {
                  short float *v55 = *v53 - *v54;
                  uint64_t v55 = (short float *)((char *)v55 + v39);
                  uint64_t v54 = (short float *)((char *)v54 + v34);
                  uint64_t v53 = (short float *)((char *)v53 + v26);
                  --v52;
                }
                while (v52);
              }
              ++v48;
              uint64_t v51 = (short float *)((char *)v51 + v38);
              uint64_t v50 = (short float *)((char *)v50 + v31);
              uint64_t v49 = (short float *)((char *)v49 + v20);
            }
            while (v48 != v13);
          }
          ++v44;
          uint64_t v47 = (short float *)((char *)v47 + v37);
          uint64_t v46 = (short float *)((char *)v46 + v32);
          uint64_t v45 = (short float *)((char *)v45 + result);
        }
        while (v44 != v17);
      }
      ++v40;
      uint64_t v43 = (short float *)((char *)v43 + v36);
      uint64_t v42 = (short float *)((char *)v42 + v56);
      uint64_t v41 = (short float *)((char *)v41 + v57);
    }
    while (v40 != v58);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<__emulated_bf16,__emulated_bf16,__emulated_bf16,(mlir::mps::arithmeticOp)1>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v59 = 1;
    char v17 = 1;
LABEL_7:
    uint64_t v18 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v59 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v17 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v17 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v58 = v18;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v19 = 0;
    uint64_t v56 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v21 = *(void *)(v4 + 16);
  uint64_t v22 = v21 - 4;
  if (v21 >= 4)
  {
    if (v22 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
      uint64_t v56 = 0;
    }
    else {
      uint64_t v56 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
    }
    uint64_t v23 = v21 - 3;
    goto LABEL_26;
  }
  if (v21 == 3)
  {
    uint64_t v23 = 0;
    uint64_t v56 = 0;
LABEL_26:
    if (v23 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v26 = v21 - 2;
    goto LABEL_31;
  }
  if (v21 < 2)
  {
    uint64_t v24 = 0;
    uint64_t v19 = 0;
    uint64_t v56 = 0;
    uint64_t result = 0;
    uint64_t v25 = 0;
    if (v21 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v26 = 0;
  uint64_t result = 0;
  uint64_t v56 = 0;
LABEL_31:
  if (v26 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v26) == 1) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = *(void *)(*(void *)(v4 + 64) + 8 * v26);
  }
  uint64_t v24 = v21 - 1;
LABEL_36:
  if (v24 > (int)v21 - 1)
  {
LABEL_37:
    uint64_t v25 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v30 = 0;
    uint64_t v55 = 0;
    uint64_t v31 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v24) != 1)
  {
    uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v25 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v27 = *(void *)(v5 + 16);
  uint64_t v28 = v27 - 4;
  if (v27 >= 4)
  {
    if (v28 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v29 = v27 - 3;
    goto LABEL_56;
  }
  if (v27 == 3)
  {
    uint64_t v29 = 0;
    uint64_t v55 = 0;
LABEL_56:
    if (v29 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v34 = v27 - 2;
    goto LABEL_61;
  }
  if (v27 >= 2)
  {
    uint64_t v34 = 0;
    uint64_t v31 = 0;
    uint64_t v55 = 0;
LABEL_61:
    if (v34 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v34) == 1) {
      uint64_t v30 = 0;
    }
    else {
      uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v34);
    }
    uint64_t v32 = v27 - 1;
    goto LABEL_66;
  }
  uint64_t v32 = 0;
  uint64_t v30 = 0;
  uint64_t v55 = 0;
  uint64_t v31 = 0;
  uint64_t v33 = 0;
  if (v27 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v32 <= (int)v27 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v32) != 1)
    {
      uint64_t v33 = *(void *)(*(void *)(v5 + 64) + 8 * v32);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v33 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v36 = 0;
    uint64_t v57 = 0;
    uint64_t v35 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v33 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v57 = 0;
    if (v17) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v57 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v17) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v35 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v35 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v37 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v36 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v58 >= 1)
  {
    uint64_t v38 = 0;
    uint64_t v39 = (unsigned __int16 *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v40 = (unsigned __int16 *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v41 = (_WORD *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v59 >= 1)
      {
        uint64_t v42 = 0;
        uint64_t v43 = v39;
        uint64_t v44 = v40;
        uint64_t v45 = v41;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v46 = 0;
            uint64_t v47 = v43;
            uint64_t v48 = v44;
            uint64_t v49 = v45;
            do
            {
              uint64_t v50 = v10;
              uint64_t v51 = v47;
              uint64_t v52 = v48;
              uint64_t v53 = v49;
              if (v10 >= 1)
              {
                do
                {
                  float v54 = COERCE_FLOAT(*v51 << 16) - COERCE_FLOAT(*v52 << 16);
                  _WORD *v53 = HIWORD(COERCE_UNSIGNED_INT(v54 + (float)(COERCE_FLOAT(LODWORD(v54) & 0xFF800000) * 0.0039062)));
                  uint64_t v53 = (_WORD *)((char *)v53 + v37);
                  uint64_t v52 = (unsigned __int16 *)((char *)v52 + v33);
                  uint64_t v51 = (unsigned __int16 *)((char *)v51 + v25);
                  --v50;
                }
                while (v50);
              }
              ++v46;
              uint64_t v49 = (_WORD *)((char *)v49 + v36);
              uint64_t v48 = (unsigned __int16 *)((char *)v48 + v30);
              uint64_t v47 = (unsigned __int16 *)((char *)v47 + v19);
            }
            while (v46 != v13);
          }
          ++v42;
          uint64_t v45 = (_WORD *)((char *)v45 + v35);
          uint64_t v44 = (unsigned __int16 *)((char *)v44 + v31);
          uint64_t v43 = (unsigned __int16 *)((char *)v43 + result);
        }
        while (v42 != v59);
      }
      ++v38;
      uint64_t v41 = (_WORD *)((char *)v41 + v57);
      uint64_t v40 = (unsigned __int16 *)((char *)v40 + v55);
      uint64_t v39 = (unsigned __int16 *)((char *)v39 + v56);
    }
    while (v38 != v58);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<long long,long long,long long,(mlir::mps::arithmeticOp)1>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v57 = 1;
    char v17 = 1;
LABEL_7:
    uint64_t v18 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v57 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v17 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v17 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v19 = 0;
    uint64_t v55 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v21 = *(void *)(v4 + 16);
  uint64_t v22 = v21 - 4;
  if (v21 >= 4)
  {
    if (v22 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
    }
    uint64_t v23 = v21 - 3;
    goto LABEL_26;
  }
  if (v21 == 3)
  {
    uint64_t v23 = 0;
    uint64_t v55 = 0;
LABEL_26:
    if (v23 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v26 = v21 - 2;
    goto LABEL_31;
  }
  if (v21 < 2)
  {
    uint64_t v24 = 0;
    uint64_t v19 = 0;
    uint64_t v55 = 0;
    uint64_t result = 0;
    uint64_t v25 = 0;
    if (v21 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v26 = 0;
  uint64_t result = 0;
  uint64_t v55 = 0;
LABEL_31:
  if (v26 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v26) == 1) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = *(void *)(*(void *)(v4 + 64) + 8 * v26);
  }
  uint64_t v24 = v21 - 1;
LABEL_36:
  if (v24 > (int)v21 - 1)
  {
LABEL_37:
    uint64_t v25 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v30 = 0;
    uint64_t v54 = 0;
    uint64_t v31 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v24) != 1)
  {
    uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v25 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v27 = *(void *)(v5 + 16);
  uint64_t v28 = v27 - 4;
  if (v27 >= 4)
  {
    if (v28 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v54 = 0;
    }
    else {
      uint64_t v54 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v29 = v27 - 3;
    goto LABEL_56;
  }
  if (v27 == 3)
  {
    uint64_t v29 = 0;
    uint64_t v54 = 0;
LABEL_56:
    if (v29 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v34 = v27 - 2;
    goto LABEL_61;
  }
  if (v27 >= 2)
  {
    uint64_t v34 = 0;
    uint64_t v31 = 0;
    uint64_t v54 = 0;
LABEL_61:
    if (v34 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v34) == 1) {
      uint64_t v30 = 0;
    }
    else {
      uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v34);
    }
    uint64_t v32 = v27 - 1;
    goto LABEL_66;
  }
  uint64_t v32 = 0;
  uint64_t v30 = 0;
  uint64_t v54 = 0;
  uint64_t v31 = 0;
  uint64_t v33 = 0;
  if (v27 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v32 <= (int)v27 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v32) != 1)
    {
      uint64_t v33 = *(void *)(*(void *)(v5 + 64) + 8 * v32);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v33 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v36 = 0;
    uint64_t v56 = 0;
    uint64_t v35 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v33 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v56 = 0;
    if (v17) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v56 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v17) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v35 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v35 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v37 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v36 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v18 >= 1)
  {
    uint64_t v38 = 0;
    uint64_t v39 = (void *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v40 = (void *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v41 = (void *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v57 >= 1)
      {
        uint64_t v42 = 0;
        uint64_t v43 = v39;
        uint64_t v44 = v40;
        uint64_t v45 = v41;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v46 = 0;
            uint64_t v47 = v43;
            uint64_t v48 = v44;
            uint64_t v49 = v45;
            do
            {
              uint64_t v50 = v10;
              uint64_t v51 = v47;
              uint64_t v52 = v48;
              uint64_t v53 = v49;
              if (v10 >= 1)
              {
                do
                {
                  void *v53 = *v51 - *v52;
                  uint64_t v53 = (void *)((char *)v53 + v37);
                  uint64_t v52 = (void *)((char *)v52 + v33);
                  uint64_t v51 = (void *)((char *)v51 + v25);
                  --v50;
                }
                while (v50);
              }
              ++v46;
              uint64_t v49 = (void *)((char *)v49 + v36);
              uint64_t v48 = (void *)((char *)v48 + v30);
              uint64_t v47 = (void *)((char *)v47 + v19);
            }
            while (v46 != v13);
          }
          ++v42;
          uint64_t v45 = (void *)((char *)v45 + v35);
          uint64_t v44 = (void *)((char *)v44 + v31);
          uint64_t v43 = (void *)((char *)v43 + result);
        }
        while (v42 != v57);
      }
      ++v38;
      uint64_t v41 = (void *)((char *)v41 + v56);
      uint64_t v40 = (void *)((char *)v40 + v54);
      uint64_t v39 = (void *)((char *)v39 + v55);
    }
    while (v38 != v18);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<int,int,int,(mlir::mps::arithmeticOp)1>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v57 = 1;
    char v17 = 1;
LABEL_7:
    uint64_t v18 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v57 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v17 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v17 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v19 = 0;
    uint64_t v55 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v21 = *(void *)(v4 + 16);
  uint64_t v22 = v21 - 4;
  if (v21 >= 4)
  {
    if (v22 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
    }
    uint64_t v23 = v21 - 3;
    goto LABEL_26;
  }
  if (v21 == 3)
  {
    uint64_t v23 = 0;
    uint64_t v55 = 0;
LABEL_26:
    if (v23 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v26 = v21 - 2;
    goto LABEL_31;
  }
  if (v21 < 2)
  {
    uint64_t v24 = 0;
    uint64_t v19 = 0;
    uint64_t v55 = 0;
    uint64_t result = 0;
    uint64_t v25 = 0;
    if (v21 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v26 = 0;
  uint64_t result = 0;
  uint64_t v55 = 0;
LABEL_31:
  if (v26 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v26) == 1) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = *(void *)(*(void *)(v4 + 64) + 8 * v26);
  }
  uint64_t v24 = v21 - 1;
LABEL_36:
  if (v24 > (int)v21 - 1)
  {
LABEL_37:
    uint64_t v25 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v30 = 0;
    uint64_t v54 = 0;
    uint64_t v31 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v24) != 1)
  {
    uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v25 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v27 = *(void *)(v5 + 16);
  uint64_t v28 = v27 - 4;
  if (v27 >= 4)
  {
    if (v28 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v54 = 0;
    }
    else {
      uint64_t v54 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v29 = v27 - 3;
    goto LABEL_56;
  }
  if (v27 == 3)
  {
    uint64_t v29 = 0;
    uint64_t v54 = 0;
LABEL_56:
    if (v29 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v34 = v27 - 2;
    goto LABEL_61;
  }
  if (v27 >= 2)
  {
    uint64_t v34 = 0;
    uint64_t v31 = 0;
    uint64_t v54 = 0;
LABEL_61:
    if (v34 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v34) == 1) {
      uint64_t v30 = 0;
    }
    else {
      uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v34);
    }
    uint64_t v32 = v27 - 1;
    goto LABEL_66;
  }
  uint64_t v32 = 0;
  uint64_t v30 = 0;
  uint64_t v54 = 0;
  uint64_t v31 = 0;
  uint64_t v33 = 0;
  if (v27 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v32 <= (int)v27 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v32) != 1)
    {
      uint64_t v33 = *(void *)(*(void *)(v5 + 64) + 8 * v32);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v33 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v36 = 0;
    uint64_t v56 = 0;
    uint64_t v35 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v33 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v56 = 0;
    if (v17) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v56 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v17) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v35 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v35 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v37 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v36 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v18 >= 1)
  {
    uint64_t v38 = 0;
    uint64_t v39 = (_DWORD *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v40 = (_DWORD *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v41 = (_DWORD *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v57 >= 1)
      {
        uint64_t v42 = 0;
        uint64_t v43 = v39;
        uint64_t v44 = v40;
        uint64_t v45 = v41;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v46 = 0;
            uint64_t v47 = v43;
            uint64_t v48 = v44;
            uint64_t v49 = v45;
            do
            {
              uint64_t v50 = v10;
              uint64_t v51 = v47;
              uint64_t v52 = v48;
              uint64_t v53 = v49;
              if (v10 >= 1)
              {
                do
                {
                  _DWORD *v53 = *v51 - *v52;
                  uint64_t v53 = (_DWORD *)((char *)v53 + v37);
                  uint64_t v52 = (_DWORD *)((char *)v52 + v33);
                  uint64_t v51 = (_DWORD *)((char *)v51 + v25);
                  --v50;
                }
                while (v50);
              }
              ++v46;
              uint64_t v49 = (_DWORD *)((char *)v49 + v36);
              uint64_t v48 = (_DWORD *)((char *)v48 + v30);
              uint64_t v47 = (_DWORD *)((char *)v47 + v19);
            }
            while (v46 != v13);
          }
          ++v42;
          uint64_t v45 = (_DWORD *)((char *)v45 + v35);
          uint64_t v44 = (_DWORD *)((char *)v44 + v31);
          uint64_t v43 = (_DWORD *)((char *)v43 + result);
        }
        while (v42 != v57);
      }
      ++v38;
      uint64_t v41 = (_DWORD *)((char *)v41 + v56);
      uint64_t v40 = (_DWORD *)((char *)v40 + v54);
      uint64_t v39 = (_DWORD *)((char *)v39 + v55);
    }
    while (v38 != v18);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<short,short,short,(mlir::mps::arithmeticOp)1>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v57 = 1;
    char v17 = 1;
LABEL_7:
    uint64_t v18 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v57 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v17 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v17 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v19 = 0;
    uint64_t v55 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v21 = *(void *)(v4 + 16);
  uint64_t v22 = v21 - 4;
  if (v21 >= 4)
  {
    if (v22 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
    }
    uint64_t v23 = v21 - 3;
    goto LABEL_26;
  }
  if (v21 == 3)
  {
    uint64_t v23 = 0;
    uint64_t v55 = 0;
LABEL_26:
    if (v23 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v26 = v21 - 2;
    goto LABEL_31;
  }
  if (v21 < 2)
  {
    uint64_t v24 = 0;
    uint64_t v19 = 0;
    uint64_t v55 = 0;
    uint64_t result = 0;
    uint64_t v25 = 0;
    if (v21 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v26 = 0;
  uint64_t result = 0;
  uint64_t v55 = 0;
LABEL_31:
  if (v26 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v26) == 1) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = *(void *)(*(void *)(v4 + 64) + 8 * v26);
  }
  uint64_t v24 = v21 - 1;
LABEL_36:
  if (v24 > (int)v21 - 1)
  {
LABEL_37:
    uint64_t v25 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v30 = 0;
    uint64_t v54 = 0;
    uint64_t v31 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v24) != 1)
  {
    uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v25 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v27 = *(void *)(v5 + 16);
  uint64_t v28 = v27 - 4;
  if (v27 >= 4)
  {
    if (v28 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v54 = 0;
    }
    else {
      uint64_t v54 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v29 = v27 - 3;
    goto LABEL_56;
  }
  if (v27 == 3)
  {
    uint64_t v29 = 0;
    uint64_t v54 = 0;
LABEL_56:
    if (v29 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v34 = v27 - 2;
    goto LABEL_61;
  }
  if (v27 >= 2)
  {
    uint64_t v34 = 0;
    uint64_t v31 = 0;
    uint64_t v54 = 0;
LABEL_61:
    if (v34 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v34) == 1) {
      uint64_t v30 = 0;
    }
    else {
      uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v34);
    }
    uint64_t v32 = v27 - 1;
    goto LABEL_66;
  }
  uint64_t v32 = 0;
  uint64_t v30 = 0;
  uint64_t v54 = 0;
  uint64_t v31 = 0;
  uint64_t v33 = 0;
  if (v27 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v32 <= (int)v27 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v32) != 1)
    {
      uint64_t v33 = *(void *)(*(void *)(v5 + 64) + 8 * v32);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v33 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v36 = 0;
    uint64_t v56 = 0;
    uint64_t v35 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v33 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v56 = 0;
    if (v17) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v56 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v17) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v35 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v35 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v37 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v36 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v18 >= 1)
  {
    uint64_t v38 = 0;
    uint64_t v39 = (_WORD *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v40 = (_WORD *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v41 = (_WORD *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v57 >= 1)
      {
        uint64_t v42 = 0;
        uint64_t v43 = v39;
        uint64_t v44 = v40;
        uint64_t v45 = v41;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v46 = 0;
            uint64_t v47 = v43;
            uint64_t v48 = v44;
            uint64_t v49 = v45;
            do
            {
              uint64_t v50 = v10;
              uint64_t v51 = v47;
              uint64_t v52 = v48;
              uint64_t v53 = v49;
              if (v10 >= 1)
              {
                do
                {
                  _WORD *v53 = *v51 - *v52;
                  uint64_t v53 = (_WORD *)((char *)v53 + v37);
                  uint64_t v52 = (_WORD *)((char *)v52 + v33);
                  uint64_t v51 = (_WORD *)((char *)v51 + v25);
                  --v50;
                }
                while (v50);
              }
              ++v46;
              uint64_t v49 = (_WORD *)((char *)v49 + v36);
              uint64_t v48 = (_WORD *)((char *)v48 + v30);
              uint64_t v47 = (_WORD *)((char *)v47 + v19);
            }
            while (v46 != v13);
          }
          ++v42;
          uint64_t v45 = (_WORD *)((char *)v45 + v35);
          uint64_t v44 = (_WORD *)((char *)v44 + v31);
          uint64_t v43 = (_WORD *)((char *)v43 + result);
        }
        while (v42 != v57);
      }
      ++v38;
      uint64_t v41 = (_WORD *)((char *)v41 + v56);
      uint64_t v40 = (_WORD *)((char *)v40 + v54);
      uint64_t v39 = (_WORD *)((char *)v39 + v55);
    }
    while (v38 != v18);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<signed char,signed char,signed char,(mlir::mps::arithmeticOp)1>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v57 = 1;
    char v17 = 1;
LABEL_7:
    uint64_t v18 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v57 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v17 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v17 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v19 = 0;
    uint64_t v55 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v21 = *(void *)(v4 + 16);
  uint64_t v22 = v21 - 4;
  if (v21 >= 4)
  {
    if (v22 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
    }
    uint64_t v23 = v21 - 3;
    goto LABEL_26;
  }
  if (v21 == 3)
  {
    uint64_t v23 = 0;
    uint64_t v55 = 0;
LABEL_26:
    if (v23 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v26 = v21 - 2;
    goto LABEL_31;
  }
  if (v21 < 2)
  {
    uint64_t v24 = 0;
    uint64_t v19 = 0;
    uint64_t v55 = 0;
    uint64_t result = 0;
    uint64_t v25 = 0;
    if (v21 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v26 = 0;
  uint64_t result = 0;
  uint64_t v55 = 0;
LABEL_31:
  if (v26 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v26) == 1) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = *(void *)(*(void *)(v4 + 64) + 8 * v26);
  }
  uint64_t v24 = v21 - 1;
LABEL_36:
  if (v24 > (int)v21 - 1)
  {
LABEL_37:
    uint64_t v25 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v30 = 0;
    uint64_t v54 = 0;
    uint64_t v31 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v24) != 1)
  {
    uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v25 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v27 = *(void *)(v5 + 16);
  uint64_t v28 = v27 - 4;
  if (v27 >= 4)
  {
    if (v28 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v54 = 0;
    }
    else {
      uint64_t v54 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v29 = v27 - 3;
    goto LABEL_56;
  }
  if (v27 == 3)
  {
    uint64_t v29 = 0;
    uint64_t v54 = 0;
LABEL_56:
    if (v29 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v34 = v27 - 2;
    goto LABEL_61;
  }
  if (v27 >= 2)
  {
    uint64_t v34 = 0;
    uint64_t v31 = 0;
    uint64_t v54 = 0;
LABEL_61:
    if (v34 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v34) == 1) {
      uint64_t v30 = 0;
    }
    else {
      uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v34);
    }
    uint64_t v32 = v27 - 1;
    goto LABEL_66;
  }
  uint64_t v32 = 0;
  uint64_t v30 = 0;
  uint64_t v54 = 0;
  uint64_t v31 = 0;
  uint64_t v33 = 0;
  if (v27 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v32 <= (int)v27 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v32) != 1)
    {
      uint64_t v33 = *(void *)(*(void *)(v5 + 64) + 8 * v32);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v33 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v36 = 0;
    uint64_t v56 = 0;
    uint64_t v35 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v33 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v56 = 0;
    if (v17) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v56 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v17) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v35 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v35 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v37 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v36 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v18 >= 1)
  {
    uint64_t v38 = 0;
    uint64_t v39 = (unsigned char *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v40 = (unsigned char *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v41 = (unsigned char *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v57 >= 1)
      {
        uint64_t v42 = 0;
        uint64_t v43 = v39;
        uint64_t v44 = v40;
        uint64_t v45 = v41;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v46 = 0;
            uint64_t v47 = v43;
            uint64_t v48 = v44;
            uint64_t v49 = v45;
            do
            {
              uint64_t v50 = v10;
              uint64_t v51 = v47;
              uint64_t v52 = v48;
              uint64_t v53 = v49;
              if (v10 >= 1)
              {
                do
                {
                  unsigned char *v53 = *v51 - *v52;
                  v53 += v37;
                  v52 += v33;
                  v51 += v25;
                  --v50;
                }
                while (v50);
              }
              ++v46;
              v49 += v36;
              v48 += v30;
              v47 += v19;
            }
            while (v46 != v13);
          }
          ++v42;
          v45 += v35;
          v44 += v31;
          v43 += result;
        }
        while (v42 != v57);
      }
      ++v38;
      v41 += v56;
      v40 += v54;
      v39 += v55;
    }
    while (v38 != v18);
  }
  return result;
}

void mlir::mps::arithmeticBinaryTileBaseKernel<complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)2>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v10 = v7 - 2;
    uint64_t v61 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v61 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v7 - 3;
    uint64_t v62 = 1;
    char v12 = 1;
LABEL_6:
    uint64_t v13 = v7 - 4;
    char v14 = 1;
    uint64_t v53 = 1;
    char v15 = 1;
LABEL_7:
    uint64_t v16 = 1;
    goto LABEL_8;
  }
  uint64_t v10 = v7 - 2;
  uint64_t v62 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v10 = 0;
    char v12 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v7 - 3;
  uint64_t v53 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v12 = 0;
    uint64_t v11 = 0;
    char v15 = 0;
    uint64_t v13 = -1;
    uint64_t v10 = 1;
    char v14 = 1;
    goto LABEL_7;
  }
  char v14 = 0;
  char v12 = 0;
  char v15 = 0;
  uint64_t v13 = v7 - 4;
  uint64_t v16 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v45 = v16;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v60 = 0;
    uint64_t v43 = 0;
    uint64_t v51 = 0;
    goto LABEL_37;
  }
  uint64_t v17 = *(void *)(v4 + 16);
  uint64_t v18 = v17 - 4;
  if (v17 >= 4)
  {
    if (v18 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v18) == 1) {
      uint64_t v43 = 0;
    }
    else {
      uint64_t v43 = *(void *)(*(void *)(v4 + 64) + 8 * v18);
    }
    uint64_t v19 = v17 - 3;
    goto LABEL_26;
  }
  if (v17 == 3)
  {
    uint64_t v19 = 0;
    uint64_t v43 = 0;
LABEL_26:
    if (v19 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v19) == 1) {
      uint64_t v51 = 0;
    }
    else {
      uint64_t v51 = *(void *)(*(void *)(v4 + 64) + 8 * v19);
    }
    uint64_t v22 = v17 - 2;
    goto LABEL_31;
  }
  if (v17 < 2)
  {
    uint64_t v20 = 0;
    uint64_t v60 = 0;
    uint64_t v43 = 0;
    uint64_t v51 = 0;
    uint64_t v21 = 0;
    if (v17 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v22 = 0;
  uint64_t v51 = 0;
  uint64_t v43 = 0;
LABEL_31:
  if (v22 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
    uint64_t v60 = 0;
  }
  else {
    uint64_t v60 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
  }
  uint64_t v20 = v17 - 1;
LABEL_36:
  if (v20 > (int)v17 - 1)
  {
LABEL_37:
    uint64_t v21 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v59 = 0;
    uint64_t v42 = 0;
    uint64_t v50 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v20) != 1)
  {
    uint64_t v21 = *(void *)(*(void *)(v4 + 64) + 8 * v20);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v21 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v23 = *(void *)(v5 + 16);
  uint64_t v24 = v23 - 4;
  if (v23 >= 4)
  {
    if (v24 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v24) == 1) {
      uint64_t v42 = 0;
    }
    else {
      uint64_t v42 = *(void *)(*(void *)(v5 + 64) + 8 * v24);
    }
    uint64_t v25 = v23 - 3;
    goto LABEL_56;
  }
  if (v23 == 3)
  {
    uint64_t v25 = 0;
    uint64_t v42 = 0;
LABEL_56:
    if (v25 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v25) == 1) {
      uint64_t v50 = 0;
    }
    else {
      uint64_t v50 = *(void *)(*(void *)(v5 + 64) + 8 * v25);
    }
    uint64_t v28 = v23 - 2;
    goto LABEL_61;
  }
  if (v23 >= 2)
  {
    uint64_t v28 = 0;
    uint64_t v50 = 0;
    uint64_t v42 = 0;
LABEL_61:
    if (v28 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v59 = 0;
    }
    else {
      uint64_t v59 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v26 = v23 - 1;
    goto LABEL_66;
  }
  uint64_t v26 = 0;
  uint64_t v59 = 0;
  uint64_t v42 = 0;
  uint64_t v50 = 0;
  uint64_t v27 = 0;
  if (v23 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v26 <= (int)v23 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v26) != 1)
    {
      uint64_t v27 = *(void *)(*(void *)(v5 + 64) + 8 * v26);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v27 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v58 = 0;
    uint64_t v44 = 0;
    uint64_t v52 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v27 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v14 & 1) != 0 || v13 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v13) == 1)
  {
    uint64_t v44 = 0;
    if (v15) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v44 = *(void *)(*(void *)(v6 + 64) + 8 * v13);
    if (v15) {
      goto LABEL_98;
    }
  }
  if (v11 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v11) == 1)
  {
LABEL_98:
    uint64_t v52 = 0;
    if (v12) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v52 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
  if (v12) {
    goto LABEL_101;
  }
LABEL_99:
  if (v10 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v10) != 1)
  {
    uint64_t v58 = *(void *)(*(void *)(v6 + 64) + 8 * v10);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v29 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v58 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v29 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v45 >= 1)
  {
    uint64_t v30 = 0;
    uint64_t v49 = (uint64_t *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v48 = (uint64_t *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v47 = **a4 + *(void *)(v6 + 40);
    do
    {
      uint64_t v46 = v30;
      if (v53 >= 1)
      {
        uint64_t v31 = 0;
        uint64_t v56 = v48;
        uint64_t v57 = v49;
        uint64_t v55 = v47;
        do
        {
          uint64_t v54 = v31;
          if (v62 >= 1)
          {
            uint64_t v32 = 0;
            uint64_t v33 = v56;
            uint64_t v34 = v57;
            uint64_t v35 = v55;
            do
            {
              uint64_t v63 = v32;
              uint64_t v36 = v61;
              uint64_t v37 = v34;
              uint64_t v38 = v33;
              uint64_t v39 = v35;
              if (v61 >= 1)
              {
                do
                {
                  uint64_t v40 = *v37;
                  uint64_t v64 = *v38;
                  uint64_t v65 = v40;
                  *(float *)uint64_t v39 = std::operator*[abi:nn180100]<float>((float *)&v65, (float *)&v64);
                  *(_DWORD *)(v39 + 4) = v41;
                  v39 += v29;
                  uint64_t v38 = (uint64_t *)((char *)v38 + v27);
                  uint64_t v37 = (uint64_t *)((char *)v37 + v21);
                  --v36;
                }
                while (v36);
              }
              uint64_t v32 = v63 + 1;
              v35 += v58;
              uint64_t v33 = (uint64_t *)((char *)v33 + v59);
              uint64_t v34 = (uint64_t *)((char *)v34 + v60);
            }
            while (v63 + 1 != v62);
          }
          uint64_t v31 = v54 + 1;
          v55 += v52;
          uint64_t v56 = (uint64_t *)((char *)v56 + v50);
          uint64_t v57 = (uint64_t *)((char *)v57 + v51);
        }
        while (v54 + 1 != v53);
      }
      uint64_t v30 = v46 + 1;
      v47 += v44;
      uint64_t v48 = (uint64_t *)((char *)v48 + v42);
      uint64_t v49 = (uint64_t *)((char *)v49 + v43);
    }
    while (v46 + 1 != v45);
  }
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<float,float,float,(mlir::mps::arithmeticOp)2>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v17 = 1;
    char v18 = 1;
LABEL_7:
    uint64_t v19 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v17 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v18 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v18 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v19 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v58 = v19;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v20 = 0;
    uint64_t v57 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v22 = *(void *)(v4 + 16);
  uint64_t v23 = v22 - 4;
  if (v22 >= 4)
  {
    if (v23 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t v57 = 0;
    }
    else {
      uint64_t v57 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v24 = v22 - 3;
    goto LABEL_26;
  }
  if (v22 == 3)
  {
    uint64_t v24 = 0;
    uint64_t v57 = 0;
LABEL_26:
    if (v24 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    }
    uint64_t v27 = v22 - 2;
    goto LABEL_31;
  }
  if (v22 < 2)
  {
    uint64_t v25 = 0;
    uint64_t v20 = 0;
    uint64_t v57 = 0;
    uint64_t result = 0;
    uint64_t v26 = 0;
    if (v22 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v27 = 0;
  uint64_t result = 0;
  uint64_t v57 = 0;
LABEL_31:
  if (v27 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v27) == 1) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = *(void *)(*(void *)(v4 + 64) + 8 * v27);
  }
  uint64_t v25 = v22 - 1;
LABEL_36:
  if (v25 > (int)v22 - 1)
  {
LABEL_37:
    uint64_t v26 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v31 = 0;
    uint64_t v56 = 0;
    uint64_t v32 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v25) != 1)
  {
    uint64_t v26 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v26 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v28 = *(void *)(v5 + 16);
  uint64_t v29 = v28 - 4;
  if (v28 >= 4)
  {
    if (v29 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v56 = 0;
    }
    else {
      uint64_t v56 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v30 = v28 - 3;
    goto LABEL_56;
  }
  if (v28 == 3)
  {
    uint64_t v30 = 0;
    uint64_t v56 = 0;
LABEL_56:
    if (v30 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v30) == 1) {
      uint64_t v32 = 0;
    }
    else {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v30);
    }
    uint64_t v35 = v28 - 2;
    goto LABEL_61;
  }
  if (v28 >= 2)
  {
    uint64_t v35 = 0;
    uint64_t v32 = 0;
    uint64_t v56 = 0;
LABEL_61:
    if (v35 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v35) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v35);
    }
    uint64_t v33 = v28 - 1;
    goto LABEL_66;
  }
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v56 = 0;
  uint64_t v32 = 0;
  uint64_t v34 = 0;
  if (v28 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v33 <= (int)v28 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v33) != 1)
    {
      uint64_t v34 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v34 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v38 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v34 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v36 = 0;
    if (v18) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v18) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v37 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v38 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v39 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v38 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v39 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v58 >= 1)
  {
    uint64_t v40 = 0;
    int v41 = (float *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v42 = (float *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v43 = (float *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v17 >= 1)
      {
        uint64_t v44 = 0;
        uint64_t v45 = v41;
        uint64_t v46 = v42;
        uint64_t v47 = v43;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v48 = 0;
            uint64_t v49 = v45;
            uint64_t v50 = v46;
            uint64_t v51 = v47;
            do
            {
              uint64_t v52 = v10;
              uint64_t v53 = v49;
              uint64_t v54 = v50;
              uint64_t v55 = v51;
              if (v10 >= 1)
              {
                do
                {
                  float *v55 = *v53 * *v54;
                  uint64_t v55 = (float *)((char *)v55 + v39);
                  uint64_t v54 = (float *)((char *)v54 + v34);
                  uint64_t v53 = (float *)((char *)v53 + v26);
                  --v52;
                }
                while (v52);
              }
              ++v48;
              uint64_t v51 = (float *)((char *)v51 + v38);
              uint64_t v50 = (float *)((char *)v50 + v31);
              uint64_t v49 = (float *)((char *)v49 + v20);
            }
            while (v48 != v13);
          }
          ++v44;
          uint64_t v47 = (float *)((char *)v47 + v37);
          uint64_t v46 = (float *)((char *)v46 + v32);
          uint64_t v45 = (float *)((char *)v45 + result);
        }
        while (v44 != v17);
      }
      ++v40;
      uint64_t v43 = (float *)((char *)v43 + v36);
      uint64_t v42 = (float *)((char *)v42 + v56);
      int v41 = (float *)((char *)v41 + v57);
    }
    while (v40 != v58);
  }
  return result;
}

void mlir::mps::arithmeticBinaryTileBaseKernel<complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)2>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4, float16x4_t a5)
{
  uint64_t v5 = **a1;
  uint64_t v6 = (*a1)[1];
  uint64_t v7 = **a2;
  uint64_t v8 = *(void *)(v7 + 16);
  uint64_t v9 = v8 - 1;
  if (v8 <= 0)
  {
    uint64_t v11 = v8 - 2;
    uint64_t v61 = 1;
    goto LABEL_5;
  }
  uint64_t v10 = *(void *)(v7 + 24);
  uint64_t v61 = *(void *)(v10 + 8 * v9);
  if (v8 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v8 - 3;
    uint64_t v62 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v8 - 4;
    char v15 = 1;
    uint64_t v53 = 1;
    char v16 = 1;
LABEL_7:
    uint64_t v17 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v8 - 2;
  uint64_t v62 = *(void *)(v10 + 8 * (v8 - 2));
  if ((unint64_t)v8 <= 2)
  {
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v8 - 3;
  uint64_t v53 = *(void *)(v10 + 8 * (v8 - 3));
  if (v8 == 3)
  {
    char v13 = 0;
    uint64_t v12 = 0;
    char v16 = 0;
    uint64_t v14 = -1;
    uint64_t v11 = 1;
    char v15 = 1;
    goto LABEL_7;
  }
  char v15 = 0;
  char v13 = 0;
  char v16 = 0;
  uint64_t v14 = v8 - 4;
  uint64_t v17 = *(void *)(v10 + 8 * (v8 - 4));
LABEL_8:
  uint64_t v45 = v17;
  if (*(unsigned char *)(v5 + 58))
  {
    uint64_t v60 = 0;
    uint64_t v43 = 0;
    uint64_t v51 = 0;
    goto LABEL_37;
  }
  uint64_t v18 = *(void *)(v5 + 16);
  uint64_t v19 = v18 - 4;
  if (v18 >= 4)
  {
    if (v19 > (int)v18 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v19) == 1) {
      uint64_t v43 = 0;
    }
    else {
      uint64_t v43 = *(void *)(*(void *)(v5 + 64) + 8 * v19);
    }
    uint64_t v20 = v18 - 3;
    goto LABEL_26;
  }
  if (v18 == 3)
  {
    uint64_t v20 = 0;
    uint64_t v43 = 0;
LABEL_26:
    if (v20 > (int)v18 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v20) == 1) {
      uint64_t v51 = 0;
    }
    else {
      uint64_t v51 = *(void *)(*(void *)(v5 + 64) + 8 * v20);
    }
    uint64_t v23 = v18 - 2;
    goto LABEL_31;
  }
  if (v18 < 2)
  {
    uint64_t v21 = 0;
    uint64_t v60 = 0;
    uint64_t v43 = 0;
    uint64_t v51 = 0;
    uint64_t v22 = 0;
    if (v18 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v23 = 0;
  uint64_t v51 = 0;
  uint64_t v43 = 0;
LABEL_31:
  if (v23 > (int)v18 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v23) == 1) {
    uint64_t v60 = 0;
  }
  else {
    uint64_t v60 = *(void *)(*(void *)(v5 + 64) + 8 * v23);
  }
  uint64_t v21 = v18 - 1;
LABEL_36:
  if (v21 > (int)v18 - 1)
  {
LABEL_37:
    uint64_t v22 = 0;
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v59 = 0;
    uint64_t v42 = 0;
    uint64_t v50 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v5 + 24) + 8 * v21) != 1)
  {
    uint64_t v22 = *(void *)(*(void *)(v5 + 64) + 8 * v21);
    if (*(unsigned char *)(v6 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v22 = 0;
LABEL_46:
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v24 = *(void *)(v6 + 16);
  uint64_t v25 = v24 - 4;
  if (v24 >= 4)
  {
    if (v25 > (int)v24 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v25) == 1) {
      uint64_t v42 = 0;
    }
    else {
      uint64_t v42 = *(void *)(*(void *)(v6 + 64) + 8 * v25);
    }
    uint64_t v26 = v24 - 3;
    goto LABEL_56;
  }
  if (v24 == 3)
  {
    uint64_t v26 = 0;
    uint64_t v42 = 0;
LABEL_56:
    if (v26 > (int)v24 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v26) == 1) {
      uint64_t v50 = 0;
    }
    else {
      uint64_t v50 = *(void *)(*(void *)(v6 + 64) + 8 * v26);
    }
    uint64_t v29 = v24 - 2;
    goto LABEL_61;
  }
  if (v24 >= 2)
  {
    uint64_t v29 = 0;
    uint64_t v50 = 0;
    uint64_t v42 = 0;
LABEL_61:
    if (v29 > (int)v24 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v29) == 1) {
      uint64_t v59 = 0;
    }
    else {
      uint64_t v59 = *(void *)(*(void *)(v6 + 64) + 8 * v29);
    }
    uint64_t v27 = v24 - 1;
    goto LABEL_66;
  }
  uint64_t v27 = 0;
  uint64_t v59 = 0;
  uint64_t v42 = 0;
  uint64_t v50 = 0;
  uint64_t v28 = 0;
  if (v24 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v27 <= (int)v24 - 1)
  {
    if (*(void *)(*(void *)(v6 + 24) + 8 * v27) != 1)
    {
      uint64_t v28 = *(void *)(*(void *)(v6 + 64) + 8 * v27);
      if (!*(unsigned char *)(v7 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v28 = 0;
LABEL_78:
    if (!*(unsigned char *)(v7 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v58 = 0;
    uint64_t v44 = 0;
    uint64_t v52 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v28 = 0;
  if (*(unsigned char *)(v7 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v15 & 1) != 0 || v14 > (int)v8 - 1 || *(void *)(*(void *)(v7 + 24) + 8 * v14) == 1)
  {
    uint64_t v44 = 0;
    if (v16) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v44 = *(void *)(*(void *)(v7 + 64) + 8 * v14);
    if (v16) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v8 - 1 || *(void *)(*(void *)(v7 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v52 = 0;
    if (v13) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v52 = *(void *)(*(void *)(v7 + 64) + 8 * v12);
  if (v13) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v8 - 1 && *(void *)(*(void *)(v7 + 24) + 8 * v11) != 1)
  {
    uint64_t v58 = *(void *)(*(void *)(v7 + 64) + 8 * v11);
    if (v8 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v30 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v58 = 0;
  if (v8 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v9 > (int)v8 - 1 || *(void *)(*(void *)(v7 + 24) + 8 * v9) == 1) {
    goto LABEL_80;
  }
  uint64_t v30 = *(void *)(*(void *)(v7 + 64) + 8 * v9);
LABEL_81:
  if (v45 >= 1)
  {
    uint64_t v31 = 0;
    uint64_t v49 = (__int32 *)(**(void **)a3 + *(void *)(v5 + 40));
    uint64_t v48 = (uint64_t *)(*(void *)(*(void *)a3 + 8) + *(void *)(v6 + 40));
    uint64_t v47 = **a4 + *(void *)(v7 + 40);
    do
    {
      uint64_t v46 = v31;
      if (v53 >= 1)
      {
        uint64_t v32 = 0;
        uint64_t v56 = v48;
        uint64_t v57 = v49;
        uint64_t v55 = v47;
        do
        {
          uint64_t v54 = v32;
          if (v62 >= 1)
          {
            uint64_t v33 = 0;
            uint64_t v34 = v56;
            uint64_t v35 = v57;
            uint64_t v36 = v55;
            do
            {
              uint64_t v63 = v33;
              uint64_t v37 = v61;
              uint64_t v38 = v35;
              uint64_t v39 = v34;
              uint64_t v40 = v36;
              if (v61 >= 1)
              {
                do
                {
                  a5.i32[0] = *v38;
                  uint64_t v64 = *v39;
                  unint64_t v65 = vcvtq_f32_f16(a5).u64[0];
                  *(float *)uint64_t v40 = std::operator*[abi:nn180100]<float>((float *)&v65, (float *)&v64);
                  *(_DWORD *)(v40 + 4) = v41;
                  v40 += v30;
                  uint64_t v39 = (uint64_t *)((char *)v39 + v28);
                  uint64_t v38 = (__int32 *)((char *)v38 + v22);
                  --v37;
                }
                while (v37);
              }
              uint64_t v33 = v63 + 1;
              v36 += v58;
              uint64_t v34 = (uint64_t *)((char *)v34 + v59);
              uint64_t v35 = (__int32 *)((char *)v35 + v60);
            }
            while (v63 + 1 != v62);
          }
          uint64_t v32 = v54 + 1;
          v55 += v52;
          uint64_t v56 = (uint64_t *)((char *)v56 + v50);
          uint64_t v57 = (__int32 *)((char *)v57 + v51);
        }
        while (v54 + 1 != v53);
      }
      uint64_t v31 = v46 + 1;
      v47 += v44;
      uint64_t v48 = (uint64_t *)((char *)v48 + v42);
      uint64_t v49 = (__int32 *)((char *)v49 + v43);
    }
    while (v46 + 1 != v45);
  }
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<half,float,float,(mlir::mps::arithmeticOp)2>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v17 = 1;
    char v18 = 1;
LABEL_7:
    uint64_t v19 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v17 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v18 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v18 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v19 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v64 = v19;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v20 = 0;
    uint64_t v63 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v22 = *(void *)(v4 + 16);
  uint64_t v23 = v22 - 4;
  if (v22 >= 4)
  {
    if (v23 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t v63 = 0;
    }
    else {
      uint64_t v63 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v24 = v22 - 3;
    goto LABEL_26;
  }
  if (v22 == 3)
  {
    uint64_t v24 = 0;
    uint64_t v63 = 0;
LABEL_26:
    if (v24 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    }
    uint64_t v27 = v22 - 2;
    goto LABEL_31;
  }
  if (v22 < 2)
  {
    uint64_t v25 = 0;
    uint64_t v20 = 0;
    uint64_t v63 = 0;
    uint64_t result = 0;
    uint64_t v26 = 0;
    if (v22 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v27 = 0;
  uint64_t result = 0;
  uint64_t v63 = 0;
LABEL_31:
  if (v27 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v27) == 1) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = *(void *)(*(void *)(v4 + 64) + 8 * v27);
  }
  uint64_t v25 = v22 - 1;
LABEL_36:
  if (v25 > (int)v22 - 1)
  {
LABEL_37:
    uint64_t v26 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v31 = 0;
    uint64_t v62 = 0;
    uint64_t v32 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v25) != 1)
  {
    uint64_t v26 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v26 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v28 = *(void *)(v5 + 16);
  uint64_t v29 = v28 - 4;
  if (v28 >= 4)
  {
    if (v29 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v62 = 0;
    }
    else {
      uint64_t v62 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v30 = v28 - 3;
    goto LABEL_56;
  }
  if (v28 == 3)
  {
    uint64_t v30 = 0;
    uint64_t v62 = 0;
LABEL_56:
    if (v30 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v30) == 1) {
      uint64_t v32 = 0;
    }
    else {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v30);
    }
    uint64_t v35 = v28 - 2;
    goto LABEL_61;
  }
  if (v28 >= 2)
  {
    uint64_t v35 = 0;
    uint64_t v32 = 0;
    uint64_t v62 = 0;
LABEL_61:
    if (v35 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v35) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v35);
    }
    uint64_t v33 = v28 - 1;
    goto LABEL_66;
  }
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v62 = 0;
  uint64_t v32 = 0;
  uint64_t v34 = 0;
  if (v28 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v33 <= (int)v28 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v33) != 1)
    {
      uint64_t v34 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v34 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v38 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v34 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v36 = 0;
    if (v18) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v18) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v37 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v38 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v39 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v38 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v39 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v64 >= 1)
  {
    uint64_t v40 = 0;
    int v41 = (__int16 *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v42 = (float *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v43 = (float *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v17 >= 1)
      {
        uint64_t v44 = 0;
        uint64_t v45 = v41;
        uint64_t v46 = v42;
        uint64_t v47 = v43;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v48 = 0;
            uint64_t v49 = v45;
            uint64_t v50 = v46;
            uint64_t v51 = v47;
            do
            {
              uint64_t v52 = v10;
              uint64_t v53 = v49;
              uint64_t v54 = v50;
              uint64_t v55 = v51;
              if (v10 >= 1)
              {
                do
                {
                  _H0 = *v53;
                  __asm { FCVT            S0, H0 }
                  float *v55 = *v54 * _S0;
                  uint64_t v55 = (float *)((char *)v55 + v39);
                  uint64_t v54 = (float *)((char *)v54 + v34);
                  uint64_t v53 = (__int16 *)((char *)v53 + v26);
                  --v52;
                }
                while (v52);
              }
              ++v48;
              uint64_t v51 = (float *)((char *)v51 + v38);
              uint64_t v50 = (float *)((char *)v50 + v31);
              uint64_t v49 = (__int16 *)((char *)v49 + v20);
            }
            while (v48 != v13);
          }
          ++v44;
          uint64_t v47 = (float *)((char *)v47 + v37);
          uint64_t v46 = (float *)((char *)v46 + v32);
          uint64_t v45 = (__int16 *)((char *)v45 + result);
        }
        while (v44 != v17);
      }
      ++v40;
      uint64_t v43 = (float *)((char *)v43 + v36);
      uint64_t v42 = (float *)((char *)v42 + v62);
      int v41 = (__int16 *)((char *)v41 + v63);
    }
    while (v40 != v64);
  }
  return result;
}

void mlir::mps::arithmeticBinaryTileBaseKernel<complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)2>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4, double a5, float16x4_t a6)
{
  uint64_t v6 = **a1;
  uint64_t v7 = (*a1)[1];
  uint64_t v8 = **a2;
  uint64_t v9 = *(void *)(v8 + 16);
  uint64_t v10 = v9 - 1;
  if (v9 <= 0)
  {
    uint64_t v12 = v9 - 2;
    uint64_t v62 = 1;
    goto LABEL_5;
  }
  uint64_t v11 = *(void *)(v8 + 24);
  uint64_t v62 = *(void *)(v11 + 8 * v10);
  if (v9 == 1)
  {
    uint64_t v12 = -1;
LABEL_5:
    uint64_t v13 = v9 - 3;
    uint64_t v63 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v9 - 4;
    char v16 = 1;
    uint64_t v54 = 1;
    char v17 = 1;
LABEL_7:
    uint64_t v18 = 1;
    goto LABEL_8;
  }
  uint64_t v12 = v9 - 2;
  uint64_t v63 = *(void *)(v11 + 8 * (v9 - 2));
  if ((unint64_t)v9 <= 2)
  {
    uint64_t v12 = 0;
    char v14 = 0;
    uint64_t v13 = -1;
    goto LABEL_6;
  }
  uint64_t v13 = v9 - 3;
  uint64_t v54 = *(void *)(v11 + 8 * (v9 - 3));
  if (v9 == 3)
  {
    char v14 = 0;
    uint64_t v13 = 0;
    char v17 = 0;
    uint64_t v15 = -1;
    uint64_t v12 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v17 = 0;
  uint64_t v15 = v9 - 4;
  uint64_t v18 = *(void *)(v11 + 8 * (v9 - 4));
LABEL_8:
  uint64_t v46 = v18;
  if (*(unsigned char *)(v6 + 58))
  {
    uint64_t v61 = 0;
    uint64_t v44 = 0;
    uint64_t v52 = 0;
    goto LABEL_37;
  }
  uint64_t v19 = *(void *)(v6 + 16);
  uint64_t v20 = v19 - 4;
  if (v19 >= 4)
  {
    if (v20 > (int)v19 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v20) == 1) {
      uint64_t v44 = 0;
    }
    else {
      uint64_t v44 = *(void *)(*(void *)(v6 + 64) + 8 * v20);
    }
    uint64_t v21 = v19 - 3;
    goto LABEL_26;
  }
  if (v19 == 3)
  {
    uint64_t v21 = 0;
    uint64_t v44 = 0;
LABEL_26:
    if (v21 > (int)v19 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v21) == 1) {
      uint64_t v52 = 0;
    }
    else {
      uint64_t v52 = *(void *)(*(void *)(v6 + 64) + 8 * v21);
    }
    uint64_t v24 = v19 - 2;
    goto LABEL_31;
  }
  if (v19 < 2)
  {
    uint64_t v22 = 0;
    uint64_t v61 = 0;
    uint64_t v44 = 0;
    uint64_t v52 = 0;
    uint64_t v23 = 0;
    if (v19 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v24 = 0;
  uint64_t v52 = 0;
  uint64_t v44 = 0;
LABEL_31:
  if (v24 > (int)v19 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v24) == 1) {
    uint64_t v61 = 0;
  }
  else {
    uint64_t v61 = *(void *)(*(void *)(v6 + 64) + 8 * v24);
  }
  uint64_t v22 = v19 - 1;
LABEL_36:
  if (v22 > (int)v19 - 1)
  {
LABEL_37:
    uint64_t v23 = 0;
    if (!*(unsigned char *)(v7 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v60 = 0;
    uint64_t v43 = 0;
    uint64_t v51 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v6 + 24) + 8 * v22) != 1)
  {
    uint64_t v23 = *(void *)(*(void *)(v6 + 64) + 8 * v22);
    if (*(unsigned char *)(v7 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v23 = 0;
LABEL_46:
  if (*(unsigned char *)(v7 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v25 = *(void *)(v7 + 16);
  uint64_t v26 = v25 - 4;
  if (v25 >= 4)
  {
    if (v26 > (int)v25 - 1 || *(void *)(*(void *)(v7 + 24) + 8 * v26) == 1) {
      uint64_t v43 = 0;
    }
    else {
      uint64_t v43 = *(void *)(*(void *)(v7 + 64) + 8 * v26);
    }
    uint64_t v27 = v25 - 3;
    goto LABEL_56;
  }
  if (v25 == 3)
  {
    uint64_t v27 = 0;
    uint64_t v43 = 0;
LABEL_56:
    if (v27 > (int)v25 - 1 || *(void *)(*(void *)(v7 + 24) + 8 * v27) == 1) {
      uint64_t v51 = 0;
    }
    else {
      uint64_t v51 = *(void *)(*(void *)(v7 + 64) + 8 * v27);
    }
    uint64_t v30 = v25 - 2;
    goto LABEL_61;
  }
  if (v25 >= 2)
  {
    uint64_t v30 = 0;
    uint64_t v51 = 0;
    uint64_t v43 = 0;
LABEL_61:
    if (v30 > (int)v25 - 1 || *(void *)(*(void *)(v7 + 24) + 8 * v30) == 1) {
      uint64_t v60 = 0;
    }
    else {
      uint64_t v60 = *(void *)(*(void *)(v7 + 64) + 8 * v30);
    }
    uint64_t v28 = v25 - 1;
    goto LABEL_66;
  }
  uint64_t v28 = 0;
  uint64_t v60 = 0;
  uint64_t v43 = 0;
  uint64_t v51 = 0;
  uint64_t v29 = 0;
  if (v25 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v28 <= (int)v25 - 1)
  {
    if (*(void *)(*(void *)(v7 + 24) + 8 * v28) != 1)
    {
      uint64_t v29 = *(void *)(*(void *)(v7 + 64) + 8 * v28);
      if (!*(unsigned char *)(v8 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v29 = 0;
LABEL_78:
    if (!*(unsigned char *)(v8 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v59 = 0;
    uint64_t v45 = 0;
    uint64_t v53 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v29 = 0;
  if (*(unsigned char *)(v8 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v9 - 1 || *(void *)(*(void *)(v8 + 24) + 8 * v15) == 1)
  {
    uint64_t v45 = 0;
    if (v17) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v45 = *(void *)(*(void *)(v8 + 64) + 8 * v15);
    if (v17) {
      goto LABEL_98;
    }
  }
  if (v13 > (int)v9 - 1 || *(void *)(*(void *)(v8 + 24) + 8 * v13) == 1)
  {
LABEL_98:
    uint64_t v53 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v53 = *(void *)(*(void *)(v8 + 64) + 8 * v13);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v12 <= (int)v9 - 1 && *(void *)(*(void *)(v8 + 24) + 8 * v12) != 1)
  {
    uint64_t v59 = *(void *)(*(void *)(v8 + 64) + 8 * v12);
    if (v9 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v31 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v59 = 0;
  if (v9 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v10 > (int)v9 - 1 || *(void *)(*(void *)(v8 + 24) + 8 * v10) == 1) {
    goto LABEL_80;
  }
  uint64_t v31 = *(void *)(*(void *)(v8 + 64) + 8 * v10);
LABEL_81:
  if (v46 >= 1)
  {
    uint64_t v32 = 0;
    uint64_t v50 = (uint64_t *)(**(void **)a3 + *(void *)(v6 + 40));
    uint64_t v49 = (__int32 *)(*(void *)(*(void *)a3 + 8) + *(void *)(v7 + 40));
    uint64_t v48 = **a4 + *(void *)(v8 + 40);
    do
    {
      uint64_t v47 = v32;
      if (v54 >= 1)
      {
        uint64_t v33 = 0;
        uint64_t v57 = v49;
        uint64_t v58 = v50;
        uint64_t v56 = v48;
        do
        {
          uint64_t v55 = v33;
          if (v63 >= 1)
          {
            uint64_t v34 = 0;
            uint64_t v35 = v57;
            uint64_t v36 = v58;
            uint64_t v37 = v56;
            do
            {
              uint64_t v64 = v34;
              uint64_t v38 = v62;
              uint64_t v39 = v36;
              uint64_t v40 = v35;
              uint64_t v41 = v37;
              if (v62 >= 1)
              {
                do
                {
                  uint64_t v42 = *v39;
                  a6.i32[0] = *v40;
                  unint64_t v65 = vcvtq_f32_f16(a6).u64[0];
                  uint64_t v66 = v42;
                  *(float *)uint64_t v41 = std::operator*[abi:nn180100]<float>((float *)&v66, (float *)&v65);
                  *(_DWORD *)(v41 + 4) = a6.i32[0];
                  v41 += v31;
                  uint64_t v40 = (__int32 *)((char *)v40 + v29);
                  uint64_t v39 = (uint64_t *)((char *)v39 + v23);
                  --v38;
                }
                while (v38);
              }
              uint64_t v34 = v64 + 1;
              v37 += v59;
              uint64_t v35 = (__int32 *)((char *)v35 + v60);
              uint64_t v36 = (uint64_t *)((char *)v36 + v61);
            }
            while (v64 + 1 != v63);
          }
          uint64_t v33 = v55 + 1;
          v56 += v53;
          uint64_t v57 = (__int32 *)((char *)v57 + v51);
          uint64_t v58 = (uint64_t *)((char *)v58 + v52);
        }
        while (v55 + 1 != v54);
      }
      uint64_t v32 = v47 + 1;
      v48 += v45;
      uint64_t v49 = (__int32 *)((char *)v49 + v43);
      uint64_t v50 = (uint64_t *)((char *)v50 + v44);
    }
    while (v47 + 1 != v46);
  }
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<float,half,float,(mlir::mps::arithmeticOp)2>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v17 = 1;
    char v18 = 1;
LABEL_7:
    uint64_t v19 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v17 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v18 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v18 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v19 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v64 = v19;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v20 = 0;
    uint64_t v63 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v22 = *(void *)(v4 + 16);
  uint64_t v23 = v22 - 4;
  if (v22 >= 4)
  {
    if (v23 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t v63 = 0;
    }
    else {
      uint64_t v63 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v24 = v22 - 3;
    goto LABEL_26;
  }
  if (v22 == 3)
  {
    uint64_t v24 = 0;
    uint64_t v63 = 0;
LABEL_26:
    if (v24 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    }
    uint64_t v27 = v22 - 2;
    goto LABEL_31;
  }
  if (v22 < 2)
  {
    uint64_t v25 = 0;
    uint64_t v20 = 0;
    uint64_t v63 = 0;
    uint64_t result = 0;
    uint64_t v26 = 0;
    if (v22 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v27 = 0;
  uint64_t result = 0;
  uint64_t v63 = 0;
LABEL_31:
  if (v27 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v27) == 1) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = *(void *)(*(void *)(v4 + 64) + 8 * v27);
  }
  uint64_t v25 = v22 - 1;
LABEL_36:
  if (v25 > (int)v22 - 1)
  {
LABEL_37:
    uint64_t v26 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v31 = 0;
    uint64_t v62 = 0;
    uint64_t v32 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v25) != 1)
  {
    uint64_t v26 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v26 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v28 = *(void *)(v5 + 16);
  uint64_t v29 = v28 - 4;
  if (v28 >= 4)
  {
    if (v29 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v62 = 0;
    }
    else {
      uint64_t v62 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v30 = v28 - 3;
    goto LABEL_56;
  }
  if (v28 == 3)
  {
    uint64_t v30 = 0;
    uint64_t v62 = 0;
LABEL_56:
    if (v30 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v30) == 1) {
      uint64_t v32 = 0;
    }
    else {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v30);
    }
    uint64_t v35 = v28 - 2;
    goto LABEL_61;
  }
  if (v28 >= 2)
  {
    uint64_t v35 = 0;
    uint64_t v32 = 0;
    uint64_t v62 = 0;
LABEL_61:
    if (v35 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v35) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v35);
    }
    uint64_t v33 = v28 - 1;
    goto LABEL_66;
  }
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v62 = 0;
  uint64_t v32 = 0;
  uint64_t v34 = 0;
  if (v28 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v33 <= (int)v28 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v33) != 1)
    {
      uint64_t v34 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v34 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v38 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v34 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v36 = 0;
    if (v18) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v18) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v37 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v38 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v39 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v38 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v39 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v64 >= 1)
  {
    uint64_t v40 = 0;
    uint64_t v41 = (float *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v42 = (__int16 *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v43 = (float *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v17 >= 1)
      {
        uint64_t v44 = 0;
        uint64_t v45 = v41;
        uint64_t v46 = v42;
        uint64_t v47 = v43;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v48 = 0;
            uint64_t v49 = v45;
            uint64_t v50 = v46;
            uint64_t v51 = v47;
            do
            {
              uint64_t v52 = v10;
              uint64_t v53 = v49;
              uint64_t v54 = v50;
              uint64_t v55 = v51;
              if (v10 >= 1)
              {
                do
                {
                  _H1 = *v54;
                  __asm { FCVT            S1, H1 }
                  float *v55 = *v53 * _S1;
                  uint64_t v55 = (float *)((char *)v55 + v39);
                  uint64_t v54 = (__int16 *)((char *)v54 + v34);
                  uint64_t v53 = (float *)((char *)v53 + v26);
                  --v52;
                }
                while (v52);
              }
              ++v48;
              uint64_t v51 = (float *)((char *)v51 + v38);
              uint64_t v50 = (__int16 *)((char *)v50 + v31);
              uint64_t v49 = (float *)((char *)v49 + v20);
            }
            while (v48 != v13);
          }
          ++v44;
          uint64_t v47 = (float *)((char *)v47 + v37);
          uint64_t v46 = (__int16 *)((char *)v46 + v32);
          uint64_t v45 = (float *)((char *)v45 + result);
        }
        while (v44 != v17);
      }
      ++v40;
      uint64_t v43 = (float *)((char *)v43 + v36);
      uint64_t v42 = (__int16 *)((char *)v42 + v62);
      uint64_t v41 = (float *)((char *)v41 + v63);
    }
    while (v40 != v64);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<__emulated_bf16,float,float,(mlir::mps::arithmeticOp)2>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v17 = 1;
    char v18 = 1;
LABEL_7:
    uint64_t v19 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v17 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v18 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v18 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v19 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v58 = v19;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v20 = 0;
    uint64_t v56 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v22 = *(void *)(v4 + 16);
  uint64_t v23 = v22 - 4;
  if (v22 >= 4)
  {
    if (v23 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t v56 = 0;
    }
    else {
      uint64_t v56 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v24 = v22 - 3;
    goto LABEL_26;
  }
  if (v22 == 3)
  {
    uint64_t v24 = 0;
    uint64_t v56 = 0;
LABEL_26:
    if (v24 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    }
    uint64_t v27 = v22 - 2;
    goto LABEL_31;
  }
  if (v22 < 2)
  {
    uint64_t v25 = 0;
    uint64_t v20 = 0;
    uint64_t v56 = 0;
    uint64_t result = 0;
    uint64_t v26 = 0;
    if (v22 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v27 = 0;
  uint64_t result = 0;
  uint64_t v56 = 0;
LABEL_31:
  if (v27 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v27) == 1) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = *(void *)(*(void *)(v4 + 64) + 8 * v27);
  }
  uint64_t v25 = v22 - 1;
LABEL_36:
  if (v25 > (int)v22 - 1)
  {
LABEL_37:
    uint64_t v26 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v31 = 0;
    uint64_t v55 = 0;
    uint64_t v32 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v25) != 1)
  {
    uint64_t v26 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v26 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v28 = *(void *)(v5 + 16);
  uint64_t v29 = v28 - 4;
  if (v28 >= 4)
  {
    if (v29 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v30 = v28 - 3;
    goto LABEL_56;
  }
  if (v28 == 3)
  {
    uint64_t v30 = 0;
    uint64_t v55 = 0;
LABEL_56:
    if (v30 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v30) == 1) {
      uint64_t v32 = 0;
    }
    else {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v30);
    }
    uint64_t v35 = v28 - 2;
    goto LABEL_61;
  }
  if (v28 >= 2)
  {
    uint64_t v35 = 0;
    uint64_t v32 = 0;
    uint64_t v55 = 0;
LABEL_61:
    if (v35 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v35) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v35);
    }
    uint64_t v33 = v28 - 1;
    goto LABEL_66;
  }
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v55 = 0;
  uint64_t v32 = 0;
  uint64_t v34 = 0;
  if (v28 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v33 <= (int)v28 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v33) != 1)
    {
      uint64_t v34 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v34 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v37 = 0;
    uint64_t v57 = 0;
    uint64_t v36 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v34 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v57 = 0;
    if (v18) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v57 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v18) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v36 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v38 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v37 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v38 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v58 >= 1)
  {
    uint64_t v39 = 0;
    uint64_t v40 = (unsigned __int16 *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v41 = (float *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v42 = (float *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v17 >= 1)
      {
        uint64_t v43 = 0;
        uint64_t v44 = v40;
        uint64_t v45 = v41;
        uint64_t v46 = v42;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v47 = 0;
            uint64_t v48 = v44;
            uint64_t v49 = v45;
            uint64_t v50 = v46;
            do
            {
              uint64_t v51 = v10;
              uint64_t v52 = v48;
              uint64_t v53 = v49;
              uint64_t v54 = v50;
              if (v10 >= 1)
              {
                do
                {
                  *uint64_t v54 = *v53 * COERCE_FLOAT(*v52 << 16);
                  uint64_t v54 = (float *)((char *)v54 + v38);
                  uint64_t v53 = (float *)((char *)v53 + v34);
                  uint64_t v52 = (unsigned __int16 *)((char *)v52 + v26);
                  --v51;
                }
                while (v51);
              }
              ++v47;
              uint64_t v50 = (float *)((char *)v50 + v37);
              uint64_t v49 = (float *)((char *)v49 + v31);
              uint64_t v48 = (unsigned __int16 *)((char *)v48 + v20);
            }
            while (v47 != v13);
          }
          ++v43;
          uint64_t v46 = (float *)((char *)v46 + v36);
          uint64_t v45 = (float *)((char *)v45 + v32);
          uint64_t v44 = (unsigned __int16 *)((char *)v44 + result);
        }
        while (v43 != v17);
      }
      ++v39;
      uint64_t v42 = (float *)((char *)v42 + v57);
      uint64_t v41 = (float *)((char *)v41 + v55);
      uint64_t v40 = (unsigned __int16 *)((char *)v40 + v56);
    }
    while (v39 != v58);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<float,__emulated_bf16,float,(mlir::mps::arithmeticOp)2>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v17 = 1;
    char v18 = 1;
LABEL_7:
    uint64_t v19 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v17 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v18 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v18 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v19 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v58 = v19;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v20 = 0;
    uint64_t v56 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v22 = *(void *)(v4 + 16);
  uint64_t v23 = v22 - 4;
  if (v22 >= 4)
  {
    if (v23 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t v56 = 0;
    }
    else {
      uint64_t v56 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v24 = v22 - 3;
    goto LABEL_26;
  }
  if (v22 == 3)
  {
    uint64_t v24 = 0;
    uint64_t v56 = 0;
LABEL_26:
    if (v24 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    }
    uint64_t v27 = v22 - 2;
    goto LABEL_31;
  }
  if (v22 < 2)
  {
    uint64_t v25 = 0;
    uint64_t v20 = 0;
    uint64_t v56 = 0;
    uint64_t result = 0;
    uint64_t v26 = 0;
    if (v22 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v27 = 0;
  uint64_t result = 0;
  uint64_t v56 = 0;
LABEL_31:
  if (v27 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v27) == 1) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = *(void *)(*(void *)(v4 + 64) + 8 * v27);
  }
  uint64_t v25 = v22 - 1;
LABEL_36:
  if (v25 > (int)v22 - 1)
  {
LABEL_37:
    uint64_t v26 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v31 = 0;
    uint64_t v55 = 0;
    uint64_t v32 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v25) != 1)
  {
    uint64_t v26 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v26 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v28 = *(void *)(v5 + 16);
  uint64_t v29 = v28 - 4;
  if (v28 >= 4)
  {
    if (v29 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v30 = v28 - 3;
    goto LABEL_56;
  }
  if (v28 == 3)
  {
    uint64_t v30 = 0;
    uint64_t v55 = 0;
LABEL_56:
    if (v30 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v30) == 1) {
      uint64_t v32 = 0;
    }
    else {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v30);
    }
    uint64_t v35 = v28 - 2;
    goto LABEL_61;
  }
  if (v28 >= 2)
  {
    uint64_t v35 = 0;
    uint64_t v32 = 0;
    uint64_t v55 = 0;
LABEL_61:
    if (v35 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v35) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v35);
    }
    uint64_t v33 = v28 - 1;
    goto LABEL_66;
  }
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v55 = 0;
  uint64_t v32 = 0;
  uint64_t v34 = 0;
  if (v28 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v33 <= (int)v28 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v33) != 1)
    {
      uint64_t v34 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v34 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v37 = 0;
    uint64_t v57 = 0;
    uint64_t v36 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v34 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v57 = 0;
    if (v18) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v57 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v18) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v36 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v38 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v37 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v38 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v58 >= 1)
  {
    uint64_t v39 = 0;
    uint64_t v40 = (float *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v41 = (unsigned __int16 *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v42 = (float *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v17 >= 1)
      {
        uint64_t v43 = 0;
        uint64_t v44 = v40;
        uint64_t v45 = v41;
        uint64_t v46 = v42;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v47 = 0;
            uint64_t v48 = v44;
            uint64_t v49 = v45;
            uint64_t v50 = v46;
            do
            {
              uint64_t v51 = v10;
              uint64_t v52 = v48;
              uint64_t v53 = v49;
              uint64_t v54 = v50;
              if (v10 >= 1)
              {
                do
                {
                  *uint64_t v54 = *v52 * COERCE_FLOAT(*v53 << 16);
                  uint64_t v54 = (float *)((char *)v54 + v38);
                  uint64_t v53 = (unsigned __int16 *)((char *)v53 + v34);
                  uint64_t v52 = (float *)((char *)v52 + v26);
                  --v51;
                }
                while (v51);
              }
              ++v47;
              uint64_t v50 = (float *)((char *)v50 + v37);
              uint64_t v49 = (unsigned __int16 *)((char *)v49 + v31);
              uint64_t v48 = (float *)((char *)v48 + v20);
            }
            while (v47 != v13);
          }
          ++v43;
          uint64_t v46 = (float *)((char *)v46 + v36);
          uint64_t v45 = (unsigned __int16 *)((char *)v45 + v32);
          uint64_t v44 = (float *)((char *)v44 + result);
        }
        while (v43 != v17);
      }
      ++v39;
      uint64_t v42 = (float *)((char *)v42 + v57);
      uint64_t v41 = (unsigned __int16 *)((char *)v41 + v55);
      uint64_t v40 = (float *)((char *)v40 + v56);
    }
    while (v39 != v58);
  }
  return result;
}

void mlir::mps::arithmeticBinaryTileBaseKernel<complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<half,(void *)0>,(mlir::mps::arithmeticOp)2>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4, double _D0, float16x4_t _D1)
{
  uint64_t v6 = **a1;
  uint64_t v7 = (*a1)[1];
  uint64_t v8 = **a2;
  uint64_t v9 = *(void *)(v8 + 16);
  uint64_t v10 = v9 - 1;
  if (v9 <= 0)
  {
    uint64_t v12 = v9 - 2;
    uint64_t v65 = 1;
    goto LABEL_5;
  }
  uint64_t v11 = *(void *)(v8 + 24);
  uint64_t v65 = *(void *)(v11 + 8 * v10);
  if (v9 == 1)
  {
    uint64_t v12 = -1;
LABEL_5:
    uint64_t v13 = v9 - 3;
    uint64_t v66 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v9 - 4;
    char v16 = 1;
    uint64_t v57 = 1;
    char v17 = 1;
LABEL_7:
    uint64_t v18 = 1;
    goto LABEL_8;
  }
  uint64_t v12 = v9 - 2;
  uint64_t v66 = *(void *)(v11 + 8 * (v9 - 2));
  if ((unint64_t)v9 <= 2)
  {
    uint64_t v12 = 0;
    char v14 = 0;
    uint64_t v13 = -1;
    goto LABEL_6;
  }
  uint64_t v13 = v9 - 3;
  uint64_t v57 = *(void *)(v11 + 8 * (v9 - 3));
  if (v9 == 3)
  {
    char v14 = 0;
    uint64_t v13 = 0;
    char v17 = 0;
    uint64_t v15 = -1;
    uint64_t v12 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v17 = 0;
  uint64_t v15 = v9 - 4;
  uint64_t v18 = *(void *)(v11 + 8 * (v9 - 4));
LABEL_8:
  uint64_t v49 = v18;
  if (*(unsigned char *)(v6 + 58))
  {
    uint64_t v64 = 0;
    uint64_t v47 = 0;
    uint64_t v55 = 0;
    goto LABEL_37;
  }
  uint64_t v19 = *(void *)(v6 + 16);
  uint64_t v20 = v19 - 4;
  if (v19 >= 4)
  {
    if (v20 > (int)v19 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v20) == 1) {
      uint64_t v47 = 0;
    }
    else {
      uint64_t v47 = *(void *)(*(void *)(v6 + 64) + 8 * v20);
    }
    uint64_t v21 = v19 - 3;
    goto LABEL_26;
  }
  if (v19 == 3)
  {
    uint64_t v21 = 0;
    uint64_t v47 = 0;
LABEL_26:
    if (v21 > (int)v19 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v21) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v6 + 64) + 8 * v21);
    }
    uint64_t v24 = v19 - 2;
    goto LABEL_31;
  }
  if (v19 < 2)
  {
    uint64_t v22 = 0;
    uint64_t v64 = 0;
    uint64_t v47 = 0;
    uint64_t v55 = 0;
    uint64_t v23 = 0;
    if (v19 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v24 = 0;
  uint64_t v55 = 0;
  uint64_t v47 = 0;
LABEL_31:
  if (v24 > (int)v19 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v24) == 1) {
    uint64_t v64 = 0;
  }
  else {
    uint64_t v64 = *(void *)(*(void *)(v6 + 64) + 8 * v24);
  }
  uint64_t v22 = v19 - 1;
LABEL_36:
  if (v22 > (int)v19 - 1)
  {
LABEL_37:
    uint64_t v23 = 0;
    if (!*(unsigned char *)(v7 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v63 = 0;
    uint64_t v46 = 0;
    uint64_t v54 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v6 + 24) + 8 * v22) != 1)
  {
    uint64_t v23 = *(void *)(*(void *)(v6 + 64) + 8 * v22);
    if (*(unsigned char *)(v7 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v23 = 0;
LABEL_46:
  if (*(unsigned char *)(v7 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v25 = *(void *)(v7 + 16);
  uint64_t v26 = v25 - 4;
  if (v25 >= 4)
  {
    if (v26 > (int)v25 - 1 || *(void *)(*(void *)(v7 + 24) + 8 * v26) == 1) {
      uint64_t v46 = 0;
    }
    else {
      uint64_t v46 = *(void *)(*(void *)(v7 + 64) + 8 * v26);
    }
    uint64_t v27 = v25 - 3;
    goto LABEL_56;
  }
  if (v25 == 3)
  {
    uint64_t v27 = 0;
    uint64_t v46 = 0;
LABEL_56:
    if (v27 > (int)v25 - 1 || *(void *)(*(void *)(v7 + 24) + 8 * v27) == 1) {
      uint64_t v54 = 0;
    }
    else {
      uint64_t v54 = *(void *)(*(void *)(v7 + 64) + 8 * v27);
    }
    uint64_t v30 = v25 - 2;
    goto LABEL_61;
  }
  if (v25 >= 2)
  {
    uint64_t v30 = 0;
    uint64_t v54 = 0;
    uint64_t v46 = 0;
LABEL_61:
    if (v30 > (int)v25 - 1 || *(void *)(*(void *)(v7 + 24) + 8 * v30) == 1) {
      uint64_t v63 = 0;
    }
    else {
      uint64_t v63 = *(void *)(*(void *)(v7 + 64) + 8 * v30);
    }
    uint64_t v28 = v25 - 1;
    goto LABEL_66;
  }
  uint64_t v28 = 0;
  uint64_t v63 = 0;
  uint64_t v46 = 0;
  uint64_t v54 = 0;
  uint64_t v29 = 0;
  if (v25 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v28 <= (int)v25 - 1)
  {
    if (*(void *)(*(void *)(v7 + 24) + 8 * v28) != 1)
    {
      uint64_t v29 = *(void *)(*(void *)(v7 + 64) + 8 * v28);
      if (!*(unsigned char *)(v8 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v29 = 0;
LABEL_78:
    if (!*(unsigned char *)(v8 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v62 = 0;
    uint64_t v48 = 0;
    uint64_t v56 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v29 = 0;
  if (*(unsigned char *)(v8 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v9 - 1 || *(void *)(*(void *)(v8 + 24) + 8 * v15) == 1)
  {
    uint64_t v48 = 0;
    if (v17) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v48 = *(void *)(*(void *)(v8 + 64) + 8 * v15);
    if (v17) {
      goto LABEL_98;
    }
  }
  if (v13 > (int)v9 - 1 || *(void *)(*(void *)(v8 + 24) + 8 * v13) == 1)
  {
LABEL_98:
    uint64_t v56 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v56 = *(void *)(*(void *)(v8 + 64) + 8 * v13);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v12 <= (int)v9 - 1 && *(void *)(*(void *)(v8 + 24) + 8 * v12) != 1)
  {
    uint64_t v62 = *(void *)(*(void *)(v8 + 64) + 8 * v12);
    if (v9 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v31 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v62 = 0;
  if (v9 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v10 > (int)v9 - 1 || *(void *)(*(void *)(v8 + 24) + 8 * v10) == 1) {
    goto LABEL_80;
  }
  uint64_t v31 = *(void *)(*(void *)(v8 + 64) + 8 * v10);
LABEL_81:
  if (v49 >= 1)
  {
    uint64_t v32 = 0;
    uint64_t v53 = (_DWORD *)(**(void **)a3 + *(void *)(v6 + 40));
    uint64_t v52 = (__int32 *)(*(void *)(*(void *)a3 + 8) + *(void *)(v7 + 40));
    uint64_t v51 = (_WORD *)(**a4 + *(void *)(v8 + 40));
    do
    {
      uint64_t v50 = v32;
      if (v57 >= 1)
      {
        uint64_t v33 = 0;
        uint64_t v60 = v52;
        uint64_t v61 = v53;
        uint64_t v59 = v51;
        do
        {
          uint64_t v58 = v33;
          if (v66 >= 1)
          {
            uint64_t v34 = 0;
            uint64_t v35 = v60;
            uint64_t v36 = v61;
            uint64_t v37 = v59;
            do
            {
              uint64_t v67 = v34;
              uint64_t v38 = v65;
              uint64_t v39 = v36;
              uint64_t v40 = v35;
              uint64_t v41 = v37;
              if (v65 >= 1)
              {
                do
                {
                  LODWORD(_D0) = *v39;
                  _D1.i32[0] = *v40;
                  unint64_t v68 = vcvtq_f32_f16(_D1).u64[0];
                  unint64_t v69 = vcvtq_f32_f16(*(float16x4_t *)&_D0).u64[0];
                  *(float *)&_D0 = std::operator*[abi:nn180100]<float>((float *)&v69, (float *)&v68);
                  __asm
                  {
                    FCVT            H0, S0
                    FCVT            H1, S1
                  }
                  _WORD *v41 = LOWORD(_D0);
                  v41[1] = _D1.i16[0];
                  uint64_t v41 = (_WORD *)((char *)v41 + v31);
                  uint64_t v40 = (__int32 *)((char *)v40 + v29);
                  uint64_t v39 = (_DWORD *)((char *)v39 + v23);
                  --v38;
                }
                while (v38);
              }
              uint64_t v34 = v67 + 1;
              uint64_t v37 = (_WORD *)((char *)v37 + v62);
              uint64_t v35 = (__int32 *)((char *)v35 + v63);
              uint64_t v36 = (_DWORD *)((char *)v36 + v64);
            }
            while (v67 + 1 != v66);
          }
          uint64_t v33 = v58 + 1;
          uint64_t v59 = (_WORD *)((char *)v59 + v56);
          uint64_t v60 = (__int32 *)((char *)v60 + v54);
          uint64_t v61 = (_DWORD *)((char *)v61 + v55);
        }
        while (v58 + 1 != v57);
      }
      uint64_t v32 = v50 + 1;
      uint64_t v51 = (_WORD *)((char *)v51 + v48);
      uint64_t v52 = (__int32 *)((char *)v52 + v46);
      uint64_t v53 = (_DWORD *)((char *)v53 + v47);
    }
    while (v50 + 1 != v49);
  }
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<half,half,half,(mlir::mps::arithmeticOp)2>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v17 = 1;
    char v18 = 1;
LABEL_7:
    uint64_t v19 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v17 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v18 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v18 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v19 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v58 = v19;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v20 = 0;
    uint64_t v57 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v22 = *(void *)(v4 + 16);
  uint64_t v23 = v22 - 4;
  if (v22 >= 4)
  {
    if (v23 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t v57 = 0;
    }
    else {
      uint64_t v57 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v24 = v22 - 3;
    goto LABEL_26;
  }
  if (v22 == 3)
  {
    uint64_t v24 = 0;
    uint64_t v57 = 0;
LABEL_26:
    if (v24 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    }
    uint64_t v27 = v22 - 2;
    goto LABEL_31;
  }
  if (v22 < 2)
  {
    uint64_t v25 = 0;
    uint64_t v20 = 0;
    uint64_t v57 = 0;
    uint64_t result = 0;
    uint64_t v26 = 0;
    if (v22 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v27 = 0;
  uint64_t result = 0;
  uint64_t v57 = 0;
LABEL_31:
  if (v27 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v27) == 1) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = *(void *)(*(void *)(v4 + 64) + 8 * v27);
  }
  uint64_t v25 = v22 - 1;
LABEL_36:
  if (v25 > (int)v22 - 1)
  {
LABEL_37:
    uint64_t v26 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v31 = 0;
    uint64_t v56 = 0;
    uint64_t v32 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v25) != 1)
  {
    uint64_t v26 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v26 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v28 = *(void *)(v5 + 16);
  uint64_t v29 = v28 - 4;
  if (v28 >= 4)
  {
    if (v29 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v56 = 0;
    }
    else {
      uint64_t v56 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v30 = v28 - 3;
    goto LABEL_56;
  }
  if (v28 == 3)
  {
    uint64_t v30 = 0;
    uint64_t v56 = 0;
LABEL_56:
    if (v30 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v30) == 1) {
      uint64_t v32 = 0;
    }
    else {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v30);
    }
    uint64_t v35 = v28 - 2;
    goto LABEL_61;
  }
  if (v28 >= 2)
  {
    uint64_t v35 = 0;
    uint64_t v32 = 0;
    uint64_t v56 = 0;
LABEL_61:
    if (v35 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v35) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v35);
    }
    uint64_t v33 = v28 - 1;
    goto LABEL_66;
  }
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v56 = 0;
  uint64_t v32 = 0;
  uint64_t v34 = 0;
  if (v28 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v33 <= (int)v28 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v33) != 1)
    {
      uint64_t v34 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v34 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v38 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v34 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v36 = 0;
    if (v18) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v18) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v37 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v38 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v39 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v38 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v39 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v58 >= 1)
  {
    uint64_t v40 = 0;
    uint64_t v41 = (short float *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v42 = (short float *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v43 = (short float *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v17 >= 1)
      {
        uint64_t v44 = 0;
        uint64_t v45 = v41;
        uint64_t v46 = v42;
        uint64_t v47 = v43;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v48 = 0;
            uint64_t v49 = v45;
            uint64_t v50 = v46;
            uint64_t v51 = v47;
            do
            {
              uint64_t v52 = v10;
              uint64_t v53 = v49;
              uint64_t v54 = v50;
              uint64_t v55 = v51;
              if (v10 >= 1)
              {
                do
                {
                  short float *v55 = *v53 * *v54;
                  uint64_t v55 = (short float *)((char *)v55 + v39);
                  uint64_t v54 = (short float *)((char *)v54 + v34);
                  uint64_t v53 = (short float *)((char *)v53 + v26);
                  --v52;
                }
                while (v52);
              }
              ++v48;
              uint64_t v51 = (short float *)((char *)v51 + v38);
              uint64_t v50 = (short float *)((char *)v50 + v31);
              uint64_t v49 = (short float *)((char *)v49 + v20);
            }
            while (v48 != v13);
          }
          ++v44;
          uint64_t v47 = (short float *)((char *)v47 + v37);
          uint64_t v46 = (short float *)((char *)v46 + v32);
          uint64_t v45 = (short float *)((char *)v45 + result);
        }
        while (v44 != v17);
      }
      ++v40;
      uint64_t v43 = (short float *)((char *)v43 + v36);
      uint64_t v42 = (short float *)((char *)v42 + v56);
      uint64_t v41 = (short float *)((char *)v41 + v57);
    }
    while (v40 != v58);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<__emulated_bf16,__emulated_bf16,__emulated_bf16,(mlir::mps::arithmeticOp)2>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v59 = 1;
    char v17 = 1;
LABEL_7:
    uint64_t v18 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v59 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v17 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v17 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v58 = v18;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v19 = 0;
    uint64_t v56 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v21 = *(void *)(v4 + 16);
  uint64_t v22 = v21 - 4;
  if (v21 >= 4)
  {
    if (v22 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
      uint64_t v56 = 0;
    }
    else {
      uint64_t v56 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
    }
    uint64_t v23 = v21 - 3;
    goto LABEL_26;
  }
  if (v21 == 3)
  {
    uint64_t v23 = 0;
    uint64_t v56 = 0;
LABEL_26:
    if (v23 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v26 = v21 - 2;
    goto LABEL_31;
  }
  if (v21 < 2)
  {
    uint64_t v24 = 0;
    uint64_t v19 = 0;
    uint64_t v56 = 0;
    uint64_t result = 0;
    uint64_t v25 = 0;
    if (v21 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v26 = 0;
  uint64_t result = 0;
  uint64_t v56 = 0;
LABEL_31:
  if (v26 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v26) == 1) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = *(void *)(*(void *)(v4 + 64) + 8 * v26);
  }
  uint64_t v24 = v21 - 1;
LABEL_36:
  if (v24 > (int)v21 - 1)
  {
LABEL_37:
    uint64_t v25 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v30 = 0;
    uint64_t v55 = 0;
    uint64_t v31 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v24) != 1)
  {
    uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v25 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v27 = *(void *)(v5 + 16);
  uint64_t v28 = v27 - 4;
  if (v27 >= 4)
  {
    if (v28 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v29 = v27 - 3;
    goto LABEL_56;
  }
  if (v27 == 3)
  {
    uint64_t v29 = 0;
    uint64_t v55 = 0;
LABEL_56:
    if (v29 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v34 = v27 - 2;
    goto LABEL_61;
  }
  if (v27 >= 2)
  {
    uint64_t v34 = 0;
    uint64_t v31 = 0;
    uint64_t v55 = 0;
LABEL_61:
    if (v34 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v34) == 1) {
      uint64_t v30 = 0;
    }
    else {
      uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v34);
    }
    uint64_t v32 = v27 - 1;
    goto LABEL_66;
  }
  uint64_t v32 = 0;
  uint64_t v30 = 0;
  uint64_t v55 = 0;
  uint64_t v31 = 0;
  uint64_t v33 = 0;
  if (v27 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v32 <= (int)v27 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v32) != 1)
    {
      uint64_t v33 = *(void *)(*(void *)(v5 + 64) + 8 * v32);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v33 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v36 = 0;
    uint64_t v57 = 0;
    uint64_t v35 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v33 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v57 = 0;
    if (v17) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v57 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v17) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v35 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v35 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v37 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v36 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v58 >= 1)
  {
    uint64_t v38 = 0;
    uint64_t v39 = (unsigned __int16 *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v40 = (unsigned __int16 *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v41 = (_WORD *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v59 >= 1)
      {
        uint64_t v42 = 0;
        uint64_t v43 = v39;
        uint64_t v44 = v40;
        uint64_t v45 = v41;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v46 = 0;
            uint64_t v47 = v43;
            uint64_t v48 = v44;
            uint64_t v49 = v45;
            do
            {
              uint64_t v50 = v10;
              uint64_t v51 = v47;
              uint64_t v52 = v48;
              uint64_t v53 = v49;
              if (v10 >= 1)
              {
                do
                {
                  float v54 = COERCE_FLOAT(*v51 << 16) * COERCE_FLOAT(*v52 << 16);
                  _WORD *v53 = HIWORD(COERCE_UNSIGNED_INT(v54 + (float)(COERCE_FLOAT(LODWORD(v54) & 0xFF800000) * 0.0039062)));
                  uint64_t v53 = (_WORD *)((char *)v53 + v37);
                  uint64_t v52 = (unsigned __int16 *)((char *)v52 + v33);
                  uint64_t v51 = (unsigned __int16 *)((char *)v51 + v25);
                  --v50;
                }
                while (v50);
              }
              ++v46;
              uint64_t v49 = (_WORD *)((char *)v49 + v36);
              uint64_t v48 = (unsigned __int16 *)((char *)v48 + v30);
              uint64_t v47 = (unsigned __int16 *)((char *)v47 + v19);
            }
            while (v46 != v13);
          }
          ++v42;
          uint64_t v45 = (_WORD *)((char *)v45 + v35);
          uint64_t v44 = (unsigned __int16 *)((char *)v44 + v31);
          uint64_t v43 = (unsigned __int16 *)((char *)v43 + result);
        }
        while (v42 != v59);
      }
      ++v38;
      uint64_t v41 = (_WORD *)((char *)v41 + v57);
      uint64_t v40 = (unsigned __int16 *)((char *)v40 + v55);
      uint64_t v39 = (unsigned __int16 *)((char *)v39 + v56);
    }
    while (v38 != v58);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<long long,long long,long long,(mlir::mps::arithmeticOp)2>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v57 = 1;
    char v17 = 1;
LABEL_7:
    uint64_t v18 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v57 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v17 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v17 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v19 = 0;
    uint64_t v55 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v21 = *(void *)(v4 + 16);
  uint64_t v22 = v21 - 4;
  if (v21 >= 4)
  {
    if (v22 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
    }
    uint64_t v23 = v21 - 3;
    goto LABEL_26;
  }
  if (v21 == 3)
  {
    uint64_t v23 = 0;
    uint64_t v55 = 0;
LABEL_26:
    if (v23 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v26 = v21 - 2;
    goto LABEL_31;
  }
  if (v21 < 2)
  {
    uint64_t v24 = 0;
    uint64_t v19 = 0;
    uint64_t v55 = 0;
    uint64_t result = 0;
    uint64_t v25 = 0;
    if (v21 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v26 = 0;
  uint64_t result = 0;
  uint64_t v55 = 0;
LABEL_31:
  if (v26 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v26) == 1) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = *(void *)(*(void *)(v4 + 64) + 8 * v26);
  }
  uint64_t v24 = v21 - 1;
LABEL_36:
  if (v24 > (int)v21 - 1)
  {
LABEL_37:
    uint64_t v25 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v30 = 0;
    uint64_t v54 = 0;
    uint64_t v31 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v24) != 1)
  {
    uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v25 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v27 = *(void *)(v5 + 16);
  uint64_t v28 = v27 - 4;
  if (v27 >= 4)
  {
    if (v28 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v54 = 0;
    }
    else {
      uint64_t v54 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v29 = v27 - 3;
    goto LABEL_56;
  }
  if (v27 == 3)
  {
    uint64_t v29 = 0;
    uint64_t v54 = 0;
LABEL_56:
    if (v29 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v34 = v27 - 2;
    goto LABEL_61;
  }
  if (v27 >= 2)
  {
    uint64_t v34 = 0;
    uint64_t v31 = 0;
    uint64_t v54 = 0;
LABEL_61:
    if (v34 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v34) == 1) {
      uint64_t v30 = 0;
    }
    else {
      uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v34);
    }
    uint64_t v32 = v27 - 1;
    goto LABEL_66;
  }
  uint64_t v32 = 0;
  uint64_t v30 = 0;
  uint64_t v54 = 0;
  uint64_t v31 = 0;
  uint64_t v33 = 0;
  if (v27 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v32 <= (int)v27 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v32) != 1)
    {
      uint64_t v33 = *(void *)(*(void *)(v5 + 64) + 8 * v32);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v33 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v36 = 0;
    uint64_t v56 = 0;
    uint64_t v35 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v33 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v56 = 0;
    if (v17) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v56 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v17) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v35 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v35 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v37 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v36 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v18 >= 1)
  {
    uint64_t v38 = 0;
    uint64_t v39 = (void *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v40 = (void *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v41 = (void *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v57 >= 1)
      {
        uint64_t v42 = 0;
        uint64_t v43 = v39;
        uint64_t v44 = v40;
        uint64_t v45 = v41;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v46 = 0;
            uint64_t v47 = v43;
            uint64_t v48 = v44;
            uint64_t v49 = v45;
            do
            {
              uint64_t v50 = v10;
              uint64_t v51 = v47;
              uint64_t v52 = v48;
              uint64_t v53 = v49;
              if (v10 >= 1)
              {
                do
                {
                  void *v53 = *v52 * *v51;
                  uint64_t v53 = (void *)((char *)v53 + v37);
                  uint64_t v52 = (void *)((char *)v52 + v33);
                  uint64_t v51 = (void *)((char *)v51 + v25);
                  --v50;
                }
                while (v50);
              }
              ++v46;
              uint64_t v49 = (void *)((char *)v49 + v36);
              uint64_t v48 = (void *)((char *)v48 + v30);
              uint64_t v47 = (void *)((char *)v47 + v19);
            }
            while (v46 != v13);
          }
          ++v42;
          uint64_t v45 = (void *)((char *)v45 + v35);
          uint64_t v44 = (void *)((char *)v44 + v31);
          uint64_t v43 = (void *)((char *)v43 + result);
        }
        while (v42 != v57);
      }
      ++v38;
      uint64_t v41 = (void *)((char *)v41 + v56);
      uint64_t v40 = (void *)((char *)v40 + v54);
      uint64_t v39 = (void *)((char *)v39 + v55);
    }
    while (v38 != v18);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<int,int,int,(mlir::mps::arithmeticOp)2>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v57 = 1;
    char v17 = 1;
LABEL_7:
    uint64_t v18 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v57 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v17 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v17 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v19 = 0;
    uint64_t v55 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v21 = *(void *)(v4 + 16);
  uint64_t v22 = v21 - 4;
  if (v21 >= 4)
  {
    if (v22 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
    }
    uint64_t v23 = v21 - 3;
    goto LABEL_26;
  }
  if (v21 == 3)
  {
    uint64_t v23 = 0;
    uint64_t v55 = 0;
LABEL_26:
    if (v23 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v26 = v21 - 2;
    goto LABEL_31;
  }
  if (v21 < 2)
  {
    uint64_t v24 = 0;
    uint64_t v19 = 0;
    uint64_t v55 = 0;
    uint64_t result = 0;
    uint64_t v25 = 0;
    if (v21 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v26 = 0;
  uint64_t result = 0;
  uint64_t v55 = 0;
LABEL_31:
  if (v26 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v26) == 1) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = *(void *)(*(void *)(v4 + 64) + 8 * v26);
  }
  uint64_t v24 = v21 - 1;
LABEL_36:
  if (v24 > (int)v21 - 1)
  {
LABEL_37:
    uint64_t v25 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v30 = 0;
    uint64_t v54 = 0;
    uint64_t v31 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v24) != 1)
  {
    uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v25 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v27 = *(void *)(v5 + 16);
  uint64_t v28 = v27 - 4;
  if (v27 >= 4)
  {
    if (v28 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v54 = 0;
    }
    else {
      uint64_t v54 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v29 = v27 - 3;
    goto LABEL_56;
  }
  if (v27 == 3)
  {
    uint64_t v29 = 0;
    uint64_t v54 = 0;
LABEL_56:
    if (v29 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v34 = v27 - 2;
    goto LABEL_61;
  }
  if (v27 >= 2)
  {
    uint64_t v34 = 0;
    uint64_t v31 = 0;
    uint64_t v54 = 0;
LABEL_61:
    if (v34 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v34) == 1) {
      uint64_t v30 = 0;
    }
    else {
      uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v34);
    }
    uint64_t v32 = v27 - 1;
    goto LABEL_66;
  }
  uint64_t v32 = 0;
  uint64_t v30 = 0;
  uint64_t v54 = 0;
  uint64_t v31 = 0;
  uint64_t v33 = 0;
  if (v27 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v32 <= (int)v27 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v32) != 1)
    {
      uint64_t v33 = *(void *)(*(void *)(v5 + 64) + 8 * v32);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v33 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v36 = 0;
    uint64_t v56 = 0;
    uint64_t v35 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v33 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v56 = 0;
    if (v17) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v56 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v17) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v35 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v35 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v37 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v36 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v18 >= 1)
  {
    uint64_t v38 = 0;
    uint64_t v39 = (_DWORD *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v40 = (_DWORD *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v41 = (_DWORD *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v57 >= 1)
      {
        uint64_t v42 = 0;
        uint64_t v43 = v39;
        uint64_t v44 = v40;
        uint64_t v45 = v41;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v46 = 0;
            uint64_t v47 = v43;
            uint64_t v48 = v44;
            uint64_t v49 = v45;
            do
            {
              uint64_t v50 = v10;
              uint64_t v51 = v47;
              uint64_t v52 = v48;
              uint64_t v53 = v49;
              if (v10 >= 1)
              {
                do
                {
                  _DWORD *v53 = *v52 * *v51;
                  uint64_t v53 = (_DWORD *)((char *)v53 + v37);
                  uint64_t v52 = (_DWORD *)((char *)v52 + v33);
                  uint64_t v51 = (_DWORD *)((char *)v51 + v25);
                  --v50;
                }
                while (v50);
              }
              ++v46;
              uint64_t v49 = (_DWORD *)((char *)v49 + v36);
              uint64_t v48 = (_DWORD *)((char *)v48 + v30);
              uint64_t v47 = (_DWORD *)((char *)v47 + v19);
            }
            while (v46 != v13);
          }
          ++v42;
          uint64_t v45 = (_DWORD *)((char *)v45 + v35);
          uint64_t v44 = (_DWORD *)((char *)v44 + v31);
          uint64_t v43 = (_DWORD *)((char *)v43 + result);
        }
        while (v42 != v57);
      }
      ++v38;
      uint64_t v41 = (_DWORD *)((char *)v41 + v56);
      uint64_t v40 = (_DWORD *)((char *)v40 + v54);
      uint64_t v39 = (_DWORD *)((char *)v39 + v55);
    }
    while (v38 != v18);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<short,short,short,(mlir::mps::arithmeticOp)2>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v57 = 1;
    char v17 = 1;
LABEL_7:
    uint64_t v18 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v57 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v17 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v17 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v19 = 0;
    uint64_t v55 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v21 = *(void *)(v4 + 16);
  uint64_t v22 = v21 - 4;
  if (v21 >= 4)
  {
    if (v22 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
    }
    uint64_t v23 = v21 - 3;
    goto LABEL_26;
  }
  if (v21 == 3)
  {
    uint64_t v23 = 0;
    uint64_t v55 = 0;
LABEL_26:
    if (v23 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v26 = v21 - 2;
    goto LABEL_31;
  }
  if (v21 < 2)
  {
    uint64_t v24 = 0;
    uint64_t v19 = 0;
    uint64_t v55 = 0;
    uint64_t result = 0;
    uint64_t v25 = 0;
    if (v21 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v26 = 0;
  uint64_t result = 0;
  uint64_t v55 = 0;
LABEL_31:
  if (v26 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v26) == 1) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = *(void *)(*(void *)(v4 + 64) + 8 * v26);
  }
  uint64_t v24 = v21 - 1;
LABEL_36:
  if (v24 > (int)v21 - 1)
  {
LABEL_37:
    uint64_t v25 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v30 = 0;
    uint64_t v54 = 0;
    uint64_t v31 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v24) != 1)
  {
    uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v25 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v27 = *(void *)(v5 + 16);
  uint64_t v28 = v27 - 4;
  if (v27 >= 4)
  {
    if (v28 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v54 = 0;
    }
    else {
      uint64_t v54 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v29 = v27 - 3;
    goto LABEL_56;
  }
  if (v27 == 3)
  {
    uint64_t v29 = 0;
    uint64_t v54 = 0;
LABEL_56:
    if (v29 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v34 = v27 - 2;
    goto LABEL_61;
  }
  if (v27 >= 2)
  {
    uint64_t v34 = 0;
    uint64_t v31 = 0;
    uint64_t v54 = 0;
LABEL_61:
    if (v34 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v34) == 1) {
      uint64_t v30 = 0;
    }
    else {
      uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v34);
    }
    uint64_t v32 = v27 - 1;
    goto LABEL_66;
  }
  uint64_t v32 = 0;
  uint64_t v30 = 0;
  uint64_t v54 = 0;
  uint64_t v31 = 0;
  uint64_t v33 = 0;
  if (v27 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v32 <= (int)v27 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v32) != 1)
    {
      uint64_t v33 = *(void *)(*(void *)(v5 + 64) + 8 * v32);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v33 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v36 = 0;
    uint64_t v56 = 0;
    uint64_t v35 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v33 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v56 = 0;
    if (v17) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v56 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v17) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v35 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v35 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v37 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v36 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v18 >= 1)
  {
    uint64_t v38 = 0;
    uint64_t v39 = (_WORD *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v40 = (_WORD *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v41 = (_WORD *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v57 >= 1)
      {
        uint64_t v42 = 0;
        uint64_t v43 = v39;
        uint64_t v44 = v40;
        uint64_t v45 = v41;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v46 = 0;
            uint64_t v47 = v43;
            uint64_t v48 = v44;
            uint64_t v49 = v45;
            do
            {
              uint64_t v50 = v10;
              uint64_t v51 = v47;
              uint64_t v52 = v48;
              uint64_t v53 = v49;
              if (v10 >= 1)
              {
                do
                {
                  _WORD *v53 = *v52 * *v51;
                  uint64_t v53 = (_WORD *)((char *)v53 + v37);
                  uint64_t v52 = (_WORD *)((char *)v52 + v33);
                  uint64_t v51 = (_WORD *)((char *)v51 + v25);
                  --v50;
                }
                while (v50);
              }
              ++v46;
              uint64_t v49 = (_WORD *)((char *)v49 + v36);
              uint64_t v48 = (_WORD *)((char *)v48 + v30);
              uint64_t v47 = (_WORD *)((char *)v47 + v19);
            }
            while (v46 != v13);
          }
          ++v42;
          uint64_t v45 = (_WORD *)((char *)v45 + v35);
          uint64_t v44 = (_WORD *)((char *)v44 + v31);
          uint64_t v43 = (_WORD *)((char *)v43 + result);
        }
        while (v42 != v57);
      }
      ++v38;
      uint64_t v41 = (_WORD *)((char *)v41 + v56);
      uint64_t v40 = (_WORD *)((char *)v40 + v54);
      uint64_t v39 = (_WORD *)((char *)v39 + v55);
    }
    while (v38 != v18);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<signed char,signed char,signed char,(mlir::mps::arithmeticOp)2>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v57 = 1;
    char v17 = 1;
LABEL_7:
    uint64_t v18 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v57 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v17 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v17 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v19 = 0;
    uint64_t v55 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v21 = *(void *)(v4 + 16);
  uint64_t v22 = v21 - 4;
  if (v21 >= 4)
  {
    if (v22 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
    }
    uint64_t v23 = v21 - 3;
    goto LABEL_26;
  }
  if (v21 == 3)
  {
    uint64_t v23 = 0;
    uint64_t v55 = 0;
LABEL_26:
    if (v23 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v26 = v21 - 2;
    goto LABEL_31;
  }
  if (v21 < 2)
  {
    uint64_t v24 = 0;
    uint64_t v19 = 0;
    uint64_t v55 = 0;
    uint64_t result = 0;
    uint64_t v25 = 0;
    if (v21 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v26 = 0;
  uint64_t result = 0;
  uint64_t v55 = 0;
LABEL_31:
  if (v26 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v26) == 1) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = *(void *)(*(void *)(v4 + 64) + 8 * v26);
  }
  uint64_t v24 = v21 - 1;
LABEL_36:
  if (v24 > (int)v21 - 1)
  {
LABEL_37:
    uint64_t v25 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v30 = 0;
    uint64_t v54 = 0;
    uint64_t v31 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v24) != 1)
  {
    uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v25 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v27 = *(void *)(v5 + 16);
  uint64_t v28 = v27 - 4;
  if (v27 >= 4)
  {
    if (v28 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v54 = 0;
    }
    else {
      uint64_t v54 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v29 = v27 - 3;
    goto LABEL_56;
  }
  if (v27 == 3)
  {
    uint64_t v29 = 0;
    uint64_t v54 = 0;
LABEL_56:
    if (v29 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v34 = v27 - 2;
    goto LABEL_61;
  }
  if (v27 >= 2)
  {
    uint64_t v34 = 0;
    uint64_t v31 = 0;
    uint64_t v54 = 0;
LABEL_61:
    if (v34 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v34) == 1) {
      uint64_t v30 = 0;
    }
    else {
      uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v34);
    }
    uint64_t v32 = v27 - 1;
    goto LABEL_66;
  }
  uint64_t v32 = 0;
  uint64_t v30 = 0;
  uint64_t v54 = 0;
  uint64_t v31 = 0;
  uint64_t v33 = 0;
  if (v27 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v32 <= (int)v27 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v32) != 1)
    {
      uint64_t v33 = *(void *)(*(void *)(v5 + 64) + 8 * v32);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v33 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v36 = 0;
    uint64_t v56 = 0;
    uint64_t v35 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v33 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v56 = 0;
    if (v17) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v56 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v17) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v35 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v35 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v37 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v36 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v18 >= 1)
  {
    uint64_t v38 = 0;
    uint64_t v39 = (unsigned char *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v40 = (unsigned char *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v41 = (unsigned char *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v57 >= 1)
      {
        uint64_t v42 = 0;
        uint64_t v43 = v39;
        uint64_t v44 = v40;
        uint64_t v45 = v41;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v46 = 0;
            uint64_t v47 = v43;
            uint64_t v48 = v44;
            uint64_t v49 = v45;
            do
            {
              uint64_t v50 = v10;
              uint64_t v51 = v47;
              uint64_t v52 = v48;
              uint64_t v53 = v49;
              if (v10 >= 1)
              {
                do
                {
                  unsigned char *v53 = *v52 * *v51;
                  v53 += v37;
                  v52 += v33;
                  v51 += v25;
                  --v50;
                }
                while (v50);
              }
              ++v46;
              v49 += v36;
              v48 += v30;
              v47 += v19;
            }
            while (v46 != v13);
          }
          ++v42;
          v45 += v35;
          v44 += v31;
          v43 += result;
        }
        while (v42 != v57);
      }
      ++v38;
      v41 += v56;
      v40 += v54;
      v39 += v55;
    }
    while (v38 != v18);
  }
  return result;
}

float std::operator*[abi:nn180100]<float>(float *a1, float *a2)
{
  return (float)(*a1 * *a2) - (float)(a1[1] * a2[1]);
}

void mlir::mps::arithmeticBinaryTileBaseKernel<complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)3>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v10 = v7 - 2;
    uint64_t v61 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v61 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v7 - 3;
    uint64_t v62 = 1;
    char v12 = 1;
LABEL_6:
    uint64_t v13 = v7 - 4;
    char v14 = 1;
    uint64_t v53 = 1;
    char v15 = 1;
LABEL_7:
    uint64_t v16 = 1;
    goto LABEL_8;
  }
  uint64_t v10 = v7 - 2;
  uint64_t v62 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v10 = 0;
    char v12 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v7 - 3;
  uint64_t v53 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v12 = 0;
    uint64_t v11 = 0;
    char v15 = 0;
    uint64_t v13 = -1;
    uint64_t v10 = 1;
    char v14 = 1;
    goto LABEL_7;
  }
  char v14 = 0;
  char v12 = 0;
  char v15 = 0;
  uint64_t v13 = v7 - 4;
  uint64_t v16 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v45 = v16;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v60 = 0;
    uint64_t v43 = 0;
    uint64_t v51 = 0;
    goto LABEL_37;
  }
  uint64_t v17 = *(void *)(v4 + 16);
  uint64_t v18 = v17 - 4;
  if (v17 >= 4)
  {
    if (v18 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v18) == 1) {
      uint64_t v43 = 0;
    }
    else {
      uint64_t v43 = *(void *)(*(void *)(v4 + 64) + 8 * v18);
    }
    uint64_t v19 = v17 - 3;
    goto LABEL_26;
  }
  if (v17 == 3)
  {
    uint64_t v19 = 0;
    uint64_t v43 = 0;
LABEL_26:
    if (v19 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v19) == 1) {
      uint64_t v51 = 0;
    }
    else {
      uint64_t v51 = *(void *)(*(void *)(v4 + 64) + 8 * v19);
    }
    uint64_t v22 = v17 - 2;
    goto LABEL_31;
  }
  if (v17 < 2)
  {
    uint64_t v20 = 0;
    uint64_t v60 = 0;
    uint64_t v43 = 0;
    uint64_t v51 = 0;
    uint64_t v21 = 0;
    if (v17 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v22 = 0;
  uint64_t v51 = 0;
  uint64_t v43 = 0;
LABEL_31:
  if (v22 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
    uint64_t v60 = 0;
  }
  else {
    uint64_t v60 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
  }
  uint64_t v20 = v17 - 1;
LABEL_36:
  if (v20 > (int)v17 - 1)
  {
LABEL_37:
    uint64_t v21 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v59 = 0;
    uint64_t v42 = 0;
    uint64_t v50 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v20) != 1)
  {
    uint64_t v21 = *(void *)(*(void *)(v4 + 64) + 8 * v20);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v21 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v23 = *(void *)(v5 + 16);
  uint64_t v24 = v23 - 4;
  if (v23 >= 4)
  {
    if (v24 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v24) == 1) {
      uint64_t v42 = 0;
    }
    else {
      uint64_t v42 = *(void *)(*(void *)(v5 + 64) + 8 * v24);
    }
    uint64_t v25 = v23 - 3;
    goto LABEL_56;
  }
  if (v23 == 3)
  {
    uint64_t v25 = 0;
    uint64_t v42 = 0;
LABEL_56:
    if (v25 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v25) == 1) {
      uint64_t v50 = 0;
    }
    else {
      uint64_t v50 = *(void *)(*(void *)(v5 + 64) + 8 * v25);
    }
    uint64_t v28 = v23 - 2;
    goto LABEL_61;
  }
  if (v23 >= 2)
  {
    uint64_t v28 = 0;
    uint64_t v50 = 0;
    uint64_t v42 = 0;
LABEL_61:
    if (v28 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v59 = 0;
    }
    else {
      uint64_t v59 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v26 = v23 - 1;
    goto LABEL_66;
  }
  uint64_t v26 = 0;
  uint64_t v59 = 0;
  uint64_t v42 = 0;
  uint64_t v50 = 0;
  uint64_t v27 = 0;
  if (v23 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v26 <= (int)v23 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v26) != 1)
    {
      uint64_t v27 = *(void *)(*(void *)(v5 + 64) + 8 * v26);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v27 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v58 = 0;
    uint64_t v44 = 0;
    uint64_t v52 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v27 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v14 & 1) != 0 || v13 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v13) == 1)
  {
    uint64_t v44 = 0;
    if (v15) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v44 = *(void *)(*(void *)(v6 + 64) + 8 * v13);
    if (v15) {
      goto LABEL_98;
    }
  }
  if (v11 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v11) == 1)
  {
LABEL_98:
    uint64_t v52 = 0;
    if (v12) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v52 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
  if (v12) {
    goto LABEL_101;
  }
LABEL_99:
  if (v10 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v10) != 1)
  {
    uint64_t v58 = *(void *)(*(void *)(v6 + 64) + 8 * v10);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v29 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v58 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v29 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v45 >= 1)
  {
    uint64_t v30 = 0;
    uint64_t v49 = (uint64_t *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v48 = (uint64_t *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v47 = **a4 + *(void *)(v6 + 40);
    do
    {
      uint64_t v46 = v30;
      if (v53 >= 1)
      {
        uint64_t v31 = 0;
        uint64_t v56 = v48;
        uint64_t v57 = v49;
        uint64_t v55 = v47;
        do
        {
          uint64_t v54 = v31;
          if (v62 >= 1)
          {
            uint64_t v32 = 0;
            uint64_t v33 = v56;
            uint64_t v34 = v57;
            uint64_t v35 = v55;
            do
            {
              uint64_t v63 = v32;
              uint64_t v36 = v61;
              uint64_t v37 = v34;
              uint64_t v38 = v33;
              uint64_t v39 = v35;
              if (v61 >= 1)
              {
                do
                {
                  uint64_t v40 = *v37;
                  uint64_t v64 = *v38;
                  uint64_t v65 = v40;
                  *(float *)uint64_t v39 = std::operator/[abi:nn180100]<float>((float *)&v65, (float *)&v64);
                  *(_DWORD *)(v39 + 4) = v41;
                  v39 += v29;
                  uint64_t v38 = (uint64_t *)((char *)v38 + v27);
                  uint64_t v37 = (uint64_t *)((char *)v37 + v21);
                  --v36;
                }
                while (v36);
              }
              uint64_t v32 = v63 + 1;
              v35 += v58;
              uint64_t v33 = (uint64_t *)((char *)v33 + v59);
              uint64_t v34 = (uint64_t *)((char *)v34 + v60);
            }
            while (v63 + 1 != v62);
          }
          uint64_t v31 = v54 + 1;
          v55 += v52;
          uint64_t v56 = (uint64_t *)((char *)v56 + v50);
          uint64_t v57 = (uint64_t *)((char *)v57 + v51);
        }
        while (v54 + 1 != v53);
      }
      uint64_t v30 = v46 + 1;
      v47 += v44;
      uint64_t v48 = (uint64_t *)((char *)v48 + v42);
      uint64_t v49 = (uint64_t *)((char *)v49 + v43);
    }
    while (v46 + 1 != v45);
  }
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<float,float,float,(mlir::mps::arithmeticOp)3>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v17 = 1;
    char v18 = 1;
LABEL_7:
    uint64_t v19 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v17 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v18 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v18 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v19 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v58 = v19;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v20 = 0;
    uint64_t v57 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v22 = *(void *)(v4 + 16);
  uint64_t v23 = v22 - 4;
  if (v22 >= 4)
  {
    if (v23 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t v57 = 0;
    }
    else {
      uint64_t v57 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v24 = v22 - 3;
    goto LABEL_26;
  }
  if (v22 == 3)
  {
    uint64_t v24 = 0;
    uint64_t v57 = 0;
LABEL_26:
    if (v24 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    }
    uint64_t v27 = v22 - 2;
    goto LABEL_31;
  }
  if (v22 < 2)
  {
    uint64_t v25 = 0;
    uint64_t v20 = 0;
    uint64_t v57 = 0;
    uint64_t result = 0;
    uint64_t v26 = 0;
    if (v22 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v27 = 0;
  uint64_t result = 0;
  uint64_t v57 = 0;
LABEL_31:
  if (v27 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v27) == 1) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = *(void *)(*(void *)(v4 + 64) + 8 * v27);
  }
  uint64_t v25 = v22 - 1;
LABEL_36:
  if (v25 > (int)v22 - 1)
  {
LABEL_37:
    uint64_t v26 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v31 = 0;
    uint64_t v56 = 0;
    uint64_t v32 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v25) != 1)
  {
    uint64_t v26 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v26 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v28 = *(void *)(v5 + 16);
  uint64_t v29 = v28 - 4;
  if (v28 >= 4)
  {
    if (v29 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v56 = 0;
    }
    else {
      uint64_t v56 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v30 = v28 - 3;
    goto LABEL_56;
  }
  if (v28 == 3)
  {
    uint64_t v30 = 0;
    uint64_t v56 = 0;
LABEL_56:
    if (v30 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v30) == 1) {
      uint64_t v32 = 0;
    }
    else {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v30);
    }
    uint64_t v35 = v28 - 2;
    goto LABEL_61;
  }
  if (v28 >= 2)
  {
    uint64_t v35 = 0;
    uint64_t v32 = 0;
    uint64_t v56 = 0;
LABEL_61:
    if (v35 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v35) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v35);
    }
    uint64_t v33 = v28 - 1;
    goto LABEL_66;
  }
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v56 = 0;
  uint64_t v32 = 0;
  uint64_t v34 = 0;
  if (v28 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v33 <= (int)v28 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v33) != 1)
    {
      uint64_t v34 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v34 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v38 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v34 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v36 = 0;
    if (v18) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v18) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v37 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v38 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v39 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v38 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v39 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v58 >= 1)
  {
    uint64_t v40 = 0;
    int v41 = (float *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v42 = (float *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v43 = (float *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v17 >= 1)
      {
        uint64_t v44 = 0;
        uint64_t v45 = v41;
        uint64_t v46 = v42;
        uint64_t v47 = v43;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v48 = 0;
            uint64_t v49 = v45;
            uint64_t v50 = v46;
            uint64_t v51 = v47;
            do
            {
              uint64_t v52 = v10;
              uint64_t v53 = v49;
              uint64_t v54 = v50;
              uint64_t v55 = v51;
              if (v10 >= 1)
              {
                do
                {
                  float *v55 = *v53 / *v54;
                  uint64_t v55 = (float *)((char *)v55 + v39);
                  uint64_t v54 = (float *)((char *)v54 + v34);
                  uint64_t v53 = (float *)((char *)v53 + v26);
                  --v52;
                }
                while (v52);
              }
              ++v48;
              uint64_t v51 = (float *)((char *)v51 + v38);
              uint64_t v50 = (float *)((char *)v50 + v31);
              uint64_t v49 = (float *)((char *)v49 + v20);
            }
            while (v48 != v13);
          }
          ++v44;
          uint64_t v47 = (float *)((char *)v47 + v37);
          uint64_t v46 = (float *)((char *)v46 + v32);
          uint64_t v45 = (float *)((char *)v45 + result);
        }
        while (v44 != v17);
      }
      ++v40;
      uint64_t v43 = (float *)((char *)v43 + v36);
      uint64_t v42 = (float *)((char *)v42 + v56);
      int v41 = (float *)((char *)v41 + v57);
    }
    while (v40 != v58);
  }
  return result;
}

void mlir::mps::arithmeticBinaryTileBaseKernel<complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)3>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4, float16x4_t a5)
{
  uint64_t v5 = **a1;
  uint64_t v6 = (*a1)[1];
  uint64_t v7 = **a2;
  uint64_t v8 = *(void *)(v7 + 16);
  uint64_t v9 = v8 - 1;
  if (v8 <= 0)
  {
    uint64_t v11 = v8 - 2;
    uint64_t v61 = 1;
    goto LABEL_5;
  }
  uint64_t v10 = *(void *)(v7 + 24);
  uint64_t v61 = *(void *)(v10 + 8 * v9);
  if (v8 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v8 - 3;
    uint64_t v62 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v8 - 4;
    char v15 = 1;
    uint64_t v53 = 1;
    char v16 = 1;
LABEL_7:
    uint64_t v17 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v8 - 2;
  uint64_t v62 = *(void *)(v10 + 8 * (v8 - 2));
  if ((unint64_t)v8 <= 2)
  {
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v8 - 3;
  uint64_t v53 = *(void *)(v10 + 8 * (v8 - 3));
  if (v8 == 3)
  {
    char v13 = 0;
    uint64_t v12 = 0;
    char v16 = 0;
    uint64_t v14 = -1;
    uint64_t v11 = 1;
    char v15 = 1;
    goto LABEL_7;
  }
  char v15 = 0;
  char v13 = 0;
  char v16 = 0;
  uint64_t v14 = v8 - 4;
  uint64_t v17 = *(void *)(v10 + 8 * (v8 - 4));
LABEL_8:
  uint64_t v45 = v17;
  if (*(unsigned char *)(v5 + 58))
  {
    uint64_t v60 = 0;
    uint64_t v43 = 0;
    uint64_t v51 = 0;
    goto LABEL_37;
  }
  uint64_t v18 = *(void *)(v5 + 16);
  uint64_t v19 = v18 - 4;
  if (v18 >= 4)
  {
    if (v19 > (int)v18 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v19) == 1) {
      uint64_t v43 = 0;
    }
    else {
      uint64_t v43 = *(void *)(*(void *)(v5 + 64) + 8 * v19);
    }
    uint64_t v20 = v18 - 3;
    goto LABEL_26;
  }
  if (v18 == 3)
  {
    uint64_t v20 = 0;
    uint64_t v43 = 0;
LABEL_26:
    if (v20 > (int)v18 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v20) == 1) {
      uint64_t v51 = 0;
    }
    else {
      uint64_t v51 = *(void *)(*(void *)(v5 + 64) + 8 * v20);
    }
    uint64_t v23 = v18 - 2;
    goto LABEL_31;
  }
  if (v18 < 2)
  {
    uint64_t v21 = 0;
    uint64_t v60 = 0;
    uint64_t v43 = 0;
    uint64_t v51 = 0;
    uint64_t v22 = 0;
    if (v18 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v23 = 0;
  uint64_t v51 = 0;
  uint64_t v43 = 0;
LABEL_31:
  if (v23 > (int)v18 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v23) == 1) {
    uint64_t v60 = 0;
  }
  else {
    uint64_t v60 = *(void *)(*(void *)(v5 + 64) + 8 * v23);
  }
  uint64_t v21 = v18 - 1;
LABEL_36:
  if (v21 > (int)v18 - 1)
  {
LABEL_37:
    uint64_t v22 = 0;
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v59 = 0;
    uint64_t v42 = 0;
    uint64_t v50 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v5 + 24) + 8 * v21) != 1)
  {
    uint64_t v22 = *(void *)(*(void *)(v5 + 64) + 8 * v21);
    if (*(unsigned char *)(v6 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v22 = 0;
LABEL_46:
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v24 = *(void *)(v6 + 16);
  uint64_t v25 = v24 - 4;
  if (v24 >= 4)
  {
    if (v25 > (int)v24 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v25) == 1) {
      uint64_t v42 = 0;
    }
    else {
      uint64_t v42 = *(void *)(*(void *)(v6 + 64) + 8 * v25);
    }
    uint64_t v26 = v24 - 3;
    goto LABEL_56;
  }
  if (v24 == 3)
  {
    uint64_t v26 = 0;
    uint64_t v42 = 0;
LABEL_56:
    if (v26 > (int)v24 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v26) == 1) {
      uint64_t v50 = 0;
    }
    else {
      uint64_t v50 = *(void *)(*(void *)(v6 + 64) + 8 * v26);
    }
    uint64_t v29 = v24 - 2;
    goto LABEL_61;
  }
  if (v24 >= 2)
  {
    uint64_t v29 = 0;
    uint64_t v50 = 0;
    uint64_t v42 = 0;
LABEL_61:
    if (v29 > (int)v24 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v29) == 1) {
      uint64_t v59 = 0;
    }
    else {
      uint64_t v59 = *(void *)(*(void *)(v6 + 64) + 8 * v29);
    }
    uint64_t v27 = v24 - 1;
    goto LABEL_66;
  }
  uint64_t v27 = 0;
  uint64_t v59 = 0;
  uint64_t v42 = 0;
  uint64_t v50 = 0;
  uint64_t v28 = 0;
  if (v24 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v27 <= (int)v24 - 1)
  {
    if (*(void *)(*(void *)(v6 + 24) + 8 * v27) != 1)
    {
      uint64_t v28 = *(void *)(*(void *)(v6 + 64) + 8 * v27);
      if (!*(unsigned char *)(v7 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v28 = 0;
LABEL_78:
    if (!*(unsigned char *)(v7 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v58 = 0;
    uint64_t v44 = 0;
    uint64_t v52 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v28 = 0;
  if (*(unsigned char *)(v7 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v15 & 1) != 0 || v14 > (int)v8 - 1 || *(void *)(*(void *)(v7 + 24) + 8 * v14) == 1)
  {
    uint64_t v44 = 0;
    if (v16) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v44 = *(void *)(*(void *)(v7 + 64) + 8 * v14);
    if (v16) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v8 - 1 || *(void *)(*(void *)(v7 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v52 = 0;
    if (v13) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v52 = *(void *)(*(void *)(v7 + 64) + 8 * v12);
  if (v13) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v8 - 1 && *(void *)(*(void *)(v7 + 24) + 8 * v11) != 1)
  {
    uint64_t v58 = *(void *)(*(void *)(v7 + 64) + 8 * v11);
    if (v8 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v30 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v58 = 0;
  if (v8 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v9 > (int)v8 - 1 || *(void *)(*(void *)(v7 + 24) + 8 * v9) == 1) {
    goto LABEL_80;
  }
  uint64_t v30 = *(void *)(*(void *)(v7 + 64) + 8 * v9);
LABEL_81:
  if (v45 >= 1)
  {
    uint64_t v31 = 0;
    uint64_t v49 = (__int32 *)(**(void **)a3 + *(void *)(v5 + 40));
    uint64_t v48 = (uint64_t *)(*(void *)(*(void *)a3 + 8) + *(void *)(v6 + 40));
    uint64_t v47 = **a4 + *(void *)(v7 + 40);
    do
    {
      uint64_t v46 = v31;
      if (v53 >= 1)
      {
        uint64_t v32 = 0;
        uint64_t v56 = v48;
        uint64_t v57 = v49;
        uint64_t v55 = v47;
        do
        {
          uint64_t v54 = v32;
          if (v62 >= 1)
          {
            uint64_t v33 = 0;
            uint64_t v34 = v56;
            uint64_t v35 = v57;
            uint64_t v36 = v55;
            do
            {
              uint64_t v63 = v33;
              uint64_t v37 = v61;
              uint64_t v38 = v35;
              uint64_t v39 = v34;
              uint64_t v40 = v36;
              if (v61 >= 1)
              {
                do
                {
                  a5.i32[0] = *v38;
                  uint64_t v64 = *v39;
                  unint64_t v65 = vcvtq_f32_f16(a5).u64[0];
                  *(float *)uint64_t v40 = std::operator/[abi:nn180100]<float>((float *)&v65, (float *)&v64);
                  *(_DWORD *)(v40 + 4) = v41;
                  v40 += v30;
                  uint64_t v39 = (uint64_t *)((char *)v39 + v28);
                  uint64_t v38 = (__int32 *)((char *)v38 + v22);
                  --v37;
                }
                while (v37);
              }
              uint64_t v33 = v63 + 1;
              v36 += v58;
              uint64_t v34 = (uint64_t *)((char *)v34 + v59);
              uint64_t v35 = (__int32 *)((char *)v35 + v60);
            }
            while (v63 + 1 != v62);
          }
          uint64_t v32 = v54 + 1;
          v55 += v52;
          uint64_t v56 = (uint64_t *)((char *)v56 + v50);
          uint64_t v57 = (__int32 *)((char *)v57 + v51);
        }
        while (v54 + 1 != v53);
      }
      uint64_t v31 = v46 + 1;
      v47 += v44;
      uint64_t v48 = (uint64_t *)((char *)v48 + v42);
      uint64_t v49 = (__int32 *)((char *)v49 + v43);
    }
    while (v46 + 1 != v45);
  }
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<half,float,float,(mlir::mps::arithmeticOp)3>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v17 = 1;
    char v18 = 1;
LABEL_7:
    uint64_t v19 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v17 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v18 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v18 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v19 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v64 = v19;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v20 = 0;
    uint64_t v63 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v22 = *(void *)(v4 + 16);
  uint64_t v23 = v22 - 4;
  if (v22 >= 4)
  {
    if (v23 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t v63 = 0;
    }
    else {
      uint64_t v63 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v24 = v22 - 3;
    goto LABEL_26;
  }
  if (v22 == 3)
  {
    uint64_t v24 = 0;
    uint64_t v63 = 0;
LABEL_26:
    if (v24 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    }
    uint64_t v27 = v22 - 2;
    goto LABEL_31;
  }
  if (v22 < 2)
  {
    uint64_t v25 = 0;
    uint64_t v20 = 0;
    uint64_t v63 = 0;
    uint64_t result = 0;
    uint64_t v26 = 0;
    if (v22 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v27 = 0;
  uint64_t result = 0;
  uint64_t v63 = 0;
LABEL_31:
  if (v27 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v27) == 1) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = *(void *)(*(void *)(v4 + 64) + 8 * v27);
  }
  uint64_t v25 = v22 - 1;
LABEL_36:
  if (v25 > (int)v22 - 1)
  {
LABEL_37:
    uint64_t v26 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v31 = 0;
    uint64_t v62 = 0;
    uint64_t v32 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v25) != 1)
  {
    uint64_t v26 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v26 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v28 = *(void *)(v5 + 16);
  uint64_t v29 = v28 - 4;
  if (v28 >= 4)
  {
    if (v29 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v62 = 0;
    }
    else {
      uint64_t v62 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v30 = v28 - 3;
    goto LABEL_56;
  }
  if (v28 == 3)
  {
    uint64_t v30 = 0;
    uint64_t v62 = 0;
LABEL_56:
    if (v30 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v30) == 1) {
      uint64_t v32 = 0;
    }
    else {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v30);
    }
    uint64_t v35 = v28 - 2;
    goto LABEL_61;
  }
  if (v28 >= 2)
  {
    uint64_t v35 = 0;
    uint64_t v32 = 0;
    uint64_t v62 = 0;
LABEL_61:
    if (v35 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v35) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v35);
    }
    uint64_t v33 = v28 - 1;
    goto LABEL_66;
  }
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v62 = 0;
  uint64_t v32 = 0;
  uint64_t v34 = 0;
  if (v28 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v33 <= (int)v28 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v33) != 1)
    {
      uint64_t v34 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v34 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v38 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v34 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v36 = 0;
    if (v18) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v18) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v37 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v38 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v39 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v38 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v39 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v64 >= 1)
  {
    uint64_t v40 = 0;
    int v41 = (__int16 *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v42 = (float *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v43 = (float *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v17 >= 1)
      {
        uint64_t v44 = 0;
        uint64_t v45 = v41;
        uint64_t v46 = v42;
        uint64_t v47 = v43;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v48 = 0;
            uint64_t v49 = v45;
            uint64_t v50 = v46;
            uint64_t v51 = v47;
            do
            {
              uint64_t v52 = v10;
              uint64_t v53 = v49;
              uint64_t v54 = v50;
              uint64_t v55 = v51;
              if (v10 >= 1)
              {
                do
                {
                  _H0 = *v53;
                  __asm { FCVT            S0, H0 }
                  float *v55 = _S0 / *v54;
                  uint64_t v55 = (float *)((char *)v55 + v39);
                  uint64_t v54 = (float *)((char *)v54 + v34);
                  uint64_t v53 = (__int16 *)((char *)v53 + v26);
                  --v52;
                }
                while (v52);
              }
              ++v48;
              uint64_t v51 = (float *)((char *)v51 + v38);
              uint64_t v50 = (float *)((char *)v50 + v31);
              uint64_t v49 = (__int16 *)((char *)v49 + v20);
            }
            while (v48 != v13);
          }
          ++v44;
          uint64_t v47 = (float *)((char *)v47 + v37);
          uint64_t v46 = (float *)((char *)v46 + v32);
          uint64_t v45 = (__int16 *)((char *)v45 + result);
        }
        while (v44 != v17);
      }
      ++v40;
      uint64_t v43 = (float *)((char *)v43 + v36);
      uint64_t v42 = (float *)((char *)v42 + v62);
      int v41 = (__int16 *)((char *)v41 + v63);
    }
    while (v40 != v64);
  }
  return result;
}

void mlir::mps::arithmeticBinaryTileBaseKernel<complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)3>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4, double a5, float16x4_t a6)
{
  uint64_t v6 = **a1;
  uint64_t v7 = (*a1)[1];
  uint64_t v8 = **a2;
  uint64_t v9 = *(void *)(v8 + 16);
  uint64_t v10 = v9 - 1;
  if (v9 <= 0)
  {
    uint64_t v12 = v9 - 2;
    uint64_t v62 = 1;
    goto LABEL_5;
  }
  uint64_t v11 = *(void *)(v8 + 24);
  uint64_t v62 = *(void *)(v11 + 8 * v10);
  if (v9 == 1)
  {
    uint64_t v12 = -1;
LABEL_5:
    uint64_t v13 = v9 - 3;
    uint64_t v63 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v9 - 4;
    char v16 = 1;
    uint64_t v54 = 1;
    char v17 = 1;
LABEL_7:
    uint64_t v18 = 1;
    goto LABEL_8;
  }
  uint64_t v12 = v9 - 2;
  uint64_t v63 = *(void *)(v11 + 8 * (v9 - 2));
  if ((unint64_t)v9 <= 2)
  {
    uint64_t v12 = 0;
    char v14 = 0;
    uint64_t v13 = -1;
    goto LABEL_6;
  }
  uint64_t v13 = v9 - 3;
  uint64_t v54 = *(void *)(v11 + 8 * (v9 - 3));
  if (v9 == 3)
  {
    char v14 = 0;
    uint64_t v13 = 0;
    char v17 = 0;
    uint64_t v15 = -1;
    uint64_t v12 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v17 = 0;
  uint64_t v15 = v9 - 4;
  uint64_t v18 = *(void *)(v11 + 8 * (v9 - 4));
LABEL_8:
  uint64_t v46 = v18;
  if (*(unsigned char *)(v6 + 58))
  {
    uint64_t v61 = 0;
    uint64_t v44 = 0;
    uint64_t v52 = 0;
    goto LABEL_37;
  }
  uint64_t v19 = *(void *)(v6 + 16);
  uint64_t v20 = v19 - 4;
  if (v19 >= 4)
  {
    if (v20 > (int)v19 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v20) == 1) {
      uint64_t v44 = 0;
    }
    else {
      uint64_t v44 = *(void *)(*(void *)(v6 + 64) + 8 * v20);
    }
    uint64_t v21 = v19 - 3;
    goto LABEL_26;
  }
  if (v19 == 3)
  {
    uint64_t v21 = 0;
    uint64_t v44 = 0;
LABEL_26:
    if (v21 > (int)v19 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v21) == 1) {
      uint64_t v52 = 0;
    }
    else {
      uint64_t v52 = *(void *)(*(void *)(v6 + 64) + 8 * v21);
    }
    uint64_t v24 = v19 - 2;
    goto LABEL_31;
  }
  if (v19 < 2)
  {
    uint64_t v22 = 0;
    uint64_t v61 = 0;
    uint64_t v44 = 0;
    uint64_t v52 = 0;
    uint64_t v23 = 0;
    if (v19 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v24 = 0;
  uint64_t v52 = 0;
  uint64_t v44 = 0;
LABEL_31:
  if (v24 > (int)v19 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v24) == 1) {
    uint64_t v61 = 0;
  }
  else {
    uint64_t v61 = *(void *)(*(void *)(v6 + 64) + 8 * v24);
  }
  uint64_t v22 = v19 - 1;
LABEL_36:
  if (v22 > (int)v19 - 1)
  {
LABEL_37:
    uint64_t v23 = 0;
    if (!*(unsigned char *)(v7 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v60 = 0;
    uint64_t v43 = 0;
    uint64_t v51 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v6 + 24) + 8 * v22) != 1)
  {
    uint64_t v23 = *(void *)(*(void *)(v6 + 64) + 8 * v22);
    if (*(unsigned char *)(v7 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v23 = 0;
LABEL_46:
  if (*(unsigned char *)(v7 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v25 = *(void *)(v7 + 16);
  uint64_t v26 = v25 - 4;
  if (v25 >= 4)
  {
    if (v26 > (int)v25 - 1 || *(void *)(*(void *)(v7 + 24) + 8 * v26) == 1) {
      uint64_t v43 = 0;
    }
    else {
      uint64_t v43 = *(void *)(*(void *)(v7 + 64) + 8 * v26);
    }
    uint64_t v27 = v25 - 3;
    goto LABEL_56;
  }
  if (v25 == 3)
  {
    uint64_t v27 = 0;
    uint64_t v43 = 0;
LABEL_56:
    if (v27 > (int)v25 - 1 || *(void *)(*(void *)(v7 + 24) + 8 * v27) == 1) {
      uint64_t v51 = 0;
    }
    else {
      uint64_t v51 = *(void *)(*(void *)(v7 + 64) + 8 * v27);
    }
    uint64_t v30 = v25 - 2;
    goto LABEL_61;
  }
  if (v25 >= 2)
  {
    uint64_t v30 = 0;
    uint64_t v51 = 0;
    uint64_t v43 = 0;
LABEL_61:
    if (v30 > (int)v25 - 1 || *(void *)(*(void *)(v7 + 24) + 8 * v30) == 1) {
      uint64_t v60 = 0;
    }
    else {
      uint64_t v60 = *(void *)(*(void *)(v7 + 64) + 8 * v30);
    }
    uint64_t v28 = v25 - 1;
    goto LABEL_66;
  }
  uint64_t v28 = 0;
  uint64_t v60 = 0;
  uint64_t v43 = 0;
  uint64_t v51 = 0;
  uint64_t v29 = 0;
  if (v25 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v28 <= (int)v25 - 1)
  {
    if (*(void *)(*(void *)(v7 + 24) + 8 * v28) != 1)
    {
      uint64_t v29 = *(void *)(*(void *)(v7 + 64) + 8 * v28);
      if (!*(unsigned char *)(v8 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v29 = 0;
LABEL_78:
    if (!*(unsigned char *)(v8 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v59 = 0;
    uint64_t v45 = 0;
    uint64_t v53 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v29 = 0;
  if (*(unsigned char *)(v8 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v9 - 1 || *(void *)(*(void *)(v8 + 24) + 8 * v15) == 1)
  {
    uint64_t v45 = 0;
    if (v17) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v45 = *(void *)(*(void *)(v8 + 64) + 8 * v15);
    if (v17) {
      goto LABEL_98;
    }
  }
  if (v13 > (int)v9 - 1 || *(void *)(*(void *)(v8 + 24) + 8 * v13) == 1)
  {
LABEL_98:
    uint64_t v53 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v53 = *(void *)(*(void *)(v8 + 64) + 8 * v13);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v12 <= (int)v9 - 1 && *(void *)(*(void *)(v8 + 24) + 8 * v12) != 1)
  {
    uint64_t v59 = *(void *)(*(void *)(v8 + 64) + 8 * v12);
    if (v9 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v31 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v59 = 0;
  if (v9 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v10 > (int)v9 - 1 || *(void *)(*(void *)(v8 + 24) + 8 * v10) == 1) {
    goto LABEL_80;
  }
  uint64_t v31 = *(void *)(*(void *)(v8 + 64) + 8 * v10);
LABEL_81:
  if (v46 >= 1)
  {
    uint64_t v32 = 0;
    uint64_t v50 = (uint64_t *)(**(void **)a3 + *(void *)(v6 + 40));
    uint64_t v49 = (__int32 *)(*(void *)(*(void *)a3 + 8) + *(void *)(v7 + 40));
    uint64_t v48 = **a4 + *(void *)(v8 + 40);
    do
    {
      uint64_t v47 = v32;
      if (v54 >= 1)
      {
        uint64_t v33 = 0;
        uint64_t v57 = v49;
        uint64_t v58 = v50;
        uint64_t v56 = v48;
        do
        {
          uint64_t v55 = v33;
          if (v63 >= 1)
          {
            uint64_t v34 = 0;
            uint64_t v35 = v57;
            uint64_t v36 = v58;
            uint64_t v37 = v56;
            do
            {
              uint64_t v64 = v34;
              uint64_t v38 = v62;
              uint64_t v39 = v36;
              uint64_t v40 = v35;
              uint64_t v41 = v37;
              if (v62 >= 1)
              {
                do
                {
                  uint64_t v42 = *v39;
                  a6.i32[0] = *v40;
                  unint64_t v65 = vcvtq_f32_f16(a6).u64[0];
                  uint64_t v66 = v42;
                  *(float *)uint64_t v41 = std::operator/[abi:nn180100]<float>((float *)&v66, (float *)&v65);
                  *(_DWORD *)(v41 + 4) = a6.i32[0];
                  v41 += v31;
                  uint64_t v40 = (__int32 *)((char *)v40 + v29);
                  uint64_t v39 = (uint64_t *)((char *)v39 + v23);
                  --v38;
                }
                while (v38);
              }
              uint64_t v34 = v64 + 1;
              v37 += v59;
              uint64_t v35 = (__int32 *)((char *)v35 + v60);
              uint64_t v36 = (uint64_t *)((char *)v36 + v61);
            }
            while (v64 + 1 != v63);
          }
          uint64_t v33 = v55 + 1;
          v56 += v53;
          uint64_t v57 = (__int32 *)((char *)v57 + v51);
          uint64_t v58 = (uint64_t *)((char *)v58 + v52);
        }
        while (v55 + 1 != v54);
      }
      uint64_t v32 = v47 + 1;
      v48 += v45;
      uint64_t v49 = (__int32 *)((char *)v49 + v43);
      uint64_t v50 = (uint64_t *)((char *)v50 + v44);
    }
    while (v47 + 1 != v46);
  }
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<float,half,float,(mlir::mps::arithmeticOp)3>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v17 = 1;
    char v18 = 1;
LABEL_7:
    uint64_t v19 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v17 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v18 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v18 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v19 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v64 = v19;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v20 = 0;
    uint64_t v63 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v22 = *(void *)(v4 + 16);
  uint64_t v23 = v22 - 4;
  if (v22 >= 4)
  {
    if (v23 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t v63 = 0;
    }
    else {
      uint64_t v63 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v24 = v22 - 3;
    goto LABEL_26;
  }
  if (v22 == 3)
  {
    uint64_t v24 = 0;
    uint64_t v63 = 0;
LABEL_26:
    if (v24 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    }
    uint64_t v27 = v22 - 2;
    goto LABEL_31;
  }
  if (v22 < 2)
  {
    uint64_t v25 = 0;
    uint64_t v20 = 0;
    uint64_t v63 = 0;
    uint64_t result = 0;
    uint64_t v26 = 0;
    if (v22 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v27 = 0;
  uint64_t result = 0;
  uint64_t v63 = 0;
LABEL_31:
  if (v27 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v27) == 1) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = *(void *)(*(void *)(v4 + 64) + 8 * v27);
  }
  uint64_t v25 = v22 - 1;
LABEL_36:
  if (v25 > (int)v22 - 1)
  {
LABEL_37:
    uint64_t v26 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v31 = 0;
    uint64_t v62 = 0;
    uint64_t v32 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v25) != 1)
  {
    uint64_t v26 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v26 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v28 = *(void *)(v5 + 16);
  uint64_t v29 = v28 - 4;
  if (v28 >= 4)
  {
    if (v29 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v62 = 0;
    }
    else {
      uint64_t v62 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v30 = v28 - 3;
    goto LABEL_56;
  }
  if (v28 == 3)
  {
    uint64_t v30 = 0;
    uint64_t v62 = 0;
LABEL_56:
    if (v30 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v30) == 1) {
      uint64_t v32 = 0;
    }
    else {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v30);
    }
    uint64_t v35 = v28 - 2;
    goto LABEL_61;
  }
  if (v28 >= 2)
  {
    uint64_t v35 = 0;
    uint64_t v32 = 0;
    uint64_t v62 = 0;
LABEL_61:
    if (v35 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v35) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v35);
    }
    uint64_t v33 = v28 - 1;
    goto LABEL_66;
  }
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v62 = 0;
  uint64_t v32 = 0;
  uint64_t v34 = 0;
  if (v28 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v33 <= (int)v28 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v33) != 1)
    {
      uint64_t v34 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v34 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v38 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v34 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v36 = 0;
    if (v18) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v18) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v37 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v38 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v39 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v38 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v39 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v64 >= 1)
  {
    uint64_t v40 = 0;
    uint64_t v41 = (float *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v42 = (__int16 *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v43 = (float *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v17 >= 1)
      {
        uint64_t v44 = 0;
        uint64_t v45 = v41;
        uint64_t v46 = v42;
        uint64_t v47 = v43;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v48 = 0;
            uint64_t v49 = v45;
            uint64_t v50 = v46;
            uint64_t v51 = v47;
            do
            {
              uint64_t v52 = v10;
              uint64_t v53 = v49;
              uint64_t v54 = v50;
              uint64_t v55 = v51;
              if (v10 >= 1)
              {
                do
                {
                  _H1 = *v54;
                  __asm { FCVT            S1, H1 }
                  float *v55 = *v53 / _S1;
                  uint64_t v55 = (float *)((char *)v55 + v39);
                  uint64_t v54 = (__int16 *)((char *)v54 + v34);
                  uint64_t v53 = (float *)((char *)v53 + v26);
                  --v52;
                }
                while (v52);
              }
              ++v48;
              uint64_t v51 = (float *)((char *)v51 + v38);
              uint64_t v50 = (__int16 *)((char *)v50 + v31);
              uint64_t v49 = (float *)((char *)v49 + v20);
            }
            while (v48 != v13);
          }
          ++v44;
          uint64_t v47 = (float *)((char *)v47 + v37);
          uint64_t v46 = (__int16 *)((char *)v46 + v32);
          uint64_t v45 = (float *)((char *)v45 + result);
        }
        while (v44 != v17);
      }
      ++v40;
      uint64_t v43 = (float *)((char *)v43 + v36);
      uint64_t v42 = (__int16 *)((char *)v42 + v62);
      uint64_t v41 = (float *)((char *)v41 + v63);
    }
    while (v40 != v64);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<__emulated_bf16,float,float,(mlir::mps::arithmeticOp)3>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v17 = 1;
    char v18 = 1;
LABEL_7:
    uint64_t v19 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v17 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v18 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v18 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v19 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v58 = v19;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v20 = 0;
    uint64_t v56 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v22 = *(void *)(v4 + 16);
  uint64_t v23 = v22 - 4;
  if (v22 >= 4)
  {
    if (v23 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t v56 = 0;
    }
    else {
      uint64_t v56 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v24 = v22 - 3;
    goto LABEL_26;
  }
  if (v22 == 3)
  {
    uint64_t v24 = 0;
    uint64_t v56 = 0;
LABEL_26:
    if (v24 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    }
    uint64_t v27 = v22 - 2;
    goto LABEL_31;
  }
  if (v22 < 2)
  {
    uint64_t v25 = 0;
    uint64_t v20 = 0;
    uint64_t v56 = 0;
    uint64_t result = 0;
    uint64_t v26 = 0;
    if (v22 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v27 = 0;
  uint64_t result = 0;
  uint64_t v56 = 0;
LABEL_31:
  if (v27 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v27) == 1) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = *(void *)(*(void *)(v4 + 64) + 8 * v27);
  }
  uint64_t v25 = v22 - 1;
LABEL_36:
  if (v25 > (int)v22 - 1)
  {
LABEL_37:
    uint64_t v26 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v31 = 0;
    uint64_t v55 = 0;
    uint64_t v32 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v25) != 1)
  {
    uint64_t v26 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v26 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v28 = *(void *)(v5 + 16);
  uint64_t v29 = v28 - 4;
  if (v28 >= 4)
  {
    if (v29 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v30 = v28 - 3;
    goto LABEL_56;
  }
  if (v28 == 3)
  {
    uint64_t v30 = 0;
    uint64_t v55 = 0;
LABEL_56:
    if (v30 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v30) == 1) {
      uint64_t v32 = 0;
    }
    else {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v30);
    }
    uint64_t v35 = v28 - 2;
    goto LABEL_61;
  }
  if (v28 >= 2)
  {
    uint64_t v35 = 0;
    uint64_t v32 = 0;
    uint64_t v55 = 0;
LABEL_61:
    if (v35 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v35) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v35);
    }
    uint64_t v33 = v28 - 1;
    goto LABEL_66;
  }
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v55 = 0;
  uint64_t v32 = 0;
  uint64_t v34 = 0;
  if (v28 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v33 <= (int)v28 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v33) != 1)
    {
      uint64_t v34 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v34 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v37 = 0;
    uint64_t v57 = 0;
    uint64_t v36 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v34 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v57 = 0;
    if (v18) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v57 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v18) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v36 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v38 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v37 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v38 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v58 >= 1)
  {
    uint64_t v39 = 0;
    uint64_t v40 = (unsigned __int16 *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v41 = (float *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v42 = (float *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v17 >= 1)
      {
        uint64_t v43 = 0;
        uint64_t v44 = v40;
        uint64_t v45 = v41;
        uint64_t v46 = v42;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v47 = 0;
            uint64_t v48 = v44;
            uint64_t v49 = v45;
            uint64_t v50 = v46;
            do
            {
              uint64_t v51 = v10;
              uint64_t v52 = v48;
              uint64_t v53 = v49;
              uint64_t v54 = v50;
              if (v10 >= 1)
              {
                do
                {
                  *uint64_t v54 = COERCE_FLOAT(*v52 << 16) / *v53;
                  uint64_t v54 = (float *)((char *)v54 + v38);
                  uint64_t v53 = (float *)((char *)v53 + v34);
                  uint64_t v52 = (unsigned __int16 *)((char *)v52 + v26);
                  --v51;
                }
                while (v51);
              }
              ++v47;
              uint64_t v50 = (float *)((char *)v50 + v37);
              uint64_t v49 = (float *)((char *)v49 + v31);
              uint64_t v48 = (unsigned __int16 *)((char *)v48 + v20);
            }
            while (v47 != v13);
          }
          ++v43;
          uint64_t v46 = (float *)((char *)v46 + v36);
          uint64_t v45 = (float *)((char *)v45 + v32);
          uint64_t v44 = (unsigned __int16 *)((char *)v44 + result);
        }
        while (v43 != v17);
      }
      ++v39;
      uint64_t v42 = (float *)((char *)v42 + v57);
      uint64_t v41 = (float *)((char *)v41 + v55);
      uint64_t v40 = (unsigned __int16 *)((char *)v40 + v56);
    }
    while (v39 != v58);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<float,__emulated_bf16,float,(mlir::mps::arithmeticOp)3>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v17 = 1;
    char v18 = 1;
LABEL_7:
    uint64_t v19 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v17 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v18 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v18 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v19 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v58 = v19;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v20 = 0;
    uint64_t v56 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v22 = *(void *)(v4 + 16);
  uint64_t v23 = v22 - 4;
  if (v22 >= 4)
  {
    if (v23 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t v56 = 0;
    }
    else {
      uint64_t v56 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v24 = v22 - 3;
    goto LABEL_26;
  }
  if (v22 == 3)
  {
    uint64_t v24 = 0;
    uint64_t v56 = 0;
LABEL_26:
    if (v24 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    }
    uint64_t v27 = v22 - 2;
    goto LABEL_31;
  }
  if (v22 < 2)
  {
    uint64_t v25 = 0;
    uint64_t v20 = 0;
    uint64_t v56 = 0;
    uint64_t result = 0;
    uint64_t v26 = 0;
    if (v22 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v27 = 0;
  uint64_t result = 0;
  uint64_t v56 = 0;
LABEL_31:
  if (v27 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v27) == 1) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = *(void *)(*(void *)(v4 + 64) + 8 * v27);
  }
  uint64_t v25 = v22 - 1;
LABEL_36:
  if (v25 > (int)v22 - 1)
  {
LABEL_37:
    uint64_t v26 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v31 = 0;
    uint64_t v55 = 0;
    uint64_t v32 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v25) != 1)
  {
    uint64_t v26 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v26 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v28 = *(void *)(v5 + 16);
  uint64_t v29 = v28 - 4;
  if (v28 >= 4)
  {
    if (v29 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v30 = v28 - 3;
    goto LABEL_56;
  }
  if (v28 == 3)
  {
    uint64_t v30 = 0;
    uint64_t v55 = 0;
LABEL_56:
    if (v30 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v30) == 1) {
      uint64_t v32 = 0;
    }
    else {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v30);
    }
    uint64_t v35 = v28 - 2;
    goto LABEL_61;
  }
  if (v28 >= 2)
  {
    uint64_t v35 = 0;
    uint64_t v32 = 0;
    uint64_t v55 = 0;
LABEL_61:
    if (v35 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v35) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v35);
    }
    uint64_t v33 = v28 - 1;
    goto LABEL_66;
  }
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v55 = 0;
  uint64_t v32 = 0;
  uint64_t v34 = 0;
  if (v28 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v33 <= (int)v28 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v33) != 1)
    {
      uint64_t v34 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v34 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v37 = 0;
    uint64_t v57 = 0;
    uint64_t v36 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v34 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v57 = 0;
    if (v18) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v57 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v18) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v36 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v38 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v37 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v38 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v58 >= 1)
  {
    uint64_t v39 = 0;
    uint64_t v40 = (float *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v41 = (unsigned __int16 *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v42 = (float *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v17 >= 1)
      {
        uint64_t v43 = 0;
        uint64_t v44 = v40;
        uint64_t v45 = v41;
        uint64_t v46 = v42;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v47 = 0;
            uint64_t v48 = v44;
            uint64_t v49 = v45;
            uint64_t v50 = v46;
            do
            {
              uint64_t v51 = v10;
              uint64_t v52 = v48;
              uint64_t v53 = v49;
              uint64_t v54 = v50;
              if (v10 >= 1)
              {
                do
                {
                  *uint64_t v54 = *v52 / COERCE_FLOAT(*v53 << 16);
                  uint64_t v54 = (float *)((char *)v54 + v38);
                  uint64_t v53 = (unsigned __int16 *)((char *)v53 + v34);
                  uint64_t v52 = (float *)((char *)v52 + v26);
                  --v51;
                }
                while (v51);
              }
              ++v47;
              uint64_t v50 = (float *)((char *)v50 + v37);
              uint64_t v49 = (unsigned __int16 *)((char *)v49 + v31);
              uint64_t v48 = (float *)((char *)v48 + v20);
            }
            while (v47 != v13);
          }
          ++v43;
          uint64_t v46 = (float *)((char *)v46 + v36);
          uint64_t v45 = (unsigned __int16 *)((char *)v45 + v32);
          uint64_t v44 = (float *)((char *)v44 + result);
        }
        while (v43 != v17);
      }
      ++v39;
      uint64_t v42 = (float *)((char *)v42 + v57);
      uint64_t v41 = (unsigned __int16 *)((char *)v41 + v55);
      uint64_t v40 = (float *)((char *)v40 + v56);
    }
    while (v39 != v58);
  }
  return result;
}

void mlir::mps::arithmeticBinaryTileBaseKernel<complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<half,(void *)0>,(mlir::mps::arithmeticOp)3>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4, double _D0, float16x4_t _D1)
{
  uint64_t v6 = **a1;
  uint64_t v7 = (*a1)[1];
  uint64_t v8 = **a2;
  uint64_t v9 = *(void *)(v8 + 16);
  uint64_t v10 = v9 - 1;
  if (v9 <= 0)
  {
    uint64_t v12 = v9 - 2;
    uint64_t v65 = 1;
    goto LABEL_5;
  }
  uint64_t v11 = *(void *)(v8 + 24);
  uint64_t v65 = *(void *)(v11 + 8 * v10);
  if (v9 == 1)
  {
    uint64_t v12 = -1;
LABEL_5:
    uint64_t v13 = v9 - 3;
    uint64_t v66 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v9 - 4;
    char v16 = 1;
    uint64_t v57 = 1;
    char v17 = 1;
LABEL_7:
    uint64_t v18 = 1;
    goto LABEL_8;
  }
  uint64_t v12 = v9 - 2;
  uint64_t v66 = *(void *)(v11 + 8 * (v9 - 2));
  if ((unint64_t)v9 <= 2)
  {
    uint64_t v12 = 0;
    char v14 = 0;
    uint64_t v13 = -1;
    goto LABEL_6;
  }
  uint64_t v13 = v9 - 3;
  uint64_t v57 = *(void *)(v11 + 8 * (v9 - 3));
  if (v9 == 3)
  {
    char v14 = 0;
    uint64_t v13 = 0;
    char v17 = 0;
    uint64_t v15 = -1;
    uint64_t v12 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v17 = 0;
  uint64_t v15 = v9 - 4;
  uint64_t v18 = *(void *)(v11 + 8 * (v9 - 4));
LABEL_8:
  uint64_t v49 = v18;
  if (*(unsigned char *)(v6 + 58))
  {
    uint64_t v64 = 0;
    uint64_t v47 = 0;
    uint64_t v55 = 0;
    goto LABEL_37;
  }
  uint64_t v19 = *(void *)(v6 + 16);
  uint64_t v20 = v19 - 4;
  if (v19 >= 4)
  {
    if (v20 > (int)v19 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v20) == 1) {
      uint64_t v47 = 0;
    }
    else {
      uint64_t v47 = *(void *)(*(void *)(v6 + 64) + 8 * v20);
    }
    uint64_t v21 = v19 - 3;
    goto LABEL_26;
  }
  if (v19 == 3)
  {
    uint64_t v21 = 0;
    uint64_t v47 = 0;
LABEL_26:
    if (v21 > (int)v19 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v21) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v6 + 64) + 8 * v21);
    }
    uint64_t v24 = v19 - 2;
    goto LABEL_31;
  }
  if (v19 < 2)
  {
    uint64_t v22 = 0;
    uint64_t v64 = 0;
    uint64_t v47 = 0;
    uint64_t v55 = 0;
    uint64_t v23 = 0;
    if (v19 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v24 = 0;
  uint64_t v55 = 0;
  uint64_t v47 = 0;
LABEL_31:
  if (v24 > (int)v19 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v24) == 1) {
    uint64_t v64 = 0;
  }
  else {
    uint64_t v64 = *(void *)(*(void *)(v6 + 64) + 8 * v24);
  }
  uint64_t v22 = v19 - 1;
LABEL_36:
  if (v22 > (int)v19 - 1)
  {
LABEL_37:
    uint64_t v23 = 0;
    if (!*(unsigned char *)(v7 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v63 = 0;
    uint64_t v46 = 0;
    uint64_t v54 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v6 + 24) + 8 * v22) != 1)
  {
    uint64_t v23 = *(void *)(*(void *)(v6 + 64) + 8 * v22);
    if (*(unsigned char *)(v7 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v23 = 0;
LABEL_46:
  if (*(unsigned char *)(v7 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v25 = *(void *)(v7 + 16);
  uint64_t v26 = v25 - 4;
  if (v25 >= 4)
  {
    if (v26 > (int)v25 - 1 || *(void *)(*(void *)(v7 + 24) + 8 * v26) == 1) {
      uint64_t v46 = 0;
    }
    else {
      uint64_t v46 = *(void *)(*(void *)(v7 + 64) + 8 * v26);
    }
    uint64_t v27 = v25 - 3;
    goto LABEL_56;
  }
  if (v25 == 3)
  {
    uint64_t v27 = 0;
    uint64_t v46 = 0;
LABEL_56:
    if (v27 > (int)v25 - 1 || *(void *)(*(void *)(v7 + 24) + 8 * v27) == 1) {
      uint64_t v54 = 0;
    }
    else {
      uint64_t v54 = *(void *)(*(void *)(v7 + 64) + 8 * v27);
    }
    uint64_t v30 = v25 - 2;
    goto LABEL_61;
  }
  if (v25 >= 2)
  {
    uint64_t v30 = 0;
    uint64_t v54 = 0;
    uint64_t v46 = 0;
LABEL_61:
    if (v30 > (int)v25 - 1 || *(void *)(*(void *)(v7 + 24) + 8 * v30) == 1) {
      uint64_t v63 = 0;
    }
    else {
      uint64_t v63 = *(void *)(*(void *)(v7 + 64) + 8 * v30);
    }
    uint64_t v28 = v25 - 1;
    goto LABEL_66;
  }
  uint64_t v28 = 0;
  uint64_t v63 = 0;
  uint64_t v46 = 0;
  uint64_t v54 = 0;
  uint64_t v29 = 0;
  if (v25 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v28 <= (int)v25 - 1)
  {
    if (*(void *)(*(void *)(v7 + 24) + 8 * v28) != 1)
    {
      uint64_t v29 = *(void *)(*(void *)(v7 + 64) + 8 * v28);
      if (!*(unsigned char *)(v8 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v29 = 0;
LABEL_78:
    if (!*(unsigned char *)(v8 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v62 = 0;
    uint64_t v48 = 0;
    uint64_t v56 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v29 = 0;
  if (*(unsigned char *)(v8 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v9 - 1 || *(void *)(*(void *)(v8 + 24) + 8 * v15) == 1)
  {
    uint64_t v48 = 0;
    if (v17) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v48 = *(void *)(*(void *)(v8 + 64) + 8 * v15);
    if (v17) {
      goto LABEL_98;
    }
  }
  if (v13 > (int)v9 - 1 || *(void *)(*(void *)(v8 + 24) + 8 * v13) == 1)
  {
LABEL_98:
    uint64_t v56 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v56 = *(void *)(*(void *)(v8 + 64) + 8 * v13);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v12 <= (int)v9 - 1 && *(void *)(*(void *)(v8 + 24) + 8 * v12) != 1)
  {
    uint64_t v62 = *(void *)(*(void *)(v8 + 64) + 8 * v12);
    if (v9 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v31 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v62 = 0;
  if (v9 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v10 > (int)v9 - 1 || *(void *)(*(void *)(v8 + 24) + 8 * v10) == 1) {
    goto LABEL_80;
  }
  uint64_t v31 = *(void *)(*(void *)(v8 + 64) + 8 * v10);
LABEL_81:
  if (v49 >= 1)
  {
    uint64_t v32 = 0;
    uint64_t v53 = (_DWORD *)(**(void **)a3 + *(void *)(v6 + 40));
    uint64_t v52 = (__int32 *)(*(void *)(*(void *)a3 + 8) + *(void *)(v7 + 40));
    uint64_t v51 = (_WORD *)(**a4 + *(void *)(v8 + 40));
    do
    {
      uint64_t v50 = v32;
      if (v57 >= 1)
      {
        uint64_t v33 = 0;
        uint64_t v60 = v52;
        uint64_t v61 = v53;
        uint64_t v59 = v51;
        do
        {
          uint64_t v58 = v33;
          if (v66 >= 1)
          {
            uint64_t v34 = 0;
            uint64_t v35 = v60;
            uint64_t v36 = v61;
            uint64_t v37 = v59;
            do
            {
              uint64_t v67 = v34;
              uint64_t v38 = v65;
              uint64_t v39 = v36;
              uint64_t v40 = v35;
              uint64_t v41 = v37;
              if (v65 >= 1)
              {
                do
                {
                  LODWORD(_D0) = *v39;
                  _D1.i32[0] = *v40;
                  unint64_t v68 = vcvtq_f32_f16(_D1).u64[0];
                  unint64_t v69 = vcvtq_f32_f16(*(float16x4_t *)&_D0).u64[0];
                  *(float *)&_D0 = std::operator/[abi:nn180100]<float>((float *)&v69, (float *)&v68);
                  __asm
                  {
                    FCVT            H0, S0
                    FCVT            H1, S1
                  }
                  _WORD *v41 = LOWORD(_D0);
                  v41[1] = _D1.i16[0];
                  uint64_t v41 = (_WORD *)((char *)v41 + v31);
                  uint64_t v40 = (__int32 *)((char *)v40 + v29);
                  uint64_t v39 = (_DWORD *)((char *)v39 + v23);
                  --v38;
                }
                while (v38);
              }
              uint64_t v34 = v67 + 1;
              uint64_t v37 = (_WORD *)((char *)v37 + v62);
              uint64_t v35 = (__int32 *)((char *)v35 + v63);
              uint64_t v36 = (_DWORD *)((char *)v36 + v64);
            }
            while (v67 + 1 != v66);
          }
          uint64_t v33 = v58 + 1;
          uint64_t v59 = (_WORD *)((char *)v59 + v56);
          uint64_t v60 = (__int32 *)((char *)v60 + v54);
          uint64_t v61 = (_DWORD *)((char *)v61 + v55);
        }
        while (v58 + 1 != v57);
      }
      uint64_t v32 = v50 + 1;
      uint64_t v51 = (_WORD *)((char *)v51 + v48);
      uint64_t v52 = (__int32 *)((char *)v52 + v46);
      uint64_t v53 = (_DWORD *)((char *)v53 + v47);
    }
    while (v50 + 1 != v49);
  }
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<half,half,half,(mlir::mps::arithmeticOp)3>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v17 = 1;
    char v18 = 1;
LABEL_7:
    uint64_t v19 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v17 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v18 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v18 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v19 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v58 = v19;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v20 = 0;
    uint64_t v57 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v22 = *(void *)(v4 + 16);
  uint64_t v23 = v22 - 4;
  if (v22 >= 4)
  {
    if (v23 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t v57 = 0;
    }
    else {
      uint64_t v57 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v24 = v22 - 3;
    goto LABEL_26;
  }
  if (v22 == 3)
  {
    uint64_t v24 = 0;
    uint64_t v57 = 0;
LABEL_26:
    if (v24 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    }
    uint64_t v27 = v22 - 2;
    goto LABEL_31;
  }
  if (v22 < 2)
  {
    uint64_t v25 = 0;
    uint64_t v20 = 0;
    uint64_t v57 = 0;
    uint64_t result = 0;
    uint64_t v26 = 0;
    if (v22 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v27 = 0;
  uint64_t result = 0;
  uint64_t v57 = 0;
LABEL_31:
  if (v27 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v27) == 1) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = *(void *)(*(void *)(v4 + 64) + 8 * v27);
  }
  uint64_t v25 = v22 - 1;
LABEL_36:
  if (v25 > (int)v22 - 1)
  {
LABEL_37:
    uint64_t v26 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v31 = 0;
    uint64_t v56 = 0;
    uint64_t v32 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v25) != 1)
  {
    uint64_t v26 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v26 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v28 = *(void *)(v5 + 16);
  uint64_t v29 = v28 - 4;
  if (v28 >= 4)
  {
    if (v29 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v56 = 0;
    }
    else {
      uint64_t v56 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v30 = v28 - 3;
    goto LABEL_56;
  }
  if (v28 == 3)
  {
    uint64_t v30 = 0;
    uint64_t v56 = 0;
LABEL_56:
    if (v30 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v30) == 1) {
      uint64_t v32 = 0;
    }
    else {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v30);
    }
    uint64_t v35 = v28 - 2;
    goto LABEL_61;
  }
  if (v28 >= 2)
  {
    uint64_t v35 = 0;
    uint64_t v32 = 0;
    uint64_t v56 = 0;
LABEL_61:
    if (v35 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v35) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v35);
    }
    uint64_t v33 = v28 - 1;
    goto LABEL_66;
  }
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v56 = 0;
  uint64_t v32 = 0;
  uint64_t v34 = 0;
  if (v28 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v33 <= (int)v28 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v33) != 1)
    {
      uint64_t v34 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v34 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v38 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v34 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v36 = 0;
    if (v18) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v18) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v37 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v38 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v39 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v38 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v39 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v58 >= 1)
  {
    uint64_t v40 = 0;
    uint64_t v41 = (short float *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v42 = (short float *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v43 = (short float *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v17 >= 1)
      {
        uint64_t v44 = 0;
        uint64_t v45 = v41;
        uint64_t v46 = v42;
        uint64_t v47 = v43;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v48 = 0;
            uint64_t v49 = v45;
            uint64_t v50 = v46;
            uint64_t v51 = v47;
            do
            {
              uint64_t v52 = v10;
              uint64_t v53 = v49;
              uint64_t v54 = v50;
              uint64_t v55 = v51;
              if (v10 >= 1)
              {
                do
                {
                  short float *v55 = *v53 / *v54;
                  uint64_t v55 = (short float *)((char *)v55 + v39);
                  uint64_t v54 = (short float *)((char *)v54 + v34);
                  uint64_t v53 = (short float *)((char *)v53 + v26);
                  --v52;
                }
                while (v52);
              }
              ++v48;
              uint64_t v51 = (short float *)((char *)v51 + v38);
              uint64_t v50 = (short float *)((char *)v50 + v31);
              uint64_t v49 = (short float *)((char *)v49 + v20);
            }
            while (v48 != v13);
          }
          ++v44;
          uint64_t v47 = (short float *)((char *)v47 + v37);
          uint64_t v46 = (short float *)((char *)v46 + v32);
          uint64_t v45 = (short float *)((char *)v45 + result);
        }
        while (v44 != v17);
      }
      ++v40;
      uint64_t v43 = (short float *)((char *)v43 + v36);
      uint64_t v42 = (short float *)((char *)v42 + v56);
      uint64_t v41 = (short float *)((char *)v41 + v57);
    }
    while (v40 != v58);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<__emulated_bf16,__emulated_bf16,__emulated_bf16,(mlir::mps::arithmeticOp)3>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v59 = 1;
    char v17 = 1;
LABEL_7:
    uint64_t v18 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v59 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v17 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v17 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v58 = v18;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v19 = 0;
    uint64_t v56 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v21 = *(void *)(v4 + 16);
  uint64_t v22 = v21 - 4;
  if (v21 >= 4)
  {
    if (v22 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
      uint64_t v56 = 0;
    }
    else {
      uint64_t v56 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
    }
    uint64_t v23 = v21 - 3;
    goto LABEL_26;
  }
  if (v21 == 3)
  {
    uint64_t v23 = 0;
    uint64_t v56 = 0;
LABEL_26:
    if (v23 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v26 = v21 - 2;
    goto LABEL_31;
  }
  if (v21 < 2)
  {
    uint64_t v24 = 0;
    uint64_t v19 = 0;
    uint64_t v56 = 0;
    uint64_t result = 0;
    uint64_t v25 = 0;
    if (v21 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v26 = 0;
  uint64_t result = 0;
  uint64_t v56 = 0;
LABEL_31:
  if (v26 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v26) == 1) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = *(void *)(*(void *)(v4 + 64) + 8 * v26);
  }
  uint64_t v24 = v21 - 1;
LABEL_36:
  if (v24 > (int)v21 - 1)
  {
LABEL_37:
    uint64_t v25 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v30 = 0;
    uint64_t v55 = 0;
    uint64_t v31 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v24) != 1)
  {
    uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v25 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v27 = *(void *)(v5 + 16);
  uint64_t v28 = v27 - 4;
  if (v27 >= 4)
  {
    if (v28 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v29 = v27 - 3;
    goto LABEL_56;
  }
  if (v27 == 3)
  {
    uint64_t v29 = 0;
    uint64_t v55 = 0;
LABEL_56:
    if (v29 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v34 = v27 - 2;
    goto LABEL_61;
  }
  if (v27 >= 2)
  {
    uint64_t v34 = 0;
    uint64_t v31 = 0;
    uint64_t v55 = 0;
LABEL_61:
    if (v34 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v34) == 1) {
      uint64_t v30 = 0;
    }
    else {
      uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v34);
    }
    uint64_t v32 = v27 - 1;
    goto LABEL_66;
  }
  uint64_t v32 = 0;
  uint64_t v30 = 0;
  uint64_t v55 = 0;
  uint64_t v31 = 0;
  uint64_t v33 = 0;
  if (v27 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v32 <= (int)v27 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v32) != 1)
    {
      uint64_t v33 = *(void *)(*(void *)(v5 + 64) + 8 * v32);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v33 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v36 = 0;
    uint64_t v57 = 0;
    uint64_t v35 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v33 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v57 = 0;
    if (v17) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v57 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v17) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v35 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v35 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v37 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v36 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v58 >= 1)
  {
    uint64_t v38 = 0;
    uint64_t v39 = (unsigned __int16 *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v40 = (unsigned __int16 *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v41 = (_WORD *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v59 >= 1)
      {
        uint64_t v42 = 0;
        uint64_t v43 = v39;
        uint64_t v44 = v40;
        uint64_t v45 = v41;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v46 = 0;
            uint64_t v47 = v43;
            uint64_t v48 = v44;
            uint64_t v49 = v45;
            do
            {
              uint64_t v50 = v10;
              uint64_t v51 = v47;
              uint64_t v52 = v48;
              uint64_t v53 = v49;
              if (v10 >= 1)
              {
                do
                {
                  float v54 = COERCE_FLOAT(*v51 << 16) / COERCE_FLOAT(*v52 << 16);
                  _WORD *v53 = HIWORD(COERCE_UNSIGNED_INT(v54 + (float)(COERCE_FLOAT(LODWORD(v54) & 0xFF800000) * 0.0039062)));
                  uint64_t v53 = (_WORD *)((char *)v53 + v37);
                  uint64_t v52 = (unsigned __int16 *)((char *)v52 + v33);
                  uint64_t v51 = (unsigned __int16 *)((char *)v51 + v25);
                  --v50;
                }
                while (v50);
              }
              ++v46;
              uint64_t v49 = (_WORD *)((char *)v49 + v36);
              uint64_t v48 = (unsigned __int16 *)((char *)v48 + v30);
              uint64_t v47 = (unsigned __int16 *)((char *)v47 + v19);
            }
            while (v46 != v13);
          }
          ++v42;
          uint64_t v45 = (_WORD *)((char *)v45 + v35);
          uint64_t v44 = (unsigned __int16 *)((char *)v44 + v31);
          uint64_t v43 = (unsigned __int16 *)((char *)v43 + result);
        }
        while (v42 != v59);
      }
      ++v38;
      uint64_t v41 = (_WORD *)((char *)v41 + v57);
      uint64_t v40 = (unsigned __int16 *)((char *)v40 + v55);
      uint64_t v39 = (unsigned __int16 *)((char *)v39 + v56);
    }
    while (v38 != v58);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<long long,long long,long long,(mlir::mps::arithmeticOp)3>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v57 = 1;
    char v17 = 1;
LABEL_7:
    uint64_t v18 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v57 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v17 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v17 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v19 = 0;
    uint64_t v55 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v21 = *(void *)(v4 + 16);
  uint64_t v22 = v21 - 4;
  if (v21 >= 4)
  {
    if (v22 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
    }
    uint64_t v23 = v21 - 3;
    goto LABEL_26;
  }
  if (v21 == 3)
  {
    uint64_t v23 = 0;
    uint64_t v55 = 0;
LABEL_26:
    if (v23 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v26 = v21 - 2;
    goto LABEL_31;
  }
  if (v21 < 2)
  {
    uint64_t v24 = 0;
    uint64_t v19 = 0;
    uint64_t v55 = 0;
    uint64_t result = 0;
    uint64_t v25 = 0;
    if (v21 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v26 = 0;
  uint64_t result = 0;
  uint64_t v55 = 0;
LABEL_31:
  if (v26 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v26) == 1) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = *(void *)(*(void *)(v4 + 64) + 8 * v26);
  }
  uint64_t v24 = v21 - 1;
LABEL_36:
  if (v24 > (int)v21 - 1)
  {
LABEL_37:
    uint64_t v25 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v30 = 0;
    uint64_t v54 = 0;
    uint64_t v31 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v24) != 1)
  {
    uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v25 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v27 = *(void *)(v5 + 16);
  uint64_t v28 = v27 - 4;
  if (v27 >= 4)
  {
    if (v28 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v54 = 0;
    }
    else {
      uint64_t v54 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v29 = v27 - 3;
    goto LABEL_56;
  }
  if (v27 == 3)
  {
    uint64_t v29 = 0;
    uint64_t v54 = 0;
LABEL_56:
    if (v29 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v34 = v27 - 2;
    goto LABEL_61;
  }
  if (v27 >= 2)
  {
    uint64_t v34 = 0;
    uint64_t v31 = 0;
    uint64_t v54 = 0;
LABEL_61:
    if (v34 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v34) == 1) {
      uint64_t v30 = 0;
    }
    else {
      uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v34);
    }
    uint64_t v32 = v27 - 1;
    goto LABEL_66;
  }
  uint64_t v32 = 0;
  uint64_t v30 = 0;
  uint64_t v54 = 0;
  uint64_t v31 = 0;
  uint64_t v33 = 0;
  if (v27 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v32 <= (int)v27 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v32) != 1)
    {
      uint64_t v33 = *(void *)(*(void *)(v5 + 64) + 8 * v32);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v33 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v36 = 0;
    uint64_t v56 = 0;
    uint64_t v35 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v33 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v56 = 0;
    if (v17) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v56 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v17) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v35 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v35 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v37 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v36 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v18 >= 1)
  {
    uint64_t v38 = 0;
    uint64_t v39 = (void *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v40 = (uint64_t *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v41 = (uint64_t *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v57 >= 1)
      {
        uint64_t v42 = 0;
        uint64_t v43 = v39;
        uint64_t v44 = v40;
        uint64_t v45 = v41;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v46 = 0;
            uint64_t v47 = v43;
            uint64_t v48 = v44;
            uint64_t v49 = v45;
            do
            {
              uint64_t v50 = v10;
              uint64_t v51 = v47;
              uint64_t v52 = v48;
              uint64_t v53 = v49;
              if (v10 >= 1)
              {
                do
                {
                  uint64_t *v53 = *v51 / *v52;
                  uint64_t v53 = (uint64_t *)((char *)v53 + v37);
                  uint64_t v52 = (uint64_t *)((char *)v52 + v33);
                  uint64_t v51 = (void *)((char *)v51 + v25);
                  --v50;
                }
                while (v50);
              }
              ++v46;
              uint64_t v49 = (uint64_t *)((char *)v49 + v36);
              uint64_t v48 = (uint64_t *)((char *)v48 + v30);
              uint64_t v47 = (void *)((char *)v47 + v19);
            }
            while (v46 != v13);
          }
          ++v42;
          uint64_t v45 = (uint64_t *)((char *)v45 + v35);
          uint64_t v44 = (uint64_t *)((char *)v44 + v31);
          uint64_t v43 = (void *)((char *)v43 + result);
        }
        while (v42 != v57);
      }
      ++v38;
      uint64_t v41 = (uint64_t *)((char *)v41 + v56);
      uint64_t v40 = (uint64_t *)((char *)v40 + v54);
      uint64_t v39 = (void *)((char *)v39 + v55);
    }
    while (v38 != v18);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<int,int,int,(mlir::mps::arithmeticOp)3>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v57 = 1;
    char v17 = 1;
LABEL_7:
    uint64_t v18 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v57 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v17 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v17 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v19 = 0;
    uint64_t v55 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v21 = *(void *)(v4 + 16);
  uint64_t v22 = v21 - 4;
  if (v21 >= 4)
  {
    if (v22 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
    }
    uint64_t v23 = v21 - 3;
    goto LABEL_26;
  }
  if (v21 == 3)
  {
    uint64_t v23 = 0;
    uint64_t v55 = 0;
LABEL_26:
    if (v23 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v26 = v21 - 2;
    goto LABEL_31;
  }
  if (v21 < 2)
  {
    uint64_t v24 = 0;
    uint64_t v19 = 0;
    uint64_t v55 = 0;
    uint64_t result = 0;
    uint64_t v25 = 0;
    if (v21 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v26 = 0;
  uint64_t result = 0;
  uint64_t v55 = 0;
LABEL_31:
  if (v26 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v26) == 1) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = *(void *)(*(void *)(v4 + 64) + 8 * v26);
  }
  uint64_t v24 = v21 - 1;
LABEL_36:
  if (v24 > (int)v21 - 1)
  {
LABEL_37:
    uint64_t v25 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v30 = 0;
    uint64_t v54 = 0;
    uint64_t v31 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v24) != 1)
  {
    uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v25 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v27 = *(void *)(v5 + 16);
  uint64_t v28 = v27 - 4;
  if (v27 >= 4)
  {
    if (v28 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v54 = 0;
    }
    else {
      uint64_t v54 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v29 = v27 - 3;
    goto LABEL_56;
  }
  if (v27 == 3)
  {
    uint64_t v29 = 0;
    uint64_t v54 = 0;
LABEL_56:
    if (v29 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v34 = v27 - 2;
    goto LABEL_61;
  }
  if (v27 >= 2)
  {
    uint64_t v34 = 0;
    uint64_t v31 = 0;
    uint64_t v54 = 0;
LABEL_61:
    if (v34 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v34) == 1) {
      uint64_t v30 = 0;
    }
    else {
      uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v34);
    }
    uint64_t v32 = v27 - 1;
    goto LABEL_66;
  }
  uint64_t v32 = 0;
  uint64_t v30 = 0;
  uint64_t v54 = 0;
  uint64_t v31 = 0;
  uint64_t v33 = 0;
  if (v27 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v32 <= (int)v27 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v32) != 1)
    {
      uint64_t v33 = *(void *)(*(void *)(v5 + 64) + 8 * v32);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v33 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v36 = 0;
    uint64_t v56 = 0;
    uint64_t v35 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v33 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v56 = 0;
    if (v17) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v56 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v17) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v35 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v35 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v37 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v36 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v18 >= 1)
  {
    uint64_t v38 = 0;
    uint64_t v39 = (_DWORD *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v40 = (_DWORD *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v41 = (int *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v57 >= 1)
      {
        uint64_t v42 = 0;
        uint64_t v43 = v39;
        uint64_t v44 = v40;
        uint64_t v45 = v41;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v46 = 0;
            uint64_t v47 = v43;
            uint64_t v48 = v44;
            uint64_t v49 = v45;
            do
            {
              uint64_t v50 = v10;
              uint64_t v51 = v47;
              uint64_t v52 = v48;
              uint64_t v53 = v49;
              if (v10 >= 1)
              {
                do
                {
                  int *v53 = *v51 / *v52;
                  uint64_t v53 = (int *)((char *)v53 + v37);
                  uint64_t v52 = (_DWORD *)((char *)v52 + v33);
                  uint64_t v51 = (_DWORD *)((char *)v51 + v25);
                  --v50;
                }
                while (v50);
              }
              ++v46;
              uint64_t v49 = (int *)((char *)v49 + v36);
              uint64_t v48 = (_DWORD *)((char *)v48 + v30);
              uint64_t v47 = (_DWORD *)((char *)v47 + v19);
            }
            while (v46 != v13);
          }
          ++v42;
          uint64_t v45 = (int *)((char *)v45 + v35);
          uint64_t v44 = (_DWORD *)((char *)v44 + v31);
          uint64_t v43 = (_DWORD *)((char *)v43 + result);
        }
        while (v42 != v57);
      }
      ++v38;
      uint64_t v41 = (int *)((char *)v41 + v56);
      uint64_t v40 = (_DWORD *)((char *)v40 + v54);
      uint64_t v39 = (_DWORD *)((char *)v39 + v55);
    }
    while (v38 != v18);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<short,short,short,(mlir::mps::arithmeticOp)3>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v57 = 1;
    char v17 = 1;
LABEL_7:
    uint64_t v18 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v57 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v17 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v17 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v19 = 0;
    uint64_t v55 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v21 = *(void *)(v4 + 16);
  uint64_t v22 = v21 - 4;
  if (v21 >= 4)
  {
    if (v22 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
    }
    uint64_t v23 = v21 - 3;
    goto LABEL_26;
  }
  if (v21 == 3)
  {
    uint64_t v23 = 0;
    uint64_t v55 = 0;
LABEL_26:
    if (v23 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v26 = v21 - 2;
    goto LABEL_31;
  }
  if (v21 < 2)
  {
    uint64_t v24 = 0;
    uint64_t v19 = 0;
    uint64_t v55 = 0;
    uint64_t result = 0;
    uint64_t v25 = 0;
    if (v21 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v26 = 0;
  uint64_t result = 0;
  uint64_t v55 = 0;
LABEL_31:
  if (v26 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v26) == 1) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = *(void *)(*(void *)(v4 + 64) + 8 * v26);
  }
  uint64_t v24 = v21 - 1;
LABEL_36:
  if (v24 > (int)v21 - 1)
  {
LABEL_37:
    uint64_t v25 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v30 = 0;
    uint64_t v54 = 0;
    uint64_t v31 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v24) != 1)
  {
    uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v25 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v27 = *(void *)(v5 + 16);
  uint64_t v28 = v27 - 4;
  if (v27 >= 4)
  {
    if (v28 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v54 = 0;
    }
    else {
      uint64_t v54 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v29 = v27 - 3;
    goto LABEL_56;
  }
  if (v27 == 3)
  {
    uint64_t v29 = 0;
    uint64_t v54 = 0;
LABEL_56:
    if (v29 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v34 = v27 - 2;
    goto LABEL_61;
  }
  if (v27 >= 2)
  {
    uint64_t v34 = 0;
    uint64_t v31 = 0;
    uint64_t v54 = 0;
LABEL_61:
    if (v34 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v34) == 1) {
      uint64_t v30 = 0;
    }
    else {
      uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v34);
    }
    uint64_t v32 = v27 - 1;
    goto LABEL_66;
  }
  uint64_t v32 = 0;
  uint64_t v30 = 0;
  uint64_t v54 = 0;
  uint64_t v31 = 0;
  uint64_t v33 = 0;
  if (v27 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v32 <= (int)v27 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v32) != 1)
    {
      uint64_t v33 = *(void *)(*(void *)(v5 + 64) + 8 * v32);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v33 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v36 = 0;
    uint64_t v56 = 0;
    uint64_t v35 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v33 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v56 = 0;
    if (v17) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v56 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v17) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v35 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v35 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v37 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v36 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v18 >= 1)
  {
    uint64_t v38 = 0;
    uint64_t v39 = (__int16 *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v40 = (__int16 *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v41 = (_WORD *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v57 >= 1)
      {
        uint64_t v42 = 0;
        uint64_t v43 = v39;
        uint64_t v44 = v40;
        uint64_t v45 = v41;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v46 = 0;
            uint64_t v47 = v43;
            uint64_t v48 = v44;
            uint64_t v49 = v45;
            do
            {
              uint64_t v50 = v10;
              uint64_t v51 = v47;
              uint64_t v52 = v48;
              uint64_t v53 = v49;
              if (v10 >= 1)
              {
                do
                {
                  _WORD *v53 = *v51 / *v52;
                  uint64_t v53 = (_WORD *)((char *)v53 + v37);
                  uint64_t v52 = (__int16 *)((char *)v52 + v33);
                  uint64_t v51 = (__int16 *)((char *)v51 + v25);
                  --v50;
                }
                while (v50);
              }
              ++v46;
              uint64_t v49 = (_WORD *)((char *)v49 + v36);
              uint64_t v48 = (__int16 *)((char *)v48 + v30);
              uint64_t v47 = (__int16 *)((char *)v47 + v19);
            }
            while (v46 != v13);
          }
          ++v42;
          uint64_t v45 = (_WORD *)((char *)v45 + v35);
          uint64_t v44 = (__int16 *)((char *)v44 + v31);
          uint64_t v43 = (__int16 *)((char *)v43 + result);
        }
        while (v42 != v57);
      }
      ++v38;
      uint64_t v41 = (_WORD *)((char *)v41 + v56);
      uint64_t v40 = (__int16 *)((char *)v40 + v54);
      uint64_t v39 = (__int16 *)((char *)v39 + v55);
    }
    while (v38 != v18);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<signed char,signed char,signed char,(mlir::mps::arithmeticOp)3>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v57 = 1;
    char v17 = 1;
LABEL_7:
    uint64_t v18 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v57 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v17 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v17 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v19 = 0;
    uint64_t v55 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v21 = *(void *)(v4 + 16);
  uint64_t v22 = v21 - 4;
  if (v21 >= 4)
  {
    if (v22 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
    }
    uint64_t v23 = v21 - 3;
    goto LABEL_26;
  }
  if (v21 == 3)
  {
    uint64_t v23 = 0;
    uint64_t v55 = 0;
LABEL_26:
    if (v23 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v26 = v21 - 2;
    goto LABEL_31;
  }
  if (v21 < 2)
  {
    uint64_t v24 = 0;
    uint64_t v19 = 0;
    uint64_t v55 = 0;
    uint64_t result = 0;
    uint64_t v25 = 0;
    if (v21 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v26 = 0;
  uint64_t result = 0;
  uint64_t v55 = 0;
LABEL_31:
  if (v26 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v26) == 1) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = *(void *)(*(void *)(v4 + 64) + 8 * v26);
  }
  uint64_t v24 = v21 - 1;
LABEL_36:
  if (v24 > (int)v21 - 1)
  {
LABEL_37:
    uint64_t v25 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v30 = 0;
    uint64_t v54 = 0;
    uint64_t v31 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v24) != 1)
  {
    uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v25 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v27 = *(void *)(v5 + 16);
  uint64_t v28 = v27 - 4;
  if (v27 >= 4)
  {
    if (v28 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v54 = 0;
    }
    else {
      uint64_t v54 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v29 = v27 - 3;
    goto LABEL_56;
  }
  if (v27 == 3)
  {
    uint64_t v29 = 0;
    uint64_t v54 = 0;
LABEL_56:
    if (v29 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v34 = v27 - 2;
    goto LABEL_61;
  }
  if (v27 >= 2)
  {
    uint64_t v34 = 0;
    uint64_t v31 = 0;
    uint64_t v54 = 0;
LABEL_61:
    if (v34 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v34) == 1) {
      uint64_t v30 = 0;
    }
    else {
      uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v34);
    }
    uint64_t v32 = v27 - 1;
    goto LABEL_66;
  }
  uint64_t v32 = 0;
  uint64_t v30 = 0;
  uint64_t v54 = 0;
  uint64_t v31 = 0;
  uint64_t v33 = 0;
  if (v27 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v32 <= (int)v27 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v32) != 1)
    {
      uint64_t v33 = *(void *)(*(void *)(v5 + 64) + 8 * v32);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v33 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v36 = 0;
    uint64_t v56 = 0;
    uint64_t v35 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v33 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v56 = 0;
    if (v17) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v56 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v17) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v35 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v35 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v37 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v36 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v18 >= 1)
  {
    uint64_t v38 = 0;
    uint64_t v39 = (char *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v40 = (char *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v41 = (unsigned char *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v57 >= 1)
      {
        uint64_t v42 = 0;
        uint64_t v43 = v39;
        uint64_t v44 = v40;
        uint64_t v45 = v41;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v46 = 0;
            uint64_t v47 = v43;
            uint64_t v48 = v44;
            uint64_t v49 = v45;
            do
            {
              uint64_t v50 = v10;
              uint64_t v51 = v47;
              uint64_t v52 = v48;
              uint64_t v53 = v49;
              if (v10 >= 1)
              {
                do
                {
                  unsigned char *v53 = *v51 / *v52;
                  v53 += v37;
                  v52 += v33;
                  v51 += v25;
                  --v50;
                }
                while (v50);
              }
              ++v46;
              v49 += v36;
              v48 += v30;
              v47 += v19;
            }
            while (v46 != v13);
          }
          ++v42;
          v45 += v35;
          v44 += v31;
          v43 += result;
        }
        while (v42 != v57);
      }
      ++v38;
      v41 += v56;
      v40 += v54;
      v39 += v55;
    }
    while (v38 != v18);
  }
  return result;
}

float std::operator/[abi:nn180100]<float>(float *a1, float *a2)
{
  float v10 = *a1;
  float v9 = a1[1];
  float v11 = a2[1];
  float v13 = *a2;
  float v2 = logb(fmaxf(fabsf(*a2), fabsf(v11)));
  if ((LODWORD(v2) & 0x7FFFFFFFu) > 0x7F7FFFFF)
  {
    int v3 = 0;
    float v5 = v11;
  }
  else
  {
    int v3 = (int)v2;
    float v4 = scalbn(v13, -(int)v2);
    float v13 = v4;
    float v5 = scalbn(v11, -(int)v2);
  }
  float v12 = v5;
  float v6 = (float)(v5 * v5) + (float)(v13 * v13);
  float v7 = scalbn((float)((float)((float)(v9 * v5) + (float)(v10 * v13)) / v6), -v3);
  scalbn((float)((float)((float)(v9 * v13) - (float)(v10 * v12)) / v6), -v3);
  return v7;
}

void mlir::mps::arithmeticBinaryTileBaseKernel<complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)4>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v5 = **a1;
  uint64_t v4 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v10 = v7 - 2;
    uint64_t v68 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v68 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v7 - 3;
    uint64_t v69 = 1;
    char v12 = 1;
LABEL_6:
    uint64_t v13 = v7 - 4;
    char v14 = 1;
    uint64_t v60 = 1;
    char v15 = 1;
LABEL_7:
    uint64_t v16 = 1;
    goto LABEL_8;
  }
  uint64_t v10 = v7 - 2;
  uint64_t v69 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v10 = 0;
    char v12 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v7 - 3;
  uint64_t v60 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v12 = 0;
    uint64_t v11 = 0;
    char v15 = 0;
    uint64_t v13 = -1;
    uint64_t v10 = 1;
    char v14 = 1;
    goto LABEL_7;
  }
  char v14 = 0;
  char v12 = 0;
  char v15 = 0;
  uint64_t v13 = v7 - 4;
  uint64_t v16 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v52 = v16;
  if (*(unsigned char *)(v5 + 58))
  {
    uint64_t v67 = 0;
    uint64_t v50 = 0;
    uint64_t v58 = 0;
    goto LABEL_37;
  }
  uint64_t v17 = *(void *)(v5 + 16);
  uint64_t v18 = v17 - 4;
  if (v17 >= 4)
  {
    if (v18 > (int)v17 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v18) == 1) {
      uint64_t v50 = 0;
    }
    else {
      uint64_t v50 = *(void *)(*(void *)(v5 + 64) + 8 * v18);
    }
    uint64_t v19 = v17 - 3;
    goto LABEL_26;
  }
  if (v17 == 3)
  {
    uint64_t v19 = 0;
    uint64_t v50 = 0;
LABEL_26:
    if (v19 > (int)v17 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v19) == 1) {
      uint64_t v58 = 0;
    }
    else {
      uint64_t v58 = *(void *)(*(void *)(v5 + 64) + 8 * v19);
    }
    uint64_t v21 = v17 - 2;
    goto LABEL_31;
  }
  if (v17 < 2)
  {
    uint64_t v20 = 0;
    uint64_t v67 = 0;
    uint64_t v50 = 0;
    uint64_t v58 = 0;
    uint64_t v70 = 0;
    if (v17 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v21 = 0;
  uint64_t v58 = 0;
  uint64_t v50 = 0;
LABEL_31:
  if (v21 > (int)v17 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v21) == 1) {
    uint64_t v67 = 0;
  }
  else {
    uint64_t v67 = *(void *)(*(void *)(v5 + 64) + 8 * v21);
  }
  uint64_t v20 = v17 - 1;
LABEL_36:
  if (v20 > (int)v17 - 1)
  {
LABEL_37:
    uint64_t v70 = 0;
    if (!*(unsigned char *)(v4 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v66 = 0;
    uint64_t v49 = 0;
    uint64_t v57 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v5 + 24) + 8 * v20) != 1)
  {
    uint64_t v70 = *(void *)(*(void *)(v5 + 64) + 8 * v20);
    if (*(unsigned char *)(v4 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v70 = 0;
LABEL_46:
  if (*(unsigned char *)(v4 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v22 = *(void *)(v4 + 16);
  uint64_t v23 = v22 - 4;
  if (v22 >= 4)
  {
    if (v23 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t v49 = 0;
    }
    else {
      uint64_t v49 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v24 = v22 - 3;
    goto LABEL_56;
  }
  if (v22 == 3)
  {
    uint64_t v24 = 0;
    uint64_t v49 = 0;
LABEL_56:
    if (v24 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1) {
      uint64_t v57 = 0;
    }
    else {
      uint64_t v57 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    }
    uint64_t v27 = v22 - 2;
    goto LABEL_61;
  }
  if (v22 >= 2)
  {
    uint64_t v27 = 0;
    uint64_t v57 = 0;
    uint64_t v49 = 0;
LABEL_61:
    if (v27 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v27) == 1) {
      uint64_t v66 = 0;
    }
    else {
      uint64_t v66 = *(void *)(*(void *)(v4 + 64) + 8 * v27);
    }
    uint64_t v25 = v22 - 1;
    goto LABEL_66;
  }
  uint64_t v25 = 0;
  uint64_t v66 = 0;
  uint64_t v49 = 0;
  uint64_t v57 = 0;
  uint64_t v26 = 0;
  if (v22 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v25 <= (int)v22 - 1)
  {
    if (*(void *)(*(void *)(v4 + 24) + 8 * v25) != 1)
    {
      uint64_t v26 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v26 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v65 = 0;
    uint64_t v51 = 0;
    uint64_t v59 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v26 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v14 & 1) != 0 || v13 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v13) == 1)
  {
    uint64_t v51 = 0;
    if (v15) {
      goto LABEL_110;
    }
  }
  else
  {
    uint64_t v51 = *(void *)(*(void *)(v6 + 64) + 8 * v13);
    if (v15) {
      goto LABEL_110;
    }
  }
  if (v11 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v11) == 1)
  {
LABEL_110:
    uint64_t v59 = 0;
    if (v12) {
      goto LABEL_113;
    }
    goto LABEL_111;
  }
  uint64_t v59 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
  if (v12) {
    goto LABEL_113;
  }
LABEL_111:
  if (v10 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v10) != 1)
  {
    uint64_t v65 = *(void *)(*(void *)(v6 + 64) + 8 * v10);
    if (v7 >= 1) {
      goto LABEL_114;
    }
LABEL_80:
    uint64_t v28 = 0;
    goto LABEL_81;
  }
LABEL_113:
  uint64_t v65 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_114:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v28 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v52 >= 1)
  {
    uint64_t v29 = 0;
    uint64_t v56 = (float *)(**(void **)a3 + *(void *)(v5 + 40));
    uint64_t v55 = (uint64_t *)(*(void *)(*(void *)a3 + 8) + *(void *)(v4 + 40));
    uint64_t v54 = **a4 + *(void *)(v6 + 40);
    while (1)
    {
      uint64_t v53 = v29;
      if (v60 >= 1) {
        break;
      }
LABEL_83:
      uint64_t v29 = v53 + 1;
      v54 += v51;
      uint64_t v55 = (uint64_t *)((char *)v55 + v49);
      uint64_t v56 = (float *)((char *)v56 + v50);
      if (v53 + 1 == v52) {
        return;
      }
    }
    uint64_t v30 = 0;
    uint64_t v63 = v55;
    uint64_t v64 = v56;
    uint64_t v62 = v54;
    while (1)
    {
      uint64_t v61 = v30;
      if (v69 >= 1) {
        break;
      }
LABEL_86:
      uint64_t v30 = v61 + 1;
      v62 += v59;
      uint64_t v63 = (uint64_t *)((char *)v63 + v57);
      uint64_t v64 = (float *)((char *)v64 + v58);
      if (v61 + 1 == v60) {
        goto LABEL_83;
      }
    }
    uint64_t v31 = 0;
    uint64_t v33 = v63;
    uint64_t v32 = v64;
    uint64_t v34 = v62;
    while (1)
    {
      uint64_t v35 = v68;
      uint64_t v36 = v32;
      uint64_t v37 = v33;
      uint64_t v38 = v34;
      if (v68 >= 1) {
        break;
      }
LABEL_89:
      ++v31;
      v34 += v65;
      uint64_t v33 = (uint64_t *)((char *)v33 + v66);
      uint64_t v32 = (float *)((char *)v32 + v67);
      if (v31 == v69) {
        goto LABEL_86;
      }
    }
    while (1)
    {
      float v42 = *v36;
      float v43 = v36[1];
      uint64_t v73 = *v37;
      float v44 = hypotf(v42, v43);
      float v45 = logf(v44);
      float v46 = atan2f(v43, v42);
      v74[0] = v45;
      v74[1] = v46;
      float v39 = std::operator*[abi:nn180100]<float>((float *)&v73, v74);
      if (*(float *)v41.i32 == 0.0)
      {
        int8x16_t v71 = v41;
        float v39 = expf(v39);
        v41.i64[0] = 0;
        v40.i64[0] = 0x8000000080000000;
        v40.i64[1] = 0x8000000080000000;
        v41.i32[0] = vbslq_s8(v40, v41, v71).u32[0];
      }
      else
      {
        if (fabsf(v39) == INFINITY)
        {
          if (v39 >= 0.0)
          {
            if ((v41.i32[0] & 0x7FFFFFFFu) >= 0x7F800000)
            {
              if (fabsf(*(float *)v41.i32) == INFINITY) {
                *(float *)v41.i32 = NAN;
              }
              goto LABEL_93;
            }
          }
          else if ((v41.i32[0] & 0x7FFFFFFFu) >= 0x7F800000)
          {
            *(float *)v41.i32 = 1.0;
          }
        }
        float v72 = *(float *)v41.i32;
        float v47 = expf(v39);
        __float2 v48 = __sincosf_stret(v72);
        float v39 = v47 * v48.__cosval;
        *(float *)v41.i32 = v47 * v48.__sinval;
      }
LABEL_93:
      *(float *)uint64_t v38 = v39;
      *(_DWORD *)(v38 + 4) = v41.i32[0];
      v38 += v28;
      uint64_t v37 = (uint64_t *)((char *)v37 + v26);
      uint64_t v36 = (float *)((char *)v36 + v70);
      if (!--v35) {
        goto LABEL_89;
      }
    }
  }
}

void mlir::mps::arithmeticBinaryTileBaseKernel<float,float,float,(mlir::mps::arithmeticOp)4>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v10 = v7 - 2;
    uint64_t v59 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v59 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v7 - 3;
    uint64_t v60 = 1;
    char v12 = 1;
LABEL_6:
    uint64_t v13 = v7 - 4;
    char v14 = 1;
    uint64_t v51 = 1;
    char v15 = 1;
LABEL_7:
    uint64_t v16 = 1;
    goto LABEL_8;
  }
  uint64_t v10 = v7 - 2;
  uint64_t v60 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v10 = 0;
    char v12 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v7 - 3;
  uint64_t v51 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v12 = 0;
    uint64_t v11 = 0;
    char v15 = 0;
    uint64_t v13 = -1;
    uint64_t v10 = 1;
    char v14 = 1;
    goto LABEL_7;
  }
  char v14 = 0;
  char v12 = 0;
  char v15 = 0;
  uint64_t v13 = v7 - 4;
  uint64_t v16 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v43 = v16;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v58 = 0;
    uint64_t v41 = 0;
    uint64_t v49 = 0;
    goto LABEL_37;
  }
  uint64_t v17 = *(void *)(v4 + 16);
  uint64_t v18 = v17 - 4;
  if (v17 >= 4)
  {
    if (v18 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v18) == 1) {
      uint64_t v41 = 0;
    }
    else {
      uint64_t v41 = *(void *)(*(void *)(v4 + 64) + 8 * v18);
    }
    uint64_t v19 = v17 - 3;
    goto LABEL_26;
  }
  if (v17 == 3)
  {
    uint64_t v19 = 0;
    uint64_t v41 = 0;
LABEL_26:
    if (v19 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v19) == 1) {
      uint64_t v49 = 0;
    }
    else {
      uint64_t v49 = *(void *)(*(void *)(v4 + 64) + 8 * v19);
    }
    uint64_t v22 = v17 - 2;
    goto LABEL_31;
  }
  if (v17 < 2)
  {
    uint64_t v20 = 0;
    uint64_t v58 = 0;
    uint64_t v41 = 0;
    uint64_t v49 = 0;
    uint64_t v21 = 0;
    if (v17 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v22 = 0;
  uint64_t v49 = 0;
  uint64_t v41 = 0;
LABEL_31:
  if (v22 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
    uint64_t v58 = 0;
  }
  else {
    uint64_t v58 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
  }
  uint64_t v20 = v17 - 1;
LABEL_36:
  if (v20 > (int)v17 - 1)
  {
LABEL_37:
    uint64_t v21 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v57 = 0;
    uint64_t v40 = 0;
    uint64_t v48 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v20) != 1)
  {
    uint64_t v21 = *(void *)(*(void *)(v4 + 64) + 8 * v20);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v21 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v23 = *(void *)(v5 + 16);
  uint64_t v24 = v23 - 4;
  if (v23 >= 4)
  {
    if (v24 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v24) == 1) {
      uint64_t v40 = 0;
    }
    else {
      uint64_t v40 = *(void *)(*(void *)(v5 + 64) + 8 * v24);
    }
    uint64_t v25 = v23 - 3;
    goto LABEL_56;
  }
  if (v23 == 3)
  {
    uint64_t v25 = 0;
    uint64_t v40 = 0;
LABEL_56:
    if (v25 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v25) == 1) {
      uint64_t v48 = 0;
    }
    else {
      uint64_t v48 = *(void *)(*(void *)(v5 + 64) + 8 * v25);
    }
    uint64_t v28 = v23 - 2;
    goto LABEL_61;
  }
  if (v23 >= 2)
  {
    uint64_t v28 = 0;
    uint64_t v48 = 0;
    uint64_t v40 = 0;
LABEL_61:
    if (v28 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v57 = 0;
    }
    else {
      uint64_t v57 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v26 = v23 - 1;
    goto LABEL_66;
  }
  uint64_t v26 = 0;
  uint64_t v57 = 0;
  uint64_t v40 = 0;
  uint64_t v48 = 0;
  uint64_t v27 = 0;
  if (v23 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v26 <= (int)v23 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v26) != 1)
    {
      uint64_t v27 = *(void *)(*(void *)(v5 + 64) + 8 * v26);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v27 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v56 = 0;
    uint64_t v42 = 0;
    uint64_t v50 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v27 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v14 & 1) != 0 || v13 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v13) == 1)
  {
    uint64_t v42 = 0;
    if (v15) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v42 = *(void *)(*(void *)(v6 + 64) + 8 * v13);
    if (v15) {
      goto LABEL_98;
    }
  }
  if (v11 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v11) == 1)
  {
LABEL_98:
    uint64_t v50 = 0;
    if (v12) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v50 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
  if (v12) {
    goto LABEL_101;
  }
LABEL_99:
  if (v10 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v10) != 1)
  {
    uint64_t v56 = *(void *)(*(void *)(v6 + 64) + 8 * v10);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v29 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v56 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v29 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v43 >= 1)
  {
    uint64_t v30 = 0;
    float v47 = (float *)(**(void **)a3 + *(void *)(v4 + 40));
    float v46 = (float *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    float v45 = (float *)(**a4 + *(void *)(v6 + 40));
    do
    {
      uint64_t v44 = v30;
      if (v51 >= 1)
      {
        uint64_t v31 = 0;
        uint64_t v54 = v46;
        uint64_t v55 = v47;
        uint64_t v53 = v45;
        do
        {
          uint64_t v52 = v31;
          if (v60 >= 1)
          {
            uint64_t v32 = 0;
            uint64_t v33 = v54;
            uint64_t v34 = v55;
            uint64_t v35 = v53;
            do
            {
              uint64_t v61 = v32;
              uint64_t v36 = v59;
              uint64_t v37 = v34;
              uint64_t v38 = v33;
              float v39 = v35;
              if (v59 >= 1)
              {
                do
                {
                  float *v39 = powf(*v37, *v38);
                  float v39 = (float *)((char *)v39 + v29);
                  uint64_t v38 = (float *)((char *)v38 + v27);
                  uint64_t v37 = (float *)((char *)v37 + v21);
                  --v36;
                }
                while (v36);
              }
              uint64_t v32 = v61 + 1;
              uint64_t v35 = (float *)((char *)v35 + v56);
              uint64_t v33 = (float *)((char *)v33 + v57);
              uint64_t v34 = (float *)((char *)v34 + v58);
            }
            while (v61 + 1 != v60);
          }
          uint64_t v31 = v52 + 1;
          uint64_t v53 = (float *)((char *)v53 + v50);
          uint64_t v54 = (float *)((char *)v54 + v48);
          uint64_t v55 = (float *)((char *)v55 + v49);
        }
        while (v52 + 1 != v51);
      }
      uint64_t v30 = v44 + 1;
      float v45 = (float *)((char *)v45 + v42);
      float v46 = (float *)((char *)v46 + v40);
      float v47 = (float *)((char *)v47 + v41);
    }
    while (v44 + 1 != v43);
  }
}

void mlir::mps::arithmeticBinaryTileBaseKernel<complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)4>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v5 = **a1;
  uint64_t v4 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v10 = v7 - 2;
    uint64_t v74 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v74 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v7 - 3;
    uint64_t v75 = 1;
    char v12 = 1;
LABEL_6:
    uint64_t v13 = v7 - 4;
    char v14 = 1;
    uint64_t v66 = 1;
    char v15 = 1;
LABEL_7:
    uint64_t v16 = 1;
    goto LABEL_8;
  }
  uint64_t v10 = v7 - 2;
  uint64_t v75 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v10 = 0;
    char v12 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v7 - 3;
  uint64_t v66 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v12 = 0;
    uint64_t v11 = 0;
    char v15 = 0;
    uint64_t v13 = -1;
    uint64_t v10 = 1;
    char v14 = 1;
    goto LABEL_7;
  }
  char v14 = 0;
  char v12 = 0;
  char v15 = 0;
  uint64_t v13 = v7 - 4;
  uint64_t v16 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v58 = v16;
  if (*(unsigned char *)(v5 + 58))
  {
    uint64_t v73 = 0;
    uint64_t v56 = 0;
    uint64_t v64 = 0;
    goto LABEL_37;
  }
  uint64_t v17 = *(void *)(v5 + 16);
  uint64_t v18 = v17 - 4;
  if (v17 >= 4)
  {
    if (v18 > (int)v17 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v18) == 1) {
      uint64_t v56 = 0;
    }
    else {
      uint64_t v56 = *(void *)(*(void *)(v5 + 64) + 8 * v18);
    }
    uint64_t v19 = v17 - 3;
    goto LABEL_26;
  }
  if (v17 == 3)
  {
    uint64_t v19 = 0;
    uint64_t v56 = 0;
LABEL_26:
    if (v19 > (int)v17 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v19) == 1) {
      uint64_t v64 = 0;
    }
    else {
      uint64_t v64 = *(void *)(*(void *)(v5 + 64) + 8 * v19);
    }
    uint64_t v21 = v17 - 2;
    goto LABEL_31;
  }
  if (v17 < 2)
  {
    uint64_t v20 = 0;
    uint64_t v73 = 0;
    uint64_t v56 = 0;
    uint64_t v64 = 0;
    uint64_t v76 = 0;
    if (v17 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v21 = 0;
  uint64_t v64 = 0;
  uint64_t v56 = 0;
LABEL_31:
  if (v21 > (int)v17 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v21) == 1) {
    uint64_t v73 = 0;
  }
  else {
    uint64_t v73 = *(void *)(*(void *)(v5 + 64) + 8 * v21);
  }
  uint64_t v20 = v17 - 1;
LABEL_36:
  if (v20 > (int)v17 - 1)
  {
LABEL_37:
    uint64_t v76 = 0;
    if (!*(unsigned char *)(v4 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v72 = 0;
    uint64_t v55 = 0;
    uint64_t v63 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v5 + 24) + 8 * v20) != 1)
  {
    uint64_t v76 = *(void *)(*(void *)(v5 + 64) + 8 * v20);
    if (*(unsigned char *)(v4 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v76 = 0;
LABEL_46:
  if (*(unsigned char *)(v4 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v22 = *(void *)(v4 + 16);
  uint64_t v23 = v22 - 4;
  if (v22 >= 4)
  {
    if (v23 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v24 = v22 - 3;
    goto LABEL_56;
  }
  if (v22 == 3)
  {
    uint64_t v24 = 0;
    uint64_t v55 = 0;
LABEL_56:
    if (v24 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1) {
      uint64_t v63 = 0;
    }
    else {
      uint64_t v63 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    }
    uint64_t v27 = v22 - 2;
    goto LABEL_61;
  }
  if (v22 >= 2)
  {
    uint64_t v27 = 0;
    uint64_t v63 = 0;
    uint64_t v55 = 0;
LABEL_61:
    if (v27 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v27) == 1) {
      uint64_t v72 = 0;
    }
    else {
      uint64_t v72 = *(void *)(*(void *)(v4 + 64) + 8 * v27);
    }
    uint64_t v25 = v22 - 1;
    goto LABEL_66;
  }
  uint64_t v25 = 0;
  uint64_t v72 = 0;
  uint64_t v55 = 0;
  uint64_t v63 = 0;
  uint64_t v26 = 0;
  if (v22 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v25 <= (int)v22 - 1)
  {
    if (*(void *)(*(void *)(v4 + 24) + 8 * v25) != 1)
    {
      uint64_t v26 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v26 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v71 = 0;
    uint64_t v57 = 0;
    uint64_t v65 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v26 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v14 & 1) != 0 || v13 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v13) == 1)
  {
    uint64_t v57 = 0;
    if (v15) {
      goto LABEL_110;
    }
  }
  else
  {
    uint64_t v57 = *(void *)(*(void *)(v6 + 64) + 8 * v13);
    if (v15) {
      goto LABEL_110;
    }
  }
  if (v11 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v11) == 1)
  {
LABEL_110:
    uint64_t v65 = 0;
    if (v12) {
      goto LABEL_113;
    }
    goto LABEL_111;
  }
  uint64_t v65 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
  if (v12) {
    goto LABEL_113;
  }
LABEL_111:
  if (v10 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v10) != 1)
  {
    uint64_t v71 = *(void *)(*(void *)(v6 + 64) + 8 * v10);
    if (v7 >= 1) {
      goto LABEL_114;
    }
LABEL_80:
    uint64_t v28 = 0;
    goto LABEL_81;
  }
LABEL_113:
  uint64_t v71 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_114:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v28 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v58 >= 1)
  {
    uint64_t v29 = 0;
    uint64_t v62 = (__int16 *)(**(void **)a3 + *(void *)(v5 + 40));
    uint64_t v61 = (uint64_t *)(*(void *)(*(void *)a3 + 8) + *(void *)(v4 + 40));
    uint64_t v60 = **a4 + *(void *)(v6 + 40);
    while (1)
    {
      uint64_t v59 = v29;
      if (v66 >= 1) {
        break;
      }
LABEL_83:
      uint64_t v29 = v59 + 1;
      v60 += v57;
      uint64_t v61 = (uint64_t *)((char *)v61 + v55);
      uint64_t v62 = (__int16 *)((char *)v62 + v56);
      if (v59 + 1 == v58) {
        return;
      }
    }
    uint64_t v30 = 0;
    uint64_t v69 = v61;
    uint64_t v70 = v62;
    uint64_t v68 = v60;
    while (1)
    {
      uint64_t v67 = v30;
      if (v75 >= 1) {
        break;
      }
LABEL_86:
      uint64_t v30 = v67 + 1;
      v68 += v65;
      uint64_t v69 = (uint64_t *)((char *)v69 + v63);
      uint64_t v70 = (__int16 *)((char *)v70 + v64);
      if (v67 + 1 == v66) {
        goto LABEL_83;
      }
    }
    uint64_t v31 = 0;
    uint64_t v33 = v69;
    uint64_t v32 = v70;
    uint64_t v34 = v68;
    while (1)
    {
      uint64_t v35 = v74;
      uint64_t v36 = v32;
      uint64_t v37 = v33;
      uint64_t v38 = v34;
      if (v74 >= 1) {
        break;
      }
LABEL_89:
      ++v31;
      v34 += v71;
      uint64_t v33 = (uint64_t *)((char *)v33 + v72);
      uint64_t v32 = (__int16 *)((char *)v32 + v73);
      if (v31 == v75) {
        goto LABEL_86;
      }
    }
    while (1)
    {
      _H0 = *v36;
      __asm { FCVT            S8, H0 }
      _H0 = v36[1];
      __asm { FCVT            S9, H0 }
      uint64_t v79 = *v37;
      float v50 = hypotf(_S8, _S9);
      float v51 = logf(v50);
      float v52 = atan2f(_S9, _S8);
      v80[0] = v51;
      v80[1] = v52;
      float v39 = std::operator*[abi:nn180100]<float>((float *)&v79, v80);
      if (*(float *)v41.i32 == 0.0)
      {
        int8x16_t v77 = v41;
        float v39 = expf(v39);
        v41.i64[0] = 0;
        v40.i64[0] = 0x8000000080000000;
        v40.i64[1] = 0x8000000080000000;
        v41.i32[0] = vbslq_s8(v40, v41, v77).u32[0];
      }
      else
      {
        if (fabsf(v39) == INFINITY)
        {
          if (v39 >= 0.0)
          {
            if ((v41.i32[0] & 0x7FFFFFFFu) >= 0x7F800000)
            {
              if (fabsf(*(float *)v41.i32) == INFINITY) {
                *(float *)v41.i32 = NAN;
              }
              goto LABEL_93;
            }
          }
          else if ((v41.i32[0] & 0x7FFFFFFFu) >= 0x7F800000)
          {
            *(float *)v41.i32 = 1.0;
          }
        }
        float v78 = *(float *)v41.i32;
        float v53 = expf(v39);
        __float2 v54 = __sincosf_stret(v78);
        float v39 = v53 * v54.__cosval;
        *(float *)v41.i32 = v53 * v54.__sinval;
      }
LABEL_93:
      *(float *)uint64_t v38 = v39;
      *(_DWORD *)(v38 + 4) = v41.i32[0];
      v38 += v28;
      uint64_t v37 = (uint64_t *)((char *)v37 + v26);
      uint64_t v36 = (__int16 *)((char *)v36 + v76);
      if (!--v35) {
        goto LABEL_89;
      }
    }
  }
}

void mlir::mps::arithmeticBinaryTileBaseKernel<half,float,float,(mlir::mps::arithmeticOp)4>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v10 = v7 - 2;
    uint64_t v65 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v65 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v7 - 3;
    uint64_t v66 = 1;
    char v12 = 1;
LABEL_6:
    uint64_t v13 = v7 - 4;
    char v14 = 1;
    uint64_t v57 = 1;
    char v15 = 1;
LABEL_7:
    uint64_t v16 = 1;
    goto LABEL_8;
  }
  uint64_t v10 = v7 - 2;
  uint64_t v66 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v10 = 0;
    char v12 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v7 - 3;
  uint64_t v57 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v12 = 0;
    uint64_t v11 = 0;
    char v15 = 0;
    uint64_t v13 = -1;
    uint64_t v10 = 1;
    char v14 = 1;
    goto LABEL_7;
  }
  char v14 = 0;
  char v12 = 0;
  char v15 = 0;
  uint64_t v13 = v7 - 4;
  uint64_t v16 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v49 = v16;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v64 = 0;
    uint64_t v47 = 0;
    uint64_t v55 = 0;
    goto LABEL_37;
  }
  uint64_t v17 = *(void *)(v4 + 16);
  uint64_t v18 = v17 - 4;
  if (v17 >= 4)
  {
    if (v18 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v18) == 1) {
      uint64_t v47 = 0;
    }
    else {
      uint64_t v47 = *(void *)(*(void *)(v4 + 64) + 8 * v18);
    }
    uint64_t v19 = v17 - 3;
    goto LABEL_26;
  }
  if (v17 == 3)
  {
    uint64_t v19 = 0;
    uint64_t v47 = 0;
LABEL_26:
    if (v19 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v19) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v4 + 64) + 8 * v19);
    }
    uint64_t v22 = v17 - 2;
    goto LABEL_31;
  }
  if (v17 < 2)
  {
    uint64_t v20 = 0;
    uint64_t v64 = 0;
    uint64_t v47 = 0;
    uint64_t v55 = 0;
    uint64_t v21 = 0;
    if (v17 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v22 = 0;
  uint64_t v55 = 0;
  uint64_t v47 = 0;
LABEL_31:
  if (v22 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
    uint64_t v64 = 0;
  }
  else {
    uint64_t v64 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
  }
  uint64_t v20 = v17 - 1;
LABEL_36:
  if (v20 > (int)v17 - 1)
  {
LABEL_37:
    uint64_t v21 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v63 = 0;
    uint64_t v46 = 0;
    uint64_t v54 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v20) != 1)
  {
    uint64_t v21 = *(void *)(*(void *)(v4 + 64) + 8 * v20);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v21 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v23 = *(void *)(v5 + 16);
  uint64_t v24 = v23 - 4;
  if (v23 >= 4)
  {
    if (v24 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v24) == 1) {
      uint64_t v46 = 0;
    }
    else {
      uint64_t v46 = *(void *)(*(void *)(v5 + 64) + 8 * v24);
    }
    uint64_t v25 = v23 - 3;
    goto LABEL_56;
  }
  if (v23 == 3)
  {
    uint64_t v25 = 0;
    uint64_t v46 = 0;
LABEL_56:
    if (v25 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v25) == 1) {
      uint64_t v54 = 0;
    }
    else {
      uint64_t v54 = *(void *)(*(void *)(v5 + 64) + 8 * v25);
    }
    uint64_t v28 = v23 - 2;
    goto LABEL_61;
  }
  if (v23 >= 2)
  {
    uint64_t v28 = 0;
    uint64_t v54 = 0;
    uint64_t v46 = 0;
LABEL_61:
    if (v28 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v63 = 0;
    }
    else {
      uint64_t v63 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v26 = v23 - 1;
    goto LABEL_66;
  }
  uint64_t v26 = 0;
  uint64_t v63 = 0;
  uint64_t v46 = 0;
  uint64_t v54 = 0;
  uint64_t v27 = 0;
  if (v23 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v26 <= (int)v23 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v26) != 1)
    {
      uint64_t v27 = *(void *)(*(void *)(v5 + 64) + 8 * v26);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v27 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v62 = 0;
    uint64_t v48 = 0;
    uint64_t v56 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v27 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v14 & 1) != 0 || v13 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v13) == 1)
  {
    uint64_t v48 = 0;
    if (v15) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v48 = *(void *)(*(void *)(v6 + 64) + 8 * v13);
    if (v15) {
      goto LABEL_98;
    }
  }
  if (v11 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v11) == 1)
  {
LABEL_98:
    uint64_t v56 = 0;
    if (v12) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v56 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
  if (v12) {
    goto LABEL_101;
  }
LABEL_99:
  if (v10 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v10) != 1)
  {
    uint64_t v62 = *(void *)(*(void *)(v6 + 64) + 8 * v10);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v29 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v62 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v29 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v49 >= 1)
  {
    uint64_t v30 = 0;
    float v53 = (__int16 *)(**(void **)a3 + *(void *)(v4 + 40));
    float v52 = (float *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    float v51 = (float *)(**a4 + *(void *)(v6 + 40));
    do
    {
      uint64_t v50 = v30;
      if (v57 >= 1)
      {
        uint64_t v31 = 0;
        uint64_t v60 = v52;
        uint64_t v61 = v53;
        uint64_t v59 = v51;
        do
        {
          uint64_t v58 = v31;
          if (v66 >= 1)
          {
            uint64_t v32 = 0;
            uint64_t v33 = v60;
            uint64_t v34 = v61;
            uint64_t v35 = v59;
            do
            {
              uint64_t v67 = v32;
              uint64_t v36 = v65;
              uint64_t v37 = v34;
              uint64_t v38 = v33;
              float v39 = v35;
              if (v65 >= 1)
              {
                do
                {
                  _H0 = *v37;
                  __asm { FCVT            S0, H0; float }
                  float *v39 = powf(_S0, *v38);
                  float v39 = (float *)((char *)v39 + v29);
                  uint64_t v38 = (float *)((char *)v38 + v27);
                  uint64_t v37 = (__int16 *)((char *)v37 + v21);
                  --v36;
                }
                while (v36);
              }
              uint64_t v32 = v67 + 1;
              uint64_t v35 = (float *)((char *)v35 + v62);
              uint64_t v33 = (float *)((char *)v33 + v63);
              uint64_t v34 = (__int16 *)((char *)v34 + v64);
            }
            while (v67 + 1 != v66);
          }
          uint64_t v31 = v58 + 1;
          uint64_t v59 = (float *)((char *)v59 + v56);
          uint64_t v60 = (float *)((char *)v60 + v54);
          uint64_t v61 = (__int16 *)((char *)v61 + v55);
        }
        while (v58 + 1 != v57);
      }
      uint64_t v30 = v50 + 1;
      float v51 = (float *)((char *)v51 + v48);
      float v52 = (float *)((char *)v52 + v46);
      float v53 = (__int16 *)((char *)v53 + v47);
    }
    while (v50 + 1 != v49);
  }
}

void mlir::mps::arithmeticBinaryTileBaseKernel<complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)4>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4, double a5)
{
  uint64_t v6 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v7 = **a2;
  uint64_t v8 = *(void *)(v7 + 16);
  uint64_t v9 = v8 - 1;
  if (v8 <= 0)
  {
    uint64_t v11 = v8 - 2;
    uint64_t v68 = 1;
    goto LABEL_5;
  }
  uint64_t v10 = *(void *)(v7 + 24);
  uint64_t v68 = *(void *)(v10 + 8 * v9);
  if (v8 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v8 - 3;
    uint64_t v69 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v8 - 4;
    char v15 = 1;
    uint64_t v60 = 1;
    char v16 = 1;
LABEL_7:
    uint64_t v17 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v8 - 2;
  uint64_t v69 = *(void *)(v10 + 8 * (v8 - 2));
  if ((unint64_t)v8 <= 2)
  {
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v8 - 3;
  uint64_t v60 = *(void *)(v10 + 8 * (v8 - 3));
  if (v8 == 3)
  {
    char v13 = 0;
    uint64_t v12 = 0;
    char v16 = 0;
    uint64_t v14 = -1;
    uint64_t v11 = 1;
    char v15 = 1;
    goto LABEL_7;
  }
  char v15 = 0;
  char v13 = 0;
  char v16 = 0;
  uint64_t v14 = v8 - 4;
  uint64_t v17 = *(void *)(v10 + 8 * (v8 - 4));
LABEL_8:
  uint64_t v52 = v17;
  if (*(unsigned char *)(v6 + 58))
  {
    uint64_t v67 = 0;
    uint64_t v50 = 0;
    uint64_t v58 = 0;
    goto LABEL_37;
  }
  uint64_t v18 = *(void *)(v6 + 16);
  uint64_t v19 = v18 - 4;
  if (v18 >= 4)
  {
    if (v19 > (int)v18 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v19) == 1) {
      uint64_t v50 = 0;
    }
    else {
      uint64_t v50 = *(void *)(*(void *)(v6 + 64) + 8 * v19);
    }
    uint64_t v20 = v18 - 3;
    goto LABEL_26;
  }
  if (v18 == 3)
  {
    uint64_t v20 = 0;
    uint64_t v50 = 0;
LABEL_26:
    if (v20 > (int)v18 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v20) == 1) {
      uint64_t v58 = 0;
    }
    else {
      uint64_t v58 = *(void *)(*(void *)(v6 + 64) + 8 * v20);
    }
    uint64_t v22 = v18 - 2;
    goto LABEL_31;
  }
  if (v18 < 2)
  {
    uint64_t v21 = 0;
    uint64_t v67 = 0;
    uint64_t v50 = 0;
    uint64_t v58 = 0;
    uint64_t v70 = 0;
    if (v18 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v22 = 0;
  uint64_t v58 = 0;
  uint64_t v50 = 0;
LABEL_31:
  if (v22 > (int)v18 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v22) == 1) {
    uint64_t v67 = 0;
  }
  else {
    uint64_t v67 = *(void *)(*(void *)(v6 + 64) + 8 * v22);
  }
  uint64_t v21 = v18 - 1;
LABEL_36:
  if (v21 > (int)v18 - 1)
  {
LABEL_37:
    uint64_t v70 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v66 = 0;
    uint64_t v49 = 0;
    uint64_t v57 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v6 + 24) + 8 * v21) != 1)
  {
    uint64_t v70 = *(void *)(*(void *)(v6 + 64) + 8 * v21);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v70 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v23 = *(void *)(v5 + 16);
  uint64_t v24 = v23 - 4;
  if (v23 >= 4)
  {
    if (v24 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v24) == 1) {
      uint64_t v49 = 0;
    }
    else {
      uint64_t v49 = *(void *)(*(void *)(v5 + 64) + 8 * v24);
    }
    uint64_t v25 = v23 - 3;
    goto LABEL_56;
  }
  if (v23 == 3)
  {
    uint64_t v25 = 0;
    uint64_t v49 = 0;
LABEL_56:
    if (v25 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v25) == 1) {
      uint64_t v57 = 0;
    }
    else {
      uint64_t v57 = *(void *)(*(void *)(v5 + 64) + 8 * v25);
    }
    uint64_t v28 = v23 - 2;
    goto LABEL_61;
  }
  if (v23 >= 2)
  {
    uint64_t v28 = 0;
    uint64_t v57 = 0;
    uint64_t v49 = 0;
LABEL_61:
    if (v28 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v66 = 0;
    }
    else {
      uint64_t v66 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v26 = v23 - 1;
    goto LABEL_66;
  }
  uint64_t v26 = 0;
  uint64_t v66 = 0;
  uint64_t v49 = 0;
  uint64_t v57 = 0;
  uint64_t v27 = 0;
  if (v23 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v26 <= (int)v23 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v26) != 1)
    {
      uint64_t v27 = *(void *)(*(void *)(v5 + 64) + 8 * v26);
      if (!*(unsigned char *)(v7 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v27 = 0;
LABEL_78:
    if (!*(unsigned char *)(v7 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v65 = 0;
    uint64_t v51 = 0;
    uint64_t v59 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v27 = 0;
  if (*(unsigned char *)(v7 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v15 & 1) != 0 || v14 > (int)v8 - 1 || *(void *)(*(void *)(v7 + 24) + 8 * v14) == 1)
  {
    uint64_t v51 = 0;
    if (v16) {
      goto LABEL_110;
    }
  }
  else
  {
    uint64_t v51 = *(void *)(*(void *)(v7 + 64) + 8 * v14);
    if (v16) {
      goto LABEL_110;
    }
  }
  if (v12 > (int)v8 - 1 || *(void *)(*(void *)(v7 + 24) + 8 * v12) == 1)
  {
LABEL_110:
    uint64_t v59 = 0;
    if (v13) {
      goto LABEL_113;
    }
    goto LABEL_111;
  }
  uint64_t v59 = *(void *)(*(void *)(v7 + 64) + 8 * v12);
  if (v13) {
    goto LABEL_113;
  }
LABEL_111:
  if (v11 <= (int)v8 - 1 && *(void *)(*(void *)(v7 + 24) + 8 * v11) != 1)
  {
    uint64_t v65 = *(void *)(*(void *)(v7 + 64) + 8 * v11);
    if (v8 >= 1) {
      goto LABEL_114;
    }
LABEL_80:
    uint64_t v29 = 0;
    goto LABEL_81;
  }
LABEL_113:
  uint64_t v65 = 0;
  if (v8 < 1) {
    goto LABEL_80;
  }
LABEL_114:
  if (v9 > (int)v8 - 1 || *(void *)(*(void *)(v7 + 24) + 8 * v9) == 1) {
    goto LABEL_80;
  }
  uint64_t v29 = *(void *)(*(void *)(v7 + 64) + 8 * v9);
LABEL_81:
  if (v52 >= 1)
  {
    uint64_t v30 = 0;
    uint64_t v56 = (float *)(**(void **)a3 + *(void *)(v6 + 40));
    uint64_t v55 = (_DWORD *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v54 = (_DWORD *)(**a4 + *(void *)(v7 + 40));
    while (1)
    {
      uint64_t v53 = v30;
      if (v60 >= 1) {
        break;
      }
LABEL_83:
      uint64_t v30 = v53 + 1;
      uint64_t v54 = (_DWORD *)((char *)v54 + v51);
      uint64_t v55 = (_DWORD *)((char *)v55 + v49);
      uint64_t v56 = (float *)((char *)v56 + v50);
      if (v53 + 1 == v52) {
        return;
      }
    }
    uint64_t v31 = 0;
    uint64_t v63 = v55;
    uint64_t v64 = v56;
    uint64_t v62 = v54;
    while (1)
    {
      uint64_t v61 = v31;
      if (v69 >= 1) {
        break;
      }
LABEL_86:
      uint64_t v31 = v61 + 1;
      uint64_t v62 = (_DWORD *)((char *)v62 + v59);
      uint64_t v63 = (_DWORD *)((char *)v63 + v57);
      uint64_t v64 = (float *)((char *)v64 + v58);
      if (v61 + 1 == v60) {
        goto LABEL_83;
      }
    }
    uint64_t v32 = 0;
    uint64_t v34 = v63;
    uint64_t v33 = v64;
    uint64_t v35 = v62;
    while (1)
    {
      uint64_t v36 = v68;
      uint64_t v37 = v33;
      uint64_t v38 = v34;
      float v39 = v35;
      if (v68 >= 1) {
        break;
      }
LABEL_89:
      ++v32;
      uint64_t v35 = (_DWORD *)((char *)v35 + v65);
      uint64_t v34 = (_DWORD *)((char *)v34 + v66);
      uint64_t v33 = (float *)((char *)v33 + v67);
      if (v32 == v69) {
        goto LABEL_86;
      }
    }
    while (1)
    {
      float v42 = *v37;
      float v43 = v37[1];
      LODWORD(a5) = *v38;
      unint64_t v73 = vcvtq_f32_f16(*(float16x4_t *)&a5).u64[0];
      float v44 = hypotf(v42, v43);
      float v45 = logf(v44);
      float v46 = atan2f(v43, v42);
      v74[0] = v45;
      v74[1] = v46;
      *(float *)&a5 = std::operator*[abi:nn180100]<float>((float *)&v73, v74);
      if (*(float *)v41.i32 == 0.0)
      {
        int8x16_t v71 = v41;
        *(float *)&a5 = expf(*(float *)&a5);
        v41.i64[0] = 0;
        v40.i64[0] = 0x8000000080000000;
        v40.i64[1] = 0x8000000080000000;
        v41.i32[0] = vbslq_s8(v40, v41, v71).u32[0];
      }
      else
      {
        if (fabsf(*(float *)&a5) == INFINITY)
        {
          if (*(float *)&a5 >= 0.0)
          {
            if ((v41.i32[0] & 0x7FFFFFFFu) >= 0x7F800000)
            {
              if (fabsf(*(float *)v41.i32) == INFINITY) {
                *(float *)v41.i32 = NAN;
              }
              goto LABEL_93;
            }
          }
          else if ((v41.i32[0] & 0x7FFFFFFFu) >= 0x7F800000)
          {
            *(float *)v41.i32 = 1.0;
          }
        }
        float v72 = *(float *)v41.i32;
        float v47 = expf(*(float *)&a5);
        __float2 v48 = __sincosf_stret(v72);
        *(float *)&a5 = v47 * v48.__cosval;
        *(float *)v41.i32 = v47 * v48.__sinval;
      }
LABEL_93:
      _DWORD *v39 = LODWORD(a5);
      v39[1] = v41.i32[0];
      float v39 = (_DWORD *)((char *)v39 + v29);
      uint64_t v38 = (_DWORD *)((char *)v38 + v27);
      uint64_t v37 = (float *)((char *)v37 + v70);
      if (!--v36) {
        goto LABEL_89;
      }
    }
  }
}

void mlir::mps::arithmeticBinaryTileBaseKernel<float,half,float,(mlir::mps::arithmeticOp)4>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v10 = v7 - 2;
    uint64_t v65 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v65 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v7 - 3;
    uint64_t v66 = 1;
    char v12 = 1;
LABEL_6:
    uint64_t v13 = v7 - 4;
    char v14 = 1;
    uint64_t v57 = 1;
    char v15 = 1;
LABEL_7:
    uint64_t v16 = 1;
    goto LABEL_8;
  }
  uint64_t v10 = v7 - 2;
  uint64_t v66 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v10 = 0;
    char v12 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v7 - 3;
  uint64_t v57 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v12 = 0;
    uint64_t v11 = 0;
    char v15 = 0;
    uint64_t v13 = -1;
    uint64_t v10 = 1;
    char v14 = 1;
    goto LABEL_7;
  }
  char v14 = 0;
  char v12 = 0;
  char v15 = 0;
  uint64_t v13 = v7 - 4;
  uint64_t v16 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v49 = v16;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v64 = 0;
    uint64_t v47 = 0;
    uint64_t v55 = 0;
    goto LABEL_37;
  }
  uint64_t v17 = *(void *)(v4 + 16);
  uint64_t v18 = v17 - 4;
  if (v17 >= 4)
  {
    if (v18 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v18) == 1) {
      uint64_t v47 = 0;
    }
    else {
      uint64_t v47 = *(void *)(*(void *)(v4 + 64) + 8 * v18);
    }
    uint64_t v19 = v17 - 3;
    goto LABEL_26;
  }
  if (v17 == 3)
  {
    uint64_t v19 = 0;
    uint64_t v47 = 0;
LABEL_26:
    if (v19 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v19) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v4 + 64) + 8 * v19);
    }
    uint64_t v22 = v17 - 2;
    goto LABEL_31;
  }
  if (v17 < 2)
  {
    uint64_t v20 = 0;
    uint64_t v64 = 0;
    uint64_t v47 = 0;
    uint64_t v55 = 0;
    uint64_t v21 = 0;
    if (v17 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v22 = 0;
  uint64_t v55 = 0;
  uint64_t v47 = 0;
LABEL_31:
  if (v22 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
    uint64_t v64 = 0;
  }
  else {
    uint64_t v64 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
  }
  uint64_t v20 = v17 - 1;
LABEL_36:
  if (v20 > (int)v17 - 1)
  {
LABEL_37:
    uint64_t v21 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v63 = 0;
    uint64_t v46 = 0;
    uint64_t v54 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v20) != 1)
  {
    uint64_t v21 = *(void *)(*(void *)(v4 + 64) + 8 * v20);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v21 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v23 = *(void *)(v5 + 16);
  uint64_t v24 = v23 - 4;
  if (v23 >= 4)
  {
    if (v24 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v24) == 1) {
      uint64_t v46 = 0;
    }
    else {
      uint64_t v46 = *(void *)(*(void *)(v5 + 64) + 8 * v24);
    }
    uint64_t v25 = v23 - 3;
    goto LABEL_56;
  }
  if (v23 == 3)
  {
    uint64_t v25 = 0;
    uint64_t v46 = 0;
LABEL_56:
    if (v25 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v25) == 1) {
      uint64_t v54 = 0;
    }
    else {
      uint64_t v54 = *(void *)(*(void *)(v5 + 64) + 8 * v25);
    }
    uint64_t v28 = v23 - 2;
    goto LABEL_61;
  }
  if (v23 >= 2)
  {
    uint64_t v28 = 0;
    uint64_t v54 = 0;
    uint64_t v46 = 0;
LABEL_61:
    if (v28 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v63 = 0;
    }
    else {
      uint64_t v63 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v26 = v23 - 1;
    goto LABEL_66;
  }
  uint64_t v26 = 0;
  uint64_t v63 = 0;
  uint64_t v46 = 0;
  uint64_t v54 = 0;
  uint64_t v27 = 0;
  if (v23 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v26 <= (int)v23 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v26) != 1)
    {
      uint64_t v27 = *(void *)(*(void *)(v5 + 64) + 8 * v26);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v27 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v62 = 0;
    uint64_t v48 = 0;
    uint64_t v56 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v27 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v14 & 1) != 0 || v13 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v13) == 1)
  {
    uint64_t v48 = 0;
    if (v15) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v48 = *(void *)(*(void *)(v6 + 64) + 8 * v13);
    if (v15) {
      goto LABEL_98;
    }
  }
  if (v11 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v11) == 1)
  {
LABEL_98:
    uint64_t v56 = 0;
    if (v12) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v56 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
  if (v12) {
    goto LABEL_101;
  }
LABEL_99:
  if (v10 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v10) != 1)
  {
    uint64_t v62 = *(void *)(*(void *)(v6 + 64) + 8 * v10);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v29 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v62 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v29 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v49 >= 1)
  {
    uint64_t v30 = 0;
    uint64_t v53 = (float *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v52 = (__int16 *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v51 = (float *)(**a4 + *(void *)(v6 + 40));
    do
    {
      uint64_t v50 = v30;
      if (v57 >= 1)
      {
        uint64_t v31 = 0;
        uint64_t v60 = v52;
        uint64_t v61 = v53;
        uint64_t v59 = v51;
        do
        {
          uint64_t v58 = v31;
          if (v66 >= 1)
          {
            uint64_t v32 = 0;
            uint64_t v33 = v60;
            uint64_t v34 = v61;
            uint64_t v35 = v59;
            do
            {
              uint64_t v67 = v32;
              uint64_t v36 = v65;
              uint64_t v37 = v34;
              uint64_t v38 = v33;
              float v39 = v35;
              if (v65 >= 1)
              {
                do
                {
                  _H1 = *v38;
                  __asm { FCVT            S1, H1; float }
                  float *v39 = powf(*v37, _S1);
                  float v39 = (float *)((char *)v39 + v29);
                  uint64_t v38 = (__int16 *)((char *)v38 + v27);
                  uint64_t v37 = (float *)((char *)v37 + v21);
                  --v36;
                }
                while (v36);
              }
              uint64_t v32 = v67 + 1;
              uint64_t v35 = (float *)((char *)v35 + v62);
              uint64_t v33 = (__int16 *)((char *)v33 + v63);
              uint64_t v34 = (float *)((char *)v34 + v64);
            }
            while (v67 + 1 != v66);
          }
          uint64_t v31 = v58 + 1;
          uint64_t v59 = (float *)((char *)v59 + v56);
          uint64_t v60 = (__int16 *)((char *)v60 + v54);
          uint64_t v61 = (float *)((char *)v61 + v55);
        }
        while (v58 + 1 != v57);
      }
      uint64_t v30 = v50 + 1;
      uint64_t v51 = (float *)((char *)v51 + v48);
      uint64_t v52 = (__int16 *)((char *)v52 + v46);
      uint64_t v53 = (float *)((char *)v53 + v47);
    }
    while (v50 + 1 != v49);
  }
}

void mlir::mps::arithmeticBinaryTileBaseKernel<__emulated_bf16,float,float,(mlir::mps::arithmeticOp)4>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v10 = v7 - 2;
    uint64_t v59 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v59 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v7 - 3;
    uint64_t v60 = 1;
    char v12 = 1;
LABEL_6:
    uint64_t v13 = v7 - 4;
    char v14 = 1;
    uint64_t v51 = 1;
    char v15 = 1;
LABEL_7:
    uint64_t v16 = 1;
    goto LABEL_8;
  }
  uint64_t v10 = v7 - 2;
  uint64_t v60 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v10 = 0;
    char v12 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v7 - 3;
  uint64_t v51 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v12 = 0;
    uint64_t v11 = 0;
    char v15 = 0;
    uint64_t v13 = -1;
    uint64_t v10 = 1;
    char v14 = 1;
    goto LABEL_7;
  }
  char v14 = 0;
  char v12 = 0;
  char v15 = 0;
  uint64_t v13 = v7 - 4;
  uint64_t v16 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v43 = v16;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v58 = 0;
    uint64_t v41 = 0;
    uint64_t v49 = 0;
    goto LABEL_37;
  }
  uint64_t v17 = *(void *)(v4 + 16);
  uint64_t v18 = v17 - 4;
  if (v17 >= 4)
  {
    if (v18 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v18) == 1) {
      uint64_t v41 = 0;
    }
    else {
      uint64_t v41 = *(void *)(*(void *)(v4 + 64) + 8 * v18);
    }
    uint64_t v19 = v17 - 3;
    goto LABEL_26;
  }
  if (v17 == 3)
  {
    uint64_t v19 = 0;
    uint64_t v41 = 0;
LABEL_26:
    if (v19 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v19) == 1) {
      uint64_t v49 = 0;
    }
    else {
      uint64_t v49 = *(void *)(*(void *)(v4 + 64) + 8 * v19);
    }
    uint64_t v22 = v17 - 2;
    goto LABEL_31;
  }
  if (v17 < 2)
  {
    uint64_t v20 = 0;
    uint64_t v58 = 0;
    uint64_t v41 = 0;
    uint64_t v49 = 0;
    uint64_t v21 = 0;
    if (v17 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v22 = 0;
  uint64_t v49 = 0;
  uint64_t v41 = 0;
LABEL_31:
  if (v22 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
    uint64_t v58 = 0;
  }
  else {
    uint64_t v58 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
  }
  uint64_t v20 = v17 - 1;
LABEL_36:
  if (v20 > (int)v17 - 1)
  {
LABEL_37:
    uint64_t v21 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v57 = 0;
    uint64_t v40 = 0;
    uint64_t v48 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v20) != 1)
  {
    uint64_t v21 = *(void *)(*(void *)(v4 + 64) + 8 * v20);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v21 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v23 = *(void *)(v5 + 16);
  uint64_t v24 = v23 - 4;
  if (v23 >= 4)
  {
    if (v24 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v24) == 1) {
      uint64_t v40 = 0;
    }
    else {
      uint64_t v40 = *(void *)(*(void *)(v5 + 64) + 8 * v24);
    }
    uint64_t v25 = v23 - 3;
    goto LABEL_56;
  }
  if (v23 == 3)
  {
    uint64_t v25 = 0;
    uint64_t v40 = 0;
LABEL_56:
    if (v25 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v25) == 1) {
      uint64_t v48 = 0;
    }
    else {
      uint64_t v48 = *(void *)(*(void *)(v5 + 64) + 8 * v25);
    }
    uint64_t v28 = v23 - 2;
    goto LABEL_61;
  }
  if (v23 >= 2)
  {
    uint64_t v28 = 0;
    uint64_t v48 = 0;
    uint64_t v40 = 0;
LABEL_61:
    if (v28 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v57 = 0;
    }
    else {
      uint64_t v57 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v26 = v23 - 1;
    goto LABEL_66;
  }
  uint64_t v26 = 0;
  uint64_t v57 = 0;
  uint64_t v40 = 0;
  uint64_t v48 = 0;
  uint64_t v27 = 0;
  if (v23 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v26 <= (int)v23 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v26) != 1)
    {
      uint64_t v27 = *(void *)(*(void *)(v5 + 64) + 8 * v26);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v27 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v56 = 0;
    uint64_t v42 = 0;
    uint64_t v50 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v27 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v14 & 1) != 0 || v13 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v13) == 1)
  {
    uint64_t v42 = 0;
    if (v15) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v42 = *(void *)(*(void *)(v6 + 64) + 8 * v13);
    if (v15) {
      goto LABEL_98;
    }
  }
  if (v11 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v11) == 1)
  {
LABEL_98:
    uint64_t v50 = 0;
    if (v12) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v50 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
  if (v12) {
    goto LABEL_101;
  }
LABEL_99:
  if (v10 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v10) != 1)
  {
    uint64_t v56 = *(void *)(*(void *)(v6 + 64) + 8 * v10);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v29 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v56 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v29 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v43 >= 1)
  {
    uint64_t v30 = 0;
    uint64_t v47 = (unsigned __int16 *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v46 = (float *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    float v45 = (float *)(**a4 + *(void *)(v6 + 40));
    do
    {
      uint64_t v44 = v30;
      if (v51 >= 1)
      {
        uint64_t v31 = 0;
        uint64_t v54 = v46;
        uint64_t v55 = v47;
        uint64_t v53 = v45;
        do
        {
          uint64_t v52 = v31;
          if (v60 >= 1)
          {
            uint64_t v32 = 0;
            uint64_t v33 = v54;
            uint64_t v34 = v55;
            uint64_t v35 = v53;
            do
            {
              uint64_t v61 = v32;
              uint64_t v36 = v59;
              uint64_t v37 = v34;
              uint64_t v38 = v33;
              float v39 = v35;
              if (v59 >= 1)
              {
                do
                {
                  float *v39 = powf(COERCE_FLOAT(*v37 << 16), *v38);
                  float v39 = (float *)((char *)v39 + v29);
                  uint64_t v38 = (float *)((char *)v38 + v27);
                  uint64_t v37 = (unsigned __int16 *)((char *)v37 + v21);
                  --v36;
                }
                while (v36);
              }
              uint64_t v32 = v61 + 1;
              uint64_t v35 = (float *)((char *)v35 + v56);
              uint64_t v33 = (float *)((char *)v33 + v57);
              uint64_t v34 = (unsigned __int16 *)((char *)v34 + v58);
            }
            while (v61 + 1 != v60);
          }
          uint64_t v31 = v52 + 1;
          uint64_t v53 = (float *)((char *)v53 + v50);
          uint64_t v54 = (float *)((char *)v54 + v48);
          uint64_t v55 = (unsigned __int16 *)((char *)v55 + v49);
        }
        while (v52 + 1 != v51);
      }
      uint64_t v30 = v44 + 1;
      float v45 = (float *)((char *)v45 + v42);
      uint64_t v46 = (float *)((char *)v46 + v40);
      uint64_t v47 = (unsigned __int16 *)((char *)v47 + v41);
    }
    while (v44 + 1 != v43);
  }
}

void mlir::mps::arithmeticBinaryTileBaseKernel<float,__emulated_bf16,float,(mlir::mps::arithmeticOp)4>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v10 = v7 - 2;
    uint64_t v59 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v59 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v7 - 3;
    uint64_t v60 = 1;
    char v12 = 1;
LABEL_6:
    uint64_t v13 = v7 - 4;
    char v14 = 1;
    uint64_t v51 = 1;
    char v15 = 1;
LABEL_7:
    uint64_t v16 = 1;
    goto LABEL_8;
  }
  uint64_t v10 = v7 - 2;
  uint64_t v60 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v10 = 0;
    char v12 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v7 - 3;
  uint64_t v51 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v12 = 0;
    uint64_t v11 = 0;
    char v15 = 0;
    uint64_t v13 = -1;
    uint64_t v10 = 1;
    char v14 = 1;
    goto LABEL_7;
  }
  char v14 = 0;
  char v12 = 0;
  char v15 = 0;
  uint64_t v13 = v7 - 4;
  uint64_t v16 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v43 = v16;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v58 = 0;
    uint64_t v41 = 0;
    uint64_t v49 = 0;
    goto LABEL_37;
  }
  uint64_t v17 = *(void *)(v4 + 16);
  uint64_t v18 = v17 - 4;
  if (v17 >= 4)
  {
    if (v18 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v18) == 1) {
      uint64_t v41 = 0;
    }
    else {
      uint64_t v41 = *(void *)(*(void *)(v4 + 64) + 8 * v18);
    }
    uint64_t v19 = v17 - 3;
    goto LABEL_26;
  }
  if (v17 == 3)
  {
    uint64_t v19 = 0;
    uint64_t v41 = 0;
LABEL_26:
    if (v19 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v19) == 1) {
      uint64_t v49 = 0;
    }
    else {
      uint64_t v49 = *(void *)(*(void *)(v4 + 64) + 8 * v19);
    }
    uint64_t v22 = v17 - 2;
    goto LABEL_31;
  }
  if (v17 < 2)
  {
    uint64_t v20 = 0;
    uint64_t v58 = 0;
    uint64_t v41 = 0;
    uint64_t v49 = 0;
    uint64_t v21 = 0;
    if (v17 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v22 = 0;
  uint64_t v49 = 0;
  uint64_t v41 = 0;
LABEL_31:
  if (v22 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
    uint64_t v58 = 0;
  }
  else {
    uint64_t v58 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
  }
  uint64_t v20 = v17 - 1;
LABEL_36:
  if (v20 > (int)v17 - 1)
  {
LABEL_37:
    uint64_t v21 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v57 = 0;
    uint64_t v40 = 0;
    uint64_t v48 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v20) != 1)
  {
    uint64_t v21 = *(void *)(*(void *)(v4 + 64) + 8 * v20);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v21 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v23 = *(void *)(v5 + 16);
  uint64_t v24 = v23 - 4;
  if (v23 >= 4)
  {
    if (v24 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v24) == 1) {
      uint64_t v40 = 0;
    }
    else {
      uint64_t v40 = *(void *)(*(void *)(v5 + 64) + 8 * v24);
    }
    uint64_t v25 = v23 - 3;
    goto LABEL_56;
  }
  if (v23 == 3)
  {
    uint64_t v25 = 0;
    uint64_t v40 = 0;
LABEL_56:
    if (v25 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v25) == 1) {
      uint64_t v48 = 0;
    }
    else {
      uint64_t v48 = *(void *)(*(void *)(v5 + 64) + 8 * v25);
    }
    uint64_t v28 = v23 - 2;
    goto LABEL_61;
  }
  if (v23 >= 2)
  {
    uint64_t v28 = 0;
    uint64_t v48 = 0;
    uint64_t v40 = 0;
LABEL_61:
    if (v28 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v57 = 0;
    }
    else {
      uint64_t v57 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v26 = v23 - 1;
    goto LABEL_66;
  }
  uint64_t v26 = 0;
  uint64_t v57 = 0;
  uint64_t v40 = 0;
  uint64_t v48 = 0;
  uint64_t v27 = 0;
  if (v23 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v26 <= (int)v23 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v26) != 1)
    {
      uint64_t v27 = *(void *)(*(void *)(v5 + 64) + 8 * v26);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v27 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v56 = 0;
    uint64_t v42 = 0;
    uint64_t v50 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v27 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v14 & 1) != 0 || v13 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v13) == 1)
  {
    uint64_t v42 = 0;
    if (v15) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v42 = *(void *)(*(void *)(v6 + 64) + 8 * v13);
    if (v15) {
      goto LABEL_98;
    }
  }
  if (v11 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v11) == 1)
  {
LABEL_98:
    uint64_t v50 = 0;
    if (v12) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v50 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
  if (v12) {
    goto LABEL_101;
  }
LABEL_99:
  if (v10 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v10) != 1)
  {
    uint64_t v56 = *(void *)(*(void *)(v6 + 64) + 8 * v10);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v29 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v56 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v29 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v43 >= 1)
  {
    uint64_t v30 = 0;
    uint64_t v47 = (float *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v46 = (unsigned __int16 *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    float v45 = (float *)(**a4 + *(void *)(v6 + 40));
    do
    {
      uint64_t v44 = v30;
      if (v51 >= 1)
      {
        uint64_t v31 = 0;
        uint64_t v54 = v46;
        uint64_t v55 = v47;
        uint64_t v53 = v45;
        do
        {
          uint64_t v52 = v31;
          if (v60 >= 1)
          {
            uint64_t v32 = 0;
            uint64_t v33 = v54;
            uint64_t v34 = v55;
            uint64_t v35 = v53;
            do
            {
              uint64_t v61 = v32;
              uint64_t v36 = v59;
              uint64_t v37 = v34;
              uint64_t v38 = v33;
              float v39 = v35;
              if (v59 >= 1)
              {
                do
                {
                  float *v39 = powf(*v37, COERCE_FLOAT(*v38 << 16));
                  float v39 = (float *)((char *)v39 + v29);
                  uint64_t v38 = (unsigned __int16 *)((char *)v38 + v27);
                  uint64_t v37 = (float *)((char *)v37 + v21);
                  --v36;
                }
                while (v36);
              }
              uint64_t v32 = v61 + 1;
              uint64_t v35 = (float *)((char *)v35 + v56);
              uint64_t v33 = (unsigned __int16 *)((char *)v33 + v57);
              uint64_t v34 = (float *)((char *)v34 + v58);
            }
            while (v61 + 1 != v60);
          }
          uint64_t v31 = v52 + 1;
          uint64_t v53 = (float *)((char *)v53 + v50);
          uint64_t v54 = (unsigned __int16 *)((char *)v54 + v48);
          uint64_t v55 = (float *)((char *)v55 + v49);
        }
        while (v52 + 1 != v51);
      }
      uint64_t v30 = v44 + 1;
      float v45 = (float *)((char *)v45 + v42);
      uint64_t v46 = (unsigned __int16 *)((char *)v46 + v40);
      uint64_t v47 = (float *)((char *)v47 + v41);
    }
    while (v44 + 1 != v43);
  }
}

void mlir::mps::arithmeticBinaryTileBaseKernel<complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<half,(void *)0>,(mlir::mps::arithmeticOp)4>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4, double _D0)
{
  uint64_t v6 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v7 = **a2;
  uint64_t v8 = *(void *)(v7 + 16);
  uint64_t v9 = v8 - 1;
  if (v8 <= 0)
  {
    uint64_t v11 = v8 - 2;
    uint64_t v75 = 1;
    goto LABEL_5;
  }
  uint64_t v10 = *(void *)(v7 + 24);
  uint64_t v75 = *(void *)(v10 + 8 * v9);
  if (v8 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v8 - 3;
    uint64_t v76 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v8 - 4;
    char v15 = 1;
    uint64_t v67 = 1;
    char v16 = 1;
LABEL_7:
    uint64_t v17 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v8 - 2;
  uint64_t v76 = *(void *)(v10 + 8 * (v8 - 2));
  if ((unint64_t)v8 <= 2)
  {
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v8 - 3;
  uint64_t v67 = *(void *)(v10 + 8 * (v8 - 3));
  if (v8 == 3)
  {
    char v13 = 0;
    uint64_t v12 = 0;
    char v16 = 0;
    uint64_t v14 = -1;
    uint64_t v11 = 1;
    char v15 = 1;
    goto LABEL_7;
  }
  char v15 = 0;
  char v13 = 0;
  char v16 = 0;
  uint64_t v14 = v8 - 4;
  uint64_t v17 = *(void *)(v10 + 8 * (v8 - 4));
LABEL_8:
  uint64_t v59 = v17;
  if (*(unsigned char *)(v6 + 58))
  {
    uint64_t v74 = 0;
    uint64_t v57 = 0;
    uint64_t v65 = 0;
    goto LABEL_37;
  }
  uint64_t v18 = *(void *)(v6 + 16);
  uint64_t v19 = v18 - 4;
  if (v18 >= 4)
  {
    if (v19 > (int)v18 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v19) == 1) {
      uint64_t v57 = 0;
    }
    else {
      uint64_t v57 = *(void *)(*(void *)(v6 + 64) + 8 * v19);
    }
    uint64_t v20 = v18 - 3;
    goto LABEL_26;
  }
  if (v18 == 3)
  {
    uint64_t v20 = 0;
    uint64_t v57 = 0;
LABEL_26:
    if (v20 > (int)v18 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v20) == 1) {
      uint64_t v65 = 0;
    }
    else {
      uint64_t v65 = *(void *)(*(void *)(v6 + 64) + 8 * v20);
    }
    uint64_t v22 = v18 - 2;
    goto LABEL_31;
  }
  if (v18 < 2)
  {
    uint64_t v21 = 0;
    uint64_t v74 = 0;
    uint64_t v57 = 0;
    uint64_t v65 = 0;
    uint64_t v77 = 0;
    if (v18 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v22 = 0;
  uint64_t v65 = 0;
  uint64_t v57 = 0;
LABEL_31:
  if (v22 > (int)v18 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v22) == 1) {
    uint64_t v74 = 0;
  }
  else {
    uint64_t v74 = *(void *)(*(void *)(v6 + 64) + 8 * v22);
  }
  uint64_t v21 = v18 - 1;
LABEL_36:
  if (v21 > (int)v18 - 1)
  {
LABEL_37:
    uint64_t v77 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v73 = 0;
    uint64_t v56 = 0;
    uint64_t v64 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v6 + 24) + 8 * v21) != 1)
  {
    uint64_t v77 = *(void *)(*(void *)(v6 + 64) + 8 * v21);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v77 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v23 = *(void *)(v5 + 16);
  uint64_t v24 = v23 - 4;
  if (v23 >= 4)
  {
    if (v24 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v24) == 1) {
      uint64_t v56 = 0;
    }
    else {
      uint64_t v56 = *(void *)(*(void *)(v5 + 64) + 8 * v24);
    }
    uint64_t v25 = v23 - 3;
    goto LABEL_56;
  }
  if (v23 == 3)
  {
    uint64_t v25 = 0;
    uint64_t v56 = 0;
LABEL_56:
    if (v25 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v25) == 1) {
      uint64_t v64 = 0;
    }
    else {
      uint64_t v64 = *(void *)(*(void *)(v5 + 64) + 8 * v25);
    }
    uint64_t v28 = v23 - 2;
    goto LABEL_61;
  }
  if (v23 >= 2)
  {
    uint64_t v28 = 0;
    uint64_t v64 = 0;
    uint64_t v56 = 0;
LABEL_61:
    if (v28 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v73 = 0;
    }
    else {
      uint64_t v73 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v26 = v23 - 1;
    goto LABEL_66;
  }
  uint64_t v26 = 0;
  uint64_t v73 = 0;
  uint64_t v56 = 0;
  uint64_t v64 = 0;
  uint64_t v27 = 0;
  if (v23 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v26 <= (int)v23 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v26) != 1)
    {
      uint64_t v27 = *(void *)(*(void *)(v5 + 64) + 8 * v26);
      if (!*(unsigned char *)(v7 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v27 = 0;
LABEL_78:
    if (!*(unsigned char *)(v7 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v72 = 0;
    uint64_t v58 = 0;
    uint64_t v66 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v27 = 0;
  if (*(unsigned char *)(v7 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v15 & 1) != 0 || v14 > (int)v8 - 1 || *(void *)(*(void *)(v7 + 24) + 8 * v14) == 1)
  {
    uint64_t v58 = 0;
    if (v16) {
      goto LABEL_110;
    }
  }
  else
  {
    uint64_t v58 = *(void *)(*(void *)(v7 + 64) + 8 * v14);
    if (v16) {
      goto LABEL_110;
    }
  }
  if (v12 > (int)v8 - 1 || *(void *)(*(void *)(v7 + 24) + 8 * v12) == 1)
  {
LABEL_110:
    uint64_t v66 = 0;
    if (v13) {
      goto LABEL_113;
    }
    goto LABEL_111;
  }
  uint64_t v66 = *(void *)(*(void *)(v7 + 64) + 8 * v12);
  if (v13) {
    goto LABEL_113;
  }
LABEL_111:
  if (v11 <= (int)v8 - 1 && *(void *)(*(void *)(v7 + 24) + 8 * v11) != 1)
  {
    uint64_t v72 = *(void *)(*(void *)(v7 + 64) + 8 * v11);
    if (v8 >= 1) {
      goto LABEL_114;
    }
LABEL_80:
    uint64_t v29 = 0;
    goto LABEL_81;
  }
LABEL_113:
  uint64_t v72 = 0;
  if (v8 < 1) {
    goto LABEL_80;
  }
LABEL_114:
  if (v9 > (int)v8 - 1 || *(void *)(*(void *)(v7 + 24) + 8 * v9) == 1) {
    goto LABEL_80;
  }
  uint64_t v29 = *(void *)(*(void *)(v7 + 64) + 8 * v9);
LABEL_81:
  if (v59 >= 1)
  {
    uint64_t v30 = 0;
    uint64_t v63 = (_WORD *)(**(void **)a3 + *(void *)(v6 + 40));
    uint64_t v62 = (_DWORD *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v61 = (_WORD *)(**a4 + *(void *)(v7 + 40));
    while (1)
    {
      uint64_t v60 = v30;
      if (v67 >= 1) {
        break;
      }
LABEL_83:
      uint64_t v30 = v60 + 1;
      uint64_t v61 = (_WORD *)((char *)v61 + v58);
      uint64_t v62 = (_DWORD *)((char *)v62 + v56);
      uint64_t v63 = (_WORD *)((char *)v63 + v57);
      if (v60 + 1 == v59) {
        return;
      }
    }
    uint64_t v31 = 0;
    uint64_t v70 = v62;
    int8x16_t v71 = v63;
    uint64_t v69 = v61;
    while (1)
    {
      uint64_t v68 = v31;
      if (v76 >= 1) {
        break;
      }
LABEL_86:
      uint64_t v31 = v68 + 1;
      uint64_t v69 = (_WORD *)((char *)v69 + v66);
      uint64_t v70 = (_DWORD *)((char *)v70 + v64);
      int8x16_t v71 = (_WORD *)((char *)v71 + v65);
      if (v68 + 1 == v67) {
        goto LABEL_83;
      }
    }
    uint64_t v32 = 0;
    uint64_t v34 = v70;
    uint64_t v33 = v71;
    uint64_t v35 = v69;
    while (1)
    {
      uint64_t v36 = v75;
      uint64_t v37 = v33;
      uint64_t v38 = v34;
      float v39 = v35;
      if (v75 >= 1) {
        break;
      }
LABEL_89:
      ++v32;
      uint64_t v35 = (_WORD *)((char *)v35 + v72);
      uint64_t v34 = (_DWORD *)((char *)v34 + v73);
      uint64_t v33 = (_WORD *)((char *)v33 + v74);
      if (v32 == v76) {
        goto LABEL_86;
      }
    }
    while (1)
    {
      LOWORD(_D0) = *v37;
      _H1 = v37[1];
      __asm
      {
        FCVT            S8, H0
        FCVT            S9, H1
      }
      LODWORD(_D0) = *v38;
      unint64_t v80 = vcvtq_f32_f16(*(float16x4_t *)&_D0).u64[0];
      float v51 = hypotf(_S8, _S9);
      float v52 = logf(v51);
      float v53 = atan2f(_S9, _S8);
      v81[0] = v52;
      v81[1] = v53;
      *(float *)&_D0 = std::operator*[abi:nn180100]<float>((float *)&v80, v81);
      if (*(float *)_Q1.i32 == 0.0)
      {
        int8x16_t v78 = _Q1;
        *(float *)&_D0 = expf(*(float *)&_D0);
        _Q1.i64[0] = 0;
        v40.i64[0] = 0x8000000080000000;
        v40.i64[1] = 0x8000000080000000;
        _Q1.i32[0] = vbslq_s8(v40, _Q1, v78).u32[0];
      }
      else
      {
        if (fabsf(*(float *)&_D0) == INFINITY)
        {
          if (*(float *)&_D0 >= 0.0)
          {
            if ((_Q1.i32[0] & 0x7FFFFFFFu) >= 0x7F800000)
            {
              if (fabsf(*(float *)_Q1.i32) == INFINITY) {
                *(float *)_Q1.i32 = NAN;
              }
              goto LABEL_93;
            }
          }
          else if ((_Q1.i32[0] & 0x7FFFFFFFu) >= 0x7F800000)
          {
            *(float *)_Q1.i32 = 1.0;
          }
        }
        float v79 = *(float *)_Q1.i32;
        float v54 = expf(*(float *)&_D0);
        __float2 v55 = __sincosf_stret(v79);
        *(float *)&_D0 = v54 * v55.__cosval;
        *(float *)_Q1.i32 = v54 * v55.__sinval;
      }
LABEL_93:
      __asm
      {
        FCVT            H0, S0
        FCVT            H1, S1
      }
      _WORD *v39 = _H0;
      v39[1] = _H1;
      float v39 = (_WORD *)((char *)v39 + v29);
      uint64_t v38 = (_DWORD *)((char *)v38 + v27);
      uint64_t v37 = (_WORD *)((char *)v37 + v77);
      if (!--v36) {
        goto LABEL_89;
      }
    }
  }
}

void mlir::mps::arithmeticBinaryTileBaseKernel<half,half,half,(mlir::mps::arithmeticOp)4>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v10 = v7 - 2;
    uint64_t v68 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v68 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v7 - 3;
    uint64_t v69 = 1;
    char v12 = 1;
LABEL_6:
    uint64_t v13 = v7 - 4;
    char v14 = 1;
    uint64_t v60 = 1;
    char v15 = 1;
LABEL_7:
    uint64_t v16 = 1;
    goto LABEL_8;
  }
  uint64_t v10 = v7 - 2;
  uint64_t v69 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v10 = 0;
    char v12 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v7 - 3;
  uint64_t v60 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v12 = 0;
    uint64_t v11 = 0;
    char v15 = 0;
    uint64_t v13 = -1;
    uint64_t v10 = 1;
    char v14 = 1;
    goto LABEL_7;
  }
  char v14 = 0;
  char v12 = 0;
  char v15 = 0;
  uint64_t v13 = v7 - 4;
  uint64_t v16 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v52 = v16;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v67 = 0;
    uint64_t v50 = 0;
    uint64_t v58 = 0;
    goto LABEL_37;
  }
  uint64_t v17 = *(void *)(v4 + 16);
  uint64_t v18 = v17 - 4;
  if (v17 >= 4)
  {
    if (v18 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v18) == 1) {
      uint64_t v50 = 0;
    }
    else {
      uint64_t v50 = *(void *)(*(void *)(v4 + 64) + 8 * v18);
    }
    uint64_t v19 = v17 - 3;
    goto LABEL_26;
  }
  if (v17 == 3)
  {
    uint64_t v19 = 0;
    uint64_t v50 = 0;
LABEL_26:
    if (v19 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v19) == 1) {
      uint64_t v58 = 0;
    }
    else {
      uint64_t v58 = *(void *)(*(void *)(v4 + 64) + 8 * v19);
    }
    uint64_t v22 = v17 - 2;
    goto LABEL_31;
  }
  if (v17 < 2)
  {
    uint64_t v20 = 0;
    uint64_t v67 = 0;
    uint64_t v50 = 0;
    uint64_t v58 = 0;
    uint64_t v21 = 0;
    if (v17 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v22 = 0;
  uint64_t v58 = 0;
  uint64_t v50 = 0;
LABEL_31:
  if (v22 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
    uint64_t v67 = 0;
  }
  else {
    uint64_t v67 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
  }
  uint64_t v20 = v17 - 1;
LABEL_36:
  if (v20 > (int)v17 - 1)
  {
LABEL_37:
    uint64_t v21 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v66 = 0;
    uint64_t v49 = 0;
    uint64_t v57 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v20) != 1)
  {
    uint64_t v21 = *(void *)(*(void *)(v4 + 64) + 8 * v20);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v21 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v23 = *(void *)(v5 + 16);
  uint64_t v24 = v23 - 4;
  if (v23 >= 4)
  {
    if (v24 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v24) == 1) {
      uint64_t v49 = 0;
    }
    else {
      uint64_t v49 = *(void *)(*(void *)(v5 + 64) + 8 * v24);
    }
    uint64_t v25 = v23 - 3;
    goto LABEL_56;
  }
  if (v23 == 3)
  {
    uint64_t v25 = 0;
    uint64_t v49 = 0;
LABEL_56:
    if (v25 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v25) == 1) {
      uint64_t v57 = 0;
    }
    else {
      uint64_t v57 = *(void *)(*(void *)(v5 + 64) + 8 * v25);
    }
    uint64_t v28 = v23 - 2;
    goto LABEL_61;
  }
  if (v23 >= 2)
  {
    uint64_t v28 = 0;
    uint64_t v57 = 0;
    uint64_t v49 = 0;
LABEL_61:
    if (v28 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v66 = 0;
    }
    else {
      uint64_t v66 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v26 = v23 - 1;
    goto LABEL_66;
  }
  uint64_t v26 = 0;
  uint64_t v66 = 0;
  uint64_t v49 = 0;
  uint64_t v57 = 0;
  uint64_t v27 = 0;
  if (v23 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v26 <= (int)v23 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v26) != 1)
    {
      uint64_t v27 = *(void *)(*(void *)(v5 + 64) + 8 * v26);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v27 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v65 = 0;
    uint64_t v51 = 0;
    uint64_t v59 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v27 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v14 & 1) != 0 || v13 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v13) == 1)
  {
    uint64_t v51 = 0;
    if (v15) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v51 = *(void *)(*(void *)(v6 + 64) + 8 * v13);
    if (v15) {
      goto LABEL_98;
    }
  }
  if (v11 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v11) == 1)
  {
LABEL_98:
    uint64_t v59 = 0;
    if (v12) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v59 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
  if (v12) {
    goto LABEL_101;
  }
LABEL_99:
  if (v10 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v10) != 1)
  {
    uint64_t v65 = *(void *)(*(void *)(v6 + 64) + 8 * v10);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v29 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v65 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v29 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v52 >= 1)
  {
    uint64_t v30 = 0;
    uint64_t v56 = (__int16 *)(**(void **)a3 + *(void *)(v4 + 40));
    __float2 v55 = (__int16 *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    float v54 = (_WORD *)(**a4 + *(void *)(v6 + 40));
    do
    {
      uint64_t v53 = v30;
      if (v60 >= 1)
      {
        uint64_t v31 = 0;
        uint64_t v63 = v55;
        uint64_t v64 = v56;
        uint64_t v62 = v54;
        do
        {
          uint64_t v61 = v31;
          if (v69 >= 1)
          {
            uint64_t v32 = 0;
            uint64_t v33 = v63;
            uint64_t v34 = v64;
            uint64_t v35 = v62;
            do
            {
              uint64_t v70 = v32;
              uint64_t v36 = v68;
              uint64_t v37 = v34;
              uint64_t v38 = v33;
              float v39 = v35;
              if (v68 >= 1)
              {
                do
                {
                  _H0 = *v37;
                  _H1 = *v38;
                  __asm
                  {
                    FCVT            S0, H0; float
                    FCVT            S1, H1; float
                  }
                  _S0 = powf(_S0, _S1);
                  __asm { FCVT            H0, S0 }
                  _WORD *v39 = LOWORD(_S0);
                  float v39 = (_WORD *)((char *)v39 + v29);
                  uint64_t v38 = (__int16 *)((char *)v38 + v27);
                  uint64_t v37 = (__int16 *)((char *)v37 + v21);
                  --v36;
                }
                while (v36);
              }
              uint64_t v32 = v70 + 1;
              uint64_t v35 = (_WORD *)((char *)v35 + v65);
              uint64_t v33 = (__int16 *)((char *)v33 + v66);
              uint64_t v34 = (__int16 *)((char *)v34 + v67);
            }
            while (v70 + 1 != v69);
          }
          uint64_t v31 = v61 + 1;
          uint64_t v62 = (_WORD *)((char *)v62 + v59);
          uint64_t v63 = (__int16 *)((char *)v63 + v57);
          uint64_t v64 = (__int16 *)((char *)v64 + v58);
        }
        while (v61 + 1 != v60);
      }
      uint64_t v30 = v53 + 1;
      float v54 = (_WORD *)((char *)v54 + v51);
      __float2 v55 = (__int16 *)((char *)v55 + v49);
      uint64_t v56 = (__int16 *)((char *)v56 + v50);
    }
    while (v53 + 1 != v52);
  }
}

void mlir::mps::arithmeticBinaryTileBaseKernel<__emulated_bf16,__emulated_bf16,__emulated_bf16,(mlir::mps::arithmeticOp)4>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v10 = v7 - 2;
    uint64_t v58 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v58 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v7 - 3;
    uint64_t v59 = 1;
    char v12 = 1;
LABEL_6:
    uint64_t v13 = v7 - 4;
    char v14 = 1;
    uint64_t v50 = 1;
    char v15 = 1;
LABEL_7:
    uint64_t v16 = 1;
    goto LABEL_8;
  }
  uint64_t v10 = v7 - 2;
  uint64_t v59 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v10 = 0;
    char v12 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v7 - 3;
  uint64_t v50 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v12 = 0;
    uint64_t v11 = 0;
    char v15 = 0;
    uint64_t v13 = -1;
    uint64_t v10 = 1;
    char v14 = 1;
    goto LABEL_7;
  }
  char v14 = 0;
  char v12 = 0;
  char v15 = 0;
  uint64_t v13 = v7 - 4;
  uint64_t v16 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v42 = v16;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v57 = 0;
    uint64_t v40 = 0;
    uint64_t v48 = 0;
    goto LABEL_37;
  }
  uint64_t v17 = *(void *)(v4 + 16);
  uint64_t v18 = v17 - 4;
  if (v17 >= 4)
  {
    if (v18 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v18) == 1) {
      uint64_t v40 = 0;
    }
    else {
      uint64_t v40 = *(void *)(*(void *)(v4 + 64) + 8 * v18);
    }
    uint64_t v19 = v17 - 3;
    goto LABEL_26;
  }
  if (v17 == 3)
  {
    uint64_t v19 = 0;
    uint64_t v40 = 0;
LABEL_26:
    if (v19 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v19) == 1) {
      uint64_t v48 = 0;
    }
    else {
      uint64_t v48 = *(void *)(*(void *)(v4 + 64) + 8 * v19);
    }
    uint64_t v21 = v17 - 2;
    goto LABEL_31;
  }
  if (v17 < 2)
  {
    uint64_t v20 = 0;
    uint64_t v57 = 0;
    uint64_t v40 = 0;
    uint64_t v48 = 0;
    uint64_t v61 = 0;
    if (v17 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v21 = 0;
  uint64_t v48 = 0;
  uint64_t v40 = 0;
LABEL_31:
  if (v21 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v21) == 1) {
    uint64_t v57 = 0;
  }
  else {
    uint64_t v57 = *(void *)(*(void *)(v4 + 64) + 8 * v21);
  }
  uint64_t v20 = v17 - 1;
LABEL_36:
  if (v20 > (int)v17 - 1)
  {
LABEL_37:
    uint64_t v61 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v56 = 0;
    uint64_t v39 = 0;
    uint64_t v47 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v20) != 1)
  {
    uint64_t v61 = *(void *)(*(void *)(v4 + 64) + 8 * v20);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v61 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v22 = *(void *)(v5 + 16);
  uint64_t v23 = v22 - 4;
  if (v22 >= 4)
  {
    if (v23 > (int)v22 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v23) == 1) {
      uint64_t v39 = 0;
    }
    else {
      uint64_t v39 = *(void *)(*(void *)(v5 + 64) + 8 * v23);
    }
    uint64_t v24 = v22 - 3;
    goto LABEL_56;
  }
  if (v22 == 3)
  {
    uint64_t v24 = 0;
    uint64_t v39 = 0;
LABEL_56:
    if (v24 > (int)v22 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v24) == 1) {
      uint64_t v47 = 0;
    }
    else {
      uint64_t v47 = *(void *)(*(void *)(v5 + 64) + 8 * v24);
    }
    uint64_t v26 = v22 - 2;
    goto LABEL_61;
  }
  if (v22 >= 2)
  {
    uint64_t v26 = 0;
    uint64_t v47 = 0;
    uint64_t v39 = 0;
LABEL_61:
    if (v26 > (int)v22 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v26) == 1) {
      uint64_t v56 = 0;
    }
    else {
      uint64_t v56 = *(void *)(*(void *)(v5 + 64) + 8 * v26);
    }
    uint64_t v25 = v22 - 1;
    goto LABEL_66;
  }
  uint64_t v25 = 0;
  uint64_t v56 = 0;
  uint64_t v39 = 0;
  uint64_t v47 = 0;
  uint64_t v60 = 0;
  if (v22 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v25 <= (int)v22 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v25) != 1)
    {
      uint64_t v60 = *(void *)(*(void *)(v5 + 64) + 8 * v25);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v60 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v55 = 0;
    uint64_t v41 = 0;
    uint64_t v49 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v60 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v14 & 1) != 0 || v13 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v13) == 1)
  {
    uint64_t v41 = 0;
    if (v15) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v41 = *(void *)(*(void *)(v6 + 64) + 8 * v13);
    if (v15) {
      goto LABEL_98;
    }
  }
  if (v11 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v11) == 1)
  {
LABEL_98:
    uint64_t v49 = 0;
    if (v12) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v49 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
  if (v12) {
    goto LABEL_101;
  }
LABEL_99:
  if (v10 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v10) != 1)
  {
    uint64_t v55 = *(void *)(*(void *)(v6 + 64) + 8 * v10);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v27 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v55 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v27 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v42 >= 1)
  {
    uint64_t v28 = 0;
    uint64_t v46 = (unsigned __int16 *)(**(void **)a3 + *(void *)(v4 + 40));
    float v45 = (unsigned __int16 *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v44 = (_WORD *)(**a4 + *(void *)(v6 + 40));
    do
    {
      uint64_t v43 = v28;
      if (v50 >= 1)
      {
        uint64_t v29 = 0;
        uint64_t v53 = v45;
        float v54 = v46;
        uint64_t v52 = v44;
        do
        {
          uint64_t v51 = v29;
          if (v59 >= 1)
          {
            uint64_t v30 = 0;
            uint64_t v32 = v53;
            uint64_t v31 = v54;
            uint64_t v33 = v52;
            do
            {
              uint64_t v34 = v58;
              uint64_t v35 = v31;
              uint64_t v36 = v32;
              uint64_t v37 = v33;
              if (v58 >= 1)
              {
                do
                {
                  float v38 = powf(COERCE_FLOAT(*v35 << 16), COERCE_FLOAT(*v36 << 16));
                  _WORD *v37 = HIWORD(COERCE_UNSIGNED_INT(v38 + (float)(COERCE_FLOAT(LODWORD(v38) & 0xFF800000) * 0.0039062)));
                  uint64_t v37 = (_WORD *)((char *)v37 + v27);
                  uint64_t v36 = (unsigned __int16 *)((char *)v36 + v60);
                  uint64_t v35 = (unsigned __int16 *)((char *)v35 + v61);
                  --v34;
                }
                while (v34);
              }
              ++v30;
              uint64_t v33 = (_WORD *)((char *)v33 + v55);
              uint64_t v32 = (unsigned __int16 *)((char *)v32 + v56);
              uint64_t v31 = (unsigned __int16 *)((char *)v31 + v57);
            }
            while (v30 != v59);
          }
          uint64_t v29 = v51 + 1;
          uint64_t v52 = (_WORD *)((char *)v52 + v49);
          uint64_t v53 = (unsigned __int16 *)((char *)v53 + v47);
          float v54 = (unsigned __int16 *)((char *)v54 + v48);
        }
        while (v51 + 1 != v50);
      }
      uint64_t v28 = v43 + 1;
      uint64_t v44 = (_WORD *)((char *)v44 + v41);
      float v45 = (unsigned __int16 *)((char *)v45 + v39);
      uint64_t v46 = (unsigned __int16 *)((char *)v46 + v40);
    }
    while (v43 + 1 != v42);
  }
}

void mlir::mps::arithmeticBinaryTileBaseKernel<long long,long long,long long,(mlir::mps::arithmeticOp)4>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v10 = v7 - 2;
    uint64_t v59 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v59 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v7 - 3;
    uint64_t v60 = 1;
    char v12 = 1;
LABEL_6:
    uint64_t v13 = v7 - 4;
    char v14 = 1;
    uint64_t v51 = 1;
    char v15 = 1;
LABEL_7:
    uint64_t v16 = 1;
    goto LABEL_8;
  }
  uint64_t v10 = v7 - 2;
  uint64_t v60 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v10 = 0;
    char v12 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v7 - 3;
  uint64_t v51 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v12 = 0;
    uint64_t v11 = 0;
    char v15 = 0;
    uint64_t v13 = -1;
    uint64_t v10 = 1;
    char v14 = 1;
    goto LABEL_7;
  }
  char v14 = 0;
  char v12 = 0;
  char v15 = 0;
  uint64_t v13 = v7 - 4;
  uint64_t v16 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v43 = v16;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v58 = 0;
    uint64_t v41 = 0;
    uint64_t v49 = 0;
    goto LABEL_37;
  }
  uint64_t v17 = *(void *)(v4 + 16);
  uint64_t v18 = v17 - 4;
  if (v17 >= 4)
  {
    if (v18 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v18) == 1) {
      uint64_t v41 = 0;
    }
    else {
      uint64_t v41 = *(void *)(*(void *)(v4 + 64) + 8 * v18);
    }
    uint64_t v19 = v17 - 3;
    goto LABEL_26;
  }
  if (v17 == 3)
  {
    uint64_t v19 = 0;
    uint64_t v41 = 0;
LABEL_26:
    if (v19 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v19) == 1) {
      uint64_t v49 = 0;
    }
    else {
      uint64_t v49 = *(void *)(*(void *)(v4 + 64) + 8 * v19);
    }
    uint64_t v22 = v17 - 2;
    goto LABEL_31;
  }
  if (v17 < 2)
  {
    uint64_t v20 = 0;
    uint64_t v58 = 0;
    uint64_t v41 = 0;
    uint64_t v49 = 0;
    uint64_t v21 = 0;
    if (v17 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v22 = 0;
  uint64_t v49 = 0;
  uint64_t v41 = 0;
LABEL_31:
  if (v22 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
    uint64_t v58 = 0;
  }
  else {
    uint64_t v58 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
  }
  uint64_t v20 = v17 - 1;
LABEL_36:
  if (v20 > (int)v17 - 1)
  {
LABEL_37:
    uint64_t v21 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v57 = 0;
    uint64_t v40 = 0;
    uint64_t v48 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v20) != 1)
  {
    uint64_t v21 = *(void *)(*(void *)(v4 + 64) + 8 * v20);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v21 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v23 = *(void *)(v5 + 16);
  uint64_t v24 = v23 - 4;
  if (v23 >= 4)
  {
    if (v24 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v24) == 1) {
      uint64_t v40 = 0;
    }
    else {
      uint64_t v40 = *(void *)(*(void *)(v5 + 64) + 8 * v24);
    }
    uint64_t v25 = v23 - 3;
    goto LABEL_56;
  }
  if (v23 == 3)
  {
    uint64_t v25 = 0;
    uint64_t v40 = 0;
LABEL_56:
    if (v25 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v25) == 1) {
      uint64_t v48 = 0;
    }
    else {
      uint64_t v48 = *(void *)(*(void *)(v5 + 64) + 8 * v25);
    }
    uint64_t v28 = v23 - 2;
    goto LABEL_61;
  }
  if (v23 >= 2)
  {
    uint64_t v28 = 0;
    uint64_t v48 = 0;
    uint64_t v40 = 0;
LABEL_61:
    if (v28 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v57 = 0;
    }
    else {
      uint64_t v57 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v26 = v23 - 1;
    goto LABEL_66;
  }
  uint64_t v26 = 0;
  uint64_t v57 = 0;
  uint64_t v40 = 0;
  uint64_t v48 = 0;
  uint64_t v27 = 0;
  if (v23 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v26 <= (int)v23 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v26) != 1)
    {
      uint64_t v27 = *(void *)(*(void *)(v5 + 64) + 8 * v26);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v27 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v56 = 0;
    uint64_t v42 = 0;
    uint64_t v50 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v27 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v14 & 1) != 0 || v13 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v13) == 1)
  {
    uint64_t v42 = 0;
    if (v15) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v42 = *(void *)(*(void *)(v6 + 64) + 8 * v13);
    if (v15) {
      goto LABEL_98;
    }
  }
  if (v11 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v11) == 1)
  {
LABEL_98:
    uint64_t v50 = 0;
    if (v12) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v50 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
  if (v12) {
    goto LABEL_101;
  }
LABEL_99:
  if (v10 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v10) != 1)
  {
    uint64_t v56 = *(void *)(*(void *)(v6 + 64) + 8 * v10);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v29 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v56 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v29 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v43 >= 1)
  {
    uint64_t v30 = 0;
    uint64_t v47 = (uint64_t *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v46 = (uint64_t *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    float v45 = (void *)(**a4 + *(void *)(v6 + 40));
    do
    {
      uint64_t v44 = v30;
      if (v51 >= 1)
      {
        uint64_t v31 = 0;
        float v54 = v46;
        uint64_t v55 = v47;
        uint64_t v53 = v45;
        do
        {
          uint64_t v52 = v31;
          if (v60 >= 1)
          {
            uint64_t v32 = 0;
            uint64_t v33 = v54;
            uint64_t v34 = v55;
            uint64_t v35 = v53;
            do
            {
              uint64_t v61 = v32;
              uint64_t v36 = v59;
              uint64_t v37 = v34;
              float v38 = v33;
              uint64_t v39 = v35;
              if (v59 >= 1)
              {
                do
                {
                  void *v39 = (uint64_t)pow((double)*v37, (double)*v38);
                  uint64_t v39 = (void *)((char *)v39 + v29);
                  float v38 = (uint64_t *)((char *)v38 + v27);
                  uint64_t v37 = (uint64_t *)((char *)v37 + v21);
                  --v36;
                }
                while (v36);
              }
              uint64_t v32 = v61 + 1;
              uint64_t v35 = (void *)((char *)v35 + v56);
              uint64_t v33 = (uint64_t *)((char *)v33 + v57);
              uint64_t v34 = (uint64_t *)((char *)v34 + v58);
            }
            while (v61 + 1 != v60);
          }
          uint64_t v31 = v52 + 1;
          uint64_t v53 = (void *)((char *)v53 + v50);
          float v54 = (uint64_t *)((char *)v54 + v48);
          uint64_t v55 = (uint64_t *)((char *)v55 + v49);
        }
        while (v52 + 1 != v51);
      }
      uint64_t v30 = v44 + 1;
      float v45 = (void *)((char *)v45 + v42);
      uint64_t v46 = (uint64_t *)((char *)v46 + v40);
      uint64_t v47 = (uint64_t *)((char *)v47 + v41);
    }
    while (v44 + 1 != v43);
  }
}

void mlir::mps::arithmeticBinaryTileBaseKernel<int,int,int,(mlir::mps::arithmeticOp)4>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v10 = v7 - 2;
    uint64_t v59 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v59 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v7 - 3;
    uint64_t v60 = 1;
    char v12 = 1;
LABEL_6:
    uint64_t v13 = v7 - 4;
    char v14 = 1;
    uint64_t v51 = 1;
    char v15 = 1;
LABEL_7:
    uint64_t v16 = 1;
    goto LABEL_8;
  }
  uint64_t v10 = v7 - 2;
  uint64_t v60 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v10 = 0;
    char v12 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v7 - 3;
  uint64_t v51 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v12 = 0;
    uint64_t v11 = 0;
    char v15 = 0;
    uint64_t v13 = -1;
    uint64_t v10 = 1;
    char v14 = 1;
    goto LABEL_7;
  }
  char v14 = 0;
  char v12 = 0;
  char v15 = 0;
  uint64_t v13 = v7 - 4;
  uint64_t v16 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v43 = v16;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v58 = 0;
    uint64_t v41 = 0;
    uint64_t v49 = 0;
    goto LABEL_37;
  }
  uint64_t v17 = *(void *)(v4 + 16);
  uint64_t v18 = v17 - 4;
  if (v17 >= 4)
  {
    if (v18 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v18) == 1) {
      uint64_t v41 = 0;
    }
    else {
      uint64_t v41 = *(void *)(*(void *)(v4 + 64) + 8 * v18);
    }
    uint64_t v19 = v17 - 3;
    goto LABEL_26;
  }
  if (v17 == 3)
  {
    uint64_t v19 = 0;
    uint64_t v41 = 0;
LABEL_26:
    if (v19 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v19) == 1) {
      uint64_t v49 = 0;
    }
    else {
      uint64_t v49 = *(void *)(*(void *)(v4 + 64) + 8 * v19);
    }
    uint64_t v22 = v17 - 2;
    goto LABEL_31;
  }
  if (v17 < 2)
  {
    uint64_t v20 = 0;
    uint64_t v58 = 0;
    uint64_t v41 = 0;
    uint64_t v49 = 0;
    uint64_t v21 = 0;
    if (v17 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v22 = 0;
  uint64_t v49 = 0;
  uint64_t v41 = 0;
LABEL_31:
  if (v22 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
    uint64_t v58 = 0;
  }
  else {
    uint64_t v58 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
  }
  uint64_t v20 = v17 - 1;
LABEL_36:
  if (v20 > (int)v17 - 1)
  {
LABEL_37:
    uint64_t v21 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v57 = 0;
    uint64_t v40 = 0;
    uint64_t v48 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v20) != 1)
  {
    uint64_t v21 = *(void *)(*(void *)(v4 + 64) + 8 * v20);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v21 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v23 = *(void *)(v5 + 16);
  uint64_t v24 = v23 - 4;
  if (v23 >= 4)
  {
    if (v24 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v24) == 1) {
      uint64_t v40 = 0;
    }
    else {
      uint64_t v40 = *(void *)(*(void *)(v5 + 64) + 8 * v24);
    }
    uint64_t v25 = v23 - 3;
    goto LABEL_56;
  }
  if (v23 == 3)
  {
    uint64_t v25 = 0;
    uint64_t v40 = 0;
LABEL_56:
    if (v25 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v25) == 1) {
      uint64_t v48 = 0;
    }
    else {
      uint64_t v48 = *(void *)(*(void *)(v5 + 64) + 8 * v25);
    }
    uint64_t v28 = v23 - 2;
    goto LABEL_61;
  }
  if (v23 >= 2)
  {
    uint64_t v28 = 0;
    uint64_t v48 = 0;
    uint64_t v40 = 0;
LABEL_61:
    if (v28 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v57 = 0;
    }
    else {
      uint64_t v57 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v26 = v23 - 1;
    goto LABEL_66;
  }
  uint64_t v26 = 0;
  uint64_t v57 = 0;
  uint64_t v40 = 0;
  uint64_t v48 = 0;
  uint64_t v27 = 0;
  if (v23 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v26 <= (int)v23 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v26) != 1)
    {
      uint64_t v27 = *(void *)(*(void *)(v5 + 64) + 8 * v26);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v27 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v56 = 0;
    uint64_t v42 = 0;
    uint64_t v50 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v27 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v14 & 1) != 0 || v13 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v13) == 1)
  {
    uint64_t v42 = 0;
    if (v15) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v42 = *(void *)(*(void *)(v6 + 64) + 8 * v13);
    if (v15) {
      goto LABEL_98;
    }
  }
  if (v11 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v11) == 1)
  {
LABEL_98:
    uint64_t v50 = 0;
    if (v12) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v50 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
  if (v12) {
    goto LABEL_101;
  }
LABEL_99:
  if (v10 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v10) != 1)
  {
    uint64_t v56 = *(void *)(*(void *)(v6 + 64) + 8 * v10);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v29 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v56 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v29 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v43 >= 1)
  {
    uint64_t v30 = 0;
    uint64_t v47 = (int *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v46 = (int *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    float v45 = (_DWORD *)(**a4 + *(void *)(v6 + 40));
    do
    {
      uint64_t v44 = v30;
      if (v51 >= 1)
      {
        uint64_t v31 = 0;
        float v54 = v46;
        uint64_t v55 = v47;
        uint64_t v53 = v45;
        do
        {
          uint64_t v52 = v31;
          if (v60 >= 1)
          {
            uint64_t v32 = 0;
            uint64_t v33 = v54;
            uint64_t v34 = v55;
            uint64_t v35 = v53;
            do
            {
              uint64_t v61 = v32;
              uint64_t v36 = v59;
              uint64_t v37 = v34;
              float v38 = v33;
              uint64_t v39 = v35;
              if (v59 >= 1)
              {
                do
                {
                  _DWORD *v39 = (int)pow((double)*v37, (double)*v38);
                  uint64_t v39 = (_DWORD *)((char *)v39 + v29);
                  float v38 = (int *)((char *)v38 + v27);
                  uint64_t v37 = (int *)((char *)v37 + v21);
                  --v36;
                }
                while (v36);
              }
              uint64_t v32 = v61 + 1;
              uint64_t v35 = (_DWORD *)((char *)v35 + v56);
              uint64_t v33 = (int *)((char *)v33 + v57);
              uint64_t v34 = (int *)((char *)v34 + v58);
            }
            while (v61 + 1 != v60);
          }
          uint64_t v31 = v52 + 1;
          uint64_t v53 = (_DWORD *)((char *)v53 + v50);
          float v54 = (int *)((char *)v54 + v48);
          uint64_t v55 = (int *)((char *)v55 + v49);
        }
        while (v52 + 1 != v51);
      }
      uint64_t v30 = v44 + 1;
      float v45 = (_DWORD *)((char *)v45 + v42);
      uint64_t v46 = (int *)((char *)v46 + v40);
      uint64_t v47 = (int *)((char *)v47 + v41);
    }
    while (v44 + 1 != v43);
  }
}

void mlir::mps::arithmeticBinaryTileBaseKernel<short,short,short,(mlir::mps::arithmeticOp)4>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4, long double a5, int16x4_t a6)
{
  uint64_t v6 = **a1;
  uint64_t v7 = (*a1)[1];
  uint64_t v8 = **a2;
  uint64_t v9 = *(void *)(v8 + 16);
  uint64_t v10 = v9 - 1;
  if (v9 <= 0)
  {
    uint64_t v12 = v9 - 2;
    uint64_t v61 = 1;
    goto LABEL_5;
  }
  uint64_t v11 = *(void *)(v8 + 24);
  uint64_t v61 = *(void *)(v11 + 8 * v10);
  if (v9 == 1)
  {
    uint64_t v12 = -1;
LABEL_5:
    uint64_t v13 = v9 - 3;
    uint64_t v62 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v9 - 4;
    char v16 = 1;
    uint64_t v53 = 1;
    char v17 = 1;
LABEL_7:
    uint64_t v18 = 1;
    goto LABEL_8;
  }
  uint64_t v12 = v9 - 2;
  uint64_t v62 = *(void *)(v11 + 8 * (v9 - 2));
  if ((unint64_t)v9 <= 2)
  {
    uint64_t v12 = 0;
    char v14 = 0;
    uint64_t v13 = -1;
    goto LABEL_6;
  }
  uint64_t v13 = v9 - 3;
  uint64_t v53 = *(void *)(v11 + 8 * (v9 - 3));
  if (v9 == 3)
  {
    char v14 = 0;
    uint64_t v13 = 0;
    char v17 = 0;
    uint64_t v15 = -1;
    uint64_t v12 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v17 = 0;
  uint64_t v15 = v9 - 4;
  uint64_t v18 = *(void *)(v11 + 8 * (v9 - 4));
LABEL_8:
  uint64_t v45 = v18;
  if (*(unsigned char *)(v6 + 58))
  {
    uint64_t v60 = 0;
    uint64_t v43 = 0;
    uint64_t v51 = 0;
    goto LABEL_37;
  }
  uint64_t v19 = *(void *)(v6 + 16);
  uint64_t v20 = v19 - 4;
  if (v19 >= 4)
  {
    if (v20 > (int)v19 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v20) == 1) {
      uint64_t v43 = 0;
    }
    else {
      uint64_t v43 = *(void *)(*(void *)(v6 + 64) + 8 * v20);
    }
    uint64_t v21 = v19 - 3;
    goto LABEL_26;
  }
  if (v19 == 3)
  {
    uint64_t v21 = 0;
    uint64_t v43 = 0;
LABEL_26:
    if (v21 > (int)v19 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v21) == 1) {
      uint64_t v51 = 0;
    }
    else {
      uint64_t v51 = *(void *)(*(void *)(v6 + 64) + 8 * v21);
    }
    uint64_t v24 = v19 - 2;
    goto LABEL_31;
  }
  if (v19 < 2)
  {
    uint64_t v22 = 0;
    uint64_t v60 = 0;
    uint64_t v43 = 0;
    uint64_t v51 = 0;
    uint64_t v23 = 0;
    if (v19 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v24 = 0;
  uint64_t v51 = 0;
  uint64_t v43 = 0;
LABEL_31:
  if (v24 > (int)v19 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v24) == 1) {
    uint64_t v60 = 0;
  }
  else {
    uint64_t v60 = *(void *)(*(void *)(v6 + 64) + 8 * v24);
  }
  uint64_t v22 = v19 - 1;
LABEL_36:
  if (v22 > (int)v19 - 1)
  {
LABEL_37:
    uint64_t v23 = 0;
    if (!*(unsigned char *)(v7 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v59 = 0;
    uint64_t v42 = 0;
    uint64_t v50 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v6 + 24) + 8 * v22) != 1)
  {
    uint64_t v23 = *(void *)(*(void *)(v6 + 64) + 8 * v22);
    if (*(unsigned char *)(v7 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v23 = 0;
LABEL_46:
  if (*(unsigned char *)(v7 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v25 = *(void *)(v7 + 16);
  uint64_t v26 = v25 - 4;
  if (v25 >= 4)
  {
    if (v26 > (int)v25 - 1 || *(void *)(*(void *)(v7 + 24) + 8 * v26) == 1) {
      uint64_t v42 = 0;
    }
    else {
      uint64_t v42 = *(void *)(*(void *)(v7 + 64) + 8 * v26);
    }
    uint64_t v27 = v25 - 3;
    goto LABEL_56;
  }
  if (v25 == 3)
  {
    uint64_t v27 = 0;
    uint64_t v42 = 0;
LABEL_56:
    if (v27 > (int)v25 - 1 || *(void *)(*(void *)(v7 + 24) + 8 * v27) == 1) {
      uint64_t v50 = 0;
    }
    else {
      uint64_t v50 = *(void *)(*(void *)(v7 + 64) + 8 * v27);
    }
    uint64_t v30 = v25 - 2;
    goto LABEL_61;
  }
  if (v25 >= 2)
  {
    uint64_t v30 = 0;
    uint64_t v50 = 0;
    uint64_t v42 = 0;
LABEL_61:
    if (v30 > (int)v25 - 1 || *(void *)(*(void *)(v7 + 24) + 8 * v30) == 1) {
      uint64_t v59 = 0;
    }
    else {
      uint64_t v59 = *(void *)(*(void *)(v7 + 64) + 8 * v30);
    }
    uint64_t v28 = v25 - 1;
    goto LABEL_66;
  }
  uint64_t v28 = 0;
  uint64_t v59 = 0;
  uint64_t v42 = 0;
  uint64_t v50 = 0;
  uint64_t v29 = 0;
  if (v25 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v28 <= (int)v25 - 1)
  {
    if (*(void *)(*(void *)(v7 + 24) + 8 * v28) != 1)
    {
      uint64_t v29 = *(void *)(*(void *)(v7 + 64) + 8 * v28);
      if (!*(unsigned char *)(v8 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v29 = 0;
LABEL_78:
    if (!*(unsigned char *)(v8 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v58 = 0;
    uint64_t v44 = 0;
    uint64_t v52 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v29 = 0;
  if (*(unsigned char *)(v8 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v9 - 1 || *(void *)(*(void *)(v8 + 24) + 8 * v15) == 1)
  {
    uint64_t v44 = 0;
    if (v17) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v44 = *(void *)(*(void *)(v8 + 64) + 8 * v15);
    if (v17) {
      goto LABEL_98;
    }
  }
  if (v13 > (int)v9 - 1 || *(void *)(*(void *)(v8 + 24) + 8 * v13) == 1)
  {
LABEL_98:
    uint64_t v52 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v52 = *(void *)(*(void *)(v8 + 64) + 8 * v13);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v12 <= (int)v9 - 1 && *(void *)(*(void *)(v8 + 24) + 8 * v12) != 1)
  {
    uint64_t v58 = *(void *)(*(void *)(v8 + 64) + 8 * v12);
    if (v9 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v31 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v58 = 0;
  if (v9 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v10 > (int)v9 - 1 || *(void *)(*(void *)(v8 + 24) + 8 * v10) == 1) {
    goto LABEL_80;
  }
  uint64_t v31 = *(void *)(*(void *)(v8 + 64) + 8 * v10);
LABEL_81:
  if (v45 >= 1)
  {
    uint64_t v32 = 0;
    uint64_t v49 = (_WORD *)(**(void **)a3 + *(void *)(v6 + 40));
    uint64_t v48 = (__int16 *)(*(void *)(*(void *)a3 + 8) + *(void *)(v7 + 40));
    uint64_t v47 = (_WORD *)(**a4 + *(void *)(v8 + 40));
    do
    {
      uint64_t v46 = v32;
      if (v53 >= 1)
      {
        uint64_t v33 = 0;
        uint64_t v56 = v48;
        uint64_t v57 = v49;
        uint64_t v55 = v47;
        do
        {
          uint64_t v54 = v33;
          if (v62 >= 1)
          {
            uint64_t v34 = 0;
            uint64_t v35 = v56;
            uint64_t v36 = v57;
            uint64_t v37 = v55;
            do
            {
              uint64_t v63 = v34;
              uint64_t v38 = v61;
              uint64_t v39 = v36;
              uint64_t v40 = v35;
              uint64_t v41 = v37;
              if (v61 >= 1)
              {
                do
                {
                  LOWORD(a5) = *v39;
                  a6.i16[0] = *v40;
                  a5 = pow((double)vmovl_s16(*(int16x4_t *)&a5).i32[0], (double)vmovl_s16(a6).i32[0]);
                  _WORD *v41 = (int)a5;
                  uint64_t v41 = (_WORD *)((char *)v41 + v31);
                  uint64_t v40 = (__int16 *)((char *)v40 + v29);
                  uint64_t v39 = (_WORD *)((char *)v39 + v23);
                  --v38;
                }
                while (v38);
              }
              uint64_t v34 = v63 + 1;
              uint64_t v37 = (_WORD *)((char *)v37 + v58);
              uint64_t v35 = (__int16 *)((char *)v35 + v59);
              uint64_t v36 = (_WORD *)((char *)v36 + v60);
            }
            while (v63 + 1 != v62);
          }
          uint64_t v33 = v54 + 1;
          uint64_t v55 = (_WORD *)((char *)v55 + v52);
          uint64_t v56 = (__int16 *)((char *)v56 + v50);
          uint64_t v57 = (_WORD *)((char *)v57 + v51);
        }
        while (v54 + 1 != v53);
      }
      uint64_t v32 = v46 + 1;
      uint64_t v47 = (_WORD *)((char *)v47 + v44);
      uint64_t v48 = (__int16 *)((char *)v48 + v42);
      uint64_t v49 = (_WORD *)((char *)v49 + v43);
    }
    while (v46 + 1 != v45);
  }
}

void mlir::mps::arithmeticBinaryTileBaseKernel<signed char,signed char,signed char,(mlir::mps::arithmeticOp)4>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v10 = v7 - 2;
    uint64_t v59 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v59 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v7 - 3;
    uint64_t v60 = 1;
    char v12 = 1;
LABEL_6:
    uint64_t v13 = v7 - 4;
    char v14 = 1;
    uint64_t v51 = 1;
    char v15 = 1;
LABEL_7:
    uint64_t v16 = 1;
    goto LABEL_8;
  }
  uint64_t v10 = v7 - 2;
  uint64_t v60 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v10 = 0;
    char v12 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v7 - 3;
  uint64_t v51 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v12 = 0;
    uint64_t v11 = 0;
    char v15 = 0;
    uint64_t v13 = -1;
    uint64_t v10 = 1;
    char v14 = 1;
    goto LABEL_7;
  }
  char v14 = 0;
  char v12 = 0;
  char v15 = 0;
  uint64_t v13 = v7 - 4;
  uint64_t v16 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v43 = v16;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v58 = 0;
    uint64_t v41 = 0;
    uint64_t v49 = 0;
    goto LABEL_37;
  }
  uint64_t v17 = *(void *)(v4 + 16);
  uint64_t v18 = v17 - 4;
  if (v17 >= 4)
  {
    if (v18 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v18) == 1) {
      uint64_t v41 = 0;
    }
    else {
      uint64_t v41 = *(void *)(*(void *)(v4 + 64) + 8 * v18);
    }
    uint64_t v19 = v17 - 3;
    goto LABEL_26;
  }
  if (v17 == 3)
  {
    uint64_t v19 = 0;
    uint64_t v41 = 0;
LABEL_26:
    if (v19 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v19) == 1) {
      uint64_t v49 = 0;
    }
    else {
      uint64_t v49 = *(void *)(*(void *)(v4 + 64) + 8 * v19);
    }
    uint64_t v22 = v17 - 2;
    goto LABEL_31;
  }
  if (v17 < 2)
  {
    uint64_t v20 = 0;
    uint64_t v58 = 0;
    uint64_t v41 = 0;
    uint64_t v49 = 0;
    uint64_t v21 = 0;
    if (v17 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v22 = 0;
  uint64_t v49 = 0;
  uint64_t v41 = 0;
LABEL_31:
  if (v22 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
    uint64_t v58 = 0;
  }
  else {
    uint64_t v58 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
  }
  uint64_t v20 = v17 - 1;
LABEL_36:
  if (v20 > (int)v17 - 1)
  {
LABEL_37:
    uint64_t v21 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v57 = 0;
    uint64_t v40 = 0;
    uint64_t v48 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v20) != 1)
  {
    uint64_t v21 = *(void *)(*(void *)(v4 + 64) + 8 * v20);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v21 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v23 = *(void *)(v5 + 16);
  uint64_t v24 = v23 - 4;
  if (v23 >= 4)
  {
    if (v24 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v24) == 1) {
      uint64_t v40 = 0;
    }
    else {
      uint64_t v40 = *(void *)(*(void *)(v5 + 64) + 8 * v24);
    }
    uint64_t v25 = v23 - 3;
    goto LABEL_56;
  }
  if (v23 == 3)
  {
    uint64_t v25 = 0;
    uint64_t v40 = 0;
LABEL_56:
    if (v25 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v25) == 1) {
      uint64_t v48 = 0;
    }
    else {
      uint64_t v48 = *(void *)(*(void *)(v5 + 64) + 8 * v25);
    }
    uint64_t v28 = v23 - 2;
    goto LABEL_61;
  }
  if (v23 >= 2)
  {
    uint64_t v28 = 0;
    uint64_t v48 = 0;
    uint64_t v40 = 0;
LABEL_61:
    if (v28 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v57 = 0;
    }
    else {
      uint64_t v57 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v26 = v23 - 1;
    goto LABEL_66;
  }
  uint64_t v26 = 0;
  uint64_t v57 = 0;
  uint64_t v40 = 0;
  uint64_t v48 = 0;
  uint64_t v27 = 0;
  if (v23 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v26 <= (int)v23 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v26) != 1)
    {
      uint64_t v27 = *(void *)(*(void *)(v5 + 64) + 8 * v26);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v27 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v56 = 0;
    uint64_t v42 = 0;
    uint64_t v50 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v27 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v14 & 1) != 0 || v13 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v13) == 1)
  {
    uint64_t v42 = 0;
    if (v15) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v42 = *(void *)(*(void *)(v6 + 64) + 8 * v13);
    if (v15) {
      goto LABEL_98;
    }
  }
  if (v11 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v11) == 1)
  {
LABEL_98:
    uint64_t v50 = 0;
    if (v12) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v50 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
  if (v12) {
    goto LABEL_101;
  }
LABEL_99:
  if (v10 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v10) != 1)
  {
    uint64_t v56 = *(void *)(*(void *)(v6 + 64) + 8 * v10);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v29 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v56 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v29 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v43 >= 1)
  {
    uint64_t v30 = 0;
    uint64_t v47 = (char *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v46 = (char *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v45 = (unsigned char *)(**a4 + *(void *)(v6 + 40));
    do
    {
      uint64_t v44 = v30;
      if (v51 >= 1)
      {
        uint64_t v31 = 0;
        uint64_t v54 = v46;
        uint64_t v55 = v47;
        uint64_t v53 = v45;
        do
        {
          uint64_t v52 = v31;
          if (v60 >= 1)
          {
            uint64_t v32 = 0;
            uint64_t v33 = v54;
            uint64_t v34 = v55;
            uint64_t v35 = v53;
            do
            {
              uint64_t v61 = v32;
              uint64_t v36 = v59;
              uint64_t v37 = v34;
              uint64_t v38 = v33;
              uint64_t v39 = v35;
              if (v59 >= 1)
              {
                do
                {
                  unsigned char *v39 = (int)pow((double)*v37, (double)*v38);
                  v39 += v29;
                  v38 += v27;
                  v37 += v21;
                  --v36;
                }
                while (v36);
              }
              uint64_t v32 = v61 + 1;
              v35 += v56;
              v33 += v57;
              v34 += v58;
            }
            while (v61 + 1 != v60);
          }
          uint64_t v31 = v52 + 1;
          v53 += v50;
          v54 += v48;
          v55 += v49;
        }
        while (v52 + 1 != v51);
      }
      uint64_t v30 = v44 + 1;
      v45 += v42;
      v46 += v40;
      v47 += v41;
    }
    while (v44 + 1 != v43);
  }
}

void mlir::mps::arithmeticBinaryTileBaseKernel<complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)5>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v10 = v7 - 2;
    uint64_t v65 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v65 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v7 - 3;
    uint64_t v66 = 1;
    char v12 = 1;
LABEL_6:
    uint64_t v13 = v7 - 4;
    char v14 = 1;
    uint64_t v57 = 1;
    char v15 = 1;
LABEL_7:
    uint64_t v16 = 1;
    goto LABEL_8;
  }
  uint64_t v10 = v7 - 2;
  uint64_t v66 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v10 = 0;
    char v12 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v7 - 3;
  uint64_t v57 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v12 = 0;
    uint64_t v11 = 0;
    char v15 = 0;
    uint64_t v13 = -1;
    uint64_t v10 = 1;
    char v14 = 1;
    goto LABEL_7;
  }
  char v14 = 0;
  char v12 = 0;
  char v15 = 0;
  uint64_t v13 = v7 - 4;
  uint64_t v16 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v49 = v16;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v64 = 0;
    uint64_t v47 = 0;
    uint64_t v55 = 0;
    goto LABEL_37;
  }
  uint64_t v17 = *(void *)(v4 + 16);
  uint64_t v18 = v17 - 4;
  if (v17 >= 4)
  {
    if (v18 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v18) == 1) {
      uint64_t v47 = 0;
    }
    else {
      uint64_t v47 = *(void *)(*(void *)(v4 + 64) + 8 * v18);
    }
    uint64_t v19 = v17 - 3;
    goto LABEL_26;
  }
  if (v17 == 3)
  {
    uint64_t v19 = 0;
    uint64_t v47 = 0;
LABEL_26:
    if (v19 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v19) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v4 + 64) + 8 * v19);
    }
    uint64_t v22 = v17 - 2;
    goto LABEL_31;
  }
  if (v17 < 2)
  {
    uint64_t v20 = 0;
    uint64_t v64 = 0;
    uint64_t v47 = 0;
    uint64_t v55 = 0;
    uint64_t v21 = 0;
    if (v17 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v22 = 0;
  uint64_t v55 = 0;
  uint64_t v47 = 0;
LABEL_31:
  if (v22 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
    uint64_t v64 = 0;
  }
  else {
    uint64_t v64 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
  }
  uint64_t v20 = v17 - 1;
LABEL_36:
  if (v20 > (int)v17 - 1)
  {
LABEL_37:
    uint64_t v21 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v63 = 0;
    uint64_t v46 = 0;
    uint64_t v54 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v20) != 1)
  {
    uint64_t v21 = *(void *)(*(void *)(v4 + 64) + 8 * v20);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v21 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v23 = *(void *)(v5 + 16);
  uint64_t v24 = v23 - 4;
  if (v23 >= 4)
  {
    if (v24 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v24) == 1) {
      uint64_t v46 = 0;
    }
    else {
      uint64_t v46 = *(void *)(*(void *)(v5 + 64) + 8 * v24);
    }
    uint64_t v25 = v23 - 3;
    goto LABEL_56;
  }
  if (v23 == 3)
  {
    uint64_t v25 = 0;
    uint64_t v46 = 0;
LABEL_56:
    if (v25 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v25) == 1) {
      uint64_t v54 = 0;
    }
    else {
      uint64_t v54 = *(void *)(*(void *)(v5 + 64) + 8 * v25);
    }
    uint64_t v28 = v23 - 2;
    goto LABEL_61;
  }
  if (v23 >= 2)
  {
    uint64_t v28 = 0;
    uint64_t v54 = 0;
    uint64_t v46 = 0;
LABEL_61:
    if (v28 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v63 = 0;
    }
    else {
      uint64_t v63 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v26 = v23 - 1;
    goto LABEL_66;
  }
  uint64_t v26 = 0;
  uint64_t v63 = 0;
  uint64_t v46 = 0;
  uint64_t v54 = 0;
  uint64_t v27 = 0;
  if (v23 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v26 <= (int)v23 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v26) != 1)
    {
      uint64_t v27 = *(void *)(*(void *)(v5 + 64) + 8 * v26);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v27 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v62 = 0;
    uint64_t v48 = 0;
    uint64_t v56 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v27 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v14 & 1) != 0 || v13 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v13) == 1)
  {
    uint64_t v48 = 0;
    if (v15) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v48 = *(void *)(*(void *)(v6 + 64) + 8 * v13);
    if (v15) {
      goto LABEL_98;
    }
  }
  if (v11 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v11) == 1)
  {
LABEL_98:
    uint64_t v56 = 0;
    if (v12) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v56 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
  if (v12) {
    goto LABEL_101;
  }
LABEL_99:
  if (v10 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v10) != 1)
  {
    uint64_t v62 = *(void *)(*(void *)(v6 + 64) + 8 * v10);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v29 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v62 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v29 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v49 >= 1)
  {
    uint64_t v30 = 0;
    uint64_t v52 = (int *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v53 = (float *)(**a4 + *(void *)(v6 + 40));
    uint64_t v51 = (float *)(**(void **)a3 + *(void *)(v4 + 40));
    do
    {
      uint64_t v50 = v30;
      if (v57 >= 1)
      {
        uint64_t v31 = 0;
        uint64_t v60 = v52;
        uint64_t v61 = v51;
        uint64_t v59 = v53;
        do
        {
          uint64_t v58 = v31;
          if (v66 >= 1)
          {
            uint64_t v32 = 0;
            uint64_t v33 = v60;
            uint64_t v34 = v61;
            uint64_t v35 = v59;
            do
            {
              uint64_t v67 = v32;
              uint64_t v36 = v65;
              uint64_t v37 = v34;
              uint64_t v38 = v33;
              uint64_t v39 = v35;
              if (v65 >= 1)
              {
                do
                {
                  float v41 = v37[1];
                  int v42 = *v38;
                  int v43 = v38[1];
                  float v70 = *v37;
                  float v40 = v70;
                  float v71 = v41;
                  int v68 = v42;
                  int v69 = v43;
                  float v70 = truncf(std::operator/[abi:nn180100]<float>(&v70, (float *)&v68));
                  float v71 = truncf(v44);
                  int v68 = v42;
                  int v69 = v43;
                  float *v39 = v40 - std::operator*[abi:nn180100]<float>(&v70, (float *)&v68);
                  v39[1] = v41 - v45;
                  uint64_t v39 = (float *)((char *)v39 + v29);
                  uint64_t v38 = (int *)((char *)v38 + v27);
                  uint64_t v37 = (float *)((char *)v37 + v21);
                  --v36;
                }
                while (v36);
              }
              uint64_t v32 = v67 + 1;
              uint64_t v35 = (float *)((char *)v35 + v62);
              uint64_t v33 = (int *)((char *)v33 + v63);
              uint64_t v34 = (float *)((char *)v34 + v64);
            }
            while (v67 + 1 != v66);
          }
          uint64_t v31 = v58 + 1;
          uint64_t v59 = (float *)((char *)v59 + v56);
          uint64_t v60 = (int *)((char *)v60 + v54);
          uint64_t v61 = (float *)((char *)v61 + v55);
        }
        while (v58 + 1 != v57);
      }
      uint64_t v30 = v50 + 1;
      uint64_t v53 = (float *)((char *)v53 + v48);
      uint64_t v52 = (int *)((char *)v52 + v46);
      uint64_t v51 = (float *)((char *)v51 + v47);
    }
    while (v50 + 1 != v49);
  }
}

void mlir::mps::arithmeticBinaryTileBaseKernel<float,float,float,(mlir::mps::arithmeticOp)5>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v10 = v7 - 2;
    uint64_t v59 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v59 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v7 - 3;
    uint64_t v60 = 1;
    char v12 = 1;
LABEL_6:
    uint64_t v13 = v7 - 4;
    char v14 = 1;
    uint64_t v51 = 1;
    char v15 = 1;
LABEL_7:
    uint64_t v16 = 1;
    goto LABEL_8;
  }
  uint64_t v10 = v7 - 2;
  uint64_t v60 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v10 = 0;
    char v12 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v7 - 3;
  uint64_t v51 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v12 = 0;
    uint64_t v11 = 0;
    char v15 = 0;
    uint64_t v13 = -1;
    uint64_t v10 = 1;
    char v14 = 1;
    goto LABEL_7;
  }
  char v14 = 0;
  char v12 = 0;
  char v15 = 0;
  uint64_t v13 = v7 - 4;
  uint64_t v16 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v43 = v16;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v58 = 0;
    uint64_t v41 = 0;
    uint64_t v49 = 0;
    goto LABEL_37;
  }
  uint64_t v17 = *(void *)(v4 + 16);
  uint64_t v18 = v17 - 4;
  if (v17 >= 4)
  {
    if (v18 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v18) == 1) {
      uint64_t v41 = 0;
    }
    else {
      uint64_t v41 = *(void *)(*(void *)(v4 + 64) + 8 * v18);
    }
    uint64_t v19 = v17 - 3;
    goto LABEL_26;
  }
  if (v17 == 3)
  {
    uint64_t v19 = 0;
    uint64_t v41 = 0;
LABEL_26:
    if (v19 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v19) == 1) {
      uint64_t v49 = 0;
    }
    else {
      uint64_t v49 = *(void *)(*(void *)(v4 + 64) + 8 * v19);
    }
    uint64_t v22 = v17 - 2;
    goto LABEL_31;
  }
  if (v17 < 2)
  {
    uint64_t v20 = 0;
    uint64_t v58 = 0;
    uint64_t v41 = 0;
    uint64_t v49 = 0;
    uint64_t v21 = 0;
    if (v17 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v22 = 0;
  uint64_t v49 = 0;
  uint64_t v41 = 0;
LABEL_31:
  if (v22 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
    uint64_t v58 = 0;
  }
  else {
    uint64_t v58 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
  }
  uint64_t v20 = v17 - 1;
LABEL_36:
  if (v20 > (int)v17 - 1)
  {
LABEL_37:
    uint64_t v21 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v57 = 0;
    uint64_t v40 = 0;
    uint64_t v48 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v20) != 1)
  {
    uint64_t v21 = *(void *)(*(void *)(v4 + 64) + 8 * v20);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v21 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v23 = *(void *)(v5 + 16);
  uint64_t v24 = v23 - 4;
  if (v23 >= 4)
  {
    if (v24 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v24) == 1) {
      uint64_t v40 = 0;
    }
    else {
      uint64_t v40 = *(void *)(*(void *)(v5 + 64) + 8 * v24);
    }
    uint64_t v25 = v23 - 3;
    goto LABEL_56;
  }
  if (v23 == 3)
  {
    uint64_t v25 = 0;
    uint64_t v40 = 0;
LABEL_56:
    if (v25 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v25) == 1) {
      uint64_t v48 = 0;
    }
    else {
      uint64_t v48 = *(void *)(*(void *)(v5 + 64) + 8 * v25);
    }
    uint64_t v28 = v23 - 2;
    goto LABEL_61;
  }
  if (v23 >= 2)
  {
    uint64_t v28 = 0;
    uint64_t v48 = 0;
    uint64_t v40 = 0;
LABEL_61:
    if (v28 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v57 = 0;
    }
    else {
      uint64_t v57 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v26 = v23 - 1;
    goto LABEL_66;
  }
  uint64_t v26 = 0;
  uint64_t v57 = 0;
  uint64_t v40 = 0;
  uint64_t v48 = 0;
  uint64_t v27 = 0;
  if (v23 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v26 <= (int)v23 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v26) != 1)
    {
      uint64_t v27 = *(void *)(*(void *)(v5 + 64) + 8 * v26);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v27 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v56 = 0;
    uint64_t v42 = 0;
    uint64_t v50 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v27 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v14 & 1) != 0 || v13 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v13) == 1)
  {
    uint64_t v42 = 0;
    if (v15) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v42 = *(void *)(*(void *)(v6 + 64) + 8 * v13);
    if (v15) {
      goto LABEL_98;
    }
  }
  if (v11 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v11) == 1)
  {
LABEL_98:
    uint64_t v50 = 0;
    if (v12) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v50 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
  if (v12) {
    goto LABEL_101;
  }
LABEL_99:
  if (v10 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v10) != 1)
  {
    uint64_t v56 = *(void *)(*(void *)(v6 + 64) + 8 * v10);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v29 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v56 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v29 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v43 >= 1)
  {
    uint64_t v30 = 0;
    uint64_t v47 = (float *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v46 = (float *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    float v45 = (float *)(**a4 + *(void *)(v6 + 40));
    do
    {
      uint64_t v44 = v30;
      if (v51 >= 1)
      {
        uint64_t v31 = 0;
        uint64_t v54 = v46;
        uint64_t v55 = v47;
        uint64_t v53 = v45;
        do
        {
          uint64_t v52 = v31;
          if (v60 >= 1)
          {
            uint64_t v32 = 0;
            uint64_t v33 = v54;
            uint64_t v34 = v55;
            uint64_t v35 = v53;
            do
            {
              uint64_t v61 = v32;
              uint64_t v36 = v59;
              uint64_t v37 = v34;
              uint64_t v38 = v33;
              uint64_t v39 = v35;
              if (v59 >= 1)
              {
                do
                {
                  float *v39 = fmodf(*v37, *v38);
                  uint64_t v39 = (float *)((char *)v39 + v29);
                  uint64_t v38 = (float *)((char *)v38 + v27);
                  uint64_t v37 = (float *)((char *)v37 + v21);
                  --v36;
                }
                while (v36);
              }
              uint64_t v32 = v61 + 1;
              uint64_t v35 = (float *)((char *)v35 + v56);
              uint64_t v33 = (float *)((char *)v33 + v57);
              uint64_t v34 = (float *)((char *)v34 + v58);
            }
            while (v61 + 1 != v60);
          }
          uint64_t v31 = v52 + 1;
          uint64_t v53 = (float *)((char *)v53 + v50);
          uint64_t v54 = (float *)((char *)v54 + v48);
          uint64_t v55 = (float *)((char *)v55 + v49);
        }
        while (v52 + 1 != v51);
      }
      uint64_t v30 = v44 + 1;
      float v45 = (float *)((char *)v45 + v42);
      uint64_t v46 = (float *)((char *)v46 + v40);
      uint64_t v47 = (float *)((char *)v47 + v41);
    }
    while (v44 + 1 != v43);
  }
}

void mlir::mps::arithmeticBinaryTileBaseKernel<complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)5>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v10 = v7 - 2;
    uint64_t v71 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v71 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v7 - 3;
    uint64_t v72 = 1;
    char v12 = 1;
LABEL_6:
    uint64_t v13 = v7 - 4;
    char v14 = 1;
    uint64_t v63 = 1;
    char v15 = 1;
LABEL_7:
    uint64_t v16 = 1;
    goto LABEL_8;
  }
  uint64_t v10 = v7 - 2;
  uint64_t v72 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v10 = 0;
    char v12 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v7 - 3;
  uint64_t v63 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v12 = 0;
    uint64_t v11 = 0;
    char v15 = 0;
    uint64_t v13 = -1;
    uint64_t v10 = 1;
    char v14 = 1;
    goto LABEL_7;
  }
  char v14 = 0;
  char v12 = 0;
  char v15 = 0;
  uint64_t v13 = v7 - 4;
  uint64_t v16 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v55 = v16;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v70 = 0;
    uint64_t v53 = 0;
    uint64_t v61 = 0;
    goto LABEL_37;
  }
  uint64_t v17 = *(void *)(v4 + 16);
  uint64_t v18 = v17 - 4;
  if (v17 >= 4)
  {
    if (v18 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v18) == 1) {
      uint64_t v53 = 0;
    }
    else {
      uint64_t v53 = *(void *)(*(void *)(v4 + 64) + 8 * v18);
    }
    uint64_t v19 = v17 - 3;
    goto LABEL_26;
  }
  if (v17 == 3)
  {
    uint64_t v19 = 0;
    uint64_t v53 = 0;
LABEL_26:
    if (v19 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v19) == 1) {
      uint64_t v61 = 0;
    }
    else {
      uint64_t v61 = *(void *)(*(void *)(v4 + 64) + 8 * v19);
    }
    uint64_t v22 = v17 - 2;
    goto LABEL_31;
  }
  if (v17 < 2)
  {
    uint64_t v20 = 0;
    uint64_t v70 = 0;
    uint64_t v53 = 0;
    uint64_t v61 = 0;
    uint64_t v21 = 0;
    if (v17 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v22 = 0;
  uint64_t v61 = 0;
  uint64_t v53 = 0;
LABEL_31:
  if (v22 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
    uint64_t v70 = 0;
  }
  else {
    uint64_t v70 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
  }
  uint64_t v20 = v17 - 1;
LABEL_36:
  if (v20 > (int)v17 - 1)
  {
LABEL_37:
    uint64_t v21 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v69 = 0;
    uint64_t v52 = 0;
    uint64_t v60 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v20) != 1)
  {
    uint64_t v21 = *(void *)(*(void *)(v4 + 64) + 8 * v20);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v21 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v23 = *(void *)(v5 + 16);
  uint64_t v24 = v23 - 4;
  if (v23 >= 4)
  {
    if (v24 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v24) == 1) {
      uint64_t v52 = 0;
    }
    else {
      uint64_t v52 = *(void *)(*(void *)(v5 + 64) + 8 * v24);
    }
    uint64_t v25 = v23 - 3;
    goto LABEL_56;
  }
  if (v23 == 3)
  {
    uint64_t v25 = 0;
    uint64_t v52 = 0;
LABEL_56:
    if (v25 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v25) == 1) {
      uint64_t v60 = 0;
    }
    else {
      uint64_t v60 = *(void *)(*(void *)(v5 + 64) + 8 * v25);
    }
    uint64_t v28 = v23 - 2;
    goto LABEL_61;
  }
  if (v23 >= 2)
  {
    uint64_t v28 = 0;
    uint64_t v60 = 0;
    uint64_t v52 = 0;
LABEL_61:
    if (v28 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v69 = 0;
    }
    else {
      uint64_t v69 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v26 = v23 - 1;
    goto LABEL_66;
  }
  uint64_t v26 = 0;
  uint64_t v69 = 0;
  uint64_t v52 = 0;
  uint64_t v60 = 0;
  uint64_t v27 = 0;
  if (v23 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v26 <= (int)v23 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v26) != 1)
    {
      uint64_t v27 = *(void *)(*(void *)(v5 + 64) + 8 * v26);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v27 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v68 = 0;
    uint64_t v54 = 0;
    uint64_t v62 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v27 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v14 & 1) != 0 || v13 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v13) == 1)
  {
    uint64_t v54 = 0;
    if (v15) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v54 = *(void *)(*(void *)(v6 + 64) + 8 * v13);
    if (v15) {
      goto LABEL_98;
    }
  }
  if (v11 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v11) == 1)
  {
LABEL_98:
    uint64_t v62 = 0;
    if (v12) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v62 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
  if (v12) {
    goto LABEL_101;
  }
LABEL_99:
  if (v10 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v10) != 1)
  {
    uint64_t v68 = *(void *)(*(void *)(v6 + 64) + 8 * v10);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v29 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v68 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v29 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v55 >= 1)
  {
    uint64_t v30 = 0;
    uint64_t v58 = (int *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v59 = (float *)(**a4 + *(void *)(v6 + 40));
    uint64_t v57 = (__int16 *)(**(void **)a3 + *(void *)(v4 + 40));
    do
    {
      uint64_t v56 = v30;
      if (v63 >= 1)
      {
        uint64_t v31 = 0;
        uint64_t v66 = v58;
        uint64_t v67 = v57;
        uint64_t v65 = v59;
        do
        {
          uint64_t v64 = v31;
          if (v72 >= 1)
          {
            uint64_t v32 = 0;
            uint64_t v33 = v66;
            uint64_t v34 = v67;
            uint64_t v35 = v65;
            do
            {
              uint64_t v73 = v32;
              uint64_t v36 = v71;
              uint64_t v37 = v34;
              uint64_t v38 = v33;
              uint64_t v39 = v35;
              if (v71 >= 1)
              {
                do
                {
                  _H0 = *v37;
                  __asm { FCVT            S8, H0 }
                  _H0 = v37[1];
                  __asm { FCVT            S9, H0 }
                  int v48 = *v38;
                  int v49 = v38[1];
                  float v76 = _S8;
                  float v77 = _S9;
                  int v74 = v48;
                  int v75 = v49;
                  float v76 = truncf(std::operator/[abi:nn180100]<float>(&v76, (float *)&v74));
                  float v77 = truncf(v50);
                  int v74 = v48;
                  int v75 = v49;
                  float *v39 = _S8 - std::operator*[abi:nn180100]<float>(&v76, (float *)&v74);
                  v39[1] = _S9 - v51;
                  uint64_t v39 = (float *)((char *)v39 + v29);
                  uint64_t v38 = (int *)((char *)v38 + v27);
                  uint64_t v37 = (__int16 *)((char *)v37 + v21);
                  --v36;
                }
                while (v36);
              }
              uint64_t v32 = v73 + 1;
              uint64_t v35 = (float *)((char *)v35 + v68);
              uint64_t v33 = (int *)((char *)v33 + v69);
              uint64_t v34 = (__int16 *)((char *)v34 + v70);
            }
            while (v73 + 1 != v72);
          }
          uint64_t v31 = v64 + 1;
          uint64_t v65 = (float *)((char *)v65 + v62);
          uint64_t v66 = (int *)((char *)v66 + v60);
          uint64_t v67 = (__int16 *)((char *)v67 + v61);
        }
        while (v64 + 1 != v63);
      }
      uint64_t v30 = v56 + 1;
      uint64_t v59 = (float *)((char *)v59 + v54);
      uint64_t v58 = (int *)((char *)v58 + v52);
      uint64_t v57 = (__int16 *)((char *)v57 + v53);
    }
    while (v56 + 1 != v55);
  }
}

void mlir::mps::arithmeticBinaryTileBaseKernel<half,float,float,(mlir::mps::arithmeticOp)5>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v10 = v7 - 2;
    uint64_t v65 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v65 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v7 - 3;
    uint64_t v66 = 1;
    char v12 = 1;
LABEL_6:
    uint64_t v13 = v7 - 4;
    char v14 = 1;
    uint64_t v57 = 1;
    char v15 = 1;
LABEL_7:
    uint64_t v16 = 1;
    goto LABEL_8;
  }
  uint64_t v10 = v7 - 2;
  uint64_t v66 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v10 = 0;
    char v12 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v7 - 3;
  uint64_t v57 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v12 = 0;
    uint64_t v11 = 0;
    char v15 = 0;
    uint64_t v13 = -1;
    uint64_t v10 = 1;
    char v14 = 1;
    goto LABEL_7;
  }
  char v14 = 0;
  char v12 = 0;
  char v15 = 0;
  uint64_t v13 = v7 - 4;
  uint64_t v16 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v49 = v16;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v64 = 0;
    uint64_t v47 = 0;
    uint64_t v55 = 0;
    goto LABEL_37;
  }
  uint64_t v17 = *(void *)(v4 + 16);
  uint64_t v18 = v17 - 4;
  if (v17 >= 4)
  {
    if (v18 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v18) == 1) {
      uint64_t v47 = 0;
    }
    else {
      uint64_t v47 = *(void *)(*(void *)(v4 + 64) + 8 * v18);
    }
    uint64_t v19 = v17 - 3;
    goto LABEL_26;
  }
  if (v17 == 3)
  {
    uint64_t v19 = 0;
    uint64_t v47 = 0;
LABEL_26:
    if (v19 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v19) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v4 + 64) + 8 * v19);
    }
    uint64_t v22 = v17 - 2;
    goto LABEL_31;
  }
  if (v17 < 2)
  {
    uint64_t v20 = 0;
    uint64_t v64 = 0;
    uint64_t v47 = 0;
    uint64_t v55 = 0;
    uint64_t v21 = 0;
    if (v17 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v22 = 0;
  uint64_t v55 = 0;
  uint64_t v47 = 0;
LABEL_31:
  if (v22 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
    uint64_t v64 = 0;
  }
  else {
    uint64_t v64 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
  }
  uint64_t v20 = v17 - 1;
LABEL_36:
  if (v20 > (int)v17 - 1)
  {
LABEL_37:
    uint64_t v21 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v63 = 0;
    uint64_t v46 = 0;
    uint64_t v54 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v20) != 1)
  {
    uint64_t v21 = *(void *)(*(void *)(v4 + 64) + 8 * v20);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v21 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v23 = *(void *)(v5 + 16);
  uint64_t v24 = v23 - 4;
  if (v23 >= 4)
  {
    if (v24 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v24) == 1) {
      uint64_t v46 = 0;
    }
    else {
      uint64_t v46 = *(void *)(*(void *)(v5 + 64) + 8 * v24);
    }
    uint64_t v25 = v23 - 3;
    goto LABEL_56;
  }
  if (v23 == 3)
  {
    uint64_t v25 = 0;
    uint64_t v46 = 0;
LABEL_56:
    if (v25 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v25) == 1) {
      uint64_t v54 = 0;
    }
    else {
      uint64_t v54 = *(void *)(*(void *)(v5 + 64) + 8 * v25);
    }
    uint64_t v28 = v23 - 2;
    goto LABEL_61;
  }
  if (v23 >= 2)
  {
    uint64_t v28 = 0;
    uint64_t v54 = 0;
    uint64_t v46 = 0;
LABEL_61:
    if (v28 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v63 = 0;
    }
    else {
      uint64_t v63 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v26 = v23 - 1;
    goto LABEL_66;
  }
  uint64_t v26 = 0;
  uint64_t v63 = 0;
  uint64_t v46 = 0;
  uint64_t v54 = 0;
  uint64_t v27 = 0;
  if (v23 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v26 <= (int)v23 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v26) != 1)
    {
      uint64_t v27 = *(void *)(*(void *)(v5 + 64) + 8 * v26);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v27 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v62 = 0;
    uint64_t v48 = 0;
    uint64_t v56 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v27 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v14 & 1) != 0 || v13 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v13) == 1)
  {
    uint64_t v48 = 0;
    if (v15) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v48 = *(void *)(*(void *)(v6 + 64) + 8 * v13);
    if (v15) {
      goto LABEL_98;
    }
  }
  if (v11 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v11) == 1)
  {
LABEL_98:
    uint64_t v56 = 0;
    if (v12) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v56 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
  if (v12) {
    goto LABEL_101;
  }
LABEL_99:
  if (v10 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v10) != 1)
  {
    uint64_t v62 = *(void *)(*(void *)(v6 + 64) + 8 * v10);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v29 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v62 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v29 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v49 >= 1)
  {
    uint64_t v30 = 0;
    uint64_t v53 = (__int16 *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v52 = (float *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    float v51 = (float *)(**a4 + *(void *)(v6 + 40));
    do
    {
      uint64_t v50 = v30;
      if (v57 >= 1)
      {
        uint64_t v31 = 0;
        uint64_t v60 = v52;
        uint64_t v61 = v53;
        uint64_t v59 = v51;
        do
        {
          uint64_t v58 = v31;
          if (v66 >= 1)
          {
            uint64_t v32 = 0;
            uint64_t v33 = v60;
            uint64_t v34 = v61;
            uint64_t v35 = v59;
            do
            {
              uint64_t v67 = v32;
              uint64_t v36 = v65;
              uint64_t v37 = v34;
              uint64_t v38 = v33;
              uint64_t v39 = v35;
              if (v65 >= 1)
              {
                do
                {
                  _H0 = *v37;
                  __asm { FCVT            S0, H0; float }
                  float *v39 = fmodf(_S0, *v38);
                  uint64_t v39 = (float *)((char *)v39 + v29);
                  uint64_t v38 = (float *)((char *)v38 + v27);
                  uint64_t v37 = (__int16 *)((char *)v37 + v21);
                  --v36;
                }
                while (v36);
              }
              uint64_t v32 = v67 + 1;
              uint64_t v35 = (float *)((char *)v35 + v62);
              uint64_t v33 = (float *)((char *)v33 + v63);
              uint64_t v34 = (__int16 *)((char *)v34 + v64);
            }
            while (v67 + 1 != v66);
          }
          uint64_t v31 = v58 + 1;
          uint64_t v59 = (float *)((char *)v59 + v56);
          uint64_t v60 = (float *)((char *)v60 + v54);
          uint64_t v61 = (__int16 *)((char *)v61 + v55);
        }
        while (v58 + 1 != v57);
      }
      uint64_t v30 = v50 + 1;
      float v51 = (float *)((char *)v51 + v48);
      uint64_t v52 = (float *)((char *)v52 + v46);
      uint64_t v53 = (__int16 *)((char *)v53 + v47);
    }
    while (v50 + 1 != v49);
  }
}

void mlir::mps::arithmeticBinaryTileBaseKernel<complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)5>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v10 = v7 - 2;
    uint64_t v71 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v71 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v7 - 3;
    uint64_t v72 = 1;
    char v12 = 1;
LABEL_6:
    uint64_t v13 = v7 - 4;
    char v14 = 1;
    uint64_t v63 = 1;
    char v15 = 1;
LABEL_7:
    uint64_t v16 = 1;
    goto LABEL_8;
  }
  uint64_t v10 = v7 - 2;
  uint64_t v72 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v10 = 0;
    char v12 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v7 - 3;
  uint64_t v63 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v12 = 0;
    uint64_t v11 = 0;
    char v15 = 0;
    uint64_t v13 = -1;
    uint64_t v10 = 1;
    char v14 = 1;
    goto LABEL_7;
  }
  char v14 = 0;
  char v12 = 0;
  char v15 = 0;
  uint64_t v13 = v7 - 4;
  uint64_t v16 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v55 = v16;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v70 = 0;
    uint64_t v53 = 0;
    uint64_t v61 = 0;
    goto LABEL_37;
  }
  uint64_t v17 = *(void *)(v4 + 16);
  uint64_t v18 = v17 - 4;
  if (v17 >= 4)
  {
    if (v18 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v18) == 1) {
      uint64_t v53 = 0;
    }
    else {
      uint64_t v53 = *(void *)(*(void *)(v4 + 64) + 8 * v18);
    }
    uint64_t v19 = v17 - 3;
    goto LABEL_26;
  }
  if (v17 == 3)
  {
    uint64_t v19 = 0;
    uint64_t v53 = 0;
LABEL_26:
    if (v19 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v19) == 1) {
      uint64_t v61 = 0;
    }
    else {
      uint64_t v61 = *(void *)(*(void *)(v4 + 64) + 8 * v19);
    }
    uint64_t v22 = v17 - 2;
    goto LABEL_31;
  }
  if (v17 < 2)
  {
    uint64_t v20 = 0;
    uint64_t v70 = 0;
    uint64_t v53 = 0;
    uint64_t v61 = 0;
    uint64_t v21 = 0;
    if (v17 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v22 = 0;
  uint64_t v61 = 0;
  uint64_t v53 = 0;
LABEL_31:
  if (v22 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
    uint64_t v70 = 0;
  }
  else {
    uint64_t v70 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
  }
  uint64_t v20 = v17 - 1;
LABEL_36:
  if (v20 > (int)v17 - 1)
  {
LABEL_37:
    uint64_t v21 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v69 = 0;
    uint64_t v52 = 0;
    uint64_t v60 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v20) != 1)
  {
    uint64_t v21 = *(void *)(*(void *)(v4 + 64) + 8 * v20);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v21 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v23 = *(void *)(v5 + 16);
  uint64_t v24 = v23 - 4;
  if (v23 >= 4)
  {
    if (v24 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v24) == 1) {
      uint64_t v52 = 0;
    }
    else {
      uint64_t v52 = *(void *)(*(void *)(v5 + 64) + 8 * v24);
    }
    uint64_t v25 = v23 - 3;
    goto LABEL_56;
  }
  if (v23 == 3)
  {
    uint64_t v25 = 0;
    uint64_t v52 = 0;
LABEL_56:
    if (v25 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v25) == 1) {
      uint64_t v60 = 0;
    }
    else {
      uint64_t v60 = *(void *)(*(void *)(v5 + 64) + 8 * v25);
    }
    uint64_t v28 = v23 - 2;
    goto LABEL_61;
  }
  if (v23 >= 2)
  {
    uint64_t v28 = 0;
    uint64_t v60 = 0;
    uint64_t v52 = 0;
LABEL_61:
    if (v28 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v69 = 0;
    }
    else {
      uint64_t v69 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v26 = v23 - 1;
    goto LABEL_66;
  }
  uint64_t v26 = 0;
  uint64_t v69 = 0;
  uint64_t v52 = 0;
  uint64_t v60 = 0;
  uint64_t v27 = 0;
  if (v23 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v26 <= (int)v23 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v26) != 1)
    {
      uint64_t v27 = *(void *)(*(void *)(v5 + 64) + 8 * v26);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v27 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v68 = 0;
    uint64_t v54 = 0;
    uint64_t v62 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v27 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v14 & 1) != 0 || v13 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v13) == 1)
  {
    uint64_t v54 = 0;
    if (v15) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v54 = *(void *)(*(void *)(v6 + 64) + 8 * v13);
    if (v15) {
      goto LABEL_98;
    }
  }
  if (v11 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v11) == 1)
  {
LABEL_98:
    uint64_t v62 = 0;
    if (v12) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v62 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
  if (v12) {
    goto LABEL_101;
  }
LABEL_99:
  if (v10 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v10) != 1)
  {
    uint64_t v68 = *(void *)(*(void *)(v6 + 64) + 8 * v10);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v29 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v68 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v29 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v55 >= 1)
  {
    uint64_t v30 = 0;
    uint64_t v58 = (__int16 *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v59 = (float *)(**a4 + *(void *)(v6 + 40));
    uint64_t v57 = (float *)(**(void **)a3 + *(void *)(v4 + 40));
    do
    {
      uint64_t v56 = v30;
      if (v63 >= 1)
      {
        uint64_t v31 = 0;
        uint64_t v66 = v58;
        uint64_t v67 = v57;
        uint64_t v65 = v59;
        do
        {
          uint64_t v64 = v31;
          if (v72 >= 1)
          {
            uint64_t v32 = 0;
            uint64_t v33 = v66;
            uint64_t v34 = v67;
            uint64_t v35 = v65;
            do
            {
              uint64_t v73 = v32;
              uint64_t v36 = v71;
              uint64_t v37 = v34;
              uint64_t v38 = v33;
              uint64_t v39 = v35;
              if (v71 >= 1)
              {
                do
                {
                  float v41 = v37[1];
                  _H0 = *v38;
                  __asm { FCVT            S10, H0 }
                  _H0 = v38[1];
                  __asm { FCVT            S11, H0 }
                  float v76 = *v37;
                  float v40 = v76;
                  float v77 = v41;
                  int v74 = _S10;
                  int v75 = _S11;
                  float v76 = truncf(std::operator/[abi:nn180100]<float>(&v76, (float *)&v74));
                  float v77 = truncf(v50);
                  int v74 = _S10;
                  int v75 = _S11;
                  float *v39 = v40 - std::operator*[abi:nn180100]<float>(&v76, (float *)&v74);
                  v39[1] = v41 - v51;
                  uint64_t v39 = (float *)((char *)v39 + v29);
                  uint64_t v38 = (__int16 *)((char *)v38 + v27);
                  uint64_t v37 = (float *)((char *)v37 + v21);
                  --v36;
                }
                while (v36);
              }
              uint64_t v32 = v73 + 1;
              uint64_t v35 = (float *)((char *)v35 + v68);
              uint64_t v33 = (__int16 *)((char *)v33 + v69);
              uint64_t v34 = (float *)((char *)v34 + v70);
            }
            while (v73 + 1 != v72);
          }
          uint64_t v31 = v64 + 1;
          uint64_t v65 = (float *)((char *)v65 + v62);
          uint64_t v66 = (__int16 *)((char *)v66 + v60);
          uint64_t v67 = (float *)((char *)v67 + v61);
        }
        while (v64 + 1 != v63);
      }
      uint64_t v30 = v56 + 1;
      uint64_t v59 = (float *)((char *)v59 + v54);
      uint64_t v58 = (__int16 *)((char *)v58 + v52);
      uint64_t v57 = (float *)((char *)v57 + v53);
    }
    while (v56 + 1 != v55);
  }
}

void mlir::mps::arithmeticBinaryTileBaseKernel<float,half,float,(mlir::mps::arithmeticOp)5>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v10 = v7 - 2;
    uint64_t v65 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v65 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v7 - 3;
    uint64_t v66 = 1;
    char v12 = 1;
LABEL_6:
    uint64_t v13 = v7 - 4;
    char v14 = 1;
    uint64_t v57 = 1;
    char v15 = 1;
LABEL_7:
    uint64_t v16 = 1;
    goto LABEL_8;
  }
  uint64_t v10 = v7 - 2;
  uint64_t v66 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v10 = 0;
    char v12 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v7 - 3;
  uint64_t v57 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v12 = 0;
    uint64_t v11 = 0;
    char v15 = 0;
    uint64_t v13 = -1;
    uint64_t v10 = 1;
    char v14 = 1;
    goto LABEL_7;
  }
  char v14 = 0;
  char v12 = 0;
  char v15 = 0;
  uint64_t v13 = v7 - 4;
  uint64_t v16 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v49 = v16;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v64 = 0;
    uint64_t v47 = 0;
    uint64_t v55 = 0;
    goto LABEL_37;
  }
  uint64_t v17 = *(void *)(v4 + 16);
  uint64_t v18 = v17 - 4;
  if (v17 >= 4)
  {
    if (v18 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v18) == 1) {
      uint64_t v47 = 0;
    }
    else {
      uint64_t v47 = *(void *)(*(void *)(v4 + 64) + 8 * v18);
    }
    uint64_t v19 = v17 - 3;
    goto LABEL_26;
  }
  if (v17 == 3)
  {
    uint64_t v19 = 0;
    uint64_t v47 = 0;
LABEL_26:
    if (v19 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v19) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v4 + 64) + 8 * v19);
    }
    uint64_t v22 = v17 - 2;
    goto LABEL_31;
  }
  if (v17 < 2)
  {
    uint64_t v20 = 0;
    uint64_t v64 = 0;
    uint64_t v47 = 0;
    uint64_t v55 = 0;
    uint64_t v21 = 0;
    if (v17 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v22 = 0;
  uint64_t v55 = 0;
  uint64_t v47 = 0;
LABEL_31:
  if (v22 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
    uint64_t v64 = 0;
  }
  else {
    uint64_t v64 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
  }
  uint64_t v20 = v17 - 1;
LABEL_36:
  if (v20 > (int)v17 - 1)
  {
LABEL_37:
    uint64_t v21 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v63 = 0;
    uint64_t v46 = 0;
    uint64_t v54 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v20) != 1)
  {
    uint64_t v21 = *(void *)(*(void *)(v4 + 64) + 8 * v20);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v21 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v23 = *(void *)(v5 + 16);
  uint64_t v24 = v23 - 4;
  if (v23 >= 4)
  {
    if (v24 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v24) == 1) {
      uint64_t v46 = 0;
    }
    else {
      uint64_t v46 = *(void *)(*(void *)(v5 + 64) + 8 * v24);
    }
    uint64_t v25 = v23 - 3;
    goto LABEL_56;
  }
  if (v23 == 3)
  {
    uint64_t v25 = 0;
    uint64_t v46 = 0;
LABEL_56:
    if (v25 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v25) == 1) {
      uint64_t v54 = 0;
    }
    else {
      uint64_t v54 = *(void *)(*(void *)(v5 + 64) + 8 * v25);
    }
    uint64_t v28 = v23 - 2;
    goto LABEL_61;
  }
  if (v23 >= 2)
  {
    uint64_t v28 = 0;
    uint64_t v54 = 0;
    uint64_t v46 = 0;
LABEL_61:
    if (v28 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v63 = 0;
    }
    else {
      uint64_t v63 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v26 = v23 - 1;
    goto LABEL_66;
  }
  uint64_t v26 = 0;
  uint64_t v63 = 0;
  uint64_t v46 = 0;
  uint64_t v54 = 0;
  uint64_t v27 = 0;
  if (v23 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v26 <= (int)v23 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v26) != 1)
    {
      uint64_t v27 = *(void *)(*(void *)(v5 + 64) + 8 * v26);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v27 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v62 = 0;
    uint64_t v48 = 0;
    uint64_t v56 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v27 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v14 & 1) != 0 || v13 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v13) == 1)
  {
    uint64_t v48 = 0;
    if (v15) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v48 = *(void *)(*(void *)(v6 + 64) + 8 * v13);
    if (v15) {
      goto LABEL_98;
    }
  }
  if (v11 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v11) == 1)
  {
LABEL_98:
    uint64_t v56 = 0;
    if (v12) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v56 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
  if (v12) {
    goto LABEL_101;
  }
LABEL_99:
  if (v10 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v10) != 1)
  {
    uint64_t v62 = *(void *)(*(void *)(v6 + 64) + 8 * v10);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v29 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v62 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v29 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v49 >= 1)
  {
    uint64_t v30 = 0;
    uint64_t v53 = (float *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v52 = (__int16 *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    float v51 = (float *)(**a4 + *(void *)(v6 + 40));
    do
    {
      uint64_t v50 = v30;
      if (v57 >= 1)
      {
        uint64_t v31 = 0;
        uint64_t v60 = v52;
        uint64_t v61 = v53;
        uint64_t v59 = v51;
        do
        {
          uint64_t v58 = v31;
          if (v66 >= 1)
          {
            uint64_t v32 = 0;
            uint64_t v33 = v60;
            uint64_t v34 = v61;
            uint64_t v35 = v59;
            do
            {
              uint64_t v67 = v32;
              uint64_t v36 = v65;
              uint64_t v37 = v34;
              uint64_t v38 = v33;
              uint64_t v39 = v35;
              if (v65 >= 1)
              {
                do
                {
                  _H1 = *v38;
                  __asm { FCVT            S1, H1; float }
                  float *v39 = fmodf(*v37, _S1);
                  uint64_t v39 = (float *)((char *)v39 + v29);
                  uint64_t v38 = (__int16 *)((char *)v38 + v27);
                  uint64_t v37 = (float *)((char *)v37 + v21);
                  --v36;
                }
                while (v36);
              }
              uint64_t v32 = v67 + 1;
              uint64_t v35 = (float *)((char *)v35 + v62);
              uint64_t v33 = (__int16 *)((char *)v33 + v63);
              uint64_t v34 = (float *)((char *)v34 + v64);
            }
            while (v67 + 1 != v66);
          }
          uint64_t v31 = v58 + 1;
          uint64_t v59 = (float *)((char *)v59 + v56);
          uint64_t v60 = (__int16 *)((char *)v60 + v54);
          uint64_t v61 = (float *)((char *)v61 + v55);
        }
        while (v58 + 1 != v57);
      }
      uint64_t v30 = v50 + 1;
      float v51 = (float *)((char *)v51 + v48);
      uint64_t v52 = (__int16 *)((char *)v52 + v46);
      uint64_t v53 = (float *)((char *)v53 + v47);
    }
    while (v50 + 1 != v49);
  }
}

void mlir::mps::arithmeticBinaryTileBaseKernel<__emulated_bf16,float,float,(mlir::mps::arithmeticOp)5>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v10 = v7 - 2;
    uint64_t v59 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v59 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v7 - 3;
    uint64_t v60 = 1;
    char v12 = 1;
LABEL_6:
    uint64_t v13 = v7 - 4;
    char v14 = 1;
    uint64_t v51 = 1;
    char v15 = 1;
LABEL_7:
    uint64_t v16 = 1;
    goto LABEL_8;
  }
  uint64_t v10 = v7 - 2;
  uint64_t v60 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v10 = 0;
    char v12 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v7 - 3;
  uint64_t v51 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v12 = 0;
    uint64_t v11 = 0;
    char v15 = 0;
    uint64_t v13 = -1;
    uint64_t v10 = 1;
    char v14 = 1;
    goto LABEL_7;
  }
  char v14 = 0;
  char v12 = 0;
  char v15 = 0;
  uint64_t v13 = v7 - 4;
  uint64_t v16 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v43 = v16;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v58 = 0;
    uint64_t v41 = 0;
    uint64_t v49 = 0;
    goto LABEL_37;
  }
  uint64_t v17 = *(void *)(v4 + 16);
  uint64_t v18 = v17 - 4;
  if (v17 >= 4)
  {
    if (v18 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v18) == 1) {
      uint64_t v41 = 0;
    }
    else {
      uint64_t v41 = *(void *)(*(void *)(v4 + 64) + 8 * v18);
    }
    uint64_t v19 = v17 - 3;
    goto LABEL_26;
  }
  if (v17 == 3)
  {
    uint64_t v19 = 0;
    uint64_t v41 = 0;
LABEL_26:
    if (v19 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v19) == 1) {
      uint64_t v49 = 0;
    }
    else {
      uint64_t v49 = *(void *)(*(void *)(v4 + 64) + 8 * v19);
    }
    uint64_t v22 = v17 - 2;
    goto LABEL_31;
  }
  if (v17 < 2)
  {
    uint64_t v20 = 0;
    uint64_t v58 = 0;
    uint64_t v41 = 0;
    uint64_t v49 = 0;
    uint64_t v21 = 0;
    if (v17 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v22 = 0;
  uint64_t v49 = 0;
  uint64_t v41 = 0;
LABEL_31:
  if (v22 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
    uint64_t v58 = 0;
  }
  else {
    uint64_t v58 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
  }
  uint64_t v20 = v17 - 1;
LABEL_36:
  if (v20 > (int)v17 - 1)
  {
LABEL_37:
    uint64_t v21 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v57 = 0;
    uint64_t v40 = 0;
    uint64_t v48 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v20) != 1)
  {
    uint64_t v21 = *(void *)(*(void *)(v4 + 64) + 8 * v20);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v21 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v23 = *(void *)(v5 + 16);
  uint64_t v24 = v23 - 4;
  if (v23 >= 4)
  {
    if (v24 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v24) == 1) {
      uint64_t v40 = 0;
    }
    else {
      uint64_t v40 = *(void *)(*(void *)(v5 + 64) + 8 * v24);
    }
    uint64_t v25 = v23 - 3;
    goto LABEL_56;
  }
  if (v23 == 3)
  {
    uint64_t v25 = 0;
    uint64_t v40 = 0;
LABEL_56:
    if (v25 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v25) == 1) {
      uint64_t v48 = 0;
    }
    else {
      uint64_t v48 = *(void *)(*(void *)(v5 + 64) + 8 * v25);
    }
    uint64_t v28 = v23 - 2;
    goto LABEL_61;
  }
  if (v23 >= 2)
  {
    uint64_t v28 = 0;
    uint64_t v48 = 0;
    uint64_t v40 = 0;
LABEL_61:
    if (v28 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v57 = 0;
    }
    else {
      uint64_t v57 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v26 = v23 - 1;
    goto LABEL_66;
  }
  uint64_t v26 = 0;
  uint64_t v57 = 0;
  uint64_t v40 = 0;
  uint64_t v48 = 0;
  uint64_t v27 = 0;
  if (v23 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v26 <= (int)v23 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v26) != 1)
    {
      uint64_t v27 = *(void *)(*(void *)(v5 + 64) + 8 * v26);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v27 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v56 = 0;
    uint64_t v42 = 0;
    uint64_t v50 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v27 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v14 & 1) != 0 || v13 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v13) == 1)
  {
    uint64_t v42 = 0;
    if (v15) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v42 = *(void *)(*(void *)(v6 + 64) + 8 * v13);
    if (v15) {
      goto LABEL_98;
    }
  }
  if (v11 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v11) == 1)
  {
LABEL_98:
    uint64_t v50 = 0;
    if (v12) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v50 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
  if (v12) {
    goto LABEL_101;
  }
LABEL_99:
  if (v10 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v10) != 1)
  {
    uint64_t v56 = *(void *)(*(void *)(v6 + 64) + 8 * v10);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v29 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v56 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v29 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v43 >= 1)
  {
    uint64_t v30 = 0;
    uint64_t v47 = (unsigned __int16 *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v46 = (float *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    float v45 = (float *)(**a4 + *(void *)(v6 + 40));
    do
    {
      uint64_t v44 = v30;
      if (v51 >= 1)
      {
        uint64_t v31 = 0;
        uint64_t v54 = v46;
        uint64_t v55 = v47;
        uint64_t v53 = v45;
        do
        {
          uint64_t v52 = v31;
          if (v60 >= 1)
          {
            uint64_t v32 = 0;
            uint64_t v33 = v54;
            uint64_t v34 = v55;
            uint64_t v35 = v53;
            do
            {
              uint64_t v61 = v32;
              uint64_t v36 = v59;
              uint64_t v37 = v34;
              uint64_t v38 = v33;
              uint64_t v39 = v35;
              if (v59 >= 1)
              {
                do
                {
                  float *v39 = fmodf(COERCE_FLOAT(*v37 << 16), *v38);
                  uint64_t v39 = (float *)((char *)v39 + v29);
                  uint64_t v38 = (float *)((char *)v38 + v27);
                  uint64_t v37 = (unsigned __int16 *)((char *)v37 + v21);
                  --v36;
                }
                while (v36);
              }
              uint64_t v32 = v61 + 1;
              uint64_t v35 = (float *)((char *)v35 + v56);
              uint64_t v33 = (float *)((char *)v33 + v57);
              uint64_t v34 = (unsigned __int16 *)((char *)v34 + v58);
            }
            while (v61 + 1 != v60);
          }
          uint64_t v31 = v52 + 1;
          uint64_t v53 = (float *)((char *)v53 + v50);
          uint64_t v54 = (float *)((char *)v54 + v48);
          uint64_t v55 = (unsigned __int16 *)((char *)v55 + v49);
        }
        while (v52 + 1 != v51);
      }
      uint64_t v30 = v44 + 1;
      float v45 = (float *)((char *)v45 + v42);
      uint64_t v46 = (float *)((char *)v46 + v40);
      uint64_t v47 = (unsigned __int16 *)((char *)v47 + v41);
    }
    while (v44 + 1 != v43);
  }
}

void mlir::mps::arithmeticBinaryTileBaseKernel<float,__emulated_bf16,float,(mlir::mps::arithmeticOp)5>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v10 = v7 - 2;
    uint64_t v59 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v59 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v7 - 3;
    uint64_t v60 = 1;
    char v12 = 1;
LABEL_6:
    uint64_t v13 = v7 - 4;
    char v14 = 1;
    uint64_t v51 = 1;
    char v15 = 1;
LABEL_7:
    uint64_t v16 = 1;
    goto LABEL_8;
  }
  uint64_t v10 = v7 - 2;
  uint64_t v60 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v10 = 0;
    char v12 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v7 - 3;
  uint64_t v51 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v12 = 0;
    uint64_t v11 = 0;
    char v15 = 0;
    uint64_t v13 = -1;
    uint64_t v10 = 1;
    char v14 = 1;
    goto LABEL_7;
  }
  char v14 = 0;
  char v12 = 0;
  char v15 = 0;
  uint64_t v13 = v7 - 4;
  uint64_t v16 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v43 = v16;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v58 = 0;
    uint64_t v41 = 0;
    uint64_t v49 = 0;
    goto LABEL_37;
  }
  uint64_t v17 = *(void *)(v4 + 16);
  uint64_t v18 = v17 - 4;
  if (v17 >= 4)
  {
    if (v18 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v18) == 1) {
      uint64_t v41 = 0;
    }
    else {
      uint64_t v41 = *(void *)(*(void *)(v4 + 64) + 8 * v18);
    }
    uint64_t v19 = v17 - 3;
    goto LABEL_26;
  }
  if (v17 == 3)
  {
    uint64_t v19 = 0;
    uint64_t v41 = 0;
LABEL_26:
    if (v19 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v19) == 1) {
      uint64_t v49 = 0;
    }
    else {
      uint64_t v49 = *(void *)(*(void *)(v4 + 64) + 8 * v19);
    }
    uint64_t v22 = v17 - 2;
    goto LABEL_31;
  }
  if (v17 < 2)
  {
    uint64_t v20 = 0;
    uint64_t v58 = 0;
    uint64_t v41 = 0;
    uint64_t v49 = 0;
    uint64_t v21 = 0;
    if (v17 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v22 = 0;
  uint64_t v49 = 0;
  uint64_t v41 = 0;
LABEL_31:
  if (v22 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
    uint64_t v58 = 0;
  }
  else {
    uint64_t v58 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
  }
  uint64_t v20 = v17 - 1;
LABEL_36:
  if (v20 > (int)v17 - 1)
  {
LABEL_37:
    uint64_t v21 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v57 = 0;
    uint64_t v40 = 0;
    uint64_t v48 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v20) != 1)
  {
    uint64_t v21 = *(void *)(*(void *)(v4 + 64) + 8 * v20);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v21 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v23 = *(void *)(v5 + 16);
  uint64_t v24 = v23 - 4;
  if (v23 >= 4)
  {
    if (v24 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v24) == 1) {
      uint64_t v40 = 0;
    }
    else {
      uint64_t v40 = *(void *)(*(void *)(v5 + 64) + 8 * v24);
    }
    uint64_t v25 = v23 - 3;
    goto LABEL_56;
  }
  if (v23 == 3)
  {
    uint64_t v25 = 0;
    uint64_t v40 = 0;
LABEL_56:
    if (v25 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v25) == 1) {
      uint64_t v48 = 0;
    }
    else {
      uint64_t v48 = *(void *)(*(void *)(v5 + 64) + 8 * v25);
    }
    uint64_t v28 = v23 - 2;
    goto LABEL_61;
  }
  if (v23 >= 2)
  {
    uint64_t v28 = 0;
    uint64_t v48 = 0;
    uint64_t v40 = 0;
LABEL_61:
    if (v28 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v57 = 0;
    }
    else {
      uint64_t v57 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v26 = v23 - 1;
    goto LABEL_66;
  }
  uint64_t v26 = 0;
  uint64_t v57 = 0;
  uint64_t v40 = 0;
  uint64_t v48 = 0;
  uint64_t v27 = 0;
  if (v23 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v26 <= (int)v23 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v26) != 1)
    {
      uint64_t v27 = *(void *)(*(void *)(v5 + 64) + 8 * v26);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v27 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v56 = 0;
    uint64_t v42 = 0;
    uint64_t v50 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v27 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v14 & 1) != 0 || v13 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v13) == 1)
  {
    uint64_t v42 = 0;
    if (v15) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v42 = *(void *)(*(void *)(v6 + 64) + 8 * v13);
    if (v15) {
      goto LABEL_98;
    }
  }
  if (v11 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v11) == 1)
  {
LABEL_98:
    uint64_t v50 = 0;
    if (v12) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v50 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
  if (v12) {
    goto LABEL_101;
  }
LABEL_99:
  if (v10 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v10) != 1)
  {
    uint64_t v56 = *(void *)(*(void *)(v6 + 64) + 8 * v10);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v29 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v56 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v29 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v43 >= 1)
  {
    uint64_t v30 = 0;
    uint64_t v47 = (float *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v46 = (unsigned __int16 *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    float v45 = (float *)(**a4 + *(void *)(v6 + 40));
    do
    {
      uint64_t v44 = v30;
      if (v51 >= 1)
      {
        uint64_t v31 = 0;
        uint64_t v54 = v46;
        uint64_t v55 = v47;
        uint64_t v53 = v45;
        do
        {
          uint64_t v52 = v31;
          if (v60 >= 1)
          {
            uint64_t v32 = 0;
            uint64_t v33 = v54;
            uint64_t v34 = v55;
            uint64_t v35 = v53;
            do
            {
              uint64_t v61 = v32;
              uint64_t v36 = v59;
              uint64_t v37 = v34;
              uint64_t v38 = v33;
              uint64_t v39 = v35;
              if (v59 >= 1)
              {
                do
                {
                  float *v39 = fmodf(*v37, COERCE_FLOAT(*v38 << 16));
                  uint64_t v39 = (float *)((char *)v39 + v29);
                  uint64_t v38 = (unsigned __int16 *)((char *)v38 + v27);
                  uint64_t v37 = (float *)((char *)v37 + v21);
                  --v36;
                }
                while (v36);
              }
              uint64_t v32 = v61 + 1;
              uint64_t v35 = (float *)((char *)v35 + v56);
              uint64_t v33 = (unsigned __int16 *)((char *)v33 + v57);
              uint64_t v34 = (float *)((char *)v34 + v58);
            }
            while (v61 + 1 != v60);
          }
          uint64_t v31 = v52 + 1;
          uint64_t v53 = (float *)((char *)v53 + v50);
          uint64_t v54 = (unsigned __int16 *)((char *)v54 + v48);
          uint64_t v55 = (float *)((char *)v55 + v49);
        }
        while (v52 + 1 != v51);
      }
      uint64_t v30 = v44 + 1;
      float v45 = (float *)((char *)v45 + v42);
      uint64_t v46 = (unsigned __int16 *)((char *)v46 + v40);
      uint64_t v47 = (float *)((char *)v47 + v41);
    }
    while (v44 + 1 != v43);
  }
}

void mlir::mps::arithmeticBinaryTileBaseKernel<complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<half,(void *)0>,(mlir::mps::arithmeticOp)5>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v10 = v7 - 2;
    uint64_t v75 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v75 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v7 - 3;
    uint64_t v76 = 1;
    char v12 = 1;
LABEL_6:
    uint64_t v13 = v7 - 4;
    char v14 = 1;
    uint64_t v67 = 1;
    char v15 = 1;
LABEL_7:
    uint64_t v16 = 1;
    goto LABEL_8;
  }
  uint64_t v10 = v7 - 2;
  uint64_t v76 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v10 = 0;
    char v12 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v7 - 3;
  uint64_t v67 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v12 = 0;
    uint64_t v11 = 0;
    char v15 = 0;
    uint64_t v13 = -1;
    uint64_t v10 = 1;
    char v14 = 1;
    goto LABEL_7;
  }
  char v14 = 0;
  char v12 = 0;
  char v15 = 0;
  uint64_t v13 = v7 - 4;
  uint64_t v16 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v59 = v16;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v74 = 0;
    uint64_t v57 = 0;
    uint64_t v65 = 0;
    goto LABEL_37;
  }
  uint64_t v17 = *(void *)(v4 + 16);
  uint64_t v18 = v17 - 4;
  if (v17 >= 4)
  {
    if (v18 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v18) == 1) {
      uint64_t v57 = 0;
    }
    else {
      uint64_t v57 = *(void *)(*(void *)(v4 + 64) + 8 * v18);
    }
    uint64_t v19 = v17 - 3;
    goto LABEL_26;
  }
  if (v17 == 3)
  {
    uint64_t v19 = 0;
    uint64_t v57 = 0;
LABEL_26:
    if (v19 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v19) == 1) {
      uint64_t v65 = 0;
    }
    else {
      uint64_t v65 = *(void *)(*(void *)(v4 + 64) + 8 * v19);
    }
    uint64_t v22 = v17 - 2;
    goto LABEL_31;
  }
  if (v17 < 2)
  {
    uint64_t v20 = 0;
    uint64_t v74 = 0;
    uint64_t v57 = 0;
    uint64_t v65 = 0;
    uint64_t v21 = 0;
    if (v17 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v22 = 0;
  uint64_t v65 = 0;
  uint64_t v57 = 0;
LABEL_31:
  if (v22 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
    uint64_t v74 = 0;
  }
  else {
    uint64_t v74 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
  }
  uint64_t v20 = v17 - 1;
LABEL_36:
  if (v20 > (int)v17 - 1)
  {
LABEL_37:
    uint64_t v21 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v73 = 0;
    uint64_t v56 = 0;
    uint64_t v64 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v20) != 1)
  {
    uint64_t v21 = *(void *)(*(void *)(v4 + 64) + 8 * v20);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v21 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v23 = *(void *)(v5 + 16);
  uint64_t v24 = v23 - 4;
  if (v23 >= 4)
  {
    if (v24 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v24) == 1) {
      uint64_t v56 = 0;
    }
    else {
      uint64_t v56 = *(void *)(*(void *)(v5 + 64) + 8 * v24);
    }
    uint64_t v25 = v23 - 3;
    goto LABEL_56;
  }
  if (v23 == 3)
  {
    uint64_t v25 = 0;
    uint64_t v56 = 0;
LABEL_56:
    if (v25 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v25) == 1) {
      uint64_t v64 = 0;
    }
    else {
      uint64_t v64 = *(void *)(*(void *)(v5 + 64) + 8 * v25);
    }
    uint64_t v28 = v23 - 2;
    goto LABEL_61;
  }
  if (v23 >= 2)
  {
    uint64_t v28 = 0;
    uint64_t v64 = 0;
    uint64_t v56 = 0;
LABEL_61:
    if (v28 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v73 = 0;
    }
    else {
      uint64_t v73 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v26 = v23 - 1;
    goto LABEL_66;
  }
  uint64_t v26 = 0;
  uint64_t v73 = 0;
  uint64_t v56 = 0;
  uint64_t v64 = 0;
  uint64_t v27 = 0;
  if (v23 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v26 <= (int)v23 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v26) != 1)
    {
      uint64_t v27 = *(void *)(*(void *)(v5 + 64) + 8 * v26);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v27 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v72 = 0;
    uint64_t v58 = 0;
    uint64_t v66 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v27 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v14 & 1) != 0 || v13 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v13) == 1)
  {
    uint64_t v58 = 0;
    if (v15) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v58 = *(void *)(*(void *)(v6 + 64) + 8 * v13);
    if (v15) {
      goto LABEL_98;
    }
  }
  if (v11 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v11) == 1)
  {
LABEL_98:
    uint64_t v66 = 0;
    if (v12) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v66 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
  if (v12) {
    goto LABEL_101;
  }
LABEL_99:
  if (v10 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v10) != 1)
  {
    uint64_t v72 = *(void *)(*(void *)(v6 + 64) + 8 * v10);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v29 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v72 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v29 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v59 >= 1)
  {
    uint64_t v30 = 0;
    uint64_t v63 = (__int16 *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v61 = (short float *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v62 = (short float *)(**a4 + *(void *)(v6 + 40));
    do
    {
      uint64_t v60 = v30;
      if (v67 >= 1)
      {
        uint64_t v31 = 0;
        uint64_t v70 = v63;
        uint64_t v71 = v61;
        uint64_t v69 = v62;
        do
        {
          uint64_t v68 = v31;
          if (v76 >= 1)
          {
            uint64_t v32 = 0;
            uint64_t v33 = v70;
            uint64_t v34 = v71;
            uint64_t v35 = v69;
            do
            {
              uint64_t v77 = v32;
              uint64_t v36 = v75;
              uint64_t v37 = v34;
              uint64_t v38 = v33;
              uint64_t v39 = v35;
              if (v75 >= 1)
              {
                do
                {
                  _H8 = *v37;
                  _H9 = v37[1];
                  _H0 = *v38;
                  _H1 = v38[1];
                  __asm
                  {
                    FCVT            S2, H8
                    FCVT            S3, H9
                  }
                  *(void *)unint64_t v80 = __PAIR64__(_S3, _S2);
                  __asm
                  {
                    FCVT            S10, H0
                    FCVT            S11, H1
                  }
                  int v78 = _S10;
                  int v79 = _S11;
                  v52.f32[0] = std::operator/[abi:nn180100]<float>(v80, (float *)&v78);
                  v52.i32[1] = v53;
                  *(void *)unint64_t v80 = vcvtq_f32_f16(vrnd_f16(vcvt_f16_f32(v52))).u64[0];
                  int v78 = _S10;
                  int v79 = _S11;
                  _S0 = std::operator*[abi:nn180100]<float>(v80, (float *)&v78);
                  __asm
                  {
                    FCVT            H0, S0
                    FCVT            H1, S1
                  }
                  short float *v39 = _H8 - *(short float *)&_S0;
                  v39[1] = _H9 - *(short float *)&_S1;
                  uint64_t v39 = (short float *)((char *)v39 + v29);
                  uint64_t v38 = (__int16 *)((char *)v38 + v27);
                  uint64_t v37 = (short float *)((char *)v37 + v21);
                  --v36;
                }
                while (v36);
              }
              uint64_t v32 = v77 + 1;
              uint64_t v35 = (short float *)((char *)v35 + v72);
              uint64_t v33 = (__int16 *)((char *)v33 + v73);
              uint64_t v34 = (short float *)((char *)v34 + v74);
            }
            while (v77 + 1 != v76);
          }
          uint64_t v31 = v68 + 1;
          uint64_t v69 = (short float *)((char *)v69 + v66);
          uint64_t v70 = (__int16 *)((char *)v70 + v64);
          uint64_t v71 = (short float *)((char *)v71 + v65);
        }
        while (v68 + 1 != v67);
      }
      uint64_t v30 = v60 + 1;
      uint64_t v62 = (short float *)((char *)v62 + v58);
      uint64_t v63 = (__int16 *)((char *)v63 + v56);
      uint64_t v61 = (short float *)((char *)v61 + v57);
    }
    while (v60 + 1 != v59);
  }
}

void mlir::mps::arithmeticBinaryTileBaseKernel<half,half,half,(mlir::mps::arithmeticOp)5>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v10 = v7 - 2;
    uint64_t v68 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v68 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v7 - 3;
    uint64_t v69 = 1;
    char v12 = 1;
LABEL_6:
    uint64_t v13 = v7 - 4;
    char v14 = 1;
    uint64_t v60 = 1;
    char v15 = 1;
LABEL_7:
    uint64_t v16 = 1;
    goto LABEL_8;
  }
  uint64_t v10 = v7 - 2;
  uint64_t v69 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v10 = 0;
    char v12 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v7 - 3;
  uint64_t v60 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v12 = 0;
    uint64_t v11 = 0;
    char v15 = 0;
    uint64_t v13 = -1;
    uint64_t v10 = 1;
    char v14 = 1;
    goto LABEL_7;
  }
  char v14 = 0;
  char v12 = 0;
  char v15 = 0;
  uint64_t v13 = v7 - 4;
  uint64_t v16 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v52 = v16;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v67 = 0;
    uint64_t v50 = 0;
    uint64_t v58 = 0;
    goto LABEL_37;
  }
  uint64_t v17 = *(void *)(v4 + 16);
  uint64_t v18 = v17 - 4;
  if (v17 >= 4)
  {
    if (v18 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v18) == 1) {
      uint64_t v50 = 0;
    }
    else {
      uint64_t v50 = *(void *)(*(void *)(v4 + 64) + 8 * v18);
    }
    uint64_t v19 = v17 - 3;
    goto LABEL_26;
  }
  if (v17 == 3)
  {
    uint64_t v19 = 0;
    uint64_t v50 = 0;
LABEL_26:
    if (v19 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v19) == 1) {
      uint64_t v58 = 0;
    }
    else {
      uint64_t v58 = *(void *)(*(void *)(v4 + 64) + 8 * v19);
    }
    uint64_t v22 = v17 - 2;
    goto LABEL_31;
  }
  if (v17 < 2)
  {
    uint64_t v20 = 0;
    uint64_t v67 = 0;
    uint64_t v50 = 0;
    uint64_t v58 = 0;
    uint64_t v21 = 0;
    if (v17 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v22 = 0;
  uint64_t v58 = 0;
  uint64_t v50 = 0;
LABEL_31:
  if (v22 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
    uint64_t v67 = 0;
  }
  else {
    uint64_t v67 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
  }
  uint64_t v20 = v17 - 1;
LABEL_36:
  if (v20 > (int)v17 - 1)
  {
LABEL_37:
    uint64_t v21 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v66 = 0;
    uint64_t v49 = 0;
    uint64_t v57 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v20) != 1)
  {
    uint64_t v21 = *(void *)(*(void *)(v4 + 64) + 8 * v20);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v21 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v23 = *(void *)(v5 + 16);
  uint64_t v24 = v23 - 4;
  if (v23 >= 4)
  {
    if (v24 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v24) == 1) {
      uint64_t v49 = 0;
    }
    else {
      uint64_t v49 = *(void *)(*(void *)(v5 + 64) + 8 * v24);
    }
    uint64_t v25 = v23 - 3;
    goto LABEL_56;
  }
  if (v23 == 3)
  {
    uint64_t v25 = 0;
    uint64_t v49 = 0;
LABEL_56:
    if (v25 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v25) == 1) {
      uint64_t v57 = 0;
    }
    else {
      uint64_t v57 = *(void *)(*(void *)(v5 + 64) + 8 * v25);
    }
    uint64_t v28 = v23 - 2;
    goto LABEL_61;
  }
  if (v23 >= 2)
  {
    uint64_t v28 = 0;
    uint64_t v57 = 0;
    uint64_t v49 = 0;
LABEL_61:
    if (v28 > (int)v23 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v66 = 0;
    }
    else {
      uint64_t v66 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v26 = v23 - 1;
    goto LABEL_66;
  }
  uint64_t v26 = 0;
  uint64_t v66 = 0;
  uint64_t v49 = 0;
  uint64_t v57 = 0;
  uint64_t v27 = 0;
  if (v23 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v26 <= (int)v23 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v26) != 1)
    {
      uint64_t v27 = *(void *)(*(void *)(v5 + 64) + 8 * v26);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v27 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v65 = 0;
    uint64_t v51 = 0;
    uint64_t v59 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v27 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v14 & 1) != 0 || v13 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v13) == 1)
  {
    uint64_t v51 = 0;
    if (v15) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v51 = *(void *)(*(void *)(v6 + 64) + 8 * v13);
    if (v15) {
      goto LABEL_98;
    }
  }
  if (v11 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v11) == 1)
  {
LABEL_98:
    uint64_t v59 = 0;
    if (v12) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v59 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
  if (v12) {
    goto LABEL_101;
  }
LABEL_99:
  if (v10 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v10) != 1)
  {
    uint64_t v65 = *(void *)(*(void *)(v6 + 64) + 8 * v10);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v29 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v65 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v29 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v52 >= 1)
  {
    uint64_t v30 = 0;
    uint64_t v56 = (__int16 *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v55 = (__int16 *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v54 = (_WORD *)(**a4 + *(void *)(v6 + 40));
    do
    {
      uint64_t v53 = v30;
      if (v60 >= 1)
      {
        uint64_t v31 = 0;
        uint64_t v63 = v55;
        uint64_t v64 = v56;
        uint64_t v62 = v54;
        do
        {
          uint64_t v61 = v31;
          if (v69 >= 1)
          {
            uint64_t v32 = 0;
            uint64_t v33 = v63;
            uint64_t v34 = v64;
            uint64_t v35 = v62;
            do
            {
              uint64_t v70 = v32;
              uint64_t v36 = v68;
              uint64_t v37 = v34;
              uint64_t v38 = v33;
              uint64_t v39 = v35;
              if (v68 >= 1)
              {
                do
                {
                  _H0 = *v37;
                  _H1 = *v38;
                  __asm
                  {
                    FCVT            S0, H0; float
                    FCVT            S1, H1; float
                  }
                  _S0 = fmodf(_S0, _S1);
                  __asm { FCVT            H0, S0 }
                  _WORD *v39 = LOWORD(_S0);
                  uint64_t v39 = (_WORD *)((char *)v39 + v29);
                  uint64_t v38 = (__int16 *)((char *)v38 + v27);
                  uint64_t v37 = (__int16 *)((char *)v37 + v21);
                  --v36;
                }
                while (v36);
              }
              uint64_t v32 = v70 + 1;
              uint64_t v35 = (_WORD *)((char *)v35 + v65);
              uint64_t v33 = (__int16 *)((char *)v33 + v66);
              uint64_t v34 = (__int16 *)((char *)v34 + v67);
            }
            while (v70 + 1 != v69);
          }
          uint64_t v31 = v61 + 1;
          uint64_t v62 = (_WORD *)((char *)v62 + v59);
          uint64_t v63 = (__int16 *)((char *)v63 + v57);
          uint64_t v64 = (__int16 *)((char *)v64 + v58);
        }
        while (v61 + 1 != v60);
      }
      uint64_t v30 = v53 + 1;
      uint64_t v54 = (_WORD *)((char *)v54 + v51);
      uint64_t v55 = (__int16 *)((char *)v55 + v49);
      uint64_t v56 = (__int16 *)((char *)v56 + v50);
    }
    while (v53 + 1 != v52);
  }
}

void mlir::mps::arithmeticBinaryTileBaseKernel<__emulated_bf16,__emulated_bf16,__emulated_bf16,(mlir::mps::arithmeticOp)5>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v10 = v7 - 2;
    uint64_t v58 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v58 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v7 - 3;
    uint64_t v59 = 1;
    char v12 = 1;
LABEL_6:
    uint64_t v13 = v7 - 4;
    char v14 = 1;
    uint64_t v50 = 1;
    char v15 = 1;
LABEL_7:
    uint64_t v16 = 1;
    goto LABEL_8;
  }
  uint64_t v10 = v7 - 2;
  uint64_t v59 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v10 = 0;
    char v12 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v7 - 3;
  uint64_t v50 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v12 = 0;
    uint64_t v11 = 0;
    char v15 = 0;
    uint64_t v13 = -1;
    uint64_t v10 = 1;
    char v14 = 1;
    goto LABEL_7;
  }
  char v14 = 0;
  char v12 = 0;
  char v15 = 0;
  uint64_t v13 = v7 - 4;
  uint64_t v16 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v42 = v16;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v57 = 0;
    uint64_t v40 = 0;
    uint64_t v48 = 0;
    goto LABEL_37;
  }
  uint64_t v17 = *(void *)(v4 + 16);
  uint64_t v18 = v17 - 4;
  if (v17 >= 4)
  {
    if (v18 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v18) == 1) {
      uint64_t v40 = 0;
    }
    else {
      uint64_t v40 = *(void *)(*(void *)(v4 + 64) + 8 * v18);
    }
    uint64_t v19 = v17 - 3;
    goto LABEL_26;
  }
  if (v17 == 3)
  {
    uint64_t v19 = 0;
    uint64_t v40 = 0;
LABEL_26:
    if (v19 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v19) == 1) {
      uint64_t v48 = 0;
    }
    else {
      uint64_t v48 = *(void *)(*(void *)(v4 + 64) + 8 * v19);
    }
    uint64_t v21 = v17 - 2;
    goto LABEL_31;
  }
  if (v17 < 2)
  {
    uint64_t v20 = 0;
    uint64_t v57 = 0;
    uint64_t v40 = 0;
    uint64_t v48 = 0;
    uint64_t v61 = 0;
    if (v17 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v21 = 0;
  uint64_t v48 = 0;
  uint64_t v40 = 0;
LABEL_31:
  if (v21 > (int)v17 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v21) == 1) {
    uint64_t v57 = 0;
  }
  else {
    uint64_t v57 = *(void *)(*(void *)(v4 + 64) + 8 * v21);
  }
  uint64_t v20 = v17 - 1;
LABEL_36:
  if (v20 > (int)v17 - 1)
  {
LABEL_37:
    uint64_t v61 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v56 = 0;
    uint64_t v39 = 0;
    uint64_t v47 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v20) != 1)
  {
    uint64_t v61 = *(void *)(*(void *)(v4 + 64) + 8 * v20);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v61 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v22 = *(void *)(v5 + 16);
  uint64_t v23 = v22 - 4;
  if (v22 >= 4)
  {
    if (v23 > (int)v22 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v23) == 1) {
      uint64_t v39 = 0;
    }
    else {
      uint64_t v39 = *(void *)(*(void *)(v5 + 64) + 8 * v23);
    }
    uint64_t v24 = v22 - 3;
    goto LABEL_56;
  }
  if (v22 == 3)
  {
    uint64_t v24 = 0;
    uint64_t v39 = 0;
LABEL_56:
    if (v24 > (int)v22 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v24) == 1) {
      uint64_t v47 = 0;
    }
    else {
      uint64_t v47 = *(void *)(*(void *)(v5 + 64) + 8 * v24);
    }
    uint64_t v26 = v22 - 2;
    goto LABEL_61;
  }
  if (v22 >= 2)
  {
    uint64_t v26 = 0;
    uint64_t v47 = 0;
    uint64_t v39 = 0;
LABEL_61:
    if (v26 > (int)v22 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v26) == 1) {
      uint64_t v56 = 0;
    }
    else {
      uint64_t v56 = *(void *)(*(void *)(v5 + 64) + 8 * v26);
    }
    uint64_t v25 = v22 - 1;
    goto LABEL_66;
  }
  uint64_t v25 = 0;
  uint64_t v56 = 0;
  uint64_t v39 = 0;
  uint64_t v47 = 0;
  uint64_t v60 = 0;
  if (v22 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v25 <= (int)v22 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v25) != 1)
    {
      uint64_t v60 = *(void *)(*(void *)(v5 + 64) + 8 * v25);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v60 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v55 = 0;
    uint64_t v41 = 0;
    uint64_t v49 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v60 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v14 & 1) != 0 || v13 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v13) == 1)
  {
    uint64_t v41 = 0;
    if (v15) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v41 = *(void *)(*(void *)(v6 + 64) + 8 * v13);
    if (v15) {
      goto LABEL_98;
    }
  }
  if (v11 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v11) == 1)
  {
LABEL_98:
    uint64_t v49 = 0;
    if (v12) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v49 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
  if (v12) {
    goto LABEL_101;
  }
LABEL_99:
  if (v10 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v10) != 1)
  {
    uint64_t v55 = *(void *)(*(void *)(v6 + 64) + 8 * v10);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v27 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v55 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v27 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v42 >= 1)
  {
    uint64_t v28 = 0;
    uint64_t v46 = (unsigned __int16 *)(**(void **)a3 + *(void *)(v4 + 40));
    float v45 = (unsigned __int16 *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v44 = (_WORD *)(**a4 + *(void *)(v6 + 40));
    do
    {
      uint64_t v43 = v28;
      if (v50 >= 1)
      {
        uint64_t v29 = 0;
        uint64_t v53 = v45;
        uint64_t v54 = v46;
        uint64_t v52 = v44;
        do
        {
          uint64_t v51 = v29;
          if (v59 >= 1)
          {
            uint64_t v30 = 0;
            uint64_t v32 = v53;
            uint64_t v31 = v54;
            uint64_t v33 = v52;
            do
            {
              uint64_t v34 = v58;
              uint64_t v35 = v31;
              uint64_t v36 = v32;
              uint64_t v37 = v33;
              if (v58 >= 1)
              {
                do
                {
                  float v38 = fmodf(COERCE_FLOAT(*v35 << 16), COERCE_FLOAT(*v36 << 16));
                  _WORD *v37 = HIWORD(COERCE_UNSIGNED_INT(v38 + (float)(COERCE_FLOAT(LODWORD(v38) & 0xFF800000) * 0.0039062)));
                  uint64_t v37 = (_WORD *)((char *)v37 + v27);
                  uint64_t v36 = (unsigned __int16 *)((char *)v36 + v60);
                  uint64_t v35 = (unsigned __int16 *)((char *)v35 + v61);
                  --v34;
                }
                while (v34);
              }
              ++v30;
              uint64_t v33 = (_WORD *)((char *)v33 + v55);
              uint64_t v32 = (unsigned __int16 *)((char *)v32 + v56);
              uint64_t v31 = (unsigned __int16 *)((char *)v31 + v57);
            }
            while (v30 != v59);
          }
          uint64_t v29 = v51 + 1;
          uint64_t v52 = (_WORD *)((char *)v52 + v49);
          uint64_t v53 = (unsigned __int16 *)((char *)v53 + v47);
          uint64_t v54 = (unsigned __int16 *)((char *)v54 + v48);
        }
        while (v51 + 1 != v50);
      }
      uint64_t v28 = v43 + 1;
      uint64_t v44 = (_WORD *)((char *)v44 + v41);
      float v45 = (unsigned __int16 *)((char *)v45 + v39);
      uint64_t v46 = (unsigned __int16 *)((char *)v46 + v40);
    }
    while (v43 + 1 != v42);
  }
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<long long,long long,long long,(mlir::mps::arithmeticOp)5>(uint64_t result, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **(void **)result;
  uint64_t v5 = *(void *)(*(void *)result + 8);
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v57 = 1;
    char v17 = 1;
LABEL_7:
    uint64_t v18 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v57 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v17 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v17 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v19 = 0;
    uint64_t v54 = 0;
    uint64_t v56 = 0;
    goto LABEL_37;
  }
  uint64_t v20 = *(void *)(v4 + 16);
  uint64_t v21 = v20 - 4;
  if (v20 >= 4)
  {
    if (v21 > (int)v20 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v21) == 1) {
      uint64_t v54 = 0;
    }
    else {
      uint64_t v54 = *(void *)(*(void *)(v4 + 64) + 8 * v21);
    }
    uint64_t v22 = v20 - 3;
    goto LABEL_26;
  }
  if (v20 == 3)
  {
    uint64_t v22 = 0;
    uint64_t v54 = 0;
LABEL_26:
    if (v22 > (int)v20 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
      uint64_t v56 = 0;
    }
    else {
      uint64_t v56 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
    }
    uint64_t v25 = v20 - 2;
    goto LABEL_31;
  }
  if (v20 < 2)
  {
    uint64_t v23 = 0;
    uint64_t v19 = 0;
    uint64_t v54 = 0;
    uint64_t v56 = 0;
    uint64_t v24 = 0;
    if (v20 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v25 = 0;
  uint64_t v56 = 0;
  uint64_t v54 = 0;
LABEL_31:
  if (v25 > (int)v20 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v25) == 1) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
  }
  uint64_t v23 = v20 - 1;
LABEL_36:
  if (v23 > (int)v20 - 1)
  {
LABEL_37:
    uint64_t v24 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v29 = 0;
    uint64_t v53 = 0;
    uint64_t v30 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v23) != 1)
  {
    uint64_t v24 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v24 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v26 = *(void *)(v5 + 16);
  uint64_t v27 = v26 - 4;
  if (v26 >= 4)
  {
    if (v27 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v27) == 1) {
      uint64_t v53 = 0;
    }
    else {
      uint64_t v53 = *(void *)(*(void *)(v5 + 64) + 8 * v27);
    }
    uint64_t v28 = v26 - 3;
    goto LABEL_56;
  }
  if (v26 == 3)
  {
    uint64_t v28 = 0;
    uint64_t v53 = 0;
LABEL_56:
    if (v28 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v30 = 0;
    }
    else {
      uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v33 = v26 - 2;
    goto LABEL_61;
  }
  if (v26 >= 2)
  {
    uint64_t v33 = 0;
    uint64_t v30 = 0;
    uint64_t v53 = 0;
LABEL_61:
    if (v33 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v33) == 1) {
      uint64_t v29 = 0;
    }
    else {
      uint64_t v29 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
    }
    uint64_t v31 = v26 - 1;
    goto LABEL_66;
  }
  uint64_t v31 = 0;
  uint64_t v29 = 0;
  uint64_t v53 = 0;
  uint64_t v30 = 0;
  uint64_t v32 = 0;
  if (v26 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v31 <= (int)v26 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v31) != 1)
    {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v31);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v32 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v35 = 0;
    uint64_t v55 = 0;
    uint64_t v34 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v32 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v55 = 0;
    if (v17) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v55 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v17) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v34 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v34 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v35 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v36 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v35 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v18 >= 1)
  {
    uint64_t v37 = 0;
    float v38 = (void *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v39 = (uint64_t *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v40 = (uint64_t *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v57 >= 1)
      {
        uint64_t v41 = 0;
        uint64_t v42 = v38;
        uint64_t v43 = v39;
        uint64_t v44 = v40;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v45 = 0;
            uint64_t v46 = v42;
            uint64_t v47 = v43;
            uint64_t v48 = v44;
            do
            {
              uint64_t v49 = v10;
              uint64_t v50 = v46;
              uint64_t v51 = v47;
              uint64_t v52 = v48;
              if (v10 >= 1)
              {
                do
                {
                  uint64_t result = *v50 / *v51;
                  uint64_t *v52 = *v50 % *v51;
                  uint64_t v52 = (uint64_t *)((char *)v52 + v36);
                  uint64_t v51 = (uint64_t *)((char *)v51 + v32);
                  uint64_t v50 = (void *)((char *)v50 + v24);
                  --v49;
                }
                while (v49);
              }
              ++v45;
              uint64_t v48 = (uint64_t *)((char *)v48 + v35);
              uint64_t v47 = (uint64_t *)((char *)v47 + v29);
              uint64_t v46 = (void *)((char *)v46 + v19);
            }
            while (v45 != v13);
          }
          ++v41;
          uint64_t v44 = (uint64_t *)((char *)v44 + v34);
          uint64_t v43 = (uint64_t *)((char *)v43 + v30);
          uint64_t v42 = (void *)((char *)v42 + v56);
        }
        while (v41 != v57);
      }
      ++v37;
      uint64_t v40 = (uint64_t *)((char *)v40 + v55);
      uint64_t v39 = (uint64_t *)((char *)v39 + v53);
      float v38 = (void *)((char *)v38 + v54);
    }
    while (v37 != v18);
  }
  return result;
}

unint64_t mlir::mps::arithmeticBinaryTileBaseKernel<int,int,int,(mlir::mps::arithmeticOp)5>(unint64_t result, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **(void **)result;
  uint64_t v5 = *(void *)(*(void *)result + 8);
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v57 = 1;
    char v17 = 1;
LABEL_7:
    uint64_t v18 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v57 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v17 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v17 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v19 = 0;
    uint64_t v54 = 0;
    uint64_t v56 = 0;
    goto LABEL_37;
  }
  uint64_t v20 = *(void *)(v4 + 16);
  uint64_t v21 = v20 - 4;
  if (v20 >= 4)
  {
    if (v21 > (int)v20 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v21) == 1) {
      uint64_t v54 = 0;
    }
    else {
      uint64_t v54 = *(void *)(*(void *)(v4 + 64) + 8 * v21);
    }
    uint64_t v22 = v20 - 3;
    goto LABEL_26;
  }
  if (v20 == 3)
  {
    uint64_t v22 = 0;
    uint64_t v54 = 0;
LABEL_26:
    if (v22 > (int)v20 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
      uint64_t v56 = 0;
    }
    else {
      uint64_t v56 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
    }
    uint64_t v25 = v20 - 2;
    goto LABEL_31;
  }
  if (v20 < 2)
  {
    uint64_t v23 = 0;
    uint64_t v19 = 0;
    uint64_t v54 = 0;
    uint64_t v56 = 0;
    uint64_t v24 = 0;
    if (v20 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v25 = 0;
  uint64_t v56 = 0;
  uint64_t v54 = 0;
LABEL_31:
  if (v25 > (int)v20 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v25) == 1) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
  }
  uint64_t v23 = v20 - 1;
LABEL_36:
  if (v23 > (int)v20 - 1)
  {
LABEL_37:
    uint64_t v24 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v29 = 0;
    uint64_t v53 = 0;
    uint64_t v30 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v23) != 1)
  {
    uint64_t v24 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v24 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v26 = *(void *)(v5 + 16);
  uint64_t v27 = v26 - 4;
  if (v26 >= 4)
  {
    if (v27 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v27) == 1) {
      uint64_t v53 = 0;
    }
    else {
      uint64_t v53 = *(void *)(*(void *)(v5 + 64) + 8 * v27);
    }
    uint64_t v28 = v26 - 3;
    goto LABEL_56;
  }
  if (v26 == 3)
  {
    uint64_t v28 = 0;
    uint64_t v53 = 0;
LABEL_56:
    if (v28 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v30 = 0;
    }
    else {
      uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v33 = v26 - 2;
    goto LABEL_61;
  }
  if (v26 >= 2)
  {
    uint64_t v33 = 0;
    uint64_t v30 = 0;
    uint64_t v53 = 0;
LABEL_61:
    if (v33 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v33) == 1) {
      uint64_t v29 = 0;
    }
    else {
      uint64_t v29 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
    }
    uint64_t v31 = v26 - 1;
    goto LABEL_66;
  }
  uint64_t v31 = 0;
  uint64_t v29 = 0;
  uint64_t v53 = 0;
  uint64_t v30 = 0;
  uint64_t v32 = 0;
  if (v26 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v31 <= (int)v26 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v31) != 1)
    {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v31);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v32 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v35 = 0;
    uint64_t v55 = 0;
    uint64_t v34 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v32 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v55 = 0;
    if (v17) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v55 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v17) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v34 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v34 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v35 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v36 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v35 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v18 >= 1)
  {
    uint64_t v37 = 0;
    float v38 = (_DWORD *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v39 = (_DWORD *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v40 = (int *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v57 >= 1)
      {
        uint64_t v41 = 0;
        uint64_t v42 = v38;
        uint64_t v43 = v39;
        uint64_t v44 = v40;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v45 = 0;
            uint64_t v46 = v42;
            uint64_t v47 = v43;
            uint64_t v48 = v44;
            do
            {
              uint64_t v49 = v10;
              uint64_t v50 = v46;
              uint64_t v51 = v47;
              uint64_t v52 = v48;
              if (v10 >= 1)
              {
                do
                {
                  uint64_t result = (*v50 / *v51);
                  int *v52 = *v50 % *v51;
                  uint64_t v52 = (int *)((char *)v52 + v36);
                  uint64_t v51 = (_DWORD *)((char *)v51 + v32);
                  uint64_t v50 = (_DWORD *)((char *)v50 + v24);
                  --v49;
                }
                while (v49);
              }
              ++v45;
              uint64_t v48 = (int *)((char *)v48 + v35);
              uint64_t v47 = (_DWORD *)((char *)v47 + v29);
              uint64_t v46 = (_DWORD *)((char *)v46 + v19);
            }
            while (v45 != v13);
          }
          ++v41;
          uint64_t v44 = (int *)((char *)v44 + v34);
          uint64_t v43 = (_DWORD *)((char *)v43 + v30);
          uint64_t v42 = (_DWORD *)((char *)v42 + v56);
        }
        while (v41 != v57);
      }
      ++v37;
      uint64_t v40 = (int *)((char *)v40 + v55);
      uint64_t v39 = (_DWORD *)((char *)v39 + v53);
      float v38 = (_DWORD *)((char *)v38 + v54);
    }
    while (v37 != v18);
  }
  return result;
}

unint64_t mlir::mps::arithmeticBinaryTileBaseKernel<short,short,short,(mlir::mps::arithmeticOp)5>(unint64_t result, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **(void **)result;
  uint64_t v5 = *(void *)(*(void *)result + 8);
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v60 = 1;
    char v17 = 1;
LABEL_7:
    uint64_t v18 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v60 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v17 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v17 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v58 = v18;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v19 = 0;
    uint64_t v56 = 0;
    uint64_t v59 = 0;
    goto LABEL_37;
  }
  uint64_t v20 = *(void *)(v4 + 16);
  uint64_t v21 = v20 - 4;
  if (v20 >= 4)
  {
    if (v21 > (int)v20 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v21) == 1) {
      uint64_t v56 = 0;
    }
    else {
      uint64_t v56 = *(void *)(*(void *)(v4 + 64) + 8 * v21);
    }
    uint64_t v22 = v20 - 3;
    goto LABEL_26;
  }
  if (v20 == 3)
  {
    uint64_t v22 = 0;
    uint64_t v56 = 0;
LABEL_26:
    if (v22 > (int)v20 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
      uint64_t v59 = 0;
    }
    else {
      uint64_t v59 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
    }
    uint64_t v25 = v20 - 2;
    goto LABEL_31;
  }
  if (v20 < 2)
  {
    uint64_t v23 = 0;
    uint64_t v19 = 0;
    uint64_t v56 = 0;
    uint64_t v59 = 0;
    uint64_t v24 = 0;
    if (v20 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v25 = 0;
  uint64_t v59 = 0;
  uint64_t v56 = 0;
LABEL_31:
  if (v25 > (int)v20 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v25) == 1) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
  }
  uint64_t v23 = v20 - 1;
LABEL_36:
  if (v23 > (int)v20 - 1)
  {
LABEL_37:
    uint64_t v24 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v29 = 0;
    uint64_t v55 = 0;
    uint64_t v30 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v23) != 1)
  {
    uint64_t v24 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v24 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v26 = *(void *)(v5 + 16);
  uint64_t v27 = v26 - 4;
  if (v26 >= 4)
  {
    if (v27 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v27) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v5 + 64) + 8 * v27);
    }
    uint64_t v28 = v26 - 3;
    goto LABEL_56;
  }
  if (v26 == 3)
  {
    uint64_t v28 = 0;
    uint64_t v55 = 0;
LABEL_56:
    if (v28 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v30 = 0;
    }
    else {
      uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v33 = v26 - 2;
    goto LABEL_61;
  }
  if (v26 >= 2)
  {
    uint64_t v33 = 0;
    uint64_t v30 = 0;
    uint64_t v55 = 0;
LABEL_61:
    if (v33 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v33) == 1) {
      uint64_t v29 = 0;
    }
    else {
      uint64_t v29 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
    }
    uint64_t v31 = v26 - 1;
    goto LABEL_66;
  }
  uint64_t v31 = 0;
  uint64_t v29 = 0;
  uint64_t v55 = 0;
  uint64_t v30 = 0;
  uint64_t v32 = 0;
  if (v26 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v31 <= (int)v26 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v31) != 1)
    {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v31);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v32 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v35 = 0;
    uint64_t v57 = 0;
    uint64_t v34 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v32 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v57 = 0;
    if (v17) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v57 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v17) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v34 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v34 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v35 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v36 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v35 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v18 >= 1)
  {
    uint64_t v37 = 0;
    float v38 = (__int16 *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v39 = (__int16 *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v40 = (_WORD *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v60 >= 1)
      {
        uint64_t v41 = 0;
        uint64_t v42 = v38;
        uint64_t v43 = v39;
        uint64_t v44 = v40;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v45 = 0;
            uint64_t v46 = v42;
            uint64_t v47 = v43;
            uint64_t v48 = v44;
            do
            {
              uint64_t v49 = v10;
              uint64_t v50 = v46;
              uint64_t v51 = v47;
              uint64_t v52 = v48;
              if (v10 >= 1)
              {
                do
                {
                  int v53 = *v50;
                  int v54 = *v51;
                  uint64_t result = (v53 / v54);
                  _WORD *v52 = v53 % v54;
                  uint64_t v52 = (_WORD *)((char *)v52 + v36);
                  uint64_t v51 = (__int16 *)((char *)v51 + v32);
                  uint64_t v50 = (__int16 *)((char *)v50 + v24);
                  --v49;
                }
                while (v49);
              }
              ++v45;
              uint64_t v48 = (_WORD *)((char *)v48 + v35);
              uint64_t v47 = (__int16 *)((char *)v47 + v29);
              uint64_t v46 = (__int16 *)((char *)v46 + v19);
            }
            while (v45 != v13);
          }
          ++v41;
          uint64_t v44 = (_WORD *)((char *)v44 + v34);
          uint64_t v43 = (__int16 *)((char *)v43 + v30);
          uint64_t v42 = (__int16 *)((char *)v42 + v59);
        }
        while (v41 != v60);
      }
      ++v37;
      uint64_t v40 = (_WORD *)((char *)v40 + v57);
      uint64_t v39 = (__int16 *)((char *)v39 + v55);
      float v38 = (__int16 *)((char *)v38 + v56);
    }
    while (v37 != v58);
  }
  return result;
}

unint64_t mlir::mps::arithmeticBinaryTileBaseKernel<signed char,signed char,signed char,(mlir::mps::arithmeticOp)5>(unint64_t result, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **(void **)result;
  uint64_t v5 = *(void *)(*(void *)result + 8);
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v60 = 1;
    char v17 = 1;
LABEL_7:
    uint64_t v18 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v60 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v17 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v17 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v58 = v18;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v19 = 0;
    uint64_t v56 = 0;
    uint64_t v59 = 0;
    goto LABEL_37;
  }
  uint64_t v20 = *(void *)(v4 + 16);
  uint64_t v21 = v20 - 4;
  if (v20 >= 4)
  {
    if (v21 > (int)v20 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v21) == 1) {
      uint64_t v56 = 0;
    }
    else {
      uint64_t v56 = *(void *)(*(void *)(v4 + 64) + 8 * v21);
    }
    uint64_t v22 = v20 - 3;
    goto LABEL_26;
  }
  if (v20 == 3)
  {
    uint64_t v22 = 0;
    uint64_t v56 = 0;
LABEL_26:
    if (v22 > (int)v20 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
      uint64_t v59 = 0;
    }
    else {
      uint64_t v59 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
    }
    uint64_t v25 = v20 - 2;
    goto LABEL_31;
  }
  if (v20 < 2)
  {
    uint64_t v23 = 0;
    uint64_t v19 = 0;
    uint64_t v56 = 0;
    uint64_t v59 = 0;
    uint64_t v24 = 0;
    if (v20 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v25 = 0;
  uint64_t v59 = 0;
  uint64_t v56 = 0;
LABEL_31:
  if (v25 > (int)v20 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v25) == 1) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
  }
  uint64_t v23 = v20 - 1;
LABEL_36:
  if (v23 > (int)v20 - 1)
  {
LABEL_37:
    uint64_t v24 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v29 = 0;
    uint64_t v55 = 0;
    uint64_t v30 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v23) != 1)
  {
    uint64_t v24 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v24 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v26 = *(void *)(v5 + 16);
  uint64_t v27 = v26 - 4;
  if (v26 >= 4)
  {
    if (v27 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v27) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v5 + 64) + 8 * v27);
    }
    uint64_t v28 = v26 - 3;
    goto LABEL_56;
  }
  if (v26 == 3)
  {
    uint64_t v28 = 0;
    uint64_t v55 = 0;
LABEL_56:
    if (v28 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v30 = 0;
    }
    else {
      uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v33 = v26 - 2;
    goto LABEL_61;
  }
  if (v26 >= 2)
  {
    uint64_t v33 = 0;
    uint64_t v30 = 0;
    uint64_t v55 = 0;
LABEL_61:
    if (v33 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v33) == 1) {
      uint64_t v29 = 0;
    }
    else {
      uint64_t v29 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
    }
    uint64_t v31 = v26 - 1;
    goto LABEL_66;
  }
  uint64_t v31 = 0;
  uint64_t v29 = 0;
  uint64_t v55 = 0;
  uint64_t v30 = 0;
  uint64_t v32 = 0;
  if (v26 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v31 <= (int)v26 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v31) != 1)
    {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v31);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v32 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v35 = 0;
    uint64_t v57 = 0;
    uint64_t v34 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v32 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v57 = 0;
    if (v17) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v57 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v17) {
      goto LABEL_98;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_98:
    uint64_t v34 = 0;
    if (v14) {
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v34 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_101;
  }
LABEL_99:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v35 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_102;
    }
LABEL_80:
    uint64_t v36 = 0;
    goto LABEL_81;
  }
LABEL_101:
  uint64_t v35 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_102:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v18 >= 1)
  {
    uint64_t v37 = 0;
    float v38 = (char *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v39 = (char *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v40 = (unsigned char *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v60 >= 1)
      {
        uint64_t v41 = 0;
        uint64_t v42 = v38;
        uint64_t v43 = v39;
        uint64_t v44 = v40;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v45 = 0;
            uint64_t v46 = v42;
            uint64_t v47 = v43;
            uint64_t v48 = v44;
            do
            {
              uint64_t v49 = v10;
              uint64_t v50 = v46;
              uint64_t v51 = v47;
              uint64_t v52 = v48;
              if (v10 >= 1)
              {
                do
                {
                  int v53 = *v50;
                  int v54 = *v51;
                  uint64_t result = (v53 / v54);
                  unsigned char *v52 = v53 % v54;
                  v52 += v36;
                  v51 += v32;
                  v50 += v24;
                  --v49;
                }
                while (v49);
              }
              ++v45;
              v48 += v35;
              v47 += v29;
              v46 += v19;
            }
            while (v45 != v13);
          }
          ++v41;
          v44 += v34;
          v43 += v30;
          v42 += v59;
        }
        while (v41 != v60);
      }
      ++v37;
      v40 += v57;
      v39 += v55;
      v38 += v56;
    }
    while (v37 != v58);
  }
  return result;
}

uint64_t **mlir::mps::arithmeticBinaryTileBaseKernel<complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)15>(uint64_t **result, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **result;
  uint64_t v5 = (*result)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v61 = 1;
    char v17 = 1;
LABEL_7:
    uint64_t v18 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v61 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v17 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v17 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v58 = v18;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v19 = 0;
    uint64_t v56 = 0;
    uint64_t v60 = 0;
    goto LABEL_37;
  }
  uint64_t v20 = *(void *)(v4 + 16);
  uint64_t v21 = v20 - 4;
  if (v20 >= 4)
  {
    if (v21 > (int)v20 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v21) == 1) {
      uint64_t v56 = 0;
    }
    else {
      uint64_t v56 = *(void *)(*(void *)(v4 + 64) + 8 * v21);
    }
    uint64_t v22 = v20 - 3;
    goto LABEL_26;
  }
  if (v20 == 3)
  {
    uint64_t v22 = 0;
    uint64_t v56 = 0;
LABEL_26:
    if (v22 > (int)v20 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
      uint64_t v60 = 0;
    }
    else {
      uint64_t v60 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
    }
    uint64_t v25 = v20 - 2;
    goto LABEL_31;
  }
  if (v20 < 2)
  {
    uint64_t v23 = 0;
    uint64_t v19 = 0;
    uint64_t v56 = 0;
    uint64_t v60 = 0;
    uint64_t v24 = 0;
    if (v20 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v25 = 0;
  uint64_t v60 = 0;
  uint64_t v56 = 0;
LABEL_31:
  if (v25 > (int)v20 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v25) == 1) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
  }
  uint64_t v23 = v20 - 1;
LABEL_36:
  if (v23 > (int)v20 - 1)
  {
LABEL_37:
    uint64_t v24 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v29 = 0;
    uint64_t v55 = 0;
    uint64_t v30 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v23) != 1)
  {
    uint64_t v24 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v24 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v26 = *(void *)(v5 + 16);
  uint64_t v27 = v26 - 4;
  if (v26 >= 4)
  {
    if (v27 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v27) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v5 + 64) + 8 * v27);
    }
    uint64_t v28 = v26 - 3;
    goto LABEL_56;
  }
  if (v26 == 3)
  {
    uint64_t v28 = 0;
    uint64_t v55 = 0;
LABEL_56:
    if (v28 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v30 = 0;
    }
    else {
      uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v33 = v26 - 2;
    goto LABEL_61;
  }
  if (v26 >= 2)
  {
    uint64_t v33 = 0;
    uint64_t v30 = 0;
    uint64_t v55 = 0;
LABEL_61:
    if (v33 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v33) == 1) {
      uint64_t v29 = 0;
    }
    else {
      uint64_t v29 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
    }
    uint64_t v31 = v26 - 1;
    goto LABEL_66;
  }
  uint64_t v31 = 0;
  uint64_t v29 = 0;
  uint64_t v55 = 0;
  uint64_t v30 = 0;
  uint64_t v32 = 0;
  if (v26 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v31 <= (int)v26 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v31) != 1)
    {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v31);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v32 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v35 = 0;
    uint64_t v57 = 0;
    uint64_t v34 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v32 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v57 = 0;
    if (v17) {
      goto LABEL_103;
    }
  }
  else
  {
    uint64_t v57 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v17) {
      goto LABEL_103;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_103:
    uint64_t v34 = 0;
    if (v14) {
      goto LABEL_106;
    }
    goto LABEL_104;
  }
  uint64_t v34 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_106;
  }
LABEL_104:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v35 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_107;
    }
LABEL_80:
    uint64_t v36 = 0;
    goto LABEL_81;
  }
LABEL_106:
  uint64_t v35 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_107:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v18 >= 1)
  {
    uint64_t v37 = 0;
    float v38 = (float *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v39 = (float *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v40 = (unint64_t *)(**a4 + *(void *)(v6 + 40));
    do
    {
      uint64_t v59 = v37;
      if (v61 >= 1)
      {
        uint64_t v41 = 0;
        uint64_t v42 = v38;
        uint64_t v43 = v39;
        uint64_t v44 = v40;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v45 = 0;
            uint64_t v46 = v42;
            uint64_t v47 = v43;
            uint64_t v48 = v44;
            do
            {
              uint64_t v49 = v10;
              uint64_t v50 = v46;
              uint64_t v51 = v47;
              uint64_t v52 = v48;
              if (v10 >= 1)
              {
                do
                {
                  uint64_t result = (uint64_t **)(*(unsigned int *)v50 | ((unint64_t)*((unsigned int *)v50 + 1) << 32));
                  BOOL v53 = v50[1] < v51[1];
                  if (*v50 != *v51) {
                    BOOL v53 = *v50 < *v51;
                  }
                  if (v53) {
                    unint64_t v54 = *(unsigned int *)v50 | ((unint64_t)*((unsigned int *)v50 + 1) << 32);
                  }
                  else {
                    unint64_t v54 = *(unsigned int *)v51 | ((unint64_t)*((unsigned int *)v51 + 1) << 32);
                  }
                  unint64_t *v52 = v54;
                  uint64_t v52 = (unint64_t *)((char *)v52 + v36);
                  uint64_t v51 = (float *)((char *)v51 + v32);
                  uint64_t v50 = (float *)((char *)v50 + v24);
                  --v49;
                }
                while (v49);
              }
              ++v45;
              uint64_t v48 = (unint64_t *)((char *)v48 + v35);
              uint64_t v47 = (float *)((char *)v47 + v29);
              uint64_t v46 = (float *)((char *)v46 + v19);
            }
            while (v45 != v13);
          }
          ++v41;
          uint64_t v44 = (unint64_t *)((char *)v44 + v34);
          uint64_t v43 = (float *)((char *)v43 + v30);
          uint64_t v42 = (float *)((char *)v42 + v60);
        }
        while (v41 != v61);
      }
      ++v37;
      uint64_t v40 = (unint64_t *)((char *)v40 + v57);
      uint64_t v39 = (float *)((char *)v39 + v55);
      float v38 = (float *)((char *)v38 + v56);
    }
    while (v59 + 1 != v58);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<float,float,float,(mlir::mps::arithmeticOp)15>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v17 = 1;
    char v18 = 1;
LABEL_7:
    uint64_t v19 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v17 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v18 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v18 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v19 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v59 = v19;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v20 = 0;
    uint64_t v58 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v22 = *(void *)(v4 + 16);
  uint64_t v23 = v22 - 4;
  if (v22 >= 4)
  {
    if (v23 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t v58 = 0;
    }
    else {
      uint64_t v58 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v24 = v22 - 3;
    goto LABEL_26;
  }
  if (v22 == 3)
  {
    uint64_t v24 = 0;
    uint64_t v58 = 0;
LABEL_26:
    if (v24 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    }
    uint64_t v27 = v22 - 2;
    goto LABEL_31;
  }
  if (v22 < 2)
  {
    uint64_t v25 = 0;
    uint64_t v20 = 0;
    uint64_t v58 = 0;
    uint64_t result = 0;
    uint64_t v26 = 0;
    if (v22 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v27 = 0;
  uint64_t result = 0;
  uint64_t v58 = 0;
LABEL_31:
  if (v27 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v27) == 1) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = *(void *)(*(void *)(v4 + 64) + 8 * v27);
  }
  uint64_t v25 = v22 - 1;
LABEL_36:
  if (v25 > (int)v22 - 1)
  {
LABEL_37:
    uint64_t v26 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v31 = 0;
    uint64_t v57 = 0;
    uint64_t v32 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v25) != 1)
  {
    uint64_t v26 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v26 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v28 = *(void *)(v5 + 16);
  uint64_t v29 = v28 - 4;
  if (v28 >= 4)
  {
    if (v29 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v57 = 0;
    }
    else {
      uint64_t v57 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v30 = v28 - 3;
    goto LABEL_56;
  }
  if (v28 == 3)
  {
    uint64_t v30 = 0;
    uint64_t v57 = 0;
LABEL_56:
    if (v30 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v30) == 1) {
      uint64_t v32 = 0;
    }
    else {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v30);
    }
    uint64_t v35 = v28 - 2;
    goto LABEL_61;
  }
  if (v28 >= 2)
  {
    uint64_t v35 = 0;
    uint64_t v32 = 0;
    uint64_t v57 = 0;
LABEL_61:
    if (v35 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v35) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v35);
    }
    uint64_t v33 = v28 - 1;
    goto LABEL_66;
  }
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v57 = 0;
  uint64_t v32 = 0;
  uint64_t v34 = 0;
  if (v28 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v33 <= (int)v28 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v33) != 1)
    {
      uint64_t v34 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v34 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v38 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v34 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v36 = 0;
    if (v18) {
      goto LABEL_100;
    }
  }
  else
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v18) {
      goto LABEL_100;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_100:
    uint64_t v37 = 0;
    if (v14) {
      goto LABEL_103;
    }
    goto LABEL_101;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_103;
  }
LABEL_101:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v38 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_104;
    }
LABEL_80:
    uint64_t v39 = 0;
    goto LABEL_81;
  }
LABEL_103:
  uint64_t v38 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_104:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v39 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v59 >= 1)
  {
    uint64_t v40 = 0;
    uint64_t v41 = (float *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v42 = (float *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v43 = (float *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v17 >= 1)
      {
        uint64_t v44 = 0;
        uint64_t v45 = v41;
        uint64_t v46 = v42;
        uint64_t v47 = v43;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v48 = 0;
            uint64_t v49 = v45;
            uint64_t v50 = v46;
            uint64_t v51 = v47;
            do
            {
              uint64_t v52 = v10;
              BOOL v53 = v49;
              unint64_t v54 = v50;
              uint64_t v55 = v51;
              if (v10 >= 1)
              {
                do
                {
                  float v56 = *v53;
                  if (*v54 < *v53) {
                    float v56 = *v54;
                  }
                  float *v55 = v56;
                  uint64_t v55 = (float *)((char *)v55 + v39);
                  unint64_t v54 = (float *)((char *)v54 + v34);
                  BOOL v53 = (float *)((char *)v53 + v26);
                  --v52;
                }
                while (v52);
              }
              ++v48;
              uint64_t v51 = (float *)((char *)v51 + v38);
              uint64_t v50 = (float *)((char *)v50 + v31);
              uint64_t v49 = (float *)((char *)v49 + v20);
            }
            while (v48 != v13);
          }
          ++v44;
          uint64_t v47 = (float *)((char *)v47 + v37);
          uint64_t v46 = (float *)((char *)v46 + v32);
          uint64_t v45 = (float *)((char *)v45 + result);
        }
        while (v44 != v17);
      }
      ++v40;
      uint64_t v43 = (float *)((char *)v43 + v36);
      uint64_t v42 = (float *)((char *)v42 + v57);
      uint64_t v41 = (float *)((char *)v41 + v58);
    }
    while (v40 != v59);
  }
  return result;
}

uint64_t **mlir::mps::arithmeticBinaryTileBaseKernel<complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)15>(uint64_t **result, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **result;
  uint64_t v5 = (*result)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v69 = 1;
    char v17 = 1;
LABEL_7:
    uint64_t v18 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v69 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v17 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v17 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v66 = v18;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v19 = 0;
    uint64_t v64 = 0;
    uint64_t v68 = 0;
    goto LABEL_37;
  }
  uint64_t v20 = *(void *)(v4 + 16);
  uint64_t v21 = v20 - 4;
  if (v20 >= 4)
  {
    if (v21 > (int)v20 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v21) == 1) {
      uint64_t v64 = 0;
    }
    else {
      uint64_t v64 = *(void *)(*(void *)(v4 + 64) + 8 * v21);
    }
    uint64_t v22 = v20 - 3;
    goto LABEL_26;
  }
  if (v20 == 3)
  {
    uint64_t v22 = 0;
    uint64_t v64 = 0;
LABEL_26:
    if (v22 > (int)v20 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
      uint64_t v68 = 0;
    }
    else {
      uint64_t v68 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
    }
    uint64_t v25 = v20 - 2;
    goto LABEL_31;
  }
  if (v20 < 2)
  {
    uint64_t v23 = 0;
    uint64_t v19 = 0;
    uint64_t v64 = 0;
    uint64_t v68 = 0;
    uint64_t v24 = 0;
    if (v20 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v25 = 0;
  uint64_t v68 = 0;
  uint64_t v64 = 0;
LABEL_31:
  if (v25 > (int)v20 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v25) == 1) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
  }
  uint64_t v23 = v20 - 1;
LABEL_36:
  if (v23 > (int)v20 - 1)
  {
LABEL_37:
    uint64_t v24 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v29 = 0;
    uint64_t v63 = 0;
    uint64_t v30 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v23) != 1)
  {
    uint64_t v24 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v24 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v26 = *(void *)(v5 + 16);
  uint64_t v27 = v26 - 4;
  if (v26 >= 4)
  {
    if (v27 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v27) == 1) {
      uint64_t v63 = 0;
    }
    else {
      uint64_t v63 = *(void *)(*(void *)(v5 + 64) + 8 * v27);
    }
    uint64_t v28 = v26 - 3;
    goto LABEL_56;
  }
  if (v26 == 3)
  {
    uint64_t v28 = 0;
    uint64_t v63 = 0;
LABEL_56:
    if (v28 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v30 = 0;
    }
    else {
      uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v33 = v26 - 2;
    goto LABEL_61;
  }
  if (v26 >= 2)
  {
    uint64_t v33 = 0;
    uint64_t v30 = 0;
    uint64_t v63 = 0;
LABEL_61:
    if (v33 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v33) == 1) {
      uint64_t v29 = 0;
    }
    else {
      uint64_t v29 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
    }
    uint64_t v31 = v26 - 1;
    goto LABEL_66;
  }
  uint64_t v31 = 0;
  uint64_t v29 = 0;
  uint64_t v63 = 0;
  uint64_t v30 = 0;
  uint64_t v32 = 0;
  if (v26 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v31 <= (int)v26 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v31) != 1)
    {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v31);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v32 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v35 = 0;
    uint64_t v65 = 0;
    uint64_t v34 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v32 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v65 = 0;
    if (v17) {
      goto LABEL_103;
    }
  }
  else
  {
    uint64_t v65 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v17) {
      goto LABEL_103;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_103:
    uint64_t v34 = 0;
    if (v14) {
      goto LABEL_106;
    }
    goto LABEL_104;
  }
  uint64_t v34 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_106;
  }
LABEL_104:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v35 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_107;
    }
LABEL_80:
    uint64_t v36 = 0;
    goto LABEL_81;
  }
LABEL_106:
  uint64_t v35 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_107:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v18 >= 1)
  {
    uint64_t v37 = 0;
    uint64_t v38 = (__int16 *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v39 = (float *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v40 = (unint64_t *)(**a4 + *(void *)(v6 + 40));
    do
    {
      uint64_t v67 = v37;
      if (v69 >= 1)
      {
        uint64_t v41 = 0;
        uint64_t v42 = v38;
        uint64_t v43 = v39;
        uint64_t v44 = v40;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v45 = 0;
            uint64_t v46 = v42;
            uint64_t v47 = v43;
            uint64_t v48 = v44;
            do
            {
              uint64_t v49 = v10;
              uint64_t v50 = v46;
              uint64_t v51 = v47;
              uint64_t v52 = v48;
              if (v10 >= 1)
              {
                do
                {
                  _H0 = *v50;
                  __asm { FCVT            S0, H0 }
                  _H1 = v50[1];
                  __asm { FCVT            S1, H1 }
                  uint64_t result = (uint64_t **)(*(unsigned int *)v51 | ((unint64_t)*((unsigned int *)v51 + 1) << 32));
                  BOOL v61 = v51[1] > _S1;
                  if (*v51 != _S0) {
                    BOOL v61 = *v51 > _S0;
                  }
                  if (v61) {
                    unint64_t v62 = LODWORD(_S0) | ((unint64_t)LODWORD(_S1) << 32);
                  }
                  else {
                    unint64_t v62 = *(unsigned int *)v51 | ((unint64_t)*((unsigned int *)v51 + 1) << 32);
                  }
                  unint64_t *v52 = v62;
                  uint64_t v52 = (unint64_t *)((char *)v52 + v36);
                  uint64_t v51 = (float *)((char *)v51 + v32);
                  uint64_t v50 = (__int16 *)((char *)v50 + v24);
                  --v49;
                }
                while (v49);
              }
              ++v45;
              uint64_t v48 = (unint64_t *)((char *)v48 + v35);
              uint64_t v47 = (float *)((char *)v47 + v29);
              uint64_t v46 = (__int16 *)((char *)v46 + v19);
            }
            while (v45 != v13);
          }
          ++v41;
          uint64_t v44 = (unint64_t *)((char *)v44 + v34);
          uint64_t v43 = (float *)((char *)v43 + v30);
          uint64_t v42 = (__int16 *)((char *)v42 + v68);
        }
        while (v41 != v69);
      }
      ++v37;
      uint64_t v40 = (unint64_t *)((char *)v40 + v65);
      uint64_t v39 = (float *)((char *)v39 + v63);
      uint64_t v38 = (__int16 *)((char *)v38 + v64);
    }
    while (v67 + 1 != v66);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<half,float,float,(mlir::mps::arithmeticOp)15>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v17 = 1;
    char v18 = 1;
LABEL_7:
    uint64_t v19 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v17 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v18 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v18 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v19 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v64 = v19;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v20 = 0;
    uint64_t v63 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v22 = *(void *)(v4 + 16);
  uint64_t v23 = v22 - 4;
  if (v22 >= 4)
  {
    if (v23 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t v63 = 0;
    }
    else {
      uint64_t v63 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v24 = v22 - 3;
    goto LABEL_26;
  }
  if (v22 == 3)
  {
    uint64_t v24 = 0;
    uint64_t v63 = 0;
LABEL_26:
    if (v24 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    }
    uint64_t v27 = v22 - 2;
    goto LABEL_31;
  }
  if (v22 < 2)
  {
    uint64_t v25 = 0;
    uint64_t v20 = 0;
    uint64_t v63 = 0;
    uint64_t result = 0;
    uint64_t v26 = 0;
    if (v22 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v27 = 0;
  uint64_t result = 0;
  uint64_t v63 = 0;
LABEL_31:
  if (v27 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v27) == 1) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = *(void *)(*(void *)(v4 + 64) + 8 * v27);
  }
  uint64_t v25 = v22 - 1;
LABEL_36:
  if (v25 > (int)v22 - 1)
  {
LABEL_37:
    uint64_t v26 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v31 = 0;
    uint64_t v62 = 0;
    uint64_t v32 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v25) != 1)
  {
    uint64_t v26 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v26 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v28 = *(void *)(v5 + 16);
  uint64_t v29 = v28 - 4;
  if (v28 >= 4)
  {
    if (v29 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v62 = 0;
    }
    else {
      uint64_t v62 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v30 = v28 - 3;
    goto LABEL_56;
  }
  if (v28 == 3)
  {
    uint64_t v30 = 0;
    uint64_t v62 = 0;
LABEL_56:
    if (v30 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v30) == 1) {
      uint64_t v32 = 0;
    }
    else {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v30);
    }
    uint64_t v35 = v28 - 2;
    goto LABEL_61;
  }
  if (v28 >= 2)
  {
    uint64_t v35 = 0;
    uint64_t v32 = 0;
    uint64_t v62 = 0;
LABEL_61:
    if (v35 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v35) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v35);
    }
    uint64_t v33 = v28 - 1;
    goto LABEL_66;
  }
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v62 = 0;
  uint64_t v32 = 0;
  uint64_t v34 = 0;
  if (v28 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v33 <= (int)v28 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v33) != 1)
    {
      uint64_t v34 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v34 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v38 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v34 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v36 = 0;
    if (v18) {
      goto LABEL_100;
    }
  }
  else
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v18) {
      goto LABEL_100;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_100:
    uint64_t v37 = 0;
    if (v14) {
      goto LABEL_103;
    }
    goto LABEL_101;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_103;
  }
LABEL_101:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v38 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_104;
    }
LABEL_80:
    uint64_t v39 = 0;
    goto LABEL_81;
  }
LABEL_103:
  uint64_t v38 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_104:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v39 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v64 >= 1)
  {
    uint64_t v40 = 0;
    uint64_t v41 = (__int16 *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v42 = (float *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v43 = (float *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v17 >= 1)
      {
        uint64_t v44 = 0;
        uint64_t v45 = v41;
        uint64_t v46 = v42;
        uint64_t v47 = v43;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v48 = 0;
            uint64_t v49 = v45;
            uint64_t v50 = v46;
            uint64_t v51 = v47;
            do
            {
              uint64_t v52 = v10;
              BOOL v53 = v49;
              unint64_t v54 = v50;
              uint64_t v55 = v51;
              if (v10 >= 1)
              {
                do
                {
                  _H0 = *v53;
                  __asm { FCVT            S0, H0 }
                  if (*v54 < _S0) {
                    _S0 = *v54;
                  }
                  float *v55 = _S0;
                  uint64_t v55 = (float *)((char *)v55 + v39);
                  unint64_t v54 = (float *)((char *)v54 + v34);
                  BOOL v53 = (__int16 *)((char *)v53 + v26);
                  --v52;
                }
                while (v52);
              }
              ++v48;
              uint64_t v51 = (float *)((char *)v51 + v38);
              uint64_t v50 = (float *)((char *)v50 + v31);
              uint64_t v49 = (__int16 *)((char *)v49 + v20);
            }
            while (v48 != v13);
          }
          ++v44;
          uint64_t v47 = (float *)((char *)v47 + v37);
          uint64_t v46 = (float *)((char *)v46 + v32);
          uint64_t v45 = (__int16 *)((char *)v45 + result);
        }
        while (v44 != v17);
      }
      ++v40;
      uint64_t v43 = (float *)((char *)v43 + v36);
      uint64_t v42 = (float *)((char *)v42 + v62);
      uint64_t v41 = (__int16 *)((char *)v41 + v63);
    }
    while (v40 != v64);
  }
  return result;
}

uint64_t **mlir::mps::arithmeticBinaryTileBaseKernel<complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)15>(uint64_t **result, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **result;
  uint64_t v5 = (*result)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v69 = 1;
    char v17 = 1;
LABEL_7:
    uint64_t v18 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v69 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v17 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v17 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v66 = v18;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v19 = 0;
    uint64_t v64 = 0;
    uint64_t v68 = 0;
    goto LABEL_37;
  }
  uint64_t v20 = *(void *)(v4 + 16);
  uint64_t v21 = v20 - 4;
  if (v20 >= 4)
  {
    if (v21 > (int)v20 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v21) == 1) {
      uint64_t v64 = 0;
    }
    else {
      uint64_t v64 = *(void *)(*(void *)(v4 + 64) + 8 * v21);
    }
    uint64_t v22 = v20 - 3;
    goto LABEL_26;
  }
  if (v20 == 3)
  {
    uint64_t v22 = 0;
    uint64_t v64 = 0;
LABEL_26:
    if (v22 > (int)v20 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
      uint64_t v68 = 0;
    }
    else {
      uint64_t v68 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
    }
    uint64_t v25 = v20 - 2;
    goto LABEL_31;
  }
  if (v20 < 2)
  {
    uint64_t v23 = 0;
    uint64_t v19 = 0;
    uint64_t v64 = 0;
    uint64_t v68 = 0;
    uint64_t v24 = 0;
    if (v20 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v25 = 0;
  uint64_t v68 = 0;
  uint64_t v64 = 0;
LABEL_31:
  if (v25 > (int)v20 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v25) == 1) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
  }
  uint64_t v23 = v20 - 1;
LABEL_36:
  if (v23 > (int)v20 - 1)
  {
LABEL_37:
    uint64_t v24 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v29 = 0;
    uint64_t v63 = 0;
    uint64_t v30 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v23) != 1)
  {
    uint64_t v24 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v24 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v26 = *(void *)(v5 + 16);
  uint64_t v27 = v26 - 4;
  if (v26 >= 4)
  {
    if (v27 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v27) == 1) {
      uint64_t v63 = 0;
    }
    else {
      uint64_t v63 = *(void *)(*(void *)(v5 + 64) + 8 * v27);
    }
    uint64_t v28 = v26 - 3;
    goto LABEL_56;
  }
  if (v26 == 3)
  {
    uint64_t v28 = 0;
    uint64_t v63 = 0;
LABEL_56:
    if (v28 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v30 = 0;
    }
    else {
      uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v33 = v26 - 2;
    goto LABEL_61;
  }
  if (v26 >= 2)
  {
    uint64_t v33 = 0;
    uint64_t v30 = 0;
    uint64_t v63 = 0;
LABEL_61:
    if (v33 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v33) == 1) {
      uint64_t v29 = 0;
    }
    else {
      uint64_t v29 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
    }
    uint64_t v31 = v26 - 1;
    goto LABEL_66;
  }
  uint64_t v31 = 0;
  uint64_t v29 = 0;
  uint64_t v63 = 0;
  uint64_t v30 = 0;
  uint64_t v32 = 0;
  if (v26 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v31 <= (int)v26 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v31) != 1)
    {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v31);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v32 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v35 = 0;
    uint64_t v65 = 0;
    uint64_t v34 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v32 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v65 = 0;
    if (v17) {
      goto LABEL_103;
    }
  }
  else
  {
    uint64_t v65 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v17) {
      goto LABEL_103;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_103:
    uint64_t v34 = 0;
    if (v14) {
      goto LABEL_106;
    }
    goto LABEL_104;
  }
  uint64_t v34 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_106;
  }
LABEL_104:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v35 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_107;
    }
LABEL_80:
    uint64_t v36 = 0;
    goto LABEL_81;
  }
LABEL_106:
  uint64_t v35 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_107:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v18 >= 1)
  {
    uint64_t v37 = 0;
    uint64_t v38 = (float *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v39 = (__int16 *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v40 = (unint64_t *)(**a4 + *(void *)(v6 + 40));
    do
    {
      uint64_t v67 = v37;
      if (v69 >= 1)
      {
        uint64_t v41 = 0;
        uint64_t v42 = v38;
        uint64_t v43 = v39;
        uint64_t v44 = v40;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v45 = 0;
            uint64_t v46 = v42;
            uint64_t v47 = v43;
            uint64_t v48 = v44;
            do
            {
              uint64_t v49 = v10;
              uint64_t v50 = v46;
              uint64_t v51 = v47;
              uint64_t v52 = v48;
              if (v10 >= 1)
              {
                do
                {
                  uint64_t result = (uint64_t **)(*(unsigned int *)v50 | ((unint64_t)*((unsigned int *)v50 + 1) << 32));
                  _H2 = *v51;
                  __asm { FCVT            S2, H2 }
                  _H3 = v51[1];
                  __asm { FCVT            S3, H3 }
                  BOOL v61 = v50[1] < _S3;
                  if (*v50 != _S2) {
                    BOOL v61 = *v50 < _S2;
                  }
                  if (v61) {
                    unint64_t v62 = *(unsigned int *)v50 | ((unint64_t)*((unsigned int *)v50 + 1) << 32);
                  }
                  else {
                    unint64_t v62 = LODWORD(_S2) | ((unint64_t)LODWORD(_S3) << 32);
                  }
                  unint64_t *v52 = v62;
                  uint64_t v52 = (unint64_t *)((char *)v52 + v36);
                  uint64_t v51 = (__int16 *)((char *)v51 + v32);
                  uint64_t v50 = (float *)((char *)v50 + v24);
                  --v49;
                }
                while (v49);
              }
              ++v45;
              uint64_t v48 = (unint64_t *)((char *)v48 + v35);
              uint64_t v47 = (__int16 *)((char *)v47 + v29);
              uint64_t v46 = (float *)((char *)v46 + v19);
            }
            while (v45 != v13);
          }
          ++v41;
          uint64_t v44 = (unint64_t *)((char *)v44 + v34);
          uint64_t v43 = (__int16 *)((char *)v43 + v30);
          uint64_t v42 = (float *)((char *)v42 + v68);
        }
        while (v41 != v69);
      }
      ++v37;
      uint64_t v40 = (unint64_t *)((char *)v40 + v65);
      uint64_t v39 = (__int16 *)((char *)v39 + v63);
      uint64_t v38 = (float *)((char *)v38 + v64);
    }
    while (v67 + 1 != v66);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<float,half,float,(mlir::mps::arithmeticOp)15>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v17 = 1;
    char v18 = 1;
LABEL_7:
    uint64_t v19 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v17 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v18 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v18 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v19 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v65 = v19;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v20 = 0;
    uint64_t v64 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v22 = *(void *)(v4 + 16);
  uint64_t v23 = v22 - 4;
  if (v22 >= 4)
  {
    if (v23 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t v64 = 0;
    }
    else {
      uint64_t v64 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v24 = v22 - 3;
    goto LABEL_26;
  }
  if (v22 == 3)
  {
    uint64_t v24 = 0;
    uint64_t v64 = 0;
LABEL_26:
    if (v24 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    }
    uint64_t v27 = v22 - 2;
    goto LABEL_31;
  }
  if (v22 < 2)
  {
    uint64_t v25 = 0;
    uint64_t v20 = 0;
    uint64_t v64 = 0;
    uint64_t result = 0;
    uint64_t v26 = 0;
    if (v22 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v27 = 0;
  uint64_t result = 0;
  uint64_t v64 = 0;
LABEL_31:
  if (v27 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v27) == 1) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = *(void *)(*(void *)(v4 + 64) + 8 * v27);
  }
  uint64_t v25 = v22 - 1;
LABEL_36:
  if (v25 > (int)v22 - 1)
  {
LABEL_37:
    uint64_t v26 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v31 = 0;
    uint64_t v63 = 0;
    uint64_t v32 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v25) != 1)
  {
    uint64_t v26 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v26 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v28 = *(void *)(v5 + 16);
  uint64_t v29 = v28 - 4;
  if (v28 >= 4)
  {
    if (v29 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v63 = 0;
    }
    else {
      uint64_t v63 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v30 = v28 - 3;
    goto LABEL_56;
  }
  if (v28 == 3)
  {
    uint64_t v30 = 0;
    uint64_t v63 = 0;
LABEL_56:
    if (v30 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v30) == 1) {
      uint64_t v32 = 0;
    }
    else {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v30);
    }
    uint64_t v35 = v28 - 2;
    goto LABEL_61;
  }
  if (v28 >= 2)
  {
    uint64_t v35 = 0;
    uint64_t v32 = 0;
    uint64_t v63 = 0;
LABEL_61:
    if (v35 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v35) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v35);
    }
    uint64_t v33 = v28 - 1;
    goto LABEL_66;
  }
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v63 = 0;
  uint64_t v32 = 0;
  uint64_t v34 = 0;
  if (v28 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v33 <= (int)v28 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v33) != 1)
    {
      uint64_t v34 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v34 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v38 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v34 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v36 = 0;
    if (v18) {
      goto LABEL_100;
    }
  }
  else
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v18) {
      goto LABEL_100;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_100:
    uint64_t v37 = 0;
    if (v14) {
      goto LABEL_103;
    }
    goto LABEL_101;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_103;
  }
LABEL_101:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v38 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_104;
    }
LABEL_80:
    uint64_t v39 = 0;
    goto LABEL_81;
  }
LABEL_103:
  uint64_t v38 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_104:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v39 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v65 >= 1)
  {
    uint64_t v40 = 0;
    uint64_t v41 = (float *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v42 = (__int16 *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v43 = (float *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v17 >= 1)
      {
        uint64_t v44 = 0;
        uint64_t v45 = v41;
        uint64_t v46 = v42;
        uint64_t v47 = v43;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v48 = 0;
            uint64_t v49 = v45;
            uint64_t v50 = v46;
            uint64_t v51 = v47;
            do
            {
              uint64_t v52 = v10;
              BOOL v53 = v49;
              unint64_t v54 = v50;
              uint64_t v55 = v51;
              if (v10 >= 1)
              {
                do
                {
                  float v56 = *v53;
                  _H1 = *v54;
                  __asm { FCVT            S1, H1 }
                  if (*v53 > _S1) {
                    float v56 = _S1;
                  }
                  float *v55 = v56;
                  uint64_t v55 = (float *)((char *)v55 + v39);
                  unint64_t v54 = (__int16 *)((char *)v54 + v34);
                  BOOL v53 = (float *)((char *)v53 + v26);
                  --v52;
                }
                while (v52);
              }
              ++v48;
              uint64_t v51 = (float *)((char *)v51 + v38);
              uint64_t v50 = (__int16 *)((char *)v50 + v31);
              uint64_t v49 = (float *)((char *)v49 + v20);
            }
            while (v48 != v13);
          }
          ++v44;
          uint64_t v47 = (float *)((char *)v47 + v37);
          uint64_t v46 = (__int16 *)((char *)v46 + v32);
          uint64_t v45 = (float *)((char *)v45 + result);
        }
        while (v44 != v17);
      }
      ++v40;
      uint64_t v43 = (float *)((char *)v43 + v36);
      uint64_t v42 = (__int16 *)((char *)v42 + v63);
      uint64_t v41 = (float *)((char *)v41 + v64);
    }
    while (v40 != v65);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<__emulated_bf16,float,float,(mlir::mps::arithmeticOp)15>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v17 = 1;
    char v18 = 1;
LABEL_7:
    uint64_t v19 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v17 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v18 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v18 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v19 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v59 = v19;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v20 = 0;
    uint64_t v57 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v22 = *(void *)(v4 + 16);
  uint64_t v23 = v22 - 4;
  if (v22 >= 4)
  {
    if (v23 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t v57 = 0;
    }
    else {
      uint64_t v57 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v24 = v22 - 3;
    goto LABEL_26;
  }
  if (v22 == 3)
  {
    uint64_t v24 = 0;
    uint64_t v57 = 0;
LABEL_26:
    if (v24 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    }
    uint64_t v27 = v22 - 2;
    goto LABEL_31;
  }
  if (v22 < 2)
  {
    uint64_t v25 = 0;
    uint64_t v20 = 0;
    uint64_t v57 = 0;
    uint64_t result = 0;
    uint64_t v26 = 0;
    if (v22 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v27 = 0;
  uint64_t result = 0;
  uint64_t v57 = 0;
LABEL_31:
  if (v27 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v27) == 1) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = *(void *)(*(void *)(v4 + 64) + 8 * v27);
  }
  uint64_t v25 = v22 - 1;
LABEL_36:
  if (v25 > (int)v22 - 1)
  {
LABEL_37:
    uint64_t v26 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v31 = 0;
    uint64_t v56 = 0;
    uint64_t v32 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v25) != 1)
  {
    uint64_t v26 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v26 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v28 = *(void *)(v5 + 16);
  uint64_t v29 = v28 - 4;
  if (v28 >= 4)
  {
    if (v29 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v56 = 0;
    }
    else {
      uint64_t v56 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v30 = v28 - 3;
    goto LABEL_56;
  }
  if (v28 == 3)
  {
    uint64_t v30 = 0;
    uint64_t v56 = 0;
LABEL_56:
    if (v30 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v30) == 1) {
      uint64_t v32 = 0;
    }
    else {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v30);
    }
    uint64_t v35 = v28 - 2;
    goto LABEL_61;
  }
  if (v28 >= 2)
  {
    uint64_t v35 = 0;
    uint64_t v32 = 0;
    uint64_t v56 = 0;
LABEL_61:
    if (v35 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v35) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v35);
    }
    uint64_t v33 = v28 - 1;
    goto LABEL_66;
  }
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v56 = 0;
  uint64_t v32 = 0;
  uint64_t v34 = 0;
  if (v28 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v33 <= (int)v28 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v33) != 1)
    {
      uint64_t v34 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v34 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v37 = 0;
    uint64_t v58 = 0;
    uint64_t v36 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v34 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v58 = 0;
    if (v18) {
      goto LABEL_100;
    }
  }
  else
  {
    uint64_t v58 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v18) {
      goto LABEL_100;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_100:
    uint64_t v36 = 0;
    if (v14) {
      goto LABEL_103;
    }
    goto LABEL_101;
  }
  uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_103;
  }
LABEL_101:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_104;
    }
LABEL_80:
    uint64_t v38 = 0;
    goto LABEL_81;
  }
LABEL_103:
  uint64_t v37 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_104:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v38 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v59 >= 1)
  {
    uint64_t v39 = 0;
    uint64_t v40 = (unsigned __int16 *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v41 = (float *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v42 = (float *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v17 >= 1)
      {
        uint64_t v43 = 0;
        uint64_t v44 = v40;
        uint64_t v45 = v41;
        uint64_t v46 = v42;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v47 = 0;
            uint64_t v48 = v44;
            uint64_t v49 = v45;
            uint64_t v50 = v46;
            do
            {
              uint64_t v51 = v10;
              uint64_t v52 = v48;
              BOOL v53 = v49;
              unint64_t v54 = v50;
              if (v10 >= 1)
              {
                do
                {
                  LODWORD(v55) = *v52 << 16;
                  if (*v53 < v55) {
                    float v55 = *v53;
                  }
                  *unint64_t v54 = v55;
                  unint64_t v54 = (float *)((char *)v54 + v38);
                  BOOL v53 = (float *)((char *)v53 + v34);
                  uint64_t v52 = (unsigned __int16 *)((char *)v52 + v26);
                  --v51;
                }
                while (v51);
              }
              ++v47;
              uint64_t v50 = (float *)((char *)v50 + v37);
              uint64_t v49 = (float *)((char *)v49 + v31);
              uint64_t v48 = (unsigned __int16 *)((char *)v48 + v20);
            }
            while (v47 != v13);
          }
          ++v43;
          uint64_t v46 = (float *)((char *)v46 + v36);
          uint64_t v45 = (float *)((char *)v45 + v32);
          uint64_t v44 = (unsigned __int16 *)((char *)v44 + result);
        }
        while (v43 != v17);
      }
      ++v39;
      uint64_t v42 = (float *)((char *)v42 + v58);
      uint64_t v41 = (float *)((char *)v41 + v56);
      uint64_t v40 = (unsigned __int16 *)((char *)v40 + v57);
    }
    while (v39 != v59);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<float,__emulated_bf16,float,(mlir::mps::arithmeticOp)15>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v17 = 1;
    char v18 = 1;
LABEL_7:
    uint64_t v19 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v17 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v18 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v18 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v19 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v59 = v19;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v20 = 0;
    uint64_t v57 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v22 = *(void *)(v4 + 16);
  uint64_t v23 = v22 - 4;
  if (v22 >= 4)
  {
    if (v23 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t v57 = 0;
    }
    else {
      uint64_t v57 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v24 = v22 - 3;
    goto LABEL_26;
  }
  if (v22 == 3)
  {
    uint64_t v24 = 0;
    uint64_t v57 = 0;
LABEL_26:
    if (v24 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    }
    uint64_t v27 = v22 - 2;
    goto LABEL_31;
  }
  if (v22 < 2)
  {
    uint64_t v25 = 0;
    uint64_t v20 = 0;
    uint64_t v57 = 0;
    uint64_t result = 0;
    uint64_t v26 = 0;
    if (v22 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v27 = 0;
  uint64_t result = 0;
  uint64_t v57 = 0;
LABEL_31:
  if (v27 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v27) == 1) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = *(void *)(*(void *)(v4 + 64) + 8 * v27);
  }
  uint64_t v25 = v22 - 1;
LABEL_36:
  if (v25 > (int)v22 - 1)
  {
LABEL_37:
    uint64_t v26 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v31 = 0;
    uint64_t v56 = 0;
    uint64_t v32 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v25) != 1)
  {
    uint64_t v26 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v26 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v28 = *(void *)(v5 + 16);
  uint64_t v29 = v28 - 4;
  if (v28 >= 4)
  {
    if (v29 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v56 = 0;
    }
    else {
      uint64_t v56 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v30 = v28 - 3;
    goto LABEL_56;
  }
  if (v28 == 3)
  {
    uint64_t v30 = 0;
    uint64_t v56 = 0;
LABEL_56:
    if (v30 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v30) == 1) {
      uint64_t v32 = 0;
    }
    else {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v30);
    }
    uint64_t v35 = v28 - 2;
    goto LABEL_61;
  }
  if (v28 >= 2)
  {
    uint64_t v35 = 0;
    uint64_t v32 = 0;
    uint64_t v56 = 0;
LABEL_61:
    if (v35 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v35) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v35);
    }
    uint64_t v33 = v28 - 1;
    goto LABEL_66;
  }
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v56 = 0;
  uint64_t v32 = 0;
  uint64_t v34 = 0;
  if (v28 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v33 <= (int)v28 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v33) != 1)
    {
      uint64_t v34 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v34 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v37 = 0;
    uint64_t v58 = 0;
    uint64_t v36 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v34 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v58 = 0;
    if (v18) {
      goto LABEL_100;
    }
  }
  else
  {
    uint64_t v58 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v18) {
      goto LABEL_100;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_100:
    uint64_t v36 = 0;
    if (v14) {
      goto LABEL_103;
    }
    goto LABEL_101;
  }
  uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_103;
  }
LABEL_101:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_104;
    }
LABEL_80:
    uint64_t v38 = 0;
    goto LABEL_81;
  }
LABEL_103:
  uint64_t v37 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_104:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v38 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v59 >= 1)
  {
    uint64_t v39 = 0;
    uint64_t v40 = (int *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v41 = (unsigned __int16 *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v42 = (int *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v17 >= 1)
      {
        uint64_t v43 = 0;
        uint64_t v44 = v40;
        uint64_t v45 = v41;
        uint64_t v46 = v42;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v47 = 0;
            uint64_t v48 = v44;
            uint64_t v49 = v45;
            uint64_t v50 = v46;
            do
            {
              uint64_t v51 = v10;
              uint64_t v52 = v48;
              BOOL v53 = v49;
              unint64_t v54 = v50;
              if (v10 >= 1)
              {
                do
                {
                  int v55 = *v52;
                  if (*(float *)v52 > COERCE_FLOAT(*v53 << 16)) {
                    int v55 = *v53 << 16;
                  }
                  *unint64_t v54 = v55;
                  unint64_t v54 = (int *)((char *)v54 + v38);
                  BOOL v53 = (unsigned __int16 *)((char *)v53 + v34);
                  uint64_t v52 = (int *)((char *)v52 + v26);
                  --v51;
                }
                while (v51);
              }
              ++v47;
              uint64_t v50 = (int *)((char *)v50 + v37);
              uint64_t v49 = (unsigned __int16 *)((char *)v49 + v31);
              uint64_t v48 = (int *)((char *)v48 + v20);
            }
            while (v47 != v13);
          }
          ++v43;
          uint64_t v46 = (int *)((char *)v46 + v36);
          uint64_t v45 = (unsigned __int16 *)((char *)v45 + v32);
          uint64_t v44 = (int *)((char *)v44 + result);
        }
        while (v43 != v17);
      }
      ++v39;
      uint64_t v42 = (int *)((char *)v42 + v58);
      uint64_t v41 = (unsigned __int16 *)((char *)v41 + v56);
      uint64_t v40 = (int *)((char *)v40 + v57);
    }
    while (v39 != v59);
  }
  return result;
}

uint64_t **mlir::mps::arithmeticBinaryTileBaseKernel<complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<half,(void *)0>,(mlir::mps::arithmeticOp)15>(uint64_t **result, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **result;
  uint64_t v5 = (*result)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v61 = 1;
    char v17 = 1;
LABEL_7:
    uint64_t v18 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v61 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v17 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v17 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v58 = v18;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v19 = 0;
    uint64_t v56 = 0;
    uint64_t v60 = 0;
    goto LABEL_37;
  }
  uint64_t v20 = *(void *)(v4 + 16);
  uint64_t v21 = v20 - 4;
  if (v20 >= 4)
  {
    if (v21 > (int)v20 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v21) == 1) {
      uint64_t v56 = 0;
    }
    else {
      uint64_t v56 = *(void *)(*(void *)(v4 + 64) + 8 * v21);
    }
    uint64_t v22 = v20 - 3;
    goto LABEL_26;
  }
  if (v20 == 3)
  {
    uint64_t v22 = 0;
    uint64_t v56 = 0;
LABEL_26:
    if (v22 > (int)v20 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
      uint64_t v60 = 0;
    }
    else {
      uint64_t v60 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
    }
    uint64_t v25 = v20 - 2;
    goto LABEL_31;
  }
  if (v20 < 2)
  {
    uint64_t v23 = 0;
    uint64_t v19 = 0;
    uint64_t v56 = 0;
    uint64_t v60 = 0;
    uint64_t v24 = 0;
    if (v20 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v25 = 0;
  uint64_t v60 = 0;
  uint64_t v56 = 0;
LABEL_31:
  if (v25 > (int)v20 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v25) == 1) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
  }
  uint64_t v23 = v20 - 1;
LABEL_36:
  if (v23 > (int)v20 - 1)
  {
LABEL_37:
    uint64_t v24 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v29 = 0;
    uint64_t v55 = 0;
    uint64_t v30 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v23) != 1)
  {
    uint64_t v24 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v24 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v26 = *(void *)(v5 + 16);
  uint64_t v27 = v26 - 4;
  if (v26 >= 4)
  {
    if (v27 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v27) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v5 + 64) + 8 * v27);
    }
    uint64_t v28 = v26 - 3;
    goto LABEL_56;
  }
  if (v26 == 3)
  {
    uint64_t v28 = 0;
    uint64_t v55 = 0;
LABEL_56:
    if (v28 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v30 = 0;
    }
    else {
      uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v33 = v26 - 2;
    goto LABEL_61;
  }
  if (v26 >= 2)
  {
    uint64_t v33 = 0;
    uint64_t v30 = 0;
    uint64_t v55 = 0;
LABEL_61:
    if (v33 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v33) == 1) {
      uint64_t v29 = 0;
    }
    else {
      uint64_t v29 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
    }
    uint64_t v31 = v26 - 1;
    goto LABEL_66;
  }
  uint64_t v31 = 0;
  uint64_t v29 = 0;
  uint64_t v55 = 0;
  uint64_t v30 = 0;
  uint64_t v32 = 0;
  if (v26 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v31 <= (int)v26 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v31) != 1)
    {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v31);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v32 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v35 = 0;
    uint64_t v57 = 0;
    uint64_t v34 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v32 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v57 = 0;
    if (v17) {
      goto LABEL_103;
    }
  }
  else
  {
    uint64_t v57 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v17) {
      goto LABEL_103;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_103:
    uint64_t v34 = 0;
    if (v14) {
      goto LABEL_106;
    }
    goto LABEL_104;
  }
  uint64_t v34 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_106;
  }
LABEL_104:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v35 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_107;
    }
LABEL_80:
    uint64_t v36 = 0;
    goto LABEL_81;
  }
LABEL_106:
  uint64_t v35 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_107:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v18 >= 1)
  {
    uint64_t v37 = 0;
    uint64_t v38 = (short float *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v39 = (short float *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v40 = (int *)(**a4 + *(void *)(v6 + 40));
    do
    {
      uint64_t v59 = v37;
      if (v61 >= 1)
      {
        uint64_t v41 = 0;
        uint64_t v42 = v38;
        uint64_t v43 = v39;
        uint64_t v44 = v40;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v45 = 0;
            uint64_t v46 = v42;
            uint64_t v47 = v43;
            uint64_t v48 = v44;
            do
            {
              uint64_t v49 = v10;
              uint64_t v50 = v46;
              uint64_t v51 = v47;
              uint64_t v52 = v48;
              if (v10 >= 1)
              {
                do
                {
                  uint64_t result = (uint64_t **)(*(unsigned __int16 *)v50 | (*((unsigned __int16 *)v50 + 1) << 16));
                  BOOL v53 = v50[1] < v51[1];
                  if (*v50 != *v51) {
                    BOOL v53 = *v50 < *v51;
                  }
                  if (v53) {
                    int v54 = *(unsigned __int16 *)v50 | (*((unsigned __int16 *)v50 + 1) << 16);
                  }
                  else {
                    int v54 = *(unsigned __int16 *)v51 | (*((unsigned __int16 *)v51 + 1) << 16);
                  }
                  int *v52 = v54;
                  uint64_t v52 = (int *)((char *)v52 + v36);
                  uint64_t v51 = (short float *)((char *)v51 + v32);
                  uint64_t v50 = (short float *)((char *)v50 + v24);
                  --v49;
                }
                while (v49);
              }
              ++v45;
              uint64_t v48 = (int *)((char *)v48 + v35);
              uint64_t v47 = (short float *)((char *)v47 + v29);
              uint64_t v46 = (short float *)((char *)v46 + v19);
            }
            while (v45 != v13);
          }
          ++v41;
          uint64_t v44 = (int *)((char *)v44 + v34);
          uint64_t v43 = (short float *)((char *)v43 + v30);
          uint64_t v42 = (short float *)((char *)v42 + v60);
        }
        while (v41 != v61);
      }
      ++v37;
      uint64_t v40 = (int *)((char *)v40 + v57);
      uint64_t v39 = (short float *)((char *)v39 + v55);
      uint64_t v38 = (short float *)((char *)v38 + v56);
    }
    while (v59 + 1 != v58);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<half,half,half,(mlir::mps::arithmeticOp)15>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v17 = 1;
    char v18 = 1;
LABEL_7:
    uint64_t v19 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v17 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v18 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v18 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v19 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v59 = v19;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v20 = 0;
    uint64_t v58 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v22 = *(void *)(v4 + 16);
  uint64_t v23 = v22 - 4;
  if (v22 >= 4)
  {
    if (v23 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t v58 = 0;
    }
    else {
      uint64_t v58 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v24 = v22 - 3;
    goto LABEL_26;
  }
  if (v22 == 3)
  {
    uint64_t v24 = 0;
    uint64_t v58 = 0;
LABEL_26:
    if (v24 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    }
    uint64_t v27 = v22 - 2;
    goto LABEL_31;
  }
  if (v22 < 2)
  {
    uint64_t v25 = 0;
    uint64_t v20 = 0;
    uint64_t v58 = 0;
    uint64_t result = 0;
    uint64_t v26 = 0;
    if (v22 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v27 = 0;
  uint64_t result = 0;
  uint64_t v58 = 0;
LABEL_31:
  if (v27 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v27) == 1) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = *(void *)(*(void *)(v4 + 64) + 8 * v27);
  }
  uint64_t v25 = v22 - 1;
LABEL_36:
  if (v25 > (int)v22 - 1)
  {
LABEL_37:
    uint64_t v26 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v31 = 0;
    uint64_t v57 = 0;
    uint64_t v32 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v25) != 1)
  {
    uint64_t v26 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v26 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v28 = *(void *)(v5 + 16);
  uint64_t v29 = v28 - 4;
  if (v28 >= 4)
  {
    if (v29 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v57 = 0;
    }
    else {
      uint64_t v57 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v30 = v28 - 3;
    goto LABEL_56;
  }
  if (v28 == 3)
  {
    uint64_t v30 = 0;
    uint64_t v57 = 0;
LABEL_56:
    if (v30 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v30) == 1) {
      uint64_t v32 = 0;
    }
    else {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v30);
    }
    uint64_t v35 = v28 - 2;
    goto LABEL_61;
  }
  if (v28 >= 2)
  {
    uint64_t v35 = 0;
    uint64_t v32 = 0;
    uint64_t v57 = 0;
LABEL_61:
    if (v35 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v35) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v35);
    }
    uint64_t v33 = v28 - 1;
    goto LABEL_66;
  }
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v57 = 0;
  uint64_t v32 = 0;
  uint64_t v34 = 0;
  if (v28 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v33 <= (int)v28 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v33) != 1)
    {
      uint64_t v34 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v34 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v38 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v34 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v36 = 0;
    if (v18) {
      goto LABEL_100;
    }
  }
  else
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v18) {
      goto LABEL_100;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_100:
    uint64_t v37 = 0;
    if (v14) {
      goto LABEL_103;
    }
    goto LABEL_101;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_103;
  }
LABEL_101:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v38 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_104;
    }
LABEL_80:
    uint64_t v39 = 0;
    goto LABEL_81;
  }
LABEL_103:
  uint64_t v38 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_104:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v39 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v59 >= 1)
  {
    uint64_t v40 = 0;
    uint64_t v41 = (short float *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v42 = (short float *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v43 = (short float *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v17 >= 1)
      {
        uint64_t v44 = 0;
        uint64_t v45 = v41;
        uint64_t v46 = v42;
        uint64_t v47 = v43;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v48 = 0;
            uint64_t v49 = v45;
            uint64_t v50 = v46;
            uint64_t v51 = v47;
            do
            {
              uint64_t v52 = v10;
              BOOL v53 = v49;
              int v54 = v50;
              uint64_t v55 = v51;
              if (v10 >= 1)
              {
                do
                {
                  short float v56 = *v53;
                  if (*v54 < *v53) {
                    short float v56 = *v54;
                  }
                  short float *v55 = v56;
                  uint64_t v55 = (short float *)((char *)v55 + v39);
                  int v54 = (short float *)((char *)v54 + v34);
                  BOOL v53 = (short float *)((char *)v53 + v26);
                  --v52;
                }
                while (v52);
              }
              ++v48;
              uint64_t v51 = (short float *)((char *)v51 + v38);
              uint64_t v50 = (short float *)((char *)v50 + v31);
              uint64_t v49 = (short float *)((char *)v49 + v20);
            }
            while (v48 != v13);
          }
          ++v44;
          uint64_t v47 = (short float *)((char *)v47 + v37);
          uint64_t v46 = (short float *)((char *)v46 + v32);
          uint64_t v45 = (short float *)((char *)v45 + result);
        }
        while (v44 != v17);
      }
      ++v40;
      uint64_t v43 = (short float *)((char *)v43 + v36);
      uint64_t v42 = (short float *)((char *)v42 + v57);
      uint64_t v41 = (short float *)((char *)v41 + v58);
    }
    while (v40 != v59);
  }
  return result;
}

unint64_t mlir::mps::arithmeticBinaryTileBaseKernel<__emulated_bf16,__emulated_bf16,__emulated_bf16,(mlir::mps::arithmeticOp)15>(unint64_t result, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **(void **)result;
  uint64_t v5 = *(void *)(*(void *)result + 8);
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v59 = 1;
    char v17 = 1;
LABEL_7:
    uint64_t v18 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v59 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v17 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v17 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v57 = v18;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v19 = 0;
    uint64_t v55 = 0;
    uint64_t v58 = 0;
    goto LABEL_37;
  }
  uint64_t v20 = *(void *)(v4 + 16);
  uint64_t v21 = v20 - 4;
  if (v20 >= 4)
  {
    if (v21 > (int)v20 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v21) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v4 + 64) + 8 * v21);
    }
    uint64_t v22 = v20 - 3;
    goto LABEL_26;
  }
  if (v20 == 3)
  {
    uint64_t v22 = 0;
    uint64_t v55 = 0;
LABEL_26:
    if (v22 > (int)v20 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
      uint64_t v58 = 0;
    }
    else {
      uint64_t v58 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
    }
    uint64_t v25 = v20 - 2;
    goto LABEL_31;
  }
  if (v20 < 2)
  {
    uint64_t v23 = 0;
    uint64_t v19 = 0;
    uint64_t v55 = 0;
    uint64_t v58 = 0;
    uint64_t v24 = 0;
    if (v20 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v25 = 0;
  uint64_t v58 = 0;
  uint64_t v55 = 0;
LABEL_31:
  if (v25 > (int)v20 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v25) == 1) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
  }
  uint64_t v23 = v20 - 1;
LABEL_36:
  if (v23 > (int)v20 - 1)
  {
LABEL_37:
    uint64_t v24 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v29 = 0;
    uint64_t v54 = 0;
    uint64_t v30 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v23) != 1)
  {
    uint64_t v24 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v24 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v26 = *(void *)(v5 + 16);
  uint64_t v27 = v26 - 4;
  if (v26 >= 4)
  {
    if (v27 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v27) == 1) {
      uint64_t v54 = 0;
    }
    else {
      uint64_t v54 = *(void *)(*(void *)(v5 + 64) + 8 * v27);
    }
    uint64_t v28 = v26 - 3;
    goto LABEL_56;
  }
  if (v26 == 3)
  {
    uint64_t v28 = 0;
    uint64_t v54 = 0;
LABEL_56:
    if (v28 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v30 = 0;
    }
    else {
      uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v33 = v26 - 2;
    goto LABEL_61;
  }
  if (v26 >= 2)
  {
    uint64_t v33 = 0;
    uint64_t v30 = 0;
    uint64_t v54 = 0;
LABEL_61:
    if (v33 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v33) == 1) {
      uint64_t v29 = 0;
    }
    else {
      uint64_t v29 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
    }
    uint64_t v31 = v26 - 1;
    goto LABEL_66;
  }
  uint64_t v31 = 0;
  uint64_t v29 = 0;
  uint64_t v54 = 0;
  uint64_t v30 = 0;
  uint64_t v32 = 0;
  if (v26 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v31 <= (int)v26 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v31) != 1)
    {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v31);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v32 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v35 = 0;
    uint64_t v56 = 0;
    uint64_t v34 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v32 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v56 = 0;
    if (v17) {
      goto LABEL_100;
    }
  }
  else
  {
    uint64_t v56 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v17) {
      goto LABEL_100;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_100:
    uint64_t v34 = 0;
    if (v14) {
      goto LABEL_103;
    }
    goto LABEL_101;
  }
  uint64_t v34 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_103;
  }
LABEL_101:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v35 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_104;
    }
LABEL_80:
    uint64_t v36 = 0;
    goto LABEL_81;
  }
LABEL_103:
  uint64_t v35 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_104:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v18 >= 1)
  {
    uint64_t v37 = 0;
    uint64_t v38 = (unsigned __int16 *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v39 = (_WORD *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v40 = (_WORD *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v59 >= 1)
      {
        uint64_t v41 = 0;
        uint64_t v42 = v38;
        uint64_t v43 = v39;
        uint64_t v44 = v40;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v45 = 0;
            uint64_t v46 = v42;
            uint64_t v47 = v43;
            uint64_t v48 = v44;
            do
            {
              uint64_t v49 = v10;
              uint64_t v50 = v46;
              uint64_t v51 = v47;
              uint64_t v52 = v48;
              if (v10 >= 1)
              {
                do
                {
                  int v53 = *v50;
                  uint64_t result = (v53 << 16);
                  if (COERCE_FLOAT((unsigned __int16)*v51 << 16) < COERCE_FLOAT(v53 << 16)) {
                    LOWORD(v53) = *v51;
                  }
                  _WORD *v52 = v53;
                  uint64_t v52 = (_WORD *)((char *)v52 + v36);
                  uint64_t v51 = (_WORD *)((char *)v51 + v32);
                  uint64_t v50 = (unsigned __int16 *)((char *)v50 + v24);
                  --v49;
                }
                while (v49);
              }
              ++v45;
              uint64_t v48 = (_WORD *)((char *)v48 + v35);
              uint64_t v47 = (_WORD *)((char *)v47 + v29);
              uint64_t v46 = (unsigned __int16 *)((char *)v46 + v19);
            }
            while (v45 != v13);
          }
          ++v41;
          uint64_t v44 = (_WORD *)((char *)v44 + v34);
          uint64_t v43 = (_WORD *)((char *)v43 + v30);
          uint64_t v42 = (unsigned __int16 *)((char *)v42 + v58);
        }
        while (v41 != v59);
      }
      ++v37;
      uint64_t v40 = (_WORD *)((char *)v40 + v56);
      uint64_t v39 = (_WORD *)((char *)v39 + v54);
      uint64_t v38 = (unsigned __int16 *)((char *)v38 + v55);
    }
    while (v37 != v57);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<long long,long long,long long,(mlir::mps::arithmeticOp)15>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v59 = 1;
    char v17 = 1;
LABEL_7:
    uint64_t v18 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v59 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v17 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v17 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v58 = v18;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v19 = 0;
    uint64_t v56 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v21 = *(void *)(v4 + 16);
  uint64_t v22 = v21 - 4;
  if (v21 >= 4)
  {
    if (v22 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
      uint64_t v56 = 0;
    }
    else {
      uint64_t v56 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
    }
    uint64_t v23 = v21 - 3;
    goto LABEL_26;
  }
  if (v21 == 3)
  {
    uint64_t v23 = 0;
    uint64_t v56 = 0;
LABEL_26:
    if (v23 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v26 = v21 - 2;
    goto LABEL_31;
  }
  if (v21 < 2)
  {
    uint64_t v24 = 0;
    uint64_t v19 = 0;
    uint64_t v56 = 0;
    uint64_t result = 0;
    uint64_t v25 = 0;
    if (v21 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v26 = 0;
  uint64_t result = 0;
  uint64_t v56 = 0;
LABEL_31:
  if (v26 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v26) == 1) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = *(void *)(*(void *)(v4 + 64) + 8 * v26);
  }
  uint64_t v24 = v21 - 1;
LABEL_36:
  if (v24 > (int)v21 - 1)
  {
LABEL_37:
    uint64_t v25 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v30 = 0;
    uint64_t v55 = 0;
    uint64_t v31 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v24) != 1)
  {
    uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v25 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v27 = *(void *)(v5 + 16);
  uint64_t v28 = v27 - 4;
  if (v27 >= 4)
  {
    if (v28 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v29 = v27 - 3;
    goto LABEL_56;
  }
  if (v27 == 3)
  {
    uint64_t v29 = 0;
    uint64_t v55 = 0;
LABEL_56:
    if (v29 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v34 = v27 - 2;
    goto LABEL_61;
  }
  if (v27 >= 2)
  {
    uint64_t v34 = 0;
    uint64_t v31 = 0;
    uint64_t v55 = 0;
LABEL_61:
    if (v34 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v34) == 1) {
      uint64_t v30 = 0;
    }
    else {
      uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v34);
    }
    uint64_t v32 = v27 - 1;
    goto LABEL_66;
  }
  uint64_t v32 = 0;
  uint64_t v30 = 0;
  uint64_t v55 = 0;
  uint64_t v31 = 0;
  uint64_t v33 = 0;
  if (v27 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v32 <= (int)v27 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v32) != 1)
    {
      uint64_t v33 = *(void *)(*(void *)(v5 + 64) + 8 * v32);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v33 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v36 = 0;
    uint64_t v57 = 0;
    uint64_t v35 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v33 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v57 = 0;
    if (v17) {
      goto LABEL_100;
    }
  }
  else
  {
    uint64_t v57 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v17) {
      goto LABEL_100;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_100:
    uint64_t v35 = 0;
    if (v14) {
      goto LABEL_103;
    }
    goto LABEL_101;
  }
  uint64_t v35 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_103;
  }
LABEL_101:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_104;
    }
LABEL_80:
    uint64_t v37 = 0;
    goto LABEL_81;
  }
LABEL_103:
  uint64_t v36 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_104:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v18 >= 1)
  {
    uint64_t v38 = 0;
    uint64_t v39 = (uint64_t *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v40 = (uint64_t *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v41 = (void *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v59 >= 1)
      {
        uint64_t v42 = 0;
        uint64_t v43 = v39;
        uint64_t v44 = v40;
        uint64_t v45 = v41;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v46 = 0;
            uint64_t v47 = v43;
            uint64_t v48 = v44;
            uint64_t v49 = v45;
            do
            {
              uint64_t v50 = v10;
              uint64_t v51 = v47;
              uint64_t v52 = v48;
              int v53 = v49;
              if (v10 >= 1)
              {
                do
                {
                  uint64_t v54 = *v52;
                  if (*v52 >= *v51) {
                    uint64_t v54 = *v51;
                  }
                  void *v53 = v54;
                  int v53 = (void *)((char *)v53 + v37);
                  uint64_t v52 = (uint64_t *)((char *)v52 + v33);
                  uint64_t v51 = (uint64_t *)((char *)v51 + v25);
                  --v50;
                }
                while (v50);
              }
              ++v46;
              uint64_t v49 = (void *)((char *)v49 + v36);
              uint64_t v48 = (uint64_t *)((char *)v48 + v30);
              uint64_t v47 = (uint64_t *)((char *)v47 + v19);
            }
            while (v46 != v13);
          }
          ++v42;
          uint64_t v45 = (void *)((char *)v45 + v35);
          uint64_t v44 = (uint64_t *)((char *)v44 + v31);
          uint64_t v43 = (uint64_t *)((char *)v43 + result);
        }
        while (v42 != v59);
      }
      ++v38;
      uint64_t v41 = (void *)((char *)v41 + v57);
      uint64_t v40 = (uint64_t *)((char *)v40 + v55);
      uint64_t v39 = (uint64_t *)((char *)v39 + v56);
    }
    while (v38 != v58);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<int,int,int,(mlir::mps::arithmeticOp)15>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v59 = 1;
    char v17 = 1;
LABEL_7:
    uint64_t v18 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v59 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v17 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v17 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v58 = v18;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v19 = 0;
    uint64_t v56 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v21 = *(void *)(v4 + 16);
  uint64_t v22 = v21 - 4;
  if (v21 >= 4)
  {
    if (v22 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
      uint64_t v56 = 0;
    }
    else {
      uint64_t v56 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
    }
    uint64_t v23 = v21 - 3;
    goto LABEL_26;
  }
  if (v21 == 3)
  {
    uint64_t v23 = 0;
    uint64_t v56 = 0;
LABEL_26:
    if (v23 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v26 = v21 - 2;
    goto LABEL_31;
  }
  if (v21 < 2)
  {
    uint64_t v24 = 0;
    uint64_t v19 = 0;
    uint64_t v56 = 0;
    uint64_t result = 0;
    uint64_t v25 = 0;
    if (v21 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v26 = 0;
  uint64_t result = 0;
  uint64_t v56 = 0;
LABEL_31:
  if (v26 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v26) == 1) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = *(void *)(*(void *)(v4 + 64) + 8 * v26);
  }
  uint64_t v24 = v21 - 1;
LABEL_36:
  if (v24 > (int)v21 - 1)
  {
LABEL_37:
    uint64_t v25 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v30 = 0;
    uint64_t v55 = 0;
    uint64_t v31 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v24) != 1)
  {
    uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v25 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v27 = *(void *)(v5 + 16);
  uint64_t v28 = v27 - 4;
  if (v27 >= 4)
  {
    if (v28 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v29 = v27 - 3;
    goto LABEL_56;
  }
  if (v27 == 3)
  {
    uint64_t v29 = 0;
    uint64_t v55 = 0;
LABEL_56:
    if (v29 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v34 = v27 - 2;
    goto LABEL_61;
  }
  if (v27 >= 2)
  {
    uint64_t v34 = 0;
    uint64_t v31 = 0;
    uint64_t v55 = 0;
LABEL_61:
    if (v34 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v34) == 1) {
      uint64_t v30 = 0;
    }
    else {
      uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v34);
    }
    uint64_t v32 = v27 - 1;
    goto LABEL_66;
  }
  uint64_t v32 = 0;
  uint64_t v30 = 0;
  uint64_t v55 = 0;
  uint64_t v31 = 0;
  uint64_t v33 = 0;
  if (v27 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v32 <= (int)v27 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v32) != 1)
    {
      uint64_t v33 = *(void *)(*(void *)(v5 + 64) + 8 * v32);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v33 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v36 = 0;
    uint64_t v57 = 0;
    uint64_t v35 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v33 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v57 = 0;
    if (v17) {
      goto LABEL_100;
    }
  }
  else
  {
    uint64_t v57 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v17) {
      goto LABEL_100;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_100:
    uint64_t v35 = 0;
    if (v14) {
      goto LABEL_103;
    }
    goto LABEL_101;
  }
  uint64_t v35 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_103;
  }
LABEL_101:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_104;
    }
LABEL_80:
    uint64_t v37 = 0;
    goto LABEL_81;
  }
LABEL_103:
  uint64_t v36 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_104:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v18 >= 1)
  {
    uint64_t v38 = 0;
    uint64_t v39 = (int *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v40 = (int *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v41 = (_DWORD *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v59 >= 1)
      {
        uint64_t v42 = 0;
        uint64_t v43 = v39;
        uint64_t v44 = v40;
        uint64_t v45 = v41;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v46 = 0;
            uint64_t v47 = v43;
            uint64_t v48 = v44;
            uint64_t v49 = v45;
            do
            {
              uint64_t v50 = v10;
              uint64_t v51 = v47;
              uint64_t v52 = v48;
              int v53 = v49;
              if (v10 >= 1)
              {
                do
                {
                  int v54 = *v52;
                  if (*v52 >= *v51) {
                    int v54 = *v51;
                  }
                  _DWORD *v53 = v54;
                  int v53 = (_DWORD *)((char *)v53 + v37);
                  uint64_t v52 = (int *)((char *)v52 + v33);
                  uint64_t v51 = (int *)((char *)v51 + v25);
                  --v50;
                }
                while (v50);
              }
              ++v46;
              uint64_t v49 = (_DWORD *)((char *)v49 + v36);
              uint64_t v48 = (int *)((char *)v48 + v30);
              uint64_t v47 = (int *)((char *)v47 + v19);
            }
            while (v46 != v13);
          }
          ++v42;
          uint64_t v45 = (_DWORD *)((char *)v45 + v35);
          uint64_t v44 = (int *)((char *)v44 + v31);
          uint64_t v43 = (int *)((char *)v43 + result);
        }
        while (v42 != v59);
      }
      ++v38;
      uint64_t v41 = (_DWORD *)((char *)v41 + v57);
      uint64_t v40 = (int *)((char *)v40 + v55);
      uint64_t v39 = (int *)((char *)v39 + v56);
    }
    while (v38 != v58);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<short,short,short,(mlir::mps::arithmeticOp)15>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v59 = 1;
    char v17 = 1;
LABEL_7:
    uint64_t v18 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v59 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v17 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v17 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v58 = v18;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v19 = 0;
    uint64_t v56 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v21 = *(void *)(v4 + 16);
  uint64_t v22 = v21 - 4;
  if (v21 >= 4)
  {
    if (v22 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
      uint64_t v56 = 0;
    }
    else {
      uint64_t v56 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
    }
    uint64_t v23 = v21 - 3;
    goto LABEL_26;
  }
  if (v21 == 3)
  {
    uint64_t v23 = 0;
    uint64_t v56 = 0;
LABEL_26:
    if (v23 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v26 = v21 - 2;
    goto LABEL_31;
  }
  if (v21 < 2)
  {
    uint64_t v24 = 0;
    uint64_t v19 = 0;
    uint64_t v56 = 0;
    uint64_t result = 0;
    uint64_t v25 = 0;
    if (v21 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v26 = 0;
  uint64_t result = 0;
  uint64_t v56 = 0;
LABEL_31:
  if (v26 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v26) == 1) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = *(void *)(*(void *)(v4 + 64) + 8 * v26);
  }
  uint64_t v24 = v21 - 1;
LABEL_36:
  if (v24 > (int)v21 - 1)
  {
LABEL_37:
    uint64_t v25 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v30 = 0;
    uint64_t v55 = 0;
    uint64_t v31 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v24) != 1)
  {
    uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v25 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v27 = *(void *)(v5 + 16);
  uint64_t v28 = v27 - 4;
  if (v27 >= 4)
  {
    if (v28 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v29 = v27 - 3;
    goto LABEL_56;
  }
  if (v27 == 3)
  {
    uint64_t v29 = 0;
    uint64_t v55 = 0;
LABEL_56:
    if (v29 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v34 = v27 - 2;
    goto LABEL_61;
  }
  if (v27 >= 2)
  {
    uint64_t v34 = 0;
    uint64_t v31 = 0;
    uint64_t v55 = 0;
LABEL_61:
    if (v34 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v34) == 1) {
      uint64_t v30 = 0;
    }
    else {
      uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v34);
    }
    uint64_t v32 = v27 - 1;
    goto LABEL_66;
  }
  uint64_t v32 = 0;
  uint64_t v30 = 0;
  uint64_t v55 = 0;
  uint64_t v31 = 0;
  uint64_t v33 = 0;
  if (v27 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v32 <= (int)v27 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v32) != 1)
    {
      uint64_t v33 = *(void *)(*(void *)(v5 + 64) + 8 * v32);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v33 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v36 = 0;
    uint64_t v57 = 0;
    uint64_t v35 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v33 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v57 = 0;
    if (v17) {
      goto LABEL_100;
    }
  }
  else
  {
    uint64_t v57 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v17) {
      goto LABEL_100;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_100:
    uint64_t v35 = 0;
    if (v14) {
      goto LABEL_103;
    }
    goto LABEL_101;
  }
  uint64_t v35 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_103;
  }
LABEL_101:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_104;
    }
LABEL_80:
    uint64_t v37 = 0;
    goto LABEL_81;
  }
LABEL_103:
  uint64_t v36 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_104:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v18 >= 1)
  {
    uint64_t v38 = 0;
    uint64_t v39 = (__int16 *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v40 = (__int16 *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v41 = (_WORD *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v59 >= 1)
      {
        uint64_t v42 = 0;
        uint64_t v43 = v39;
        uint64_t v44 = v40;
        uint64_t v45 = v41;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v46 = 0;
            uint64_t v47 = v43;
            uint64_t v48 = v44;
            uint64_t v49 = v45;
            do
            {
              uint64_t v50 = v10;
              uint64_t v51 = v47;
              uint64_t v52 = v48;
              int v53 = v49;
              if (v10 >= 1)
              {
                do
                {
                  int v54 = *v52;
                  if (v54 >= *v51) {
                    LOWORD(v54) = *v51;
                  }
                  _WORD *v53 = v54;
                  int v53 = (_WORD *)((char *)v53 + v37);
                  uint64_t v52 = (__int16 *)((char *)v52 + v33);
                  uint64_t v51 = (__int16 *)((char *)v51 + v25);
                  --v50;
                }
                while (v50);
              }
              ++v46;
              uint64_t v49 = (_WORD *)((char *)v49 + v36);
              uint64_t v48 = (__int16 *)((char *)v48 + v30);
              uint64_t v47 = (__int16 *)((char *)v47 + v19);
            }
            while (v46 != v13);
          }
          ++v42;
          uint64_t v45 = (_WORD *)((char *)v45 + v35);
          uint64_t v44 = (__int16 *)((char *)v44 + v31);
          uint64_t v43 = (__int16 *)((char *)v43 + result);
        }
        while (v42 != v59);
      }
      ++v38;
      uint64_t v41 = (_WORD *)((char *)v41 + v57);
      uint64_t v40 = (__int16 *)((char *)v40 + v55);
      uint64_t v39 = (__int16 *)((char *)v39 + v56);
    }
    while (v38 != v58);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<signed char,signed char,signed char,(mlir::mps::arithmeticOp)15>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v59 = 1;
    char v17 = 1;
LABEL_7:
    uint64_t v18 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v59 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v17 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v17 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v58 = v18;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v19 = 0;
    uint64_t v56 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v21 = *(void *)(v4 + 16);
  uint64_t v22 = v21 - 4;
  if (v21 >= 4)
  {
    if (v22 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
      uint64_t v56 = 0;
    }
    else {
      uint64_t v56 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
    }
    uint64_t v23 = v21 - 3;
    goto LABEL_26;
  }
  if (v21 == 3)
  {
    uint64_t v23 = 0;
    uint64_t v56 = 0;
LABEL_26:
    if (v23 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v26 = v21 - 2;
    goto LABEL_31;
  }
  if (v21 < 2)
  {
    uint64_t v24 = 0;
    uint64_t v19 = 0;
    uint64_t v56 = 0;
    uint64_t result = 0;
    uint64_t v25 = 0;
    if (v21 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v26 = 0;
  uint64_t result = 0;
  uint64_t v56 = 0;
LABEL_31:
  if (v26 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v26) == 1) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = *(void *)(*(void *)(v4 + 64) + 8 * v26);
  }
  uint64_t v24 = v21 - 1;
LABEL_36:
  if (v24 > (int)v21 - 1)
  {
LABEL_37:
    uint64_t v25 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v30 = 0;
    uint64_t v55 = 0;
    uint64_t v31 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v24) != 1)
  {
    uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v25 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v27 = *(void *)(v5 + 16);
  uint64_t v28 = v27 - 4;
  if (v27 >= 4)
  {
    if (v28 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v29 = v27 - 3;
    goto LABEL_56;
  }
  if (v27 == 3)
  {
    uint64_t v29 = 0;
    uint64_t v55 = 0;
LABEL_56:
    if (v29 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v34 = v27 - 2;
    goto LABEL_61;
  }
  if (v27 >= 2)
  {
    uint64_t v34 = 0;
    uint64_t v31 = 0;
    uint64_t v55 = 0;
LABEL_61:
    if (v34 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v34) == 1) {
      uint64_t v30 = 0;
    }
    else {
      uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v34);
    }
    uint64_t v32 = v27 - 1;
    goto LABEL_66;
  }
  uint64_t v32 = 0;
  uint64_t v30 = 0;
  uint64_t v55 = 0;
  uint64_t v31 = 0;
  uint64_t v33 = 0;
  if (v27 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v32 <= (int)v27 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v32) != 1)
    {
      uint64_t v33 = *(void *)(*(void *)(v5 + 64) + 8 * v32);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v33 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v36 = 0;
    uint64_t v57 = 0;
    uint64_t v35 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v33 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v57 = 0;
    if (v17) {
      goto LABEL_100;
    }
  }
  else
  {
    uint64_t v57 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v17) {
      goto LABEL_100;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_100:
    uint64_t v35 = 0;
    if (v14) {
      goto LABEL_103;
    }
    goto LABEL_101;
  }
  uint64_t v35 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_103;
  }
LABEL_101:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_104;
    }
LABEL_80:
    uint64_t v37 = 0;
    goto LABEL_81;
  }
LABEL_103:
  uint64_t v36 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_104:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v18 >= 1)
  {
    uint64_t v38 = 0;
    uint64_t v39 = (unsigned char *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v40 = (char *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v41 = (unsigned char *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v59 >= 1)
      {
        uint64_t v42 = 0;
        uint64_t v43 = v39;
        uint64_t v44 = v40;
        uint64_t v45 = v41;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v46 = 0;
            uint64_t v47 = v43;
            uint64_t v48 = v44;
            uint64_t v49 = v45;
            do
            {
              uint64_t v50 = v10;
              uint64_t v51 = v47;
              uint64_t v52 = v48;
              int v53 = v49;
              if (v10 >= 1)
              {
                do
                {
                  int v54 = *v52;
                  if (v54 >= (char)*v51) {
                    LOBYTE(v54) = *v51;
                  }
                  unsigned char *v53 = v54;
                  v53 += v37;
                  v52 += v33;
                  v51 += v25;
                  --v50;
                }
                while (v50);
              }
              ++v46;
              v49 += v36;
              v48 += v30;
              v47 += v19;
            }
            while (v46 != v13);
          }
          ++v42;
          v45 += v35;
          v44 += v31;
          v43 += result;
        }
        while (v42 != v59);
      }
      ++v38;
      v41 += v57;
      v40 += v55;
      v39 += v56;
    }
    while (v38 != v58);
  }
  return result;
}

uint64_t **mlir::mps::arithmeticBinaryTileBaseKernel<complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)16>(uint64_t **result, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **result;
  uint64_t v5 = (*result)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v61 = 1;
    char v17 = 1;
LABEL_7:
    uint64_t v18 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v61 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v17 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v17 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v58 = v18;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v19 = 0;
    uint64_t v56 = 0;
    uint64_t v60 = 0;
    goto LABEL_37;
  }
  uint64_t v20 = *(void *)(v4 + 16);
  uint64_t v21 = v20 - 4;
  if (v20 >= 4)
  {
    if (v21 > (int)v20 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v21) == 1) {
      uint64_t v56 = 0;
    }
    else {
      uint64_t v56 = *(void *)(*(void *)(v4 + 64) + 8 * v21);
    }
    uint64_t v22 = v20 - 3;
    goto LABEL_26;
  }
  if (v20 == 3)
  {
    uint64_t v22 = 0;
    uint64_t v56 = 0;
LABEL_26:
    if (v22 > (int)v20 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
      uint64_t v60 = 0;
    }
    else {
      uint64_t v60 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
    }
    uint64_t v25 = v20 - 2;
    goto LABEL_31;
  }
  if (v20 < 2)
  {
    uint64_t v23 = 0;
    uint64_t v19 = 0;
    uint64_t v56 = 0;
    uint64_t v60 = 0;
    uint64_t v24 = 0;
    if (v20 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v25 = 0;
  uint64_t v60 = 0;
  uint64_t v56 = 0;
LABEL_31:
  if (v25 > (int)v20 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v25) == 1) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
  }
  uint64_t v23 = v20 - 1;
LABEL_36:
  if (v23 > (int)v20 - 1)
  {
LABEL_37:
    uint64_t v24 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v29 = 0;
    uint64_t v55 = 0;
    uint64_t v30 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v23) != 1)
  {
    uint64_t v24 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v24 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v26 = *(void *)(v5 + 16);
  uint64_t v27 = v26 - 4;
  if (v26 >= 4)
  {
    if (v27 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v27) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v5 + 64) + 8 * v27);
    }
    uint64_t v28 = v26 - 3;
    goto LABEL_56;
  }
  if (v26 == 3)
  {
    uint64_t v28 = 0;
    uint64_t v55 = 0;
LABEL_56:
    if (v28 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v30 = 0;
    }
    else {
      uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v33 = v26 - 2;
    goto LABEL_61;
  }
  if (v26 >= 2)
  {
    uint64_t v33 = 0;
    uint64_t v30 = 0;
    uint64_t v55 = 0;
LABEL_61:
    if (v33 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v33) == 1) {
      uint64_t v29 = 0;
    }
    else {
      uint64_t v29 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
    }
    uint64_t v31 = v26 - 1;
    goto LABEL_66;
  }
  uint64_t v31 = 0;
  uint64_t v29 = 0;
  uint64_t v55 = 0;
  uint64_t v30 = 0;
  uint64_t v32 = 0;
  if (v26 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v31 <= (int)v26 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v31) != 1)
    {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v31);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v32 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v35 = 0;
    uint64_t v57 = 0;
    uint64_t v34 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v32 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v57 = 0;
    if (v17) {
      goto LABEL_103;
    }
  }
  else
  {
    uint64_t v57 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v17) {
      goto LABEL_103;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_103:
    uint64_t v34 = 0;
    if (v14) {
      goto LABEL_106;
    }
    goto LABEL_104;
  }
  uint64_t v34 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_106;
  }
LABEL_104:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v35 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_107;
    }
LABEL_80:
    uint64_t v36 = 0;
    goto LABEL_81;
  }
LABEL_106:
  uint64_t v35 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_107:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v18 >= 1)
  {
    uint64_t v37 = 0;
    uint64_t v38 = (float *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v39 = (float *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v40 = (unint64_t *)(**a4 + *(void *)(v6 + 40));
    do
    {
      uint64_t v59 = v37;
      if (v61 >= 1)
      {
        uint64_t v41 = 0;
        uint64_t v42 = v38;
        uint64_t v43 = v39;
        uint64_t v44 = v40;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v45 = 0;
            uint64_t v46 = v42;
            uint64_t v47 = v43;
            uint64_t v48 = v44;
            do
            {
              uint64_t v49 = v10;
              uint64_t v50 = v46;
              uint64_t v51 = v47;
              uint64_t v52 = v48;
              if (v10 >= 1)
              {
                do
                {
                  uint64_t result = (uint64_t **)(*(unsigned int *)v50 | ((unint64_t)*((unsigned int *)v50 + 1) << 32));
                  BOOL v53 = v50[1] > v51[1];
                  if (*v50 != *v51) {
                    BOOL v53 = *v50 > *v51;
                  }
                  if (v53) {
                    unint64_t v54 = *(unsigned int *)v50 | ((unint64_t)*((unsigned int *)v50 + 1) << 32);
                  }
                  else {
                    unint64_t v54 = *(unsigned int *)v51 | ((unint64_t)*((unsigned int *)v51 + 1) << 32);
                  }
                  unint64_t *v52 = v54;
                  uint64_t v52 = (unint64_t *)((char *)v52 + v36);
                  uint64_t v51 = (float *)((char *)v51 + v32);
                  uint64_t v50 = (float *)((char *)v50 + v24);
                  --v49;
                }
                while (v49);
              }
              ++v45;
              uint64_t v48 = (unint64_t *)((char *)v48 + v35);
              uint64_t v47 = (float *)((char *)v47 + v29);
              uint64_t v46 = (float *)((char *)v46 + v19);
            }
            while (v45 != v13);
          }
          ++v41;
          uint64_t v44 = (unint64_t *)((char *)v44 + v34);
          uint64_t v43 = (float *)((char *)v43 + v30);
          uint64_t v42 = (float *)((char *)v42 + v60);
        }
        while (v41 != v61);
      }
      ++v37;
      uint64_t v40 = (unint64_t *)((char *)v40 + v57);
      uint64_t v39 = (float *)((char *)v39 + v55);
      uint64_t v38 = (float *)((char *)v38 + v56);
    }
    while (v59 + 1 != v58);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<float,float,float,(mlir::mps::arithmeticOp)16>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v17 = 1;
    char v18 = 1;
LABEL_7:
    uint64_t v19 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v17 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v18 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v18 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v19 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v59 = v19;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v20 = 0;
    uint64_t v58 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v22 = *(void *)(v4 + 16);
  uint64_t v23 = v22 - 4;
  if (v22 >= 4)
  {
    if (v23 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t v58 = 0;
    }
    else {
      uint64_t v58 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v24 = v22 - 3;
    goto LABEL_26;
  }
  if (v22 == 3)
  {
    uint64_t v24 = 0;
    uint64_t v58 = 0;
LABEL_26:
    if (v24 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    }
    uint64_t v27 = v22 - 2;
    goto LABEL_31;
  }
  if (v22 < 2)
  {
    uint64_t v25 = 0;
    uint64_t v20 = 0;
    uint64_t v58 = 0;
    uint64_t result = 0;
    uint64_t v26 = 0;
    if (v22 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v27 = 0;
  uint64_t result = 0;
  uint64_t v58 = 0;
LABEL_31:
  if (v27 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v27) == 1) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = *(void *)(*(void *)(v4 + 64) + 8 * v27);
  }
  uint64_t v25 = v22 - 1;
LABEL_36:
  if (v25 > (int)v22 - 1)
  {
LABEL_37:
    uint64_t v26 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v31 = 0;
    uint64_t v57 = 0;
    uint64_t v32 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v25) != 1)
  {
    uint64_t v26 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v26 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v28 = *(void *)(v5 + 16);
  uint64_t v29 = v28 - 4;
  if (v28 >= 4)
  {
    if (v29 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v57 = 0;
    }
    else {
      uint64_t v57 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v30 = v28 - 3;
    goto LABEL_56;
  }
  if (v28 == 3)
  {
    uint64_t v30 = 0;
    uint64_t v57 = 0;
LABEL_56:
    if (v30 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v30) == 1) {
      uint64_t v32 = 0;
    }
    else {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v30);
    }
    uint64_t v35 = v28 - 2;
    goto LABEL_61;
  }
  if (v28 >= 2)
  {
    uint64_t v35 = 0;
    uint64_t v32 = 0;
    uint64_t v57 = 0;
LABEL_61:
    if (v35 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v35) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v35);
    }
    uint64_t v33 = v28 - 1;
    goto LABEL_66;
  }
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v57 = 0;
  uint64_t v32 = 0;
  uint64_t v34 = 0;
  if (v28 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v33 <= (int)v28 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v33) != 1)
    {
      uint64_t v34 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v34 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v38 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v34 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v36 = 0;
    if (v18) {
      goto LABEL_100;
    }
  }
  else
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v18) {
      goto LABEL_100;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_100:
    uint64_t v37 = 0;
    if (v14) {
      goto LABEL_103;
    }
    goto LABEL_101;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_103;
  }
LABEL_101:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v38 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_104;
    }
LABEL_80:
    uint64_t v39 = 0;
    goto LABEL_81;
  }
LABEL_103:
  uint64_t v38 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_104:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v39 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v59 >= 1)
  {
    uint64_t v40 = 0;
    uint64_t v41 = (float *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v42 = (float *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v43 = (float *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v17 >= 1)
      {
        uint64_t v44 = 0;
        uint64_t v45 = v41;
        uint64_t v46 = v42;
        uint64_t v47 = v43;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v48 = 0;
            uint64_t v49 = v45;
            uint64_t v50 = v46;
            uint64_t v51 = v47;
            do
            {
              uint64_t v52 = v10;
              BOOL v53 = v49;
              unint64_t v54 = v50;
              uint64_t v55 = v51;
              if (v10 >= 1)
              {
                do
                {
                  float v56 = *v53;
                  if (*v53 < *v54) {
                    float v56 = *v54;
                  }
                  float *v55 = v56;
                  uint64_t v55 = (float *)((char *)v55 + v39);
                  unint64_t v54 = (float *)((char *)v54 + v34);
                  BOOL v53 = (float *)((char *)v53 + v26);
                  --v52;
                }
                while (v52);
              }
              ++v48;
              uint64_t v51 = (float *)((char *)v51 + v38);
              uint64_t v50 = (float *)((char *)v50 + v31);
              uint64_t v49 = (float *)((char *)v49 + v20);
            }
            while (v48 != v13);
          }
          ++v44;
          uint64_t v47 = (float *)((char *)v47 + v37);
          uint64_t v46 = (float *)((char *)v46 + v32);
          uint64_t v45 = (float *)((char *)v45 + result);
        }
        while (v44 != v17);
      }
      ++v40;
      uint64_t v43 = (float *)((char *)v43 + v36);
      uint64_t v42 = (float *)((char *)v42 + v57);
      uint64_t v41 = (float *)((char *)v41 + v58);
    }
    while (v40 != v59);
  }
  return result;
}

uint64_t **mlir::mps::arithmeticBinaryTileBaseKernel<complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)16>(uint64_t **result, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **result;
  uint64_t v5 = (*result)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v69 = 1;
    char v17 = 1;
LABEL_7:
    uint64_t v18 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v69 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v17 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v17 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v66 = v18;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v19 = 0;
    uint64_t v64 = 0;
    uint64_t v68 = 0;
    goto LABEL_37;
  }
  uint64_t v20 = *(void *)(v4 + 16);
  uint64_t v21 = v20 - 4;
  if (v20 >= 4)
  {
    if (v21 > (int)v20 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v21) == 1) {
      uint64_t v64 = 0;
    }
    else {
      uint64_t v64 = *(void *)(*(void *)(v4 + 64) + 8 * v21);
    }
    uint64_t v22 = v20 - 3;
    goto LABEL_26;
  }
  if (v20 == 3)
  {
    uint64_t v22 = 0;
    uint64_t v64 = 0;
LABEL_26:
    if (v22 > (int)v20 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
      uint64_t v68 = 0;
    }
    else {
      uint64_t v68 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
    }
    uint64_t v25 = v20 - 2;
    goto LABEL_31;
  }
  if (v20 < 2)
  {
    uint64_t v23 = 0;
    uint64_t v19 = 0;
    uint64_t v64 = 0;
    uint64_t v68 = 0;
    uint64_t v24 = 0;
    if (v20 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v25 = 0;
  uint64_t v68 = 0;
  uint64_t v64 = 0;
LABEL_31:
  if (v25 > (int)v20 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v25) == 1) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
  }
  uint64_t v23 = v20 - 1;
LABEL_36:
  if (v23 > (int)v20 - 1)
  {
LABEL_37:
    uint64_t v24 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v29 = 0;
    uint64_t v63 = 0;
    uint64_t v30 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v23) != 1)
  {
    uint64_t v24 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v24 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v26 = *(void *)(v5 + 16);
  uint64_t v27 = v26 - 4;
  if (v26 >= 4)
  {
    if (v27 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v27) == 1) {
      uint64_t v63 = 0;
    }
    else {
      uint64_t v63 = *(void *)(*(void *)(v5 + 64) + 8 * v27);
    }
    uint64_t v28 = v26 - 3;
    goto LABEL_56;
  }
  if (v26 == 3)
  {
    uint64_t v28 = 0;
    uint64_t v63 = 0;
LABEL_56:
    if (v28 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v30 = 0;
    }
    else {
      uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v33 = v26 - 2;
    goto LABEL_61;
  }
  if (v26 >= 2)
  {
    uint64_t v33 = 0;
    uint64_t v30 = 0;
    uint64_t v63 = 0;
LABEL_61:
    if (v33 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v33) == 1) {
      uint64_t v29 = 0;
    }
    else {
      uint64_t v29 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
    }
    uint64_t v31 = v26 - 1;
    goto LABEL_66;
  }
  uint64_t v31 = 0;
  uint64_t v29 = 0;
  uint64_t v63 = 0;
  uint64_t v30 = 0;
  uint64_t v32 = 0;
  if (v26 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v31 <= (int)v26 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v31) != 1)
    {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v31);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v32 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v35 = 0;
    uint64_t v65 = 0;
    uint64_t v34 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v32 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v65 = 0;
    if (v17) {
      goto LABEL_103;
    }
  }
  else
  {
    uint64_t v65 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v17) {
      goto LABEL_103;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_103:
    uint64_t v34 = 0;
    if (v14) {
      goto LABEL_106;
    }
    goto LABEL_104;
  }
  uint64_t v34 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_106;
  }
LABEL_104:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v35 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_107;
    }
LABEL_80:
    uint64_t v36 = 0;
    goto LABEL_81;
  }
LABEL_106:
  uint64_t v35 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_107:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v18 >= 1)
  {
    uint64_t v37 = 0;
    uint64_t v38 = (__int16 *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v39 = (float *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v40 = (unint64_t *)(**a4 + *(void *)(v6 + 40));
    do
    {
      uint64_t v67 = v37;
      if (v69 >= 1)
      {
        uint64_t v41 = 0;
        uint64_t v42 = v38;
        uint64_t v43 = v39;
        uint64_t v44 = v40;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v45 = 0;
            uint64_t v46 = v42;
            uint64_t v47 = v43;
            uint64_t v48 = v44;
            do
            {
              uint64_t v49 = v10;
              uint64_t v50 = v46;
              uint64_t v51 = v47;
              uint64_t v52 = v48;
              if (v10 >= 1)
              {
                do
                {
                  _H0 = *v50;
                  __asm { FCVT            S0, H0 }
                  _H1 = v50[1];
                  __asm { FCVT            S1, H1 }
                  uint64_t result = (uint64_t **)(*(unsigned int *)v51 | ((unint64_t)*((unsigned int *)v51 + 1) << 32));
                  BOOL v61 = v51[1] < _S1;
                  if (*v51 != _S0) {
                    BOOL v61 = *v51 < _S0;
                  }
                  if (v61) {
                    unint64_t v62 = LODWORD(_S0) | ((unint64_t)LODWORD(_S1) << 32);
                  }
                  else {
                    unint64_t v62 = *(unsigned int *)v51 | ((unint64_t)*((unsigned int *)v51 + 1) << 32);
                  }
                  unint64_t *v52 = v62;
                  uint64_t v52 = (unint64_t *)((char *)v52 + v36);
                  uint64_t v51 = (float *)((char *)v51 + v32);
                  uint64_t v50 = (__int16 *)((char *)v50 + v24);
                  --v49;
                }
                while (v49);
              }
              ++v45;
              uint64_t v48 = (unint64_t *)((char *)v48 + v35);
              uint64_t v47 = (float *)((char *)v47 + v29);
              uint64_t v46 = (__int16 *)((char *)v46 + v19);
            }
            while (v45 != v13);
          }
          ++v41;
          uint64_t v44 = (unint64_t *)((char *)v44 + v34);
          uint64_t v43 = (float *)((char *)v43 + v30);
          uint64_t v42 = (__int16 *)((char *)v42 + v68);
        }
        while (v41 != v69);
      }
      ++v37;
      uint64_t v40 = (unint64_t *)((char *)v40 + v65);
      uint64_t v39 = (float *)((char *)v39 + v63);
      uint64_t v38 = (__int16 *)((char *)v38 + v64);
    }
    while (v67 + 1 != v66);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<half,float,float,(mlir::mps::arithmeticOp)16>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v17 = 1;
    char v18 = 1;
LABEL_7:
    uint64_t v19 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v17 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v18 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v18 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v19 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v64 = v19;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v20 = 0;
    uint64_t v63 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v22 = *(void *)(v4 + 16);
  uint64_t v23 = v22 - 4;
  if (v22 >= 4)
  {
    if (v23 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t v63 = 0;
    }
    else {
      uint64_t v63 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v24 = v22 - 3;
    goto LABEL_26;
  }
  if (v22 == 3)
  {
    uint64_t v24 = 0;
    uint64_t v63 = 0;
LABEL_26:
    if (v24 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    }
    uint64_t v27 = v22 - 2;
    goto LABEL_31;
  }
  if (v22 < 2)
  {
    uint64_t v25 = 0;
    uint64_t v20 = 0;
    uint64_t v63 = 0;
    uint64_t result = 0;
    uint64_t v26 = 0;
    if (v22 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v27 = 0;
  uint64_t result = 0;
  uint64_t v63 = 0;
LABEL_31:
  if (v27 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v27) == 1) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = *(void *)(*(void *)(v4 + 64) + 8 * v27);
  }
  uint64_t v25 = v22 - 1;
LABEL_36:
  if (v25 > (int)v22 - 1)
  {
LABEL_37:
    uint64_t v26 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v31 = 0;
    uint64_t v62 = 0;
    uint64_t v32 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v25) != 1)
  {
    uint64_t v26 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v26 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v28 = *(void *)(v5 + 16);
  uint64_t v29 = v28 - 4;
  if (v28 >= 4)
  {
    if (v29 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v62 = 0;
    }
    else {
      uint64_t v62 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v30 = v28 - 3;
    goto LABEL_56;
  }
  if (v28 == 3)
  {
    uint64_t v30 = 0;
    uint64_t v62 = 0;
LABEL_56:
    if (v30 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v30) == 1) {
      uint64_t v32 = 0;
    }
    else {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v30);
    }
    uint64_t v35 = v28 - 2;
    goto LABEL_61;
  }
  if (v28 >= 2)
  {
    uint64_t v35 = 0;
    uint64_t v32 = 0;
    uint64_t v62 = 0;
LABEL_61:
    if (v35 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v35) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v35);
    }
    uint64_t v33 = v28 - 1;
    goto LABEL_66;
  }
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v62 = 0;
  uint64_t v32 = 0;
  uint64_t v34 = 0;
  if (v28 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v33 <= (int)v28 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v33) != 1)
    {
      uint64_t v34 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v34 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v38 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v34 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v36 = 0;
    if (v18) {
      goto LABEL_100;
    }
  }
  else
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v18) {
      goto LABEL_100;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_100:
    uint64_t v37 = 0;
    if (v14) {
      goto LABEL_103;
    }
    goto LABEL_101;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_103;
  }
LABEL_101:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v38 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_104;
    }
LABEL_80:
    uint64_t v39 = 0;
    goto LABEL_81;
  }
LABEL_103:
  uint64_t v38 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_104:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v39 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v64 >= 1)
  {
    uint64_t v40 = 0;
    uint64_t v41 = (__int16 *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v42 = (float *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v43 = (float *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v17 >= 1)
      {
        uint64_t v44 = 0;
        uint64_t v45 = v41;
        uint64_t v46 = v42;
        uint64_t v47 = v43;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v48 = 0;
            uint64_t v49 = v45;
            uint64_t v50 = v46;
            uint64_t v51 = v47;
            do
            {
              uint64_t v52 = v10;
              BOOL v53 = v49;
              unint64_t v54 = v50;
              uint64_t v55 = v51;
              if (v10 >= 1)
              {
                do
                {
                  _H0 = *v53;
                  __asm { FCVT            S0, H0 }
                  if (*v54 > _S0) {
                    _S0 = *v54;
                  }
                  float *v55 = _S0;
                  uint64_t v55 = (float *)((char *)v55 + v39);
                  unint64_t v54 = (float *)((char *)v54 + v34);
                  BOOL v53 = (__int16 *)((char *)v53 + v26);
                  --v52;
                }
                while (v52);
              }
              ++v48;
              uint64_t v51 = (float *)((char *)v51 + v38);
              uint64_t v50 = (float *)((char *)v50 + v31);
              uint64_t v49 = (__int16 *)((char *)v49 + v20);
            }
            while (v48 != v13);
          }
          ++v44;
          uint64_t v47 = (float *)((char *)v47 + v37);
          uint64_t v46 = (float *)((char *)v46 + v32);
          uint64_t v45 = (__int16 *)((char *)v45 + result);
        }
        while (v44 != v17);
      }
      ++v40;
      uint64_t v43 = (float *)((char *)v43 + v36);
      uint64_t v42 = (float *)((char *)v42 + v62);
      uint64_t v41 = (__int16 *)((char *)v41 + v63);
    }
    while (v40 != v64);
  }
  return result;
}

uint64_t **mlir::mps::arithmeticBinaryTileBaseKernel<complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)16>(uint64_t **result, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **result;
  uint64_t v5 = (*result)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v69 = 1;
    char v17 = 1;
LABEL_7:
    uint64_t v18 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v69 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v17 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v17 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v66 = v18;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v19 = 0;
    uint64_t v64 = 0;
    uint64_t v68 = 0;
    goto LABEL_37;
  }
  uint64_t v20 = *(void *)(v4 + 16);
  uint64_t v21 = v20 - 4;
  if (v20 >= 4)
  {
    if (v21 > (int)v20 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v21) == 1) {
      uint64_t v64 = 0;
    }
    else {
      uint64_t v64 = *(void *)(*(void *)(v4 + 64) + 8 * v21);
    }
    uint64_t v22 = v20 - 3;
    goto LABEL_26;
  }
  if (v20 == 3)
  {
    uint64_t v22 = 0;
    uint64_t v64 = 0;
LABEL_26:
    if (v22 > (int)v20 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
      uint64_t v68 = 0;
    }
    else {
      uint64_t v68 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
    }
    uint64_t v25 = v20 - 2;
    goto LABEL_31;
  }
  if (v20 < 2)
  {
    uint64_t v23 = 0;
    uint64_t v19 = 0;
    uint64_t v64 = 0;
    uint64_t v68 = 0;
    uint64_t v24 = 0;
    if (v20 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v25 = 0;
  uint64_t v68 = 0;
  uint64_t v64 = 0;
LABEL_31:
  if (v25 > (int)v20 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v25) == 1) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
  }
  uint64_t v23 = v20 - 1;
LABEL_36:
  if (v23 > (int)v20 - 1)
  {
LABEL_37:
    uint64_t v24 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v29 = 0;
    uint64_t v63 = 0;
    uint64_t v30 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v23) != 1)
  {
    uint64_t v24 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v24 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v26 = *(void *)(v5 + 16);
  uint64_t v27 = v26 - 4;
  if (v26 >= 4)
  {
    if (v27 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v27) == 1) {
      uint64_t v63 = 0;
    }
    else {
      uint64_t v63 = *(void *)(*(void *)(v5 + 64) + 8 * v27);
    }
    uint64_t v28 = v26 - 3;
    goto LABEL_56;
  }
  if (v26 == 3)
  {
    uint64_t v28 = 0;
    uint64_t v63 = 0;
LABEL_56:
    if (v28 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v30 = 0;
    }
    else {
      uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v33 = v26 - 2;
    goto LABEL_61;
  }
  if (v26 >= 2)
  {
    uint64_t v33 = 0;
    uint64_t v30 = 0;
    uint64_t v63 = 0;
LABEL_61:
    if (v33 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v33) == 1) {
      uint64_t v29 = 0;
    }
    else {
      uint64_t v29 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
    }
    uint64_t v31 = v26 - 1;
    goto LABEL_66;
  }
  uint64_t v31 = 0;
  uint64_t v29 = 0;
  uint64_t v63 = 0;
  uint64_t v30 = 0;
  uint64_t v32 = 0;
  if (v26 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v31 <= (int)v26 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v31) != 1)
    {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v31);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v32 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v35 = 0;
    uint64_t v65 = 0;
    uint64_t v34 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v32 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v65 = 0;
    if (v17) {
      goto LABEL_103;
    }
  }
  else
  {
    uint64_t v65 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v17) {
      goto LABEL_103;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_103:
    uint64_t v34 = 0;
    if (v14) {
      goto LABEL_106;
    }
    goto LABEL_104;
  }
  uint64_t v34 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_106;
  }
LABEL_104:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v35 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_107;
    }
LABEL_80:
    uint64_t v36 = 0;
    goto LABEL_81;
  }
LABEL_106:
  uint64_t v35 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_107:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v18 >= 1)
  {
    uint64_t v37 = 0;
    uint64_t v38 = (float *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v39 = (__int16 *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v40 = (unint64_t *)(**a4 + *(void *)(v6 + 40));
    do
    {
      uint64_t v67 = v37;
      if (v69 >= 1)
      {
        uint64_t v41 = 0;
        uint64_t v42 = v38;
        uint64_t v43 = v39;
        uint64_t v44 = v40;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v45 = 0;
            uint64_t v46 = v42;
            uint64_t v47 = v43;
            uint64_t v48 = v44;
            do
            {
              uint64_t v49 = v10;
              uint64_t v50 = v46;
              uint64_t v51 = v47;
              uint64_t v52 = v48;
              if (v10 >= 1)
              {
                do
                {
                  uint64_t result = (uint64_t **)(*(unsigned int *)v50 | ((unint64_t)*((unsigned int *)v50 + 1) << 32));
                  _H2 = *v51;
                  __asm { FCVT            S2, H2 }
                  _H3 = v51[1];
                  __asm { FCVT            S3, H3 }
                  BOOL v61 = v50[1] > _S3;
                  if (*v50 != _S2) {
                    BOOL v61 = *v50 > _S2;
                  }
                  if (v61) {
                    unint64_t v62 = *(unsigned int *)v50 | ((unint64_t)*((unsigned int *)v50 + 1) << 32);
                  }
                  else {
                    unint64_t v62 = LODWORD(_S2) | ((unint64_t)LODWORD(_S3) << 32);
                  }
                  unint64_t *v52 = v62;
                  uint64_t v52 = (unint64_t *)((char *)v52 + v36);
                  uint64_t v51 = (__int16 *)((char *)v51 + v32);
                  uint64_t v50 = (float *)((char *)v50 + v24);
                  --v49;
                }
                while (v49);
              }
              ++v45;
              uint64_t v48 = (unint64_t *)((char *)v48 + v35);
              uint64_t v47 = (__int16 *)((char *)v47 + v29);
              uint64_t v46 = (float *)((char *)v46 + v19);
            }
            while (v45 != v13);
          }
          ++v41;
          uint64_t v44 = (unint64_t *)((char *)v44 + v34);
          uint64_t v43 = (__int16 *)((char *)v43 + v30);
          uint64_t v42 = (float *)((char *)v42 + v68);
        }
        while (v41 != v69);
      }
      ++v37;
      uint64_t v40 = (unint64_t *)((char *)v40 + v65);
      uint64_t v39 = (__int16 *)((char *)v39 + v63);
      uint64_t v38 = (float *)((char *)v38 + v64);
    }
    while (v67 + 1 != v66);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<float,half,float,(mlir::mps::arithmeticOp)16>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v17 = 1;
    char v18 = 1;
LABEL_7:
    uint64_t v19 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v17 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v18 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v18 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v19 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v65 = v19;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v20 = 0;
    uint64_t v64 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v22 = *(void *)(v4 + 16);
  uint64_t v23 = v22 - 4;
  if (v22 >= 4)
  {
    if (v23 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t v64 = 0;
    }
    else {
      uint64_t v64 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v24 = v22 - 3;
    goto LABEL_26;
  }
  if (v22 == 3)
  {
    uint64_t v24 = 0;
    uint64_t v64 = 0;
LABEL_26:
    if (v24 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    }
    uint64_t v27 = v22 - 2;
    goto LABEL_31;
  }
  if (v22 < 2)
  {
    uint64_t v25 = 0;
    uint64_t v20 = 0;
    uint64_t v64 = 0;
    uint64_t result = 0;
    uint64_t v26 = 0;
    if (v22 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v27 = 0;
  uint64_t result = 0;
  uint64_t v64 = 0;
LABEL_31:
  if (v27 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v27) == 1) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = *(void *)(*(void *)(v4 + 64) + 8 * v27);
  }
  uint64_t v25 = v22 - 1;
LABEL_36:
  if (v25 > (int)v22 - 1)
  {
LABEL_37:
    uint64_t v26 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v31 = 0;
    uint64_t v63 = 0;
    uint64_t v32 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v25) != 1)
  {
    uint64_t v26 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v26 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v28 = *(void *)(v5 + 16);
  uint64_t v29 = v28 - 4;
  if (v28 >= 4)
  {
    if (v29 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v63 = 0;
    }
    else {
      uint64_t v63 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v30 = v28 - 3;
    goto LABEL_56;
  }
  if (v28 == 3)
  {
    uint64_t v30 = 0;
    uint64_t v63 = 0;
LABEL_56:
    if (v30 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v30) == 1) {
      uint64_t v32 = 0;
    }
    else {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v30);
    }
    uint64_t v35 = v28 - 2;
    goto LABEL_61;
  }
  if (v28 >= 2)
  {
    uint64_t v35 = 0;
    uint64_t v32 = 0;
    uint64_t v63 = 0;
LABEL_61:
    if (v35 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v35) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v35);
    }
    uint64_t v33 = v28 - 1;
    goto LABEL_66;
  }
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v63 = 0;
  uint64_t v32 = 0;
  uint64_t v34 = 0;
  if (v28 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v33 <= (int)v28 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v33) != 1)
    {
      uint64_t v34 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v34 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v38 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v34 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v36 = 0;
    if (v18) {
      goto LABEL_100;
    }
  }
  else
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v18) {
      goto LABEL_100;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_100:
    uint64_t v37 = 0;
    if (v14) {
      goto LABEL_103;
    }
    goto LABEL_101;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_103;
  }
LABEL_101:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v38 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_104;
    }
LABEL_80:
    uint64_t v39 = 0;
    goto LABEL_81;
  }
LABEL_103:
  uint64_t v38 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_104:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v39 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v65 >= 1)
  {
    uint64_t v40 = 0;
    uint64_t v41 = (float *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v42 = (__int16 *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v43 = (float *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v17 >= 1)
      {
        uint64_t v44 = 0;
        uint64_t v45 = v41;
        uint64_t v46 = v42;
        uint64_t v47 = v43;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v48 = 0;
            uint64_t v49 = v45;
            uint64_t v50 = v46;
            uint64_t v51 = v47;
            do
            {
              uint64_t v52 = v10;
              BOOL v53 = v49;
              unint64_t v54 = v50;
              uint64_t v55 = v51;
              if (v10 >= 1)
              {
                do
                {
                  float v56 = *v53;
                  _H1 = *v54;
                  __asm { FCVT            S1, H1 }
                  if (*v53 < _S1) {
                    float v56 = _S1;
                  }
                  float *v55 = v56;
                  uint64_t v55 = (float *)((char *)v55 + v39);
                  unint64_t v54 = (__int16 *)((char *)v54 + v34);
                  BOOL v53 = (float *)((char *)v53 + v26);
                  --v52;
                }
                while (v52);
              }
              ++v48;
              uint64_t v51 = (float *)((char *)v51 + v38);
              uint64_t v50 = (__int16 *)((char *)v50 + v31);
              uint64_t v49 = (float *)((char *)v49 + v20);
            }
            while (v48 != v13);
          }
          ++v44;
          uint64_t v47 = (float *)((char *)v47 + v37);
          uint64_t v46 = (__int16 *)((char *)v46 + v32);
          uint64_t v45 = (float *)((char *)v45 + result);
        }
        while (v44 != v17);
      }
      ++v40;
      uint64_t v43 = (float *)((char *)v43 + v36);
      uint64_t v42 = (__int16 *)((char *)v42 + v63);
      uint64_t v41 = (float *)((char *)v41 + v64);
    }
    while (v40 != v65);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<__emulated_bf16,float,float,(mlir::mps::arithmeticOp)16>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v17 = 1;
    char v18 = 1;
LABEL_7:
    uint64_t v19 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v17 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v18 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v18 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v19 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v59 = v19;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v20 = 0;
    uint64_t v57 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v22 = *(void *)(v4 + 16);
  uint64_t v23 = v22 - 4;
  if (v22 >= 4)
  {
    if (v23 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t v57 = 0;
    }
    else {
      uint64_t v57 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v24 = v22 - 3;
    goto LABEL_26;
  }
  if (v22 == 3)
  {
    uint64_t v24 = 0;
    uint64_t v57 = 0;
LABEL_26:
    if (v24 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    }
    uint64_t v27 = v22 - 2;
    goto LABEL_31;
  }
  if (v22 < 2)
  {
    uint64_t v25 = 0;
    uint64_t v20 = 0;
    uint64_t v57 = 0;
    uint64_t result = 0;
    uint64_t v26 = 0;
    if (v22 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v27 = 0;
  uint64_t result = 0;
  uint64_t v57 = 0;
LABEL_31:
  if (v27 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v27) == 1) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = *(void *)(*(void *)(v4 + 64) + 8 * v27);
  }
  uint64_t v25 = v22 - 1;
LABEL_36:
  if (v25 > (int)v22 - 1)
  {
LABEL_37:
    uint64_t v26 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v31 = 0;
    uint64_t v56 = 0;
    uint64_t v32 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v25) != 1)
  {
    uint64_t v26 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v26 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v28 = *(void *)(v5 + 16);
  uint64_t v29 = v28 - 4;
  if (v28 >= 4)
  {
    if (v29 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v56 = 0;
    }
    else {
      uint64_t v56 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v30 = v28 - 3;
    goto LABEL_56;
  }
  if (v28 == 3)
  {
    uint64_t v30 = 0;
    uint64_t v56 = 0;
LABEL_56:
    if (v30 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v30) == 1) {
      uint64_t v32 = 0;
    }
    else {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v30);
    }
    uint64_t v35 = v28 - 2;
    goto LABEL_61;
  }
  if (v28 >= 2)
  {
    uint64_t v35 = 0;
    uint64_t v32 = 0;
    uint64_t v56 = 0;
LABEL_61:
    if (v35 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v35) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v35);
    }
    uint64_t v33 = v28 - 1;
    goto LABEL_66;
  }
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v56 = 0;
  uint64_t v32 = 0;
  uint64_t v34 = 0;
  if (v28 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v33 <= (int)v28 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v33) != 1)
    {
      uint64_t v34 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v34 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v37 = 0;
    uint64_t v58 = 0;
    uint64_t v36 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v34 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v58 = 0;
    if (v18) {
      goto LABEL_100;
    }
  }
  else
  {
    uint64_t v58 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v18) {
      goto LABEL_100;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_100:
    uint64_t v36 = 0;
    if (v14) {
      goto LABEL_103;
    }
    goto LABEL_101;
  }
  uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_103;
  }
LABEL_101:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_104;
    }
LABEL_80:
    uint64_t v38 = 0;
    goto LABEL_81;
  }
LABEL_103:
  uint64_t v37 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_104:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v38 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v59 >= 1)
  {
    uint64_t v39 = 0;
    uint64_t v40 = (unsigned __int16 *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v41 = (float *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v42 = (float *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v17 >= 1)
      {
        uint64_t v43 = 0;
        uint64_t v44 = v40;
        uint64_t v45 = v41;
        uint64_t v46 = v42;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v47 = 0;
            uint64_t v48 = v44;
            uint64_t v49 = v45;
            uint64_t v50 = v46;
            do
            {
              uint64_t v51 = v10;
              uint64_t v52 = v48;
              BOOL v53 = v49;
              unint64_t v54 = v50;
              if (v10 >= 1)
              {
                do
                {
                  LODWORD(v55) = *v52 << 16;
                  if (*v53 > v55) {
                    float v55 = *v53;
                  }
                  *unint64_t v54 = v55;
                  unint64_t v54 = (float *)((char *)v54 + v38);
                  BOOL v53 = (float *)((char *)v53 + v34);
                  uint64_t v52 = (unsigned __int16 *)((char *)v52 + v26);
                  --v51;
                }
                while (v51);
              }
              ++v47;
              uint64_t v50 = (float *)((char *)v50 + v37);
              uint64_t v49 = (float *)((char *)v49 + v31);
              uint64_t v48 = (unsigned __int16 *)((char *)v48 + v20);
            }
            while (v47 != v13);
          }
          ++v43;
          uint64_t v46 = (float *)((char *)v46 + v36);
          uint64_t v45 = (float *)((char *)v45 + v32);
          uint64_t v44 = (unsigned __int16 *)((char *)v44 + result);
        }
        while (v43 != v17);
      }
      ++v39;
      uint64_t v42 = (float *)((char *)v42 + v58);
      uint64_t v41 = (float *)((char *)v41 + v56);
      uint64_t v40 = (unsigned __int16 *)((char *)v40 + v57);
    }
    while (v39 != v59);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<float,__emulated_bf16,float,(mlir::mps::arithmeticOp)16>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v17 = 1;
    char v18 = 1;
LABEL_7:
    uint64_t v19 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v17 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v18 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v18 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v19 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v59 = v19;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v20 = 0;
    uint64_t v57 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v22 = *(void *)(v4 + 16);
  uint64_t v23 = v22 - 4;
  if (v22 >= 4)
  {
    if (v23 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t v57 = 0;
    }
    else {
      uint64_t v57 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v24 = v22 - 3;
    goto LABEL_26;
  }
  if (v22 == 3)
  {
    uint64_t v24 = 0;
    uint64_t v57 = 0;
LABEL_26:
    if (v24 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    }
    uint64_t v27 = v22 - 2;
    goto LABEL_31;
  }
  if (v22 < 2)
  {
    uint64_t v25 = 0;
    uint64_t v20 = 0;
    uint64_t v57 = 0;
    uint64_t result = 0;
    uint64_t v26 = 0;
    if (v22 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v27 = 0;
  uint64_t result = 0;
  uint64_t v57 = 0;
LABEL_31:
  if (v27 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v27) == 1) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = *(void *)(*(void *)(v4 + 64) + 8 * v27);
  }
  uint64_t v25 = v22 - 1;
LABEL_36:
  if (v25 > (int)v22 - 1)
  {
LABEL_37:
    uint64_t v26 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v31 = 0;
    uint64_t v56 = 0;
    uint64_t v32 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v25) != 1)
  {
    uint64_t v26 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v26 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v28 = *(void *)(v5 + 16);
  uint64_t v29 = v28 - 4;
  if (v28 >= 4)
  {
    if (v29 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v56 = 0;
    }
    else {
      uint64_t v56 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v30 = v28 - 3;
    goto LABEL_56;
  }
  if (v28 == 3)
  {
    uint64_t v30 = 0;
    uint64_t v56 = 0;
LABEL_56:
    if (v30 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v30) == 1) {
      uint64_t v32 = 0;
    }
    else {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v30);
    }
    uint64_t v35 = v28 - 2;
    goto LABEL_61;
  }
  if (v28 >= 2)
  {
    uint64_t v35 = 0;
    uint64_t v32 = 0;
    uint64_t v56 = 0;
LABEL_61:
    if (v35 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v35) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v35);
    }
    uint64_t v33 = v28 - 1;
    goto LABEL_66;
  }
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v56 = 0;
  uint64_t v32 = 0;
  uint64_t v34 = 0;
  if (v28 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v33 <= (int)v28 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v33) != 1)
    {
      uint64_t v34 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v34 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v37 = 0;
    uint64_t v58 = 0;
    uint64_t v36 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v34 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v58 = 0;
    if (v18) {
      goto LABEL_100;
    }
  }
  else
  {
    uint64_t v58 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v18) {
      goto LABEL_100;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_100:
    uint64_t v36 = 0;
    if (v14) {
      goto LABEL_103;
    }
    goto LABEL_101;
  }
  uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_103;
  }
LABEL_101:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_104;
    }
LABEL_80:
    uint64_t v38 = 0;
    goto LABEL_81;
  }
LABEL_103:
  uint64_t v37 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_104:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v38 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v59 >= 1)
  {
    uint64_t v39 = 0;
    uint64_t v40 = (int *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v41 = (unsigned __int16 *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v42 = (int *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v17 >= 1)
      {
        uint64_t v43 = 0;
        uint64_t v44 = v40;
        uint64_t v45 = v41;
        uint64_t v46 = v42;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v47 = 0;
            uint64_t v48 = v44;
            uint64_t v49 = v45;
            uint64_t v50 = v46;
            do
            {
              uint64_t v51 = v10;
              uint64_t v52 = v48;
              BOOL v53 = v49;
              unint64_t v54 = v50;
              if (v10 >= 1)
              {
                do
                {
                  int v55 = *v52;
                  if (*(float *)v52 < COERCE_FLOAT(*v53 << 16)) {
                    int v55 = *v53 << 16;
                  }
                  *unint64_t v54 = v55;
                  unint64_t v54 = (int *)((char *)v54 + v38);
                  BOOL v53 = (unsigned __int16 *)((char *)v53 + v34);
                  uint64_t v52 = (int *)((char *)v52 + v26);
                  --v51;
                }
                while (v51);
              }
              ++v47;
              uint64_t v50 = (int *)((char *)v50 + v37);
              uint64_t v49 = (unsigned __int16 *)((char *)v49 + v31);
              uint64_t v48 = (int *)((char *)v48 + v20);
            }
            while (v47 != v13);
          }
          ++v43;
          uint64_t v46 = (int *)((char *)v46 + v36);
          uint64_t v45 = (unsigned __int16 *)((char *)v45 + v32);
          uint64_t v44 = (int *)((char *)v44 + result);
        }
        while (v43 != v17);
      }
      ++v39;
      uint64_t v42 = (int *)((char *)v42 + v58);
      uint64_t v41 = (unsigned __int16 *)((char *)v41 + v56);
      uint64_t v40 = (int *)((char *)v40 + v57);
    }
    while (v39 != v59);
  }
  return result;
}

uint64_t **mlir::mps::arithmeticBinaryTileBaseKernel<complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<half,(void *)0>,(mlir::mps::arithmeticOp)16>(uint64_t **result, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **result;
  uint64_t v5 = (*result)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v61 = 1;
    char v17 = 1;
LABEL_7:
    uint64_t v18 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v61 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v17 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v17 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v58 = v18;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v19 = 0;
    uint64_t v56 = 0;
    uint64_t v60 = 0;
    goto LABEL_37;
  }
  uint64_t v20 = *(void *)(v4 + 16);
  uint64_t v21 = v20 - 4;
  if (v20 >= 4)
  {
    if (v21 > (int)v20 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v21) == 1) {
      uint64_t v56 = 0;
    }
    else {
      uint64_t v56 = *(void *)(*(void *)(v4 + 64) + 8 * v21);
    }
    uint64_t v22 = v20 - 3;
    goto LABEL_26;
  }
  if (v20 == 3)
  {
    uint64_t v22 = 0;
    uint64_t v56 = 0;
LABEL_26:
    if (v22 > (int)v20 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
      uint64_t v60 = 0;
    }
    else {
      uint64_t v60 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
    }
    uint64_t v25 = v20 - 2;
    goto LABEL_31;
  }
  if (v20 < 2)
  {
    uint64_t v23 = 0;
    uint64_t v19 = 0;
    uint64_t v56 = 0;
    uint64_t v60 = 0;
    uint64_t v24 = 0;
    if (v20 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v25 = 0;
  uint64_t v60 = 0;
  uint64_t v56 = 0;
LABEL_31:
  if (v25 > (int)v20 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v25) == 1) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
  }
  uint64_t v23 = v20 - 1;
LABEL_36:
  if (v23 > (int)v20 - 1)
  {
LABEL_37:
    uint64_t v24 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v29 = 0;
    uint64_t v55 = 0;
    uint64_t v30 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v23) != 1)
  {
    uint64_t v24 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v24 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v26 = *(void *)(v5 + 16);
  uint64_t v27 = v26 - 4;
  if (v26 >= 4)
  {
    if (v27 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v27) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v5 + 64) + 8 * v27);
    }
    uint64_t v28 = v26 - 3;
    goto LABEL_56;
  }
  if (v26 == 3)
  {
    uint64_t v28 = 0;
    uint64_t v55 = 0;
LABEL_56:
    if (v28 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v30 = 0;
    }
    else {
      uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v33 = v26 - 2;
    goto LABEL_61;
  }
  if (v26 >= 2)
  {
    uint64_t v33 = 0;
    uint64_t v30 = 0;
    uint64_t v55 = 0;
LABEL_61:
    if (v33 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v33) == 1) {
      uint64_t v29 = 0;
    }
    else {
      uint64_t v29 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
    }
    uint64_t v31 = v26 - 1;
    goto LABEL_66;
  }
  uint64_t v31 = 0;
  uint64_t v29 = 0;
  uint64_t v55 = 0;
  uint64_t v30 = 0;
  uint64_t v32 = 0;
  if (v26 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v31 <= (int)v26 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v31) != 1)
    {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v31);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v32 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v35 = 0;
    uint64_t v57 = 0;
    uint64_t v34 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v32 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v57 = 0;
    if (v17) {
      goto LABEL_103;
    }
  }
  else
  {
    uint64_t v57 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v17) {
      goto LABEL_103;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_103:
    uint64_t v34 = 0;
    if (v14) {
      goto LABEL_106;
    }
    goto LABEL_104;
  }
  uint64_t v34 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_106;
  }
LABEL_104:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v35 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_107;
    }
LABEL_80:
    uint64_t v36 = 0;
    goto LABEL_81;
  }
LABEL_106:
  uint64_t v35 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_107:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v18 >= 1)
  {
    uint64_t v37 = 0;
    uint64_t v38 = (short float *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v39 = (short float *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v40 = (int *)(**a4 + *(void *)(v6 + 40));
    do
    {
      uint64_t v59 = v37;
      if (v61 >= 1)
      {
        uint64_t v41 = 0;
        uint64_t v42 = v38;
        uint64_t v43 = v39;
        uint64_t v44 = v40;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v45 = 0;
            uint64_t v46 = v42;
            uint64_t v47 = v43;
            uint64_t v48 = v44;
            do
            {
              uint64_t v49 = v10;
              uint64_t v50 = v46;
              uint64_t v51 = v47;
              uint64_t v52 = v48;
              if (v10 >= 1)
              {
                do
                {
                  uint64_t result = (uint64_t **)(*(unsigned __int16 *)v50 | (*((unsigned __int16 *)v50 + 1) << 16));
                  BOOL v53 = v50[1] > v51[1];
                  if (*v50 != *v51) {
                    BOOL v53 = *v50 > *v51;
                  }
                  if (v53) {
                    int v54 = *(unsigned __int16 *)v50 | (*((unsigned __int16 *)v50 + 1) << 16);
                  }
                  else {
                    int v54 = *(unsigned __int16 *)v51 | (*((unsigned __int16 *)v51 + 1) << 16);
                  }
                  int *v52 = v54;
                  uint64_t v52 = (int *)((char *)v52 + v36);
                  uint64_t v51 = (short float *)((char *)v51 + v32);
                  uint64_t v50 = (short float *)((char *)v50 + v24);
                  --v49;
                }
                while (v49);
              }
              ++v45;
              uint64_t v48 = (int *)((char *)v48 + v35);
              uint64_t v47 = (short float *)((char *)v47 + v29);
              uint64_t v46 = (short float *)((char *)v46 + v19);
            }
            while (v45 != v13);
          }
          ++v41;
          uint64_t v44 = (int *)((char *)v44 + v34);
          uint64_t v43 = (short float *)((char *)v43 + v30);
          uint64_t v42 = (short float *)((char *)v42 + v60);
        }
        while (v41 != v61);
      }
      ++v37;
      uint64_t v40 = (int *)((char *)v40 + v57);
      uint64_t v39 = (short float *)((char *)v39 + v55);
      uint64_t v38 = (short float *)((char *)v38 + v56);
    }
    while (v59 + 1 != v58);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<half,half,half,(mlir::mps::arithmeticOp)16>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v17 = 1;
    char v18 = 1;
LABEL_7:
    uint64_t v19 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v17 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v18 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v18 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v19 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v59 = v19;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v20 = 0;
    uint64_t v58 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v22 = *(void *)(v4 + 16);
  uint64_t v23 = v22 - 4;
  if (v22 >= 4)
  {
    if (v23 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t v58 = 0;
    }
    else {
      uint64_t v58 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v24 = v22 - 3;
    goto LABEL_26;
  }
  if (v22 == 3)
  {
    uint64_t v24 = 0;
    uint64_t v58 = 0;
LABEL_26:
    if (v24 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    }
    uint64_t v27 = v22 - 2;
    goto LABEL_31;
  }
  if (v22 < 2)
  {
    uint64_t v25 = 0;
    uint64_t v20 = 0;
    uint64_t v58 = 0;
    uint64_t result = 0;
    uint64_t v26 = 0;
    if (v22 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v27 = 0;
  uint64_t result = 0;
  uint64_t v58 = 0;
LABEL_31:
  if (v27 > (int)v22 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v27) == 1) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = *(void *)(*(void *)(v4 + 64) + 8 * v27);
  }
  uint64_t v25 = v22 - 1;
LABEL_36:
  if (v25 > (int)v22 - 1)
  {
LABEL_37:
    uint64_t v26 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v31 = 0;
    uint64_t v57 = 0;
    uint64_t v32 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v25) != 1)
  {
    uint64_t v26 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v26 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v28 = *(void *)(v5 + 16);
  uint64_t v29 = v28 - 4;
  if (v28 >= 4)
  {
    if (v29 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v57 = 0;
    }
    else {
      uint64_t v57 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v30 = v28 - 3;
    goto LABEL_56;
  }
  if (v28 == 3)
  {
    uint64_t v30 = 0;
    uint64_t v57 = 0;
LABEL_56:
    if (v30 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v30) == 1) {
      uint64_t v32 = 0;
    }
    else {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v30);
    }
    uint64_t v35 = v28 - 2;
    goto LABEL_61;
  }
  if (v28 >= 2)
  {
    uint64_t v35 = 0;
    uint64_t v32 = 0;
    uint64_t v57 = 0;
LABEL_61:
    if (v35 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v35) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v35);
    }
    uint64_t v33 = v28 - 1;
    goto LABEL_66;
  }
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v57 = 0;
  uint64_t v32 = 0;
  uint64_t v34 = 0;
  if (v28 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v33 <= (int)v28 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v33) != 1)
    {
      uint64_t v34 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v34 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v38 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v34 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v36 = 0;
    if (v18) {
      goto LABEL_100;
    }
  }
  else
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v18) {
      goto LABEL_100;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_100:
    uint64_t v37 = 0;
    if (v14) {
      goto LABEL_103;
    }
    goto LABEL_101;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_103;
  }
LABEL_101:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v38 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_104;
    }
LABEL_80:
    uint64_t v39 = 0;
    goto LABEL_81;
  }
LABEL_103:
  uint64_t v38 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_104:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v39 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v59 >= 1)
  {
    uint64_t v40 = 0;
    uint64_t v41 = (short float *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v42 = (short float *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v43 = (short float *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v17 >= 1)
      {
        uint64_t v44 = 0;
        uint64_t v45 = v41;
        uint64_t v46 = v42;
        uint64_t v47 = v43;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v48 = 0;
            uint64_t v49 = v45;
            uint64_t v50 = v46;
            uint64_t v51 = v47;
            do
            {
              uint64_t v52 = v10;
              BOOL v53 = v49;
              int v54 = v50;
              uint64_t v55 = v51;
              if (v10 >= 1)
              {
                do
                {
                  short float v56 = *v53;
                  if (*v53 < *v54) {
                    short float v56 = *v54;
                  }
                  short float *v55 = v56;
                  uint64_t v55 = (short float *)((char *)v55 + v39);
                  int v54 = (short float *)((char *)v54 + v34);
                  BOOL v53 = (short float *)((char *)v53 + v26);
                  --v52;
                }
                while (v52);
              }
              ++v48;
              uint64_t v51 = (short float *)((char *)v51 + v38);
              uint64_t v50 = (short float *)((char *)v50 + v31);
              uint64_t v49 = (short float *)((char *)v49 + v20);
            }
            while (v48 != v13);
          }
          ++v44;
          uint64_t v47 = (short float *)((char *)v47 + v37);
          uint64_t v46 = (short float *)((char *)v46 + v32);
          uint64_t v45 = (short float *)((char *)v45 + result);
        }
        while (v44 != v17);
      }
      ++v40;
      uint64_t v43 = (short float *)((char *)v43 + v36);
      uint64_t v42 = (short float *)((char *)v42 + v57);
      uint64_t v41 = (short float *)((char *)v41 + v58);
    }
    while (v40 != v59);
  }
  return result;
}

unint64_t mlir::mps::arithmeticBinaryTileBaseKernel<__emulated_bf16,__emulated_bf16,__emulated_bf16,(mlir::mps::arithmeticOp)16>(unint64_t result, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **(void **)result;
  uint64_t v5 = *(void *)(*(void *)result + 8);
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v59 = 1;
    char v17 = 1;
LABEL_7:
    uint64_t v18 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v59 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v17 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v17 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v57 = v18;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v19 = 0;
    uint64_t v55 = 0;
    uint64_t v58 = 0;
    goto LABEL_37;
  }
  uint64_t v20 = *(void *)(v4 + 16);
  uint64_t v21 = v20 - 4;
  if (v20 >= 4)
  {
    if (v21 > (int)v20 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v21) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v4 + 64) + 8 * v21);
    }
    uint64_t v22 = v20 - 3;
    goto LABEL_26;
  }
  if (v20 == 3)
  {
    uint64_t v22 = 0;
    uint64_t v55 = 0;
LABEL_26:
    if (v22 > (int)v20 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
      uint64_t v58 = 0;
    }
    else {
      uint64_t v58 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
    }
    uint64_t v25 = v20 - 2;
    goto LABEL_31;
  }
  if (v20 < 2)
  {
    uint64_t v23 = 0;
    uint64_t v19 = 0;
    uint64_t v55 = 0;
    uint64_t v58 = 0;
    uint64_t v24 = 0;
    if (v20 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v25 = 0;
  uint64_t v58 = 0;
  uint64_t v55 = 0;
LABEL_31:
  if (v25 > (int)v20 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v25) == 1) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
  }
  uint64_t v23 = v20 - 1;
LABEL_36:
  if (v23 > (int)v20 - 1)
  {
LABEL_37:
    uint64_t v24 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v29 = 0;
    uint64_t v54 = 0;
    uint64_t v30 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v23) != 1)
  {
    uint64_t v24 = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v24 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v26 = *(void *)(v5 + 16);
  uint64_t v27 = v26 - 4;
  if (v26 >= 4)
  {
    if (v27 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v27) == 1) {
      uint64_t v54 = 0;
    }
    else {
      uint64_t v54 = *(void *)(*(void *)(v5 + 64) + 8 * v27);
    }
    uint64_t v28 = v26 - 3;
    goto LABEL_56;
  }
  if (v26 == 3)
  {
    uint64_t v28 = 0;
    uint64_t v54 = 0;
LABEL_56:
    if (v28 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v30 = 0;
    }
    else {
      uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v33 = v26 - 2;
    goto LABEL_61;
  }
  if (v26 >= 2)
  {
    uint64_t v33 = 0;
    uint64_t v30 = 0;
    uint64_t v54 = 0;
LABEL_61:
    if (v33 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v33) == 1) {
      uint64_t v29 = 0;
    }
    else {
      uint64_t v29 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
    }
    uint64_t v31 = v26 - 1;
    goto LABEL_66;
  }
  uint64_t v31 = 0;
  uint64_t v29 = 0;
  uint64_t v54 = 0;
  uint64_t v30 = 0;
  uint64_t v32 = 0;
  if (v26 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v31 <= (int)v26 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v31) != 1)
    {
      uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v31);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v32 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v35 = 0;
    uint64_t v56 = 0;
    uint64_t v34 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v32 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v56 = 0;
    if (v17) {
      goto LABEL_100;
    }
  }
  else
  {
    uint64_t v56 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v17) {
      goto LABEL_100;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_100:
    uint64_t v34 = 0;
    if (v14) {
      goto LABEL_103;
    }
    goto LABEL_101;
  }
  uint64_t v34 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_103;
  }
LABEL_101:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v35 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_104;
    }
LABEL_80:
    uint64_t v36 = 0;
    goto LABEL_81;
  }
LABEL_103:
  uint64_t v35 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_104:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v18 >= 1)
  {
    uint64_t v37 = 0;
    uint64_t v38 = (_WORD *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v39 = (unsigned __int16 *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v40 = (_WORD *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v59 >= 1)
      {
        uint64_t v41 = 0;
        uint64_t v42 = v38;
        uint64_t v43 = v39;
        uint64_t v44 = v40;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v45 = 0;
            uint64_t v46 = v42;
            uint64_t v47 = v43;
            uint64_t v48 = v44;
            do
            {
              uint64_t v49 = v10;
              uint64_t v50 = v46;
              uint64_t v51 = v47;
              uint64_t v52 = v48;
              if (v10 >= 1)
              {
                do
                {
                  int v53 = *v51;
                  uint64_t result = (v53 << 16);
                  if (COERCE_FLOAT((unsigned __int16)*v50 << 16) >= COERCE_FLOAT(v53 << 16)) {
                    LOWORD(v53) = *v50;
                  }
                  _WORD *v52 = v53;
                  uint64_t v52 = (_WORD *)((char *)v52 + v36);
                  uint64_t v51 = (unsigned __int16 *)((char *)v51 + v32);
                  uint64_t v50 = (_WORD *)((char *)v50 + v24);
                  --v49;
                }
                while (v49);
              }
              ++v45;
              uint64_t v48 = (_WORD *)((char *)v48 + v35);
              uint64_t v47 = (unsigned __int16 *)((char *)v47 + v29);
              uint64_t v46 = (_WORD *)((char *)v46 + v19);
            }
            while (v45 != v13);
          }
          ++v41;
          uint64_t v44 = (_WORD *)((char *)v44 + v34);
          uint64_t v43 = (unsigned __int16 *)((char *)v43 + v30);
          uint64_t v42 = (_WORD *)((char *)v42 + v58);
        }
        while (v41 != v59);
      }
      ++v37;
      uint64_t v40 = (_WORD *)((char *)v40 + v56);
      uint64_t v39 = (unsigned __int16 *)((char *)v39 + v54);
      uint64_t v38 = (_WORD *)((char *)v38 + v55);
    }
    while (v37 != v57);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<long long,long long,long long,(mlir::mps::arithmeticOp)16>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v59 = 1;
    char v17 = 1;
LABEL_7:
    uint64_t v18 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v59 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v17 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v17 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v58 = v18;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v19 = 0;
    uint64_t v56 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v21 = *(void *)(v4 + 16);
  uint64_t v22 = v21 - 4;
  if (v21 >= 4)
  {
    if (v22 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
      uint64_t v56 = 0;
    }
    else {
      uint64_t v56 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
    }
    uint64_t v23 = v21 - 3;
    goto LABEL_26;
  }
  if (v21 == 3)
  {
    uint64_t v23 = 0;
    uint64_t v56 = 0;
LABEL_26:
    if (v23 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v26 = v21 - 2;
    goto LABEL_31;
  }
  if (v21 < 2)
  {
    uint64_t v24 = 0;
    uint64_t v19 = 0;
    uint64_t v56 = 0;
    uint64_t result = 0;
    uint64_t v25 = 0;
    if (v21 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v26 = 0;
  uint64_t result = 0;
  uint64_t v56 = 0;
LABEL_31:
  if (v26 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v26) == 1) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = *(void *)(*(void *)(v4 + 64) + 8 * v26);
  }
  uint64_t v24 = v21 - 1;
LABEL_36:
  if (v24 > (int)v21 - 1)
  {
LABEL_37:
    uint64_t v25 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v30 = 0;
    uint64_t v55 = 0;
    uint64_t v31 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v24) != 1)
  {
    uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v25 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v27 = *(void *)(v5 + 16);
  uint64_t v28 = v27 - 4;
  if (v27 >= 4)
  {
    if (v28 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v29 = v27 - 3;
    goto LABEL_56;
  }
  if (v27 == 3)
  {
    uint64_t v29 = 0;
    uint64_t v55 = 0;
LABEL_56:
    if (v29 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v34 = v27 - 2;
    goto LABEL_61;
  }
  if (v27 >= 2)
  {
    uint64_t v34 = 0;
    uint64_t v31 = 0;
    uint64_t v55 = 0;
LABEL_61:
    if (v34 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v34) == 1) {
      uint64_t v30 = 0;
    }
    else {
      uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v34);
    }
    uint64_t v32 = v27 - 1;
    goto LABEL_66;
  }
  uint64_t v32 = 0;
  uint64_t v30 = 0;
  uint64_t v55 = 0;
  uint64_t v31 = 0;
  uint64_t v33 = 0;
  if (v27 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v32 <= (int)v27 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v32) != 1)
    {
      uint64_t v33 = *(void *)(*(void *)(v5 + 64) + 8 * v32);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v33 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v36 = 0;
    uint64_t v57 = 0;
    uint64_t v35 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v33 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v57 = 0;
    if (v17) {
      goto LABEL_100;
    }
  }
  else
  {
    uint64_t v57 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v17) {
      goto LABEL_100;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_100:
    uint64_t v35 = 0;
    if (v14) {
      goto LABEL_103;
    }
    goto LABEL_101;
  }
  uint64_t v35 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_103;
  }
LABEL_101:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_104;
    }
LABEL_80:
    uint64_t v37 = 0;
    goto LABEL_81;
  }
LABEL_103:
  uint64_t v36 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_104:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v18 >= 1)
  {
    uint64_t v38 = 0;
    uint64_t v39 = (uint64_t *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v40 = (uint64_t *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v41 = (void *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v59 >= 1)
      {
        uint64_t v42 = 0;
        uint64_t v43 = v39;
        uint64_t v44 = v40;
        uint64_t v45 = v41;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v46 = 0;
            uint64_t v47 = v43;
            uint64_t v48 = v44;
            uint64_t v49 = v45;
            do
            {
              uint64_t v50 = v10;
              uint64_t v51 = v47;
              uint64_t v52 = v48;
              int v53 = v49;
              if (v10 >= 1)
              {
                do
                {
                  uint64_t v54 = *v52;
                  if (*v51 > *v52) {
                    uint64_t v54 = *v51;
                  }
                  void *v53 = v54;
                  int v53 = (void *)((char *)v53 + v37);
                  uint64_t v52 = (uint64_t *)((char *)v52 + v33);
                  uint64_t v51 = (uint64_t *)((char *)v51 + v25);
                  --v50;
                }
                while (v50);
              }
              ++v46;
              uint64_t v49 = (void *)((char *)v49 + v36);
              uint64_t v48 = (uint64_t *)((char *)v48 + v30);
              uint64_t v47 = (uint64_t *)((char *)v47 + v19);
            }
            while (v46 != v13);
          }
          ++v42;
          uint64_t v45 = (void *)((char *)v45 + v35);
          uint64_t v44 = (uint64_t *)((char *)v44 + v31);
          uint64_t v43 = (uint64_t *)((char *)v43 + result);
        }
        while (v42 != v59);
      }
      ++v38;
      uint64_t v41 = (void *)((char *)v41 + v57);
      uint64_t v40 = (uint64_t *)((char *)v40 + v55);
      uint64_t v39 = (uint64_t *)((char *)v39 + v56);
    }
    while (v38 != v58);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<int,int,int,(mlir::mps::arithmeticOp)16>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v59 = 1;
    char v17 = 1;
LABEL_7:
    uint64_t v18 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v59 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v17 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v17 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v58 = v18;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v19 = 0;
    uint64_t v56 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v21 = *(void *)(v4 + 16);
  uint64_t v22 = v21 - 4;
  if (v21 >= 4)
  {
    if (v22 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
      uint64_t v56 = 0;
    }
    else {
      uint64_t v56 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
    }
    uint64_t v23 = v21 - 3;
    goto LABEL_26;
  }
  if (v21 == 3)
  {
    uint64_t v23 = 0;
    uint64_t v56 = 0;
LABEL_26:
    if (v23 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v26 = v21 - 2;
    goto LABEL_31;
  }
  if (v21 < 2)
  {
    uint64_t v24 = 0;
    uint64_t v19 = 0;
    uint64_t v56 = 0;
    uint64_t result = 0;
    uint64_t v25 = 0;
    if (v21 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v26 = 0;
  uint64_t result = 0;
  uint64_t v56 = 0;
LABEL_31:
  if (v26 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v26) == 1) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = *(void *)(*(void *)(v4 + 64) + 8 * v26);
  }
  uint64_t v24 = v21 - 1;
LABEL_36:
  if (v24 > (int)v21 - 1)
  {
LABEL_37:
    uint64_t v25 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v30 = 0;
    uint64_t v55 = 0;
    uint64_t v31 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v24) != 1)
  {
    uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v25 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v27 = *(void *)(v5 + 16);
  uint64_t v28 = v27 - 4;
  if (v27 >= 4)
  {
    if (v28 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v29 = v27 - 3;
    goto LABEL_56;
  }
  if (v27 == 3)
  {
    uint64_t v29 = 0;
    uint64_t v55 = 0;
LABEL_56:
    if (v29 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v34 = v27 - 2;
    goto LABEL_61;
  }
  if (v27 >= 2)
  {
    uint64_t v34 = 0;
    uint64_t v31 = 0;
    uint64_t v55 = 0;
LABEL_61:
    if (v34 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v34) == 1) {
      uint64_t v30 = 0;
    }
    else {
      uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v34);
    }
    uint64_t v32 = v27 - 1;
    goto LABEL_66;
  }
  uint64_t v32 = 0;
  uint64_t v30 = 0;
  uint64_t v55 = 0;
  uint64_t v31 = 0;
  uint64_t v33 = 0;
  if (v27 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v32 <= (int)v27 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v32) != 1)
    {
      uint64_t v33 = *(void *)(*(void *)(v5 + 64) + 8 * v32);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v33 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v36 = 0;
    uint64_t v57 = 0;
    uint64_t v35 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v33 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v57 = 0;
    if (v17) {
      goto LABEL_100;
    }
  }
  else
  {
    uint64_t v57 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v17) {
      goto LABEL_100;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_100:
    uint64_t v35 = 0;
    if (v14) {
      goto LABEL_103;
    }
    goto LABEL_101;
  }
  uint64_t v35 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_103;
  }
LABEL_101:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_104;
    }
LABEL_80:
    uint64_t v37 = 0;
    goto LABEL_81;
  }
LABEL_103:
  uint64_t v36 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_104:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v18 >= 1)
  {
    uint64_t v38 = 0;
    uint64_t v39 = (int *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v40 = (int *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v41 = (_DWORD *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v59 >= 1)
      {
        uint64_t v42 = 0;
        uint64_t v43 = v39;
        uint64_t v44 = v40;
        uint64_t v45 = v41;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v46 = 0;
            uint64_t v47 = v43;
            uint64_t v48 = v44;
            uint64_t v49 = v45;
            do
            {
              uint64_t v50 = v10;
              uint64_t v51 = v47;
              uint64_t v52 = v48;
              int v53 = v49;
              if (v10 >= 1)
              {
                do
                {
                  int v54 = *v52;
                  if (*v51 > *v52) {
                    int v54 = *v51;
                  }
                  _DWORD *v53 = v54;
                  int v53 = (_DWORD *)((char *)v53 + v37);
                  uint64_t v52 = (int *)((char *)v52 + v33);
                  uint64_t v51 = (int *)((char *)v51 + v25);
                  --v50;
                }
                while (v50);
              }
              ++v46;
              uint64_t v49 = (_DWORD *)((char *)v49 + v36);
              uint64_t v48 = (int *)((char *)v48 + v30);
              uint64_t v47 = (int *)((char *)v47 + v19);
            }
            while (v46 != v13);
          }
          ++v42;
          uint64_t v45 = (_DWORD *)((char *)v45 + v35);
          uint64_t v44 = (int *)((char *)v44 + v31);
          uint64_t v43 = (int *)((char *)v43 + result);
        }
        while (v42 != v59);
      }
      ++v38;
      uint64_t v41 = (_DWORD *)((char *)v41 + v57);
      uint64_t v40 = (int *)((char *)v40 + v55);
      uint64_t v39 = (int *)((char *)v39 + v56);
    }
    while (v38 != v58);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<short,short,short,(mlir::mps::arithmeticOp)16>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v59 = 1;
    char v17 = 1;
LABEL_7:
    uint64_t v18 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v59 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v17 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v17 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v58 = v18;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v19 = 0;
    uint64_t v56 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v21 = *(void *)(v4 + 16);
  uint64_t v22 = v21 - 4;
  if (v21 >= 4)
  {
    if (v22 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
      uint64_t v56 = 0;
    }
    else {
      uint64_t v56 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
    }
    uint64_t v23 = v21 - 3;
    goto LABEL_26;
  }
  if (v21 == 3)
  {
    uint64_t v23 = 0;
    uint64_t v56 = 0;
LABEL_26:
    if (v23 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v26 = v21 - 2;
    goto LABEL_31;
  }
  if (v21 < 2)
  {
    uint64_t v24 = 0;
    uint64_t v19 = 0;
    uint64_t v56 = 0;
    uint64_t result = 0;
    uint64_t v25 = 0;
    if (v21 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v26 = 0;
  uint64_t result = 0;
  uint64_t v56 = 0;
LABEL_31:
  if (v26 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v26) == 1) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = *(void *)(*(void *)(v4 + 64) + 8 * v26);
  }
  uint64_t v24 = v21 - 1;
LABEL_36:
  if (v24 > (int)v21 - 1)
  {
LABEL_37:
    uint64_t v25 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v30 = 0;
    uint64_t v55 = 0;
    uint64_t v31 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v24) != 1)
  {
    uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v25 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v27 = *(void *)(v5 + 16);
  uint64_t v28 = v27 - 4;
  if (v27 >= 4)
  {
    if (v28 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v29 = v27 - 3;
    goto LABEL_56;
  }
  if (v27 == 3)
  {
    uint64_t v29 = 0;
    uint64_t v55 = 0;
LABEL_56:
    if (v29 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v34 = v27 - 2;
    goto LABEL_61;
  }
  if (v27 >= 2)
  {
    uint64_t v34 = 0;
    uint64_t v31 = 0;
    uint64_t v55 = 0;
LABEL_61:
    if (v34 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v34) == 1) {
      uint64_t v30 = 0;
    }
    else {
      uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v34);
    }
    uint64_t v32 = v27 - 1;
    goto LABEL_66;
  }
  uint64_t v32 = 0;
  uint64_t v30 = 0;
  uint64_t v55 = 0;
  uint64_t v31 = 0;
  uint64_t v33 = 0;
  if (v27 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v32 <= (int)v27 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v32) != 1)
    {
      uint64_t v33 = *(void *)(*(void *)(v5 + 64) + 8 * v32);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v33 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v36 = 0;
    uint64_t v57 = 0;
    uint64_t v35 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v33 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v57 = 0;
    if (v17) {
      goto LABEL_100;
    }
  }
  else
  {
    uint64_t v57 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v17) {
      goto LABEL_100;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_100:
    uint64_t v35 = 0;
    if (v14) {
      goto LABEL_103;
    }
    goto LABEL_101;
  }
  uint64_t v35 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_103;
  }
LABEL_101:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_104;
    }
LABEL_80:
    uint64_t v37 = 0;
    goto LABEL_81;
  }
LABEL_103:
  uint64_t v36 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_104:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v18 >= 1)
  {
    uint64_t v38 = 0;
    uint64_t v39 = (__int16 *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v40 = (__int16 *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v41 = (_WORD *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v59 >= 1)
      {
        uint64_t v42 = 0;
        uint64_t v43 = v39;
        uint64_t v44 = v40;
        uint64_t v45 = v41;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v46 = 0;
            uint64_t v47 = v43;
            uint64_t v48 = v44;
            uint64_t v49 = v45;
            do
            {
              uint64_t v50 = v10;
              uint64_t v51 = v47;
              uint64_t v52 = v48;
              int v53 = v49;
              if (v10 >= 1)
              {
                do
                {
                  int v54 = *v52;
                  if (*v51 > v54) {
                    LOWORD(v54) = *v51;
                  }
                  _WORD *v53 = v54;
                  int v53 = (_WORD *)((char *)v53 + v37);
                  uint64_t v52 = (__int16 *)((char *)v52 + v33);
                  uint64_t v51 = (__int16 *)((char *)v51 + v25);
                  --v50;
                }
                while (v50);
              }
              ++v46;
              uint64_t v49 = (_WORD *)((char *)v49 + v36);
              uint64_t v48 = (__int16 *)((char *)v48 + v30);
              uint64_t v47 = (__int16 *)((char *)v47 + v19);
            }
            while (v46 != v13);
          }
          ++v42;
          uint64_t v45 = (_WORD *)((char *)v45 + v35);
          uint64_t v44 = (__int16 *)((char *)v44 + v31);
          uint64_t v43 = (__int16 *)((char *)v43 + result);
        }
        while (v42 != v59);
      }
      ++v38;
      uint64_t v41 = (_WORD *)((char *)v41 + v57);
      uint64_t v40 = (__int16 *)((char *)v40 + v55);
      uint64_t v39 = (__int16 *)((char *)v39 + v56);
    }
    while (v38 != v58);
  }
  return result;
}

uint64_t mlir::mps::arithmeticBinaryTileBaseKernel<signed char,signed char,signed char,(mlir::mps::arithmeticOp)16>(uint64_t **a1, uint64_t **a2, uint64_t a3, void **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a2;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    char v16 = 1;
    uint64_t v59 = 1;
    char v17 = 1;
LABEL_7:
    uint64_t v18 = 1;
    goto LABEL_8;
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v59 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v14 = 0;
    uint64_t v12 = 0;
    char v17 = 0;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
  char v14 = 0;
  char v17 = 0;
  uint64_t v15 = v7 - 4;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 4));
LABEL_8:
  uint64_t v58 = v18;
  if (*(unsigned char *)(v4 + 58))
  {
    uint64_t v19 = 0;
    uint64_t v56 = 0;
    uint64_t result = 0;
    goto LABEL_37;
  }
  uint64_t v21 = *(void *)(v4 + 16);
  uint64_t v22 = v21 - 4;
  if (v21 >= 4)
  {
    if (v22 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v22) == 1) {
      uint64_t v56 = 0;
    }
    else {
      uint64_t v56 = *(void *)(*(void *)(v4 + 64) + 8 * v22);
    }
    uint64_t v23 = v21 - 3;
    goto LABEL_26;
  }
  if (v21 == 3)
  {
    uint64_t v23 = 0;
    uint64_t v56 = 0;
LABEL_26:
    if (v23 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v23) == 1) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *(void *)(*(void *)(v4 + 64) + 8 * v23);
    }
    uint64_t v26 = v21 - 2;
    goto LABEL_31;
  }
  if (v21 < 2)
  {
    uint64_t v24 = 0;
    uint64_t v19 = 0;
    uint64_t v56 = 0;
    uint64_t result = 0;
    uint64_t v25 = 0;
    if (v21 != 1) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  uint64_t v26 = 0;
  uint64_t result = 0;
  uint64_t v56 = 0;
LABEL_31:
  if (v26 > (int)v21 - 1 || *(void *)(*(void *)(v4 + 24) + 8 * v26) == 1) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = *(void *)(*(void *)(v4 + 64) + 8 * v26);
  }
  uint64_t v24 = v21 - 1;
LABEL_36:
  if (v24 > (int)v21 - 1)
  {
LABEL_37:
    uint64_t v25 = 0;
    if (!*(unsigned char *)(v5 + 58)) {
      goto LABEL_38;
    }
LABEL_47:
    uint64_t v30 = 0;
    uint64_t v55 = 0;
    uint64_t v31 = 0;
    goto LABEL_67;
  }
  if (*(void *)(*(void *)(v4 + 24) + 8 * v24) != 1)
  {
    uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
    if (*(unsigned char *)(v5 + 58)) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  uint64_t v25 = 0;
LABEL_46:
  if (*(unsigned char *)(v5 + 58)) {
    goto LABEL_47;
  }
LABEL_38:
  uint64_t v27 = *(void *)(v5 + 16);
  uint64_t v28 = v27 - 4;
  if (v27 >= 4)
  {
    if (v28 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
      uint64_t v55 = 0;
    }
    else {
      uint64_t v55 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
    }
    uint64_t v29 = v27 - 3;
    goto LABEL_56;
  }
  if (v27 == 3)
  {
    uint64_t v29 = 0;
    uint64_t v55 = 0;
LABEL_56:
    if (v29 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
    }
    uint64_t v34 = v27 - 2;
    goto LABEL_61;
  }
  if (v27 >= 2)
  {
    uint64_t v34 = 0;
    uint64_t v31 = 0;
    uint64_t v55 = 0;
LABEL_61:
    if (v34 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v34) == 1) {
      uint64_t v30 = 0;
    }
    else {
      uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v34);
    }
    uint64_t v32 = v27 - 1;
    goto LABEL_66;
  }
  uint64_t v32 = 0;
  uint64_t v30 = 0;
  uint64_t v55 = 0;
  uint64_t v31 = 0;
  uint64_t v33 = 0;
  if (v27 != 1) {
    goto LABEL_78;
  }
LABEL_66:
  if (v32 <= (int)v27 - 1)
  {
    if (*(void *)(*(void *)(v5 + 24) + 8 * v32) != 1)
    {
      uint64_t v33 = *(void *)(*(void *)(v5 + 64) + 8 * v32);
      if (!*(unsigned char *)(v6 + 58)) {
        goto LABEL_68;
      }
      goto LABEL_79;
    }
    uint64_t v33 = 0;
LABEL_78:
    if (!*(unsigned char *)(v6 + 58)) {
      goto LABEL_68;
    }
LABEL_79:
    uint64_t v36 = 0;
    uint64_t v57 = 0;
    uint64_t v35 = 0;
    goto LABEL_80;
  }
LABEL_67:
  uint64_t v33 = 0;
  if (*(unsigned char *)(v6 + 58)) {
    goto LABEL_79;
  }
LABEL_68:
  if ((v16 & 1) != 0 || v15 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v15) == 1)
  {
    uint64_t v57 = 0;
    if (v17) {
      goto LABEL_100;
    }
  }
  else
  {
    uint64_t v57 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
    if (v17) {
      goto LABEL_100;
    }
  }
  if (v12 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
  {
LABEL_100:
    uint64_t v35 = 0;
    if (v14) {
      goto LABEL_103;
    }
    goto LABEL_101;
  }
  uint64_t v35 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
  if (v14) {
    goto LABEL_103;
  }
LABEL_101:
  if (v11 <= (int)v7 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v11) != 1)
  {
    uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
    if (v7 >= 1) {
      goto LABEL_104;
    }
LABEL_80:
    uint64_t v37 = 0;
    goto LABEL_81;
  }
LABEL_103:
  uint64_t v36 = 0;
  if (v7 < 1) {
    goto LABEL_80;
  }
LABEL_104:
  if (v8 > (int)v7 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
    goto LABEL_80;
  }
  uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_81:
  if (v18 >= 1)
  {
    uint64_t v38 = 0;
    uint64_t v39 = (unsigned char *)(**(void **)a3 + *(void *)(v4 + 40));
    uint64_t v40 = (char *)(*(void *)(*(void *)a3 + 8) + *(void *)(v5 + 40));
    uint64_t v41 = (unsigned char *)(**a4 + *(void *)(v6 + 40));
    do
    {
      if (v59 >= 1)
      {
        uint64_t v42 = 0;
        uint64_t v43 = v39;
        uint64_t v44 = v40;
        uint64_t v45 = v41;
        do
        {
          if (v13 >= 1)
          {
            uint64_t v46 = 0;
            uint64_t v47 = v43;
            uint64_t v48 = v44;
            uint64_t v49 = v45;
            do
            {
              uint64_t v50 = v10;
              uint64_t v51 = v47;
              uint64_t v52 = v48;
              int v53 = v49;
              if (v10 >= 1)
              {
                do
                {
                  int v54 = *v52;
                  if ((char)*v51 > v54) {
                    LOBYTE(v54) = *v51;
                  }
                  unsigned char *v53 = v54;
                  v53 += v37;
                  v52 += v33;
                  v51 += v25;
                  --v50;
                }
                while (v50);
              }
              ++v46;
              v49 += v36;
              v48 += v30;
              v47 += v19;
            }
            while (v46 != v13);
          }
          ++v42;
          v45 += v35;
          v44 += v31;
          v43 += result;
        }
        while (v42 != v59);
      }
      ++v38;
      v41 += v57;
      v40 += v55;
      v39 += v56;
    }
    while (v38 != v58);
  }
  return result;
}

void mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)6>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4, double a5)
{
  uint64_t v5 = **a1;
  uint64_t v6 = **a2;
  uint64_t v47 = **a4;
  uint64_t v48 = **a3;
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7 < 1)
  {
    uint64_t v49 = 1;
    uint64_t v55 = 1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v8 = *(void *)(v6 + 24);
  uint64_t v9 = v8 + 8 * v7;
  uint64_t v10 = *(void *)(v9 - 8);
  if (v7 == 1)
  {
    uint64_t v49 = 1;
    uint64_t v55 = 1;
LABEL_7:
    uint64_t v53 = 1;
LABEL_8:
    uint64_t v50 = 0;
    *(float *)&a5 = a5;
    float32x2_t v11 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)&a5, 0);
    while (1)
    {
      if (*(unsigned char *)(v5 + 58)
        || (v12 = *(void *)(v5 + 16), uint64_t v13 = v12 - 4, v12 < 4)
        || v13 > (int)v12 - 1
        || *(void *)(*(void *)(v5 + 24) + 8 * v13) == 1)
      {
        uint64_t v14 = 0;
        if (*(unsigned char *)(v6 + 58)) {
          goto LABEL_20;
        }
      }
      else
      {
        uint64_t v14 = *(void *)(*(void *)(v5 + 64) + 8 * v13);
        if (*(unsigned char *)(v6 + 58)) {
          goto LABEL_20;
        }
      }
      uint64_t v15 = *(void *)(v6 + 16);
      uint64_t v16 = v15 - 4;
      if (v15 >= 4 && v16 <= (int)v15 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v16) != 1)
      {
        uint64_t v17 = *(void *)(*(void *)(v6 + 64) + 8 * v16);
        goto LABEL_21;
      }
LABEL_20:
      uint64_t v17 = 0;
LABEL_21:
      if (v53 >= 1)
      {
        uint64_t v54 = 0;
        uint64_t v52 = v48 + v14 * v50;
        uint64_t v51 = v47 + v17 * v50;
        do
        {
          if (*(unsigned char *)(v5 + 58)
            || (v18 = *(void *)(v5 + 16), uint64_t v19 = v18 - 3, v18 < 3)
            || v19 > (int)v18 - 1
            || *(void *)(*(void *)(v5 + 24) + 8 * v19) == 1)
          {
            uint64_t v20 = 0;
            if (*(unsigned char *)(v6 + 58)) {
              goto LABEL_34;
            }
          }
          else
          {
            uint64_t v20 = *(void *)(*(void *)(v5 + 64) + 8 * v19);
            if (*(unsigned char *)(v6 + 58)) {
              goto LABEL_34;
            }
          }
          uint64_t v21 = *(void *)(v6 + 16);
          uint64_t v22 = v21 - 3;
          if (v21 >= 3 && v22 <= (int)v21 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v22) != 1)
          {
            uint64_t v23 = *(void *)(*(void *)(v6 + 64) + 8 * v22);
            goto LABEL_35;
          }
LABEL_34:
          uint64_t v23 = 0;
LABEL_35:
          if (v55 >= 1)
          {
            uint64_t v24 = 0;
            uint64_t v25 = v52 + v20 * v54;
            uint64_t v26 = v51 + v23 * v54;
            while (1)
            {
              if (*(unsigned char *)(v5 + 58)
                || (v27 = *(void *)(v5 + 16), uint64_t v28 = v27 - 2, v27 < 2)
                || v28 > (int)v27 - 1
                || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1)
              {
                uint64_t v29 = 0;
                if (*(unsigned char *)(v6 + 58)) {
                  break;
                }
              }
              else
              {
                uint64_t v29 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
                if (*(unsigned char *)(v6 + 58)) {
                  break;
                }
              }
              uint64_t v30 = *(void *)(v6 + 16);
              uint64_t v31 = v30 - 2;
              if (v30 < 2 || v31 > (int)v30 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v31) == 1) {
                break;
              }
              uint64_t v32 = *(void *)(*(void *)(v6 + 64) + 8 * v31);
              if (v10 >= 1) {
                goto LABEL_50;
              }
LABEL_37:
              if (++v24 == v55) {
                goto LABEL_23;
              }
            }
            uint64_t v32 = 0;
            if (v10 < 1) {
              goto LABEL_37;
            }
LABEL_50:
            uint64_t v33 = 0;
            uint64_t v34 = v25 + v29 * v24;
            uint64_t v35 = v26 + v32 * v24;
            while (2)
            {
              if (!*(unsigned char *)(v5 + 58))
              {
                uint64_t v42 = *(void *)(v5 + 16);
                uint64_t v43 = v42 - 1;
                if (v42 >= 1 && v43 <= (int)v42 - 1 && *(void *)(*(void *)(v5 + 24) + 8 * v43) != 1)
                {
                  uint64_t v36 = *(void *)(*(void *)(v5 + 64) + 8 * v43);
                  if (!*(unsigned char *)(v6 + 58)) {
                    goto LABEL_60;
                  }
                  goto LABEL_53;
                }
              }
              uint64_t v36 = 0;
              if (*(unsigned char *)(v6 + 58)) {
                goto LABEL_53;
              }
LABEL_60:
              uint64_t v44 = *(void *)(v6 + 16);
              uint64_t v45 = v44 - 1;
              if (v44 < 1 || v45 > (int)v44 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v45) == 1) {
LABEL_53:
              }
                uint64_t v37 = 0;
              else {
                uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v45);
              }
              uint64_t v38 = v35 + v37 * v33 + *(void *)(v6 + 40);
              float32x2_t v57 = vadd_f32(*(float32x2_t *)(v34 + v36 * v33 + *(void *)(v5 + 40)), v11);
              float v39 = std::sqrt[abi:nn180100]<float>((float *)&v57);
              float32x2_t v57 = (float32x2_t)1065353216;
              v56[0] = v39;
              v56[1] = v40;
              *(float *)uint64_t v38 = std::operator/[abi:nn180100]<float>((float *)&v57, v56);
              *(_DWORD *)(v38 + 4) = v41;
              if (v10 == ++v33) {
                goto LABEL_37;
              }
              continue;
            }
          }
LABEL_23:
          ++v54;
        }
        while (v54 != v53);
      }
      if (++v50 == v49) {
        return;
      }
    }
  }
  uint64_t v55 = *(void *)(v9 - 16);
  if ((unint64_t)v7 < 3)
  {
    uint64_t v49 = 1;
    goto LABEL_7;
  }
  uint64_t v46 = v8 + 8 * v7;
  uint64_t v53 = *(void *)(v46 - 24);
  if (v7 == 3)
  {
    uint64_t v49 = 1;
    goto LABEL_8;
  }
  uint64_t v49 = *(void *)(v46 - 32);
  if (v49 >= 1) {
    goto LABEL_8;
  }
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<float,float,(mlir::mps::arithmeticOp)6>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4, double a5)
{
  uint64_t v5 = **a1;
  uint64_t v6 = **a2;
  uint64_t v58 = **a4;
  uint64_t v59 = **a3;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    uint64_t result = 1;
    char v17 = 1;
    uint64_t v18 = 1;
LABEL_7:
    char v19 = 1;
LABEL_8:
    uint64_t v20 = 0;
    BOOL v21 = v7 < 1;
    int v22 = *(unsigned __int8 *)(v5 + 58);
    int v23 = v7 - 1;
    if (*(unsigned char *)(v6 + 58)) {
      char v19 = 1;
    }
    uint64_t v24 = v23;
    if (*(unsigned char *)(v6 + 58))
    {
      char v17 = 1;
      char v25 = 1;
    }
    else
    {
      char v25 = v14;
    }
    if (*(unsigned char *)(v6 + 58)) {
      BOOL v21 = 1;
    }
    if (v15 > v23) {
      char v26 = 1;
    }
    else {
      char v26 = v19;
    }
    if (v12 > v24) {
      char v27 = 1;
    }
    else {
      char v27 = v17;
    }
    if (v11 > v24) {
      char v28 = 1;
    }
    else {
      char v28 = v25;
    }
    float v29 = a5;
    char v30 = v8 > v24 || v21;
    while (1)
    {
      if (v22
        || (v31 = *(void *)(v5 + 16), uint64_t v32 = v31 - 4, v31 < 4)
        || v32 > (int)v31 - 1
        || *(void *)(*(void *)(v5 + 24) + 8 * v32) == 1)
      {
        uint64_t v33 = 0;
        if (v26) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v33 = *(void *)(*(void *)(v5 + 64) + 8 * v32);
        if (v26) {
          goto LABEL_34;
        }
      }
      if (*(void *)(*(void *)(v6 + 24) + 8 * v15) != 1)
      {
        uint64_t v34 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
        if (v18 < 1) {
          goto LABEL_27;
        }
LABEL_37:
        uint64_t v35 = 0;
        uint64_t v36 = v59 + v33 * v20;
        uint64_t v37 = v58 + v34 * v20;
        while (2)
        {
          if (v22
            || (uint64_t v38 = *(void *)(v5 + 16), v39 = v38 - 3, v38 < 3)
            || v39 > (int)v38 - 1
            || *(void *)(*(void *)(v5 + 24) + 8 * v39) == 1)
          {
            uint64_t v40 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_44;
            }
            goto LABEL_45;
          }
          uint64_t v40 = *(void *)(*(void *)(v5 + 64) + 8 * v39);
          if (v27) {
            goto LABEL_45;
          }
LABEL_44:
          if (*(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
          {
LABEL_45:
            uint64_t v41 = 0;
            if (v13 >= 1) {
              break;
            }
            goto LABEL_38;
          }
          uint64_t v41 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
          if (v13 < 1)
          {
LABEL_38:
            if (++v35 == v18) {
              goto LABEL_27;
            }
            continue;
          }
          break;
        }
        uint64_t v42 = 0;
        uint64_t v43 = v36 + v40 * v35;
        uint64_t v44 = v37 + v41 * v35;
        while (2)
        {
          if (v22
            || (v45 = *(void *)(v5 + 16), uint64_t v46 = v45 - 2, v45 < 2)
            || v46 > (int)v45 - 1
            || *(void *)(*(void *)(v5 + 24) + 8 * v46) == 1)
          {
            uint64_t v47 = 0;
            if ((v28 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_56;
          }
          uint64_t v47 = *(void *)(*(void *)(v5 + 64) + 8 * v46);
          if (v28) {
            goto LABEL_56;
          }
LABEL_55:
          if (*(void *)(*(void *)(v6 + 24) + 8 * v11) == 1)
          {
LABEL_56:
            uint64_t v48 = 0;
            if (v10 >= 1) {
              break;
            }
            goto LABEL_49;
          }
          uint64_t v48 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
          if (v10 < 1)
          {
LABEL_49:
            if (++v42 == v13) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        uint64_t v49 = 0;
        uint64_t v50 = v43 + v47 * v42;
        uint64_t v51 = *(void *)(v5 + 40);
        uint64_t v52 = *(void *)(v6 + 40);
        uint64_t v53 = v44 + v48 * v42;
        while (2)
        {
          if (v22
            || (uint64_t v56 = *(void *)(v5 + 16), v57 = v56 - 1, v56 < 1)
            || v57 > (int)v56 - 1
            || *(void *)(*(void *)(v5 + 24) + 8 * v57) == 1)
          {
            uint64_t v55 = 0;
            if ((v30 & 1) == 0) {
              goto LABEL_64;
            }
          }
          else
          {
            uint64_t v55 = *(void *)(*(void *)(v5 + 64) + 8 * v57);
            if ((v30 & 1) == 0)
            {
LABEL_64:
              if (*(void *)(*(void *)(v6 + 24) + 8 * v8) != 1)
              {
                uint64_t v54 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_61:
                *(float *)(v53 + v54 * v49 + v52) = 1.0 / sqrtf(*(float *)(v50 + v55 * v49 + v51) + v29);
                if (v10 == ++v49) {
                  goto LABEL_49;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v54 = 0;
        goto LABEL_61;
      }
LABEL_34:
      uint64_t v34 = 0;
      if (v18 >= 1) {
        goto LABEL_37;
      }
LABEL_27:
      if (++v20 == result) {
        return result;
      }
    }
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v17 = 0;
    uint64_t v12 = 0;
    char v14 = 0;
    uint64_t result = 1;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    goto LABEL_7;
  }
  uint64_t v15 = v7 - 4;
  uint64_t result = *(void *)(v9 + 8 * (v7 - 4));
  if (result >= 1)
  {
    char v17 = 0;
    char v14 = 0;
    char v19 = 0;
    goto LABEL_8;
  }
  return result;
}

void mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)6>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4, double _D0)
{
  uint64_t v5 = **a1;
  uint64_t v6 = **a2;
  uint64_t v54 = **a4;
  uint64_t v55 = **a3;
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7 < 1)
  {
    uint64_t v56 = 1;
    uint64_t v62 = 1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v8 = *(void *)(v6 + 24);
  uint64_t v9 = v8 + 8 * v7;
  uint64_t v10 = *(void *)(v9 - 8);
  if (v7 == 1)
  {
    uint64_t v56 = 1;
    uint64_t v62 = 1;
LABEL_7:
    uint64_t v60 = 1;
LABEL_8:
    uint64_t v57 = 0;
    *(float *)&_D0 = _D0;
    __asm { FCVT            H0, S0 }
    float16x4_t v15 = (float16x4_t)vdup_lane_s16(*(int16x4_t *)&_D0, 0);
    while (1)
    {
      if (*(unsigned char *)(v5 + 58)
        || (v16 = *(void *)(v5 + 16), uint64_t v17 = v16 - 4, v16 < 4)
        || v17 > (int)v16 - 1
        || *(void *)(*(void *)(v5 + 24) + 8 * v17) == 1)
      {
        uint64_t v18 = 0;
        if (*(unsigned char *)(v6 + 58)) {
          goto LABEL_20;
        }
      }
      else
      {
        uint64_t v18 = *(void *)(*(void *)(v5 + 64) + 8 * v17);
        if (*(unsigned char *)(v6 + 58)) {
          goto LABEL_20;
        }
      }
      uint64_t v19 = *(void *)(v6 + 16);
      uint64_t v20 = v19 - 4;
      if (v19 >= 4 && v20 <= (int)v19 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v20) != 1)
      {
        uint64_t v21 = *(void *)(*(void *)(v6 + 64) + 8 * v20);
        goto LABEL_21;
      }
LABEL_20:
      uint64_t v21 = 0;
LABEL_21:
      if (v60 >= 1)
      {
        uint64_t v61 = 0;
        uint64_t v59 = v55 + v18 * v57;
        uint64_t v58 = v54 + v21 * v57;
        do
        {
          if (*(unsigned char *)(v5 + 58)
            || (uint64_t v22 = *(void *)(v5 + 16), v23 = v22 - 3, v22 < 3)
            || v23 > (int)v22 - 1
            || *(void *)(*(void *)(v5 + 24) + 8 * v23) == 1)
          {
            uint64_t v24 = 0;
            if (*(unsigned char *)(v6 + 58)) {
              goto LABEL_34;
            }
          }
          else
          {
            uint64_t v24 = *(void *)(*(void *)(v5 + 64) + 8 * v23);
            if (*(unsigned char *)(v6 + 58)) {
              goto LABEL_34;
            }
          }
          uint64_t v25 = *(void *)(v6 + 16);
          uint64_t v26 = v25 - 3;
          if (v25 >= 3 && v26 <= (int)v25 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v26) != 1)
          {
            uint64_t v27 = *(void *)(*(void *)(v6 + 64) + 8 * v26);
            goto LABEL_35;
          }
LABEL_34:
          uint64_t v27 = 0;
LABEL_35:
          if (v62 >= 1)
          {
            uint64_t v28 = 0;
            uint64_t v29 = v59 + v24 * v61;
            uint64_t v30 = v58 + v27 * v61;
            while (1)
            {
              if (*(unsigned char *)(v5 + 58)
                || (v31 = *(void *)(v5 + 16), uint64_t v32 = v31 - 2, v31 < 2)
                || v32 > (int)v31 - 1
                || *(void *)(*(void *)(v5 + 24) + 8 * v32) == 1)
              {
                uint64_t v33 = 0;
                if (*(unsigned char *)(v6 + 58)) {
                  break;
                }
              }
              else
              {
                uint64_t v33 = *(void *)(*(void *)(v5 + 64) + 8 * v32);
                if (*(unsigned char *)(v6 + 58)) {
                  break;
                }
              }
              uint64_t v34 = *(void *)(v6 + 16);
              uint64_t v35 = v34 - 2;
              if (v34 < 2 || v35 > (int)v34 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v35) == 1) {
                break;
              }
              uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v35);
              if (v10 >= 1) {
                goto LABEL_50;
              }
LABEL_37:
              if (++v28 == v62) {
                goto LABEL_23;
              }
            }
            uint64_t v36 = 0;
            if (v10 < 1) {
              goto LABEL_37;
            }
LABEL_50:
            uint64_t v37 = 0;
            uint64_t v38 = v29 + v33 * v28;
            uint64_t v39 = v30 + v36 * v28;
            while (2)
            {
              if (!*(unsigned char *)(v5 + 58))
              {
                uint64_t v49 = *(void *)(v5 + 16);
                uint64_t v50 = v49 - 1;
                if (v49 >= 1 && v50 <= (int)v49 - 1 && *(void *)(*(void *)(v5 + 24) + 8 * v50) != 1)
                {
                  uint64_t v40 = *(void *)(*(void *)(v5 + 64) + 8 * v50);
                  if (!*(unsigned char *)(v6 + 58)) {
                    goto LABEL_60;
                  }
                  goto LABEL_53;
                }
              }
              uint64_t v40 = 0;
              if (*(unsigned char *)(v6 + 58)) {
                goto LABEL_53;
              }
LABEL_60:
              uint64_t v51 = *(void *)(v6 + 16);
              uint64_t v52 = v51 - 1;
              if (v51 < 1 || v52 > (int)v51 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v52) == 1) {
LABEL_53:
              }
                uint64_t v41 = 0;
              else {
                uint64_t v41 = *(void *)(*(void *)(v6 + 64) + 8 * v52);
              }
              uint64_t v42 = (_DWORD *)(v39 + v41 * v37 + *(void *)(v6 + 40));
              LODWORD(_D0) = *(_DWORD *)(v38 + v40 * v37 + *(void *)(v5 + 40));
              unint64_t v64 = vcvtq_f32_f16(vadd_f16(*(float16x4_t *)&_D0, v15)).u64[0];
              _S0 = std::sqrt[abi:nn180100]<float>((float *)&v64);
              __asm
              {
                FCVT            H0, S0
                FCVT            H1, S1
              }
              unint64_t v64 = 1065353216;
              __asm
              {
                FCVT            S0, H0
                FCVT            S1, H1
              }
              v63[0] = _S0;
              v63[1] = _S1;
              *(float *)&_D0 = std::operator/[abi:nn180100]<float>((float *)&v64, v63);
              __asm
              {
                FCVT            H0, S0
                FCVT            H1, S1
                FCVT            S0, H0
                FCVT            S1, H1
              }
              *uint64_t v42 = LODWORD(_D0);
              v42[1] = _S1;
              if (v10 == ++v37) {
                goto LABEL_37;
              }
              continue;
            }
          }
LABEL_23:
          ++v61;
        }
        while (v61 != v60);
      }
      if (++v57 == v56) {
        return;
      }
    }
  }
  uint64_t v62 = *(void *)(v9 - 16);
  if ((unint64_t)v7 < 3)
  {
    uint64_t v56 = 1;
    goto LABEL_7;
  }
  uint64_t v53 = v8 + 8 * v7;
  uint64_t v60 = *(void *)(v53 - 24);
  if (v7 == 3)
  {
    uint64_t v56 = 1;
    goto LABEL_8;
  }
  uint64_t v56 = *(void *)(v53 - 32);
  if (v56 >= 1) {
    goto LABEL_8;
  }
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<half,float,(mlir::mps::arithmeticOp)6>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4, double _D0)
{
  uint64_t v5 = **a1;
  uint64_t v6 = **a2;
  uint64_t v65 = **a4;
  uint64_t v66 = **a3;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    uint64_t result = 1;
    char v17 = 1;
    uint64_t v18 = 1;
LABEL_7:
    char v19 = 1;
LABEL_8:
    uint64_t v20 = 0;
    BOOL v21 = v7 < 1;
    int v22 = *(unsigned __int8 *)(v5 + 58);
    int v23 = v7 - 1;
    if (*(unsigned char *)(v6 + 58)) {
      char v19 = 1;
    }
    uint64_t v24 = v23;
    if (*(unsigned char *)(v6 + 58))
    {
      char v17 = 1;
      char v25 = 1;
    }
    else
    {
      char v25 = v14;
    }
    if (*(unsigned char *)(v6 + 58)) {
      BOOL v21 = 1;
    }
    if (v15 > v23) {
      char v26 = 1;
    }
    else {
      char v26 = v19;
    }
    if (v12 > v24) {
      char v27 = 1;
    }
    else {
      char v27 = v17;
    }
    if (v11 > v24) {
      char v28 = 1;
    }
    else {
      char v28 = v25;
    }
    __asm
    {
      FCVT            H0, D0
      FCVT            S0, H0
    }
    if (_NF ^ _VF | _ZF) {
      char v35 = v21;
    }
    else {
      char v35 = 1;
    }
    while (1)
    {
      if (v22
        || (uint64_t v36 = *(void *)(v5 + 16), v37 = v36 - 4, v36 < 4)
        || v37 > (int)v36 - 1
        || *(void *)(*(void *)(v5 + 24) + 8 * v37) == 1)
      {
        uint64_t v38 = 0;
        if (v26) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v38 = *(void *)(*(void *)(v5 + 64) + 8 * v37);
        if (v26) {
          goto LABEL_34;
        }
      }
      if (*(void *)(*(void *)(v6 + 24) + 8 * v15) != 1)
      {
        uint64_t v39 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
        if (v18 < 1) {
          goto LABEL_27;
        }
LABEL_37:
        uint64_t v40 = 0;
        uint64_t v41 = v66 + v38 * v20;
        uint64_t v42 = v65 + v39 * v20;
        while (2)
        {
          if (v22
            || (v43 = *(void *)(v5 + 16), uint64_t v44 = v43 - 3, v43 < 3)
            || v44 > (int)v43 - 1
            || *(void *)(*(void *)(v5 + 24) + 8 * v44) == 1)
          {
            uint64_t v45 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_44;
            }
            goto LABEL_45;
          }
          uint64_t v45 = *(void *)(*(void *)(v5 + 64) + 8 * v44);
          if (v27) {
            goto LABEL_45;
          }
LABEL_44:
          if (*(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
          {
LABEL_45:
            uint64_t v46 = 0;
            if (v13 >= 1) {
              break;
            }
            goto LABEL_38;
          }
          uint64_t v46 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
          if (v13 < 1)
          {
LABEL_38:
            if (++v40 == v18) {
              goto LABEL_27;
            }
            continue;
          }
          break;
        }
        uint64_t v47 = 0;
        uint64_t v48 = v41 + v45 * v40;
        uint64_t v49 = v42 + v46 * v40;
        while (2)
        {
          if (v22
            || (uint64_t v50 = *(void *)(v5 + 16), v51 = v50 - 2, v50 < 2)
            || v51 > (int)v50 - 1
            || *(void *)(*(void *)(v5 + 24) + 8 * v51) == 1)
          {
            uint64_t v52 = 0;
            if ((v28 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_56;
          }
          uint64_t v52 = *(void *)(*(void *)(v5 + 64) + 8 * v51);
          if (v28) {
            goto LABEL_56;
          }
LABEL_55:
          if (*(void *)(*(void *)(v6 + 24) + 8 * v11) == 1)
          {
LABEL_56:
            uint64_t v53 = 0;
            if (v10 >= 1) {
              break;
            }
            goto LABEL_49;
          }
          uint64_t v53 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
          if (v10 < 1)
          {
LABEL_49:
            if (++v47 == v13) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        uint64_t v54 = 0;
        uint64_t v55 = v48 + v52 * v47;
        uint64_t v56 = *(void *)(v5 + 40);
        uint64_t v57 = *(void *)(v6 + 40);
        uint64_t v58 = v49 + v53 * v47;
        while (2)
        {
          if (v22
            || (v63 = *(void *)(v5 + 16), uint64_t v64 = v63 - 1, v63 < 1)
            || v64 > (int)v63 - 1
            || *(void *)(*(void *)(v5 + 24) + 8 * v64) == 1)
          {
            uint64_t v62 = 0;
            if ((v35 & 1) == 0) {
              goto LABEL_64;
            }
          }
          else
          {
            uint64_t v62 = *(void *)(*(void *)(v5 + 64) + 8 * v64);
            if ((v35 & 1) == 0)
            {
LABEL_64:
              if (*(void *)(*(void *)(v6 + 24) + 8 * v8) != 1)
              {
                uint64_t v59 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_61:
                _H2 = *(_WORD *)(v55 + v62 * v54 + v56);
                __asm { FCVT            S2, H2 }
                *(float *)(v58 + v59 * v54++ + v57) = 1.0 / sqrtf(_S0 + _S2);
                if (v10 == v54) {
                  goto LABEL_49;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v59 = 0;
        goto LABEL_61;
      }
LABEL_34:
      uint64_t v39 = 0;
      if (v18 >= 1) {
        goto LABEL_37;
      }
LABEL_27:
      if (++v20 == result) {
        return result;
      }
    }
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v17 = 0;
    uint64_t v12 = 0;
    char v14 = 0;
    uint64_t result = 1;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    goto LABEL_7;
  }
  uint64_t v15 = v7 - 4;
  uint64_t result = *(void *)(v9 + 8 * (v7 - 4));
  if (result >= 1)
  {
    char v17 = 0;
    char v14 = 0;
    char v19 = 0;
    goto LABEL_8;
  }
  return result;
}

void mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<half,(void *)0>,(mlir::mps::arithmeticOp)6>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4, double _D0)
{
  uint64_t v5 = **a1;
  uint64_t v6 = **a2;
  uint64_t v53 = **a4;
  uint64_t v54 = **a3;
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7 < 1)
  {
    uint64_t v55 = 1;
    uint64_t v61 = 1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v8 = *(void *)(v6 + 24);
  uint64_t v9 = v8 + 8 * v7;
  uint64_t v10 = *(void *)(v9 - 8);
  if (v7 == 1)
  {
    uint64_t v55 = 1;
    uint64_t v61 = 1;
LABEL_7:
    uint64_t v59 = 1;
LABEL_8:
    uint64_t v56 = 0;
    *(float *)&_D0 = _D0;
    __asm { FCVT            H0, S0 }
    float16x4_t v15 = (float16x4_t)vdup_lane_s16(*(int16x4_t *)&_D0, 0);
    while (1)
    {
      if (*(unsigned char *)(v5 + 58)
        || (v16 = *(void *)(v5 + 16), uint64_t v17 = v16 - 4, v16 < 4)
        || v17 > (int)v16 - 1
        || *(void *)(*(void *)(v5 + 24) + 8 * v17) == 1)
      {
        uint64_t v18 = 0;
        if (*(unsigned char *)(v6 + 58)) {
          goto LABEL_20;
        }
      }
      else
      {
        uint64_t v18 = *(void *)(*(void *)(v5 + 64) + 8 * v17);
        if (*(unsigned char *)(v6 + 58)) {
          goto LABEL_20;
        }
      }
      uint64_t v19 = *(void *)(v6 + 16);
      uint64_t v20 = v19 - 4;
      if (v19 >= 4 && v20 <= (int)v19 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v20) != 1)
      {
        uint64_t v21 = *(void *)(*(void *)(v6 + 64) + 8 * v20);
        goto LABEL_21;
      }
LABEL_20:
      uint64_t v21 = 0;
LABEL_21:
      if (v59 >= 1)
      {
        uint64_t v60 = 0;
        uint64_t v58 = v54 + v18 * v56;
        uint64_t v57 = v53 + v21 * v56;
        do
        {
          if (*(unsigned char *)(v5 + 58)
            || (uint64_t v22 = *(void *)(v5 + 16), v23 = v22 - 3, v22 < 3)
            || v23 > (int)v22 - 1
            || *(void *)(*(void *)(v5 + 24) + 8 * v23) == 1)
          {
            uint64_t v24 = 0;
            if (*(unsigned char *)(v6 + 58)) {
              goto LABEL_34;
            }
          }
          else
          {
            uint64_t v24 = *(void *)(*(void *)(v5 + 64) + 8 * v23);
            if (*(unsigned char *)(v6 + 58)) {
              goto LABEL_34;
            }
          }
          uint64_t v25 = *(void *)(v6 + 16);
          uint64_t v26 = v25 - 3;
          if (v25 >= 3 && v26 <= (int)v25 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v26) != 1)
          {
            uint64_t v27 = *(void *)(*(void *)(v6 + 64) + 8 * v26);
            goto LABEL_35;
          }
LABEL_34:
          uint64_t v27 = 0;
LABEL_35:
          if (v61 >= 1)
          {
            uint64_t v28 = 0;
            uint64_t v29 = v58 + v24 * v60;
            uint64_t v30 = v57 + v27 * v60;
            while (1)
            {
              if (*(unsigned char *)(v5 + 58)
                || (v31 = *(void *)(v5 + 16), uint64_t v32 = v31 - 2, v31 < 2)
                || v32 > (int)v31 - 1
                || *(void *)(*(void *)(v5 + 24) + 8 * v32) == 1)
              {
                uint64_t v33 = 0;
                if (*(unsigned char *)(v6 + 58)) {
                  break;
                }
              }
              else
              {
                uint64_t v33 = *(void *)(*(void *)(v5 + 64) + 8 * v32);
                if (*(unsigned char *)(v6 + 58)) {
                  break;
                }
              }
              uint64_t v34 = *(void *)(v6 + 16);
              uint64_t v35 = v34 - 2;
              if (v34 < 2 || v35 > (int)v34 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v35) == 1) {
                break;
              }
              uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v35);
              if (v10 >= 1) {
                goto LABEL_50;
              }
LABEL_37:
              if (++v28 == v61) {
                goto LABEL_23;
              }
            }
            uint64_t v36 = 0;
            if (v10 < 1) {
              goto LABEL_37;
            }
LABEL_50:
            uint64_t v37 = 0;
            uint64_t v38 = v29 + v33 * v28;
            uint64_t v39 = v30 + v36 * v28;
            while (2)
            {
              if (!*(unsigned char *)(v5 + 58))
              {
                uint64_t v48 = *(void *)(v5 + 16);
                uint64_t v49 = v48 - 1;
                if (v48 >= 1 && v49 <= (int)v48 - 1 && *(void *)(*(void *)(v5 + 24) + 8 * v49) != 1)
                {
                  uint64_t v40 = *(void *)(*(void *)(v5 + 64) + 8 * v49);
                  if (!*(unsigned char *)(v6 + 58)) {
                    goto LABEL_60;
                  }
                  goto LABEL_53;
                }
              }
              uint64_t v40 = 0;
              if (*(unsigned char *)(v6 + 58)) {
                goto LABEL_53;
              }
LABEL_60:
              uint64_t v50 = *(void *)(v6 + 16);
              uint64_t v51 = v50 - 1;
              if (v50 < 1 || v51 > (int)v50 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v51) == 1) {
LABEL_53:
              }
                uint64_t v41 = 0;
              else {
                uint64_t v41 = *(void *)(*(void *)(v6 + 64) + 8 * v51);
              }
              uint64_t v42 = (_WORD *)(v39 + v41 * v37 + *(void *)(v6 + 40));
              LODWORD(_D0) = *(_DWORD *)(v38 + v40 * v37 + *(void *)(v5 + 40));
              unint64_t v63 = vcvtq_f32_f16(vadd_f16(*(float16x4_t *)&_D0, v15)).u64[0];
              _S0 = std::sqrt[abi:nn180100]<float>((float *)&v63);
              __asm
              {
                FCVT            H0, S0
                FCVT            H1, S1
              }
              unint64_t v63 = 1065353216;
              __asm
              {
                FCVT            S0, H0
                FCVT            S1, H1
              }
              v62[0] = _S0;
              v62[1] = _S1;
              *(float *)&_D0 = std::operator/[abi:nn180100]<float>((float *)&v63, v62);
              __asm
              {
                FCVT            H0, S0
                FCVT            H1, S1
              }
              *uint64_t v42 = LOWORD(_D0);
              v42[1] = _S1;
              if (v10 == ++v37) {
                goto LABEL_37;
              }
              continue;
            }
          }
LABEL_23:
          ++v60;
        }
        while (v60 != v59);
      }
      if (++v56 == v55) {
        return;
      }
    }
  }
  uint64_t v61 = *(void *)(v9 - 16);
  if ((unint64_t)v7 < 3)
  {
    uint64_t v55 = 1;
    goto LABEL_7;
  }
  uint64_t v52 = v8 + 8 * v7;
  uint64_t v59 = *(void *)(v52 - 24);
  if (v7 == 3)
  {
    uint64_t v55 = 1;
    goto LABEL_8;
  }
  uint64_t v55 = *(void *)(v52 - 32);
  if (v55 >= 1) {
    goto LABEL_8;
  }
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<half,half,(mlir::mps::arithmeticOp)6>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4, double _D0)
{
  uint64_t v5 = **a1;
  uint64_t v6 = **a2;
  uint64_t v66 = **a4;
  uint64_t v67 = **a3;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    uint64_t result = 1;
    char v17 = 1;
    uint64_t v18 = 1;
LABEL_7:
    char v19 = 1;
LABEL_8:
    uint64_t v20 = 0;
    BOOL v21 = v7 < 1;
    int v22 = *(unsigned __int8 *)(v5 + 58);
    int v23 = v7 - 1;
    if (*(unsigned char *)(v6 + 58)) {
      char v19 = 1;
    }
    uint64_t v24 = v23;
    if (*(unsigned char *)(v6 + 58))
    {
      char v17 = 1;
      char v25 = 1;
    }
    else
    {
      char v25 = v14;
    }
    if (*(unsigned char *)(v6 + 58)) {
      BOOL v21 = 1;
    }
    if (v15 > v23) {
      char v26 = 1;
    }
    else {
      char v26 = v19;
    }
    if (v12 > v24) {
      char v27 = 1;
    }
    else {
      char v27 = v17;
    }
    if (v11 > v24) {
      char v28 = 1;
    }
    else {
      char v28 = v25;
    }
    __asm
    {
      FCVT            H0, D0
      FCVT            S0, H0
    }
    if (_NF ^ _VF | _ZF) {
      char v35 = v21;
    }
    else {
      char v35 = 1;
    }
    while (1)
    {
      if (v22
        || (uint64_t v36 = *(void *)(v5 + 16), v37 = v36 - 4, v36 < 4)
        || v37 > (int)v36 - 1
        || *(void *)(*(void *)(v5 + 24) + 8 * v37) == 1)
      {
        uint64_t v38 = 0;
        if (v26) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v38 = *(void *)(*(void *)(v5 + 64) + 8 * v37);
        if (v26) {
          goto LABEL_34;
        }
      }
      if (*(void *)(*(void *)(v6 + 24) + 8 * v15) != 1)
      {
        uint64_t v39 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
        if (v18 < 1) {
          goto LABEL_27;
        }
LABEL_37:
        uint64_t v40 = 0;
        uint64_t v41 = v67 + v38 * v20;
        uint64_t v42 = v66 + v39 * v20;
        while (2)
        {
          if (v22
            || (v43 = *(void *)(v5 + 16), uint64_t v44 = v43 - 3, v43 < 3)
            || v44 > (int)v43 - 1
            || *(void *)(*(void *)(v5 + 24) + 8 * v44) == 1)
          {
            uint64_t v45 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_44;
            }
            goto LABEL_45;
          }
          uint64_t v45 = *(void *)(*(void *)(v5 + 64) + 8 * v44);
          if (v27) {
            goto LABEL_45;
          }
LABEL_44:
          if (*(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
          {
LABEL_45:
            uint64_t v46 = 0;
            if (v13 >= 1) {
              break;
            }
            goto LABEL_38;
          }
          uint64_t v46 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
          if (v13 < 1)
          {
LABEL_38:
            if (++v40 == v18) {
              goto LABEL_27;
            }
            continue;
          }
          break;
        }
        uint64_t v47 = 0;
        uint64_t v48 = v41 + v45 * v40;
        uint64_t v49 = v42 + v46 * v40;
        while (2)
        {
          if (v22
            || (uint64_t v50 = *(void *)(v5 + 16), v51 = v50 - 2, v50 < 2)
            || v51 > (int)v50 - 1
            || *(void *)(*(void *)(v5 + 24) + 8 * v51) == 1)
          {
            uint64_t v52 = 0;
            if ((v28 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_56;
          }
          uint64_t v52 = *(void *)(*(void *)(v5 + 64) + 8 * v51);
          if (v28) {
            goto LABEL_56;
          }
LABEL_55:
          if (*(void *)(*(void *)(v6 + 24) + 8 * v11) == 1)
          {
LABEL_56:
            uint64_t v53 = 0;
            if (v10 >= 1) {
              break;
            }
            goto LABEL_49;
          }
          uint64_t v53 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
          if (v10 < 1)
          {
LABEL_49:
            if (++v47 == v13) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        uint64_t v54 = 0;
        uint64_t v55 = v48 + v52 * v47;
        uint64_t v56 = *(void *)(v5 + 40);
        uint64_t v57 = *(void *)(v6 + 40);
        uint64_t v58 = v49 + v53 * v47;
        while (2)
        {
          if (v22
            || (uint64_t v64 = *(void *)(v5 + 16), v65 = v64 - 1, v64 < 1)
            || v65 > (int)v64 - 1
            || *(void *)(*(void *)(v5 + 24) + 8 * v65) == 1)
          {
            uint64_t v63 = 0;
            if ((v35 & 1) == 0) {
              goto LABEL_64;
            }
          }
          else
          {
            uint64_t v63 = *(void *)(*(void *)(v5 + 64) + 8 * v65);
            if ((v35 & 1) == 0)
            {
LABEL_64:
              if (*(void *)(*(void *)(v6 + 24) + 8 * v8) != 1)
              {
                uint64_t v59 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_61:
                _H2 = *(_WORD *)(v55 + v63 * v54 + v56);
                __asm { FCVT            S2, H2 }
                _S2 = 1.0 / sqrtf(_S0 + _S2);
                __asm { FCVT            H2, S2 }
                *(_WORD *)(v58 + v59 * v54++ + v57) = LOWORD(_S2);
                if (v10 == v54) {
                  goto LABEL_49;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v59 = 0;
        goto LABEL_61;
      }
LABEL_34:
      uint64_t v39 = 0;
      if (v18 >= 1) {
        goto LABEL_37;
      }
LABEL_27:
      if (++v20 == result) {
        return result;
      }
    }
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v17 = 0;
    uint64_t v12 = 0;
    char v14 = 0;
    uint64_t result = 1;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    goto LABEL_7;
  }
  uint64_t v15 = v7 - 4;
  uint64_t result = *(void *)(v9 + 8 * (v7 - 4));
  if (result >= 1)
  {
    char v17 = 0;
    char v14 = 0;
    char v19 = 0;
    goto LABEL_8;
  }
  return result;
}

void mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<half,(void *)0>,(mlir::mps::arithmeticOp)6>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4, double a5)
{
  uint64_t v5 = **a1;
  uint64_t v6 = **a2;
  uint64_t v52 = **a4;
  uint64_t v53 = **a3;
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7 < 1)
  {
    uint64_t v54 = 1;
    uint64_t v60 = 1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v8 = *(void *)(v6 + 24);
  uint64_t v9 = v8 + 8 * v7;
  uint64_t v10 = *(void *)(v9 - 8);
  if (v7 == 1)
  {
    uint64_t v54 = 1;
    uint64_t v60 = 1;
LABEL_7:
    uint64_t v58 = 1;
LABEL_8:
    uint64_t v55 = 0;
    *(float *)&a5 = a5;
    float32x2_t v11 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)&a5, 0);
    while (1)
    {
      if (*(unsigned char *)(v5 + 58)
        || (v12 = *(void *)(v5 + 16), uint64_t v13 = v12 - 4, v12 < 4)
        || v13 > (int)v12 - 1
        || *(void *)(*(void *)(v5 + 24) + 8 * v13) == 1)
      {
        uint64_t v14 = 0;
        if (*(unsigned char *)(v6 + 58)) {
          goto LABEL_20;
        }
      }
      else
      {
        uint64_t v14 = *(void *)(*(void *)(v5 + 64) + 8 * v13);
        if (*(unsigned char *)(v6 + 58)) {
          goto LABEL_20;
        }
      }
      uint64_t v15 = *(void *)(v6 + 16);
      uint64_t v16 = v15 - 4;
      if (v15 >= 4 && v16 <= (int)v15 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v16) != 1)
      {
        uint64_t v17 = *(void *)(*(void *)(v6 + 64) + 8 * v16);
        goto LABEL_21;
      }
LABEL_20:
      uint64_t v17 = 0;
LABEL_21:
      if (v58 >= 1)
      {
        uint64_t v59 = 0;
        uint64_t v57 = v53 + v14 * v55;
        uint64_t v56 = v52 + v17 * v55;
        do
        {
          if (*(unsigned char *)(v5 + 58)
            || (v18 = *(void *)(v5 + 16), uint64_t v19 = v18 - 3, v18 < 3)
            || v19 > (int)v18 - 1
            || *(void *)(*(void *)(v5 + 24) + 8 * v19) == 1)
          {
            uint64_t v20 = 0;
            if (*(unsigned char *)(v6 + 58)) {
              goto LABEL_34;
            }
          }
          else
          {
            uint64_t v20 = *(void *)(*(void *)(v5 + 64) + 8 * v19);
            if (*(unsigned char *)(v6 + 58)) {
              goto LABEL_34;
            }
          }
          uint64_t v21 = *(void *)(v6 + 16);
          uint64_t v22 = v21 - 3;
          if (v21 >= 3 && v22 <= (int)v21 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v22) != 1)
          {
            uint64_t v23 = *(void *)(*(void *)(v6 + 64) + 8 * v22);
            goto LABEL_35;
          }
LABEL_34:
          uint64_t v23 = 0;
LABEL_35:
          if (v60 >= 1)
          {
            uint64_t v24 = 0;
            uint64_t v25 = v57 + v20 * v59;
            uint64_t v26 = v56 + v23 * v59;
            while (1)
            {
              if (*(unsigned char *)(v5 + 58)
                || (v27 = *(void *)(v5 + 16), uint64_t v28 = v27 - 2, v27 < 2)
                || v28 > (int)v27 - 1
                || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1)
              {
                uint64_t v29 = 0;
                if (*(unsigned char *)(v6 + 58)) {
                  break;
                }
              }
              else
              {
                uint64_t v29 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
                if (*(unsigned char *)(v6 + 58)) {
                  break;
                }
              }
              uint64_t v30 = *(void *)(v6 + 16);
              uint64_t v31 = v30 - 2;
              if (v30 < 2 || v31 > (int)v30 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v31) == 1) {
                break;
              }
              uint64_t v32 = *(void *)(*(void *)(v6 + 64) + 8 * v31);
              if (v10 >= 1) {
                goto LABEL_50;
              }
LABEL_37:
              if (++v24 == v60) {
                goto LABEL_23;
              }
            }
            uint64_t v32 = 0;
            if (v10 < 1) {
              goto LABEL_37;
            }
LABEL_50:
            uint64_t v33 = 0;
            uint64_t v34 = v25 + v29 * v24;
            uint64_t v35 = v26 + v32 * v24;
            while (2)
            {
              if (!*(unsigned char *)(v5 + 58))
              {
                uint64_t v47 = *(void *)(v5 + 16);
                uint64_t v48 = v47 - 1;
                if (v47 >= 1 && v48 <= (int)v47 - 1 && *(void *)(*(void *)(v5 + 24) + 8 * v48) != 1)
                {
                  uint64_t v36 = *(void *)(*(void *)(v5 + 64) + 8 * v48);
                  if (!*(unsigned char *)(v6 + 58)) {
                    goto LABEL_60;
                  }
                  goto LABEL_53;
                }
              }
              uint64_t v36 = 0;
              if (*(unsigned char *)(v6 + 58)) {
                goto LABEL_53;
              }
LABEL_60:
              uint64_t v49 = *(void *)(v6 + 16);
              uint64_t v50 = v49 - 1;
              if (v49 < 1 || v50 > (int)v49 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v50) == 1) {
LABEL_53:
              }
                uint64_t v37 = 0;
              else {
                uint64_t v37 = *(void *)(*(void *)(v6 + 64) + 8 * v50);
              }
              uint64_t v38 = (_WORD *)(v35 + v37 * v33 + *(void *)(v6 + 40));
              float32x2_t v62 = vadd_f32(*(float32x2_t *)(v34 + v36 * v33 + *(void *)(v5 + 40)), v11);
              float v39 = std::sqrt[abi:nn180100]<float>((float *)&v62);
              float32x2_t v62 = (float32x2_t)1065353216;
              v61[0] = v39;
              v61[1] = v40;
              _S0 = std::operator/[abi:nn180100]<float>((float *)&v62, v61);
              __asm
              {
                FCVT            H0, S0
                FCVT            H1, S1
              }
              *uint64_t v38 = LOWORD(_S0);
              v38[1] = _S1;
              if (v10 == ++v33) {
                goto LABEL_37;
              }
              continue;
            }
          }
LABEL_23:
          ++v59;
        }
        while (v59 != v58);
      }
      if (++v55 == v54) {
        return;
      }
    }
  }
  uint64_t v60 = *(void *)(v9 - 16);
  if ((unint64_t)v7 < 3)
  {
    uint64_t v54 = 1;
    goto LABEL_7;
  }
  uint64_t v51 = v8 + 8 * v7;
  uint64_t v58 = *(void *)(v51 - 24);
  if (v7 == 3)
  {
    uint64_t v54 = 1;
    goto LABEL_8;
  }
  uint64_t v54 = *(void *)(v51 - 32);
  if (v54 >= 1) {
    goto LABEL_8;
  }
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<float,half,(mlir::mps::arithmeticOp)6>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4, double a5)
{
  uint64_t v5 = **a1;
  uint64_t v6 = **a2;
  uint64_t v63 = **a4;
  uint64_t v64 = **a3;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    uint64_t result = 1;
    char v17 = 1;
    uint64_t v18 = 1;
LABEL_7:
    char v19 = 1;
LABEL_8:
    uint64_t v20 = 0;
    BOOL v21 = v7 < 1;
    int v22 = *(unsigned __int8 *)(v5 + 58);
    int v23 = v7 - 1;
    if (*(unsigned char *)(v6 + 58)) {
      char v19 = 1;
    }
    uint64_t v24 = v23;
    if (*(unsigned char *)(v6 + 58))
    {
      char v17 = 1;
      char v25 = 1;
    }
    else
    {
      char v25 = v14;
    }
    if (*(unsigned char *)(v6 + 58)) {
      BOOL v21 = 1;
    }
    if (v15 > v23) {
      char v26 = 1;
    }
    else {
      char v26 = v19;
    }
    if (v12 > v24) {
      char v27 = 1;
    }
    else {
      char v27 = v17;
    }
    if (v11 > v24) {
      char v28 = 1;
    }
    else {
      char v28 = v25;
    }
    float v29 = a5;
    char v30 = v8 > v24 || v21;
    while (1)
    {
      if (v22
        || (v31 = *(void *)(v5 + 16), uint64_t v32 = v31 - 4, v31 < 4)
        || v32 > (int)v31 - 1
        || *(void *)(*(void *)(v5 + 24) + 8 * v32) == 1)
      {
        uint64_t v33 = 0;
        if (v26) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v33 = *(void *)(*(void *)(v5 + 64) + 8 * v32);
        if (v26) {
          goto LABEL_34;
        }
      }
      if (*(void *)(*(void *)(v6 + 24) + 8 * v15) != 1)
      {
        uint64_t v34 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
        if (v18 < 1) {
          goto LABEL_27;
        }
LABEL_37:
        uint64_t v35 = 0;
        uint64_t v36 = v64 + v33 * v20;
        uint64_t v37 = v63 + v34 * v20;
        while (2)
        {
          if (v22
            || (uint64_t v38 = *(void *)(v5 + 16), v39 = v38 - 3, v38 < 3)
            || v39 > (int)v38 - 1
            || *(void *)(*(void *)(v5 + 24) + 8 * v39) == 1)
          {
            uint64_t v40 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_44;
            }
            goto LABEL_45;
          }
          uint64_t v40 = *(void *)(*(void *)(v5 + 64) + 8 * v39);
          if (v27) {
            goto LABEL_45;
          }
LABEL_44:
          if (*(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
          {
LABEL_45:
            uint64_t v41 = 0;
            if (v13 >= 1) {
              break;
            }
            goto LABEL_38;
          }
          uint64_t v41 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
          if (v13 < 1)
          {
LABEL_38:
            if (++v35 == v18) {
              goto LABEL_27;
            }
            continue;
          }
          break;
        }
        uint64_t v42 = 0;
        uint64_t v43 = v36 + v40 * v35;
        uint64_t v44 = v37 + v41 * v35;
        while (2)
        {
          if (v22
            || (v45 = *(void *)(v5 + 16), uint64_t v46 = v45 - 2, v45 < 2)
            || v46 > (int)v45 - 1
            || *(void *)(*(void *)(v5 + 24) + 8 * v46) == 1)
          {
            uint64_t v47 = 0;
            if ((v28 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_56;
          }
          uint64_t v47 = *(void *)(*(void *)(v5 + 64) + 8 * v46);
          if (v28) {
            goto LABEL_56;
          }
LABEL_55:
          if (*(void *)(*(void *)(v6 + 24) + 8 * v11) == 1)
          {
LABEL_56:
            uint64_t v48 = 0;
            if (v10 >= 1) {
              break;
            }
            goto LABEL_49;
          }
          uint64_t v48 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
          if (v10 < 1)
          {
LABEL_49:
            if (++v42 == v13) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        uint64_t v49 = 0;
        uint64_t v50 = v43 + v47 * v42;
        uint64_t v51 = *(void *)(v5 + 40);
        uint64_t v52 = *(void *)(v6 + 40);
        uint64_t v53 = v44 + v48 * v42;
        while (2)
        {
          if (v22
            || (v61 = *(void *)(v5 + 16), uint64_t v62 = v61 - 1, v61 < 1)
            || v62 > (int)v61 - 1
            || *(void *)(*(void *)(v5 + 24) + 8 * v62) == 1)
          {
            uint64_t v60 = 0;
            if ((v30 & 1) == 0) {
              goto LABEL_64;
            }
          }
          else
          {
            uint64_t v60 = *(void *)(*(void *)(v5 + 64) + 8 * v62);
            if ((v30 & 1) == 0)
            {
LABEL_64:
              if (*(void *)(*(void *)(v6 + 24) + 8 * v8) != 1)
              {
                uint64_t v54 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_61:
                _S2 = 1.0 / sqrtf(*(float *)(v50 + v60 * v49 + v51) + v29);
                __asm { FCVT            H2, S2 }
                *(_WORD *)(v53 + v54 * v49++ + v52) = LOWORD(_S2);
                if (v10 == v49) {
                  goto LABEL_49;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v54 = 0;
        goto LABEL_61;
      }
LABEL_34:
      uint64_t v34 = 0;
      if (v18 >= 1) {
        goto LABEL_37;
      }
LABEL_27:
      if (++v20 == result) {
        return result;
      }
    }
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v17 = 0;
    uint64_t v12 = 0;
    char v14 = 0;
    uint64_t result = 1;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    goto LABEL_7;
  }
  uint64_t v15 = v7 - 4;
  uint64_t result = *(void *)(v9 + 8 * (v7 - 4));
  if (result >= 1)
  {
    char v17 = 0;
    char v14 = 0;
    char v19 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<__emulated_bf16,float,(mlir::mps::arithmeticOp)6>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4, double a5)
{
  uint64_t v5 = **a1;
  uint64_t v6 = **a2;
  uint64_t v58 = **a4;
  uint64_t v59 = **a3;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    uint64_t result = 1;
    char v17 = 1;
    uint64_t v18 = 1;
LABEL_7:
    char v19 = 1;
LABEL_8:
    uint64_t v20 = 0;
    BOOL v21 = v7 < 1;
    int v22 = *(unsigned __int8 *)(v5 + 58);
    int v23 = v7 - 1;
    if (*(unsigned char *)(v6 + 58)) {
      char v19 = 1;
    }
    uint64_t v24 = v23;
    if (*(unsigned char *)(v6 + 58))
    {
      char v17 = 1;
      char v25 = 1;
    }
    else
    {
      char v25 = v14;
    }
    if (*(unsigned char *)(v6 + 58)) {
      BOOL v21 = 1;
    }
    if (v15 > v23) {
      char v26 = 1;
    }
    else {
      char v26 = v19;
    }
    if (v12 > v24) {
      char v27 = 1;
    }
    else {
      char v27 = v17;
    }
    if (v11 > v24) {
      char v28 = 1;
    }
    else {
      char v28 = v25;
    }
    float v29 = a5;
    char v30 = v8 > v24 || v21;
    while (1)
    {
      if (v22
        || (v31 = *(void *)(v5 + 16), uint64_t v32 = v31 - 4, v31 < 4)
        || v32 > (int)v31 - 1
        || *(void *)(*(void *)(v5 + 24) + 8 * v32) == 1)
      {
        uint64_t v33 = 0;
        if (v26) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v33 = *(void *)(*(void *)(v5 + 64) + 8 * v32);
        if (v26) {
          goto LABEL_34;
        }
      }
      if (*(void *)(*(void *)(v6 + 24) + 8 * v15) != 1)
      {
        uint64_t v34 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
        if (v18 < 1) {
          goto LABEL_27;
        }
LABEL_37:
        uint64_t v35 = 0;
        uint64_t v36 = v59 + v33 * v20;
        uint64_t v37 = v58 + v34 * v20;
        while (2)
        {
          if (v22
            || (uint64_t v38 = *(void *)(v5 + 16), v39 = v38 - 3, v38 < 3)
            || v39 > (int)v38 - 1
            || *(void *)(*(void *)(v5 + 24) + 8 * v39) == 1)
          {
            uint64_t v40 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_44;
            }
            goto LABEL_45;
          }
          uint64_t v40 = *(void *)(*(void *)(v5 + 64) + 8 * v39);
          if (v27) {
            goto LABEL_45;
          }
LABEL_44:
          if (*(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
          {
LABEL_45:
            uint64_t v41 = 0;
            if (v13 >= 1) {
              break;
            }
            goto LABEL_38;
          }
          uint64_t v41 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
          if (v13 < 1)
          {
LABEL_38:
            if (++v35 == v18) {
              goto LABEL_27;
            }
            continue;
          }
          break;
        }
        uint64_t v42 = 0;
        uint64_t v43 = v36 + v40 * v35;
        uint64_t v44 = v37 + v41 * v35;
        while (2)
        {
          if (v22
            || (v45 = *(void *)(v5 + 16), uint64_t v46 = v45 - 2, v45 < 2)
            || v46 > (int)v45 - 1
            || *(void *)(*(void *)(v5 + 24) + 8 * v46) == 1)
          {
            uint64_t v47 = 0;
            if ((v28 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_56;
          }
          uint64_t v47 = *(void *)(*(void *)(v5 + 64) + 8 * v46);
          if (v28) {
            goto LABEL_56;
          }
LABEL_55:
          if (*(void *)(*(void *)(v6 + 24) + 8 * v11) == 1)
          {
LABEL_56:
            uint64_t v48 = 0;
            if (v10 >= 1) {
              break;
            }
            goto LABEL_49;
          }
          uint64_t v48 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
          if (v10 < 1)
          {
LABEL_49:
            if (++v42 == v13) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        uint64_t v49 = 0;
        uint64_t v50 = v43 + v47 * v42;
        uint64_t v51 = *(void *)(v5 + 40);
        uint64_t v52 = *(void *)(v6 + 40);
        uint64_t v53 = v44 + v48 * v42;
        while (2)
        {
          if (v22
            || (uint64_t v56 = *(void *)(v5 + 16), v57 = v56 - 1, v56 < 1)
            || v57 > (int)v56 - 1
            || *(void *)(*(void *)(v5 + 24) + 8 * v57) == 1)
          {
            uint64_t v55 = 0;
            if ((v30 & 1) == 0) {
              goto LABEL_64;
            }
          }
          else
          {
            uint64_t v55 = *(void *)(*(void *)(v5 + 64) + 8 * v57);
            if ((v30 & 1) == 0)
            {
LABEL_64:
              if (*(void *)(*(void *)(v6 + 24) + 8 * v8) != 1)
              {
                uint64_t v54 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_61:
                *(float *)(v53 + v54 * v49 + v52) = 1.0
                                                  / sqrtf(COERCE_FLOAT(COERCE_UNSIGNED_INT(v29+ (float)(COERCE_FLOAT(LODWORD(v29) & 0xFF800000)* 0.0039062)) & 0xFFFF0000)+ COERCE_FLOAT(*(unsigned __int16 *)(v50 + v55 * v49 + v51) << 16));
                if (v10 == ++v49) {
                  goto LABEL_49;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v54 = 0;
        goto LABEL_61;
      }
LABEL_34:
      uint64_t v34 = 0;
      if (v18 >= 1) {
        goto LABEL_37;
      }
LABEL_27:
      if (++v20 == result) {
        return result;
      }
    }
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v17 = 0;
    uint64_t v12 = 0;
    char v14 = 0;
    uint64_t result = 1;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    goto LABEL_7;
  }
  uint64_t v15 = v7 - 4;
  uint64_t result = *(void *)(v9 + 8 * (v7 - 4));
  if (result >= 1)
  {
    char v17 = 0;
    char v14 = 0;
    char v19 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<__emulated_bf16,__emulated_bf16,(mlir::mps::arithmeticOp)6>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4, double a5)
{
  uint64_t v5 = **a1;
  uint64_t v6 = **a2;
  uint64_t v59 = **a4;
  uint64_t v60 = **a3;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    uint64_t result = 1;
    char v17 = 1;
    uint64_t v18 = 1;
LABEL_7:
    char v19 = 1;
LABEL_8:
    uint64_t v20 = 0;
    BOOL v21 = v7 < 1;
    int v22 = v7 - 1;
    if (*(unsigned char *)(v6 + 58)) {
      char v19 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v6 + 58))
    {
      char v17 = 1;
      char v14 = 1;
      BOOL v21 = 1;
    }
    uint64_t v58 = v15;
    if (v15 > v22) {
      char v24 = 1;
    }
    else {
      char v24 = v19;
    }
    if (v12 > v23) {
      char v17 = 1;
    }
    if (v11 > v23) {
      char v25 = 1;
    }
    else {
      char v25 = v14;
    }
    float v26 = a5;
    int v27 = *(unsigned __int8 *)(v5 + 58);
    char v28 = v8 > v23 || v21;
    LODWORD(v29) = COERCE_UNSIGNED_INT(v26 + (float)(COERCE_FLOAT(LODWORD(v26) & 0xFF800000) * 0.0039062)) & 0xFFFF0000;
    while (1)
    {
      if (v27
        || (uint64_t v30 = *(void *)(v5 + 16), v31 = v30 - 4, v30 < 4)
        || v31 > (int)v30 - 1
        || *(void *)(*(void *)(v5 + 24) + 8 * v31) == 1)
      {
        uint64_t v32 = 0;
        if (v24) {
          goto LABEL_31;
        }
      }
      else
      {
        uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v31);
        if (v24) {
          goto LABEL_31;
        }
      }
      if (*(void *)(*(void *)(v6 + 24) + 8 * v58) != 1)
      {
        uint64_t v33 = *(void *)(*(void *)(v6 + 64) + 8 * v58);
        if (v18 < 1) {
          goto LABEL_24;
        }
LABEL_34:
        uint64_t v34 = 0;
        uint64_t v35 = v60 + v32 * v20;
        uint64_t v36 = v59 + v33 * v20;
        while (2)
        {
          if (v27
            || (v37 = *(void *)(v5 + 16), uint64_t v38 = v37 - 3, v37 < 3)
            || v38 > (int)v37 - 1
            || *(void *)(*(void *)(v5 + 24) + 8 * v38) == 1)
          {
            uint64_t v39 = 0;
            if ((v17 & 1) == 0) {
              goto LABEL_41;
            }
            goto LABEL_42;
          }
          uint64_t v39 = *(void *)(*(void *)(v5 + 64) + 8 * v38);
          if (v17) {
            goto LABEL_42;
          }
LABEL_41:
          if (*(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
          {
LABEL_42:
            uint64_t v40 = 0;
            if (v13 >= 1) {
              break;
            }
            goto LABEL_35;
          }
          uint64_t v40 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
          if (v13 < 1)
          {
LABEL_35:
            if (++v34 == v18) {
              goto LABEL_24;
            }
            continue;
          }
          break;
        }
        uint64_t v41 = 0;
        uint64_t v42 = v35 + v39 * v34;
        uint64_t v43 = v36 + v40 * v34;
        while (2)
        {
          if (v27
            || (uint64_t v44 = *(void *)(v5 + 16), v45 = v44 - 2, v44 < 2)
            || v45 > (int)v44 - 1
            || *(void *)(*(void *)(v5 + 24) + 8 * v45) == 1)
          {
            uint64_t v46 = 0;
            if ((v25 & 1) == 0) {
              goto LABEL_52;
            }
            goto LABEL_53;
          }
          uint64_t v46 = *(void *)(*(void *)(v5 + 64) + 8 * v45);
          if (v25) {
            goto LABEL_53;
          }
LABEL_52:
          if (*(void *)(*(void *)(v6 + 24) + 8 * v11) == 1)
          {
LABEL_53:
            uint64_t v47 = 0;
            if (v10 >= 1) {
              break;
            }
            goto LABEL_46;
          }
          uint64_t v47 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
          if (v10 < 1)
          {
LABEL_46:
            if (++v41 == v13) {
              goto LABEL_35;
            }
            continue;
          }
          break;
        }
        uint64_t v48 = 0;
        uint64_t v49 = v42 + v46 * v41;
        uint64_t v50 = *(void *)(v5 + 40);
        uint64_t v51 = *(void *)(v6 + 40);
        uint64_t v52 = v43 + v47 * v41;
        while (2)
        {
          if (v27
            || (v55 = *(void *)(v5 + 16), uint64_t v56 = v55 - 1, v55 < 1)
            || v56 > (int)v55 - 1
            || *(void *)(*(void *)(v5 + 24) + 8 * v56) == 1)
          {
            uint64_t v53 = 0;
            if (v28) {
              goto LABEL_60;
            }
          }
          else
          {
            uint64_t v53 = *(void *)(*(void *)(v5 + 64) + 8 * v56);
            if (v28)
            {
LABEL_60:
              uint64_t v54 = 0;
              goto LABEL_67;
            }
          }
          if (*(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
            goto LABEL_60;
          }
          uint64_t v54 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_67:
          float v57 = 1.0 / sqrtf(v29 + COERCE_FLOAT(*(unsigned __int16 *)(v49 + v53 * v48 + v50) << 16));
          *(_WORD *)(v51 + v52 + v54 * v48++) = HIWORD(COERCE_UNSIGNED_INT(v57 + (float)(COERCE_FLOAT(LODWORD(v57) & 0xFF800000)
                                                                                       * 0.0039062)));
          if (v10 == v48) {
            goto LABEL_46;
          }
          continue;
        }
      }
LABEL_31:
      uint64_t v33 = 0;
      if (v18 >= 1) {
        goto LABEL_34;
      }
LABEL_24:
      if (++v20 == result) {
        return result;
      }
    }
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v17 = 0;
    uint64_t v12 = 0;
    char v14 = 0;
    uint64_t result = 1;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    goto LABEL_7;
  }
  uint64_t result = *(void *)(v9 + 8 * (v7 - 4));
  if (result >= 1)
  {
    uint64_t v15 = v7 - 4;
    char v17 = 0;
    char v14 = 0;
    char v19 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<float,__emulated_bf16,(mlir::mps::arithmeticOp)6>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4, double a5)
{
  uint64_t v5 = **a1;
  uint64_t v6 = **a2;
  uint64_t v58 = **a4;
  uint64_t v59 = **a3;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    uint64_t result = 1;
    char v17 = 1;
    uint64_t v18 = 1;
LABEL_7:
    char v19 = 1;
LABEL_8:
    uint64_t v20 = 0;
    BOOL v21 = v7 < 1;
    int v22 = *(unsigned __int8 *)(v5 + 58);
    int v23 = v7 - 1;
    if (*(unsigned char *)(v6 + 58)) {
      char v19 = 1;
    }
    uint64_t v24 = v23;
    if (*(unsigned char *)(v6 + 58))
    {
      char v17 = 1;
      char v14 = 1;
      BOOL v21 = 1;
    }
    uint64_t v57 = v15;
    if (v15 > v23) {
      char v25 = 1;
    }
    else {
      char v25 = v19;
    }
    if (v12 > v24) {
      char v17 = 1;
    }
    if (v11 > v24) {
      char v26 = 1;
    }
    else {
      char v26 = v14;
    }
    float v27 = a5;
    char v28 = v8 > v24 || v21;
    while (1)
    {
      if (v22
        || (v29 = *(void *)(v5 + 16), uint64_t v30 = v29 - 4, v29 < 4)
        || v30 > (int)v29 - 1
        || *(void *)(*(void *)(v5 + 24) + 8 * v30) == 1)
      {
        uint64_t v31 = 0;
        if (v25) {
          goto LABEL_30;
        }
      }
      else
      {
        uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v30);
        if (v25) {
          goto LABEL_30;
        }
      }
      if (*(void *)(*(void *)(v6 + 24) + 8 * v57) != 1)
      {
        uint64_t v32 = *(void *)(*(void *)(v6 + 64) + 8 * v57);
        if (v18 < 1) {
          goto LABEL_23;
        }
LABEL_33:
        uint64_t v33 = 0;
        uint64_t v34 = v59 + v31 * v20;
        uint64_t v35 = v58 + v32 * v20;
        while (2)
        {
          if (v22
            || (uint64_t v36 = *(void *)(v5 + 16), v37 = v36 - 3, v36 < 3)
            || v37 > (int)v36 - 1
            || *(void *)(*(void *)(v5 + 24) + 8 * v37) == 1)
          {
            uint64_t v38 = 0;
            if ((v17 & 1) == 0) {
              goto LABEL_40;
            }
            goto LABEL_41;
          }
          uint64_t v38 = *(void *)(*(void *)(v5 + 64) + 8 * v37);
          if (v17) {
            goto LABEL_41;
          }
LABEL_40:
          if (*(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
          {
LABEL_41:
            uint64_t v39 = 0;
            if (v13 >= 1) {
              break;
            }
            goto LABEL_34;
          }
          uint64_t v39 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
          if (v13 < 1)
          {
LABEL_34:
            if (++v33 == v18) {
              goto LABEL_23;
            }
            continue;
          }
          break;
        }
        uint64_t v40 = 0;
        uint64_t v41 = v34 + v38 * v33;
        uint64_t v42 = v35 + v39 * v33;
        while (2)
        {
          if (v22
            || (v43 = *(void *)(v5 + 16), uint64_t v44 = v43 - 2, v43 < 2)
            || v44 > (int)v43 - 1
            || *(void *)(*(void *)(v5 + 24) + 8 * v44) == 1)
          {
            uint64_t v45 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_51;
            }
            goto LABEL_52;
          }
          uint64_t v45 = *(void *)(*(void *)(v5 + 64) + 8 * v44);
          if (v26) {
            goto LABEL_52;
          }
LABEL_51:
          if (*(void *)(*(void *)(v6 + 24) + 8 * v11) == 1)
          {
LABEL_52:
            uint64_t v46 = 0;
            if (v10 >= 1) {
              break;
            }
            goto LABEL_45;
          }
          uint64_t v46 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
          if (v10 < 1)
          {
LABEL_45:
            if (++v40 == v13) {
              goto LABEL_34;
            }
            continue;
          }
          break;
        }
        uint64_t v47 = 0;
        uint64_t v48 = v41 + v45 * v40;
        uint64_t v49 = *(void *)(v5 + 40);
        uint64_t v50 = *(void *)(v6 + 40);
        uint64_t v51 = v42 + v46 * v40;
        while (2)
        {
          if (v22
            || (uint64_t v54 = *(void *)(v5 + 16), v55 = v54 - 1, v54 < 1)
            || v55 > (int)v54 - 1
            || *(void *)(*(void *)(v5 + 24) + 8 * v55) == 1)
          {
            uint64_t v52 = 0;
            if (v28) {
              goto LABEL_59;
            }
          }
          else
          {
            uint64_t v52 = *(void *)(*(void *)(v5 + 64) + 8 * v55);
            if (v28)
            {
LABEL_59:
              uint64_t v53 = 0;
              goto LABEL_66;
            }
          }
          if (*(void *)(*(void *)(v6 + 24) + 8 * v8) == 1) {
            goto LABEL_59;
          }
          uint64_t v53 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_66:
          float v56 = 1.0 / sqrtf(*(float *)(v48 + v52 * v47 + v49) + v27);
          *(_WORD *)(v50 + v51 + v53 * v47++) = HIWORD(COERCE_UNSIGNED_INT(v56 + (float)(COERCE_FLOAT(LODWORD(v56) & 0xFF800000)
                                                                                       * 0.0039062)));
          if (v10 == v47) {
            goto LABEL_45;
          }
          continue;
        }
      }
LABEL_30:
      uint64_t v32 = 0;
      if (v18 >= 1) {
        goto LABEL_33;
      }
LABEL_23:
      if (++v20 == result) {
        return result;
      }
    }
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v17 = 0;
    uint64_t v12 = 0;
    char v14 = 0;
    uint64_t result = 1;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    goto LABEL_7;
  }
  uint64_t result = *(void *)(v9 + 8 * (v7 - 4));
  if (result >= 1)
  {
    uint64_t v15 = v7 - 4;
    char v17 = 0;
    char v14 = 0;
    char v19 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t **mlir::mps::arithmeticUnaryTileBaseKernel<long long,long long,(mlir::mps::arithmeticOp)6>(uint64_t **result, uint64_t **a2, uint64_t **a3, uint64_t **a4, double a5)
{
  uint64_t v5 = **result;
  uint64_t v6 = **a2;
  uint64_t v7 = **a3;
  uint64_t v8 = **a4;
  uint64_t v9 = *(void *)(v6 + 16);
  if (v9 < 1)
  {
    uint64_t v9 = 1;
    uint64_t v13 = 1;
    uint64_t v12 = 1;
    uint64_t v14 = 1;
    goto LABEL_10;
  }
  uint64_t v10 = *(void *)(v6 + 24);
  uint64_t v11 = v10 + 8 * v9;
  uint64_t v12 = *(void *)(v11 - 8);
  if (v9 == 1)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    goto LABEL_10;
  }
  uint64_t v13 = *(void *)(v11 - 16);
  if ((unint64_t)v9 < 3)
  {
    uint64_t v9 = 1;
    uint64_t v14 = 1;
    goto LABEL_10;
  }
  uint64_t v15 = v10 + 8 * v9;
  uint64_t v14 = *(void *)(v15 - 24);
  if (v9 == 3)
  {
    uint64_t v9 = 1;
    goto LABEL_10;
  }
  uint64_t v9 = *(void *)(v15 - 32);
  if (v9 >= 1)
  {
LABEL_10:
    uint64_t v16 = 0;
    int v17 = *(unsigned __int8 *)(v5 + 58);
    uint64_t result = (uint64_t **)*(unsigned __int8 *)(v6 + 58);
    while (1)
    {
      if (v17
        || (v18 = *(void *)(v5 + 16), uint64_t v19 = v18 - 4, v18 < 4)
        || v19 > (int)v18 - 1
        || *(void *)(*(void *)(v5 + 24) + 8 * v19) == 1)
      {
        uint64_t v20 = 0;
        if (result) {
          break;
        }
      }
      else
      {
        uint64_t v20 = *(void *)(*(void *)(v5 + 64) + 8 * v19);
        if (result) {
          break;
        }
      }
      uint64_t v21 = *(void *)(v6 + 16);
      uint64_t v22 = v21 - 4;
      if (v21 < 4 || v22 > (int)v21 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v22) == 1) {
        break;
      }
      uint64_t v23 = *(void *)(*(void *)(v6 + 64) + 8 * v22);
      if (v14 >= 1) {
        goto LABEL_24;
      }
LABEL_11:
      if (++v16 == v9) {
        return result;
      }
    }
    uint64_t v23 = 0;
    if (v14 < 1) {
      goto LABEL_11;
    }
LABEL_24:
    uint64_t v24 = 0;
    uint64_t v25 = v7 + v20 * v16;
    uint64_t v26 = v8 + v23 * v16;
    while (1)
    {
      if (v17
        || (v27 = *(void *)(v5 + 16), uint64_t v28 = v27 - 3, v27 < 3)
        || v28 > (int)v27 - 1
        || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1)
      {
        uint64_t v29 = 0;
        if (result) {
          break;
        }
      }
      else
      {
        uint64_t v29 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
        if (result) {
          break;
        }
      }
      uint64_t v30 = *(void *)(v6 + 16);
      uint64_t v31 = v30 - 3;
      if (v30 < 3 || v31 > (int)v30 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v31) == 1) {
        break;
      }
      uint64_t v32 = *(void *)(*(void *)(v6 + 64) + 8 * v31);
      if (v13 >= 1) {
        goto LABEL_38;
      }
LABEL_25:
      if (++v24 == v14) {
        goto LABEL_11;
      }
    }
    uint64_t v32 = 0;
    if (v13 < 1) {
      goto LABEL_25;
    }
LABEL_38:
    uint64_t v33 = 0;
    uint64_t v34 = v25 + v29 * v24;
    uint64_t v35 = v26 + v32 * v24;
    while (1)
    {
      if (v17
        || (uint64_t v36 = *(void *)(v5 + 16), v37 = v36 - 2, v36 < 2)
        || v37 > (int)v36 - 1
        || *(void *)(*(void *)(v5 + 24) + 8 * v37) == 1)
      {
        uint64_t v38 = 0;
        if (result) {
          break;
        }
      }
      else
      {
        uint64_t v38 = *(void *)(*(void *)(v5 + 64) + 8 * v37);
        if (result) {
          break;
        }
      }
      uint64_t v39 = *(void *)(v6 + 16);
      uint64_t v40 = v39 - 2;
      if (v39 < 2 || v40 > (int)v39 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v40) == 1) {
        break;
      }
      uint64_t v41 = *(void *)(*(void *)(v6 + 64) + 8 * v40);
      if (v12 >= 1) {
        goto LABEL_52;
      }
LABEL_39:
      if (++v33 == v13) {
        goto LABEL_25;
      }
    }
    uint64_t v41 = 0;
    if (v12 < 1) {
      goto LABEL_39;
    }
LABEL_52:
    uint64_t v42 = 0;
    uint64_t v43 = v34 + v38 * v33;
    uint64_t v44 = *(void *)(v5 + 40);
    uint64_t v45 = *(void *)(v6 + 40);
    uint64_t v46 = v35 + v41 * v33;
    while (1)
    {
      if (v17
        || (v49 = *(void *)(v5 + 16), uint64_t v50 = v49 - 1, v49 < 1)
        || v50 > (int)v49 - 1
        || *(void *)(*(void *)(v5 + 24) + 8 * v50) == 1)
      {
        uint64_t v47 = 0;
        if (result) {
          goto LABEL_55;
        }
      }
      else
      {
        uint64_t v47 = *(void *)(*(void *)(v5 + 64) + 8 * v50);
        if (result) {
          goto LABEL_55;
        }
      }
      uint64_t v51 = *(void *)(v6 + 16);
      uint64_t v52 = v51 - 1;
      if (v51 >= 1 && v52 <= (int)v51 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v52) != 1)
      {
        uint64_t v48 = *(void *)(*(void *)(v6 + 64) + 8 * v52);
        goto LABEL_56;
      }
LABEL_55:
      uint64_t v48 = 0;
LABEL_56:
      *(void *)(v46 + v48 * v42 + v45) = (uint64_t)(1.0
                                                   / sqrt((double)(*(void *)(v43 + v47 * v42 + v44) + (uint64_t)a5)));
      if (v12 == ++v42) {
        goto LABEL_39;
      }
    }
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<int,int,(mlir::mps::arithmeticOp)6>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4, double a5)
{
  uint64_t v5 = **a1;
  uint64_t v6 = **a2;
  uint64_t v56 = **a4;
  uint64_t v57 = **a3;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    uint64_t result = 1;
    char v17 = 1;
    uint64_t v18 = 1;
LABEL_7:
    char v19 = 1;
LABEL_8:
    uint64_t v20 = 0;
    BOOL v21 = v7 < 1;
    int v22 = *(unsigned __int8 *)(v5 + 58);
    int v23 = v7 - 1;
    if (*(unsigned char *)(v6 + 58)) {
      char v19 = 1;
    }
    uint64_t v24 = v23;
    if (*(unsigned char *)(v6 + 58))
    {
      char v17 = 1;
      char v14 = 1;
      BOOL v21 = 1;
    }
    uint64_t v55 = v15;
    if (v15 > v23) {
      char v25 = 1;
    }
    else {
      char v25 = v19;
    }
    if (v12 > v24) {
      char v17 = 1;
    }
    if (v11 > v24) {
      char v26 = 1;
    }
    else {
      char v26 = v14;
    }
    char v27 = v8 > v24 || v21;
    while (1)
    {
      if (v22
        || (uint64_t v28 = *(void *)(v5 + 16), v29 = v28 - 4, v28 < 4)
        || v29 > (int)v28 - 1
        || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1)
      {
        uint64_t v30 = 0;
        if (v25) {
          goto LABEL_30;
        }
      }
      else
      {
        uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
        if (v25) {
          goto LABEL_30;
        }
      }
      if (*(void *)(*(void *)(v6 + 24) + 8 * v55) != 1)
      {
        uint64_t v31 = *(void *)(*(void *)(v6 + 64) + 8 * v55);
        if (v18 < 1) {
          goto LABEL_23;
        }
LABEL_33:
        uint64_t v32 = 0;
        uint64_t v33 = v57 + v30 * v20;
        uint64_t v34 = v56 + v31 * v20;
        while (2)
        {
          if (v22
            || (v35 = *(void *)(v5 + 16), uint64_t v36 = v35 - 3, v35 < 3)
            || v36 > (int)v35 - 1
            || *(void *)(*(void *)(v5 + 24) + 8 * v36) == 1)
          {
            uint64_t v37 = 0;
            if ((v17 & 1) == 0) {
              goto LABEL_40;
            }
            goto LABEL_41;
          }
          uint64_t v37 = *(void *)(*(void *)(v5 + 64) + 8 * v36);
          if (v17) {
            goto LABEL_41;
          }
LABEL_40:
          if (*(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
          {
LABEL_41:
            uint64_t v38 = 0;
            if (v13 >= 1) {
              break;
            }
            goto LABEL_34;
          }
          uint64_t v38 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
          if (v13 < 1)
          {
LABEL_34:
            if (++v32 == v18) {
              goto LABEL_23;
            }
            continue;
          }
          break;
        }
        uint64_t v39 = 0;
        uint64_t v40 = v33 + v37 * v32;
        uint64_t v41 = v34 + v38 * v32;
        while (2)
        {
          if (v22
            || (uint64_t v42 = *(void *)(v5 + 16), v43 = v42 - 2, v42 < 2)
            || v43 > (int)v42 - 1
            || *(void *)(*(void *)(v5 + 24) + 8 * v43) == 1)
          {
            uint64_t v44 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_51;
            }
            goto LABEL_52;
          }
          uint64_t v44 = *(void *)(*(void *)(v5 + 64) + 8 * v43);
          if (v26) {
            goto LABEL_52;
          }
LABEL_51:
          if (*(void *)(*(void *)(v6 + 24) + 8 * v11) == 1)
          {
LABEL_52:
            uint64_t v45 = 0;
            if (v10 >= 1) {
              break;
            }
            goto LABEL_45;
          }
          uint64_t v45 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
          if (v10 < 1)
          {
LABEL_45:
            if (++v39 == v13) {
              goto LABEL_34;
            }
            continue;
          }
          break;
        }
        uint64_t v46 = 0;
        uint64_t v47 = v40 + v44 * v39;
        uint64_t v48 = *(void *)(v5 + 40);
        uint64_t v49 = *(void *)(v6 + 40);
        uint64_t v50 = v41 + v45 * v39;
        while (2)
        {
          if (v22
            || (v53 = *(void *)(v5 + 16), uint64_t v54 = v53 - 1, v53 < 1)
            || v54 > (int)v53 - 1
            || *(void *)(*(void *)(v5 + 24) + 8 * v54) == 1)
          {
            uint64_t v52 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_60;
            }
          }
          else
          {
            uint64_t v52 = *(void *)(*(void *)(v5 + 64) + 8 * v54);
            if ((v27 & 1) == 0)
            {
LABEL_60:
              if (*(void *)(*(void *)(v6 + 24) + 8 * v8) != 1)
              {
                uint64_t v51 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_57:
                *(_DWORD *)(v50 + v51 * v46 + v49) = (int)(1.0
                                                         / sqrt((double)(*(_DWORD *)(v47 + v52 * v46 + v48) + (int)a5)));
                if (v10 == ++v46) {
                  goto LABEL_45;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v51 = 0;
        goto LABEL_57;
      }
LABEL_30:
      uint64_t v31 = 0;
      if (v18 >= 1) {
        goto LABEL_33;
      }
LABEL_23:
      if (++v20 == result) {
        return result;
      }
    }
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v17 = 0;
    uint64_t v12 = 0;
    char v14 = 0;
    uint64_t result = 1;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    goto LABEL_7;
  }
  uint64_t result = *(void *)(v9 + 8 * (v7 - 4));
  if (result >= 1)
  {
    uint64_t v15 = v7 - 4;
    char v17 = 0;
    char v14 = 0;
    char v19 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<short,short,(mlir::mps::arithmeticOp)6>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4, double a5)
{
  uint64_t v5 = **a1;
  uint64_t v6 = **a2;
  uint64_t v56 = **a4;
  uint64_t v57 = **a3;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v7 - 1;
  if (v7 <= 0)
  {
    uint64_t v11 = v7 - 2;
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(v6 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * v8);
  if (v7 == 1)
  {
    uint64_t v11 = -1;
LABEL_5:
    uint64_t v12 = v7 - 3;
    uint64_t v13 = 1;
    char v14 = 1;
LABEL_6:
    uint64_t v15 = v7 - 4;
    uint64_t result = 1;
    char v17 = 1;
    uint64_t v18 = 1;
LABEL_7:
    char v19 = 1;
LABEL_8:
    uint64_t v20 = 0;
    BOOL v21 = v7 < 1;
    int v22 = *(unsigned __int8 *)(v5 + 58);
    int v23 = v7 - 1;
    if (*(unsigned char *)(v6 + 58)) {
      char v19 = 1;
    }
    uint64_t v24 = v23;
    if (*(unsigned char *)(v6 + 58))
    {
      char v17 = 1;
      char v14 = 1;
      BOOL v21 = 1;
    }
    uint64_t v55 = v15;
    if (v15 > v23) {
      char v25 = 1;
    }
    else {
      char v25 = v19;
    }
    if (v12 > v24) {
      char v17 = 1;
    }
    if (v11 > v24) {
      char v26 = 1;
    }
    else {
      char v26 = v14;
    }
    char v27 = v8 > v24 || v21;
    while (1)
    {
      if (v22
        || (uint64_t v28 = *(void *)(v5 + 16), v29 = v28 - 4, v28 < 4)
        || v29 > (int)v28 - 1
        || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1)
      {
        uint64_t v30 = 0;
        if (v25) {
          goto LABEL_30;
        }
      }
      else
      {
        uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
        if (v25) {
          goto LABEL_30;
        }
      }
      if (*(void *)(*(void *)(v6 + 24) + 8 * v55) != 1)
      {
        uint64_t v31 = *(void *)(*(void *)(v6 + 64) + 8 * v55);
        if (v18 < 1) {
          goto LABEL_23;
        }
LABEL_33:
        uint64_t v32 = 0;
        uint64_t v33 = v57 + v30 * v20;
        uint64_t v34 = v56 + v31 * v20;
        while (2)
        {
          if (v22
            || (v35 = *(void *)(v5 + 16), uint64_t v36 = v35 - 3, v35 < 3)
            || v36 > (int)v35 - 1
            || *(void *)(*(void *)(v5 + 24) + 8 * v36) == 1)
          {
            uint64_t v37 = 0;
            if ((v17 & 1) == 0) {
              goto LABEL_40;
            }
            goto LABEL_41;
          }
          uint64_t v37 = *(void *)(*(void *)(v5 + 64) + 8 * v36);
          if (v17) {
            goto LABEL_41;
          }
LABEL_40:
          if (*(void *)(*(void *)(v6 + 24) + 8 * v12) == 1)
          {
LABEL_41:
            uint64_t v38 = 0;
            if (v13 >= 1) {
              break;
            }
            goto LABEL_34;
          }
          uint64_t v38 = *(void *)(*(void *)(v6 + 64) + 8 * v12);
          if (v13 < 1)
          {
LABEL_34:
            if (++v32 == v18) {
              goto LABEL_23;
            }
            continue;
          }
          break;
        }
        uint64_t v39 = 0;
        uint64_t v40 = v33 + v37 * v32;
        uint64_t v41 = v34 + v38 * v32;
        while (2)
        {
          if (v22
            || (uint64_t v42 = *(void *)(v5 + 16), v43 = v42 - 2, v42 < 2)
            || v43 > (int)v42 - 1
            || *(void *)(*(void *)(v5 + 24) + 8 * v43) == 1)
          {
            uint64_t v44 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_51;
            }
            goto LABEL_52;
          }
          uint64_t v44 = *(void *)(*(void *)(v5 + 64) + 8 * v43);
          if (v26) {
            goto LABEL_52;
          }
LABEL_51:
          if (*(void *)(*(void *)(v6 + 24) + 8 * v11) == 1)
          {
LABEL_52:
            uint64_t v45 = 0;
            if (v10 >= 1) {
              break;
            }
            goto LABEL_45;
          }
          uint64_t v45 = *(void *)(*(void *)(v6 + 64) + 8 * v11);
          if (v10 < 1)
          {
LABEL_45:
            if (++v39 == v13) {
              goto LABEL_34;
            }
            continue;
          }
          break;
        }
        uint64_t v46 = 0;
        uint64_t v47 = v40 + v44 * v39;
        uint64_t v48 = *(void *)(v5 + 40);
        uint64_t v49 = *(void *)(v6 + 40);
        uint64_t v50 = v41 + v45 * v39;
        while (2)
        {
          if (v22
            || (v53 = *(void *)(v5 + 16), uint64_t v54 = v53 - 1, v53 < 1)
            || v54 > (int)v53 - 1
            || *(void *)(*(void *)(v5 + 24) + 8 * v54) == 1)
          {
            uint64_t v52 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_60;
            }
          }
          else
          {
            uint64_t v52 = *(void *)(*(void *)(v5 + 64) + 8 * v54);
            if ((v27 & 1) == 0)
            {
LABEL_60:
              if (*(void *)(*(void *)(v6 + 24) + 8 * v8) != 1)
              {
                uint64_t v51 = *(void *)(*(void *)(v6 + 64) + 8 * v8);
LABEL_57:
                *(_WORD *)(v50 + v51 * v46 + v49) = (int)(1.0
                                                        / sqrt((double)(*(__int16 *)(v47 + v52 * v46 + v48) + (int)a5)));
                if (v10 == ++v46) {
                  goto LABEL_45;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v51 = 0;
        goto LABEL_57;
      }
LABEL_30:
      uint64_t v31 = 0;
      if (v18 >= 1) {
        goto LABEL_33;
      }
LABEL_23:
      if (++v20 == result) {
        return result;
      }
    }
  }
  uint64_t v11 = v7 - 2;
  uint64_t v13 = *(void *)(v9 + 8 * (v7 - 2));
  if ((unint64_t)v7 <= 2)
  {
    uint64_t v11 = 0;
    char v14 = 0;
    uint64_t v12 = -1;
    goto LABEL_6;
  }
  uint64_t v12 = v7 - 3;
  uint64_t v18 = *(void *)(v9 + 8 * (v7 - 3));
  if (v7 == 3)
  {
    char v17 = 0;
    uint64_t v12 = 0;
    char v14 = 0;
    uint64_t result = 1;
    uint64_t v15 = -1;
    uint64_t v11 = 1;
    goto LABEL_7;
  }
  uint64_t result = *(void *)(v9 + 8 * (v7 - 4));
  if (result >= 1)
  {
    uint64_t v15 = v7 - 4;
    char v17 = 0;
    char v14 = 0;
    char v19 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<signed char,signed char,(mlir::mps::arithmeticOp)6>(uint64_t result, uint64_t **a2, uint64_t **a3, uint64_t **a4, double a5)
{
  uint64_t v5 = **(void **)result;
  uint64_t v6 = **a2;
  uint64_t v7 = **a3;
  uint64_t v8 = **a4;
  uint64_t v9 = *(void *)(v6 + 16);
  if (v9 < 1)
  {
    uint64_t v9 = 1;
    uint64_t v13 = 1;
    uint64_t v12 = 1;
    uint64_t v14 = 1;
    goto LABEL_10;
  }
  uint64_t v10 = *(void *)(v6 + 24);
  uint64_t v11 = v10 + 8 * v9;
  uint64_t v12 = *(void *)(v11 - 8);
  if (v9 == 1)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    goto LABEL_10;
  }
  uint64_t v13 = *(void *)(v11 - 16);
  if ((unint64_t)v9 < 3)
  {
    uint64_t v9 = 1;
    uint64_t v14 = 1;
    goto LABEL_10;
  }
  uint64_t v15 = v10 + 8 * v9;
  uint64_t v14 = *(void *)(v15 - 24);
  if (v9 == 3)
  {
    uint64_t v9 = 1;
    goto LABEL_10;
  }
  uint64_t v9 = *(void *)(v15 - 32);
  if (v9 >= 1)
  {
LABEL_10:
    uint64_t v16 = 0;
    while (1)
    {
      if (*(unsigned char *)(v5 + 58)
        || (uint64_t v17 = *(void *)(v5 + 16), v18 = v17 - 4, v17 < 4)
        || v18 > (int)v17 - 1
        || *(void *)(*(void *)(v5 + 24) + 8 * v18) == 1)
      {
        uint64_t v19 = 0;
        uint64_t result = *(unsigned __int8 *)(v6 + 58);
        if (*(unsigned char *)(v6 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v19 = *(void *)(*(void *)(v5 + 64) + 8 * v18);
        uint64_t result = *(unsigned __int8 *)(v6 + 58);
        if (*(unsigned char *)(v6 + 58)) {
          break;
        }
      }
      uint64_t v20 = *(void *)(v6 + 16);
      uint64_t result = v20 - 4;
      if (v20 < 4 || result > (int)v20 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * result) == 1) {
        break;
      }
      uint64_t v21 = *(void *)(*(void *)(v6 + 64) + 8 * result);
      if (v14 >= 1) {
        goto LABEL_24;
      }
LABEL_11:
      if (++v16 == v9) {
        return result;
      }
    }
    uint64_t v21 = 0;
    if (v14 < 1) {
      goto LABEL_11;
    }
LABEL_24:
    uint64_t result = 0;
    uint64_t v22 = v7 + v19 * v16;
    uint64_t v23 = v8 + v21 * v16;
    while (1)
    {
      if (*(unsigned char *)(v5 + 58)
        || (uint64_t v24 = *(void *)(v5 + 16), v25 = v24 - 3, v24 < 3)
        || v25 > (int)v24 - 1
        || *(void *)(*(void *)(v5 + 24) + 8 * v25) == 1)
      {
        uint64_t v26 = 0;
        if (*(unsigned char *)(v6 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v26 = *(void *)(*(void *)(v5 + 64) + 8 * v25);
        if (*(unsigned char *)(v6 + 58)) {
          break;
        }
      }
      uint64_t v27 = *(void *)(v6 + 16);
      uint64_t v28 = v27 - 3;
      if (v27 < 3 || v28 > (int)v27 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v28) == 1) {
        break;
      }
      uint64_t v29 = *(void *)(*(void *)(v6 + 64) + 8 * v28);
      if (v13 >= 1) {
        goto LABEL_38;
      }
LABEL_25:
      if (++result == v14) {
        goto LABEL_11;
      }
    }
    uint64_t v29 = 0;
    if (v13 < 1) {
      goto LABEL_25;
    }
LABEL_38:
    uint64_t v30 = 0;
    uint64_t v31 = v22 + v26 * result;
    uint64_t v32 = v23 + v29 * result;
    while (1)
    {
      if (*(unsigned char *)(v5 + 58)
        || (v33 = *(void *)(v5 + 16), uint64_t v34 = v33 - 2, v33 < 2)
        || v34 > (int)v33 - 1
        || *(void *)(*(void *)(v5 + 24) + 8 * v34) == 1)
      {
        uint64_t v35 = 0;
        if (*(unsigned char *)(v6 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v35 = *(void *)(*(void *)(v5 + 64) + 8 * v34);
        if (*(unsigned char *)(v6 + 58)) {
          break;
        }
      }
      uint64_t v36 = *(void *)(v6 + 16);
      uint64_t v37 = v36 - 2;
      if (v36 < 2 || v37 > (int)v36 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v37) == 1) {
        break;
      }
      uint64_t v38 = *(void *)(*(void *)(v6 + 64) + 8 * v37);
      if (v12 >= 1) {
        goto LABEL_52;
      }
LABEL_39:
      if (++v30 == v13) {
        goto LABEL_25;
      }
    }
    uint64_t v38 = 0;
    if (v12 < 1) {
      goto LABEL_39;
    }
LABEL_52:
    uint64_t v39 = 0;
    uint64_t v40 = v31 + v35 * v30;
    uint64_t v41 = v32 + v38 * v30;
    while (1)
    {
      if (*(unsigned char *)(v5 + 58)
        || (uint64_t v44 = *(void *)(v5 + 16), v45 = v44 - 1, v44 < 1)
        || v45 > (int)v44 - 1
        || *(void *)(*(void *)(v5 + 24) + 8 * v45) == 1)
      {
        uint64_t v42 = 0;
        if (*(unsigned char *)(v6 + 58)) {
          goto LABEL_55;
        }
      }
      else
      {
        uint64_t v42 = *(void *)(*(void *)(v5 + 64) + 8 * v45);
        if (*(unsigned char *)(v6 + 58)) {
          goto LABEL_55;
        }
      }
      uint64_t v46 = *(void *)(v6 + 16);
      uint64_t v47 = v46 - 1;
      if (v46 >= 1 && v47 <= (int)v46 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v47) != 1)
      {
        uint64_t v43 = *(void *)(*(void *)(v6 + 64) + 8 * v47);
        goto LABEL_56;
      }
LABEL_55:
      uint64_t v43 = 0;
LABEL_56:
      *(unsigned char *)(v41 + v43 * v39 + *(void *)(v6 + 40)) = (int)(1.0
                                                               / sqrt((double)(*(char *)(v40
                                                                                       + v42 * v39
                                                                                       + *(void *)(v5 + 40))
                                                                             + (int)a5)));
      if (v12 == ++v39) {
        goto LABEL_39;
      }
    }
  }
  return result;
}

float std::sqrt[abi:nn180100]<float>(float *a1)
{
  float v1 = a1[1];
  float v2 = INFINITY;
  if (fabsf(v1) != INFINITY)
  {
    float v2 = *a1;
    if (fabsf(*a1) == INFINITY)
    {
      if (v2 <= 0.0) {
        return 0.0;
      }
    }
    else
    {
      float v6 = a1[1];
      float v7 = *a1;
      float v3 = sqrtf(hypotf(*a1, v1));
      float v4 = atan2f(v6, v7);
      float v2 = NAN;
      if ((LODWORD(v3) & 0x80000000) == 0)
      {
        if (fabsf(v4 * 0.5) == INFINITY)
        {
          if (v3 == INFINITY) {
            return v3;
          }
          else {
            return NAN;
          }
        }
        else
        {
          return v3 * __sincosf_stret(v4 * 0.5).__cosval;
        }
      }
    }
  }
  return v2;
}

uint64_t **mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)7>(uint64_t **result, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **result;
  uint64_t v5 = **a2;
  uint64_t v6 = **a3;
  uint64_t v7 = **a4;
  uint64_t v8 = *(void *)(v5 + 16);
  if (v8 < 1)
  {
    uint64_t v8 = 1;
    uint64_t v12 = 1;
    uint64_t v11 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v9 = *(void *)(v5 + 24);
  uint64_t v10 = v9 + 8 * v8;
  uint64_t v11 = *(void *)(v10 - 8);
  if (v8 == 1)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v12 = *(void *)(v10 - 16);
  if ((unint64_t)v8 < 3)
  {
    uint64_t v8 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v14 = v9 + 8 * v8;
  uint64_t v13 = *(void *)(v14 - 24);
  if (v8 == 3)
  {
    uint64_t v8 = 1;
    goto LABEL_10;
  }
  uint64_t v8 = *(void *)(v14 - 32);
  if (v8 >= 1)
  {
LABEL_10:
    uint64_t v15 = 0;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v16 = *(void *)(v4 + 16), uint64_t v17 = v16 - 4, v16 < 4)
        || v17 > (int)v16 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v17) == 1)
      {
        uint64_t result = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t result = *(uint64_t ***)(*(void *)(v4 + 64) + 8 * v17);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v18 = *(void *)(v5 + 16);
      uint64_t v19 = v18 - 4;
      if (v18 < 4 || v19 > (int)v18 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v19) == 1) {
        break;
      }
      uint64_t v20 = *(void *)(*(void *)(v5 + 64) + 8 * v19);
      if (v13 >= 1) {
        goto LABEL_24;
      }
LABEL_11:
      if (++v15 == v8) {
        return result;
      }
    }
    uint64_t v20 = 0;
    if (v13 < 1) {
      goto LABEL_11;
    }
LABEL_24:
    uint64_t v21 = 0;
    uint64_t result = (uint64_t **)(v6 + (void)result * v15);
    uint64_t v22 = v7 + v20 * v15;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v23 = *(void *)(v4 + 16), uint64_t v24 = v23 - 3, v23 < 3)
        || v24 > (int)v23 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1)
      {
        uint64_t v25 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v26 = *(void *)(v5 + 16);
      uint64_t v27 = v26 - 3;
      if (v26 < 3 || v27 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v27) == 1) {
        break;
      }
      uint64_t v28 = *(void *)(*(void *)(v5 + 64) + 8 * v27);
      if (v12 >= 1) {
        goto LABEL_38;
      }
LABEL_25:
      if (++v21 == v13) {
        goto LABEL_11;
      }
    }
    uint64_t v28 = 0;
    if (v12 < 1) {
      goto LABEL_25;
    }
LABEL_38:
    uint64_t v29 = 0;
    uint64_t v30 = (char *)result + v25 * v21;
    uint64_t v31 = v22 + v28 * v21;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (uint64_t v32 = *(void *)(v4 + 16), v33 = v32 - 2, v32 < 2)
        || v33 > (int)v32 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v33) == 1)
      {
        uint64_t v34 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v34 = *(void *)(*(void *)(v4 + 64) + 8 * v33);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v35 = *(void *)(v5 + 16);
      uint64_t v36 = v35 - 2;
      if (v35 < 2 || v36 > (int)v35 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v36) == 1) {
        break;
      }
      uint64_t v37 = *(void *)(*(void *)(v5 + 64) + 8 * v36);
      if (v11 >= 1) {
        goto LABEL_52;
      }
LABEL_39:
      if (++v29 == v12) {
        goto LABEL_25;
      }
    }
    uint64_t v37 = 0;
    if (v11 < 1) {
      goto LABEL_39;
    }
LABEL_52:
    uint64_t v38 = 0;
    uint64_t v39 = &v30[v34 * v29];
    uint64_t v40 = v31 + v37 * v29;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 1, v43 < 1)
        || v44 > (int)v43 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
      {
        uint64_t v41 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      else
      {
        uint64_t v41 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      uint64_t v45 = *(void *)(v5 + 16);
      uint64_t v46 = v45 - 1;
      if (v45 >= 1 && v46 <= (int)v45 - 1 && *(void *)(*(void *)(v5 + 24) + 8 * v46) != 1)
      {
        uint64_t v42 = *(void *)(*(void *)(v5 + 64) + 8 * v46);
        goto LABEL_56;
      }
LABEL_55:
      uint64_t v42 = 0;
LABEL_56:
      *(float32x2_t *)(v40 + v42 * v38 + *(void *)(v5 + 40)) = vrndp_f32(*(float32x2_t *)&v39[v41 * v38
                                                                                              + *(void *)(v4 + 40)]);
      if (v11 == ++v38) {
        goto LABEL_39;
      }
    }
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<float,float,(mlir::mps::arithmeticOp)7>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v56 = **a4;
  uint64_t v57 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v24 = 1;
    }
    else
    {
      char v24 = v13;
    }
    if (*(unsigned char *)(v5 + 58)) {
      BOOL v20 = 1;
    }
    if (v14 > v22) {
      char v25 = 1;
    }
    else {
      char v25 = v18;
    }
    if (v11 > v23) {
      char v26 = 1;
    }
    else {
      char v26 = v16;
    }
    if (v10 > v23) {
      char v27 = 1;
    }
    else {
      char v27 = v24;
    }
    char v28 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v29 = *(void *)(v4 + 16), uint64_t v30 = v29 - 4, v29 < 4)
        || v30 > (int)v29 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v30) == 1)
      {
        uint64_t v31 = 0;
        if (v25) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v31 = *(void *)(*(void *)(v4 + 64) + 8 * v30);
        if (v25) {
          goto LABEL_34;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v14) != 1)
      {
        uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v14);
        if (v17 < 1) {
          goto LABEL_27;
        }
LABEL_37:
        uint64_t v33 = 0;
        uint64_t v34 = v57 + v31 * v19;
        uint64_t v35 = v56 + v32 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v36 = *(void *)(v4 + 16), v37 = v36 - 3, v36 < 3)
            || v37 > (int)v36 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v37) == 1)
          {
            uint64_t v38 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_44;
            }
            goto LABEL_45;
          }
          uint64_t v38 = *(void *)(*(void *)(v4 + 64) + 8 * v37);
          if (v26) {
            goto LABEL_45;
          }
LABEL_44:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_45:
            uint64_t v39 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_38;
          }
          uint64_t v39 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_38:
            if (++v33 == v17) {
              goto LABEL_27;
            }
            continue;
          }
          break;
        }
        uint64_t v40 = 0;
        uint64_t v41 = v34 + v38 * v33;
        uint64_t v42 = v35 + v39 * v33;
        while (2)
        {
          if (v21
            || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 2, v43 < 2)
            || v44 > (int)v43 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
          {
            uint64_t v45 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_56;
          }
          uint64_t v45 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
          if (v27) {
            goto LABEL_56;
          }
LABEL_55:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_56:
            uint64_t v46 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_49;
          }
          uint64_t v46 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_49:
            if (++v40 == v12) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        uint64_t v47 = 0;
        uint64_t v48 = v41 + v45 * v40;
        uint64_t v49 = *(void *)(v4 + 40);
        uint64_t v50 = *(void *)(v5 + 40);
        uint64_t v51 = v42 + v46 * v40;
        while (2)
        {
          if (v21
            || (uint64_t v54 = *(void *)(v4 + 16), v55 = v54 - 1, v54 < 1)
            || v55 > (int)v54 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v55) == 1)
          {
            uint64_t v53 = 0;
            if ((v28 & 1) == 0) {
              goto LABEL_64;
            }
          }
          else
          {
            uint64_t v53 = *(void *)(*(void *)(v4 + 64) + 8 * v55);
            if ((v28 & 1) == 0)
            {
LABEL_64:
              if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
              {
                uint64_t v52 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_61:
                *(float *)(v51 + v52 * v47 + v50) = ceilf(*(float *)(v48 + v53 * v47 + v49));
                if (v9 == ++v47) {
                  goto LABEL_49;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v52 = 0;
        goto LABEL_61;
      }
LABEL_34:
      uint64_t v32 = 0;
      if (v17 >= 1) {
        goto LABEL_37;
      }
LABEL_27:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v14 = v6 - 4;
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t **mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)7>(uint64_t **result, uint64_t **a2, uint64_t **a3, uint64_t **a4, float16x4_t a5)
{
  uint64_t v5 = **result;
  uint64_t v6 = **a2;
  uint64_t v7 = **a3;
  uint64_t v8 = **a4;
  uint64_t v9 = *(void *)(v6 + 16);
  if (v9 < 1)
  {
    uint64_t v9 = 1;
    uint64_t v13 = 1;
    uint64_t v12 = 1;
    uint64_t v14 = 1;
    goto LABEL_10;
  }
  uint64_t v10 = *(void *)(v6 + 24);
  uint64_t v11 = v10 + 8 * v9;
  uint64_t v12 = *(void *)(v11 - 8);
  if (v9 == 1)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    goto LABEL_10;
  }
  uint64_t v13 = *(void *)(v11 - 16);
  if ((unint64_t)v9 < 3)
  {
    uint64_t v9 = 1;
    uint64_t v14 = 1;
    goto LABEL_10;
  }
  uint64_t v15 = v10 + 8 * v9;
  uint64_t v14 = *(void *)(v15 - 24);
  if (v9 == 3)
  {
    uint64_t v9 = 1;
    goto LABEL_10;
  }
  uint64_t v9 = *(void *)(v15 - 32);
  if (v9 >= 1)
  {
LABEL_10:
    uint64_t v16 = 0;
    while (1)
    {
      if (*(unsigned char *)(v5 + 58)
        || (uint64_t v17 = *(void *)(v5 + 16), v18 = v17 - 4, v17 < 4)
        || v18 > (int)v17 - 1
        || *(void *)(*(void *)(v5 + 24) + 8 * v18) == 1)
      {
        uint64_t result = 0;
        if (*(unsigned char *)(v6 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t result = *(uint64_t ***)(*(void *)(v5 + 64) + 8 * v18);
        if (*(unsigned char *)(v6 + 58)) {
          break;
        }
      }
      uint64_t v19 = *(void *)(v6 + 16);
      uint64_t v20 = v19 - 4;
      if (v19 < 4 || v20 > (int)v19 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v20) == 1) {
        break;
      }
      uint64_t v21 = *(void *)(*(void *)(v6 + 64) + 8 * v20);
      if (v14 >= 1) {
        goto LABEL_24;
      }
LABEL_11:
      if (++v16 == v9) {
        return result;
      }
    }
    uint64_t v21 = 0;
    if (v14 < 1) {
      goto LABEL_11;
    }
LABEL_24:
    uint64_t v22 = 0;
    uint64_t result = (uint64_t **)(v7 + (void)result * v16);
    uint64_t v23 = v8 + v21 * v16;
    while (1)
    {
      if (*(unsigned char *)(v5 + 58)
        || (uint64_t v24 = *(void *)(v5 + 16), v25 = v24 - 3, v24 < 3)
        || v25 > (int)v24 - 1
        || *(void *)(*(void *)(v5 + 24) + 8 * v25) == 1)
      {
        uint64_t v26 = 0;
        if (*(unsigned char *)(v6 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v26 = *(void *)(*(void *)(v5 + 64) + 8 * v25);
        if (*(unsigned char *)(v6 + 58)) {
          break;
        }
      }
      uint64_t v27 = *(void *)(v6 + 16);
      uint64_t v28 = v27 - 3;
      if (v27 < 3 || v28 > (int)v27 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v28) == 1) {
        break;
      }
      uint64_t v29 = *(void *)(*(void *)(v6 + 64) + 8 * v28);
      if (v13 >= 1) {
        goto LABEL_38;
      }
LABEL_25:
      if (++v22 == v14) {
        goto LABEL_11;
      }
    }
    uint64_t v29 = 0;
    if (v13 < 1) {
      goto LABEL_25;
    }
LABEL_38:
    uint64_t v30 = 0;
    uint64_t v31 = (char *)result + v26 * v22;
    uint64_t v32 = v23 + v29 * v22;
    while (1)
    {
      if (*(unsigned char *)(v5 + 58)
        || (v33 = *(void *)(v5 + 16), uint64_t v34 = v33 - 2, v33 < 2)
        || v34 > (int)v33 - 1
        || *(void *)(*(void *)(v5 + 24) + 8 * v34) == 1)
      {
        uint64_t v35 = 0;
        if (*(unsigned char *)(v6 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v35 = *(void *)(*(void *)(v5 + 64) + 8 * v34);
        if (*(unsigned char *)(v6 + 58)) {
          break;
        }
      }
      uint64_t v36 = *(void *)(v6 + 16);
      uint64_t v37 = v36 - 2;
      if (v36 < 2 || v37 > (int)v36 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v37) == 1) {
        break;
      }
      uint64_t v38 = *(void *)(*(void *)(v6 + 64) + 8 * v37);
      if (v12 >= 1) {
        goto LABEL_52;
      }
LABEL_39:
      if (++v30 == v13) {
        goto LABEL_25;
      }
    }
    uint64_t v38 = 0;
    if (v12 < 1) {
      goto LABEL_39;
    }
LABEL_52:
    uint64_t v39 = 0;
    uint64_t v40 = &v31[v35 * v30];
    uint64_t v41 = v32 + v38 * v30;
    while (1)
    {
      if (*(unsigned char *)(v5 + 58)
        || (uint64_t v44 = *(void *)(v5 + 16), v45 = v44 - 1, v44 < 1)
        || v45 > (int)v44 - 1
        || *(void *)(*(void *)(v5 + 24) + 8 * v45) == 1)
      {
        uint64_t v42 = 0;
        if (*(unsigned char *)(v6 + 58)) {
          goto LABEL_55;
        }
      }
      else
      {
        uint64_t v42 = *(void *)(*(void *)(v5 + 64) + 8 * v45);
        if (*(unsigned char *)(v6 + 58)) {
          goto LABEL_55;
        }
      }
      uint64_t v46 = *(void *)(v6 + 16);
      uint64_t v47 = v46 - 1;
      if (v46 >= 1 && v47 <= (int)v46 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v47) != 1)
      {
        uint64_t v43 = *(void *)(*(void *)(v6 + 64) + 8 * v47);
        goto LABEL_56;
      }
LABEL_55:
      uint64_t v43 = 0;
LABEL_56:
      a5.i32[0] = *(_DWORD *)&v40[v42 * v39 + *(void *)(v5 + 40)];
      a5 = (float16x4_t)vcvtq_f32_f16(vrndp_f16(a5)).u64[0];
      *(double *)(v41 + v43 * v39++ + *(void *)(v6 + 40)) = *(double *)&a5;
      if (v12 == v39) {
        goto LABEL_39;
      }
    }
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<half,float,(mlir::mps::arithmeticOp)7>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v62 = **a4;
  uint64_t v63 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v24 = 1;
    }
    else
    {
      char v24 = v13;
    }
    if (*(unsigned char *)(v5 + 58)) {
      BOOL v20 = 1;
    }
    if (v14 > v22) {
      char v25 = 1;
    }
    else {
      char v25 = v18;
    }
    if (v11 > v23) {
      char v26 = 1;
    }
    else {
      char v26 = v16;
    }
    if (v10 > v23) {
      char v27 = 1;
    }
    else {
      char v27 = v24;
    }
    char v28 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v29 = *(void *)(v4 + 16), uint64_t v30 = v29 - 4, v29 < 4)
        || v30 > (int)v29 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v30) == 1)
      {
        uint64_t v31 = 0;
        if (v25) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v31 = *(void *)(*(void *)(v4 + 64) + 8 * v30);
        if (v25) {
          goto LABEL_34;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v14) != 1)
      {
        uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v14);
        if (v17 < 1) {
          goto LABEL_27;
        }
LABEL_37:
        uint64_t v33 = 0;
        uint64_t v34 = v63 + v31 * v19;
        uint64_t v35 = v62 + v32 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v36 = *(void *)(v4 + 16), v37 = v36 - 3, v36 < 3)
            || v37 > (int)v36 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v37) == 1)
          {
            uint64_t v38 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_44;
            }
            goto LABEL_45;
          }
          uint64_t v38 = *(void *)(*(void *)(v4 + 64) + 8 * v37);
          if (v26) {
            goto LABEL_45;
          }
LABEL_44:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_45:
            uint64_t v39 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_38;
          }
          uint64_t v39 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_38:
            if (++v33 == v17) {
              goto LABEL_27;
            }
            continue;
          }
          break;
        }
        uint64_t v40 = 0;
        uint64_t v41 = v34 + v38 * v33;
        uint64_t v42 = v35 + v39 * v33;
        while (2)
        {
          if (v21
            || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 2, v43 < 2)
            || v44 > (int)v43 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
          {
            uint64_t v45 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_56;
          }
          uint64_t v45 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
          if (v27) {
            goto LABEL_56;
          }
LABEL_55:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_56:
            uint64_t v46 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_49;
          }
          uint64_t v46 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_49:
            if (++v40 == v12) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        uint64_t v47 = 0;
        uint64_t v48 = v41 + v45 * v40;
        uint64_t v49 = *(void *)(v4 + 40);
        uint64_t v50 = *(void *)(v5 + 40);
        uint64_t v51 = v42 + v46 * v40;
        while (2)
        {
          if (v21
            || (uint64_t v60 = *(void *)(v4 + 16), v61 = v60 - 1, v60 < 1)
            || v61 > (int)v60 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v61) == 1)
          {
            uint64_t v59 = 0;
            if ((v28 & 1) == 0) {
              goto LABEL_64;
            }
          }
          else
          {
            uint64_t v59 = *(void *)(*(void *)(v4 + 64) + 8 * v61);
            if ((v28 & 1) == 0)
            {
LABEL_64:
              if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
              {
                uint64_t v52 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_61:
                _H0 = ceill(*(short float *)(v48 + v59 * v47 + v49));
                __asm { FCVT            S0, H0 }
                *(_DWORD *)(v51 + v52 * v47++ + v50) = _S0;
                if (v9 == v47) {
                  goto LABEL_49;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v52 = 0;
        goto LABEL_61;
      }
LABEL_34:
      uint64_t v32 = 0;
      if (v17 >= 1) {
        goto LABEL_37;
      }
LABEL_27:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v14 = v6 - 4;
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t **mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<half,(void *)0>,(mlir::mps::arithmeticOp)7>(uint64_t **result, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **result;
  uint64_t v5 = **a2;
  uint64_t v6 = **a3;
  uint64_t v7 = **a4;
  uint64_t v8 = *(void *)(v5 + 16);
  if (v8 < 1)
  {
    uint64_t v8 = 1;
    uint64_t v12 = 1;
    uint64_t v11 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v9 = *(void *)(v5 + 24);
  uint64_t v10 = v9 + 8 * v8;
  uint64_t v11 = *(void *)(v10 - 8);
  if (v8 == 1)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v12 = *(void *)(v10 - 16);
  if ((unint64_t)v8 < 3)
  {
    uint64_t v8 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v14 = v9 + 8 * v8;
  uint64_t v13 = *(void *)(v14 - 24);
  if (v8 == 3)
  {
    uint64_t v8 = 1;
    goto LABEL_10;
  }
  uint64_t v8 = *(void *)(v14 - 32);
  if (v8 >= 1)
  {
LABEL_10:
    uint64_t v15 = 0;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v16 = *(void *)(v4 + 16), uint64_t v17 = v16 - 4, v16 < 4)
        || v17 > (int)v16 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v17) == 1)
      {
        uint64_t result = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t result = *(uint64_t ***)(*(void *)(v4 + 64) + 8 * v17);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v18 = *(void *)(v5 + 16);
      uint64_t v19 = v18 - 4;
      if (v18 < 4 || v19 > (int)v18 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v19) == 1) {
        break;
      }
      uint64_t v20 = *(void *)(*(void *)(v5 + 64) + 8 * v19);
      if (v13 >= 1) {
        goto LABEL_24;
      }
LABEL_11:
      if (++v15 == v8) {
        return result;
      }
    }
    uint64_t v20 = 0;
    if (v13 < 1) {
      goto LABEL_11;
    }
LABEL_24:
    uint64_t v21 = 0;
    uint64_t result = (uint64_t **)(v6 + (void)result * v15);
    uint64_t v22 = v7 + v20 * v15;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v23 = *(void *)(v4 + 16), uint64_t v24 = v23 - 3, v23 < 3)
        || v24 > (int)v23 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1)
      {
        uint64_t v25 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v26 = *(void *)(v5 + 16);
      uint64_t v27 = v26 - 3;
      if (v26 < 3 || v27 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v27) == 1) {
        break;
      }
      uint64_t v28 = *(void *)(*(void *)(v5 + 64) + 8 * v27);
      if (v12 >= 1) {
        goto LABEL_38;
      }
LABEL_25:
      if (++v21 == v13) {
        goto LABEL_11;
      }
    }
    uint64_t v28 = 0;
    if (v12 < 1) {
      goto LABEL_25;
    }
LABEL_38:
    uint64_t v29 = 0;
    uint64_t v30 = (char *)result + v25 * v21;
    uint64_t v31 = v22 + v28 * v21;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (uint64_t v32 = *(void *)(v4 + 16), v33 = v32 - 2, v32 < 2)
        || v33 > (int)v32 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v33) == 1)
      {
        uint64_t v34 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v34 = *(void *)(*(void *)(v4 + 64) + 8 * v33);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v35 = *(void *)(v5 + 16);
      uint64_t v36 = v35 - 2;
      if (v35 < 2 || v36 > (int)v35 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v36) == 1) {
        break;
      }
      uint64_t v37 = *(void *)(*(void *)(v5 + 64) + 8 * v36);
      if (v11 >= 1) {
        goto LABEL_52;
      }
LABEL_39:
      if (++v29 == v12) {
        goto LABEL_25;
      }
    }
    uint64_t v37 = 0;
    if (v11 < 1) {
      goto LABEL_39;
    }
LABEL_52:
    uint64_t v38 = 0;
    uint64_t v39 = &v30[v34 * v29];
    uint64_t v40 = v31 + v37 * v29;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (uint64_t v46 = *(void *)(v4 + 16), v47 = v46 - 1, v46 < 1)
        || v47 > (int)v46 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v47) == 1)
      {
        uint64_t v41 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      else
      {
        uint64_t v41 = *(void *)(*(void *)(v4 + 64) + 8 * v47);
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      uint64_t v48 = *(void *)(v5 + 16);
      uint64_t v49 = v48 - 1;
      if (v48 >= 1 && v49 <= (int)v48 - 1 && *(void *)(*(void *)(v5 + 24) + 8 * v49) != 1)
      {
        uint64_t v42 = *(void *)(*(void *)(v5 + 64) + 8 * v49);
        goto LABEL_56;
      }
LABEL_55:
      uint64_t v42 = 0;
LABEL_56:
      uint64_t v43 = (short float *)&v39[v41 * v38 + *(void *)(v4 + 40)];
      uint64_t v44 = (short float *)(v40 + v42 * v38 + *(void *)(v5 + 40));
      short float v45 = ceill(v43[1]);
      short float *v44 = ceill(*v43);
      v44[1] = v45;
      if (v11 == ++v38) {
        goto LABEL_39;
      }
    }
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<half,half,(mlir::mps::arithmeticOp)7>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v56 = **a4;
  uint64_t v57 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v24 = 1;
    }
    else
    {
      char v24 = v13;
    }
    if (*(unsigned char *)(v5 + 58)) {
      BOOL v20 = 1;
    }
    if (v14 > v22) {
      char v25 = 1;
    }
    else {
      char v25 = v18;
    }
    if (v11 > v23) {
      char v26 = 1;
    }
    else {
      char v26 = v16;
    }
    if (v10 > v23) {
      char v27 = 1;
    }
    else {
      char v27 = v24;
    }
    char v28 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v29 = *(void *)(v4 + 16), uint64_t v30 = v29 - 4, v29 < 4)
        || v30 > (int)v29 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v30) == 1)
      {
        uint64_t v31 = 0;
        if (v25) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v31 = *(void *)(*(void *)(v4 + 64) + 8 * v30);
        if (v25) {
          goto LABEL_34;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v14) != 1)
      {
        uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v14);
        if (v17 < 1) {
          goto LABEL_27;
        }
LABEL_37:
        uint64_t v33 = 0;
        uint64_t v34 = v57 + v31 * v19;
        uint64_t v35 = v56 + v32 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v36 = *(void *)(v4 + 16), v37 = v36 - 3, v36 < 3)
            || v37 > (int)v36 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v37) == 1)
          {
            uint64_t v38 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_44;
            }
            goto LABEL_45;
          }
          uint64_t v38 = *(void *)(*(void *)(v4 + 64) + 8 * v37);
          if (v26) {
            goto LABEL_45;
          }
LABEL_44:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_45:
            uint64_t v39 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_38;
          }
          uint64_t v39 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_38:
            if (++v33 == v17) {
              goto LABEL_27;
            }
            continue;
          }
          break;
        }
        uint64_t v40 = 0;
        uint64_t v41 = v34 + v38 * v33;
        uint64_t v42 = v35 + v39 * v33;
        while (2)
        {
          if (v21
            || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 2, v43 < 2)
            || v44 > (int)v43 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
          {
            uint64_t v45 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_56;
          }
          uint64_t v45 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
          if (v27) {
            goto LABEL_56;
          }
LABEL_55:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_56:
            uint64_t v46 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_49;
          }
          uint64_t v46 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_49:
            if (++v40 == v12) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        uint64_t v47 = 0;
        uint64_t v48 = v41 + v45 * v40;
        uint64_t v49 = *(void *)(v4 + 40);
        uint64_t v50 = *(void *)(v5 + 40);
        uint64_t v51 = v42 + v46 * v40;
        while (2)
        {
          if (v21
            || (uint64_t v54 = *(void *)(v4 + 16), v55 = v54 - 1, v54 < 1)
            || v55 > (int)v54 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v55) == 1)
          {
            uint64_t v53 = 0;
            if ((v28 & 1) == 0) {
              goto LABEL_64;
            }
          }
          else
          {
            uint64_t v53 = *(void *)(*(void *)(v4 + 64) + 8 * v55);
            if ((v28 & 1) == 0)
            {
LABEL_64:
              if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
              {
                uint64_t v52 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_61:
                *(short float *)(v51 + v52 * v47 + v50) = ceill(*(short float *)(v48 + v53 * v47 + v49));
                if (v9 == ++v47) {
                  goto LABEL_49;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v52 = 0;
        goto LABEL_61;
      }
LABEL_34:
      uint64_t v32 = 0;
      if (v17 >= 1) {
        goto LABEL_37;
      }
LABEL_27:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v14 = v6 - 4;
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t **mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<half,(void *)0>,(mlir::mps::arithmeticOp)7>(uint64_t **result, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **result;
  uint64_t v5 = **a2;
  uint64_t v6 = **a3;
  uint64_t v7 = **a4;
  uint64_t v8 = *(void *)(v5 + 16);
  if (v8 < 1)
  {
    uint64_t v8 = 1;
    uint64_t v12 = 1;
    uint64_t v11 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v9 = *(void *)(v5 + 24);
  uint64_t v10 = v9 + 8 * v8;
  uint64_t v11 = *(void *)(v10 - 8);
  if (v8 == 1)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v12 = *(void *)(v10 - 16);
  if ((unint64_t)v8 < 3)
  {
    uint64_t v8 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v14 = v9 + 8 * v8;
  uint64_t v13 = *(void *)(v14 - 24);
  if (v8 == 3)
  {
    uint64_t v8 = 1;
    goto LABEL_10;
  }
  uint64_t v8 = *(void *)(v14 - 32);
  if (v8 >= 1)
  {
LABEL_10:
    uint64_t v15 = 0;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v16 = *(void *)(v4 + 16), uint64_t v17 = v16 - 4, v16 < 4)
        || v17 > (int)v16 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v17) == 1)
      {
        uint64_t result = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t result = *(uint64_t ***)(*(void *)(v4 + 64) + 8 * v17);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v18 = *(void *)(v5 + 16);
      uint64_t v19 = v18 - 4;
      if (v18 < 4 || v19 > (int)v18 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v19) == 1) {
        break;
      }
      uint64_t v20 = *(void *)(*(void *)(v5 + 64) + 8 * v19);
      if (v13 >= 1) {
        goto LABEL_24;
      }
LABEL_11:
      if (++v15 == v8) {
        return result;
      }
    }
    uint64_t v20 = 0;
    if (v13 < 1) {
      goto LABEL_11;
    }
LABEL_24:
    uint64_t v21 = 0;
    uint64_t result = (uint64_t **)(v6 + (void)result * v15);
    uint64_t v22 = v7 + v20 * v15;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v23 = *(void *)(v4 + 16), uint64_t v24 = v23 - 3, v23 < 3)
        || v24 > (int)v23 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1)
      {
        uint64_t v25 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v26 = *(void *)(v5 + 16);
      uint64_t v27 = v26 - 3;
      if (v26 < 3 || v27 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v27) == 1) {
        break;
      }
      uint64_t v28 = *(void *)(*(void *)(v5 + 64) + 8 * v27);
      if (v12 >= 1) {
        goto LABEL_38;
      }
LABEL_25:
      if (++v21 == v13) {
        goto LABEL_11;
      }
    }
    uint64_t v28 = 0;
    if (v12 < 1) {
      goto LABEL_25;
    }
LABEL_38:
    uint64_t v29 = 0;
    uint64_t v30 = (char *)result + v25 * v21;
    uint64_t v31 = v22 + v28 * v21;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (uint64_t v32 = *(void *)(v4 + 16), v33 = v32 - 2, v32 < 2)
        || v33 > (int)v32 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v33) == 1)
      {
        uint64_t v34 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v34 = *(void *)(*(void *)(v4 + 64) + 8 * v33);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v35 = *(void *)(v5 + 16);
      uint64_t v36 = v35 - 2;
      if (v35 < 2 || v36 > (int)v35 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v36) == 1) {
        break;
      }
      uint64_t v37 = *(void *)(*(void *)(v5 + 64) + 8 * v36);
      if (v11 >= 1) {
        goto LABEL_52;
      }
LABEL_39:
      if (++v29 == v12) {
        goto LABEL_25;
      }
    }
    uint64_t v37 = 0;
    if (v11 < 1) {
      goto LABEL_39;
    }
LABEL_52:
    uint64_t v38 = 0;
    uint64_t v39 = &v30[v34 * v29];
    uint64_t v40 = v31 + v37 * v29;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v51 = *(void *)(v4 + 16), uint64_t v52 = v51 - 1, v51 < 1)
        || v52 > (int)v51 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v52) == 1)
      {
        uint64_t v41 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      else
      {
        uint64_t v41 = *(void *)(*(void *)(v4 + 64) + 8 * v52);
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      uint64_t v53 = *(void *)(v5 + 16);
      uint64_t v54 = v53 - 1;
      if (v53 >= 1 && v54 <= (int)v53 - 1 && *(void *)(*(void *)(v5 + 24) + 8 * v54) != 1)
      {
        uint64_t v42 = *(void *)(*(void *)(v5 + 64) + 8 * v54);
        goto LABEL_56;
      }
LABEL_55:
      uint64_t v42 = 0;
LABEL_56:
      uint64_t v43 = (float *)&v39[v41 * v38 + *(void *)(v4 + 40)];
      uint64_t v44 = (_WORD *)(v40 + v42 * v38 + *(void *)(v5 + 40));
      _S0 = ceilf(*v43);
      _S1 = ceilf(v43[1]);
      __asm
      {
        FCVT            H0, S0
        FCVT            H1, S1
      }
      _WORD *v44 = LOWORD(_S0);
      v44[1] = LOWORD(_S1);
      if (v11 == ++v38) {
        goto LABEL_39;
      }
    }
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<float,half,(mlir::mps::arithmeticOp)7>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v61 = **a4;
  uint64_t v62 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v24 = 1;
    }
    else
    {
      char v24 = v13;
    }
    if (*(unsigned char *)(v5 + 58)) {
      BOOL v20 = 1;
    }
    if (v14 > v22) {
      char v25 = 1;
    }
    else {
      char v25 = v18;
    }
    if (v11 > v23) {
      char v26 = 1;
    }
    else {
      char v26 = v16;
    }
    if (v10 > v23) {
      char v27 = 1;
    }
    else {
      char v27 = v24;
    }
    char v28 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v29 = *(void *)(v4 + 16), uint64_t v30 = v29 - 4, v29 < 4)
        || v30 > (int)v29 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v30) == 1)
      {
        uint64_t v31 = 0;
        if (v25) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v31 = *(void *)(*(void *)(v4 + 64) + 8 * v30);
        if (v25) {
          goto LABEL_34;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v14) != 1)
      {
        uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v14);
        if (v17 < 1) {
          goto LABEL_27;
        }
LABEL_37:
        uint64_t v33 = 0;
        uint64_t v34 = v62 + v31 * v19;
        uint64_t v35 = v61 + v32 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v36 = *(void *)(v4 + 16), v37 = v36 - 3, v36 < 3)
            || v37 > (int)v36 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v37) == 1)
          {
            uint64_t v38 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_44;
            }
            goto LABEL_45;
          }
          uint64_t v38 = *(void *)(*(void *)(v4 + 64) + 8 * v37);
          if (v26) {
            goto LABEL_45;
          }
LABEL_44:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_45:
            uint64_t v39 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_38;
          }
          uint64_t v39 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_38:
            if (++v33 == v17) {
              goto LABEL_27;
            }
            continue;
          }
          break;
        }
        uint64_t v40 = 0;
        uint64_t v41 = v34 + v38 * v33;
        uint64_t v42 = v35 + v39 * v33;
        while (2)
        {
          if (v21
            || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 2, v43 < 2)
            || v44 > (int)v43 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
          {
            uint64_t v45 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_56;
          }
          uint64_t v45 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
          if (v27) {
            goto LABEL_56;
          }
LABEL_55:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_56:
            uint64_t v46 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_49;
          }
          uint64_t v46 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_49:
            if (++v40 == v12) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        uint64_t v47 = 0;
        uint64_t v48 = v41 + v45 * v40;
        uint64_t v49 = *(void *)(v4 + 40);
        uint64_t v50 = *(void *)(v5 + 40);
        uint64_t v51 = v42 + v46 * v40;
        while (2)
        {
          if (v21
            || (v59 = *(void *)(v4 + 16), uint64_t v60 = v59 - 1, v59 < 1)
            || v60 > (int)v59 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v60) == 1)
          {
            uint64_t v58 = 0;
            if ((v28 & 1) == 0) {
              goto LABEL_64;
            }
          }
          else
          {
            uint64_t v58 = *(void *)(*(void *)(v4 + 64) + 8 * v60);
            if ((v28 & 1) == 0)
            {
LABEL_64:
              if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
              {
                uint64_t v52 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_61:
                _S0 = ceilf(*(float *)(v48 + v58 * v47 + v49));
                __asm { FCVT            H0, S0 }
                *(_WORD *)(v51 + v52 * v47++ + v50) = LOWORD(_S0);
                if (v9 == v47) {
                  goto LABEL_49;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v52 = 0;
        goto LABEL_61;
      }
LABEL_34:
      uint64_t v32 = 0;
      if (v17 >= 1) {
        goto LABEL_37;
      }
LABEL_27:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v14 = v6 - 4;
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<__emulated_bf16,float,(mlir::mps::arithmeticOp)7>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v56 = **a4;
  uint64_t v57 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v24 = 1;
    }
    else
    {
      char v24 = v13;
    }
    if (*(unsigned char *)(v5 + 58)) {
      BOOL v20 = 1;
    }
    if (v14 > v22) {
      char v25 = 1;
    }
    else {
      char v25 = v18;
    }
    if (v11 > v23) {
      char v26 = 1;
    }
    else {
      char v26 = v16;
    }
    if (v10 > v23) {
      char v27 = 1;
    }
    else {
      char v27 = v24;
    }
    char v28 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v29 = *(void *)(v4 + 16), uint64_t v30 = v29 - 4, v29 < 4)
        || v30 > (int)v29 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v30) == 1)
      {
        uint64_t v31 = 0;
        if (v25) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v31 = *(void *)(*(void *)(v4 + 64) + 8 * v30);
        if (v25) {
          goto LABEL_34;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v14) != 1)
      {
        uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v14);
        if (v17 < 1) {
          goto LABEL_27;
        }
LABEL_37:
        uint64_t v33 = 0;
        uint64_t v34 = v57 + v31 * v19;
        uint64_t v35 = v56 + v32 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v36 = *(void *)(v4 + 16), v37 = v36 - 3, v36 < 3)
            || v37 > (int)v36 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v37) == 1)
          {
            uint64_t v38 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_44;
            }
            goto LABEL_45;
          }
          uint64_t v38 = *(void *)(*(void *)(v4 + 64) + 8 * v37);
          if (v26) {
            goto LABEL_45;
          }
LABEL_44:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_45:
            uint64_t v39 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_38;
          }
          uint64_t v39 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_38:
            if (++v33 == v17) {
              goto LABEL_27;
            }
            continue;
          }
          break;
        }
        uint64_t v40 = 0;
        uint64_t v41 = v34 + v38 * v33;
        uint64_t v42 = v35 + v39 * v33;
        while (2)
        {
          if (v21
            || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 2, v43 < 2)
            || v44 > (int)v43 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
          {
            uint64_t v45 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_56;
          }
          uint64_t v45 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
          if (v27) {
            goto LABEL_56;
          }
LABEL_55:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_56:
            uint64_t v46 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_49;
          }
          uint64_t v46 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_49:
            if (++v40 == v12) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        uint64_t v47 = 0;
        uint64_t v48 = v41 + v45 * v40;
        uint64_t v49 = *(void *)(v4 + 40);
        uint64_t v50 = *(void *)(v5 + 40);
        uint64_t v51 = v42 + v46 * v40;
        while (2)
        {
          if (v21
            || (uint64_t v54 = *(void *)(v4 + 16), v55 = v54 - 1, v54 < 1)
            || v55 > (int)v54 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v55) == 1)
          {
            uint64_t v53 = 0;
            if ((v28 & 1) == 0) {
              goto LABEL_64;
            }
          }
          else
          {
            uint64_t v53 = *(void *)(*(void *)(v4 + 64) + 8 * v55);
            if ((v28 & 1) == 0)
            {
LABEL_64:
              if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
              {
                uint64_t v52 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_61:
                *(float *)(v51 + v52 * v47 + v50) = ceilf(COERCE_FLOAT(*(unsigned __int16 *)(v48 + v53 * v47 + v49) << 16));
                if (v9 == ++v47) {
                  goto LABEL_49;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v52 = 0;
        goto LABEL_61;
      }
LABEL_34:
      uint64_t v32 = 0;
      if (v17 >= 1) {
        goto LABEL_37;
      }
LABEL_27:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v14 = v6 - 4;
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<__emulated_bf16,__emulated_bf16,(mlir::mps::arithmeticOp)7>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v56 = **a4;
  uint64_t v57 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v13 = 1;
      BOOL v20 = 1;
    }
    uint64_t v55 = v14;
    if (v14 > v22) {
      char v24 = 1;
    }
    else {
      char v24 = v18;
    }
    if (v11 > v23) {
      char v16 = 1;
    }
    if (v10 > v23) {
      char v25 = 1;
    }
    else {
      char v25 = v13;
    }
    char v26 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v27 = *(void *)(v4 + 16), uint64_t v28 = v27 - 4, v27 < 4)
        || v28 > (int)v27 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v28) == 1)
      {
        uint64_t v29 = 0;
        if (v24) {
          goto LABEL_30;
        }
      }
      else
      {
        uint64_t v29 = *(void *)(*(void *)(v4 + 64) + 8 * v28);
        if (v24) {
          goto LABEL_30;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v55) != 1)
      {
        uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v55);
        if (v17 < 1) {
          goto LABEL_23;
        }
LABEL_33:
        uint64_t v31 = 0;
        uint64_t v32 = v57 + v29 * v19;
        uint64_t v33 = v56 + v30 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v34 = *(void *)(v4 + 16), v35 = v34 - 3, v34 < 3)
            || v35 > (int)v34 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v35) == 1)
          {
            uint64_t v36 = 0;
            if ((v16 & 1) == 0) {
              goto LABEL_40;
            }
            goto LABEL_41;
          }
          uint64_t v36 = *(void *)(*(void *)(v4 + 64) + 8 * v35);
          if (v16) {
            goto LABEL_41;
          }
LABEL_40:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_41:
            uint64_t v37 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_34;
          }
          uint64_t v37 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_34:
            if (++v31 == v17) {
              goto LABEL_23;
            }
            continue;
          }
          break;
        }
        uint64_t v38 = 0;
        uint64_t v39 = v32 + v36 * v31;
        uint64_t v40 = v33 + v37 * v31;
        while (2)
        {
          if (v21
            || (v41 = *(void *)(v4 + 16), uint64_t v42 = v41 - 2, v41 < 2)
            || v42 > (int)v41 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v42) == 1)
          {
            uint64_t v43 = 0;
            if ((v25 & 1) == 0) {
              goto LABEL_51;
            }
            goto LABEL_52;
          }
          uint64_t v43 = *(void *)(*(void *)(v4 + 64) + 8 * v42);
          if (v25) {
            goto LABEL_52;
          }
LABEL_51:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_52:
            uint64_t v44 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_45;
          }
          uint64_t v44 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_45:
            if (++v38 == v12) {
              goto LABEL_34;
            }
            continue;
          }
          break;
        }
        uint64_t v45 = 0;
        uint64_t v46 = v39 + v43 * v38;
        uint64_t v47 = *(void *)(v4 + 40);
        uint64_t v48 = *(void *)(v5 + 40);
        uint64_t v49 = v40 + v44 * v38;
        while (2)
        {
          if (v21
            || (uint64_t v52 = *(void *)(v4 + 16), v53 = v52 - 1, v52 < 1)
            || v53 > (int)v52 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v53) == 1)
          {
            uint64_t v50 = 0;
            if (v26) {
              goto LABEL_59;
            }
          }
          else
          {
            uint64_t v50 = *(void *)(*(void *)(v4 + 64) + 8 * v53);
            if (v26)
            {
LABEL_59:
              uint64_t v51 = 0;
              goto LABEL_66;
            }
          }
          if (*(void *)(*(void *)(v5 + 24) + 8 * v7) == 1) {
            goto LABEL_59;
          }
          uint64_t v51 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_66:
          float v54 = ceilf(COERCE_FLOAT(*(unsigned __int16 *)(v46 + v50 * v45 + v47) << 16));
          *(_WORD *)(v48 + v49 + v51 * v45++) = HIWORD(COERCE_UNSIGNED_INT(v54 + (float)(COERCE_FLOAT(LODWORD(v54) & 0xFF800000)
                                                                                       * 0.0039062)));
          if (v9 == v45) {
            goto LABEL_45;
          }
          continue;
        }
      }
LABEL_30:
      uint64_t v30 = 0;
      if (v17 >= 1) {
        goto LABEL_33;
      }
LABEL_23:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    uint64_t v14 = v6 - 4;
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<float,__emulated_bf16,(mlir::mps::arithmeticOp)7>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v56 = **a4;
  uint64_t v57 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v13 = 1;
      BOOL v20 = 1;
    }
    uint64_t v55 = v14;
    if (v14 > v22) {
      char v24 = 1;
    }
    else {
      char v24 = v18;
    }
    if (v11 > v23) {
      char v16 = 1;
    }
    if (v10 > v23) {
      char v25 = 1;
    }
    else {
      char v25 = v13;
    }
    char v26 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v27 = *(void *)(v4 + 16), uint64_t v28 = v27 - 4, v27 < 4)
        || v28 > (int)v27 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v28) == 1)
      {
        uint64_t v29 = 0;
        if (v24) {
          goto LABEL_30;
        }
      }
      else
      {
        uint64_t v29 = *(void *)(*(void *)(v4 + 64) + 8 * v28);
        if (v24) {
          goto LABEL_30;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v55) != 1)
      {
        uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v55);
        if (v17 < 1) {
          goto LABEL_23;
        }
LABEL_33:
        uint64_t v31 = 0;
        uint64_t v32 = v57 + v29 * v19;
        uint64_t v33 = v56 + v30 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v34 = *(void *)(v4 + 16), v35 = v34 - 3, v34 < 3)
            || v35 > (int)v34 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v35) == 1)
          {
            uint64_t v36 = 0;
            if ((v16 & 1) == 0) {
              goto LABEL_40;
            }
            goto LABEL_41;
          }
          uint64_t v36 = *(void *)(*(void *)(v4 + 64) + 8 * v35);
          if (v16) {
            goto LABEL_41;
          }
LABEL_40:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_41:
            uint64_t v37 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_34;
          }
          uint64_t v37 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_34:
            if (++v31 == v17) {
              goto LABEL_23;
            }
            continue;
          }
          break;
        }
        uint64_t v38 = 0;
        uint64_t v39 = v32 + v36 * v31;
        uint64_t v40 = v33 + v37 * v31;
        while (2)
        {
          if (v21
            || (v41 = *(void *)(v4 + 16), uint64_t v42 = v41 - 2, v41 < 2)
            || v42 > (int)v41 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v42) == 1)
          {
            uint64_t v43 = 0;
            if ((v25 & 1) == 0) {
              goto LABEL_51;
            }
            goto LABEL_52;
          }
          uint64_t v43 = *(void *)(*(void *)(v4 + 64) + 8 * v42);
          if (v25) {
            goto LABEL_52;
          }
LABEL_51:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_52:
            uint64_t v44 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_45;
          }
          uint64_t v44 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_45:
            if (++v38 == v12) {
              goto LABEL_34;
            }
            continue;
          }
          break;
        }
        uint64_t v45 = 0;
        uint64_t v46 = v39 + v43 * v38;
        uint64_t v47 = *(void *)(v4 + 40);
        uint64_t v48 = *(void *)(v5 + 40);
        uint64_t v49 = v40 + v44 * v38;
        while (2)
        {
          if (v21
            || (uint64_t v52 = *(void *)(v4 + 16), v53 = v52 - 1, v52 < 1)
            || v53 > (int)v52 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v53) == 1)
          {
            uint64_t v50 = 0;
            if (v26) {
              goto LABEL_59;
            }
          }
          else
          {
            uint64_t v50 = *(void *)(*(void *)(v4 + 64) + 8 * v53);
            if (v26)
            {
LABEL_59:
              uint64_t v51 = 0;
              goto LABEL_66;
            }
          }
          if (*(void *)(*(void *)(v5 + 24) + 8 * v7) == 1) {
            goto LABEL_59;
          }
          uint64_t v51 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_66:
          float v54 = ceilf(*(float *)(v46 + v50 * v45 + v47));
          *(_WORD *)(v48 + v49 + v51 * v45++) = HIWORD(COERCE_UNSIGNED_INT(v54 + (float)(COERCE_FLOAT(LODWORD(v54) & 0xFF800000)
                                                                                       * 0.0039062)));
          if (v9 == v45) {
            goto LABEL_45;
          }
          continue;
        }
      }
LABEL_30:
      uint64_t v30 = 0;
      if (v17 >= 1) {
        goto LABEL_33;
      }
LABEL_23:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    uint64_t v14 = v6 - 4;
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t **mlir::mps::arithmeticUnaryTileBaseKernel<long long,long long,(mlir::mps::arithmeticOp)7>(uint64_t **result, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **result;
  uint64_t v5 = **a2;
  uint64_t v6 = **a3;
  uint64_t v7 = **a4;
  uint64_t v8 = *(void *)(v5 + 16);
  if (v8 < 1)
  {
    uint64_t v8 = 1;
    uint64_t v12 = 1;
    uint64_t v11 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v9 = *(void *)(v5 + 24);
  uint64_t v10 = v9 + 8 * v8;
  uint64_t v11 = *(void *)(v10 - 8);
  if (v8 == 1)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v12 = *(void *)(v10 - 16);
  if ((unint64_t)v8 < 3)
  {
    uint64_t v8 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v14 = v9 + 8 * v8;
  uint64_t v13 = *(void *)(v14 - 24);
  if (v8 == 3)
  {
    uint64_t v8 = 1;
    goto LABEL_10;
  }
  uint64_t v8 = *(void *)(v14 - 32);
  if (v8 >= 1)
  {
LABEL_10:
    uint64_t v15 = 0;
    int v16 = *(unsigned __int8 *)(v4 + 58);
    uint64_t result = (uint64_t **)*(unsigned __int8 *)(v5 + 58);
    while (1)
    {
      if (v16
        || (uint64_t v17 = *(void *)(v4 + 16), v18 = v17 - 4, v17 < 4)
        || v18 > (int)v17 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v18) == 1)
      {
        uint64_t v19 = 0;
        if (result) {
          break;
        }
      }
      else
      {
        uint64_t v19 = *(void *)(*(void *)(v4 + 64) + 8 * v18);
        if (result) {
          break;
        }
      }
      uint64_t v20 = *(void *)(v5 + 16);
      uint64_t v21 = v20 - 4;
      if (v20 < 4 || v21 > (int)v20 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v21) == 1) {
        break;
      }
      uint64_t v22 = *(void *)(*(void *)(v5 + 64) + 8 * v21);
      if (v13 >= 1) {
        goto LABEL_24;
      }
LABEL_11:
      if (++v15 == v8) {
        return result;
      }
    }
    uint64_t v22 = 0;
    if (v13 < 1) {
      goto LABEL_11;
    }
LABEL_24:
    uint64_t v23 = 0;
    uint64_t v24 = v6 + v19 * v15;
    uint64_t v25 = v7 + v22 * v15;
    while (1)
    {
      if (v16
        || (uint64_t v26 = *(void *)(v4 + 16), v27 = v26 - 3, v26 < 3)
        || v27 > (int)v26 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v27) == 1)
      {
        uint64_t v28 = 0;
        if (result) {
          break;
        }
      }
      else
      {
        uint64_t v28 = *(void *)(*(void *)(v4 + 64) + 8 * v27);
        if (result) {
          break;
        }
      }
      uint64_t v29 = *(void *)(v5 + 16);
      uint64_t v30 = v29 - 3;
      if (v29 < 3 || v30 > (int)v29 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v30) == 1) {
        break;
      }
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v30);
      if (v12 >= 1) {
        goto LABEL_38;
      }
LABEL_25:
      if (++v23 == v13) {
        goto LABEL_11;
      }
    }
    uint64_t v31 = 0;
    if (v12 < 1) {
      goto LABEL_25;
    }
LABEL_38:
    uint64_t v32 = 0;
    uint64_t v33 = v24 + v28 * v23;
    uint64_t v34 = v25 + v31 * v23;
    while (1)
    {
      if (v16
        || (v35 = *(void *)(v4 + 16), uint64_t v36 = v35 - 2, v35 < 2)
        || v36 > (int)v35 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v36) == 1)
      {
        uint64_t v37 = 0;
        if (result) {
          break;
        }
      }
      else
      {
        uint64_t v37 = *(void *)(*(void *)(v4 + 64) + 8 * v36);
        if (result) {
          break;
        }
      }
      uint64_t v38 = *(void *)(v5 + 16);
      uint64_t v39 = v38 - 2;
      if (v38 < 2 || v39 > (int)v38 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v39) == 1) {
        break;
      }
      uint64_t v40 = *(void *)(*(void *)(v5 + 64) + 8 * v39);
      if (v11 >= 1) {
        goto LABEL_52;
      }
LABEL_39:
      if (++v32 == v12) {
        goto LABEL_25;
      }
    }
    uint64_t v40 = 0;
    if (v11 < 1) {
      goto LABEL_39;
    }
LABEL_52:
    uint64_t v41 = 0;
    uint64_t v42 = v33 + v37 * v32;
    uint64_t v43 = *(void *)(v4 + 40);
    uint64_t v44 = *(void *)(v5 + 40);
    uint64_t v45 = v34 + v40 * v32;
    while (1)
    {
      if (v16
        || (uint64_t v48 = *(void *)(v4 + 16), v49 = v48 - 1, v48 < 1)
        || v49 > (int)v48 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v49) == 1)
      {
        uint64_t v46 = 0;
        if (result) {
          goto LABEL_55;
        }
      }
      else
      {
        uint64_t v46 = *(void *)(*(void *)(v4 + 64) + 8 * v49);
        if (result) {
          goto LABEL_55;
        }
      }
      uint64_t v50 = *(void *)(v5 + 16);
      uint64_t v51 = v50 - 1;
      if (v50 >= 1 && v51 <= (int)v50 - 1 && *(void *)(*(void *)(v5 + 24) + 8 * v51) != 1)
      {
        uint64_t v47 = *(void *)(*(void *)(v5 + 64) + 8 * v51);
        goto LABEL_56;
      }
LABEL_55:
      uint64_t v47 = 0;
LABEL_56:
      *(void *)(v45 + v47 * v41 + v44) = (uint64_t)(double)*(uint64_t *)(v42 + v46 * v41 + v43);
      if (v11 == ++v41) {
        goto LABEL_39;
      }
    }
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<int,int,(mlir::mps::arithmeticOp)7>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v56 = **a4;
  uint64_t v57 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v24 = 1;
    }
    else
    {
      char v24 = v13;
    }
    if (*(unsigned char *)(v5 + 58)) {
      BOOL v20 = 1;
    }
    if (v14 > v22) {
      char v25 = 1;
    }
    else {
      char v25 = v18;
    }
    if (v11 > v23) {
      char v26 = 1;
    }
    else {
      char v26 = v16;
    }
    if (v10 > v23) {
      char v27 = 1;
    }
    else {
      char v27 = v24;
    }
    char v28 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v29 = *(void *)(v4 + 16), uint64_t v30 = v29 - 4, v29 < 4)
        || v30 > (int)v29 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v30) == 1)
      {
        uint64_t v31 = 0;
        if (v25) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v31 = *(void *)(*(void *)(v4 + 64) + 8 * v30);
        if (v25) {
          goto LABEL_34;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v14) != 1)
      {
        uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v14);
        if (v17 < 1) {
          goto LABEL_27;
        }
LABEL_37:
        uint64_t v33 = 0;
        uint64_t v34 = v57 + v31 * v19;
        uint64_t v35 = v56 + v32 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v36 = *(void *)(v4 + 16), v37 = v36 - 3, v36 < 3)
            || v37 > (int)v36 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v37) == 1)
          {
            uint64_t v38 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_44;
            }
            goto LABEL_45;
          }
          uint64_t v38 = *(void *)(*(void *)(v4 + 64) + 8 * v37);
          if (v26) {
            goto LABEL_45;
          }
LABEL_44:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_45:
            uint64_t v39 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_38;
          }
          uint64_t v39 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_38:
            if (++v33 == v17) {
              goto LABEL_27;
            }
            continue;
          }
          break;
        }
        uint64_t v40 = 0;
        uint64_t v41 = v34 + v38 * v33;
        uint64_t v42 = v35 + v39 * v33;
        while (2)
        {
          if (v21
            || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 2, v43 < 2)
            || v44 > (int)v43 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
          {
            uint64_t v45 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_56;
          }
          uint64_t v45 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
          if (v27) {
            goto LABEL_56;
          }
LABEL_55:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_56:
            uint64_t v46 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_49;
          }
          uint64_t v46 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_49:
            if (++v40 == v12) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        uint64_t v47 = 0;
        uint64_t v48 = v41 + v45 * v40;
        uint64_t v49 = *(void *)(v4 + 40);
        uint64_t v50 = *(void *)(v5 + 40);
        uint64_t v51 = v42 + v46 * v40;
        while (2)
        {
          if (v21
            || (uint64_t v54 = *(void *)(v4 + 16), v55 = v54 - 1, v54 < 1)
            || v55 > (int)v54 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v55) == 1)
          {
            uint64_t v53 = 0;
            if ((v28 & 1) == 0) {
              goto LABEL_64;
            }
          }
          else
          {
            uint64_t v53 = *(void *)(*(void *)(v4 + 64) + 8 * v55);
            if ((v28 & 1) == 0)
            {
LABEL_64:
              if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
              {
                uint64_t v52 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_61:
                *(_DWORD *)(v51 + v52 * v47 + v50) = *(_DWORD *)(v48 + v53 * v47 + v49);
                if (v9 == ++v47) {
                  goto LABEL_49;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v52 = 0;
        goto LABEL_61;
      }
LABEL_34:
      uint64_t v32 = 0;
      if (v17 >= 1) {
        goto LABEL_37;
      }
LABEL_27:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v14 = v6 - 4;
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<short,short,(mlir::mps::arithmeticOp)7>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v56 = **a4;
  uint64_t v57 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v24 = 1;
    }
    else
    {
      char v24 = v13;
    }
    if (*(unsigned char *)(v5 + 58)) {
      BOOL v20 = 1;
    }
    if (v14 > v22) {
      char v25 = 1;
    }
    else {
      char v25 = v18;
    }
    if (v11 > v23) {
      char v26 = 1;
    }
    else {
      char v26 = v16;
    }
    if (v10 > v23) {
      char v27 = 1;
    }
    else {
      char v27 = v24;
    }
    char v28 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v29 = *(void *)(v4 + 16), uint64_t v30 = v29 - 4, v29 < 4)
        || v30 > (int)v29 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v30) == 1)
      {
        uint64_t v31 = 0;
        if (v25) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v31 = *(void *)(*(void *)(v4 + 64) + 8 * v30);
        if (v25) {
          goto LABEL_34;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v14) != 1)
      {
        uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v14);
        if (v17 < 1) {
          goto LABEL_27;
        }
LABEL_37:
        uint64_t v33 = 0;
        uint64_t v34 = v57 + v31 * v19;
        uint64_t v35 = v56 + v32 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v36 = *(void *)(v4 + 16), v37 = v36 - 3, v36 < 3)
            || v37 > (int)v36 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v37) == 1)
          {
            uint64_t v38 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_44;
            }
            goto LABEL_45;
          }
          uint64_t v38 = *(void *)(*(void *)(v4 + 64) + 8 * v37);
          if (v26) {
            goto LABEL_45;
          }
LABEL_44:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_45:
            uint64_t v39 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_38;
          }
          uint64_t v39 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_38:
            if (++v33 == v17) {
              goto LABEL_27;
            }
            continue;
          }
          break;
        }
        uint64_t v40 = 0;
        uint64_t v41 = v34 + v38 * v33;
        uint64_t v42 = v35 + v39 * v33;
        while (2)
        {
          if (v21
            || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 2, v43 < 2)
            || v44 > (int)v43 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
          {
            uint64_t v45 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_56;
          }
          uint64_t v45 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
          if (v27) {
            goto LABEL_56;
          }
LABEL_55:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_56:
            uint64_t v46 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_49;
          }
          uint64_t v46 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_49:
            if (++v40 == v12) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        uint64_t v47 = 0;
        uint64_t v48 = v41 + v45 * v40;
        uint64_t v49 = *(void *)(v4 + 40);
        uint64_t v50 = *(void *)(v5 + 40);
        uint64_t v51 = v42 + v46 * v40;
        while (2)
        {
          if (v21
            || (uint64_t v54 = *(void *)(v4 + 16), v55 = v54 - 1, v54 < 1)
            || v55 > (int)v54 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v55) == 1)
          {
            uint64_t v53 = 0;
            if ((v28 & 1) == 0) {
              goto LABEL_64;
            }
          }
          else
          {
            uint64_t v53 = *(void *)(*(void *)(v4 + 64) + 8 * v55);
            if ((v28 & 1) == 0)
            {
LABEL_64:
              if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
              {
                uint64_t v52 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_61:
                *(_WORD *)(v51 + v52 * v47 + v50) = *(_WORD *)(v48 + v53 * v47 + v49);
                if (v9 == ++v47) {
                  goto LABEL_49;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v52 = 0;
        goto LABEL_61;
      }
LABEL_34:
      uint64_t v32 = 0;
      if (v17 >= 1) {
        goto LABEL_37;
      }
LABEL_27:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v14 = v6 - 4;
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t **mlir::mps::arithmeticUnaryTileBaseKernel<signed char,signed char,(mlir::mps::arithmeticOp)7>(uint64_t **result, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **result;
  uint64_t v5 = **a2;
  uint64_t v6 = **a3;
  uint64_t v7 = **a4;
  uint64_t v8 = *(void *)(v5 + 16);
  if (v8 < 1)
  {
    uint64_t v8 = 1;
    uint64_t v12 = 1;
    uint64_t v11 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v9 = *(void *)(v5 + 24);
  uint64_t v10 = v9 + 8 * v8;
  uint64_t v11 = *(void *)(v10 - 8);
  if (v8 == 1)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v12 = *(void *)(v10 - 16);
  if ((unint64_t)v8 < 3)
  {
    uint64_t v8 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v14 = v9 + 8 * v8;
  uint64_t v13 = *(void *)(v14 - 24);
  if (v8 == 3)
  {
    uint64_t v8 = 1;
    goto LABEL_10;
  }
  uint64_t v8 = *(void *)(v14 - 32);
  if (v8 >= 1)
  {
LABEL_10:
    uint64_t v15 = 0;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v16 = *(void *)(v4 + 16), uint64_t v17 = v16 - 4, v16 < 4)
        || v17 > (int)v16 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v17) == 1)
      {
        uint64_t result = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t result = *(uint64_t ***)(*(void *)(v4 + 64) + 8 * v17);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v18 = *(void *)(v5 + 16);
      uint64_t v19 = v18 - 4;
      if (v18 < 4 || v19 > (int)v18 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v19) == 1) {
        break;
      }
      uint64_t v20 = *(void *)(*(void *)(v5 + 64) + 8 * v19);
      if (v13 >= 1) {
        goto LABEL_24;
      }
LABEL_11:
      if (++v15 == v8) {
        return result;
      }
    }
    uint64_t v20 = 0;
    if (v13 < 1) {
      goto LABEL_11;
    }
LABEL_24:
    uint64_t v21 = 0;
    uint64_t result = (uint64_t **)(v6 + (void)result * v15);
    uint64_t v22 = v7 + v20 * v15;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v23 = *(void *)(v4 + 16), uint64_t v24 = v23 - 3, v23 < 3)
        || v24 > (int)v23 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1)
      {
        uint64_t v25 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v26 = *(void *)(v5 + 16);
      uint64_t v27 = v26 - 3;
      if (v26 < 3 || v27 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v27) == 1) {
        break;
      }
      uint64_t v28 = *(void *)(*(void *)(v5 + 64) + 8 * v27);
      if (v12 >= 1) {
        goto LABEL_38;
      }
LABEL_25:
      if (++v21 == v13) {
        goto LABEL_11;
      }
    }
    uint64_t v28 = 0;
    if (v12 < 1) {
      goto LABEL_25;
    }
LABEL_38:
    uint64_t v29 = 0;
    uint64_t v30 = (char *)result + v25 * v21;
    uint64_t v31 = v22 + v28 * v21;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (uint64_t v32 = *(void *)(v4 + 16), v33 = v32 - 2, v32 < 2)
        || v33 > (int)v32 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v33) == 1)
      {
        uint64_t v34 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v34 = *(void *)(*(void *)(v4 + 64) + 8 * v33);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v35 = *(void *)(v5 + 16);
      uint64_t v36 = v35 - 2;
      if (v35 < 2 || v36 > (int)v35 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v36) == 1) {
        break;
      }
      uint64_t v37 = *(void *)(*(void *)(v5 + 64) + 8 * v36);
      if (v11 >= 1) {
        goto LABEL_52;
      }
LABEL_39:
      if (++v29 == v12) {
        goto LABEL_25;
      }
    }
    uint64_t v37 = 0;
    if (v11 < 1) {
      goto LABEL_39;
    }
LABEL_52:
    uint64_t v38 = 0;
    uint64_t v39 = &v30[v34 * v29];
    uint64_t v40 = v31 + v37 * v29;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 1, v43 < 1)
        || v44 > (int)v43 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
      {
        uint64_t v41 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      else
      {
        uint64_t v41 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      uint64_t v45 = *(void *)(v5 + 16);
      uint64_t v46 = v45 - 1;
      if (v45 >= 1 && v46 <= (int)v45 - 1 && *(void *)(*(void *)(v5 + 24) + 8 * v46) != 1)
      {
        uint64_t v42 = *(void *)(*(void *)(v5 + 64) + 8 * v46);
        goto LABEL_56;
      }
LABEL_55:
      uint64_t v42 = 0;
LABEL_56:
      *(unsigned char *)(v40 + v42 * v38 + *(void *)(v5 + 40)) = v39[v41 * v38 + *(void *)(v4 + 40)];
      if (v11 == ++v38) {
        goto LABEL_39;
      }
    }
  }
  return result;
}

uint64_t **mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)8>(uint64_t **result, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **result;
  uint64_t v5 = **a2;
  uint64_t v6 = **a3;
  uint64_t v7 = **a4;
  uint64_t v8 = *(void *)(v5 + 16);
  if (v8 < 1)
  {
    uint64_t v8 = 1;
    uint64_t v12 = 1;
    uint64_t v11 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v9 = *(void *)(v5 + 24);
  uint64_t v10 = v9 + 8 * v8;
  uint64_t v11 = *(void *)(v10 - 8);
  if (v8 == 1)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v12 = *(void *)(v10 - 16);
  if ((unint64_t)v8 < 3)
  {
    uint64_t v8 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v14 = v9 + 8 * v8;
  uint64_t v13 = *(void *)(v14 - 24);
  if (v8 == 3)
  {
    uint64_t v8 = 1;
    goto LABEL_10;
  }
  uint64_t v8 = *(void *)(v14 - 32);
  if (v8 >= 1)
  {
LABEL_10:
    uint64_t v15 = 0;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v16 = *(void *)(v4 + 16), uint64_t v17 = v16 - 4, v16 < 4)
        || v17 > (int)v16 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v17) == 1)
      {
        uint64_t result = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t result = *(uint64_t ***)(*(void *)(v4 + 64) + 8 * v17);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v18 = *(void *)(v5 + 16);
      uint64_t v19 = v18 - 4;
      if (v18 < 4 || v19 > (int)v18 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v19) == 1) {
        break;
      }
      uint64_t v20 = *(void *)(*(void *)(v5 + 64) + 8 * v19);
      if (v13 >= 1) {
        goto LABEL_24;
      }
LABEL_11:
      if (++v15 == v8) {
        return result;
      }
    }
    uint64_t v20 = 0;
    if (v13 < 1) {
      goto LABEL_11;
    }
LABEL_24:
    uint64_t v21 = 0;
    uint64_t result = (uint64_t **)(v6 + (void)result * v15);
    uint64_t v22 = v7 + v20 * v15;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v23 = *(void *)(v4 + 16), uint64_t v24 = v23 - 3, v23 < 3)
        || v24 > (int)v23 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1)
      {
        uint64_t v25 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v26 = *(void *)(v5 + 16);
      uint64_t v27 = v26 - 3;
      if (v26 < 3 || v27 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v27) == 1) {
        break;
      }
      uint64_t v28 = *(void *)(*(void *)(v5 + 64) + 8 * v27);
      if (v12 >= 1) {
        goto LABEL_38;
      }
LABEL_25:
      if (++v21 == v13) {
        goto LABEL_11;
      }
    }
    uint64_t v28 = 0;
    if (v12 < 1) {
      goto LABEL_25;
    }
LABEL_38:
    uint64_t v29 = 0;
    uint64_t v30 = (char *)result + v25 * v21;
    uint64_t v31 = v22 + v28 * v21;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (uint64_t v32 = *(void *)(v4 + 16), v33 = v32 - 2, v32 < 2)
        || v33 > (int)v32 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v33) == 1)
      {
        uint64_t v34 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v34 = *(void *)(*(void *)(v4 + 64) + 8 * v33);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v35 = *(void *)(v5 + 16);
      uint64_t v36 = v35 - 2;
      if (v35 < 2 || v36 > (int)v35 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v36) == 1) {
        break;
      }
      uint64_t v37 = *(void *)(*(void *)(v5 + 64) + 8 * v36);
      if (v11 >= 1) {
        goto LABEL_52;
      }
LABEL_39:
      if (++v29 == v12) {
        goto LABEL_25;
      }
    }
    uint64_t v37 = 0;
    if (v11 < 1) {
      goto LABEL_39;
    }
LABEL_52:
    uint64_t v38 = 0;
    uint64_t v39 = &v30[v34 * v29];
    uint64_t v40 = v31 + v37 * v29;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 1, v43 < 1)
        || v44 > (int)v43 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
      {
        uint64_t v41 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      else
      {
        uint64_t v41 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      uint64_t v45 = *(void *)(v5 + 16);
      uint64_t v46 = v45 - 1;
      if (v45 >= 1 && v46 <= (int)v45 - 1 && *(void *)(*(void *)(v5 + 24) + 8 * v46) != 1)
      {
        uint64_t v42 = *(void *)(*(void *)(v5 + 64) + 8 * v46);
        goto LABEL_56;
      }
LABEL_55:
      uint64_t v42 = 0;
LABEL_56:
      *(float32x2_t *)(v40 + v42 * v38 + *(void *)(v5 + 40)) = vrndm_f32(*(float32x2_t *)&v39[v41 * v38
                                                                                              + *(void *)(v4 + 40)]);
      if (v11 == ++v38) {
        goto LABEL_39;
      }
    }
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<float,float,(mlir::mps::arithmeticOp)8>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v56 = **a4;
  uint64_t v57 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v24 = 1;
    }
    else
    {
      char v24 = v13;
    }
    if (*(unsigned char *)(v5 + 58)) {
      BOOL v20 = 1;
    }
    if (v14 > v22) {
      char v25 = 1;
    }
    else {
      char v25 = v18;
    }
    if (v11 > v23) {
      char v26 = 1;
    }
    else {
      char v26 = v16;
    }
    if (v10 > v23) {
      char v27 = 1;
    }
    else {
      char v27 = v24;
    }
    char v28 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v29 = *(void *)(v4 + 16), uint64_t v30 = v29 - 4, v29 < 4)
        || v30 > (int)v29 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v30) == 1)
      {
        uint64_t v31 = 0;
        if (v25) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v31 = *(void *)(*(void *)(v4 + 64) + 8 * v30);
        if (v25) {
          goto LABEL_34;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v14) != 1)
      {
        uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v14);
        if (v17 < 1) {
          goto LABEL_27;
        }
LABEL_37:
        uint64_t v33 = 0;
        uint64_t v34 = v57 + v31 * v19;
        uint64_t v35 = v56 + v32 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v36 = *(void *)(v4 + 16), v37 = v36 - 3, v36 < 3)
            || v37 > (int)v36 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v37) == 1)
          {
            uint64_t v38 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_44;
            }
            goto LABEL_45;
          }
          uint64_t v38 = *(void *)(*(void *)(v4 + 64) + 8 * v37);
          if (v26) {
            goto LABEL_45;
          }
LABEL_44:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_45:
            uint64_t v39 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_38;
          }
          uint64_t v39 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_38:
            if (++v33 == v17) {
              goto LABEL_27;
            }
            continue;
          }
          break;
        }
        uint64_t v40 = 0;
        uint64_t v41 = v34 + v38 * v33;
        uint64_t v42 = v35 + v39 * v33;
        while (2)
        {
          if (v21
            || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 2, v43 < 2)
            || v44 > (int)v43 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
          {
            uint64_t v45 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_56;
          }
          uint64_t v45 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
          if (v27) {
            goto LABEL_56;
          }
LABEL_55:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_56:
            uint64_t v46 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_49;
          }
          uint64_t v46 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_49:
            if (++v40 == v12) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        uint64_t v47 = 0;
        uint64_t v48 = v41 + v45 * v40;
        uint64_t v49 = *(void *)(v4 + 40);
        uint64_t v50 = *(void *)(v5 + 40);
        uint64_t v51 = v42 + v46 * v40;
        while (2)
        {
          if (v21
            || (uint64_t v54 = *(void *)(v4 + 16), v55 = v54 - 1, v54 < 1)
            || v55 > (int)v54 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v55) == 1)
          {
            uint64_t v53 = 0;
            if ((v28 & 1) == 0) {
              goto LABEL_64;
            }
          }
          else
          {
            uint64_t v53 = *(void *)(*(void *)(v4 + 64) + 8 * v55);
            if ((v28 & 1) == 0)
            {
LABEL_64:
              if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
              {
                uint64_t v52 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_61:
                *(float *)(v51 + v52 * v47 + v50) = floorf(*(float *)(v48 + v53 * v47 + v49));
                if (v9 == ++v47) {
                  goto LABEL_49;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v52 = 0;
        goto LABEL_61;
      }
LABEL_34:
      uint64_t v32 = 0;
      if (v17 >= 1) {
        goto LABEL_37;
      }
LABEL_27:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v14 = v6 - 4;
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t **mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)8>(uint64_t **result, uint64_t **a2, uint64_t **a3, uint64_t **a4, float16x4_t a5)
{
  uint64_t v5 = **result;
  uint64_t v6 = **a2;
  uint64_t v7 = **a3;
  uint64_t v8 = **a4;
  uint64_t v9 = *(void *)(v6 + 16);
  if (v9 < 1)
  {
    uint64_t v9 = 1;
    uint64_t v13 = 1;
    uint64_t v12 = 1;
    uint64_t v14 = 1;
    goto LABEL_10;
  }
  uint64_t v10 = *(void *)(v6 + 24);
  uint64_t v11 = v10 + 8 * v9;
  uint64_t v12 = *(void *)(v11 - 8);
  if (v9 == 1)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    goto LABEL_10;
  }
  uint64_t v13 = *(void *)(v11 - 16);
  if ((unint64_t)v9 < 3)
  {
    uint64_t v9 = 1;
    uint64_t v14 = 1;
    goto LABEL_10;
  }
  uint64_t v15 = v10 + 8 * v9;
  uint64_t v14 = *(void *)(v15 - 24);
  if (v9 == 3)
  {
    uint64_t v9 = 1;
    goto LABEL_10;
  }
  uint64_t v9 = *(void *)(v15 - 32);
  if (v9 >= 1)
  {
LABEL_10:
    uint64_t v16 = 0;
    while (1)
    {
      if (*(unsigned char *)(v5 + 58)
        || (uint64_t v17 = *(void *)(v5 + 16), v18 = v17 - 4, v17 < 4)
        || v18 > (int)v17 - 1
        || *(void *)(*(void *)(v5 + 24) + 8 * v18) == 1)
      {
        uint64_t result = 0;
        if (*(unsigned char *)(v6 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t result = *(uint64_t ***)(*(void *)(v5 + 64) + 8 * v18);
        if (*(unsigned char *)(v6 + 58)) {
          break;
        }
      }
      uint64_t v19 = *(void *)(v6 + 16);
      uint64_t v20 = v19 - 4;
      if (v19 < 4 || v20 > (int)v19 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v20) == 1) {
        break;
      }
      uint64_t v21 = *(void *)(*(void *)(v6 + 64) + 8 * v20);
      if (v14 >= 1) {
        goto LABEL_24;
      }
LABEL_11:
      if (++v16 == v9) {
        return result;
      }
    }
    uint64_t v21 = 0;
    if (v14 < 1) {
      goto LABEL_11;
    }
LABEL_24:
    uint64_t v22 = 0;
    uint64_t result = (uint64_t **)(v7 + (void)result * v16);
    uint64_t v23 = v8 + v21 * v16;
    while (1)
    {
      if (*(unsigned char *)(v5 + 58)
        || (uint64_t v24 = *(void *)(v5 + 16), v25 = v24 - 3, v24 < 3)
        || v25 > (int)v24 - 1
        || *(void *)(*(void *)(v5 + 24) + 8 * v25) == 1)
      {
        uint64_t v26 = 0;
        if (*(unsigned char *)(v6 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v26 = *(void *)(*(void *)(v5 + 64) + 8 * v25);
        if (*(unsigned char *)(v6 + 58)) {
          break;
        }
      }
      uint64_t v27 = *(void *)(v6 + 16);
      uint64_t v28 = v27 - 3;
      if (v27 < 3 || v28 > (int)v27 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v28) == 1) {
        break;
      }
      uint64_t v29 = *(void *)(*(void *)(v6 + 64) + 8 * v28);
      if (v13 >= 1) {
        goto LABEL_38;
      }
LABEL_25:
      if (++v22 == v14) {
        goto LABEL_11;
      }
    }
    uint64_t v29 = 0;
    if (v13 < 1) {
      goto LABEL_25;
    }
LABEL_38:
    uint64_t v30 = 0;
    uint64_t v31 = (char *)result + v26 * v22;
    uint64_t v32 = v23 + v29 * v22;
    while (1)
    {
      if (*(unsigned char *)(v5 + 58)
        || (v33 = *(void *)(v5 + 16), uint64_t v34 = v33 - 2, v33 < 2)
        || v34 > (int)v33 - 1
        || *(void *)(*(void *)(v5 + 24) + 8 * v34) == 1)
      {
        uint64_t v35 = 0;
        if (*(unsigned char *)(v6 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v35 = *(void *)(*(void *)(v5 + 64) + 8 * v34);
        if (*(unsigned char *)(v6 + 58)) {
          break;
        }
      }
      uint64_t v36 = *(void *)(v6 + 16);
      uint64_t v37 = v36 - 2;
      if (v36 < 2 || v37 > (int)v36 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v37) == 1) {
        break;
      }
      uint64_t v38 = *(void *)(*(void *)(v6 + 64) + 8 * v37);
      if (v12 >= 1) {
        goto LABEL_52;
      }
LABEL_39:
      if (++v30 == v13) {
        goto LABEL_25;
      }
    }
    uint64_t v38 = 0;
    if (v12 < 1) {
      goto LABEL_39;
    }
LABEL_52:
    uint64_t v39 = 0;
    uint64_t v40 = &v31[v35 * v30];
    uint64_t v41 = v32 + v38 * v30;
    while (1)
    {
      if (*(unsigned char *)(v5 + 58)
        || (uint64_t v44 = *(void *)(v5 + 16), v45 = v44 - 1, v44 < 1)
        || v45 > (int)v44 - 1
        || *(void *)(*(void *)(v5 + 24) + 8 * v45) == 1)
      {
        uint64_t v42 = 0;
        if (*(unsigned char *)(v6 + 58)) {
          goto LABEL_55;
        }
      }
      else
      {
        uint64_t v42 = *(void *)(*(void *)(v5 + 64) + 8 * v45);
        if (*(unsigned char *)(v6 + 58)) {
          goto LABEL_55;
        }
      }
      uint64_t v46 = *(void *)(v6 + 16);
      uint64_t v47 = v46 - 1;
      if (v46 >= 1 && v47 <= (int)v46 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v47) != 1)
      {
        uint64_t v43 = *(void *)(*(void *)(v6 + 64) + 8 * v47);
        goto LABEL_56;
      }
LABEL_55:
      uint64_t v43 = 0;
LABEL_56:
      a5.i32[0] = *(_DWORD *)&v40[v42 * v39 + *(void *)(v5 + 40)];
      a5 = (float16x4_t)vcvtq_f32_f16(vrndm_f16(a5)).u64[0];
      *(double *)(v41 + v43 * v39++ + *(void *)(v6 + 40)) = *(double *)&a5;
      if (v12 == v39) {
        goto LABEL_39;
      }
    }
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<half,float,(mlir::mps::arithmeticOp)8>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v62 = **a4;
  uint64_t v63 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v24 = 1;
    }
    else
    {
      char v24 = v13;
    }
    if (*(unsigned char *)(v5 + 58)) {
      BOOL v20 = 1;
    }
    if (v14 > v22) {
      char v25 = 1;
    }
    else {
      char v25 = v18;
    }
    if (v11 > v23) {
      char v26 = 1;
    }
    else {
      char v26 = v16;
    }
    if (v10 > v23) {
      char v27 = 1;
    }
    else {
      char v27 = v24;
    }
    char v28 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v29 = *(void *)(v4 + 16), uint64_t v30 = v29 - 4, v29 < 4)
        || v30 > (int)v29 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v30) == 1)
      {
        uint64_t v31 = 0;
        if (v25) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v31 = *(void *)(*(void *)(v4 + 64) + 8 * v30);
        if (v25) {
          goto LABEL_34;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v14) != 1)
      {
        uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v14);
        if (v17 < 1) {
          goto LABEL_27;
        }
LABEL_37:
        uint64_t v33 = 0;
        uint64_t v34 = v63 + v31 * v19;
        uint64_t v35 = v62 + v32 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v36 = *(void *)(v4 + 16), v37 = v36 - 3, v36 < 3)
            || v37 > (int)v36 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v37) == 1)
          {
            uint64_t v38 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_44;
            }
            goto LABEL_45;
          }
          uint64_t v38 = *(void *)(*(void *)(v4 + 64) + 8 * v37);
          if (v26) {
            goto LABEL_45;
          }
LABEL_44:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_45:
            uint64_t v39 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_38;
          }
          uint64_t v39 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_38:
            if (++v33 == v17) {
              goto LABEL_27;
            }
            continue;
          }
          break;
        }
        uint64_t v40 = 0;
        uint64_t v41 = v34 + v38 * v33;
        uint64_t v42 = v35 + v39 * v33;
        while (2)
        {
          if (v21
            || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 2, v43 < 2)
            || v44 > (int)v43 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
          {
            uint64_t v45 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_56;
          }
          uint64_t v45 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
          if (v27) {
            goto LABEL_56;
          }
LABEL_55:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_56:
            uint64_t v46 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_49;
          }
          uint64_t v46 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_49:
            if (++v40 == v12) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        uint64_t v47 = 0;
        uint64_t v48 = v41 + v45 * v40;
        uint64_t v49 = *(void *)(v4 + 40);
        uint64_t v50 = *(void *)(v5 + 40);
        uint64_t v51 = v42 + v46 * v40;
        while (2)
        {
          if (v21
            || (uint64_t v60 = *(void *)(v4 + 16), v61 = v60 - 1, v60 < 1)
            || v61 > (int)v60 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v61) == 1)
          {
            uint64_t v59 = 0;
            if ((v28 & 1) == 0) {
              goto LABEL_64;
            }
          }
          else
          {
            uint64_t v59 = *(void *)(*(void *)(v4 + 64) + 8 * v61);
            if ((v28 & 1) == 0)
            {
LABEL_64:
              if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
              {
                uint64_t v52 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_61:
                _H0 = floorl(*(short float *)(v48 + v59 * v47 + v49));
                __asm { FCVT            S0, H0 }
                *(_DWORD *)(v51 + v52 * v47++ + v50) = _S0;
                if (v9 == v47) {
                  goto LABEL_49;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v52 = 0;
        goto LABEL_61;
      }
LABEL_34:
      uint64_t v32 = 0;
      if (v17 >= 1) {
        goto LABEL_37;
      }
LABEL_27:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v14 = v6 - 4;
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t **mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<half,(void *)0>,(mlir::mps::arithmeticOp)8>(uint64_t **result, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **result;
  uint64_t v5 = **a2;
  uint64_t v6 = **a3;
  uint64_t v7 = **a4;
  uint64_t v8 = *(void *)(v5 + 16);
  if (v8 < 1)
  {
    uint64_t v8 = 1;
    uint64_t v12 = 1;
    uint64_t v11 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v9 = *(void *)(v5 + 24);
  uint64_t v10 = v9 + 8 * v8;
  uint64_t v11 = *(void *)(v10 - 8);
  if (v8 == 1)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v12 = *(void *)(v10 - 16);
  if ((unint64_t)v8 < 3)
  {
    uint64_t v8 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v14 = v9 + 8 * v8;
  uint64_t v13 = *(void *)(v14 - 24);
  if (v8 == 3)
  {
    uint64_t v8 = 1;
    goto LABEL_10;
  }
  uint64_t v8 = *(void *)(v14 - 32);
  if (v8 >= 1)
  {
LABEL_10:
    uint64_t v15 = 0;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v16 = *(void *)(v4 + 16), uint64_t v17 = v16 - 4, v16 < 4)
        || v17 > (int)v16 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v17) == 1)
      {
        uint64_t result = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t result = *(uint64_t ***)(*(void *)(v4 + 64) + 8 * v17);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v18 = *(void *)(v5 + 16);
      uint64_t v19 = v18 - 4;
      if (v18 < 4 || v19 > (int)v18 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v19) == 1) {
        break;
      }
      uint64_t v20 = *(void *)(*(void *)(v5 + 64) + 8 * v19);
      if (v13 >= 1) {
        goto LABEL_24;
      }
LABEL_11:
      if (++v15 == v8) {
        return result;
      }
    }
    uint64_t v20 = 0;
    if (v13 < 1) {
      goto LABEL_11;
    }
LABEL_24:
    uint64_t v21 = 0;
    uint64_t result = (uint64_t **)(v6 + (void)result * v15);
    uint64_t v22 = v7 + v20 * v15;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v23 = *(void *)(v4 + 16), uint64_t v24 = v23 - 3, v23 < 3)
        || v24 > (int)v23 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1)
      {
        uint64_t v25 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v26 = *(void *)(v5 + 16);
      uint64_t v27 = v26 - 3;
      if (v26 < 3 || v27 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v27) == 1) {
        break;
      }
      uint64_t v28 = *(void *)(*(void *)(v5 + 64) + 8 * v27);
      if (v12 >= 1) {
        goto LABEL_38;
      }
LABEL_25:
      if (++v21 == v13) {
        goto LABEL_11;
      }
    }
    uint64_t v28 = 0;
    if (v12 < 1) {
      goto LABEL_25;
    }
LABEL_38:
    uint64_t v29 = 0;
    uint64_t v30 = (char *)result + v25 * v21;
    uint64_t v31 = v22 + v28 * v21;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (uint64_t v32 = *(void *)(v4 + 16), v33 = v32 - 2, v32 < 2)
        || v33 > (int)v32 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v33) == 1)
      {
        uint64_t v34 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v34 = *(void *)(*(void *)(v4 + 64) + 8 * v33);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v35 = *(void *)(v5 + 16);
      uint64_t v36 = v35 - 2;
      if (v35 < 2 || v36 > (int)v35 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v36) == 1) {
        break;
      }
      uint64_t v37 = *(void *)(*(void *)(v5 + 64) + 8 * v36);
      if (v11 >= 1) {
        goto LABEL_52;
      }
LABEL_39:
      if (++v29 == v12) {
        goto LABEL_25;
      }
    }
    uint64_t v37 = 0;
    if (v11 < 1) {
      goto LABEL_39;
    }
LABEL_52:
    uint64_t v38 = 0;
    uint64_t v39 = &v30[v34 * v29];
    uint64_t v40 = v31 + v37 * v29;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (uint64_t v46 = *(void *)(v4 + 16), v47 = v46 - 1, v46 < 1)
        || v47 > (int)v46 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v47) == 1)
      {
        uint64_t v41 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      else
      {
        uint64_t v41 = *(void *)(*(void *)(v4 + 64) + 8 * v47);
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      uint64_t v48 = *(void *)(v5 + 16);
      uint64_t v49 = v48 - 1;
      if (v48 >= 1 && v49 <= (int)v48 - 1 && *(void *)(*(void *)(v5 + 24) + 8 * v49) != 1)
      {
        uint64_t v42 = *(void *)(*(void *)(v5 + 64) + 8 * v49);
        goto LABEL_56;
      }
LABEL_55:
      uint64_t v42 = 0;
LABEL_56:
      uint64_t v43 = (short float *)&v39[v41 * v38 + *(void *)(v4 + 40)];
      uint64_t v44 = (short float *)(v40 + v42 * v38 + *(void *)(v5 + 40));
      short float v45 = floorl(v43[1]);
      short float *v44 = floorl(*v43);
      v44[1] = v45;
      if (v11 == ++v38) {
        goto LABEL_39;
      }
    }
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<half,half,(mlir::mps::arithmeticOp)8>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v56 = **a4;
  uint64_t v57 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v24 = 1;
    }
    else
    {
      char v24 = v13;
    }
    if (*(unsigned char *)(v5 + 58)) {
      BOOL v20 = 1;
    }
    if (v14 > v22) {
      char v25 = 1;
    }
    else {
      char v25 = v18;
    }
    if (v11 > v23) {
      char v26 = 1;
    }
    else {
      char v26 = v16;
    }
    if (v10 > v23) {
      char v27 = 1;
    }
    else {
      char v27 = v24;
    }
    char v28 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v29 = *(void *)(v4 + 16), uint64_t v30 = v29 - 4, v29 < 4)
        || v30 > (int)v29 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v30) == 1)
      {
        uint64_t v31 = 0;
        if (v25) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v31 = *(void *)(*(void *)(v4 + 64) + 8 * v30);
        if (v25) {
          goto LABEL_34;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v14) != 1)
      {
        uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v14);
        if (v17 < 1) {
          goto LABEL_27;
        }
LABEL_37:
        uint64_t v33 = 0;
        uint64_t v34 = v57 + v31 * v19;
        uint64_t v35 = v56 + v32 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v36 = *(void *)(v4 + 16), v37 = v36 - 3, v36 < 3)
            || v37 > (int)v36 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v37) == 1)
          {
            uint64_t v38 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_44;
            }
            goto LABEL_45;
          }
          uint64_t v38 = *(void *)(*(void *)(v4 + 64) + 8 * v37);
          if (v26) {
            goto LABEL_45;
          }
LABEL_44:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_45:
            uint64_t v39 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_38;
          }
          uint64_t v39 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_38:
            if (++v33 == v17) {
              goto LABEL_27;
            }
            continue;
          }
          break;
        }
        uint64_t v40 = 0;
        uint64_t v41 = v34 + v38 * v33;
        uint64_t v42 = v35 + v39 * v33;
        while (2)
        {
          if (v21
            || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 2, v43 < 2)
            || v44 > (int)v43 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
          {
            uint64_t v45 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_56;
          }
          uint64_t v45 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
          if (v27) {
            goto LABEL_56;
          }
LABEL_55:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_56:
            uint64_t v46 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_49;
          }
          uint64_t v46 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_49:
            if (++v40 == v12) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        uint64_t v47 = 0;
        uint64_t v48 = v41 + v45 * v40;
        uint64_t v49 = *(void *)(v4 + 40);
        uint64_t v50 = *(void *)(v5 + 40);
        uint64_t v51 = v42 + v46 * v40;
        while (2)
        {
          if (v21
            || (uint64_t v54 = *(void *)(v4 + 16), v55 = v54 - 1, v54 < 1)
            || v55 > (int)v54 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v55) == 1)
          {
            uint64_t v53 = 0;
            if ((v28 & 1) == 0) {
              goto LABEL_64;
            }
          }
          else
          {
            uint64_t v53 = *(void *)(*(void *)(v4 + 64) + 8 * v55);
            if ((v28 & 1) == 0)
            {
LABEL_64:
              if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
              {
                uint64_t v52 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_61:
                *(short float *)(v51 + v52 * v47 + v50) = floorl(*(short float *)(v48 + v53 * v47 + v49));
                if (v9 == ++v47) {
                  goto LABEL_49;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v52 = 0;
        goto LABEL_61;
      }
LABEL_34:
      uint64_t v32 = 0;
      if (v17 >= 1) {
        goto LABEL_37;
      }
LABEL_27:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v14 = v6 - 4;
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t **mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<half,(void *)0>,(mlir::mps::arithmeticOp)8>(uint64_t **result, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **result;
  uint64_t v5 = **a2;
  uint64_t v6 = **a3;
  uint64_t v7 = **a4;
  uint64_t v8 = *(void *)(v5 + 16);
  if (v8 < 1)
  {
    uint64_t v8 = 1;
    uint64_t v12 = 1;
    uint64_t v11 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v9 = *(void *)(v5 + 24);
  uint64_t v10 = v9 + 8 * v8;
  uint64_t v11 = *(void *)(v10 - 8);
  if (v8 == 1)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v12 = *(void *)(v10 - 16);
  if ((unint64_t)v8 < 3)
  {
    uint64_t v8 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v14 = v9 + 8 * v8;
  uint64_t v13 = *(void *)(v14 - 24);
  if (v8 == 3)
  {
    uint64_t v8 = 1;
    goto LABEL_10;
  }
  uint64_t v8 = *(void *)(v14 - 32);
  if (v8 >= 1)
  {
LABEL_10:
    uint64_t v15 = 0;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v16 = *(void *)(v4 + 16), uint64_t v17 = v16 - 4, v16 < 4)
        || v17 > (int)v16 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v17) == 1)
      {
        uint64_t result = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t result = *(uint64_t ***)(*(void *)(v4 + 64) + 8 * v17);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v18 = *(void *)(v5 + 16);
      uint64_t v19 = v18 - 4;
      if (v18 < 4 || v19 > (int)v18 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v19) == 1) {
        break;
      }
      uint64_t v20 = *(void *)(*(void *)(v5 + 64) + 8 * v19);
      if (v13 >= 1) {
        goto LABEL_24;
      }
LABEL_11:
      if (++v15 == v8) {
        return result;
      }
    }
    uint64_t v20 = 0;
    if (v13 < 1) {
      goto LABEL_11;
    }
LABEL_24:
    uint64_t v21 = 0;
    uint64_t result = (uint64_t **)(v6 + (void)result * v15);
    uint64_t v22 = v7 + v20 * v15;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v23 = *(void *)(v4 + 16), uint64_t v24 = v23 - 3, v23 < 3)
        || v24 > (int)v23 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1)
      {
        uint64_t v25 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v26 = *(void *)(v5 + 16);
      uint64_t v27 = v26 - 3;
      if (v26 < 3 || v27 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v27) == 1) {
        break;
      }
      uint64_t v28 = *(void *)(*(void *)(v5 + 64) + 8 * v27);
      if (v12 >= 1) {
        goto LABEL_38;
      }
LABEL_25:
      if (++v21 == v13) {
        goto LABEL_11;
      }
    }
    uint64_t v28 = 0;
    if (v12 < 1) {
      goto LABEL_25;
    }
LABEL_38:
    uint64_t v29 = 0;
    uint64_t v30 = (char *)result + v25 * v21;
    uint64_t v31 = v22 + v28 * v21;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (uint64_t v32 = *(void *)(v4 + 16), v33 = v32 - 2, v32 < 2)
        || v33 > (int)v32 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v33) == 1)
      {
        uint64_t v34 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v34 = *(void *)(*(void *)(v4 + 64) + 8 * v33);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v35 = *(void *)(v5 + 16);
      uint64_t v36 = v35 - 2;
      if (v35 < 2 || v36 > (int)v35 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v36) == 1) {
        break;
      }
      uint64_t v37 = *(void *)(*(void *)(v5 + 64) + 8 * v36);
      if (v11 >= 1) {
        goto LABEL_52;
      }
LABEL_39:
      if (++v29 == v12) {
        goto LABEL_25;
      }
    }
    uint64_t v37 = 0;
    if (v11 < 1) {
      goto LABEL_39;
    }
LABEL_52:
    uint64_t v38 = 0;
    uint64_t v39 = &v30[v34 * v29];
    uint64_t v40 = v31 + v37 * v29;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v51 = *(void *)(v4 + 16), uint64_t v52 = v51 - 1, v51 < 1)
        || v52 > (int)v51 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v52) == 1)
      {
        uint64_t v41 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      else
      {
        uint64_t v41 = *(void *)(*(void *)(v4 + 64) + 8 * v52);
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      uint64_t v53 = *(void *)(v5 + 16);
      uint64_t v54 = v53 - 1;
      if (v53 >= 1 && v54 <= (int)v53 - 1 && *(void *)(*(void *)(v5 + 24) + 8 * v54) != 1)
      {
        uint64_t v42 = *(void *)(*(void *)(v5 + 64) + 8 * v54);
        goto LABEL_56;
      }
LABEL_55:
      uint64_t v42 = 0;
LABEL_56:
      uint64_t v43 = (float *)&v39[v41 * v38 + *(void *)(v4 + 40)];
      uint64_t v44 = (_WORD *)(v40 + v42 * v38 + *(void *)(v5 + 40));
      _S0 = floorf(*v43);
      _S1 = floorf(v43[1]);
      __asm
      {
        FCVT            H0, S0
        FCVT            H1, S1
      }
      _WORD *v44 = LOWORD(_S0);
      v44[1] = LOWORD(_S1);
      if (v11 == ++v38) {
        goto LABEL_39;
      }
    }
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<float,half,(mlir::mps::arithmeticOp)8>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v61 = **a4;
  uint64_t v62 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v24 = 1;
    }
    else
    {
      char v24 = v13;
    }
    if (*(unsigned char *)(v5 + 58)) {
      BOOL v20 = 1;
    }
    if (v14 > v22) {
      char v25 = 1;
    }
    else {
      char v25 = v18;
    }
    if (v11 > v23) {
      char v26 = 1;
    }
    else {
      char v26 = v16;
    }
    if (v10 > v23) {
      char v27 = 1;
    }
    else {
      char v27 = v24;
    }
    char v28 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v29 = *(void *)(v4 + 16), uint64_t v30 = v29 - 4, v29 < 4)
        || v30 > (int)v29 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v30) == 1)
      {
        uint64_t v31 = 0;
        if (v25) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v31 = *(void *)(*(void *)(v4 + 64) + 8 * v30);
        if (v25) {
          goto LABEL_34;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v14) != 1)
      {
        uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v14);
        if (v17 < 1) {
          goto LABEL_27;
        }
LABEL_37:
        uint64_t v33 = 0;
        uint64_t v34 = v62 + v31 * v19;
        uint64_t v35 = v61 + v32 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v36 = *(void *)(v4 + 16), v37 = v36 - 3, v36 < 3)
            || v37 > (int)v36 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v37) == 1)
          {
            uint64_t v38 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_44;
            }
            goto LABEL_45;
          }
          uint64_t v38 = *(void *)(*(void *)(v4 + 64) + 8 * v37);
          if (v26) {
            goto LABEL_45;
          }
LABEL_44:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_45:
            uint64_t v39 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_38;
          }
          uint64_t v39 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_38:
            if (++v33 == v17) {
              goto LABEL_27;
            }
            continue;
          }
          break;
        }
        uint64_t v40 = 0;
        uint64_t v41 = v34 + v38 * v33;
        uint64_t v42 = v35 + v39 * v33;
        while (2)
        {
          if (v21
            || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 2, v43 < 2)
            || v44 > (int)v43 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
          {
            uint64_t v45 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_56;
          }
          uint64_t v45 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
          if (v27) {
            goto LABEL_56;
          }
LABEL_55:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_56:
            uint64_t v46 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_49;
          }
          uint64_t v46 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_49:
            if (++v40 == v12) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        uint64_t v47 = 0;
        uint64_t v48 = v41 + v45 * v40;
        uint64_t v49 = *(void *)(v4 + 40);
        uint64_t v50 = *(void *)(v5 + 40);
        uint64_t v51 = v42 + v46 * v40;
        while (2)
        {
          if (v21
            || (v59 = *(void *)(v4 + 16), uint64_t v60 = v59 - 1, v59 < 1)
            || v60 > (int)v59 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v60) == 1)
          {
            uint64_t v58 = 0;
            if ((v28 & 1) == 0) {
              goto LABEL_64;
            }
          }
          else
          {
            uint64_t v58 = *(void *)(*(void *)(v4 + 64) + 8 * v60);
            if ((v28 & 1) == 0)
            {
LABEL_64:
              if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
              {
                uint64_t v52 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_61:
                _S0 = floorf(*(float *)(v48 + v58 * v47 + v49));
                __asm { FCVT            H0, S0 }
                *(_WORD *)(v51 + v52 * v47++ + v50) = LOWORD(_S0);
                if (v9 == v47) {
                  goto LABEL_49;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v52 = 0;
        goto LABEL_61;
      }
LABEL_34:
      uint64_t v32 = 0;
      if (v17 >= 1) {
        goto LABEL_37;
      }
LABEL_27:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v14 = v6 - 4;
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<__emulated_bf16,float,(mlir::mps::arithmeticOp)8>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v56 = **a4;
  uint64_t v57 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v24 = 1;
    }
    else
    {
      char v24 = v13;
    }
    if (*(unsigned char *)(v5 + 58)) {
      BOOL v20 = 1;
    }
    if (v14 > v22) {
      char v25 = 1;
    }
    else {
      char v25 = v18;
    }
    if (v11 > v23) {
      char v26 = 1;
    }
    else {
      char v26 = v16;
    }
    if (v10 > v23) {
      char v27 = 1;
    }
    else {
      char v27 = v24;
    }
    char v28 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v29 = *(void *)(v4 + 16), uint64_t v30 = v29 - 4, v29 < 4)
        || v30 > (int)v29 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v30) == 1)
      {
        uint64_t v31 = 0;
        if (v25) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v31 = *(void *)(*(void *)(v4 + 64) + 8 * v30);
        if (v25) {
          goto LABEL_34;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v14) != 1)
      {
        uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v14);
        if (v17 < 1) {
          goto LABEL_27;
        }
LABEL_37:
        uint64_t v33 = 0;
        uint64_t v34 = v57 + v31 * v19;
        uint64_t v35 = v56 + v32 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v36 = *(void *)(v4 + 16), v37 = v36 - 3, v36 < 3)
            || v37 > (int)v36 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v37) == 1)
          {
            uint64_t v38 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_44;
            }
            goto LABEL_45;
          }
          uint64_t v38 = *(void *)(*(void *)(v4 + 64) + 8 * v37);
          if (v26) {
            goto LABEL_45;
          }
LABEL_44:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_45:
            uint64_t v39 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_38;
          }
          uint64_t v39 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_38:
            if (++v33 == v17) {
              goto LABEL_27;
            }
            continue;
          }
          break;
        }
        uint64_t v40 = 0;
        uint64_t v41 = v34 + v38 * v33;
        uint64_t v42 = v35 + v39 * v33;
        while (2)
        {
          if (v21
            || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 2, v43 < 2)
            || v44 > (int)v43 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
          {
            uint64_t v45 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_56;
          }
          uint64_t v45 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
          if (v27) {
            goto LABEL_56;
          }
LABEL_55:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_56:
            uint64_t v46 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_49;
          }
          uint64_t v46 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_49:
            if (++v40 == v12) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        uint64_t v47 = 0;
        uint64_t v48 = v41 + v45 * v40;
        uint64_t v49 = *(void *)(v4 + 40);
        uint64_t v50 = *(void *)(v5 + 40);
        uint64_t v51 = v42 + v46 * v40;
        while (2)
        {
          if (v21
            || (uint64_t v54 = *(void *)(v4 + 16), v55 = v54 - 1, v54 < 1)
            || v55 > (int)v54 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v55) == 1)
          {
            uint64_t v53 = 0;
            if ((v28 & 1) == 0) {
              goto LABEL_64;
            }
          }
          else
          {
            uint64_t v53 = *(void *)(*(void *)(v4 + 64) + 8 * v55);
            if ((v28 & 1) == 0)
            {
LABEL_64:
              if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
              {
                uint64_t v52 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_61:
                *(float *)(v51 + v52 * v47 + v50) = floorf(COERCE_FLOAT(*(unsigned __int16 *)(v48 + v53 * v47 + v49) << 16));
                if (v9 == ++v47) {
                  goto LABEL_49;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v52 = 0;
        goto LABEL_61;
      }
LABEL_34:
      uint64_t v32 = 0;
      if (v17 >= 1) {
        goto LABEL_37;
      }
LABEL_27:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v14 = v6 - 4;
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<__emulated_bf16,__emulated_bf16,(mlir::mps::arithmeticOp)8>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v56 = **a4;
  uint64_t v57 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v13 = 1;
      BOOL v20 = 1;
    }
    uint64_t v55 = v14;
    if (v14 > v22) {
      char v24 = 1;
    }
    else {
      char v24 = v18;
    }
    if (v11 > v23) {
      char v16 = 1;
    }
    if (v10 > v23) {
      char v25 = 1;
    }
    else {
      char v25 = v13;
    }
    char v26 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v27 = *(void *)(v4 + 16), uint64_t v28 = v27 - 4, v27 < 4)
        || v28 > (int)v27 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v28) == 1)
      {
        uint64_t v29 = 0;
        if (v24) {
          goto LABEL_30;
        }
      }
      else
      {
        uint64_t v29 = *(void *)(*(void *)(v4 + 64) + 8 * v28);
        if (v24) {
          goto LABEL_30;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v55) != 1)
      {
        uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v55);
        if (v17 < 1) {
          goto LABEL_23;
        }
LABEL_33:
        uint64_t v31 = 0;
        uint64_t v32 = v57 + v29 * v19;
        uint64_t v33 = v56 + v30 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v34 = *(void *)(v4 + 16), v35 = v34 - 3, v34 < 3)
            || v35 > (int)v34 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v35) == 1)
          {
            uint64_t v36 = 0;
            if ((v16 & 1) == 0) {
              goto LABEL_40;
            }
            goto LABEL_41;
          }
          uint64_t v36 = *(void *)(*(void *)(v4 + 64) + 8 * v35);
          if (v16) {
            goto LABEL_41;
          }
LABEL_40:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_41:
            uint64_t v37 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_34;
          }
          uint64_t v37 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_34:
            if (++v31 == v17) {
              goto LABEL_23;
            }
            continue;
          }
          break;
        }
        uint64_t v38 = 0;
        uint64_t v39 = v32 + v36 * v31;
        uint64_t v40 = v33 + v37 * v31;
        while (2)
        {
          if (v21
            || (v41 = *(void *)(v4 + 16), uint64_t v42 = v41 - 2, v41 < 2)
            || v42 > (int)v41 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v42) == 1)
          {
            uint64_t v43 = 0;
            if ((v25 & 1) == 0) {
              goto LABEL_51;
            }
            goto LABEL_52;
          }
          uint64_t v43 = *(void *)(*(void *)(v4 + 64) + 8 * v42);
          if (v25) {
            goto LABEL_52;
          }
LABEL_51:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_52:
            uint64_t v44 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_45;
          }
          uint64_t v44 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_45:
            if (++v38 == v12) {
              goto LABEL_34;
            }
            continue;
          }
          break;
        }
        uint64_t v45 = 0;
        uint64_t v46 = v39 + v43 * v38;
        uint64_t v47 = *(void *)(v4 + 40);
        uint64_t v48 = *(void *)(v5 + 40);
        uint64_t v49 = v40 + v44 * v38;
        while (2)
        {
          if (v21
            || (uint64_t v52 = *(void *)(v4 + 16), v53 = v52 - 1, v52 < 1)
            || v53 > (int)v52 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v53) == 1)
          {
            uint64_t v50 = 0;
            if (v26) {
              goto LABEL_59;
            }
          }
          else
          {
            uint64_t v50 = *(void *)(*(void *)(v4 + 64) + 8 * v53);
            if (v26)
            {
LABEL_59:
              uint64_t v51 = 0;
              goto LABEL_66;
            }
          }
          if (*(void *)(*(void *)(v5 + 24) + 8 * v7) == 1) {
            goto LABEL_59;
          }
          uint64_t v51 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_66:
          float v54 = floorf(COERCE_FLOAT(*(unsigned __int16 *)(v46 + v50 * v45 + v47) << 16));
          *(_WORD *)(v48 + v49 + v51 * v45++) = HIWORD(COERCE_UNSIGNED_INT(v54 + (float)(COERCE_FLOAT(LODWORD(v54) & 0xFF800000)
                                                                                       * 0.0039062)));
          if (v9 == v45) {
            goto LABEL_45;
          }
          continue;
        }
      }
LABEL_30:
      uint64_t v30 = 0;
      if (v17 >= 1) {
        goto LABEL_33;
      }
LABEL_23:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    uint64_t v14 = v6 - 4;
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<float,__emulated_bf16,(mlir::mps::arithmeticOp)8>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v56 = **a4;
  uint64_t v57 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v13 = 1;
      BOOL v20 = 1;
    }
    uint64_t v55 = v14;
    if (v14 > v22) {
      char v24 = 1;
    }
    else {
      char v24 = v18;
    }
    if (v11 > v23) {
      char v16 = 1;
    }
    if (v10 > v23) {
      char v25 = 1;
    }
    else {
      char v25 = v13;
    }
    char v26 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v27 = *(void *)(v4 + 16), uint64_t v28 = v27 - 4, v27 < 4)
        || v28 > (int)v27 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v28) == 1)
      {
        uint64_t v29 = 0;
        if (v24) {
          goto LABEL_30;
        }
      }
      else
      {
        uint64_t v29 = *(void *)(*(void *)(v4 + 64) + 8 * v28);
        if (v24) {
          goto LABEL_30;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v55) != 1)
      {
        uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v55);
        if (v17 < 1) {
          goto LABEL_23;
        }
LABEL_33:
        uint64_t v31 = 0;
        uint64_t v32 = v57 + v29 * v19;
        uint64_t v33 = v56 + v30 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v34 = *(void *)(v4 + 16), v35 = v34 - 3, v34 < 3)
            || v35 > (int)v34 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v35) == 1)
          {
            uint64_t v36 = 0;
            if ((v16 & 1) == 0) {
              goto LABEL_40;
            }
            goto LABEL_41;
          }
          uint64_t v36 = *(void *)(*(void *)(v4 + 64) + 8 * v35);
          if (v16) {
            goto LABEL_41;
          }
LABEL_40:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_41:
            uint64_t v37 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_34;
          }
          uint64_t v37 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_34:
            if (++v31 == v17) {
              goto LABEL_23;
            }
            continue;
          }
          break;
        }
        uint64_t v38 = 0;
        uint64_t v39 = v32 + v36 * v31;
        uint64_t v40 = v33 + v37 * v31;
        while (2)
        {
          if (v21
            || (v41 = *(void *)(v4 + 16), uint64_t v42 = v41 - 2, v41 < 2)
            || v42 > (int)v41 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v42) == 1)
          {
            uint64_t v43 = 0;
            if ((v25 & 1) == 0) {
              goto LABEL_51;
            }
            goto LABEL_52;
          }
          uint64_t v43 = *(void *)(*(void *)(v4 + 64) + 8 * v42);
          if (v25) {
            goto LABEL_52;
          }
LABEL_51:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_52:
            uint64_t v44 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_45;
          }
          uint64_t v44 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_45:
            if (++v38 == v12) {
              goto LABEL_34;
            }
            continue;
          }
          break;
        }
        uint64_t v45 = 0;
        uint64_t v46 = v39 + v43 * v38;
        uint64_t v47 = *(void *)(v4 + 40);
        uint64_t v48 = *(void *)(v5 + 40);
        uint64_t v49 = v40 + v44 * v38;
        while (2)
        {
          if (v21
            || (uint64_t v52 = *(void *)(v4 + 16), v53 = v52 - 1, v52 < 1)
            || v53 > (int)v52 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v53) == 1)
          {
            uint64_t v50 = 0;
            if (v26) {
              goto LABEL_59;
            }
          }
          else
          {
            uint64_t v50 = *(void *)(*(void *)(v4 + 64) + 8 * v53);
            if (v26)
            {
LABEL_59:
              uint64_t v51 = 0;
              goto LABEL_66;
            }
          }
          if (*(void *)(*(void *)(v5 + 24) + 8 * v7) == 1) {
            goto LABEL_59;
          }
          uint64_t v51 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_66:
          float v54 = floorf(*(float *)(v46 + v50 * v45 + v47));
          *(_WORD *)(v48 + v49 + v51 * v45++) = HIWORD(COERCE_UNSIGNED_INT(v54 + (float)(COERCE_FLOAT(LODWORD(v54) & 0xFF800000)
                                                                                       * 0.0039062)));
          if (v9 == v45) {
            goto LABEL_45;
          }
          continue;
        }
      }
LABEL_30:
      uint64_t v30 = 0;
      if (v17 >= 1) {
        goto LABEL_33;
      }
LABEL_23:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    uint64_t v14 = v6 - 4;
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t **mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)9>(uint64_t **result, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **result;
  uint64_t v5 = **a2;
  uint64_t v6 = **a3;
  uint64_t v7 = **a4;
  uint64_t v8 = *(void *)(v5 + 16);
  if (v8 < 1)
  {
    uint64_t v8 = 1;
    uint64_t v12 = 1;
    uint64_t v11 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v9 = *(void *)(v5 + 24);
  uint64_t v10 = v9 + 8 * v8;
  uint64_t v11 = *(void *)(v10 - 8);
  if (v8 == 1)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v12 = *(void *)(v10 - 16);
  if ((unint64_t)v8 < 3)
  {
    uint64_t v8 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v14 = v9 + 8 * v8;
  uint64_t v13 = *(void *)(v14 - 24);
  if (v8 == 3)
  {
    uint64_t v8 = 1;
    goto LABEL_10;
  }
  uint64_t v8 = *(void *)(v14 - 32);
  if (v8 >= 1)
  {
LABEL_10:
    uint64_t v15 = 0;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v16 = *(void *)(v4 + 16), uint64_t v17 = v16 - 4, v16 < 4)
        || v17 > (int)v16 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v17) == 1)
      {
        uint64_t result = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t result = *(uint64_t ***)(*(void *)(v4 + 64) + 8 * v17);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v18 = *(void *)(v5 + 16);
      uint64_t v19 = v18 - 4;
      if (v18 < 4 || v19 > (int)v18 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v19) == 1) {
        break;
      }
      uint64_t v20 = *(void *)(*(void *)(v5 + 64) + 8 * v19);
      if (v13 >= 1) {
        goto LABEL_24;
      }
LABEL_11:
      if (++v15 == v8) {
        return result;
      }
    }
    uint64_t v20 = 0;
    if (v13 < 1) {
      goto LABEL_11;
    }
LABEL_24:
    uint64_t v21 = 0;
    uint64_t result = (uint64_t **)(v6 + (void)result * v15);
    uint64_t v22 = v7 + v20 * v15;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v23 = *(void *)(v4 + 16), uint64_t v24 = v23 - 3, v23 < 3)
        || v24 > (int)v23 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1)
      {
        uint64_t v25 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v26 = *(void *)(v5 + 16);
      uint64_t v27 = v26 - 3;
      if (v26 < 3 || v27 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v27) == 1) {
        break;
      }
      uint64_t v28 = *(void *)(*(void *)(v5 + 64) + 8 * v27);
      if (v12 >= 1) {
        goto LABEL_38;
      }
LABEL_25:
      if (++v21 == v13) {
        goto LABEL_11;
      }
    }
    uint64_t v28 = 0;
    if (v12 < 1) {
      goto LABEL_25;
    }
LABEL_38:
    uint64_t v29 = 0;
    uint64_t v30 = (char *)result + v25 * v21;
    uint64_t v31 = v22 + v28 * v21;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (uint64_t v32 = *(void *)(v4 + 16), v33 = v32 - 2, v32 < 2)
        || v33 > (int)v32 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v33) == 1)
      {
        uint64_t v34 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v34 = *(void *)(*(void *)(v4 + 64) + 8 * v33);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v35 = *(void *)(v5 + 16);
      uint64_t v36 = v35 - 2;
      if (v35 < 2 || v36 > (int)v35 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v36) == 1) {
        break;
      }
      uint64_t v37 = *(void *)(*(void *)(v5 + 64) + 8 * v36);
      if (v11 >= 1) {
        goto LABEL_52;
      }
LABEL_39:
      if (++v29 == v12) {
        goto LABEL_25;
      }
    }
    uint64_t v37 = 0;
    if (v11 < 1) {
      goto LABEL_39;
    }
LABEL_52:
    uint64_t v38 = 0;
    uint64_t v39 = &v30[v34 * v29];
    uint64_t v40 = v31 + v37 * v29;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 1, v43 < 1)
        || v44 > (int)v43 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
      {
        uint64_t v41 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      else
      {
        uint64_t v41 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      uint64_t v45 = *(void *)(v5 + 16);
      uint64_t v46 = v45 - 1;
      if (v45 >= 1 && v46 <= (int)v45 - 1 && *(void *)(*(void *)(v5 + 24) + 8 * v46) != 1)
      {
        uint64_t v42 = *(void *)(*(void *)(v5 + 64) + 8 * v46);
        goto LABEL_56;
      }
LABEL_55:
      uint64_t v42 = 0;
LABEL_56:
      *(float32x2_t *)(v40 + v42 * v38 + *(void *)(v5 + 40)) = vneg_f32(*(float32x2_t *)&v39[v41 * v38
                                                                                             + *(void *)(v4 + 40)]);
      if (v11 == ++v38) {
        goto LABEL_39;
      }
    }
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<float,float,(mlir::mps::arithmeticOp)9>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v56 = **a4;
  uint64_t v57 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v24 = 1;
    }
    else
    {
      char v24 = v13;
    }
    if (*(unsigned char *)(v5 + 58)) {
      BOOL v20 = 1;
    }
    if (v14 > v22) {
      char v25 = 1;
    }
    else {
      char v25 = v18;
    }
    if (v11 > v23) {
      char v26 = 1;
    }
    else {
      char v26 = v16;
    }
    if (v10 > v23) {
      char v27 = 1;
    }
    else {
      char v27 = v24;
    }
    char v28 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v29 = *(void *)(v4 + 16), uint64_t v30 = v29 - 4, v29 < 4)
        || v30 > (int)v29 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v30) == 1)
      {
        uint64_t v31 = 0;
        if (v25) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v31 = *(void *)(*(void *)(v4 + 64) + 8 * v30);
        if (v25) {
          goto LABEL_34;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v14) != 1)
      {
        uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v14);
        if (v17 < 1) {
          goto LABEL_27;
        }
LABEL_37:
        uint64_t v33 = 0;
        uint64_t v34 = v57 + v31 * v19;
        uint64_t v35 = v56 + v32 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v36 = *(void *)(v4 + 16), v37 = v36 - 3, v36 < 3)
            || v37 > (int)v36 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v37) == 1)
          {
            uint64_t v38 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_44;
            }
            goto LABEL_45;
          }
          uint64_t v38 = *(void *)(*(void *)(v4 + 64) + 8 * v37);
          if (v26) {
            goto LABEL_45;
          }
LABEL_44:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_45:
            uint64_t v39 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_38;
          }
          uint64_t v39 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_38:
            if (++v33 == v17) {
              goto LABEL_27;
            }
            continue;
          }
          break;
        }
        uint64_t v40 = 0;
        uint64_t v41 = v34 + v38 * v33;
        uint64_t v42 = v35 + v39 * v33;
        while (2)
        {
          if (v21
            || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 2, v43 < 2)
            || v44 > (int)v43 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
          {
            uint64_t v45 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_56;
          }
          uint64_t v45 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
          if (v27) {
            goto LABEL_56;
          }
LABEL_55:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_56:
            uint64_t v46 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_49;
          }
          uint64_t v46 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_49:
            if (++v40 == v12) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        uint64_t v47 = 0;
        uint64_t v48 = v41 + v45 * v40;
        uint64_t v49 = *(void *)(v4 + 40);
        uint64_t v50 = *(void *)(v5 + 40);
        uint64_t v51 = v42 + v46 * v40;
        while (2)
        {
          if (v21
            || (uint64_t v54 = *(void *)(v4 + 16), v55 = v54 - 1, v54 < 1)
            || v55 > (int)v54 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v55) == 1)
          {
            uint64_t v53 = 0;
            if ((v28 & 1) == 0) {
              goto LABEL_64;
            }
          }
          else
          {
            uint64_t v53 = *(void *)(*(void *)(v4 + 64) + 8 * v55);
            if ((v28 & 1) == 0)
            {
LABEL_64:
              if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
              {
                uint64_t v52 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_61:
                *(float *)(v51 + v52 * v47 + v50) = -*(float *)(v48 + v53 * v47 + v49);
                if (v9 == ++v47) {
                  goto LABEL_49;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v52 = 0;
        goto LABEL_61;
      }
LABEL_34:
      uint64_t v32 = 0;
      if (v17 >= 1) {
        goto LABEL_37;
      }
LABEL_27:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v14 = v6 - 4;
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t **mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)9>(uint64_t **result, uint64_t **a2, uint64_t **a3, uint64_t **a4, float16x4_t a5)
{
  uint64_t v5 = **result;
  uint64_t v6 = **a2;
  uint64_t v7 = **a3;
  uint64_t v8 = **a4;
  uint64_t v9 = *(void *)(v6 + 16);
  if (v9 < 1)
  {
    uint64_t v9 = 1;
    uint64_t v13 = 1;
    uint64_t v12 = 1;
    uint64_t v14 = 1;
    goto LABEL_10;
  }
  uint64_t v10 = *(void *)(v6 + 24);
  uint64_t v11 = v10 + 8 * v9;
  uint64_t v12 = *(void *)(v11 - 8);
  if (v9 == 1)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    goto LABEL_10;
  }
  uint64_t v13 = *(void *)(v11 - 16);
  if ((unint64_t)v9 < 3)
  {
    uint64_t v9 = 1;
    uint64_t v14 = 1;
    goto LABEL_10;
  }
  uint64_t v15 = v10 + 8 * v9;
  uint64_t v14 = *(void *)(v15 - 24);
  if (v9 == 3)
  {
    uint64_t v9 = 1;
    goto LABEL_10;
  }
  uint64_t v9 = *(void *)(v15 - 32);
  if (v9 >= 1)
  {
LABEL_10:
    uint64_t v16 = 0;
    while (1)
    {
      if (*(unsigned char *)(v5 + 58)
        || (uint64_t v17 = *(void *)(v5 + 16), v18 = v17 - 4, v17 < 4)
        || v18 > (int)v17 - 1
        || *(void *)(*(void *)(v5 + 24) + 8 * v18) == 1)
      {
        uint64_t result = 0;
        if (*(unsigned char *)(v6 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t result = *(uint64_t ***)(*(void *)(v5 + 64) + 8 * v18);
        if (*(unsigned char *)(v6 + 58)) {
          break;
        }
      }
      uint64_t v19 = *(void *)(v6 + 16);
      uint64_t v20 = v19 - 4;
      if (v19 < 4 || v20 > (int)v19 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v20) == 1) {
        break;
      }
      uint64_t v21 = *(void *)(*(void *)(v6 + 64) + 8 * v20);
      if (v14 >= 1) {
        goto LABEL_24;
      }
LABEL_11:
      if (++v16 == v9) {
        return result;
      }
    }
    uint64_t v21 = 0;
    if (v14 < 1) {
      goto LABEL_11;
    }
LABEL_24:
    uint64_t v22 = 0;
    uint64_t result = (uint64_t **)(v7 + (void)result * v16);
    uint64_t v23 = v8 + v21 * v16;
    while (1)
    {
      if (*(unsigned char *)(v5 + 58)
        || (uint64_t v24 = *(void *)(v5 + 16), v25 = v24 - 3, v24 < 3)
        || v25 > (int)v24 - 1
        || *(void *)(*(void *)(v5 + 24) + 8 * v25) == 1)
      {
        uint64_t v26 = 0;
        if (*(unsigned char *)(v6 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v26 = *(void *)(*(void *)(v5 + 64) + 8 * v25);
        if (*(unsigned char *)(v6 + 58)) {
          break;
        }
      }
      uint64_t v27 = *(void *)(v6 + 16);
      uint64_t v28 = v27 - 3;
      if (v27 < 3 || v28 > (int)v27 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v28) == 1) {
        break;
      }
      uint64_t v29 = *(void *)(*(void *)(v6 + 64) + 8 * v28);
      if (v13 >= 1) {
        goto LABEL_38;
      }
LABEL_25:
      if (++v22 == v14) {
        goto LABEL_11;
      }
    }
    uint64_t v29 = 0;
    if (v13 < 1) {
      goto LABEL_25;
    }
LABEL_38:
    uint64_t v30 = 0;
    uint64_t v31 = (char *)result + v26 * v22;
    uint64_t v32 = v23 + v29 * v22;
    while (1)
    {
      if (*(unsigned char *)(v5 + 58)
        || (v33 = *(void *)(v5 + 16), uint64_t v34 = v33 - 2, v33 < 2)
        || v34 > (int)v33 - 1
        || *(void *)(*(void *)(v5 + 24) + 8 * v34) == 1)
      {
        uint64_t v35 = 0;
        if (*(unsigned char *)(v6 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v35 = *(void *)(*(void *)(v5 + 64) + 8 * v34);
        if (*(unsigned char *)(v6 + 58)) {
          break;
        }
      }
      uint64_t v36 = *(void *)(v6 + 16);
      uint64_t v37 = v36 - 2;
      if (v36 < 2 || v37 > (int)v36 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v37) == 1) {
        break;
      }
      uint64_t v38 = *(void *)(*(void *)(v6 + 64) + 8 * v37);
      if (v12 >= 1) {
        goto LABEL_52;
      }
LABEL_39:
      if (++v30 == v13) {
        goto LABEL_25;
      }
    }
    uint64_t v38 = 0;
    if (v12 < 1) {
      goto LABEL_39;
    }
LABEL_52:
    uint64_t v39 = 0;
    uint64_t v40 = &v31[v35 * v30];
    uint64_t v41 = v32 + v38 * v30;
    while (1)
    {
      if (*(unsigned char *)(v5 + 58)
        || (uint64_t v44 = *(void *)(v5 + 16), v45 = v44 - 1, v44 < 1)
        || v45 > (int)v44 - 1
        || *(void *)(*(void *)(v5 + 24) + 8 * v45) == 1)
      {
        uint64_t v42 = 0;
        if (*(unsigned char *)(v6 + 58)) {
          goto LABEL_55;
        }
      }
      else
      {
        uint64_t v42 = *(void *)(*(void *)(v5 + 64) + 8 * v45);
        if (*(unsigned char *)(v6 + 58)) {
          goto LABEL_55;
        }
      }
      uint64_t v46 = *(void *)(v6 + 16);
      uint64_t v47 = v46 - 1;
      if (v46 >= 1 && v47 <= (int)v46 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v47) != 1)
      {
        uint64_t v43 = *(void *)(*(void *)(v6 + 64) + 8 * v47);
        goto LABEL_56;
      }
LABEL_55:
      uint64_t v43 = 0;
LABEL_56:
      a5.i32[0] = *(_DWORD *)&v40[v42 * v39 + *(void *)(v5 + 40)];
      a5 = (float16x4_t)vcvtq_f32_f16(vneg_f16(a5)).u64[0];
      *(double *)(v41 + v43 * v39++ + *(void *)(v6 + 40)) = *(double *)&a5;
      if (v12 == v39) {
        goto LABEL_39;
      }
    }
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<half,float,(mlir::mps::arithmeticOp)9>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v62 = **a4;
  uint64_t v63 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v24 = 1;
    }
    else
    {
      char v24 = v13;
    }
    if (*(unsigned char *)(v5 + 58)) {
      BOOL v20 = 1;
    }
    if (v14 > v22) {
      char v25 = 1;
    }
    else {
      char v25 = v18;
    }
    if (v11 > v23) {
      char v26 = 1;
    }
    else {
      char v26 = v16;
    }
    if (v10 > v23) {
      char v27 = 1;
    }
    else {
      char v27 = v24;
    }
    char v28 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v29 = *(void *)(v4 + 16), uint64_t v30 = v29 - 4, v29 < 4)
        || v30 > (int)v29 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v30) == 1)
      {
        uint64_t v31 = 0;
        if (v25) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v31 = *(void *)(*(void *)(v4 + 64) + 8 * v30);
        if (v25) {
          goto LABEL_34;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v14) != 1)
      {
        uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v14);
        if (v17 < 1) {
          goto LABEL_27;
        }
LABEL_37:
        uint64_t v33 = 0;
        uint64_t v34 = v63 + v31 * v19;
        uint64_t v35 = v62 + v32 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v36 = *(void *)(v4 + 16), v37 = v36 - 3, v36 < 3)
            || v37 > (int)v36 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v37) == 1)
          {
            uint64_t v38 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_44;
            }
            goto LABEL_45;
          }
          uint64_t v38 = *(void *)(*(void *)(v4 + 64) + 8 * v37);
          if (v26) {
            goto LABEL_45;
          }
LABEL_44:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_45:
            uint64_t v39 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_38;
          }
          uint64_t v39 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_38:
            if (++v33 == v17) {
              goto LABEL_27;
            }
            continue;
          }
          break;
        }
        uint64_t v40 = 0;
        uint64_t v41 = v34 + v38 * v33;
        uint64_t v42 = v35 + v39 * v33;
        while (2)
        {
          if (v21
            || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 2, v43 < 2)
            || v44 > (int)v43 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
          {
            uint64_t v45 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_56;
          }
          uint64_t v45 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
          if (v27) {
            goto LABEL_56;
          }
LABEL_55:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_56:
            uint64_t v46 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_49;
          }
          uint64_t v46 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_49:
            if (++v40 == v12) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        uint64_t v47 = 0;
        uint64_t v48 = v41 + v45 * v40;
        uint64_t v49 = *(void *)(v4 + 40);
        uint64_t v50 = *(void *)(v5 + 40);
        uint64_t v51 = v42 + v46 * v40;
        while (2)
        {
          if (v21
            || (uint64_t v60 = *(void *)(v4 + 16), v61 = v60 - 1, v60 < 1)
            || v61 > (int)v60 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v61) == 1)
          {
            uint64_t v59 = 0;
            if ((v28 & 1) == 0) {
              goto LABEL_64;
            }
          }
          else
          {
            uint64_t v59 = *(void *)(*(void *)(v4 + 64) + 8 * v61);
            if ((v28 & 1) == 0)
            {
LABEL_64:
              if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
              {
                uint64_t v52 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_61:
                _H0 = *(_WORD *)(v48 + v59 * v47 + v49);
                __asm { FCVT            S0, H0 }
                *(float *)(v51 + v52 * v47++ + v50) = -_S0;
                if (v9 == v47) {
                  goto LABEL_49;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v52 = 0;
        goto LABEL_61;
      }
LABEL_34:
      uint64_t v32 = 0;
      if (v17 >= 1) {
        goto LABEL_37;
      }
LABEL_27:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v14 = v6 - 4;
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t **mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<half,(void *)0>,(mlir::mps::arithmeticOp)9>(uint64_t **result, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **result;
  uint64_t v5 = **a2;
  uint64_t v6 = **a3;
  uint64_t v7 = **a4;
  uint64_t v8 = *(void *)(v5 + 16);
  if (v8 < 1)
  {
    uint64_t v8 = 1;
    uint64_t v12 = 1;
    uint64_t v11 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v9 = *(void *)(v5 + 24);
  uint64_t v10 = v9 + 8 * v8;
  uint64_t v11 = *(void *)(v10 - 8);
  if (v8 == 1)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v12 = *(void *)(v10 - 16);
  if ((unint64_t)v8 < 3)
  {
    uint64_t v8 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v14 = v9 + 8 * v8;
  uint64_t v13 = *(void *)(v14 - 24);
  if (v8 == 3)
  {
    uint64_t v8 = 1;
    goto LABEL_10;
  }
  uint64_t v8 = *(void *)(v14 - 32);
  if (v8 >= 1)
  {
LABEL_10:
    uint64_t v15 = 0;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v16 = *(void *)(v4 + 16), uint64_t v17 = v16 - 4, v16 < 4)
        || v17 > (int)v16 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v17) == 1)
      {
        uint64_t result = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t result = *(uint64_t ***)(*(void *)(v4 + 64) + 8 * v17);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v18 = *(void *)(v5 + 16);
      uint64_t v19 = v18 - 4;
      if (v18 < 4 || v19 > (int)v18 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v19) == 1) {
        break;
      }
      uint64_t v20 = *(void *)(*(void *)(v5 + 64) + 8 * v19);
      if (v13 >= 1) {
        goto LABEL_24;
      }
LABEL_11:
      if (++v15 == v8) {
        return result;
      }
    }
    uint64_t v20 = 0;
    if (v13 < 1) {
      goto LABEL_11;
    }
LABEL_24:
    uint64_t v21 = 0;
    uint64_t result = (uint64_t **)(v6 + (void)result * v15);
    uint64_t v22 = v7 + v20 * v15;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v23 = *(void *)(v4 + 16), uint64_t v24 = v23 - 3, v23 < 3)
        || v24 > (int)v23 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1)
      {
        uint64_t v25 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v26 = *(void *)(v5 + 16);
      uint64_t v27 = v26 - 3;
      if (v26 < 3 || v27 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v27) == 1) {
        break;
      }
      uint64_t v28 = *(void *)(*(void *)(v5 + 64) + 8 * v27);
      if (v12 >= 1) {
        goto LABEL_38;
      }
LABEL_25:
      if (++v21 == v13) {
        goto LABEL_11;
      }
    }
    uint64_t v28 = 0;
    if (v12 < 1) {
      goto LABEL_25;
    }
LABEL_38:
    uint64_t v29 = 0;
    uint64_t v30 = (char *)result + v25 * v21;
    uint64_t v31 = v22 + v28 * v21;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (uint64_t v32 = *(void *)(v4 + 16), v33 = v32 - 2, v32 < 2)
        || v33 > (int)v32 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v33) == 1)
      {
        uint64_t v34 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v34 = *(void *)(*(void *)(v4 + 64) + 8 * v33);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v35 = *(void *)(v5 + 16);
      uint64_t v36 = v35 - 2;
      if (v35 < 2 || v36 > (int)v35 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v36) == 1) {
        break;
      }
      uint64_t v37 = *(void *)(*(void *)(v5 + 64) + 8 * v36);
      if (v11 >= 1) {
        goto LABEL_52;
      }
LABEL_39:
      if (++v29 == v12) {
        goto LABEL_25;
      }
    }
    uint64_t v37 = 0;
    if (v11 < 1) {
      goto LABEL_39;
    }
LABEL_52:
    uint64_t v38 = 0;
    uint64_t v39 = &v30[v34 * v29];
    uint64_t v40 = v31 + v37 * v29;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (uint64_t v46 = *(void *)(v4 + 16), v47 = v46 - 1, v46 < 1)
        || v47 > (int)v46 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v47) == 1)
      {
        uint64_t v41 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      else
      {
        uint64_t v41 = *(void *)(*(void *)(v4 + 64) + 8 * v47);
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      uint64_t v48 = *(void *)(v5 + 16);
      uint64_t v49 = v48 - 1;
      if (v48 >= 1 && v49 <= (int)v48 - 1 && *(void *)(*(void *)(v5 + 24) + 8 * v49) != 1)
      {
        uint64_t v42 = *(void *)(*(void *)(v5 + 64) + 8 * v49);
        goto LABEL_56;
      }
LABEL_55:
      uint64_t v42 = 0;
LABEL_56:
      uint64_t v43 = (short float *)&v39[v41 * v38 + *(void *)(v4 + 40)];
      uint64_t v44 = (short float *)(v40 + v42 * v38 + *(void *)(v5 + 40));
      short float v45 = -v43[1];
      short float *v44 = -*v43;
      v44[1] = v45;
      if (v11 == ++v38) {
        goto LABEL_39;
      }
    }
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<half,half,(mlir::mps::arithmeticOp)9>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v56 = **a4;
  uint64_t v57 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v24 = 1;
    }
    else
    {
      char v24 = v13;
    }
    if (*(unsigned char *)(v5 + 58)) {
      BOOL v20 = 1;
    }
    if (v14 > v22) {
      char v25 = 1;
    }
    else {
      char v25 = v18;
    }
    if (v11 > v23) {
      char v26 = 1;
    }
    else {
      char v26 = v16;
    }
    if (v10 > v23) {
      char v27 = 1;
    }
    else {
      char v27 = v24;
    }
    char v28 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v29 = *(void *)(v4 + 16), uint64_t v30 = v29 - 4, v29 < 4)
        || v30 > (int)v29 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v30) == 1)
      {
        uint64_t v31 = 0;
        if (v25) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v31 = *(void *)(*(void *)(v4 + 64) + 8 * v30);
        if (v25) {
          goto LABEL_34;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v14) != 1)
      {
        uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v14);
        if (v17 < 1) {
          goto LABEL_27;
        }
LABEL_37:
        uint64_t v33 = 0;
        uint64_t v34 = v57 + v31 * v19;
        uint64_t v35 = v56 + v32 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v36 = *(void *)(v4 + 16), v37 = v36 - 3, v36 < 3)
            || v37 > (int)v36 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v37) == 1)
          {
            uint64_t v38 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_44;
            }
            goto LABEL_45;
          }
          uint64_t v38 = *(void *)(*(void *)(v4 + 64) + 8 * v37);
          if (v26) {
            goto LABEL_45;
          }
LABEL_44:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_45:
            uint64_t v39 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_38;
          }
          uint64_t v39 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_38:
            if (++v33 == v17) {
              goto LABEL_27;
            }
            continue;
          }
          break;
        }
        uint64_t v40 = 0;
        uint64_t v41 = v34 + v38 * v33;
        uint64_t v42 = v35 + v39 * v33;
        while (2)
        {
          if (v21
            || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 2, v43 < 2)
            || v44 > (int)v43 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
          {
            uint64_t v45 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_56;
          }
          uint64_t v45 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
          if (v27) {
            goto LABEL_56;
          }
LABEL_55:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_56:
            uint64_t v46 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_49;
          }
          uint64_t v46 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_49:
            if (++v40 == v12) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        uint64_t v47 = 0;
        uint64_t v48 = v41 + v45 * v40;
        uint64_t v49 = *(void *)(v4 + 40);
        uint64_t v50 = *(void *)(v5 + 40);
        uint64_t v51 = v42 + v46 * v40;
        while (2)
        {
          if (v21
            || (uint64_t v54 = *(void *)(v4 + 16), v55 = v54 - 1, v54 < 1)
            || v55 > (int)v54 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v55) == 1)
          {
            uint64_t v53 = 0;
            if ((v28 & 1) == 0) {
              goto LABEL_64;
            }
          }
          else
          {
            uint64_t v53 = *(void *)(*(void *)(v4 + 64) + 8 * v55);
            if ((v28 & 1) == 0)
            {
LABEL_64:
              if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
              {
                uint64_t v52 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_61:
                *(short float *)(v51 + v52 * v47 + v50) = -*(short float *)(v48 + v53 * v47 + v49);
                if (v9 == ++v47) {
                  goto LABEL_49;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v52 = 0;
        goto LABEL_61;
      }
LABEL_34:
      uint64_t v32 = 0;
      if (v17 >= 1) {
        goto LABEL_37;
      }
LABEL_27:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v14 = v6 - 4;
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t **mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<half,(void *)0>,(mlir::mps::arithmeticOp)9>(uint64_t **result, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **result;
  uint64_t v5 = **a2;
  uint64_t v6 = **a3;
  uint64_t v7 = **a4;
  uint64_t v8 = *(void *)(v5 + 16);
  if (v8 < 1)
  {
    uint64_t v8 = 1;
    uint64_t v12 = 1;
    uint64_t v11 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v9 = *(void *)(v5 + 24);
  uint64_t v10 = v9 + 8 * v8;
  uint64_t v11 = *(void *)(v10 - 8);
  if (v8 == 1)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v12 = *(void *)(v10 - 16);
  if ((unint64_t)v8 < 3)
  {
    uint64_t v8 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v14 = v9 + 8 * v8;
  uint64_t v13 = *(void *)(v14 - 24);
  if (v8 == 3)
  {
    uint64_t v8 = 1;
    goto LABEL_10;
  }
  uint64_t v8 = *(void *)(v14 - 32);
  if (v8 >= 1)
  {
LABEL_10:
    uint64_t v15 = 0;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v16 = *(void *)(v4 + 16), uint64_t v17 = v16 - 4, v16 < 4)
        || v17 > (int)v16 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v17) == 1)
      {
        uint64_t result = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t result = *(uint64_t ***)(*(void *)(v4 + 64) + 8 * v17);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v18 = *(void *)(v5 + 16);
      uint64_t v19 = v18 - 4;
      if (v18 < 4 || v19 > (int)v18 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v19) == 1) {
        break;
      }
      uint64_t v20 = *(void *)(*(void *)(v5 + 64) + 8 * v19);
      if (v13 >= 1) {
        goto LABEL_24;
      }
LABEL_11:
      if (++v15 == v8) {
        return result;
      }
    }
    uint64_t v20 = 0;
    if (v13 < 1) {
      goto LABEL_11;
    }
LABEL_24:
    uint64_t v21 = 0;
    uint64_t result = (uint64_t **)(v6 + (void)result * v15);
    uint64_t v22 = v7 + v20 * v15;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v23 = *(void *)(v4 + 16), uint64_t v24 = v23 - 3, v23 < 3)
        || v24 > (int)v23 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1)
      {
        uint64_t v25 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v26 = *(void *)(v5 + 16);
      uint64_t v27 = v26 - 3;
      if (v26 < 3 || v27 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v27) == 1) {
        break;
      }
      uint64_t v28 = *(void *)(*(void *)(v5 + 64) + 8 * v27);
      if (v12 >= 1) {
        goto LABEL_38;
      }
LABEL_25:
      if (++v21 == v13) {
        goto LABEL_11;
      }
    }
    uint64_t v28 = 0;
    if (v12 < 1) {
      goto LABEL_25;
    }
LABEL_38:
    uint64_t v29 = 0;
    uint64_t v30 = (char *)result + v25 * v21;
    uint64_t v31 = v22 + v28 * v21;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (uint64_t v32 = *(void *)(v4 + 16), v33 = v32 - 2, v32 < 2)
        || v33 > (int)v32 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v33) == 1)
      {
        uint64_t v34 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v34 = *(void *)(*(void *)(v4 + 64) + 8 * v33);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v35 = *(void *)(v5 + 16);
      uint64_t v36 = v35 - 2;
      if (v35 < 2 || v36 > (int)v35 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v36) == 1) {
        break;
      }
      uint64_t v37 = *(void *)(*(void *)(v5 + 64) + 8 * v36);
      if (v11 >= 1) {
        goto LABEL_52;
      }
LABEL_39:
      if (++v29 == v12) {
        goto LABEL_25;
      }
    }
    uint64_t v37 = 0;
    if (v11 < 1) {
      goto LABEL_39;
    }
LABEL_52:
    uint64_t v38 = 0;
    uint64_t v39 = &v30[v34 * v29];
    uint64_t v40 = v31 + v37 * v29;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v51 = *(void *)(v4 + 16), uint64_t v52 = v51 - 1, v51 < 1)
        || v52 > (int)v51 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v52) == 1)
      {
        uint64_t v41 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      else
      {
        uint64_t v41 = *(void *)(*(void *)(v4 + 64) + 8 * v52);
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      uint64_t v53 = *(void *)(v5 + 16);
      uint64_t v54 = v53 - 1;
      if (v53 >= 1 && v54 <= (int)v53 - 1 && *(void *)(*(void *)(v5 + 24) + 8 * v54) != 1)
      {
        uint64_t v42 = *(void *)(*(void *)(v5 + 64) + 8 * v54);
        goto LABEL_56;
      }
LABEL_55:
      uint64_t v42 = 0;
LABEL_56:
      uint64_t v43 = &v39[v41 * v38 + *(void *)(v4 + 40)];
      uint64_t v44 = (short float *)(v40 + v42 * v38 + *(void *)(v5 + 40));
      _S0 = *(_DWORD *)v43;
      _S1 = *((_DWORD *)v43 + 1);
      __asm
      {
        FCVT            H0, S0
        FCVT            H1, S1
      }
      short float *v44 = -*(short float *)&_S0;
      v44[1] = -*(short float *)&_S1;
      if (v11 == ++v38) {
        goto LABEL_39;
      }
    }
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<float,half,(mlir::mps::arithmeticOp)9>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v61 = **a4;
  uint64_t v62 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v24 = 1;
    }
    else
    {
      char v24 = v13;
    }
    if (*(unsigned char *)(v5 + 58)) {
      BOOL v20 = 1;
    }
    if (v14 > v22) {
      char v25 = 1;
    }
    else {
      char v25 = v18;
    }
    if (v11 > v23) {
      char v26 = 1;
    }
    else {
      char v26 = v16;
    }
    if (v10 > v23) {
      char v27 = 1;
    }
    else {
      char v27 = v24;
    }
    char v28 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v29 = *(void *)(v4 + 16), uint64_t v30 = v29 - 4, v29 < 4)
        || v30 > (int)v29 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v30) == 1)
      {
        uint64_t v31 = 0;
        if (v25) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v31 = *(void *)(*(void *)(v4 + 64) + 8 * v30);
        if (v25) {
          goto LABEL_34;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v14) != 1)
      {
        uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v14);
        if (v17 < 1) {
          goto LABEL_27;
        }
LABEL_37:
        uint64_t v33 = 0;
        uint64_t v34 = v62 + v31 * v19;
        uint64_t v35 = v61 + v32 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v36 = *(void *)(v4 + 16), v37 = v36 - 3, v36 < 3)
            || v37 > (int)v36 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v37) == 1)
          {
            uint64_t v38 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_44;
            }
            goto LABEL_45;
          }
          uint64_t v38 = *(void *)(*(void *)(v4 + 64) + 8 * v37);
          if (v26) {
            goto LABEL_45;
          }
LABEL_44:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_45:
            uint64_t v39 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_38;
          }
          uint64_t v39 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_38:
            if (++v33 == v17) {
              goto LABEL_27;
            }
            continue;
          }
          break;
        }
        uint64_t v40 = 0;
        uint64_t v41 = v34 + v38 * v33;
        uint64_t v42 = v35 + v39 * v33;
        while (2)
        {
          if (v21
            || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 2, v43 < 2)
            || v44 > (int)v43 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
          {
            uint64_t v45 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_56;
          }
          uint64_t v45 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
          if (v27) {
            goto LABEL_56;
          }
LABEL_55:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_56:
            uint64_t v46 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_49;
          }
          uint64_t v46 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_49:
            if (++v40 == v12) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        uint64_t v47 = 0;
        uint64_t v48 = v41 + v45 * v40;
        uint64_t v49 = *(void *)(v4 + 40);
        uint64_t v50 = *(void *)(v5 + 40);
        uint64_t v51 = v42 + v46 * v40;
        while (2)
        {
          if (v21
            || (v59 = *(void *)(v4 + 16), uint64_t v60 = v59 - 1, v59 < 1)
            || v60 > (int)v59 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v60) == 1)
          {
            uint64_t v58 = 0;
            if ((v28 & 1) == 0) {
              goto LABEL_64;
            }
          }
          else
          {
            uint64_t v58 = *(void *)(*(void *)(v4 + 64) + 8 * v60);
            if ((v28 & 1) == 0)
            {
LABEL_64:
              if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
              {
                uint64_t v52 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_61:
                _S0 = *(_DWORD *)(v48 + v58 * v47 + v49);
                __asm { FCVT            H0, S0 }
                *(short float *)(v51 + v52 * v47++ + v50) = -*(short float *)&_S0;
                if (v9 == v47) {
                  goto LABEL_49;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v52 = 0;
        goto LABEL_61;
      }
LABEL_34:
      uint64_t v32 = 0;
      if (v17 >= 1) {
        goto LABEL_37;
      }
LABEL_27:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v14 = v6 - 4;
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<__emulated_bf16,float,(mlir::mps::arithmeticOp)9>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v56 = **a4;
  uint64_t v57 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v24 = 1;
    }
    else
    {
      char v24 = v13;
    }
    if (*(unsigned char *)(v5 + 58)) {
      BOOL v20 = 1;
    }
    if (v14 > v22) {
      char v25 = 1;
    }
    else {
      char v25 = v18;
    }
    if (v11 > v23) {
      char v26 = 1;
    }
    else {
      char v26 = v16;
    }
    if (v10 > v23) {
      char v27 = 1;
    }
    else {
      char v27 = v24;
    }
    char v28 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v29 = *(void *)(v4 + 16), uint64_t v30 = v29 - 4, v29 < 4)
        || v30 > (int)v29 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v30) == 1)
      {
        uint64_t v31 = 0;
        if (v25) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v31 = *(void *)(*(void *)(v4 + 64) + 8 * v30);
        if (v25) {
          goto LABEL_34;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v14) != 1)
      {
        uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v14);
        if (v17 < 1) {
          goto LABEL_27;
        }
LABEL_37:
        uint64_t v33 = 0;
        uint64_t v34 = v57 + v31 * v19;
        uint64_t v35 = v56 + v32 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v36 = *(void *)(v4 + 16), v37 = v36 - 3, v36 < 3)
            || v37 > (int)v36 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v37) == 1)
          {
            uint64_t v38 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_44;
            }
            goto LABEL_45;
          }
          uint64_t v38 = *(void *)(*(void *)(v4 + 64) + 8 * v37);
          if (v26) {
            goto LABEL_45;
          }
LABEL_44:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_45:
            uint64_t v39 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_38;
          }
          uint64_t v39 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_38:
            if (++v33 == v17) {
              goto LABEL_27;
            }
            continue;
          }
          break;
        }
        uint64_t v40 = 0;
        uint64_t v41 = v34 + v38 * v33;
        uint64_t v42 = v35 + v39 * v33;
        while (2)
        {
          if (v21
            || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 2, v43 < 2)
            || v44 > (int)v43 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
          {
            uint64_t v45 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_56;
          }
          uint64_t v45 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
          if (v27) {
            goto LABEL_56;
          }
LABEL_55:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_56:
            uint64_t v46 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_49;
          }
          uint64_t v46 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_49:
            if (++v40 == v12) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        uint64_t v47 = 0;
        uint64_t v48 = v41 + v45 * v40;
        uint64_t v49 = *(void *)(v4 + 40);
        uint64_t v50 = *(void *)(v5 + 40);
        uint64_t v51 = v42 + v46 * v40;
        while (2)
        {
          if (v21
            || (uint64_t v54 = *(void *)(v4 + 16), v55 = v54 - 1, v54 < 1)
            || v55 > (int)v54 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v55) == 1)
          {
            uint64_t v53 = 0;
            if ((v28 & 1) == 0) {
              goto LABEL_64;
            }
          }
          else
          {
            uint64_t v53 = *(void *)(*(void *)(v4 + 64) + 8 * v55);
            if ((v28 & 1) == 0)
            {
LABEL_64:
              if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
              {
                uint64_t v52 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_61:
                *(_DWORD *)(v51 + v52 * v47 + v50) = (*(unsigned __int16 *)(v48 + v53 * v47 + v49) << 16) ^ 0x80000000;
                if (v9 == ++v47) {
                  goto LABEL_49;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v52 = 0;
        goto LABEL_61;
      }
LABEL_34:
      uint64_t v32 = 0;
      if (v17 >= 1) {
        goto LABEL_37;
      }
LABEL_27:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v14 = v6 - 4;
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<__emulated_bf16,__emulated_bf16,(mlir::mps::arithmeticOp)9>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v56 = **a4;
  uint64_t v57 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v13 = 1;
      BOOL v20 = 1;
    }
    uint64_t v55 = v14;
    if (v14 > v22) {
      char v24 = 1;
    }
    else {
      char v24 = v18;
    }
    if (v11 > v23) {
      char v16 = 1;
    }
    if (v10 > v23) {
      char v25 = 1;
    }
    else {
      char v25 = v13;
    }
    char v26 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v27 = *(void *)(v4 + 16), uint64_t v28 = v27 - 4, v27 < 4)
        || v28 > (int)v27 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v28) == 1)
      {
        uint64_t v29 = 0;
        if (v24) {
          goto LABEL_30;
        }
      }
      else
      {
        uint64_t v29 = *(void *)(*(void *)(v4 + 64) + 8 * v28);
        if (v24) {
          goto LABEL_30;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v55) != 1)
      {
        uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v55);
        if (v17 < 1) {
          goto LABEL_23;
        }
LABEL_33:
        uint64_t v31 = 0;
        uint64_t v32 = v57 + v29 * v19;
        uint64_t v33 = v56 + v30 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v34 = *(void *)(v4 + 16), v35 = v34 - 3, v34 < 3)
            || v35 > (int)v34 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v35) == 1)
          {
            uint64_t v36 = 0;
            if ((v16 & 1) == 0) {
              goto LABEL_40;
            }
            goto LABEL_41;
          }
          uint64_t v36 = *(void *)(*(void *)(v4 + 64) + 8 * v35);
          if (v16) {
            goto LABEL_41;
          }
LABEL_40:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_41:
            uint64_t v37 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_34;
          }
          uint64_t v37 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_34:
            if (++v31 == v17) {
              goto LABEL_23;
            }
            continue;
          }
          break;
        }
        uint64_t v38 = 0;
        uint64_t v39 = v32 + v36 * v31;
        uint64_t v40 = v33 + v37 * v31;
        while (2)
        {
          if (v21
            || (v41 = *(void *)(v4 + 16), uint64_t v42 = v41 - 2, v41 < 2)
            || v42 > (int)v41 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v42) == 1)
          {
            uint64_t v43 = 0;
            if ((v25 & 1) == 0) {
              goto LABEL_51;
            }
            goto LABEL_52;
          }
          uint64_t v43 = *(void *)(*(void *)(v4 + 64) + 8 * v42);
          if (v25) {
            goto LABEL_52;
          }
LABEL_51:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_52:
            uint64_t v44 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_45;
          }
          uint64_t v44 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_45:
            if (++v38 == v12) {
              goto LABEL_34;
            }
            continue;
          }
          break;
        }
        uint64_t v45 = 0;
        uint64_t v46 = v39 + v43 * v38;
        uint64_t v47 = *(void *)(v4 + 40);
        uint64_t v48 = *(void *)(v5 + 40);
        uint64_t v49 = v40 + v44 * v38;
        while (2)
        {
          if (v21
            || (uint64_t v52 = *(void *)(v4 + 16), v53 = v52 - 1, v52 < 1)
            || v53 > (int)v52 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v53) == 1)
          {
            uint64_t v50 = 0;
            if (v26) {
              goto LABEL_59;
            }
          }
          else
          {
            uint64_t v50 = *(void *)(*(void *)(v4 + 64) + 8 * v53);
            if (v26)
            {
LABEL_59:
              uint64_t v51 = 0;
              goto LABEL_66;
            }
          }
          if (*(void *)(*(void *)(v5 + 24) + 8 * v7) == 1) {
            goto LABEL_59;
          }
          uint64_t v51 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_66:
          LODWORD(v54) = *(unsigned __int16 *)(v46 + v50 * v45 + v47) << 16;
          *(_WORD *)(v48 + v49 + v51 * v45++) = HIWORD(COERCE_UNSIGNED_INT(-(float)(v54
                                                                                  - (float)(COERCE_FLOAT(COERCE_UNSIGNED_INT(-v54) & 0xFF800000)
                                                                                          * 0.0039062))));
          if (v9 == v45) {
            goto LABEL_45;
          }
          continue;
        }
      }
LABEL_30:
      uint64_t v30 = 0;
      if (v17 >= 1) {
        goto LABEL_33;
      }
LABEL_23:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    uint64_t v14 = v6 - 4;
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<float,__emulated_bf16,(mlir::mps::arithmeticOp)9>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v55 = **a4;
  uint64_t v56 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v13 = 1;
      BOOL v20 = 1;
    }
    uint64_t v54 = v14;
    if (v14 > v22) {
      char v24 = 1;
    }
    else {
      char v24 = v18;
    }
    if (v11 > v23) {
      char v16 = 1;
    }
    if (v10 > v23) {
      char v25 = 1;
    }
    else {
      char v25 = v13;
    }
    char v26 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v27 = *(void *)(v4 + 16), uint64_t v28 = v27 - 4, v27 < 4)
        || v28 > (int)v27 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v28) == 1)
      {
        uint64_t v29 = 0;
        if (v24) {
          goto LABEL_30;
        }
      }
      else
      {
        uint64_t v29 = *(void *)(*(void *)(v4 + 64) + 8 * v28);
        if (v24) {
          goto LABEL_30;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v54) != 1)
      {
        uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v54);
        if (v17 < 1) {
          goto LABEL_23;
        }
LABEL_33:
        uint64_t v31 = 0;
        uint64_t v32 = v56 + v29 * v19;
        uint64_t v33 = v55 + v30 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v34 = *(void *)(v4 + 16), v35 = v34 - 3, v34 < 3)
            || v35 > (int)v34 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v35) == 1)
          {
            uint64_t v36 = 0;
            if ((v16 & 1) == 0) {
              goto LABEL_40;
            }
            goto LABEL_41;
          }
          uint64_t v36 = *(void *)(*(void *)(v4 + 64) + 8 * v35);
          if (v16) {
            goto LABEL_41;
          }
LABEL_40:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_41:
            uint64_t v37 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_34;
          }
          uint64_t v37 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_34:
            if (++v31 == v17) {
              goto LABEL_23;
            }
            continue;
          }
          break;
        }
        uint64_t v38 = 0;
        uint64_t v39 = v32 + v36 * v31;
        uint64_t v40 = v33 + v37 * v31;
        while (2)
        {
          if (v21
            || (v41 = *(void *)(v4 + 16), uint64_t v42 = v41 - 2, v41 < 2)
            || v42 > (int)v41 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v42) == 1)
          {
            uint64_t v43 = 0;
            if ((v25 & 1) == 0) {
              goto LABEL_51;
            }
            goto LABEL_52;
          }
          uint64_t v43 = *(void *)(*(void *)(v4 + 64) + 8 * v42);
          if (v25) {
            goto LABEL_52;
          }
LABEL_51:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_52:
            uint64_t v44 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_45;
          }
          uint64_t v44 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_45:
            if (++v38 == v12) {
              goto LABEL_34;
            }
            continue;
          }
          break;
        }
        uint64_t v45 = 0;
        uint64_t v46 = v39 + v43 * v38;
        uint64_t v47 = *(void *)(v4 + 40);
        uint64_t v48 = *(void *)(v5 + 40);
        uint64_t v49 = v40 + v44 * v38;
        while (2)
        {
          if (v21
            || (uint64_t v52 = *(void *)(v4 + 16), v53 = v52 - 1, v52 < 1)
            || v53 > (int)v52 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v53) == 1)
          {
            uint64_t v50 = 0;
            if (v26) {
              goto LABEL_59;
            }
          }
          else
          {
            uint64_t v50 = *(void *)(*(void *)(v4 + 64) + 8 * v53);
            if (v26)
            {
LABEL_59:
              uint64_t v51 = 0;
              goto LABEL_66;
            }
          }
          if (*(void *)(*(void *)(v5 + 24) + 8 * v7) == 1) {
            goto LABEL_59;
          }
          uint64_t v51 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_66:
          *(_WORD *)(v48 + v49 + v51 * v45) = HIWORD(COERCE_UNSIGNED_INT(-(float)(*(float *)(v46 + v50 * v45 + v47)
                                                                                - (float)(COERCE_FLOAT(COERCE_UNSIGNED_INT(-*(float *)(v46 + v50 * v45 + v47)) & 0xFF800000)
                                                                                        * 0.0039062))));
          if (v9 == ++v45) {
            goto LABEL_45;
          }
          continue;
        }
      }
LABEL_30:
      uint64_t v30 = 0;
      if (v17 >= 1) {
        goto LABEL_33;
      }
LABEL_23:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    uint64_t v14 = v6 - 4;
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t **mlir::mps::arithmeticUnaryTileBaseKernel<long long,long long,(mlir::mps::arithmeticOp)9>(uint64_t **result, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **result;
  uint64_t v5 = **a2;
  uint64_t v6 = **a3;
  uint64_t v7 = **a4;
  uint64_t v8 = *(void *)(v5 + 16);
  if (v8 < 1)
  {
    uint64_t v8 = 1;
    uint64_t v12 = 1;
    uint64_t v11 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v9 = *(void *)(v5 + 24);
  uint64_t v10 = v9 + 8 * v8;
  uint64_t v11 = *(void *)(v10 - 8);
  if (v8 == 1)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v12 = *(void *)(v10 - 16);
  if ((unint64_t)v8 < 3)
  {
    uint64_t v8 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v14 = v9 + 8 * v8;
  uint64_t v13 = *(void *)(v14 - 24);
  if (v8 == 3)
  {
    uint64_t v8 = 1;
    goto LABEL_10;
  }
  uint64_t v8 = *(void *)(v14 - 32);
  if (v8 >= 1)
  {
LABEL_10:
    uint64_t v15 = 0;
    int v16 = *(unsigned __int8 *)(v4 + 58);
    uint64_t result = (uint64_t **)*(unsigned __int8 *)(v5 + 58);
    while (1)
    {
      if (v16
        || (uint64_t v17 = *(void *)(v4 + 16), v18 = v17 - 4, v17 < 4)
        || v18 > (int)v17 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v18) == 1)
      {
        uint64_t v19 = 0;
        if (result) {
          break;
        }
      }
      else
      {
        uint64_t v19 = *(void *)(*(void *)(v4 + 64) + 8 * v18);
        if (result) {
          break;
        }
      }
      uint64_t v20 = *(void *)(v5 + 16);
      uint64_t v21 = v20 - 4;
      if (v20 < 4 || v21 > (int)v20 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v21) == 1) {
        break;
      }
      uint64_t v22 = *(void *)(*(void *)(v5 + 64) + 8 * v21);
      if (v13 >= 1) {
        goto LABEL_24;
      }
LABEL_11:
      if (++v15 == v8) {
        return result;
      }
    }
    uint64_t v22 = 0;
    if (v13 < 1) {
      goto LABEL_11;
    }
LABEL_24:
    uint64_t v23 = 0;
    uint64_t v24 = v6 + v19 * v15;
    uint64_t v25 = v7 + v22 * v15;
    while (1)
    {
      if (v16
        || (uint64_t v26 = *(void *)(v4 + 16), v27 = v26 - 3, v26 < 3)
        || v27 > (int)v26 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v27) == 1)
      {
        uint64_t v28 = 0;
        if (result) {
          break;
        }
      }
      else
      {
        uint64_t v28 = *(void *)(*(void *)(v4 + 64) + 8 * v27);
        if (result) {
          break;
        }
      }
      uint64_t v29 = *(void *)(v5 + 16);
      uint64_t v30 = v29 - 3;
      if (v29 < 3 || v30 > (int)v29 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v30) == 1) {
        break;
      }
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v30);
      if (v12 >= 1) {
        goto LABEL_38;
      }
LABEL_25:
      if (++v23 == v13) {
        goto LABEL_11;
      }
    }
    uint64_t v31 = 0;
    if (v12 < 1) {
      goto LABEL_25;
    }
LABEL_38:
    uint64_t v32 = 0;
    uint64_t v33 = v24 + v28 * v23;
    uint64_t v34 = v25 + v31 * v23;
    while (1)
    {
      if (v16
        || (v35 = *(void *)(v4 + 16), uint64_t v36 = v35 - 2, v35 < 2)
        || v36 > (int)v35 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v36) == 1)
      {
        uint64_t v37 = 0;
        if (result) {
          break;
        }
      }
      else
      {
        uint64_t v37 = *(void *)(*(void *)(v4 + 64) + 8 * v36);
        if (result) {
          break;
        }
      }
      uint64_t v38 = *(void *)(v5 + 16);
      uint64_t v39 = v38 - 2;
      if (v38 < 2 || v39 > (int)v38 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v39) == 1) {
        break;
      }
      uint64_t v40 = *(void *)(*(void *)(v5 + 64) + 8 * v39);
      if (v11 >= 1) {
        goto LABEL_52;
      }
LABEL_39:
      if (++v32 == v12) {
        goto LABEL_25;
      }
    }
    uint64_t v40 = 0;
    if (v11 < 1) {
      goto LABEL_39;
    }
LABEL_52:
    uint64_t v41 = 0;
    uint64_t v42 = v33 + v37 * v32;
    uint64_t v43 = *(void *)(v4 + 40);
    uint64_t v44 = *(void *)(v5 + 40);
    uint64_t v45 = v34 + v40 * v32;
    while (1)
    {
      if (v16
        || (uint64_t v48 = *(void *)(v4 + 16), v49 = v48 - 1, v48 < 1)
        || v49 > (int)v48 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v49) == 1)
      {
        uint64_t v46 = 0;
        if (result) {
          goto LABEL_55;
        }
      }
      else
      {
        uint64_t v46 = *(void *)(*(void *)(v4 + 64) + 8 * v49);
        if (result) {
          goto LABEL_55;
        }
      }
      uint64_t v50 = *(void *)(v5 + 16);
      uint64_t v51 = v50 - 1;
      if (v50 >= 1 && v51 <= (int)v50 - 1 && *(void *)(*(void *)(v5 + 24) + 8 * v51) != 1)
      {
        uint64_t v47 = *(void *)(*(void *)(v5 + 64) + 8 * v51);
        goto LABEL_56;
      }
LABEL_55:
      uint64_t v47 = 0;
LABEL_56:
      *(void *)(v45 + v47 * v41 + v44) = -*(void *)(v42 + v46 * v41 + v43);
      if (v11 == ++v41) {
        goto LABEL_39;
      }
    }
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<int,int,(mlir::mps::arithmeticOp)9>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v56 = **a4;
  uint64_t v57 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v24 = 1;
    }
    else
    {
      char v24 = v13;
    }
    if (*(unsigned char *)(v5 + 58)) {
      BOOL v20 = 1;
    }
    if (v14 > v22) {
      char v25 = 1;
    }
    else {
      char v25 = v18;
    }
    if (v11 > v23) {
      char v26 = 1;
    }
    else {
      char v26 = v16;
    }
    if (v10 > v23) {
      char v27 = 1;
    }
    else {
      char v27 = v24;
    }
    char v28 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v29 = *(void *)(v4 + 16), uint64_t v30 = v29 - 4, v29 < 4)
        || v30 > (int)v29 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v30) == 1)
      {
        uint64_t v31 = 0;
        if (v25) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v31 = *(void *)(*(void *)(v4 + 64) + 8 * v30);
        if (v25) {
          goto LABEL_34;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v14) != 1)
      {
        uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v14);
        if (v17 < 1) {
          goto LABEL_27;
        }
LABEL_37:
        uint64_t v33 = 0;
        uint64_t v34 = v57 + v31 * v19;
        uint64_t v35 = v56 + v32 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v36 = *(void *)(v4 + 16), v37 = v36 - 3, v36 < 3)
            || v37 > (int)v36 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v37) == 1)
          {
            uint64_t v38 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_44;
            }
            goto LABEL_45;
          }
          uint64_t v38 = *(void *)(*(void *)(v4 + 64) + 8 * v37);
          if (v26) {
            goto LABEL_45;
          }
LABEL_44:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_45:
            uint64_t v39 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_38;
          }
          uint64_t v39 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_38:
            if (++v33 == v17) {
              goto LABEL_27;
            }
            continue;
          }
          break;
        }
        uint64_t v40 = 0;
        uint64_t v41 = v34 + v38 * v33;
        uint64_t v42 = v35 + v39 * v33;
        while (2)
        {
          if (v21
            || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 2, v43 < 2)
            || v44 > (int)v43 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
          {
            uint64_t v45 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_56;
          }
          uint64_t v45 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
          if (v27) {
            goto LABEL_56;
          }
LABEL_55:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_56:
            uint64_t v46 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_49;
          }
          uint64_t v46 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_49:
            if (++v40 == v12) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        uint64_t v47 = 0;
        uint64_t v48 = v41 + v45 * v40;
        uint64_t v49 = *(void *)(v4 + 40);
        uint64_t v50 = *(void *)(v5 + 40);
        uint64_t v51 = v42 + v46 * v40;
        while (2)
        {
          if (v21
            || (uint64_t v54 = *(void *)(v4 + 16), v55 = v54 - 1, v54 < 1)
            || v55 > (int)v54 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v55) == 1)
          {
            uint64_t v53 = 0;
            if ((v28 & 1) == 0) {
              goto LABEL_64;
            }
          }
          else
          {
            uint64_t v53 = *(void *)(*(void *)(v4 + 64) + 8 * v55);
            if ((v28 & 1) == 0)
            {
LABEL_64:
              if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
              {
                uint64_t v52 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_61:
                *(_DWORD *)(v51 + v52 * v47 + v50) = -*(_DWORD *)(v48 + v53 * v47 + v49);
                if (v9 == ++v47) {
                  goto LABEL_49;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v52 = 0;
        goto LABEL_61;
      }
LABEL_34:
      uint64_t v32 = 0;
      if (v17 >= 1) {
        goto LABEL_37;
      }
LABEL_27:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v14 = v6 - 4;
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<short,short,(mlir::mps::arithmeticOp)9>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v56 = **a4;
  uint64_t v57 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v24 = 1;
    }
    else
    {
      char v24 = v13;
    }
    if (*(unsigned char *)(v5 + 58)) {
      BOOL v20 = 1;
    }
    if (v14 > v22) {
      char v25 = 1;
    }
    else {
      char v25 = v18;
    }
    if (v11 > v23) {
      char v26 = 1;
    }
    else {
      char v26 = v16;
    }
    if (v10 > v23) {
      char v27 = 1;
    }
    else {
      char v27 = v24;
    }
    char v28 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v29 = *(void *)(v4 + 16), uint64_t v30 = v29 - 4, v29 < 4)
        || v30 > (int)v29 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v30) == 1)
      {
        uint64_t v31 = 0;
        if (v25) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v31 = *(void *)(*(void *)(v4 + 64) + 8 * v30);
        if (v25) {
          goto LABEL_34;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v14) != 1)
      {
        uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v14);
        if (v17 < 1) {
          goto LABEL_27;
        }
LABEL_37:
        uint64_t v33 = 0;
        uint64_t v34 = v57 + v31 * v19;
        uint64_t v35 = v56 + v32 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v36 = *(void *)(v4 + 16), v37 = v36 - 3, v36 < 3)
            || v37 > (int)v36 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v37) == 1)
          {
            uint64_t v38 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_44;
            }
            goto LABEL_45;
          }
          uint64_t v38 = *(void *)(*(void *)(v4 + 64) + 8 * v37);
          if (v26) {
            goto LABEL_45;
          }
LABEL_44:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_45:
            uint64_t v39 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_38;
          }
          uint64_t v39 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_38:
            if (++v33 == v17) {
              goto LABEL_27;
            }
            continue;
          }
          break;
        }
        uint64_t v40 = 0;
        uint64_t v41 = v34 + v38 * v33;
        uint64_t v42 = v35 + v39 * v33;
        while (2)
        {
          if (v21
            || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 2, v43 < 2)
            || v44 > (int)v43 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
          {
            uint64_t v45 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_56;
          }
          uint64_t v45 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
          if (v27) {
            goto LABEL_56;
          }
LABEL_55:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_56:
            uint64_t v46 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_49;
          }
          uint64_t v46 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_49:
            if (++v40 == v12) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        uint64_t v47 = 0;
        uint64_t v48 = v41 + v45 * v40;
        uint64_t v49 = *(void *)(v4 + 40);
        uint64_t v50 = *(void *)(v5 + 40);
        uint64_t v51 = v42 + v46 * v40;
        while (2)
        {
          if (v21
            || (uint64_t v54 = *(void *)(v4 + 16), v55 = v54 - 1, v54 < 1)
            || v55 > (int)v54 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v55) == 1)
          {
            uint64_t v53 = 0;
            if ((v28 & 1) == 0) {
              goto LABEL_64;
            }
          }
          else
          {
            uint64_t v53 = *(void *)(*(void *)(v4 + 64) + 8 * v55);
            if ((v28 & 1) == 0)
            {
LABEL_64:
              if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
              {
                uint64_t v52 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_61:
                *(_WORD *)(v51 + v52 * v47 + v50) = -*(_WORD *)(v48 + v53 * v47 + v49);
                if (v9 == ++v47) {
                  goto LABEL_49;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v52 = 0;
        goto LABEL_61;
      }
LABEL_34:
      uint64_t v32 = 0;
      if (v17 >= 1) {
        goto LABEL_37;
      }
LABEL_27:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v14 = v6 - 4;
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t **mlir::mps::arithmeticUnaryTileBaseKernel<signed char,signed char,(mlir::mps::arithmeticOp)9>(uint64_t **result, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **result;
  uint64_t v5 = **a2;
  uint64_t v6 = **a3;
  uint64_t v7 = **a4;
  uint64_t v8 = *(void *)(v5 + 16);
  if (v8 < 1)
  {
    uint64_t v8 = 1;
    uint64_t v12 = 1;
    uint64_t v11 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v9 = *(void *)(v5 + 24);
  uint64_t v10 = v9 + 8 * v8;
  uint64_t v11 = *(void *)(v10 - 8);
  if (v8 == 1)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v12 = *(void *)(v10 - 16);
  if ((unint64_t)v8 < 3)
  {
    uint64_t v8 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v14 = v9 + 8 * v8;
  uint64_t v13 = *(void *)(v14 - 24);
  if (v8 == 3)
  {
    uint64_t v8 = 1;
    goto LABEL_10;
  }
  uint64_t v8 = *(void *)(v14 - 32);
  if (v8 >= 1)
  {
LABEL_10:
    uint64_t v15 = 0;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v16 = *(void *)(v4 + 16), uint64_t v17 = v16 - 4, v16 < 4)
        || v17 > (int)v16 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v17) == 1)
      {
        uint64_t result = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t result = *(uint64_t ***)(*(void *)(v4 + 64) + 8 * v17);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v18 = *(void *)(v5 + 16);
      uint64_t v19 = v18 - 4;
      if (v18 < 4 || v19 > (int)v18 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v19) == 1) {
        break;
      }
      uint64_t v20 = *(void *)(*(void *)(v5 + 64) + 8 * v19);
      if (v13 >= 1) {
        goto LABEL_24;
      }
LABEL_11:
      if (++v15 == v8) {
        return result;
      }
    }
    uint64_t v20 = 0;
    if (v13 < 1) {
      goto LABEL_11;
    }
LABEL_24:
    uint64_t v21 = 0;
    uint64_t result = (uint64_t **)(v6 + (void)result * v15);
    uint64_t v22 = v7 + v20 * v15;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v23 = *(void *)(v4 + 16), uint64_t v24 = v23 - 3, v23 < 3)
        || v24 > (int)v23 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1)
      {
        uint64_t v25 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v26 = *(void *)(v5 + 16);
      uint64_t v27 = v26 - 3;
      if (v26 < 3 || v27 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v27) == 1) {
        break;
      }
      uint64_t v28 = *(void *)(*(void *)(v5 + 64) + 8 * v27);
      if (v12 >= 1) {
        goto LABEL_38;
      }
LABEL_25:
      if (++v21 == v13) {
        goto LABEL_11;
      }
    }
    uint64_t v28 = 0;
    if (v12 < 1) {
      goto LABEL_25;
    }
LABEL_38:
    uint64_t v29 = 0;
    uint64_t v30 = (char *)result + v25 * v21;
    uint64_t v31 = v22 + v28 * v21;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (uint64_t v32 = *(void *)(v4 + 16), v33 = v32 - 2, v32 < 2)
        || v33 > (int)v32 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v33) == 1)
      {
        uint64_t v34 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v34 = *(void *)(*(void *)(v4 + 64) + 8 * v33);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v35 = *(void *)(v5 + 16);
      uint64_t v36 = v35 - 2;
      if (v35 < 2 || v36 > (int)v35 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v36) == 1) {
        break;
      }
      uint64_t v37 = *(void *)(*(void *)(v5 + 64) + 8 * v36);
      if (v11 >= 1) {
        goto LABEL_52;
      }
LABEL_39:
      if (++v29 == v12) {
        goto LABEL_25;
      }
    }
    uint64_t v37 = 0;
    if (v11 < 1) {
      goto LABEL_39;
    }
LABEL_52:
    uint64_t v38 = 0;
    uint64_t v39 = &v30[v34 * v29];
    uint64_t v40 = v31 + v37 * v29;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 1, v43 < 1)
        || v44 > (int)v43 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
      {
        uint64_t v41 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      else
      {
        uint64_t v41 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      uint64_t v45 = *(void *)(v5 + 16);
      uint64_t v46 = v45 - 1;
      if (v45 >= 1 && v46 <= (int)v45 - 1 && *(void *)(*(void *)(v5 + 24) + 8 * v46) != 1)
      {
        uint64_t v42 = *(void *)(*(void *)(v5 + 64) + 8 * v46);
        goto LABEL_56;
      }
LABEL_55:
      uint64_t v42 = 0;
LABEL_56:
      *(unsigned char *)(v40 + v42 * v38 + *(void *)(v5 + 40)) = -v39[v41 * v38 + *(void *)(v4 + 40)];
      if (v11 == ++v38) {
        goto LABEL_39;
      }
    }
  }
  return result;
}

uint64_t **mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)10>(uint64_t **result, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **result;
  uint64_t v5 = **a2;
  uint64_t v6 = **a3;
  uint64_t v7 = **a4;
  uint64_t v8 = *(void *)(v5 + 16);
  if (v8 < 1)
  {
    uint64_t v8 = 1;
    uint64_t v12 = 1;
    uint64_t v11 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v9 = *(void *)(v5 + 24);
  uint64_t v10 = v9 + 8 * v8;
  uint64_t v11 = *(void *)(v10 - 8);
  if (v8 == 1)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v12 = *(void *)(v10 - 16);
  if ((unint64_t)v8 < 3)
  {
    uint64_t v8 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v14 = v9 + 8 * v8;
  uint64_t v13 = *(void *)(v14 - 24);
  if (v8 == 3)
  {
    uint64_t v8 = 1;
    goto LABEL_10;
  }
  uint64_t v8 = *(void *)(v14 - 32);
  if (v8 >= 1)
  {
LABEL_10:
    uint64_t v15 = 0;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v16 = *(void *)(v4 + 16), uint64_t v17 = v16 - 4, v16 < 4)
        || v17 > (int)v16 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v17) == 1)
      {
        uint64_t result = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t result = *(uint64_t ***)(*(void *)(v4 + 64) + 8 * v17);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v18 = *(void *)(v5 + 16);
      uint64_t v19 = v18 - 4;
      if (v18 < 4 || v19 > (int)v18 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v19) == 1) {
        break;
      }
      uint64_t v20 = *(void *)(*(void *)(v5 + 64) + 8 * v19);
      if (v13 >= 1) {
        goto LABEL_24;
      }
LABEL_11:
      if (++v15 == v8) {
        return result;
      }
    }
    uint64_t v20 = 0;
    if (v13 < 1) {
      goto LABEL_11;
    }
LABEL_24:
    uint64_t v21 = 0;
    uint64_t result = (uint64_t **)(v6 + (void)result * v15);
    uint64_t v22 = v7 + v20 * v15;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v23 = *(void *)(v4 + 16), uint64_t v24 = v23 - 3, v23 < 3)
        || v24 > (int)v23 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1)
      {
        uint64_t v25 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v26 = *(void *)(v5 + 16);
      uint64_t v27 = v26 - 3;
      if (v26 < 3 || v27 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v27) == 1) {
        break;
      }
      uint64_t v28 = *(void *)(*(void *)(v5 + 64) + 8 * v27);
      if (v12 >= 1) {
        goto LABEL_38;
      }
LABEL_25:
      if (++v21 == v13) {
        goto LABEL_11;
      }
    }
    uint64_t v28 = 0;
    if (v12 < 1) {
      goto LABEL_25;
    }
LABEL_38:
    uint64_t v29 = 0;
    uint64_t v30 = (char *)result + v25 * v21;
    uint64_t v31 = v22 + v28 * v21;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (uint64_t v32 = *(void *)(v4 + 16), v33 = v32 - 2, v32 < 2)
        || v33 > (int)v32 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v33) == 1)
      {
        uint64_t v34 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v34 = *(void *)(*(void *)(v4 + 64) + 8 * v33);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v35 = *(void *)(v5 + 16);
      uint64_t v36 = v35 - 2;
      if (v35 < 2 || v36 > (int)v35 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v36) == 1) {
        break;
      }
      uint64_t v37 = *(void *)(*(void *)(v5 + 64) + 8 * v36);
      if (v11 >= 1) {
        goto LABEL_52;
      }
LABEL_39:
      if (++v29 == v12) {
        goto LABEL_25;
      }
    }
    uint64_t v37 = 0;
    if (v11 < 1) {
      goto LABEL_39;
    }
LABEL_52:
    uint64_t v38 = 0;
    uint64_t v39 = &v30[v34 * v29];
    uint64_t v40 = v31 + v37 * v29;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v47 = *(void *)(v4 + 16), uint64_t v48 = v47 - 1, v47 < 1)
        || v48 > (int)v47 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v48) == 1)
      {
        uint64_t v41 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      else
      {
        uint64_t v41 = *(void *)(*(void *)(v4 + 64) + 8 * v48);
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      uint64_t v49 = *(void *)(v5 + 16);
      uint64_t v50 = v49 - 1;
      if (v49 >= 1 && v50 <= (int)v49 - 1 && *(void *)(*(void *)(v5 + 24) + 8 * v50) != 1)
      {
        uint64_t v42 = *(void *)(*(void *)(v5 + 64) + 8 * v50);
        goto LABEL_56;
      }
LABEL_55:
      uint64_t v42 = 0;
LABEL_56:
      uint64_t v43 = (float *)&v39[v41 * v38 + *(void *)(v4 + 40)];
      uint64_t v44 = v40 + v42 * v38 + *(void *)(v5 + 40);
      float v45 = v43[1];
      BOOL v46 = *v43 == 0.0;
      if (v45 != 0.0) {
        BOOL v46 = 0;
      }
      *(float *)uint64_t v44 = (float)v46;
      *(_DWORD *)(v44 + 4) = 0;
      if (v11 == ++v38) {
        goto LABEL_39;
      }
    }
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<float,float,(mlir::mps::arithmeticOp)10>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v58 = **a4;
  uint64_t v59 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v24 = 1;
    }
    else
    {
      char v24 = v13;
    }
    if (*(unsigned char *)(v5 + 58)) {
      BOOL v20 = 1;
    }
    if (v14 > v22) {
      char v25 = 1;
    }
    else {
      char v25 = v18;
    }
    if (v11 > v23) {
      char v26 = 1;
    }
    else {
      char v26 = v16;
    }
    if (v10 > v23) {
      char v27 = 1;
    }
    else {
      char v27 = v24;
    }
    char v28 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v29 = *(void *)(v4 + 16), uint64_t v30 = v29 - 4, v29 < 4)
        || v30 > (int)v29 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v30) == 1)
      {
        uint64_t v31 = 0;
        if (v25) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v31 = *(void *)(*(void *)(v4 + 64) + 8 * v30);
        if (v25) {
          goto LABEL_34;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v14) != 1)
      {
        uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v14);
        if (v17 < 1) {
          goto LABEL_27;
        }
LABEL_37:
        uint64_t v33 = 0;
        uint64_t v34 = v59 + v31 * v19;
        uint64_t v35 = v58 + v32 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v36 = *(void *)(v4 + 16), v37 = v36 - 3, v36 < 3)
            || v37 > (int)v36 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v37) == 1)
          {
            uint64_t v38 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_44;
            }
            goto LABEL_45;
          }
          uint64_t v38 = *(void *)(*(void *)(v4 + 64) + 8 * v37);
          if (v26) {
            goto LABEL_45;
          }
LABEL_44:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_45:
            uint64_t v39 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_38;
          }
          uint64_t v39 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_38:
            if (++v33 == v17) {
              goto LABEL_27;
            }
            continue;
          }
          break;
        }
        uint64_t v40 = 0;
        uint64_t v41 = v34 + v38 * v33;
        uint64_t v42 = v35 + v39 * v33;
        while (2)
        {
          if (v21
            || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 2, v43 < 2)
            || v44 > (int)v43 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
          {
            uint64_t v45 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_56;
          }
          uint64_t v45 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
          if (v27) {
            goto LABEL_56;
          }
LABEL_55:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_56:
            uint64_t v46 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_49;
          }
          uint64_t v46 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_49:
            if (++v40 == v12) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        uint64_t v47 = 0;
        uint64_t v48 = v41 + v45 * v40;
        uint64_t v49 = *(void *)(v4 + 40);
        uint64_t v50 = *(void *)(v5 + 40);
        uint64_t v51 = v42 + v46 * v40;
        while (2)
        {
          if (v21
            || (uint64_t v56 = *(void *)(v4 + 16), v57 = v56 - 1, v56 < 1)
            || v57 > (int)v56 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v57) == 1)
          {
            uint64_t v55 = 0;
            if ((v28 & 1) == 0) {
              goto LABEL_67;
            }
          }
          else
          {
            uint64_t v55 = *(void *)(*(void *)(v4 + 64) + 8 * v57);
            if ((v28 & 1) == 0)
            {
LABEL_67:
              if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
              {
                uint64_t v52 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_61:
                uint64_t v53 = v51 + v52 * v47;
                if (*(float *)(v48 + v55 * v47 + v49) == 0.0) {
                  float v54 = 1.0;
                }
                else {
                  float v54 = 0.0;
                }
                *(float *)(v53 + v50) = v54;
                if (v9 == ++v47) {
                  goto LABEL_49;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v52 = 0;
        goto LABEL_61;
      }
LABEL_34:
      uint64_t v32 = 0;
      if (v17 >= 1) {
        goto LABEL_37;
      }
LABEL_27:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v14 = v6 - 4;
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t **mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)10>(uint64_t **result, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **result;
  uint64_t v5 = **a2;
  uint64_t v6 = **a3;
  uint64_t v7 = **a4;
  uint64_t v8 = *(void *)(v5 + 16);
  if (v8 < 1)
  {
    uint64_t v8 = 1;
    uint64_t v12 = 1;
    uint64_t v11 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v9 = *(void *)(v5 + 24);
  uint64_t v10 = v9 + 8 * v8;
  uint64_t v11 = *(void *)(v10 - 8);
  if (v8 == 1)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v12 = *(void *)(v10 - 16);
  if ((unint64_t)v8 < 3)
  {
    uint64_t v8 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v14 = v9 + 8 * v8;
  uint64_t v13 = *(void *)(v14 - 24);
  if (v8 == 3)
  {
    uint64_t v8 = 1;
    goto LABEL_10;
  }
  uint64_t v8 = *(void *)(v14 - 32);
  if (v8 >= 1)
  {
LABEL_10:
    uint64_t v15 = 0;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v16 = *(void *)(v4 + 16), uint64_t v17 = v16 - 4, v16 < 4)
        || v17 > (int)v16 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v17) == 1)
      {
        uint64_t result = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t result = *(uint64_t ***)(*(void *)(v4 + 64) + 8 * v17);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v18 = *(void *)(v5 + 16);
      uint64_t v19 = v18 - 4;
      if (v18 < 4 || v19 > (int)v18 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v19) == 1) {
        break;
      }
      uint64_t v20 = *(void *)(*(void *)(v5 + 64) + 8 * v19);
      if (v13 >= 1) {
        goto LABEL_24;
      }
LABEL_11:
      if (++v15 == v8) {
        return result;
      }
    }
    uint64_t v20 = 0;
    if (v13 < 1) {
      goto LABEL_11;
    }
LABEL_24:
    uint64_t v21 = 0;
    uint64_t result = (uint64_t **)(v6 + (void)result * v15);
    uint64_t v22 = v7 + v20 * v15;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v23 = *(void *)(v4 + 16), uint64_t v24 = v23 - 3, v23 < 3)
        || v24 > (int)v23 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1)
      {
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else if (*(unsigned char *)(v5 + 58))
      {
        break;
      }
      uint64_t v25 = *(void *)(v5 + 16);
      uint64_t v26 = v25 - 3;
      if (v25 < 3 || v26 > (int)v25 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v26) == 1) {
        break;
      }
      uint64_t v27 = *(void *)(*(void *)(v5 + 64) + 8 * v26);
      if (v12 >= 1) {
        goto LABEL_38;
      }
LABEL_25:
      if (++v21 == v13) {
        goto LABEL_11;
      }
    }
    uint64_t v27 = 0;
    if (v12 < 1) {
      goto LABEL_25;
    }
LABEL_38:
    uint64_t v28 = 0;
    uint64_t v29 = v22 + v27 * v21;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (uint64_t v30 = *(void *)(v4 + 16), v31 = v30 - 2, v30 < 2)
        || v31 > (int)v30 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v31) == 1)
      {
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else if (*(unsigned char *)(v5 + 58))
      {
        break;
      }
      uint64_t v32 = *(void *)(v5 + 16);
      uint64_t v33 = v32 - 2;
      if (v32 < 2 || v33 > (int)v32 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v33) == 1) {
        break;
      }
      uint64_t v34 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
      if (v11 >= 1) {
        goto LABEL_52;
      }
LABEL_39:
      if (++v28 == v12) {
        goto LABEL_25;
      }
    }
    uint64_t v34 = 0;
    if (v11 < 1) {
      goto LABEL_39;
    }
LABEL_52:
    uint64_t v35 = 0;
    uint64_t v36 = v29 + v34 * v28;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (uint64_t v46 = *(void *)(v4 + 16), v47 = v46 - 1, v46 < 1)
        || v47 > (int)v46 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v47) == 1)
      {
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      else if (*(unsigned char *)(v5 + 58))
      {
        goto LABEL_55;
      }
      uint64_t v48 = *(void *)(v5 + 16);
      uint64_t v49 = v48 - 1;
      if (v48 >= 1 && v49 <= (int)v48 - 1 && *(void *)(*(void *)(v5 + 24) + 8 * v49) != 1)
      {
        uint64_t v37 = *(void *)(*(void *)(v5 + 64) + 8 * v49);
        goto LABEL_56;
      }
LABEL_55:
      uint64_t v37 = 0;
LABEL_56:
      uint64_t v38 = v36 + v37 * v35 + *(void *)(v5 + 40);
      __asm { FCMP            H0, #0 }
      if (_ZF) {
        unsigned int v44 = 1;
      }
      else {
        unsigned int v44 = 0;
      }
      __asm { FCMP            H1, #0 }
      if (!_ZF) {
        unsigned int v44 = 0;
      }
      *(float *)uint64_t v38 = (float)v44;
      *(_DWORD *)(v38 + 4) = 0;
      if (v11 == ++v35) {
        goto LABEL_39;
      }
    }
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<half,float,(mlir::mps::arithmeticOp)10>(uint64_t **a1, uint64_t **a2, uint64_t a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v55 = **a4;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v24 = 1;
    }
    else
    {
      char v24 = v13;
    }
    if (*(unsigned char *)(v5 + 58)) {
      BOOL v20 = 1;
    }
    if (v14 > v22) {
      char v25 = 1;
    }
    else {
      char v25 = v18;
    }
    if (v11 > v23) {
      char v26 = 1;
    }
    else {
      char v26 = v16;
    }
    if (v10 > v23) {
      char v27 = 1;
    }
    else {
      char v27 = v24;
    }
    char v28 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v29 = *(void *)(v4 + 16), uint64_t v30 = v29 - 4, v29 < 4)
        || v30 > (int)v29 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v30) == 1)
      {
        if (v25) {
          goto LABEL_34;
        }
      }
      else if (v25)
      {
        goto LABEL_34;
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v14) != 1)
      {
        uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v14);
        if (v17 < 1) {
          goto LABEL_27;
        }
LABEL_37:
        uint64_t v32 = 0;
        uint64_t v33 = v55 + v31 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v34 = *(void *)(v4 + 16), v35 = v34 - 3, v34 < 3)
            || v35 > (int)v34 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v35) == 1)
          {
            if ((v26 & 1) == 0) {
              goto LABEL_44;
            }
            goto LABEL_45;
          }
          if (v26) {
            goto LABEL_45;
          }
LABEL_44:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_45:
            uint64_t v36 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_38;
          }
          uint64_t v36 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_38:
            if (++v32 == v17) {
              goto LABEL_27;
            }
            continue;
          }
          break;
        }
        uint64_t v37 = 0;
        uint64_t v38 = v33 + v36 * v32;
        while (2)
        {
          if (v21
            || (v39 = *(void *)(v4 + 16), uint64_t v40 = v39 - 2, v39 < 2)
            || v40 > (int)v39 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v40) == 1)
          {
            if ((v27 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_56;
          }
          if (v27) {
            goto LABEL_56;
          }
LABEL_55:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_56:
            uint64_t v41 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_49;
          }
          uint64_t v41 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_49:
            if (++v37 == v12) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        uint64_t v42 = 0;
        uint64_t v43 = *(void *)(v5 + 40);
        uint64_t v44 = v38 + v41 * v37;
        while (2)
        {
          if (v21
            || (v53 = *(void *)(v4 + 16), uint64_t v54 = v53 - 1, v53 < 1)
            || v54 > (int)v53 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v54) == 1)
          {
            if ((v28 & 1) == 0) {
              goto LABEL_67;
            }
          }
          else if ((v28 & 1) == 0)
          {
LABEL_67:
            if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
            {
              uint64_t v45 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_61:
              uint64_t v46 = v44 + v45 * v42;
              __asm { FCMP            H2, #0 }
              if (_ZF) {
                float v52 = 1.0;
              }
              else {
                float v52 = 0.0;
              }
              *(float *)(v46 + v43) = v52;
              if (v9 == ++v42) {
                goto LABEL_49;
              }
              continue;
            }
          }
          break;
        }
        uint64_t v45 = 0;
        goto LABEL_61;
      }
LABEL_34:
      uint64_t v31 = 0;
      if (v17 >= 1) {
        goto LABEL_37;
      }
LABEL_27:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v14 = v6 - 4;
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t **mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<half,(void *)0>,(mlir::mps::arithmeticOp)10>(uint64_t **result, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **result;
  uint64_t v5 = **a2;
  uint64_t v6 = **a3;
  uint64_t v7 = **a4;
  uint64_t v8 = *(void *)(v5 + 16);
  if (v8 < 1)
  {
    uint64_t v8 = 1;
    uint64_t v12 = 1;
    uint64_t v11 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v9 = *(void *)(v5 + 24);
  uint64_t v10 = v9 + 8 * v8;
  uint64_t v11 = *(void *)(v10 - 8);
  if (v8 == 1)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v12 = *(void *)(v10 - 16);
  if ((unint64_t)v8 < 3)
  {
    uint64_t v8 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v14 = v9 + 8 * v8;
  uint64_t v13 = *(void *)(v14 - 24);
  if (v8 == 3)
  {
    uint64_t v8 = 1;
    goto LABEL_10;
  }
  uint64_t v8 = *(void *)(v14 - 32);
  if (v8 >= 1)
  {
LABEL_10:
    uint64_t v15 = 0;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v16 = *(void *)(v4 + 16), uint64_t v17 = v16 - 4, v16 < 4)
        || v17 > (int)v16 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v17) == 1)
      {
        uint64_t result = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t result = *(uint64_t ***)(*(void *)(v4 + 64) + 8 * v17);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v18 = *(void *)(v5 + 16);
      uint64_t v19 = v18 - 4;
      if (v18 < 4 || v19 > (int)v18 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v19) == 1) {
        break;
      }
      uint64_t v20 = *(void *)(*(void *)(v5 + 64) + 8 * v19);
      if (v13 >= 1) {
        goto LABEL_24;
      }
LABEL_11:
      if (++v15 == v8) {
        return result;
      }
    }
    uint64_t v20 = 0;
    if (v13 < 1) {
      goto LABEL_11;
    }
LABEL_24:
    uint64_t v21 = 0;
    uint64_t result = (uint64_t **)(v6 + (void)result * v15);
    uint64_t v22 = v7 + v20 * v15;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v23 = *(void *)(v4 + 16), uint64_t v24 = v23 - 3, v23 < 3)
        || v24 > (int)v23 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1)
      {
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else if (*(unsigned char *)(v5 + 58))
      {
        break;
      }
      uint64_t v25 = *(void *)(v5 + 16);
      uint64_t v26 = v25 - 3;
      if (v25 < 3 || v26 > (int)v25 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v26) == 1) {
        break;
      }
      uint64_t v27 = *(void *)(*(void *)(v5 + 64) + 8 * v26);
      if (v12 >= 1) {
        goto LABEL_38;
      }
LABEL_25:
      if (++v21 == v13) {
        goto LABEL_11;
      }
    }
    uint64_t v27 = 0;
    if (v12 < 1) {
      goto LABEL_25;
    }
LABEL_38:
    uint64_t v28 = 0;
    uint64_t v29 = v22 + v27 * v21;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (uint64_t v30 = *(void *)(v4 + 16), v31 = v30 - 2, v30 < 2)
        || v31 > (int)v30 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v31) == 1)
      {
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else if (*(unsigned char *)(v5 + 58))
      {
        break;
      }
      uint64_t v32 = *(void *)(v5 + 16);
      uint64_t v33 = v32 - 2;
      if (v32 < 2 || v33 > (int)v32 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v33) == 1) {
        break;
      }
      uint64_t v34 = *(void *)(*(void *)(v5 + 64) + 8 * v33);
      if (v11 >= 1) {
        goto LABEL_52;
      }
LABEL_39:
      if (++v28 == v12) {
        goto LABEL_25;
      }
    }
    uint64_t v34 = 0;
    if (v11 < 1) {
      goto LABEL_39;
    }
LABEL_52:
    uint64_t v35 = 0;
    uint64_t v36 = v29 + v34 * v28;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (uint64_t v46 = *(void *)(v4 + 16), v47 = v46 - 1, v46 < 1)
        || v47 > (int)v46 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v47) == 1)
      {
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      else if (*(unsigned char *)(v5 + 58))
      {
        goto LABEL_55;
      }
      uint64_t v48 = *(void *)(v5 + 16);
      uint64_t v49 = v48 - 1;
      if (v48 >= 1 && v49 <= (int)v48 - 1 && *(void *)(*(void *)(v5 + 24) + 8 * v49) != 1)
      {
        uint64_t v37 = *(void *)(*(void *)(v5 + 64) + 8 * v49);
        goto LABEL_56;
      }
LABEL_55:
      uint64_t v37 = 0;
LABEL_56:
      uint64_t v38 = v36 + v37 * v35 + *(void *)(v5 + 40);
      __asm { FCMP            H0, #0 }
      if (_ZF) {
        unsigned int v44 = 1;
      }
      else {
        unsigned int v44 = 0;
      }
      __asm { FCMP            H1, #0 }
      if (!_ZF) {
        unsigned int v44 = 0;
      }
      *(short float *)uint64_t v38 = (short float)v44;
      *(_WORD *)(v38 + 2) = 0;
      if (v11 == ++v35) {
        goto LABEL_39;
      }
    }
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<half,half,(mlir::mps::arithmeticOp)10>(uint64_t **a1, uint64_t **a2, uint64_t a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v55 = **a4;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v24 = 1;
    }
    else
    {
      char v24 = v13;
    }
    if (*(unsigned char *)(v5 + 58)) {
      BOOL v20 = 1;
    }
    if (v14 > v22) {
      char v25 = 1;
    }
    else {
      char v25 = v18;
    }
    if (v11 > v23) {
      char v26 = 1;
    }
    else {
      char v26 = v16;
    }
    if (v10 > v23) {
      char v27 = 1;
    }
    else {
      char v27 = v24;
    }
    char v28 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v29 = *(void *)(v4 + 16), uint64_t v30 = v29 - 4, v29 < 4)
        || v30 > (int)v29 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v30) == 1)
      {
        if (v25) {
          goto LABEL_34;
        }
      }
      else if (v25)
      {
        goto LABEL_34;
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v14) != 1)
      {
        uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v14);
        if (v17 < 1) {
          goto LABEL_27;
        }
LABEL_37:
        uint64_t v32 = 0;
        uint64_t v33 = v55 + v31 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v34 = *(void *)(v4 + 16), v35 = v34 - 3, v34 < 3)
            || v35 > (int)v34 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v35) == 1)
          {
            if ((v26 & 1) == 0) {
              goto LABEL_44;
            }
            goto LABEL_45;
          }
          if (v26) {
            goto LABEL_45;
          }
LABEL_44:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_45:
            uint64_t v36 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_38;
          }
          uint64_t v36 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_38:
            if (++v32 == v17) {
              goto LABEL_27;
            }
            continue;
          }
          break;
        }
        uint64_t v37 = 0;
        uint64_t v38 = v33 + v36 * v32;
        while (2)
        {
          if (v21
            || (v39 = *(void *)(v4 + 16), uint64_t v40 = v39 - 2, v39 < 2)
            || v40 > (int)v39 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v40) == 1)
          {
            if ((v27 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_56;
          }
          if (v27) {
            goto LABEL_56;
          }
LABEL_55:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_56:
            uint64_t v41 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_49;
          }
          uint64_t v41 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_49:
            if (++v37 == v12) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        uint64_t v42 = 0;
        uint64_t v43 = *(void *)(v5 + 40);
        uint64_t v44 = v38 + v41 * v37;
        while (2)
        {
          if (v21
            || (v53 = *(void *)(v4 + 16), uint64_t v54 = v53 - 1, v53 < 1)
            || v54 > (int)v53 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v54) == 1)
          {
            if ((v28 & 1) == 0) {
              goto LABEL_67;
            }
          }
          else if ((v28 & 1) == 0)
          {
LABEL_67:
            if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
            {
              uint64_t v45 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_61:
              uint64_t v46 = v44 + v45 * v42;
              __asm { FCMP            H2, #0 }
              if (_ZF) {
                LOWORD(v52) = COERCE_UNSIGNED_INT(1.0);
              }
              else {
                short float v52 = COERCE_SHORT_FLOAT(0);
              }
              *(short float *)(v46 + v43) = v52;
              if (v9 == ++v42) {
                goto LABEL_49;
              }
              continue;
            }
          }
          break;
        }
        uint64_t v45 = 0;
        goto LABEL_61;
      }
LABEL_34:
      uint64_t v31 = 0;
      if (v17 >= 1) {
        goto LABEL_37;
      }
LABEL_27:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v14 = v6 - 4;
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t **mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<half,(void *)0>,(mlir::mps::arithmeticOp)10>(uint64_t **result, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **result;
  uint64_t v5 = **a2;
  uint64_t v6 = **a3;
  uint64_t v7 = **a4;
  uint64_t v8 = *(void *)(v5 + 16);
  if (v8 < 1)
  {
    uint64_t v8 = 1;
    uint64_t v12 = 1;
    uint64_t v11 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v9 = *(void *)(v5 + 24);
  uint64_t v10 = v9 + 8 * v8;
  uint64_t v11 = *(void *)(v10 - 8);
  if (v8 == 1)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v12 = *(void *)(v10 - 16);
  if ((unint64_t)v8 < 3)
  {
    uint64_t v8 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v14 = v9 + 8 * v8;
  uint64_t v13 = *(void *)(v14 - 24);
  if (v8 == 3)
  {
    uint64_t v8 = 1;
    goto LABEL_10;
  }
  uint64_t v8 = *(void *)(v14 - 32);
  if (v8 >= 1)
  {
LABEL_10:
    uint64_t v15 = 0;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v16 = *(void *)(v4 + 16), uint64_t v17 = v16 - 4, v16 < 4)
        || v17 > (int)v16 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v17) == 1)
      {
        uint64_t result = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t result = *(uint64_t ***)(*(void *)(v4 + 64) + 8 * v17);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v18 = *(void *)(v5 + 16);
      uint64_t v19 = v18 - 4;
      if (v18 < 4 || v19 > (int)v18 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v19) == 1) {
        break;
      }
      uint64_t v20 = *(void *)(*(void *)(v5 + 64) + 8 * v19);
      if (v13 >= 1) {
        goto LABEL_24;
      }
LABEL_11:
      if (++v15 == v8) {
        return result;
      }
    }
    uint64_t v20 = 0;
    if (v13 < 1) {
      goto LABEL_11;
    }
LABEL_24:
    uint64_t v21 = 0;
    uint64_t result = (uint64_t **)(v6 + (void)result * v15);
    uint64_t v22 = v7 + v20 * v15;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v23 = *(void *)(v4 + 16), uint64_t v24 = v23 - 3, v23 < 3)
        || v24 > (int)v23 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1)
      {
        uint64_t v25 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v26 = *(void *)(v5 + 16);
      uint64_t v27 = v26 - 3;
      if (v26 < 3 || v27 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v27) == 1) {
        break;
      }
      uint64_t v28 = *(void *)(*(void *)(v5 + 64) + 8 * v27);
      if (v12 >= 1) {
        goto LABEL_38;
      }
LABEL_25:
      if (++v21 == v13) {
        goto LABEL_11;
      }
    }
    uint64_t v28 = 0;
    if (v12 < 1) {
      goto LABEL_25;
    }
LABEL_38:
    uint64_t v29 = 0;
    uint64_t v30 = (char *)result + v25 * v21;
    uint64_t v31 = v22 + v28 * v21;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (uint64_t v32 = *(void *)(v4 + 16), v33 = v32 - 2, v32 < 2)
        || v33 > (int)v32 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v33) == 1)
      {
        uint64_t v34 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v34 = *(void *)(*(void *)(v4 + 64) + 8 * v33);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v35 = *(void *)(v5 + 16);
      uint64_t v36 = v35 - 2;
      if (v35 < 2 || v36 > (int)v35 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v36) == 1) {
        break;
      }
      uint64_t v37 = *(void *)(*(void *)(v5 + 64) + 8 * v36);
      if (v11 >= 1) {
        goto LABEL_52;
      }
LABEL_39:
      if (++v29 == v12) {
        goto LABEL_25;
      }
    }
    uint64_t v37 = 0;
    if (v11 < 1) {
      goto LABEL_39;
    }
LABEL_52:
    uint64_t v38 = 0;
    uint64_t v39 = &v30[v34 * v29];
    uint64_t v40 = v31 + v37 * v29;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v47 = *(void *)(v4 + 16), uint64_t v48 = v47 - 1, v47 < 1)
        || v48 > (int)v47 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v48) == 1)
      {
        uint64_t v41 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      else
      {
        uint64_t v41 = *(void *)(*(void *)(v4 + 64) + 8 * v48);
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      uint64_t v49 = *(void *)(v5 + 16);
      uint64_t v50 = v49 - 1;
      if (v49 >= 1 && v50 <= (int)v49 - 1 && *(void *)(*(void *)(v5 + 24) + 8 * v50) != 1)
      {
        uint64_t v42 = *(void *)(*(void *)(v5 + 64) + 8 * v50);
        goto LABEL_56;
      }
LABEL_55:
      uint64_t v42 = 0;
LABEL_56:
      uint64_t v43 = (float *)&v39[v41 * v38 + *(void *)(v4 + 40)];
      uint64_t v44 = v40 + v42 * v38 + *(void *)(v5 + 40);
      float v45 = v43[1];
      BOOL v46 = *v43 == 0.0;
      if (v45 != 0.0) {
        BOOL v46 = 0;
      }
      *(short float *)uint64_t v44 = (short float)v46;
      *(_WORD *)(v44 + 2) = 0;
      if (v11 == ++v38) {
        goto LABEL_39;
      }
    }
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<float,half,(mlir::mps::arithmeticOp)10>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v58 = **a4;
  uint64_t v59 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v24 = 1;
    }
    else
    {
      char v24 = v13;
    }
    if (*(unsigned char *)(v5 + 58)) {
      BOOL v20 = 1;
    }
    if (v14 > v22) {
      char v25 = 1;
    }
    else {
      char v25 = v18;
    }
    if (v11 > v23) {
      char v26 = 1;
    }
    else {
      char v26 = v16;
    }
    if (v10 > v23) {
      char v27 = 1;
    }
    else {
      char v27 = v24;
    }
    char v28 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v29 = *(void *)(v4 + 16), uint64_t v30 = v29 - 4, v29 < 4)
        || v30 > (int)v29 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v30) == 1)
      {
        uint64_t v31 = 0;
        if (v25) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v31 = *(void *)(*(void *)(v4 + 64) + 8 * v30);
        if (v25) {
          goto LABEL_34;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v14) != 1)
      {
        uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v14);
        if (v17 < 1) {
          goto LABEL_27;
        }
LABEL_37:
        uint64_t v33 = 0;
        uint64_t v34 = v59 + v31 * v19;
        uint64_t v35 = v58 + v32 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v36 = *(void *)(v4 + 16), v37 = v36 - 3, v36 < 3)
            || v37 > (int)v36 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v37) == 1)
          {
            uint64_t v38 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_44;
            }
            goto LABEL_45;
          }
          uint64_t v38 = *(void *)(*(void *)(v4 + 64) + 8 * v37);
          if (v26) {
            goto LABEL_45;
          }
LABEL_44:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_45:
            uint64_t v39 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_38;
          }
          uint64_t v39 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_38:
            if (++v33 == v17) {
              goto LABEL_27;
            }
            continue;
          }
          break;
        }
        uint64_t v40 = 0;
        uint64_t v41 = v34 + v38 * v33;
        uint64_t v42 = v35 + v39 * v33;
        while (2)
        {
          if (v21
            || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 2, v43 < 2)
            || v44 > (int)v43 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
          {
            uint64_t v45 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_56;
          }
          uint64_t v45 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
          if (v27) {
            goto LABEL_56;
          }
LABEL_55:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_56:
            uint64_t v46 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_49;
          }
          uint64_t v46 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_49:
            if (++v40 == v12) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        uint64_t v47 = 0;
        uint64_t v48 = v41 + v45 * v40;
        uint64_t v49 = *(void *)(v4 + 40);
        uint64_t v50 = *(void *)(v5 + 40);
        uint64_t v51 = v42 + v46 * v40;
        while (2)
        {
          if (v21
            || (uint64_t v56 = *(void *)(v4 + 16), v57 = v56 - 1, v56 < 1)
            || v57 > (int)v56 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v57) == 1)
          {
            uint64_t v55 = 0;
            if ((v28 & 1) == 0) {
              goto LABEL_67;
            }
          }
          else
          {
            uint64_t v55 = *(void *)(*(void *)(v4 + 64) + 8 * v57);
            if ((v28 & 1) == 0)
            {
LABEL_67:
              if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
              {
                uint64_t v52 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_61:
                uint64_t v53 = v51 + v52 * v47;
                if (*(float *)(v48 + v55 * v47 + v49) == 0.0) {
                  LOWORD(v54) = COERCE_UNSIGNED_INT(1.0);
                }
                else {
                  short float v54 = COERCE_SHORT_FLOAT(0);
                }
                *(short float *)(v53 + v50) = v54;
                if (v9 == ++v47) {
                  goto LABEL_49;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v52 = 0;
        goto LABEL_61;
      }
LABEL_34:
      uint64_t v32 = 0;
      if (v17 >= 1) {
        goto LABEL_37;
      }
LABEL_27:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v14 = v6 - 4;
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<__emulated_bf16,float,(mlir::mps::arithmeticOp)10>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v58 = **a4;
  uint64_t v59 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v24 = 1;
    }
    else
    {
      char v24 = v13;
    }
    if (*(unsigned char *)(v5 + 58)) {
      BOOL v20 = 1;
    }
    if (v14 > v22) {
      char v25 = 1;
    }
    else {
      char v25 = v18;
    }
    if (v11 > v23) {
      char v26 = 1;
    }
    else {
      char v26 = v16;
    }
    if (v10 > v23) {
      char v27 = 1;
    }
    else {
      char v27 = v24;
    }
    char v28 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v29 = *(void *)(v4 + 16), uint64_t v30 = v29 - 4, v29 < 4)
        || v30 > (int)v29 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v30) == 1)
      {
        uint64_t v31 = 0;
        if (v25) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v31 = *(void *)(*(void *)(v4 + 64) + 8 * v30);
        if (v25) {
          goto LABEL_34;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v14) != 1)
      {
        uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v14);
        if (v17 < 1) {
          goto LABEL_27;
        }
LABEL_37:
        uint64_t v33 = 0;
        uint64_t v34 = v59 + v31 * v19;
        uint64_t v35 = v58 + v32 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v36 = *(void *)(v4 + 16), v37 = v36 - 3, v36 < 3)
            || v37 > (int)v36 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v37) == 1)
          {
            uint64_t v38 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_44;
            }
            goto LABEL_45;
          }
          uint64_t v38 = *(void *)(*(void *)(v4 + 64) + 8 * v37);
          if (v26) {
            goto LABEL_45;
          }
LABEL_44:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_45:
            uint64_t v39 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_38;
          }
          uint64_t v39 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_38:
            if (++v33 == v17) {
              goto LABEL_27;
            }
            continue;
          }
          break;
        }
        uint64_t v40 = 0;
        uint64_t v41 = v34 + v38 * v33;
        uint64_t v42 = v35 + v39 * v33;
        while (2)
        {
          if (v21
            || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 2, v43 < 2)
            || v44 > (int)v43 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
          {
            uint64_t v45 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_56;
          }
          uint64_t v45 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
          if (v27) {
            goto LABEL_56;
          }
LABEL_55:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_56:
            uint64_t v46 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_49;
          }
          uint64_t v46 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_49:
            if (++v40 == v12) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        uint64_t v47 = 0;
        uint64_t v48 = v41 + v45 * v40;
        uint64_t v49 = *(void *)(v4 + 40);
        uint64_t v50 = *(void *)(v5 + 40);
        uint64_t v51 = v42 + v46 * v40;
        while (2)
        {
          if (v21
            || (uint64_t v56 = *(void *)(v4 + 16), v57 = v56 - 1, v56 < 1)
            || v57 > (int)v56 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v57) == 1)
          {
            uint64_t v55 = 0;
            if ((v28 & 1) == 0) {
              goto LABEL_67;
            }
          }
          else
          {
            uint64_t v55 = *(void *)(*(void *)(v4 + 64) + 8 * v57);
            if ((v28 & 1) == 0)
            {
LABEL_67:
              if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
              {
                uint64_t v52 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_61:
                uint64_t v53 = v51 + v52 * v47;
                if ((*(_WORD *)(v48 + v55 * v47 + v49) & 0x7FFF) != 0) {
                  float v54 = 0.0;
                }
                else {
                  float v54 = 1.0;
                }
                *(float *)(v53 + v50) = v54;
                if (v9 == ++v47) {
                  goto LABEL_49;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v52 = 0;
        goto LABEL_61;
      }
LABEL_34:
      uint64_t v32 = 0;
      if (v17 >= 1) {
        goto LABEL_37;
      }
LABEL_27:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v14 = v6 - 4;
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<__emulated_bf16,__emulated_bf16,(mlir::mps::arithmeticOp)10>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v58 = **a4;
  uint64_t v59 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v13 = 1;
      BOOL v20 = 1;
    }
    uint64_t v57 = v14;
    if (v14 > v22) {
      char v24 = 1;
    }
    else {
      char v24 = v18;
    }
    if (v11 > v23) {
      char v16 = 1;
    }
    if (v10 > v23) {
      char v25 = 1;
    }
    else {
      char v25 = v13;
    }
    char v26 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v27 = *(void *)(v4 + 16), uint64_t v28 = v27 - 4, v27 < 4)
        || v28 > (int)v27 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v28) == 1)
      {
        uint64_t v29 = 0;
        if (v24) {
          goto LABEL_30;
        }
      }
      else
      {
        uint64_t v29 = *(void *)(*(void *)(v4 + 64) + 8 * v28);
        if (v24) {
          goto LABEL_30;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v57) != 1)
      {
        uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v57);
        if (v17 < 1) {
          goto LABEL_23;
        }
LABEL_33:
        uint64_t v31 = 0;
        uint64_t v32 = v59 + v29 * v19;
        uint64_t v33 = v58 + v30 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v34 = *(void *)(v4 + 16), v35 = v34 - 3, v34 < 3)
            || v35 > (int)v34 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v35) == 1)
          {
            uint64_t v36 = 0;
            if ((v16 & 1) == 0) {
              goto LABEL_40;
            }
            goto LABEL_41;
          }
          uint64_t v36 = *(void *)(*(void *)(v4 + 64) + 8 * v35);
          if (v16) {
            goto LABEL_41;
          }
LABEL_40:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_41:
            uint64_t v37 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_34;
          }
          uint64_t v37 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_34:
            if (++v31 == v17) {
              goto LABEL_23;
            }
            continue;
          }
          break;
        }
        uint64_t v38 = 0;
        uint64_t v39 = v32 + v36 * v31;
        uint64_t v40 = v33 + v37 * v31;
        while (2)
        {
          if (v21
            || (v41 = *(void *)(v4 + 16), uint64_t v42 = v41 - 2, v41 < 2)
            || v42 > (int)v41 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v42) == 1)
          {
            uint64_t v43 = 0;
            if ((v25 & 1) == 0) {
              goto LABEL_51;
            }
            goto LABEL_52;
          }
          uint64_t v43 = *(void *)(*(void *)(v4 + 64) + 8 * v42);
          if (v25) {
            goto LABEL_52;
          }
LABEL_51:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_52:
            uint64_t v44 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_45;
          }
          uint64_t v44 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_45:
            if (++v38 == v12) {
              goto LABEL_34;
            }
            continue;
          }
          break;
        }
        uint64_t v45 = 0;
        uint64_t v46 = v39 + v43 * v38;
        uint64_t v47 = *(void *)(v4 + 40);
        uint64_t v48 = *(void *)(v5 + 40);
        uint64_t v49 = v40 + v44 * v38;
        while (2)
        {
          if (v21
            || (v55 = *(void *)(v4 + 16), uint64_t v56 = v55 - 1, v55 < 1)
            || v56 > (int)v55 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v56) == 1)
          {
            uint64_t v54 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_63;
            }
          }
          else
          {
            uint64_t v54 = *(void *)(*(void *)(v4 + 64) + 8 * v56);
            if ((v26 & 1) == 0)
            {
LABEL_63:
              if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
              {
                uint64_t v50 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_57:
                uint64_t v51 = v49 + v50 * v45;
                if ((*(_WORD *)(v46 + v54 * v45 + v47) & 0x7FFF) != 0) {
                  float v52 = 0.0;
                }
                else {
                  float v52 = 1.0;
                }
                float v53 = v52 + (float)(v52 * 0.0039062);
                *(_WORD *)(v51 + v48) = HIWORD(v53);
                if (v9 == ++v45) {
                  goto LABEL_45;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v50 = 0;
        goto LABEL_57;
      }
LABEL_30:
      uint64_t v30 = 0;
      if (v17 >= 1) {
        goto LABEL_33;
      }
LABEL_23:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    uint64_t v14 = v6 - 4;
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<float,__emulated_bf16,(mlir::mps::arithmeticOp)10>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v58 = **a4;
  uint64_t v59 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v13 = 1;
      BOOL v20 = 1;
    }
    uint64_t v57 = v14;
    if (v14 > v22) {
      char v24 = 1;
    }
    else {
      char v24 = v18;
    }
    if (v11 > v23) {
      char v16 = 1;
    }
    if (v10 > v23) {
      char v25 = 1;
    }
    else {
      char v25 = v13;
    }
    char v26 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v27 = *(void *)(v4 + 16), uint64_t v28 = v27 - 4, v27 < 4)
        || v28 > (int)v27 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v28) == 1)
      {
        uint64_t v29 = 0;
        if (v24) {
          goto LABEL_30;
        }
      }
      else
      {
        uint64_t v29 = *(void *)(*(void *)(v4 + 64) + 8 * v28);
        if (v24) {
          goto LABEL_30;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v57) != 1)
      {
        uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v57);
        if (v17 < 1) {
          goto LABEL_23;
        }
LABEL_33:
        uint64_t v31 = 0;
        uint64_t v32 = v59 + v29 * v19;
        uint64_t v33 = v58 + v30 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v34 = *(void *)(v4 + 16), v35 = v34 - 3, v34 < 3)
            || v35 > (int)v34 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v35) == 1)
          {
            uint64_t v36 = 0;
            if ((v16 & 1) == 0) {
              goto LABEL_40;
            }
            goto LABEL_41;
          }
          uint64_t v36 = *(void *)(*(void *)(v4 + 64) + 8 * v35);
          if (v16) {
            goto LABEL_41;
          }
LABEL_40:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_41:
            uint64_t v37 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_34;
          }
          uint64_t v37 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_34:
            if (++v31 == v17) {
              goto LABEL_23;
            }
            continue;
          }
          break;
        }
        uint64_t v38 = 0;
        uint64_t v39 = v32 + v36 * v31;
        uint64_t v40 = v33 + v37 * v31;
        while (2)
        {
          if (v21
            || (v41 = *(void *)(v4 + 16), uint64_t v42 = v41 - 2, v41 < 2)
            || v42 > (int)v41 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v42) == 1)
          {
            uint64_t v43 = 0;
            if ((v25 & 1) == 0) {
              goto LABEL_51;
            }
            goto LABEL_52;
          }
          uint64_t v43 = *(void *)(*(void *)(v4 + 64) + 8 * v42);
          if (v25) {
            goto LABEL_52;
          }
LABEL_51:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_52:
            uint64_t v44 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_45;
          }
          uint64_t v44 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_45:
            if (++v38 == v12) {
              goto LABEL_34;
            }
            continue;
          }
          break;
        }
        uint64_t v45 = 0;
        uint64_t v46 = v39 + v43 * v38;
        uint64_t v47 = *(void *)(v4 + 40);
        uint64_t v48 = *(void *)(v5 + 40);
        uint64_t v49 = v40 + v44 * v38;
        while (2)
        {
          if (v21
            || (v55 = *(void *)(v4 + 16), uint64_t v56 = v55 - 1, v55 < 1)
            || v56 > (int)v55 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v56) == 1)
          {
            uint64_t v54 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_63;
            }
          }
          else
          {
            uint64_t v54 = *(void *)(*(void *)(v4 + 64) + 8 * v56);
            if ((v26 & 1) == 0)
            {
LABEL_63:
              if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
              {
                uint64_t v50 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_57:
                uint64_t v51 = v49 + v50 * v45;
                if (*(float *)(v46 + v54 * v45 + v47) == 0.0) {
                  float v52 = 1.0;
                }
                else {
                  float v52 = 0.0;
                }
                float v53 = v52 + (float)(v52 * 0.0039062);
                *(_WORD *)(v51 + v48) = HIWORD(v53);
                if (v9 == ++v45) {
                  goto LABEL_45;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v50 = 0;
        goto LABEL_57;
      }
LABEL_30:
      uint64_t v30 = 0;
      if (v17 >= 1) {
        goto LABEL_33;
      }
LABEL_23:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    uint64_t v14 = v6 - 4;
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t **mlir::mps::arithmeticUnaryTileBaseKernel<long long,long long,(mlir::mps::arithmeticOp)10>(uint64_t **result, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **result;
  uint64_t v5 = **a2;
  uint64_t v6 = **a3;
  uint64_t v7 = **a4;
  uint64_t v8 = *(void *)(v5 + 16);
  if (v8 < 1)
  {
    uint64_t v8 = 1;
    uint64_t v12 = 1;
    uint64_t v11 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v9 = *(void *)(v5 + 24);
  uint64_t v10 = v9 + 8 * v8;
  uint64_t v11 = *(void *)(v10 - 8);
  if (v8 == 1)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v12 = *(void *)(v10 - 16);
  if ((unint64_t)v8 < 3)
  {
    uint64_t v8 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v14 = v9 + 8 * v8;
  uint64_t v13 = *(void *)(v14 - 24);
  if (v8 == 3)
  {
    uint64_t v8 = 1;
    goto LABEL_10;
  }
  uint64_t v8 = *(void *)(v14 - 32);
  if (v8 >= 1)
  {
LABEL_10:
    uint64_t v15 = 0;
    int v16 = *(unsigned __int8 *)(v4 + 58);
    uint64_t result = (uint64_t **)*(unsigned __int8 *)(v5 + 58);
    while (1)
    {
      if (v16
        || (uint64_t v17 = *(void *)(v4 + 16), v18 = v17 - 4, v17 < 4)
        || v18 > (int)v17 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v18) == 1)
      {
        uint64_t v19 = 0;
        if (result) {
          break;
        }
      }
      else
      {
        uint64_t v19 = *(void *)(*(void *)(v4 + 64) + 8 * v18);
        if (result) {
          break;
        }
      }
      uint64_t v20 = *(void *)(v5 + 16);
      uint64_t v21 = v20 - 4;
      if (v20 < 4 || v21 > (int)v20 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v21) == 1) {
        break;
      }
      uint64_t v22 = *(void *)(*(void *)(v5 + 64) + 8 * v21);
      if (v13 >= 1) {
        goto LABEL_24;
      }
LABEL_11:
      if (++v15 == v8) {
        return result;
      }
    }
    uint64_t v22 = 0;
    if (v13 < 1) {
      goto LABEL_11;
    }
LABEL_24:
    uint64_t v23 = 0;
    uint64_t v24 = v6 + v19 * v15;
    uint64_t v25 = v7 + v22 * v15;
    while (1)
    {
      if (v16
        || (uint64_t v26 = *(void *)(v4 + 16), v27 = v26 - 3, v26 < 3)
        || v27 > (int)v26 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v27) == 1)
      {
        uint64_t v28 = 0;
        if (result) {
          break;
        }
      }
      else
      {
        uint64_t v28 = *(void *)(*(void *)(v4 + 64) + 8 * v27);
        if (result) {
          break;
        }
      }
      uint64_t v29 = *(void *)(v5 + 16);
      uint64_t v30 = v29 - 3;
      if (v29 < 3 || v30 > (int)v29 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v30) == 1) {
        break;
      }
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v30);
      if (v12 >= 1) {
        goto LABEL_38;
      }
LABEL_25:
      if (++v23 == v13) {
        goto LABEL_11;
      }
    }
    uint64_t v31 = 0;
    if (v12 < 1) {
      goto LABEL_25;
    }
LABEL_38:
    uint64_t v32 = 0;
    uint64_t v33 = v24 + v28 * v23;
    uint64_t v34 = v25 + v31 * v23;
    while (1)
    {
      if (v16
        || (v35 = *(void *)(v4 + 16), uint64_t v36 = v35 - 2, v35 < 2)
        || v36 > (int)v35 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v36) == 1)
      {
        uint64_t v37 = 0;
        if (result) {
          break;
        }
      }
      else
      {
        uint64_t v37 = *(void *)(*(void *)(v4 + 64) + 8 * v36);
        if (result) {
          break;
        }
      }
      uint64_t v38 = *(void *)(v5 + 16);
      uint64_t v39 = v38 - 2;
      if (v38 < 2 || v39 > (int)v38 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v39) == 1) {
        break;
      }
      uint64_t v40 = *(void *)(*(void *)(v5 + 64) + 8 * v39);
      if (v11 >= 1) {
        goto LABEL_52;
      }
LABEL_39:
      if (++v32 == v12) {
        goto LABEL_25;
      }
    }
    uint64_t v40 = 0;
    if (v11 < 1) {
      goto LABEL_39;
    }
LABEL_52:
    uint64_t v41 = 0;
    uint64_t v42 = v33 + v37 * v32;
    uint64_t v43 = *(void *)(v4 + 40);
    uint64_t v44 = *(void *)(v5 + 40);
    uint64_t v45 = v34 + v40 * v32;
    while (1)
    {
      if (v16
        || (uint64_t v48 = *(void *)(v4 + 16), v49 = v48 - 1, v48 < 1)
        || v49 > (int)v48 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v49) == 1)
      {
        uint64_t v46 = 0;
        if (result) {
          goto LABEL_55;
        }
      }
      else
      {
        uint64_t v46 = *(void *)(*(void *)(v4 + 64) + 8 * v49);
        if (result) {
          goto LABEL_55;
        }
      }
      uint64_t v50 = *(void *)(v5 + 16);
      uint64_t v51 = v50 - 1;
      if (v50 >= 1 && v51 <= (int)v50 - 1 && *(void *)(*(void *)(v5 + 24) + 8 * v51) != 1)
      {
        uint64_t v47 = *(void *)(*(void *)(v5 + 64) + 8 * v51);
        goto LABEL_56;
      }
LABEL_55:
      uint64_t v47 = 0;
LABEL_56:
      *(void *)(v45 + v47 * v41 + v44) = *(void *)(v42 + v46 * v41 + v43) == 0;
      if (v11 == ++v41) {
        goto LABEL_39;
      }
    }
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<int,int,(mlir::mps::arithmeticOp)10>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v56 = **a4;
  uint64_t v57 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v24 = 1;
    }
    else
    {
      char v24 = v13;
    }
    if (*(unsigned char *)(v5 + 58)) {
      BOOL v20 = 1;
    }
    if (v14 > v22) {
      char v25 = 1;
    }
    else {
      char v25 = v18;
    }
    if (v11 > v23) {
      char v26 = 1;
    }
    else {
      char v26 = v16;
    }
    if (v10 > v23) {
      char v27 = 1;
    }
    else {
      char v27 = v24;
    }
    char v28 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v29 = *(void *)(v4 + 16), uint64_t v30 = v29 - 4, v29 < 4)
        || v30 > (int)v29 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v30) == 1)
      {
        uint64_t v31 = 0;
        if (v25) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v31 = *(void *)(*(void *)(v4 + 64) + 8 * v30);
        if (v25) {
          goto LABEL_34;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v14) != 1)
      {
        uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v14);
        if (v17 < 1) {
          goto LABEL_27;
        }
LABEL_37:
        uint64_t v33 = 0;
        uint64_t v34 = v57 + v31 * v19;
        uint64_t v35 = v56 + v32 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v36 = *(void *)(v4 + 16), v37 = v36 - 3, v36 < 3)
            || v37 > (int)v36 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v37) == 1)
          {
            uint64_t v38 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_44;
            }
            goto LABEL_45;
          }
          uint64_t v38 = *(void *)(*(void *)(v4 + 64) + 8 * v37);
          if (v26) {
            goto LABEL_45;
          }
LABEL_44:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_45:
            uint64_t v39 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_38;
          }
          uint64_t v39 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_38:
            if (++v33 == v17) {
              goto LABEL_27;
            }
            continue;
          }
          break;
        }
        uint64_t v40 = 0;
        uint64_t v41 = v34 + v38 * v33;
        uint64_t v42 = v35 + v39 * v33;
        while (2)
        {
          if (v21
            || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 2, v43 < 2)
            || v44 > (int)v43 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
          {
            uint64_t v45 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_56;
          }
          uint64_t v45 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
          if (v27) {
            goto LABEL_56;
          }
LABEL_55:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_56:
            uint64_t v46 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_49;
          }
          uint64_t v46 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_49:
            if (++v40 == v12) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        uint64_t v47 = 0;
        uint64_t v48 = v41 + v45 * v40;
        uint64_t v49 = *(void *)(v4 + 40);
        uint64_t v50 = *(void *)(v5 + 40);
        uint64_t v51 = v42 + v46 * v40;
        while (2)
        {
          if (v21
            || (uint64_t v54 = *(void *)(v4 + 16), v55 = v54 - 1, v54 < 1)
            || v55 > (int)v54 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v55) == 1)
          {
            uint64_t v53 = 0;
            if ((v28 & 1) == 0) {
              goto LABEL_64;
            }
          }
          else
          {
            uint64_t v53 = *(void *)(*(void *)(v4 + 64) + 8 * v55);
            if ((v28 & 1) == 0)
            {
LABEL_64:
              if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
              {
                uint64_t v52 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_61:
                *(_DWORD *)(v51 + v52 * v47 + v50) = *(_DWORD *)(v48 + v53 * v47 + v49) == 0;
                if (v9 == ++v47) {
                  goto LABEL_49;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v52 = 0;
        goto LABEL_61;
      }
LABEL_34:
      uint64_t v32 = 0;
      if (v17 >= 1) {
        goto LABEL_37;
      }
LABEL_27:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v14 = v6 - 4;
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<short,short,(mlir::mps::arithmeticOp)10>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v56 = **a4;
  uint64_t v57 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v24 = 1;
    }
    else
    {
      char v24 = v13;
    }
    if (*(unsigned char *)(v5 + 58)) {
      BOOL v20 = 1;
    }
    if (v14 > v22) {
      char v25 = 1;
    }
    else {
      char v25 = v18;
    }
    if (v11 > v23) {
      char v26 = 1;
    }
    else {
      char v26 = v16;
    }
    if (v10 > v23) {
      char v27 = 1;
    }
    else {
      char v27 = v24;
    }
    char v28 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v29 = *(void *)(v4 + 16), uint64_t v30 = v29 - 4, v29 < 4)
        || v30 > (int)v29 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v30) == 1)
      {
        uint64_t v31 = 0;
        if (v25) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v31 = *(void *)(*(void *)(v4 + 64) + 8 * v30);
        if (v25) {
          goto LABEL_34;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v14) != 1)
      {
        uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v14);
        if (v17 < 1) {
          goto LABEL_27;
        }
LABEL_37:
        uint64_t v33 = 0;
        uint64_t v34 = v57 + v31 * v19;
        uint64_t v35 = v56 + v32 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v36 = *(void *)(v4 + 16), v37 = v36 - 3, v36 < 3)
            || v37 > (int)v36 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v37) == 1)
          {
            uint64_t v38 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_44;
            }
            goto LABEL_45;
          }
          uint64_t v38 = *(void *)(*(void *)(v4 + 64) + 8 * v37);
          if (v26) {
            goto LABEL_45;
          }
LABEL_44:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_45:
            uint64_t v39 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_38;
          }
          uint64_t v39 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_38:
            if (++v33 == v17) {
              goto LABEL_27;
            }
            continue;
          }
          break;
        }
        uint64_t v40 = 0;
        uint64_t v41 = v34 + v38 * v33;
        uint64_t v42 = v35 + v39 * v33;
        while (2)
        {
          if (v21
            || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 2, v43 < 2)
            || v44 > (int)v43 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
          {
            uint64_t v45 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_56;
          }
          uint64_t v45 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
          if (v27) {
            goto LABEL_56;
          }
LABEL_55:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_56:
            uint64_t v46 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_49;
          }
          uint64_t v46 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_49:
            if (++v40 == v12) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        uint64_t v47 = 0;
        uint64_t v48 = v41 + v45 * v40;
        uint64_t v49 = *(void *)(v4 + 40);
        uint64_t v50 = *(void *)(v5 + 40);
        uint64_t v51 = v42 + v46 * v40;
        while (2)
        {
          if (v21
            || (uint64_t v54 = *(void *)(v4 + 16), v55 = v54 - 1, v54 < 1)
            || v55 > (int)v54 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v55) == 1)
          {
            uint64_t v53 = 0;
            if ((v28 & 1) == 0) {
              goto LABEL_64;
            }
          }
          else
          {
            uint64_t v53 = *(void *)(*(void *)(v4 + 64) + 8 * v55);
            if ((v28 & 1) == 0)
            {
LABEL_64:
              if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
              {
                uint64_t v52 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_61:
                *(_WORD *)(v51 + v52 * v47 + v50) = *(_WORD *)(v48 + v53 * v47 + v49) == 0;
                if (v9 == ++v47) {
                  goto LABEL_49;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v52 = 0;
        goto LABEL_61;
      }
LABEL_34:
      uint64_t v32 = 0;
      if (v17 >= 1) {
        goto LABEL_37;
      }
LABEL_27:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v14 = v6 - 4;
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t **mlir::mps::arithmeticUnaryTileBaseKernel<signed char,signed char,(mlir::mps::arithmeticOp)10>(uint64_t **result, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **result;
  uint64_t v5 = **a2;
  uint64_t v6 = **a3;
  uint64_t v7 = **a4;
  uint64_t v8 = *(void *)(v5 + 16);
  if (v8 < 1)
  {
    uint64_t v8 = 1;
    uint64_t v12 = 1;
    uint64_t v11 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v9 = *(void *)(v5 + 24);
  uint64_t v10 = v9 + 8 * v8;
  uint64_t v11 = *(void *)(v10 - 8);
  if (v8 == 1)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v12 = *(void *)(v10 - 16);
  if ((unint64_t)v8 < 3)
  {
    uint64_t v8 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v14 = v9 + 8 * v8;
  uint64_t v13 = *(void *)(v14 - 24);
  if (v8 == 3)
  {
    uint64_t v8 = 1;
    goto LABEL_10;
  }
  uint64_t v8 = *(void *)(v14 - 32);
  if (v8 >= 1)
  {
LABEL_10:
    uint64_t v15 = 0;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v16 = *(void *)(v4 + 16), uint64_t v17 = v16 - 4, v16 < 4)
        || v17 > (int)v16 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v17) == 1)
      {
        uint64_t result = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t result = *(uint64_t ***)(*(void *)(v4 + 64) + 8 * v17);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v18 = *(void *)(v5 + 16);
      uint64_t v19 = v18 - 4;
      if (v18 < 4 || v19 > (int)v18 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v19) == 1) {
        break;
      }
      uint64_t v20 = *(void *)(*(void *)(v5 + 64) + 8 * v19);
      if (v13 >= 1) {
        goto LABEL_24;
      }
LABEL_11:
      if (++v15 == v8) {
        return result;
      }
    }
    uint64_t v20 = 0;
    if (v13 < 1) {
      goto LABEL_11;
    }
LABEL_24:
    uint64_t v21 = 0;
    uint64_t result = (uint64_t **)(v6 + (void)result * v15);
    uint64_t v22 = v7 + v20 * v15;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v23 = *(void *)(v4 + 16), uint64_t v24 = v23 - 3, v23 < 3)
        || v24 > (int)v23 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1)
      {
        uint64_t v25 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v26 = *(void *)(v5 + 16);
      uint64_t v27 = v26 - 3;
      if (v26 < 3 || v27 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v27) == 1) {
        break;
      }
      uint64_t v28 = *(void *)(*(void *)(v5 + 64) + 8 * v27);
      if (v12 >= 1) {
        goto LABEL_38;
      }
LABEL_25:
      if (++v21 == v13) {
        goto LABEL_11;
      }
    }
    uint64_t v28 = 0;
    if (v12 < 1) {
      goto LABEL_25;
    }
LABEL_38:
    uint64_t v29 = 0;
    uint64_t v30 = (char *)result + v25 * v21;
    uint64_t v31 = v22 + v28 * v21;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (uint64_t v32 = *(void *)(v4 + 16), v33 = v32 - 2, v32 < 2)
        || v33 > (int)v32 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v33) == 1)
      {
        uint64_t v34 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v34 = *(void *)(*(void *)(v4 + 64) + 8 * v33);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v35 = *(void *)(v5 + 16);
      uint64_t v36 = v35 - 2;
      if (v35 < 2 || v36 > (int)v35 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v36) == 1) {
        break;
      }
      uint64_t v37 = *(void *)(*(void *)(v5 + 64) + 8 * v36);
      if (v11 >= 1) {
        goto LABEL_52;
      }
LABEL_39:
      if (++v29 == v12) {
        goto LABEL_25;
      }
    }
    uint64_t v37 = 0;
    if (v11 < 1) {
      goto LABEL_39;
    }
LABEL_52:
    uint64_t v38 = 0;
    uint64_t v39 = &v30[v34 * v29];
    uint64_t v40 = v31 + v37 * v29;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 1, v43 < 1)
        || v44 > (int)v43 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
      {
        uint64_t v41 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      else
      {
        uint64_t v41 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      uint64_t v45 = *(void *)(v5 + 16);
      uint64_t v46 = v45 - 1;
      if (v45 >= 1 && v46 <= (int)v45 - 1 && *(void *)(*(void *)(v5 + 24) + 8 * v46) != 1)
      {
        uint64_t v42 = *(void *)(*(void *)(v5 + 64) + 8 * v46);
        goto LABEL_56;
      }
LABEL_55:
      uint64_t v42 = 0;
LABEL_56:
      *(unsigned char *)(v40 + v42 * v38 + *(void *)(v5 + 40)) = v39[v41 * v38 + *(void *)(v4 + 40)] == 0;
      if (v11 == ++v38) {
        goto LABEL_39;
      }
    }
  }
  return result;
}

uint64_t **mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)11>(uint64_t **result, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **result;
  uint64_t v5 = **a2;
  uint64_t v6 = **a3;
  uint64_t v7 = **a4;
  uint64_t v8 = *(void *)(v5 + 16);
  if (v8 < 1)
  {
    uint64_t v8 = 1;
    uint64_t v12 = 1;
    uint64_t v11 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v9 = *(void *)(v5 + 24);
  uint64_t v10 = v9 + 8 * v8;
  uint64_t v11 = *(void *)(v10 - 8);
  if (v8 == 1)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v12 = *(void *)(v10 - 16);
  if ((unint64_t)v8 < 3)
  {
    uint64_t v8 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v14 = v9 + 8 * v8;
  uint64_t v13 = *(void *)(v14 - 24);
  if (v8 == 3)
  {
    uint64_t v8 = 1;
    goto LABEL_10;
  }
  uint64_t v8 = *(void *)(v14 - 32);
  if (v8 >= 1)
  {
LABEL_10:
    uint64_t v15 = 0;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v16 = *(void *)(v4 + 16), uint64_t v17 = v16 - 4, v16 < 4)
        || v17 > (int)v16 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v17) == 1)
      {
        uint64_t result = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t result = *(uint64_t ***)(*(void *)(v4 + 64) + 8 * v17);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v18 = *(void *)(v5 + 16);
      uint64_t v19 = v18 - 4;
      if (v18 < 4 || v19 > (int)v18 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v19) == 1) {
        break;
      }
      uint64_t v20 = *(void *)(*(void *)(v5 + 64) + 8 * v19);
      if (v13 >= 1) {
        goto LABEL_24;
      }
LABEL_11:
      if (++v15 == v8) {
        return result;
      }
    }
    uint64_t v20 = 0;
    if (v13 < 1) {
      goto LABEL_11;
    }
LABEL_24:
    uint64_t v21 = 0;
    uint64_t result = (uint64_t **)(v6 + (void)result * v15);
    uint64_t v22 = v7 + v20 * v15;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v23 = *(void *)(v4 + 16), uint64_t v24 = v23 - 3, v23 < 3)
        || v24 > (int)v23 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1)
      {
        uint64_t v25 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v26 = *(void *)(v5 + 16);
      uint64_t v27 = v26 - 3;
      if (v26 < 3 || v27 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v27) == 1) {
        break;
      }
      uint64_t v28 = *(void *)(*(void *)(v5 + 64) + 8 * v27);
      if (v12 >= 1) {
        goto LABEL_38;
      }
LABEL_25:
      if (++v21 == v13) {
        goto LABEL_11;
      }
    }
    uint64_t v28 = 0;
    if (v12 < 1) {
      goto LABEL_25;
    }
LABEL_38:
    uint64_t v29 = 0;
    uint64_t v30 = (char *)result + v25 * v21;
    uint64_t v31 = v22 + v28 * v21;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (uint64_t v32 = *(void *)(v4 + 16), v33 = v32 - 2, v32 < 2)
        || v33 > (int)v32 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v33) == 1)
      {
        uint64_t v34 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v34 = *(void *)(*(void *)(v4 + 64) + 8 * v33);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v35 = *(void *)(v5 + 16);
      uint64_t v36 = v35 - 2;
      if (v35 < 2 || v36 > (int)v35 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v36) == 1) {
        break;
      }
      uint64_t v37 = *(void *)(*(void *)(v5 + 64) + 8 * v36);
      if (v11 >= 1) {
        goto LABEL_52;
      }
LABEL_39:
      if (++v29 == v12) {
        goto LABEL_25;
      }
    }
    uint64_t v37 = 0;
    if (v11 < 1) {
      goto LABEL_39;
    }
LABEL_52:
    uint64_t v38 = 0;
    uint64_t v39 = &v30[v34 * v29];
    uint64_t v40 = v31 + v37 * v29;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 1, v43 < 1)
        || v44 > (int)v43 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
      {
        uint64_t v41 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      else
      {
        uint64_t v41 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      uint64_t v45 = *(void *)(v5 + 16);
      uint64_t v46 = v45 - 1;
      if (v45 >= 1 && v46 <= (int)v45 - 1 && *(void *)(*(void *)(v5 + 24) + 8 * v46) != 1)
      {
        uint64_t v42 = *(void *)(*(void *)(v5 + 64) + 8 * v46);
        goto LABEL_56;
      }
LABEL_55:
      uint64_t v42 = 0;
LABEL_56:
      *(float32x2_t *)(v40 + v42 * v38 + *(void *)(v5 + 40)) = vrnda_f32(*(float32x2_t *)&v39[v41 * v38
                                                                                              + *(void *)(v4 + 40)]);
      if (v11 == ++v38) {
        goto LABEL_39;
      }
    }
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<float,float,(mlir::mps::arithmeticOp)11>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v56 = **a4;
  uint64_t v57 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v24 = 1;
    }
    else
    {
      char v24 = v13;
    }
    if (*(unsigned char *)(v5 + 58)) {
      BOOL v20 = 1;
    }
    if (v14 > v22) {
      char v25 = 1;
    }
    else {
      char v25 = v18;
    }
    if (v11 > v23) {
      char v26 = 1;
    }
    else {
      char v26 = v16;
    }
    if (v10 > v23) {
      char v27 = 1;
    }
    else {
      char v27 = v24;
    }
    char v28 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v29 = *(void *)(v4 + 16), uint64_t v30 = v29 - 4, v29 < 4)
        || v30 > (int)v29 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v30) == 1)
      {
        uint64_t v31 = 0;
        if (v25) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v31 = *(void *)(*(void *)(v4 + 64) + 8 * v30);
        if (v25) {
          goto LABEL_34;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v14) != 1)
      {
        uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v14);
        if (v17 < 1) {
          goto LABEL_27;
        }
LABEL_37:
        uint64_t v33 = 0;
        uint64_t v34 = v57 + v31 * v19;
        uint64_t v35 = v56 + v32 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v36 = *(void *)(v4 + 16), v37 = v36 - 3, v36 < 3)
            || v37 > (int)v36 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v37) == 1)
          {
            uint64_t v38 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_44;
            }
            goto LABEL_45;
          }
          uint64_t v38 = *(void *)(*(void *)(v4 + 64) + 8 * v37);
          if (v26) {
            goto LABEL_45;
          }
LABEL_44:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_45:
            uint64_t v39 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_38;
          }
          uint64_t v39 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_38:
            if (++v33 == v17) {
              goto LABEL_27;
            }
            continue;
          }
          break;
        }
        uint64_t v40 = 0;
        uint64_t v41 = v34 + v38 * v33;
        uint64_t v42 = v35 + v39 * v33;
        while (2)
        {
          if (v21
            || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 2, v43 < 2)
            || v44 > (int)v43 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
          {
            uint64_t v45 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_56;
          }
          uint64_t v45 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
          if (v27) {
            goto LABEL_56;
          }
LABEL_55:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_56:
            uint64_t v46 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_49;
          }
          uint64_t v46 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_49:
            if (++v40 == v12) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        uint64_t v47 = 0;
        uint64_t v48 = v41 + v45 * v40;
        uint64_t v49 = *(void *)(v4 + 40);
        uint64_t v50 = *(void *)(v5 + 40);
        uint64_t v51 = v42 + v46 * v40;
        while (2)
        {
          if (v21
            || (uint64_t v54 = *(void *)(v4 + 16), v55 = v54 - 1, v54 < 1)
            || v55 > (int)v54 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v55) == 1)
          {
            uint64_t v53 = 0;
            if ((v28 & 1) == 0) {
              goto LABEL_64;
            }
          }
          else
          {
            uint64_t v53 = *(void *)(*(void *)(v4 + 64) + 8 * v55);
            if ((v28 & 1) == 0)
            {
LABEL_64:
              if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
              {
                uint64_t v52 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_61:
                *(float *)(v51 + v52 * v47 + v50) = roundf(*(float *)(v48 + v53 * v47 + v49));
                if (v9 == ++v47) {
                  goto LABEL_49;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v52 = 0;
        goto LABEL_61;
      }
LABEL_34:
      uint64_t v32 = 0;
      if (v17 >= 1) {
        goto LABEL_37;
      }
LABEL_27:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v14 = v6 - 4;
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t **mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)11>(uint64_t **result, uint64_t **a2, uint64_t **a3, uint64_t **a4, float16x4_t a5)
{
  uint64_t v5 = **result;
  uint64_t v6 = **a2;
  uint64_t v7 = **a3;
  uint64_t v8 = **a4;
  uint64_t v9 = *(void *)(v6 + 16);
  if (v9 < 1)
  {
    uint64_t v9 = 1;
    uint64_t v13 = 1;
    uint64_t v12 = 1;
    uint64_t v14 = 1;
    goto LABEL_10;
  }
  uint64_t v10 = *(void *)(v6 + 24);
  uint64_t v11 = v10 + 8 * v9;
  uint64_t v12 = *(void *)(v11 - 8);
  if (v9 == 1)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    goto LABEL_10;
  }
  uint64_t v13 = *(void *)(v11 - 16);
  if ((unint64_t)v9 < 3)
  {
    uint64_t v9 = 1;
    uint64_t v14 = 1;
    goto LABEL_10;
  }
  uint64_t v15 = v10 + 8 * v9;
  uint64_t v14 = *(void *)(v15 - 24);
  if (v9 == 3)
  {
    uint64_t v9 = 1;
    goto LABEL_10;
  }
  uint64_t v9 = *(void *)(v15 - 32);
  if (v9 >= 1)
  {
LABEL_10:
    uint64_t v16 = 0;
    while (1)
    {
      if (*(unsigned char *)(v5 + 58)
        || (uint64_t v17 = *(void *)(v5 + 16), v18 = v17 - 4, v17 < 4)
        || v18 > (int)v17 - 1
        || *(void *)(*(void *)(v5 + 24) + 8 * v18) == 1)
      {
        uint64_t result = 0;
        if (*(unsigned char *)(v6 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t result = *(uint64_t ***)(*(void *)(v5 + 64) + 8 * v18);
        if (*(unsigned char *)(v6 + 58)) {
          break;
        }
      }
      uint64_t v19 = *(void *)(v6 + 16);
      uint64_t v20 = v19 - 4;
      if (v19 < 4 || v20 > (int)v19 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v20) == 1) {
        break;
      }
      uint64_t v21 = *(void *)(*(void *)(v6 + 64) + 8 * v20);
      if (v14 >= 1) {
        goto LABEL_24;
      }
LABEL_11:
      if (++v16 == v9) {
        return result;
      }
    }
    uint64_t v21 = 0;
    if (v14 < 1) {
      goto LABEL_11;
    }
LABEL_24:
    uint64_t v22 = 0;
    uint64_t result = (uint64_t **)(v7 + (void)result * v16);
    uint64_t v23 = v8 + v21 * v16;
    while (1)
    {
      if (*(unsigned char *)(v5 + 58)
        || (uint64_t v24 = *(void *)(v5 + 16), v25 = v24 - 3, v24 < 3)
        || v25 > (int)v24 - 1
        || *(void *)(*(void *)(v5 + 24) + 8 * v25) == 1)
      {
        uint64_t v26 = 0;
        if (*(unsigned char *)(v6 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v26 = *(void *)(*(void *)(v5 + 64) + 8 * v25);
        if (*(unsigned char *)(v6 + 58)) {
          break;
        }
      }
      uint64_t v27 = *(void *)(v6 + 16);
      uint64_t v28 = v27 - 3;
      if (v27 < 3 || v28 > (int)v27 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v28) == 1) {
        break;
      }
      uint64_t v29 = *(void *)(*(void *)(v6 + 64) + 8 * v28);
      if (v13 >= 1) {
        goto LABEL_38;
      }
LABEL_25:
      if (++v22 == v14) {
        goto LABEL_11;
      }
    }
    uint64_t v29 = 0;
    if (v13 < 1) {
      goto LABEL_25;
    }
LABEL_38:
    uint64_t v30 = 0;
    uint64_t v31 = (char *)result + v26 * v22;
    uint64_t v32 = v23 + v29 * v22;
    while (1)
    {
      if (*(unsigned char *)(v5 + 58)
        || (v33 = *(void *)(v5 + 16), uint64_t v34 = v33 - 2, v33 < 2)
        || v34 > (int)v33 - 1
        || *(void *)(*(void *)(v5 + 24) + 8 * v34) == 1)
      {
        uint64_t v35 = 0;
        if (*(unsigned char *)(v6 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v35 = *(void *)(*(void *)(v5 + 64) + 8 * v34);
        if (*(unsigned char *)(v6 + 58)) {
          break;
        }
      }
      uint64_t v36 = *(void *)(v6 + 16);
      uint64_t v37 = v36 - 2;
      if (v36 < 2 || v37 > (int)v36 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v37) == 1) {
        break;
      }
      uint64_t v38 = *(void *)(*(void *)(v6 + 64) + 8 * v37);
      if (v12 >= 1) {
        goto LABEL_52;
      }
LABEL_39:
      if (++v30 == v13) {
        goto LABEL_25;
      }
    }
    uint64_t v38 = 0;
    if (v12 < 1) {
      goto LABEL_39;
    }
LABEL_52:
    uint64_t v39 = 0;
    uint64_t v40 = &v31[v35 * v30];
    uint64_t v41 = v32 + v38 * v30;
    while (1)
    {
      if (*(unsigned char *)(v5 + 58)
        || (uint64_t v44 = *(void *)(v5 + 16), v45 = v44 - 1, v44 < 1)
        || v45 > (int)v44 - 1
        || *(void *)(*(void *)(v5 + 24) + 8 * v45) == 1)
      {
        uint64_t v42 = 0;
        if (*(unsigned char *)(v6 + 58)) {
          goto LABEL_55;
        }
      }
      else
      {
        uint64_t v42 = *(void *)(*(void *)(v5 + 64) + 8 * v45);
        if (*(unsigned char *)(v6 + 58)) {
          goto LABEL_55;
        }
      }
      uint64_t v46 = *(void *)(v6 + 16);
      uint64_t v47 = v46 - 1;
      if (v46 >= 1 && v47 <= (int)v46 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v47) != 1)
      {
        uint64_t v43 = *(void *)(*(void *)(v6 + 64) + 8 * v47);
        goto LABEL_56;
      }
LABEL_55:
      uint64_t v43 = 0;
LABEL_56:
      a5.i32[0] = *(_DWORD *)&v40[v42 * v39 + *(void *)(v5 + 40)];
      a5 = (float16x4_t)vcvtq_f32_f16(vrnda_f16(a5)).u64[0];
      *(double *)(v41 + v43 * v39++ + *(void *)(v6 + 40)) = *(double *)&a5;
      if (v12 == v39) {
        goto LABEL_39;
      }
    }
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<half,float,(mlir::mps::arithmeticOp)11>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v62 = **a4;
  uint64_t v63 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v24 = 1;
    }
    else
    {
      char v24 = v13;
    }
    if (*(unsigned char *)(v5 + 58)) {
      BOOL v20 = 1;
    }
    if (v14 > v22) {
      char v25 = 1;
    }
    else {
      char v25 = v18;
    }
    if (v11 > v23) {
      char v26 = 1;
    }
    else {
      char v26 = v16;
    }
    if (v10 > v23) {
      char v27 = 1;
    }
    else {
      char v27 = v24;
    }
    char v28 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v29 = *(void *)(v4 + 16), uint64_t v30 = v29 - 4, v29 < 4)
        || v30 > (int)v29 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v30) == 1)
      {
        uint64_t v31 = 0;
        if (v25) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v31 = *(void *)(*(void *)(v4 + 64) + 8 * v30);
        if (v25) {
          goto LABEL_34;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v14) != 1)
      {
        uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v14);
        if (v17 < 1) {
          goto LABEL_27;
        }
LABEL_37:
        uint64_t v33 = 0;
        uint64_t v34 = v63 + v31 * v19;
        uint64_t v35 = v62 + v32 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v36 = *(void *)(v4 + 16), v37 = v36 - 3, v36 < 3)
            || v37 > (int)v36 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v37) == 1)
          {
            uint64_t v38 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_44;
            }
            goto LABEL_45;
          }
          uint64_t v38 = *(void *)(*(void *)(v4 + 64) + 8 * v37);
          if (v26) {
            goto LABEL_45;
          }
LABEL_44:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_45:
            uint64_t v39 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_38;
          }
          uint64_t v39 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_38:
            if (++v33 == v17) {
              goto LABEL_27;
            }
            continue;
          }
          break;
        }
        uint64_t v40 = 0;
        uint64_t v41 = v34 + v38 * v33;
        uint64_t v42 = v35 + v39 * v33;
        while (2)
        {
          if (v21
            || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 2, v43 < 2)
            || v44 > (int)v43 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
          {
            uint64_t v45 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_56;
          }
          uint64_t v45 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
          if (v27) {
            goto LABEL_56;
          }
LABEL_55:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_56:
            uint64_t v46 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_49;
          }
          uint64_t v46 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_49:
            if (++v40 == v12) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        uint64_t v47 = 0;
        uint64_t v48 = v41 + v45 * v40;
        uint64_t v49 = *(void *)(v4 + 40);
        uint64_t v50 = *(void *)(v5 + 40);
        uint64_t v51 = v42 + v46 * v40;
        while (2)
        {
          if (v21
            || (uint64_t v60 = *(void *)(v4 + 16), v61 = v60 - 1, v60 < 1)
            || v61 > (int)v60 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v61) == 1)
          {
            uint64_t v59 = 0;
            if ((v28 & 1) == 0) {
              goto LABEL_64;
            }
          }
          else
          {
            uint64_t v59 = *(void *)(*(void *)(v4 + 64) + 8 * v61);
            if ((v28 & 1) == 0)
            {
LABEL_64:
              if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
              {
                uint64_t v52 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_61:
                _H0 = roundl(*(short float *)(v48 + v59 * v47 + v49));
                __asm { FCVT            S0, H0 }
                *(_DWORD *)(v51 + v52 * v47++ + v50) = _S0;
                if (v9 == v47) {
                  goto LABEL_49;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v52 = 0;
        goto LABEL_61;
      }
LABEL_34:
      uint64_t v32 = 0;
      if (v17 >= 1) {
        goto LABEL_37;
      }
LABEL_27:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v14 = v6 - 4;
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t **mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<half,(void *)0>,(mlir::mps::arithmeticOp)11>(uint64_t **result, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **result;
  uint64_t v5 = **a2;
  uint64_t v6 = **a3;
  uint64_t v7 = **a4;
  uint64_t v8 = *(void *)(v5 + 16);
  if (v8 < 1)
  {
    uint64_t v8 = 1;
    uint64_t v12 = 1;
    uint64_t v11 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v9 = *(void *)(v5 + 24);
  uint64_t v10 = v9 + 8 * v8;
  uint64_t v11 = *(void *)(v10 - 8);
  if (v8 == 1)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v12 = *(void *)(v10 - 16);
  if ((unint64_t)v8 < 3)
  {
    uint64_t v8 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v14 = v9 + 8 * v8;
  uint64_t v13 = *(void *)(v14 - 24);
  if (v8 == 3)
  {
    uint64_t v8 = 1;
    goto LABEL_10;
  }
  uint64_t v8 = *(void *)(v14 - 32);
  if (v8 >= 1)
  {
LABEL_10:
    uint64_t v15 = 0;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v16 = *(void *)(v4 + 16), uint64_t v17 = v16 - 4, v16 < 4)
        || v17 > (int)v16 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v17) == 1)
      {
        uint64_t result = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t result = *(uint64_t ***)(*(void *)(v4 + 64) + 8 * v17);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v18 = *(void *)(v5 + 16);
      uint64_t v19 = v18 - 4;
      if (v18 < 4 || v19 > (int)v18 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v19) == 1) {
        break;
      }
      uint64_t v20 = *(void *)(*(void *)(v5 + 64) + 8 * v19);
      if (v13 >= 1) {
        goto LABEL_24;
      }
LABEL_11:
      if (++v15 == v8) {
        return result;
      }
    }
    uint64_t v20 = 0;
    if (v13 < 1) {
      goto LABEL_11;
    }
LABEL_24:
    uint64_t v21 = 0;
    uint64_t result = (uint64_t **)(v6 + (void)result * v15);
    uint64_t v22 = v7 + v20 * v15;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v23 = *(void *)(v4 + 16), uint64_t v24 = v23 - 3, v23 < 3)
        || v24 > (int)v23 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1)
      {
        uint64_t v25 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v26 = *(void *)(v5 + 16);
      uint64_t v27 = v26 - 3;
      if (v26 < 3 || v27 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v27) == 1) {
        break;
      }
      uint64_t v28 = *(void *)(*(void *)(v5 + 64) + 8 * v27);
      if (v12 >= 1) {
        goto LABEL_38;
      }
LABEL_25:
      if (++v21 == v13) {
        goto LABEL_11;
      }
    }
    uint64_t v28 = 0;
    if (v12 < 1) {
      goto LABEL_25;
    }
LABEL_38:
    uint64_t v29 = 0;
    uint64_t v30 = (char *)result + v25 * v21;
    uint64_t v31 = v22 + v28 * v21;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (uint64_t v32 = *(void *)(v4 + 16), v33 = v32 - 2, v32 < 2)
        || v33 > (int)v32 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v33) == 1)
      {
        uint64_t v34 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v34 = *(void *)(*(void *)(v4 + 64) + 8 * v33);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v35 = *(void *)(v5 + 16);
      uint64_t v36 = v35 - 2;
      if (v35 < 2 || v36 > (int)v35 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v36) == 1) {
        break;
      }
      uint64_t v37 = *(void *)(*(void *)(v5 + 64) + 8 * v36);
      if (v11 >= 1) {
        goto LABEL_52;
      }
LABEL_39:
      if (++v29 == v12) {
        goto LABEL_25;
      }
    }
    uint64_t v37 = 0;
    if (v11 < 1) {
      goto LABEL_39;
    }
LABEL_52:
    uint64_t v38 = 0;
    uint64_t v39 = &v30[v34 * v29];
    uint64_t v40 = v31 + v37 * v29;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (uint64_t v46 = *(void *)(v4 + 16), v47 = v46 - 1, v46 < 1)
        || v47 > (int)v46 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v47) == 1)
      {
        uint64_t v41 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      else
      {
        uint64_t v41 = *(void *)(*(void *)(v4 + 64) + 8 * v47);
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      uint64_t v48 = *(void *)(v5 + 16);
      uint64_t v49 = v48 - 1;
      if (v48 >= 1 && v49 <= (int)v48 - 1 && *(void *)(*(void *)(v5 + 24) + 8 * v49) != 1)
      {
        uint64_t v42 = *(void *)(*(void *)(v5 + 64) + 8 * v49);
        goto LABEL_56;
      }
LABEL_55:
      uint64_t v42 = 0;
LABEL_56:
      uint64_t v43 = (short float *)&v39[v41 * v38 + *(void *)(v4 + 40)];
      uint64_t v44 = (short float *)(v40 + v42 * v38 + *(void *)(v5 + 40));
      short float v45 = roundl(v43[1]);
      short float *v44 = roundl(*v43);
      v44[1] = v45;
      if (v11 == ++v38) {
        goto LABEL_39;
      }
    }
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<half,half,(mlir::mps::arithmeticOp)11>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v56 = **a4;
  uint64_t v57 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v24 = 1;
    }
    else
    {
      char v24 = v13;
    }
    if (*(unsigned char *)(v5 + 58)) {
      BOOL v20 = 1;
    }
    if (v14 > v22) {
      char v25 = 1;
    }
    else {
      char v25 = v18;
    }
    if (v11 > v23) {
      char v26 = 1;
    }
    else {
      char v26 = v16;
    }
    if (v10 > v23) {
      char v27 = 1;
    }
    else {
      char v27 = v24;
    }
    char v28 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v29 = *(void *)(v4 + 16), uint64_t v30 = v29 - 4, v29 < 4)
        || v30 > (int)v29 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v30) == 1)
      {
        uint64_t v31 = 0;
        if (v25) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v31 = *(void *)(*(void *)(v4 + 64) + 8 * v30);
        if (v25) {
          goto LABEL_34;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v14) != 1)
      {
        uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v14);
        if (v17 < 1) {
          goto LABEL_27;
        }
LABEL_37:
        uint64_t v33 = 0;
        uint64_t v34 = v57 + v31 * v19;
        uint64_t v35 = v56 + v32 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v36 = *(void *)(v4 + 16), v37 = v36 - 3, v36 < 3)
            || v37 > (int)v36 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v37) == 1)
          {
            uint64_t v38 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_44;
            }
            goto LABEL_45;
          }
          uint64_t v38 = *(void *)(*(void *)(v4 + 64) + 8 * v37);
          if (v26) {
            goto LABEL_45;
          }
LABEL_44:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_45:
            uint64_t v39 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_38;
          }
          uint64_t v39 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_38:
            if (++v33 == v17) {
              goto LABEL_27;
            }
            continue;
          }
          break;
        }
        uint64_t v40 = 0;
        uint64_t v41 = v34 + v38 * v33;
        uint64_t v42 = v35 + v39 * v33;
        while (2)
        {
          if (v21
            || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 2, v43 < 2)
            || v44 > (int)v43 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
          {
            uint64_t v45 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_56;
          }
          uint64_t v45 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
          if (v27) {
            goto LABEL_56;
          }
LABEL_55:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_56:
            uint64_t v46 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_49;
          }
          uint64_t v46 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_49:
            if (++v40 == v12) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        uint64_t v47 = 0;
        uint64_t v48 = v41 + v45 * v40;
        uint64_t v49 = *(void *)(v4 + 40);
        uint64_t v50 = *(void *)(v5 + 40);
        uint64_t v51 = v42 + v46 * v40;
        while (2)
        {
          if (v21
            || (uint64_t v54 = *(void *)(v4 + 16), v55 = v54 - 1, v54 < 1)
            || v55 > (int)v54 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v55) == 1)
          {
            uint64_t v53 = 0;
            if ((v28 & 1) == 0) {
              goto LABEL_64;
            }
          }
          else
          {
            uint64_t v53 = *(void *)(*(void *)(v4 + 64) + 8 * v55);
            if ((v28 & 1) == 0)
            {
LABEL_64:
              if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
              {
                uint64_t v52 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_61:
                *(short float *)(v51 + v52 * v47 + v50) = roundl(*(short float *)(v48 + v53 * v47 + v49));
                if (v9 == ++v47) {
                  goto LABEL_49;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v52 = 0;
        goto LABEL_61;
      }
LABEL_34:
      uint64_t v32 = 0;
      if (v17 >= 1) {
        goto LABEL_37;
      }
LABEL_27:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v14 = v6 - 4;
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t **mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<half,(void *)0>,(mlir::mps::arithmeticOp)11>(uint64_t **result, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **result;
  uint64_t v5 = **a2;
  uint64_t v6 = **a3;
  uint64_t v7 = **a4;
  uint64_t v8 = *(void *)(v5 + 16);
  if (v8 < 1)
  {
    uint64_t v8 = 1;
    uint64_t v12 = 1;
    uint64_t v11 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v9 = *(void *)(v5 + 24);
  uint64_t v10 = v9 + 8 * v8;
  uint64_t v11 = *(void *)(v10 - 8);
  if (v8 == 1)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v12 = *(void *)(v10 - 16);
  if ((unint64_t)v8 < 3)
  {
    uint64_t v8 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v14 = v9 + 8 * v8;
  uint64_t v13 = *(void *)(v14 - 24);
  if (v8 == 3)
  {
    uint64_t v8 = 1;
    goto LABEL_10;
  }
  uint64_t v8 = *(void *)(v14 - 32);
  if (v8 >= 1)
  {
LABEL_10:
    uint64_t v15 = 0;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v16 = *(void *)(v4 + 16), uint64_t v17 = v16 - 4, v16 < 4)
        || v17 > (int)v16 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v17) == 1)
      {
        uint64_t result = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t result = *(uint64_t ***)(*(void *)(v4 + 64) + 8 * v17);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v18 = *(void *)(v5 + 16);
      uint64_t v19 = v18 - 4;
      if (v18 < 4 || v19 > (int)v18 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v19) == 1) {
        break;
      }
      uint64_t v20 = *(void *)(*(void *)(v5 + 64) + 8 * v19);
      if (v13 >= 1) {
        goto LABEL_24;
      }
LABEL_11:
      if (++v15 == v8) {
        return result;
      }
    }
    uint64_t v20 = 0;
    if (v13 < 1) {
      goto LABEL_11;
    }
LABEL_24:
    uint64_t v21 = 0;
    uint64_t result = (uint64_t **)(v6 + (void)result * v15);
    uint64_t v22 = v7 + v20 * v15;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v23 = *(void *)(v4 + 16), uint64_t v24 = v23 - 3, v23 < 3)
        || v24 > (int)v23 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1)
      {
        uint64_t v25 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v26 = *(void *)(v5 + 16);
      uint64_t v27 = v26 - 3;
      if (v26 < 3 || v27 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v27) == 1) {
        break;
      }
      uint64_t v28 = *(void *)(*(void *)(v5 + 64) + 8 * v27);
      if (v12 >= 1) {
        goto LABEL_38;
      }
LABEL_25:
      if (++v21 == v13) {
        goto LABEL_11;
      }
    }
    uint64_t v28 = 0;
    if (v12 < 1) {
      goto LABEL_25;
    }
LABEL_38:
    uint64_t v29 = 0;
    uint64_t v30 = (char *)result + v25 * v21;
    uint64_t v31 = v22 + v28 * v21;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (uint64_t v32 = *(void *)(v4 + 16), v33 = v32 - 2, v32 < 2)
        || v33 > (int)v32 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v33) == 1)
      {
        uint64_t v34 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v34 = *(void *)(*(void *)(v4 + 64) + 8 * v33);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v35 = *(void *)(v5 + 16);
      uint64_t v36 = v35 - 2;
      if (v35 < 2 || v36 > (int)v35 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v36) == 1) {
        break;
      }
      uint64_t v37 = *(void *)(*(void *)(v5 + 64) + 8 * v36);
      if (v11 >= 1) {
        goto LABEL_52;
      }
LABEL_39:
      if (++v29 == v12) {
        goto LABEL_25;
      }
    }
    uint64_t v37 = 0;
    if (v11 < 1) {
      goto LABEL_39;
    }
LABEL_52:
    uint64_t v38 = 0;
    uint64_t v39 = &v30[v34 * v29];
    uint64_t v40 = v31 + v37 * v29;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v51 = *(void *)(v4 + 16), uint64_t v52 = v51 - 1, v51 < 1)
        || v52 > (int)v51 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v52) == 1)
      {
        uint64_t v41 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      else
      {
        uint64_t v41 = *(void *)(*(void *)(v4 + 64) + 8 * v52);
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      uint64_t v53 = *(void *)(v5 + 16);
      uint64_t v54 = v53 - 1;
      if (v53 >= 1 && v54 <= (int)v53 - 1 && *(void *)(*(void *)(v5 + 24) + 8 * v54) != 1)
      {
        uint64_t v42 = *(void *)(*(void *)(v5 + 64) + 8 * v54);
        goto LABEL_56;
      }
LABEL_55:
      uint64_t v42 = 0;
LABEL_56:
      uint64_t v43 = (float *)&v39[v41 * v38 + *(void *)(v4 + 40)];
      uint64_t v44 = (_WORD *)(v40 + v42 * v38 + *(void *)(v5 + 40));
      _S0 = roundf(*v43);
      _S1 = roundf(v43[1]);
      __asm
      {
        FCVT            H0, S0
        FCVT            H1, S1
      }
      _WORD *v44 = LOWORD(_S0);
      v44[1] = LOWORD(_S1);
      if (v11 == ++v38) {
        goto LABEL_39;
      }
    }
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<float,half,(mlir::mps::arithmeticOp)11>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v61 = **a4;
  uint64_t v62 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v24 = 1;
    }
    else
    {
      char v24 = v13;
    }
    if (*(unsigned char *)(v5 + 58)) {
      BOOL v20 = 1;
    }
    if (v14 > v22) {
      char v25 = 1;
    }
    else {
      char v25 = v18;
    }
    if (v11 > v23) {
      char v26 = 1;
    }
    else {
      char v26 = v16;
    }
    if (v10 > v23) {
      char v27 = 1;
    }
    else {
      char v27 = v24;
    }
    char v28 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v29 = *(void *)(v4 + 16), uint64_t v30 = v29 - 4, v29 < 4)
        || v30 > (int)v29 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v30) == 1)
      {
        uint64_t v31 = 0;
        if (v25) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v31 = *(void *)(*(void *)(v4 + 64) + 8 * v30);
        if (v25) {
          goto LABEL_34;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v14) != 1)
      {
        uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v14);
        if (v17 < 1) {
          goto LABEL_27;
        }
LABEL_37:
        uint64_t v33 = 0;
        uint64_t v34 = v62 + v31 * v19;
        uint64_t v35 = v61 + v32 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v36 = *(void *)(v4 + 16), v37 = v36 - 3, v36 < 3)
            || v37 > (int)v36 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v37) == 1)
          {
            uint64_t v38 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_44;
            }
            goto LABEL_45;
          }
          uint64_t v38 = *(void *)(*(void *)(v4 + 64) + 8 * v37);
          if (v26) {
            goto LABEL_45;
          }
LABEL_44:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_45:
            uint64_t v39 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_38;
          }
          uint64_t v39 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_38:
            if (++v33 == v17) {
              goto LABEL_27;
            }
            continue;
          }
          break;
        }
        uint64_t v40 = 0;
        uint64_t v41 = v34 + v38 * v33;
        uint64_t v42 = v35 + v39 * v33;
        while (2)
        {
          if (v21
            || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 2, v43 < 2)
            || v44 > (int)v43 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
          {
            uint64_t v45 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_56;
          }
          uint64_t v45 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
          if (v27) {
            goto LABEL_56;
          }
LABEL_55:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_56:
            uint64_t v46 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_49;
          }
          uint64_t v46 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_49:
            if (++v40 == v12) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        uint64_t v47 = 0;
        uint64_t v48 = v41 + v45 * v40;
        uint64_t v49 = *(void *)(v4 + 40);
        uint64_t v50 = *(void *)(v5 + 40);
        uint64_t v51 = v42 + v46 * v40;
        while (2)
        {
          if (v21
            || (v59 = *(void *)(v4 + 16), uint64_t v60 = v59 - 1, v59 < 1)
            || v60 > (int)v59 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v60) == 1)
          {
            uint64_t v58 = 0;
            if ((v28 & 1) == 0) {
              goto LABEL_64;
            }
          }
          else
          {
            uint64_t v58 = *(void *)(*(void *)(v4 + 64) + 8 * v60);
            if ((v28 & 1) == 0)
            {
LABEL_64:
              if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
              {
                uint64_t v52 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_61:
                _S0 = roundf(*(float *)(v48 + v58 * v47 + v49));
                __asm { FCVT            H0, S0 }
                *(_WORD *)(v51 + v52 * v47++ + v50) = LOWORD(_S0);
                if (v9 == v47) {
                  goto LABEL_49;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v52 = 0;
        goto LABEL_61;
      }
LABEL_34:
      uint64_t v32 = 0;
      if (v17 >= 1) {
        goto LABEL_37;
      }
LABEL_27:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v14 = v6 - 4;
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<__emulated_bf16,float,(mlir::mps::arithmeticOp)11>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v56 = **a4;
  uint64_t v57 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v24 = 1;
    }
    else
    {
      char v24 = v13;
    }
    if (*(unsigned char *)(v5 + 58)) {
      BOOL v20 = 1;
    }
    if (v14 > v22) {
      char v25 = 1;
    }
    else {
      char v25 = v18;
    }
    if (v11 > v23) {
      char v26 = 1;
    }
    else {
      char v26 = v16;
    }
    if (v10 > v23) {
      char v27 = 1;
    }
    else {
      char v27 = v24;
    }
    char v28 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v29 = *(void *)(v4 + 16), uint64_t v30 = v29 - 4, v29 < 4)
        || v30 > (int)v29 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v30) == 1)
      {
        uint64_t v31 = 0;
        if (v25) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v31 = *(void *)(*(void *)(v4 + 64) + 8 * v30);
        if (v25) {
          goto LABEL_34;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v14) != 1)
      {
        uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v14);
        if (v17 < 1) {
          goto LABEL_27;
        }
LABEL_37:
        uint64_t v33 = 0;
        uint64_t v34 = v57 + v31 * v19;
        uint64_t v35 = v56 + v32 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v36 = *(void *)(v4 + 16), v37 = v36 - 3, v36 < 3)
            || v37 > (int)v36 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v37) == 1)
          {
            uint64_t v38 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_44;
            }
            goto LABEL_45;
          }
          uint64_t v38 = *(void *)(*(void *)(v4 + 64) + 8 * v37);
          if (v26) {
            goto LABEL_45;
          }
LABEL_44:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_45:
            uint64_t v39 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_38;
          }
          uint64_t v39 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_38:
            if (++v33 == v17) {
              goto LABEL_27;
            }
            continue;
          }
          break;
        }
        uint64_t v40 = 0;
        uint64_t v41 = v34 + v38 * v33;
        uint64_t v42 = v35 + v39 * v33;
        while (2)
        {
          if (v21
            || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 2, v43 < 2)
            || v44 > (int)v43 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
          {
            uint64_t v45 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_56;
          }
          uint64_t v45 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
          if (v27) {
            goto LABEL_56;
          }
LABEL_55:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_56:
            uint64_t v46 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_49;
          }
          uint64_t v46 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_49:
            if (++v40 == v12) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        uint64_t v47 = 0;
        uint64_t v48 = v41 + v45 * v40;
        uint64_t v49 = *(void *)(v4 + 40);
        uint64_t v50 = *(void *)(v5 + 40);
        uint64_t v51 = v42 + v46 * v40;
        while (2)
        {
          if (v21
            || (uint64_t v54 = *(void *)(v4 + 16), v55 = v54 - 1, v54 < 1)
            || v55 > (int)v54 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v55) == 1)
          {
            uint64_t v53 = 0;
            if ((v28 & 1) == 0) {
              goto LABEL_64;
            }
          }
          else
          {
            uint64_t v53 = *(void *)(*(void *)(v4 + 64) + 8 * v55);
            if ((v28 & 1) == 0)
            {
LABEL_64:
              if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
              {
                uint64_t v52 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_61:
                *(float *)(v51 + v52 * v47 + v50) = roundf(COERCE_FLOAT(*(unsigned __int16 *)(v48 + v53 * v47 + v49) << 16));
                if (v9 == ++v47) {
                  goto LABEL_49;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v52 = 0;
        goto LABEL_61;
      }
LABEL_34:
      uint64_t v32 = 0;
      if (v17 >= 1) {
        goto LABEL_37;
      }
LABEL_27:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v14 = v6 - 4;
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<__emulated_bf16,__emulated_bf16,(mlir::mps::arithmeticOp)11>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v56 = **a4;
  uint64_t v57 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v13 = 1;
      BOOL v20 = 1;
    }
    uint64_t v55 = v14;
    if (v14 > v22) {
      char v24 = 1;
    }
    else {
      char v24 = v18;
    }
    if (v11 > v23) {
      char v16 = 1;
    }
    if (v10 > v23) {
      char v25 = 1;
    }
    else {
      char v25 = v13;
    }
    char v26 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v27 = *(void *)(v4 + 16), uint64_t v28 = v27 - 4, v27 < 4)
        || v28 > (int)v27 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v28) == 1)
      {
        uint64_t v29 = 0;
        if (v24) {
          goto LABEL_30;
        }
      }
      else
      {
        uint64_t v29 = *(void *)(*(void *)(v4 + 64) + 8 * v28);
        if (v24) {
          goto LABEL_30;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v55) != 1)
      {
        uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v55);
        if (v17 < 1) {
          goto LABEL_23;
        }
LABEL_33:
        uint64_t v31 = 0;
        uint64_t v32 = v57 + v29 * v19;
        uint64_t v33 = v56 + v30 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v34 = *(void *)(v4 + 16), v35 = v34 - 3, v34 < 3)
            || v35 > (int)v34 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v35) == 1)
          {
            uint64_t v36 = 0;
            if ((v16 & 1) == 0) {
              goto LABEL_40;
            }
            goto LABEL_41;
          }
          uint64_t v36 = *(void *)(*(void *)(v4 + 64) + 8 * v35);
          if (v16) {
            goto LABEL_41;
          }
LABEL_40:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_41:
            uint64_t v37 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_34;
          }
          uint64_t v37 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_34:
            if (++v31 == v17) {
              goto LABEL_23;
            }
            continue;
          }
          break;
        }
        uint64_t v38 = 0;
        uint64_t v39 = v32 + v36 * v31;
        uint64_t v40 = v33 + v37 * v31;
        while (2)
        {
          if (v21
            || (v41 = *(void *)(v4 + 16), uint64_t v42 = v41 - 2, v41 < 2)
            || v42 > (int)v41 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v42) == 1)
          {
            uint64_t v43 = 0;
            if ((v25 & 1) == 0) {
              goto LABEL_51;
            }
            goto LABEL_52;
          }
          uint64_t v43 = *(void *)(*(void *)(v4 + 64) + 8 * v42);
          if (v25) {
            goto LABEL_52;
          }
LABEL_51:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_52:
            uint64_t v44 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_45;
          }
          uint64_t v44 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_45:
            if (++v38 == v12) {
              goto LABEL_34;
            }
            continue;
          }
          break;
        }
        uint64_t v45 = 0;
        uint64_t v46 = v39 + v43 * v38;
        uint64_t v47 = *(void *)(v4 + 40);
        uint64_t v48 = *(void *)(v5 + 40);
        uint64_t v49 = v40 + v44 * v38;
        while (2)
        {
          if (v21
            || (uint64_t v52 = *(void *)(v4 + 16), v53 = v52 - 1, v52 < 1)
            || v53 > (int)v52 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v53) == 1)
          {
            uint64_t v50 = 0;
            if (v26) {
              goto LABEL_59;
            }
          }
          else
          {
            uint64_t v50 = *(void *)(*(void *)(v4 + 64) + 8 * v53);
            if (v26)
            {
LABEL_59:
              uint64_t v51 = 0;
              goto LABEL_66;
            }
          }
          if (*(void *)(*(void *)(v5 + 24) + 8 * v7) == 1) {
            goto LABEL_59;
          }
          uint64_t v51 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_66:
          float v54 = roundf(COERCE_FLOAT(*(unsigned __int16 *)(v46 + v50 * v45 + v47) << 16));
          *(_WORD *)(v48 + v49 + v51 * v45++) = HIWORD(COERCE_UNSIGNED_INT(v54 + (float)(COERCE_FLOAT(LODWORD(v54) & 0xFF800000)
                                                                                       * 0.0039062)));
          if (v9 == v45) {
            goto LABEL_45;
          }
          continue;
        }
      }
LABEL_30:
      uint64_t v30 = 0;
      if (v17 >= 1) {
        goto LABEL_33;
      }
LABEL_23:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    uint64_t v14 = v6 - 4;
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<float,__emulated_bf16,(mlir::mps::arithmeticOp)11>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v56 = **a4;
  uint64_t v57 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v13 = 1;
      BOOL v20 = 1;
    }
    uint64_t v55 = v14;
    if (v14 > v22) {
      char v24 = 1;
    }
    else {
      char v24 = v18;
    }
    if (v11 > v23) {
      char v16 = 1;
    }
    if (v10 > v23) {
      char v25 = 1;
    }
    else {
      char v25 = v13;
    }
    char v26 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v27 = *(void *)(v4 + 16), uint64_t v28 = v27 - 4, v27 < 4)
        || v28 > (int)v27 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v28) == 1)
      {
        uint64_t v29 = 0;
        if (v24) {
          goto LABEL_30;
        }
      }
      else
      {
        uint64_t v29 = *(void *)(*(void *)(v4 + 64) + 8 * v28);
        if (v24) {
          goto LABEL_30;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v55) != 1)
      {
        uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v55);
        if (v17 < 1) {
          goto LABEL_23;
        }
LABEL_33:
        uint64_t v31 = 0;
        uint64_t v32 = v57 + v29 * v19;
        uint64_t v33 = v56 + v30 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v34 = *(void *)(v4 + 16), v35 = v34 - 3, v34 < 3)
            || v35 > (int)v34 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v35) == 1)
          {
            uint64_t v36 = 0;
            if ((v16 & 1) == 0) {
              goto LABEL_40;
            }
            goto LABEL_41;
          }
          uint64_t v36 = *(void *)(*(void *)(v4 + 64) + 8 * v35);
          if (v16) {
            goto LABEL_41;
          }
LABEL_40:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_41:
            uint64_t v37 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_34;
          }
          uint64_t v37 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_34:
            if (++v31 == v17) {
              goto LABEL_23;
            }
            continue;
          }
          break;
        }
        uint64_t v38 = 0;
        uint64_t v39 = v32 + v36 * v31;
        uint64_t v40 = v33 + v37 * v31;
        while (2)
        {
          if (v21
            || (v41 = *(void *)(v4 + 16), uint64_t v42 = v41 - 2, v41 < 2)
            || v42 > (int)v41 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v42) == 1)
          {
            uint64_t v43 = 0;
            if ((v25 & 1) == 0) {
              goto LABEL_51;
            }
            goto LABEL_52;
          }
          uint64_t v43 = *(void *)(*(void *)(v4 + 64) + 8 * v42);
          if (v25) {
            goto LABEL_52;
          }
LABEL_51:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_52:
            uint64_t v44 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_45;
          }
          uint64_t v44 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_45:
            if (++v38 == v12) {
              goto LABEL_34;
            }
            continue;
          }
          break;
        }
        uint64_t v45 = 0;
        uint64_t v46 = v39 + v43 * v38;
        uint64_t v47 = *(void *)(v4 + 40);
        uint64_t v48 = *(void *)(v5 + 40);
        uint64_t v49 = v40 + v44 * v38;
        while (2)
        {
          if (v21
            || (uint64_t v52 = *(void *)(v4 + 16), v53 = v52 - 1, v52 < 1)
            || v53 > (int)v52 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v53) == 1)
          {
            uint64_t v50 = 0;
            if (v26) {
              goto LABEL_59;
            }
          }
          else
          {
            uint64_t v50 = *(void *)(*(void *)(v4 + 64) + 8 * v53);
            if (v26)
            {
LABEL_59:
              uint64_t v51 = 0;
              goto LABEL_66;
            }
          }
          if (*(void *)(*(void *)(v5 + 24) + 8 * v7) == 1) {
            goto LABEL_59;
          }
          uint64_t v51 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_66:
          float v54 = roundf(*(float *)(v46 + v50 * v45 + v47));
          *(_WORD *)(v48 + v49 + v51 * v45++) = HIWORD(COERCE_UNSIGNED_INT(v54 + (float)(COERCE_FLOAT(LODWORD(v54) & 0xFF800000)
                                                                                       * 0.0039062)));
          if (v9 == v45) {
            goto LABEL_45;
          }
          continue;
        }
      }
LABEL_30:
      uint64_t v30 = 0;
      if (v17 >= 1) {
        goto LABEL_33;
      }
LABEL_23:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    uint64_t v14 = v6 - 4;
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

void mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)12>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v43 = **a4;
  uint64_t v44 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6 < 1)
  {
    uint64_t v45 = 1;
    uint64_t v51 = 1;
    uint64_t v9 = 1;
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(v5 + 24);
  uint64_t v8 = v7 + 8 * v6;
  uint64_t v9 = *(void *)(v8 - 8);
  if (v6 == 1)
  {
    uint64_t v45 = 1;
    uint64_t v51 = 1;
LABEL_7:
    uint64_t v49 = 1;
LABEL_8:
    uint64_t v46 = 0;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v10 = *(void *)(v4 + 16), uint64_t v11 = v10 - 4, v10 < 4)
        || v11 > (int)v10 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v11) == 1)
      {
        uint64_t v12 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_20;
        }
      }
      else
      {
        uint64_t v12 = *(void *)(*(void *)(v4 + 64) + 8 * v11);
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_20;
        }
      }
      uint64_t v13 = *(void *)(v5 + 16);
      uint64_t v14 = v13 - 4;
      if (v13 >= 4 && v14 <= (int)v13 - 1 && *(void *)(*(void *)(v5 + 24) + 8 * v14) != 1)
      {
        uint64_t v15 = *(void *)(*(void *)(v5 + 64) + 8 * v14);
        goto LABEL_21;
      }
LABEL_20:
      uint64_t v15 = 0;
LABEL_21:
      if (v49 >= 1)
      {
        uint64_t v50 = 0;
        uint64_t v48 = v44 + v12 * v46;
        uint64_t v47 = v43 + v15 * v46;
        do
        {
          if (*(unsigned char *)(v4 + 58)
            || (v16 = *(void *)(v4 + 16), uint64_t v17 = v16 - 3, v16 < 3)
            || v17 > (int)v16 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v17) == 1)
          {
            uint64_t v18 = 0;
            if (*(unsigned char *)(v5 + 58)) {
              goto LABEL_34;
            }
          }
          else
          {
            uint64_t v18 = *(void *)(*(void *)(v4 + 64) + 8 * v17);
            if (*(unsigned char *)(v5 + 58)) {
              goto LABEL_34;
            }
          }
          uint64_t v19 = *(void *)(v5 + 16);
          uint64_t v20 = v19 - 3;
          if (v19 >= 3 && v20 <= (int)v19 - 1 && *(void *)(*(void *)(v5 + 24) + 8 * v20) != 1)
          {
            uint64_t v21 = *(void *)(*(void *)(v5 + 64) + 8 * v20);
            goto LABEL_35;
          }
LABEL_34:
          uint64_t v21 = 0;
LABEL_35:
          if (v51 >= 1)
          {
            uint64_t v22 = 0;
            uint64_t v23 = v48 + v18 * v50;
            uint64_t v24 = v47 + v21 * v50;
            while (1)
            {
              if (*(unsigned char *)(v4 + 58)
                || (v25 = *(void *)(v4 + 16), uint64_t v26 = v25 - 2, v25 < 2)
                || v26 > (int)v25 - 1
                || *(void *)(*(void *)(v4 + 24) + 8 * v26) == 1)
              {
                uint64_t v27 = 0;
                if (*(unsigned char *)(v5 + 58)) {
                  break;
                }
              }
              else
              {
                uint64_t v27 = *(void *)(*(void *)(v4 + 64) + 8 * v26);
                if (*(unsigned char *)(v5 + 58)) {
                  break;
                }
              }
              uint64_t v28 = *(void *)(v5 + 16);
              uint64_t v29 = v28 - 2;
              if (v28 < 2 || v29 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
                break;
              }
              uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
              if (v9 >= 1) {
                goto LABEL_50;
              }
LABEL_37:
              if (++v22 == v51) {
                goto LABEL_23;
              }
            }
            uint64_t v30 = 0;
            if (v9 < 1) {
              goto LABEL_37;
            }
LABEL_50:
            uint64_t v31 = 0;
            uint64_t v32 = v23 + v27 * v22;
            uint64_t v33 = v24 + v30 * v22;
            while (2)
            {
              if (!*(unsigned char *)(v4 + 58))
              {
                uint64_t v38 = *(void *)(v4 + 16);
                uint64_t v39 = v38 - 1;
                if (v38 >= 1 && v39 <= (int)v38 - 1 && *(void *)(*(void *)(v4 + 24) + 8 * v39) != 1)
                {
                  uint64_t v34 = *(void *)(*(void *)(v4 + 64) + 8 * v39);
                  if (!*(unsigned char *)(v5 + 58)) {
                    goto LABEL_60;
                  }
                  goto LABEL_53;
                }
              }
              uint64_t v34 = 0;
              if (*(unsigned char *)(v5 + 58)) {
                goto LABEL_53;
              }
LABEL_60:
              uint64_t v40 = *(void *)(v5 + 16);
              uint64_t v41 = v40 - 1;
              if (v40 < 1 || v41 > (int)v40 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v41) == 1) {
LABEL_53:
              }
                uint64_t v35 = 0;
              else {
                uint64_t v35 = *(void *)(*(void *)(v5 + 64) + 8 * v41);
              }
              uint64_t v36 = v33 + v35 * v31 + *(void *)(v5 + 40);
              uint64_t v52 = *(void *)(v32 + v34 * v31 + *(void *)(v4 + 40));
              uint64_t v53 = 1065353216;
              *(float *)uint64_t v36 = std::operator/[abi:nn180100]<float>((float *)&v53, (float *)&v52);
              *(_DWORD *)(v36 + 4) = v37;
              if (v9 == ++v31) {
                goto LABEL_37;
              }
              continue;
            }
          }
LABEL_23:
          ++v50;
        }
        while (v50 != v49);
      }
      if (++v46 == v45) {
        return;
      }
    }
  }
  uint64_t v51 = *(void *)(v8 - 16);
  if ((unint64_t)v6 < 3)
  {
    uint64_t v45 = 1;
    goto LABEL_7;
  }
  uint64_t v42 = v7 + 8 * v6;
  uint64_t v49 = *(void *)(v42 - 24);
  if (v6 == 3)
  {
    uint64_t v45 = 1;
    goto LABEL_8;
  }
  uint64_t v45 = *(void *)(v42 - 32);
  if (v45 >= 1) {
    goto LABEL_8;
  }
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<float,float,(mlir::mps::arithmeticOp)12>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v56 = **a4;
  uint64_t v57 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v24 = 1;
    }
    else
    {
      char v24 = v13;
    }
    if (*(unsigned char *)(v5 + 58)) {
      BOOL v20 = 1;
    }
    if (v14 > v22) {
      char v25 = 1;
    }
    else {
      char v25 = v18;
    }
    if (v11 > v23) {
      char v26 = 1;
    }
    else {
      char v26 = v16;
    }
    if (v10 > v23) {
      char v27 = 1;
    }
    else {
      char v27 = v24;
    }
    char v28 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v29 = *(void *)(v4 + 16), uint64_t v30 = v29 - 4, v29 < 4)
        || v30 > (int)v29 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v30) == 1)
      {
        uint64_t v31 = 0;
        if (v25) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v31 = *(void *)(*(void *)(v4 + 64) + 8 * v30);
        if (v25) {
          goto LABEL_34;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v14) != 1)
      {
        uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v14);
        if (v17 < 1) {
          goto LABEL_27;
        }
LABEL_37:
        uint64_t v33 = 0;
        uint64_t v34 = v57 + v31 * v19;
        uint64_t v35 = v56 + v32 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v36 = *(void *)(v4 + 16), v37 = v36 - 3, v36 < 3)
            || v37 > (int)v36 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v37) == 1)
          {
            uint64_t v38 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_44;
            }
            goto LABEL_45;
          }
          uint64_t v38 = *(void *)(*(void *)(v4 + 64) + 8 * v37);
          if (v26) {
            goto LABEL_45;
          }
LABEL_44:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_45:
            uint64_t v39 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_38;
          }
          uint64_t v39 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_38:
            if (++v33 == v17) {
              goto LABEL_27;
            }
            continue;
          }
          break;
        }
        uint64_t v40 = 0;
        uint64_t v41 = v34 + v38 * v33;
        uint64_t v42 = v35 + v39 * v33;
        while (2)
        {
          if (v21
            || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 2, v43 < 2)
            || v44 > (int)v43 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
          {
            uint64_t v45 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_56;
          }
          uint64_t v45 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
          if (v27) {
            goto LABEL_56;
          }
LABEL_55:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_56:
            uint64_t v46 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_49;
          }
          uint64_t v46 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_49:
            if (++v40 == v12) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        uint64_t v47 = 0;
        uint64_t v48 = v41 + v45 * v40;
        uint64_t v49 = *(void *)(v4 + 40);
        uint64_t v50 = *(void *)(v5 + 40);
        uint64_t v51 = v42 + v46 * v40;
        while (2)
        {
          if (v21
            || (uint64_t v54 = *(void *)(v4 + 16), v55 = v54 - 1, v54 < 1)
            || v55 > (int)v54 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v55) == 1)
          {
            uint64_t v53 = 0;
            if ((v28 & 1) == 0) {
              goto LABEL_64;
            }
          }
          else
          {
            uint64_t v53 = *(void *)(*(void *)(v4 + 64) + 8 * v55);
            if ((v28 & 1) == 0)
            {
LABEL_64:
              if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
              {
                uint64_t v52 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_61:
                *(float *)(v51 + v52 * v47 + v50) = 1.0 / *(float *)(v48 + v53 * v47 + v49);
                if (v9 == ++v47) {
                  goto LABEL_49;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v52 = 0;
        goto LABEL_61;
      }
LABEL_34:
      uint64_t v32 = 0;
      if (v17 >= 1) {
        goto LABEL_37;
      }
LABEL_27:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v14 = v6 - 4;
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

void mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)12>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4, double _D0)
{
  uint64_t v5 = **a1;
  uint64_t v6 = **a2;
  uint64_t v49 = **a4;
  uint64_t v50 = **a3;
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7 < 1)
  {
    uint64_t v51 = 1;
    uint64_t v57 = 1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v8 = *(void *)(v6 + 24);
  uint64_t v9 = v8 + 8 * v7;
  uint64_t v10 = *(void *)(v9 - 8);
  if (v7 == 1)
  {
    uint64_t v51 = 1;
    uint64_t v57 = 1;
LABEL_7:
    uint64_t v55 = 1;
LABEL_8:
    uint64_t v52 = 0;
    while (1)
    {
      if (*(unsigned char *)(v5 + 58)
        || (uint64_t v11 = *(void *)(v5 + 16), v12 = v11 - 4, v11 < 4)
        || v12 > (int)v11 - 1
        || *(void *)(*(void *)(v5 + 24) + 8 * v12) == 1)
      {
        uint64_t v13 = 0;
        if (*(unsigned char *)(v6 + 58)) {
          goto LABEL_20;
        }
      }
      else
      {
        uint64_t v13 = *(void *)(*(void *)(v5 + 64) + 8 * v12);
        if (*(unsigned char *)(v6 + 58)) {
          goto LABEL_20;
        }
      }
      uint64_t v14 = *(void *)(v6 + 16);
      uint64_t v15 = v14 - 4;
      if (v14 >= 4 && v15 <= (int)v14 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v15) != 1)
      {
        uint64_t v16 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
        goto LABEL_21;
      }
LABEL_20:
      uint64_t v16 = 0;
LABEL_21:
      if (v55 >= 1)
      {
        uint64_t v56 = 0;
        uint64_t v54 = v50 + v13 * v52;
        uint64_t v53 = v49 + v16 * v52;
        do
        {
          if (*(unsigned char *)(v5 + 58)
            || (uint64_t v17 = *(void *)(v5 + 16), v18 = v17 - 3, v17 < 3)
            || v18 > (int)v17 - 1
            || *(void *)(*(void *)(v5 + 24) + 8 * v18) == 1)
          {
            uint64_t v19 = 0;
            if (*(unsigned char *)(v6 + 58)) {
              goto LABEL_34;
            }
          }
          else
          {
            uint64_t v19 = *(void *)(*(void *)(v5 + 64) + 8 * v18);
            if (*(unsigned char *)(v6 + 58)) {
              goto LABEL_34;
            }
          }
          uint64_t v20 = *(void *)(v6 + 16);
          uint64_t v21 = v20 - 3;
          if (v20 >= 3 && v21 <= (int)v20 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v21) != 1)
          {
            uint64_t v22 = *(void *)(*(void *)(v6 + 64) + 8 * v21);
            goto LABEL_35;
          }
LABEL_34:
          uint64_t v22 = 0;
LABEL_35:
          if (v57 >= 1)
          {
            uint64_t v23 = 0;
            uint64_t v24 = v54 + v19 * v56;
            uint64_t v25 = v53 + v22 * v56;
            while (1)
            {
              if (*(unsigned char *)(v5 + 58)
                || (uint64_t v26 = *(void *)(v5 + 16), v27 = v26 - 2, v26 < 2)
                || v27 > (int)v26 - 1
                || *(void *)(*(void *)(v5 + 24) + 8 * v27) == 1)
              {
                uint64_t v28 = 0;
                if (*(unsigned char *)(v6 + 58)) {
                  break;
                }
              }
              else
              {
                uint64_t v28 = *(void *)(*(void *)(v5 + 64) + 8 * v27);
                if (*(unsigned char *)(v6 + 58)) {
                  break;
                }
              }
              uint64_t v29 = *(void *)(v6 + 16);
              uint64_t v30 = v29 - 2;
              if (v29 < 2 || v30 > (int)v29 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v30) == 1) {
                break;
              }
              uint64_t v31 = *(void *)(*(void *)(v6 + 64) + 8 * v30);
              if (v10 >= 1) {
                goto LABEL_50;
              }
LABEL_37:
              if (++v23 == v57) {
                goto LABEL_23;
              }
            }
            uint64_t v31 = 0;
            if (v10 < 1) {
              goto LABEL_37;
            }
LABEL_50:
            uint64_t v32 = 0;
            uint64_t v33 = v24 + v28 * v23;
            uint64_t v34 = v25 + v31 * v23;
            while (2)
            {
              if (!*(unsigned char *)(v5 + 58))
              {
                uint64_t v44 = *(void *)(v5 + 16);
                uint64_t v45 = v44 - 1;
                if (v44 >= 1 && v45 <= (int)v44 - 1 && *(void *)(*(void *)(v5 + 24) + 8 * v45) != 1)
                {
                  uint64_t v35 = *(void *)(*(void *)(v5 + 64) + 8 * v45);
                  if (!*(unsigned char *)(v6 + 58)) {
                    goto LABEL_60;
                  }
                  goto LABEL_53;
                }
              }
              uint64_t v35 = 0;
              if (*(unsigned char *)(v6 + 58)) {
                goto LABEL_53;
              }
LABEL_60:
              uint64_t v46 = *(void *)(v6 + 16);
              uint64_t v47 = v46 - 1;
              if (v46 < 1 || v47 > (int)v46 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v47) == 1) {
LABEL_53:
              }
                uint64_t v36 = 0;
              else {
                uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v47);
              }
              uint64_t v37 = (_DWORD *)(v34 + v36 * v32 + *(void *)(v6 + 40));
              LODWORD(_D0) = *(_DWORD *)(v33 + v35 * v32 + *(void *)(v5 + 40));
              unint64_t v58 = vcvtq_f32_f16(*(float16x4_t *)&_D0).u64[0];
              uint64_t v59 = 1065353216;
              *(float *)&_D0 = std::operator/[abi:nn180100]<float>((float *)&v59, (float *)&v58);
              __asm
              {
                FCVT            H0, S0
                FCVT            H1, S1
                FCVT            S0, H0
                FCVT            S1, H1
              }
              _DWORD *v37 = LODWORD(_D0);
              v37[1] = _S1;
              if (v10 == ++v32) {
                goto LABEL_37;
              }
              continue;
            }
          }
LABEL_23:
          ++v56;
        }
        while (v56 != v55);
      }
      if (++v52 == v51) {
        return;
      }
    }
  }
  uint64_t v57 = *(void *)(v9 - 16);
  if ((unint64_t)v7 < 3)
  {
    uint64_t v51 = 1;
    goto LABEL_7;
  }
  uint64_t v48 = v8 + 8 * v7;
  uint64_t v55 = *(void *)(v48 - 24);
  if (v7 == 3)
  {
    uint64_t v51 = 1;
    goto LABEL_8;
  }
  uint64_t v51 = *(void *)(v48 - 32);
  if (v51 >= 1) {
    goto LABEL_8;
  }
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<half,float,(mlir::mps::arithmeticOp)12>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v62 = **a4;
  uint64_t v63 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v24 = 1;
    }
    else
    {
      char v24 = v13;
    }
    if (*(unsigned char *)(v5 + 58)) {
      BOOL v20 = 1;
    }
    if (v14 > v22) {
      char v25 = 1;
    }
    else {
      char v25 = v18;
    }
    if (v11 > v23) {
      char v26 = 1;
    }
    else {
      char v26 = v16;
    }
    if (v10 > v23) {
      char v27 = 1;
    }
    else {
      char v27 = v24;
    }
    char v28 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v29 = *(void *)(v4 + 16), uint64_t v30 = v29 - 4, v29 < 4)
        || v30 > (int)v29 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v30) == 1)
      {
        uint64_t v31 = 0;
        if (v25) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v31 = *(void *)(*(void *)(v4 + 64) + 8 * v30);
        if (v25) {
          goto LABEL_34;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v14) != 1)
      {
        uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v14);
        if (v17 < 1) {
          goto LABEL_27;
        }
LABEL_37:
        uint64_t v33 = 0;
        uint64_t v34 = v63 + v31 * v19;
        uint64_t v35 = v62 + v32 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v36 = *(void *)(v4 + 16), v37 = v36 - 3, v36 < 3)
            || v37 > (int)v36 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v37) == 1)
          {
            uint64_t v38 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_44;
            }
            goto LABEL_45;
          }
          uint64_t v38 = *(void *)(*(void *)(v4 + 64) + 8 * v37);
          if (v26) {
            goto LABEL_45;
          }
LABEL_44:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_45:
            uint64_t v39 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_38;
          }
          uint64_t v39 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_38:
            if (++v33 == v17) {
              goto LABEL_27;
            }
            continue;
          }
          break;
        }
        uint64_t v40 = 0;
        uint64_t v41 = v34 + v38 * v33;
        uint64_t v42 = v35 + v39 * v33;
        while (2)
        {
          if (v21
            || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 2, v43 < 2)
            || v44 > (int)v43 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
          {
            uint64_t v45 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_56;
          }
          uint64_t v45 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
          if (v27) {
            goto LABEL_56;
          }
LABEL_55:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_56:
            uint64_t v46 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_49;
          }
          uint64_t v46 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_49:
            if (++v40 == v12) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        uint64_t v47 = 0;
        uint64_t v48 = v41 + v45 * v40;
        uint64_t v49 = *(void *)(v4 + 40);
        uint64_t v50 = *(void *)(v5 + 40);
        uint64_t v51 = v42 + v46 * v40;
        while (2)
        {
          if (v21
            || (uint64_t v60 = *(void *)(v4 + 16), v61 = v60 - 1, v60 < 1)
            || v61 > (int)v60 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v61) == 1)
          {
            uint64_t v59 = 0;
            if ((v28 & 1) == 0) {
              goto LABEL_64;
            }
          }
          else
          {
            uint64_t v59 = *(void *)(*(void *)(v4 + 64) + 8 * v61);
            if ((v28 & 1) == 0)
            {
LABEL_64:
              if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
              {
                uint64_t v52 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_61:
                _H1 = *(_WORD *)(v48 + v59 * v47 + v49);
                __asm { FCVT            S1, H1 }
                *(float *)(v51 + v52 * v47++ + v50) = 1.0 / _S1;
                if (v9 == v47) {
                  goto LABEL_49;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v52 = 0;
        goto LABEL_61;
      }
LABEL_34:
      uint64_t v32 = 0;
      if (v17 >= 1) {
        goto LABEL_37;
      }
LABEL_27:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v14 = v6 - 4;
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

void mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<half,(void *)0>,(mlir::mps::arithmeticOp)12>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4, double _D0)
{
  uint64_t v5 = **a1;
  uint64_t v6 = **a2;
  uint64_t v48 = **a4;
  uint64_t v49 = **a3;
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7 < 1)
  {
    uint64_t v50 = 1;
    uint64_t v56 = 1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v8 = *(void *)(v6 + 24);
  uint64_t v9 = v8 + 8 * v7;
  uint64_t v10 = *(void *)(v9 - 8);
  if (v7 == 1)
  {
    uint64_t v50 = 1;
    uint64_t v56 = 1;
LABEL_7:
    uint64_t v54 = 1;
LABEL_8:
    uint64_t v51 = 0;
    while (1)
    {
      if (*(unsigned char *)(v5 + 58)
        || (uint64_t v11 = *(void *)(v5 + 16), v12 = v11 - 4, v11 < 4)
        || v12 > (int)v11 - 1
        || *(void *)(*(void *)(v5 + 24) + 8 * v12) == 1)
      {
        uint64_t v13 = 0;
        if (*(unsigned char *)(v6 + 58)) {
          goto LABEL_20;
        }
      }
      else
      {
        uint64_t v13 = *(void *)(*(void *)(v5 + 64) + 8 * v12);
        if (*(unsigned char *)(v6 + 58)) {
          goto LABEL_20;
        }
      }
      uint64_t v14 = *(void *)(v6 + 16);
      uint64_t v15 = v14 - 4;
      if (v14 >= 4 && v15 <= (int)v14 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v15) != 1)
      {
        uint64_t v16 = *(void *)(*(void *)(v6 + 64) + 8 * v15);
        goto LABEL_21;
      }
LABEL_20:
      uint64_t v16 = 0;
LABEL_21:
      if (v54 >= 1)
      {
        uint64_t v55 = 0;
        uint64_t v53 = v49 + v13 * v51;
        uint64_t v52 = v48 + v16 * v51;
        do
        {
          if (*(unsigned char *)(v5 + 58)
            || (uint64_t v17 = *(void *)(v5 + 16), v18 = v17 - 3, v17 < 3)
            || v18 > (int)v17 - 1
            || *(void *)(*(void *)(v5 + 24) + 8 * v18) == 1)
          {
            uint64_t v19 = 0;
            if (*(unsigned char *)(v6 + 58)) {
              goto LABEL_34;
            }
          }
          else
          {
            uint64_t v19 = *(void *)(*(void *)(v5 + 64) + 8 * v18);
            if (*(unsigned char *)(v6 + 58)) {
              goto LABEL_34;
            }
          }
          uint64_t v20 = *(void *)(v6 + 16);
          uint64_t v21 = v20 - 3;
          if (v20 >= 3 && v21 <= (int)v20 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v21) != 1)
          {
            uint64_t v22 = *(void *)(*(void *)(v6 + 64) + 8 * v21);
            goto LABEL_35;
          }
LABEL_34:
          uint64_t v22 = 0;
LABEL_35:
          if (v56 >= 1)
          {
            uint64_t v23 = 0;
            uint64_t v24 = v53 + v19 * v55;
            uint64_t v25 = v52 + v22 * v55;
            while (1)
            {
              if (*(unsigned char *)(v5 + 58)
                || (uint64_t v26 = *(void *)(v5 + 16), v27 = v26 - 2, v26 < 2)
                || v27 > (int)v26 - 1
                || *(void *)(*(void *)(v5 + 24) + 8 * v27) == 1)
              {
                uint64_t v28 = 0;
                if (*(unsigned char *)(v6 + 58)) {
                  break;
                }
              }
              else
              {
                uint64_t v28 = *(void *)(*(void *)(v5 + 64) + 8 * v27);
                if (*(unsigned char *)(v6 + 58)) {
                  break;
                }
              }
              uint64_t v29 = *(void *)(v6 + 16);
              uint64_t v30 = v29 - 2;
              if (v29 < 2 || v30 > (int)v29 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v30) == 1) {
                break;
              }
              uint64_t v31 = *(void *)(*(void *)(v6 + 64) + 8 * v30);
              if (v10 >= 1) {
                goto LABEL_50;
              }
LABEL_37:
              if (++v23 == v56) {
                goto LABEL_23;
              }
            }
            uint64_t v31 = 0;
            if (v10 < 1) {
              goto LABEL_37;
            }
LABEL_50:
            uint64_t v32 = 0;
            uint64_t v33 = v24 + v28 * v23;
            uint64_t v34 = v25 + v31 * v23;
            while (2)
            {
              if (!*(unsigned char *)(v5 + 58))
              {
                uint64_t v43 = *(void *)(v5 + 16);
                uint64_t v44 = v43 - 1;
                if (v43 >= 1 && v44 <= (int)v43 - 1 && *(void *)(*(void *)(v5 + 24) + 8 * v44) != 1)
                {
                  uint64_t v35 = *(void *)(*(void *)(v5 + 64) + 8 * v44);
                  if (!*(unsigned char *)(v6 + 58)) {
                    goto LABEL_60;
                  }
                  goto LABEL_53;
                }
              }
              uint64_t v35 = 0;
              if (*(unsigned char *)(v6 + 58)) {
                goto LABEL_53;
              }
LABEL_60:
              uint64_t v45 = *(void *)(v6 + 16);
              uint64_t v46 = v45 - 1;
              if (v45 < 1 || v46 > (int)v45 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v46) == 1) {
LABEL_53:
              }
                uint64_t v36 = 0;
              else {
                uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v46);
              }
              uint64_t v37 = (_WORD *)(v34 + v36 * v32 + *(void *)(v6 + 40));
              LODWORD(_D0) = *(_DWORD *)(v33 + v35 * v32 + *(void *)(v5 + 40));
              unint64_t v57 = vcvtq_f32_f16(*(float16x4_t *)&_D0).u64[0];
              uint64_t v58 = 1065353216;
              *(float *)&_D0 = std::operator/[abi:nn180100]<float>((float *)&v58, (float *)&v57);
              __asm
              {
                FCVT            H0, S0
                FCVT            H1, S1
              }
              _WORD *v37 = LOWORD(_D0);
              v37[1] = _S1;
              if (v10 == ++v32) {
                goto LABEL_37;
              }
              continue;
            }
          }
LABEL_23:
          ++v55;
        }
        while (v55 != v54);
      }
      if (++v51 == v50) {
        return;
      }
    }
  }
  uint64_t v56 = *(void *)(v9 - 16);
  if ((unint64_t)v7 < 3)
  {
    uint64_t v50 = 1;
    goto LABEL_7;
  }
  uint64_t v47 = v8 + 8 * v7;
  uint64_t v54 = *(void *)(v47 - 24);
  if (v7 == 3)
  {
    uint64_t v50 = 1;
    goto LABEL_8;
  }
  uint64_t v50 = *(void *)(v47 - 32);
  if (v50 >= 1) {
    goto LABEL_8;
  }
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<half,half,(mlir::mps::arithmeticOp)12>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v56 = **a4;
  uint64_t v57 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v24 = 1;
    }
    else
    {
      char v24 = v13;
    }
    if (*(unsigned char *)(v5 + 58)) {
      BOOL v20 = 1;
    }
    if (v14 > v22) {
      char v25 = 1;
    }
    else {
      char v25 = v18;
    }
    if (v11 > v23) {
      char v26 = 1;
    }
    else {
      char v26 = v16;
    }
    if (v10 > v23) {
      char v27 = 1;
    }
    else {
      char v27 = v24;
    }
    char v28 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v29 = *(void *)(v4 + 16), uint64_t v30 = v29 - 4, v29 < 4)
        || v30 > (int)v29 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v30) == 1)
      {
        uint64_t v31 = 0;
        if (v25) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v31 = *(void *)(*(void *)(v4 + 64) + 8 * v30);
        if (v25) {
          goto LABEL_34;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v14) != 1)
      {
        uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v14);
        if (v17 < 1) {
          goto LABEL_27;
        }
LABEL_37:
        uint64_t v33 = 0;
        uint64_t v34 = v57 + v31 * v19;
        uint64_t v35 = v56 + v32 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v36 = *(void *)(v4 + 16), v37 = v36 - 3, v36 < 3)
            || v37 > (int)v36 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v37) == 1)
          {
            uint64_t v38 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_44;
            }
            goto LABEL_45;
          }
          uint64_t v38 = *(void *)(*(void *)(v4 + 64) + 8 * v37);
          if (v26) {
            goto LABEL_45;
          }
LABEL_44:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_45:
            uint64_t v39 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_38;
          }
          uint64_t v39 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_38:
            if (++v33 == v17) {
              goto LABEL_27;
            }
            continue;
          }
          break;
        }
        uint64_t v40 = 0;
        uint64_t v41 = v34 + v38 * v33;
        uint64_t v42 = v35 + v39 * v33;
        while (2)
        {
          if (v21
            || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 2, v43 < 2)
            || v44 > (int)v43 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
          {
            uint64_t v45 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_56;
          }
          uint64_t v45 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
          if (v27) {
            goto LABEL_56;
          }
LABEL_55:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_56:
            uint64_t v46 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_49;
          }
          uint64_t v46 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_49:
            if (++v40 == v12) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        uint64_t v47 = 0;
        uint64_t v48 = v41 + v45 * v40;
        uint64_t v49 = *(void *)(v4 + 40);
        uint64_t v50 = *(void *)(v5 + 40);
        uint64_t v51 = v42 + v46 * v40;
        while (2)
        {
          if (v21
            || (uint64_t v54 = *(void *)(v4 + 16), v55 = v54 - 1, v54 < 1)
            || v55 > (int)v54 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v55) == 1)
          {
            uint64_t v53 = 0;
            if ((v28 & 1) == 0) {
              goto LABEL_64;
            }
          }
          else
          {
            uint64_t v53 = *(void *)(*(void *)(v4 + 64) + 8 * v55);
            if ((v28 & 1) == 0)
            {
LABEL_64:
              if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
              {
                uint64_t v52 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_61:
                *(short float *)(v51 + v52 * v47 + v50) = COERCE_SHORT_FLOAT(COERCE_UNSIGNED_INT(1.0))
                                                        / *(short float *)(v48 + v53 * v47 + v49);
                if (v9 == ++v47) {
                  goto LABEL_49;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v52 = 0;
        goto LABEL_61;
      }
LABEL_34:
      uint64_t v32 = 0;
      if (v17 >= 1) {
        goto LABEL_37;
      }
LABEL_27:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v14 = v6 - 4;
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

void mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<half,(void *)0>,(mlir::mps::arithmeticOp)12>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v48 = **a4;
  uint64_t v49 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6 < 1)
  {
    uint64_t v50 = 1;
    uint64_t v56 = 1;
    uint64_t v9 = 1;
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(v5 + 24);
  uint64_t v8 = v7 + 8 * v6;
  uint64_t v9 = *(void *)(v8 - 8);
  if (v6 == 1)
  {
    uint64_t v50 = 1;
    uint64_t v56 = 1;
LABEL_7:
    uint64_t v54 = 1;
LABEL_8:
    uint64_t v51 = 0;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v10 = *(void *)(v4 + 16), uint64_t v11 = v10 - 4, v10 < 4)
        || v11 > (int)v10 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v11) == 1)
      {
        uint64_t v12 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_20;
        }
      }
      else
      {
        uint64_t v12 = *(void *)(*(void *)(v4 + 64) + 8 * v11);
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_20;
        }
      }
      uint64_t v13 = *(void *)(v5 + 16);
      uint64_t v14 = v13 - 4;
      if (v13 >= 4 && v14 <= (int)v13 - 1 && *(void *)(*(void *)(v5 + 24) + 8 * v14) != 1)
      {
        uint64_t v15 = *(void *)(*(void *)(v5 + 64) + 8 * v14);
        goto LABEL_21;
      }
LABEL_20:
      uint64_t v15 = 0;
LABEL_21:
      if (v54 >= 1)
      {
        uint64_t v55 = 0;
        uint64_t v53 = v49 + v12 * v51;
        uint64_t v52 = v48 + v15 * v51;
        do
        {
          if (*(unsigned char *)(v4 + 58)
            || (v16 = *(void *)(v4 + 16), uint64_t v17 = v16 - 3, v16 < 3)
            || v17 > (int)v16 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v17) == 1)
          {
            uint64_t v18 = 0;
            if (*(unsigned char *)(v5 + 58)) {
              goto LABEL_34;
            }
          }
          else
          {
            uint64_t v18 = *(void *)(*(void *)(v4 + 64) + 8 * v17);
            if (*(unsigned char *)(v5 + 58)) {
              goto LABEL_34;
            }
          }
          uint64_t v19 = *(void *)(v5 + 16);
          uint64_t v20 = v19 - 3;
          if (v19 >= 3 && v20 <= (int)v19 - 1 && *(void *)(*(void *)(v5 + 24) + 8 * v20) != 1)
          {
            uint64_t v21 = *(void *)(*(void *)(v5 + 64) + 8 * v20);
            goto LABEL_35;
          }
LABEL_34:
          uint64_t v21 = 0;
LABEL_35:
          if (v56 >= 1)
          {
            uint64_t v22 = 0;
            uint64_t v23 = v53 + v18 * v55;
            uint64_t v24 = v52 + v21 * v55;
            while (1)
            {
              if (*(unsigned char *)(v4 + 58)
                || (v25 = *(void *)(v4 + 16), uint64_t v26 = v25 - 2, v25 < 2)
                || v26 > (int)v25 - 1
                || *(void *)(*(void *)(v4 + 24) + 8 * v26) == 1)
              {
                uint64_t v27 = 0;
                if (*(unsigned char *)(v5 + 58)) {
                  break;
                }
              }
              else
              {
                uint64_t v27 = *(void *)(*(void *)(v4 + 64) + 8 * v26);
                if (*(unsigned char *)(v5 + 58)) {
                  break;
                }
              }
              uint64_t v28 = *(void *)(v5 + 16);
              uint64_t v29 = v28 - 2;
              if (v28 < 2 || v29 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
                break;
              }
              uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
              if (v9 >= 1) {
                goto LABEL_50;
              }
LABEL_37:
              if (++v22 == v56) {
                goto LABEL_23;
              }
            }
            uint64_t v30 = 0;
            if (v9 < 1) {
              goto LABEL_37;
            }
LABEL_50:
            uint64_t v31 = 0;
            uint64_t v32 = v23 + v27 * v22;
            uint64_t v33 = v24 + v30 * v22;
            while (2)
            {
              if (!*(unsigned char *)(v4 + 58))
              {
                uint64_t v43 = *(void *)(v4 + 16);
                uint64_t v44 = v43 - 1;
                if (v43 >= 1 && v44 <= (int)v43 - 1 && *(void *)(*(void *)(v4 + 24) + 8 * v44) != 1)
                {
                  uint64_t v34 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
                  if (!*(unsigned char *)(v5 + 58)) {
                    goto LABEL_60;
                  }
                  goto LABEL_53;
                }
              }
              uint64_t v34 = 0;
              if (*(unsigned char *)(v5 + 58)) {
                goto LABEL_53;
              }
LABEL_60:
              uint64_t v45 = *(void *)(v5 + 16);
              uint64_t v46 = v45 - 1;
              if (v45 < 1 || v46 > (int)v45 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v46) == 1) {
LABEL_53:
              }
                uint64_t v35 = 0;
              else {
                uint64_t v35 = *(void *)(*(void *)(v5 + 64) + 8 * v46);
              }
              uint64_t v36 = (_WORD *)(v33 + v35 * v31 + *(void *)(v5 + 40));
              uint64_t v57 = *(void *)(v32 + v34 * v31 + *(void *)(v4 + 40));
              uint64_t v58 = 1065353216;
              _S0 = std::operator/[abi:nn180100]<float>((float *)&v58, (float *)&v57);
              __asm
              {
                FCVT            H0, S0
                FCVT            H1, S1
              }
              _WORD *v36 = LOWORD(_S0);
              v36[1] = _S1;
              if (v9 == ++v31) {
                goto LABEL_37;
              }
              continue;
            }
          }
LABEL_23:
          ++v55;
        }
        while (v55 != v54);
      }
      if (++v51 == v50) {
        return;
      }
    }
  }
  uint64_t v56 = *(void *)(v8 - 16);
  if ((unint64_t)v6 < 3)
  {
    uint64_t v50 = 1;
    goto LABEL_7;
  }
  uint64_t v47 = v7 + 8 * v6;
  uint64_t v54 = *(void *)(v47 - 24);
  if (v6 == 3)
  {
    uint64_t v50 = 1;
    goto LABEL_8;
  }
  uint64_t v50 = *(void *)(v47 - 32);
  if (v50 >= 1) {
    goto LABEL_8;
  }
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<float,half,(mlir::mps::arithmeticOp)12>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v61 = **a4;
  uint64_t v62 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v24 = 1;
    }
    else
    {
      char v24 = v13;
    }
    if (*(unsigned char *)(v5 + 58)) {
      BOOL v20 = 1;
    }
    if (v14 > v22) {
      char v25 = 1;
    }
    else {
      char v25 = v18;
    }
    if (v11 > v23) {
      char v26 = 1;
    }
    else {
      char v26 = v16;
    }
    if (v10 > v23) {
      char v27 = 1;
    }
    else {
      char v27 = v24;
    }
    char v28 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v29 = *(void *)(v4 + 16), uint64_t v30 = v29 - 4, v29 < 4)
        || v30 > (int)v29 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v30) == 1)
      {
        uint64_t v31 = 0;
        if (v25) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v31 = *(void *)(*(void *)(v4 + 64) + 8 * v30);
        if (v25) {
          goto LABEL_34;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v14) != 1)
      {
        uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v14);
        if (v17 < 1) {
          goto LABEL_27;
        }
LABEL_37:
        uint64_t v33 = 0;
        uint64_t v34 = v62 + v31 * v19;
        uint64_t v35 = v61 + v32 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v36 = *(void *)(v4 + 16), v37 = v36 - 3, v36 < 3)
            || v37 > (int)v36 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v37) == 1)
          {
            uint64_t v38 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_44;
            }
            goto LABEL_45;
          }
          uint64_t v38 = *(void *)(*(void *)(v4 + 64) + 8 * v37);
          if (v26) {
            goto LABEL_45;
          }
LABEL_44:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_45:
            uint64_t v39 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_38;
          }
          uint64_t v39 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_38:
            if (++v33 == v17) {
              goto LABEL_27;
            }
            continue;
          }
          break;
        }
        uint64_t v40 = 0;
        uint64_t v41 = v34 + v38 * v33;
        uint64_t v42 = v35 + v39 * v33;
        while (2)
        {
          if (v21
            || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 2, v43 < 2)
            || v44 > (int)v43 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
          {
            uint64_t v45 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_56;
          }
          uint64_t v45 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
          if (v27) {
            goto LABEL_56;
          }
LABEL_55:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_56:
            uint64_t v46 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_49;
          }
          uint64_t v46 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_49:
            if (++v40 == v12) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        uint64_t v47 = 0;
        uint64_t v48 = v41 + v45 * v40;
        uint64_t v49 = *(void *)(v4 + 40);
        uint64_t v50 = *(void *)(v5 + 40);
        uint64_t v51 = v42 + v46 * v40;
        while (2)
        {
          if (v21
            || (v59 = *(void *)(v4 + 16), uint64_t v60 = v59 - 1, v59 < 1)
            || v60 > (int)v59 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v60) == 1)
          {
            uint64_t v58 = 0;
            if ((v28 & 1) == 0) {
              goto LABEL_64;
            }
          }
          else
          {
            uint64_t v58 = *(void *)(*(void *)(v4 + 64) + 8 * v60);
            if ((v28 & 1) == 0)
            {
LABEL_64:
              if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
              {
                uint64_t v52 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_61:
                _S1 = 1.0 / *(float *)(v48 + v58 * v47 + v49);
                __asm { FCVT            H1, S1 }
                *(_WORD *)(v51 + v52 * v47++ + v50) = LOWORD(_S1);
                if (v9 == v47) {
                  goto LABEL_49;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v52 = 0;
        goto LABEL_61;
      }
LABEL_34:
      uint64_t v32 = 0;
      if (v17 >= 1) {
        goto LABEL_37;
      }
LABEL_27:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v14 = v6 - 4;
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<__emulated_bf16,float,(mlir::mps::arithmeticOp)12>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v56 = **a4;
  uint64_t v57 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v24 = 1;
    }
    else
    {
      char v24 = v13;
    }
    if (*(unsigned char *)(v5 + 58)) {
      BOOL v20 = 1;
    }
    if (v14 > v22) {
      char v25 = 1;
    }
    else {
      char v25 = v18;
    }
    if (v11 > v23) {
      char v26 = 1;
    }
    else {
      char v26 = v16;
    }
    if (v10 > v23) {
      char v27 = 1;
    }
    else {
      char v27 = v24;
    }
    char v28 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v29 = *(void *)(v4 + 16), uint64_t v30 = v29 - 4, v29 < 4)
        || v30 > (int)v29 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v30) == 1)
      {
        uint64_t v31 = 0;
        if (v25) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v31 = *(void *)(*(void *)(v4 + 64) + 8 * v30);
        if (v25) {
          goto LABEL_34;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v14) != 1)
      {
        uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v14);
        if (v17 < 1) {
          goto LABEL_27;
        }
LABEL_37:
        uint64_t v33 = 0;
        uint64_t v34 = v57 + v31 * v19;
        uint64_t v35 = v56 + v32 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v36 = *(void *)(v4 + 16), v37 = v36 - 3, v36 < 3)
            || v37 > (int)v36 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v37) == 1)
          {
            uint64_t v38 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_44;
            }
            goto LABEL_45;
          }
          uint64_t v38 = *(void *)(*(void *)(v4 + 64) + 8 * v37);
          if (v26) {
            goto LABEL_45;
          }
LABEL_44:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_45:
            uint64_t v39 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_38;
          }
          uint64_t v39 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_38:
            if (++v33 == v17) {
              goto LABEL_27;
            }
            continue;
          }
          break;
        }
        uint64_t v40 = 0;
        uint64_t v41 = v34 + v38 * v33;
        uint64_t v42 = v35 + v39 * v33;
        while (2)
        {
          if (v21
            || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 2, v43 < 2)
            || v44 > (int)v43 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
          {
            uint64_t v45 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_56;
          }
          uint64_t v45 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
          if (v27) {
            goto LABEL_56;
          }
LABEL_55:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_56:
            uint64_t v46 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_49;
          }
          uint64_t v46 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_49:
            if (++v40 == v12) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        uint64_t v47 = 0;
        uint64_t v48 = v41 + v45 * v40;
        uint64_t v49 = *(void *)(v4 + 40);
        uint64_t v50 = *(void *)(v5 + 40);
        uint64_t v51 = v42 + v46 * v40;
        while (2)
        {
          if (v21
            || (uint64_t v54 = *(void *)(v4 + 16), v55 = v54 - 1, v54 < 1)
            || v55 > (int)v54 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v55) == 1)
          {
            uint64_t v53 = 0;
            if ((v28 & 1) == 0) {
              goto LABEL_64;
            }
          }
          else
          {
            uint64_t v53 = *(void *)(*(void *)(v4 + 64) + 8 * v55);
            if ((v28 & 1) == 0)
            {
LABEL_64:
              if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
              {
                uint64_t v52 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_61:
                *(float *)(v51 + v52 * v47 + v50) = 1.0
                                                  / COERCE_FLOAT(*(unsigned __int16 *)(v48 + v53 * v47 + v49) << 16);
                if (v9 == ++v47) {
                  goto LABEL_49;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v52 = 0;
        goto LABEL_61;
      }
LABEL_34:
      uint64_t v32 = 0;
      if (v17 >= 1) {
        goto LABEL_37;
      }
LABEL_27:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v14 = v6 - 4;
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<__emulated_bf16,__emulated_bf16,(mlir::mps::arithmeticOp)12>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v56 = **a4;
  uint64_t v57 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v13 = 1;
      BOOL v20 = 1;
    }
    uint64_t v55 = v14;
    if (v14 > v22) {
      char v24 = 1;
    }
    else {
      char v24 = v18;
    }
    if (v11 > v23) {
      char v16 = 1;
    }
    if (v10 > v23) {
      char v25 = 1;
    }
    else {
      char v25 = v13;
    }
    char v26 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v27 = *(void *)(v4 + 16), uint64_t v28 = v27 - 4, v27 < 4)
        || v28 > (int)v27 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v28) == 1)
      {
        uint64_t v29 = 0;
        if (v24) {
          goto LABEL_30;
        }
      }
      else
      {
        uint64_t v29 = *(void *)(*(void *)(v4 + 64) + 8 * v28);
        if (v24) {
          goto LABEL_30;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v55) != 1)
      {
        uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v55);
        if (v17 < 1) {
          goto LABEL_23;
        }
LABEL_33:
        uint64_t v31 = 0;
        uint64_t v32 = v57 + v29 * v19;
        uint64_t v33 = v56 + v30 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v34 = *(void *)(v4 + 16), v35 = v34 - 3, v34 < 3)
            || v35 > (int)v34 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v35) == 1)
          {
            uint64_t v36 = 0;
            if ((v16 & 1) == 0) {
              goto LABEL_40;
            }
            goto LABEL_41;
          }
          uint64_t v36 = *(void *)(*(void *)(v4 + 64) + 8 * v35);
          if (v16) {
            goto LABEL_41;
          }
LABEL_40:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_41:
            uint64_t v37 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_34;
          }
          uint64_t v37 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_34:
            if (++v31 == v17) {
              goto LABEL_23;
            }
            continue;
          }
          break;
        }
        uint64_t v38 = 0;
        uint64_t v39 = v32 + v36 * v31;
        uint64_t v40 = v33 + v37 * v31;
        while (2)
        {
          if (v21
            || (v41 = *(void *)(v4 + 16), uint64_t v42 = v41 - 2, v41 < 2)
            || v42 > (int)v41 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v42) == 1)
          {
            uint64_t v43 = 0;
            if ((v25 & 1) == 0) {
              goto LABEL_51;
            }
            goto LABEL_52;
          }
          uint64_t v43 = *(void *)(*(void *)(v4 + 64) + 8 * v42);
          if (v25) {
            goto LABEL_52;
          }
LABEL_51:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_52:
            uint64_t v44 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_45;
          }
          uint64_t v44 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_45:
            if (++v38 == v12) {
              goto LABEL_34;
            }
            continue;
          }
          break;
        }
        uint64_t v45 = 0;
        uint64_t v46 = v39 + v43 * v38;
        uint64_t v47 = *(void *)(v4 + 40);
        uint64_t v48 = *(void *)(v5 + 40);
        uint64_t v49 = v40 + v44 * v38;
        while (2)
        {
          if (v21
            || (uint64_t v52 = *(void *)(v4 + 16), v53 = v52 - 1, v52 < 1)
            || v53 > (int)v52 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v53) == 1)
          {
            uint64_t v50 = 0;
            if (v26) {
              goto LABEL_59;
            }
          }
          else
          {
            uint64_t v50 = *(void *)(*(void *)(v4 + 64) + 8 * v53);
            if (v26)
            {
LABEL_59:
              uint64_t v51 = 0;
              goto LABEL_66;
            }
          }
          if (*(void *)(*(void *)(v5 + 24) + 8 * v7) == 1) {
            goto LABEL_59;
          }
          uint64_t v51 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_66:
          float v54 = 1.0 / COERCE_FLOAT(*(unsigned __int16 *)(v46 + v50 * v45 + v47) << 16);
          *(_WORD *)(v48 + v49 + v51 * v45++) = HIWORD(COERCE_UNSIGNED_INT(v54 + (float)(COERCE_FLOAT(LODWORD(v54) & 0xFF800000)
                                                                                       * 0.0039062)));
          if (v9 == v45) {
            goto LABEL_45;
          }
          continue;
        }
      }
LABEL_30:
      uint64_t v30 = 0;
      if (v17 >= 1) {
        goto LABEL_33;
      }
LABEL_23:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    uint64_t v14 = v6 - 4;
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<float,__emulated_bf16,(mlir::mps::arithmeticOp)12>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v56 = **a4;
  uint64_t v57 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v13 = 1;
      BOOL v20 = 1;
    }
    uint64_t v55 = v14;
    if (v14 > v22) {
      char v24 = 1;
    }
    else {
      char v24 = v18;
    }
    if (v11 > v23) {
      char v16 = 1;
    }
    if (v10 > v23) {
      char v25 = 1;
    }
    else {
      char v25 = v13;
    }
    char v26 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v27 = *(void *)(v4 + 16), uint64_t v28 = v27 - 4, v27 < 4)
        || v28 > (int)v27 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v28) == 1)
      {
        uint64_t v29 = 0;
        if (v24) {
          goto LABEL_30;
        }
      }
      else
      {
        uint64_t v29 = *(void *)(*(void *)(v4 + 64) + 8 * v28);
        if (v24) {
          goto LABEL_30;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v55) != 1)
      {
        uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v55);
        if (v17 < 1) {
          goto LABEL_23;
        }
LABEL_33:
        uint64_t v31 = 0;
        uint64_t v32 = v57 + v29 * v19;
        uint64_t v33 = v56 + v30 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v34 = *(void *)(v4 + 16), v35 = v34 - 3, v34 < 3)
            || v35 > (int)v34 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v35) == 1)
          {
            uint64_t v36 = 0;
            if ((v16 & 1) == 0) {
              goto LABEL_40;
            }
            goto LABEL_41;
          }
          uint64_t v36 = *(void *)(*(void *)(v4 + 64) + 8 * v35);
          if (v16) {
            goto LABEL_41;
          }
LABEL_40:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_41:
            uint64_t v37 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_34;
          }
          uint64_t v37 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_34:
            if (++v31 == v17) {
              goto LABEL_23;
            }
            continue;
          }
          break;
        }
        uint64_t v38 = 0;
        uint64_t v39 = v32 + v36 * v31;
        uint64_t v40 = v33 + v37 * v31;
        while (2)
        {
          if (v21
            || (v41 = *(void *)(v4 + 16), uint64_t v42 = v41 - 2, v41 < 2)
            || v42 > (int)v41 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v42) == 1)
          {
            uint64_t v43 = 0;
            if ((v25 & 1) == 0) {
              goto LABEL_51;
            }
            goto LABEL_52;
          }
          uint64_t v43 = *(void *)(*(void *)(v4 + 64) + 8 * v42);
          if (v25) {
            goto LABEL_52;
          }
LABEL_51:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_52:
            uint64_t v44 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_45;
          }
          uint64_t v44 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_45:
            if (++v38 == v12) {
              goto LABEL_34;
            }
            continue;
          }
          break;
        }
        uint64_t v45 = 0;
        uint64_t v46 = v39 + v43 * v38;
        uint64_t v47 = *(void *)(v4 + 40);
        uint64_t v48 = *(void *)(v5 + 40);
        uint64_t v49 = v40 + v44 * v38;
        while (2)
        {
          if (v21
            || (uint64_t v52 = *(void *)(v4 + 16), v53 = v52 - 1, v52 < 1)
            || v53 > (int)v52 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v53) == 1)
          {
            uint64_t v50 = 0;
            if (v26) {
              goto LABEL_59;
            }
          }
          else
          {
            uint64_t v50 = *(void *)(*(void *)(v4 + 64) + 8 * v53);
            if (v26)
            {
LABEL_59:
              uint64_t v51 = 0;
              goto LABEL_66;
            }
          }
          if (*(void *)(*(void *)(v5 + 24) + 8 * v7) == 1) {
            goto LABEL_59;
          }
          uint64_t v51 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_66:
          float v54 = 1.0 / *(float *)(v46 + v50 * v45 + v47);
          *(_WORD *)(v48 + v49 + v51 * v45++) = HIWORD(COERCE_UNSIGNED_INT(v54 + (float)(COERCE_FLOAT(LODWORD(v54) & 0xFF800000)
                                                                                       * 0.0039062)));
          if (v9 == v45) {
            goto LABEL_45;
          }
          continue;
        }
      }
LABEL_30:
      uint64_t v30 = 0;
      if (v17 >= 1) {
        goto LABEL_33;
      }
LABEL_23:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    uint64_t v14 = v6 - 4;
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t **mlir::mps::arithmeticUnaryTileBaseKernel<long long,long long,(mlir::mps::arithmeticOp)12>(uint64_t **result, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **result;
  uint64_t v5 = **a2;
  uint64_t v6 = **a3;
  uint64_t v7 = **a4;
  uint64_t v8 = *(void *)(v5 + 16);
  if (v8 < 1)
  {
    uint64_t v8 = 1;
    uint64_t v12 = 1;
    uint64_t v11 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v9 = *(void *)(v5 + 24);
  uint64_t v10 = v9 + 8 * v8;
  uint64_t v11 = *(void *)(v10 - 8);
  if (v8 == 1)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v12 = *(void *)(v10 - 16);
  if ((unint64_t)v8 < 3)
  {
    uint64_t v8 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v14 = v9 + 8 * v8;
  uint64_t v13 = *(void *)(v14 - 24);
  if (v8 == 3)
  {
    uint64_t v8 = 1;
    goto LABEL_10;
  }
  uint64_t v8 = *(void *)(v14 - 32);
  if (v8 >= 1)
  {
LABEL_10:
    uint64_t v15 = 0;
    int v16 = *(unsigned __int8 *)(v4 + 58);
    uint64_t result = (uint64_t **)*(unsigned __int8 *)(v5 + 58);
    while (1)
    {
      if (v16
        || (uint64_t v17 = *(void *)(v4 + 16), v18 = v17 - 4, v17 < 4)
        || v18 > (int)v17 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v18) == 1)
      {
        uint64_t v19 = 0;
        if (result) {
          break;
        }
      }
      else
      {
        uint64_t v19 = *(void *)(*(void *)(v4 + 64) + 8 * v18);
        if (result) {
          break;
        }
      }
      uint64_t v20 = *(void *)(v5 + 16);
      uint64_t v21 = v20 - 4;
      if (v20 < 4 || v21 > (int)v20 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v21) == 1) {
        break;
      }
      uint64_t v22 = *(void *)(*(void *)(v5 + 64) + 8 * v21);
      if (v13 >= 1) {
        goto LABEL_24;
      }
LABEL_11:
      if (++v15 == v8) {
        return result;
      }
    }
    uint64_t v22 = 0;
    if (v13 < 1) {
      goto LABEL_11;
    }
LABEL_24:
    uint64_t v23 = 0;
    uint64_t v24 = v6 + v19 * v15;
    uint64_t v25 = v7 + v22 * v15;
    while (1)
    {
      if (v16
        || (uint64_t v26 = *(void *)(v4 + 16), v27 = v26 - 3, v26 < 3)
        || v27 > (int)v26 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v27) == 1)
      {
        uint64_t v28 = 0;
        if (result) {
          break;
        }
      }
      else
      {
        uint64_t v28 = *(void *)(*(void *)(v4 + 64) + 8 * v27);
        if (result) {
          break;
        }
      }
      uint64_t v29 = *(void *)(v5 + 16);
      uint64_t v30 = v29 - 3;
      if (v29 < 3 || v30 > (int)v29 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v30) == 1) {
        break;
      }
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v30);
      if (v12 >= 1) {
        goto LABEL_38;
      }
LABEL_25:
      if (++v23 == v13) {
        goto LABEL_11;
      }
    }
    uint64_t v31 = 0;
    if (v12 < 1) {
      goto LABEL_25;
    }
LABEL_38:
    uint64_t v32 = 0;
    uint64_t v33 = v24 + v28 * v23;
    uint64_t v34 = v25 + v31 * v23;
    while (1)
    {
      if (v16
        || (v35 = *(void *)(v4 + 16), uint64_t v36 = v35 - 2, v35 < 2)
        || v36 > (int)v35 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v36) == 1)
      {
        uint64_t v37 = 0;
        if (result) {
          break;
        }
      }
      else
      {
        uint64_t v37 = *(void *)(*(void *)(v4 + 64) + 8 * v36);
        if (result) {
          break;
        }
      }
      uint64_t v38 = *(void *)(v5 + 16);
      uint64_t v39 = v38 - 2;
      if (v38 < 2 || v39 > (int)v38 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v39) == 1) {
        break;
      }
      uint64_t v40 = *(void *)(*(void *)(v5 + 64) + 8 * v39);
      if (v11 >= 1) {
        goto LABEL_52;
      }
LABEL_39:
      if (++v32 == v12) {
        goto LABEL_25;
      }
    }
    uint64_t v40 = 0;
    if (v11 < 1) {
      goto LABEL_39;
    }
LABEL_52:
    uint64_t v41 = 0;
    uint64_t v42 = v33 + v37 * v32;
    uint64_t v43 = *(void *)(v4 + 40);
    uint64_t v44 = *(void *)(v5 + 40);
    uint64_t v45 = v34 + v40 * v32;
    while (1)
    {
      if (v16
        || (uint64_t v50 = *(void *)(v4 + 16), v51 = v50 - 1, v50 < 1)
        || v51 > (int)v50 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v51) == 1)
      {
        uint64_t v46 = 0;
        if (result) {
          goto LABEL_55;
        }
      }
      else
      {
        uint64_t v46 = *(void *)(*(void *)(v4 + 64) + 8 * v51);
        if (result) {
          goto LABEL_55;
        }
      }
      uint64_t v52 = *(void *)(v5 + 16);
      uint64_t v53 = v52 - 1;
      if (v52 >= 1 && v53 <= (int)v52 - 1 && *(void *)(*(void *)(v5 + 24) + 8 * v53) != 1)
      {
        uint64_t v47 = *(void *)(*(void *)(v5 + 64) + 8 * v53);
        goto LABEL_56;
      }
LABEL_55:
      uint64_t v47 = 0;
LABEL_56:
      uint64_t v48 = v45 + v47 * v41;
      uint64_t v49 = *(void *)(v42 + v46 * v41 + v43);
      if ((unint64_t)(v49 + 1) >= 3) {
        uint64_t v49 = 0;
      }
      *(void *)(v48 + v44) = v49;
      if (v11 == ++v41) {
        goto LABEL_39;
      }
    }
  }
  return result;
}

uint64_t **mlir::mps::arithmeticUnaryTileBaseKernel<int,int,(mlir::mps::arithmeticOp)12>(uint64_t **result, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **result;
  uint64_t v5 = **a2;
  uint64_t v57 = **a4;
  uint64_t v58 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t v59 = 1;
    char v15 = 1;
    uint64_t v16 = 1;
LABEL_7:
    char v17 = 1;
LABEL_8:
    uint64_t v18 = 0;
    BOOL v19 = v6 < 1;
    int v20 = *(unsigned __int8 *)(v4 + 58);
    int v21 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v17 = 1;
    }
    uint64_t v22 = v21;
    if (*(unsigned char *)(v5 + 58))
    {
      char v15 = 1;
      char v23 = 1;
    }
    else
    {
      char v23 = v13;
    }
    if (*(unsigned char *)(v5 + 58)) {
      BOOL v19 = 1;
    }
    if (v14 > v21) {
      char v24 = 1;
    }
    else {
      char v24 = v17;
    }
    if (v11 > v22) {
      char v25 = 1;
    }
    else {
      char v25 = v15;
    }
    if (v10 > v22) {
      char v26 = 1;
    }
    else {
      char v26 = v23;
    }
    char v27 = v7 > v22 || v19;
    uint64_t result = (uint64_t **)v14;
    while (1)
    {
      if (v20
        || (uint64_t v28 = *(void *)(v4 + 16), v29 = v28 - 4, v28 < 4)
        || v29 > (int)v28 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v29) == 1)
      {
        uint64_t v30 = 0;
        if (v24) {
          goto LABEL_35;
        }
      }
      else
      {
        uint64_t v30 = *(void *)(*(void *)(v4 + 64) + 8 * v29);
        if (v24) {
          goto LABEL_35;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v14) != 1)
      {
        uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v14);
        if (v16 < 1) {
          goto LABEL_28;
        }
LABEL_38:
        uint64_t v32 = 0;
        uint64_t v33 = v58 + v30 * v18;
        uint64_t v34 = v57 + v31 * v18;
        while (2)
        {
          if (v20
            || (v35 = *(void *)(v4 + 16), uint64_t v36 = v35 - 3, v35 < 3)
            || v36 > (int)v35 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v36) == 1)
          {
            uint64_t v37 = 0;
            if ((v25 & 1) == 0) {
              goto LABEL_45;
            }
            goto LABEL_46;
          }
          uint64_t v37 = *(void *)(*(void *)(v4 + 64) + 8 * v36);
          if (v25) {
            goto LABEL_46;
          }
LABEL_45:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_46:
            uint64_t v38 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_39;
          }
          uint64_t v38 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_39:
            if (++v32 == v16) {
              goto LABEL_28;
            }
            continue;
          }
          break;
        }
        uint64_t v39 = 0;
        uint64_t v40 = v33 + v37 * v32;
        uint64_t v41 = v34 + v38 * v32;
        while (2)
        {
          if (v20
            || (uint64_t v42 = *(void *)(v4 + 16), v43 = v42 - 2, v42 < 2)
            || v43 > (int)v42 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v43) == 1)
          {
            uint64_t v44 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_56;
            }
            goto LABEL_57;
          }
          uint64_t v44 = *(void *)(*(void *)(v4 + 64) + 8 * v43);
          if (v26) {
            goto LABEL_57;
          }
LABEL_56:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_57:
            uint64_t v45 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_50;
          }
          uint64_t v45 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_50:
            if (++v39 == v12) {
              goto LABEL_39;
            }
            continue;
          }
          break;
        }
        uint64_t v46 = 0;
        uint64_t v47 = v40 + v44 * v39;
        uint64_t v48 = *(void *)(v4 + 40);
        uint64_t v49 = *(void *)(v5 + 40);
        uint64_t v50 = v41 + v45 * v39;
        while (2)
        {
          if (v20
            || (v55 = *(void *)(v4 + 16), uint64_t v56 = v55 - 1, v55 < 1)
            || v56 > (int)v55 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v56) == 1)
          {
            uint64_t v54 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_67;
            }
          }
          else
          {
            uint64_t v54 = *(void *)(*(void *)(v4 + 64) + 8 * v56);
            if ((v27 & 1) == 0)
            {
LABEL_67:
              if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
              {
                uint64_t v51 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_62:
                uint64_t v52 = v50 + v51 * v46;
                int v53 = *(_DWORD *)(v47 + v54 * v46 + v48);
                if ((v53 + 1) >= 3) {
                  int v53 = 0;
                }
                *(_DWORD *)(v52 + v49) = v53;
                if (v9 == ++v46) {
                  goto LABEL_50;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v51 = 0;
        goto LABEL_62;
      }
LABEL_35:
      uint64_t v31 = 0;
      if (v16 >= 1) {
        goto LABEL_38;
      }
LABEL_28:
      ++v18;
      uint64_t v14 = (uint64_t)result;
      if (v18 == v59) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v16 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v15 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t v59 = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v14 = v6 - 4;
  uint64_t v59 = *(void *)(v8 + 8 * (v6 - 4));
  if (v59 >= 1)
  {
    char v15 = 0;
    char v13 = 0;
    char v17 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t **mlir::mps::arithmeticUnaryTileBaseKernel<short,short,(mlir::mps::arithmeticOp)12>(uint64_t **result, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **result;
  uint64_t v5 = **a2;
  uint64_t v57 = **a4;
  uint64_t v58 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t v59 = 1;
    char v15 = 1;
    uint64_t v16 = 1;
LABEL_7:
    char v17 = 1;
LABEL_8:
    uint64_t v18 = 0;
    BOOL v19 = v6 < 1;
    int v20 = *(unsigned __int8 *)(v4 + 58);
    int v21 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v17 = 1;
    }
    uint64_t v22 = v21;
    if (*(unsigned char *)(v5 + 58))
    {
      char v15 = 1;
      char v23 = 1;
    }
    else
    {
      char v23 = v13;
    }
    if (*(unsigned char *)(v5 + 58)) {
      BOOL v19 = 1;
    }
    if (v14 > v21) {
      char v24 = 1;
    }
    else {
      char v24 = v17;
    }
    if (v11 > v22) {
      char v25 = 1;
    }
    else {
      char v25 = v15;
    }
    if (v10 > v22) {
      char v26 = 1;
    }
    else {
      char v26 = v23;
    }
    char v27 = v7 > v22 || v19;
    uint64_t result = (uint64_t **)v14;
    while (1)
    {
      if (v20
        || (uint64_t v28 = *(void *)(v4 + 16), v29 = v28 - 4, v28 < 4)
        || v29 > (int)v28 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v29) == 1)
      {
        uint64_t v30 = 0;
        if (v24) {
          goto LABEL_35;
        }
      }
      else
      {
        uint64_t v30 = *(void *)(*(void *)(v4 + 64) + 8 * v29);
        if (v24) {
          goto LABEL_35;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v14) != 1)
      {
        uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v14);
        if (v16 < 1) {
          goto LABEL_28;
        }
LABEL_38:
        uint64_t v32 = 0;
        uint64_t v33 = v58 + v30 * v18;
        uint64_t v34 = v57 + v31 * v18;
        while (2)
        {
          if (v20
            || (v35 = *(void *)(v4 + 16), uint64_t v36 = v35 - 3, v35 < 3)
            || v36 > (int)v35 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v36) == 1)
          {
            uint64_t v37 = 0;
            if ((v25 & 1) == 0) {
              goto LABEL_45;
            }
            goto LABEL_46;
          }
          uint64_t v37 = *(void *)(*(void *)(v4 + 64) + 8 * v36);
          if (v25) {
            goto LABEL_46;
          }
LABEL_45:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_46:
            uint64_t v38 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_39;
          }
          uint64_t v38 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_39:
            if (++v32 == v16) {
              goto LABEL_28;
            }
            continue;
          }
          break;
        }
        uint64_t v39 = 0;
        uint64_t v40 = v33 + v37 * v32;
        uint64_t v41 = v34 + v38 * v32;
        while (2)
        {
          if (v20
            || (uint64_t v42 = *(void *)(v4 + 16), v43 = v42 - 2, v42 < 2)
            || v43 > (int)v42 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v43) == 1)
          {
            uint64_t v44 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_56;
            }
            goto LABEL_57;
          }
          uint64_t v44 = *(void *)(*(void *)(v4 + 64) + 8 * v43);
          if (v26) {
            goto LABEL_57;
          }
LABEL_56:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_57:
            uint64_t v45 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_50;
          }
          uint64_t v45 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_50:
            if (++v39 == v12) {
              goto LABEL_39;
            }
            continue;
          }
          break;
        }
        uint64_t v46 = 0;
        uint64_t v47 = v40 + v44 * v39;
        uint64_t v48 = *(void *)(v4 + 40);
        uint64_t v49 = *(void *)(v5 + 40);
        uint64_t v50 = v41 + v45 * v39;
        while (2)
        {
          if (v20
            || (v55 = *(void *)(v4 + 16), uint64_t v56 = v55 - 1, v55 < 1)
            || v56 > (int)v55 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v56) == 1)
          {
            uint64_t v54 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_67;
            }
          }
          else
          {
            uint64_t v54 = *(void *)(*(void *)(v4 + 64) + 8 * v56);
            if ((v27 & 1) == 0)
            {
LABEL_67:
              if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
              {
                uint64_t v51 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_62:
                uint64_t v52 = v50 + v51 * v46;
                __int16 v53 = *(_WORD *)(v47 + v54 * v46 + v48);
                if ((v53 + 1) >= 3) {
                  __int16 v53 = 0;
                }
                *(_WORD *)(v52 + v49) = v53;
                if (v9 == ++v46) {
                  goto LABEL_50;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v51 = 0;
        goto LABEL_62;
      }
LABEL_35:
      uint64_t v31 = 0;
      if (v16 >= 1) {
        goto LABEL_38;
      }
LABEL_28:
      ++v18;
      uint64_t v14 = (uint64_t)result;
      if (v18 == v59) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v16 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v15 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t v59 = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v14 = v6 - 4;
  uint64_t v59 = *(void *)(v8 + 8 * (v6 - 4));
  if (v59 >= 1)
  {
    char v15 = 0;
    char v13 = 0;
    char v17 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t **mlir::mps::arithmeticUnaryTileBaseKernel<signed char,signed char,(mlir::mps::arithmeticOp)12>(uint64_t **result, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **result;
  uint64_t v5 = **a2;
  uint64_t v6 = **a3;
  uint64_t v7 = **a4;
  uint64_t v8 = *(void *)(v5 + 16);
  if (v8 < 1)
  {
    uint64_t v8 = 1;
    uint64_t v12 = 1;
    uint64_t v11 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v9 = *(void *)(v5 + 24);
  uint64_t v10 = v9 + 8 * v8;
  uint64_t v11 = *(void *)(v10 - 8);
  if (v8 == 1)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v12 = *(void *)(v10 - 16);
  if ((unint64_t)v8 < 3)
  {
    uint64_t v8 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v14 = v9 + 8 * v8;
  uint64_t v13 = *(void *)(v14 - 24);
  if (v8 == 3)
  {
    uint64_t v8 = 1;
    goto LABEL_10;
  }
  uint64_t v8 = *(void *)(v14 - 32);
  if (v8 >= 1)
  {
LABEL_10:
    uint64_t v15 = 0;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v16 = *(void *)(v4 + 16), uint64_t v17 = v16 - 4, v16 < 4)
        || v17 > (int)v16 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v17) == 1)
      {
        uint64_t result = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t result = *(uint64_t ***)(*(void *)(v4 + 64) + 8 * v17);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v18 = *(void *)(v5 + 16);
      uint64_t v19 = v18 - 4;
      if (v18 < 4 || v19 > (int)v18 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v19) == 1) {
        break;
      }
      uint64_t v20 = *(void *)(*(void *)(v5 + 64) + 8 * v19);
      if (v13 >= 1) {
        goto LABEL_24;
      }
LABEL_11:
      if (++v15 == v8) {
        return result;
      }
    }
    uint64_t v20 = 0;
    if (v13 < 1) {
      goto LABEL_11;
    }
LABEL_24:
    uint64_t v21 = 0;
    uint64_t result = (uint64_t **)(v6 + (void)result * v15);
    uint64_t v22 = v7 + v20 * v15;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v23 = *(void *)(v4 + 16), uint64_t v24 = v23 - 3, v23 < 3)
        || v24 > (int)v23 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1)
      {
        uint64_t v25 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v26 = *(void *)(v5 + 16);
      uint64_t v27 = v26 - 3;
      if (v26 < 3 || v27 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v27) == 1) {
        break;
      }
      uint64_t v28 = *(void *)(*(void *)(v5 + 64) + 8 * v27);
      if (v12 >= 1) {
        goto LABEL_38;
      }
LABEL_25:
      if (++v21 == v13) {
        goto LABEL_11;
      }
    }
    uint64_t v28 = 0;
    if (v12 < 1) {
      goto LABEL_25;
    }
LABEL_38:
    uint64_t v29 = 0;
    uint64_t v30 = (char *)result + v25 * v21;
    uint64_t v31 = v22 + v28 * v21;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (uint64_t v32 = *(void *)(v4 + 16), v33 = v32 - 2, v32 < 2)
        || v33 > (int)v32 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v33) == 1)
      {
        uint64_t v34 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v34 = *(void *)(*(void *)(v4 + 64) + 8 * v33);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v35 = *(void *)(v5 + 16);
      uint64_t v36 = v35 - 2;
      if (v35 < 2 || v36 > (int)v35 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v36) == 1) {
        break;
      }
      uint64_t v37 = *(void *)(*(void *)(v5 + 64) + 8 * v36);
      if (v11 >= 1) {
        goto LABEL_52;
      }
LABEL_39:
      if (++v29 == v12) {
        goto LABEL_25;
      }
    }
    uint64_t v37 = 0;
    if (v11 < 1) {
      goto LABEL_39;
    }
LABEL_52:
    uint64_t v38 = 0;
    uint64_t v39 = &v30[v34 * v29];
    uint64_t v40 = v31 + v37 * v29;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v45 = *(void *)(v4 + 16), uint64_t v46 = v45 - 1, v45 < 1)
        || v46 > (int)v45 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v46) == 1)
      {
        uint64_t v41 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      else
      {
        uint64_t v41 = *(void *)(*(void *)(v4 + 64) + 8 * v46);
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      uint64_t v47 = *(void *)(v5 + 16);
      uint64_t v48 = v47 - 1;
      if (v47 >= 1 && v48 <= (int)v47 - 1 && *(void *)(*(void *)(v5 + 24) + 8 * v48) != 1)
      {
        uint64_t v42 = *(void *)(*(void *)(v5 + 64) + 8 * v48);
        goto LABEL_56;
      }
LABEL_55:
      uint64_t v42 = 0;
LABEL_56:
      uint64_t v43 = v40 + v42 * v38;
      char v44 = v39[v41 * v38 + *(void *)(v4 + 40)];
      if ((v44 + 1) >= 3) {
        char v44 = 0;
      }
      *(unsigned char *)(v43 + *(void *)(v5 + 40)) = v44;
      if (v11 == ++v38) {
        goto LABEL_39;
      }
    }
  }
  return result;
}

uint64_t **mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)13>(uint64_t **result, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **result;
  uint64_t v5 = **a2;
  uint64_t v6 = **a3;
  uint64_t v7 = **a4;
  uint64_t v8 = *(void *)(v5 + 16);
  if (v8 < 1)
  {
    uint64_t v8 = 1;
    uint64_t v12 = 1;
    uint64_t v11 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v9 = *(void *)(v5 + 24);
  uint64_t v10 = v9 + 8 * v8;
  uint64_t v11 = *(void *)(v10 - 8);
  if (v8 == 1)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v12 = *(void *)(v10 - 16);
  if ((unint64_t)v8 < 3)
  {
    uint64_t v8 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v14 = v9 + 8 * v8;
  uint64_t v13 = *(void *)(v14 - 24);
  if (v8 == 3)
  {
    uint64_t v8 = 1;
    goto LABEL_10;
  }
  uint64_t v8 = *(void *)(v14 - 32);
  if (v8 >= 1)
  {
LABEL_10:
    uint64_t v15 = 0;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v16 = *(void *)(v4 + 16), uint64_t v17 = v16 - 4, v16 < 4)
        || v17 > (int)v16 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v17) == 1)
      {
        uint64_t result = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t result = *(uint64_t ***)(*(void *)(v4 + 64) + 8 * v17);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v18 = *(void *)(v5 + 16);
      uint64_t v19 = v18 - 4;
      if (v18 < 4 || v19 > (int)v18 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v19) == 1) {
        break;
      }
      uint64_t v20 = *(void *)(*(void *)(v5 + 64) + 8 * v19);
      if (v13 >= 1) {
        goto LABEL_24;
      }
LABEL_11:
      if (++v15 == v8) {
        return result;
      }
    }
    uint64_t v20 = 0;
    if (v13 < 1) {
      goto LABEL_11;
    }
LABEL_24:
    uint64_t v21 = 0;
    uint64_t result = (uint64_t **)(v6 + (void)result * v15);
    uint64_t v22 = v7 + v20 * v15;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v23 = *(void *)(v4 + 16), uint64_t v24 = v23 - 3, v23 < 3)
        || v24 > (int)v23 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1)
      {
        uint64_t v25 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v26 = *(void *)(v5 + 16);
      uint64_t v27 = v26 - 3;
      if (v26 < 3 || v27 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v27) == 1) {
        break;
      }
      uint64_t v28 = *(void *)(*(void *)(v5 + 64) + 8 * v27);
      if (v12 >= 1) {
        goto LABEL_38;
      }
LABEL_25:
      if (++v21 == v13) {
        goto LABEL_11;
      }
    }
    uint64_t v28 = 0;
    if (v12 < 1) {
      goto LABEL_25;
    }
LABEL_38:
    uint64_t v29 = 0;
    uint64_t v30 = (char *)result + v25 * v21;
    uint64_t v31 = v22 + v28 * v21;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (uint64_t v32 = *(void *)(v4 + 16), v33 = v32 - 2, v32 < 2)
        || v33 > (int)v32 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v33) == 1)
      {
        uint64_t v34 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v34 = *(void *)(*(void *)(v4 + 64) + 8 * v33);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v35 = *(void *)(v5 + 16);
      uint64_t v36 = v35 - 2;
      if (v35 < 2 || v36 > (int)v35 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v36) == 1) {
        break;
      }
      uint64_t v37 = *(void *)(*(void *)(v5 + 64) + 8 * v36);
      if (v11 >= 1) {
        goto LABEL_52;
      }
LABEL_39:
      if (++v29 == v12) {
        goto LABEL_25;
      }
    }
    uint64_t v37 = 0;
    if (v11 < 1) {
      goto LABEL_39;
    }
LABEL_52:
    uint64_t v38 = 0;
    uint64_t v39 = &v30[v34 * v29];
    uint64_t v40 = v31 + v37 * v29;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 1, v43 < 1)
        || v44 > (int)v43 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
      {
        uint64_t v41 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      else
      {
        uint64_t v41 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      uint64_t v45 = *(void *)(v5 + 16);
      uint64_t v46 = v45 - 1;
      if (v45 >= 1 && v46 <= (int)v45 - 1 && *(void *)(*(void *)(v5 + 24) + 8 * v46) != 1)
      {
        uint64_t v42 = *(void *)(*(void *)(v5 + 64) + 8 * v46);
        goto LABEL_56;
      }
LABEL_55:
      uint64_t v42 = 0;
LABEL_56:
      *(void *)(v40 + v42 * v38 + *(void *)(v5 + 40)) = *(void *)&v39[v41 * v38 + *(void *)(v4 + 40)];
      if (v11 == ++v38) {
        goto LABEL_39;
      }
    }
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<float,float,(mlir::mps::arithmeticOp)13>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v56 = **a4;
  uint64_t v57 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v24 = 1;
    }
    else
    {
      char v24 = v13;
    }
    if (*(unsigned char *)(v5 + 58)) {
      BOOL v20 = 1;
    }
    if (v14 > v22) {
      char v25 = 1;
    }
    else {
      char v25 = v18;
    }
    if (v11 > v23) {
      char v26 = 1;
    }
    else {
      char v26 = v16;
    }
    if (v10 > v23) {
      char v27 = 1;
    }
    else {
      char v27 = v24;
    }
    char v28 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v29 = *(void *)(v4 + 16), uint64_t v30 = v29 - 4, v29 < 4)
        || v30 > (int)v29 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v30) == 1)
      {
        uint64_t v31 = 0;
        if (v25) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v31 = *(void *)(*(void *)(v4 + 64) + 8 * v30);
        if (v25) {
          goto LABEL_34;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v14) != 1)
      {
        uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v14);
        if (v17 < 1) {
          goto LABEL_27;
        }
LABEL_37:
        uint64_t v33 = 0;
        uint64_t v34 = v57 + v31 * v19;
        uint64_t v35 = v56 + v32 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v36 = *(void *)(v4 + 16), v37 = v36 - 3, v36 < 3)
            || v37 > (int)v36 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v37) == 1)
          {
            uint64_t v38 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_44;
            }
            goto LABEL_45;
          }
          uint64_t v38 = *(void *)(*(void *)(v4 + 64) + 8 * v37);
          if (v26) {
            goto LABEL_45;
          }
LABEL_44:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_45:
            uint64_t v39 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_38;
          }
          uint64_t v39 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_38:
            if (++v33 == v17) {
              goto LABEL_27;
            }
            continue;
          }
          break;
        }
        uint64_t v40 = 0;
        uint64_t v41 = v34 + v38 * v33;
        uint64_t v42 = v35 + v39 * v33;
        while (2)
        {
          if (v21
            || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 2, v43 < 2)
            || v44 > (int)v43 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
          {
            uint64_t v45 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_56;
          }
          uint64_t v45 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
          if (v27) {
            goto LABEL_56;
          }
LABEL_55:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_56:
            uint64_t v46 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_49;
          }
          uint64_t v46 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_49:
            if (++v40 == v12) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        uint64_t v47 = 0;
        uint64_t v48 = v41 + v45 * v40;
        uint64_t v49 = *(void *)(v4 + 40);
        uint64_t v50 = *(void *)(v5 + 40);
        uint64_t v51 = v42 + v46 * v40;
        while (2)
        {
          if (v21
            || (uint64_t v54 = *(void *)(v4 + 16), v55 = v54 - 1, v54 < 1)
            || v55 > (int)v54 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v55) == 1)
          {
            uint64_t v53 = 0;
            if ((v28 & 1) == 0) {
              goto LABEL_64;
            }
          }
          else
          {
            uint64_t v53 = *(void *)(*(void *)(v4 + 64) + 8 * v55);
            if ((v28 & 1) == 0)
            {
LABEL_64:
              if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
              {
                uint64_t v52 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_61:
                *(_DWORD *)(v51 + v52 * v47 + v50) = *(_DWORD *)(v48 + v53 * v47 + v49);
                if (v9 == ++v47) {
                  goto LABEL_49;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v52 = 0;
        goto LABEL_61;
      }
LABEL_34:
      uint64_t v32 = 0;
      if (v17 >= 1) {
        goto LABEL_37;
      }
LABEL_27:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v14 = v6 - 4;
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t **mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)13>(uint64_t **result, uint64_t **a2, uint64_t **a3, uint64_t **a4, float16x4_t a5)
{
  uint64_t v5 = **result;
  uint64_t v6 = **a2;
  uint64_t v7 = **a3;
  uint64_t v8 = **a4;
  uint64_t v9 = *(void *)(v6 + 16);
  if (v9 < 1)
  {
    uint64_t v9 = 1;
    uint64_t v13 = 1;
    uint64_t v12 = 1;
    uint64_t v14 = 1;
    goto LABEL_10;
  }
  uint64_t v10 = *(void *)(v6 + 24);
  uint64_t v11 = v10 + 8 * v9;
  uint64_t v12 = *(void *)(v11 - 8);
  if (v9 == 1)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    goto LABEL_10;
  }
  uint64_t v13 = *(void *)(v11 - 16);
  if ((unint64_t)v9 < 3)
  {
    uint64_t v9 = 1;
    uint64_t v14 = 1;
    goto LABEL_10;
  }
  uint64_t v15 = v10 + 8 * v9;
  uint64_t v14 = *(void *)(v15 - 24);
  if (v9 == 3)
  {
    uint64_t v9 = 1;
    goto LABEL_10;
  }
  uint64_t v9 = *(void *)(v15 - 32);
  if (v9 >= 1)
  {
LABEL_10:
    uint64_t v16 = 0;
    while (1)
    {
      if (*(unsigned char *)(v5 + 58)
        || (uint64_t v17 = *(void *)(v5 + 16), v18 = v17 - 4, v17 < 4)
        || v18 > (int)v17 - 1
        || *(void *)(*(void *)(v5 + 24) + 8 * v18) == 1)
      {
        uint64_t result = 0;
        if (*(unsigned char *)(v6 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t result = *(uint64_t ***)(*(void *)(v5 + 64) + 8 * v18);
        if (*(unsigned char *)(v6 + 58)) {
          break;
        }
      }
      uint64_t v19 = *(void *)(v6 + 16);
      uint64_t v20 = v19 - 4;
      if (v19 < 4 || v20 > (int)v19 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v20) == 1) {
        break;
      }
      uint64_t v21 = *(void *)(*(void *)(v6 + 64) + 8 * v20);
      if (v14 >= 1) {
        goto LABEL_24;
      }
LABEL_11:
      if (++v16 == v9) {
        return result;
      }
    }
    uint64_t v21 = 0;
    if (v14 < 1) {
      goto LABEL_11;
    }
LABEL_24:
    uint64_t v22 = 0;
    uint64_t result = (uint64_t **)(v7 + (void)result * v16);
    uint64_t v23 = v8 + v21 * v16;
    while (1)
    {
      if (*(unsigned char *)(v5 + 58)
        || (uint64_t v24 = *(void *)(v5 + 16), v25 = v24 - 3, v24 < 3)
        || v25 > (int)v24 - 1
        || *(void *)(*(void *)(v5 + 24) + 8 * v25) == 1)
      {
        uint64_t v26 = 0;
        if (*(unsigned char *)(v6 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v26 = *(void *)(*(void *)(v5 + 64) + 8 * v25);
        if (*(unsigned char *)(v6 + 58)) {
          break;
        }
      }
      uint64_t v27 = *(void *)(v6 + 16);
      uint64_t v28 = v27 - 3;
      if (v27 < 3 || v28 > (int)v27 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v28) == 1) {
        break;
      }
      uint64_t v29 = *(void *)(*(void *)(v6 + 64) + 8 * v28);
      if (v13 >= 1) {
        goto LABEL_38;
      }
LABEL_25:
      if (++v22 == v14) {
        goto LABEL_11;
      }
    }
    uint64_t v29 = 0;
    if (v13 < 1) {
      goto LABEL_25;
    }
LABEL_38:
    uint64_t v30 = 0;
    uint64_t v31 = (char *)result + v26 * v22;
    uint64_t v32 = v23 + v29 * v22;
    while (1)
    {
      if (*(unsigned char *)(v5 + 58)
        || (v33 = *(void *)(v5 + 16), uint64_t v34 = v33 - 2, v33 < 2)
        || v34 > (int)v33 - 1
        || *(void *)(*(void *)(v5 + 24) + 8 * v34) == 1)
      {
        uint64_t v35 = 0;
        if (*(unsigned char *)(v6 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v35 = *(void *)(*(void *)(v5 + 64) + 8 * v34);
        if (*(unsigned char *)(v6 + 58)) {
          break;
        }
      }
      uint64_t v36 = *(void *)(v6 + 16);
      uint64_t v37 = v36 - 2;
      if (v36 < 2 || v37 > (int)v36 - 1 || *(void *)(*(void *)(v6 + 24) + 8 * v37) == 1) {
        break;
      }
      uint64_t v38 = *(void *)(*(void *)(v6 + 64) + 8 * v37);
      if (v12 >= 1) {
        goto LABEL_52;
      }
LABEL_39:
      if (++v30 == v13) {
        goto LABEL_25;
      }
    }
    uint64_t v38 = 0;
    if (v12 < 1) {
      goto LABEL_39;
    }
LABEL_52:
    uint64_t v39 = 0;
    uint64_t v40 = &v31[v35 * v30];
    uint64_t v41 = v32 + v38 * v30;
    while (1)
    {
      if (*(unsigned char *)(v5 + 58)
        || (uint64_t v44 = *(void *)(v5 + 16), v45 = v44 - 1, v44 < 1)
        || v45 > (int)v44 - 1
        || *(void *)(*(void *)(v5 + 24) + 8 * v45) == 1)
      {
        uint64_t v42 = 0;
        if (*(unsigned char *)(v6 + 58)) {
          goto LABEL_55;
        }
      }
      else
      {
        uint64_t v42 = *(void *)(*(void *)(v5 + 64) + 8 * v45);
        if (*(unsigned char *)(v6 + 58)) {
          goto LABEL_55;
        }
      }
      uint64_t v46 = *(void *)(v6 + 16);
      uint64_t v47 = v46 - 1;
      if (v46 >= 1 && v47 <= (int)v46 - 1 && *(void *)(*(void *)(v6 + 24) + 8 * v47) != 1)
      {
        uint64_t v43 = *(void *)(*(void *)(v6 + 64) + 8 * v47);
        goto LABEL_56;
      }
LABEL_55:
      uint64_t v43 = 0;
LABEL_56:
      a5.i32[0] = *(_DWORD *)&v40[v42 * v39 + *(void *)(v5 + 40)];
      a5 = (float16x4_t)vcvtq_f32_f16(a5).u64[0];
      *(double *)(v41 + v43 * v39++ + *(void *)(v6 + 40)) = *(double *)&a5;
      if (v12 == v39) {
        goto LABEL_39;
      }
    }
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<half,float,(mlir::mps::arithmeticOp)13>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v62 = **a4;
  uint64_t v63 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v24 = 1;
    }
    else
    {
      char v24 = v13;
    }
    if (*(unsigned char *)(v5 + 58)) {
      BOOL v20 = 1;
    }
    if (v14 > v22) {
      char v25 = 1;
    }
    else {
      char v25 = v18;
    }
    if (v11 > v23) {
      char v26 = 1;
    }
    else {
      char v26 = v16;
    }
    if (v10 > v23) {
      char v27 = 1;
    }
    else {
      char v27 = v24;
    }
    char v28 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v29 = *(void *)(v4 + 16), uint64_t v30 = v29 - 4, v29 < 4)
        || v30 > (int)v29 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v30) == 1)
      {
        uint64_t v31 = 0;
        if (v25) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v31 = *(void *)(*(void *)(v4 + 64) + 8 * v30);
        if (v25) {
          goto LABEL_34;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v14) != 1)
      {
        uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v14);
        if (v17 < 1) {
          goto LABEL_27;
        }
LABEL_37:
        uint64_t v33 = 0;
        uint64_t v34 = v63 + v31 * v19;
        uint64_t v35 = v62 + v32 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v36 = *(void *)(v4 + 16), v37 = v36 - 3, v36 < 3)
            || v37 > (int)v36 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v37) == 1)
          {
            uint64_t v38 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_44;
            }
            goto LABEL_45;
          }
          uint64_t v38 = *(void *)(*(void *)(v4 + 64) + 8 * v37);
          if (v26) {
            goto LABEL_45;
          }
LABEL_44:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_45:
            uint64_t v39 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_38;
          }
          uint64_t v39 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_38:
            if (++v33 == v17) {
              goto LABEL_27;
            }
            continue;
          }
          break;
        }
        uint64_t v40 = 0;
        uint64_t v41 = v34 + v38 * v33;
        uint64_t v42 = v35 + v39 * v33;
        while (2)
        {
          if (v21
            || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 2, v43 < 2)
            || v44 > (int)v43 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
          {
            uint64_t v45 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_56;
          }
          uint64_t v45 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
          if (v27) {
            goto LABEL_56;
          }
LABEL_55:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_56:
            uint64_t v46 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_49;
          }
          uint64_t v46 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_49:
            if (++v40 == v12) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        uint64_t v47 = 0;
        uint64_t v48 = v41 + v45 * v40;
        uint64_t v49 = *(void *)(v4 + 40);
        uint64_t v50 = *(void *)(v5 + 40);
        uint64_t v51 = v42 + v46 * v40;
        while (2)
        {
          if (v21
            || (uint64_t v60 = *(void *)(v4 + 16), v61 = v60 - 1, v60 < 1)
            || v61 > (int)v60 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v61) == 1)
          {
            uint64_t v59 = 0;
            if ((v28 & 1) == 0) {
              goto LABEL_64;
            }
          }
          else
          {
            uint64_t v59 = *(void *)(*(void *)(v4 + 64) + 8 * v61);
            if ((v28 & 1) == 0)
            {
LABEL_64:
              if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
              {
                uint64_t v52 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_61:
                _H0 = *(_WORD *)(v48 + v59 * v47 + v49);
                __asm { FCVT            S0, H0 }
                *(_DWORD *)(v51 + v52 * v47++ + v50) = _S0;
                if (v9 == v47) {
                  goto LABEL_49;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v52 = 0;
        goto LABEL_61;
      }
LABEL_34:
      uint64_t v32 = 0;
      if (v17 >= 1) {
        goto LABEL_37;
      }
LABEL_27:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v14 = v6 - 4;
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t **mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<half,(void *)0>,(mlir::mps::arithmeticOp)13>(uint64_t **result, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **result;
  uint64_t v5 = **a2;
  uint64_t v6 = **a3;
  uint64_t v7 = **a4;
  uint64_t v8 = *(void *)(v5 + 16);
  if (v8 < 1)
  {
    uint64_t v8 = 1;
    uint64_t v12 = 1;
    uint64_t v11 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v9 = *(void *)(v5 + 24);
  uint64_t v10 = v9 + 8 * v8;
  uint64_t v11 = *(void *)(v10 - 8);
  if (v8 == 1)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v12 = *(void *)(v10 - 16);
  if ((unint64_t)v8 < 3)
  {
    uint64_t v8 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v14 = v9 + 8 * v8;
  uint64_t v13 = *(void *)(v14 - 24);
  if (v8 == 3)
  {
    uint64_t v8 = 1;
    goto LABEL_10;
  }
  uint64_t v8 = *(void *)(v14 - 32);
  if (v8 >= 1)
  {
LABEL_10:
    uint64_t v15 = 0;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v16 = *(void *)(v4 + 16), uint64_t v17 = v16 - 4, v16 < 4)
        || v17 > (int)v16 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v17) == 1)
      {
        uint64_t result = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t result = *(uint64_t ***)(*(void *)(v4 + 64) + 8 * v17);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v18 = *(void *)(v5 + 16);
      uint64_t v19 = v18 - 4;
      if (v18 < 4 || v19 > (int)v18 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v19) == 1) {
        break;
      }
      uint64_t v20 = *(void *)(*(void *)(v5 + 64) + 8 * v19);
      if (v13 >= 1) {
        goto LABEL_24;
      }
LABEL_11:
      if (++v15 == v8) {
        return result;
      }
    }
    uint64_t v20 = 0;
    if (v13 < 1) {
      goto LABEL_11;
    }
LABEL_24:
    uint64_t v21 = 0;
    uint64_t result = (uint64_t **)(v6 + (void)result * v15);
    uint64_t v22 = v7 + v20 * v15;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v23 = *(void *)(v4 + 16), uint64_t v24 = v23 - 3, v23 < 3)
        || v24 > (int)v23 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1)
      {
        uint64_t v25 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v26 = *(void *)(v5 + 16);
      uint64_t v27 = v26 - 3;
      if (v26 < 3 || v27 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v27) == 1) {
        break;
      }
      uint64_t v28 = *(void *)(*(void *)(v5 + 64) + 8 * v27);
      if (v12 >= 1) {
        goto LABEL_38;
      }
LABEL_25:
      if (++v21 == v13) {
        goto LABEL_11;
      }
    }
    uint64_t v28 = 0;
    if (v12 < 1) {
      goto LABEL_25;
    }
LABEL_38:
    uint64_t v29 = 0;
    uint64_t v30 = (char *)result + v25 * v21;
    uint64_t v31 = v22 + v28 * v21;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (uint64_t v32 = *(void *)(v4 + 16), v33 = v32 - 2, v32 < 2)
        || v33 > (int)v32 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v33) == 1)
      {
        uint64_t v34 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v34 = *(void *)(*(void *)(v4 + 64) + 8 * v33);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v35 = *(void *)(v5 + 16);
      uint64_t v36 = v35 - 2;
      if (v35 < 2 || v36 > (int)v35 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v36) == 1) {
        break;
      }
      uint64_t v37 = *(void *)(*(void *)(v5 + 64) + 8 * v36);
      if (v11 >= 1) {
        goto LABEL_52;
      }
LABEL_39:
      if (++v29 == v12) {
        goto LABEL_25;
      }
    }
    uint64_t v37 = 0;
    if (v11 < 1) {
      goto LABEL_39;
    }
LABEL_52:
    uint64_t v38 = 0;
    uint64_t v39 = &v30[v34 * v29];
    uint64_t v40 = v31 + v37 * v29;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 1, v43 < 1)
        || v44 > (int)v43 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
      {
        uint64_t v41 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      else
      {
        uint64_t v41 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      uint64_t v45 = *(void *)(v5 + 16);
      uint64_t v46 = v45 - 1;
      if (v45 >= 1 && v46 <= (int)v45 - 1 && *(void *)(*(void *)(v5 + 24) + 8 * v46) != 1)
      {
        uint64_t v42 = *(void *)(*(void *)(v5 + 64) + 8 * v46);
        goto LABEL_56;
      }
LABEL_55:
      uint64_t v42 = 0;
LABEL_56:
      *(_DWORD *)(v40 + v42 * v38 + *(void *)(v5 + 40)) = *(_DWORD *)&v39[v41 * v38 + *(void *)(v4 + 40)];
      if (v11 == ++v38) {
        goto LABEL_39;
      }
    }
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<half,half,(mlir::mps::arithmeticOp)13>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v56 = **a4;
  uint64_t v57 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v24 = 1;
    }
    else
    {
      char v24 = v13;
    }
    if (*(unsigned char *)(v5 + 58)) {
      BOOL v20 = 1;
    }
    if (v14 > v22) {
      char v25 = 1;
    }
    else {
      char v25 = v18;
    }
    if (v11 > v23) {
      char v26 = 1;
    }
    else {
      char v26 = v16;
    }
    if (v10 > v23) {
      char v27 = 1;
    }
    else {
      char v27 = v24;
    }
    char v28 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v29 = *(void *)(v4 + 16), uint64_t v30 = v29 - 4, v29 < 4)
        || v30 > (int)v29 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v30) == 1)
      {
        uint64_t v31 = 0;
        if (v25) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v31 = *(void *)(*(void *)(v4 + 64) + 8 * v30);
        if (v25) {
          goto LABEL_34;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v14) != 1)
      {
        uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v14);
        if (v17 < 1) {
          goto LABEL_27;
        }
LABEL_37:
        uint64_t v33 = 0;
        uint64_t v34 = v57 + v31 * v19;
        uint64_t v35 = v56 + v32 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v36 = *(void *)(v4 + 16), v37 = v36 - 3, v36 < 3)
            || v37 > (int)v36 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v37) == 1)
          {
            uint64_t v38 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_44;
            }
            goto LABEL_45;
          }
          uint64_t v38 = *(void *)(*(void *)(v4 + 64) + 8 * v37);
          if (v26) {
            goto LABEL_45;
          }
LABEL_44:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_45:
            uint64_t v39 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_38;
          }
          uint64_t v39 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_38:
            if (++v33 == v17) {
              goto LABEL_27;
            }
            continue;
          }
          break;
        }
        uint64_t v40 = 0;
        uint64_t v41 = v34 + v38 * v33;
        uint64_t v42 = v35 + v39 * v33;
        while (2)
        {
          if (v21
            || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 2, v43 < 2)
            || v44 > (int)v43 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
          {
            uint64_t v45 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_56;
          }
          uint64_t v45 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
          if (v27) {
            goto LABEL_56;
          }
LABEL_55:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_56:
            uint64_t v46 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_49;
          }
          uint64_t v46 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_49:
            if (++v40 == v12) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        uint64_t v47 = 0;
        uint64_t v48 = v41 + v45 * v40;
        uint64_t v49 = *(void *)(v4 + 40);
        uint64_t v50 = *(void *)(v5 + 40);
        uint64_t v51 = v42 + v46 * v40;
        while (2)
        {
          if (v21
            || (uint64_t v54 = *(void *)(v4 + 16), v55 = v54 - 1, v54 < 1)
            || v55 > (int)v54 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v55) == 1)
          {
            uint64_t v53 = 0;
            if ((v28 & 1) == 0) {
              goto LABEL_64;
            }
          }
          else
          {
            uint64_t v53 = *(void *)(*(void *)(v4 + 64) + 8 * v55);
            if ((v28 & 1) == 0)
            {
LABEL_64:
              if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
              {
                uint64_t v52 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_61:
                *(_WORD *)(v51 + v52 * v47 + v50) = *(_WORD *)(v48 + v53 * v47 + v49);
                if (v9 == ++v47) {
                  goto LABEL_49;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v52 = 0;
        goto LABEL_61;
      }
LABEL_34:
      uint64_t v32 = 0;
      if (v17 >= 1) {
        goto LABEL_37;
      }
LABEL_27:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v14 = v6 - 4;
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t **mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<half,(void *)0>,(mlir::mps::arithmeticOp)13>(uint64_t **result, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **result;
  uint64_t v5 = **a2;
  uint64_t v6 = **a3;
  uint64_t v7 = **a4;
  uint64_t v8 = *(void *)(v5 + 16);
  if (v8 < 1)
  {
    uint64_t v8 = 1;
    uint64_t v12 = 1;
    uint64_t v11 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v9 = *(void *)(v5 + 24);
  uint64_t v10 = v9 + 8 * v8;
  uint64_t v11 = *(void *)(v10 - 8);
  if (v8 == 1)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v12 = *(void *)(v10 - 16);
  if ((unint64_t)v8 < 3)
  {
    uint64_t v8 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v14 = v9 + 8 * v8;
  uint64_t v13 = *(void *)(v14 - 24);
  if (v8 == 3)
  {
    uint64_t v8 = 1;
    goto LABEL_10;
  }
  uint64_t v8 = *(void *)(v14 - 32);
  if (v8 >= 1)
  {
LABEL_10:
    uint64_t v15 = 0;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v16 = *(void *)(v4 + 16), uint64_t v17 = v16 - 4, v16 < 4)
        || v17 > (int)v16 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v17) == 1)
      {
        uint64_t result = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t result = *(uint64_t ***)(*(void *)(v4 + 64) + 8 * v17);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v18 = *(void *)(v5 + 16);
      uint64_t v19 = v18 - 4;
      if (v18 < 4 || v19 > (int)v18 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v19) == 1) {
        break;
      }
      uint64_t v20 = *(void *)(*(void *)(v5 + 64) + 8 * v19);
      if (v13 >= 1) {
        goto LABEL_24;
      }
LABEL_11:
      if (++v15 == v8) {
        return result;
      }
    }
    uint64_t v20 = 0;
    if (v13 < 1) {
      goto LABEL_11;
    }
LABEL_24:
    uint64_t v21 = 0;
    uint64_t result = (uint64_t **)(v6 + (void)result * v15);
    uint64_t v22 = v7 + v20 * v15;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v23 = *(void *)(v4 + 16), uint64_t v24 = v23 - 3, v23 < 3)
        || v24 > (int)v23 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1)
      {
        uint64_t v25 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v26 = *(void *)(v5 + 16);
      uint64_t v27 = v26 - 3;
      if (v26 < 3 || v27 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v27) == 1) {
        break;
      }
      uint64_t v28 = *(void *)(*(void *)(v5 + 64) + 8 * v27);
      if (v12 >= 1) {
        goto LABEL_38;
      }
LABEL_25:
      if (++v21 == v13) {
        goto LABEL_11;
      }
    }
    uint64_t v28 = 0;
    if (v12 < 1) {
      goto LABEL_25;
    }
LABEL_38:
    uint64_t v29 = 0;
    uint64_t v30 = (char *)result + v25 * v21;
    uint64_t v31 = v22 + v28 * v21;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (uint64_t v32 = *(void *)(v4 + 16), v33 = v32 - 2, v32 < 2)
        || v33 > (int)v32 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v33) == 1)
      {
        uint64_t v34 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v34 = *(void *)(*(void *)(v4 + 64) + 8 * v33);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v35 = *(void *)(v5 + 16);
      uint64_t v36 = v35 - 2;
      if (v35 < 2 || v36 > (int)v35 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v36) == 1) {
        break;
      }
      uint64_t v37 = *(void *)(*(void *)(v5 + 64) + 8 * v36);
      if (v11 >= 1) {
        goto LABEL_52;
      }
LABEL_39:
      if (++v29 == v12) {
        goto LABEL_25;
      }
    }
    uint64_t v37 = 0;
    if (v11 < 1) {
      goto LABEL_39;
    }
LABEL_52:
    uint64_t v38 = 0;
    uint64_t v39 = &v30[v34 * v29];
    uint64_t v40 = v31 + v37 * v29;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v51 = *(void *)(v4 + 16), uint64_t v52 = v51 - 1, v51 < 1)
        || v52 > (int)v51 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v52) == 1)
      {
        uint64_t v41 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      else
      {
        uint64_t v41 = *(void *)(*(void *)(v4 + 64) + 8 * v52);
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      uint64_t v53 = *(void *)(v5 + 16);
      uint64_t v54 = v53 - 1;
      if (v53 >= 1 && v54 <= (int)v53 - 1 && *(void *)(*(void *)(v5 + 24) + 8 * v54) != 1)
      {
        uint64_t v42 = *(void *)(*(void *)(v5 + 64) + 8 * v54);
        goto LABEL_56;
      }
LABEL_55:
      uint64_t v42 = 0;
LABEL_56:
      uint64_t v43 = &v39[v41 * v38 + *(void *)(v4 + 40)];
      uint64_t v44 = (_WORD *)(v40 + v42 * v38 + *(void *)(v5 + 40));
      _S0 = *(_DWORD *)v43;
      _S1 = *((_DWORD *)v43 + 1);
      __asm
      {
        FCVT            H0, S0
        FCVT            H1, S1
      }
      _WORD *v44 = _S0;
      v44[1] = _S1;
      if (v11 == ++v38) {
        goto LABEL_39;
      }
    }
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<float,half,(mlir::mps::arithmeticOp)13>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v61 = **a4;
  uint64_t v62 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v24 = 1;
    }
    else
    {
      char v24 = v13;
    }
    if (*(unsigned char *)(v5 + 58)) {
      BOOL v20 = 1;
    }
    if (v14 > v22) {
      char v25 = 1;
    }
    else {
      char v25 = v18;
    }
    if (v11 > v23) {
      char v26 = 1;
    }
    else {
      char v26 = v16;
    }
    if (v10 > v23) {
      char v27 = 1;
    }
    else {
      char v27 = v24;
    }
    char v28 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v29 = *(void *)(v4 + 16), uint64_t v30 = v29 - 4, v29 < 4)
        || v30 > (int)v29 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v30) == 1)
      {
        uint64_t v31 = 0;
        if (v25) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v31 = *(void *)(*(void *)(v4 + 64) + 8 * v30);
        if (v25) {
          goto LABEL_34;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v14) != 1)
      {
        uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v14);
        if (v17 < 1) {
          goto LABEL_27;
        }
LABEL_37:
        uint64_t v33 = 0;
        uint64_t v34 = v62 + v31 * v19;
        uint64_t v35 = v61 + v32 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v36 = *(void *)(v4 + 16), v37 = v36 - 3, v36 < 3)
            || v37 > (int)v36 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v37) == 1)
          {
            uint64_t v38 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_44;
            }
            goto LABEL_45;
          }
          uint64_t v38 = *(void *)(*(void *)(v4 + 64) + 8 * v37);
          if (v26) {
            goto LABEL_45;
          }
LABEL_44:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_45:
            uint64_t v39 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_38;
          }
          uint64_t v39 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_38:
            if (++v33 == v17) {
              goto LABEL_27;
            }
            continue;
          }
          break;
        }
        uint64_t v40 = 0;
        uint64_t v41 = v34 + v38 * v33;
        uint64_t v42 = v35 + v39 * v33;
        while (2)
        {
          if (v21
            || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 2, v43 < 2)
            || v44 > (int)v43 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
          {
            uint64_t v45 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_56;
          }
          uint64_t v45 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
          if (v27) {
            goto LABEL_56;
          }
LABEL_55:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_56:
            uint64_t v46 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_49;
          }
          uint64_t v46 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_49:
            if (++v40 == v12) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        uint64_t v47 = 0;
        uint64_t v48 = v41 + v45 * v40;
        uint64_t v49 = *(void *)(v4 + 40);
        uint64_t v50 = *(void *)(v5 + 40);
        uint64_t v51 = v42 + v46 * v40;
        while (2)
        {
          if (v21
            || (v59 = *(void *)(v4 + 16), uint64_t v60 = v59 - 1, v59 < 1)
            || v60 > (int)v59 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v60) == 1)
          {
            uint64_t v58 = 0;
            if ((v28 & 1) == 0) {
              goto LABEL_64;
            }
          }
          else
          {
            uint64_t v58 = *(void *)(*(void *)(v4 + 64) + 8 * v60);
            if ((v28 & 1) == 0)
            {
LABEL_64:
              if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
              {
                uint64_t v52 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_61:
                _S0 = *(_DWORD *)(v48 + v58 * v47 + v49);
                __asm { FCVT            H0, S0 }
                *(_WORD *)(v51 + v52 * v47++ + v50) = _S0;
                if (v9 == v47) {
                  goto LABEL_49;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v52 = 0;
        goto LABEL_61;
      }
LABEL_34:
      uint64_t v32 = 0;
      if (v17 >= 1) {
        goto LABEL_37;
      }
LABEL_27:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v14 = v6 - 4;
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<__emulated_bf16,float,(mlir::mps::arithmeticOp)13>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v56 = **a4;
  uint64_t v57 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v24 = 1;
    }
    else
    {
      char v24 = v13;
    }
    if (*(unsigned char *)(v5 + 58)) {
      BOOL v20 = 1;
    }
    if (v14 > v22) {
      char v25 = 1;
    }
    else {
      char v25 = v18;
    }
    if (v11 > v23) {
      char v26 = 1;
    }
    else {
      char v26 = v16;
    }
    if (v10 > v23) {
      char v27 = 1;
    }
    else {
      char v27 = v24;
    }
    char v28 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v29 = *(void *)(v4 + 16), uint64_t v30 = v29 - 4, v29 < 4)
        || v30 > (int)v29 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v30) == 1)
      {
        uint64_t v31 = 0;
        if (v25) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v31 = *(void *)(*(void *)(v4 + 64) + 8 * v30);
        if (v25) {
          goto LABEL_34;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v14) != 1)
      {
        uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v14);
        if (v17 < 1) {
          goto LABEL_27;
        }
LABEL_37:
        uint64_t v33 = 0;
        uint64_t v34 = v57 + v31 * v19;
        uint64_t v35 = v56 + v32 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v36 = *(void *)(v4 + 16), v37 = v36 - 3, v36 < 3)
            || v37 > (int)v36 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v37) == 1)
          {
            uint64_t v38 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_44;
            }
            goto LABEL_45;
          }
          uint64_t v38 = *(void *)(*(void *)(v4 + 64) + 8 * v37);
          if (v26) {
            goto LABEL_45;
          }
LABEL_44:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_45:
            uint64_t v39 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_38;
          }
          uint64_t v39 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_38:
            if (++v33 == v17) {
              goto LABEL_27;
            }
            continue;
          }
          break;
        }
        uint64_t v40 = 0;
        uint64_t v41 = v34 + v38 * v33;
        uint64_t v42 = v35 + v39 * v33;
        while (2)
        {
          if (v21
            || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 2, v43 < 2)
            || v44 > (int)v43 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
          {
            uint64_t v45 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_56;
          }
          uint64_t v45 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
          if (v27) {
            goto LABEL_56;
          }
LABEL_55:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_56:
            uint64_t v46 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_49;
          }
          uint64_t v46 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_49:
            if (++v40 == v12) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        uint64_t v47 = 0;
        uint64_t v48 = v41 + v45 * v40;
        uint64_t v49 = *(void *)(v4 + 40);
        uint64_t v50 = *(void *)(v5 + 40);
        uint64_t v51 = v42 + v46 * v40;
        while (2)
        {
          if (v21
            || (uint64_t v54 = *(void *)(v4 + 16), v55 = v54 - 1, v54 < 1)
            || v55 > (int)v54 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v55) == 1)
          {
            uint64_t v53 = 0;
            if ((v28 & 1) == 0) {
              goto LABEL_64;
            }
          }
          else
          {
            uint64_t v53 = *(void *)(*(void *)(v4 + 64) + 8 * v55);
            if ((v28 & 1) == 0)
            {
LABEL_64:
              if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
              {
                uint64_t v52 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_61:
                *(_DWORD *)(v51 + v52 * v47 + v50) = *(unsigned __int16 *)(v48 + v53 * v47 + v49) << 16;
                if (v9 == ++v47) {
                  goto LABEL_49;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v52 = 0;
        goto LABEL_61;
      }
LABEL_34:
      uint64_t v32 = 0;
      if (v17 >= 1) {
        goto LABEL_37;
      }
LABEL_27:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v14 = v6 - 4;
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<float,__emulated_bf16,(mlir::mps::arithmeticOp)13>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v55 = **a4;
  uint64_t v56 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v13 = 1;
      BOOL v20 = 1;
    }
    uint64_t v54 = v14;
    if (v14 > v22) {
      char v24 = 1;
    }
    else {
      char v24 = v18;
    }
    if (v11 > v23) {
      char v16 = 1;
    }
    if (v10 > v23) {
      char v25 = 1;
    }
    else {
      char v25 = v13;
    }
    char v26 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v27 = *(void *)(v4 + 16), uint64_t v28 = v27 - 4, v27 < 4)
        || v28 > (int)v27 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v28) == 1)
      {
        uint64_t v29 = 0;
        if (v24) {
          goto LABEL_30;
        }
      }
      else
      {
        uint64_t v29 = *(void *)(*(void *)(v4 + 64) + 8 * v28);
        if (v24) {
          goto LABEL_30;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v54) != 1)
      {
        uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v54);
        if (v17 < 1) {
          goto LABEL_23;
        }
LABEL_33:
        uint64_t v31 = 0;
        uint64_t v32 = v56 + v29 * v19;
        uint64_t v33 = v55 + v30 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v34 = *(void *)(v4 + 16), v35 = v34 - 3, v34 < 3)
            || v35 > (int)v34 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v35) == 1)
          {
            uint64_t v36 = 0;
            if ((v16 & 1) == 0) {
              goto LABEL_40;
            }
            goto LABEL_41;
          }
          uint64_t v36 = *(void *)(*(void *)(v4 + 64) + 8 * v35);
          if (v16) {
            goto LABEL_41;
          }
LABEL_40:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_41:
            uint64_t v37 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_34;
          }
          uint64_t v37 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_34:
            if (++v31 == v17) {
              goto LABEL_23;
            }
            continue;
          }
          break;
        }
        uint64_t v38 = 0;
        uint64_t v39 = v32 + v36 * v31;
        uint64_t v40 = v33 + v37 * v31;
        while (2)
        {
          if (v21
            || (v41 = *(void *)(v4 + 16), uint64_t v42 = v41 - 2, v41 < 2)
            || v42 > (int)v41 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v42) == 1)
          {
            uint64_t v43 = 0;
            if ((v25 & 1) == 0) {
              goto LABEL_51;
            }
            goto LABEL_52;
          }
          uint64_t v43 = *(void *)(*(void *)(v4 + 64) + 8 * v42);
          if (v25) {
            goto LABEL_52;
          }
LABEL_51:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_52:
            uint64_t v44 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_45;
          }
          uint64_t v44 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_45:
            if (++v38 == v12) {
              goto LABEL_34;
            }
            continue;
          }
          break;
        }
        uint64_t v45 = 0;
        uint64_t v46 = v39 + v43 * v38;
        uint64_t v47 = *(void *)(v4 + 40);
        uint64_t v48 = *(void *)(v5 + 40);
        uint64_t v49 = v40 + v44 * v38;
        while (2)
        {
          if (v21
            || (uint64_t v52 = *(void *)(v4 + 16), v53 = v52 - 1, v52 < 1)
            || v53 > (int)v52 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v53) == 1)
          {
            uint64_t v50 = 0;
            if (v26) {
              goto LABEL_59;
            }
          }
          else
          {
            uint64_t v50 = *(void *)(*(void *)(v4 + 64) + 8 * v53);
            if (v26)
            {
LABEL_59:
              uint64_t v51 = 0;
              goto LABEL_66;
            }
          }
          if (*(void *)(*(void *)(v5 + 24) + 8 * v7) == 1) {
            goto LABEL_59;
          }
          uint64_t v51 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_66:
          *(_WORD *)(v48 + v49 + v51 * v45) = HIWORD(COERCE_UNSIGNED_INT(*(float *)(v46 + v50 * v45 + v47)+ (float)(COERCE_FLOAT(*(_DWORD *)(v46 + v50 * v45 + v47) & 0xFF800000)* 0.0039062)));
          if (v9 == ++v45) {
            goto LABEL_45;
          }
          continue;
        }
      }
LABEL_30:
      uint64_t v30 = 0;
      if (v17 >= 1) {
        goto LABEL_33;
      }
LABEL_23:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    uint64_t v14 = v6 - 4;
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t **mlir::mps::arithmeticUnaryTileBaseKernel<long long,long long,(mlir::mps::arithmeticOp)13>(uint64_t **result, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **result;
  uint64_t v5 = **a2;
  uint64_t v6 = **a3;
  uint64_t v7 = **a4;
  uint64_t v8 = *(void *)(v5 + 16);
  if (v8 < 1)
  {
    uint64_t v8 = 1;
    uint64_t v12 = 1;
    uint64_t v11 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v9 = *(void *)(v5 + 24);
  uint64_t v10 = v9 + 8 * v8;
  uint64_t v11 = *(void *)(v10 - 8);
  if (v8 == 1)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v12 = *(void *)(v10 - 16);
  if ((unint64_t)v8 < 3)
  {
    uint64_t v8 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v14 = v9 + 8 * v8;
  uint64_t v13 = *(void *)(v14 - 24);
  if (v8 == 3)
  {
    uint64_t v8 = 1;
    goto LABEL_10;
  }
  uint64_t v8 = *(void *)(v14 - 32);
  if (v8 >= 1)
  {
LABEL_10:
    uint64_t v15 = 0;
    int v16 = *(unsigned __int8 *)(v4 + 58);
    uint64_t result = (uint64_t **)*(unsigned __int8 *)(v5 + 58);
    while (1)
    {
      if (v16
        || (uint64_t v17 = *(void *)(v4 + 16), v18 = v17 - 4, v17 < 4)
        || v18 > (int)v17 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v18) == 1)
      {
        uint64_t v19 = 0;
        if (result) {
          break;
        }
      }
      else
      {
        uint64_t v19 = *(void *)(*(void *)(v4 + 64) + 8 * v18);
        if (result) {
          break;
        }
      }
      uint64_t v20 = *(void *)(v5 + 16);
      uint64_t v21 = v20 - 4;
      if (v20 < 4 || v21 > (int)v20 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v21) == 1) {
        break;
      }
      uint64_t v22 = *(void *)(*(void *)(v5 + 64) + 8 * v21);
      if (v13 >= 1) {
        goto LABEL_24;
      }
LABEL_11:
      if (++v15 == v8) {
        return result;
      }
    }
    uint64_t v22 = 0;
    if (v13 < 1) {
      goto LABEL_11;
    }
LABEL_24:
    uint64_t v23 = 0;
    uint64_t v24 = v6 + v19 * v15;
    uint64_t v25 = v7 + v22 * v15;
    while (1)
    {
      if (v16
        || (uint64_t v26 = *(void *)(v4 + 16), v27 = v26 - 3, v26 < 3)
        || v27 > (int)v26 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v27) == 1)
      {
        uint64_t v28 = 0;
        if (result) {
          break;
        }
      }
      else
      {
        uint64_t v28 = *(void *)(*(void *)(v4 + 64) + 8 * v27);
        if (result) {
          break;
        }
      }
      uint64_t v29 = *(void *)(v5 + 16);
      uint64_t v30 = v29 - 3;
      if (v29 < 3 || v30 > (int)v29 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v30) == 1) {
        break;
      }
      uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v30);
      if (v12 >= 1) {
        goto LABEL_38;
      }
LABEL_25:
      if (++v23 == v13) {
        goto LABEL_11;
      }
    }
    uint64_t v31 = 0;
    if (v12 < 1) {
      goto LABEL_25;
    }
LABEL_38:
    uint64_t v32 = 0;
    uint64_t v33 = v24 + v28 * v23;
    uint64_t v34 = v25 + v31 * v23;
    while (1)
    {
      if (v16
        || (v35 = *(void *)(v4 + 16), uint64_t v36 = v35 - 2, v35 < 2)
        || v36 > (int)v35 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v36) == 1)
      {
        uint64_t v37 = 0;
        if (result) {
          break;
        }
      }
      else
      {
        uint64_t v37 = *(void *)(*(void *)(v4 + 64) + 8 * v36);
        if (result) {
          break;
        }
      }
      uint64_t v38 = *(void *)(v5 + 16);
      uint64_t v39 = v38 - 2;
      if (v38 < 2 || v39 > (int)v38 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v39) == 1) {
        break;
      }
      uint64_t v40 = *(void *)(*(void *)(v5 + 64) + 8 * v39);
      if (v11 >= 1) {
        goto LABEL_52;
      }
LABEL_39:
      if (++v32 == v12) {
        goto LABEL_25;
      }
    }
    uint64_t v40 = 0;
    if (v11 < 1) {
      goto LABEL_39;
    }
LABEL_52:
    uint64_t v41 = 0;
    uint64_t v42 = v33 + v37 * v32;
    uint64_t v43 = *(void *)(v4 + 40);
    uint64_t v44 = *(void *)(v5 + 40);
    uint64_t v45 = v34 + v40 * v32;
    while (1)
    {
      if (v16
        || (uint64_t v48 = *(void *)(v4 + 16), v49 = v48 - 1, v48 < 1)
        || v49 > (int)v48 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v49) == 1)
      {
        uint64_t v46 = 0;
        if (result) {
          goto LABEL_55;
        }
      }
      else
      {
        uint64_t v46 = *(void *)(*(void *)(v4 + 64) + 8 * v49);
        if (result) {
          goto LABEL_55;
        }
      }
      uint64_t v50 = *(void *)(v5 + 16);
      uint64_t v51 = v50 - 1;
      if (v50 >= 1 && v51 <= (int)v50 - 1 && *(void *)(*(void *)(v5 + 24) + 8 * v51) != 1)
      {
        uint64_t v47 = *(void *)(*(void *)(v5 + 64) + 8 * v51);
        goto LABEL_56;
      }
LABEL_55:
      uint64_t v47 = 0;
LABEL_56:
      *(void *)(v45 + v47 * v41 + v44) = *(void *)(v42 + v46 * v41 + v43);
      if (v11 == ++v41) {
        goto LABEL_39;
      }
    }
  }
  return result;
}

uint64_t **mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)14>(uint64_t **result, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **result;
  uint64_t v5 = **a2;
  uint64_t v6 = **a3;
  uint64_t v7 = **a4;
  uint64_t v8 = *(void *)(v5 + 16);
  if (v8 < 1)
  {
    uint64_t v8 = 1;
    uint64_t v12 = 1;
    uint64_t v11 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v9 = *(void *)(v5 + 24);
  uint64_t v10 = v9 + 8 * v8;
  uint64_t v11 = *(void *)(v10 - 8);
  if (v8 == 1)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v12 = *(void *)(v10 - 16);
  if ((unint64_t)v8 < 3)
  {
    uint64_t v8 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v14 = v9 + 8 * v8;
  uint64_t v13 = *(void *)(v14 - 24);
  if (v8 == 3)
  {
    uint64_t v8 = 1;
    goto LABEL_10;
  }
  uint64_t v8 = *(void *)(v14 - 32);
  if (v8 >= 1)
  {
LABEL_10:
    uint64_t v15 = 0;
    float32x2_t v16 = (float32x2_t)vdup_n_s32(0x7F7FFFFFu);
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (uint64_t v17 = *(void *)(v4 + 16), v18 = v17 - 4, v17 < 4)
        || v18 > (int)v17 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v18) == 1)
      {
        uint64_t result = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t result = *(uint64_t ***)(*(void *)(v4 + 64) + 8 * v18);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v19 = *(void *)(v5 + 16);
      uint64_t v20 = v19 - 4;
      if (v19 < 4 || v20 > (int)v19 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v20) == 1) {
        break;
      }
      uint64_t v21 = *(void *)(*(void *)(v5 + 64) + 8 * v20);
      if (v13 >= 1) {
        goto LABEL_24;
      }
LABEL_11:
      if (++v15 == v8) {
        return result;
      }
    }
    uint64_t v21 = 0;
    if (v13 < 1) {
      goto LABEL_11;
    }
LABEL_24:
    uint64_t v22 = 0;
    uint64_t result = (uint64_t **)(v6 + (void)result * v15);
    uint64_t v23 = v7 + v21 * v15;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (uint64_t v24 = *(void *)(v4 + 16), v25 = v24 - 3, v24 < 3)
        || v25 > (int)v24 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v25) == 1)
      {
        uint64_t v26 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v26 = *(void *)(*(void *)(v4 + 64) + 8 * v25);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v27 = *(void *)(v5 + 16);
      uint64_t v28 = v27 - 3;
      if (v27 < 3 || v28 > (int)v27 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v28) == 1) {
        break;
      }
      uint64_t v29 = *(void *)(*(void *)(v5 + 64) + 8 * v28);
      if (v12 >= 1) {
        goto LABEL_38;
      }
LABEL_25:
      if (++v22 == v13) {
        goto LABEL_11;
      }
    }
    uint64_t v29 = 0;
    if (v12 < 1) {
      goto LABEL_25;
    }
LABEL_38:
    uint64_t v30 = 0;
    uint64_t v31 = (char *)result + v26 * v22;
    uint64_t v32 = v23 + v29 * v22;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v33 = *(void *)(v4 + 16), uint64_t v34 = v33 - 2, v33 < 2)
        || v34 > (int)v33 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v34) == 1)
      {
        uint64_t v35 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v35 = *(void *)(*(void *)(v4 + 64) + 8 * v34);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v36 = *(void *)(v5 + 16);
      uint64_t v37 = v36 - 2;
      if (v36 < 2 || v37 > (int)v36 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v37) == 1) {
        break;
      }
      uint64_t v38 = *(void *)(*(void *)(v5 + 64) + 8 * v37);
      if (v11 >= 1) {
        goto LABEL_52;
      }
LABEL_39:
      if (++v30 == v12) {
        goto LABEL_25;
      }
    }
    uint64_t v38 = 0;
    if (v11 < 1) {
      goto LABEL_39;
    }
LABEL_52:
    uint64_t v39 = 0;
    uint64_t v40 = &v31[v35 * v30];
    uint64_t v41 = v32 + v38 * v30;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v45 = *(void *)(v4 + 16), uint64_t v46 = v45 - 1, v45 < 1)
        || v46 > (int)v45 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v46) == 1)
      {
        uint64_t v42 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      else
      {
        uint64_t v42 = *(void *)(*(void *)(v4 + 64) + 8 * v46);
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      uint64_t v47 = *(void *)(v5 + 16);
      uint64_t v48 = v47 - 1;
      if (v47 >= 1 && v48 <= (int)v47 - 1 && *(void *)(*(void *)(v5 + 24) + 8 * v48) != 1)
      {
        uint64_t v43 = *(void *)(*(void *)(v5 + 64) + 8 * v48);
        goto LABEL_56;
      }
LABEL_55:
      uint64_t v43 = 0;
LABEL_56:
      float32x2_t v44 = *(float32x2_t *)&v40[v42 * v39 + *(void *)(v4 + 40)];
      *(float32x2_t *)(v41 + v43 * v39++ + *(void *)(v5 + 40)) = vmaxnm_f32((float32x2_t)vbsl_s8((int8x8_t)vcgt_f32(v44, v16), (int8x8_t)v16, (int8x8_t)v44), (float32x2_t)0x80000000800000);
      if (v11 == v39) {
        goto LABEL_39;
      }
    }
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<float,float,(mlir::mps::arithmeticOp)14>(uint64_t result, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **(void **)result;
  uint64_t v5 = **a2;
  uint64_t v55 = **a4;
  uint64_t v56 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t v57 = 1;
    char v15 = 1;
    uint64_t v16 = 1;
LABEL_7:
    char v17 = 1;
LABEL_8:
    uint64_t v18 = 0;
    LODWORD(result) = v6 < 1;
    int v19 = *(unsigned __int8 *)(v4 + 58);
    int v20 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v17 = 1;
    }
    uint64_t v21 = v20;
    if (*(unsigned char *)(v5 + 58))
    {
      char v15 = 1;
      char v13 = 1;
      uint64_t result = 1;
    }
    else
    {
      uint64_t result = result;
    }
    uint64_t v54 = v14;
    if (v14 > v20) {
      char v22 = 1;
    }
    else {
      char v22 = v17;
    }
    if (v11 > v21) {
      char v23 = 1;
    }
    else {
      char v23 = v15;
    }
    if (v10 > v21) {
      char v24 = 1;
    }
    else {
      char v24 = v13;
    }
    if (v7 > v21) {
      char v25 = 1;
    }
    else {
      char v25 = result;
    }
    while (1)
    {
      if (v19
        || (uint64_t v26 = *(void *)(v4 + 16), v27 = v26 - 4, v26 < 4)
        || v27 > (int)v26 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v27) == 1)
      {
        uint64_t v28 = 0;
        if (v22) {
          goto LABEL_32;
        }
      }
      else
      {
        uint64_t v28 = *(void *)(*(void *)(v4 + 64) + 8 * v27);
        if (v22) {
          goto LABEL_32;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v54) != 1)
      {
        uint64_t v29 = *(void *)(*(void *)(v5 + 64) + 8 * v54);
        if (v16 < 1) {
          goto LABEL_25;
        }
LABEL_35:
        uint64_t v30 = 0;
        uint64_t v31 = v56 + v28 * v18;
        uint64_t v32 = v55 + v29 * v18;
        while (2)
        {
          if (v19
            || (v33 = *(void *)(v4 + 16), uint64_t v34 = v33 - 3, v33 < 3)
            || v34 > (int)v33 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v34) == 1)
          {
            uint64_t v35 = 0;
            if ((v23 & 1) == 0) {
              goto LABEL_42;
            }
            goto LABEL_43;
          }
          uint64_t v35 = *(void *)(*(void *)(v4 + 64) + 8 * v34);
          if (v23) {
            goto LABEL_43;
          }
LABEL_42:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_43:
            uint64_t v36 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_36;
          }
          uint64_t v36 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_36:
            if (++v30 == v16) {
              goto LABEL_25;
            }
            continue;
          }
          break;
        }
        uint64_t v37 = 0;
        uint64_t v38 = v31 + v35 * v30;
        uint64_t v39 = v32 + v36 * v30;
        while (2)
        {
          if (v19
            || (uint64_t v40 = *(void *)(v4 + 16), v41 = v40 - 2, v40 < 2)
            || v41 > (int)v40 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v41) == 1)
          {
            uint64_t v42 = 0;
            if ((v24 & 1) == 0) {
              goto LABEL_53;
            }
            goto LABEL_54;
          }
          uint64_t v42 = *(void *)(*(void *)(v4 + 64) + 8 * v41);
          if (v24) {
            goto LABEL_54;
          }
LABEL_53:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_54:
            uint64_t v43 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_47;
          }
          uint64_t v43 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_47:
            if (++v37 == v12) {
              goto LABEL_36;
            }
            continue;
          }
          break;
        }
        uint64_t v44 = 0;
        uint64_t v45 = v38 + v42 * v37;
        uint64_t v46 = *(void *)(v4 + 40);
        uint64_t v47 = *(void *)(v5 + 40);
        uint64_t v48 = v39 + v43 * v37;
        while (2)
        {
          if (v19
            || (uint64_t v52 = *(void *)(v4 + 16), v53 = v52 - 1, v52 < 1)
            || v53 > (int)v52 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v53) == 1)
          {
            uint64_t v51 = 0;
            if ((v25 & 1) == 0) {
              goto LABEL_64;
            }
          }
          else
          {
            uint64_t v51 = *(void *)(*(void *)(v4 + 64) + 8 * v53);
            if ((v25 & 1) == 0)
            {
LABEL_64:
              if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
              {
                uint64_t v49 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_59:
                uint64_t result = v48 + v49 * v44;
                float v50 = *(float *)(v45 + v51 * v44 + v46);
                if (v50 > 3.4028e38) {
                  float v50 = 3.4028e38;
                }
                *(float *)(result + v47) = fmaxf(v50, -3.4028e38);
                if (v9 == ++v44) {
                  goto LABEL_47;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v49 = 0;
        goto LABEL_59;
      }
LABEL_32:
      uint64_t v29 = 0;
      if (v16 >= 1) {
        goto LABEL_35;
      }
LABEL_25:
      if (++v18 == v57) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v16 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v15 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t v57 = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v57 = *(void *)(v8 + 8 * (v6 - 4));
  if (v57 >= 1)
  {
    uint64_t v14 = v6 - 4;
    char v15 = 0;
    char v13 = 0;
    char v17 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t **mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<float,(void *)0>,(mlir::mps::arithmeticOp)14>(uint64_t **result, uint64_t **a2, uint64_t **a3, uint64_t **a4, double a5, float16x4_t a6)
{
  uint64_t v6 = **result;
  uint64_t v7 = **a2;
  uint64_t v8 = **a3;
  uint64_t v9 = **a4;
  uint64_t v10 = *(void *)(v7 + 16);
  if (v10 < 1)
  {
    uint64_t v10 = 1;
    uint64_t v14 = 1;
    uint64_t v13 = 1;
    uint64_t v15 = 1;
    goto LABEL_10;
  }
  uint64_t v11 = *(void *)(v7 + 24);
  uint64_t v12 = v11 + 8 * v10;
  uint64_t v13 = *(void *)(v12 - 8);
  if (v10 == 1)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    goto LABEL_10;
  }
  uint64_t v14 = *(void *)(v12 - 16);
  if ((unint64_t)v10 < 3)
  {
    uint64_t v10 = 1;
    uint64_t v15 = 1;
    goto LABEL_10;
  }
  uint64_t v16 = v11 + 8 * v10;
  uint64_t v15 = *(void *)(v16 - 24);
  if (v10 == 3)
  {
    uint64_t v10 = 1;
    goto LABEL_10;
  }
  uint64_t v10 = *(void *)(v16 - 32);
  if (v10 >= 1)
  {
LABEL_10:
    uint64_t v17 = 0;
    while (1)
    {
      if (*(unsigned char *)(v6 + 58)
        || (v18 = *(void *)(v6 + 16), uint64_t v19 = v18 - 4, v18 < 4)
        || v19 > (int)v18 - 1
        || *(void *)(*(void *)(v6 + 24) + 8 * v19) == 1)
      {
        uint64_t result = 0;
        if (*(unsigned char *)(v7 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t result = *(uint64_t ***)(*(void *)(v6 + 64) + 8 * v19);
        if (*(unsigned char *)(v7 + 58)) {
          break;
        }
      }
      uint64_t v20 = *(void *)(v7 + 16);
      uint64_t v21 = v20 - 4;
      if (v20 < 4 || v21 > (int)v20 - 1 || *(void *)(*(void *)(v7 + 24) + 8 * v21) == 1) {
        break;
      }
      uint64_t v22 = *(void *)(*(void *)(v7 + 64) + 8 * v21);
      if (v15 >= 1) {
        goto LABEL_24;
      }
LABEL_11:
      if (++v17 == v10) {
        return result;
      }
    }
    uint64_t v22 = 0;
    if (v15 < 1) {
      goto LABEL_11;
    }
LABEL_24:
    uint64_t v23 = 0;
    uint64_t result = (uint64_t **)(v8 + (void)result * v17);
    uint64_t v24 = v9 + v22 * v17;
    while (1)
    {
      if (*(unsigned char *)(v6 + 58)
        || (v25 = *(void *)(v6 + 16), uint64_t v26 = v25 - 3, v25 < 3)
        || v26 > (int)v25 - 1
        || *(void *)(*(void *)(v6 + 24) + 8 * v26) == 1)
      {
        uint64_t v27 = 0;
        if (*(unsigned char *)(v7 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v27 = *(void *)(*(void *)(v6 + 64) + 8 * v26);
        if (*(unsigned char *)(v7 + 58)) {
          break;
        }
      }
      uint64_t v28 = *(void *)(v7 + 16);
      uint64_t v29 = v28 - 3;
      if (v28 < 3 || v29 > (int)v28 - 1 || *(void *)(*(void *)(v7 + 24) + 8 * v29) == 1) {
        break;
      }
      uint64_t v30 = *(void *)(*(void *)(v7 + 64) + 8 * v29);
      if (v14 >= 1) {
        goto LABEL_38;
      }
LABEL_25:
      if (++v23 == v15) {
        goto LABEL_11;
      }
    }
    uint64_t v30 = 0;
    if (v14 < 1) {
      goto LABEL_25;
    }
LABEL_38:
    uint64_t v31 = 0;
    uint64_t v32 = (char *)result + v27 * v23;
    uint64_t v33 = v24 + v30 * v23;
    while (1)
    {
      if (*(unsigned char *)(v6 + 58)
        || (uint64_t v34 = *(void *)(v6 + 16), v35 = v34 - 2, v34 < 2)
        || v35 > (int)v34 - 1
        || *(void *)(*(void *)(v6 + 24) + 8 * v35) == 1)
      {
        uint64_t v36 = 0;
        if (*(unsigned char *)(v7 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v36 = *(void *)(*(void *)(v6 + 64) + 8 * v35);
        if (*(unsigned char *)(v7 + 58)) {
          break;
        }
      }
      uint64_t v37 = *(void *)(v7 + 16);
      uint64_t v38 = v37 - 2;
      if (v37 < 2 || v38 > (int)v37 - 1 || *(void *)(*(void *)(v7 + 24) + 8 * v38) == 1) {
        break;
      }
      uint64_t v39 = *(void *)(*(void *)(v7 + 64) + 8 * v38);
      if (v13 >= 1) {
        goto LABEL_52;
      }
LABEL_39:
      if (++v31 == v14) {
        goto LABEL_25;
      }
    }
    uint64_t v39 = 0;
    if (v13 < 1) {
      goto LABEL_39;
    }
LABEL_52:
    uint64_t v40 = 0;
    uint64_t v41 = &v32[v36 * v31];
    uint64_t v42 = v33 + v39 * v31;
    while (1)
    {
      if (*(unsigned char *)(v6 + 58)
        || (v45 = *(void *)(v6 + 16), uint64_t v46 = v45 - 1, v45 < 1)
        || v46 > (int)v45 - 1
        || *(void *)(*(void *)(v6 + 24) + 8 * v46) == 1)
      {
        uint64_t v43 = 0;
        if (*(unsigned char *)(v7 + 58)) {
          goto LABEL_55;
        }
      }
      else
      {
        uint64_t v43 = *(void *)(*(void *)(v6 + 64) + 8 * v46);
        if (*(unsigned char *)(v7 + 58)) {
          goto LABEL_55;
        }
      }
      uint64_t v47 = *(void *)(v7 + 16);
      uint64_t v48 = v47 - 1;
      if (v47 >= 1 && v48 <= (int)v47 - 1 && *(void *)(*(void *)(v7 + 24) + 8 * v48) != 1)
      {
        uint64_t v44 = *(void *)(*(void *)(v7 + 64) + 8 * v48);
        goto LABEL_56;
      }
LABEL_55:
      uint64_t v44 = 0;
LABEL_56:
      a6.i32[0] = *(_DWORD *)&v41[v43 * v40 + *(void *)(v6 + 40)];
      a6 = (float16x4_t)vcvtq_f32_f16(vmaxnm_f16(a6, (float16x4_t)0xFC00FC00FC00FC00)).u64[0];
      *(double *)(v42 + v44 * v40++ + *(void *)(v7 + 40)) = *(double *)&a6;
      if (v13 == v40) {
        goto LABEL_39;
      }
    }
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<half,float,(mlir::mps::arithmeticOp)14>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v62 = **a4;
  uint64_t v63 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v24 = 1;
    }
    else
    {
      char v24 = v13;
    }
    if (*(unsigned char *)(v5 + 58)) {
      BOOL v20 = 1;
    }
    if (v14 > v22) {
      char v25 = 1;
    }
    else {
      char v25 = v18;
    }
    if (v11 > v23) {
      char v26 = 1;
    }
    else {
      char v26 = v16;
    }
    if (v10 > v23) {
      char v27 = 1;
    }
    else {
      char v27 = v24;
    }
    char v28 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v29 = *(void *)(v4 + 16), uint64_t v30 = v29 - 4, v29 < 4)
        || v30 > (int)v29 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v30) == 1)
      {
        uint64_t v31 = 0;
        if (v25) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v31 = *(void *)(*(void *)(v4 + 64) + 8 * v30);
        if (v25) {
          goto LABEL_34;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v14) != 1)
      {
        uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v14);
        if (v17 < 1) {
          goto LABEL_27;
        }
LABEL_37:
        uint64_t v33 = 0;
        uint64_t v34 = v63 + v31 * v19;
        uint64_t v35 = v62 + v32 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v36 = *(void *)(v4 + 16), v37 = v36 - 3, v36 < 3)
            || v37 > (int)v36 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v37) == 1)
          {
            uint64_t v38 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_44;
            }
            goto LABEL_45;
          }
          uint64_t v38 = *(void *)(*(void *)(v4 + 64) + 8 * v37);
          if (v26) {
            goto LABEL_45;
          }
LABEL_44:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_45:
            uint64_t v39 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_38;
          }
          uint64_t v39 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_38:
            if (++v33 == v17) {
              goto LABEL_27;
            }
            continue;
          }
          break;
        }
        uint64_t v40 = 0;
        uint64_t v41 = v34 + v38 * v33;
        uint64_t v42 = v35 + v39 * v33;
        while (2)
        {
          if (v21
            || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 2, v43 < 2)
            || v44 > (int)v43 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
          {
            uint64_t v45 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_56;
          }
          uint64_t v45 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
          if (v27) {
            goto LABEL_56;
          }
LABEL_55:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_56:
            uint64_t v46 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_49;
          }
          uint64_t v46 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_49:
            if (++v40 == v12) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        uint64_t v47 = 0;
        uint64_t v48 = v41 + v45 * v40;
        uint64_t v49 = *(void *)(v4 + 40);
        uint64_t v50 = *(void *)(v5 + 40);
        uint64_t v51 = v42 + v46 * v40;
        while (2)
        {
          if (v21
            || (uint64_t v60 = *(void *)(v4 + 16), v61 = v60 - 1, v60 < 1)
            || v61 > (int)v60 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v61) == 1)
          {
            uint64_t v59 = 0;
            if ((v28 & 1) == 0) {
              goto LABEL_64;
            }
          }
          else
          {
            uint64_t v59 = *(void *)(*(void *)(v4 + 64) + 8 * v61);
            if ((v28 & 1) == 0)
            {
LABEL_64:
              if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
              {
                uint64_t v52 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_61:
                _H1 = fmaxl(*(short float *)(v48 + v59 * v47 + v49), COERCE_SHORT_FLOAT(-1024));
                __asm { FCVT            S1, H1 }
                *(_DWORD *)(v51 + v52 * v47++ + v50) = _S1;
                if (v9 == v47) {
                  goto LABEL_49;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v52 = 0;
        goto LABEL_61;
      }
LABEL_34:
      uint64_t v32 = 0;
      if (v17 >= 1) {
        goto LABEL_37;
      }
LABEL_27:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v14 = v6 - 4;
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t **mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<half,(void *)0>,complex_support::complex_fp<half,(void *)0>,(mlir::mps::arithmeticOp)14>(uint64_t **result, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **result;
  uint64_t v5 = **a2;
  uint64_t v6 = **a3;
  uint64_t v7 = **a4;
  uint64_t v8 = *(void *)(v5 + 16);
  if (v8 < 1)
  {
    uint64_t v8 = 1;
    uint64_t v12 = 1;
    uint64_t v11 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v9 = *(void *)(v5 + 24);
  uint64_t v10 = v9 + 8 * v8;
  uint64_t v11 = *(void *)(v10 - 8);
  if (v8 == 1)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v12 = *(void *)(v10 - 16);
  if ((unint64_t)v8 < 3)
  {
    uint64_t v8 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v14 = v9 + 8 * v8;
  uint64_t v13 = *(void *)(v14 - 24);
  if (v8 == 3)
  {
    uint64_t v8 = 1;
    goto LABEL_10;
  }
  uint64_t v8 = *(void *)(v14 - 32);
  if (v8 >= 1)
  {
LABEL_10:
    uint64_t v15 = 0;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v16 = *(void *)(v4 + 16), uint64_t v17 = v16 - 4, v16 < 4)
        || v17 > (int)v16 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v17) == 1)
      {
        uint64_t result = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t result = *(uint64_t ***)(*(void *)(v4 + 64) + 8 * v17);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v18 = *(void *)(v5 + 16);
      uint64_t v19 = v18 - 4;
      if (v18 < 4 || v19 > (int)v18 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v19) == 1) {
        break;
      }
      uint64_t v20 = *(void *)(*(void *)(v5 + 64) + 8 * v19);
      if (v13 >= 1) {
        goto LABEL_24;
      }
LABEL_11:
      if (++v15 == v8) {
        return result;
      }
    }
    uint64_t v20 = 0;
    if (v13 < 1) {
      goto LABEL_11;
    }
LABEL_24:
    uint64_t v21 = 0;
    uint64_t result = (uint64_t **)(v6 + (void)result * v15);
    uint64_t v22 = v7 + v20 * v15;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v23 = *(void *)(v4 + 16), uint64_t v24 = v23 - 3, v23 < 3)
        || v24 > (int)v23 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v24) == 1)
      {
        uint64_t v25 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v25 = *(void *)(*(void *)(v4 + 64) + 8 * v24);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v26 = *(void *)(v5 + 16);
      uint64_t v27 = v26 - 3;
      if (v26 < 3 || v27 > (int)v26 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v27) == 1) {
        break;
      }
      uint64_t v28 = *(void *)(*(void *)(v5 + 64) + 8 * v27);
      if (v12 >= 1) {
        goto LABEL_38;
      }
LABEL_25:
      if (++v21 == v13) {
        goto LABEL_11;
      }
    }
    uint64_t v28 = 0;
    if (v12 < 1) {
      goto LABEL_25;
    }
LABEL_38:
    uint64_t v29 = 0;
    uint64_t v30 = (char *)result + v25 * v21;
    uint64_t v31 = v22 + v28 * v21;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (uint64_t v32 = *(void *)(v4 + 16), v33 = v32 - 2, v32 < 2)
        || v33 > (int)v32 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v33) == 1)
      {
        uint64_t v34 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v34 = *(void *)(*(void *)(v4 + 64) + 8 * v33);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v35 = *(void *)(v5 + 16);
      uint64_t v36 = v35 - 2;
      if (v35 < 2 || v36 > (int)v35 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v36) == 1) {
        break;
      }
      uint64_t v37 = *(void *)(*(void *)(v5 + 64) + 8 * v36);
      if (v11 >= 1) {
        goto LABEL_52;
      }
LABEL_39:
      if (++v29 == v12) {
        goto LABEL_25;
      }
    }
    uint64_t v37 = 0;
    if (v11 < 1) {
      goto LABEL_39;
    }
LABEL_52:
    uint64_t v38 = 0;
    uint64_t v39 = &v30[v34 * v29];
    uint64_t v40 = v31 + v37 * v29;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (uint64_t v48 = *(void *)(v4 + 16), v49 = v48 - 1, v48 < 1)
        || v49 > (int)v48 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v49) == 1)
      {
        uint64_t v41 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      else
      {
        uint64_t v41 = *(void *)(*(void *)(v4 + 64) + 8 * v49);
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      uint64_t v50 = *(void *)(v5 + 16);
      uint64_t v51 = v50 - 1;
      if (v50 >= 1 && v51 <= (int)v50 - 1 && *(void *)(*(void *)(v5 + 24) + 8 * v51) != 1)
      {
        uint64_t v42 = *(void *)(*(void *)(v5 + 64) + 8 * v51);
        goto LABEL_56;
      }
LABEL_55:
      uint64_t v42 = 0;
LABEL_56:
      uint64_t v43 = (short float *)&v39[v41 * v38 + *(void *)(v4 + 40)];
      uint64_t v44 = (short float *)(v40 + v42 * v38 + *(void *)(v5 + 40));
      short float v45 = *v43;
      short float v46 = v43[1];
      if (*v43 > COERCE_SHORT_FLOAT(31743)) {
        short float v45 = COERCE_SHORT_FLOAT(31743);
      }
      short float v47 = fmaxl(v45, COERCE_SHORT_FLOAT(-1025));
      if (v46 > COERCE_SHORT_FLOAT(31743)) {
        short float v46 = COERCE_SHORT_FLOAT(31743);
      }
      short float *v44 = v47;
      v44[1] = fmaxl(v46, COERCE_SHORT_FLOAT(-1025));
      if (v11 == ++v38) {
        goto LABEL_39;
      }
    }
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<half,half,(mlir::mps::arithmeticOp)14>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v58 = **a4;
  uint64_t v59 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v24 = 1;
    }
    else
    {
      char v24 = v13;
    }
    if (*(unsigned char *)(v5 + 58)) {
      BOOL v20 = 1;
    }
    if (v14 > v22) {
      char v25 = 1;
    }
    else {
      char v25 = v18;
    }
    if (v11 > v23) {
      char v26 = 1;
    }
    else {
      char v26 = v16;
    }
    if (v10 > v23) {
      char v27 = 1;
    }
    else {
      char v27 = v24;
    }
    char v28 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v29 = *(void *)(v4 + 16), uint64_t v30 = v29 - 4, v29 < 4)
        || v30 > (int)v29 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v30) == 1)
      {
        uint64_t v31 = 0;
        if (v25) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v31 = *(void *)(*(void *)(v4 + 64) + 8 * v30);
        if (v25) {
          goto LABEL_34;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v14) != 1)
      {
        uint64_t v32 = *(void *)(*(void *)(v5 + 64) + 8 * v14);
        if (v17 < 1) {
          goto LABEL_27;
        }
LABEL_37:
        uint64_t v33 = 0;
        uint64_t v34 = v59 + v31 * v19;
        uint64_t v35 = v58 + v32 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v36 = *(void *)(v4 + 16), v37 = v36 - 3, v36 < 3)
            || v37 > (int)v36 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v37) == 1)
          {
            uint64_t v38 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_44;
            }
            goto LABEL_45;
          }
          uint64_t v38 = *(void *)(*(void *)(v4 + 64) + 8 * v37);
          if (v26) {
            goto LABEL_45;
          }
LABEL_44:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_45:
            uint64_t v39 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_38;
          }
          uint64_t v39 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_38:
            if (++v33 == v17) {
              goto LABEL_27;
            }
            continue;
          }
          break;
        }
        uint64_t v40 = 0;
        uint64_t v41 = v34 + v38 * v33;
        uint64_t v42 = v35 + v39 * v33;
        while (2)
        {
          if (v21
            || (v43 = *(void *)(v4 + 16), uint64_t v44 = v43 - 2, v43 < 2)
            || v44 > (int)v43 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v44) == 1)
          {
            uint64_t v45 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_56;
          }
          uint64_t v45 = *(void *)(*(void *)(v4 + 64) + 8 * v44);
          if (v27) {
            goto LABEL_56;
          }
LABEL_55:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_56:
            uint64_t v46 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_49;
          }
          uint64_t v46 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_49:
            if (++v40 == v12) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        uint64_t v47 = 0;
        uint64_t v48 = v41 + v45 * v40;
        uint64_t v49 = *(void *)(v4 + 40);
        uint64_t v50 = *(void *)(v5 + 40);
        uint64_t v51 = v42 + v46 * v40;
        while (2)
        {
          if (v21
            || (uint64_t v56 = *(void *)(v4 + 16), v57 = v56 - 1, v56 < 1)
            || v57 > (int)v56 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v57) == 1)
          {
            uint64_t v55 = 0;
            if ((v28 & 1) == 0) {
              goto LABEL_66;
            }
          }
          else
          {
            uint64_t v55 = *(void *)(*(void *)(v4 + 64) + 8 * v57);
            if ((v28 & 1) == 0)
            {
LABEL_66:
              if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
              {
                uint64_t v52 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_61:
                uint64_t v53 = v51 + v52 * v47;
                short float v54 = *(short float *)(v48 + v55 * v47 + v49);
                if (v54 > COERCE_SHORT_FLOAT(31743)) {
                  short float v54 = COERCE_SHORT_FLOAT(31743);
                }
                *(short float *)(v53 + v50) = fmaxl(v54, COERCE_SHORT_FLOAT(-1025));
                if (v9 == ++v47) {
                  goto LABEL_49;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v52 = 0;
        goto LABEL_61;
      }
LABEL_34:
      uint64_t v32 = 0;
      if (v17 >= 1) {
        goto LABEL_37;
      }
LABEL_27:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v14 = v6 - 4;
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<complex_support::complex_fp<float,(void *)0>,complex_support::complex_fp<half,(void *)0>,(mlir::mps::arithmeticOp)14>(uint64_t result, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **(void **)result;
  uint64_t v5 = **a2;
  uint64_t v6 = **a3;
  uint64_t v7 = **a4;
  uint64_t v8 = *(void *)(v5 + 16);
  if (v8 < 1)
  {
    uint64_t v8 = 1;
    uint64_t v12 = 1;
    uint64_t v11 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v9 = *(void *)(v5 + 24);
  uint64_t v10 = v9 + 8 * v8;
  uint64_t v11 = *(void *)(v10 - 8);
  if (v8 == 1)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v12 = *(void *)(v10 - 16);
  if ((unint64_t)v8 < 3)
  {
    uint64_t v8 = 1;
    uint64_t v13 = 1;
    goto LABEL_10;
  }
  uint64_t v14 = v9 + 8 * v8;
  uint64_t v13 = *(void *)(v14 - 24);
  if (v8 == 3)
  {
    uint64_t v8 = 1;
    goto LABEL_10;
  }
  uint64_t v8 = *(void *)(v14 - 32);
  if (v8 >= 1)
  {
LABEL_10:
    uint64_t v15 = 0;
    uint64_t result = 3347046400;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v16 = *(void *)(v4 + 16), uint64_t v17 = v16 - 4, v16 < 4)
        || v17 > (int)v16 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v17) == 1)
      {
        uint64_t v18 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v18 = *(void *)(*(void *)(v4 + 64) + 8 * v17);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v19 = *(void *)(v5 + 16);
      uint64_t v20 = v19 - 4;
      if (v19 < 4 || v20 > (int)v19 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v20) == 1) {
        break;
      }
      uint64_t v21 = *(void *)(*(void *)(v5 + 64) + 8 * v20);
      if (v13 >= 1) {
        goto LABEL_24;
      }
LABEL_11:
      if (++v15 == v8) {
        return result;
      }
    }
    uint64_t v21 = 0;
    if (v13 < 1) {
      goto LABEL_11;
    }
LABEL_24:
    uint64_t v22 = 0;
    uint64_t v23 = v6 + v18 * v15;
    uint64_t v24 = v7 + v21 * v15;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (v25 = *(void *)(v4 + 16), uint64_t v26 = v25 - 3, v25 < 3)
        || v26 > (int)v25 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v26) == 1)
      {
        uint64_t v27 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v27 = *(void *)(*(void *)(v4 + 64) + 8 * v26);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v28 = *(void *)(v5 + 16);
      uint64_t v29 = v28 - 3;
      if (v28 < 3 || v29 > (int)v28 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v29) == 1) {
        break;
      }
      uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v29);
      if (v12 >= 1) {
        goto LABEL_38;
      }
LABEL_25:
      if (++v22 == v13) {
        goto LABEL_11;
      }
    }
    uint64_t v30 = 0;
    if (v12 < 1) {
      goto LABEL_25;
    }
LABEL_38:
    uint64_t v31 = 0;
    uint64_t v32 = v23 + v27 * v22;
    uint64_t v33 = v24 + v30 * v22;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (uint64_t v34 = *(void *)(v4 + 16), v35 = v34 - 2, v34 < 2)
        || v35 > (int)v34 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v35) == 1)
      {
        uint64_t v36 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      else
      {
        uint64_t v36 = *(void *)(*(void *)(v4 + 64) + 8 * v35);
        if (*(unsigned char *)(v5 + 58)) {
          break;
        }
      }
      uint64_t v37 = *(void *)(v5 + 16);
      uint64_t v38 = v37 - 2;
      if (v37 < 2 || v38 > (int)v37 - 1 || *(void *)(*(void *)(v5 + 24) + 8 * v38) == 1) {
        break;
      }
      uint64_t v39 = *(void *)(*(void *)(v5 + 64) + 8 * v38);
      if (v11 >= 1) {
        goto LABEL_52;
      }
LABEL_39:
      if (++v31 == v12) {
        goto LABEL_25;
      }
    }
    uint64_t v39 = 0;
    if (v11 < 1) {
      goto LABEL_39;
    }
LABEL_52:
    uint64_t v40 = 0;
    uint64_t v41 = v32 + v36 * v31;
    uint64_t v42 = v33 + v39 * v31;
    while (1)
    {
      if (*(unsigned char *)(v4 + 58)
        || (uint64_t v56 = *(void *)(v4 + 16), v57 = v56 - 1, v56 < 1)
        || v57 > (int)v56 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v57) == 1)
      {
        uint64_t v43 = 0;
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      else
      {
        uint64_t v43 = *(void *)(*(void *)(v4 + 64) + 8 * v57);
        if (*(unsigned char *)(v5 + 58)) {
          goto LABEL_55;
        }
      }
      uint64_t v58 = *(void *)(v5 + 16);
      uint64_t v59 = v58 - 1;
      if (v58 >= 1 && v59 <= (int)v58 - 1 && *(void *)(*(void *)(v5 + 24) + 8 * v59) != 1)
      {
        uint64_t v44 = *(void *)(*(void *)(v5 + 64) + 8 * v59);
        goto LABEL_56;
      }
LABEL_55:
      uint64_t v44 = 0;
LABEL_56:
      uint64_t v45 = (float *)(v41 + v43 * v40 + *(void *)(v4 + 40));
      uint64_t v46 = (_WORD *)(v42 + v44 * v40 + *(void *)(v5 + 40));
      float v47 = *v45;
      float v48 = v45[1];
      if (*v45 > 65504.0) {
        float v47 = 65504.0;
      }
      _S0 = fmaxf(v47, -65504.0);
      if (v48 > 65504.0) {
        float v48 = 65504.0;
      }
      _S1 = fmaxf(v48, -65504.0);
      __asm
      {
        FCVT            H0, S0
        FCVT            H1, S1
      }
      *uint64_t v46 = _H0;
      v46[1] = LOWORD(_S1);
      if (v11 == ++v40) {
        goto LABEL_39;
      }
    }
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<float,half,(mlir::mps::arithmeticOp)14>(uint64_t result, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **(void **)result;
  uint64_t v5 = **a2;
  uint64_t v60 = **a4;
  uint64_t v61 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t v62 = 1;
    char v15 = 1;
    uint64_t v16 = 1;
LABEL_7:
    char v17 = 1;
LABEL_8:
    uint64_t v18 = 0;
    LODWORD(result) = v6 < 1;
    int v19 = *(unsigned __int8 *)(v4 + 58);
    int v20 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v17 = 1;
    }
    uint64_t v21 = v20;
    if (*(unsigned char *)(v5 + 58))
    {
      char v15 = 1;
      char v13 = 1;
      uint64_t result = 1;
    }
    else
    {
      uint64_t result = result;
    }
    uint64_t v59 = v14;
    if (v14 > v20) {
      char v22 = 1;
    }
    else {
      char v22 = v17;
    }
    if (v11 > v21) {
      char v23 = 1;
    }
    else {
      char v23 = v15;
    }
    if (v10 > v21) {
      char v24 = 1;
    }
    else {
      char v24 = v13;
    }
    if (v7 > v21) {
      char v25 = 1;
    }
    else {
      char v25 = result;
    }
    while (1)
    {
      if (v19
        || (uint64_t v26 = *(void *)(v4 + 16), v27 = v26 - 4, v26 < 4)
        || v27 > (int)v26 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v27) == 1)
      {
        uint64_t v28 = 0;
        if (v22) {
          goto LABEL_32;
        }
      }
      else
      {
        uint64_t v28 = *(void *)(*(void *)(v4 + 64) + 8 * v27);
        if (v22) {
          goto LABEL_32;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v59) != 1)
      {
        uint64_t v29 = *(void *)(*(void *)(v5 + 64) + 8 * v59);
        if (v16 < 1) {
          goto LABEL_25;
        }
LABEL_35:
        uint64_t v30 = 0;
        uint64_t v31 = v61 + v28 * v18;
        uint64_t v32 = v60 + v29 * v18;
        while (2)
        {
          if (v19
            || (v33 = *(void *)(v4 + 16), uint64_t v34 = v33 - 3, v33 < 3)
            || v34 > (int)v33 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v34) == 1)
          {
            uint64_t v35 = 0;
            if ((v23 & 1) == 0) {
              goto LABEL_42;
            }
            goto LABEL_43;
          }
          uint64_t v35 = *(void *)(*(void *)(v4 + 64) + 8 * v34);
          if (v23) {
            goto LABEL_43;
          }
LABEL_42:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_43:
            uint64_t v36 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_36;
          }
          uint64_t v36 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_36:
            if (++v30 == v16) {
              goto LABEL_25;
            }
            continue;
          }
          break;
        }
        uint64_t v37 = 0;
        uint64_t v38 = v31 + v35 * v30;
        uint64_t v39 = v32 + v36 * v30;
        while (2)
        {
          if (v19
            || (uint64_t v40 = *(void *)(v4 + 16), v41 = v40 - 2, v40 < 2)
            || v41 > (int)v40 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v41) == 1)
          {
            uint64_t v42 = 0;
            if ((v24 & 1) == 0) {
              goto LABEL_53;
            }
            goto LABEL_54;
          }
          uint64_t v42 = *(void *)(*(void *)(v4 + 64) + 8 * v41);
          if (v24) {
            goto LABEL_54;
          }
LABEL_53:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_54:
            uint64_t v43 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_47;
          }
          uint64_t v43 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_47:
            if (++v37 == v12) {
              goto LABEL_36;
            }
            continue;
          }
          break;
        }
        uint64_t v44 = 0;
        uint64_t v45 = v38 + v42 * v37;
        uint64_t v46 = *(void *)(v4 + 40);
        uint64_t v47 = *(void *)(v5 + 40);
        uint64_t v48 = v39 + v43 * v37;
        while (2)
        {
          if (v19
            || (v57 = *(void *)(v4 + 16), uint64_t v58 = v57 - 1, v57 < 1)
            || v58 > (int)v57 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v58) == 1)
          {
            uint64_t v56 = 0;
            if ((v25 & 1) == 0) {
              goto LABEL_64;
            }
          }
          else
          {
            uint64_t v56 = *(void *)(*(void *)(v4 + 64) + 8 * v58);
            if ((v25 & 1) == 0)
            {
LABEL_64:
              if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
              {
                uint64_t v49 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_59:
                uint64_t result = v48 + v49 * v44;
                float v50 = *(float *)(v45 + v56 * v44 + v46);
                if (v50 > 65504.0) {
                  float v50 = 65504.0;
                }
                _S0 = fmaxf(v50, -65504.0);
                __asm { FCVT            H0, S0 }
                *(_WORD *)(result + v47) = LOWORD(_S0);
                if (v9 == ++v44) {
                  goto LABEL_47;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v49 = 0;
        goto LABEL_59;
      }
LABEL_32:
      uint64_t v29 = 0;
      if (v16 >= 1) {
        goto LABEL_35;
      }
LABEL_25:
      if (++v18 == v62) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v16 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v15 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t v62 = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v62 = *(void *)(v8 + 8 * (v6 - 4));
  if (v62 >= 1)
  {
    uint64_t v14 = v6 - 4;
    char v15 = 0;
    char v13 = 0;
    char v17 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t mlir::mps::arithmeticUnaryTileBaseKernel<__emulated_bf16,float,(mlir::mps::arithmeticOp)14>(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **a1;
  uint64_t v5 = **a2;
  uint64_t v55 = **a4;
  uint64_t v56 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t result = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = *(unsigned __int8 *)(v4 + 58);
    int v22 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v18 = 1;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v5 + 58))
    {
      char v16 = 1;
      char v13 = 1;
      BOOL v20 = 1;
    }
    uint64_t v54 = v14;
    if (v14 > v22) {
      char v24 = 1;
    }
    else {
      char v24 = v18;
    }
    if (v11 > v23) {
      char v16 = 1;
    }
    if (v10 > v23) {
      char v25 = 1;
    }
    else {
      char v25 = v13;
    }
    char v26 = v7 > v23 || v20;
    while (1)
    {
      if (v21
        || (v27 = *(void *)(v4 + 16), uint64_t v28 = v27 - 4, v27 < 4)
        || v28 > (int)v27 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v28) == 1)
      {
        uint64_t v29 = 0;
        if (v24) {
          goto LABEL_30;
        }
      }
      else
      {
        uint64_t v29 = *(void *)(*(void *)(v4 + 64) + 8 * v28);
        if (v24) {
          goto LABEL_30;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v54) != 1)
      {
        uint64_t v30 = *(void *)(*(void *)(v5 + 64) + 8 * v54);
        if (v17 < 1) {
          goto LABEL_23;
        }
LABEL_33:
        uint64_t v31 = 0;
        uint64_t v32 = v56 + v29 * v19;
        uint64_t v33 = v55 + v30 * v19;
        while (2)
        {
          if (v21
            || (uint64_t v34 = *(void *)(v4 + 16), v35 = v34 - 3, v34 < 3)
            || v35 > (int)v34 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v35) == 1)
          {
            uint64_t v36 = 0;
            if ((v16 & 1) == 0) {
              goto LABEL_40;
            }
            goto LABEL_41;
          }
          uint64_t v36 = *(void *)(*(void *)(v4 + 64) + 8 * v35);
          if (v16) {
            goto LABEL_41;
          }
LABEL_40:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_41:
            uint64_t v37 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_34;
          }
          uint64_t v37 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_34:
            if (++v31 == v17) {
              goto LABEL_23;
            }
            continue;
          }
          break;
        }
        uint64_t v38 = 0;
        uint64_t v39 = v32 + v36 * v31;
        uint64_t v40 = v33 + v37 * v31;
        while (2)
        {
          if (v21
            || (v41 = *(void *)(v4 + 16), uint64_t v42 = v41 - 2, v41 < 2)
            || v42 > (int)v41 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v42) == 1)
          {
            uint64_t v43 = 0;
            if ((v25 & 1) == 0) {
              goto LABEL_51;
            }
            goto LABEL_52;
          }
          uint64_t v43 = *(void *)(*(void *)(v4 + 64) + 8 * v42);
          if (v25) {
            goto LABEL_52;
          }
LABEL_51:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_52:
            uint64_t v44 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_45;
          }
          uint64_t v44 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_45:
            if (++v38 == v12) {
              goto LABEL_34;
            }
            continue;
          }
          break;
        }
        uint64_t v45 = 0;
        uint64_t v46 = v39 + v43 * v38;
        uint64_t v47 = *(void *)(v4 + 40);
        uint64_t v48 = *(void *)(v5 + 40);
        uint64_t v49 = v40 + v44 * v38;
        while (2)
        {
          if (v21
            || (uint64_t v52 = *(void *)(v4 + 16), v53 = v52 - 1, v52 < 1)
            || v53 > (int)v52 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v53) == 1)
          {
            uint64_t v51 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_60;
            }
          }
          else
          {
            uint64_t v51 = *(void *)(*(void *)(v4 + 64) + 8 * v53);
            if ((v26 & 1) == 0)
            {
LABEL_60:
              if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
              {
                uint64_t v50 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_57:
                *(float *)(v49 + v50 * v45 + v48) = fmaxf(COERCE_FLOAT(*(unsigned __int16 *)(v46 + v51 * v45 + v47) << 16), -INFINITY);
                if (v9 == ++v45) {
                  goto LABEL_45;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v50 = 0;
        goto LABEL_57;
      }
LABEL_30:
      uint64_t v30 = 0;
      if (v17 >= 1) {
        goto LABEL_33;
      }
LABEL_23:
      if (++v19 == result) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t result = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t result = *(void *)(v8 + 8 * (v6 - 4));
  if (result >= 1)
  {
    uint64_t v14 = v6 - 4;
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t **mlir::mps::arithmeticUnaryTileBaseKernel<__emulated_bf16,__emulated_bf16,(mlir::mps::arithmeticOp)14>(uint64_t **result, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v4 = **result;
  uint64_t v5 = **a2;
  uint64_t v57 = **a4;
  uint64_t v58 = **a3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t v59 = 1;
    char v15 = 1;
    uint64_t v16 = 1;
LABEL_7:
    char v17 = 1;
LABEL_8:
    uint64_t v18 = 0;
    BOOL v19 = v6 < 1;
    int v20 = *(unsigned __int8 *)(v4 + 58);
    int v21 = v6 - 1;
    if (*(unsigned char *)(v5 + 58)) {
      char v17 = 1;
    }
    uint64_t v22 = v21;
    if (*(unsigned char *)(v5 + 58))
    {
      char v15 = 1;
      char v23 = 1;
    }
    else
    {
      char v23 = v13;
    }
    if (*(unsigned char *)(v5 + 58)) {
      BOOL v19 = 1;
    }
    if (v14 > v21) {
      char v24 = 1;
    }
    else {
      char v24 = v17;
    }
    if (v11 > v22) {
      char v25 = 1;
    }
    else {
      char v25 = v15;
    }
    if (v10 > v22) {
      char v26 = 1;
    }
    else {
      char v26 = v23;
    }
    char v27 = v7 > v22 || v19;
    uint64_t result = (uint64_t **)v14;
    while (1)
    {
      if (v20
        || (uint64_t v28 = *(void *)(v4 + 16), v29 = v28 - 4, v28 < 4)
        || v29 > (int)v28 - 1
        || *(void *)(*(void *)(v4 + 24) + 8 * v29) == 1)
      {
        uint64_t v30 = 0;
        if (v24) {
          goto LABEL_35;
        }
      }
      else
      {
        uint64_t v30 = *(void *)(*(void *)(v4 + 64) + 8 * v29);
        if (v24) {
          goto LABEL_35;
        }
      }
      if (*(void *)(*(void *)(v5 + 24) + 8 * v14) != 1)
      {
        uint64_t v31 = *(void *)(*(void *)(v5 + 64) + 8 * v14);
        if (v16 < 1) {
          goto LABEL_28;
        }
LABEL_38:
        uint64_t v32 = 0;
        uint64_t v33 = v58 + v30 * v18;
        uint64_t v34 = v57 + v31 * v18;
        while (2)
        {
          if (v20
            || (v35 = *(void *)(v4 + 16), uint64_t v36 = v35 - 3, v35 < 3)
            || v36 > (int)v35 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v36) == 1)
          {
            uint64_t v37 = 0;
            if ((v25 & 1) == 0) {
              goto LABEL_45;
            }
            goto LABEL_46;
          }
          uint64_t v37 = *(void *)(*(void *)(v4 + 64) + 8 * v36);
          if (v25) {
            goto LABEL_46;
          }
LABEL_45:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v11) == 1)
          {
LABEL_46:
            uint64_t v38 = 0;
            if (v12 >= 1) {
              break;
            }
            goto LABEL_39;
          }
          uint64_t v38 = *(void *)(*(void *)(v5 + 64) + 8 * v11);
          if (v12 < 1)
          {
LABEL_39:
            if (++v32 == v16) {
              goto LABEL_28;
            }
            continue;
          }
          break;
        }
        uint64_t v39 = 0;
        uint64_t v40 = v33 + v37 * v32;
        uint64_t v41 = v34 + v38 * v32;
        while (2)
        {
          if (v20
            || (uint64_t v42 = *(void *)(v4 + 16), v43 = v42 - 2, v42 < 2)
            || v43 > (int)v42 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v43) == 1)
          {
            uint64_t v44 = 0;
            if ((v26 & 1) == 0) {
              goto LABEL_56;
            }
            goto LABEL_57;
          }
          uint64_t v44 = *(void *)(*(void *)(v4 + 64) + 8 * v43);
          if (v26) {
            goto LABEL_57;
          }
LABEL_56:
          if (*(void *)(*(void *)(v5 + 24) + 8 * v10) == 1)
          {
LABEL_57:
            uint64_t v45 = 0;
            if (v9 >= 1) {
              break;
            }
            goto LABEL_50;
          }
          uint64_t v45 = *(void *)(*(void *)(v5 + 64) + 8 * v10);
          if (v9 < 1)
          {
LABEL_50:
            if (++v39 == v12) {
              goto LABEL_39;
            }
            continue;
          }
          break;
        }
        uint64_t v46 = 0;
        uint64_t v47 = v40 + v44 * v39;
        uint64_t v48 = *(void *)(v4 + 40);
        uint64_t v49 = *(void *)(v5 + 40);
        uint64_t v50 = v41 + v45 * v39;
        while (2)
        {
          if (v20
            || (v55 = *(void *)(v4 + 16), uint64_t v56 = v55 - 1, v55 < 1)
            || v56 > (int)v55 - 1
            || *(void *)(*(void *)(v4 + 24) + 8 * v56) == 1)
          {
            uint64_t v54 = 0;
            if ((v27 & 1) == 0) {
              goto LABEL_69;
            }
          }
          else
          {
            uint64_t v54 = *(void *)(*(void *)(v4 + 64) + 8 * v56);
            if ((v27 & 1) == 0)
            {
LABEL_69:
              if (*(void *)(*(void *)(v5 + 24) + 8 * v7) != 1)
              {
                uint64_t v51 = *(void *)(*(void *)(v5 + 64) + 8 * v7);
LABEL_62:
                uint64_t v52 = v50 + v51 * v46;
                int v53 = *(unsigned __int16 *)(v47 + v54 * v46 + v48);
                if (COERCE_FLOAT(v53 << 16) > 0.0) {
                  int v53 = 0;
                }
                if (COERCE_FLOAT(v53 << 16) <= 0.0) {
                  LOWORD(v53) = 0;
                }
                *(_WORD *)(v52 + v49) = v53;
                if (v9 == ++v46) {
                  goto LABEL_50;
                }
                continue;
              }
            }
          }
          break;
        }
        uint64_t v51 = 0;
        goto LABEL_62;
      }
LABEL_35:
      uint64_t v31 = 0;
      if (v16 >= 1) {
        goto LABEL_38;
      }
LABEL_28:
      ++v18;
      uint64_t v14 = (uint64_t)result;
      if (v18 == v59) {
        return result;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v16 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v15 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t v59 = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v14 = v6 - 4;
  uint64_t v59 = *(void *)(v8 + 8 * (v6 - 4));
  if (v59 >= 1)
  {
    char v15 = 0;
    char v13 = 0;
    char v17 = 0;
    goto LABEL_8;
  }
  return result;
}

void mlir::mps::arithmeticUnaryTileBaseKernel<float,__emulated_bf16,(mlir::mps::arithmeticOp)14>(uint64_t a1, uint64_t **a2, uint64_t a3, uint64_t **a4)
{
  uint64_t v4 = **a2;
  uint64_t v5 = **a4;
  uint64_t v6 = *(void *)(v4 + 16);
  uint64_t v7 = v6 - 1;
  if (v6 <= 0)
  {
    uint64_t v10 = v6 - 2;
    uint64_t v9 = 1;
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v4 + 24);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if (v6 == 1)
  {
    uint64_t v10 = -1;
LABEL_5:
    uint64_t v11 = v6 - 3;
    uint64_t v12 = 1;
    char v13 = 1;
LABEL_6:
    uint64_t v14 = v6 - 4;
    uint64_t v15 = 1;
    char v16 = 1;
    uint64_t v17 = 1;
LABEL_7:
    char v18 = 1;
LABEL_8:
    uint64_t v19 = 0;
    BOOL v20 = v6 < 1;
    int v21 = v6 - 1;
    if (*(unsigned char *)(v4 + 58)) {
      char v18 = 1;
    }
    uint64_t v22 = v21;
    if (*(unsigned char *)(v4 + 58))
    {
      char v16 = 1;
      char v23 = 1;
    }
    else
    {
      char v23 = v13;
    }
    if (*(unsigned char *)(v4 + 58)) {
      BOOL v20 = 1;
    }
    if (v14 > v21) {
      char v24 = 1;
    }
    else {
      char v24 = v18;
    }
    if (v11 > v22) {
      char v25 = 1;
    }
    else {
      char v25 = v16;
    }
    if (v10 > v22) {
      char v26 = 1;
    }
    else {
      char v26 = v23;
    }
    char v27 = v7 > v22 || v20;
    while ((v24 & 1) != 0 || *(void *)(*(void *)(v4 + 24) + 8 * v14) == 1)
    {
      uint64_t v28 = 0;
      if (v17 >= 1) {
        goto LABEL_33;
      }
LABEL_27:
      if (++v19 == v15) {
        return;
      }
    }
    uint64_t v28 = *(void *)(*(void *)(v4 + 64) + 8 * v14);
    if (v17 < 1) {
      goto LABEL_27;
    }
LABEL_33:
    uint64_t v29 = 0;
    uint64_t v30 = v5 + v28 * v19;
    while ((v25 & 1) != 0 || *(void *)(*(void *)(v4 + 24) + 8 * v11) == 1)
    {
      uint64_t v31 = 0;
      if (v12 >= 1) {
        goto LABEL_40;
      }
LABEL_34:
      if (++v29 == v17) {
        goto LABEL_27;
      }
    }
    uint64_t v31 = *(void *)(*(void *)(v4 + 64) + 8 * v11);
    if (v12 < 1) {
      goto LABEL_34;
    }
LABEL_40:
    uint64_t v32 = 0;
    uint64_t v33 = v30 + v31 * v29;
    while (1)
    {
      if ((v26 & 1) != 0 || *(void *)(*(void *)(v4 + 24) + 8 * v10) == 1)
      {
        uint64_t v34 = 0;
        if (v9 >= 1) {
          goto LABEL_47;
        }
      }
      else
      {
        uint64_t v34 = *(void *)(*(void *)(v4 + 64) + 8 * v10);
        if (v9 >= 1)
        {
LABEL_47:
          uint64_t v35 = 0;
          uint64_t v36 = v33 + v34 * v32;
          uint64_t v37 = *(void *)(v4 + 40);
          do
          {
            if ((v27 & 1) != 0 || *(void *)(*(void *)(v4 + 24) + 8 * v7) == 1) {
              uint64_t v38 = 0;
            }
            else {
              uint64_t v38 = *(void *)(*(void *)(v4 + 64) + 8 * v7);
            }
            *(_WORD *)(v36 + v38 * v35++ + v37) = 0;
          }
          while (v9 != v35);
        }
      }
      if (++v32 == v12) {
        goto LABEL_34;
      }
    }
  }
  uint64_t v10 = v6 - 2;
  uint64_t v12 = *(void *)(v8 + 8 * (v6 - 2));
  if ((unint64_t)v6 <= 2)
  {
    uint64_t v10 = 0;
    char v13 = 0;
    uint64_t v11 = -1;
    goto LABEL_6;
  }
  uint64_t v11 = v6 - 3;
  uint64_t v17 = *(void *)(v8 + 8 * (v6 - 3));
  if (v6 == 3)
  {
    char v16 = 0;
    uint64_t v11 = 0;
    char v13 = 0;
    uint64_t v15 = 1;
    uint64_t v14 = -1;
    uint64_t v10 = 1;
    goto LABEL_7;
  }
  uint64_t v14 = v6 - 4;
  uint64_t v15 = *(void *)(v8 + 8 * (v6 - 4));
  if (v15 >= 1)
  {
    char v16 = 0;
    char v13 = 0;
    char v18 = 0;
    goto LABEL_8;
  }
}

size_t support::emitVarInt(support *this, unint64_t a2)
{
  v8[1] = *MEMORY[0x1E4F143B8];
  if (a2 <= 0x7F)
  {
    uint64_t v4 = (unsigned char *)*((void *)this + 4);
    if ((unint64_t)v4 >= *((void *)this + 3))
    {
      llvm::raw_ostream::write(this, (2 * a2) | 1);
    }
    else
    {
      *((void *)this + 4) = v4 + 1;
      *uint64_t v4 = (2 * a2) | 1;
    }
    return 1;
  }
  if (!(a2 >> 14))
  {
    size_t v5 = 2;
LABEL_25:
    v8[0] = ((2 * a2) | 1) << (v5 - 1);
    llvm::raw_ostream::write(this, (const char *)v8, v5);
    return v5;
  }
  if (a2 < 0x200000)
  {
    size_t v5 = 3;
    goto LABEL_25;
  }
  if (!(a2 >> 28))
  {
    size_t v5 = 4;
    goto LABEL_25;
  }
  if (!(a2 >> 35))
  {
    size_t v5 = 5;
    goto LABEL_25;
  }
  if (!(a2 >> 42))
  {
    size_t v5 = 6;
    goto LABEL_25;
  }
  if (!(a2 >> 49))
  {
    size_t v5 = 7;
    goto LABEL_25;
  }
  if (!HIBYTE(a2))
  {
    size_t v5 = 8;
    goto LABEL_25;
  }
  uint64_t v6 = (unsigned char *)*((void *)this + 4);
  if ((unint64_t)v6 >= *((void *)this + 3))
  {
    llvm::raw_ostream::write(this, 0);
  }
  else
  {
    *((void *)this + 4) = v6 + 1;
    unsigned char *v6 = 0;
  }
  v8[0] = a2;
  llvm::raw_ostream::write(this, (const char *)v8, 8uLL);
  return 9;
}

unint64_t support::anonymous namespace'::parseMultiByteVarInt(const void **this, unint64_t a2)
{
  unsigned __int8 v2 = a2;
  size_t v4 = __clz(__rbit32(a2));
  unsigned __int8 v9 = HIBYTE(a2);
  unsigned __int16 v8 = HIDWORD(a2) >> 8;
  unsigned int __dst = a2 >> 8;
  size_t v5 = (char *)*this;
  memcpy(&__dst, *this, v4);
  *this = &v5[v4];
  return (((unint64_t)__dst << 8) | ((unint64_t)(v8 | (v9 << 16)) << 40) | v2) >> (v4 + 1);
}

uint64_t support::ResourceStorage::add(unsigned char *a1, void *a2, long long **a3, uint64_t a4, uint64_t a5)
{
  v36.st_birthtimespec.tv_nsec = *MEMORY[0x1E4F143B8];
  if (a3[1])
  {
    LODWORD(v34) = 0;
    uint64_t v35 = std::system_category();
    llvm::raw_fd_ostream::raw_fd_ostream((uint64_t)v33, a1, (uint64_t)a2, (uint64_t)&v34, 3, 2, 4);
    if (v34)
    {
      if (a5) {
        MEMORY[0x1852FD9F0](a5, "Failed to open resource file.", 29);
      }
      uint64_t v10 = 0;
LABEL_40:
      llvm::raw_fd_ostream::~raw_fd_ostream((llvm::raw_fd_ostream *)v33);
      return v10;
    }
    llvm::raw_fd_ostream::lock((llvm::raw_fd_ostream *)v33, (uint64_t)&v36.st_ctimespec.tv_nsec);
    if (v36.st_birthtimespec.tv_sec)
    {
      tv_nsec = (void *)v36.st_ctimespec.tv_nsec;
      v36.st_ctimespec.tv_nsec = 0;
      v31[0] = tv_nsec;
      llvm::handleErrors<llvm::consumeError(llvm::Error)::{lambda(llvm::ErrorInfoBase const&)#1}>(v31, (uint64_t *)&v36.st_dev);
      if (v31[0]) {
        (*(void (**)(void *))(*v31[0] + 8))(v31[0]);
      }
      if (a5)
      {
        char v13 = "Failed to lock resource file.";
        uint64_t v14 = a5;
        uint64_t v15 = 29;
        goto LABEL_19;
      }
    }
    else
    {
      __int16 v32 = 261;
      v31[0] = a1;
      v31[1] = a2;
      memset(&v36, 0, 44);
      *(uint64_t *)((char *)&v36.st_atimespec.tv_nsec + 4) = 0xFFFFLL;
      WORD2(v36.st_mtimespec.tv_sec) = 0;
      v36.st_mtimespec.tv_nsec = 0;
      uint64_t v11 = llvm::sys::fs::status((llvm::sys::fs *)v31, &v36, (llvm::sys::fs::file_status *)1);
      if (!v11)
      {
        tv_sec = (const unsigned __int8 *)v36.st_atimespec.tv_sec;
        char v18 = std::system_category();
        uint64_t v34 = 0;
        uint64_t v35 = v18;
        uint64_t v19 = a3[1];
        if (v19)
        {
          BOOL v20 = *a3;
          uint64_t v21 = 48 * (void)v19;
          do
          {
            if (*((char *)v20 + 23) < 0)
            {
              std::string::__init_copy_ctor_external((std::string *)&v36, *(const std::string::value_type **)v20, *((void *)v20 + 1));
            }
            else
            {
              long long v22 = *v20;
              *(void *)&v36.st_uid = *((void *)v20 + 2);
              *(_OWORD *)&v36.st_dev = v22;
            }
            long long v23 = *(long long *)((char *)v20 + 24);
            v36.st_atimespec.tv_nsec = *((void *)v20 + 5);
            *(_OWORD *)&v36.st_rdev = v23;
            long long v24 = v23;
            if ((v36.st_gid & 0x80000000) == 0) {
              char v25 = &v36;
            }
            else {
              char v25 = *(stat **)&v36.st_dev;
            }
            if ((v36.st_gid & 0x80000000) == 0) {
              __darwin_ino64_t st_gid_high = HIBYTE(v36.st_gid);
            }
            else {
              __darwin_ino64_t st_gid_high = v36.st_ino;
            }
            (*llvm::StringMap<support::ResourceStorage::ResourceReadInfo,llvm::MallocAllocator>::try_emplace<>(a4, (int8x16_t *)v25, (const unsigned __int8 *)st_gid_high))[1] = tv_sec;
            unsigned int v27 = support::emitVarInt((support *)v33, *((unint64_t *)&v24 + 1));
            unsigned int v28 = support::emitVarInt((support *)v33, v36.st_atimespec.tv_nsec);
            llvm::raw_ostream::write((llvm::raw_ostream *)v33, (const char *)v24, *((size_t *)&v24 + 1));
            if (SHIBYTE(v36.st_gid) < 0) {
              operator delete(*(void **)&v36.st_dev);
            }
            tv_sec += *((void *)&v24 + 1) + v27 + v28;
            v20 += 3;
            v21 -= 48;
          }
          while (v21);
        }
        uint64_t v10 = 1;
        if ((v36.st_birthtimespec.tv_sec & 1) == 0) {
          goto LABEL_21;
        }
        goto LABEL_38;
      }
      uint64_t v34 = v11;
      uint64_t v35 = v12;
      if (a5)
      {
        char v13 = "Failed to get the file size.";
        uint64_t v14 = a5;
        uint64_t v15 = 28;
LABEL_19:
        MEMORY[0x1852FD9F0](v14, v13, v15);
      }
    }
    uint64_t v10 = 0;
    if ((v36.st_birthtimespec.tv_sec & 1) == 0)
    {
LABEL_21:
      if (LODWORD(v36.st_ctimespec.tv_nsec) != -1) {
        llvm::sys::fs::unlockFile((llvm::sys::fs *)LODWORD(v36.st_ctimespec.tv_nsec));
      }
      goto LABEL_40;
    }
LABEL_38:
    uint64_t v29 = v36.st_ctimespec.tv_nsec;
    v36.st_ctimespec.tv_nsec = 0;
    if (v29) {
      (*(void (**)(uint64_t))(*(void *)v29 + 8))(v29);
    }
    goto LABEL_40;
  }
  if (a5) {
    MEMORY[0x1852FD9F0](a5, "No resources to write.", 22);
  }
  return 0;
}

BOOL support::ResourceStorage::read(uint64_t **a1, uint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, size_t, unint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v73 = *MEMORY[0x1E4F143B8];
  if (*(_DWORD *)(a3 + 12))
  {
    int v65 = 0;
    uint64_t v66 = std::system_category();
    uint64_t v67 = a1;
    uint64_t v64 = (uint64_t *)&v65;
    __int16 v70 = 261;
    uint64_t v68 = a2;
    uint64_t v10 = llvm::sys::fs::openFile((unsigned __int8 *)&v67, (int *)&v63, 2, 1, 0, 438);
    uint64_t v11 = v64;
    uint64_t *v64 = v10;
    v11[1] = v12;
    if (*(_DWORD *)v64)
    {
      if (v65)
      {
LABEL_4:
        if (a6) {
          MEMORY[0x1852FD9F0](a6, "Failed to open resource file.", 29);
        }
        int v13 = 1;
        goto LABEL_74;
      }
    }
    else
    {
      uint64_t v15 = llvm::sys::fs::lockFile((llvm::sys::fs *)v63, 0);
      char v16 = v64;
      uint64_t *v64 = v15;
      v16[1] = v17;
      if (v65) {
        goto LABEL_4;
      }
    }
    __int16 v70 = 261;
    uint64_t v67 = a1;
    uint64_t v68 = a2;
    llvm::MemoryBuffer::getOpenFile((llvm::sys::fs *)v63, (llvm::sys::fs::file_status *)&v67, 0xFFFFFFFFFFFFFFFFLL, 1, 0, 0, (uint64_t)&v71);
    if (v72)
    {
      uint64_t v18 = v71;
      if (v71)
      {
        if (a6) {
          MEMORY[0x1852FD9F0](a6, "Failed to read resource file.", 29);
        }
        int v13 = 1;
        if (v72) {
          goto LABEL_74;
        }
        goto LABEL_72;
      }
    }
    else
    {
      std::system_category();
      uint64_t v18 = v71;
    }
    uint64_t v71 = 0;
    uint64_t v68 = 0;
    uint64_t v69 = 0;
    uint64_t v67 = &v68;
    uint64_t v19 = *(uint64_t ****)a3;
    uint64_t v20 = *(unsigned int *)(a3 + 8);
    if (v20)
    {
      for (i = *(uint64_t ****)a3; ; ++i)
      {
        BOOL v22 = !*i || *i + 1 == 0;
        if (!v22) {
          break;
        }
      }
    }
    else
    {
      i = *(uint64_t ****)a3;
    }
    long long v23 = &v19[v20];
    if (i != v23)
    {
      uint64_t v59 = v18;
      long long v24 = *i;
      do
      {
        char v25 = (uint64_t *)(v24 + 2);
        char v26 = *v24;
        uint64_t v29 = v24[1];
        unsigned int v28 = (uint64_t *)(v24 + 1);
        unsigned int v27 = v29;
        uint64_t v30 = v68;
        uint64_t v31 = &v68;
        __int16 v32 = &v68;
        if (v68)
        {
          while (1)
          {
            while (1)
            {
              __int16 v32 = (uint64_t **)v30;
              unint64_t v33 = v30[4];
              if ((unint64_t)v27 >= v33) {
                break;
              }
              uint64_t v30 = *v32;
              uint64_t v31 = v32;
              if (!*v32) {
                goto LABEL_38;
              }
            }
            if (v33 >= (unint64_t)v27) {
              break;
            }
            uint64_t v30 = v32[1];
            if (!v30)
            {
              uint64_t v31 = v32 + 1;
              goto LABEL_38;
            }
          }
        }
        else
        {
LABEL_38:
          uint64_t v34 = (uint64_t *)v32;
          __int16 v32 = (uint64_t **)operator new(0x40uLL);
          v32[4] = v27;
          v32[5] = 0;
          v32[6] = 0;
          v32[7] = 0;
          char *v32 = 0;
          v32[1] = 0;
          v32[2] = v34;
          char *v31 = (uint64_t *)v32;
          uint64_t v35 = (uint64_t *)v32;
          if (*v67)
          {
            uint64_t v67 = (uint64_t **)*v67;
            uint64_t v35 = *v31;
          }
          std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(v68, v35);
          ++v69;
        }
        v32[5] = v25;
        v32[6] = v26;
        ++i;
        v32[7] = v28;
        while (1)
        {
          long long v24 = *i;
          if (*i && v24 + 1 != 0) {
            break;
          }
          ++i;
        }
      }
      while (i != v23);
      uint64_t v37 = (uint64_t *)v67;
      if (v67 == &v68)
      {
        std::__tree<std::__value_type<ZinIrDimension,char>,std::__map_value_compare<ZinIrDimension,std::__value_type<ZinIrDimension,char>,std::less<ZinIrDimension>,true>,std::allocator<std::__value_type<ZinIrDimension,char>>>::destroy((uint64_t)&v67, v68);
        uint64_t v18 = v59;
        goto LABEL_70;
      }
      uint64_t v18 = v59;
      uint64_t v38 = *(void *)(v59 + 8);
      do
      {
        uint64_t v39 = v37[5];
        uint64_t v40 = v37[6];
        uint64_t v41 = (unsigned __int8 *)(v38 + v37[4]);
        char v44 = *v41;
        uint64_t v43 = v41 + 1;
        unint64_t v42 = *v41;
        uint64_t v62 = v41 + 1;
        if (v44)
        {
          size_t v45 = v42 >> 1;
        }
        else if (v42)
        {
          uint64_t v43 = v62;
        }
        else
        {
          size_t v45 = *(void *)(v41 + 1);
          uint64_t v43 = v41 + 9;
        }
        uint64_t v47 = v43 + 1;
        unint64_t v46 = *v43;
        uint64_t v62 = v43 + 1;
        if (v46)
        {
          unint64_t v48 = v46 >> 1;
        }
        else if (v46)
        {
          uint64_t v47 = v62;
        }
        else
        {
          unint64_t v48 = *(void *)(v43 + 1);
          uint64_t v47 = v43 + 9;
        }
        uint64_t v49 = (void *)a4(a5, v39, v40, v45, v48);
        memcpy(v49, v47, v45);
        uint64_t v50 = (uint64_t *)v37[1];
        if (v50)
        {
          do
          {
            uint64_t v51 = (uint64_t **)v50;
            uint64_t v50 = (uint64_t *)*v50;
          }
          while (v50);
        }
        else
        {
          do
          {
            uint64_t v51 = (uint64_t **)v37[2];
            BOOL v22 = *v51 == v37;
            uint64_t v37 = (uint64_t *)v51;
          }
          while (!v22);
        }
        uint64_t v37 = (uint64_t *)v51;
      }
      while (v51 != &v68);
    }
    std::__tree<std::__value_type<ZinIrDimension,char>,std::__map_value_compare<ZinIrDimension,std::__value_type<ZinIrDimension,char>,std::less<ZinIrDimension>,true>,std::allocator<std::__value_type<ZinIrDimension,char>>>::destroy((uint64_t)&v67, v68);
    if (!v18)
    {
LABEL_71:
      int v13 = 0;
      if (v72)
      {
LABEL_74:
        uint64_t v53 = llvm::sys::fs::unlockFile((llvm::sys::fs *)v63);
        uint64_t v55 = v64;
        uint64_t *v64 = v53;
        v55[1] = (uint64_t)v54;
        if (!*(_DWORD *)v64)
        {
          uint64_t v56 = llvm::sys::fs::closeFile((llvm::sys::fs *)&v63, v54);
          uint64_t v57 = v64;
          uint64_t *v64 = v56;
          v57[1] = v58;
        }
        return (v13 | v65) == 0;
      }
LABEL_72:
      uint64_t v52 = v71;
      uint64_t v71 = 0;
      if (v52) {
        (*(void (**)(uint64_t))(*(void *)v52 + 8))(v52);
      }
      goto LABEL_74;
    }
LABEL_70:
    (*(void (**)(uint64_t))(*(void *)v18 + 8))(v18);
    goto LABEL_71;
  }
  if (a6) {
    MEMORY[0x1852FD9F0](a6, "No resources to read.", 21);
  }
  return 0;
}

void **llvm::handleErrors<llvm::consumeError(llvm::Error)::{lambda(llvm::ErrorInfoBase const&)#1}>@<X0>(void **result@<X0>, uint64_t *a2@<X8>)
{
  float v3 = *result;
  if (*result)
  {
    *uint64_t result = 0;
    if ((*(unsigned int (**)(void *, void *))(*v3 + 48))(v3, &llvm::ErrorList::ID))
    {
      *a2 = 0;
      size_t v4 = (uint64_t **)v3[1];
      size_t v5 = (uint64_t **)v3[2];
      if (v4 != v5)
      {
        uint64_t v6 = 0;
        do
        {
          uint64_t v10 = v6;
          uint64_t v7 = *v4;
          *size_t v4 = 0;
          if ((*(unsigned int (**)(uint64_t *, void *))(*v7 + 48))(v7, &llvm::ErrorInfoBase::ID))
          {
            (*(void (**)(uint64_t *))(*v7 + 8))(v7);
            uint64_t v7 = 0;
          }
          unsigned __int8 v9 = v7;
          llvm::ErrorList::join(&v10, &v9, &v11);
          uint64_t v6 = v11;
          *a2 = v11;
          uint64_t v11 = 0;
          if (v9) {
            (*(void (**)(uint64_t *))(*v9 + 8))(v9);
          }
          if (v10) {
            (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
          }
          ++v4;
        }
        while (v4 != v5);
      }
      return (void **)(*(uint64_t (**)(void *))(*v3 + 8))(v3);
    }
    else
    {
      uint64_t result = (void **)(*(uint64_t (**)(void *, void *))(*v3 + 48))(v3, &llvm::ErrorInfoBase::ID);
      if (result)
      {
        *a2 = 0;
        unsigned __int16 v8 = *(uint64_t (**)(void *))(*v3 + 8);
        return (void **)v8(v3);
      }
      else
      {
        *a2 = (uint64_t)v3;
      }
    }
  }
  else
  {
    *a2 = 0;
  }
  return result;
}

uint64_t *llvm::ErrorList::join@<X0>(uint64_t *a1@<X0>, uint64_t **a2@<X1>, void *a3@<X8>)
{
  uint64_t result = (uint64_t *)*a1;
  uint64_t v7 = *a2;
  if (!result)
  {
LABEL_18:
    *a3 = v7;
    *a2 = 0;
    return result;
  }
  if (!v7)
  {
    *a3 = result;
LABEL_33:
    *a1 = 0;
    return result;
  }
  if ((*(unsigned int (**)(uint64_t *, void *))(*result + 48))(result, &llvm::ErrorList::ID))
  {
    unsigned __int16 v8 = (uint64_t *)*a1;
    uint64_t result = *a2;
    if (*a2)
    {
      uint64_t result = (uint64_t *)(*(uint64_t (**)(uint64_t *, void *))(*result + 48))(result, &llvm::ErrorList::ID);
      unsigned __int8 v9 = *a2;
      if (result)
      {
        *a2 = 0;
        uint64_t v10 = (uint64_t *)v9[1];
        uint64_t v11 = (uint64_t *)v9[2];
        if (v10 == v11) {
          goto LABEL_31;
        }
        uint64_t result = (uint64_t *)v8[2];
        do
        {
          if ((unint64_t)result >= v8[3])
          {
            uint64_t result = std::vector<std::unique_ptr<llvm::ErrorInfoBase>>::__push_back_slow_path<std::unique_ptr<llvm::ErrorInfoBase>>(v8 + 1, v10);
          }
          else
          {
            uint64_t v12 = *v10;
            uint64_t *v10 = 0;
            *result++ = v12;
          }
          void v8[2] = (uint64_t)result;
          ++v10;
        }
        while (v10 != v11);
        if (v9) {
LABEL_31:
        }
          uint64_t result = (uint64_t *)(*(uint64_t (**)(uint64_t *))(*v9 + 8))(v9);
LABEL_32:
        *a3 = *a1;
        goto LABEL_33;
      }
    }
    else
    {
      unsigned __int8 v9 = 0;
    }
    char v26 = v9;
    *a2 = 0;
    uint64_t v20 = (uint64_t **)v8[2];
    if ((unint64_t)v20 >= v8[3])
    {
      long long v23 = std::vector<std::unique_ptr<llvm::ErrorInfoBase>>::__push_back_slow_path<std::unique_ptr<llvm::ErrorInfoBase>>(v8 + 1, (uint64_t *)&v26);
      uint64_t result = v26;
      void v8[2] = (uint64_t)v23;
      char v26 = 0;
      if (result) {
        uint64_t result = (uint64_t *)(*(uint64_t (**)(uint64_t *))(*result + 8))(result);
      }
    }
    else
    {
      long long *v20 = v9;
      void v8[2] = (uint64_t)(v20 + 1);
    }
    goto LABEL_32;
  }
  if (*a2 && (*(unsigned int (**)(uint64_t *, void *))(**a2 + 48))(*a2, &llvm::ErrorList::ID))
  {
    int v13 = (char **)(*a2 + 1);
    uint64_t v14 = *v13;
    char v26 = (uint64_t *)*a1;
    *a1 = 0;
    std::vector<std::unique_ptr<llvm::ErrorInfoBase>>::insert(v13, (uint64_t)v14, (uint64_t *)&v26);
    uint64_t result = v26;
    char v26 = 0;
    if (result) {
      uint64_t result = (uint64_t *)(*(uint64_t (**)(uint64_t *))(*result + 8))(result);
    }
    uint64_t v7 = *a2;
    goto LABEL_18;
  }
  uint64_t v15 = operator new(0x20uLL);
  uint64_t v16 = *a1;
  *a1 = 0;
  uint64_t v17 = *a2;
  long long v24 = *a2;
  char v25 = (uint64_t *)v16;
  *a2 = 0;
  void *v15 = &unk_1EC9A48D8;
  v15[1] = 0;
  v15[2] = 0;
  v15[3] = 0;
  uint64_t v18 = std::vector<std::unique_ptr<llvm::ErrorInfoBase>>::__push_back_slow_path<std::unique_ptr<llvm::ErrorInfoBase>>(v15 + 1, (uint64_t *)&v25);
  unint64_t v19 = v15[3];
  v15[2] = v18;
  if ((unint64_t)v18 >= v19)
  {
    uint64_t v21 = std::vector<std::unique_ptr<llvm::ErrorInfoBase>>::__push_back_slow_path<std::unique_ptr<llvm::ErrorInfoBase>>(v15 + 1, (uint64_t *)&v24);
    uint64_t v22 = (uint64_t)v24;
    v15[2] = v21;
    *a3 = v15;
    long long v24 = 0;
    if (v22) {
      (*(void (**)(uint64_t))(*(void *)v22 + 8))(v22);
    }
  }
  else
  {
    void *v18 = v17;
    v15[2] = v18 + 1;
    *a3 = v15;
    long long v24 = 0;
  }
  uint64_t result = v25;
  char v25 = 0;
  if (result) {
    return (uint64_t *)(*(uint64_t (**)(uint64_t *))(*result + 8))(result);
  }
  return result;
}

char *std::vector<std::unique_ptr<llvm::ErrorInfoBase>>::insert(char **a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = *a1;
  unint64_t v5 = (unint64_t)a1[1];
  uint64_t v7 = a2 - (void)*a1;
  uint64_t v8 = v7 >> 3;
  unsigned __int8 v9 = &(*a1)[v7 & 0xFFFFFFFFFFFFFFF8];
  unint64_t v10 = (unint64_t)a1[2];
  if (v5 < v10)
  {
    if (v9 == (char *)v5)
    {
      uint64_t v24 = *a3;
      *a3 = 0;
      *(void *)unsigned __int8 v9 = v24;
      a1[1] = v9 + 8;
      return v9;
    }
    uint64_t v11 = v5 - (void)(v9 + 8);
    uint64_t v12 = v11 >> 3;
    int v13 = (uint64_t *)(v5 - 8);
    if (v5 < 8)
    {
      unint64_t v19 = a1[1];
    }
    else
    {
      unint64_t v14 = v7 & 0xFFFFFFFFFFFFFFF8;
      unint64_t v15 = (v7 & 0xFFFFFFFFFFFFFFF8) + v11;
      if (v5 <= (unint64_t)&v6[v15 + 8]) {
        uint64_t v16 = (uint64_t)&v6[v15 + 8];
      }
      else {
        uint64_t v16 = (uint64_t)a1[1];
      }
      unint64_t v17 = v16 + ~(unint64_t)v6 - v15;
      if (v17 >= 0xE8)
      {
        unint64_t v56 = v11 + v14;
        unint64_t v57 = (unint64_t)&v6[v14 + v5 - (void)v9];
        if (v5 > v57) {
          unint64_t v57 = (unint64_t)a1[1];
        }
        unint64_t v58 = (v57 + ~(unint64_t)v6 - v56) & 0xFFFFFFFFFFFFFFF8;
        BOOL v59 = (unint64_t)v13 >= v58 + v5 + 8 || v5 >= (unint64_t)&v6[v56 + 8 + v58];
        uint64_t v18 = (uint64_t *)(v5 - 8);
        unint64_t v19 = a1[1];
        if (v59)
        {
          uint64_t v60 = (v17 >> 3) + 1;
          uint64_t v61 = v60 & 0x3FFFFFFFFFFFFFFCLL;
          uint64_t v18 = &v13[v61];
          unint64_t v19 = (char *)(v5 + v61 * 8);
          uint64_t v62 = (_OWORD *)(v5 + 16);
          uint64_t v63 = &v6[8 * v12 + 16 + 8 * v8];
          uint64_t v64 = v60 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            long long v65 = *((_OWORD *)v63 - 1);
            long long v66 = *(_OWORD *)v63;
            *((_OWORD *)v63 - 1) = 0uLL;
            *(_OWORD *)uint64_t v63 = 0uLL;
            *(v62 - 1) = v65;
            *uint64_t v62 = v66;
            v62 += 2;
            v63 += 32;
            v64 -= 4;
          }
          while (v64);
          if (v60 == (v60 & 0x3FFFFFFFFFFFFFFCLL)) {
            goto LABEL_61;
          }
        }
      }
      else
      {
        uint64_t v18 = (uint64_t *)(v5 - 8);
        unint64_t v19 = a1[1];
      }
      do
      {
        uint64_t v67 = *v18;
        *v18++ = 0;
        *(void *)unint64_t v19 = v67;
        v19 += 8;
      }
      while ((unint64_t)v18 < v5);
    }
LABEL_61:
    a1[1] = v19;
    if ((char *)v5 != v9 + 8)
    {
      uint64_t v68 = 8 * v12;
      uint64_t v69 = (uint64_t)&v6[8 * v8 - 8];
      do
      {
        uint64_t v70 = *(void *)(v69 + v68);
        *(void *)(v69 + v68) = 0;
        uint64_t v71 = *v13;
        *int v13 = v70;
        if (v71) {
          (*(void (**)(uint64_t))(*(void *)v71 + 8))(v71);
        }
        --v13;
        v68 -= 8;
      }
      while (v68);
    }
    uint64_t v72 = *a3;
    *a3 = 0;
    uint64_t v73 = *(void *)v9;
    *(void *)unsigned __int8 v9 = v72;
    if (v73) {
      (*(void (**)(uint64_t))(*(void *)v73 + 8))(v73);
    }
    return v9;
  }
  unint64_t v20 = ((uint64_t)(v5 - (void)v6) >> 3) + 1;
  if (v20 >> 61) {
    abort();
  }
  uint64_t v21 = v10 - (void)v6;
  if (v21 >> 2 > v20) {
    unint64_t v20 = v21 >> 2;
  }
  if ((unint64_t)v21 >= 0x7FFFFFFFFFFFFFF8) {
    unint64_t v22 = 0x1FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v22 = v20;
  }
  int v79 = a1 + 2;
  if (v22)
  {
    if (v22 >> 61) {
      std::__throw_bad_array_new_length[abi:nn180100]();
    }
    long long v23 = (char *)operator new(8 * v22);
  }
  else
  {
    long long v23 = 0;
  }
  uint64_t v75 = v23;
  unint64_t v76 = (unint64_t)&v23[8 * v8];
  uint64_t v77 = (char *)v76;
  int v78 = &v23[8 * v22];
  std::__split_buffer<std::unique_ptr<llvm::ErrorInfoBase>>::push_back(&v75, a3);
  unint64_t v25 = v76;
  char v26 = *a1;
  unint64_t v27 = v76;
  if (*a1 != v9)
  {
    unint64_t v28 = &v6[v7 & 0xFFFFFFFFFFFFFFF8] - v26 - 8;
    uint64_t v29 = v9;
    unint64_t v27 = v76;
    if (v28 < 0x88) {
      goto LABEL_74;
    }
    if ((unint64_t)&v6[(v7 & 0xFFFFFFFFFFFFFFF8) - (v28 & 0xFFFFFFFFFFFFFFF8) - 8] < v76)
    {
      uint64_t v29 = v9;
      unint64_t v27 = v76;
      if (v76 - (v28 & 0xFFFFFFFFFFFFFFF8) - 8 < (unint64_t)v9) {
        goto LABEL_74;
      }
    }
    uint64_t v30 = (v28 >> 3) + 1;
    uint64_t v31 = 8 * (v30 & 0x3FFFFFFFFFFFFFFCLL);
    uint64_t v29 = &v9[-v31];
    unint64_t v27 = v76 - v31;
    __int16 v32 = (_OWORD *)(v76 - 16);
    unint64_t v33 = &v6[8 * v8 - 16];
    uint64_t v34 = v30 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      long long v36 = *((_OWORD *)v33 - 1);
      long long v35 = *(_OWORD *)v33;
      *((_OWORD *)v33 - 1) = 0uLL;
      *(_OWORD *)unint64_t v33 = 0uLL;
      *(v32 - 1) = v36;
      _OWORD *v32 = v35;
      v32 -= 2;
      v33 -= 32;
      v34 -= 4;
    }
    while (v34);
    if (v30 != (v30 & 0x3FFFFFFFFFFFFFFCLL))
    {
LABEL_74:
      do
      {
        uint64_t v37 = *((void *)v29 - 1);
        v29 -= 8;
        *(void *)uint64_t v29 = 0;
        *(void *)(v27 - 8) = v37;
        v27 -= 8;
      }
      while (v29 != v26);
    }
  }
  unint64_t v76 = v27;
  uint64_t v38 = a1[1];
  uint64_t v39 = v77;
  if (v38 != v9)
  {
    uint64_t v40 = &v6[v7 & 0xFFFFFFFFFFFFFFF8];
    unint64_t v41 = v38 - v40 - 8;
    if (v41 < 0x88) {
      goto LABEL_38;
    }
    unint64_t v42 = (unint64_t)&v40[(v41 & 0xFFFFFFFFFFFFFFF8) + 8];
    if (v9 < &v77[(v41 & 0xFFFFFFFFFFFFFFF8) + 8] && (unint64_t)v77 < v42) {
      goto LABEL_38;
    }
    uint64_t v44 = (v41 >> 3) + 1;
    uint64_t v45 = 8 * (v44 & 0x3FFFFFFFFFFFFFFCLL);
    v9 += v45;
    unint64_t v46 = &v77[v45];
    uint64_t v47 = v77 + 16;
    unint64_t v48 = &v6[8 * v8 + 16];
    uint64_t v49 = v44 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      long long v50 = *((_OWORD *)v48 - 1);
      long long v51 = *(_OWORD *)v48;
      *((_OWORD *)v48 - 1) = 0uLL;
      *(_OWORD *)unint64_t v48 = 0uLL;
      *(v47 - 1) = v50;
      _OWORD *v47 = v51;
      v47 += 2;
      v48 += 32;
      v49 -= 4;
    }
    while (v49);
    uint64_t v39 = v46;
    if (v44 != (v44 & 0x3FFFFFFFFFFFFFFCLL))
    {
LABEL_38:
      unint64_t v46 = v39;
      do
      {
        uint64_t v52 = *(void *)v9;
        *(void *)unsigned __int8 v9 = 0;
        v9 += 8;
        *(void *)unint64_t v46 = v52;
        v46 += 8;
      }
      while (v9 != v38);
    }
    unint64_t v27 = v76;
    unsigned __int8 v9 = a1[1];
    uint64_t v39 = v46;
  }
  uint64_t v53 = *a1;
  *a1 = (char *)v27;
  a1[1] = v39;
  uint64_t v54 = a1[2];
  a1[2] = v78;
  uint64_t v77 = v9;
  int v78 = v54;
  uint64_t v75 = v53;
  unint64_t v76 = (unint64_t)v53;
  if (v9 == v53)
  {
    if (!v9) {
      return (char *)v25;
    }
    goto LABEL_48;
  }
  do
  {
    uint64_t v77 = v9 - 8;
    uint64_t v55 = *((void *)v9 - 1);
    *((void *)v9 - 1) = 0;
    if (v55) {
      (*(void (**)(uint64_t))(*(void *)v55 + 8))(v55);
    }
    unsigned __int8 v9 = v77;
  }
  while (v77 != v53);
  unsigned __int8 v9 = v75;
  if (v75) {
LABEL_48:
  }
    operator delete(v9);
  return (char *)v25;
}

void *std::vector<std::unique_ptr<llvm::ErrorInfoBase>>::__push_back_slow_path<std::unique_ptr<llvm::ErrorInfoBase>>(void *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1] - *a1;
  uint64_t v3 = v2 >> 3;
  unint64_t v4 = (v2 >> 3) + 1;
  if (v4 >> 61) {
    abort();
  }
  uint64_t v7 = a1[2] - *a1;
  if (v7 >> 2 > v4) {
    unint64_t v4 = v7 >> 2;
  }
  if ((unint64_t)v7 >= 0x7FFFFFFFFFFFFFF8) {
    unint64_t v8 = 0x1FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v8 = v4;
  }
  if (v8)
  {
    if (v8 >> 61) {
      std::__throw_bad_array_new_length[abi:nn180100]();
    }
    unsigned __int8 v9 = (char *)operator new(8 * v8);
  }
  else
  {
    unsigned __int8 v9 = 0;
  }
  unint64_t v10 = &v9[8 * v3];
  uint64_t v11 = &v9[8 * v8];
  uint64_t v12 = *a2;
  *a2 = 0;
  *(void *)unint64_t v10 = v12;
  int v13 = v10 + 8;
  unint64_t v14 = (char *)*a1;
  unint64_t v15 = (char *)a1[1];
  if (v15 == (char *)*a1)
  {
    *a1 = v10;
    a1[1] = v13;
    a1[2] = v11;
  }
  else
  {
    unint64_t v16 = (unint64_t)&v15[-*a1 - 8];
    if (v16 < 0x78 || &v15[-(v16 & 0xFFFFFFFFFFFFFFF8) - 8] < v10 && &v9[v2 - (v16 & 0xFFFFFFFFFFFFFFF8) - 8] < v15) {
      goto LABEL_31;
    }
    uint64_t v17 = (v16 >> 3) + 1;
    uint64_t v18 = 8 * (v17 & 0x3FFFFFFFFFFFFFFCLL);
    unint64_t v19 = &v15[-v18];
    v10 -= v18;
    unint64_t v20 = &v9[8 * v3 - 16];
    uint64_t v21 = v15 - 16;
    uint64_t v22 = v17 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      long long v24 = *((_OWORD *)v21 - 1);
      long long v23 = *(_OWORD *)v21;
      *((_OWORD *)v21 - 1) = 0uLL;
      *(_OWORD *)uint64_t v21 = 0uLL;
      *((_OWORD *)v20 - 1) = v24;
      *(_OWORD *)unint64_t v20 = v23;
      v20 -= 32;
      v21 -= 32;
      v22 -= 4;
    }
    while (v22);
    unint64_t v15 = v19;
    if (v17 != (v17 & 0x3FFFFFFFFFFFFFFCLL))
    {
LABEL_31:
      do
      {
        uint64_t v25 = *((void *)v15 - 1);
        v15 -= 8;
        *(void *)unint64_t v15 = 0;
        *((void *)v10 - 1) = v25;
        v10 -= 8;
      }
      while (v15 != v14);
    }
    unint64_t v15 = (char *)*a1;
    char v26 = (char *)a1[1];
    *a1 = v10;
    a1[1] = v13;
    a1[2] = v11;
    while (v26 != v15)
    {
      uint64_t v28 = *((void *)v26 - 1);
      v26 -= 8;
      uint64_t v27 = v28;
      *(void *)char v26 = 0;
      if (v28) {
        (*(void (**)(uint64_t))(*(void *)v27 + 8))(v27);
      }
    }
  }
  if (v15) {
    operator delete(v15);
  }
  return v13;
}

void std::__split_buffer<std::unique_ptr<llvm::ErrorInfoBase>>::push_back(char **a1, uint64_t *a2)
{
  unint64_t v4 = a1[2];
  if (v4 != a1[3]) {
    goto LABEL_23;
  }
  unint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  if (v6 > *a1)
  {
    uint64_t v7 = (v6 - *a1) >> 3;
    if (v7 >= -1) {
      uint64_t v8 = v7 + 1;
    }
    else {
      uint64_t v8 = v7 + 2;
    }
    uint64_t v9 = v8 >> 1;
    uint64_t v10 = -v9;
    if (v6 == v4)
    {
      long long v23 = &v6[-8 * v9];
    }
    else
    {
      do
      {
        uint64_t v11 = *(void *)v6;
        *(void *)uint64_t v6 = 0;
        uint64_t v12 = *(void *)&v6[8 * v10];
        *(void *)&v6[8 * v10] = v11;
        if (v12) {
          (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
        }
        v6 += 8;
      }
      while (v6 != v4);
      unint64_t v4 = a1[1];
      long long v23 = &v6[8 * v10];
    }
    a1[1] = &v4[8 * v10];
    a1[2] = v23;
    goto LABEL_23;
  }
  unint64_t v13 = (v4 - v5) >> 2;
  if (v4 == v5) {
    unint64_t v13 = 1;
  }
  if (v13 >> 61) {
    std::__throw_bad_array_new_length[abi:nn180100]();
  }
  unint64_t v14 = v13 >> 2;
  uint64_t v15 = 8 * v13;
  unint64_t v16 = (char *)operator new(8 * v13);
  uint64_t v17 = &v16[8 * v14];
  uint64_t v18 = &v16[v15];
  int64_t v19 = v4 - v6;
  if (v4 == v6)
  {
    *a1 = v16;
    a1[1] = v17;
    a1[2] = v17;
    a1[3] = v18;
    goto LABEL_21;
  }
  unint64_t v20 = &v17[v19 & 0xFFFFFFFFFFFFFFF8];
  unint64_t v21 = v19 - 8;
  if ((unint64_t)(v19 - 8) < 0x78)
  {
    uint64_t v22 = &v16[8 * v14];
    do
    {
LABEL_32:
      uint64_t v36 = *(void *)v6;
      *(void *)uint64_t v6 = 0;
      v6 += 8;
      *(void *)uint64_t v22 = v36;
      v22 += 8;
    }
    while (v22 != v20);
    goto LABEL_33;
  }
  unint64_t v26 = v19 & 0xFFFFFFFFFFFFFFF8;
  BOOL v27 = v6 >= &v16[8 * v14 + v26] || v17 >= &v6[v26];
  uint64_t v22 = &v16[8 * v14];
  if (!v27) {
    goto LABEL_32;
  }
  uint64_t v28 = (v21 >> 3) + 1;
  uint64_t v29 = 8 * (v28 & 0x3FFFFFFFFFFFFFFCLL);
  uint64_t v22 = &v17[v29];
  uint64_t v30 = &v6[v29];
  uint64_t v31 = (long long *)(v6 + 16);
  __int16 v32 = &v16[8 * v14 + 16];
  uint64_t v33 = v28 & 0x3FFFFFFFFFFFFFFCLL;
  do
  {
    long long v34 = *(v31 - 1);
    long long v35 = *v31;
    *(v31 - 1) = 0uLL;
    long long *v31 = 0uLL;
    *((_OWORD *)v32 - 1) = v34;
    *(_OWORD *)__int16 v32 = v35;
    v31 += 2;
    v32 += 32;
    v33 -= 4;
  }
  while (v33);
  uint64_t v6 = v30;
  if (v28 != (v28 & 0x3FFFFFFFFFFFFFFCLL)) {
    goto LABEL_32;
  }
LABEL_33:
  unint64_t v5 = *a1;
  uint64_t v37 = a1[1];
  uint64_t v38 = a1[2];
  *a1 = v16;
  a1[1] = v17;
  a1[2] = v20;
  a1[3] = v18;
  while (v38 != v37)
  {
    uint64_t v40 = *((void *)v38 - 1);
    v38 -= 8;
    uint64_t v39 = v40;
    *(void *)uint64_t v38 = 0;
    if (v40) {
      (*(void (**)(uint64_t))(*(void *)v39 + 8))(v39);
    }
  }
LABEL_21:
  if (v5) {
    operator delete(v5);
  }
LABEL_23:
  long long v24 = a1[2];
  uint64_t v25 = *a2;
  *a2 = 0;
  *(void *)long long v24 = v25;
  a1[2] += 8;
}

const unsigned __int8 ***llvm::StringMap<support::ResourceStorage::ResourceReadInfo,llvm::MallocAllocator>::try_emplace<>(uint64_t a1, int8x16_t *a2, const unsigned __int8 *a3)
{
  uint64_t v6 = llvm::StringMapImpl::LookupBucketFor((uint64_t *)a1, a2, a3);
  i = (const unsigned __int8 ***)(*(void *)a1 + 8 * v6);
  uint64_t v8 = *i;
  if (*i == (const unsigned __int8 **)-8)
  {
    --*(_DWORD *)(a1 + 16);
  }
  else if (v8)
  {
    while (!v8 || v8 == (const unsigned __int8 **)-8)
    {
      uint64_t v9 = i[1];
      ++i;
      uint64_t v8 = v9;
    }
    return i;
  }
  buffer = llvm::allocate_buffer((size_t)(a3 + 17), (std::align_val_t)8uLL);
  uint64_t v11 = (const unsigned __int8 **)buffer;
  uint64_t v12 = (char *)(buffer + 2);
  if (a3) {
    memcpy(buffer + 2, a2, (size_t)a3);
  }
  a3[(void)v12] = 0;
  *uint64_t v11 = a3;
  v11[1] = 0;
  *i = v11;
  ++*(_DWORD *)(a1 + 12);
  for (i = (const unsigned __int8 ***)(*(void *)a1
                                      + 8
                                      * llvm::StringMapImpl::RehashTable((llvm::StringMapImpl *)a1, v6));
        !*i || *i + 1 == 0;
  return i;
}

uint64_t mlir::ShapeEquivalence::ShapeEquivalence(uint64_t a1, mlir::ForwardIterator *a2)
{
  *(void *)a1 = a1 + 16;
  *(void *)(a1 + 8) = 0x400000000;
  *(void *)(a1 + 208) = 0;
  *(void *)(a1 + 216) = 0;
  *(_DWORD *)(a1 + 224) = 0;
  if (a2)
  {
    uint64_t v4 = a1;
    mlir::detail::walk<mlir::ForwardIterator>(a2, (mlir::Operation *)llvm::function_ref<void ()(mlir::Operation *)>::callback_fn<mlir::ShapeEquivalence::compute(mlir::FunctionOpInterface)::$_0>, (uint64_t)&v4, 1);
  }
  return a1;
}

uint64_t mlir::ShapeEquivalence::makeEquivalent(uint64_t a1, unint64_t a2, unint64_t a3)
{
  v22[4] = *MEMORY[0x1E4F143B8];
  unint64_t v19 = a3;
  unint64_t v20 = a2;
  uint64_t v4 = (uint64_t *)(a1 + 208);
  v21[0] = 0;
  uint64_t result = llvm::DenseMapBase<llvm::DenseMap<mlir::Value,unsigned int,llvm::DenseMapInfo<mlir::Value,void>,llvm::detail::DenseMapPair<mlir::Value,unsigned int>>,mlir::Value,unsigned int,llvm::DenseMapInfo<mlir::Value,void>,llvm::detail::DenseMapPair<mlir::Value,unsigned int>>::LookupBucketFor<mlir::Value>((uint64_t *)(a1 + 208), &v19, v21);
  if ((result & 1) == 0)
  {
    v21[0] = 0;
    uint64_t v6 = v21;
    if (!llvm::DenseMapBase<llvm::DenseMap<mlir::Value,unsigned int,llvm::DenseMapInfo<mlir::Value,void>,llvm::detail::DenseMapPair<mlir::Value,unsigned int>>,mlir::Value,unsigned int,llvm::DenseMapInfo<mlir::Value,void>,llvm::detail::DenseMapPair<mlir::Value,unsigned int>>::LookupBucketFor<mlir::Value>(v4, &v20, v21)|| v21[0] == (void *)(*(void *)(a1 + 208) + 16 * *(unsigned int *)(a1 + 224)))
    {
      v21[0] = v22;
      v22[0] = v20;
      v21[1] = (void *)0x400000001;
      uint64_t v7 = *(unsigned int *)(a1 + 8);
      unint64_t v9 = *(void *)a1;
      if (v7 >= *(_DWORD *)(a1 + 12))
      {
        unint64_t v17 = v7 + 1;
        if (v9 <= (unint64_t)v21 && v9 + 48 * v7 > (unint64_t)v21)
        {
          uint64_t v18 = (char *)v21 - v9;
          llvm::SmallVectorTemplateBase<llvm::SmallVector<mlir::Value,4u>,false>::grow(a1, v17);
          unint64_t v9 = *(void *)a1;
          uint64_t v6 = (void **)&v18[*(void *)a1];
        }
        else
        {
          llvm::SmallVectorTemplateBase<llvm::SmallVector<mlir::Value,4u>,false>::grow(a1, v17);
          unint64_t v9 = *(void *)a1;
          uint64_t v6 = v21;
        }
      }
      uint64_t v10 = (void *)(v9 + 48 * *(unsigned int *)(a1 + 8));
      void *v10 = v10 + 2;
      v10[1] = 0x400000000;
      if (*((_DWORD *)v6 + 2)) {
        llvm::SmallVectorImpl<mlir::Value>::operator=((uint64_t)v10, (uint64_t)v6);
      }
      unsigned int v11 = *(_DWORD *)(a1 + 8) + 1;
      *(_DWORD *)(a1 + 8) = v11;
      if (v21[0] != v22)
      {
        free(v21[0]);
        unsigned int v11 = *(_DWORD *)(a1 + 8);
      }
      uint64_t v8 = *(void *)a1 + 48 * v11 - 48;
      v21[0] = 0;
      char v12 = llvm::DenseMapBase<llvm::DenseMap<mlir::Value,unsigned int,llvm::DenseMapInfo<mlir::Value,void>,llvm::detail::DenseMapPair<mlir::Value,unsigned int>>,mlir::Value,unsigned int,llvm::DenseMapInfo<mlir::Value,void>,llvm::detail::DenseMapPair<mlir::Value,unsigned int>>::LookupBucketFor<mlir::Value>(v4, &v20, v21);
      unint64_t v13 = v21[0];
      if ((v12 & 1) == 0)
      {
        unint64_t v13 = llvm::DenseMapBase<llvm::DenseMap<mlir::Value,unsigned long long,llvm::DenseMapInfo<mlir::Value,void>,llvm::detail::DenseMapPair<mlir::Value,unsigned long long>>,mlir::Value,unsigned long long,llvm::DenseMapInfo<mlir::Value,void>,llvm::detail::DenseMapPair<mlir::Value,unsigned long long>>::InsertIntoBucketImpl<mlir::Value>((uint64_t)v4, (uint64_t)&v20, &v20, (void *)v21[0]);
        *unint64_t v13 = v20;
        v13[1] = 0;
      }
      v13[1] = v7;
    }
    else
    {
      uint64_t v7 = *((void *)v21[0] + 1);
      uint64_t v8 = *(void *)a1 + 48 * v7;
    }
    unint64_t v14 = v19;
    uint64_t v15 = *(unsigned int *)(v8 + 8);
    if (v15 >= *(_DWORD *)(v8 + 12))
    {
      llvm::SmallVectorBase<unsigned int>::grow_pod(v8, (void *)(v8 + 16), v15 + 1, 8);
      LODWORD(v15) = *(_DWORD *)(v8 + 8);
    }
    *(void *)(*(void *)v8 + 8 * v15) = v14;
    ++*(_DWORD *)(v8 + 8);
    v21[0] = 0;
    uint64_t result = llvm::DenseMapBase<llvm::DenseMap<mlir::Value,unsigned int,llvm::DenseMapInfo<mlir::Value,void>,llvm::detail::DenseMapPair<mlir::Value,unsigned int>>,mlir::Value,unsigned int,llvm::DenseMapInfo<mlir::Value,void>,llvm::detail::DenseMapPair<mlir::Value,unsigned int>>::LookupBucketFor<mlir::Value>(v4, &v19, v21);
    unint64_t v16 = v21[0];
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)llvm::DenseMapBase<llvm::DenseMap<mlir::Value,unsigned long long,llvm::DenseMapInfo<mlir::Value,void>,llvm::detail::DenseMapPair<mlir::Value,unsigned long long>>,mlir::Value,unsigned long long,llvm::DenseMapInfo<mlir::Value,void>,llvm::detail::DenseMapPair<mlir::Value,unsigned long long>>::InsertIntoBucketImpl<mlir::Value>((uint64_t)v4, (uint64_t)&v19, &v19, (void *)v21[0]);
      unint64_t v16 = (void *)result;
      *(void *)uint64_t result = v19;
      *(void *)(result + 8) = 0;
    }
    v16[1] = v7;
  }
  return result;
}

uint64_t mlir::ShapeEquivalence::getSet(uint64_t a1, unint64_t a2)
{
  unint64_t v7 = a2;
  uint64_t v8 = 0;
  if (llvm::DenseMapBase<llvm::DenseMap<mlir::Value,unsigned int,llvm::DenseMapInfo<mlir::Value,void>,llvm::detail::DenseMapPair<mlir::Value,unsigned int>>,mlir::Value,unsigned int,llvm::DenseMapInfo<mlir::Value,void>,llvm::detail::DenseMapPair<mlir::Value,unsigned int>>::LookupBucketFor<mlir::Value>((uint64_t *)(a1 + 208), &v7, &v8))
  {
    uint64_t v3 = v8;
    uint64_t v4 = *(void *)(a1 + 208);
    uint64_t v5 = *(unsigned int *)(a1 + 224);
  }
  else
  {
    uint64_t v4 = *(void *)(a1 + 208);
    uint64_t v5 = *(unsigned int *)(a1 + 224);
    uint64_t v3 = v4 + 16 * v5;
  }
  if (v3 == v4 + 16 * v5) {
    return 0;
  }
  else {
    return *(void *)a1 + 48 * *(void *)(v3 + 8);
  }
}

void llvm::function_ref<void ()(mlir::Operation *)>::callback_fn<mlir::ShapeEquivalence::compute(mlir::FunctionOpInterface)::$_0>(uint64_t *a1, uint64_t a2)
{
  v88[2] = *MEMORY[0x1E4F143B8];
  uint64_t v3 = *a1;
  if ((*(unsigned char *)(a2 + 46) & 0x80) != 0)
  {
    if (*(_DWORD *)(a2 + 68))
    {
      uint64_t v4 = mlir::TypeID::get<mlir::OpTrait::SameOperandsAndResultShape<mlir::TypeID mlir::TypeID::get<mlir::OpTrait::SameOperandsAndResultShape>(void)::Empty>>();
      if (((*(uint64_t (**)(void, uint64_t))(**(void **)(a2 + 48) + 32))(*(void *)(a2 + 48), v4) & 1) != 0
        || (uint64_t v5 = mlir::TypeID::get<mlir::OpTrait::SameOperandsAndResultType<mlir::TypeID mlir::TypeID::get<mlir::OpTrait::SameOperandsAndResultType>(void)::Empty>>(),
            (*(unsigned int (**)(void, uint64_t))(**(void **)(a2 + 48) + 32))(*(void *)(a2 + 48), v5)))
      {
        if (*(_DWORD *)(a2 + 36))
        {
          unsigned int v6 = 0;
          do
          {
            uint64_t v7 = a2 - 96 - 24 * (v6 - 5);
            unsigned int v8 = v6 + 1;
            BOOL v9 = v6++ > 5;
            if (v9) {
              unint64_t v10 = v7;
            }
            else {
              unint64_t v10 = a2 - 16 * v8;
            }
            mlir::ShapeEquivalence::makeEquivalent(v3, *(void *)(*(void *)(a2 + 72) + 24), v10);
          }
          while (v6 != *(_DWORD *)(a2 + 36));
        }
        return;
      }
    }
  }
  uint64_t v11 = mlir::TypeID::get<mlir::OpTrait::ResultsBroadcastableShape<mlir::TypeID mlir::TypeID::get<mlir::OpTrait::ResultsBroadcastableShape>(void)::Empty>>();
  if (!(*(unsigned int (**)(void, uint64_t))(**(void **)(a2 + 48) + 32))(*(void *)(a2 + 48), v11))
  {
    uint64_t v18 = *(void **)(*(void *)(a2 + 48) + 16);
    if (v18 != &mlir::detail::TypeIDResolver<mlir::mpsx::ReturnStitchedOp,void>::id)
    {
      if (v18 == &mlir::detail::TypeIDResolver<mlir::mpsx::RMSNormOp,void>::id)
      {
        unint64_t v19 = *(void *)(*(void *)(a2 + 72) + 24);
        mlir::ShapeEquivalence::makeEquivalent(v3, v19, a2 - 16);
      }
      return;
    }
    uint64_t v57 = a2;
    while (1)
    {
      unint64_t v58 = *(mlir::Block **)(v57 + 16);
      if (!v58) {
        break;
      }
      uint64_t ParentOp = mlir::Block::getParentOp(v58);
      uint64_t v57 = ParentOp;
      if (!ParentOp
        || *(_UNKNOWN **)(*(void *)(ParentOp + 48) + 16) == &mlir::detail::TypeIDResolver<mlir::mpsx::StitchedOp,void>::id)
      {
        goto LABEL_95;
      }
    }
    uint64_t v57 = 0;
LABEL_95:
    unsigned int v71 = 0;
    if ((*(unsigned char *)(a2 + 46) & 0x80) == 0) {
      goto LABEL_101;
    }
    while (1)
    {
      if (v71 == *(_DWORD *)(a2 + 68)) {
        return;
      }
      while (1)
      {
        unint64_t v72 = *(void *)(*(void *)(a2 + 72) + 32 * v71 + 24);
        uint64_t v73 = v57 - 96 - 24 * (v71 - 5);
        unsigned int v74 = v71 + 1;
        BOOL v9 = v71++ > 5;
        unint64_t v75 = v9 ? v73 : v57 - 16 * v74;
        mlir::ShapeEquivalence::makeEquivalent(v3, v72, v75);
        if ((*(unsigned char *)(a2 + 46) & 0x80) != 0) {
          break;
        }
LABEL_101:
        if (!v71) {
          return;
        }
      }
    }
  }
  if (*(unsigned char *)(a2 + 47)
    && (uint64_t InherentAttr = mlir::Operation::getInherentAttr(a2, (uint64_t)"__no_dynamic_broadcast", 22), v13))
  {
    if (InherentAttr) {
      goto LABEL_16;
    }
  }
  else if (mlir::DictionaryAttr::contains(a2 + 56, "__no_dynamic_broadcast", 0x16uLL))
  {
LABEL_16:
    if (*(_DWORD *)(a2 + 36))
    {
      unsigned int v14 = 0;
      do
      {
        uint64_t v15 = a2 - 96 - 24 * (v14 - 5);
        unsigned int v16 = v14 + 1;
        BOOL v9 = v14++ > 5;
        if (v9) {
          unint64_t v17 = v15;
        }
        else {
          unint64_t v17 = a2 - 16 * v16;
        }
        mlir::ShapeEquivalence::makeEquivalent(v3, *(void *)(*(void *)(a2 + 72) + 24), v17);
      }
      while (v14 != *(_DWORD *)(a2 + 36));
    }
    return;
  }
  unsigned int v20 = 0;
  int64x2_t v86 = v88;
  uint64_t v87 = 0x100000000;
  uint64_t v83 = &v85;
  uint64_t v84 = 0x100000000;
  while (1)
  {
    int v23 = (*(unsigned char *)(a2 + 46) & 0x80) != 0 ? *(_DWORD *)(a2 + 68) : 0;
    if (v20 == v23 || v84 >= 2) {
      break;
    }
    long long v24 = (uint64_t *)(*(void *)(*(void *)(*(void *)(a2 + 72) + 32 * v20 + 24) + 8) & 0xFFFFFFFFFFFFFFF8);
    if (!v24) {
      goto LABEL_48;
    }
    uint64_t v25 = *v24;
    unint64_t v26 = mlir::TypeID::get<mlir::ShapedType>();
    unint64_t v27 = *(unsigned int *)(v25 + 16);
    if (!v27) {
      goto LABEL_48;
    }
    uint64_t v28 = *(void **)(v25 + 8);
    uint64_t v29 = &v28[2 * v27];
    do
    {
      unint64_t v30 = v27 >> 1;
      uint64_t v31 = &v28[2 * (v27 >> 1)];
      unint64_t v33 = *v31;
      __int16 v32 = v31 + 2;
      v27 += ~(v27 >> 1);
      if (v33 < v26) {
        uint64_t v28 = v32;
      }
      else {
        unint64_t v27 = v30;
      }
    }
    while (v27);
    if (v28 != v29 && *v28 == v26) {
      uint64_t v34 = v28[1];
    }
    else {
LABEL_48:
    }
      uint64_t v34 = 0;
    *(void *)&long long v82 = v24;
    *((void *)&v82 + 1) = v34;
    if (!mlir::CallOpInterface::getArgOperands((mlir::CallOpInterface *)&v82)) {
      goto LABEL_30;
    }
    ArgAttrsAttr = (void *)mlir::CallableOpInterface::getArgAttrsAttr((mlir::CallableOpInterface *)&v82);
    if (v36)
    {
      uint64_t v37 = 8 * v36;
      while (*ArgAttrsAttr != 0x8000000000000000)
      {
        ++ArgAttrsAttr;
        v37 -= 8;
        if (!v37) {
          goto LABEL_54;
        }
      }
LABEL_30:
      uint64_t v21 = v84;
      if (v84 >= (unint64_t)HIDWORD(v84))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v83, &v85, v84 + 1, 4);
        uint64_t v21 = v84;
      }
      *((_DWORD *)v83 + v21) = v20;
      uint64_t v22 = &v84;
LABEL_33:
      ++*(_DWORD *)v22;
      goto LABEL_34;
    }
LABEL_54:
    if (!mlir::CallOpInterface::getArgOperands((mlir::CallOpInterface *)&v82)
      || (mlir::CallableOpInterface::getArgAttrsAttr((mlir::CallableOpInterface *)&v82), v38))
    {
      long long v39 = v82;
      uint64_t v40 = v87;
      if (v87 >= (unint64_t)HIDWORD(v87))
      {
        long long v80 = v82;
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v86, v88, v87 + 1, 16);
        long long v39 = v80;
        uint64_t v40 = v87;
      }
      *((_OWORD *)v86 + v40) = v39;
      uint64_t v22 = &v87;
      goto LABEL_33;
    }
LABEL_34:
    ++v20;
  }
  unint64_t v41 = (uint64_t *)v83;
  if (v84 != 1) {
    goto LABEL_114;
  }
  unint64_t v42 = *(void *)(*(void *)(a2 + 72) + 32 * *(unsigned int *)v83 + 24);
  uint64_t v43 = (uint64_t *)(*(void *)(v42 + 8) & 0xFFFFFFFFFFFFFFF8);
  if (!v43) {
    goto LABEL_71;
  }
  uint64_t v44 = *v43;
  unint64_t v45 = mlir::TypeID::get<mlir::ShapedType>();
  unint64_t v46 = *(unsigned int *)(v44 + 16);
  if (!v46) {
    goto LABEL_71;
  }
  uint64_t v47 = *(void **)(v44 + 8);
  unint64_t v48 = &v47[2 * v46];
  do
  {
    unint64_t v49 = v46 >> 1;
    long long v50 = &v47[2 * (v46 >> 1)];
    unint64_t v52 = *v50;
    long long v51 = v50 + 2;
    v46 += ~(v46 >> 1);
    if (v52 < v45) {
      uint64_t v47 = v51;
    }
    else {
      unint64_t v46 = v49;
    }
  }
  while (v46);
  if (v47 != v48 && *v47 == v45) {
    uint64_t v53 = v47[1];
  }
  else {
LABEL_71:
  }
    uint64_t v53 = 0;
  *(void *)&long long v82 = v43;
  *((void *)&v82 + 1) = v53;
  if (!mlir::CallOpInterface::getArgOperands((mlir::CallOpInterface *)&v82))
  {
    if (v87) {
      goto LABEL_113;
    }
    goto LABEL_107;
  }
  if (!v87)
  {
LABEL_107:
    if (*(_DWORD *)(a2 + 36))
    {
      unsigned int v76 = 0;
      do
      {
        uint64_t v77 = a2 - 96 - 24 * (v76 - 5);
        unsigned int v78 = v76 + 1;
        BOOL v9 = v76++ > 5;
        if (v9) {
          unint64_t v79 = v77;
        }
        else {
          unint64_t v79 = a2 - 16 * v78;
        }
        mlir::ShapeEquivalence::makeEquivalent(v3, v42, v79);
      }
      while (v76 != *(_DWORD *)(a2 + 36));
    }
    goto LABEL_113;
  }
  char v54 = 0;
  uint64_t v55 = (long long *)v86;
  unint64_t v56 = (char *)v86 + 16 * v87;
  while (1)
  {
    long long v81 = *v55;
    mlir::CallableOpInterface::getArgAttrsAttr((mlir::CallableOpInterface *)&v81);
    uint64_t v61 = v60;
    mlir::CallableOpInterface::getArgAttrsAttr((mlir::CallableOpInterface *)&v82);
    if (v61 > v62) {
      break;
    }
    uint64_t v63 = mlir::CallableOpInterface::getArgAttrsAttr((mlir::CallableOpInterface *)&v81);
    if (v64)
    {
      uint64_t v65 = v63;
      uint64_t v66 = 0;
      for (uint64_t i = 8 * v64; i; i -= 8)
      {
        uint64_t v69 = *(void *)(mlir::CallableOpInterface::getArgAttrsAttr((mlir::CallableOpInterface *)&v82)
                        + 8 * v66);
        uint64_t v70 = *(void *)(v65 + 8 * v66);
        if (v69 == 0x8000000000000000)
        {
          if (v70 != 1) {
            goto LABEL_80;
          }
        }
        else if (v70 != v69 && v70 != 1)
        {
LABEL_80:
          char v54 = 1;
          break;
        }
        ++v66;
      }
    }
    if (++v55 == (long long *)v56)
    {
      if (v54) {
        break;
      }
      goto LABEL_107;
    }
  }
LABEL_113:
  unint64_t v41 = (uint64_t *)v83;
LABEL_114:
  if (v41 != &v85) {
    free(v41);
  }
  if (v86 != v88) {
    free(v86);
  }
}